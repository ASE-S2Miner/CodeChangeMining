[{"original_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_29().createNode(SLinkOperations.getTarget(type, \"elementType\", true));\n  }","id":107000,"modified_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_30().createNode(SLinkOperations.getTarget(type, \"elementType\", true));\n  }","commit_id":"fe264f12e7fd1cfea5e16811231e6903e0aab9ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(SNode argument) {\n    SNode expectedElementType = (SNode)RulesFunctions_Collections.get_inputListType_elementType(argument);\n    SNode arg = SLinkOperations.getTarget(argument, \"argument\", true);\n    if(arg != null) {\n      SNode argumentElementType = RulesFunctions_Collections.tryObtain_Sequence_elementType(arg);\n      if(!(argumentElementType != null)) {\n        TypeChecker.getInstance().reportTypeError(arg, \"sequence is expected\");\n      }\n      if(!(TypeChecker.getInstance().getSubtypingManager().isSubtype(argumentElementType, expectedElementType))) {\n        TypeChecker.getInstance().reportTypeError(arg, \"\" + expectedElementType + \" is expected\");\n      }\n    }\n  }","id":107001,"modified_method":"public void applyRule(SNode argument) {\n    SNode expectedElementType = (SNode)RulesFunctions_Collections.get_inputListType_elementType(argument);\n    if(!(expectedElementType != null)) {\n      TypeChecker.getInstance().reportTypeError(argument, \"couldn't define input list element type\");\n    }\n    // ==========\n    SNode arg = SLinkOperations.getTarget(argument, \"argument\", true);\n    if(arg != null) {\n      SNode expectedArgumentType = new QuotationClass_17().createNode(expectedElementType);\n      SNode actualArgumentType = TypeChecker.getInstance().getRuntimeSupport().checkedTypeOf(arg);\n      if(!(TypeChecker.getInstance().getSubtypingManager().isSubtype(actualArgumentType, expectedArgumentType))) {\n        TypeChecker.getInstance().reportTypeError(arg, \"\" + expectedArgumentType + \" is expected\");\n      }\n    }\n  }","commit_id":"fe264f12e7fd1cfea5e16811231e6903e0aab9ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(SNode argument) {\n    SNode elementType = RulesFunctions_Collections.get_inputListType_elementType(argument);\n    SNode arg = SLinkOperations.getTarget(argument, \"argument\", true);\n    if(!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getRuntimeSupport().checkedTypeOf(arg), new QuotationClass_17().createNode()))) {\n      TypeChecker.getInstance().reportTypeError(arg, \"integer is expected\");\n    }\n    TypeChecker.getInstance().getRuntimeSupport().givetype(elementType, argument);\n  }","id":107002,"modified_method":"public void applyRule(SNode argument) {\n    SNode elementType = RulesFunctions_Collections.get_inputListType_elementType(argument);\n    SNode arg = SLinkOperations.getTarget(argument, \"argument\", true);\n    if(!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getRuntimeSupport().checkedTypeOf(arg), new QuotationClass_18().createNode()))) {\n      TypeChecker.getInstance().reportTypeError(arg, \"integer is expected\");\n    }\n    TypeChecker.getInstance().getRuntimeSupport().givetype(elementType, argument);\n  }","commit_id":"fe264f12e7fd1cfea5e16811231e6903e0aab9ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(SNode argument) {\n    SNode expectedElementType = RulesFunctions_Collections.get_inputListType_elementType(argument);\n    SNode arg = SLinkOperations.getTarget(argument, \"argument\", true);\n    if(!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getRuntimeSupport().checkedTypeOf(arg), expectedElementType))) {\n      TypeChecker.getInstance().reportTypeError(arg, \"\" + expectedElementType + \" is expected\");\n    }\n    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_19().createNode(), argument);\n  }","id":107003,"modified_method":"public void applyRule(SNode argument) {\n    SNode expectedElementType = RulesFunctions_Collections.get_inputListType_elementType(argument);\n    SNode arg = SLinkOperations.getTarget(argument, \"argument\", true);\n    if(!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getRuntimeSupport().checkedTypeOf(arg), expectedElementType))) {\n      TypeChecker.getInstance().reportTypeError(arg, \"\" + expectedElementType + \" is expected\");\n    }\n    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_20().createNode(), argument);\n  }","commit_id":"fe264f12e7fd1cfea5e16811231e6903e0aab9ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(SNode argument) {\n    RulesFunctions_Collections.get_inputSequenceType(argument);\n    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_18().createNode(), argument);\n  }","id":107004,"modified_method":"public void applyRule(SNode argument) {\n    RulesFunctions_Collections.get_inputSequenceType(argument);\n    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_19().createNode(), argument);\n  }","commit_id":"fe264f12e7fd1cfea5e16811231e6903e0aab9ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(SNode argument) {\n    do {\n      SNode matchedNode_1178725705667 = SNodeOperations.getParent(argument, null, false, false);\n      {\n        boolean matches_1178725705671 = false;\n        matches_1178725705671 = SModelUtil_new.isAssignableConcept(SNodeOperations.getParent(argument, null, false, false).getConceptFqName(), \"jetbrains.mps.baseLanguage.ext.collections.lang.structure.SequenceOperationExpression\");\n        if(matches_1178725705671) {\n          TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_21().createNode(), argument);\n          break;\n        }\n      }\n      TypeChecker.getInstance().reportTypeError(argument, \"not expected here\");\n    } while(false);\n  }","id":107005,"modified_method":"public void applyRule(SNode argument) {\n    do {\n      SNode matchedNode_1178725705667 = SNodeOperations.getParent(argument, null, false, false);\n      {\n        boolean matches_1178725705671 = false;\n        matches_1178725705671 = SModelUtil_new.isAssignableConcept(SNodeOperations.getParent(argument, null, false, false).getConceptFqName(), \"jetbrains.mps.baseLanguage.ext.collections.lang.structure.SequenceOperationExpression\");\n        if(matches_1178725705671) {\n          TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_22().createNode(), argument);\n          break;\n        }\n      }\n      TypeChecker.getInstance().reportTypeError(argument, \"not expected here\");\n    } while(false);\n  }","commit_id":"fe264f12e7fd1cfea5e16811231e6903e0aab9ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(SNode argument) {\n    SNode inputElementType = RulesFunctions_Collections.get_inputListType_elementType(argument);\n    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_20().createNode(inputElementType), argument);\n  }","id":107006,"modified_method":"public void applyRule(SNode argument) {\n    SNode inputElementType = RulesFunctions_Collections.get_inputListType_elementType(argument);\n    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_21().createNode(inputElementType), argument);\n  }","commit_id":"fe264f12e7fd1cfea5e16811231e6903e0aab9ea","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode coerceTo_SequenceType(SNode type) {\n    SNode sequenceType = TypeChecker.getInstance().getRuntimeSupport().coerce(type, HUtil.createMatchingPatternByConceptFQName(\"jetbrains.mps.baseLanguage.ext.collections.lang.structure.SequenceType\"), true);\n    if(sequenceType != null) {\n      return sequenceType;\n    }\n    if(type == null) {\n      return null;\n    }\n    // ==========\n    // TEMP FIX FOR DNQ 1\n    if(\"jetbrains.teamsys.dnq.structure.PListType\".equals(type.getConceptFqName())) {\n      SNode classifierType = type.getChild(\"classifierType\");\n      return new QuotationClass_27().createNode(SNodeOperations.copyNode(classifierType));\n    }\n    // END TEMP FIX\n    // ==========\n    // ==========\n    // TEMP FIX FOR DNQ\n    // TODO: extract generics information\n    if(type != null) {\n      SModel model = TypeChecker.getInstance().getRuntimeTypesModel();\n      GlobalScope scope = GlobalScope.getInstance();\n      SNode entity = BaseAdapter.fromAdapter(SModelUtil_new.findNodeByFQName(\"com.jetbrains.teamsys.database.Entity\", Classifier.class, scope));\n      if(entity == null) {\n        return null;\n      }\n      SNode entityType = SModelOperations.createNewNode(model, \"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n      SLinkOperations.setTarget(entityType, \"classifier\", entity, false);\n      SNode javaIterable = BaseAdapter.fromAdapter(SModelUtil_new.findNodeByFQName(\"java.lang.Iterable\", Classifier.class, scope));\n      SNode javaIterableType = SModelOperations.createNewNode(model, \"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n      SLinkOperations.setTarget(javaIterableType, \"classifier\", javaIterable, false);\n      SLinkOperations.addChild(javaIterableType, \"parameter\", entityType);\n      if(TypeChecker.getInstance().getSubtypingManager().isSubtype(type, javaIterableType)) {\n        return new QuotationClass_28().createNode(SNodeOperations.copyNode(entity));\n      }\n      // ==========\n      SNode entityIterable = BaseAdapter.fromAdapter(SModelUtil_new.findNodeByFQName(\"com.jetbrains.teamsys.database.EntityIterable\", Classifier.class, scope));\n      SNode entityIterableType = SModelOperations.createNewNode(model, \"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n      SLinkOperations.setTarget(entityIterableType, \"classifier\", entityIterable, false);\n      if(TypeChecker.getInstance().getSubtypingManager().isSubtype(type, entityIterableType)) {\n        return new QuotationClass_29().createNode(SNodeOperations.copyNode(entity));\n      }\n    }\n    // END FIX\n    // ==========\n    return null;\n  }","id":107007,"modified_method":"public static SNode coerceTo_SequenceType(SNode type) {\n    SNode sequenceType = TypeChecker.getInstance().getRuntimeSupport().coerce(type, HUtil.createMatchingPatternByConceptFQName(\"jetbrains.mps.baseLanguage.ext.collections.lang.structure.SequenceType\"), true);\n    if(sequenceType != null) {\n      return sequenceType;\n    }\n    if(type == null) {\n      return null;\n    }\n    // ==========\n    // TEMP FIX FOR DNQ 1\n    if(\"jetbrains.teamsys.dnq.structure.PListType\".equals(type.getConceptFqName())) {\n      SNode classifierType = type.getChild(\"classifierType\");\n      return new QuotationClass_28().createNode(SNodeOperations.copyNode(classifierType));\n    }\n    // END TEMP FIX\n    // ==========\n    // ==========\n    // TEMP FIX FOR DNQ\n    // TODO: extract generics information\n    if(type != null) {\n      SModel model = TypeChecker.getInstance().getRuntimeTypesModel();\n      GlobalScope scope = GlobalScope.getInstance();\n      SNode entity = BaseAdapter.fromAdapter(SModelUtil_new.findNodeByFQName(\"com.jetbrains.teamsys.database.Entity\", Classifier.class, scope));\n      if(entity == null) {\n        return null;\n      }\n      SNode entityType = SModelOperations.createNewNode(model, \"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n      SLinkOperations.setTarget(entityType, \"classifier\", entity, false);\n      SNode javaIterable = BaseAdapter.fromAdapter(SModelUtil_new.findNodeByFQName(\"java.lang.Iterable\", Classifier.class, scope));\n      SNode javaIterableType = SModelOperations.createNewNode(model, \"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n      SLinkOperations.setTarget(javaIterableType, \"classifier\", javaIterable, false);\n      SLinkOperations.addChild(javaIterableType, \"parameter\", entityType);\n      if(TypeChecker.getInstance().getSubtypingManager().isSubtype(type, javaIterableType)) {\n        return new QuotationClass_29().createNode(SNodeOperations.copyNode(entity));\n      }\n      // ==========\n      SNode entityIterable = BaseAdapter.fromAdapter(SModelUtil_new.findNodeByFQName(\"com.jetbrains.teamsys.database.EntityIterable\", Classifier.class, scope));\n      SNode entityIterableType = SModelOperations.createNewNode(model, \"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n      SLinkOperations.setTarget(entityIterableType, \"classifier\", entityIterable, false);\n      if(TypeChecker.getInstance().getSubtypingManager().isSubtype(type, entityIterableType)) {\n        return new QuotationClass_30().createNode(SNodeOperations.copyNode(entity));\n      }\n    }\n    // END FIX\n    // ==========\n    return null;\n  }","commit_id":"8729961aee97bc6288e670aabe74d960c88661f3","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_26().createNode(this.myMatchingPattern.PatternVar1);\n  }","id":107008,"modified_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_27().createNode(this.myMatchingPattern.PatternVar1);\n  }","commit_id":"8729961aee97bc6288e670aabe74d960c88661f3","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_25().createNode(this.myMatchingPattern.PatternVar);\n  }","id":107009,"modified_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_26().createNode(this.myMatchingPattern.PatternVar);\n  }","commit_id":"8729961aee97bc6288e670aabe74d960c88661f3","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_24().createNode(SLinkOperations.getTarget(type, \"elementType\", true));\n  }","id":107010,"modified_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_25().createNode(SLinkOperations.getTarget(type, \"elementType\", true));\n  }","commit_id":"8729961aee97bc6288e670aabe74d960c88661f3","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_31().createNode();\n  }","id":107011,"modified_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_32().createNode();\n  }","commit_id":"8729961aee97bc6288e670aabe74d960c88661f3","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_23().createNode(SLinkOperations.getTarget(type, \"elementType\", true));\n  }","id":107012,"modified_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_24().createNode(SLinkOperations.getTarget(type, \"elementType\", true));\n  }","commit_id":"8729961aee97bc6288e670aabe74d960c88661f3","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_30().createNode(SLinkOperations.getTarget(type, \"elementType\", true));\n  }","id":107013,"modified_method":"public SNode getSubOrSuperType(SNode type) {\n    return new QuotationClass_31().createNode(SLinkOperations.getTarget(type, \"elementType\", true));\n  }","commit_id":"8729961aee97bc6288e670aabe74d960c88661f3","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(SNode argument) {\n    SNode expectedElementType = (SNode)RulesFunctions_Collections.get_inputListType_elementType(argument);\n    if(!(expectedElementType != null)) {\n      TypeChecker.getInstance().reportTypeError(argument, \"couldn't define input list element type\");\n    }\n    // ==========\n    SNode arg = SLinkOperations.getTarget(argument, \"argument\", true);\n    if(arg != null) {\n      SNode expectedArgumentType = new QuotationClass_17().createNode(expectedElementType);\n      SNode actualArgumentType = TypeChecker.getInstance().getRuntimeSupport().checkedTypeOf(arg);\n      if(!(TypeChecker.getInstance().getSubtypingManager().isSubtype(actualArgumentType, expectedArgumentType))) {\n        TypeChecker.getInstance().reportTypeError(arg, \"\" + expectedArgumentType + \" is expected\");\n      }\n    }\n  }","id":107014,"modified_method":"public void applyRule(SNode argument) {\n    SNode expectedElementType = RulesFunctions_Collections.get_inputListType_elementType(argument);\n    if(!(expectedElementType != null)) {\n      TypeChecker.getInstance().reportTypeError(argument, \"couldn't define input list element type\");\n    }\n    // ==========\n    SNode arg = SLinkOperations.getTarget(argument, \"argument\", true);\n    if(arg != null) {\n      SNode expectedArgumentType = new QuotationClass_17().createNode(expectedElementType);\n      SNode actualArgumentType = TypeChecker.getInstance().getRuntimeSupport().checkedTypeOf(arg);\n      if(!(TypeChecker.getInstance().getSubtypingManager().isSubtype(actualArgumentType, expectedArgumentType))) {\n        TypeChecker.getInstance().reportTypeError(arg, \"\" + expectedArgumentType + \" is expected\");\n      }\n    }\n  }","commit_id":"8729961aee97bc6288e670aabe74d960c88661f3","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(SNode argument) {\n    do {\n      SNode matchedNode_1178725705667 = SNodeOperations.getParent(argument, null, false, false);\n      {\n        boolean matches_1178725705671 = false;\n        matches_1178725705671 = SModelUtil_new.isAssignableConcept(SNodeOperations.getParent(argument, null, false, false).getConceptFqName(), \"jetbrains.mps.baseLanguage.ext.collections.lang.structure.SequenceOperationExpression\");\n        if(matches_1178725705671) {\n          TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_22().createNode(), argument);\n          break;\n        }\n      }\n      TypeChecker.getInstance().reportTypeError(argument, \"not expected here\");\n    } while(false);\n  }","id":107015,"modified_method":"public void applyRule(SNode argument) {\n    do {\n      SNode matchedNode_1178725705667 = SNodeOperations.getParent(argument, null, false, false);\n      {\n        boolean matches_1178725705671 = false;\n        matches_1178725705671 = SModelUtil_new.isAssignableConcept(SNodeOperations.getParent(argument, null, false, false).getConceptFqName(), \"jetbrains.mps.baseLanguage.ext.collections.lang.structure.SequenceOperationExpression\");\n        if(matches_1178725705671) {\n          TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_23().createNode(), argument);\n          break;\n        }\n      }\n      TypeChecker.getInstance().reportTypeError(argument, \"not expected here\");\n    } while(false);\n  }","commit_id":"8729961aee97bc6288e670aabe74d960c88661f3","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(SNode argument) {\n    SNode expectedElementType = RulesFunctions_Collections.get_inputListType_elementType(argument);\n    SNode arg = SLinkOperations.getTarget(argument, \"argument\", true);\n    if(arg != null) {\n      SNode argumentElementType = RulesFunctions_Collections.tryObtain_Sequence_elementType(arg);\n      if(!(argumentElementType != null)) {\n        TypeChecker.getInstance().reportTypeError(arg, \"sequence is expected\");\n      }\n      if(!(TypeChecker.getInstance().getSubtypingManager().isSubtype(argumentElementType, expectedElementType))) {\n        TypeChecker.getInstance().reportTypeError(arg, \"\" + expectedElementType + \" is expected\");\n      }\n    }\n  }","id":107016,"modified_method":"public void applyRule(SNode argument) {\n    SNode expectedElementType = RulesFunctions_Collections.get_inputListType_elementType(argument);\n    if(!(expectedElementType != null)) {\n      TypeChecker.getInstance().reportTypeError(argument, \"couldn't define input list element type\");\n    }\n    // ==========\n    SNode arg = SLinkOperations.getTarget(argument, \"argument\", true);\n    if(arg != null) {\n      SNode expectedArgumentType = new QuotationClass_21().createNode(expectedElementType);\n      SNode actualArgumentType = TypeChecker.getInstance().getRuntimeSupport().checkedTypeOf(arg);\n      if(!(TypeChecker.getInstance().getSubtypingManager().isSubtype(actualArgumentType, expectedArgumentType))) {\n        TypeChecker.getInstance().reportTypeError(arg, \"\" + expectedArgumentType + \" is expected\");\n      }\n    }\n  }","commit_id":"8729961aee97bc6288e670aabe74d960c88661f3","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(SNode argument) {\n    SNode inputElementType = RulesFunctions_Collections.get_inputListType_elementType(argument);\n    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_21().createNode(inputElementType), argument);\n  }","id":107017,"modified_method":"public void applyRule(SNode argument) {\n    SNode inputElementType = RulesFunctions_Collections.get_inputListType_elementType(argument);\n    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_22().createNode(inputElementType), argument);\n  }","commit_id":"8729961aee97bc6288e670aabe74d960c88661f3","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MyMessage(Session session, Collection<String> headers, String message)\n\t\t{\n\t\t\tsuper(session);\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// the FULL content-type header, for example: Content-Type: text/plain; charset=windows-1252; format=flowed\n\t\t\t\tString contentType = null;\n\n\t\t\t\t// see if we have a message-id: in the headers, or content-type:, otherwise move the headers into the message\n\t\t\t\tif (headers != null)\n\t\t\t\t{\n\t\t\t\t\tfor (String header : headers)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (header.toLowerCase().startsWith(\"message-id: \"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tm_id = header.substring(12);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (header.toLowerCase().startsWith(\"content-type: \"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontentType = header;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (header.toLowerCase().startsWith(\"from: \")) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddEncodedHeader(header, \"From: \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (header.toLowerCase().startsWith(\"to: \"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddEncodedHeader(header, \"To: \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (header.toLowerCase().startsWith(\"cc: \")) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddEncodedHeader(header, \"Cc: \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taddHeaderLine(header);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (MessagingException e)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tM_log.warn(\"Email.MyMessage: exception: \" + e.getMessage(), e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// make sure we have a date, use now if needed\n\t\t\t\tif (getHeader(\"Date\") == null)\n\t\t\t\t{\n\t\t\t\t\tsetSentDate(new Date(System.currentTimeMillis()));\n\t\t\t\t}\n\n\t\t\t\t// figure out what charset encoding to use\n\t\t\t\t// the character set, for example, windows-1252 or UTF-8\n\t\t\t\tString charset = null;\n\n\t\t\t\t// first try to use the charset from the forwarded Content-Type header (if there is one).\n\t\t\t\t// if that charset doesn't work, try a couple others.\n\t\t\t\tif (contentType != null)\n\t\t\t\t{\n\t\t\t\t\t// try and extract the charset from the Content-Type header\n\t\t\t\t\tint charsetStart = contentType.toLowerCase().indexOf(\"charset=\");\n\t\t\t\t\tif (charsetStart != -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tint charsetEnd = contentType.indexOf(\";\", charsetStart);\n\t\t\t\t\t\tif (charsetEnd == -1) charsetEnd = contentType.length();\n\t\t\t\t\t\tcharset = contentType.substring(charsetStart + \"charset=\".length(), charsetEnd).trim();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (charset != null && canUseCharset(message, charset))\n\t\t\t\t{\n\t\t\t\t\t// use the charset from the Content-Type header\n\t\t\t\t}\n\t\t\t\telse if (canUseCharset(message, CharacterSet.ISO_8859_1))\n\t\t\t\t{\n\t\t\t\t\tif (contentType != null && charset != null)\n\t\t\t\t\t\tcontentType = contentType.replaceAll(charset, CharacterSet.ISO_8859_1);\n\t\t\t\t\telse if (contentType != null)\n\t\t\t\t\t\tcontentType += \"; \" + CharacterSet.ISO_8859_1;\n\t\t\t\t\tcharset = CharacterSet.ISO_8859_1;\n\t\t\t\t}\n\t\t\t\telse if (canUseCharset(message, CharacterSet.WINDOWS_1252))\n\t\t\t\t{\n\t\t\t\t\tif (contentType != null && charset != null)\n\t\t\t\t\t\tcontentType = contentType.replaceAll(charset, CharacterSet.WINDOWS_1252);\n\t\t\t\t\telse if (contentType != null)\n\t\t\t\t\t\tcontentType += \"; \" + CharacterSet.WINDOWS_1252;\n\t\t\t\t\tcharset = CharacterSet.WINDOWS_1252;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// catch-all - UTF-8 should be able to handle anything\n\t\t\t\t\tif (contentType != null && charset != null) \n\t\t\t\t\t\tcontentType = contentType.replaceAll(charset, CharacterSet.UTF_8);\n\t\t\t\t\telse if (contentType != null)\n\t\t\t\t\t\tcontentType += \"; charset=\" + CharacterSet.UTF_8;\n\t\t\t\t\telse\n\t\t\t\t\t\tcontentType = EmailHeaders.CONTENT_TYPE + \": \"\n\t\t\t\t\t\t\t\t+ ContentType.TEXT_PLAIN + \"; charset=\"\n\t\t\t\t\t\t\t\t+ CharacterSet.UTF_8;\n\t\t\t\t\tcharset = CharacterSet.UTF_8;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (contentType != null \n\t\t\t\t        && contentType.contains(\"multipart/\")) {\n\t\t\t\t\tMimeMultipart multiPartContent = new MimeMultipart(\"alternative\");\n\t\t\t\t\tint indexOfStartOfBoundary = contentType.indexOf(\"boundary=\\\"\") + 10;\n\t\t\t\t\tString headerStartingWithBoundary = contentType.substring(indexOfStartOfBoundary);\n\t\t\t\t\tString boundary = headerStartingWithBoundary.substring(0, headerStartingWithBoundary.indexOf(\"\\\"\"));\n\t\t\t\t\tString[] parts = message.split(\"--\" + boundary + \"(--)?\\n\");\n\t\t\t\t\t// the zeroth part is the line about how this is a MIME message, so we won't use it\n\t\t\t\t\tfor (int i = 1; i < parts.length - 1; i++) {\n\t\t\t\t\t\tString[] partLines = parts[i].split(\"\\n\");\n\t\t\t\t\t\tStringBuilder partText = new StringBuilder();\n\t\t\t\t\t\tfor (int j = 1; j < partLines.length; j++) {\n\t\t\t\t\t\t\tpartText.append(partLines[j] + \"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tMimeBodyPart bodyPart = new MimeBodyPart();\n\t\t\t\t\t\tString mimeType = partLines[0].contains(\"text/html\") ? \"text/html\" : \"text/plain\";\n\t\t\t\t\t\tmimeType += \" ; charset=\"+charset;\n\t\t\t\t\t\tbodyPart.setContent(partText.toString(), mimeType);\n\t\t\t\t\t\tmultiPartContent.addBodyPart(bodyPart);\n\t\t\t\t\t}\n\t\t\t\t\tsetContent(multiPartContent);\n\t\t\t\t} else {\n\t\t\t\t\t// fill in the body of the message\n\t\t\t\t\tsetText(message, charset);\n\t\t\t\t}\n            \n\t\t\t\t// make sure correct charset is used for subject\n\t\t\t\tif ( getSubject() != null ) \n\t\t\t\t\tsetSubject(getSubject(), charset); \n\n\t\t\t\t// if we have a full Content-Type header, set it NOW (after setting the body of the message so that format=flowed is preserved)\n\t\t\t\tif (contentType != null  && !contentType.contains(\"multipart/\"))\n\t\t\t\t{\n\t\t\t\t\t// addHeaderLine(\"Content-Transfer-Encoding: quoted-printable\");\n\t\t\t\t\taddHeaderLine(contentType);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (MessagingException e)\n\t\t\t{\n\t\t\t\tM_log.warn(\"Email.MyMessage: exception: \" + e.getMessage(), e);\n\t\t\t}\n\t\t}","id":107018,"modified_method":"public MyMessage(Session session, Collection<String> headers, String message)\n\t\t{\n\t\t\tsuper(session);\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// the FULL content-type header, for example: Content-Type: text/plain; charset=windows-1252; format=flowed\n\t\t\t\tString contentType = null;\n\n\t\t\t\t// see if we have a message-id: in the headers, or content-type:, otherwise move the headers into the message\n\t\t\t\tif (headers != null)\n\t\t\t\t{\n\t\t\t\t\tfor (String header : headers)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (header.toLowerCase().startsWith(\"message-id: \"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tm_id = header.substring(12);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (header.toLowerCase().startsWith(\"content-type: \"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontentType = header;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (header.toLowerCase().startsWith(\"from: \")) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddEncodedHeader(header, \"From: \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (header.toLowerCase().startsWith(\"to: \"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddEncodedHeader(header, \"To: \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (header.toLowerCase().startsWith(\"cc: \")) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddEncodedHeader(header, \"Cc: \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taddHeaderLine(header);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (MessagingException e)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tM_log.warn(\"Email.MyMessage: exception: \" + e.getMessage(), e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// make sure we have a date, use now if needed\n\t\t\t\tif (getHeader(\"Date\") == null)\n\t\t\t\t{\n\t\t\t\t\tsetSentDate(new Date(System.currentTimeMillis()));\n\t\t\t\t}\n\n\t\t\t\t// figure out what charset encoding to use\n\t\t\t\t// the character set, for example, windows-1252 or UTF-8\n\t\t\t\tString charset = null;\n\n\t\t\t\t// first try to use the charset from the forwarded Content-Type header (if there is one).\n\t\t\t\t// if that charset doesn't work, try a couple others.\n\t\t\t\tif (contentType != null)\n\t\t\t\t{\n\t\t\t\t\t// try and extract the charset from the Content-Type header\n\t\t\t\t\tint charsetStart = contentType.toLowerCase().indexOf(\"charset=\");\n\t\t\t\t\tif (charsetStart != -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tint charsetEnd = contentType.indexOf(\";\", charsetStart);\n\t\t\t\t\t\tif (charsetEnd == -1) charsetEnd = contentType.length();\n\t\t\t\t\t\tcharset = contentType.substring(charsetStart + \"charset=\".length(), charsetEnd).trim();\n\t\t\t\t\t}\n\t\t\t\t}\n\n                               if (charset != null && canUseCharset(message, charset) && canUseCharset(getSubject(), charset))\n\t\t\t\t{\n\t\t\t\t\t// use the charset from the Content-Type header\n\t\t\t\t}\n                               else if (canUseCharset(message, CharacterSet.ISO_8859_1) && canUseCharset(getSubject(), CharacterSet.ISO_8859_1))\n\t\t\t\t{\n\t\t\t\t\tif (contentType != null && charset != null)\n\t\t\t\t\t\tcontentType = contentType.replaceAll(charset, CharacterSet.ISO_8859_1);\n\t\t\t\t\telse if (contentType != null)\n\t\t\t\t\t\tcontentType += \"; charset=\" + CharacterSet.ISO_8859_1;\n\t\t\t\t\tcharset = CharacterSet.ISO_8859_1;\n\t\t\t\t}\n                               else if (canUseCharset(message, CharacterSet.WINDOWS_1252) && canUseCharset(getSubject(), CharacterSet.WINDOWS_1252))\n\t\t\t\t{\n\t\t\t\t\tif (contentType != null && charset != null)\n\t\t\t\t\t\tcontentType = contentType.replaceAll(charset, CharacterSet.WINDOWS_1252);\n\t\t\t\t\telse if (contentType != null)\n\t\t\t\t\t\tcontentType += \"; charset=\" + CharacterSet.WINDOWS_1252;\n\t\t\t\t\tcharset = CharacterSet.WINDOWS_1252;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// catch-all - UTF-8 should be able to handle anything\n\t\t\t\t\tif (contentType != null && charset != null) \n\t\t\t\t\t\tcontentType = contentType.replaceAll(charset, CharacterSet.UTF_8);\n\t\t\t\t\telse if (contentType != null)\n\t\t\t\t\t\tcontentType += \"; charset=\" + CharacterSet.UTF_8;\n\t\t\t\t\telse\n\t\t\t\t\t\tcontentType = EmailHeaders.CONTENT_TYPE + \": \"\n\t\t\t\t\t\t\t\t+ ContentType.TEXT_PLAIN + \"; charset=\"\n\t\t\t\t\t\t\t\t+ CharacterSet.UTF_8;\n\t\t\t\t\tcharset = CharacterSet.UTF_8;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (contentType != null \n\t\t\t\t        && contentType.contains(\"multipart/\")) {\n\t\t\t\t\tMimeMultipart multiPartContent = new MimeMultipart(\"alternative\");\n\t\t\t\t\tint indexOfStartOfBoundary = contentType.indexOf(\"boundary=\\\"\") + 10;\n\t\t\t\t\tString headerStartingWithBoundary = contentType.substring(indexOfStartOfBoundary);\n\t\t\t\t\tString boundary = headerStartingWithBoundary.substring(0, headerStartingWithBoundary.indexOf(\"\\\"\"));\n\t\t\t\t\tString[] parts = message.split(\"--\" + boundary + \"(--)?\\n\");\n\t\t\t\t\t// the zeroth part is the line about how this is a MIME message, so we won't use it\n\t\t\t\t\tfor (int i = 1; i < parts.length - 1; i++) {\n\t\t\t\t\t\tString[] partLines = parts[i].split(\"\\n\");\n\t\t\t\t\t\tStringBuilder partText = new StringBuilder();\n\t\t\t\t\t\tfor (int j = 1; j < partLines.length; j++) {\n\t\t\t\t\t\t\tpartText.append(partLines[j] + \"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tMimeBodyPart bodyPart = new MimeBodyPart();\n\t\t\t\t\t\tString mimeType = partLines[0].contains(\"text/html\") ? \"text/html\" : \"text/plain\";\n\t\t\t\t\t\tmimeType += \" ; charset=\"+charset;\n\t\t\t\t\t\tbodyPart.setContent(partText.toString(), mimeType);\n\t\t\t\t\t\tmultiPartContent.addBodyPart(bodyPart);\n\t\t\t\t\t}\n\t\t\t\t\tsetContent(multiPartContent);\n\t\t\t\t} else {\n\t\t\t\t\t// fill in the body of the message\n\t\t\t\t\tsetText(message, charset);\n\t\t\t\t}\n            \n\t\t\t\t// make sure correct charset is used for subject\n\t\t\t\tif ( getSubject() != null ) \n\t\t\t\t\tsetSubject(getSubject(), charset); \n\n\t\t\t\t// if we have a full Content-Type header, set it NOW (after setting the body of the message so that format=flowed is preserved)\n\t\t\t\tif (contentType != null  && !contentType.contains(\"multipart/\"))\n\t\t\t\t{\n\t\t\t\t\t// addHeaderLine(\"Content-Transfer-Encoding: quoted-printable\");\n\t\t\t\t\taddHeaderLine(contentType);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (MessagingException e)\n\t\t\t{\n\t\t\t\tM_log.warn(\"Email.MyMessage: exception: \" + e.getMessage(), e);\n\t\t\t}\n\t\t}","commit_id":"8e273df5c5426ecb6743b9c6195964c264b68b33","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic void sendMail(InternetAddress from, InternetAddress[] to, String subject, String content,\n\t\t\tMap<RecipientType, InternetAddress[]> headerTo, InternetAddress[] replyTo,\n\t\t\tList<String> additionalHeaders, List<Attachment> attachments)\n\t{\n\t\t// some timing for debug\n\t\tlong start = 0;\n\t\tif (M_log.isDebugEnabled()) start = System.currentTimeMillis();\n\n\t\t// if in test mode, use the test method\n\t\tif (m_testMode)\n\t\t{\n\t\t\ttestSendMail(from, to, subject, content, headerTo, replyTo, additionalHeaders);\n\t\t\treturn;\n\t\t}\n\n\t\tif (m_smtp == null)\n\t\t{\n\t\t\tM_log.warn(\"sendMail: smtp not set\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (from == null)\n\t\t{\n\t\t\tM_log.warn(\"sendMail: null from\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (to == null)\n\t\t{\n\t\t\tM_log.warn(\"sendMail: null to\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (content == null)\n\t\t{\n\t\t\tM_log.warn(\"sendMail: null content\");\n\t\t\treturn;\n\t\t}\n\n\t\tProperties props = new Properties();\n\n\t\t// set the server host\n\t\tprops.put(SMTP_HOST, m_smtp);\n\n\t\t// set the port, if specified\n\t\tif (m_smtpPort != null)\n\t\t\tprops.put(SMTP_PORT, m_smtpPort);\n\t\t\n\t\t// set smtp connection timeout, if specified\n\t\tif (m_smtpConnectionTimeout != null)\n\t\t{\n\t\t\tprops.put(SMTP_CONNECTIONTIMEOUT, m_smtpConnectionTimeout);\n\t\t}\n\t\t\n\t\t// set smtp socket I/O timeout, if specified\n\t\tif (m_smtpTimeout != null)\n\t\t{\n\t\t\tprops.put(SMTP_TIMEOUT, m_smtpTimeout);\n\t\t}\n\t\t\n\t\t// Set localhost name\n\t\tif (m_smtpLocalhost != null)\n\t\t\tprops.put(SMTP_LOCALHOST, m_smtpLocalhost);\n\n\t\t// set the mail envelope return address\n\t\tprops.put(SMTP_FROM, m_smtpFrom);\n\n\t\tSession session = Session.getDefaultInstance(props, null);\n\n\t\ttry\n\t\t{\n\t\t\t// see if we have a message-id in the additional headers\n\t\t\tString mid = null;\n\t\t\tif (additionalHeaders != null)\n\t\t\t{\n\t\t\t\tfor (String header : additionalHeaders)\n\t\t\t\t{\n\t\t\t\t\tif (header.toLowerCase().startsWith(EmailHeaders.MESSAGE_ID.toLowerCase() + \": \"))\n\t\t\t\t\t{\n\t\t\t\t\t\t// length of 'message-id: ' == 12\n\t\t\t\t\t\tmid = header.substring(12);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// use the special extension that can set the id\n\t\t\tMimeMessage msg = new MyMessage(session, mid);\n\n\t\t\t// the FULL content-type header, for example:\n\t\t\t// Content-Type: text/plain; charset=windows-1252; format=flowed\n\t\t\tString contentTypeHeader = null;\n\n\t\t\t// set the additional headers on the message\n\t\t\t// but treat Content-Type specially as we need to check the charset\n\t\t\t// and we already dealt with the message id\n\t\t\tif (additionalHeaders != null)\n\t\t\t{\n\t\t\t\tfor (String header : additionalHeaders)\n\t\t\t\t{\n\t\t\t\t\tif (header.toLowerCase().startsWith(EmailHeaders.CONTENT_TYPE.toLowerCase() + \": \"))\n\t\t\t\t\t\tcontentTypeHeader = header;\n\t\t\t\t\telse if (!header.toLowerCase().startsWith(EmailHeaders.MESSAGE_ID.toLowerCase() + \": \"))\n\t\t\t\t\t\tmsg.addHeaderLine(header);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// date\n\t\t\tif (msg.getHeader(EmailHeaders.DATE) == null)\n\t\t\t\tmsg.setSentDate(new Date(System.currentTimeMillis()));\n\n\t\t\t// set the message sender\n\t\t\tmsg.setFrom(from);\n\n\t\t\t// set the message recipients (headers)\n\t\t\tsetRecipients(headerTo, msg);\n\n\t\t\t// set the reply to\n\t\t\tif ((replyTo != null) && (msg.getHeader(EmailHeaders.REPLY_TO) == null))\n\t\t\t\tmsg.setReplyTo(replyTo);\n\n\t\t\t// figure out what charset encoding to use\n\t\t\t//\n\t\t\t// first try to use the charset from the forwarded\n\t\t\t// Content-Type header (if there is one).\n\t\t\t//\n\t\t\t// if that charset doesn't work, try a couple others.\n\t\t\t// the character set, for example, windows-1252 or UTF-8\n\t\t\tString charset = extractCharset(contentTypeHeader);\n\n\t\t\tif (charset != null && canUseCharset(content, charset))\n\t\t\t{\n\t\t\t\t// use the charset from the Content-Type header\n\t\t\t}\n\t\t\telse if (canUseCharset(content, CharacterSet.ISO_8859_1))\n\t\t\t{\n\t\t\t\tif (contentTypeHeader != null && charset != null)\n\t\t\t\t\tcontentTypeHeader = contentTypeHeader.replaceAll(charset, CharacterSet.ISO_8859_1);\n\t\t\t\telse if (contentTypeHeader != null)\n\t\t\t\t\tcontentTypeHeader += \"; charset=\" + CharacterSet.ISO_8859_1;\n\t\t\t\tcharset = CharacterSet.ISO_8859_1;\n\t\t\t}\n\t\t\telse if (canUseCharset(content, CharacterSet.WINDOWS_1252))\n\t\t\t{\n\t\t\t\tif (contentTypeHeader != null && charset != null)\n\t\t\t\t\tcontentTypeHeader = contentTypeHeader.replaceAll(charset, CharacterSet.WINDOWS_1252);\n\t\t\t\telse if (contentTypeHeader != null)\n\t\t\t\t\tcontentTypeHeader += \"; charset=\" + CharacterSet.WINDOWS_1252;\n\t\t\t\tcharset = CharacterSet.ISO_8859_1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// catch-all - UTF-8 should be able to handle anything\n\t\t\t\tif (contentTypeHeader != null && charset != null) \n\t\t\t\t\tcontentTypeHeader = contentTypeHeader.replaceAll(charset, CharacterSet.UTF_8);\n\t\t\t\telse if (contentTypeHeader != null)\n\t\t\t\t\tcontentTypeHeader += \"; charset=\" + CharacterSet.UTF_8;\n\t\t\t\telse\n\t\t\t\t\tcontentTypeHeader = EmailHeaders.CONTENT_TYPE + \": \"\n\t\t\t\t\t\t\t+ ContentType.TEXT_PLAIN + \"; charset=\"\n\t\t\t\t\t\t\t+ CharacterSet.UTF_8;\n\t\t\t\tcharset = CharacterSet.UTF_8;\n\t\t\t}\n\n\t\t\tif ((subject != null) && (msg.getHeader(EmailHeaders.SUBJECT) == null))\n\t\t\t\tmsg.setSubject(subject, charset);\n\n\t\t\t// extract just the content type value from the header\n\t\t\tString contentType = null;\n\t\t\tif (contentTypeHeader != null)\n\t\t\t{\n\t\t\t\tint colonPos = contentTypeHeader.indexOf(\":\");\n\t\t\t\tcontentType = contentTypeHeader.substring(colonPos + 1).trim();\n\t\t\t}\n\t\t\tsetContent(content, attachments, msg, contentType, charset);\n\n\t\t\t// if we have a full Content-Type header, set it NOW\n\t\t\t// (after setting the body of the message so that format=flowed is preserved)\n\t\t\t// if there attachments, the messsage type will default to multipart/mixed and should\n\t\t\t// stay that way.\n\t\t\tif ((attachments == null || attachments.size() == 0) && contentTypeHeader != null)\n\t\t\t{\n\t\t\t\tmsg.addHeaderLine(contentTypeHeader);\n\t\t\t\tmsg.addHeaderLine(EmailHeaders.CONTENT_TRANSFER_ENCODING + \": quoted-printable\");\n\t\t\t}\n\n\t\t\tif (M_log.isDebugEnabled()) {\n\t\t\t\tM_log.debug(\"HeaderLines received were: \");\n\t\t\t\tEnumeration allHeaders = msg.getAllHeaderLines();\n\t\t\t\twhile(allHeaders.hasMoreElements()) {\n\t\t\t\t\tM_log.debug((String)allHeaders.nextElement());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsendMessageAndLog(from, to, subject, headerTo, start, msg);\n\t\t}\n\t\tcatch (MessagingException e)\n\t\t{\n\t\t\tM_log.warn(\"Email.sendMail: exception: \" + e.getMessage(), e);\n\t\t}\n\t}","id":107019,"modified_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic void sendMail(InternetAddress from, InternetAddress[] to, String subject, String content,\n\t\t\tMap<RecipientType, InternetAddress[]> headerTo, InternetAddress[] replyTo,\n\t\t\tList<String> additionalHeaders, List<Attachment> attachments)\n\t{\n\t\t// some timing for debug\n\t\tlong start = 0;\n\t\tif (M_log.isDebugEnabled()) start = System.currentTimeMillis();\n\n\t\t// if in test mode, use the test method\n\t\tif (m_testMode)\n\t\t{\n\t\t\ttestSendMail(from, to, subject, content, headerTo, replyTo, additionalHeaders);\n\t\t\treturn;\n\t\t}\n\n\t\tif (m_smtp == null)\n\t\t{\n\t\t\tM_log.warn(\"sendMail: smtp not set\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (from == null)\n\t\t{\n\t\t\tM_log.warn(\"sendMail: null from\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (to == null)\n\t\t{\n\t\t\tM_log.warn(\"sendMail: null to\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (content == null)\n\t\t{\n\t\t\tM_log.warn(\"sendMail: null content\");\n\t\t\treturn;\n\t\t}\n\n\t\tProperties props = new Properties();\n\n\t\t// set the server host\n\t\tprops.put(SMTP_HOST, m_smtp);\n\n\t\t// set the port, if specified\n\t\tif (m_smtpPort != null)\n\t\t\tprops.put(SMTP_PORT, m_smtpPort);\n\t\t\n\t\t// set smtp connection timeout, if specified\n\t\tif (m_smtpConnectionTimeout != null)\n\t\t{\n\t\t\tprops.put(SMTP_CONNECTIONTIMEOUT, m_smtpConnectionTimeout);\n\t\t}\n\t\t\n\t\t// set smtp socket I/O timeout, if specified\n\t\tif (m_smtpTimeout != null)\n\t\t{\n\t\t\tprops.put(SMTP_TIMEOUT, m_smtpTimeout);\n\t\t}\n\t\t\n\t\t// Set localhost name\n\t\tif (m_smtpLocalhost != null)\n\t\t\tprops.put(SMTP_LOCALHOST, m_smtpLocalhost);\n\n\t\t// set the mail envelope return address\n\t\tprops.put(SMTP_FROM, m_smtpFrom);\n\n\t\tSession session = Session.getDefaultInstance(props, null);\n\n\t\ttry\n\t\t{\n\t\t\t// see if we have a message-id in the additional headers\n\t\t\tString mid = null;\n\t\t\tif (additionalHeaders != null)\n\t\t\t{\n\t\t\t\tfor (String header : additionalHeaders)\n\t\t\t\t{\n\t\t\t\t\tif (header.toLowerCase().startsWith(EmailHeaders.MESSAGE_ID.toLowerCase() + \": \"))\n\t\t\t\t\t{\n\t\t\t\t\t\t// length of 'message-id: ' == 12\n\t\t\t\t\t\tmid = header.substring(12);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// use the special extension that can set the id\n\t\t\tMimeMessage msg = new MyMessage(session, mid);\n\n\t\t\t// the FULL content-type header, for example:\n\t\t\t// Content-Type: text/plain; charset=windows-1252; format=flowed\n\t\t\tString contentTypeHeader = null;\n\n\t\t\t// set the additional headers on the message\n\t\t\t// but treat Content-Type specially as we need to check the charset\n\t\t\t// and we already dealt with the message id\n\t\t\tif (additionalHeaders != null)\n\t\t\t{\n\t\t\t\tfor (String header : additionalHeaders)\n\t\t\t\t{\n\t\t\t\t\tif (header.toLowerCase().startsWith(EmailHeaders.CONTENT_TYPE.toLowerCase() + \": \"))\n\t\t\t\t\t\tcontentTypeHeader = header;\n\t\t\t\t\telse if (!header.toLowerCase().startsWith(EmailHeaders.MESSAGE_ID.toLowerCase() + \": \"))\n\t\t\t\t\t\tmsg.addHeaderLine(header);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// date\n\t\t\tif (msg.getHeader(EmailHeaders.DATE) == null)\n\t\t\t\tmsg.setSentDate(new Date(System.currentTimeMillis()));\n\n\t\t\t// set the message sender\n\t\t\tmsg.setFrom(from);\n\n\t\t\t// set the message recipients (headers)\n\t\t\tsetRecipients(headerTo, msg);\n\n\t\t\t// set the reply to\n\t\t\tif ((replyTo != null) && (msg.getHeader(EmailHeaders.REPLY_TO) == null))\n\t\t\t\tmsg.setReplyTo(replyTo);\n\n\t\t\t// figure out what charset encoding to use\n\t\t\t//\n\t\t\t// first try to use the charset from the forwarded\n\t\t\t// Content-Type header (if there is one).\n\t\t\t//\n\t\t\t// if that charset doesn't work, try a couple others.\n\t\t\t// the character set, for example, windows-1252 or UTF-8\n\t\t\tString charset = extractCharset(contentTypeHeader);\n\n                       if (charset != null && canUseCharset(content, charset) && canUseCharset(subject, charset))\n\t\t\t{\n\t\t\t\t// use the charset from the Content-Type header\n\t\t\t}\n                       else if (canUseCharset(content, CharacterSet.ISO_8859_1) && canUseCharset(subject, CharacterSet.ISO_8859_1))\n\t\t\t{\n\t\t\t\tif (contentTypeHeader != null && charset != null)\n\t\t\t\t\tcontentTypeHeader = contentTypeHeader.replaceAll(charset, CharacterSet.ISO_8859_1);\n\t\t\t\telse if (contentTypeHeader != null)\n\t\t\t\t\tcontentTypeHeader += \"; charset=\" + CharacterSet.ISO_8859_1;\n\t\t\t\tcharset = CharacterSet.ISO_8859_1;\n\t\t\t}\n                       else if (canUseCharset(content, CharacterSet.WINDOWS_1252) && canUseCharset(subject, CharacterSet.WINDOWS_1252))\n\t\t\t{\n\t\t\t\tif (contentTypeHeader != null && charset != null)\n\t\t\t\t\tcontentTypeHeader = contentTypeHeader.replaceAll(charset, CharacterSet.WINDOWS_1252);\n\t\t\t\telse if (contentTypeHeader != null)\n\t\t\t\t\tcontentTypeHeader += \"; charset=\" + CharacterSet.WINDOWS_1252;\n                               charset = CharacterSet.WINDOWS_1252;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// catch-all - UTF-8 should be able to handle anything\n\t\t\t\tif (contentTypeHeader != null && charset != null) \n\t\t\t\t\tcontentTypeHeader = contentTypeHeader.replaceAll(charset, CharacterSet.UTF_8);\n\t\t\t\telse if (contentTypeHeader != null)\n\t\t\t\t\tcontentTypeHeader += \"; charset=\" + CharacterSet.UTF_8;\n\t\t\t\telse\n\t\t\t\t\tcontentTypeHeader = EmailHeaders.CONTENT_TYPE + \": \"\n\t\t\t\t\t\t\t+ ContentType.TEXT_PLAIN + \"; charset=\"\n\t\t\t\t\t\t\t+ CharacterSet.UTF_8;\n\t\t\t\tcharset = CharacterSet.UTF_8;\n\t\t\t}\n\n\t\t\tif ((subject != null) && (msg.getHeader(EmailHeaders.SUBJECT) == null))\n\t\t\t\tmsg.setSubject(subject, charset);\n\n\t\t\t// extract just the content type value from the header\n\t\t\tString contentType = null;\n\t\t\tif (contentTypeHeader != null)\n\t\t\t{\n\t\t\t\tint colonPos = contentTypeHeader.indexOf(\":\");\n\t\t\t\tcontentType = contentTypeHeader.substring(colonPos + 1).trim();\n\t\t\t}\n\t\t\tsetContent(content, attachments, msg, contentType, charset);\n\n\t\t\t// if we have a full Content-Type header, set it NOW\n\t\t\t// (after setting the body of the message so that format=flowed is preserved)\n\t\t\t// if there attachments, the messsage type will default to multipart/mixed and should\n\t\t\t// stay that way.\n\t\t\tif ((attachments == null || attachments.size() == 0) && contentTypeHeader != null)\n\t\t\t{\n\t\t\t\tmsg.addHeaderLine(contentTypeHeader);\n\t\t\t\tmsg.addHeaderLine(EmailHeaders.CONTENT_TRANSFER_ENCODING + \": quoted-printable\");\n\t\t\t}\n\n\t\t\tif (M_log.isDebugEnabled()) {\n\t\t\t\tM_log.debug(\"HeaderLines received were: \");\n\t\t\t\tEnumeration allHeaders = msg.getAllHeaderLines();\n\t\t\t\twhile(allHeaders.hasMoreElements()) {\n\t\t\t\t\tM_log.debug((String)allHeaders.nextElement());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsendMessageAndLog(from, to, subject, headerTo, start, msg);\n\t\t}\n\t\tcatch (MessagingException e)\n\t\t{\n\t\t\tM_log.warn(\"Email.sendMail: exception: \" + e.getMessage(), e);\n\t\t}\n\t}","commit_id":"8e273df5c5426ecb6743b9c6195964c264b68b33","url":"https://github.com/sakaiproject/sakai"},{"original_method":"private void playMakeTurn(RouteSegmentResult currentSegment, RouteDirectionInfo next, NextDirectionInfo nextNextInfo) {\n\t\tCommandBuilder play = getNewCommandPlayerToPlay();\n\t\tif(play != null){\n\t\t\tString tParam = getTurnType(next.getTurnType());\n\t\t\tboolean isplay = true;\n\t\t\tif(tParam != null){\n\t\t\t\tplay.turn(tParam, getSpeakableStreetName(currentSegment, next, !suppressDest));\n\t\t\t} else if(next.getTurnType().isRoundAbout()){\n\t\t\t\tplay.roundAbout(next.getTurnType().getTurnAngle(), next.getTurnType().getExitOut(), getSpeakableStreetName(currentSegment, next, !suppressDest));\n\t\t\t} else if(next.getTurnType().getValue() == TurnType.TU || next.getTurnType().getValue() == TurnType.TRU){\n\t\t\t\tplay.makeUT(getSpeakableStreetName(currentSegment, next, !suppressDest));\n\t\t\t// do not announce goAHeads\n\t\t\t//} else if(next.getTurnType().getValue() == TurnType.C)){\n\t\t\t//\tplay.goAhead();\n\t\t\t} else {\n\t\t\t\tisplay = false;\n\t\t\t}\n\t\t\t// add turn after next\n\t\t\tif ((nextNextInfo != null) && (nextNextInfo.directionInfo != null)) {\n\t\t\t\tString t2Param = getTurnType(nextNextInfo.directionInfo.getTurnType());\n\t\t\t\tif (t2Param != null) {\n\t\t\t\t\tif(isplay) { play.then(); }\n\t\t\t\t\tplay.turn(t2Param, nextNextInfo.distanceTo, empty);\n\t\t\t\t} else if (nextNextInfo.directionInfo.getTurnType().isRoundAbout()) {\n\t\t\t\t\tif(isplay) { play.then(); }\n\t\t\t\t\tplay.roundAbout(nextNextInfo.distanceTo, nextNextInfo.directionInfo.getTurnType().getTurnAngle(), nextNextInfo.directionInfo.getTurnType().getExitOut(), empty);\n\t\t\t\t} else if (nextNextInfo.directionInfo.getTurnType().getValue() == TurnType.TU) {\n\t\t\t\t\tif(isplay) { play.then(); }\n\t\t\t\t\tplay.makeUT(nextNextInfo.distanceTo, empty);\n\t\t\t\t}\n\t\t\t\tisplay = true;\n\t\t\t}\n\t\t\tif(isplay){\n\t\t\t\tnotifyOnVoiceMessage();\n\t\t\t\tplay.play();\n\t\t\t}\n\t\t}\n\t}","id":107020,"modified_method":"private void playMakeTurn(RouteSegmentResult currentSegment, RouteDirectionInfo next, NextDirectionInfo nextNextInfo) {\n\t\tCommandBuilder play = getNewCommandPlayerToPlay();\n\t\tif(play != null){\n\t\t\tString tParam = getTurnType(next.getTurnType());\n\t\t\tboolean isplay = true;\n\t\t\tif(tParam != null){\n\t\t\t\tplay.turn(tParam, getSpeakableStreetName(currentSegment, next, !suppressDest));\n\t\t\t} else if(next.getTurnType().isRoundAbout()){\n\t\t\t\tplay.roundAbout(next.getTurnType().getTurnAngle(), next.getTurnType().getExitOut(), getSpeakableStreetName(currentSegment, next, !suppressDest));\n\t\t\t} else if(next.getTurnType().getValue() == TurnType.TU || next.getTurnType().getValue() == TurnType.TRU){\n\t\t\t\tplay.makeUT(getSpeakableStreetName(currentSegment, next, !suppressDest));\n\t\t\t// do not announce goAHeads\n\t\t\t//} else if(next.getTurnType().getValue() == TurnType.C)){\n\t\t\t//\tplay.goAhead();\n\t\t\t} else {\n\t\t\t\tisplay = false;\n\t\t\t}\n\t\t\t// add turn after next\n\t\t\tif ((nextNextInfo != null) && (nextNextInfo.directionInfo != null)) {\n\t\t\t\tString t2Param = getTurnType(nextNextInfo.directionInfo.getTurnType());\n\t\t\t\tif (t2Param != null) {\n\t\t\t\t\tif(isplay) {\n\t\t\t\t\t\tplay.then();\n\t\t\t\t\t\tplay.turn(t2Param, nextNextInfo.distanceTo, empty);\n\t\t\t\t\t}\n\t\t\t\t} else if (nextNextInfo.directionInfo.getTurnType().isRoundAbout()) {\n\t\t\t\t\tif(isplay) {\n\t\t\t\t\t\tplay.then();\n\t\t\t\t\t\tplay.roundAbout(nextNextInfo.distanceTo, nextNextInfo.directionInfo.getTurnType().getTurnAngle(), nextNextInfo.directionInfo.getTurnType().getExitOut(), empty);\n\t\t\t\t\t}\n\t\t\t\t} else if (nextNextInfo.directionInfo.getTurnType().getValue() == TurnType.TU) {\n\t\t\t\t\tif(isplay) {\n\t\t\t\t\t\tplay.then();\n\t\t\t\t\t\tplay.makeUT(nextNextInfo.distanceTo, empty);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// This case only needed should we want another prompt at the end of straight segments (equivalent of makeTurn) and nextNextInfo should be announced again there.\n\t\t\t\tif (nextNextInfo.directionInfo.getTurnType().getValue() != TurnType.C && next.getTurnType().getValue() == TurnType.C) {\n\t\t\t\t\tplay.goAhead();\n\t\t\t\t\tplay.then();\n\t\t\t\t\tplay.turn(t2Param, nextNextInfo.distanceTo, empty);\n\t\t\t\t\tisplay = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(isplay){\n\t\t\t\tnotifyOnVoiceMessage();\n\t\t\t\tplay.play();\n\t\t\t}\n\t\t}\n\t}","commit_id":"acdc0b1655f7f78cd093d17f5faa31f78885f725","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public static Object createConverter(Class converterClass, Object target, ApplicationContext applicationContext) throws ConverterException{\n        try {\n            AbstractConverter converter = (AbstractConverter) converterClass.newInstance();\n            if(converter instanceof ApplicationContextAware && applicationContext!=null) {\n                ((ApplicationContextAware)converter).setApplicationContext(applicationContext);\n            }\n            converter.setTarget(target);\n            return converter;\n        } catch (Exception e) {\n            throw new ConverterException(\"Initialization of Converter Object \" + converterClass.getName()\n                    + \" failed for target \" + target.getClass().getName(), e);\n        }\n    }","id":107021,"modified_method":"public static Object createConverter(Class<?> converterClass, Object target, ApplicationContext applicationContext) throws ConverterException{\n        try {\n            AbstractConverter<?> converter = (AbstractConverter<?>)converterClass.newInstance();\n            if (converter instanceof ApplicationContextAware && applicationContext != null) {\n                ((ApplicationContextAware)converter).setApplicationContext(applicationContext);\n            }\n            converter.setTarget(target);\n            return converter;\n        } catch (Exception e) {\n            throw new ConverterException(\"Initialization of Converter Object \" + converterClass.getName()\n                    + \" failed for target \" + target.getClass().getName(), e);\n        }\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"public static Object createConverter(Class converterClass, Object target) throws ConverterException {\n        return createConverter(converterClass, target, null);\n    }","id":107022,"modified_method":"public static Object createConverter(Class<?> converterClass, Object target) throws ConverterException {\n        return createConverter(converterClass, target, null);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"public static boolean isConverterClass(Class clazz) {\n        return Converter.class.isAssignableFrom(clazz);\n    }","id":107023,"modified_method":"public static boolean isConverterClass(Class<?> clazz) {\n        return Converter.class.isAssignableFrom(clazz);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"public static Object invokeOriginalAsTypeMethod(Object delegate, Class clazz) {\n    \tif(clazz.isInstance(delegate))\n    \t\treturn delegate;\n    \telse if(delegate instanceof Collection && clazz.isArray()) {\n\t\t\tint size=((Collection)delegate).size();\n    \t\tif(clazz.getComponentType() == Object.class) {\n    \t\t\tif(size==0) {\n    \t\t\t\treturn EMPTY_OBJECT_ARRAY;\n    \t\t\t} else {\n    \t\t\t\treturn ((Collection)delegate).toArray((Object[])Array.newInstance(clazz.getComponentType(), size));\n    \t\t\t}\n    \t\t} else if (size==0) {\n    \t\t\treturn Array.newInstance(clazz.getComponentType(), 0);\n    \t\t} else {\n    \t\t\treturn DefaultTypeTransformation.asArray(delegate, clazz);\n    \t\t}\n    \t} else  if (delegate instanceof Collection)\n            return DefaultGroovyMethods.asType((Collection) delegate, clazz);\n        else if (delegate instanceof Closure)\n            return DefaultGroovyMethods.asType((Closure) delegate, clazz);\n        else if (delegate instanceof Map)\n            return DefaultGroovyMethods.asType((Map) delegate, clazz);\n        else if (delegate instanceof Number)\n            return DefaultGroovyMethods.asType((Number) delegate, clazz);\n        else if (delegate instanceof File)\n            return DefaultGroovyMethods.asType((File) delegate, clazz);\n        else if (delegate instanceof String)\n            return DefaultGroovyMethods.asType((String) delegate, clazz);\n        else\n            return DefaultGroovyMethods.asType(delegate, clazz);\n    }","id":107024,"modified_method":"public static Object invokeOriginalAsTypeMethod(Object delegate, Class clazz) {\n        if (clazz.isInstance(delegate)) {\n            return delegate;\n        }\n\n        if (delegate instanceof Collection<?> && clazz.isArray()) {\n            int size = ((Collection<?>)delegate).size();\n            if (clazz.getComponentType() == Object.class) {\n                if (size == 0) {\n                    return EMPTY_OBJECT_ARRAY;\n                }\n                return ((Collection<?>)delegate).toArray((Object[])Array.newInstance(clazz.getComponentType(), size));\n            }\n            if (size == 0) {\n                return Array.newInstance(clazz.getComponentType(), 0);\n            }\n            return DefaultTypeTransformation.asArray(delegate, clazz);\n        }\n\n        if (delegate instanceof Collection<?>) {\n            return DefaultGroovyMethods.asType((Collection<?>) delegate, clazz);\n        }\n        if (delegate instanceof Closure) {\n            return DefaultGroovyMethods.asType((Closure) delegate, clazz);\n        }\n        if (delegate instanceof Map) {\n            return DefaultGroovyMethods.asType((Map) delegate, clazz);\n        }\n        if (delegate instanceof Number) {\n            return DefaultGroovyMethods.asType((Number) delegate, clazz);\n        }\n        if (delegate instanceof File) {\n            return DefaultGroovyMethods.asType((File) delegate, clazz);\n        }\n        if (delegate instanceof String) {\n            return DefaultGroovyMethods.asType((String) delegate, clazz);\n        }\n        return DefaultGroovyMethods.asType(delegate, clazz);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"public static BeanWrapper createBeanWrapper(Object o) {\n        BeanWrapper beanWrapper;\n        try {\n            Class c = Class.forName(PERSISTENCE_BEAN_WRAPPER_CLASS, true, Thread.currentThread().getContextClassLoader());\n            Constructor init = c.getConstructor(new Class[]{Object.class});\n            beanWrapper = (BeanWrapper)init.newInstance(new Object[]{o});\n        } catch (Exception e) {\n            beanWrapper = new BeanWrapperImpl(o);\n        }\n        return beanWrapper;\n    }","id":107025,"modified_method":"public static BeanWrapper createBeanWrapper(Object o) {\n        BeanWrapper beanWrapper;\n        try {\n            Class<?> c = Class.forName(PERSISTENCE_BEAN_WRAPPER_CLASS, true, Thread.currentThread().getContextClassLoader());\n            Constructor<?> init = c.getConstructor(new Class[]{Object.class});\n            beanWrapper = (BeanWrapper)init.newInstance(new Object[]{o});\n        } catch (Exception e) {\n            beanWrapper = new BeanWrapperImpl(o);\n        }\n        return beanWrapper;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"private static String trimProxySuffix(String name) {\n        int i = name.indexOf(\"$$\");\n        if(i > -1) {\n            name = name.substring(0,i);\n        }\n        return name;\n    }","id":107026,"modified_method":"private static String trimProxySuffix(String name) {\n        int i = name.indexOf(\"$$\");\n        if (i > -1) {\n            name = name.substring(0, i);\n            while (name.endsWith(\"_\")) {\n            \tname = name.substring(0, name.length() - 1);\n            }\n        }\n        return name;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"public static boolean isDomainClass(Class clazz) {\n        String name = trimProxySuffix(clazz.getName());\n        return getGrailsApplication() != null && getGrailsApplication().isArtefactOfType(DomainClassArtefactHandler.TYPE, name);\n    }","id":107027,"modified_method":"public static boolean isDomainClass(Class<?> clazz) {\n        String name = trimProxySuffix(clazz.getName());\n        return getGrailsApplication() != null && getGrailsApplication().isArtefactOfType(DomainClassArtefactHandler.TYPE, name);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Returns the value of the specified property and type from an instance of the specified Grails class\n     *\n     * @param clazz The name of the class which contains the property\n     * @param propertyName The property name\n     * @param propertyType The property type\n     *\n     * @return The value of the property or null if none exists\n     */\n    public static Object getPropertyValueOfNewInstance(Class clazz, String propertyName, Class propertyType) {\n        // validate\n        if(clazz == null || StringUtils.isBlank(propertyName))\n            return null;\n\n        Object instance = null;\n        try {\n            instance = BeanUtils.instantiateClass(clazz);\n        } catch (BeanInstantiationException e) {\n            return null;\n        }\n\n\n        return getPropertyOrStaticPropertyOrFieldValue(instance, propertyName);\n    }","id":107028,"modified_method":"/**\n     * Returns the value of the specified property and type from an instance of the specified Grails class\n     *\n     * @param clazz The name of the class which contains the property\n     * @param propertyName The property name\n     * @param propertyType The property type\n     *\n     * @return The value of the property or null if none exists\n     */\n    public static Object getPropertyValueOfNewInstance(Class clazz, String propertyName, Class<?> propertyType) {\n        // validate\n        if(clazz == null || StringUtils.isBlank(propertyName)) {\n            return null;\n        }\n\n        Object instance = null;\n        try {\n            instance = BeanUtils.instantiateClass(clazz);\n        } catch (BeanInstantiationException e) {\n            return null;\n        }\n\n        return getPropertyOrStaticPropertyOrFieldValue(instance, propertyName);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"private static boolean isTypeInstanceOfPropertyType(Class type, Class propertyType) {\n        return propertyType.isAssignableFrom(type) && !propertyType.equals(Object.class);\n    }","id":107029,"modified_method":"private static boolean isTypeInstanceOfPropertyType(Class<?> type, Class<?> propertyType) {\n        return propertyType.isAssignableFrom(type) && !propertyType.equals(Object.class);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Retrieves all the properties of the given class which are assignable to the given type\n     *\n     * @param clazz             The class to retrieve the properties from\n     * @param propertySuperType The type of the properties you wish to retrieve\n     * @return An array of PropertyDescriptor instances\n     */\n    public static PropertyDescriptor[] getPropertiesAssignableToType(Class clazz, Class propertySuperType) {\n        if (clazz == null || propertySuperType == null) return new PropertyDescriptor[0];\n\n        Set properties = new HashSet();\n        try {\n            PropertyDescriptor[] descriptors = BeanUtils.getPropertyDescriptors(clazz);\n\n            for (int i = 0; i < descriptors.length; i++) {\n                if (propertySuperType.isAssignableFrom(descriptors[i].getPropertyType())) {\n                    properties.add(descriptors[i]);\n                }\n            }\n        } catch (Exception e) {\n            return new PropertyDescriptor[0];\n        }\n        return (PropertyDescriptor[]) properties.toArray(new PropertyDescriptor[properties.size()]);\n    }","id":107030,"modified_method":"/**\n     * Retrieves all the properties of the given class which are assignable to the given type\n     *\n     * @param clazz             The class to retrieve the properties from\n     * @param propertySuperType The type of the properties you wish to retrieve\n     * @return An array of PropertyDescriptor instances\n     */\n    public static PropertyDescriptor[] getPropertiesAssignableToType(Class<?> clazz, Class<?> propertySuperType) {\n        if (clazz == null || propertySuperType == null) return new PropertyDescriptor[0];\n\n        Set<PropertyDescriptor> properties = new HashSet<PropertyDescriptor>();\n        try {\n            for (PropertyDescriptor descriptor : BeanUtils.getPropertyDescriptors(clazz)) {\n                if (propertySuperType.isAssignableFrom(descriptor.getPropertyType())) {\n                    properties.add(descriptor);\n                }\n            }\n        } catch (Exception e) {\n            return new PropertyDescriptor[0];\n        }\n        return properties.toArray(new PropertyDescriptor[properties.size()]);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Retrieves a property of the given class of the specified name and type\n     * @param clazz The class to retrieve the property from\n     * @param propertyName The name of the property\n     * @param propertyType The type of the property\n     *\n     * @return A PropertyDescriptor instance or null if none exists\n     */\n    public static PropertyDescriptor getProperty(Class clazz, String propertyName, Class propertyType) {\n        if(clazz == null || propertyName == null || propertyType == null)\n            return null;\n\n        try {\n            PropertyDescriptor pd = BeanUtils.getPropertyDescriptor(clazz, propertyName);\n            if(pd.getPropertyType().equals( propertyType )) {\n                return pd;\n            }\n            else {\n                return null;\n            }\n        } catch (Exception e) {\n            // if there are any errors in instantiating just return null for the moment\n            return null;\n        }\n    }","id":107031,"modified_method":"/**\n     * Retrieves a property of the given class of the specified name and type\n     * @param clazz The class to retrieve the property from\n     * @param propertyName The name of the property\n     * @param propertyType The type of the property\n     *\n     * @return A PropertyDescriptor instance or null if none exists\n     */\n    public static PropertyDescriptor getProperty(Class<?> clazz, String propertyName, Class<?> propertyType) {\n        if(clazz == null || propertyName == null || propertyType == null)\n            return null;\n\n        try {\n            PropertyDescriptor pd = BeanUtils.getPropertyDescriptor(clazz, propertyName);\n            if(pd.getPropertyType().equals(propertyType)) {\n                return pd;\n            }\n            return null;\n        } catch (Exception e) {\n            // if there are any errors in instantiating just return null for the moment\n            return null;\n        }\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Get the value of a declared field on an object\n     *\n     * @param obj\n     * @param name\n     * @return The object value or null if there is no such field or access problems\n     */\n    public static Object getFieldValue(Object obj, String name)\n    {\n        Class clazz = obj.getClass();\n        Field f = null;\n        try\n        {\n            f = clazz.getDeclaredField(name);\n            return f.get(obj);\n        }\n        catch (Exception e)\n        {\n            return null;\n        }\n    }","id":107032,"modified_method":"/**\n     * Get the value of a declared field on an object\n     *\n     * @param obj\n     * @param name\n     * @return The object value or null if there is no such field or access problems\n     */\n    public static Object getFieldValue(Object obj, String name) {\n        Class<?> clazz = obj.getClass();\n        try {\n            Field f = clazz.getDeclaredField(name);\n            return f.get(obj);\n        }\n        catch (Exception e) {\n            return null;\n        }\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * <p>Work out if the specified property is readable and static. Java introspection does not\n     * recognize this concept of static properties but Groovy does. We also consider public static fields\n     * as static properties with no getters/setters<\/p>\n     *\n     * @param clazz The class to check for static property\n     * @param propertyName The property name\n     * @return true if the property with name propertyName has a static getter method\n     */\n    public static boolean isStaticProperty( Class clazz, String propertyName)\n    {\n        Method getter = BeanUtils.findDeclaredMethod(clazz, getGetterName(propertyName), null);\n        if (getter != null)\n        {\n            return isPublicStatic(getter);\n        }\n        else\n        {\n            try\n            {\n                Field f = clazz.getDeclaredField(propertyName);\n                if (f != null)\n                {\n                    return isPublicStatic(f);\n                }\n            }\n            catch (NoSuchFieldException e)\n            {\n            }\n        }\n\n        return false;\n    }","id":107033,"modified_method":"/**\n     * <p>Work out if the specified property is readable and static. Java introspection does not\n     * recognize this concept of static properties but Groovy does. We also consider public static fields\n     * as static properties with no getters/setters<\/p>\n     *\n     * @param clazz The class to check for static property\n     * @param propertyName The property name\n     * @return true if the property with name propertyName has a static getter method\n     */\n    public static boolean isStaticProperty(Class clazz, String propertyName) {\n        Method getter = BeanUtils.findDeclaredMethod(clazz, getGetterName(propertyName), null);\n        if (getter != null) {\n            return isPublicStatic(getter);\n        }\n        try {\n            Field f = clazz.getDeclaredField(propertyName);\n            if (f != null) {\n                return isPublicStatic(f);\n            }\n        }\n        catch (NoSuchFieldException ignored) {\n            // ignored\n        }\n\n        return false;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Returns the class name representation of the given name\n     *\n     * @param name The name to convert\n     * @return The property name representation\n     *\n     * @deprecated Use {@link grails.util.GrailsNameUtils#getClassNameRepresentation(String)} instead.\n     */\n\tpublic static String getClassNameRepresentation(String name) {\n        String className;\n\n        StringBuilder buf = new StringBuilder();\n        if(name != null && name.length() > 0) {\n            String[] tokens = name.split(\"[^\\\\w\\\\d]\");\n            for (int i = 0; i < tokens.length; i++) {\n                String token = tokens[i].trim();\n                buf.append(token.substring(0, 1).toUpperCase(Locale.ENGLISH))\n                        .append(token.substring(1));\n            }\n        }\n        className = buf.toString();\n\n        return className;\n\t}","id":107034,"modified_method":"/**\n     * Returns the class name representation of the given name\n     *\n     * @param name The name to convert\n     * @return The property name representation\n     *\n     * @deprecated Use {@link grails.util.GrailsNameUtils#getClassNameRepresentation(String)} instead.\n     */\n    public static String getClassNameRepresentation(String name) {\n\n        StringBuilder buf = new StringBuilder();\n        if(name != null && name.length() > 0) {\n            String[] tokens = name.split(\"[^\\\\w\\\\d]\");\n            for (int i = 0; i < tokens.length; i++) {\n                String token = tokens[i].trim();\n                buf.append(token.substring(0, 1).toUpperCase(Locale.ENGLISH))\n                        .append(token.substring(1));\n            }\n        }\n        return buf.toString();\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Returns the value of the specified property and type from an instance of the specified Grails class\n     *\n     * @param clazz The name of the class which contains the property\n     * @param propertyName The property name\n     *\n     * @return The value of the property or null if none exists\n     */\n    public static Object getPropertyValueOfNewInstance(Class clazz, String propertyName) {\n        // validate\n        if(clazz == null || StringUtils.isBlank(propertyName))\n            return null;\n\n        Object instance = null;\n        try {\n            instance = BeanUtils.instantiateClass(clazz);\n        } catch (BeanInstantiationException e) {\n            return null;\n        }\n\n\n        return getPropertyOrStaticPropertyOrFieldValue(instance, propertyName);\n    }","id":107035,"modified_method":"/**\n     * Returns the value of the specified property and type from an instance of the specified Grails class\n     *\n     * @param clazz The name of the class which contains the property\n     * @param propertyName The property name\n     *\n     * @return The value of the property or null if none exists\n     */\n    public static Object getPropertyValueOfNewInstance(Class<?> clazz, String propertyName) {\n        // validate\n        if (clazz == null || StringUtils.isBlank(propertyName)) {\n            return null;\n        }\n\n        Object instance = null;\n        try {\n            instance = BeanUtils.instantiateClass(clazz);\n        } catch (BeanInstantiationException e) {\n            return null;\n        }\n\n        return getPropertyOrStaticPropertyOrFieldValue(instance, propertyName);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Retrieves all the properties of the given class for the given type\n     *\n     * @param clazz The class to retrieve the properties from\n     * @param propertyType The type of the properties you wish to retrieve\n     *\n     * @return An array of PropertyDescriptor instances\n     */\n    public static PropertyDescriptor[] getPropertiesOfType(Class clazz, Class propertyType) {\n        if(clazz == null || propertyType == null)\n            return new PropertyDescriptor[0];\n\n        Set properties = new HashSet();\n        try {\n            PropertyDescriptor[] descriptors = BeanUtils.getPropertyDescriptors(clazz);\n\n            for (int i = 0; i < descriptors.length; i++) {\n                Class currentPropertyType = descriptors[i].getPropertyType();\n                if(isTypeInstanceOfPropertyType(propertyType, currentPropertyType)) {\n                    properties.add(descriptors[i]);\n                }\n            }\n\n        } catch (Exception e) {\n            // if there are any errors in instantiating just return null for the moment\n            return new PropertyDescriptor[0];\n        }\n        return (PropertyDescriptor[])properties.toArray( new PropertyDescriptor[ properties.size() ] );\n    }","id":107036,"modified_method":"/**\n     * Retrieves all the properties of the given class for the given type\n     *\n     * @param clazz The class to retrieve the properties from\n     * @param propertyType The type of the properties you wish to retrieve\n     *\n     * @return An array of PropertyDescriptor instances\n     */\n    public static PropertyDescriptor[] getPropertiesOfType(Class<?> clazz, Class<?> propertyType) {\n        if(clazz == null || propertyType == null) {\n            return new PropertyDescriptor[0];\n        }\n\n        Set<PropertyDescriptor> properties = new HashSet<PropertyDescriptor>();\n        try {\n            for (PropertyDescriptor descriptor : BeanUtils.getPropertyDescriptors(clazz)) {\n                Class<?> currentPropertyType = descriptor.getPropertyType();\n                if(isTypeInstanceOfPropertyType(propertyType, currentPropertyType)) {\n                    properties.add(descriptor);\n                }\n            }\n\n        } catch (Exception e) {\n            // if there are any errors in instantiating just return null for the moment\n            return new PropertyDescriptor[0];\n        }\n        return properties.toArray(new PropertyDescriptor[properties.size()]);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Returns the type of the given property contained within the specified class\n     *\n     * @param clazz The class which contains the property\n     * @param propertyName The name of the property\n     *\n     * @return The property type or null if none exists\n     */\n    public static Class getPropertyType(Class clazz, String propertyName) {\n        if(clazz == null || StringUtils.isBlank(propertyName))\n            return null;\n\n        try {\n        \tPropertyDescriptor desc=BeanUtils.getPropertyDescriptor(clazz, propertyName);\n            if(desc != null) {\n                return desc.getPropertyType();\n            }\n            else {\n                return null;\n            }\n        } catch (Exception e) {\n            // if there are any errors in instantiating just return null for the moment\n            return null;\n        }\n    }","id":107037,"modified_method":"/**\n     * Returns the type of the given property contained within the specified class\n     *\n     * @param clazz The class which contains the property\n     * @param propertyName The name of the property\n     *\n     * @return The property type or null if none exists\n     */\n    public static Class<?> getPropertyType(Class<?> clazz, String propertyName) {\n        if (clazz == null || StringUtils.isBlank(propertyName)) {\n            return null;\n        }\n\n        try {\n            PropertyDescriptor desc=BeanUtils.getPropertyDescriptor(clazz, propertyName);\n            if(desc != null) {\n                return desc.getPropertyType();\n            }\n            return null;\n        } catch (Exception e) {\n            // if there are any errors in instantiating just return null for the moment\n            return null;\n        }\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Checks whether the given class is a JDK 1.5 enum or not\n     *\n     * @param type The class to check\n     * @return True if it is an enum\n     */\n    public static boolean isJdk5Enum(Class type) {\n        if (JdkVersion.getMajorJavaVersion() >= JdkVersion.JAVA_15) {\n            Method m = BeanUtils.findMethod(type.getClass(),\"isEnum\", null);\n            if(m == null) return false;\n            try {\n                Object result = m.invoke(type, null);\n                return result instanceof Boolean && ((Boolean) result).booleanValue();\n            } catch (Exception e ) {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }","id":107038,"modified_method":"/**\n     * Checks whether the given class is a JDK 1.5 enum or not\n     *\n     * @param type The class to check\n     * @return True if it is an enum\n     */\n    public static boolean isJdk5Enum(Class<?> type) {\n        if (JdkVersion.getMajorJavaVersion() >= JdkVersion.JAVA_15) {\n            Method m = BeanUtils.findMethod(type.getClass(),\"isEnum\", null);\n            if(m == null) return false;\n            try {\n                Object result = m.invoke(type);\n                return result instanceof Boolean && ((Boolean) result).booleanValue();\n            } catch (Exception e) {\n                return false;\n            }\n        }\n        return false;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * <p>Looks for a property of the reference instance with a given name.<\/p>\n     * <p>If found its value is returned. We follow the Java bean conventions with augmentation for groovy support\n     * and static fields/properties. We will therefore match, in this order:\n     * <\/p>\n     * <ol>\n     * <li>Standard public bean property (with getter or just public field, using normal introspection)\n     * <li>Public static property with getter method\n     * <li>Public static field\n     * <\/ol>\n     *\n     * @return property value or null if no property found\n     */\n    public static Object getPropertyOrStaticPropertyOrFieldValue(Object obj, String name) throws BeansException\n    {\n        BeanWrapper ref = new BeanWrapperImpl(obj);\n        if (ref.isReadableProperty(name)) {\n            return ref.getPropertyValue(name);\n        }\n        else\n        {\n            // Look for public fields\n            if (isPublicField(obj, name))\n            {\n                return getFieldValue(obj, name);\n            }\n\n            // Look for statics\n            Class clazz = obj.getClass();\n            if (isStaticProperty(clazz, name))\n            {\n                return getStaticPropertyValue(clazz, name);\n            }\n            else\n            {\n               return null;\n            }\n        }\n    }","id":107039,"modified_method":"/**\n     * <p>Looks for a property of the reference instance with a given name.<\/p>\n     * <p>If found its value is returned. We follow the Java bean conventions with augmentation for groovy support\n     * and static fields/properties. We will therefore match, in this order:\n     * <\/p>\n     * <ol>\n     * <li>Standard public bean property (with getter or just public field, using normal introspection)\n     * <li>Public static property with getter method\n     * <li>Public static field\n     * <\/ol>\n     *\n     * @return property value or null if no property found\n     */\n    public static Object getPropertyOrStaticPropertyOrFieldValue(Object obj, String name) throws BeansException {\n        BeanWrapper ref = new BeanWrapperImpl(obj);\n        if (ref.isReadableProperty(name)) {\n            return ref.getPropertyValue(name);\n        }\n        // Look for public fields\n        if (isPublicField(obj, name)) {\n            return getFieldValue(obj, name);\n        }\n\n        // Look for statics\n        Class<?> clazz = obj.getClass();\n        if (isStaticProperty(clazz, name)) {\n            return getStaticPropertyValue(clazz, name);\n        }\n        return null;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n\t * Returns true if the name of the method specified and the number of arguments make it a javabean property\n\t * \n\t * @param name True if its a Javabean property\n\t * @param args The arguments\n\t * @return True if it is a javabean property method\n\t */\n\tpublic static boolean isGetter(String name, Class[] args) {\n\t\tif(StringUtils.isBlank(name) || args == null)return false;\n        if(args.length != 0)return false;\n\n        if(name.startsWith(\"get\")) {\n\t\t\tname = name.substring(3);\n\t\t\tif(name.length() > 0 && Character.isUpperCase(name.charAt(0))) return true;\t\t\t\n\t\t}\n        else if(name.startsWith(\"is\")) {\n            name = name.substring(2);\n            if(name.length() > 0 && Character.isUpperCase(name.charAt(0))) return true;\n        }\n        return false;\n\t}","id":107040,"modified_method":"/**\n     * Returns true if the name of the method specified and the number of arguments make it a javabean property\n     *\n     * @param name True if its a Javabean property\n     * @param args The arguments\n     * @return True if it is a javabean property method\n     */\n    public static boolean isGetter(String name, Class<?>[] args) {\n        if(StringUtils.isBlank(name) || args == null)return false;\n        if(args.length != 0)return false;\n\n        if(name.startsWith(\"get\")) {\n            name = name.substring(3);\n            if(name.length() > 0 && Character.isUpperCase(name.charAt(0))) return true;\n        }\n        else if(name.startsWith(\"is\")) {\n            name = name.substring(2);\n            if(name.length() > 0 && Character.isUpperCase(name.charAt(0))) return true;\n        }\n        return false;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Retrieves a boolean value from a Map for the given key\n     *\n     * @param key The key that references the boolean value\n     * @param map The map to look in\n     * @return A boolean value which will be false if the map is null, the map doesn't contain the key or the value is false \n     */\n    public static boolean getBooleanFromMap(String key, Map map) {\n        if(map == null) return false;\n        if(map.containsKey(key)) {\n            Object o = map.get(key);\n            if(o == null)return false;\n            else if(o instanceof Boolean) {\n                return ((Boolean)o).booleanValue();\n            }\n            else {\n                 return Boolean.valueOf(o.toString()).booleanValue();\n            }\n        }\n        return false;\n    }","id":107041,"modified_method":"/**\n     * Retrieves a boolean value from a Map for the given key\n     *\n     * @param key The key that references the boolean value\n     * @param map The map to look in\n     * @return A boolean value which will be false if the map is null, the map doesn't contain the key or the value is false\n     */\n    public static boolean getBooleanFromMap(String key, Map map) {\n        if(map == null) return false;\n        if(map.containsKey(key)) {\n            Object o = map.get(key);\n            if(o == null)return false;\n            if(o instanceof Boolean) {\n                return ((Boolean)o).booleanValue();\n            }\n            return Boolean.valueOf(o.toString()).booleanValue();\n        }\n        return false;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Converts foo-bar into FooBar\n     *\n     * @param name The lower case hyphen separated name\n     * @return The class name equivalent\n     *\n     * @deprecated Use {@link grails.util.GrailsNameUtils#getClassNameForLowerCaseHyphenSeparatedName(String)} instead.\n     */\n    private static String getClassNameForLowerCaseHyphenSeparatedName(String name) {\n        if(name.indexOf('-') > -1) {\n            StringBuilder buf = new StringBuilder();\n            String[] tokens = name.split(\"-\");\n            for (int i = 0; i < tokens.length; i++) {\n                String token = tokens[i];\n                if(token == null || token.length() == 0) continue;\n                buf.append(token.substring(0,1).toUpperCase())\n                   .append(token.substring(1));\n            }\n            return buf.toString();\n        }\n        else {\n            return name.substring(0,1).toUpperCase() + name.substring(1);\n        }\n    }","id":107042,"modified_method":"/**\n     * Converts foo-bar into FooBar\n     *\n     * @param name The lower case hyphen separated name\n     * @return The class name equivalent\n     *\n     * @deprecated Use {@link grails.util.GrailsNameUtils#getClassNameForLowerCaseHyphenSeparatedName(String)} instead.\n     */\n    private static String getClassNameForLowerCaseHyphenSeparatedName(String name) {\n        if(name.indexOf('-') > -1) {\n            StringBuilder buf = new StringBuilder();\n            String[] tokens = name.split(\"-\");\n            for (int i = 0; i < tokens.length; i++) {\n                String token = tokens[i];\n                if(token == null || token.length() == 0) continue;\n                buf.append(token.substring(0,1).toUpperCase())\n                   .append(token.substring(1));\n            }\n            return buf.toString();\n        }\n        return name.substring(0,1).toUpperCase() + name.substring(1);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Checks whether the specified property is inherited from a super class\n     * \n     * @param clz The class to check\n     * @param propertyName The property name\n     * @return True if the property is inherited\n     */\n    public static boolean isPropertyInherited(Class clz, String propertyName) {\n\t\tif(clz == null) return false;\n\t\tif(StringUtils.isBlank(propertyName))\n\t\t\tthrow new IllegalArgumentException(\"Argument [propertyName] cannot be null or blank\");\n\t\t\n\t\tClass superClass = clz.getSuperclass();\n\t\t\n\t\tPropertyDescriptor pd = BeanUtils.getPropertyDescriptor(superClass, propertyName);\n\t\tif (pd != null && pd.getReadMethod() != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}","id":107043,"modified_method":"/**\n     * Checks whether the specified property is inherited from a super class\n     *\n     * @param clz The class to check\n     * @param propertyName The property name\n     * @return True if the property is inherited\n     */\n    public static boolean isPropertyInherited(Class clz, String propertyName) {\n        if (clz == null) return false;\n        if (StringUtils.isBlank(propertyName)) {\n            throw new IllegalArgumentException(\"Argument [propertyName] cannot be null or blank\");\n        }\n\n        Class<?> superClass = clz.getSuperclass();\n\n        PropertyDescriptor pd = BeanUtils.getPropertyDescriptor(superClass, propertyName);\n        if (pd != null && pd.getReadMethod() != null) {\n            return true;\n        }\n        return false;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n\t * Returns a property name equivalent for the given getter name or null if it is not a getter\n\t * \n\t * @param getterName The getter name\n\t * @return The property name equivalent\n\t */\n\tpublic static String getPropertyForGetter(String getterName) {\n\t\tif(StringUtils.isBlank(getterName))return null;\n\t\t\n\t\tif(getterName.startsWith(\"get\")) {\n\t\t\tString prop = getterName.substring(3);\n\t\t\treturn convertPropertyName(prop);\n\t\t}\n        else if(getterName.startsWith(\"is\")) {\n            String prop = getterName.substring(2);\n            return convertPropertyName(prop);\n        }\n        return null;\n\t}","id":107044,"modified_method":"/**\n     * Returns a property name equivalent for the given getter name or null if it is not a getter\n     *\n     * @param getterName The getter name\n     * @return The property name equivalent\n     */\n    public static String getPropertyForGetter(String getterName) {\n        if(StringUtils.isBlank(getterName))return null;\n\n        if(getterName.startsWith(\"get\")) {\n            String prop = getterName.substring(3);\n            return convertPropertyName(prop);\n        }\n        if(getterName.startsWith(\"is\")) {\n            String prop = getterName.substring(2);\n            return convertPropertyName(prop);\n        }\n        return null;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     *\n     * Returns true if the specified property in the specified class is of the specified type\n     *\n     * @param clazz The class which contains the property\n     * @param propertyName The property name\n     * @param type The type to check\n     *\n     * @return A boolean value\n     */\n    public static boolean isPropertyOfType( Class clazz, String propertyName, Class type ) {\n        try {\n\n            Class propType = getPropertyType( clazz, propertyName );\n            return propType != null && propType.equals(type);\n        }\n        catch(Exception e) {\n            return false;\n        }\n    }","id":107045,"modified_method":"/**\n     *\n     * Returns true if the specified property in the specified class is of the specified type\n     *\n     * @param clazz The class which contains the property\n     * @param propertyName The property name\n     * @param type The type to check\n     *\n     * @return A boolean value\n     */\n    public static boolean isPropertyOfType(Class<?> clazz, String propertyName, Class<?> type) {\n        try {\n            Class<?> propType = getPropertyType(clazz, propertyName);\n            return propType != null && propType.equals(type);\n        }\n        catch(Exception e) {\n            return false;\n        }\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * <p>Tests whether or not the left hand type is compatible with the right hand type in Groovy\n     * terms, i.e. can the left type be assigned a value of the right hand type in Groovy.<\/p>\n     * <p>This handles Java primitive type equivalence and uses isAssignableFrom for all other types,\n     * with a bit of magic for native types and polymorphism i.e. Number assigned an int.\n     * If either parameter is null an exception is thrown<\/p>\n     *\n     * @param leftType The type of the left hand part of a notional assignment\n     * @param rightType The type of the right hand part of a notional assignment\n     * @return True if values of the right hand type can be assigned in Groovy to variables of the left hand type.\n     */\n    public static boolean isGroovyAssignableFrom(\n            Class leftType, Class rightType)\n    {\n        if (leftType == null) {\n            throw new NullPointerException(\"Left type is null!\");\n        } else if (rightType == null) {\n            throw new NullPointerException(\"Right type is null!\");\n        } else if (leftType == Object.class) {\n            return true;\n        } else if (leftType == rightType) {\n            return true;\n        } else {\n            // check for primitive type equivalence\n            Class r = (Class)PRIMITIVE_TYPE_COMPATIBLE_CLASSES.get(leftType);\n            boolean result = r == rightType;\n\n            if (!result)\n            {\n                // If no primitive <-> wrapper match, it may still be assignable\n                // from polymorphic primitives i.e. Number -> int (AKA Integer)\n                if (rightType.isPrimitive())\n                {\n                    // see if incompatible\n                    r = (Class)PRIMITIVE_TYPE_COMPATIBLE_CLASSES.get(rightType);\n                    if (r != null)\n                    {\n                        result = leftType.isAssignableFrom(r);\n                    }\n                } else\n                {\n                    // Otherwise it may just be assignable using normal Java polymorphism\n                    result = leftType.isAssignableFrom(rightType);\n                }\n            }\n            return result;\n        }\n    }","id":107046,"modified_method":"/**\n     * <p>Tests whether or not the left hand type is compatible with the right hand type in Groovy\n     * terms, i.e. can the left type be assigned a value of the right hand type in Groovy.<\/p>\n     * <p>This handles Java primitive type equivalence and uses isAssignableFrom for all other types,\n     * with a bit of magic for native types and polymorphism i.e. Number assigned an int.\n     * If either parameter is null an exception is thrown<\/p>\n     *\n     * @param leftType The type of the left hand part of a notional assignment\n     * @param rightType The type of the right hand part of a notional assignment\n     * @return True if values of the right hand type can be assigned in Groovy to variables of the left hand type.\n     */\n    public static boolean isGroovyAssignableFrom(Class<?> leftType, Class<?> rightType) {\n        if (leftType == null) {\n            throw new NullPointerException(\"Left type is null!\");\n        }\n        if (rightType == null) {\n            throw new NullPointerException(\"Right type is null!\");\n        }\n        if (leftType == Object.class) {\n            return true;\n        }\n        if (leftType == rightType) {\n            return true;\n        }\n        // check for primitive type equivalence\n        Class<?> r = PRIMITIVE_TYPE_COMPATIBLE_CLASSES.get(leftType);\n        boolean result = r == rightType;\n\n        if (!result) {\n            // If no primitive <-> wrapper match, it may still be assignable\n            // from polymorphic primitives i.e. Number -> int (AKA Integer)\n            if (rightType.isPrimitive()) {\n                // see if incompatible\n                r = PRIMITIVE_TYPE_COMPATIBLE_CLASSES.get(rightType);\n                if (r != null) {\n                    result = leftType.isAssignableFrom(r);\n                }\n            }\n            else {\n                // Otherwise it may just be assignable using normal Java polymorphism\n                result = leftType.isAssignableFrom(rightType);\n            }\n        }\n        return result;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * <p>Get a static property value, which has a public static getter or is just a public static field.<\/p>\n     *\n     * @param clazz The class to check for static property\n     * @param name The property name\n     * @return The value if there is one, or null if unset OR there is no such property\n     */\n    public static Object getStaticPropertyValue(Class clazz, String name)\n    {\n        Method getter = BeanUtils.findDeclaredMethod(clazz, getGetterName(name), null);\n        try\n        {\n            if (getter != null)\n            {\n                return getter.invoke(null, null);\n            }\n            else\n            {\n                Field f = clazz.getDeclaredField(name);\n                if (f != null)\n                {\n                    return f.get(null);\n                }\n            }\n        }\n        catch (Exception e)\n        {\n        }\n        return null;\n    }","id":107047,"modified_method":"/**\n     * <p>Get a static property value, which has a public static getter or is just a public static field.<\/p>\n     *\n     * @param clazz The class to check for static property\n     * @param name The property name\n     * @return The value if there is one, or null if unset OR there is no such property\n     */\n    public static Object getStaticPropertyValue(Class<?> clazz, String name) {\n        Method getter = BeanUtils.findDeclaredMethod(clazz, getGetterName(name), null);\n        try {\n            if (getter != null) {\n                return getter.invoke(null);\n            }\n            Field f = clazz.getDeclaredField(name);\n            if (f != null) {\n                return f.get(null);\n            }\n        }\n        catch (Exception ignored) {\n            // ignored\n        }\n        return null;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Returns whether the specified class is either within one of the specified packages or\n     * within a subpackage of one of the packages\n     *\n     * @param theClass The class\n     * @param packageList The list of packages\n     * @return True if it is within the list of specified packages\n     */\n    public static boolean isClassBelowPackage(Class theClass, List packageList) {\n        String classPackage = theClass.getPackage().getName();\n        for (Object packageName : packageList) {\n            if(packageName!=null) {\n                if (classPackage.startsWith(packageName.toString())) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }","id":107048,"modified_method":"/**\n     * Returns whether the specified class is either within one of the specified packages or\n     * within a subpackage of one of the packages\n     *\n     * @param theClass The class\n     * @param packageList The list of packages\n     * @return True if it is within the list of specified packages\n     */\n    public static boolean isClassBelowPackage(Class<?> theClass, List packageList) {\n        String classPackage = theClass.getPackage().getName();\n        for (Object packageName : packageList) {\n            if(packageName != null) {\n                if (classPackage.startsWith(packageName.toString())) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Work out if the specified object has a public field with the name supplied.\n     *\n     * @param obj\n     * @param name\n     * @return True if a public field with the name exists\n     */\n    public static boolean isPublicField(Object obj, String name)\n    {\n        Class clazz = obj.getClass();\n        Field f = null;\n        try\n        {\n            f = clazz.getDeclaredField(name);\n            return Modifier.isPublic(f.getModifiers());\n        }\n        catch (NoSuchFieldException e)\n        {\n            return false;\n        }\n    }","id":107049,"modified_method":"/**\n     * Work out if the specified object has a public field with the name supplied.\n     *\n     * @param obj\n     * @param name\n     * @return True if a public field with the name exists\n     */\n    public static boolean isPublicField(Object obj, String name) {\n        Class<?> clazz = obj.getClass();\n        try {\n            Field f = clazz.getDeclaredField(name);\n            return Modifier.isPublic(f.getModifiers());\n        }\n        catch (NoSuchFieldException e) {\n            return false;\n        }\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Detect if left and right types are matching types. In particular,\n     * test if one is a primitive type and the other is the corresponding\n     * Java wrapper type. Primitive and wrapper classes may be passed to\n     * either arguments.\n     *\n     * @param leftType\n     * @param rightType\n     * @return true if one of the classes is a native type and the other the object representation\n     * of the same native type\n     */\n    public static boolean isMatchBetweenPrimativeAndWrapperTypes(Class leftType, Class rightType) {\n        if (leftType == null) {\n            throw new NullPointerException(\"Left type is null!\");\n        } else if (rightType == null) {\n            throw new NullPointerException(\"Right type is null!\");\n        } else {\n            Class r = (Class)PRIMITIVE_TYPE_COMPATIBLE_CLASSES.get(leftType);\n            return r == rightType;\n        }\n    }","id":107050,"modified_method":"/**\n     * Detect if left and right types are matching types. In particular,\n     * test if one is a primitive type and the other is the corresponding\n     * Java wrapper type. Primitive and wrapper classes may be passed to\n     * either arguments.\n     *\n     * @param leftType\n     * @param rightType\n     * @return true if one of the classes is a native type and the other the object representation\n     * of the same native type\n     */\n    public static boolean isMatchBetweenPrimativeAndWrapperTypes(Class leftType, Class rightType) {\n        if (leftType == null) {\n            throw new NullPointerException(\"Left type is null!\");\n        }\n        if (rightType == null) {\n            throw new NullPointerException(\"Right type is null!\");\n        }\n        Class<?> r = PRIMITIVE_TYPE_COMPATIBLE_CLASSES.get(leftType);\n        return r == rightType;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"private static String convertPropertyName(String prop) {\n\t\tif(Character.isUpperCase(prop.charAt(0)) && Character.isUpperCase(prop.charAt(1))) {\n\t\t\treturn prop;\n\t\t}\n\t\telse if(Character.isDigit(prop.charAt(0))) {\n\t\t\treturn prop;\n\t\t}\n\t\telse {\n\t\t\treturn Character.toLowerCase(prop.charAt(0)) + prop.substring(1);\n\t\t}\n\t}","id":107051,"modified_method":"private static String convertPropertyName(String prop) {\n        if(Character.isUpperCase(prop.charAt(0)) && Character.isUpperCase(prop.charAt(1))) {\n            return prop;\n        }\n        if(Character.isDigit(prop.charAt(0))) {\n            return prop;\n        }\n        return Character.toLowerCase(prop.charAt(0)) + prop.substring(1);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Retrieves a PropertyDescriptor for the specified instance and property value\n     *\n     * @param instance The instance\n     * @param propertyValue The value of the property\n     * @return The PropertyDescriptor\n     */\n    public static PropertyDescriptor getPropertyDescriptorForValue(Object instance, Object propertyValue) {\n        if(instance == null || propertyValue == null)\n            return null;\n\n        PropertyDescriptor[] descriptors = BeanUtils.getPropertyDescriptors(instance.getClass());\n\n        for (int i = 0; i < descriptors.length; i++) {\n        \tPropertyDescriptor pd=descriptors[i];\n        \tif(isAssignableOrConvertibleFrom(pd.getPropertyType(), propertyValue.getClass())) {\n        \t\tObject value;\n\t\t\t\ttry {\n\t\t\t   \t\tReflectionUtils.makeAccessible(pd.getReadMethod());\n\t\t\t   \t\tvalue = pd.getReadMethod().invoke(instance, (Object[]) null);\t\t\t\t\t\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tthrow new FatalBeanException(\"Problem calling readMethod of \" + pd, e);\n\t\t\t\t}\n        \t\tif(propertyValue.equals(value))\n        \t\t\treturn pd;\n        \t}\n        }\n        return null;\n    }","id":107052,"modified_method":"/**\n     * Retrieves a PropertyDescriptor for the specified instance and property value\n     *\n     * @param instance The instance\n     * @param propertyValue The value of the property\n     * @return The PropertyDescriptor\n     */\n    public static PropertyDescriptor getPropertyDescriptorForValue(Object instance, Object propertyValue) {\n        if(instance == null || propertyValue == null) {\n            return null;\n        }\n\n        PropertyDescriptor[] descriptors = BeanUtils.getPropertyDescriptors(instance.getClass());\n        for (PropertyDescriptor pd : descriptors) {\n            if (isAssignableOrConvertibleFrom(pd.getPropertyType(), propertyValue.getClass())) {\n                Object value;\n                try {\n                    ReflectionUtils.makeAccessible(pd.getReadMethod());\n                    value = pd.getReadMethod().invoke(instance);\n                }\n                catch (Exception e) {\n                    throw new FatalBeanException(\"Problem calling readMethod of \" + pd, e);\n                }\n                if (propertyValue.equals(value)) {\n                    return pd;\n                }\n            }\n        }\n        return null;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Returns the property name representation of the given name\n     *\n     * @param name The name to convert\n     * @return The property name representation\n     * @deprecated Use {@link grails.util.GrailsNameUtils#getPropertyNameRepresentation(String)} instead.\n     */\n    public static String getPropertyNameRepresentation(String name) {\n        // Strip any package from the name.\n        int pos = name.lastIndexOf('.');\n        if (pos != -1) {\n            name = name.substring(pos + 1);\n        }\n\n        // Check whether the name begins with two upper case letters.\n        if(name.length() > 1 && Character.isUpperCase(name.charAt(0)) && Character.isUpperCase(name.charAt(1)))  {\n            return name;\n        }\n        else {\n\n            String propertyName = name.substring(0,1).toLowerCase(Locale.ENGLISH) + name.substring(1);\n            if(propertyName.indexOf(' ') > -1) {\n                propertyName = propertyName.replaceAll(\"\\\\s\", \"\");\n            }\n            return propertyName;\n        }\n    }","id":107053,"modified_method":"/**\n     * Returns the property name representation of the given name\n     *\n     * @param name The name to convert\n     * @return The property name representation\n     * @deprecated Use {@link grails.util.GrailsNameUtils#getPropertyNameRepresentation(String)} instead.\n     */\n    public static String getPropertyNameRepresentation(String name) {\n        // Strip any package from the name.\n        int pos = name.lastIndexOf('.');\n        if (pos != -1) {\n            name = name.substring(pos + 1);\n        }\n\n        // Check whether the name begins with two upper case letters.\n        if(name.length() > 1 && Character.isUpperCase(name.charAt(0)) && Character.isUpperCase(name.charAt(1)))  {\n            return name;\n        }\n        String propertyName = name.substring(0,1).toLowerCase(Locale.ENGLISH) + name.substring(1);\n        if(propertyName.indexOf(' ') > -1) {\n            propertyName = propertyName.replaceAll(\"\\\\s\", \"\");\n        }\n        return propertyName;\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Just add two entries to the class compatibility map\n     * @param left\n     * @param right\n     */\n    private static final void registerPrimitiveClassPair(Class left, Class right)\n    {\n        PRIMITIVE_TYPE_COMPATIBLE_CLASSES.put( left, right);\n        PRIMITIVE_TYPE_COMPATIBLE_CLASSES.put( right, left);\n    }","id":107054,"modified_method":"/**\n     * Just add two entries to the class compatibility map\n     * @param left\n     * @param right\n     */\n    private static final void registerPrimitiveClassPair(Class<?> left, Class<?> right) {\n        PRIMITIVE_TYPE_COMPATIBLE_CLASSES.put(left, right);\n        PRIMITIVE_TYPE_COMPATIBLE_CLASSES.put(right, left);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Returns true if the specified clazz parameter is either the same as, or is a superclass or superinterface \n     * of, the specified type parameter. Converts primitive types to compatible class automatically.\n     * \n     * @param clazz\n     * @param type\n     * @return True if the class is a taglib\n     * @see java.lang.Class#isAssignableFrom(Class)\n     */\n    public static boolean isAssignableOrConvertibleFrom(Class clazz, Class type) {\n    \tif (type == null || clazz == null) {\n    \t\treturn false;\n    \t}\n    \telse if (type.isPrimitive()) {\n    \t\t// convert primitive type to compatible class \n    \t\tClass primitiveClass = (Class)GrailsClassUtils.PRIMITIVE_TYPE_COMPATIBLE_CLASSES.get(type);\n    \t\tif (primitiveClass == null) {\n    \t\t\t// no compatible class found for primitive type\n    \t\t\treturn false;\n    \t\t}\n    \t\telse {\n    \t\t\treturn clazz.isAssignableFrom(primitiveClass);\n    \t\t}\n    \t}\n    \telse {\n    \t\treturn clazz.isAssignableFrom(type);\n    \t}\n    }","id":107055,"modified_method":"/**\n     * Returns true if the specified clazz parameter is either the same as, or is a superclass or superinterface\n     * of, the specified type parameter. Converts primitive types to compatible class automatically.\n     *\n     * @param clazz\n     * @param type\n     * @return True if the class is a taglib\n     * @see java.lang.Class#isAssignableFrom(Class)\n     */\n    public static boolean isAssignableOrConvertibleFrom(Class<?> clazz, Class<?> type) {\n        if (type == null || clazz == null) {\n            return false;\n        }\n        if (type.isPrimitive()) {\n            // convert primitive type to compatible class\n            Class<?> primitiveClass = GrailsClassUtils.PRIMITIVE_TYPE_COMPATIBLE_CLASSES.get(type);\n            if (primitiveClass == null) {\n                // no compatible class found for primitive type\n                return false;\n            }\n            return clazz.isAssignableFrom(primitiveClass);\n        }\n        return clazz.isAssignableFrom(type);\n    }","commit_id":"0c0318a68f6ba5a58dbc869492bec32729c124d3","url":"https://github.com/grails/grails-core"},{"original_method":"public void readExternal(Element element) throws InvalidDataException {\n    myGroupPath = new ArrayList<String>();\n    for (Iterator<Element> iterator = element.getChildren(PATH).iterator(); iterator.hasNext();) {\n      Element o = iterator.next();\n      myGroupPath.add(o.getAttributeValue(VALUE));\n    }\n    final String attributeValue = element.getAttributeValue(VALUE);\n    if (element.getAttributeValue(IS_ACTION) != null) {\n      myComponent = attributeValue;\n    }\n    else if (element.getAttributeValue(SEPERATOR) != null) {\n      myComponent = Separator.getInstance();\n    }\n    else if (element.getAttributeValue(IS_GROUP) != null) {\n      final AnAction action = ActionManager.getInstance().getAction(attributeValue);\n      myComponent = new Group(action != null ? action.getTemplatePresentation().getText() : attributeValue, attributeValue, null, null);\n    }\n    myActionType = Integer.parseInt(element.getAttributeValue(ACTION_TYPE));\n    myAbsolutePosition = Integer.parseInt(element.getAttributeValue(POSITION));\n    DefaultJDOMExternalizer.readExternal(this, element);\n  }","id":107056,"modified_method":"public void readExternal(Element element) throws InvalidDataException {\n    myGroupPath = new ArrayList<String>();\n    for (Iterator<Element> iterator = element.getChildren(PATH).iterator(); iterator.hasNext();) {\n      Element o = iterator.next();\n      myGroupPath.add(o.getAttributeValue(VALUE));\n    }\n    final String attributeValue = element.getAttributeValue(VALUE);\n    if (element.getAttributeValue(IS_ACTION) != null) {\n      myComponent = attributeValue;\n    }\n    else if (element.getAttributeValue(SEPERATOR) != null) {\n      myComponent = Separator.getInstance();\n    }\n    else if (element.getAttributeValue(IS_GROUP) != null) {\n      final AnAction action = ActionManager.getInstance().getAction(attributeValue);\n      myComponent = action != null ? ActionsTreeUtil.createGroup((ActionGroup)action, true) : new Group(attributeValue, attributeValue, null, null);\n    }\n    myActionType = Integer.parseInt(element.getAttributeValue(ACTION_TYPE));\n    myAbsolutePosition = Integer.parseInt(element.getAttributeValue(POSITION));\n    DefaultJDOMExternalizer.readExternal(this, element);\n  }","commit_id":"e771b3f1f3e30cb566999be119e8bb5a11f8e786","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static Group createGroup(ActionGroup actionGroup, boolean ignore) {\n    final String name = actionGroup.getTemplatePresentation().getText();\n    return createGroup(actionGroup, name != null ? name : ActionManager.getInstance().getId(actionGroup), null, null, ignore);\n  }","id":107057,"modified_method":"public static Group createGroup(ActionGroup actionGroup, boolean ignore) {\n    final String name = actionGroup.getTemplatePresentation().getText();\n    return createGroup(actionGroup, name != null ? name : ActionManager.getInstance().getId(actionGroup), null, null, ignore);\n  }","commit_id":"e771b3f1f3e30cb566999be119e8bb5a11f8e786","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ActionGroup getMainToolbarActionsGroup(){\n    return CustomizationUtil.correctActionGroup((ActionGroup)ActionManager.getInstance().getAction(IdeActions.GROUP_MAIN_TOOLBAR), this, ActionsTreeUtil.MAIN_TOOLBAR);\n  }","id":107058,"modified_method":"public ActionGroup getMainToolbarActionsGroup(){\n    if (myMainToolabarActionGroup == null){\n      myMainToolabarActionGroup = CustomizationUtil.correctActionGroup((ActionGroup)ActionManager.getInstance().getAction(IdeActions.GROUP_MAIN_TOOLBAR), this, ActionsTreeUtil.MAIN_TOOLBAR);\n    }\n    return myMainToolabarActionGroup;\n  }","commit_id":"e771b3f1f3e30cb566999be119e8bb5a11f8e786","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ActionGroup getMainMenuActionGroup(){\n    return CustomizationUtil.correctActionGroup((ActionGroup)ActionManager.getInstance().getAction(IdeActions.GROUP_MAIN_MENU), this, ActionsTreeUtil.MAIN_MENU_TITLE);\n  }","id":107059,"modified_method":"public ActionGroup getMainMenuActionGroup(){\n    if (myMainMenuActionGroup == null){\n      myMainMenuActionGroup = CustomizationUtil.correctActionGroup((ActionGroup)ActionManager.getInstance().getAction(IdeActions.GROUP_MAIN_MENU), this, ActionsTreeUtil.MAIN_MENU_TITLE);\n    }\n    return myMainMenuActionGroup;\n  }","commit_id":"e771b3f1f3e30cb566999be119e8bb5a11f8e786","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ActionGroup getEditorPopupGroup() {\n    return CustomizationUtil.correctActionGroup((ActionGroup)ActionManager.getInstance().getAction(IdeActions.GROUP_EDITOR_POPUP), this, ActionsTreeUtil.EDITOR_POPUP);\n  }","id":107060,"modified_method":"public ActionGroup getEditorPopupGroup() {\n    if (myEditorPopupActionGroup == null){\n       myEditorPopupActionGroup = CustomizationUtil.correctActionGroup((ActionGroup)ActionManager.getInstance().getAction(IdeActions.GROUP_EDITOR_POPUP), this, ActionsTreeUtil.EDITOR_POPUP);\n    }\n    return myEditorPopupActionGroup;\n  }","commit_id":"e771b3f1f3e30cb566999be119e8bb5a11f8e786","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void apply(){\n    if (mySelectedSchema != null){\n      CustomizationUtil.optimizeSchema(myActionsTree, mySelectedSchema);\n    }\n    final CustomizableActionsSchemas allSchemasComponent = CustomizableActionsSchemas.getInstance();\n    allSchemasComponent.clear();\n    for (int i = 0; i < myCustomizationSchemas.getSize(); i++){\n      final CustomActionsSchema schema = (CustomActionsSchema)myCustomizationSchemas.getElementAt(i);\n      allSchemasComponent.addCustomActionsSchema(schema);\n    }\n    allSchemasComponent.setActiveSchema(mySelectedSchema);\n    setCustomizationSchemaForCurrentProjects();\n    reset();\n  }","id":107061,"modified_method":"public void apply(){\n    if (mySelectedSchema != null){\n      CustomizationUtil.optimizeSchema(myActionsTree, mySelectedSchema);\n    }\n    final CustomizableActionsSchemas allSchemasComponent = CustomizableActionsSchemas.getInstance();\n    allSchemasComponent.clear();\n    for (int i = 0; i < myCustomizationSchemas.getSize(); i++){\n      final CustomActionsSchema schema = (CustomActionsSchema)myCustomizationSchemas.getElementAt(i);\n      if (schema.isModified()){\n        schema.resetMainActionGroups();\n      }\n      allSchemasComponent.addCustomActionsSchema(schema);\n    }\n    allSchemasComponent.setActiveSchema(mySelectedSchema);\n    setCustomizationSchemaForCurrentProjects();\n    reset();\n  }","commit_id":"e771b3f1f3e30cb566999be119e8bb5a11f8e786","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static AnAction [] getReordableChildren(ActionGroup group, CustomActionsSchema schema, String defaultGroupName, AnActionEvent e) {\n     String text = group.getTemplatePresentation().getText();\n     ActionManager actionManager = ActionManager.getInstance();\n     final ArrayList<AnAction> reordableChildren = new ArrayList<AnAction>();\n     reordableChildren.addAll(Arrays.asList(group.getChildren(e)));\n     final List<ActionUrl> actions = schema.getActions();\n     for (Iterator<ActionUrl> iterator = actions.iterator(); iterator.hasNext();) {\n       ActionUrl actionUrl = iterator.next();\n       if ((actionUrl.getParentGroup().equals(text) ||\n            actionUrl.getParentGroup().equals(defaultGroupName) ||\n            actionUrl.getParentGroup().equals(actionManager.getId(group))) &&\n           reordableChildren.size() > actionUrl.getAbsolutePosition()) {\n         AnAction componentAction = actionUrl.getComponentAction();\n         if (componentAction != null) {\n           if (actionUrl.getActionType() == ActionUrl.ADDED) {\n\n             reordableChildren.add(actionUrl.getAbsolutePosition(), componentAction);\n           }\n           else if (actionUrl.getActionType() == ActionUrl.DELETED) {\n             final AnAction anAction = reordableChildren.get(actionUrl.getAbsolutePosition());\n             //for unnamed groups\n             if (anAction.getTemplatePresentation().getText() == null && anAction instanceof ActionGroup) {\n               final Group eqGroup = new Group(null, null, null);\n               ActionsTreeUtil.fillGroupIgnorePopupFlag((ActionGroup)anAction, eqGroup, true);\n               if (!actionUrl.getComponent().equals(eqGroup)) {\n                 continue;\n               }\n             }\n             if (anAction.getTemplatePresentation().getText() == null\n                 ? componentAction.getTemplatePresentation().getText() != null\n                 : !anAction.getTemplatePresentation().getText().equals(componentAction.getTemplatePresentation().getText())) {\n               continue;\n             }\n             reordableChildren.remove(actionUrl.getAbsolutePosition());\n           }\n         }\n       }\n     }\n     for (int i = 0; i < reordableChildren.size(); i++) {\n       if (reordableChildren.get(i) instanceof ActionGroup) {\n         final ActionGroup groupToCorrect = (ActionGroup)reordableChildren.get(i);\n         final AnAction correctedAction = correctActionGroup(groupToCorrect, schema, \"\");\n         reordableChildren.set(i, correctedAction);\n       }\n     }\n\n     return reordableChildren.toArray(new AnAction[reordableChildren.size()]);\n   }","id":107062,"modified_method":"private static AnAction [] getReordableChildren(ActionGroup group, CustomActionsSchema schema, String defaultGroupName, AnActionEvent e) {\n     String text = group.getTemplatePresentation().getText();\n     ActionManager actionManager = ActionManager.getInstance();\n     final ArrayList<AnAction> reordableChildren = new ArrayList<AnAction>();\n     reordableChildren.addAll(Arrays.asList(group.getChildren(e)));\n     final List<ActionUrl> actions = schema.getActions();\n     for (Iterator<ActionUrl> iterator = actions.iterator(); iterator.hasNext();) {\n       ActionUrl actionUrl = iterator.next();\n       if ((actionUrl.getParentGroup().equals(text) ||\n            actionUrl.getParentGroup().equals(defaultGroupName) ||\n            actionUrl.getParentGroup().equals(actionManager.getId(group))) &&\n           reordableChildren.size() > actionUrl.getAbsolutePosition()) {\n         AnAction componentAction = actionUrl.getComponentAction();\n         if (componentAction != null) {\n           if (actionUrl.getActionType() == ActionUrl.ADDED) {\n\n             reordableChildren.add(actionUrl.getAbsolutePosition(), componentAction);\n           }\n           else if (actionUrl.getActionType() == ActionUrl.DELETED) {\n             final AnAction anAction = reordableChildren.get(actionUrl.getAbsolutePosition());\n             //for unnamed groups\n             if (anAction.getTemplatePresentation().getText() == null && anAction instanceof ActionGroup) {\n               final Group eqGroup = ActionsTreeUtil.createGroup((ActionGroup)anAction, true);\n               if (!actionUrl.getComponent().equals(eqGroup)) {\n                 continue;\n               }\n             }\n             if (anAction.getTemplatePresentation().getText() == null\n                 ? componentAction.getTemplatePresentation().getText() != null\n                 : !anAction.getTemplatePresentation().getText().equals(componentAction.getTemplatePresentation().getText())) {\n               continue;\n             }\n             reordableChildren.remove(actionUrl.getAbsolutePosition());\n           }\n         }\n       }\n     }\n     for (int i = 0; i < reordableChildren.size(); i++) {\n       if (reordableChildren.get(i) instanceof ActionGroup) {\n         final ActionGroup groupToCorrect = (ActionGroup)reordableChildren.get(i);\n         final AnAction correctedAction = correctActionGroup(groupToCorrect, schema, \"\");\n         reordableChildren.set(i, correctedAction);\n       }\n     }\n\n     return reordableChildren.toArray(new AnAction[reordableChildren.size()]);\n   }","commit_id":"e771b3f1f3e30cb566999be119e8bb5a11f8e786","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  public PsiElementVisitor buildVisitor(@NotNull final ProblemsHolder holder, final boolean isOnTheFly, final LocalInspectionToolSession session) {\n    final Visitor visitor = new Visitor(holder, session, ignoredIdentifiers);\n    session.putUserData(KEY, visitor);\n    return visitor;\n  }","id":107063,"modified_method":"@NotNull\n  @Override\n  public PsiElementVisitor buildVisitor(@NotNull final ProblemsHolder holder, final boolean isOnTheFly, final LocalInspectionToolSession session) {\n    final Visitor visitor = new Visitor(holder, session, ignoredIdentifiers);\n    // buildVisitor() will be called on injected files in the same session - don't overwrite if we already have one\n    final Visitor existingVisitor = session.getUserData(KEY);\n    if (existingVisitor == null) {\n      session.putUserData(KEY, visitor);\n    }\n    return visitor;\n  }","commit_id":"ce7a1d8b390d729ab2ce229120cfa31939605a46","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public PsiElementVisitor buildVisitor(@NotNull ProblemsHolder holder, boolean isOnTheFly, LocalInspectionToolSession session) {\n    final PyUnusedLocalInspectionVisitor visitor = new PyUnusedLocalInspectionVisitor(holder, ignoreTupleUnpacking, ignoreLambdaParameters,\n                                                                                      ignoreLoopIterationVariables);\n    session.putUserData(KEY, visitor);\n    return visitor;\n  }","id":107064,"modified_method":"@NotNull\n  public PsiElementVisitor buildVisitor(@NotNull ProblemsHolder holder, boolean isOnTheFly, LocalInspectionToolSession session) {\n    final PyUnusedLocalInspectionVisitor visitor = new PyUnusedLocalInspectionVisitor(holder, ignoreTupleUnpacking, ignoreLambdaParameters,\n                                                                                      ignoreLoopIterationVariables);\n    // buildVisitor() will be called on injected files in the same session - don't overwrite if we already have one\n    final PyUnusedLocalInspectionVisitor existingVisitor = session.getUserData(KEY);\n    if (existingVisitor == null) {\n      session.putUserData(KEY, visitor);\n    }\n    return visitor;\n  }","commit_id":"ce7a1d8b390d729ab2ce229120cfa31939605a46","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void trackInvalidation(@NotNull PsiElement element, @NotNull Processor<PsiElement> callback) {\n    final ASTNode node = element.getNode();\n    if (node != null) {\n      node.putUserData(TRACK_INVALIDATION_KEY, callback);\n    }\n  }","id":107065,"modified_method":"public static void trackInvalidation(@NotNull PsiElement element, @NotNull Object requestor, @NotNull Processor<PsiElement> callback) {\n    synchronized (element) {\n      final ASTNode node = element.getNode();\n      if (node == null) return;\n      List<Pair<Object, Processor<PsiElement>>> callbacks = node.getUserData(TRACK_INVALIDATION_KEY);\n      if (callbacks == null) {\n        callbacks = new SmartList<Pair<Object, Processor<PsiElement>>>();\n        node.putUserData(TRACK_INVALIDATION_KEY, callbacks);\n      }\n      for (int i = 0; i < callbacks.size(); i++) {\n        Pair<Object, Processor<PsiElement>> pair = callbacks.get(i);\n        Object callbackRequestor = pair.first;\n        if (callbackRequestor.equals(requestor)) {\n          callbacks.set(i, Pair.create(requestor, callback));\n          return;\n        }\n      }\n      callbacks.add(Pair.create(requestor, callback));\n    }\n  }","commit_id":"d0131e9a0a71c741ca860a0fead3e512f23e622f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void onInvalidated(@NotNull TreeElement treeElement) {\n    treeElement.acceptTree(new RecursiveTreeElementWalkingVisitor() {\n      @Override\n      protected void visitNode(TreeElement element) {\n        Processor<PsiElement> callback = element.getUserData(TRACK_INVALIDATION_KEY);\n        if (callback != null) {\n          PsiElement psi = element.getPsi();\n          if (psi != null) callback.process(psi);\n        }\n      }\n    });\n  }","id":107066,"modified_method":"public static void onInvalidated(@NotNull TreeElement treeElement) {\n    treeElement.acceptTree(new RecursiveTreeElementWalkingVisitor() {\n      @Override\n      protected void visitNode(TreeElement element) {\n        List<Pair<Object, Processor<PsiElement>>> callbacks = element.getUserData(TRACK_INVALIDATION_KEY);\n        if (callbacks != null) {\n          for (Pair<Object, Processor<PsiElement>> pair : callbacks) {\n            Processor<PsiElement> callback = pair.second;\n            PsiElement psi = element.getPsi();\n            if (psi != null) callback.process(psi);\n          }\n        }\n      }\n    });\n  }","commit_id":"d0131e9a0a71c741ca860a0fead3e512f23e622f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public <T extends PsiExpression> PsiType getType(@NotNull T expr, @NotNull Function<T, PsiType> f) {\n    PsiType type = myCalculatedTypes.get(expr);\n    if (type == null) {\n      type = f.fun(expr);\n      if (type == null) {\n        type = TypeConversionUtil.NULL_TYPE;\n      }\n      type = ConcurrencyUtil.cacheOrGet(myCalculatedTypes, expr, type);\n      if (type instanceof PsiClassReferenceType) {\n        PsiJavaCodeReferenceElement reference = ((PsiClassReferenceType)type).getReference();\n        myCachedReferencesInPsiTypes.put(reference, type);\n      }\n      if (DebugUtil.DO_EXPENSIVE_CHECKS) {\n        DebugUtil.trackInvalidation(expr, new Processor<PsiElement>() {\n          @Override\n          public boolean process(PsiElement element) {\n            PsiType cached = myCalculatedTypes.get(element);\n            if (cached != null) {\n              LOG.error(element + \" is invalid and yet it is still cached: \" + cached);\n            }\n\n            PsiType cachedRef = myCachedReferencesInPsiTypes.get(element);\n            if (cachedRef != null) {\n              LOG.error(element + \" is invalid and yet it is still cached (inside PsiType): \" + cachedRef);\n            }\n            return true;\n          }\n        });\n      }\n    }\n    if (!type.isValid()) {\n      if (expr.isValid()) {\n        LOG.error(\"Type is invalid: \" + type + \" (\" + type.getClass() + \"); expr: '\" + expr + \"' is valid\");\n      }\n      else {\n        LOG.error(\"Expression: '\"+expr+\"' is invalid, must not be used for getType()\");\n      }\n    }\n    return type == TypeConversionUtil.NULL_TYPE ? null : type;\n  }","id":107067,"modified_method":"@Nullable\n  public <T extends PsiExpression> PsiType getType(@NotNull T expr, @NotNull Function<T, PsiType> f) {\n    PsiType type = myCalculatedTypes.get(expr);\n    if (type == null) {\n      type = f.fun(expr);\n      if (type == null) {\n        type = TypeConversionUtil.NULL_TYPE;\n      }\n      type = ConcurrencyUtil.cacheOrGet(myCalculatedTypes, expr, type);\n    }\n    if (!type.isValid()) {\n      if (expr.isValid()) {\n        PsiJavaCodeReferenceElement refInside = type instanceof PsiClassReferenceType ? ((PsiClassReferenceType)type).getReference() : null;\n        String typeinfo = type + \" (\" + type.getClass() + \")\" + (refInside == null ? \"\" : \"; ref inside: \"+refInside + \" (\"+refInside.getClass()+\") valid:\"+refInside.isValid());\n        LOG.error(\"Type is invalid: \" + typeinfo + \"; expr: '\" + expr + \"' (\" + expr.getClass() + \") is valid\");\n      }\n      else {\n        LOG.error(\"Expression: '\"+expr+\"' is invalid, must not be used for getType()\");\n      }\n    }\n\n    if (DebugUtil.DO_EXPENSIVE_CHECKS) {\n      if (type instanceof PsiClassReferenceType) {\n        PsiJavaCodeReferenceElement reference = ((PsiClassReferenceType)type).getReference();\n        myCachedReferencesInPsiTypes.put(reference, type);\n        DebugUtil.trackInvalidation(reference, \"Reference inside PsiClassReferenceType was invalidated\", new Processor<PsiElement>() {\n          @Override\n          public boolean process(PsiElement element) {\n            PsiType cached = myCalculatedTypes.get(element);\n            if (cached != null) {\n              LOG.error(element + \" (inside ref) is invalid and yet it is still cached: \" + cached);\n            }\n            PsiType cachedRef = myCachedReferencesInPsiTypes.get(element);\n            if (cachedRef != null) {\n              LOG.error(element + \" (inside ref) is invalid and yet it is still cached in ref cache: \" + cachedRef);\n            }\n            return true;\n          }\n        });\n\n      }\n      DebugUtil.trackInvalidation(expr, \"Expression invalidated\", new Processor<PsiElement>() {\n        @Override\n        public boolean process(PsiElement element) {\n          PsiType cached = myCalculatedTypes.get(element);\n          if (cached != null) {\n            LOG.error(element + \" is invalid and yet it is still cached: \" + cached);\n          }\n\n          PsiType cachedRef = myCachedReferencesInPsiTypes.get(element);\n          if (cachedRef != null) {\n            LOG.error(element + \" is invalid and yet it is still cached (inside PsiType): \" + cachedRef);\n          }\n          return true;\n        }\n      });\n    }\n\n    return type == TypeConversionUtil.NULL_TYPE ? null : type;\n  }","commit_id":"d0131e9a0a71c741ca860a0fead3e512f23e622f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/** Initialize the ResourceLoader  */\n    public void init(A_OpenCms openCms) {\n        m_cache = (CmsFlexCache)openCms.getRuntimeProperty(this.C_LOADER_CACHENAME);\n        if (m_cache == null) {\n            source.org.apache.java.util.Configurations c = openCms.getConfiguration();\n            boolean enabled = c.getBoolean(\"flex.cache.enabled\", true);\n            boolean cacheOffline = c.getBoolean(\"flex.cache.offline\", true);\n            m_cache = new CmsFlexCache(enabled, cacheOffline);\n            openCms.setRuntimeProperty(this.C_LOADER_CACHENAME, m_cache);\n        }        \n        log(this.getClass().getName() + \" initialized!\");        \n    }","id":107068,"modified_method":"/** Initialize the ResourceLoader  */\n    public void init(A_OpenCms openCms) {\n        m_cache = (CmsFlexCache)openCms.getRuntimeProperty(this.C_LOADER_CACHENAME);\n        if (m_cache == null) {\n            m_cache = new CmsFlexCache( openCms );\n            openCms.setRuntimeProperty(this.C_LOADER_CACHENAME, m_cache);\n        }        \n        log(this.getClass().getName() + \" initialized!\");        \n    }","commit_id":"ceb3358a8b84990e631451ddb07e6e41f468c56d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** \n     * Initialize the ResourceLoader.\n     * Here the cache is created in case it does not exist already. \n     *\n     * @param openCms An OpenCms object to use for initalizing.\n     */\n    public void init(A_OpenCms openCms) {\n        m_jspRepository = com.opencms.boot.CmsBase.getBasePath();\n        if (m_jspRepository.indexOf(\"WEB-INF\") >= 0) {\n            // Should always be true, just make sure we don't generate an exception in untested environments\n            m_jspRepository = m_jspRepository.substring(0, m_jspRepository.indexOf(\"WEB-INF\")-1);\n        }\n        source.org.apache.java.util.Configurations c = openCms.getConfiguration();\n        m_jspWebAppRepository = c.getString(\"flex.jsp.repository\", \"/WEB-INF/jsp\");\n        m_jspRepository += m_jspWebAppRepository.replace('/', File.separatorChar);\n        if (! m_jspRepository.endsWith(File.separator)) m_jspRepository += File.separator;\n        if (DEBUG > 0) System.err.println(\"JspLoader: Setting jsp repository to \" + m_jspRepository);\n        m_cache = (CmsFlexCache)openCms.getRuntimeProperty(this.C_LOADER_CACHENAME);\n        m_context = (javax.servlet.ServletContext)openCms.getRuntimeProperty(\"context\");\n        if (m_cache == null) {\n            boolean enabled = c.getBoolean(\"flex.cache.enabled\", true);\n            boolean cacheOffline = c.getBoolean(\"flex.cache.offline\", true);\n            m_cache = new CmsFlexCache(enabled, cacheOffline);\n            openCms.setRuntimeProperty(this.C_LOADER_CACHENAME, m_cache);\n        }\n        log(\"Initialized!\");        \n        log(\"JSP repository (absolute path): \" + m_jspRepository);        \n        log(\"JSP repository (web application path): \" + m_jspWebAppRepository);              \n    }","id":107069,"modified_method":"/** \n     * Initialize the ResourceLoader.\n     * Here the cache is created in case it does not exist already. \n     *\n     * @param openCms An OpenCms object to use for initalizing.\n     */\n    public void init(A_OpenCms openCms) {\n        m_jspRepository = com.opencms.boot.CmsBase.getBasePath();\n        if (m_jspRepository.indexOf(\"WEB-INF\") >= 0) {\n            // Should always be true, just make sure we don't generate an exception in untested environments\n            m_jspRepository = m_jspRepository.substring(0, m_jspRepository.indexOf(\"WEB-INF\")-1);\n        }\n        source.org.apache.java.util.Configurations c = openCms.getConfiguration();\n        m_jspWebAppRepository = c.getString(\"flex.jsp.repository\", \"/WEB-INF/jsp\");\n        m_jspRepository += m_jspWebAppRepository.replace('/', File.separatorChar);\n        if (! m_jspRepository.endsWith(File.separator)) m_jspRepository += File.separator;\n        if (DEBUG > 0) System.err.println(\"JspLoader: Setting jsp repository to \" + m_jspRepository);\n        m_cache = (CmsFlexCache)openCms.getRuntimeProperty(this.C_LOADER_CACHENAME);\n        m_context = (javax.servlet.ServletContext)openCms.getRuntimeProperty(\"context\");\n        if (m_cache == null) {\n            m_cache = new CmsFlexCache( openCms );\n            openCms.setRuntimeProperty(this.C_LOADER_CACHENAME, m_cache);\n        }\n        log(\"Initialized!\");        \n        log(\"JSP repository (absolute path): \" + m_jspRepository);        \n        log(\"JSP repository (web application path): \" + m_jspWebAppRepository);              \n    }","commit_id":"ceb3358a8b84990e631451ddb07e6e41f468c56d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** Initialize the ResourceLoader  */\n    public void init(A_OpenCms openCms) {\n        // This must be saved for call to this.generateOutput();\n        m_openCms = openCms;\n        m_cache = (CmsFlexCache)openCms.getRuntimeProperty(this.C_LOADER_CACHENAME);\n        if (m_cache == null) {\n            source.org.apache.java.util.Configurations c = openCms.getConfiguration();\n            boolean enabled = c.getBoolean(\"flex.cache.enabled\", true);\n            boolean cacheOffline = c.getBoolean(\"flex.cache.offline\", true);\n            m_cache = new CmsFlexCache(enabled, cacheOffline);\n            m_openCms.setRuntimeProperty(this.C_LOADER_CACHENAME, m_cache);\n        }        \n        log(this.getClass().getName() + \" initialized!\");     \n    }","id":107070,"modified_method":"/** Initialize the ResourceLoader  */\n    public void init(A_OpenCms openCms) {\n        // This must be saved for call to this.generateOutput();\n        m_openCms = openCms;\n        m_cache = (CmsFlexCache)openCms.getRuntimeProperty(this.C_LOADER_CACHENAME);\n        if (m_cache == null) {\n            m_cache = new CmsFlexCache( openCms );\n            m_openCms.setRuntimeProperty(this.C_LOADER_CACHENAME, m_cache);\n        }        \n        log(this.getClass().getName() + \" initialized!\");     \n    }","commit_id":"ceb3358a8b84990e631451ddb07e6e41f468c56d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"@Override\n    public void run() {\n      if (isDisabled()) return;\n\n      if (!myVirtualFile.isValid()) {\n        log(\"BaseRevisionLoader: for file \" + myVirtualFile.getPath() + \" failed: virtual file not valid\");\n        reportTrackerBaseLoadFailed();\n        return;\n      }\n\n      final Pair<VcsRevisionNumber, String> baseRevision = myStatusProvider.getBaseRevision(myVirtualFile);\n      if (baseRevision == null) {\n        log(\"BaseRevisionLoader: for file \" + myVirtualFile.getPath() + \" failed: null returned for base revision\");\n        reportTrackerBaseLoadFailed();\n        return;\n      }\n\n      // loads are sequential (in single threaded QueueProcessor);\n      // so myLoadCounter can't take less value for greater base revision -> the only thing we want from it\n      final LineStatusTracker.RevisionPack revisionPack = new LineStatusTracker.RevisionPack(myLoadCounter, baseRevision.first);\n      myLoadCounter++;\n\n      final String converted = StringUtil.convertLineSeparators(baseRevision.second);\n      final Runnable runnable = new Runnable() {\n        public void run() {\n          synchronized (myLock) {\n            log(\"BaseRevisionLoader: initializing tracker for file \" + myVirtualFile.getPath());\n            final LineStatusTracker tracker = myLineStatusTrackers.get(myDocument);\n            if (tracker != null) {\n              tracker.initialize(converted, revisionPack);\n            }\n          }\n        }\n      };\n      nonModalAliveInvokeLater(runnable);\n    }","id":107071,"modified_method":"@Override\n    public void run() {\n      if (isDisabled()) return;\n\n      if (!myVirtualFile.isValid()) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"BaseRevisionLoader: for file \" + myVirtualFile.getPath() + \" failed: virtual file not valid\");\n        }\n        reportTrackerBaseLoadFailed();\n        return;\n      }\n\n      final Pair<VcsRevisionNumber, String> baseRevision = myStatusProvider.getBaseRevision(myVirtualFile);\n      if (baseRevision == null) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"BaseRevisionLoader: for file \" + myVirtualFile.getPath() + \" failed: null returned for base revision\");\n        }\n        reportTrackerBaseLoadFailed();\n        return;\n      }\n\n      // loads are sequential (in single threaded QueueProcessor);\n      // so myLoadCounter can't take less value for greater base revision -> the only thing we want from it\n      final LineStatusTracker.RevisionPack revisionPack = new LineStatusTracker.RevisionPack(myLoadCounter, baseRevision.first);\n      myLoadCounter++;\n\n      final String converted = StringUtil.convertLineSeparators(baseRevision.second);\n      final Runnable runnable = new Runnable() {\n        public void run() {\n          synchronized (myLock) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"BaseRevisionLoader: initializing tracker for file \" + myVirtualFile.getPath());\n            }\n            final LineStatusTracker tracker = myLineStatusTrackers.get(myDocument);\n            if (tracker != null) {\n              tracker.initialize(converted, revisionPack);\n            }\n          }\n        }\n      };\n      nonModalAliveInvokeLater(runnable);\n    }","commit_id":"f24041c583b64668deaeff2887a8503cd8cb05b6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean shouldBeInstalled(@Nullable final VirtualFile virtualFile) {\n    myApplication.assertIsDispatchThread();\n    if (isDisabled()) return false;\n\n    if (virtualFile == null || virtualFile instanceof LightVirtualFile) return false;\n    if (!virtualFile.isInLocalFileSystem()) return false;\n    final FileStatusManager statusManager = FileStatusManager.getInstance(myProject);\n    if (statusManager == null) return false;\n    final AbstractVcs activeVcs = myVcsManager.getVcsFor(virtualFile);\n    if (activeVcs == null) {\n      log(\"shouldBeInstalled: for file \" + virtualFile.getPath() + \" failed: no active VCS\");\n      return false;\n    }\n    final FileStatus status = statusManager.getStatus(virtualFile);\n    if (status == FileStatus.NOT_CHANGED || status == FileStatus.ADDED || status == FileStatus.UNKNOWN || status == FileStatus.IGNORED) {\n      log(\"shouldBeInstalled: for file \" + virtualFile.getPath() + \" skipped: status=\" + status);\n      return false;\n    }\n    return true;\n  }","id":107072,"modified_method":"private boolean shouldBeInstalled(@Nullable final VirtualFile virtualFile) {\n    myApplication.assertIsDispatchThread();\n    if (isDisabled()) return false;\n\n    if (virtualFile == null || virtualFile instanceof LightVirtualFile) return false;\n    if (!virtualFile.isInLocalFileSystem()) return false;\n    final FileStatusManager statusManager = FileStatusManager.getInstance(myProject);\n    if (statusManager == null) return false;\n    final AbstractVcs activeVcs = myVcsManager.getVcsFor(virtualFile);\n    if (activeVcs == null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"shouldBeInstalled: for file \" + virtualFile.getPath() + \" failed: no active VCS\");\n      }\n      return false;\n    }\n    final FileStatus status = statusManager.getStatus(virtualFile);\n    if (status == FileStatus.NOT_CHANGED || status == FileStatus.ADDED || status == FileStatus.UNKNOWN || status == FileStatus.IGNORED) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"shouldBeInstalled: for file \" + virtualFile.getPath() + \" skipped: status=\" + status);\n      }\n      return false;\n    }\n    return true;\n  }","commit_id":"f24041c583b64668deaeff2887a8503cd8cb05b6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void resetTrackersForOpenFiles() {\n    myApplication.assertReadAccessAllowed();\n    if (isDisabled()) return;\n\n    log(\"resetTrackersForOpenFiles\");\n\n    final VirtualFile[] openFiles = myFileEditorManager.getOpenFiles();\n    for (final VirtualFile openFile : openFiles) {\n      resetTracker(openFile);\n    }\n  }","id":107073,"modified_method":"private void resetTrackersForOpenFiles() {\n    myApplication.assertReadAccessAllowed();\n    if (isDisabled()) return;\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"resetTrackersForOpenFiles\");\n    }\n\n    final VirtualFile[] openFiles = myFileEditorManager.getOpenFiles();\n    for (final VirtualFile openFile : openFiles) {\n      resetTracker(openFile);\n    }\n  }","commit_id":"f24041c583b64668deaeff2887a8503cd8cb05b6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void resetTracker(@NotNull final VirtualFile virtualFile) {\n    myApplication.assertReadAccessAllowed();\n    if (isDisabled()) return;\n\n    final Document document = FileDocumentManager.getInstance().getCachedDocument(virtualFile);\n    if (document == null) {\n      log(\"resetTracker: no cached document for \" + virtualFile.getPath());\n      return;\n    }\n\n    log(\"resetTracker: for file \" + virtualFile.getPath());\n\n    final boolean editorOpened = myFileEditorManager.isFileOpen(virtualFile);\n    final boolean shouldBeInstalled = editorOpened && shouldBeInstalled(virtualFile);\n\n    synchronized (myLock) {\n      final LineStatusTracker tracker = myLineStatusTrackers.get(document);\n\n      log(\"resetTracker: shouldBeInstalled - \" + shouldBeInstalled + \", tracker - \" + (tracker == null ? \"null\" : \"found\"));\n\n      if (tracker != null && shouldBeInstalled) {\n        refreshTracker(tracker);\n      }\n      else if (tracker != null) {\n        releaseTracker(document);\n      }\n      else if (shouldBeInstalled) {\n        installTracker(virtualFile, document);\n      }\n    }\n  }","id":107074,"modified_method":"private void resetTracker(@NotNull final VirtualFile virtualFile) {\n    myApplication.assertReadAccessAllowed();\n    if (isDisabled()) return;\n\n    final Document document = FileDocumentManager.getInstance().getCachedDocument(virtualFile);\n    if (document == null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"resetTracker: no cached document for \" + virtualFile.getPath());\n      }\n      return;\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"resetTracker: for file \" + virtualFile.getPath());\n    }\n\n    final boolean editorOpened = myFileEditorManager.isFileOpen(virtualFile);\n    final boolean shouldBeInstalled = editorOpened && shouldBeInstalled(virtualFile);\n\n    synchronized (myLock) {\n      final LineStatusTracker tracker = myLineStatusTrackers.get(document);\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"resetTracker: shouldBeInstalled - \" + shouldBeInstalled + \", tracker - \" + (tracker == null ? \"null\" : \"found\"));\n      }\n\n      if (tracker != null && shouldBeInstalled) {\n        refreshTracker(tracker);\n      }\n      else if (tracker != null) {\n        releaseTracker(document);\n      }\n      else if (shouldBeInstalled) {\n        installTracker(virtualFile, document);\n      }\n    }\n  }","commit_id":"f24041c583b64668deaeff2887a8503cd8cb05b6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings(\"unchecked\")\r\n  public void writeResult(Object iResult, final String iFormat, final String accept) throws InterruptedException, IOException {\r\n    if (iResult == null)\r\n      send(OHttpUtils.STATUS_OK_NOCONTENT_CODE, \"\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null);\r\n    else {\r\n      final Object newResult;\r\n      if (isJSObject(iResult)) {\r\n        newResult = Collections.singleton(new ODocument().field(\"value\", iResult)).iterator();\r\n      } else if (iResult instanceof Map<?, ?>) {\r\n        newResult = ((Map<?, ?>) iResult).entrySet().iterator();\r\n      } else if (OMultiValue.isMultiValue(iResult)\r\n          && (OMultiValue.getSize(iResult) > 0 && !(OMultiValue.getFirstValue(iResult) instanceof OIdentifiable))) {\r\n        newResult = Collections.singleton(new ODocument().field(\"value\", iResult)).iterator();\r\n      } else if (iResult instanceof OIdentifiable) {\r\n        // CONVERT SIGLE VALUE IN A COLLECTION\r\n        newResult = Collections.singleton(iResult).iterator();\r\n      } else if (iResult instanceof Iterable<?>)\r\n        newResult = ((Iterable<OIdentifiable>) iResult).iterator();\r\n      else if (OMultiValue.isMultiValue(iResult))\r\n        newResult = OMultiValue.getMultiValueIterator(iResult);\r\n      else {\r\n        newResult = Collections.singleton(new ODocument().field(\"value\", iResult)).iterator();\r\n      }\r\n\r\n      if (newResult == null)\r\n        send(OHttpUtils.STATUS_OK_NOCONTENT_CODE, \"\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null);\r\n      else\r\n        writeRecords(newResult, null, iFormat, accept);\r\n    }\r\n  }","id":107075,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n  public void writeResult(Object iResult, final String iFormat, final String accept) throws InterruptedException, IOException {\r\n    if (iResult == null) {\r\n      send(OHttpUtils.STATUS_OK_NOCONTENT_CODE, \"\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null);\r\n    } else {\r\n      final Object newResult;\r\n\r\n      if (iResult instanceof Map) {\r\n        ODocument doc = new ODocument();\r\n        for (Map.Entry<?, ?> entry : ((Map<?, ?>) iResult).entrySet()) {\r\n          String key = keyFromMapObject(entry.getKey());\r\n          doc.field(key, entry.getValue());\r\n        }\r\n        newResult = Collections.singleton(doc).iterator();\r\n      } else if (OMultiValue.isMultiValue(iResult)\r\n          && (OMultiValue.getSize(iResult) > 0 && !(OMultiValue.getFirstValue(iResult) instanceof OIdentifiable))) {\r\n        newResult = Collections.singleton(new ODocument().field(\"value\", iResult)).iterator();\r\n      } else if (iResult instanceof OIdentifiable) {\r\n        // CONVERT SIGLE VALUE IN A COLLECTION\r\n        newResult = Collections.singleton(iResult).iterator();\r\n      } else if (iResult instanceof Iterable<?>) {\r\n        newResult = ((Iterable<OIdentifiable>) iResult).iterator();\r\n      } else if (OMultiValue.isMultiValue(iResult)) {\r\n        newResult = OMultiValue.getMultiValueIterator(iResult);\r\n      } else {\r\n        newResult = Collections.singleton(new ODocument().field(\"value\", iResult)).iterator();\r\n      }\r\n\r\n      if (newResult == null) {\r\n        send(OHttpUtils.STATUS_OK_NOCONTENT_CODE, \"\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null);\r\n      } else {\r\n        writeRecords(newResult, null, iFormat, accept);\r\n      }\r\n    }\r\n  }","commit_id":"5753032b8e6f56100cac062323f880c0da07f078","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void writeRecords(final Object iRecords, final String iFetchPlan, String iFormat, final String accept) throws IOException {\r\n    if (iRecords == null)\r\n      return;\r\n\r\n    final Iterator<Object> it = OMultiValue.getMultiValueIterator(iRecords);\r\n\r\n    if (accept != null && accept.contains(\"text/csv\")) {\r\n      sendStream(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_JSON, \"data.csv\", new OCallable<Void, OChunkedResponse>() {\r\n\r\n        @Override\r\n        public Void call(final OChunkedResponse iArgument) {\r\n          final LinkedHashSet<String> colNames = new LinkedHashSet<String>();\r\n          final List<ODocument> records = new ArrayList<ODocument>();\r\n\r\n          // BROWSE ALL THE RECORD TO HAVE THE COMPLETE COLUMN\r\n          // NAMES LIST\r\n          while (it.hasNext()) {\r\n            final Object r = it.next();\r\n            if (r != null && r instanceof OIdentifiable) {\r\n              final ORecord rec = ((OIdentifiable) r).getRecord();\r\n              if (rec != null) {\r\n                if (rec instanceof ODocument) {\r\n                  final ODocument doc = (ODocument) rec;\r\n                  records.add(doc);\r\n\r\n                  for (String fieldName : doc.fieldNames())\r\n                    colNames.add(fieldName);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          final List<String> orderedColumns = new ArrayList<String>(colNames);\r\n\r\n          try {\r\n            // WRITE THE HEADER\r\n            for (int col = 0; col < orderedColumns.size(); ++col) {\r\n              if (col > 0)\r\n                iArgument.write(',');\r\n              iArgument.write(orderedColumns.get(col).getBytes());\r\n            }\r\n            iArgument.write(OHttpUtils.EOL);\r\n\r\n            // WRITE EACH RECORD\r\n            for (ODocument doc : records) {\r\n              for (int col = 0; col < orderedColumns.size(); ++col) {\r\n                if (col > 0)\r\n                  iArgument.write(',');\r\n\r\n                Object value = doc.field(orderedColumns.get(col));\r\n                if (value != null) {\r\n                  if (!(value instanceof Number))\r\n                    value = \"\\\"\" + value + \"\\\"\";\r\n                  iArgument.write(value.toString().getBytes());\r\n                }\r\n              }\r\n              iArgument.write(OHttpUtils.EOL);\r\n            }\r\n\r\n            iArgument.flush();\r\n\r\n          } catch (IOException e) {\r\n            OLogManager.instance().error(this, \"HTTP response: error on writing records\", e);\r\n          }\r\n\r\n          return null;\r\n        }\r\n      });\r\n    } else {\r\n      if (iFormat == null)\r\n        iFormat = JSON_FORMAT;\r\n      else\r\n        iFormat = JSON_FORMAT + \",\" + iFormat;\r\n\r\n      final StringWriter buffer = new StringWriter();\r\n      final OJSONWriter json = new OJSONWriter(buffer, iFormat);\r\n      json.beginObject();\r\n\r\n      final String format = iFetchPlan != null ? iFormat + \",fetchPlan:\" + iFetchPlan : iFormat;\r\n\r\n      // WRITE RECORDS\r\n      json.beginCollection(-1, true, \"result\");\r\n      formatMultiValue(it, buffer, format);\r\n      json.endCollection(-1, true);\r\n\r\n      json.endObject();\r\n      send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_JSON, buffer.toString(), null);\r\n    }\r\n  }","id":107076,"modified_method":"public void writeRecords(final Object iRecords, final String iFetchPlan, String iFormat, final String accept) throws IOException {\r\n    if (iRecords == null) {\r\n      return;\r\n    }\r\n\r\n    final Iterator<Object> it = OMultiValue.getMultiValueIterator(iRecords);\r\n\r\n    if (accept != null && accept.contains(\"text/csv\")) {\r\n      sendStream(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_JSON, \"data.csv\", new OCallable<Void, OChunkedResponse>() {\r\n\r\n        @Override\r\n        public Void call(final OChunkedResponse iArgument) {\r\n          final LinkedHashSet<String> colNames = new LinkedHashSet<String>();\r\n          final List<ODocument> records = new ArrayList<ODocument>();\r\n\r\n          // BROWSE ALL THE RECORD TO HAVE THE COMPLETE COLUMN\r\n          // NAMES LIST\r\n          while (it.hasNext()) {\r\n            final Object r = it.next();\r\n            if (r != null && r instanceof OIdentifiable) {\r\n              final ORecord rec = ((OIdentifiable) r).getRecord();\r\n              if (rec != null) {\r\n                if (rec instanceof ODocument) {\r\n                  final ODocument doc = (ODocument) rec;\r\n                  records.add(doc);\r\n\r\n                  for (String fieldName : doc.fieldNames()) {\r\n                    colNames.add(fieldName);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          final List<String> orderedColumns = new ArrayList<String>(colNames);\r\n\r\n          try {\r\n            // WRITE THE HEADER\r\n            for (int col = 0; col < orderedColumns.size(); ++col) {\r\n              if (col > 0) {\r\n                iArgument.write(',');\r\n              }\r\n              iArgument.write(orderedColumns.get(col).getBytes());\r\n            }\r\n            iArgument.write(OHttpUtils.EOL);\r\n\r\n            // WRITE EACH RECORD\r\n            for (ODocument doc : records) {\r\n              for (int col = 0; col < orderedColumns.size(); ++col) {\r\n                if (col > 0) {\r\n                  iArgument.write(',');\r\n                }\r\n\r\n                Object value = doc.field(orderedColumns.get(col));\r\n                if (value != null) {\r\n                  if (!(value instanceof Number)) {\r\n                    value = \"\\\"\" + value + \"\\\"\";\r\n                  }\r\n                  iArgument.write(value.toString().getBytes());\r\n                }\r\n              }\r\n              iArgument.write(OHttpUtils.EOL);\r\n            }\r\n\r\n            iArgument.flush();\r\n\r\n          } catch (IOException e) {\r\n            OLogManager.instance().error(this, \"HTTP response: error on writing records\", e);\r\n          }\r\n\r\n          return null;\r\n        }\r\n      });\r\n    } else {\r\n      if (iFormat == null) {\r\n        iFormat = JSON_FORMAT;\r\n      } else {\r\n        iFormat = JSON_FORMAT + \",\" + iFormat;\r\n      }\r\n\r\n      final StringWriter buffer = new StringWriter();\r\n      final OJSONWriter json = new OJSONWriter(buffer, iFormat);\r\n      json.beginObject();\r\n\r\n      final String format = iFetchPlan != null ? iFormat + \",fetchPlan:\" + iFetchPlan : iFormat;\r\n\r\n      // WRITE RECORDS\r\n      json.beginCollection(-1, true, \"result\");\r\n      formatMultiValue(it, buffer, format);\r\n      json.endCollection(-1, true);\r\n\r\n      json.endObject();\r\n      send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_JSON, buffer.toString(), null);\r\n    }\r\n  }","commit_id":"5753032b8e6f56100cac062323f880c0da07f078","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@SuppressWarnings(\"unchecked\")\r\n  public void writeResult(Object iResult, final String iFormat, final String accept) throws InterruptedException, IOException {\r\n    if (iResult == null)\r\n      send(OHttpUtils.STATUS_OK_NOCONTENT_CODE, \"\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null, true);\r\n    else {\r\n      if (iResult instanceof Map<?, ?>) {\r\n        iResult = ((Map<?, ?>) iResult).entrySet().iterator();\r\n      } else if (OMultiValue.isMultiValue(iResult)\r\n          && (OMultiValue.getSize(iResult) > 0 && !(OMultiValue.getFirstValue(iResult) instanceof OIdentifiable))) {\r\n        final List<OIdentifiable> resultSet = new ArrayList<OIdentifiable>();\r\n        resultSet.add(new ODocument().field(\"value\", iResult));\r\n        iResult = resultSet.iterator();\r\n\r\n      } else if (iResult instanceof OIdentifiable) {\r\n        // CONVERT SIGLE VALUE IN A COLLECTION\r\n        final List<OIdentifiable> resultSet = new ArrayList<OIdentifiable>();\r\n        resultSet.add((OIdentifiable) iResult);\r\n        iResult = resultSet.iterator();\r\n      } else if (iResult instanceof Iterable<?>)\r\n        iResult = ((Iterable<OIdentifiable>) iResult).iterator();\r\n      else if (OMultiValue.isMultiValue(iResult))\r\n        iResult = OMultiValue.getMultiValueIterator(iResult);\r\n      else {\r\n        final List<OIdentifiable> resultSet = new ArrayList<OIdentifiable>();\r\n        resultSet.add(new ODocument().field(\"value\", iResult));\r\n        iResult = resultSet.iterator();\r\n      }\r\n\r\n      if (iResult == null)\r\n        send(OHttpUtils.STATUS_OK_NOCONTENT_CODE, \"\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null, true);\r\n      else if (iResult instanceof Iterator<?>)\r\n        writeRecords(iResult, null, iFormat, accept);\r\n    }\r\n  }","id":107077,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n  public void writeResult(Object iResult, final String iFormat, final String accept) throws InterruptedException, IOException {\r\n    if (iResult == null)\r\n      send(OHttpUtils.STATUS_OK_NOCONTENT_CODE, \"\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null, true);\r\n    else {\r\n      final Object newResult;\r\n      if (isJSObject(iResult)) {\r\n        newResult = Collections.singleton(new ODocument().field(\"value\", iResult)).iterator();\r\n      } else if (iResult instanceof Map<?, ?>) {\r\n        newResult = ((Map<?, ?>) iResult).entrySet().iterator();\r\n      } else if (OMultiValue.isMultiValue(iResult)\r\n          && (OMultiValue.getSize(iResult) > 0 && !(OMultiValue.getFirstValue(iResult) instanceof OIdentifiable))) {\r\n        newResult = Collections.singleton(new ODocument().field(\"value\", iResult)).iterator();\r\n      } else if (iResult instanceof OIdentifiable) {\r\n        // CONVERT SIGLE VALUE IN A COLLECTION\r\n        newResult = Collections.singleton(iResult).iterator();\r\n      } else if (iResult instanceof Iterable<?>)\r\n        newResult = ((Iterable<OIdentifiable>) iResult).iterator();\r\n      else if (OMultiValue.isMultiValue(iResult))\r\n        newResult = OMultiValue.getMultiValueIterator(iResult);\r\n      else {\r\n        newResult = Collections.singleton(new ODocument().field(\"value\", iResult)).iterator();\r\n      }\r\n\r\n      if (newResult == null)\r\n        send(OHttpUtils.STATUS_OK_NOCONTENT_CODE, \"\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null, true);\r\n      else\r\n        writeRecords(newResult, null, iFormat, accept);\r\n    }\r\n  }","commit_id":"ae455c2138707c4f5da3598f81c01a0d91cd7e19","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@SuppressWarnings(\"unchecked\")\r\n  public void writeResult(Object iResult, final String iFormat, final String accept) throws InterruptedException, IOException {\r\n    if (iResult == null)\r\n      send(OHttpUtils.STATUS_OK_NOCONTENT_CODE, \"\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null, true);\r\n    else {\r\n      if (iResult instanceof Map<?, ?>) {\r\n        iResult = ((Map<?, ?>) iResult).entrySet().iterator();\r\n      } else if (OMultiValue.isMultiValue(iResult)\r\n          && (OMultiValue.getSize(iResult) > 0 && !(OMultiValue.getFirstValue(iResult) instanceof OIdentifiable))) {\r\n        final List<OIdentifiable> resultSet = new ArrayList<OIdentifiable>();\r\n        resultSet.add(new ODocument().field(\"value\", iResult));\r\n        iResult = resultSet.iterator();\r\n\r\n      } else if (iResult instanceof OIdentifiable) {\r\n        // CONVERT SIGLE VALUE IN A COLLECTION\r\n        final List<OIdentifiable> resultSet = new ArrayList<OIdentifiable>();\r\n        resultSet.add((OIdentifiable) iResult);\r\n        iResult = resultSet.iterator();\r\n      } else if (iResult instanceof Iterable<?>)\r\n        iResult = ((Iterable<OIdentifiable>) iResult).iterator();\r\n      else if (OMultiValue.isMultiValue(iResult))\r\n        iResult = OMultiValue.getMultiValueIterator(iResult);\r\n      else {\r\n        final List<OIdentifiable> resultSet = new ArrayList<OIdentifiable>();\r\n        resultSet.add(new ODocument().field(\"value\", iResult));\r\n        iResult = resultSet.iterator();\r\n      }\r\n\r\n      if (iResult == null)\r\n        send(OHttpUtils.STATUS_OK_NOCONTENT_CODE, \"\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null, true);\r\n      else if (iResult instanceof Iterator<?>)\r\n        writeRecords(iResult, null, iFormat, accept);\r\n    }\r\n  }","id":107078,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n  public void writeResult(Object iResult, final String iFormat, final String accept) throws InterruptedException, IOException {\r\n    if (iResult == null)\r\n      send(OHttpUtils.STATUS_OK_NOCONTENT_CODE, \"\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null, true);\r\n    else {\r\n      final Object newResult;\r\n      if (isJSObject(iResult)) {\r\n        newResult = Collections.singleton(new ODocument().field(\"value\", iResult)).iterator();\r\n      } else if (iResult instanceof Map<?, ?>) {\r\n        newResult = ((Map<?, ?>) iResult).entrySet().iterator();\r\n      } else if (OMultiValue.isMultiValue(iResult)\r\n          && (OMultiValue.getSize(iResult) > 0 && !(OMultiValue.getFirstValue(iResult) instanceof OIdentifiable))) {\r\n        newResult = Collections.singleton(new ODocument().field(\"value\", iResult)).iterator();\r\n      } else if (iResult instanceof OIdentifiable) {\r\n        // CONVERT SIGLE VALUE IN A COLLECTION\r\n        newResult = Collections.singleton(iResult).iterator();\r\n      } else if (iResult instanceof Iterable<?>)\r\n        newResult = ((Iterable<OIdentifiable>) iResult).iterator();\r\n      else if (OMultiValue.isMultiValue(iResult))\r\n        newResult = OMultiValue.getMultiValueIterator(iResult);\r\n      else {\r\n        newResult = Collections.singleton(new ODocument().field(\"value\", iResult)).iterator();\r\n      }\r\n\r\n      if (newResult == null)\r\n        send(OHttpUtils.STATUS_OK_NOCONTENT_CODE, \"\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null, true);\r\n      else\r\n        writeRecords(newResult, null, iFormat, accept);\r\n    }\r\n  }","commit_id":"c2a8d96573e0eaad5a1c22be4f7baccae27916be","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n    protected MessageReceiver createReceiver(FlowConstruct flowConstuct, InboundEndpoint endpoint) throws Exception\n    {\n        MessageReceiver receiver =  super.createReceiver(flowConstuct, endpoint);\n        BayeuxHolder holder = registerBayeuxEndpoint(receiver.getEndpoint());\n        ((AjaxMessageReceiver) receiver).setBayeux(holder.getBayeux());\n        return receiver;\n    }","id":107079,"modified_method":"@Override\n    protected MessageReceiver createReceiver(FlowConstruct flowConstruct, InboundEndpoint endpoint) throws Exception\n    {\n        MessageReceiver receiver = getServiceDescriptor().createMessageReceiver(this, flowConstruct, endpoint);\n        //If the connector has not started yet, the Bayeux object will still be null\n        ((AjaxMessageReceiver) receiver).setBayeux(getBayeux());\n        return receiver;\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"protected org.mortbay.jetty.AbstractConnector createJettyConnector()\n    {\n        return new SelectChannelConnector();\n    }","id":107080,"modified_method":"@Override\n    protected AbstractConnector createJettyConnector()\n    {\n        if(serverUrl.getProtocol().equals(\"https\"))\n        {\n            return super.createJettyConnector();\n        }\n        else\n        {\n            return new SelectChannelConnector();\n        }\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    protected void doInitialise() throws InitialisationException\n    {\n        try\n        {\n            muleContext.registerListener(this);\n        }\n        catch (NotificationException e)\n        {\n            throw new InitialisationException(e, this);\n        }\n\n        httpServer = new Server();\n    }","id":107081,"modified_method":"@Override\n    protected void doInitialise() throws InitialisationException\n    {\n        if(serverUrl==null)\n        {\n            throw new InitialisationException(AjaxMessages.serverUrlNotDefined(), this);\n        }\n        super.doInitialise();\n        try\n        {\n            createEmbeddedServer();\n        }\n        catch (Exception e)\n        {\n            throw new InitialisationException(e, this);\n        }\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"public AjaxConnector(MuleContext context)\n    {\n        super(context);\n        registerSupportedProtocol(\"ajax\");\n        setInitialStateStopped(true);\n    }","id":107082,"modified_method":"public AjaxConnector(MuleContext context)\n    {\n        super(context);\n        unregisterSupportedProtocol(\"http\");\n        unregisterSupportedProtocol(\"https\");\n        unregisterSupportedProtocol(\"jetty-ssl\");\n        unregisterSupportedProtocol(\"jetty\");\n        setInitialStateStopped(true);\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"protected ContinuationCometdServlet createServletForConnector(Connector connector, ImmutableEndpoint endpoint) throws MuleException\n    {\n        ContinuationCometdServlet servlet = new MuleAjaxServlet();\n\n//        String path = endpoint.getEndpointURI().getPath();\n//        if(StringUtils.isBlank(path))\n//        {\n//            path = \"/\";\n//        }\n        Context context = new Context(this.getHttpServer(), \"/\", Context.NO_SECURITY);\n        context.setConnectorNames(new String[]{connector.getName()});\n        context.addEventListener(new AjaxServletContextListener(muleContext, getName()));\n\n        ServletHolder holder = new ServletHolder();\n        holder.setServlet(servlet);\n        String resourceBase = (String)endpoint.getProperty(RESOURCE_BASE_PROPERTY);\n        if(resourceBase!=null)\n        {\n                context.setResourceBase(resourceBase);\n        }\n\n        context.addServlet(MuleJarResourcesServlet.class, MuleJarResourcesServlet.DEFAULT_PATH_SPEC);\n        context.addServlet(holder, SERVLET_PATH_SPEC);\n        context.addServlet(DefaultServlet.class, \"/\");\n\n\n        if(getInterval() != INT_VALUE_NOT_SET) holder.setInitParameter(\"interval\", Integer.toString(getInterval()));\n        holder.setInitParameter(\"JSONCommented\", Boolean.toString(isJsonCommented()));\n        if(getLogLevel() != INT_VALUE_NOT_SET) holder.setInitParameter(\"logLevel\", Integer.toString(getLogLevel()));\n        if(getMaxInterval() != INT_VALUE_NOT_SET) holder.setInitParameter(\"maxInterval\", Integer.toString(getMaxInterval()));\n        if(getMultiFrameInterval() != INT_VALUE_NOT_SET) holder.setInitParameter(\"multiFrameInterval\", (Integer.toString(getMultiFrameInterval())));\n        if(getTimeout() != INT_VALUE_NOT_SET) holder.setInitParameter(\"timeout\", Integer.toString(getTimeout()));\n        if(getRefsThreshold() != INT_VALUE_NOT_SET) holder.setInitParameter(\"refsThreshold\", Integer.toString(getRefsThreshold()));\n        holder.setInitParameter(\"requestAvailable\", Boolean.toString(isRequestAvailable()));\n\n        return servlet;\n    }","id":107083,"modified_method":"public Servlet createServlet(Connector connector, ImmutableEndpoint endpoint)\n    {\n        ContinuationCometdServlet servlet = new MuleAjaxServlet();\n\n        String path = endpoint.getEndpointURI().getPath();\n        if(StringUtils.isBlank(path))\n        {\n            path = ROOT;\n        }\n\n        ContextHandlerCollection handlerCollection = new ContextHandlerCollection();\n        Context root = new Context(handlerCollection, ROOT, Context.NO_SECURITY);\n        root.setConnectorNames(new String[]{connector.getName()});\n        root.addEventListener(new MuleServletContextListener(muleContext, getName()));\n\n        if(!ROOT.equals(path))\n        {\n            Context resourceContext = new Context(handlerCollection, path, Context.NO_SECURITY);\n            populateContext(resourceContext);\n\n        } else\n        {\n            populateContext(root);\n        }\n\n        //Add ajax to root\n        ServletHolder holder = new ServletHolder();\n        holder.setServlet(servlet);\n        root.addServlet(holder, AJAX_PATH_SPEC);\n\n\n        if(getInterval() != INT_VALUE_NOT_SET) holder.setInitParameter(\"interval\", Integer.toString(getInterval()));\n        holder.setInitParameter(\"JSONCommented\", Boolean.toString(isJsonCommented()));\n        if(getLogLevel() != INT_VALUE_NOT_SET) holder.setInitParameter(\"logLevel\", Integer.toString(getLogLevel()));\n        if(getMaxInterval() != INT_VALUE_NOT_SET) holder.setInitParameter(\"maxInterval\", Integer.toString(getMaxInterval()));\n        if(getMultiFrameInterval() != INT_VALUE_NOT_SET) holder.setInitParameter(\"multiFrameInterval\", (Integer.toString(getMultiFrameInterval())));\n        if(getTimeout() != INT_VALUE_NOT_SET) holder.setInitParameter(\"timeout\", Integer.toString(getTimeout()));\n        if(getRefsThreshold() != INT_VALUE_NOT_SET) holder.setInitParameter(\"refsThreshold\", Integer.toString(getRefsThreshold()));\n        holder.setInitParameter(\"requestAvailable\", Boolean.toString(isRequestAvailable()));\n\n\n        this.getHttpServer().addHandler(handlerCollection);\n        return servlet;\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    protected void doStart() throws MuleException\n    {\n       try\n        {\n            httpServer.start();\n        }\n        catch (Exception e)\n        {\n            throw new RuntimeException(CoreMessages.failedToStart(\"Jetty Http Receiver\").getMessage(), e);\n        }\n    }","id":107084,"modified_method":"@Override\n    protected void doStart() throws MuleException\n    {\n        super.doStart();\n        for (MessageReceiver receiver : receivers.values())\n        {\n            ((AjaxMessageReceiver)receiver).setBayeux(getBayeux());\n        }\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"AbstractBayeux getBayeux(ImmutableEndpoint endpoint)\n    {\n         String connectorKey = endpoint.getProtocol() + \":\" + endpoint.getEndpointURI().getHost() + \":\" + endpoint.getEndpointURI().getPort();\n\n        synchronized (this)\n        {\n            BayeuxHolder connectorRef = connectors.get(connectorKey);\n            if(connectorRef!=null)\n            {\n                return connectorRef.servlet.getBayeux();\n            }\n        }\n        throw new IllegalArgumentException(\"Endpoint not registered: \" + connectorKey);\n    }","id":107085,"modified_method":"@Override\n    public ReplyToHandler getReplyToHandler(ImmutableEndpoint endpoint)\n    {\n        return new AjaxReplyToHandler(getDefaultResponseTransformers(endpoint), this);\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    protected void doSetUp() throws Exception\n    {\n        httpServer = new Server(SERVER_PORT);\n\n        Context c = new Context(httpServer, \"/\", Context.SESSIONS);\n        c.addServlet(new ServletHolder(new MuleAjaxServlet()), \"/ajax/*\");\n        c.addEventListener(new AjaxServletContextListener(muleContext, null));\n\n        httpServer.start();\n\n        super.doSetUp();\n    }","id":107086,"modified_method":"@Override\n    protected void doSetUp() throws Exception\n    {\n        httpServer = new Server(SERVER_PORT);\n\n        Context c = new Context(httpServer, \"/\", Context.SESSIONS);\n        c.addServlet(new ServletHolder(new MuleAjaxServlet()), \"/ajax/*\");\n        c.addEventListener(new MuleServletContextListener(muleContext, null));\n\n        httpServer.start();\n\n        super.doSetUp();\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    protected void doSetUp() throws Exception\n    {\n        httpServer = new Server(SERVER_PORT);\n\n        Context c = new Context(httpServer, \"/\", Context.SESSIONS);\n        c.addServlet(new ServletHolder(new MuleAjaxServlet()), \"/ajax/*\");\n        c.addEventListener(new AjaxServletContextListener(muleContext, null)); \n\n        httpServer.start();\n\n        super.doSetUp();\n\n    }","id":107087,"modified_method":"@Override\n    protected void doSetUp() throws Exception\n    {\n        httpServer = new Server(SERVER_PORT);\n\n        Context c = new Context(httpServer, \"/\", Context.SESSIONS);\n        c.addServlet(new ServletHolder(new MuleAjaxServlet()), \"/ajax/*\");\n        c.addEventListener(new MuleServletContextListener(muleContext, null)); \n\n        httpServer.start();\n\n        super.doSetUp();\n\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public String getTestEndpointURI()\n    {\n        return \"ajax:http://0.0.0.0:58080/service/request\";\n    }","id":107088,"modified_method":"@Override\n    public String getTestEndpointURI()\n    {\n        return \"ajax:///request\";\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public Connector createConnector() throws Exception\n    {\n        AjaxConnector c = new AjaxConnector(muleContext);\n        c.setName(\"test\");\n        //By default the connector is not started until the servlet container is up.  We start it here because\n        //this test looks at the connector lifecycle\n        c.setInitialStateStopped(false);\n        return c;\n    }","id":107089,"modified_method":"@Override\n    public Connector createConnector() throws Exception\n    {\n        AjaxConnector c = new AjaxConnector(muleContext);\n        c.setName(\"test\");\n        //By default the connector is not started until the servlet container is up.  We start it here because\n        //this test looks at the connector lifecycle\n        c.setInitialStateStopped(false);\n        c.setServerUrl(new URL(\"http://0.0.0.0:12345\"));\n        return c;\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"public AjaxMessageDispatcher(OutboundEndpoint endpoint)\n    {\n        super(endpoint);\n        cacheMessages = MapUtils.getBoolean(endpoint.getProperties(), \"cacheMessages\", false);\n        messageCacheSize = MapUtils.getInteger(endpoint.getProperties(), \"messageCacheSize\", 500);\n        channel = endpoint.getEndpointURI().getPath();\n    }","id":107090,"modified_method":"public AjaxMessageDispatcher(OutboundEndpoint endpoint) throws CreateException\n    {\n        super(endpoint);\n        cacheMessages = MapUtils.getBoolean(endpoint.getProperties(), \"cacheMessages\", false);\n        messageCacheSize = MapUtils.getInteger(endpoint.getProperties(), \"messageCacheSize\", 500);\n        channel = endpoint.getEndpointURI().getPath();\n        if(StringUtils.isEmpty(channel) || channel.equals(\"/\"))\n        {\n            //TODO i18n\n            throw new CreateException(AjaxMessages.createStaticMessage(\"The subscription path cannot be empty or equal '/'\"), this);\n        }\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"public MessageDispatcher create(OutboundEndpoint endpoint) throws MuleException\n    {\n        AjaxMessageDispatcher dispatcher = new AjaxMessageDispatcher(endpoint);\n\n        if(endpoint.getConnector() instanceof AjaxConnector)\n        {\n            //We're running in embedded mode (i.e. using a Jetty servlet container created by the connector)\n            //so we need to register the endpoint\n            AjaxConnector.BayeuxHolder holder = ((AjaxConnector)endpoint.getConnector()).registerBayeuxEndpoint(endpoint);\n            dispatcher.setBayeux(holder.getBayeux());\n        }\n        else\n        {\n            //We're bound to an existing servlet container, just grab the Bayeux object from the connector, which  would have been\n            //set by the {@link MuleAjaxServlet}\n            AbstractBayeux b = ((AjaxServletConnector)endpoint.getConnector()).getBayeux();\n            if(b==null)\n            {\n                long start = System.currentTimeMillis();\n                //Not the correct use for response time out but if fine for this purpose\n                long timeout = start + endpoint.getResponseTimeout();\n                while(start < timeout)\n                {\n                    try\n                    {\n                        Thread.sleep(1000);\n                        b = ((AjaxServletConnector)endpoint.getConnector()).getBayeux();\n                        if(b!=null) break;\n                    }\n                    catch (InterruptedException e)\n                    {\n                        //ignore\n                    }\n                }\n                throw new IllegalArgumentException(\"Bayeux is null: \" + endpoint.getConnector() + \". Waited for \" +\n                        endpoint.getResponseTimeout() + \" for object to become availble, this usually caused if the servlet container takes a long time to start up\");\n            }\n            dispatcher.setBayeux(b);\n        }\n\n\n        return dispatcher;\n    }","id":107091,"modified_method":"public MessageDispatcher create(OutboundEndpoint endpoint) throws MuleException\n    {\n        AjaxMessageDispatcher dispatcher = new AjaxMessageDispatcher(endpoint);\n\n        if(endpoint.getConnector() instanceof AjaxConnector)\n        {\n            //We're running in embedded mode (i.e. using a Jetty servlet container created by the connector)\n            //so we need to register the endpoint\n            dispatcher.setBayeux(((AjaxConnector)endpoint.getConnector()).getBayeux());\n        }\n        else\n        {\n            //We're bound to an existing servlet container, just grab the Bayeux object from the connector, which  would have been\n            //set by the {@link MuleAjaxServlet}\n            AbstractBayeux b = ((AjaxServletConnector)endpoint.getConnector()).getBayeux();\n            if(b==null)\n            {\n                long start = System.currentTimeMillis();\n                //Not the correct use for response time out but if fine for this purpose\n                long timeout = start + endpoint.getResponseTimeout();\n                while(start < timeout)\n                {\n                    try\n                    {\n                        Thread.sleep(1000);\n                        b = ((AjaxServletConnector)endpoint.getConnector()).getBayeux();\n                        if(b!=null) break;\n                    }\n                    catch (InterruptedException e)\n                    {\n                        //ignore\n                    }\n                }\n                throw new IllegalArgumentException(\"Bayeux is null: \" + endpoint.getConnector() + \". Waited for \" +\n                        endpoint.getResponseTimeout() + \" for object to become availble, this usually caused if the servlet container takes a long time to start up\");\n            }\n            dispatcher.setBayeux(b);\n        }\n\n\n        return dispatcher;\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"public Object route(Client client, Object data) throws Exception\n        {\n            AbstractConnector connector = (AbstractConnector) getConnector();\n            MuleMessage messageToRoute = createMuleMessage(data, endpoint.getEncoding());\n            messageToRoute.setInvocationProperty(AjaxConnector.COMETD_CIENT, client);\n\n            Object replyTo = messageToRoute.getReplyTo();\n            MuleMessage message = AjaxMessageReceiver.this.routeMessage(messageToRoute);\n            //If a replyTo channel is set the client is expecting a response.\n            //Mule does not invoke the replyTo handler if an error occurs, but in this case we want it to.\n            if ((message != null && message.getExceptionPayload() == null) && replyTo != null)\n            {\n                connector.getReplyToHandler(endpoint).processReplyTo(RequestContext.getEvent(), message, replyTo);\n            }\n            return null;\n        }","id":107092,"modified_method":"public Object route(Client client, Object data) throws Exception\n        {\n            AbstractConnector connector = (AbstractConnector) getConnector();\n            MuleMessage messageToRoute = createMuleMessage(data, endpoint.getEncoding());\n            messageToRoute.setInvocationProperty(AjaxConnector.COMETD_CLIENT, client);\n\n            Object replyTo = messageToRoute.getReplyTo();\n            MuleMessage message = AjaxMessageReceiver.this.routeMessage(messageToRoute);\n            //If a replyTo channel is set the client is expecting a response.\n            //Mule does not invoke the replyTo handler if an error occurs, but in this case we want it to.\n            if ((message != null && message.getExceptionPayload() == null) && replyTo != null)\n            {\n                connector.getReplyToHandler(endpoint).processReplyTo(RequestContext.getEvent(), message, replyTo);\n            }\n            return null;\n        }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"public AjaxMessageReceiver(Connector connector, FlowConstruct flowConstruct, InboundEndpoint endpoint)\n            throws CreateException\n    {\n        super(connector, flowConstruct, endpoint);\n        String path = endpoint.getEndpointURI().getPath();\n        if(StringUtils.isEmpty(path) || path.equals(\"/\"))\n        {\n            throw new CreateException(AjaxMessages.createStaticMessage(\"The subscription path cannotbe empty or equal '/'\"), this);\n        }\n    }","id":107093,"modified_method":"public AjaxMessageReceiver(Connector connector, FlowConstruct flowConstruct, InboundEndpoint endpoint)\n            throws CreateException\n    {\n        super(connector, flowConstruct, endpoint);\n        String channel = endpoint.getEndpointURI().getPath();\n        if(StringUtils.isEmpty(channel) || channel.equals(\"/\"))\n        {\n            //TODO i18n\n            throw new CreateException(AjaxMessages.createStaticMessage(\"The subscription path cannot be empty or equal '/'\"), this);\n        }\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"public void init()\n    {\n        registerMetaTransportEndpoints(AjaxConnector.PROTOCOL);\n        registerConnectorDefinitionParser(AjaxConnector.class);\n\n        //registerStandardTransportEndpoints(AjaxServletConnector.PROTOCOL, URIBuilder.SOCKET_ATTRIBUTES);\n        //registerConnectorDefinitionParser(AjaxServletConnector.class);\n\n//        registerStandardTransportEndpoints(AjaxServletConnector.PROTOCOL, URIBuilder.SOCKET_ATTRIBUTES);\n//        registerBeanDefinitionParser(\"servlet-connector\", new MuleOrphanDefinitionParser(AjaxServletConnector.class, true));\n\n       registerBeanDefinitionParser(\"servlet-connector\", new MuleOrphanDefinitionParser(AjaxServletConnector.class, true));\n\n        registerBeanDefinitionParser(\"servlet-endpoint\", new TransportGlobalEndpointDefinitionParser(AjaxServletConnector.PROTOCOL, false, getGlobalEndpointBuilderBeanClass(), new String[]{\"path\"}, new String[]{}));\n        registerBeanDefinitionParser(\"servlet-inbound-endpoint\", new TransportEndpointDefinitionParser(AjaxServletConnector.PROTOCOL, false, getInboundEndpointFactoryBeanClass(), new String[]{\"path\"}, new String[]{}));\n        registerBeanDefinitionParser(\"servlet-outbound-endpoint\", new TransportEndpointDefinitionParser(AjaxServletConnector.PROTOCOL, false, getOutboundEndpointFactoryBeanClass(), new String[]{\"path\"}, new String[]{}));\n    }","id":107094,"modified_method":"public void init()\n    {\n        //Embedded (default) endpoints\n        MuleDefinitionParserConfiguration mdp = registerStandardTransportEndpoints(AjaxConnector.PROTOCOL, new String[]{\"channel\"});\n        mdp.addAlias(AjaxConnector.CHANNEL_PROPERTY, URIBuilder.PATH);\n        registerConnectorDefinitionParser(AjaxConnector.class);\n\n        //SSL support (only for embedded)\n        registerBeanDefinitionParser(\"key-store\", new KeyStoreDefinitionParser());\n        registerBeanDefinitionParser(\"client\", new ClientKeyStoreDefinitionParser());\n        registerBeanDefinitionParser(\"server\", new TrustStoreDefinitionParser());\n        registerBeanDefinitionParser(\"protocol-handler\", new ProtocolHandlerDefinitionParser());\n\n        //Servlet endpoints\n        registerBeanDefinitionParser(\"servlet-connector\", new MuleOrphanDefinitionParser(AjaxServletConnector.class, true));\n        registerBeanDefinitionParser(\"servlet-endpoint\", createServletGlobalEndpointParser(getGlobalEndpointBuilderBeanClass()));\n        registerBeanDefinitionParser(\"servlet-inbound-endpoint\", createServletEndpointParser(getInboundEndpointFactoryBeanClass()));\n        registerBeanDefinitionParser(\"servlet-outbound-endpoint\", createServletEndpointParser(getOutboundEndpointFactoryBeanClass()));\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    protected void doSetUp() throws Exception\n    {\n        httpServer = new Server(SERVER_PORT);\n\n        Context c = new Context(httpServer, \"/\", Context.SESSIONS);\n        c.addServlet(new ServletHolder(new MuleAjaxServlet()), \"/ajax/*\");\n        c.addEventListener(new AjaxServletContextListener(muleContext, null));\n\n        httpServer.start();\n\n        super.doSetUp();\n    }","id":107095,"modified_method":"@Override\n    protected void doSetUp() throws Exception\n    {\n        httpServer = new Server(SERVER_PORT);\n\n        Context c = new Context(httpServer, \"/\", Context.SESSIONS);\n        c.addServlet(new ServletHolder(new MuleAjaxServlet()), \"/ajax/*\");\n        c.addEventListener(new MuleServletContextListener(muleContext, null));\n\n        httpServer.start();\n\n        super.doSetUp();\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"public AjaxReplyToHandler(List<Transformer> transformers, AjaxServletConnector connector)\n    {\n        super(transformers, connector.getMuleContext());\n        this.connector = connector;\n    }","id":107096,"modified_method":"public AjaxReplyToHandler(List<Transformer> transformers, Connector connector)\n    {\n        super(transformers, connector.getMuleContext());\n        this.connector = connector;\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public void processReplyTo(MuleEvent event, MuleMessage returnMessage, Object replyTo) throws MuleException\n    {\n        AbstractBayeux bayeux = connector.getBayeux();\n        Channel channel = bayeux.getChannel(replyTo.toString(), false);\n        if(channel==null)\n        {\n            logger.warn(\"No ajax Channel: \" + replyTo + \". Maybe the client unregistered interest.\");\n            return;\n        }\n        \n        Object ret;\n        if(returnMessage.getExceptionPayload()!=null)\n        {\n            //If we are using RPC make sure we still send something back to the client so that the subscription is cancelled\n            ret = returnMessage.getExceptionPayload().getMessage();\n        }\n        else\n        {\n            returnMessage.applyTransformers(getTransformers());\n            ret = returnMessage.getPayload();\n        }\n        //Publish to interested clients\n        for (Client client : channel.getSubscribers())\n        {\n            channel.publish(client, ret, null);\n        }\n    }","id":107097,"modified_method":"@Override\n    public void processReplyTo(MuleEvent event, MuleMessage returnMessage, Object replyTo) throws MuleException\n    {\n        AbstractBayeux bayeux = ((BayeuxAware)connector).getBayeux();\n        Channel channel = bayeux.getChannel(replyTo.toString(), false);\n        if(channel==null)\n        {\n            logger.warn(\"No ajax Channel: \" + replyTo + \". Maybe the client unregistered interest.\");\n            return;\n        }\n        \n        Object ret;\n        if(returnMessage.getExceptionPayload()!=null)\n        {\n            //If we are using RPC make sure we still send something back to the client so that the subscription is cancelled\n            ret = returnMessage.getExceptionPayload().getMessage();\n        }\n        else\n        {\n            returnMessage.applyTransformers(getTransformers());\n            ret = returnMessage.getPayload();\n        }\n        //Publish to interested clients\n        for (Client client : channel.getSubscribers())\n        {\n            channel.publish(client, ret, null);\n        }\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"public AjaxServletConnector(MuleContext context)\n    {\n        super(context);\n        registerSupportedProtocolWithoutPrefix(\"ajax\");\n        //Dont start until the servletContainer is up\n        setInitialStateStopped(true);\n    }","id":107098,"modified_method":"public AjaxServletConnector(MuleContext context) \n    {\n        super(context);\n        registerSupportedProtocolWithoutPrefix(AjaxConnector.PROTOCOL);\n        //Dont start until the servletContainer is up\n        setInitialStateStopped(true);\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public void init() throws ServletException\n    {\n        super.init();\n        MuleContext muleContext = (MuleContext)getServletContext().getAttribute(MuleProperties.MULE_CONTEXT_PROPERTY);\n        if(muleContext==null)\n        {\n            throw new ServletException(\"Attribute \" + MuleProperties.MULE_CONTEXT_PROPERTY + \" not set on ServletContext\");\n        }\n        String servletConnectorName = getServletConfig().getInitParameter(AJAX_CONNECTOR_NAME_PROPERTY);\n        if (servletConnectorName == null)\n        {\n            servletConnectorName = (String)getServletContext().getAttribute(AJAX_CONNECTOR_NAME_PROPERTY);\n        }\n        \n        if (servletConnectorName == null)\n        {\n            connector = (AjaxServletConnector) new TransportFactory(muleContext).getConnectorByProtocol(getConnectorProtocol());\n            if (connector == null)\n            {\n                connector = new AjaxServletConnector(muleContext);\n                connector.setName(\"ajax.servlet.\" + getServletContext().getServerInfo());\n                try\n                {\n                    muleContext.getRegistry().registerConnector(connector);\n                }\n                catch (MuleException e)\n                {\n                    throw new ServletException(\"Failed to register the AjaxServletConnector\", e);\n                }\n            }\n        }\n        else\n        {\n            connector = (AjaxServletConnector) muleContext.getRegistry().lookupConnector(servletConnectorName);\n            if (connector == null)\n            {\n                throw new ServletException(AjaxMessages.noAjaxConnectorWithName(servletConnectorName, AJAX_CONNECTOR_NAME_PROPERTY).toString());\n            }\n        }\n        connector.setBayeux(getBayeux());\n\n        jsonTransformer = new ObjectToJson();\n        try\n        {\n            connector.getMuleContext().getRegistry().applyProcessorsAndLifecycle(jsonTransformer);\n        }\n        catch (MuleException e)\n        {\n            throw new ServletException(e);\n        }\n    }","id":107099,"modified_method":"@Override\n    public void init() throws ServletException\n    {\n        super.init();\n        MuleContext muleContext = (MuleContext)getServletContext().getAttribute(MuleProperties.MULE_CONTEXT_PROPERTY);\n        if(muleContext==null)\n        {\n            throw new ServletException(\"Attribute \" + MuleProperties.MULE_CONTEXT_PROPERTY + \" not set on ServletContext\");\n        }\n        String servletConnectorName = getServletConfig().getInitParameter(MuleServletContextListener.CONNECTOR_NAME);\n        if (servletConnectorName == null)\n        {\n            servletConnectorName = (String)getServletContext().getAttribute(MuleServletContextListener.CONNECTOR_NAME);\n        }\n        \n        if (servletConnectorName == null)\n        {\n            connector = new TransportFactory(muleContext).getConnectorByProtocol(getConnectorProtocol());\n            if (connector == null)\n            {\n                connector = new AjaxServletConnector(muleContext);\n                connector.setName(\"ajax.servlet.\" + getServletContext().getServerInfo());\n                try\n                {\n                    muleContext.getRegistry().registerConnector(connector);\n                }\n                catch (MuleException e)\n                {\n                    throw new ServletException(\"Failed to register the AjaxServletConnector\", e);\n                }\n            }\n        }\n        else\n        {\n            connector = muleContext.getRegistry().lookupConnector(servletConnectorName);\n            if (connector == null)\n            {\n                throw new ServletException(AjaxMessages.noAjaxConnectorWithName(servletConnectorName, MuleServletContextListener.CONNECTOR_NAME).toString());\n            }\n        }\n        ((BayeuxAware)connector).setBayeux(getBayeux());\n\n        jsonTransformer = new ObjectToJson();\n        try\n        {\n            connector.getMuleContext().getRegistry().applyProcessorsAndLifecycle(jsonTransformer);\n        }\n        catch (MuleException e)\n        {\n            throw new ServletException(e);\n        }\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    protected void doSetUp() throws Exception\n    {\n        super.doSetUp();\n        httpServer = new Server();\n        SelectChannelConnector conn = new SelectChannelConnector();\n        conn.setPort(8881);\n        httpServer.addConnector(conn);\n\n        ServletHandler handler = new ServletHandler();\n        handler.addServletWithMapping(MuleJarResourcesServlet.class, \"/mule-resource/*\");\n\n        httpServer.addHandler(handler);\n\n        httpServer.start();\n    }","id":107100,"modified_method":"@Override\n    protected void doSetUp() throws Exception\n    {\n        super.doSetUp();\n        httpServer = new Server();\n        SelectChannelConnector conn = new SelectChannelConnector();\n        conn.setPort(8881);\n        httpServer.addConnector(conn);\n\n        ServletHandler handler = new ServletHandler();\n        handler.addServletWithMapping(JarResourceServlet.class, \"/mule-resource/*\");\n\n        httpServer.addHandler(handler);\n\n        httpServer.start();\n    }","commit_id":"d4098c78f99c151fa8772c854e6dd0534202a318","url":"https://github.com/mulesoft/mule"},{"original_method":"public static List<INodeSubstituteAction> nodeSubstituteActionsBuilder_ActionsFactory_Content_1167757687265(final IOperationContext operationContext, final NodeSubstituteActionsFactoryContext _context) {\n    List<INodeSubstituteAction> result = new ArrayList<INodeSubstituteAction>();\n    final SNode parentElement;\n    final boolean isMixed;\n    {\n      Calculable calc = new Calculable() {\n\n        public Object calculate() {\n          return ElementUtil.getParentElementDeclaration(_context.getParentNode(), operationContext.getScope());\n        }\n\n      };\n      parentElement = (SNode)calc.calculate();\n    }\n    {\n      Calculable calc = new Calculable() {\n\n        public Object calculate() {\n          return (parentElement == null) || TypeExpression_Behavior.call_isMixed_1183649029971(parentElement);\n        }\n\n      };\n      isMixed = (Boolean)calc.calculate();\n    }\n    {\n      AbstractConceptDeclaration outputConcept = SModelUtil_new.findConceptDeclaration(\"webr.xml.structure.Element\", operationContext.getScope());\n      SNode childConcept = (SNode)_context.getChildConcept();\n      if(SConceptOperations.isSuperConceptOf(childConcept, NameUtil.nodeFQName((SNode)BaseAdapter.fromAdapter(outputConcept)))) {\n        Calculable calc = new Calculable() {\n\n          public Object calculate() {\n            return ElementUtil.getElementDeclarations(parentElement, _context.getParentNode(), operationContext.getScope());\n          }\n\n        };\n        Iterable<SNode> queryResult = (Iterable)calc.calculate();\n        assert queryResult != null;\n        for(SNode item : queryResult) {\n          result.add(new DefaultChildNodeSubstituteAction(item, _context.getParentNode(), _context.getCurrentTargetNode(), _context.getChildSetter(), operationContext.getScope()) {\n\n            public SNode createChildNode(Object parameterObject, SModel model, String pattern) {\n              SNode element = SModelOperations.createNewNode(model, \"webr.xml.structure.Element\", _context.getCurrentTargetNode());\n              SLinkOperations.setTarget(element, \"elementDeclaration\", ((SNode)this.getOutputConcept()), false);\n              SPropertyOperations.set(element, \"isEmpty\", \"\" + (ElementDeclaration_Behavior.call_isEmpty_1183642787202(((SNode)this.getOutputConcept()))));\n              return element;\n            }\n\n            public String getMatchingText(String pattern) {\n              return \"<\" + SPropertyOperations.getString(((SNode)this.getOutputConcept()), \"elementName\");\n            }\n\n          });\n        }\n      }\n    }\n    return result;\n  }","id":107101,"modified_method":"public static List<INodeSubstituteAction> nodeSubstituteActionsBuilder_ActionsFactory_Content_1167757687265(final IOperationContext operationContext, final NodeSubstituteActionsFactoryContext _context) {\n    List<INodeSubstituteAction> result = new ArrayList<INodeSubstituteAction>();\n    final SNode parentElement;\n    final boolean isMixed;\n    {\n      Calculable calc = new Calculable() {\n\n        public Object calculate() {\n          return ElementUtil.getParentElementDeclaration(_context.getParentNode(), operationContext.getScope());\n        }\n\n      };\n      parentElement = (SNode)calc.calculate();\n    }\n    {\n      Calculable calc = new Calculable() {\n\n        public Object calculate() {\n          return (parentElement == null) || TypeExpression_Behavior.call_isMixed_1183649029971(parentElement);\n        }\n\n      };\n      isMixed = (Boolean)calc.calculate();\n    }\n    {\n      AbstractConceptDeclaration outputConcept = SModelUtil_new.findConceptDeclaration(\"webr.xml.structure.Element\", operationContext.getScope());\n      SNode childConcept = (SNode)_context.getChildConcept();\n      if(SConceptOperations.isSuperConceptOf(childConcept, NameUtil.nodeFQName((SNode)BaseAdapter.fromAdapter(outputConcept)))) {\n        Calculable calc = new Calculable() {\n\n          public Object calculate() {\n            return ElementUtil.getElementDeclarations(parentElement, _context.getParentNode(), operationContext.getScope());\n          }\n\n        };\n        Iterable<SNode> queryResult = (Iterable)calc.calculate();\n        assert queryResult != null;\n        for(final SNode item : queryResult) {\n          result.add(new DefaultChildNodeSubstituteAction(outputConcept, item, _context.getParentNode(), _context.getCurrentTargetNode(), _context.getChildSetter(), operationContext.getScope()) {\n\n            public SNode createChildNode(Object parameterObject, SModel model, String pattern) {\n              SNode element = SModelOperations.createNewNode(model, \"webr.xml.structure.Element\", _context.getCurrentTargetNode());\n              SLinkOperations.setTarget(element, \"elementDeclaration\", (item), false);\n              SPropertyOperations.set(element, \"isEmpty\", \"\" + (ElementDeclaration_Behavior.call_isEmpty_1183642787202((item))));\n              return element;\n            }\n\n            public String getMatchingText(String pattern) {\n              return \"<\" + SPropertyOperations.getString((item), \"elementName\");\n            }\n\n          });\n        }\n      }\n    }\n    return result;\n  }","commit_id":"8aa0428daacc44f4da3e28897404b33e55418400","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void removeActionsByCondition_1177863610304(final IOperationContext operationContext, final RemoveSubstituteActionByConditionContext _context) {\n    final SNode parentElement;\n    final boolean isMixed;\n    {\n      Calculable calc = new Calculable() {\n\n        public Object calculate() {\n          return ElementUtil.getParentElementDeclaration(_context.getParentNode(), operationContext.getScope());\n        }\n\n      };\n      parentElement = (SNode)calc.calculate();\n    }\n    {\n      Calculable calc = new Calculable() {\n\n        public Object calculate() {\n          return (parentElement == null) || TypeExpression_Behavior.call_isMixed_1183649029971(parentElement);\n        }\n\n      };\n      isMixed = (Boolean)calc.calculate();\n    }\n    Iterator<INodeSubstituteAction> actions = _context.getActions();\n    while(actions.hasNext()) {\n      INodeSubstituteAction current = actions.next();\n      if(!(current.getOutputConcept() instanceof SNode)) {\n        continue;\n      }\n      final SNode concept = (SNode)current.getOutputConcept();\n      SNode applicableConcept = SConceptOperations.findConceptDeclaration(\"webr.xml.structure.Content\");\n      Condition cond = new Condition() {\n\n        public boolean met(Object object) {\n          return SConceptOperations.isExactly(_context.getChildConcept(), \"webr.xml.structure.Content\") && SConceptOperations.isAssignableFrom(SConceptOperations.findConceptDeclaration(\"webr.xml.structure.BaseText\"), concept) && !(isMixed);\n        }\n\n      };\n      if(SConceptOperations.isAssignableFrom(applicableConcept, concept) && cond.met(null)) {\n        actions.remove();\n      }\n    }\n  }","id":107102,"modified_method":"public static void removeActionsByCondition_1177863610304(final IOperationContext operationContext, final RemoveSubstituteActionByConditionContext _context) {\n    final SNode parentElement;\n    final boolean isMixed;\n    {\n      Calculable calc = new Calculable() {\n\n        public Object calculate() {\n          return ElementUtil.getParentElementDeclaration(_context.getParentNode(), operationContext.getScope());\n        }\n\n      };\n      parentElement = (SNode)calc.calculate();\n    }\n    {\n      Calculable calc = new Calculable() {\n\n        public Object calculate() {\n          return (parentElement == null) || TypeExpression_Behavior.call_isMixed_1183649029971(parentElement);\n        }\n\n      };\n      isMixed = (Boolean)calc.calculate();\n    }\n    Iterator<INodeSubstituteAction> actions = _context.getActions();\n    while(actions.hasNext()) {\n      INodeSubstituteAction current = actions.next();\n      final SNode concept = current.getOutputConcept();\n      SNode applicableConcept = SConceptOperations.findConceptDeclaration(\"webr.xml.structure.Content\");\n      Condition cond = new Condition() {\n\n        public boolean met(Object object) {\n          return SConceptOperations.isExactly(_context.getChildConcept(), \"webr.xml.structure.Content\") && SConceptOperations.isAssignableFrom(SConceptOperations.findConceptDeclaration(\"webr.xml.structure.BaseText\"), concept) && !(isMixed);\n        }\n\n      };\n      if(SConceptOperations.isAssignableFrom(applicableConcept, concept) && cond.met(null)) {\n        actions.remove();\n      }\n    }\n  }","commit_id":"8aa0428daacc44f4da3e28897404b33e55418400","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static List<INodeSubstituteAction> nodeSubstituteActionsBuilder_ActionsFactory_BaseAttribute_1167699332639(final IOperationContext operationContext, final NodeSubstituteActionsFactoryContext _context) {\n    List<INodeSubstituteAction> result = new ArrayList<INodeSubstituteAction>();\n    {\n      AbstractConceptDeclaration outputConcept = SModelUtil_new.findConceptDeclaration(\"webr.xml.structure.Attribute\", operationContext.getScope());\n      SNode childConcept = (SNode)_context.getChildConcept();\n      if(SConceptOperations.isSuperConceptOf(childConcept, NameUtil.nodeFQName((SNode)BaseAdapter.fromAdapter(outputConcept)))) {\n        Calculable calc = new Calculable() {\n\n          public Object calculate() {\n            List<SNode> attributeDeclarations = new ArrayList<SNode>();\n            SNode parentElementDeclaration = ElementUtil.getParentElementDeclaration(_context.getParentNode(), operationContext.getScope());\n            if((parentElementDeclaration != null)) {\n              ListOperations.addAllElements(attributeDeclarations, ElementDeclaration_Behavior.call_getAttributeDeclarations_1183587644932(parentElementDeclaration));\n            }\n            return attributeDeclarations;\n          }\n\n        };\n        Iterable<SNode> queryResult = (Iterable)calc.calculate();\n        assert queryResult != null;\n        for(SNode item : queryResult) {\n          result.add(new DefaultChildNodeSubstituteAction(item, _context.getParentNode(), _context.getCurrentTargetNode(), _context.getChildSetter(), operationContext.getScope()) {\n\n            public SNode createChildNode(Object parameterObject, SModel model, String pattern) {\n              SNode attribute = SModelOperations.createNewNode(model, \"webr.xml.structure.Attribute\", _context.getCurrentTargetNode());\n              SLinkOperations.setTarget(attribute, \"attributeDeclaration\", ((SNode)this.getOutputConcept()), false);\n              SLinkOperations.setNewChild(attribute, \"value\", \"webr.xml.structure.Text\");\n              return attribute;\n            }\n\n            public String getMatchingText(String pattern) {\n              return SPropertyOperations.getString(((SNode)this.getOutputConcept()), \"attributeName\");\n            }\n\n          });\n        }\n      }\n    }\n    return result;\n  }","id":107103,"modified_method":"public static List<INodeSubstituteAction> nodeSubstituteActionsBuilder_ActionsFactory_BaseAttribute_1167699332639(final IOperationContext operationContext, final NodeSubstituteActionsFactoryContext _context) {\n    List<INodeSubstituteAction> result = new ArrayList<INodeSubstituteAction>();\n    {\n      AbstractConceptDeclaration outputConcept = SModelUtil_new.findConceptDeclaration(\"webr.xml.structure.Attribute\", operationContext.getScope());\n      SNode childConcept = (SNode)_context.getChildConcept();\n      if(SConceptOperations.isSuperConceptOf(childConcept, NameUtil.nodeFQName((SNode)BaseAdapter.fromAdapter(outputConcept)))) {\n        Calculable calc = new Calculable() {\n\n          public Object calculate() {\n            List<SNode> attributeDeclarations = new ArrayList<SNode>();\n            SNode parentElementDeclaration = ElementUtil.getParentElementDeclaration(_context.getParentNode(), operationContext.getScope());\n            if((parentElementDeclaration != null)) {\n              ListOperations.addAllElements(attributeDeclarations, ElementDeclaration_Behavior.call_getAttributeDeclarations_1183587644932(parentElementDeclaration));\n            }\n            return attributeDeclarations;\n          }\n\n        };\n        Iterable<SNode> queryResult = (Iterable)calc.calculate();\n        assert queryResult != null;\n        for(final SNode item : queryResult) {\n          result.add(new DefaultChildNodeSubstituteAction(outputConcept, item, _context.getParentNode(), _context.getCurrentTargetNode(), _context.getChildSetter(), operationContext.getScope()) {\n\n            public SNode createChildNode(Object parameterObject, SModel model, String pattern) {\n              SNode attribute = SModelOperations.createNewNode(model, \"webr.xml.structure.Attribute\", _context.getCurrentTargetNode());\n              SLinkOperations.setTarget(attribute, \"attributeDeclaration\", (item), false);\n              SLinkOperations.setNewChild(attribute, \"value\", \"webr.xml.structure.Text\");\n              return attribute;\n            }\n\n            public String getMatchingText(String pattern) {\n              return SPropertyOperations.getString((item), \"attributeName\");\n            }\n\n          });\n        }\n      }\n    }\n    return result;\n  }","commit_id":"8aa0428daacc44f4da3e28897404b33e55418400","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static List<NodeSubstituteActionsBuilder> getActionsBuilders(SNode parentNode, Language language, AbstractConceptDeclaration childConcept, IOperationContext context) {\n    List<NodeSubstituteActionsBuilder> result = new ArrayList<NodeSubstituteActionsBuilder>();\n    for (NodeSubstituteActionsBuilder actionsBuilder : getAllActionsBuilders(language)) {\n      // is applicable ?\n      // the aggregation link target (child concept) should be sub-concept of the 'applicable concept'\n      AbstractConceptDeclaration applicableChildConcept = actionsBuilder.getApplicableConcept();\n      if (SModelUtil_new.isAssignableConcept(childConcept, applicableChildConcept) &&\n        satisfiesPrecondition(actionsBuilder, parentNode, childConcept, context)) {\n        result.add(actionsBuilder);\n      }\n    }\n    return result;\n  }","id":107104,"modified_method":"private static List<NodeSubstituteActionsBuilder> getActionsBuilders(SNode parentNode, Language language, AbstractConceptDeclaration childConcept, SNode currentTarget, IOperationContext context) {\n    List<NodeSubstituteActionsBuilder> result = new ArrayList<NodeSubstituteActionsBuilder>();\n    for (NodeSubstituteActionsBuilder actionsBuilder : getAllActionsBuilders(language)) {\n      // is applicable ?\n      // the aggregation link target (child concept) should be sub-concept of the 'applicable concept'\n      AbstractConceptDeclaration applicableChildConcept = actionsBuilder.getApplicableConcept();\n      if (SModelUtil_new.isAssignableConcept(childConcept, applicableChildConcept) &&\n        satisfiesPrecondition(actionsBuilder, parentNode, childConcept, currentTarget, context)) {\n        result.add(actionsBuilder);\n      }\n    }\n    return result;\n  }","commit_id":"c00d685c9985822c60e396c2bc87c799b6eaa484","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static boolean satisfiesPrecondition(NodeSubstituteActionsBuilder actionsBuilder, SNode parentNode, AbstractConceptDeclaration concept, IOperationContext context) {\n    // try generatred query method\n    NodeSubstitutePreconditionFunction precondition = actionsBuilder.getPrecondition();\n    // precondition is optional\n    if (precondition != null) {\n      String methodName = ActionQueryMethodName.nodeSubstituteActionsBuilder_Precondition(actionsBuilder);\n\n\n      SModel model = actionsBuilder.getModel();\n      try {\n        return (Boolean) QueryMethodGenerated.invoke(\n          methodName,\n          context,\n          new NodeSubstitutePreconditionContext(parentNode, concept.getNode()),\n          model);\n      } catch (Exception e) {\n        LOG.error(e);\n        return false;\n      }\n    }\n\n    return true;\n  }","id":107105,"modified_method":"private static boolean satisfiesPrecondition(NodeSubstituteActionsBuilder actionsBuilder, SNode parentNode, AbstractConceptDeclaration concept, SNode currentTarget, IOperationContext context) {\n    // try generatred query method\n    NodeSubstitutePreconditionFunction precondition = actionsBuilder.getPrecondition();\n    // precondition is optional\n    if (precondition != null) {\n      String methodName = ActionQueryMethodName.nodeSubstituteActionsBuilder_Precondition(actionsBuilder);\n\n\n      SModel model = actionsBuilder.getModel();\n      try {\n        return (Boolean) QueryMethodGenerated.invoke(\n          methodName,\n          context,\n          new NodeSubstitutePreconditionContext(parentNode, concept.getNode(), currentTarget),\n          model);\n      } catch (Exception e) {\n        LOG.error(e);\n        return false;\n      }\n    }\n\n    return true;\n  }","commit_id":"c00d685c9985822c60e396c2bc87c799b6eaa484","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static List<INodeSubstituteAction> createActions_internal(SNode parentNode, SNode currentChild, AbstractConceptDeclaration childConcept, IChildNodeSetter childSetter, IOperationContext context) {\n    List<INodeSubstituteAction> resultActions = new ArrayList<INodeSubstituteAction>();\n    if (childConcept == null) {\n      return resultActions;\n    }\n\n    // special case\n    if (childConcept == SModelUtil_new.getBaseConcept()) {\n      if ((currentChild == null || currentChild.getConceptFqName().equals(BaseConcept.concept))) {\n        resultActions = createPrimaryChildSubstituteActions(parentNode, currentChild, childConcept, childSetter, TRUE_CONDITION, context);\n        // also show all concepts (to provide ability to choose an arbitrary concept)\n        ISearchScope conceptsSearchScope = SModelSearchUtil_new.createConceptsFromModelLanguagesScope(parentNode.getModel(), true, context.getScope());\n        List<SNode> allVisibleConcepts = conceptsSearchScope.getNodes();\n        for (SNode visibleConcept : allVisibleConcepts) {\n          resultActions.add(new DefaultChildNodeSubstituteAction(visibleConcept, parentNode, currentChild, childSetter, context.getScope()) {\n            public String getMatchingText(String pattern) {\n              return getMatchingText(pattern, true);\n            }\n\n            public String getDescriptionText(String pattern) {\n              return getDescriptionText(pattern, true);\n            }\n          });\n        }\n        return resultActions;\n      }\n\n      // pretend we are going to substitute more concrete concept\n      childConcept = currentChild.getConceptDeclarationAdapter();\n      if (childConcept instanceof ConceptDeclaration) {\n        while (((ConceptDeclaration) childConcept).getExtends() != null) {\n          ConceptDeclaration extendedConcept = ((ConceptDeclaration) childConcept).getExtends();\n          if (extendedConcept == SModelUtil_new.getBaseConcept()) break;\n          if (extendedConcept == SModelUtil_new.getNamedConcept()) break; // NamedConcept must die\n          childConcept = extendedConcept;\n        }\n      }\n    }\n\n    IScope scope = context.getScope();\n    Language primaryLanguage = SModelUtil_new.getDeclaringLanguage(childConcept, scope);\n    if (primaryLanguage == null) {\n      LOG.error(\"Couldn't build actions : couldn't get declaring language for concept \" + childConcept.getDebugText());\n      return resultActions;\n    }\n\n    List<NodeSubstituteActionsBuilder> allBuilders = new ArrayList<NodeSubstituteActionsBuilder>();\n\n    // add actions from 'primary' language\n    List<NodeSubstituteActionsBuilder> primaryBuilders = getActionsBuilders(parentNode, primaryLanguage, childConcept, context);\n    allBuilders.addAll(primaryBuilders);\n\n    for (NodeSubstituteActionsBuilder builder : primaryBuilders) {\n      resultActions.addAll(invokeActionFactory(builder, parentNode, currentChild, childConcept, childSetter, context));\n    }\n\n    if (!containsLegacyQueries(primaryBuilders) && !containsRemoveDefaults(primaryBuilders)) {\n      List<NodeSubstituteActionsBuilder> buildersFromSubconcepts = new ArrayList<NodeSubstituteActionsBuilder>();\n      List<Language> languages = parentNode.getModel().getLanguages(scope);\n      for (NodeSubstituteActionsBuilder actionsBuilder : getAllActionsBuilders(languages)) {\n        AbstractConceptDeclaration applicableConcept = actionsBuilder.getApplicableConcept();\n        if (applicableConcept == null) continue;\n        if (applicableConcept == childConcept) continue;\n        if (SModelUtil_new.isAssignableConcept(applicableConcept, childConcept) ||\n          SModelUtil_new.isAssignableConcept(childConcept, applicableConcept)) {\n          // check precondition tricking builder by passing builder's own applicable-concept as child-concept\n          if (satisfiesPrecondition(actionsBuilder, parentNode, applicableConcept, context)) {\n            buildersFromSubconcepts.add(actionsBuilder);\n          }\n        }\n      }\n      allBuilders.addAll(buildersFromSubconcepts);\n      // create default action 1\n      for (NodeSubstituteActionsBuilder builder : buildersFromSubconcepts) {\n        List<INodeSubstituteAction> actions = invokeActionFactory(builder, parentNode, currentChild, builder.getApplicableConcept(), childSetter, context);\n        resultActions.addAll(actions);\n      }\n\n      Condition<SNode> filter = TRUE_CONDITION;\n      // create default action 2\n      resultActions.addAll(createPrimaryChildSubstituteActions(parentNode, currentChild, childConcept, childSetter, filter, context));\n    }\n\n    // search 'extending' builders\n    List<NodeSubstituteActionsBuilder> extendedBuilders = new ArrayList<NodeSubstituteActionsBuilder>();\n    List<Language> languages = parentNode.getModel().getLanguages(scope);\n    for (Language language : languages) {\n      if (language == primaryLanguage) {\n        continue;\n      }\n      extendedBuilders.addAll(getActionsBuilders(parentNode, language, childConcept, context));\n    }\n    allBuilders.addAll(extendedBuilders);\n\n    // create 'extended' actions\n    for (NodeSubstituteActionsBuilder builder : extendedBuilders) {\n      List<INodeSubstituteAction> addActions = invokeActionFactory(builder, parentNode, currentChild, childConcept, childSetter, context);\n      resultActions.addAll(addActions);\n    }\n\n    // apply all filters\n    for (NodeSubstituteActionsBuilder builder : allBuilders) {\n      AbstractConceptDeclaration applicableConcept = builder.getApplicableConcept();\n      // try to apply only if childConcept (link target) is sub-concept of builder's applicableConcept\n      // otherwise builder's filter can't handle context of node insertion correctly\n      // case: 'Quotation' can have any node as child, but some filters can treat the 'quotation' as incorrect parent.\n      if (SModelUtil_new.isAssignableConcept(childConcept, applicableConcept)) {\n        resultActions = applyActionFilter(builder, resultActions, parentNode, currentChild, childConcept.getNode(), context);\n      }\n    }\n\n    if (childSetter instanceof DefaultChildNodeSetter) {\n      DefaultChildNodeSetter settter = (DefaultChildNodeSetter) childSetter;\n\n      Iterator<INodeSubstituteAction> it = resultActions.iterator();\n      while (it.hasNext()) {\n        INodeSubstituteAction action = it.next();\n\n        SNode conceptNode = action.getOutputConcept();\n        if (conceptNode == null) {\n          continue;\n        }\n\n        if (!BehaviorManager.getInstance().canHaveAChild(parentNode, conceptNode, settter.myLinkDeclaration.getNode(), context)) {\n          it.remove();\n        }\n      }\n    }\n\n    return resultActions;\n  }","id":107106,"modified_method":"private static List<INodeSubstituteAction> createActions_internal(SNode parentNode, SNode currentChild, AbstractConceptDeclaration childConcept, IChildNodeSetter childSetter, IOperationContext context) {\n    List<INodeSubstituteAction> resultActions = new ArrayList<INodeSubstituteAction>();\n    if (childConcept == null) {\n      return resultActions;\n    }\n\n    // special case\n    if (childConcept == SModelUtil_new.getBaseConcept()) {\n      if ((currentChild == null || currentChild.getConceptFqName().equals(BaseConcept.concept))) {\n        resultActions = createPrimaryChildSubstituteActions(parentNode, currentChild, childConcept, childSetter, TRUE_CONDITION, context);\n        // also show all concepts (to provide ability to choose an arbitrary concept)\n        ISearchScope conceptsSearchScope = SModelSearchUtil_new.createConceptsFromModelLanguagesScope(parentNode.getModel(), true, context.getScope());\n        List<SNode> allVisibleConcepts = conceptsSearchScope.getNodes();\n        for (SNode visibleConcept : allVisibleConcepts) {\n          resultActions.add(new DefaultChildNodeSubstituteAction(visibleConcept, parentNode, currentChild, childSetter, context.getScope()) {\n            public String getMatchingText(String pattern) {\n              return getMatchingText(pattern, true);\n            }\n\n            public String getDescriptionText(String pattern) {\n              return getDescriptionText(pattern, true);\n            }\n          });\n        }\n        return resultActions;\n      }\n\n      // pretend we are going to substitute more concrete concept\n      childConcept = currentChild.getConceptDeclarationAdapter();\n      if (childConcept instanceof ConceptDeclaration) {\n        while (((ConceptDeclaration) childConcept).getExtends() != null) {\n          ConceptDeclaration extendedConcept = ((ConceptDeclaration) childConcept).getExtends();\n          if (extendedConcept == SModelUtil_new.getBaseConcept()) break;\n          if (extendedConcept == SModelUtil_new.getNamedConcept()) break; // NamedConcept must die\n          childConcept = extendedConcept;\n        }\n      }\n    }\n\n    IScope scope = context.getScope();\n    Language primaryLanguage = SModelUtil_new.getDeclaringLanguage(childConcept, scope);\n    if (primaryLanguage == null) {\n      LOG.error(\"Couldn't build actions : couldn't get declaring language for concept \" + childConcept.getDebugText());\n      return resultActions;\n    }\n\n    List<NodeSubstituteActionsBuilder> allBuilders = new ArrayList<NodeSubstituteActionsBuilder>();\n\n    // add actions from 'primary' language\n    List<NodeSubstituteActionsBuilder> primaryBuilders = getActionsBuilders(parentNode, primaryLanguage, childConcept, currentChild, context);\n    allBuilders.addAll(primaryBuilders);\n\n    for (NodeSubstituteActionsBuilder builder : primaryBuilders) {\n      resultActions.addAll(invokeActionFactory(builder, parentNode, currentChild, childConcept, childSetter, context));\n    }\n\n    if (!containsLegacyQueries(primaryBuilders) && !containsRemoveDefaults(primaryBuilders)) {\n      List<NodeSubstituteActionsBuilder> buildersFromSubconcepts = new ArrayList<NodeSubstituteActionsBuilder>();\n      List<Language> languages = parentNode.getModel().getLanguages(scope);\n      for (NodeSubstituteActionsBuilder actionsBuilder : getAllActionsBuilders(languages)) {\n        AbstractConceptDeclaration applicableConcept = actionsBuilder.getApplicableConcept();\n        if (applicableConcept == null) continue;\n        if (applicableConcept == childConcept) continue;\n        if (SModelUtil_new.isAssignableConcept(applicableConcept, childConcept) ||\n          SModelUtil_new.isAssignableConcept(childConcept, applicableConcept)) {\n          // check precondition tricking builder by passing builder's own applicable-concept as child-concept\n          if (satisfiesPrecondition(actionsBuilder, parentNode, applicableConcept, currentChild, context)) {\n            buildersFromSubconcepts.add(actionsBuilder);\n          }\n        }\n      }\n      allBuilders.addAll(buildersFromSubconcepts);\n      // create default action 1\n      for (NodeSubstituteActionsBuilder builder : buildersFromSubconcepts) {\n        List<INodeSubstituteAction> actions = invokeActionFactory(builder, parentNode, currentChild, builder.getApplicableConcept(), childSetter, context);\n        resultActions.addAll(actions);\n      }\n\n      Condition<SNode> filter = TRUE_CONDITION;\n      // create default action 2\n      resultActions.addAll(createPrimaryChildSubstituteActions(parentNode, currentChild, childConcept, childSetter, filter, context));\n    }\n\n    // search 'extending' builders\n    List<NodeSubstituteActionsBuilder> extendedBuilders = new ArrayList<NodeSubstituteActionsBuilder>();\n    List<Language> languages = parentNode.getModel().getLanguages(scope);\n    for (Language language : languages) {\n      if (language == primaryLanguage) {\n        continue;\n      }\n      extendedBuilders.addAll(getActionsBuilders(parentNode, language, childConcept, currentChild, context));\n    }\n    allBuilders.addAll(extendedBuilders);\n\n    // create 'extended' actions\n    for (NodeSubstituteActionsBuilder builder : extendedBuilders) {\n      List<INodeSubstituteAction> addActions = invokeActionFactory(builder, parentNode, currentChild, childConcept, childSetter, context);\n      resultActions.addAll(addActions);\n    }\n\n    // apply all filters\n    for (NodeSubstituteActionsBuilder builder : allBuilders) {\n      AbstractConceptDeclaration applicableConcept = builder.getApplicableConcept();\n      // try to apply only if childConcept (link target) is sub-concept of builder's applicableConcept\n      // otherwise builder's filter can't handle context of node insertion correctly\n      // case: 'Quotation' can have any node as child, but some filters can treat the 'quotation' as incorrect parent.\n      if (SModelUtil_new.isAssignableConcept(childConcept, applicableConcept)) {\n        resultActions = applyActionFilter(builder, resultActions, parentNode, currentChild, childConcept.getNode(), context);\n      }\n    }\n\n    if (childSetter instanceof DefaultChildNodeSetter) {\n      DefaultChildNodeSetter settter = (DefaultChildNodeSetter) childSetter;\n\n      Iterator<INodeSubstituteAction> it = resultActions.iterator();\n      while (it.hasNext()) {\n        INodeSubstituteAction action = it.next();\n\n        SNode conceptNode = action.getOutputConcept();\n        if (conceptNode == null) {\n          continue;\n        }\n\n        if (!BehaviorManager.getInstance().canHaveAChild(parentNode, conceptNode, settter.myLinkDeclaration.getNode(), context)) {\n          it.remove();\n        }\n      }\n    }\n\n    return resultActions;\n  }","commit_id":"c00d685c9985822c60e396c2bc87c799b6eaa484","url":"https://github.com/JetBrains/MPS"},{"original_method":"public NodeSubstitutePreconditionContext(SNode parentNode, SNode childConcept) {\n    myParentNode = parentNode;\n    myChildConcept = childConcept;\n  }","id":107107,"modified_method":"public NodeSubstitutePreconditionContext(SNode parentNode, SNode childConcept, SNode currentTargetNode) {\n    myParentNode = parentNode;\n    myChildConcept = childConcept;\n    myCurrentTargetNode = currentTargetNode;\n  }","commit_id":"c00d685c9985822c60e396c2bc87c799b6eaa484","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void removeActionsByCondition_1177496231840(final IOperationContext operationContext, final RemoveSubstituteActionByConditionContext _context) {\n    Iterator<INodeSubstituteAction> actions = _context.getActions();\n    while(actions.hasNext()) {\n      INodeSubstituteAction current = actions.next();\n      if(!(current.getOutputConcept() instanceof SNode)) {\n        continue;\n      }\n      final SNode concept = (SNode)current.getOutputConcept();\n      SNode applicableConcept = SConceptOperations.findConceptDeclaration(\"jetbrains.mps.bootstrap.actionsLanguage.structure.MenuPart\");\n      Condition cond = new Condition() {\n\n        public boolean met(Object object) {\n          return !(SConceptOperations.isSubConceptOf(concept, \"jetbrains.mps.bootstrap.actionsLanguage.structure.RightTransformMenuPart\"));\n        }\n\n      };\n      if(SConceptOperations.isAssignableFrom(applicableConcept, concept) && cond.met(null)) {\n        actions.remove();\n      }\n    }\n  }","id":107108,"modified_method":"public static void removeActionsByCondition_1177496231840(final IOperationContext operationContext, final RemoveSubstituteActionByConditionContext _context) {\n    Iterator<INodeSubstituteAction> actions = _context.getActions();\n    while(actions.hasNext()) {\n      INodeSubstituteAction current = actions.next();\n      final SNode concept = current.getOutputConcept();\n      SNode applicableConcept = SConceptOperations.findConceptDeclaration(\"jetbrains.mps.bootstrap.actionsLanguage.structure.MenuPart\");\n      Condition cond = new Condition() {\n\n        public boolean met(Object object) {\n          return !(SConceptOperations.isSubConceptOf(concept, \"jetbrains.mps.bootstrap.actionsLanguage.structure.RightTransformMenuPart\"));\n        }\n\n      };\n      if(SConceptOperations.isAssignableFrom(applicableConcept, concept) && cond.met(null)) {\n        actions.remove();\n      }\n    }\n  }","commit_id":"c00d685c9985822c60e396c2bc87c799b6eaa484","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void removeActionsByCondition_1177495897822(final IOperationContext operationContext, final RemoveSubstituteActionByConditionContext _context) {\n    Iterator<INodeSubstituteAction> actions = _context.getActions();\n    while(actions.hasNext()) {\n      INodeSubstituteAction current = actions.next();\n      if(!(current.getOutputConcept() instanceof SNode)) {\n        continue;\n      }\n      final SNode concept = (SNode)current.getOutputConcept();\n      SNode applicableConcept = SConceptOperations.findConceptDeclaration(\"jetbrains.mps.bootstrap.actionsLanguage.structure.MenuPart\");\n      Condition cond = new Condition() {\n\n        public boolean met(Object object) {\n          return !(SConceptOperations.isSubConceptOf(concept, \"jetbrains.mps.bootstrap.actionsLanguage.structure.SubstituteMenuPart\"));\n        }\n\n      };\n      if(SConceptOperations.isAssignableFrom(applicableConcept, concept) && cond.met(null)) {\n        actions.remove();\n      }\n    }\n  }","id":107109,"modified_method":"public static void removeActionsByCondition_1177495897822(final IOperationContext operationContext, final RemoveSubstituteActionByConditionContext _context) {\n    Iterator<INodeSubstituteAction> actions = _context.getActions();\n    while(actions.hasNext()) {\n      INodeSubstituteAction current = actions.next();\n      final SNode concept = current.getOutputConcept();\n      SNode applicableConcept = SConceptOperations.findConceptDeclaration(\"jetbrains.mps.bootstrap.actionsLanguage.structure.MenuPart\");\n      Condition cond = new Condition() {\n\n        public boolean met(Object object) {\n          return !(SConceptOperations.isSubConceptOf(concept, \"jetbrains.mps.bootstrap.actionsLanguage.structure.SubstituteMenuPart\"));\n        }\n\n      };\n      if(SConceptOperations.isAssignableFrom(applicableConcept, concept) && cond.met(null)) {\n        actions.remove();\n      }\n    }\n  }","commit_id":"c00d685c9985822c60e396c2bc87c799b6eaa484","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static Iterable<MeasureComputer> getDependents(MeasureComputer measureComputer, ToComputerByKey toComputerByInputMetricKey) {\n    return FluentIterable.from(measureComputer.getInputMetrics()).transform(toComputerByInputMetricKey);\n  }","id":107110,"modified_method":"private static Iterable<MeasureComputerWrapper> getDependents(MeasureComputerWrapper measureComputer, ToComputerByKey toComputerByInputMetricKey) {\n    return from(measureComputer.getDefinition().getInputMetrics()).transform(toComputerByInputMetricKey);\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private static void feedComputersByMetric(List<MeasureComputer> computers, Map<String, MeasureComputer> computersByOutputMetric,\n    Map<String, MeasureComputer> computersByInputMetric) {\n    for (MeasureComputer computer : computers) {\n      for (String outputMetric : computer.getOutputMetrics()) {\n        computersByOutputMetric.put(outputMetric, computer);\n      }\n      for (String inputMetric : computer.getInputMetrics()) {\n        computersByInputMetric.put(inputMetric, computer);\n      }\n    }\n  }","id":107111,"modified_method":"private static void feedComputersByMetric(List<MeasureComputerWrapper> wrappers, Map<String, MeasureComputerWrapper> computersByOutputMetric,\n    Map<String, MeasureComputerWrapper> computersByInputMetric) {\n    for (MeasureComputerWrapper computer : wrappers) {\n      for (String outputMetric : computer.getDefinition().getOutputMetrics()) {\n        computersByOutputMetric.put(outputMetric, computer);\n      }\n      for (String inputMetric : computer.getDefinition().getInputMetrics()) {\n        computersByInputMetric.put(inputMetric, computer);\n      }\n    }\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public FeedMeasureComputers(MutableMeasureComputersHolder measureComputersHolder, Metrics[] metricsRepositories, MeasureComputerProvider[] measureComputerProviders) {\n    this.measureComputersHolder = measureComputersHolder;\n    this.measureComputerProviders = measureComputerProviders;\n    this.metricsRepositories = metricsRepositories;\n  }","id":107112,"modified_method":"public FeedMeasureComputers(MutableMeasureComputersHolder measureComputersHolder, Metrics[] metricsRepositories, MeasureComputer[] measureComputers) {\n    this.measureComputersHolder = measureComputersHolder;\n    this.measureComputers = measureComputers;\n    this.pluginMetricKeys = from(Arrays.asList(metricsRepositories))\n      .transformAndConcat(MetricsToMetricList.INSTANCE)\n      .transform(MetricToKey.INSTANCE)\n      .toSet();\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private static Iterable<MeasureComputer> getDependencies(MeasureComputer measureComputer, ToComputerByKey toComputerByOutputMetricKey) {\n    // Remove null computer because a computer can depend on a metric that is only generated by a sensor or on a core metrics\n    return FluentIterable.from(measureComputer.getInputMetrics()).transform(toComputerByOutputMetricKey).filter(Predicates.notNull());\n  }","id":107113,"modified_method":"private static Iterable<MeasureComputerWrapper> getDependencies(MeasureComputerWrapper measureComputer, ToComputerByKey toComputerByOutputMetricKey) {\n    // Remove null computer because a computer can depend on a metric that is only generated by a sensor or on a core metrics\n    return from(measureComputer.getDefinition().getInputMetrics()).transform(toComputerByOutputMetricKey).filter(Predicates.notNull());\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private ToComputerByKey(Map<String, MeasureComputer> computersByMetric) {\n      this.computersByMetric = computersByMetric;\n    }","id":107114,"modified_method":"private ToComputerByKey(Map<String, MeasureComputerWrapper> computersByMetric) {\n      this.computersByMetric = computersByMetric;\n    }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Constructor override used by Pico to instantiate the class when no plugin is defining measure computers\n   */\n  public FeedMeasureComputers(MutableMeasureComputersHolder measureComputersHolder, Metrics[] metricsRepositories) {\n    this(measureComputersHolder, metricsRepositories, new MeasureComputerProvider[] {});\n  }","id":107115,"modified_method":"/**\n   * Constructor override used by Pico to instantiate the class when no plugin is defining measure computers\n   */\n  public FeedMeasureComputers(MutableMeasureComputersHolder measureComputersHolder, Metrics[] metricsRepositories) {\n    this(measureComputersHolder, metricsRepositories, new MeasureComputer[]{});\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n    public MeasureComputer apply(@Nonnull String metricKey) {\n      return computersByMetric.get(metricKey);\n    }","id":107116,"modified_method":"@Override\n    public MeasureComputerWrapper apply(@Nonnull String metricKey) {\n      return computersByMetric.get(metricKey);\n    }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void validateInputMetrics(List<MeasureComputer> computers) {\n    Set<String> pluginMetricKeys = FluentIterable.from(Arrays.asList(metricsRepositories))\n      .transformAndConcat(MetricsToMetricList.INSTANCE)\n      .transform(MetricToKey.INSTANCE)\n      .toSet();\n    // TODO would be nice to generate an error containing all bad input metrics\n    for (MeasureComputer computer : computers) {\n      for (String metric : computer.getInputMetrics()) {\n        if (!pluginMetricKeys.contains(metric) && !CORE_METRIC_KEYS.contains(metric)) {\n          throw new IllegalStateException(String.format(\"Metric '%s' cannot be used as an input metric as it's no a core metric and no plugin declare this metric\", metric));\n        }\n      }\n    }\n  }","id":107117,"modified_method":"private void validateMetrics(List<MeasureComputerWrapper> wrappers) {\n    from(wrappers).transformAndConcat(ToInputMetrics.INSTANCE).filter(new ValidateInputMetric()).size();\n    from(wrappers).transformAndConcat(ToOutputMetrics.INSTANCE).filter(new ValidateOutputMetric()).size();\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private static Iterable<MeasureComputer> sortComputers(List<MeasureComputer> computers) {\n    Map<String, MeasureComputer> computersByOutputMetric = new HashMap<>();\n    Map<String, MeasureComputer> computersByInputMetric = new HashMap<>();\n    feedComputersByMetric(computers, computersByOutputMetric, computersByInputMetric);\n    ToComputerByKey toComputerByOutputMetricKey = new ToComputerByKey(computersByOutputMetric);\n    ToComputerByKey toComputerByInputMetricKey = new ToComputerByKey(computersByInputMetric);\n\n    DirectAcyclicGraph dag = new DirectAcyclicGraph();\n    for (MeasureComputer computer : computers) {\n      dag.add(computer);\n      for (MeasureComputer dependency : getDependencies(computer, toComputerByOutputMetricKey)) {\n        dag.add(computer, dependency);\n      }\n      for (MeasureComputer generates : getDependents(computer, toComputerByInputMetricKey)) {\n        dag.add(generates, computer);\n      }\n    }\n    return dag.sort();\n  }","id":107118,"modified_method":"private static Iterable<MeasureComputerWrapper> sortComputers(List<MeasureComputerWrapper> wrappers) {\n    Map<String, MeasureComputerWrapper> computersByOutputMetric = new HashMap<>();\n    Map<String, MeasureComputerWrapper> computersByInputMetric = new HashMap<>();\n    feedComputersByMetric(wrappers, computersByOutputMetric, computersByInputMetric);\n    ToComputerByKey toComputerByOutputMetricKey = new ToComputerByKey(computersByOutputMetric);\n    ToComputerByKey toComputerByInputMetricKey = new ToComputerByKey(computersByInputMetric);\n\n    DirectAcyclicGraph dag = new DirectAcyclicGraph();\n    for (MeasureComputerWrapper computer : wrappers) {\n      dag.add(computer);\n      for (MeasureComputerWrapper dependency : getDependencies(computer, toComputerByOutputMetricKey)) {\n        dag.add(computer, dependency);\n      }\n      for (MeasureComputerWrapper generates : getDependents(computer, toComputerByInputMetricKey)) {\n        dag.add(generates, computer);\n      }\n    }\n    return dag.sort();\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Constructor override used by Pico to instantiate the class when no plugin is defining metrics neither measure computers\n   */\n  public FeedMeasureComputers(MutableMeasureComputersHolder measureComputersHolder) {\n    this(measureComputersHolder, new Metrics[] {}, new MeasureComputerProvider[] {});\n  }","id":107119,"modified_method":"/**\n   * Constructor override used by Pico to instantiate the class when no plugin is defining metrics neither measure computers\n   */\n  public FeedMeasureComputers(MutableMeasureComputersHolder measureComputersHolder) {\n    this(measureComputersHolder, new Metrics[] {}, new MeasureComputer[] {});\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void execute() {\n    MeasureComputerProviderContext context = new MeasureComputerProviderContext();\n    for (MeasureComputerProvider provider : measureComputerProviders) {\n      provider.register(context);\n    }\n    validateInputMetrics(context.getMeasureComputers());\n    measureComputersHolder.setMeasureComputers(sortComputers(context.getMeasureComputers()));\n  }","id":107120,"modified_method":"@Override\n  public void execute() {\n    List<MeasureComputerWrapper> wrappers = from(Arrays.asList(measureComputers)).transform(ToMeasureWrapper.INSTANCE).toList();\n    validateMetrics(wrappers);\n    measureComputersHolder.setMeasureComputers(sortComputers(wrappers));\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Constructor override used by Pico to instantiate the class when no plugin is defining metrics\n   */\n  public FeedMeasureComputers(MutableMeasureComputersHolder measureComputersHolder, MeasureComputerProvider[] measureComputerProviders) {\n    this(measureComputersHolder, new Metrics[] {}, measureComputerProviders);\n  }","id":107121,"modified_method":"/**\n   * Constructor override used by Pico to instantiate the class when no plugin is defining metrics\n   */\n  public FeedMeasureComputers(MutableMeasureComputersHolder measureComputersHolder, MeasureComputer[] measureComputers) {\n    this(measureComputersHolder, new Metrics[] {}, measureComputers);\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void not_fail_if_input_metrics_are_same_as_output_metrics() throws Exception {\n    MeasureComputer.Implementation implementation = mock(MeasureComputer.Implementation.class);\n    MeasureComputerProvider[] providers = new MeasureComputerProvider[] {\n      new NewMeasureComputerProvider(\n        array(NEW_METRIC_1),\n        array(NEW_METRIC_1),\n        implementation),\n    };\n    ComputationStep underTest = new FeedMeasureComputers(holder, array(new TestMetrics()), providers);\n    underTest.execute();\n\n    assertThat(holder.getMeasureComputers()).hasSize(1);\n  }","id":107122,"modified_method":"@Test\n  public void not_fail_if_input_metrics_are_same_as_output_metrics() throws Exception {\n    MeasureComputer[] computers = new MeasureComputer[] {newMeasureComputer(array(NEW_METRIC_1), array(NEW_METRIC_1))};\n    ComputationStep underTest = new FeedMeasureComputers(holder, array(new TestMetrics()), computers);\n    underTest.execute();\n\n    assertThat(holder.getMeasureComputers()).hasSize(1);\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void support_core_metrics_as_input_metrics() throws Exception {\n    MeasureComputer.Implementation implementation = mock(MeasureComputer.Implementation.class);\n    MeasureComputerProvider[] providers = new MeasureComputerProvider[] {\n      new NewMeasureComputerProvider(\n        array(CoreMetrics.NCLOC_KEY),\n        array(NEW_METRIC_1),\n        implementation),\n    };\n    ComputationStep underTest = new FeedMeasureComputers(holder, array(new TestMetrics()), providers);\n    underTest.execute();\n\n    assertThat(holder.getMeasureComputers()).hasSize(1);\n  }","id":107123,"modified_method":"@Test\n  public void support_core_metrics_as_input_metrics() throws Exception {\n    MeasureComputer[] computers = new MeasureComputer[] {newMeasureComputer(array(NCLOC_KEY), array(NEW_METRIC_1))};\n    ComputationStep underTest = new FeedMeasureComputers(holder, array(new TestMetrics()), computers);\n    underTest.execute();\n\n    assertThat(holder.getMeasureComputers()).hasSize(1);\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void fail_with_ISE_when_input_metric_is_unknown() throws Exception {\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Metric 'unknown' cannot be used as an input metric as it's no a core metric and no plugin declare this metric\");\n\n    MeasureComputerProvider[] providers = new MeasureComputerProvider[] {\n      new NewMeasureComputerProvider(\n        array(\"unknown\"),\n        array(NEW_METRIC_4),\n        mock(MeasureComputer.Implementation.class)),\n    };\n\n    ComputationStep underTest = new FeedMeasureComputers(holder, array(new TestMetrics()), providers);\n    underTest.execute();\n  }","id":107124,"modified_method":"@Test\n  public void fail_with_ISE_when_input_metric_is_unknown() throws Exception {\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Metric 'unknown' cannot be used as an input metric as it's not a core metric and no plugin declare this metric\");\n\n    MeasureComputer[] computers = new MeasureComputer[] {newMeasureComputer(array(\"unknown\"), array(NEW_METRIC_4))};\n    ComputationStep underTest = new FeedMeasureComputers(holder, array(new TestMetrics()), computers);\n    underTest.execute();\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void support_plugin_metrics_as_input_metrics() throws Exception {\n    MeasureComputer.Implementation implementation = mock(MeasureComputer.Implementation.class);\n    MeasureComputerProvider[] providers = new MeasureComputerProvider[] {\n      new NewMeasureComputerProvider(\n        array(NEW_METRIC_1),\n        array(NEW_METRIC_2),\n        implementation),\n    };\n    ComputationStep underTest = new FeedMeasureComputers(holder, array(new TestMetrics()), providers);\n    underTest.execute();\n\n    assertThat(holder.getMeasureComputers()).hasSize(1);\n  }","id":107125,"modified_method":"@Test\n  public void support_plugin_metrics_as_input_metrics() throws Exception {\n    MeasureComputer[] computers = new MeasureComputer[] {newMeasureComputer(array(NEW_METRIC_1), array(NEW_METRIC_2))};\n    ComputationStep underTest = new FeedMeasureComputers(holder, array(new TestMetrics()), computers);\n    underTest.execute();\n\n    assertThat(holder.getMeasureComputers()).hasSize(1);\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void sort_computers() throws Exception {\n    MeasureComputer.Implementation implementation1 = mock(MeasureComputer.Implementation.class);\n    MeasureComputer.Implementation implementation2 = mock(MeasureComputer.Implementation.class);\n    MeasureComputer.Implementation implementation3 = mock(MeasureComputer.Implementation.class);\n\n    MeasureComputerProvider[] providers = new MeasureComputerProvider[] {\n      // Should be the last to be executed\n      new NewMeasureComputerProvider(\n        array(NEW_METRIC_3),\n        array(NEW_METRIC_4),\n        implementation3),\n      // Should be the first to be executed\n      new NewMeasureComputerProvider(\n        array(NEW_METRIC_1),\n        array(NEW_METRIC_2),\n        implementation1),\n      // Should be the second to be executed\n      new NewMeasureComputerProvider(\n        array(NEW_METRIC_2),\n        array(NEW_METRIC_3),\n        implementation2)\n    };\n\n    ComputationStep underTest = new FeedMeasureComputers(holder, array(new TestMetrics()), providers);\n    underTest.execute();\n\n    List<MeasureComputer> computers = newArrayList(holder.getMeasureComputers());\n    assertThat(computers).hasSize(3);\n    assertThat(computers.get(0).getImplementation()).isEqualTo(implementation1);\n    assertThat(computers.get(1).getImplementation()).isEqualTo(implementation2);\n    assertThat(computers.get(2).getImplementation()).isEqualTo(implementation3);\n  }","id":107126,"modified_method":"@Test\n  public void sort_computers() throws Exception {\n    // Should be the last to be executed\n    MeasureComputer measureComputer1 = newMeasureComputer(array(NEW_METRIC_3), array(NEW_METRIC_4));\n    // Should be the first to be executed\n    MeasureComputer measureComputer2 = newMeasureComputer(array(NEW_METRIC_1), array(NEW_METRIC_2));\n    // Should be the second to be executed\n    MeasureComputer measureComputer3 = newMeasureComputer(array(NEW_METRIC_2), array(NEW_METRIC_3));\n    MeasureComputer[] computers = new MeasureComputer[] {measureComputer1, measureComputer2, measureComputer3};\n\n    ComputationStep underTest = new FeedMeasureComputers(holder, array(new TestMetrics()), computers);\n    underTest.execute();\n\n    List<MeasureComputerWrapper> result = newArrayList(holder.getMeasureComputers());\n    assertThat(result).hasSize(3);\n    assertThat(result.get(0).getComputer()).isEqualTo(measureComputer2);\n    assertThat(result.get(1).getComputer()).isEqualTo(measureComputer3);\n    assertThat(result.get(2).getComputer()).isEqualTo(measureComputer1);\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void setMeasureComputers(Iterable<MeasureComputer> measureComputers) {\n    requireNonNull(measureComputers, \"Measure computers cannot be null\");\n    checkState(this.measureComputers == null, \"Measure computers have already been initialized\");\n    this.measureComputers = from(measureComputers).filter(Predicates.notNull()).toList();\n  }","id":107127,"modified_method":"@Override\n  public void setMeasureComputers(Iterable<MeasureComputerWrapper> measureComputers) {\n    requireNonNull(measureComputers, \"Measure computers cannot be null\");\n    checkState(this.measureComputers == null, \"Measure computers have already been initialized\");\n    this.measureComputers = from(measureComputers).filter(Predicates.notNull()).toList();\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public Iterable<MeasureComputer> getMeasureComputers() {\n    checkState(this.measureComputers != null, \"Measure computers have not been initialized yet\");\n    return measureComputers;\n  }","id":107128,"modified_method":"@Override\n  public Iterable<MeasureComputerWrapper> getMeasureComputers() {\n    checkState(this.measureComputers != null, \"Measure computers have not been initialized yet\");\n    return measureComputers;\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void get_measure_computers() throws Exception {\n    MeasureComputer measureComputer = mock(MeasureComputer.class);\n    underTest.setMeasureComputers(Collections.singletonList(measureComputer));\n\n    assertThat(underTest.getMeasureComputers()).containsOnly(measureComputer);\n  }","id":107129,"modified_method":"@Test\n  public void get_measure_computers() throws Exception {\n    MeasureComputerWrapper measureComputer = mock(MeasureComputerWrapper.class);\n    underTest.setMeasureComputers(Collections.singletonList(measureComputer));\n\n    assertThat(underTest.getMeasureComputers()).containsOnly(measureComputer);\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void set_measure_computers_supports_empty_arg_is_empty() {\n    underTest.setMeasureComputers(ImmutableList.<MeasureComputer>of());\n\n    assertThat(underTest.getMeasureComputers()).isEmpty();\n  }","id":107130,"modified_method":"@Test\n  public void set_measure_computers_supports_empty_arg_is_empty() {\n    underTest.setMeasureComputers(ImmutableList.<MeasureComputerWrapper>of());\n\n    assertThat(underTest.getMeasureComputers()).isEmpty();\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void set_measure_computers_throws_ISE_if_already_initialized() {\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Measure computers have already been initialized\");\n\n    MeasureComputer measureComputer = mock(MeasureComputer.class);\n    underTest.setMeasureComputers(Collections.singletonList(measureComputer));\n    underTest.setMeasureComputers(Collections.singletonList(measureComputer));\n  }","id":107131,"modified_method":"@Test\n  public void set_measure_computers_throws_ISE_if_already_initialized() {\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Measure computers have already been initialized\");\n\n    MeasureComputerWrapper measureComputer = mock(MeasureComputerWrapper.class);\n    underTest.setMeasureComputers(Collections.singletonList(measureComputer));\n    underTest.setMeasureComputers(Collections.singletonList(measureComputer));\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void visitAny(org.sonar.server.computation.component.Component component) {\n    for (MeasureComputer computer : measureComputersHolder.getMeasureComputers()) {\n      LOGGER.trace(\"Measure computer '{}' is computing component {}\", computer.getImplementation(), component);\n      MeasureComputerImplementationContext measureComputerContext = new MeasureComputerImplementationContext(component, computer,\n        settings, measureRepository, metricRepository, componentIssuesRepository);\n      computer.getImplementation().compute(measureComputerContext);\n    }\n  }","id":107132,"modified_method":"@Override\n  public void visitAny(org.sonar.server.computation.component.Component component) {\n    MeasureComputerContextImpl context = new MeasureComputerContextImpl(component, settings, measureRepository, metricRepository, componentIssuesRepository);\n    for (MeasureComputerWrapper measureComputerWrapper : measureComputersHolder.getMeasureComputers()) {\n      context.setDefinition(measureComputerWrapper.getDefinition());\n      MeasureComputer measureComputer = measureComputerWrapper.getComputer();\n      LOGGER.trace(\"Measure computer '{}' is computing component {}\", measureComputer, component);\n      measureComputer.compute(context);\n    }\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void nothing_to_compute() throws Exception {\n    measureRepository.addRawMeasure(FILE_1_REF, NCLOC_KEY, newMeasureBuilder().create(10));\n    measureRepository.addRawMeasure(FILE_1_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(2));\n    measureRepository.addRawMeasure(FILE_2_REF, NCLOC_KEY, newMeasureBuilder().create(40));\n    measureRepository.addRawMeasure(FILE_2_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(5));\n    measureRepository.addRawMeasure(DIRECTORY_REF, NCLOC_KEY, newMeasureBuilder().create(50));\n    measureRepository.addRawMeasure(DIRECTORY_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(7));\n    measureRepository.addRawMeasure(MODULE_REF, NCLOC_KEY, newMeasureBuilder().create(50));\n    measureRepository.addRawMeasure(MODULE_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(7));\n    measureRepository.addRawMeasure(ROOT_REF, NCLOC_KEY, newMeasureBuilder().create(50));\n    measureRepository.addRawMeasure(ROOT_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(7));\n\n    measureComputersHolder.setMeasureComputers(Collections.<MeasureComputer>emptyList());\n    VisitorsCrawler visitorsCrawler = new VisitorsCrawler(Arrays.<ComponentVisitor>asList(new MeasureComputersVisitor(metricRepository, measureRepository, null, measureComputersHolder, componentIssuesRepository)));\n    visitorsCrawler.visit(ROOT);\n\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(FILE_1_REF))).isEmpty();\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(FILE_2_REF))).isEmpty();\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(DIRECTORY_REF))).isEmpty();\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(MODULE_REF))).isEmpty();\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(ROOT_REF))).isEmpty();\n  }","id":107133,"modified_method":"@Test\n  public void nothing_to_compute() throws Exception {\n    measureRepository.addRawMeasure(FILE_1_REF, NCLOC_KEY, newMeasureBuilder().create(10));\n    measureRepository.addRawMeasure(FILE_1_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(2));\n    measureRepository.addRawMeasure(FILE_2_REF, NCLOC_KEY, newMeasureBuilder().create(40));\n    measureRepository.addRawMeasure(FILE_2_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(5));\n    measureRepository.addRawMeasure(DIRECTORY_REF, NCLOC_KEY, newMeasureBuilder().create(50));\n    measureRepository.addRawMeasure(DIRECTORY_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(7));\n    measureRepository.addRawMeasure(MODULE_REF, NCLOC_KEY, newMeasureBuilder().create(50));\n    measureRepository.addRawMeasure(MODULE_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(7));\n    measureRepository.addRawMeasure(ROOT_REF, NCLOC_KEY, newMeasureBuilder().create(50));\n    measureRepository.addRawMeasure(ROOT_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(7));\n\n    measureComputersHolder.setMeasureComputers(Collections.<MeasureComputerWrapper>emptyList());\n    VisitorsCrawler visitorsCrawler = new VisitorsCrawler(Arrays.<ComponentVisitor>asList(new MeasureComputersVisitor(metricRepository, measureRepository, null,\n      measureComputersHolder, componentIssuesRepository)));\n    visitorsCrawler.visit(ROOT);\n\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(FILE_1_REF))).isEmpty();\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(FILE_2_REF))).isEmpty();\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(DIRECTORY_REF))).isEmpty();\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(MODULE_REF))).isEmpty();\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(ROOT_REF))).isEmpty();\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void compute_plugin_measure() throws Exception {\n    measureRepository.addRawMeasure(FILE_1_REF, NCLOC_KEY, newMeasureBuilder().create(10));\n    measureRepository.addRawMeasure(FILE_1_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(2));\n    measureRepository.addRawMeasure(FILE_2_REF, NCLOC_KEY, newMeasureBuilder().create(40));\n    measureRepository.addRawMeasure(FILE_2_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(5));\n    measureRepository.addRawMeasure(DIRECTORY_REF, NCLOC_KEY, newMeasureBuilder().create(50));\n    measureRepository.addRawMeasure(DIRECTORY_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(7));\n    measureRepository.addRawMeasure(MODULE_REF, NCLOC_KEY, newMeasureBuilder().create(50));\n    measureRepository.addRawMeasure(MODULE_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(7));\n    measureRepository.addRawMeasure(ROOT_REF, NCLOC_KEY, newMeasureBuilder().create(50));\n    measureRepository.addRawMeasure(ROOT_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(7));\n\n    measureComputersHolder.setMeasureComputers(newArrayList(\n      new MeasureComputerImpl.MeasureComputerBuilderImpl()\n        .setInputMetrics(NCLOC_KEY, COMMENT_LINES_KEY)\n        .setOutputMetrics(NEW_METRIC_KEY)\n        .setImplementation(\n          new MeasureComputer.Implementation() {\n            @Override\n            public void compute(Context ctx) {\n              org.sonar.api.ce.measure.Measure ncloc = ctx.getMeasure(NCLOC_KEY);\n              org.sonar.api.ce.measure.Measure comment = ctx.getMeasure(COMMENT_LINES_KEY);\n              if (ncloc != null && comment != null) {\n                ctx.addMeasure(NEW_METRIC_KEY, ncloc.getIntValue() + comment.getIntValue());\n              }\n            }\n          }\n        )\n        .build()\n      ));\n\n    VisitorsCrawler visitorsCrawler = new VisitorsCrawler(Arrays.<ComponentVisitor>asList(new MeasureComputersVisitor(metricRepository, measureRepository, null, measureComputersHolder, componentIssuesRepository)));\n    visitorsCrawler.visit(ROOT);\n\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(FILE_1_REF))).containsOnly(entryOf(NEW_METRIC_KEY, newMeasureBuilder().create(12)));\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(FILE_2_REF))).containsOnly(entryOf(NEW_METRIC_KEY, newMeasureBuilder().create(45)));\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(DIRECTORY_REF))).containsOnly(entryOf(NEW_METRIC_KEY, newMeasureBuilder().create(57)));\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(MODULE_REF))).containsOnly(entryOf(NEW_METRIC_KEY, newMeasureBuilder().create(57)));\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(ROOT_REF))).containsOnly(entryOf(NEW_METRIC_KEY, newMeasureBuilder().create(57)));\n  }","id":107134,"modified_method":"@Test\n  public void compute_plugin_measure() throws Exception {\n    measureRepository.addRawMeasure(FILE_1_REF, NCLOC_KEY, newMeasureBuilder().create(10));\n    measureRepository.addRawMeasure(FILE_1_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(2));\n    measureRepository.addRawMeasure(FILE_2_REF, NCLOC_KEY, newMeasureBuilder().create(40));\n    measureRepository.addRawMeasure(FILE_2_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(5));\n    measureRepository.addRawMeasure(DIRECTORY_REF, NCLOC_KEY, newMeasureBuilder().create(50));\n    measureRepository.addRawMeasure(DIRECTORY_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(7));\n    measureRepository.addRawMeasure(MODULE_REF, NCLOC_KEY, newMeasureBuilder().create(50));\n    measureRepository.addRawMeasure(MODULE_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(7));\n    measureRepository.addRawMeasure(ROOT_REF, NCLOC_KEY, newMeasureBuilder().create(50));\n    measureRepository.addRawMeasure(ROOT_REF, COMMENT_LINES_KEY, newMeasureBuilder().create(7));\n\n    final MeasureComputer.MeasureComputerDefinition definition = new MeasureComputerDefinitionImpl.BuilderImpl()\n      .setInputMetrics(NCLOC_KEY, COMMENT_LINES_KEY)\n      .setOutputMetrics(NEW_METRIC_KEY)\n      .build();\n    measureComputersHolder.setMeasureComputers(newArrayList(\n      new MeasureComputerWrapper(\n        new MeasureComputer() {\n          @Override\n          public MeasureComputerDefinition define(MeasureComputerDefinitionContext defContext) {\n            return definition;\n          }\n\n          @Override\n          public void compute(MeasureComputerContext context) {\n            org.sonar.api.ce.measure.Measure ncloc = context.getMeasure(NCLOC_KEY);\n            org.sonar.api.ce.measure.Measure comment = context.getMeasure(COMMENT_LINES_KEY);\n            if (ncloc != null && comment != null) {\n              context.addMeasure(NEW_METRIC_KEY, ncloc.getIntValue() + comment.getIntValue());\n            }\n          }\n        },\n        definition\n      )));\n\n    VisitorsCrawler visitorsCrawler = new VisitorsCrawler(Arrays.<ComponentVisitor>asList(new MeasureComputersVisitor(metricRepository, measureRepository, null,\n      measureComputersHolder, componentIssuesRepository)));\n    visitorsCrawler.visit(ROOT);\n\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(FILE_1_REF))).containsOnly(entryOf(NEW_METRIC_KEY, newMeasureBuilder().create(12)));\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(FILE_2_REF))).containsOnly(entryOf(NEW_METRIC_KEY, newMeasureBuilder().create(45)));\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(DIRECTORY_REF))).containsOnly(entryOf(NEW_METRIC_KEY, newMeasureBuilder().create(57)));\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(MODULE_REF))).containsOnly(entryOf(NEW_METRIC_KEY, newMeasureBuilder().create(57)));\n    assertThat(toEntries(measureRepository.getAddedRawMeasures(ROOT_REF))).containsOnly(entryOf(NEW_METRIC_KEY, newMeasureBuilder().create(57)));\n  }","commit_id":"b707f2c2b6a5820496d5ba83ad6e69432512f908","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n     * Viewer can be null, which happens when we close the active viewer\n     * and until another grabs the application focus (unles it was the last viewer).\n     */\n    public static void setActiveViewer(MapViewer viewer) {\n        synchronized (LOCK) {\n            if (ActiveViewer != viewer) {\n                LWMap oldActiveMap = null;\n                if (ActiveViewer != null)\n                    oldActiveMap = ActiveViewer.getMap();\n                ActiveViewer = viewer;\n                out(\"ActiveViewer set to \" + viewer);\n                if (ActiveViewer != null) {\n                    java.util.Iterator i = sActiveViewerListeners.iterator();\n                    while (i.hasNext())\n                        ((ActiveViewerListener)i.next()).activeViewerChanged(viewer);\n                    if (oldActiveMap != ActiveViewer.getMap()) {\n                        LWMap activeMap = viewer.getMap();\n                        i = sActiveMapListeners.iterator();\n                        out(\"ActiveMap set to \" + activeMap);\n                        while (i.hasNext()) {\n                            ActiveMapListener aml = (ActiveMapListener) i.next();\n                            if (DEBUG.EVENTS) out(\"activeMapChanged -> \" + aml);\n                            aml.activeMapChanged(activeMap);\n                        }\n                    }\n                }\n            } else {\n                // prob don't need this now that we're synchronized\n                ActiveViewer = viewer;\n            }\n        }\n    }","id":107135,"modified_method":"/**\n     * Viewer can be null, which happens when we close the active viewer\n     * and until another grabs the application focus (unles it was the last viewer).\n     */\n    public static void setActiveViewer(MapViewer viewer) {\n        synchronized (LOCK) {\n            if (ActiveViewer != viewer) {\n                LWMap oldActiveMap = null;\n                if (ActiveViewer != null)\n                    oldActiveMap = ActiveViewer.getMap();\n                ActiveViewer = viewer;\n                if (DEBUG.FOCUS) out(\"ActiveViewer set to \" + viewer);\n                if (ActiveViewer != null) {\n                    java.util.Iterator i = sActiveViewerListeners.iterator();\n                    while (i.hasNext())\n                        ((ActiveViewerListener)i.next()).activeViewerChanged(viewer);\n                    if (oldActiveMap != ActiveViewer.getMap()) {\n                        LWMap activeMap = viewer.getMap();\n                        i = sActiveMapListeners.iterator();\n                        if (DEBUG.FOCUS) out(\"ActiveMap set to \" + activeMap);\n                        while (i.hasNext()) {\n                            ActiveMapListener aml = (ActiveMapListener) i.next();\n                            if (DEBUG.EVENTS) out(\"activeMapChanged -> \" + aml);\n                            aml.activeMapChanged(activeMap);\n                        }\n                    }\n                }\n            } else {\n                // prob don't need this now that we're synchronized\n                ActiveViewer = viewer;\n            }\n        }\n    }","commit_id":"0e7747bf738fef13a2dc837f5e8cc793ea80c567","url":"https://github.com/VUE/VUE"},{"original_method":"public VueMenuBar(ToolWindow[] toolWindows)\n        {\n            addFocusListener(this);\n            final int metaMask = VueUtil.isMacPlatform() ? Event.META_MASK : Event.CTRL_MASK;\n        \n            JMenu fileMenu = new JMenu(\"File\");\n            JMenu editMenu = new JMenu(\"Edit\");\n            JMenu viewMenu = new JMenu(\"View\");\n            JMenu formatMenu = new JMenu(\"Format\");\n            JMenu arrangeMenu = new JMenu(\"Arrange\");\n            JMenu windowMenu = null;\n            JMenu alignMenu = new JMenu(\"Arrange/Align\");\n            //JMenu optionsMenu = menuBar.add(new JMenu(\"Options\"))l\n            JMenu helpMenu = add(new JMenu(\"Help\"));\n\n            //adding actions\n            SaveAction saveAction = new SaveAction(\"Save\", false);\n            SaveAction saveAsAction = new SaveAction(\"Save As...\");\n            OpenAction openAction = new OpenAction(\"Open Map...\");\n            ExitAction exitAction = new ExitAction(\"Quit\");\n            Publish publishAction = new Publish(\"Export\");\n        \n            // Actions added by the power team\n            PrintAction printAction = PrintAction.getPrintAction();\n            PDFTransform pdfAction = new PDFTransform(\"PDF\");\n            HTMLConversion htmlAction = new HTMLConversion(\"HTML\");\n            ImageConversion imageAction = new ImageConversion(\"JPEG\");\n            ImageMap imageMap = new ImageMap(\"IMAP\");\n            SVGConversion svgAction = new SVGConversion(\"SVG\");\n            XMLView xmlAction = new XMLView(\"XML View\");\n        \n            if (false && DEBUG.Enabled) {\n                // THIS CODE IS TRIGGERING THE TIGER ARRAY BOUNDS BUG:\n                // we're hitting bug in java (1.4.2, 1.5) on Tiger (OSX 10.4.2) here\n                // (apple.laf.ScreenMenuBar array index out of bounds exception)\n                JButton u = new JButton(Actions.Undo);\n                JButton r = new JButton(Actions.Redo);\n                JButton p = new JButton(printAction);\n                JButton v = new JButton(printAction);\n                v.setText(\"Print Visible\");\n            \n                u.setBackground(Color.white);\n                r.setBackground(Color.white);\n                add(u).setFocusable(false);\n                add(r).setFocusable(false);\n                add(p).setFocusable(false);\n                add(v).setFocusable(false);\n\n                //menuBar.add(new tufts.vue.gui.VueButton(Actions.Undo)).setFocusable(false);\n                // not picking up icon yet...\n            }\n\n            if (false && DEBUG.Enabled) {\n                // THIS CODE IS TRIGGERING THE TIGER ARRAY BOUNDS BUG (see above)\n                JMenu exportMenu = add(new JMenu(\"Export\"));\n                exportMenu.add(htmlAction);\n                exportMenu.add(pdfAction);\n                exportMenu.add(imageAction);\n                exportMenu.add(svgAction);\n                exportMenu.add(xmlAction);\n                exportMenu.add(imageMap);\n            }\n        \n            fileMenu.add(Actions.NewMap);\n            fileMenu.add(openAction).setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, metaMask));\n            fileMenu.add(saveAction).setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, metaMask));\n            fileMenu.add(saveAsAction).setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, metaMask+Event.SHIFT_MASK));\n            fileMenu.add(Actions.CloseMap);\n            fileMenu.add(printAction);\n            fileMenu.add(printAction).setText(\"Print Visible...\");\n            fileMenu.add(publishAction);\n            // GET RECENT FILES FROM PREFS!\n            //fileMenu.add(exportMenu);\n            if (isApplet() == false && MRJAdapter.isSwingUsingScreenMenuBar() == false) {\n                fileMenu.addSeparator();\n                fileMenu.add(exitAction);\n            }\n        \n            editMenu.add(Actions.Undo);\n            editMenu.add(Actions.Redo);\n            editMenu.addSeparator();\n            editMenu.add(Actions.NewNode);\n            editMenu.add(Actions.NewText);\n            editMenu.add(Actions.Rename);\n            editMenu.add(Actions.Duplicate);\n            editMenu.add(Actions.Delete);\n            editMenu.addSeparator();\n            editMenu.add(Actions.Cut);\n            editMenu.add(Actions.Copy);\n            editMenu.add(Actions.Paste);\n            editMenu.addSeparator();\n            editMenu.add(Actions.SelectAll);\n            editMenu.add(Actions.DeselectAll);\n            editMenu.addSeparator();\n            editMenu.add(Actions.editDataSource);\n            editMenu.addSeparator();\n            editMenu.add(Actions.UpdateResource).setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_U, metaMask));\n        \n            viewMenu.add(Actions.ZoomIn);\n            viewMenu.add(Actions.ZoomOut);\n            viewMenu.add(Actions.ZoomFit);\n            viewMenu.add(Actions.ZoomActual);\n            viewMenu.add(Actions.ToggleFullScreen);\n\n            formatMenu.add(Actions.FontSmaller);\n            formatMenu.add(Actions.FontBigger);\n            formatMenu.add(Actions.FontBold);\n            formatMenu.add(Actions.FontItalic);\n            //formatMenu.add(new JMenuItem(\"Size\"));\n            //formatMenu.add(new JMenuItem(\"Style\"));\n            //formatMenu.add(\"Text Justify\").setEnabled(false);\n            // TODO: ultimately better to break these out in to Node & Link submenus\n            formatMenu.addSeparator();\n            buildMenu(formatMenu, Actions.NODE_MENU_ACTIONS);\n            formatMenu.addSeparator();\n            buildMenu(formatMenu, Actions.LINK_MENU_ACTIONS);\n        \n            buildMenu(alignMenu, Actions.ARRANGE_MENU_ACTIONS);\n\n            arrangeMenu.add(Actions.BringToFront);\n            arrangeMenu.add(Actions.BringForward);\n            arrangeMenu.add(Actions.SendToBack);\n            arrangeMenu.add(Actions.SendBackward);\n            arrangeMenu.addSeparator();\n            arrangeMenu.add(Actions.Group);\n            arrangeMenu.add(Actions.Ungroup);\n            arrangeMenu.addSeparator();\n            arrangeMenu.add(alignMenu);\n        \n            int index = 0;\n            if (toolWindows != null) {\n\n                windowMenu = add(new JMenu(\"Window\"));\n                \n                for (int i = 0; i < toolWindows.length; i++) {\n                    //System.out.println(\"adding \" + toolWindows[i]);\n                    ToolWindow toolWindow = toolWindows[i];\n                    if (toolWindow == null)\n                        continue;\n                    final WindowDisplayAction windowAction = new WindowDisplayAction(toolWindow);\n                    final KeyStroke acceleratorKey = KeyStroke.getKeyStroke(KeyEvent.VK_1 + index++, Actions.COMMAND);\n                    windowAction.putValue(Action.ACCELERATOR_KEY, acceleratorKey);\n                    JCheckBoxMenuItem checkBox = new JCheckBoxMenuItem(windowAction);\n                    windowAction.setLinkedButton(checkBox);\n                    windowMenu.add(checkBox);\n                }\n            }\n        \n            //optionsMenu.add(new UserDataAction());\n        \n            helpMenu.add(new ShowURLAction(\"VUE Online\", \"http://vue.tccs.tufts.edu/\"));\n            helpMenu.add(new ShowURLAction(\"User Guide\", \"http://vue.tccs.tufts.edu/userdoc/\"));\n            helpMenu.add(new AboutAction());\n            helpMenu.add(new ShortcutsAction());\n\n            add(fileMenu);\n            add(editMenu);\n            add(viewMenu);\n            add(formatMenu);\n            add(arrangeMenu);\n            if (windowMenu != null)\n                add(windowMenu);\n            add(helpMenu);\n            \n        }","id":107136,"modified_method":"public VueMenuBar(ToolWindow[] toolWindows)\n        {\n            addFocusListener(this);\n            final int metaMask = VueUtil.isMacPlatform() ? Event.META_MASK : Event.CTRL_MASK;\n        \n            JMenu fileMenu = new JMenu(\"File\");\n            JMenu editMenu = new JMenu(\"Edit\");\n            JMenu viewMenu = new JMenu(\"View\");\n            JMenu formatMenu = new JMenu(\"Format\");\n            JMenu arrangeMenu = new JMenu(\"Arrange\");\n            JMenu windowMenu = null;\n            JMenu alignMenu = new JMenu(\"Arrange/Align\");\n            //JMenu optionsMenu = menuBar.add(new JMenu(\"Options\"))l\n            JMenu helpMenu = add(new JMenu(\"Help\"));\n\n            //adding actions\n            SaveAction saveAction = new SaveAction(\"Save\", false);\n            SaveAction saveAsAction = new SaveAction(\"Save As...\");\n            OpenAction openAction = new OpenAction(\"Open Map...\");\n            ExitAction exitAction = new ExitAction(\"Quit\");\n            Publish publishAction = new Publish(\"Export\");\n        \n            // Actions added by the power team\n            PrintAction printAction = PrintAction.getPrintAction();\n            PDFTransform pdfAction = new PDFTransform(\"PDF\");\n            HTMLConversion htmlAction = new HTMLConversion(\"HTML\");\n            ImageConversion imageAction = new ImageConversion(\"JPEG\");\n            ImageMap imageMap = new ImageMap(\"IMAP\");\n            SVGConversion svgAction = new SVGConversion(\"SVG\");\n            XMLView xmlAction = new XMLView(\"XML View\");\n        \n            if (false && DEBUG.Enabled) {\n                // THIS CODE IS TRIGGERING THE TIGER ARRAY BOUNDS BUG:\n                // we're hitting bug in java (1.4.2, 1.5) on Tiger (OSX 10.4.2) here\n                // (apple.laf.ScreenMenuBar array index out of bounds exception)\n                JButton u = new JButton(Actions.Undo);\n                JButton r = new JButton(Actions.Redo);\n                JButton p = new JButton(printAction);\n                JButton v = new JButton(printAction);\n                v.setText(\"Print Visible\");\n            \n                u.setBackground(Color.white);\n                r.setBackground(Color.white);\n                add(u).setFocusable(false);\n                add(r).setFocusable(false);\n                add(p).setFocusable(false);\n                add(v).setFocusable(false);\n\n                //menuBar.add(new tufts.vue.gui.VueButton(Actions.Undo)).setFocusable(false);\n                // not picking up icon yet...\n            }\n\n            if (false && DEBUG.Enabled) {\n                // THIS CODE IS TRIGGERING THE TIGER ARRAY BOUNDS BUG (see above)\n                JMenu exportMenu = add(new JMenu(\"Export\"));\n                exportMenu.add(htmlAction);\n                exportMenu.add(pdfAction);\n                exportMenu.add(imageAction);\n                exportMenu.add(svgAction);\n                exportMenu.add(xmlAction);\n                exportMenu.add(imageMap);\n            }\n        \n            fileMenu.add(Actions.NewMap);\n            fileMenu.add(openAction).setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, metaMask));\n            fileMenu.add(saveAction).setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, metaMask));\n            fileMenu.add(saveAsAction).setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, metaMask+Event.SHIFT_MASK));\n            fileMenu.add(Actions.CloseMap);\n            fileMenu.add(printAction);\n            fileMenu.add(printAction).setText(\"Print Visible...\");\n            fileMenu.add(publishAction);\n            // GET RECENT FILES FROM PREFS!\n            //fileMenu.add(exportMenu);\n\n            if (isApplet() || (VUE.isSystemPropertyTrue(\"apple.laf.useScreenMenuBar\") && VueUtil.isMacAquaLookAndFeel())) {\n                // Do NOT add quit to the file menu.\n                // Either we're an applet w/no quit, or it's already in the mac application menu bar.\n                // FYI, MRJAdapter.isSwingUsingScreenMenuBar() is not telling us the truth.\n            } else {\n                fileMenu.addSeparator();\n                fileMenu.add(exitAction);\n            }\n        \n            editMenu.add(Actions.Undo);\n            editMenu.add(Actions.Redo);\n            editMenu.addSeparator();\n            editMenu.add(Actions.NewNode);\n            editMenu.add(Actions.NewText);\n            editMenu.add(Actions.Rename);\n            editMenu.add(Actions.Duplicate);\n            editMenu.add(Actions.Delete);\n            editMenu.addSeparator();\n            editMenu.add(Actions.Cut);\n            editMenu.add(Actions.Copy);\n            editMenu.add(Actions.Paste);\n            editMenu.addSeparator();\n            editMenu.add(Actions.SelectAll);\n            editMenu.add(Actions.DeselectAll);\n            editMenu.addSeparator();\n            editMenu.add(Actions.editDataSource);\n            editMenu.addSeparator();\n            editMenu.add(Actions.UpdateResource).setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_U, metaMask));\n        \n            viewMenu.add(Actions.ZoomIn);\n            viewMenu.add(Actions.ZoomOut);\n            viewMenu.add(Actions.ZoomFit);\n            viewMenu.add(Actions.ZoomActual);\n            viewMenu.add(Actions.ToggleFullScreen);\n\n            formatMenu.add(Actions.FontSmaller);\n            formatMenu.add(Actions.FontBigger);\n            formatMenu.add(Actions.FontBold);\n            formatMenu.add(Actions.FontItalic);\n            //formatMenu.add(new JMenuItem(\"Size\"));\n            //formatMenu.add(new JMenuItem(\"Style\"));\n            //formatMenu.add(\"Text Justify\").setEnabled(false);\n            // TODO: ultimately better to break these out in to Node & Link submenus\n            formatMenu.addSeparator();\n            buildMenu(formatMenu, Actions.NODE_MENU_ACTIONS);\n            formatMenu.addSeparator();\n            buildMenu(formatMenu, Actions.LINK_MENU_ACTIONS);\n        \n            buildMenu(alignMenu, Actions.ARRANGE_MENU_ACTIONS);\n\n            arrangeMenu.add(Actions.BringToFront);\n            arrangeMenu.add(Actions.BringForward);\n            arrangeMenu.add(Actions.SendToBack);\n            arrangeMenu.add(Actions.SendBackward);\n            arrangeMenu.addSeparator();\n            arrangeMenu.add(Actions.Group);\n            arrangeMenu.add(Actions.Ungroup);\n            arrangeMenu.addSeparator();\n            arrangeMenu.add(alignMenu);\n        \n            int index = 0;\n            if (toolWindows != null) {\n\n                windowMenu = add(new JMenu(\"Window\"));\n                \n                for (int i = 0; i < toolWindows.length; i++) {\n                    //System.out.println(\"adding \" + toolWindows[i]);\n                    ToolWindow toolWindow = toolWindows[i];\n                    if (toolWindow == null)\n                        continue;\n                    final WindowDisplayAction windowAction = new WindowDisplayAction(toolWindow);\n                    final KeyStroke acceleratorKey = KeyStroke.getKeyStroke(KeyEvent.VK_1 + index++, Actions.COMMAND);\n                    windowAction.putValue(Action.ACCELERATOR_KEY, acceleratorKey);\n                    JCheckBoxMenuItem checkBox = new JCheckBoxMenuItem(windowAction);\n                    windowAction.setLinkedButton(checkBox);\n                    windowMenu.add(checkBox);\n                }\n            }\n        \n            //optionsMenu.add(new UserDataAction());\n        \n            helpMenu.add(new ShowURLAction(\"VUE Online\", \"http://vue.tccs.tufts.edu/\"));\n            helpMenu.add(new ShowURLAction(\"User Guide\", \"http://vue.tccs.tufts.edu/userdoc/\"));\n            helpMenu.add(new AboutAction());\n            helpMenu.add(new ShortcutsAction());\n\n            add(fileMenu);\n            add(editMenu);\n            add(viewMenu);\n            add(formatMenu);\n            add(arrangeMenu);\n            if (windowMenu != null)\n                add(windowMenu);\n            add(helpMenu);\n            \n        }","commit_id":"0e7747bf738fef13a2dc837f5e8cc793ea80c567","url":"https://github.com/VUE/VUE"},{"original_method":"public static void main(String[] args) {\n        System.out.println(\"VUE: main\");\n        System.out.println(\"VUE: build: \" + tufts.vue.Version.AllInfo);\n        System.out.println(\"VUE: name: \" + VUE.NAME);\n        //System.out.println(\"VUE: fully built: \" + build.version.AllInfo);\n\n        //VUE.TUFTS = \n        if (VUE.TUFTS)\n            System.out.println(\"VUE: TUFTS features only (no MIT/development)\");\n        else\n            System.out.println(\"VUE: MIT/development features enabled\");\n        \n        parseArgs(args);\n\n        // initUI installs the VueTheme (unless mac look), which must be done\n        // before any other GUI code (including the SlpashScreen)\n        // or our VueTheme gets ignored by swing.\n        initUI();\n\n        Window splashScreen = null;\n        if (nodr)\n            DEBUG.Enabled = true;\n        else\n            splashScreen = new SplashScreen();\n\n        //Preferences p = Preferences.userNodeForPackage(VUE.class);\n        //p.put(\"DRBROWSER.RUN\", \"yes, it has\");\n        \n\n        //-------------------------------------------------------\n        // Create the tabbed pane for the viewers\n        //-------------------------------------------------------\n        \n        mMapTabsLeft = new MapTabbedPane(\"*left\");\n        mMapTabsLeft.setTabPlacement(SwingConstants.BOTTOM);\n        mMapTabsLeft.setPreferredSize(new Dimension(300,400));\n        \n        mMapTabsRight = new MapTabbedPane(\"right\");\n        mMapTabsRight.setTabPlacement(SwingConstants.BOTTOM);\n        mMapTabsRight.setPreferredSize(new Dimension(300,400));\n        \n        //-------------------------------------------------------\n        // create a an application frame and layout components\n        //-------------------------------------------------------\n        \n        toolPanel = new JPanel();\n        //toolPanel.setMinimumSize(new Dimension(329,1)); // until DRBrowser loaded\n        toolPanel.setLayout(new BorderLayout());\n        DRBrowser drBrowser = null;\n        if (nodr == false)  {\n            drBrowser = new DRBrowser(true);\n            //if (VueUtil.isMacAquaLookAndFeel()) drBrowser.setBackground(SystemColor.control);\n            toolPanel.add(drBrowser, BorderLayout.CENTER);\n            \n            /*\n            try {\n                drBrowser = new DRBrowser();\n                toolPanel.add(new DRBrowser(), BorderLayout.CENTER);\n            } catch (Throwable e) {\n                e.printStackTrace();\n                System.err.println(\"DR browser blowing up -- try another day.\");\n            }\n            */\n        }\n\n        \n        JSplitPane splitPane = new JSplitPane();\n        //splitPane.setResizeWeight(0.40); // 25% space to the left component\n        splitPane.setContinuousLayout(false);\n        splitPane.setOneTouchExpandable(true);\n        splitPane.setLeftComponent(toolPanel);\n        if (VUE.NARRAVISION)\n            splitPane.setDividerLocation(0);\n        //splitPane.setLeftComponent(leftScroller);\n        \n        viewerSplit = new JSplitPane();\n        viewerSplit.setOneTouchExpandable(true);\n        viewerSplit.setRightComponent(mMapTabsRight);\n        // NOTE: set left component AFTER set right component -- the\n        // LAST set left/right call determines the default focus component!\n        // It needs to be the LEFT component as the right one isn't\n        // even visible at startup!\n        viewerSplit.setLeftComponent(mMapTabsLeft);\n        viewerSplit.setResizeWeight(0.5);\n        viewerSplit.setDividerLocation(9999);\n\n        viewerSplit.addPropertyChangeListener(new PropertyChangeListener() {\n                public void propertyChange(PropertyChangeEvent e) {\n                    //System.out.println(\"VS \" + e);\n                    if (!e.getPropertyName().equals(\"dividerLocation\"))\n                        return;\n                    if (DEBUG.FOCUS) out(\"viewerSplit: \" + e.getPropertyName()\n                                       + \"=\" + e.getNewValue().getClass().getName()\n                                       + \" \" + e.getNewValue());\n                    MapViewer leftViewer = null;\n                    MapViewer rightViewer = null;\n                    if (mMapTabsLeft != null)\n                        leftViewer = mMapTabsLeft.getSelectedViewer();\n                    if (mMapTabsRight != null)\n                        rightViewer = mMapTabsRight.getSelectedViewer();\n\n                    if (multipleMapsVisible()) {\n                        /*\n                          // should be handled by MapVewer.reshape\n                        if (leftViewer != null)\n                            leftViewer.fireViewerEvent(MapViewerEvent.PAN);\n                        if (rightViewer != null)\n                            rightViewer.fireViewerEvent(MapViewerEvent.PAN);\n                        */\n                    } else {\n                        if (leftViewer != null && leftViewer != getActiveViewer()) {\n                            if (DEBUG.FOCUS) out(\"viewerSplit: default focus to \" + leftViewer);\n                            leftViewer.requestFocus();\n                            if (rightViewer != null)\n                                rightViewer.fireViewerEvent(MapViewerEvent.HIDDEN);\n                        }\n                    }\n                }});\n        \n        \n        //splitPane.setRightComponent(mMapTabsLeft);\n        splitPane.setRightComponent(viewerSplit);\n        //JPanel vuePanel = new AAPanel();\n        JPanel vuePanel = new JPanel();\n        vuePanel.setLayout(new BorderLayout());\n        vuePanel.add(splitPane, BorderLayout.CENTER);\n\n        if (DEBUG.INIT) out(\"creating VueFrame...\");\n\n        VUE.frame = new VueFrame();\n\n        if (DEBUG.INIT) out(\"created VueFrame\");\n        \n        // Create the tool windows\n        ToolWindow pannerTool = createToolWindow(\"Panner\");\n        pannerTool.setSize(120,120);\n        pannerTool.addTool(new MapPanner());\n\n        if (DEBUG.INIT) out(\"created PannerTool\");\n        \n        ToolWindow inspectorTool = null;\n        /*\n        if (nodr) {\n            inspectorTool = createToolWindow(\"Inspector\");\n            inspectorTool.addTool(new LWCInspector());\n        }\n        */\n        \n        ToolWindow drBrowserTool = null;\n        //DataSourceViewer currently breaks if more than one DRBrowser\n        //ToolWindow drBrowserTool = createToolWindow(\"Data Sources\", frame);\n        //if (drBrowser != null) drBrowserTool.addTool(drBrowser);\n        \n        // The real tool palette window withtools and contextual tools\n        ToolWindow toolbarWindow = null;\n        VueToolbarController tbc = VueToolbarController.getController();\n        ModelSelection.addListener(tbc);\n        /*\n        ToolWindow toolbarWindow = createToolWindow( VueResources.getString(\"tbWindowName\"));\n        tbc.setToolWindow( toolbarWindow);\n        toolbarWindow.getContentPane().add( tbc.getToolbar() );\n        toolbarWindow.pack();\n         */\n\n        //frame.getContentPane().add(tbc.getToolbar(), BorderLayout.NORTH);\n                \n        JPanel toolBarPanel = null;\n        if (VUE.TUFTS) {\n            //toolBarPanel = new JPanel();\n            //toolBarPanel.add(tbc.getToolbar());\n            frame.addComp(tbc.getToolbar(), BorderLayout.NORTH);\n        } else {\n            toolBarPanel = new JPanel(new BorderLayout());\n            toolBarPanel.add(tbc.getToolbar(), BorderLayout.NORTH);\n            toolBarPanel.add(new VueToolBar(), BorderLayout.SOUTH);\n            frame.addComp(toolBarPanel, BorderLayout.NORTH);\n        }\n\n        if (DEBUG.INIT) out(\"created VueToolBar\");\n        // Map Inspector\n        \n        // get the proper scree/main frame size\n        sMapInspector = createToolWindow(VueResources.getString(\"mapInspectorTitle\"));\n        MapInspectorPanel mi = new MapInspectorPanel();\n        sMapInspector.addTool(mi);\n        \n        //ToolWindow objectInspector = createToolWindow( VueResources.getString(\"objectInspectorTitle\"), frame);\n        objectInspector = createToolWindow(VueResources.getString(\"objectInspectorTitle\"));\n        objectInspectorPanel = new ObjectInspectorPanel();\n        ModelSelection.addListener(objectInspectorPanel);\n        //sResourceSelection.addListener( objectInspectorPanel);\n        objectInspector.addTool(objectInspectorPanel);\n        \n        \n        if (false) {\n            JFrame testFrame = new JFrame(\"Debug\");\n            testFrame.setSize(300,300);\n            //testFrame.getContentPane().add( new NodeInspectorPanel() );\n            testFrame.getContentPane().add(objectInspectorPanel);\n            testFrame.show();\n        }\n        \n        if (DEBUG.INIT) out(\"creating LWOutlineView...\");\n        outlineView = new LWOutlineView(getRootFrame());\n        //outlineView = new LWOutlineView(VUE.frame);\n        \n        VUE.ToolWindows = new ToolWindow[] {\n            objectInspector,\n            sMapInspector,\n            drBrowserTool,\n            toolbarWindow,\n            pannerTool,\n            //htWindow,\n            outlineView,\n            inspectorTool,\n        };\n\n        // adding the menus and toolbars\n        if (DEBUG.INIT) out(\"setting JMenuBar...\");\n        frame.setJMenuBar(new VueMenuBar(VUE.ToolWindows));\n        if (DEBUG.INIT) out(\"VueMenuBar installed.\");;\n\n        // On Mac, need to set any frame's to have a duplicate\n        // of the main menu bar, so it stay's active at top\n        // when they have focus.\n        if (useMacLAF && VueUtil.isMacPlatform()) {\n            for (int i = 0; i < ToolWindows.length; i++) {\n                ToolWindow toolWindow = VUE.ToolWindows[i];\n                if (toolWindow == null)\n                    continue;\n                Window w = toolWindow.getWindow();\n\n                if (w instanceof JFrame) {\n                    if (nodr) {\n                        // we're hitting bug in java 1.4.2 on Tiger here (apple.laf.ScreenMenuBar bounds exception)\n                        // Mysteriously, it only happens using the debug option -nodr for no DR browser.\n                        out(\"adding menu bar to \" + w);\n                    }\n                    try {\n                        ((JFrame)w).setJMenuBar(new VueMenuBar(ToolWindows));\n                    } catch (ArrayIndexOutOfBoundsException e) {\n                        out(\"OSX TIGER JAVA BUG\");\n                        e.printStackTrace();\n                    }\n                    toolWindow.setProcessKeyBindingsToMenuBar(false);\n                }\n            }\n            if (DEBUG.INIT) out(\"Mac ToolWindow VueMenuBar's installed.\");\n        }\n        \n        frame.addComp(vuePanel,BorderLayout.CENTER);\n        //frame.getContentPane().setBackground(Color.red);\n        //frame.setContentPane(vuePanel);\n        //frame.setContentPane(splitPane);\n        //frame.setBackground(Color.white);\n        try {\n            frame.pack();\n        } catch (ArrayIndexOutOfBoundsException e) {\n            out(\"OSX TIGER JAVA BUG at frame.pack()\");\n            e.printStackTrace();\n        }\n        if (nodr) {\n            frame.setSize(750,450);\n        } else {\n            frame.setSize(800,600);// todo: make % of screen, make sure tool windows below don't go off screen!\n            if (VUE.NARRAVISION)\n                frame.setExtendedState(Frame.MAXIMIZED_BOTH);\n        }\n        if (DEBUG.INIT) out(\"validating frame...\");\n        frame.validate();\n        if (DEBUG.INIT) out(\"frame validated\");\n\n        VueUtil.centerOnScreen(frame);\n        \n        // position inspectors pased on frame location\n        //int inspectorx = frame.getX() + frame.getWidth() - sMapInspector.getWidth();\n        int inspectorx = frame.getX() + frame.getWidth();\n        sMapInspector.suggestLocation(inspectorx, frame.getY());\n        objectInspector.suggestLocation(inspectorx, frame.getY() + sMapInspector.getHeight() );\n        pannerTool.suggestLocation(frame.getX() - pannerTool.getWidth(), frame.getY());\n        \n        frame.addWindowListener(new WindowAdapter() {\n            public void windowClosing(WindowEvent e) {\n                System.out.println(e);\n                ExitAction.exitVue();\n                //-------------------------------------------------------\n                // if we get here, it means exit was aborted.\n                // (something wasn't saved & they decided to cancel or\n                // there was an error during the save)\n                //-------------------------------------------------------\n                //frame.show(); not working!  How to cancel this\n                // windowClose?  According to WindowEvent.java &\n                // WindowAdapter.java, canceling this windowClosing is\n                // supposed to be possible, but they don't mention\n                // how. Anyway, we've overriden setVisible on VueFrame\n                // to make it impossible to hide it, and that works,\n                // so this event just becomes the they've pressed on\n                // the close button event.\n                return;\n            }\n            public void windowClosed(WindowEvent e) {\n                // I've never see us even get this event...\n                System.err.println(e);\n                System.err.println(\"Too late: window disposed: exiting.\");\n                System.exit(-1);\n            }\n            public void windowStateChanged(WindowEvent e) {\n                System.out.println(e);\n            }\n        });\n\n        VUE.isStartupUnderway = false;\n        \n        if (!nodr) {\n            LWMap startupMap = null;\n            try {\n                final java.net.URL startupURL;\n                startupURL = VueResources.getURL(\"resource.startmap\");\n                startupMap = OpenAction.loadMap(startupURL);\n                startupMap.setFile(null); // dissassociate startup map from it's file so we don't write over it\n                startupMap.setLabel(\"Welcome\");\n                startupMap.markAsSaved();\n            } catch (Exception ex) {\n                ex.printStackTrace();\n                VueUtil.alert(null, \"Cannot load the Start-up map\", \"Start Up Map Error\");\n            }\n\n            try {\n                if (startupMap != null)\n                    displayMap(startupMap);\n            } catch (Exception ex) {\n                ex.printStackTrace();\n                VueUtil.alert(null, \"Failed to display Start-up Map\", \"Internal Error\");\n            }\n            \n        } else {\n            //pannerTool.setVisible(true);\n        }\n\n        out(\"showing frame...\");\n        frame.show();\n        if (DEBUG.INIT) out(\"frame visible\");\n        \n        if (splashScreen != null)\n            splashScreen.setVisible(false);\n\n        VUE.activateWaitCursor();\n\n        boolean gotMapFromCommandLine = false;\n        \n        if (args.length > 0) {\n            try {\n                for (int i = 0; i < args.length; i++) {\n                    if (args[i].charAt(0) == '-')\n                        continue;\n                    LWMap map = OpenAction.loadMap(args[i]);\n                    if (map != null) {\n                        displayMap(map);\n                        gotMapFromCommandLine = true;\n                    }\n                }\n            } finally {\n                //VUE.clearWaitCursor();                \n            }\n        }\n        \n        if (nodr && gotMapFromCommandLine == false) {\n            //-------------------------------------------------------\n            // create example map(s)\n            //-------------------------------------------------------\n            //LWMap map1 = new LWMap(\"Map 1\");\n            LWMap map2 = new LWMap(\"Map 2\");\n            \n            //installExampleNodes(map1);\n            installExampleMap(map2);\n            \n            //map1.setFillColor(new Color(255, 255, 192));\n            \n            //displayMap(map1);\n            displayMap(map2);\n            //toolPanel.add(new JLabel(\"Empty Label\"), BorderLayout.CENTER);\n        }\n\n        if (DEBUG.INIT) out(\"map loaded\");\n        if (drBrowser != null) {\n            drBrowser.loadDataSourceViewer();\n            if (VUE.TUFTS) // leave collapsed if NarraVision\n                splitPane.resetToPreferredSizes();\n        }\n\n        out(\"loading fonts...\");\n        FontEditorPanel.getFontNames();\n        out(\"caching tool panels...\");\n        NodeTool.getNodeToolPanel();\n        LinkTool.getLinkToolPanel();\n        if (drBrowser != null && drBrowserTool != null)\n            drBrowserTool.addTool(new DRBrowser());\n\n        if (VueUtil.isMacPlatform())\n            installMacOSXApplicationEventHandlers();\n\n        // MAC v.s. PC WINDOW PARENTAGE & FOCUS BEHAVIOUR:\n        //\n        // Window's that are shown before their parent's are shown do\n        // NOT adopt a stay-on-top-of-parent behaviour! (at least on\n        // mac).  FURTHERMORE: if you iconfiy the parent and\n        // de-iconify it, the keep-on-top is also lost permanently!\n        // (Even if you hide/show the child window after that) None of\n        // this happens on the PC, only Mac OS X.  Iconifying also\n        // hides the child windows on the PC, but not on Mac.  On the\n        // PC, there's also no automatic way to install the action\n        // behaviours to take effect (the ones in the menu bar) when a\n        // tool window has focus.  Actually, mac appears to do\n        // something smart also: if parent get's MAXIMIZED, it\n        // will return to the keep on top behaviour, but you\n        // have to manually hide/show it to get it back on top.\n        //\n        // Also: for some odd reason, if we use an intermediate\n        // root window as the master parent, the MapPanner display\n        // doesn't repaint itself when dragging it or it's map!\n        \n        getRootWindow().show();\n\n        //out(\"ACTIONTMAP \" + java.util.Arrays.asList(frame.getRootPane().getActionMap().allKeys()));\n        //out(\"INPUTMAP \" + java.util.Arrays.asList(frame.getRootPane().getInputMap().allKeys()));\n        //out(\"\\n\\nACTIONTMAP \" + java.util.Arrays.asList(frame.getActionMap().allKeys()));\n        //out(\"ACTIONTMAP \" + Arrays.asList(VUE.getActiveViewer().getActionMap().allKeys()));\n        //out(\"INPUTMAP \" + Arrays.asList(VUE.getActiveViewer().getInputMap().keys()));\n        //out(\"INPUTMAP \" + Arrays.asList(getInputMap().keys()));\n\n        VUE.clearWaitCursor();\n        \n        out(\"main completed.\");\n\n        if (exitAfterInit)\n            System.exit(0);\n    }","id":107137,"modified_method":"public static void main(String[] args) {\n        System.out.println(\"VUE: main\");\n        System.out.println(\"VUE: build: \" + tufts.vue.Version.AllInfo);\n        System.out.println(\"VUE: name: \" + VUE.NAME);\n        //System.out.println(\"VUE: fully built: \" + build.version.AllInfo);\n\n        //VUE.TUFTS = \n        if (VUE.TUFTS)\n            System.out.println(\"VUE: TUFTS features only (no MIT/development)\");\n        else\n            System.out.println(\"VUE: MIT/development features enabled\");\n        \n        parseArgs(args);\n\n        // initUI installs the VueTheme (unless mac look), which must be done\n        // before any other GUI code (including the SlpashScreen)\n        // or our VueTheme gets ignored by swing.\n        initUI();\n\n        Window splashScreen = null;\n        if (nodr)\n            DEBUG.Enabled = true;\n        else\n            splashScreen = new SplashScreen();\n\n        //Preferences p = Preferences.userNodeForPackage(VUE.class);\n        //p.put(\"DRBROWSER.RUN\", \"yes, it has\");\n        \n\n        //-------------------------------------------------------\n        // Create the tabbed pane for the viewers\n        //-------------------------------------------------------\n        \n        mMapTabsLeft = new MapTabbedPane(\"*left\");\n        mMapTabsLeft.setTabPlacement(SwingConstants.BOTTOM);\n        mMapTabsLeft.setPreferredSize(new Dimension(300,400));\n        \n        mMapTabsRight = new MapTabbedPane(\"right\");\n        mMapTabsRight.setTabPlacement(SwingConstants.BOTTOM);\n        mMapTabsRight.setPreferredSize(new Dimension(300,400));\n        \n        //-------------------------------------------------------\n        // create a an application frame and layout components\n        //-------------------------------------------------------\n        \n        toolPanel = new JPanel();\n        //toolPanel.setMinimumSize(new Dimension(329,1)); // until DRBrowser loaded\n        toolPanel.setLayout(new BorderLayout());\n        DRBrowser drBrowser = null;\n        if (nodr == false)  {\n            drBrowser = new DRBrowser(true);\n            //if (VueUtil.isMacAquaLookAndFeel()) drBrowser.setBackground(SystemColor.control);\n            toolPanel.add(drBrowser, BorderLayout.CENTER);\n            \n            /*\n            try {\n                drBrowser = new DRBrowser();\n                toolPanel.add(new DRBrowser(), BorderLayout.CENTER);\n            } catch (Throwable e) {\n                e.printStackTrace();\n                System.err.println(\"DR browser blowing up -- try another day.\");\n            }\n            */\n        }\n\n        \n        JSplitPane splitPane = new JSplitPane();\n        //splitPane.setResizeWeight(0.40); // 25% space to the left component\n        splitPane.setContinuousLayout(false);\n        splitPane.setOneTouchExpandable(true);\n        splitPane.setLeftComponent(toolPanel);\n        if (VUE.NARRAVISION)\n            splitPane.setDividerLocation(0);\n        //splitPane.setLeftComponent(leftScroller);\n        \n        viewerSplit = new JSplitPane();\n        viewerSplit.setOneTouchExpandable(true);\n        viewerSplit.setRightComponent(mMapTabsRight);\n        // NOTE: set left component AFTER set right component -- the\n        // LAST set left/right call determines the default focus component!\n        // It needs to be the LEFT component as the right one isn't\n        // even visible at startup!\n        viewerSplit.setLeftComponent(mMapTabsLeft);\n        viewerSplit.setResizeWeight(0.5);\n        viewerSplit.setDividerLocation(9999);\n\n        viewerSplit.addPropertyChangeListener(new PropertyChangeListener() {\n                public void propertyChange(PropertyChangeEvent e) {\n                    //System.out.println(\"VS \" + e);\n                    if (!e.getPropertyName().equals(\"dividerLocation\"))\n                        return;\n                    if (DEBUG.FOCUS) out(\"viewerSplit: \" + e.getPropertyName()\n                                       + \"=\" + e.getNewValue().getClass().getName()\n                                       + \" \" + e.getNewValue());\n                    MapViewer leftViewer = null;\n                    MapViewer rightViewer = null;\n                    if (mMapTabsLeft != null)\n                        leftViewer = mMapTabsLeft.getSelectedViewer();\n                    if (mMapTabsRight != null)\n                        rightViewer = mMapTabsRight.getSelectedViewer();\n\n                    if (multipleMapsVisible()) {\n                        /*\n                          // should be handled by MapVewer.reshape\n                        if (leftViewer != null)\n                            leftViewer.fireViewerEvent(MapViewerEvent.PAN);\n                        if (rightViewer != null)\n                            rightViewer.fireViewerEvent(MapViewerEvent.PAN);\n                        */\n                    } else {\n                        if (leftViewer != null && leftViewer != getActiveViewer()) {\n                            if (DEBUG.FOCUS) out(\"viewerSplit: default focus to \" + leftViewer);\n                            leftViewer.requestFocus();\n                            if (rightViewer != null)\n                                rightViewer.fireViewerEvent(MapViewerEvent.HIDDEN);\n                        }\n                    }\n                }});\n        \n        \n        //splitPane.setRightComponent(mMapTabsLeft);\n        splitPane.setRightComponent(viewerSplit);\n        //JPanel vuePanel = new AAPanel();\n        JPanel vuePanel = new JPanel();\n        vuePanel.setLayout(new BorderLayout());\n        vuePanel.add(splitPane, BorderLayout.CENTER);\n\n        if (DEBUG.INIT) out(\"creating VueFrame...\");\n\n        VUE.frame = new VueFrame();\n\n        if (DEBUG.INIT) out(\"created VueFrame\");\n        \n        // Create the tool windows\n        ToolWindow pannerTool = createToolWindow(\"Panner\");\n        pannerTool.setSize(120,120);\n        pannerTool.addTool(new MapPanner());\n\n        if (DEBUG.INIT) out(\"created PannerTool\");\n        \n        ToolWindow inspectorTool = null;\n        /*\n        if (nodr) {\n            inspectorTool = createToolWindow(\"Inspector\");\n            inspectorTool.addTool(new LWCInspector());\n        }\n        */\n        \n        ToolWindow drBrowserTool = null;\n        //DataSourceViewer currently breaks if more than one DRBrowser\n        //ToolWindow drBrowserTool = createToolWindow(\"Data Sources\", frame);\n        //if (drBrowser != null) drBrowserTool.addTool(drBrowser);\n        \n        // The real tool palette window withtools and contextual tools\n        ToolWindow toolbarWindow = null;\n        VueToolbarController tbc = VueToolbarController.getController();\n        ModelSelection.addListener(tbc);\n        /*\n        ToolWindow toolbarWindow = createToolWindow( VueResources.getString(\"tbWindowName\"));\n        tbc.setToolWindow( toolbarWindow);\n        toolbarWindow.getContentPane().add( tbc.getToolbar() );\n        toolbarWindow.pack();\n         */\n\n        //frame.getContentPane().add(tbc.getToolbar(), BorderLayout.NORTH);\n                \n        JPanel toolBarPanel = null;\n        if (VUE.TUFTS) {\n            //toolBarPanel = new JPanel();\n            //toolBarPanel.add(tbc.getToolbar());\n            frame.addComp(tbc.getToolbar(), BorderLayout.NORTH);\n        } else {\n            toolBarPanel = new JPanel(new BorderLayout());\n            toolBarPanel.add(tbc.getToolbar(), BorderLayout.NORTH);\n            toolBarPanel.add(new VueToolBar(), BorderLayout.SOUTH);\n            frame.addComp(toolBarPanel, BorderLayout.NORTH);\n        }\n\n        if (DEBUG.INIT) out(\"created VueToolBar\");\n        // Map Inspector\n        \n        // get the proper scree/main frame size\n        sMapInspector = createToolWindow(VueResources.getString(\"mapInspectorTitle\"));\n        MapInspectorPanel mi = new MapInspectorPanel();\n        sMapInspector.addTool(mi);\n        \n        //ToolWindow objectInspector = createToolWindow( VueResources.getString(\"objectInspectorTitle\"), frame);\n        objectInspector = createToolWindow(VueResources.getString(\"objectInspectorTitle\"));\n        objectInspectorPanel = new ObjectInspectorPanel();\n        ModelSelection.addListener(objectInspectorPanel);\n        //sResourceSelection.addListener( objectInspectorPanel);\n        objectInspector.addTool(objectInspectorPanel);\n        \n        \n        if (false) {\n            JFrame testFrame = new JFrame(\"Debug\");\n            testFrame.setSize(300,300);\n            //testFrame.getContentPane().add( new NodeInspectorPanel() );\n            testFrame.getContentPane().add(objectInspectorPanel);\n            testFrame.show();\n        }\n        \n        if (DEBUG.INIT) out(\"creating LWOutlineView...\");\n        outlineView = new LWOutlineView(getRootFrame());\n        //outlineView = new LWOutlineView(VUE.frame);\n        \n        VUE.ToolWindows = new ToolWindow[] {\n            objectInspector,\n            sMapInspector,\n            drBrowserTool,\n            toolbarWindow,\n            pannerTool,\n            //htWindow,\n            outlineView,\n            inspectorTool,\n        };\n\n        // adding the menus and toolbars\n        if (DEBUG.INIT) out(\"setting JMenuBar...\");\n        frame.setJMenuBar(new VueMenuBar(VUE.ToolWindows));\n        if (DEBUG.INIT) out(\"VueMenuBar installed.\");;\n\n        // On Mac, need to set any frame's to have a duplicate\n        // of the main menu bar, so it stay's active at top\n        // when they have focus.\n        if (useMacLAF && VueUtil.isMacPlatform()) {\n            for (int i = 0; i < ToolWindows.length; i++) {\n                ToolWindow toolWindow = VUE.ToolWindows[i];\n                if (toolWindow == null)\n                    continue;\n                Window w = toolWindow.getWindow();\n\n                if (w instanceof JFrame) {\n                    if (nodr) {\n                        // we're hitting bug in java 1.4.2 on Tiger here (apple.laf.ScreenMenuBar bounds exception)\n                        // Mysteriously, it only happens using the debug option -nodr for no DR browser.\n                        if (DEBUG.INIT) out(\"adding menu bar to \" + w);\n                    }\n                    try {\n                        ((JFrame)w).setJMenuBar(new VueMenuBar(ToolWindows));\n                    } catch (ArrayIndexOutOfBoundsException e) {\n                        out(\"OSX TIGER JAVA BUG\");\n                        e.printStackTrace();\n                    }\n                    toolWindow.setProcessKeyBindingsToMenuBar(false);\n                }\n            }\n            if (DEBUG.INIT) out(\"Mac ToolWindow VueMenuBar's installed.\");\n        }\n        \n        frame.addComp(vuePanel,BorderLayout.CENTER);\n        //frame.getContentPane().setBackground(Color.red);\n        //frame.setContentPane(vuePanel);\n        //frame.setContentPane(splitPane);\n        //frame.setBackground(Color.white);\n        try {\n            frame.pack();\n        } catch (ArrayIndexOutOfBoundsException e) {\n            out(\"OSX TIGER JAVA BUG at frame.pack()\");\n            e.printStackTrace();\n        }\n        if (nodr) {\n            frame.setSize(750,450);\n        } else {\n            frame.setSize(800,600);// todo: make % of screen, make sure tool windows below don't go off screen!\n            if (VUE.NARRAVISION)\n                frame.setExtendedState(Frame.MAXIMIZED_BOTH);\n        }\n        if (DEBUG.INIT) out(\"validating frame...\");\n        frame.validate();\n        if (DEBUG.INIT) out(\"frame validated\");\n\n        VueUtil.centerOnScreen(frame);\n        \n        // position inspectors pased on frame location\n        //int inspectorx = frame.getX() + frame.getWidth() - sMapInspector.getWidth();\n        int inspectorx = frame.getX() + frame.getWidth();\n        sMapInspector.suggestLocation(inspectorx, frame.getY());\n        objectInspector.suggestLocation(inspectorx, frame.getY() + sMapInspector.getHeight() );\n        pannerTool.suggestLocation(frame.getX() - pannerTool.getWidth(), frame.getY());\n        \n        frame.addWindowListener(new WindowAdapter() {\n            public void windowClosing(WindowEvent e) {\n                System.out.println(e);\n                ExitAction.exitVue();\n                //-------------------------------------------------------\n                // if we get here, it means exit was aborted.\n                // (something wasn't saved & they decided to cancel or\n                // there was an error during the save)\n                //-------------------------------------------------------\n                //frame.show(); not working!  How to cancel this\n                // windowClose?  According to WindowEvent.java &\n                // WindowAdapter.java, canceling this windowClosing is\n                // supposed to be possible, but they don't mention\n                // how. Anyway, we've overriden setVisible on VueFrame\n                // to make it impossible to hide it, and that works,\n                // so this event just becomes the they've pressed on\n                // the close button event.\n                return;\n            }\n            public void windowClosed(WindowEvent e) {\n                // I've never see us even get this event...\n                System.err.println(e);\n                System.err.println(\"Too late: window disposed: exiting.\");\n                System.exit(-1);\n            }\n            public void windowStateChanged(WindowEvent e) {\n                System.out.println(e);\n            }\n        });\n\n        VUE.isStartupUnderway = false;\n        \n        if (!nodr) {\n            LWMap startupMap = null;\n            try {\n                final java.net.URL startupURL;\n                startupURL = VueResources.getURL(\"resource.startmap\");\n                startupMap = OpenAction.loadMap(startupURL);\n                startupMap.setFile(null); // dissassociate startup map from it's file so we don't write over it\n                startupMap.setLabel(\"Welcome\");\n                startupMap.markAsSaved();\n            } catch (Exception ex) {\n                ex.printStackTrace();\n                VueUtil.alert(null, \"Cannot load the Start-up map\", \"Start Up Map Error\");\n            }\n\n            try {\n                if (startupMap != null)\n                    displayMap(startupMap);\n            } catch (Exception ex) {\n                ex.printStackTrace();\n                VueUtil.alert(null, \"Failed to display Start-up Map\", \"Internal Error\");\n            }\n            \n        } else {\n            //pannerTool.setVisible(true);\n        }\n\n        out(\"showing frame...\");\n        frame.show();\n        if (DEBUG.INIT) out(\"frame visible\");\n        \n        if (splashScreen != null)\n            splashScreen.setVisible(false);\n\n        VUE.activateWaitCursor();\n\n        boolean gotMapFromCommandLine = false;\n        \n        if (args.length > 0) {\n            try {\n                for (int i = 0; i < args.length; i++) {\n                    if (args[i].charAt(0) == '-')\n                        continue;\n                    LWMap map = OpenAction.loadMap(args[i]);\n                    if (map != null) {\n                        displayMap(map);\n                        gotMapFromCommandLine = true;\n                    }\n                }\n            } finally {\n                //VUE.clearWaitCursor();                \n            }\n        }\n        \n        if (nodr && gotMapFromCommandLine == false) {\n            //-------------------------------------------------------\n            // create example map(s)\n            //-------------------------------------------------------\n            //LWMap map1 = new LWMap(\"Map 1\");\n            LWMap map2 = new LWMap(\"Map 2\");\n            \n            //installExampleNodes(map1);\n            installExampleMap(map2);\n            \n            //map1.setFillColor(new Color(255, 255, 192));\n            \n            //displayMap(map1);\n            displayMap(map2);\n            //toolPanel.add(new JLabel(\"Empty Label\"), BorderLayout.CENTER);\n        }\n\n        if (DEBUG.INIT) out(\"map loaded\");\n        if (drBrowser != null) {\n            drBrowser.loadDataSourceViewer();\n            if (VUE.TUFTS) // leave collapsed if NarraVision\n                splitPane.resetToPreferredSizes();\n        }\n\n        out(\"loading fonts...\");\n        FontEditorPanel.getFontNames();\n        out(\"caching tool panels...\");\n        NodeTool.getNodeToolPanel();\n        LinkTool.getLinkToolPanel();\n        if (drBrowser != null && drBrowserTool != null)\n            drBrowserTool.addTool(new DRBrowser());\n\n        if (VueUtil.isMacPlatform())\n            installMacOSXApplicationEventHandlers();\n\n        // MAC v.s. PC WINDOW PARENTAGE & FOCUS BEHAVIOUR:\n        //\n        // Window's that are shown before their parent's are shown do\n        // NOT adopt a stay-on-top-of-parent behaviour! (at least on\n        // mac).  FURTHERMORE: if you iconfiy the parent and\n        // de-iconify it, the keep-on-top is also lost permanently!\n        // (Even if you hide/show the child window after that) None of\n        // this happens on the PC, only Mac OS X.  Iconifying also\n        // hides the child windows on the PC, but not on Mac.  On the\n        // PC, there's also no automatic way to install the action\n        // behaviours to take effect (the ones in the menu bar) when a\n        // tool window has focus.  Actually, mac appears to do\n        // something smart also: if parent get's MAXIMIZED, it\n        // will return to the keep on top behaviour, but you\n        // have to manually hide/show it to get it back on top.\n        //\n        // Also: for some odd reason, if we use an intermediate\n        // root window as the master parent, the MapPanner display\n        // doesn't repaint itself when dragging it or it's map!\n        \n        getRootWindow().show();\n\n        //out(\"ACTIONTMAP \" + java.util.Arrays.asList(frame.getRootPane().getActionMap().allKeys()));\n        //out(\"INPUTMAP \" + java.util.Arrays.asList(frame.getRootPane().getInputMap().allKeys()));\n        //out(\"\\n\\nACTIONTMAP \" + java.util.Arrays.asList(frame.getActionMap().allKeys()));\n        //out(\"ACTIONTMAP \" + Arrays.asList(VUE.getActiveViewer().getActionMap().allKeys()));\n        //out(\"INPUTMAP \" + Arrays.asList(VUE.getActiveViewer().getInputMap().keys()));\n        //out(\"INPUTMAP \" + Arrays.asList(getInputMap().keys()));\n\n        VUE.clearWaitCursor();\n        \n        out(\"main completed.\");\n\n        if (exitAfterInit)\n            System.exit(0);\n    }","commit_id":"0e7747bf738fef13a2dc837f5e8cc793ea80c567","url":"https://github.com/VUE/VUE"},{"original_method":"public static void parseArgs(String[] args) {\n        String allArgs = \"\";\n        for (int i = 0; i < args.length; i++) {\n            allArgs += \"[\" + args[i] + \"]\";\n            if (args[i].equals(\"-nodr\"))\n                nodr = true;\n            else if (args[i].equals(\"-mac\") || args[i].equals(\"-useMacLookAndFeel\"))\n                useMacLAF = true;\n            else if (args[i].equals(\"-debug_init\"))     DEBUG.INIT = true;\n            else if (args[i].equals(\"-debug_focus\"))    DEBUG.FOCUS = true;\n            else if (args[i].equals(\"-debug_dr\"))       DEBUG.DR = true;\n            else if (args[i].equals(\"-debug_tool\"))     DEBUG.TOOL = true;\n            else if (args[i].equals(\"-debug_drop\"))     DEBUG.DND = true;\n            else if (args[i].equals(\"-debug_event\"))    DEBUG.EVENTS = true;\n            else if (args[i].equals(\"-debug_undo\"))     DEBUG.UNDO = true;\n            else if (args[i].equals(\"-debug_castor\"))   DEBUG.CASTOR = true;\n            else if (args[i].equals(\"-debug_xml\"))      DEBUG.XML = true;\n            else if (args[i].equals(\"-exit_after_init\")) // for startup time trials\n                exitAfterInit = true;\n\n            if (args[i].startsWith(\"-debug\")) DEBUG.Enabled = true;\n        }\n        out(\"parsed args \" + allArgs);\n    }","id":107138,"modified_method":"public static void parseArgs(String[] args) {\n        String allArgs = \"\";\n        for (int i = 0; i < args.length; i++) {\n            allArgs += \"[\" + args[i] + \"]\";\n            if (args[i].equals(\"-nodr\"))\n                nodr = true;\n            else if (args[i].equals(\"-mac\") || args[i].equals(\"-useMacLookAndFeel\"))\n                useMacLAF = true;\n            else if (args[i].equals(\"-debug_init\"))     DEBUG.INIT = true;\n            else if (args[i].equals(\"-debug_focus\"))    DEBUG.FOCUS = true;\n            else if (args[i].equals(\"-debug_dr\"))       DEBUG.DR = true;\n            else if (args[i].equals(\"-debug_tool\"))     DEBUG.TOOL = true;\n            else if (args[i].equals(\"-debug_drop\"))     DEBUG.DND = true;\n            else if (args[i].equals(\"-debug_undo\"))     DEBUG.UNDO = true;\n            else if (args[i].equals(\"-debug_castor\"))   DEBUG.CASTOR = true;\n            else if (args[i].equals(\"-debug_xml\"))      DEBUG.XML = true;\n            else if (args[i].equals(\"-debug_paint\"))    DEBUG.PAINT = true;\n            else if (args[i].equals(\"-debug_mouse\"))    DEBUG.MOUSE = true;\n            else if (args[i].startsWith(\"-debug_event\"))   DEBUG.EVENTS = true;\n            else if (args[i].startsWith(\"-debug_thread\"))  DEBUG.THREAD = true;\n            else if (args[i].startsWith(\"-debug_image\"))   DEBUG.IMAGE = true;\n            else if (args[i].equals(\"-exit_after_init\")) // for startup time trials\n                exitAfterInit = true;\n\n            if (args[i].startsWith(\"-debug\")) DEBUG.Enabled = true;\n        }\n        out(\"parsed args \" + allArgs);\n    }","commit_id":"0e7747bf738fef13a2dc837f5e8cc793ea80c567","url":"https://github.com/VUE/VUE"},{"original_method":"public static String getSystemProperty(String name) {\n        // If we're an applet, System.getProperty will trhow an AccessControlException\n        if (false && isApplet())\n            return null;\n        else {\n            String prop;\n            try {\n                prop = System.getProperty(name);\n                if (DEBUG.INIT) out(\"got property \" + name);\n            } catch (java.security.AccessControlException e) {\n                System.err.println(e);\n                prop = null;\n            }\n            return prop;\n        }\n    }","id":107139,"modified_method":"public static String getSystemProperty(String name) {\n        // If we're an applet, System.getProperty will trhow an AccessControlException\n        if (false && isApplet())\n            return null;\n        else {\n            String prop;\n            try {\n                prop = System.getProperty(name);\n                if (DEBUG.INIT) {\n                    out(\"got property \" + name);\n                    if (name.equals(\"apple.awt.brushMetalLook\"))\n                        new Throwable(\"apple.awt.brushMetalLook\").printStackTrace();\n                }\n            } catch (java.security.AccessControlException e) {\n                System.err.println(e);\n                prop = null;\n            }\n            return prop;\n        }\n    }","commit_id":"0e7747bf738fef13a2dc837f5e8cc793ea80c567","url":"https://github.com/VUE/VUE"},{"original_method":"void completeXMLRestore() {\n            // this is a hack for now: just grab the first\n            // child that is a style parent, and assume\n            // it's our desired text style.\n            for (LWComponent c : children) {\n                // check the label is a temporary hack\n                if (\"Sample Text\".equals(c.getLabel()) || TextLabel.equals(c.getLabel())) {\n                    textStyle = c;\n                    out(\"FOUND TEXT STYLE \" + c);\n                } else if (TitleLabel.equals(c.getLabel())) {\n                    out(\"FOUND TITLE  STYLE \" + c);\n                    titleStyle = c;\n                }\n            }\n            initStyles();\n        }","id":107140,"modified_method":"void completeXMLRestore() {\n            // this is a hack for now: just grab the first\n            // child that is a style parent, and assume\n            // it's our desired text style.\n            for (LWComponent c : children) {\n                // check the label is a temporary hack\n                if (\"Sample Text\".equals(c.getLabel()) || TextLabel.equals(c.getLabel())) {\n                    textStyle = c;\n                    if (DEBUG.PRESENT) out(\"FOUND TEXT STYLE \" + c);\n                } else if (TitleLabel.equals(c.getLabel())) {\n                    if (DEBUG.PRESENT) out(\"FOUND TITLE STYLE \" + c);\n                    titleStyle = c;\n                }\n            }\n            if (textStyle == null || titleStyle == null)\n                createStyles();\n            initStyles();\n        }","commit_id":"68a4ad6a8afa84142317b8a5b3ad285366415646","url":"https://github.com/VUE/VUE"},{"original_method":"MasterSlide(final LWPathway owner)\n        {\n            //getMasterStyle();\n                \n            setStrokeWidth(0);\n            //if (owner != null) setFillColor(owner.getStrokeColor()); // TODO: debugging for now: use the pathway stroke as slide color\n            setFillColor(Color.black);\n            setSize(SlideWidth, SlideHeight);\n\n            // Create the default items for the master slide:\n            \n            titleStyle = NodeTool.initAsTextNode(new LWNode(TitleLabel));\n            titleStyle.setFont(new Font(\"Gill Sans\", Font.PLAIN, 36));\n            titleStyle.setTextColor(Color.white);\n            \n            textStyle = titleStyle.duplicate();\n            textStyle.setLabel(TextLabel);\n            textStyle.setFont(titleStyle.getFont().deriveFont(22f));\n            \n            titleStyle.setLocation(40,30);\n            textStyle.setLocation(45,100);\n\n            initStyles();\n            \n            if (owner != null) {\n                setParent(owner);\n                ensureID(this);\n            }\n            \n\n            LWComponent header = NodeTool.buildTextNode(\"Header Text\");\n            header.setFont(titleStyle.getFont().deriveFont(16f));\n            header.setTextColor(VueResources.makeColor(\"#b3bfe3\"));\n\n            LWComponent footer = header.duplicate();\n            footer.setLabel(\"Footer Text\");\n\n            //tufts.Util.printStackTrace(\"inPath=\" + owner + \" pathMAP=\" + owner.getMap());\n\n            \n            addChild(titleStyle);\n            addChild(textStyle);\n            addChild(header);\n            addChild(footer);\n            \n            // Now that the footer is parented, move it to lower right in it's parent\n            LWSelection s = new LWSelection(header);\n\n            s.setTo(header);\n            Actions.AlignRightEdges.act(s);\n            Actions.AlignTopEdges.act(s);\n\n            s.setTo(footer);\n            Actions.AlignRightEdges.act(s);\n            Actions.AlignBottomEdges.act(s);\n\n            /*\n            s.setTo(titleStyle);\n            Actions.AlignCentersRow.act(s);\n            Actions.AlignCentersColumn.act(s);\n\n            s.setTo(textStyle);\n            Actions.AlignCentersRow.act(s);\n            Actions.AlignCentersColumn.act(s);\n            \n            //titleStyle.translate(0, -100);\n            //textStyle.translate(0, +50);\n            */\n\n        }","id":107141,"modified_method":"MasterSlide(final LWPathway owner)\n        {\n            //getMasterStyle();\n                \n            setStrokeWidth(0);\n            //if (owner != null) setFillColor(owner.getStrokeColor()); // TODO: debugging for now: use the pathway stroke as slide color\n            setFillColor(Color.black);\n            setSize(SlideWidth, SlideHeight);\n\n            // Create the default items for the master slide:\n            \n            createStyles();\n            initStyles();\n            \n            if (owner != null) {\n                setParent(owner);\n                ensureID(this);\n            }\n            \n\n            LWComponent header = NodeTool.buildTextNode(\"Header Text\");\n            header.setFont(titleStyle.getFont().deriveFont(16f));\n            header.setTextColor(VueResources.makeColor(\"#b3bfe3\"));\n\n            LWComponent footer = header.duplicate();\n            footer.setLabel(\"Footer Text\");\n\n            //tufts.Util.printStackTrace(\"inPath=\" + owner + \" pathMAP=\" + owner.getMap());\n\n            \n            addChild(titleStyle);\n            addChild(textStyle);\n            addChild(header);\n            addChild(footer);\n            \n            // Now that the footer is parented, move it to lower right in it's parent\n            LWSelection s = new LWSelection(header);\n\n            s.setTo(header);\n            Actions.AlignRightEdges.act(s);\n            Actions.AlignTopEdges.act(s);\n\n            s.setTo(footer);\n            Actions.AlignRightEdges.act(s);\n            Actions.AlignBottomEdges.act(s);\n\n            /*\n            s.setTo(titleStyle);\n            Actions.AlignCentersRow.act(s);\n            Actions.AlignCentersColumn.act(s);\n\n            s.setTo(textStyle);\n            Actions.AlignCentersRow.act(s);\n            Actions.AlignCentersColumn.act(s);\n            \n            //titleStyle.translate(0, -100);\n            //textStyle.translate(0, +50);\n            */\n\n        }","commit_id":"68a4ad6a8afa84142317b8a5b3ad285366415646","url":"https://github.com/VUE/VUE"},{"original_method":"private boolean updateBounds()\n    {\n        Rectangle2D.Float newBounds = getChildBounds();\n        boolean reshaped = false;\n        if (newBounds.x != getX() || newBounds.y != getY()) {\n                \n            translateChildren(getX() - newBounds.x,\n                              getY() - newBounds.y,\n                              null);\n            out(\"UPDATING LOCATION\\n\");\n            super.takeLocation(newBounds.x, newBounds.y);\n            reshaped = true;\n        }\n        \n        if (newBounds.width != getWidth() || newBounds.height != getHeight())\n            reshaped = true;\n        \n        if (reshaped) {\n            out(\"UPDATING SIZE\\n\");\n            super.takeSize(newBounds.width, newBounds.height);\n            return true;\n        } else\n            return false;\n        \n    }","id":107142,"modified_method":"private boolean updateBounds()\n    {\n        Rectangle2D.Float newBounds = getChildBounds();\n        boolean reshaped = false;\n        if (newBounds.x != getX() || newBounds.y != getY()) {\n                \n            translateChildren(getX() - newBounds.x,\n                              getY() - newBounds.y,\n                              null);\n            if (DEBUG.CONTAINMENT) out(\"UPDATING LOCATION\\n\");\n            super.takeLocation(newBounds.x, newBounds.y);\n            reshaped = true;\n        }\n        \n        if (newBounds.width != getWidth() || newBounds.height != getHeight())\n            reshaped = true;\n        \n        if (reshaped) {\n            if (DEBUG.CONTAINMENT) out(\"UPDATING SIZE\\n\");\n            super.takeSize(newBounds.width, newBounds.height);\n            return true;\n        } else\n            return false;\n        \n    }","commit_id":"2e0555d1cd88ca1633e39a0f2ad84588d38812f8","url":"https://github.com/VUE/VUE"},{"original_method":"public boolean handleMouseMoved(MapMouseEvent e)\n    {\n        boolean handled = false;\n        if (DEBUG.PICK && mShowNavigator)\n            handled = debugTrackNavMapMouseOver(e);\n\n        boolean oldShowNav = mShowNavNodes;\n\n        int maxHeight = e.getViewer().getVisibleBounds().height;\n        if (e.getY() > maxHeight - 40) {\n            out(\"nav nodes on \" + e.getY() + \" max=\" + maxHeight);\n            mShowNavNodes = true;\n        } else {\n            out(\"nav nodes off \" + e.getY() + \" max=\" + maxHeight);\n            mShowNavNodes = false;\n        }\n\n        if (oldShowNav != mShowNavNodes)\n            e.getViewer().repaint();\n\n        return handled;\n    }","id":107143,"modified_method":"public boolean handleMouseMoved(MapMouseEvent e)\n    {\n        boolean handled = false;\n        if (DEBUG.PICK && mShowNavigator)\n            handled = debugTrackNavMapMouseOver(e);\n\n        boolean oldShowNav = mShowNavNodes;\n\n        int maxHeight = e.getViewer().getVisibleBounds().height;\n        if (e.getY() > maxHeight - 40) {\n            if (DEBUG.PRESENT) out(\"nav nodes on \" + e.getY() + \" max=\" + maxHeight);\n            mShowNavNodes = true;\n        } else {\n            if (DEBUG.PRESENT) out(\"nav nodes off \" + e.getY() + \" max=\" + maxHeight);\n            mShowNavNodes = false;\n        }\n\n        if (oldShowNav != mShowNavNodes)\n            e.getViewer().repaint();\n\n        return handled;\n    }","commit_id":"df301800b6c0c57daa6fde800474af7e2e3b926a","url":"https://github.com/VUE/VUE"},{"original_method":"public Object[] getVariants() {\n    final PyExpression qualifier = getQualifier();\n    if (qualifier != null) {\n      PyType qualifierType = qualifier.getType();\n      if (qualifierType != null) {\n        return qualifierType.getCompletionVariants(this);\n      }\n      return new Object[0];\n    }\n\n    if (PsiTreeUtil.getParentOfType(this, PyImportElement.class, PyFromImportStatement.class) != null) {\n      // complete to possible modules\n      return ResolveImportUtil.suggestImportVariants(this);\n    }\n\n    //// include our own names\n    //final PyResolveUtil.VariantsProcessor processor = new PyResolveUtil.VariantsProcessor();\n    //PyResolveUtil.treeCrawlUp(processor, this); // names from here\n    //// scan all \"import *\" and include names provided by them\n    //PyResolveUtil.CollectProcessor<PyStarImportElement> collect_proc;\n    //collect_proc = new PyResolveUtil.CollectProcessor<PyStarImportElement>(PyStarImportElement.class);\n    //PyResolveUtil.treeCrawlUp(collect_proc, this);\n    //List<PyStarImportElement> stars = collect_proc.getResult();\n    //for (PyStarImportElement star_elt : stars) {\n    //  final PyFromImportStatement from_import_stmt = (PyFromImportStatement)star_elt.getParent();\n    //  if (from_import_stmt != null) {\n    //    final PyReferenceExpression import_src = from_import_stmt.getImportSource();\n    //    if (import_src != null) {\n    //      processor.setNotice(\" | \" + import_src.getName());\n    //      PyResolveUtil.treeCrawlUp(processor, import_src.resolve()); // names from that module\n    //    }\n    //  }\n    //}\n    //// include builtin names\n    //processor.setNotice(\" | __builtin__\");\n    //PyResolveUtil.treeCrawlUp(processor, PyBuiltinCache.getInstance(getProject()).getBuiltinsFile(), true); // names from __builtin__\n\n    final PyResolveUtil.VariantsProcessor processor = new PyResolveUtil.VariantsProcessor();\n    PyResolveUtil.treeCrawlUp(processor, this);\n    return processor.getResult();\n  }","id":107144,"modified_method":"public Object[] getVariants() {\n    final PyExpression qualifier = getQualifier();\n    if (qualifier != null) {\n      PyType qualifierType = qualifier.getType();\n      if (qualifierType != null) {\n        return qualifierType.getCompletionVariants(this);\n      }\n      return new Object[0];\n    }\n\n    if (PsiTreeUtil.getParentOfType(this, PyImportElement.class, PyFromImportStatement.class) != null) {\n      // complete to possible modules\n      return ResolveImportUtil.suggestImportVariants(this);\n    }\n\n    // include our own names\n    final PyResolveUtil.VariantsProcessor processor = new PyResolveUtil.VariantsProcessor();\n    PyResolveUtil.treeCrawlUp(processor, this); // names from here\n    // scan all \"import *\" and include names provided by them\n    PyResolveUtil.CollectProcessor<PyStarImportElement> collect_proc;\n    collect_proc = new PyResolveUtil.CollectProcessor<PyStarImportElement>(PyStarImportElement.class);\n    PyResolveUtil.treeCrawlUp(collect_proc, this);\n    List<PyStarImportElement> stars = collect_proc.getResult();\n    for (PyStarImportElement star_elt : stars) {\n      final PyFromImportStatement from_import_stmt = (PyFromImportStatement)star_elt.getParent();\n      if (from_import_stmt != null) {\n        final PyReferenceExpression import_src = from_import_stmt.getImportSource();\n        if (import_src != null) {\n          processor.setNotice(\" | \" + import_src.getName());\n          PyResolveUtil.treeCrawlUp(processor, import_src.resolve()); // names from that module\n        }\n      }\n    }\n    // include builtin names\n    processor.setNotice(\" | __builtin__\");\n    PyResolveUtil.treeCrawlUp(processor, PyBuiltinCache.getInstance(getProject()).getBuiltinsFile(), true); // names from __builtin__\n    return processor.getResult();\n  }","commit_id":"fcb4977be0eb5f2b1caaba2c59dc611208456b4f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean execute(PsiElement element, ResolveState substitutor) {\n      // TODO: refactor to look saner; much code duplication\n      if (element instanceof PsiNamedElement) {\n        final PsiNamedElement psiNamedElement = (PsiNamedElement)element;\n        final String name = psiNamedElement.getName();\n        if (!myVariants.containsKey(name)) {\n          myVariants.put(name, LookupElementFactory.getInstance().createLookupElement(psiNamedElement));\n        }\n      }\n      else if (element instanceof PyReferenceExpression) {\n        PyReferenceExpression expr = (PyReferenceExpression)element;\n        String referencedName = expr.getReferencedName();\n        if (referencedName != null && !myVariants.containsKey(referencedName)) {\n          myVariants.put(referencedName, LookupElementFactory.getInstance().createLookupElement(element, referencedName));\n        }\n      }\n      else if (element instanceof NameDefiner) {\n        final NameDefiner definer = (NameDefiner)element;\n        for (PyElement expr: definer.iterateNames()) {\n          if (expr != null) { // NOTE: maybe rather have SingleIterables skip nulls outright?\n            String referencedName = expr.getName();\n            if (referencedName != null && !myVariants.containsKey(referencedName)) {\n              myVariants.put(referencedName, LookupElementFactory.getInstance().createLookupElement(element, referencedName));\n            }\n          }\n        }\n      }\n\n      return true;\n    }","id":107145,"modified_method":"public boolean execute(PsiElement element, ResolveState substitutor) {\n      // TODO: refactor to look saner; much code duplication\n      if (element instanceof PsiNamedElement) {\n        final PsiNamedElement psiNamedElement = (PsiNamedElement)element;\n        final String name = psiNamedElement.getName();\n        if (!myVariants.containsKey(name)) {\n          final LookupItem lookup_item = (LookupItem)LookupElementFactory.getInstance().createLookupElement(psiNamedElement);\n          setupItem(lookup_item);\n          myVariants.put(name, lookup_item);\n        }\n      }\n      else if (element instanceof PyReferenceExpression) {\n        PyReferenceExpression expr = (PyReferenceExpression)element;\n        String referencedName = expr.getReferencedName();\n        if (referencedName != null && !myVariants.containsKey(referencedName)) {\n          final LookupItem lookup_item = (LookupItem)LookupElementFactory.getInstance().createLookupElement(element, referencedName);\n          setupItem(lookup_item);\n          myVariants.put(referencedName, lookup_item);\n        }\n      }\n      else if (element instanceof NameDefiner) {\n        final NameDefiner definer = (NameDefiner)element;\n        for (PyElement expr: definer.iterateNames()) {\n          if (expr != null) { // NOTE: maybe rather have SingleIterables skip nulls outright?\n            String referencedName = expr.getName();\n            if (referencedName != null && !myVariants.containsKey(referencedName)) {\n              final LookupItem lookup_item = (LookupItem)LookupElementFactory.getInstance().createLookupElement(referencedName);\n              setupItem(lookup_item);\n              if (definer instanceof PyImportElement) { // set notice to imported module name if needed \n                PsiElement maybe_from_import = definer.getParent();\n                if (maybe_from_import instanceof PyFromImportStatement) {\n                  final PyFromImportStatement from_import = (PyFromImportStatement)maybe_from_import;\n                  PyReferenceExpression src = from_import.getImportSource();\n                  if (src != null) {\n                    setItemNotice(lookup_item, \" | \" + src.getName());\n                  }\n                }\n              }\n              myVariants.put(referencedName, lookup_item);\n            }\n          }\n        }\n      }\n\n      return true;\n    }","commit_id":"fcb4977be0eb5f2b1caaba2c59dc611208456b4f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n        protected LevelData fetchNextOrNull()\n        {\n            while ( true )\n            {\n                Relationship nextRel = fetchNextRelOrNull();\n                if ( nextRel == null )\n                {\n                    return null;\n                }\n                \n                // If we've already traversed this relationship then don't bother\n                // traversing it again\n//                if ( !sharedVisitedRels.add( nextRel.getId() ) )\n//                {\n//                    continue;\n//                }\n                \n                Node result = nextRel.getOtherNode( this.lastParentTraverserNode );\n                LevelData levelData = this.visitedNodes.get( result );\n                boolean createdLevelData = false;\n                if ( levelData == null )\n                {\n                    levelData = new LevelData( result, this.currentDepth );\n                    this.visitedNodes.put( result, levelData );\n                    createdLevelData = true;\n                }\n                \n                if ( this.currentDepth < levelData.depth )\n                {\n                    throw new RuntimeException( \"This shouldn't happen... I think\" );\n                }\n                else if ( this.currentDepth == levelData.depth )\n                {\n                    for ( Path.Builder parentPath : this.lastParentLevelData.paths )\n                    {\n                        levelData.paths.add( parentPath.push( nextRel ) );\n                    }\n                }\n                \n                // Have we visited this node before? In that case don't add it\n                // as next node to traverse\n                if ( !createdLevelData )\n                {\n                    continue;\n                }\n                \n                this.nextNodes.add( result );\n                return levelData;\n            }\n        }","id":107146,"modified_method":"@Override\n        protected LevelData fetchNextOrNull()\n        {\n            while ( true )\n            {\n                Relationship nextRel = fetchNextRelOrNull();\n                if ( nextRel == null )\n                {\n                    return null;\n                }\n                \n                // If we've already traversed this relationship then don't bother\n                // traversing it again\n//                if ( !sharedVisitedRels.add( nextRel.getId() ) )\n//                {\n//                    continue;\n//                }\n                \n                Node result = nextRel.getOtherNode( this.lastParentTraverserNode );\n                LevelData levelData = this.visitedNodes.get( result );\n                boolean createdLevelData = false;\n                if ( levelData == null )\n                {\n                    levelData = new LevelData( result, this.currentDepth );\n                    this.visitedNodes.put( result, levelData );\n                    createdLevelData = true;\n                }\n                \n                if ( this.currentDepth < levelData.depth )\n                {\n                    throw new RuntimeException( \"This shouldn't happen... I think\" );\n                }\n                else if ( !this.stopAsap && this.currentDepth == levelData.depth )\n                {\n                    for ( Path.Builder parentPath : this.lastParentLevelData.paths )\n                    {\n                        levelData.paths.add( parentPath.push( nextRel ) );\n                    }\n                }\n                \n                // Have we visited this node before? In that case don't add it\n                // as next node to traverse\n                if ( !createdLevelData )\n                {\n                    continue;\n                }\n                \n                this.nextNodes.add( result );\n                return levelData;\n            }\n        }","commit_id":"1af5acd93cd99b85a990bb758487712e3aad4d96","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Collection<Path> internalPaths( Node start, Node end,\n            boolean stopAsap )\n    {\n        if ( start.equals( end ) )\n        {\n            return Arrays.asList( Path.singular( start ) );\n        }\n\n        Map<Integer, Collection<Hit>> hits =\n                new HashMap<Integer, Collection<Hit>>();\n        Collection<Long> sharedVisitedRels = new HashSet<Long>();\n        ValueHolder<Integer> sharedFrozenDepth = new ValueHolder<Integer>( null );\n        ValueHolder<Boolean> sharedStop = new ValueHolder<Boolean>( false );\n        ValueHolder<Integer> sharedCurrentDepth = new ValueHolder<Integer>( 0 );\n        final DirectionData startData = new DirectionData( \"start\", start,\n                sharedVisitedRels, sharedFrozenDepth, sharedStop,\n                sharedCurrentDepth );\n        final DirectionData endData = new DirectionData( \"end\", end,\n                sharedVisitedRels, sharedFrozenDepth, sharedStop,\n                sharedCurrentDepth );\n        \n        while ( startData.hasNext() || endData.hasNext() )\n        {\n            goOneStep( startData, endData, hits, stopAsap, startData );\n            goOneStep( endData, startData, hits, stopAsap, startData );\n        }\n        return least( hits );\n    }","id":107147,"modified_method":"private Collection<Path> internalPaths( Node start, Node end,\n            boolean stopAsap )\n    {\n        if ( start.equals( end ) )\n        {\n            return Arrays.asList( Path.singular( start ) );\n        }\n\n        Map<Integer, Collection<Hit>> hits =\n                new HashMap<Integer, Collection<Hit>>();\n        Collection<Long> sharedVisitedRels = new HashSet<Long>();\n        ValueHolder<Integer> sharedFrozenDepth = new ValueHolder<Integer>( null );\n        ValueHolder<Boolean> sharedStop = new ValueHolder<Boolean>( false );\n        ValueHolder<Integer> sharedCurrentDepth = new ValueHolder<Integer>( 0 );\n        final DirectionData startData = new DirectionData( \"start\", start,\n                sharedVisitedRels, sharedFrozenDepth, sharedStop,\n                sharedCurrentDepth, stopAsap );\n        final DirectionData endData = new DirectionData( \"end\", end,\n                sharedVisitedRels, sharedFrozenDepth, sharedStop,\n                sharedCurrentDepth, stopAsap );\n        \n        while ( startData.hasNext() || endData.hasNext() )\n        {\n            goOneStep( startData, endData, hits, stopAsap, startData );\n            goOneStep( endData, startData, hits, stopAsap, startData );\n        }\n        return least( hits );\n    }","commit_id":"1af5acd93cd99b85a990bb758487712e3aad4d96","url":"https://github.com/neo4j/neo4j"},{"original_method":"public SingleStepShortestPathsFinder( int maxDepth, RelationshipExpander relExpander )\n    {\n        this.maxDepth = maxDepth;\n        this.relExpander = relExpander;\n    }","id":107148,"modified_method":"public SingleStepShortestPathsFinder( GraphDatabaseService graphDb,\n            int maxDepth, RelationshipExpander relExpander )\n    {\n        this.graphDb = graphDb;\n        this.maxDepth = maxDepth;\n        this.relExpander = relExpander;\n    }","commit_id":"1af5acd93cd99b85a990bb758487712e3aad4d96","url":"https://github.com/neo4j/neo4j"},{"original_method":"DirectionData( String name, Node startNode, Collection<Long> sharedVisitedRels,\n                ValueHolder<Integer> sharedFrozenDepth, ValueHolder<Boolean> sharedStop,\n                ValueHolder<Integer> sharedCurrentDepth )\n        {\n//            this.name = name;\n            this.visitedNodes.put( startNode, new LevelData( startNode,\n                    currentDepth, new Path.Builder( startNode ) ) );\n            this.nextNodes.add( startNode );\n//            this.sharedVisitedRels = sharedVisitedRels;\n            this.sharedFrozenDepth = sharedFrozenDepth;\n            this.sharedStop = sharedStop;\n            this.sharedCurrentDepth = sharedCurrentDepth;\n            prepareNextLevel();\n        }","id":107149,"modified_method":"DirectionData( String name, Node startNode, Collection<Long> sharedVisitedRels,\n                ValueHolder<Integer> sharedFrozenDepth, ValueHolder<Boolean> sharedStop,\n                ValueHolder<Integer> sharedCurrentDepth, boolean stopAsap )\n        {\n//            this.name = name;\n            this.visitedNodes.put( startNode, new LevelData( startNode,\n                    currentDepth, new Path.Builder( startNode ) ) );\n            this.nextNodes.add( startNode );\n//            this.sharedVisitedRels = sharedVisitedRels;\n            this.sharedFrozenDepth = sharedFrozenDepth;\n            this.sharedStop = sharedStop;\n            this.sharedCurrentDepth = sharedCurrentDepth;\n            this.stopAsap = stopAsap;\n            prepareNextLevel();\n        }","commit_id":"1af5acd93cd99b85a990bb758487712e3aad4d96","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Path path( Node start, Node end )\n    {\n        Collection<Path> paths = internalPaths( start, end, true );\n        return !paths.isEmpty() ? paths.iterator().next() : null;\n    }","id":107150,"modified_method":"public Path path( Node start, Node end )\n    {\n        Collection<Path> paths = internalPaths( start, end, true );\n        return IteratorUtil.singleValueOrNull( paths.iterator() );\n    }","commit_id":"1af5acd93cd99b85a990bb758487712e3aad4d96","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void testAnotherSimpleGraph()\n    {\n        // Layout:\n        //   (m)\n        //   /  \\\n        // (s)  (o)---(t)\n        //   \\  /       \\\n        //   (n)---(p)---(q)\n        graph.makeEdge( \"s\", \"m\" );\n        graph.makeEdge( \"m\", \"o\" );\n        graph.makeEdge( \"s\", \"n\" );\n        graph.makeEdge( \"n\", \"p\" );\n        graph.makeEdge( \"p\", \"q\" );\n        graph.makeEdge( \"q\", \"t\" );\n        graph.makeEdge( \"n\", \"o\" );\n        graph.makeEdge( \"o\", \"t\" );\n\n        SingleStepShortestPathsFinder finder = new SingleStepShortestPathsFinder( 6,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = finder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,m,o,t\", \"s,n,o,t\" );\n    }","id":107151,"modified_method":"public void testAnotherSimpleGraph()\n    {\n        // Layout:\n        //   (m)\n        //   /  \\\n        // (s)  (o)---(t)\n        //   \\  /       \\\n        //   (n)---(p)---(q)\n        graph.makeEdge( \"s\", \"m\" );\n        graph.makeEdge( \"m\", \"o\" );\n        graph.makeEdge( \"s\", \"n\" );\n        graph.makeEdge( \"n\", \"p\" );\n        graph.makeEdge( \"p\", \"q\" );\n        graph.makeEdge( \"q\", \"t\" );\n        graph.makeEdge( \"n\", \"o\" );\n        graph.makeEdge( \"o\", \"t\" );\n\n        SingleStepShortestPathsFinder finder = new SingleStepShortestPathsFinder( graphDb, 6,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = finder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,m,o,t\", \"s,n,o,t\" );\n    }","commit_id":"1af5acd93cd99b85a990bb758487712e3aad4d96","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void testCrossedCircle()\n    {\n        // Layout:\n        //    (s)\n        //   /   \\\n        // (3)   (1)\n        //  | \\ / |\n        //  | / \\ |\n        // (4)   (5)\n        //   \\   /\n        //    (t)\n        graph.makeEdge( \"s\", \"1\" );\n        graph.makeEdge( \"s\", \"3\" );\n        graph.makeEdge( \"1\", \"2\" );\n        graph.makeEdge( \"1\", \"4\" );\n        graph.makeEdge( \"3\", \"2\" );\n        graph.makeEdge( \"3\", \"4\" );\n        graph.makeEdge( \"2\", \"t\" );\n        graph.makeEdge( \"4\", \"t\" );\n        \n        SingleStepShortestPathsFinder singleStepFinder = new SingleStepShortestPathsFinder( 3,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = singleStepFinder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,1,2,t\", \"s,1,4,t\", \"s,3,2,t\", \"s,3,4,t\" );\n\n        LevelShortestPathsFinder levelFinder = new LevelShortestPathsFinder( 3, MyRelTypes.R1,\n                Direction.BOTH );\n        paths = levelFinder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,1,2,t\", \"s,1,4,t\", \"s,3,2,t\", \"s,3,4,t\" );\n    }","id":107152,"modified_method":"public void testCrossedCircle()\n    {\n        // Layout:\n        //    (s)\n        //   /   \\\n        // (3)   (1)\n        //  | \\ / |\n        //  | / \\ |\n        // (4)   (5)\n        //   \\   /\n        //    (t)\n        graph.makeEdge( \"s\", \"1\" );\n        graph.makeEdge( \"s\", \"3\" );\n        graph.makeEdge( \"1\", \"2\" );\n        graph.makeEdge( \"1\", \"4\" );\n        graph.makeEdge( \"3\", \"2\" );\n        graph.makeEdge( \"3\", \"4\" );\n        graph.makeEdge( \"2\", \"t\" );\n        graph.makeEdge( \"4\", \"t\" );\n        \n        SingleStepShortestPathsFinder singleStepFinder = new SingleStepShortestPathsFinder( graphDb, 3,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = singleStepFinder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,1,2,t\", \"s,1,4,t\", \"s,3,2,t\", \"s,3,4,t\" );\n\n        LevelShortestPathsFinder levelFinder = new LevelShortestPathsFinder( 3, MyRelTypes.R1,\n                Direction.BOTH );\n        paths = levelFinder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,1,2,t\", \"s,1,4,t\", \"s,3,2,t\", \"s,3,4,t\" );\n    }","commit_id":"1af5acd93cd99b85a990bb758487712e3aad4d96","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void testSimplestGraph()\n    {\n        // Layout:\n        //    __\n        //   /  \\\n        // (s)  (t)\n        //   \\__/\n        graph.makeEdge( \"s\", \"t\" );\n        graph.makeEdge( \"s\", \"t\" );\n\n        SingleStepShortestPathsFinder finder = new SingleStepShortestPathsFinder( 1,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = finder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertEquals( 2, paths.size() );\n        assertPaths( paths, \"s,t\", \"s,t\" );\n    }","id":107153,"modified_method":"public void testSimplestGraph()\n    {\n        // Layout:\n        //    __\n        //   /  \\\n        // (s)  (t)\n        //   \\__/\n        graph.makeEdge( \"s\", \"t\" );\n        graph.makeEdge( \"s\", \"t\" );\n\n        SingleStepShortestPathsFinder finder = new SingleStepShortestPathsFinder( graphDb, 1,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = finder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertEquals( 2, paths.size() );\n        assertPaths( paths, \"s,t\", \"s,t\" );\n    }","commit_id":"1af5acd93cd99b85a990bb758487712e3aad4d96","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Path path( Node start, Node end )\n    {\n        Collection<Path> paths = internalPaths( start, end, true );\n        return !paths.isEmpty() ? paths.iterator().next() : null;\n    }","id":107154,"modified_method":"public Path path( Node start, Node end )\n    {\n        Collection<Path> paths = internalPaths( start, end, true );\n        return IteratorUtil.singleValueOrNull( paths.iterator() );\n    }","commit_id":"9b8548f8356723e6bd959310d184b3a5ef558761","url":"https://github.com/neo4j/neo4j"},{"original_method":"DirectionData( String name, Node startNode, Collection<Long> sharedVisitedRels,\n                ValueHolder<Integer> sharedFrozenDepth, ValueHolder<Boolean> sharedStop,\n                ValueHolder<Integer> sharedCurrentDepth )\n        {\n//            this.name = name;\n            this.visitedNodes.put( startNode, new LevelData( startNode,\n                    currentDepth, new Path.Builder( startNode ) ) );\n            this.nextNodes.add( startNode );\n//            this.sharedVisitedRels = sharedVisitedRels;\n            this.sharedFrozenDepth = sharedFrozenDepth;\n            this.sharedStop = sharedStop;\n            this.sharedCurrentDepth = sharedCurrentDepth;\n            prepareNextLevel();\n        }","id":107155,"modified_method":"DirectionData( String name, Node startNode, Collection<Long> sharedVisitedRels,\n                ValueHolder<Integer> sharedFrozenDepth, ValueHolder<Boolean> sharedStop,\n                ValueHolder<Integer> sharedCurrentDepth, boolean stopAsap )\n        {\n//            this.name = name;\n            this.visitedNodes.put( startNode, new LevelData( startNode,\n                    currentDepth, new Path.Builder( startNode ) ) );\n            this.nextNodes.add( startNode );\n//            this.sharedVisitedRels = sharedVisitedRels;\n            this.sharedFrozenDepth = sharedFrozenDepth;\n            this.sharedStop = sharedStop;\n            this.sharedCurrentDepth = sharedCurrentDepth;\n            this.stopAsap = stopAsap;\n            prepareNextLevel();\n        }","commit_id":"9b8548f8356723e6bd959310d184b3a5ef558761","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Collection<Path> internalPaths( Node start, Node end,\n            boolean stopAsap )\n    {\n        if ( start.equals( end ) )\n        {\n            return Arrays.asList( Path.singular( start ) );\n        }\n\n        Map<Integer, Collection<Hit>> hits =\n                new HashMap<Integer, Collection<Hit>>();\n        Collection<Long> sharedVisitedRels = new HashSet<Long>();\n        ValueHolder<Integer> sharedFrozenDepth = new ValueHolder<Integer>( null );\n        ValueHolder<Boolean> sharedStop = new ValueHolder<Boolean>( false );\n        ValueHolder<Integer> sharedCurrentDepth = new ValueHolder<Integer>( 0 );\n        final DirectionData startData = new DirectionData( \"start\", start,\n                sharedVisitedRels, sharedFrozenDepth, sharedStop,\n                sharedCurrentDepth );\n        final DirectionData endData = new DirectionData( \"end\", end,\n                sharedVisitedRels, sharedFrozenDepth, sharedStop,\n                sharedCurrentDepth );\n        \n        while ( startData.hasNext() || endData.hasNext() )\n        {\n            goOneStep( startData, endData, hits, stopAsap, startData );\n            goOneStep( endData, startData, hits, stopAsap, startData );\n        }\n        return least( hits );\n    }","id":107156,"modified_method":"private Collection<Path> internalPaths( Node start, Node end,\n            boolean stopAsap )\n    {\n        if ( start.equals( end ) )\n        {\n            return Arrays.asList( Path.singular( start ) );\n        }\n\n        Map<Integer, Collection<Hit>> hits =\n                new HashMap<Integer, Collection<Hit>>();\n        Collection<Long> sharedVisitedRels = new HashSet<Long>();\n        ValueHolder<Integer> sharedFrozenDepth = new ValueHolder<Integer>( null );\n        ValueHolder<Boolean> sharedStop = new ValueHolder<Boolean>( false );\n        ValueHolder<Integer> sharedCurrentDepth = new ValueHolder<Integer>( 0 );\n        final DirectionData startData = new DirectionData( \"start\", start,\n                sharedVisitedRels, sharedFrozenDepth, sharedStop,\n                sharedCurrentDepth, stopAsap );\n        final DirectionData endData = new DirectionData( \"end\", end,\n                sharedVisitedRels, sharedFrozenDepth, sharedStop,\n                sharedCurrentDepth, stopAsap );\n        \n        while ( startData.hasNext() || endData.hasNext() )\n        {\n            goOneStep( startData, endData, hits, stopAsap, startData );\n            goOneStep( endData, startData, hits, stopAsap, startData );\n        }\n        return least( hits );\n    }","commit_id":"9b8548f8356723e6bd959310d184b3a5ef558761","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n        protected LevelData fetchNextOrNull()\n        {\n            while ( true )\n            {\n                Relationship nextRel = fetchNextRelOrNull();\n                if ( nextRel == null )\n                {\n                    return null;\n                }\n                \n                // If we've already traversed this relationship then don't bother\n                // traversing it again\n//                if ( !sharedVisitedRels.add( nextRel.getId() ) )\n//                {\n//                    continue;\n//                }\n                \n                Node result = nextRel.getOtherNode( this.lastParentTraverserNode );\n                LevelData levelData = this.visitedNodes.get( result );\n                boolean createdLevelData = false;\n                if ( levelData == null )\n                {\n                    levelData = new LevelData( result, this.currentDepth );\n                    this.visitedNodes.put( result, levelData );\n                    createdLevelData = true;\n                }\n                \n                if ( this.currentDepth < levelData.depth )\n                {\n                    throw new RuntimeException( \"This shouldn't happen... I think\" );\n                }\n                else if ( this.currentDepth == levelData.depth )\n                {\n                    for ( Path.Builder parentPath : this.lastParentLevelData.paths )\n                    {\n                        levelData.paths.add( parentPath.push( nextRel ) );\n                    }\n                }\n                \n                // Have we visited this node before? In that case don't add it\n                // as next node to traverse\n                if ( !createdLevelData )\n                {\n                    continue;\n                }\n                \n                this.nextNodes.add( result );\n                return levelData;\n            }\n        }","id":107157,"modified_method":"@Override\n        protected LevelData fetchNextOrNull()\n        {\n            while ( true )\n            {\n                Relationship nextRel = fetchNextRelOrNull();\n                if ( nextRel == null )\n                {\n                    return null;\n                }\n                \n                // If we've already traversed this relationship then don't bother\n                // traversing it again\n//                if ( !sharedVisitedRels.add( nextRel.getId() ) )\n//                {\n//                    continue;\n//                }\n                \n                Node result = nextRel.getOtherNode( this.lastParentTraverserNode );\n                LevelData levelData = this.visitedNodes.get( result );\n                boolean createdLevelData = false;\n                if ( levelData == null )\n                {\n                    levelData = new LevelData( result, this.currentDepth );\n                    this.visitedNodes.put( result, levelData );\n                    createdLevelData = true;\n                }\n                \n                if ( this.currentDepth < levelData.depth )\n                {\n                    throw new RuntimeException( \"This shouldn't happen... I think\" );\n                }\n                else if ( !this.stopAsap && this.currentDepth == levelData.depth )\n                {\n                    for ( Path.Builder parentPath : this.lastParentLevelData.paths )\n                    {\n                        levelData.paths.add( parentPath.push( nextRel ) );\n                    }\n                }\n                \n                // Have we visited this node before? In that case don't add it\n                // as next node to traverse\n                if ( !createdLevelData )\n                {\n                    continue;\n                }\n                \n                this.nextNodes.add( result );\n                return levelData;\n            }\n        }","commit_id":"9b8548f8356723e6bd959310d184b3a5ef558761","url":"https://github.com/neo4j/neo4j"},{"original_method":"public SingleStepShortestPathsFinder( int maxDepth, RelationshipExpander relExpander )\n    {\n        this.maxDepth = maxDepth;\n        this.relExpander = relExpander;\n    }","id":107158,"modified_method":"public SingleStepShortestPathsFinder( GraphDatabaseService graphDb,\n            int maxDepth, RelationshipExpander relExpander )\n    {\n        this.graphDb = graphDb;\n        this.maxDepth = maxDepth;\n        this.relExpander = relExpander;\n    }","commit_id":"9b8548f8356723e6bd959310d184b3a5ef558761","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void testCrossedCircle()\n    {\n        // Layout:\n        //    (s)\n        //   /   \\\n        // (3)   (1)\n        //  | \\ / |\n        //  | / \\ |\n        // (4)   (5)\n        //   \\   /\n        //    (t)\n        graph.makeEdge( \"s\", \"1\" );\n        graph.makeEdge( \"s\", \"3\" );\n        graph.makeEdge( \"1\", \"2\" );\n        graph.makeEdge( \"1\", \"4\" );\n        graph.makeEdge( \"3\", \"2\" );\n        graph.makeEdge( \"3\", \"4\" );\n        graph.makeEdge( \"2\", \"t\" );\n        graph.makeEdge( \"4\", \"t\" );\n        \n        SingleStepShortestPathsFinder singleStepFinder = new SingleStepShortestPathsFinder( 3,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = singleStepFinder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,1,2,t\", \"s,1,4,t\", \"s,3,2,t\", \"s,3,4,t\" );\n\n        LevelShortestPathsFinder levelFinder = new LevelShortestPathsFinder( 3, MyRelTypes.R1,\n                Direction.BOTH );\n        paths = levelFinder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,1,2,t\", \"s,1,4,t\", \"s,3,2,t\", \"s,3,4,t\" );\n    }","id":107159,"modified_method":"public void testCrossedCircle()\n    {\n        // Layout:\n        //    (s)\n        //   /   \\\n        // (3)   (1)\n        //  | \\ / |\n        //  | / \\ |\n        // (4)   (5)\n        //   \\   /\n        //    (t)\n        graph.makeEdge( \"s\", \"1\" );\n        graph.makeEdge( \"s\", \"3\" );\n        graph.makeEdge( \"1\", \"2\" );\n        graph.makeEdge( \"1\", \"4\" );\n        graph.makeEdge( \"3\", \"2\" );\n        graph.makeEdge( \"3\", \"4\" );\n        graph.makeEdge( \"2\", \"t\" );\n        graph.makeEdge( \"4\", \"t\" );\n        \n        SingleStepShortestPathsFinder singleStepFinder = new SingleStepShortestPathsFinder( graphDb, 3,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = singleStepFinder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,1,2,t\", \"s,1,4,t\", \"s,3,2,t\", \"s,3,4,t\" );\n\n        LevelShortestPathsFinder levelFinder = new LevelShortestPathsFinder( 3, MyRelTypes.R1,\n                Direction.BOTH );\n        paths = levelFinder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,1,2,t\", \"s,1,4,t\", \"s,3,2,t\", \"s,3,4,t\" );\n    }","commit_id":"9b8548f8356723e6bd959310d184b3a5ef558761","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void testAnotherSimpleGraph()\n    {\n        // Layout:\n        //   (m)\n        //   /  \\\n        // (s)  (o)---(t)\n        //   \\  /       \\\n        //   (n)---(p)---(q)\n        graph.makeEdge( \"s\", \"m\" );\n        graph.makeEdge( \"m\", \"o\" );\n        graph.makeEdge( \"s\", \"n\" );\n        graph.makeEdge( \"n\", \"p\" );\n        graph.makeEdge( \"p\", \"q\" );\n        graph.makeEdge( \"q\", \"t\" );\n        graph.makeEdge( \"n\", \"o\" );\n        graph.makeEdge( \"o\", \"t\" );\n\n        SingleStepShortestPathsFinder finder = new SingleStepShortestPathsFinder( 6,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = finder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,m,o,t\", \"s,n,o,t\" );\n    }","id":107160,"modified_method":"public void testAnotherSimpleGraph()\n    {\n        // Layout:\n        //   (m)\n        //   /  \\\n        // (s)  (o)---(t)\n        //   \\  /       \\\n        //   (n)---(p)---(q)\n        graph.makeEdge( \"s\", \"m\" );\n        graph.makeEdge( \"m\", \"o\" );\n        graph.makeEdge( \"s\", \"n\" );\n        graph.makeEdge( \"n\", \"p\" );\n        graph.makeEdge( \"p\", \"q\" );\n        graph.makeEdge( \"q\", \"t\" );\n        graph.makeEdge( \"n\", \"o\" );\n        graph.makeEdge( \"o\", \"t\" );\n\n        SingleStepShortestPathsFinder finder = new SingleStepShortestPathsFinder( graphDb, 6,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = finder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,m,o,t\", \"s,n,o,t\" );\n    }","commit_id":"9b8548f8356723e6bd959310d184b3a5ef558761","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void testSimplestGraph()\n    {\n        // Layout:\n        //    __\n        //   /  \\\n        // (s)  (t)\n        //   \\__/\n        graph.makeEdge( \"s\", \"t\" );\n        graph.makeEdge( \"s\", \"t\" );\n\n        SingleStepShortestPathsFinder finder = new SingleStepShortestPathsFinder( 1,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = finder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertEquals( 2, paths.size() );\n        assertPaths( paths, \"s,t\", \"s,t\" );\n    }","id":107161,"modified_method":"public void testSimplestGraph()\n    {\n        // Layout:\n        //    __\n        //   /  \\\n        // (s)  (t)\n        //   \\__/\n        graph.makeEdge( \"s\", \"t\" );\n        graph.makeEdge( \"s\", \"t\" );\n\n        SingleStepShortestPathsFinder finder = new SingleStepShortestPathsFinder( graphDb, 1,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = finder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertEquals( 2, paths.size() );\n        assertPaths( paths, \"s,t\", \"s,t\" );\n    }","commit_id":"9b8548f8356723e6bd959310d184b3a5ef558761","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n        protected LevelData fetchNextOrNull()\n        {\n            while ( true )\n            {\n                Relationship nextRel = fetchNextRelOrNull();\n                if ( nextRel == null )\n                {\n                    return null;\n                }\n                \n                // If we've already traversed this relationship then don't bother\n                // traversing it again\n//                if ( !sharedVisitedRels.add( nextRel.getId() ) )\n//                {\n//                    continue;\n//                }\n                \n                Node result = nextRel.getOtherNode( this.lastParentTraverserNode );\n                LevelData levelData = this.visitedNodes.get( result );\n                boolean createdLevelData = false;\n                if ( levelData == null )\n                {\n                    levelData = new LevelData( result, this.currentDepth );\n                    this.visitedNodes.put( result, levelData );\n                    createdLevelData = true;\n                }\n                \n                if ( this.currentDepth < levelData.depth )\n                {\n                    throw new RuntimeException( \"This shouldn't happen... I think\" );\n                }\n                else if ( this.currentDepth == levelData.depth )\n                {\n                    for ( Path.Builder parentPath : this.lastParentLevelData.paths )\n                    {\n                        levelData.paths.add( parentPath.push( nextRel ) );\n                    }\n                }\n                \n                // Have we visited this node before? In that case don't add it\n                // as next node to traverse\n                if ( !createdLevelData )\n                {\n                    continue;\n                }\n                \n                this.nextNodes.add( result );\n                return levelData;\n            }\n        }","id":107162,"modified_method":"@Override\n        protected LevelData fetchNextOrNull()\n        {\n            while ( true )\n            {\n                Relationship nextRel = fetchNextRelOrNull();\n                if ( nextRel == null )\n                {\n                    return null;\n                }\n                \n                // If we've already traversed this relationship then don't bother\n                // traversing it again\n//                if ( !sharedVisitedRels.add( nextRel.getId() ) )\n//                {\n//                    continue;\n//                }\n                \n                Node result = nextRel.getOtherNode( this.lastParentTraverserNode );\n                LevelData levelData = this.visitedNodes.get( result );\n                boolean createdLevelData = false;\n                if ( levelData == null )\n                {\n                    levelData = new LevelData( result, this.currentDepth );\n                    this.visitedNodes.put( result, levelData );\n                    createdLevelData = true;\n                }\n                \n                if ( this.currentDepth < levelData.depth )\n                {\n                    throw new RuntimeException( \"This shouldn't happen... I think\" );\n                }\n                else if ( !this.stopAsap && this.currentDepth == levelData.depth )\n                {\n                    for ( Path.Builder parentPath : this.lastParentLevelData.paths )\n                    {\n                        levelData.paths.add( parentPath.push( nextRel ) );\n                    }\n                }\n                \n                // Have we visited this node before? In that case don't add it\n                // as next node to traverse\n                if ( !createdLevelData )\n                {\n                    continue;\n                }\n                \n                this.nextNodes.add( result );\n                return levelData;\n            }\n        }","commit_id":"c71d184b427c120697fda9549fd36aa0c13a29ea","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Path path( Node start, Node end )\n    {\n        Collection<Path> paths = internalPaths( start, end, true );\n        return !paths.isEmpty() ? paths.iterator().next() : null;\n    }","id":107163,"modified_method":"public Path path( Node start, Node end )\n    {\n        Collection<Path> paths = internalPaths( start, end, true );\n        return IteratorUtil.singleValueOrNull( paths.iterator() );\n    }","commit_id":"c71d184b427c120697fda9549fd36aa0c13a29ea","url":"https://github.com/neo4j/neo4j"},{"original_method":"DirectionData( String name, Node startNode, Collection<Long> sharedVisitedRels,\n                ValueHolder<Integer> sharedFrozenDepth, ValueHolder<Boolean> sharedStop,\n                ValueHolder<Integer> sharedCurrentDepth )\n        {\n//            this.name = name;\n            this.visitedNodes.put( startNode, new LevelData( startNode,\n                    currentDepth, new Path.Builder( startNode ) ) );\n            this.nextNodes.add( startNode );\n//            this.sharedVisitedRels = sharedVisitedRels;\n            this.sharedFrozenDepth = sharedFrozenDepth;\n            this.sharedStop = sharedStop;\n            this.sharedCurrentDepth = sharedCurrentDepth;\n            prepareNextLevel();\n        }","id":107164,"modified_method":"DirectionData( String name, Node startNode, Collection<Long> sharedVisitedRels,\n                ValueHolder<Integer> sharedFrozenDepth, ValueHolder<Boolean> sharedStop,\n                ValueHolder<Integer> sharedCurrentDepth, boolean stopAsap )\n        {\n//            this.name = name;\n            this.visitedNodes.put( startNode, new LevelData( startNode,\n                    currentDepth, new Path.Builder( startNode ) ) );\n            this.nextNodes.add( startNode );\n//            this.sharedVisitedRels = sharedVisitedRels;\n            this.sharedFrozenDepth = sharedFrozenDepth;\n            this.sharedStop = sharedStop;\n            this.sharedCurrentDepth = sharedCurrentDepth;\n            this.stopAsap = stopAsap;\n            prepareNextLevel();\n        }","commit_id":"c71d184b427c120697fda9549fd36aa0c13a29ea","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Collection<Path> internalPaths( Node start, Node end,\n            boolean stopAsap )\n    {\n        if ( start.equals( end ) )\n        {\n            return Arrays.asList( Path.singular( start ) );\n        }\n\n        Map<Integer, Collection<Hit>> hits =\n                new HashMap<Integer, Collection<Hit>>();\n        Collection<Long> sharedVisitedRels = new HashSet<Long>();\n        ValueHolder<Integer> sharedFrozenDepth = new ValueHolder<Integer>( null );\n        ValueHolder<Boolean> sharedStop = new ValueHolder<Boolean>( false );\n        ValueHolder<Integer> sharedCurrentDepth = new ValueHolder<Integer>( 0 );\n        final DirectionData startData = new DirectionData( \"start\", start,\n                sharedVisitedRels, sharedFrozenDepth, sharedStop,\n                sharedCurrentDepth );\n        final DirectionData endData = new DirectionData( \"end\", end,\n                sharedVisitedRels, sharedFrozenDepth, sharedStop,\n                sharedCurrentDepth );\n        \n        while ( startData.hasNext() || endData.hasNext() )\n        {\n            goOneStep( startData, endData, hits, stopAsap, startData );\n            goOneStep( endData, startData, hits, stopAsap, startData );\n        }\n        return least( hits );\n    }","id":107165,"modified_method":"private Collection<Path> internalPaths( Node start, Node end,\n            boolean stopAsap )\n    {\n        if ( start.equals( end ) )\n        {\n            return Arrays.asList( Path.singular( start ) );\n        }\n\n        Map<Integer, Collection<Hit>> hits =\n                new HashMap<Integer, Collection<Hit>>();\n        Collection<Long> sharedVisitedRels = new HashSet<Long>();\n        ValueHolder<Integer> sharedFrozenDepth = new ValueHolder<Integer>( null );\n        ValueHolder<Boolean> sharedStop = new ValueHolder<Boolean>( false );\n        ValueHolder<Integer> sharedCurrentDepth = new ValueHolder<Integer>( 0 );\n        final DirectionData startData = new DirectionData( \"start\", start,\n                sharedVisitedRels, sharedFrozenDepth, sharedStop,\n                sharedCurrentDepth, stopAsap );\n        final DirectionData endData = new DirectionData( \"end\", end,\n                sharedVisitedRels, sharedFrozenDepth, sharedStop,\n                sharedCurrentDepth, stopAsap );\n        \n        while ( startData.hasNext() || endData.hasNext() )\n        {\n            goOneStep( startData, endData, hits, stopAsap, startData );\n            goOneStep( endData, startData, hits, stopAsap, startData );\n        }\n        return least( hits );\n    }","commit_id":"c71d184b427c120697fda9549fd36aa0c13a29ea","url":"https://github.com/neo4j/neo4j"},{"original_method":"public SingleStepShortestPathsFinder( int maxDepth, RelationshipExpander relExpander )\n    {\n        this.maxDepth = maxDepth;\n        this.relExpander = relExpander;\n    }","id":107166,"modified_method":"public SingleStepShortestPathsFinder( GraphDatabaseService graphDb,\n            int maxDepth, RelationshipExpander relExpander )\n    {\n        this.graphDb = graphDb;\n        this.maxDepth = maxDepth;\n        this.relExpander = relExpander;\n    }","commit_id":"c71d184b427c120697fda9549fd36aa0c13a29ea","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void testSimplestGraph()\n    {\n        // Layout:\n        //    __\n        //   /  \\\n        // (s)  (t)\n        //   \\__/\n        graph.makeEdge( \"s\", \"t\" );\n        graph.makeEdge( \"s\", \"t\" );\n\n        SingleStepShortestPathsFinder finder = new SingleStepShortestPathsFinder( 1,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = finder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertEquals( 2, paths.size() );\n        assertPaths( paths, \"s,t\", \"s,t\" );\n    }","id":107167,"modified_method":"public void testSimplestGraph()\n    {\n        // Layout:\n        //    __\n        //   /  \\\n        // (s)  (t)\n        //   \\__/\n        graph.makeEdge( \"s\", \"t\" );\n        graph.makeEdge( \"s\", \"t\" );\n\n        SingleStepShortestPathsFinder finder = new SingleStepShortestPathsFinder( graphDb, 1,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = finder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertEquals( 2, paths.size() );\n        assertPaths( paths, \"s,t\", \"s,t\" );\n    }","commit_id":"c71d184b427c120697fda9549fd36aa0c13a29ea","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void testCrossedCircle()\n    {\n        // Layout:\n        //    (s)\n        //   /   \\\n        // (3)   (1)\n        //  | \\ / |\n        //  | / \\ |\n        // (4)   (5)\n        //   \\   /\n        //    (t)\n        graph.makeEdge( \"s\", \"1\" );\n        graph.makeEdge( \"s\", \"3\" );\n        graph.makeEdge( \"1\", \"2\" );\n        graph.makeEdge( \"1\", \"4\" );\n        graph.makeEdge( \"3\", \"2\" );\n        graph.makeEdge( \"3\", \"4\" );\n        graph.makeEdge( \"2\", \"t\" );\n        graph.makeEdge( \"4\", \"t\" );\n        \n        SingleStepShortestPathsFinder singleStepFinder = new SingleStepShortestPathsFinder( 3,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = singleStepFinder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,1,2,t\", \"s,1,4,t\", \"s,3,2,t\", \"s,3,4,t\" );\n\n        LevelShortestPathsFinder levelFinder = new LevelShortestPathsFinder( 3, MyRelTypes.R1,\n                Direction.BOTH );\n        paths = levelFinder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,1,2,t\", \"s,1,4,t\", \"s,3,2,t\", \"s,3,4,t\" );\n    }","id":107168,"modified_method":"public void testCrossedCircle()\n    {\n        // Layout:\n        //    (s)\n        //   /   \\\n        // (3)   (1)\n        //  | \\ / |\n        //  | / \\ |\n        // (4)   (5)\n        //   \\   /\n        //    (t)\n        graph.makeEdge( \"s\", \"1\" );\n        graph.makeEdge( \"s\", \"3\" );\n        graph.makeEdge( \"1\", \"2\" );\n        graph.makeEdge( \"1\", \"4\" );\n        graph.makeEdge( \"3\", \"2\" );\n        graph.makeEdge( \"3\", \"4\" );\n        graph.makeEdge( \"2\", \"t\" );\n        graph.makeEdge( \"4\", \"t\" );\n        \n        SingleStepShortestPathsFinder singleStepFinder = new SingleStepShortestPathsFinder( graphDb, 3,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = singleStepFinder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,1,2,t\", \"s,1,4,t\", \"s,3,2,t\", \"s,3,4,t\" );\n\n        LevelShortestPathsFinder levelFinder = new LevelShortestPathsFinder( 3, MyRelTypes.R1,\n                Direction.BOTH );\n        paths = levelFinder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,1,2,t\", \"s,1,4,t\", \"s,3,2,t\", \"s,3,4,t\" );\n    }","commit_id":"c71d184b427c120697fda9549fd36aa0c13a29ea","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void testAnotherSimpleGraph()\n    {\n        // Layout:\n        //   (m)\n        //   /  \\\n        // (s)  (o)---(t)\n        //   \\  /       \\\n        //   (n)---(p)---(q)\n        graph.makeEdge( \"s\", \"m\" );\n        graph.makeEdge( \"m\", \"o\" );\n        graph.makeEdge( \"s\", \"n\" );\n        graph.makeEdge( \"n\", \"p\" );\n        graph.makeEdge( \"p\", \"q\" );\n        graph.makeEdge( \"q\", \"t\" );\n        graph.makeEdge( \"n\", \"o\" );\n        graph.makeEdge( \"o\", \"t\" );\n\n        SingleStepShortestPathsFinder finder = new SingleStepShortestPathsFinder( 6,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = finder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,m,o,t\", \"s,n,o,t\" );\n    }","id":107169,"modified_method":"public void testAnotherSimpleGraph()\n    {\n        // Layout:\n        //   (m)\n        //   /  \\\n        // (s)  (o)---(t)\n        //   \\  /       \\\n        //   (n)---(p)---(q)\n        graph.makeEdge( \"s\", \"m\" );\n        graph.makeEdge( \"m\", \"o\" );\n        graph.makeEdge( \"s\", \"n\" );\n        graph.makeEdge( \"n\", \"p\" );\n        graph.makeEdge( \"p\", \"q\" );\n        graph.makeEdge( \"q\", \"t\" );\n        graph.makeEdge( \"n\", \"o\" );\n        graph.makeEdge( \"o\", \"t\" );\n\n        SingleStepShortestPathsFinder finder = new SingleStepShortestPathsFinder( graphDb, 6,\n                RelationshipExpander.forTypes( MyRelTypes.R1, Direction.BOTH ) );\n        Collection<Path> paths = finder.paths( graph.getNode( \"s\" ), graph.getNode( \"t\" ) );\n        assertPaths( paths, \"s,m,o,t\", \"s,n,o,t\" );\n    }","commit_id":"c71d184b427c120697fda9549fd36aa0c13a29ea","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tprotected PortletPreferences doImportData(\n\t\t\tPortletDataContext portletDataContext, String portletId,\n\t\t\tPortletPreferences portletPreferences, String data)\n\t\tthrows Exception {\n\n\t\tportletDataContext.importPermissions(\n\t\t\tBookmarksPermission.RESOURCE_NAME,\n\t\t\tportletDataContext.getSourceGroupId(),\n\t\t\tportletDataContext.getScopeGroupId());\n\n\t\tElement foldersElement = portletDataContext.getImportDataGroupElement(\n\t\t\tBookmarksFolder.class);\n\n\t\tList<Element> folderElements = foldersElement.elements();\n\n\t\tfor (Element folderElement : folderElements) {\n\t\t\tStagedModelDataHandlerUtil.importStagedModel(\n\t\t\t\tportletDataContext, folderElement);\n\t\t}\n\n\t\tElement entriesElement = portletDataContext.getImportDataGroupElement(\n\t\t\tBookmarksEntry.class);\n\n\t\tList<Element> entryElements = entriesElement.elements();\n\n\t\tfor (Element entryElement : entryElements) {\n\t\t\tStagedModelDataHandlerUtil.importStagedModel(\n\t\t\t\tportletDataContext, entryElement);\n\t\t}\n\n\t\treturn null;\n\t}","id":107170,"modified_method":"@Override\n\tprotected PortletPreferences doImportData(\n\t\t\tPortletDataContext portletDataContext, String portletId,\n\t\t\tPortletPreferences portletPreferences, String data)\n\t\tthrows Exception {\n\n\t\tportletDataContext.importPermissions(\n\t\t\tBookmarksPermission.RESOURCE_NAME,\n\t\t\tportletDataContext.getSourceGroupId(),\n\t\t\tportletDataContext.getScopeGroupId());\n\n\t\tif (!portletDataContext.getBooleanParameter(NAMESPACE, \"entries\")) {\n\t\t\treturn null;\n\t\t}\n\n\t\tElement foldersElement = portletDataContext.getImportDataGroupElement(\n\t\t\tBookmarksFolder.class);\n\n\t\tList<Element> folderElements = foldersElement.elements();\n\n\t\tfor (Element folderElement : folderElements) {\n\t\t\tStagedModelDataHandlerUtil.importStagedModel(\n\t\t\t\tportletDataContext, folderElement);\n\t\t}\n\n\t\tElement entriesElement = portletDataContext.getImportDataGroupElement(\n\t\t\tBookmarksEntry.class);\n\n\t\tList<Element> entryElements = entriesElement.elements();\n\n\t\tfor (Element entryElement : entryElements) {\n\t\t\tStagedModelDataHandlerUtil.importStagedModel(\n\t\t\t\tportletDataContext, entryElement);\n\t\t}\n\n\t\treturn null;\n\t}","commit_id":"b94d4fc835c0c979f1095230f35bcf591d17fc05","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String doExportData(\n\t\t\tfinal PortletDataContext portletDataContext, String portletId,\n\t\t\tPortletPreferences portletPreferences)\n\t\tthrows Exception {\n\n\t\tportletDataContext.addPermissions(\n\t\t\tBookmarksPermission.RESOURCE_NAME,\n\t\t\tportletDataContext.getScopeGroupId());\n\n\t\tElement rootElement = addExportDataRootElement(portletDataContext);\n\n\t\trootElement.addAttribute(\n\t\t\t\"group-id\", String.valueOf(portletDataContext.getScopeGroupId()));\n\n\t\tActionableDynamicQuery folderActionableDynamicQuery =\n\t\t\tnew BookmarksFolderExportActionableDynamicQuery(portletDataContext);\n\n\t\tfolderActionableDynamicQuery.performActions();\n\n\t\tActionableDynamicQuery entryActionableDynamicQuery =\n\t\t\tnew BookmarksEntryExportActionableDynamicQuery(portletDataContext);\n\n\t\tentryActionableDynamicQuery.performActions();\n\n\t\treturn getExportDataRootElementString(rootElement);\n\t}","id":107171,"modified_method":"@Override\n\tprotected String doExportData(\n\t\t\tfinal PortletDataContext portletDataContext, String portletId,\n\t\t\tPortletPreferences portletPreferences)\n\t\tthrows Exception {\n\n\t\tportletDataContext.addPermissions(\n\t\t\tBookmarksPermission.RESOURCE_NAME,\n\t\t\tportletDataContext.getScopeGroupId());\n\n\t\tElement rootElement = addExportDataRootElement(portletDataContext);\n\n\t\trootElement.addAttribute(\n\t\t\t\"group-id\", String.valueOf(portletDataContext.getScopeGroupId()));\n\n\t\tif (portletDataContext.getBooleanParameter(NAMESPACE, \"entries\")) {\n\t\t\tActionableDynamicQuery folderActionableDynamicQuery =\n\t\t\t\tnew BookmarksFolderExportActionableDynamicQuery(\n\t\t\t\t\tportletDataContext);\n\n\t\t\tfolderActionableDynamicQuery.performActions();\n\n\t\t\tActionableDynamicQuery entryActionableDynamicQuery =\n\t\t\t\tnew BookmarksEntryExportActionableDynamicQuery(\n\t\t\t\t\tportletDataContext);\n\n\t\t\tentryActionableDynamicQuery.performActions();\n\t\t}\n\n\t\treturn getExportDataRootElementString(rootElement);\n\t}","commit_id":"b94d4fc835c0c979f1095230f35bcf591d17fc05","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PollsPortletDataHandler() {\n\t\tsetDataLocalized(true);\n\t\tsetExportControls(\n\t\t\tnew PortletDataHandlerBoolean(NAMESPACE, \"questions\", true, true),\n\t\t\tnew PortletDataHandlerBoolean(NAMESPACE, \"votes\"));\n\t}","id":107172,"modified_method":"public PollsPortletDataHandler() {\n\t\tsetDataLocalized(true);\n\t\tsetExportControls(\n\t\t\tnew PortletDataHandlerBoolean(NAMESPACE, \"questions\"),\n\t\t\tnew PortletDataHandlerBoolean(NAMESPACE, \"votes\"));\n\t\tsetImportControls(getExportControls());\n\t}","commit_id":"0407568a50dfe299468e6096c03d0a51170101c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String doExportData(\n\t\t\tfinal PortletDataContext portletDataContext, String portletId,\n\t\t\tPortletPreferences portletPreferences)\n\t\tthrows Exception {\n\n\t\tportletDataContext.addPermissions(\n\t\t\tPollsPermission.RESOURCE_NAME,\n\t\t\tportletDataContext.getScopeGroupId());\n\n\t\tElement rootElement = addExportDataRootElement(portletDataContext);\n\n\t\trootElement.addAttribute(\n\t\t\t\"group-id\", String.valueOf(portletDataContext.getScopeGroupId()));\n\n\t\tActionableDynamicQuery questionActionableDynamicQuery =\n\t\t\tnew PollsQuestionExportActionableDynamicQuery(portletDataContext);\n\n\t\tquestionActionableDynamicQuery.performActions();\n\n\t\tActionableDynamicQuery choiceActionableDynamicQuery =\n\t\t\tnew PollsChoiceExportActionableDynamicQuery(portletDataContext);\n\n\t\tchoiceActionableDynamicQuery.performActions();\n\n\t\tif (portletDataContext.getBooleanParameter(\n\t\t\t\tPollsPortletDataHandler.NAMESPACE, \"votes\")) {\n\n\t\t\tActionableDynamicQuery voteActionableDynamicQuery =\n\t\t\t\tnew PollsVoteExportActionableDynamicQuery(portletDataContext);\n\n\t\t\tvoteActionableDynamicQuery.performActions();\n\t\t}\n\n\t\treturn getExportDataRootElementString(rootElement);\n\t}","id":107173,"modified_method":"@Override\n\tprotected String doExportData(\n\t\t\tfinal PortletDataContext portletDataContext, String portletId,\n\t\t\tPortletPreferences portletPreferences)\n\t\tthrows Exception {\n\n\t\tportletDataContext.addPermissions(\n\t\t\tPollsPermission.RESOURCE_NAME,\n\t\t\tportletDataContext.getScopeGroupId());\n\n\t\tElement rootElement = addExportDataRootElement(portletDataContext);\n\n\t\trootElement.addAttribute(\n\t\t\t\"group-id\", String.valueOf(portletDataContext.getScopeGroupId()));\n\n\t\tif (portletDataContext.getBooleanParameter(\n\t\t\t\tPollsPortletDataHandler.NAMESPACE, \"questions\")) {\n\n\t\t\tActionableDynamicQuery questionActionableDynamicQuery =\n\t\t\t\tnew PollsQuestionExportActionableDynamicQuery(\n\t\t\t\t\tportletDataContext);\n\n\t\t\tquestionActionableDynamicQuery.performActions();\n\n\t\t\tActionableDynamicQuery choiceActionableDynamicQuery =\n\t\t\t\tnew PollsChoiceExportActionableDynamicQuery(portletDataContext);\n\n\t\t\tchoiceActionableDynamicQuery.performActions();\n\t\t}\n\n\t\tif (portletDataContext.getBooleanParameter(\n\t\t\t\tPollsPortletDataHandler.NAMESPACE, \"votes\")) {\n\n\t\t\tActionableDynamicQuery voteActionableDynamicQuery =\n\t\t\t\tnew PollsVoteExportActionableDynamicQuery(portletDataContext);\n\n\t\t\tvoteActionableDynamicQuery.performActions();\n\t\t}\n\n\t\treturn getExportDataRootElementString(rootElement);\n\t}","commit_id":"0407568a50dfe299468e6096c03d0a51170101c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected PortletPreferences doImportData(\n\t\t\tPortletDataContext portletDataContext, String portletId,\n\t\t\tPortletPreferences portletPreferences, String data)\n\t\tthrows Exception {\n\n\t\tportletDataContext.importPermissions(\n\t\t\tPollsPermission.RESOURCE_NAME,\n\t\t\tportletDataContext.getSourceGroupId(),\n\t\t\tportletDataContext.getScopeGroupId());\n\n\t\tElement questionsElement = portletDataContext.getImportDataGroupElement(\n\t\t\tPollsQuestion.class);\n\n\t\tList<Element> questionElements = questionsElement.elements();\n\n\t\tfor (Element questionElement : questionElements) {\n\t\t\tStagedModelDataHandlerUtil.importStagedModel(\n\t\t\t\tportletDataContext, questionElement);\n\t\t}\n\n\t\tElement choicesElement = portletDataContext.getImportDataGroupElement(\n\t\t\tPollsChoice.class);\n\n\t\tList<Element> choiceElements = choicesElement.elements();\n\n\t\tfor (Element choiceElement : choiceElements) {\n\t\t\tStagedModelDataHandlerUtil.importStagedModel(\n\t\t\t\tportletDataContext, choiceElement);\n\t\t}\n\n\t\tif (portletDataContext.getBooleanParameter(NAMESPACE, \"votes\")) {\n\t\t\tElement votesElement = portletDataContext.getImportDataGroupElement(\n\t\t\t\tPollsVote.class);\n\n\t\t\tList<Element> voteElements = votesElement.elements();\n\n\t\t\tfor (Element voteElement : voteElements) {\n\t\t\t\tStagedModelDataHandlerUtil.importStagedModel(\n\t\t\t\t\tportletDataContext, voteElement);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}","id":107174,"modified_method":"@Override\n\tprotected PortletPreferences doImportData(\n\t\t\tPortletDataContext portletDataContext, String portletId,\n\t\t\tPortletPreferences portletPreferences, String data)\n\t\tthrows Exception {\n\n\t\tportletDataContext.importPermissions(\n\t\t\tPollsPermission.RESOURCE_NAME,\n\t\t\tportletDataContext.getSourceGroupId(),\n\t\t\tportletDataContext.getScopeGroupId());\n\n\t\tElement questionsElement = portletDataContext.getImportDataGroupElement(\n\t\t\tPollsQuestion.class);\n\n\t\tif (portletDataContext.getBooleanParameter(\n\t\t\t\tPollsPortletDataHandler.NAMESPACE, \"votes\")) {\n\n\t\t\tList<Element> questionElements = questionsElement.elements();\n\n\t\t\tfor (Element questionElement : questionElements) {\n\t\t\t\tStagedModelDataHandlerUtil.importStagedModel(\n\t\t\t\t\tportletDataContext, questionElement);\n\t\t\t}\n\n\t\t\tElement choicesElement =\n\t\t\t\tportletDataContext.getImportDataGroupElement(PollsChoice.class);\n\n\t\t\tList<Element> choiceElements = choicesElement.elements();\n\n\t\t\tfor (Element choiceElement : choiceElements) {\n\t\t\t\tStagedModelDataHandlerUtil.importStagedModel(\n\t\t\t\t\tportletDataContext, choiceElement);\n\t\t\t}\n\t\t}\n\n\t\tif (portletDataContext.getBooleanParameter(NAMESPACE, \"votes\")) {\n\t\t\tElement votesElement = portletDataContext.getImportDataGroupElement(\n\t\t\t\tPollsVote.class);\n\n\t\t\tList<Element> voteElements = votesElement.elements();\n\n\t\t\tfor (Element voteElement : voteElements) {\n\t\t\t\tStagedModelDataHandlerUtil.importStagedModel(\n\t\t\t\t\tportletDataContext, voteElement);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}","commit_id":"0407568a50dfe299468e6096c03d0a51170101c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n     * Creates and initializes a <tt>MailThreadInfo<\/tt> instance according to\n     * the details that come with the parser.\n     *\n     * @param parser the parse that we are to read the <tt>MailThreadInfo<\/tt>\n     * from.\n     *\n     * @return the newly created <tt>MailThreadInfo<\/tt> instance.\n     *\n     * @throws XmlPullParserException if something goes wrong while parsing\n     * the document.\n     * @throws NumberFormatException in case we fail to parse any of the\n     * elements that we expect to be numerical.\n     * @throws IOException in case reading the input xml fails.\n     */\n    public static MailThreadInfo parse(XmlPullParser parser)\n        throws XmlPullParserException, NumberFormatException, IOException\n    {\n        MailThreadInfo info = new MailThreadInfo();\n\n        //we start by parsing the thread tag itself which should look something\n        //like this:\n        // <mail-thread-info tid='1172320964060972012' participation='1'\n        //  messages='28' date='1118012394209'\n        //  url='http://mail.google.com/mail?view=cv'>\n\n        info.setTid(parser.getAttributeValue(\"\", \"tid\"));\n        info.setParticipation( Integer.parseInt(\n                        parser.getAttributeValue(\"\", \"participation\")));\n        info.setMessageCount( Integer.parseInt(\n                        parser.getAttributeValue(\"\", \"messages\")));\n        info.setDate( Long.parseLong(\n                        parser.getAttributeValue(\"\", \"date\")));\n        info.setURL( parser.getAttributeValue(\"\", \"url\"));\n\n        //now parse the rest of the message\n        int eventType = parser.next();\n        while(eventType != XmlPullParser.END_TAG)\n        {\n            if (eventType == XmlPullParser.START_TAG)\n            {\n                String name = parser.getName();\n\n                if(SENDERS_ELEMENT_NAME.equals(name))\n                {\n                    //senders\n                    info.parseSenders(parser);\n                }\n                else if( LABELS_ELEMENT_NAME.equals(name))\n                {\n                    //labels\n                    info.setLabels(parser.nextText());\n                }\n                else if( SUBJECT_ELEMENT_NAME.equals(name))\n                {\n                    //subject\n                    info.setSubject(parser.nextText());\n                }\n                else if( SNIPPET_ELEMENT_NAME.equals(name))\n                {\n                    //snippet\n                    info.setSnippet(parser.nextText());\n                }\n            }\n\n            eventType = parser.next();\n        }\n\n        return info;\n    }","id":107175,"modified_method":"/**\n     * Creates and initializes a <tt>MailThreadInfo<\/tt> instance according to\n     * the details that come with the parser.\n     *\n     * @param parser the parse that we are to read the <tt>MailThreadInfo<\/tt>\n     * from.\n     *\n     * @return the newly created <tt>MailThreadInfo<\/tt> instance.\n     *\n     * @throws XmlPullParserException if something goes wrong while parsing\n     * the document.\n     * @throws NumberFormatException in case we fail to parse any of the\n     * elements that we expect to be numerical.\n     * @throws IOException in case reading the input xml fails.\n     */\n    public static MailThreadInfo parse(XmlPullParser parser)\n        throws XmlPullParserException, NumberFormatException, IOException\n    {\n        MailThreadInfo info = new MailThreadInfo();\n\n        //we start by parsing the thread tag itself which should look something\n        //like this:\n        // <mail-thread-info tid='1172320964060972012' participation='1'\n        //  messages='28' date='1118012394209'\n        //  url='http://mail.google.com/mail?view=cv'>\n\n        info.setTid(parser.getAttributeValue(\"\", \"tid\"));\n\n        String participationStr = parser.getAttributeValue(\"\", \"participation\");\n\n        if(participationStr != null)\n            info.setParticipation( Integer.parseInt( participationStr ));\n\n        String messagesStr = parser.getAttributeValue(\"\", \"messages\");\n\n        if( messagesStr != null )\n            info.setMessageCount( Integer.parseInt( messagesStr ));\n\n        String dateStr = parser.getAttributeValue(\"\", \"date\");\n\n        if(dateStr != null)\n            info.setDate( Long.parseLong( dateStr ));\n\n        info.setURL( parser.getAttributeValue(\"\", \"url\"));\n\n        //now parse the rest of the message\n        int eventType = parser.next();\n        while(eventType != XmlPullParser.END_TAG)\n        {\n            if (eventType == XmlPullParser.START_TAG)\n            {\n                String name = parser.getName();\n\n                if(SENDERS_ELEMENT_NAME.equals(name))\n                {\n                    //senders\n                    info.parseSenders(parser);\n                }\n                else if( LABELS_ELEMENT_NAME.equals(name))\n                {\n                    //labels\n                    info.setLabels(parser.nextText());\n                }\n                else if( SUBJECT_ELEMENT_NAME.equals(name))\n                {\n                    //subject\n                    info.setSubject(parser.nextText());\n                }\n                else if( SNIPPET_ELEMENT_NAME.equals(name))\n                {\n                    //snippet\n                    info.setSnippet(parser.nextText());\n                }\n            }\n\n            eventType = parser.next();\n        }\n\n        return info;\n    }","commit_id":"30acce50fda2bf930ddf416850e54a2c50b0ac52","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Return an <tt>IQ<\/tt> (i.e. <tt>Mailbox<\/tt>) object which will contain\n     * the information we get from the parser.\n     *\n     * @param parser the <tt>XmlPullParser<\/tt> that we can use to get\n     * packet details.\n     *\n     * @return a new IQ instance which is the result of the XmlPullParser.\n     * @throws Exception if an error occurs parsing the XML.\n     */\n    public IQ parseIQ(final XmlPullParser parser) throws Exception\n    {\n        MailboxIQ mailboxIQ = new MailboxIQ();\n        mailboxIQ.setResultTime(Long.parseLong(\n                parser.getAttributeValue(\"\", \"result-time\")));\n        mailboxIQ.setTotalMatched(Integer.parseInt(\n                parser.getAttributeValue(\"\", \"total-matched\")));\n        mailboxIQ.setTotalEstimate(\"1\".equals(\n                parser.getAttributeValue(\"\", \"total-estimate\")));\n        mailboxIQ.setUrl(parser.getAttributeValue(\"\", \"url\"));\n\n\n        int eventType = parser.next();\n        while(eventType != XmlPullParser.END_TAG)\n        {\n            if (eventType == XmlPullParser.START_TAG)\n            {\n                String name = parser.getName();\n                if(MailThreadInfo.ELEMENT_NAME.equals(name))\n                {\n                    //parse mail thread information\n                    MailThreadInfo thread = MailThreadInfo.parse(parser);\n                    mailboxIQ.addThread(thread);\n                }\n\n            }\n            else\n            {\n                if(logger.isTraceEnabled())\n                {\n                    logger.trace(\"xml parser returned eventType=\" + eventType);\n                    logger.trace(\"parser=\"+parser.getText());\n                }\n            }\n            eventType = parser.next();\n        }\n\n        eventType = 1;\n        String name = null;\n        if (eventType == XmlPullParser.START_TAG)\n        {\n            if (\"mail-thread-info\".equals(name))\n            {\n                mailboxIQ.setDate(Long.parseLong(\n                                parser.getAttributeValue(\"\", \"date\")));\n                for (int i =0;i<10;i++)\n                {\n                    eventType = parser.next();\n                    if (eventType == XmlPullParser.START_TAG)\n                    {\n                        name = parser.getName();\n                        if (\"sender\".equals(name))\n                        {\n                            if ( \"1\".equals(\n                                    parser.getAttributeValue(\"\",\"originator\")))\n                            {\n                                //mailboxIQ.setSender(parser.\n                                //        getAttributeValue(\"\", \"address\"));\n                            }\n                        }\n                    }\n\n                    if (eventType == XmlPullParser.START_TAG)\n                    {\n                        name = parser.getName();\n                        if (\"subject\".equals(name))\n                        {\n                            name = parser.nextText();\n                            //mailboxIQ.setSubject(name);\n                        }\n                    }\n                }\n            }\n        }\n        return mailboxIQ;\n    }","id":107176,"modified_method":"/**\n     * Return an <tt>IQ<\/tt> (i.e. <tt>Mailbox<\/tt>) object which will contain\n     * the information we get from the parser.\n     *\n     * @param parser the <tt>XmlPullParser<\/tt> that we can use to get\n     * packet details.\n     *\n     * @return a new IQ instance which is the result of the XmlPullParser.\n     * @throws Exception if an error occurs parsing the XML.\n     */\n    public IQ parseIQ(final XmlPullParser parser) throws Exception\n    {\n        MailboxIQ mailboxIQ = new MailboxIQ();\n\n        String resultTimeStr = parser.getAttributeValue(\"\", \"result-time\");\n\n        if(resultTimeStr != null)\n            mailboxIQ.setResultTime(Long.parseLong( resultTimeStr ));\n\n        String totalMatchedStr = parser.getAttributeValue(\"\", \"total-matched\");\n\n        if( totalMatchedStr != null )\n            mailboxIQ.setTotalMatched(Integer.parseInt( totalMatchedStr ));\n\n        String totalEstimateStr\n            = parser.getAttributeValue(\"\", \"total-estimate\");\n\n        if( totalEstimateStr != null )\n            mailboxIQ.setTotalEstimate(\"1\".equals( totalEstimateStr));\n\n        mailboxIQ.setUrl(parser.getAttributeValue(\"\", \"url\"));\n\n\n        int eventType = parser.next();\n        while(eventType != XmlPullParser.END_TAG)\n        {\n            if (eventType == XmlPullParser.START_TAG)\n            {\n                String name = parser.getName();\n                if(MailThreadInfo.ELEMENT_NAME.equals(name))\n                {\n                    //parse mail thread information\n                    MailThreadInfo thread = MailThreadInfo.parse(parser);\n                    mailboxIQ.addThread(thread);\n                }\n\n            }\n            else\n            {\n                if(logger.isTraceEnabled())\n                {\n                    logger.trace(\"xml parser returned eventType=\" + eventType);\n                    logger.trace(\"parser=\"+parser.getText());\n                }\n            }\n            eventType = parser.next();\n        }\n\n        return mailboxIQ;\n    }","commit_id":"30acce50fda2bf930ddf416850e54a2c50b0ac52","url":"https://github.com/jitsi/jitsi"},{"original_method":"private void doFileEvents( List<AuditEvent> eventList, String filename )\n    {\n        for ( AuditEvent event : eventList )\n        {\n            SeverityLevel level = event.getSeverityLevel();\n\n            if ( ( getSeverityLevel() != null ) && !( getSeverityLevel() != level ) )\n            {\n                continue;\n            }\n\n            sink.tableRow();\n\n            sink.tableCell();\n            iconTool.iconSeverity( level.getName(), IconTool.TEXT_SIMPLE );\n            sink.tableCell_();\n\n            sink.tableCell();\n            String category = getRuleCategoryName( event );\n            if ( category != null )\n            {\n                sink.text( category );\n            }\n            sink.tableCell_();\n\n            sink.tableCell();\n            String ruleName = getRuleName( event );\n            if ( ruleName != null )\n            {\n                sink.text( ruleName );\n            }\n            sink.tableCell_();\n\n            sink.tableCell();\n            sink.text( event.getMessage() );\n            sink.tableCell_();\n\n            sink.tableCell();\n\n            int line = event.getLine();\n            if ( getXrefLocation() != null && line != 0 )\n            {\n                sink.link( getXrefLocation() + \"/\" + filename.replaceAll( \"\\\\.java$\", \".html\" ) + \"#L\"\n                    + line );\n                sink.text( String.valueOf( line ) );\n                sink.link_();\n            }\n            else if ( line != 0 )\n            {\n                sink.text( String.valueOf( line ) );\n            }\n            sink.tableCell_();\n\n            sink.tableRow_();\n        }\n    }","id":107177,"modified_method":"private void doFileEvents( List<AuditEvent> eventList, String filename )\n    {\n        for ( AuditEvent event : eventList )\n        {\n            SeverityLevel level = event.getSeverityLevel();\n\n            if ( ( getSeverityLevel() != null ) && !( getSeverityLevel() != level ) )\n            {\n                continue;\n            }\n\n            sink.tableRow();\n\n            sink.tableCell();\n            iconTool.iconSeverity( level.getName(), IconTool.TEXT_SIMPLE );\n            sink.tableCell_();\n\n            sink.tableCell();\n            String category = RuleUtil.getCategory( event );\n            if ( category != null )\n            {\n                sink.text( category );\n            }\n            sink.tableCell_();\n\n            sink.tableCell();\n            String ruleName = RuleUtil.getName( event );\n            if ( ruleName != null )\n            {\n                sink.text( ruleName );\n            }\n            sink.tableCell_();\n\n            sink.tableCell();\n            sink.text( event.getMessage() );\n            sink.tableCell_();\n\n            sink.tableCell();\n\n            int line = event.getLine();\n            if ( getXrefLocation() != null && line != 0 )\n            {\n                sink.link( getXrefLocation() + \"/\" + filename.replaceAll( \"\\\\.java$\", \".html\" ) + \"#L\"\n                    + line );\n                sink.text( String.valueOf( line ) );\n                sink.link_();\n            }\n            else if ( line != 0 )\n            {\n                sink.text( String.valueOf( line ) );\n            }\n            sink.tableCell_();\n\n            sink.tableRow_();\n        }\n    }","commit_id":"ba89cb06d8c00921904008839a4c30f83df9d778","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Check if a violation matches a rule.\n     *\n     * @param event the violation to check\n     * @param ruleName The name of the rule\n     * @param expectedMessage A message that, if it's not null, will be matched to the message from the violation\n     * @param expectedSeverity A severity that, if it's not null, will be matched to the severity from the violation\n     * @return The number of rule violations\n     */\n    public boolean matchRule( AuditEvent event, String ruleName, String expectedMessage, String expectedSeverity )\n    {\n        if ( !ruleName.equals( getRuleName( event ) ) )\n        {\n            return false;\n        }\n\n        // check message too, for those that have a specific one.\n        // like GenericIllegalRegexp and Regexp\n        if ( expectedMessage != null )\n        {\n            // event.getMessage() uses java.text.MessageFormat in its implementation.\n            // Read MessageFormat Javadoc about single quote:\n            // http://java.sun.com/j2se/1.4.2/docs/api/java/text/MessageFormat.html\n            String msgWithoutSingleQuote = StringUtils.replace( expectedMessage, \"'\", \"\" );\n\n            return expectedMessage.equals( event.getMessage() ) || msgWithoutSingleQuote.equals( event.getMessage() );\n        }\n        // Check the severity. This helps to distinguish between\n        // different configurations for the same rule, where each\n        // configuration has a different severity, like JavadocMetod.\n        // See also http://jira.codehaus.org/browse/MCHECKSTYLE-41\n        if ( expectedSeverity != null )\n        {\n            return expectedSeverity.equals( event.getSeverityLevel().getName() );\n        }\n\n        return true;\n    }","id":107178,"modified_method":"/**\n     * Check if a violation matches a rule.\n     *\n     * @param event the violation to check\n     * @param ruleName The name of the rule\n     * @param expectedMessage A message that, if it's not null, will be matched to the message from the violation\n     * @param expectedSeverity A severity that, if it's not null, will be matched to the severity from the violation\n     * @return The number of rule violations\n     */\n    public boolean matchRule( AuditEvent event, String ruleName, String expectedMessage, String expectedSeverity )\n    {\n        if ( !ruleName.equals( RuleUtil.getName( event ) ) )\n        {\n            return false;\n        }\n\n        // check message too, for those that have a specific one.\n        // like GenericIllegalRegexp and Regexp\n        if ( expectedMessage != null )\n        {\n            // event.getMessage() uses java.text.MessageFormat in its implementation.\n            // Read MessageFormat Javadoc about single quote:\n            // http://java.sun.com/j2se/1.4.2/docs/api/java/text/MessageFormat.html\n            String msgWithoutSingleQuote = StringUtils.replace( expectedMessage, \"'\", \"\" );\n\n            return expectedMessage.equals( event.getMessage() ) || msgWithoutSingleQuote.equals( event.getMessage() );\n        }\n        // Check the severity. This helps to distinguish between\n        // different configurations for the same rule, where each\n        // configuration has a different severity, like JavadocMetod.\n        // See also http://jira.codehaus.org/browse/MCHECKSTYLE-41\n        if ( expectedSeverity != null )\n        {\n            return expectedSeverity.equals( event.getSeverityLevel().getName() );\n        }\n\n        return true;\n    }","commit_id":"ba89cb06d8c00921904008839a4c30f83df9d778","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Create a summary for one Checkstyle rule.\n     *\n     * @param checkerConfig Configuration for the Checkstyle rule\n     * @param parentConfigurations Configurations for the parents of this rule\n     * @param ruleName The name of the rule, for example \"JavadocMethod\"\n     * @param results The results to summarize\n     */\n    private void doRuleRow( Configuration checkerConfig, List<Configuration> parentConfigurations, String ruleName,\n                            CheckstyleResults results )\n    {\n        String fixedmessage = getConfigAttribute( checkerConfig, null, \"message\", null );\n        // Grab the severity from the rule configuration, use null as default value\n        String configSeverity = getConfigAttribute( checkerConfig, null, \"severity\", null );\n        long violations = countRuleViolation( results.getFiles().values(), ruleName, fixedmessage, configSeverity );\n\n        if ( violations == 0 )\n        {\n            // skip rules without violations\n            return;\n        }\n\n        sink.tableRow();\n\n        // column 1: rule category\n        sink.tableCell();\n        String category = getRuleCategoryName( lastMatchedEvent );\n        sink.text( category );\n        sink.tableCell_();\n\n        // column 2: Rule name + configured attributes\n        sink.tableCell();\n        if ( !\"extension\".equals( category ) )\n        {\n            sink.link( \"http://checkstyle.sourceforge.net/config_\" + category + \".html#\" + ruleName );\n            sink.text( ruleName );\n            sink.link_();\n        }\n        else\n        {\n            sink.text( ruleName );\n        }\n\n        List<String> attribnames = new ArrayList<String>( Arrays.asList( checkerConfig.getAttributeNames() ) );\n        attribnames.remove( \"severity\" ); // special value (deserves unique column)\n        if ( !attribnames.isEmpty() )\n        {\n            sink.list();\n            for ( String name : attribnames )\n            {\n                sink.listItem();\n\n                sink.bold();\n                sink.text( name );\n                sink.bold_();\n\n                String value = getConfigAttribute( checkerConfig, null, name, \"\" );\n                // special case, Header.header and RegexpHeader.header\n                if ( \"header\".equals( name ) && ( \"Header\".equals( ruleName ) || \"RegexpHeader\".equals( ruleName ) ) )\n                {\n                    String[] lines = StringUtils.split( value, \"\\\\n\" );\n                    int linenum = 1;\n                    for ( String line : lines )\n                    {\n                        sink.lineBreak();\n                        sink.rawText( \"<span style=\\\"color: gray\\\">\" );\n                        sink.text( linenum + \":\" );\n                        sink.rawText( \"<\/span>\" );\n                        sink.nonBreakingSpace();\n                        sink.monospaced();\n                        sink.text( line );\n                        sink.monospaced_();\n                        linenum++;\n                    }\n                }\n                else if ( \"headerFile\".equals( name ) && \"RegexpHeader\".equals( ruleName ) )\n                {\n                    sink.text( \": \" );\n                    sink.monospaced();\n                    sink.text( \"\\\"\" );\n                    if ( basedir != null )\n                    {\n                        // Make the headerFile value relative to ${basedir}\n                        String path = siteTool.getRelativePath( value, basedir.getAbsolutePath() );\n                        sink.text( path.replace( '\\\\', '/' ) );\n                    }\n                    else\n                    {\n                        sink.text( value );\n                    }\n                    sink.text( \"\\\"\" );\n                    sink.monospaced_();\n                }\n                else\n                {\n                    sink.text( \": \" );\n                    sink.monospaced();\n                    sink.text( \"\\\"\" );\n                    sink.text( value );\n                    sink.text( \"\\\"\" );\n                    sink.monospaced_();\n                }\n                sink.listItem_();\n            }\n            sink.list_();\n        }\n\n        sink.tableCell_();\n\n        // column 3: rule violation count\n        sink.tableCell();\n        sink.text( String.valueOf( violations ) );\n        sink.tableCell_();\n\n        // column 4: severity\n        sink.tableCell();\n        // Grab the severity from the rule configuration, this time use error as default value\n        // Also pass along all parent configurations, so that we can try to find the severity there\n        String severity = getConfigAttribute( checkerConfig, parentConfigurations, \"severity\", \"error\" );\n        iconTool.iconSeverity( severity, IconTool.TEXT_SIMPLE );\n        sink.tableCell_();\n\n        sink.tableRow_();\n    }","id":107179,"modified_method":"/**\n     * Create a summary for one Checkstyle rule.\n     *\n     * @param checkerConfig Configuration for the Checkstyle rule\n     * @param parentConfigurations Configurations for the parents of this rule\n     * @param ruleName The name of the rule, for example \"JavadocMethod\"\n     * @param results The results to summarize\n     */\n    private void doRuleRow( Configuration checkerConfig, List<Configuration> parentConfigurations, String ruleName,\n                            CheckstyleResults results )\n    {\n        String fixedmessage = getConfigAttribute( checkerConfig, null, \"message\", null );\n        // Grab the severity from the rule configuration, use null as default value\n        String configSeverity = getConfigAttribute( checkerConfig, null, \"severity\", null );\n        long violations = countRuleViolation( results.getFiles().values(), ruleName, fixedmessage, configSeverity );\n\n        if ( violations == 0 )\n        {\n            // skip rules without violations\n            return;\n        }\n\n        sink.tableRow();\n\n        // column 1: rule category\n        sink.tableCell();\n        String category = RuleUtil.getCategory( lastMatchedEvent );\n        sink.text( category );\n        sink.tableCell_();\n\n        // column 2: Rule name + configured attributes\n        sink.tableCell();\n        if ( !\"extension\".equals( category ) )\n        {\n            sink.link( \"http://checkstyle.sourceforge.net/config_\" + category + \".html#\" + ruleName );\n            sink.text( ruleName );\n            sink.link_();\n        }\n        else\n        {\n            sink.text( ruleName );\n        }\n\n        List<String> attribnames = new ArrayList<String>( Arrays.asList( checkerConfig.getAttributeNames() ) );\n        attribnames.remove( \"severity\" ); // special value (deserves unique column)\n        if ( !attribnames.isEmpty() )\n        {\n            sink.list();\n            for ( String name : attribnames )\n            {\n                sink.listItem();\n\n                sink.bold();\n                sink.text( name );\n                sink.bold_();\n\n                String value = getConfigAttribute( checkerConfig, null, name, \"\" );\n                // special case, Header.header and RegexpHeader.header\n                if ( \"header\".equals( name ) && ( \"Header\".equals( ruleName ) || \"RegexpHeader\".equals( ruleName ) ) )\n                {\n                    String[] lines = StringUtils.split( value, \"\\\\n\" );\n                    int linenum = 1;\n                    for ( String line : lines )\n                    {\n                        sink.lineBreak();\n                        sink.rawText( \"<span style=\\\"color: gray\\\">\" );\n                        sink.text( linenum + \":\" );\n                        sink.rawText( \"<\/span>\" );\n                        sink.nonBreakingSpace();\n                        sink.monospaced();\n                        sink.text( line );\n                        sink.monospaced_();\n                        linenum++;\n                    }\n                }\n                else if ( \"headerFile\".equals( name ) && \"RegexpHeader\".equals( ruleName ) )\n                {\n                    sink.text( \": \" );\n                    sink.monospaced();\n                    sink.text( \"\\\"\" );\n                    if ( basedir != null )\n                    {\n                        // Make the headerFile value relative to ${basedir}\n                        String path = siteTool.getRelativePath( value, basedir.getAbsolutePath() );\n                        sink.text( path.replace( '\\\\', '/' ) );\n                    }\n                    else\n                    {\n                        sink.text( value );\n                    }\n                    sink.text( \"\\\"\" );\n                    sink.monospaced_();\n                }\n                else\n                {\n                    sink.text( \": \" );\n                    sink.monospaced();\n                    sink.text( \"\\\"\" );\n                    sink.text( value );\n                    sink.text( \"\\\"\" );\n                    sink.monospaced_();\n                }\n                sink.listItem_();\n            }\n            sink.list_();\n        }\n\n        sink.tableCell_();\n\n        // column 3: rule violation count\n        sink.tableCell();\n        sink.text( String.valueOf( violations ) );\n        sink.tableCell_();\n\n        // column 4: severity\n        sink.tableCell();\n        // Grab the severity from the rule configuration, this time use error as default value\n        // Also pass along all parent configurations, so that we can try to find the severity there\n        String severity = getConfigAttribute( checkerConfig, parentConfigurations, \"severity\", \"error\" );\n        iconTool.iconSeverity( severity, IconTool.TEXT_SIMPLE );\n        sink.tableCell_();\n\n        sink.tableRow_();\n    }","commit_id":"ba89cb06d8c00921904008839a4c30f83df9d778","url":"https://github.com/apache/maven-plugins"},{"original_method":"private int countViolations( XmlPullParser xpp )\n        throws XmlPullParserException, IOException\n    {\n        int count = 0;\n\n        int eventType = xpp.getEventType();\n        String file = \"\";\n        while ( eventType != XmlPullParser.END_DOCUMENT )\n        {\n            if ( eventType == XmlPullParser.START_TAG && \"file\".equals( xpp.getName() ) )\n            {\n                file = xpp.getAttributeValue( \"\", \"name\" );\n                file = file.substring( file.lastIndexOf( File.separatorChar ) + 1 );\n            }\n\n            if ( eventType == XmlPullParser.START_TAG && \"error\".equals( xpp.getName() )\n                && isViolation( xpp.getAttributeValue( \"\", \"severity\" ) ) )\n            {\n                if ( logViolationsToConsole )\n                {\n                    final String column =\n                        xpp.getAttributeValue( \"\", \"column\" ) == null ? \"n/a\" : xpp.getAttributeValue( \"\", \"column\" );\n                    final String logMessage = file + '[' + xpp.getAttributeValue( \"\", \"line\" ) + ':' + column + \"] \"\n                        + xpp.getAttributeValue( \"\", \"message\" );\n                    if ( \"info\".equals( xpp.getAttributeValue( \"\", \"severity\" ) ) )\n                    {\n                        getLog().info( logMessage );\n                    }\n                    else if ( \"warning\".equals( xpp.getAttributeValue( \"\", \"severity\" ) ) )\n                    {\n                        getLog().warn( logMessage );\n                    }\n                    else\n                    {\n                        getLog().error( logMessage );\n                    }\n                }\n                count++;\n            }\n            eventType = xpp.next();\n        }\n\n        return count;\n    }","id":107180,"modified_method":"private int countViolations( XmlPullParser xpp )\n        throws XmlPullParserException, IOException\n    {\n        int count = 0;\n\n        int eventType = xpp.getEventType();\n        String file = \"\";\n        while ( eventType != XmlPullParser.END_DOCUMENT )\n        {\n            if ( eventType == XmlPullParser.START_TAG )\n            {\n                String severity;\n\n                if ( \"file\".equals( xpp.getName() ) )\n                {\n                    file = xpp.getAttributeValue( \"\", \"name\" );\n                    file = file.substring( file.lastIndexOf( File.separatorChar ) + 1 );\n                }\n                else if ( \"error\".equals( xpp.getName() )\n                    && isViolation( severity = xpp.getAttributeValue( \"\", \"severity\" ) ) )\n                {\n                    count++;\n\n                    if ( logViolationsToConsole )\n                    {\n                        String line = xpp.getAttributeValue( \"\", \"line\" );\n                        String column = xpp.getAttributeValue( \"\", \"column\" );\n                        String message = xpp.getAttributeValue( \"\", \"message\" );\n                        String source = xpp.getAttributeValue( \"\", \"source\" );\n                        String rule = RuleUtil.getName( source );\n                        String category = RuleUtil.getCategory( source );\n\n                        String logMessage =\n                            file + '[' + line + ( ( column == null ) ? \"\" : ( ':' + column ) ) + \"] (\" + category\n                                + \") \" + rule + \": \" + message;\n                        if ( \"info\".equals( severity ) )\n                        {\n                            getLog().info( logMessage );\n                        }\n                        else if ( \"warning\".equals( severity ) )\n                        {\n                            getLog().warn( logMessage );\n                        }\n                        else\n                        {\n                            getLog().error( logMessage );\n                        }\n                    }\n                }\n            }\n            eventType = xpp.next();\n        }\n\n        return count;\n    }","commit_id":"ba89cb06d8c00921904008839a4c30f83df9d778","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Internal method for traversal\n     * @param logger        The logger to use for debug logging\n     * @param topicResource The topic resource\n     * @param jobHandler    The job callback\n     * @param resourceHandler    The resource callback\n     */\n    private static void traverse(final Logger logger,\n            final Resource topicResource,\n            final JobCallback jobHandler,\n            final ResourceCallback resourceHandler) {\n        logger.debug(\"Processing topic {}\", topicResource.getName().replace('.', '/'));\n        // now years\n        for(final Resource yearResource: Utility.getSortedChildren(logger, \"year\", topicResource)) {\n            final int year = Integer.valueOf(yearResource.getName());\n            logger.debug(\"Processing year {}\", year);\n\n            // now months\n            for(final Resource monthResource: Utility.getSortedChildren(logger, \"month\", yearResource)) {\n                final int month = Integer.valueOf(monthResource.getName());\n                logger.debug(\"Processing month {}\", month);\n\n                // now days\n                for(final Resource dayResource: Utility.getSortedChildren(logger, \"day\", monthResource)) {\n                    final int day = Integer.valueOf(dayResource.getName());\n                    logger.debug(\"Processing day {}\", day);\n\n                    // now hours\n                    for(final Resource hourResource: Utility.getSortedChildren(logger, \"hour\", dayResource)) {\n                        final int hour = Integer.valueOf(hourResource.getName());\n                        logger.debug(\"Processing hour {}\", hour);\n\n                        // now minutes\n                        for(final Resource minuteResource: Utility.getSortedChildren(logger, \"minute\", hourResource)) {\n                            final int minute = Integer.valueOf(minuteResource.getName());\n                            logger.debug(\"Processing minute {}\", minute);\n\n                            // now jobs\n                            final List<JobImpl> jobs = new ArrayList<JobImpl>();\n                            // we use an iterator to skip removed entries\n                            // see SLING-4073\n                            final Iterator<Resource> jobIter = minuteResource.listChildren();\n                            while ( jobIter.hasNext() ) {\n                                final Resource jobResource = jobIter.next();\n                                if ( resourceHandler != null ) {\n                                    if ( !resourceHandler.handle(jobResource) ) {\n                                        return;\n                                    }\n                                } else {\n                                    final JobImpl job = Utility.readJob(logger, jobResource);\n                                    if ( job != null ) {\n                                        logger.debug(\"Found job {}\", jobResource.getName());\n                                        jobs.add(job);\n                                    }\n                                }\n                            }\n\n                            if ( jobHandler != null ) {\n                                Collections.sort(jobs);\n\n                                boolean stop = false;\n                                for(final JobImpl job : jobs) {\n                                    if ( !jobHandler.handle(job) ) {\n                                        stop = true;\n                                    }\n                                }\n                                if ( stop ) {\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }","id":107181,"modified_method":"/**\n     * Internal method for traversal\n     * @param logger        The logger to use for debug logging\n     * @param topicResource The topic resource\n     * @param jobHandler    The job callback\n     * @param resourceHandler    The resource callback\n     */\n    private static void traverse(final Logger logger,\n            final Resource topicResource,\n            final JobCallback jobHandler,\n            final ResourceCallback resourceHandler) {\n        logger.debug(\"Processing topic {}\", topicResource.getName().replace('.', '/'));\n        // now years\n        for(final Resource yearResource: Utility.getSortedChildren(logger, \"year\", topicResource)) {\n            logger.debug(\"Processing year {}\", yearResource.getName());\n\n            // now months\n            for(final Resource monthResource: Utility.getSortedChildren(logger, \"month\", yearResource)) {\n                logger.debug(\"Processing month {}\", monthResource.getName());\n\n                // now days\n                for(final Resource dayResource: Utility.getSortedChildren(logger, \"day\", monthResource)) {\n                    logger.debug(\"Processing day {}\", dayResource.getName());\n\n                    // now hours\n                    for(final Resource hourResource: Utility.getSortedChildren(logger, \"hour\", dayResource)) {\n                        logger.debug(\"Processing hour {}\", hourResource.getName());\n\n                        // now minutes\n                        for(final Resource minuteResource: Utility.getSortedChildren(logger, \"minute\", hourResource)) {\n                            logger.debug(\"Processing minute {}\", minuteResource.getName());\n\n                            // now jobs\n                            final List<JobImpl> jobs = new ArrayList<JobImpl>();\n                            // we use an iterator to skip removed entries\n                            // see SLING-4073\n                            final Iterator<Resource> jobIter = minuteResource.listChildren();\n                            while ( jobIter.hasNext() ) {\n                                final Resource jobResource = jobIter.next();\n                                if ( resourceHandler != null ) {\n                                    if ( !resourceHandler.handle(jobResource) ) {\n                                        return;\n                                    }\n                                } else {\n                                    final JobImpl job = Utility.readJob(logger, jobResource);\n                                    if ( job != null ) {\n                                        logger.debug(\"Found job {}\", jobResource.getName());\n                                        jobs.add(job);\n                                    }\n                                }\n                            }\n\n                            if ( jobHandler != null ) {\n                                Collections.sort(jobs);\n\n                                boolean stop = false;\n                                for(final JobImpl job : jobs) {\n                                    if ( !jobHandler.handle(job) ) {\n                                        stop = true;\n                                    }\n                                }\n                                if ( stop ) {\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }","commit_id":"da6d1071b87dad85c857646c1c656025cf891182","url":"https://github.com/apache/sling"},{"original_method":"public void testGzipCodecWrite(boolean useNative) throws IOException {\n    // Create a gzipped file using a compressor from the CodecPool,\n    // and try to read it back via the regular GZIPInputStream.\n\n    // Use native libs per the parameter\n    Configuration conf = new Configuration();\n    conf.setBoolean(CommonConfigurationKeys.IO_NATIVE_LIB_AVAILABLE_KEY, useNative);\n    if (useNative) {\n      if (!ZlibFactory.isNativeZlibLoaded(conf)) {\n        LOG.warn(\"testGzipCodecWrite skipped: native libs not loaded\");\n        return;\n      }\n    } else {\n      assertFalse(\"ZlibFactory is using native libs against request\",\n          ZlibFactory.isNativeZlibLoaded(conf));\n    }\n\n    // Ensure that the CodecPool has a BuiltInZlibDeflater in it.\n    Compressor zlibCompressor = ZlibFactory.getZlibCompressor(conf);\n    assertNotNull(\"zlibCompressor is null!\", zlibCompressor);\n    assertTrue(\"ZlibFactory returned unexpected deflator\",\n          useNative ? zlibCompressor instanceof ZlibCompressor\n                    : zlibCompressor instanceof BuiltInZlibDeflater);\n\n    CodecPool.returnCompressor(zlibCompressor);\n\n    // Create a GZIP text file via the Compressor interface.\n    CompressionCodecFactory ccf = new CompressionCodecFactory(conf);\n    CompressionCodec codec = ccf.getCodec(new Path(\"foo.gz\"));\n    assertTrue(\"Codec for .gz file is not GzipCodec\", \n               codec instanceof GzipCodec);\n\n    final String msg = \"This is the message we are going to compress.\";\n    final String tmpDir = System.getProperty(\"test.build.data\", \"/tmp/\");\n    final String fileName = new Path(new Path(tmpDir),\n        \"testGzipCodecWrite.txt.gz\").toString();\n\n    BufferedWriter w = null;\n    Compressor gzipCompressor = CodecPool.getCompressor(codec);\n    if (null != gzipCompressor) {\n      // If it gives us back a Compressor, we should be able to use this\n      // to write files we can then read back with Java's gzip tools.\n      OutputStream os = new CompressorStream(new FileOutputStream(fileName),\n          gzipCompressor);\n      w = new BufferedWriter(new OutputStreamWriter(os));\n      w.write(msg);\n      w.close();\n      CodecPool.returnCompressor(gzipCompressor);\n\n      verifyGzipFile(fileName, msg);\n    }\n\n    // Create a gzip text file via codec.getOutputStream().\n    w = new BufferedWriter(new OutputStreamWriter(\n        codec.createOutputStream(new FileOutputStream(fileName))));\n    w.write(msg);\n    w.close();\n\n    verifyGzipFile(fileName, msg);\n  }","id":107182,"modified_method":"public void testGzipCodecWrite(boolean useNative) throws IOException {\n    // Create a gzipped file using a compressor from the CodecPool,\n    // and try to read it back via the regular GZIPInputStream.\n\n    // Use native libs per the parameter\n    Configuration conf = new Configuration();\n    conf.setBoolean(CommonConfigurationKeys.IO_NATIVE_LIB_AVAILABLE_KEY, useNative);\n    if (useNative) {\n      assumeTrue(ZlibFactory.isNativeZlibLoaded(conf));\n    } else {\n      assertFalse(\"ZlibFactory is using native libs against request\",\n          ZlibFactory.isNativeZlibLoaded(conf));\n    }\n\n    // Ensure that the CodecPool has a BuiltInZlibDeflater in it.\n    Compressor zlibCompressor = ZlibFactory.getZlibCompressor(conf);\n    assertNotNull(\"zlibCompressor is null!\", zlibCompressor);\n    assertTrue(\"ZlibFactory returned unexpected deflator\",\n          useNative ? zlibCompressor instanceof ZlibCompressor\n                    : zlibCompressor instanceof BuiltInZlibDeflater);\n\n    CodecPool.returnCompressor(zlibCompressor);\n\n    // Create a GZIP text file via the Compressor interface.\n    CompressionCodecFactory ccf = new CompressionCodecFactory(conf);\n    CompressionCodec codec = ccf.getCodec(new Path(\"foo.gz\"));\n    assertTrue(\"Codec for .gz file is not GzipCodec\", \n               codec instanceof GzipCodec);\n\n    final String msg = \"This is the message we are going to compress.\";\n    final String tmpDir = System.getProperty(\"test.build.data\", \"/tmp/\");\n    final String fileName = new Path(new Path(tmpDir),\n        \"testGzipCodecWrite.txt.gz\").toString();\n\n    BufferedWriter w = null;\n    Compressor gzipCompressor = CodecPool.getCompressor(codec);\n    if (null != gzipCompressor) {\n      // If it gives us back a Compressor, we should be able to use this\n      // to write files we can then read back with Java's gzip tools.\n      OutputStream os = new CompressorStream(new FileOutputStream(fileName),\n          gzipCompressor);\n      w = new BufferedWriter(new OutputStreamWriter(os));\n      w.write(msg);\n      w.close();\n      CodecPool.returnCompressor(gzipCompressor);\n\n      verifyGzipFile(fileName, msg);\n    }\n\n    // Create a gzip text file via codec.getOutputStream().\n    w = new BufferedWriter(new OutputStreamWriter(\n        codec.createOutputStream(new FileOutputStream(fileName))));\n    w.write(msg);\n    w.close();\n\n    verifyGzipFile(fileName, msg);\n  }","commit_id":"790aa6790edbbe6cefc9f9b554169d67e47f4200","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testNativeGzipConcat() throws IOException {\n    Configuration conf = new Configuration();\n    conf.setBoolean(CommonConfigurationKeys.IO_NATIVE_LIB_AVAILABLE_KEY, true);\n    if (!ZlibFactory.isNativeZlibLoaded(conf)) {\n      LOG.warn(\"skipped: native libs not loaded\");\n      return;\n    }\n    GzipConcatTest(conf, GzipCodec.GzipZlibDecompressor.class);\n  }","id":107183,"modified_method":"@Test\n  public void testNativeGzipConcat() throws IOException {\n    Configuration conf = new Configuration();\n    conf.setBoolean(CommonConfigurationKeys.IO_NATIVE_LIB_AVAILABLE_KEY, true);\n    assumeTrue(ZlibFactory.isNativeZlibLoaded(conf));\n    GzipConcatTest(conf, GzipCodec.GzipZlibDecompressor.class);\n  }","commit_id":"790aa6790edbbe6cefc9f9b554169d67e47f4200","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testCodecPoolGzipReuse() throws Exception {\n    Configuration conf = new Configuration();\n    conf.setBoolean(CommonConfigurationKeys.IO_NATIVE_LIB_AVAILABLE_KEY, true);\n    if (!ZlibFactory.isNativeZlibLoaded(conf)) {\n      LOG.warn(\"testCodecPoolGzipReuse skipped: native libs not loaded\");\n      return;\n    }\n    GzipCodec gzc = ReflectionUtils.newInstance(GzipCodec.class, conf);\n    DefaultCodec dfc = ReflectionUtils.newInstance(DefaultCodec.class, conf);\n    Compressor c1 = CodecPool.getCompressor(gzc);\n    Compressor c2 = CodecPool.getCompressor(dfc);\n    CodecPool.returnCompressor(c1);\n    CodecPool.returnCompressor(c2);\n    assertTrue(\"Got mismatched ZlibCompressor\", c2 != CodecPool.getCompressor(gzc));\n  }","id":107184,"modified_method":"@Test\n  public void testCodecPoolGzipReuse() throws Exception {\n    Configuration conf = new Configuration();\n    conf.setBoolean(CommonConfigurationKeys.IO_NATIVE_LIB_AVAILABLE_KEY, true);\n    assumeTrue(ZlibFactory.isNativeZlibLoaded(conf));\n    GzipCodec gzc = ReflectionUtils.newInstance(GzipCodec.class, conf);\n    DefaultCodec dfc = ReflectionUtils.newInstance(DefaultCodec.class, conf);\n    Compressor c1 = CodecPool.getCompressor(gzc);\n    Compressor c2 = CodecPool.getCompressor(dfc);\n    CodecPool.returnCompressor(c1);\n    CodecPool.returnCompressor(c2);\n    assertTrue(\"Got mismatched ZlibCompressor\", c2 != CodecPool.getCompressor(gzc));\n  }","commit_id":"790aa6790edbbe6cefc9f9b554169d67e47f4200","url":"https://github.com/apache/hadoop"},{"original_method":"@Activity( lifecycle = \"agentScan\", phase = \"collectNodeInfo\" )\n    public void collectNodeInfo(Phase currentPhase, AgentScan agentScan) throws InterruptedException {\n        \n        Date scanStamp = new Date();\n        agentScan.setScanStamp(scanStamp);\n        \n        InetAddress primaryAddress = agentScan.getAgentAddress();\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(primaryAddress);\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n        \n        SystemGroup systemGroup = new SystemGroup(primaryAddress);\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"systemGroup\", systemGroup);\n        walker.start();\n        \n        walker.waitFor();\n        \n        systemGroup.updateSnmpDataForNode(agentScan.getNode());\n        \n        List<NodePolicy> nodePolicies = m_provisionService.getNodePoliciesForForeignSource(agentScan.getForeignSource());\n        \n        OnmsNode node = agentScan.getNode();\n        for(NodePolicy policy : nodePolicies) {\n            if (node != null) {\n                node = policy.apply(node);\n            }\n        }\n        \n        agentScan.setNode(node);\n    }","id":107185,"modified_method":"@Activity( lifecycle = \"agentScan\", phase = \"collectNodeInfo\" )\n    public void collectNodeInfo(Phase currentPhase, AgentScan agentScan) throws InterruptedException {\n        \n        Date scanStamp = new Date();\n        agentScan.setScanStamp(scanStamp);\n        \n        InetAddress primaryAddress = agentScan.getAgentAddress();\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(primaryAddress);\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n        \n        SystemGroup systemGroup = new SystemGroup(primaryAddress);\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"systemGroup\", systemGroup);\n        walker.start();\n        \n        walker.waitFor();\n        \n        systemGroup.updateSnmpDataForNode(agentScan.getNode());\n        \n        List<NodePolicy> nodePolicies = m_provisionService.getNodePoliciesForForeignSource(agentScan.getForeignSource());\n        \n        OnmsNode node = agentScan.getNode();\n        for(NodePolicy policy : nodePolicies) {\n            if (node != null) {\n                node = policy.apply(node);\n            }\n        }\n        \n        if (node == null) {\n            agentScan.abort();\n        } else {\n            agentScan.setNode(node);\n        }\n    }","commit_id":"393fa88bdd774dca7ce6fbe005c5293800b6a1c1","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Activity( lifecycle = \"agentScan\", phase = \"deleteObsoleteResources\", schedulingHint=\"write\")\n    public void deleteObsoleteResources(Phase currentPhase, AgentScan agentScan) {\n\n        m_provisionService.updateNodeScanStamp(agentScan.getNodeId(), agentScan.getScanStamp());\n        \n        m_provisionService.deleteObsoleteInterfaces(agentScan.getNodeId(), agentScan.getScanStamp());\n        \n        System.err.println(\"agentScan.deleteObsoleteResources\");\n    }","id":107186,"modified_method":"@Activity( lifecycle = \"agentScan\", phase = \"deleteObsoleteResources\", schedulingHint=\"write\")\n    public void deleteObsoleteResources(Phase currentPhase, AgentScan agentScan) {\n        if (agentScan.isAborted()) { return; }\n\n        m_provisionService.updateNodeScanStamp(agentScan.getNodeId(), agentScan.getScanStamp());\n        \n        m_provisionService.deleteObsoleteInterfaces(agentScan.getNodeId(), agentScan.getScanStamp());\n        \n        System.err.println(\"agentScan.deleteObsoleteResources\");\n    }","commit_id":"393fa88bdd774dca7ce6fbe005c5293800b6a1c1","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Activity( lifecycle = \"agentScan\", phase = \"detectIpInterfaces\" )\n    public void detectIpInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n\n        // mark all provisioned interfaces as 'in need of scanning' so we can mark them\n        // as scanned during ipAddrTable processing\n        final Set<String> provisionedIps = new HashSet<String>();\n        for(OnmsIpInterface provisioned : agentScan.getNode().getIpInterfaces()) {\n            provisionedIps.add(provisioned.getIpAddress());\n        }\n        \n        \n        final IPInterfaceTableTracker ipIfTracker = new IPInterfaceTableTracker() {\n            @Override\n            public void processIPInterfaceRow(IPInterfaceRow row) {\n                System.out.println(\"Processing row with ipAddr \"+row.getIpAddress());\n                if (!row.getIpAddress().startsWith(\"127.0.0\")) {\n                    \n                    // mark any provisioned interface as scanned\n                    provisionedIps.remove(row.getIpAddress());\n                    \n                    // save the interface\n                    OnmsIpInterface iface = row.createInterfaceFromRow();\n                    iface.setIpLastCapsdPoll(agentScan.getScanStamp());\n                    \n                    // add call to the ip interface is managed policies\n                    iface.setIsManaged(\"M\");\n                    \n                    List<IpInterfacePolicy> policies = m_provisionService.getIpInterfacePoliciesForForeignSource(agentScan.getForeignSource());\n                    \n                    for(IpInterfacePolicy policy : policies) {\n                        if (iface != null) {\n                            iface = policy.apply(iface);\n                        }\n                    }\n                    \n                    if (iface != null) {\n                        currentPhase.add(ipUpdater(currentPhase, agentScan, iface), \"write\");\n                    }\n                    \n                }\n            }\n        };\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"ipAddrTable\", ipIfTracker);\n        walker.start();\n        walker.waitFor();\n        \n        // After processing the snmp provided interfaces then we need to scan any that \n        // were provisioned but missing from the ip table\n        for(String ipAddr : provisionedIps) {\n            OnmsIpInterface iface = agentScan.getNode().getIpInterfaceByIpAddress(ipAddr);\n            iface.setIpLastCapsdPoll(agentScan.getScanStamp());\n            iface.setIsManaged(\"M\");\n            \n            currentPhase.add(ipUpdater(currentPhase, agentScan, iface), \"write\");\n            \n        }\n        \n        \n        System.err.println(\"detectIpInterfaces\");\n    }","id":107187,"modified_method":"@Activity( lifecycle = \"agentScan\", phase = \"detectIpInterfaces\" )\n    public void detectIpInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {\n        if (agentScan.isAborted()) { return; }\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n\n        // mark all provisioned interfaces as 'in need of scanning' so we can mark them\n        // as scanned during ipAddrTable processing\n        final Set<String> provisionedIps = new HashSet<String>();\n        for(OnmsIpInterface provisioned : agentScan.getNode().getIpInterfaces()) {\n            provisionedIps.add(provisioned.getIpAddress());\n        }\n        \n        \n        final IPInterfaceTableTracker ipIfTracker = new IPInterfaceTableTracker() {\n            @Override\n            public void processIPInterfaceRow(IPInterfaceRow row) {\n                System.out.println(\"Processing row with ipAddr \"+row.getIpAddress());\n                if (!row.getIpAddress().startsWith(\"127.0.0\")) {\n                    \n                    // mark any provisioned interface as scanned\n                    provisionedIps.remove(row.getIpAddress());\n                    \n                    // save the interface\n                    OnmsIpInterface iface = row.createInterfaceFromRow();\n                    iface.setIpLastCapsdPoll(agentScan.getScanStamp());\n                    \n                    // add call to the ip interface is managed policies\n                    iface.setIsManaged(\"M\");\n                    \n                    List<IpInterfacePolicy> policies = m_provisionService.getIpInterfacePoliciesForForeignSource(agentScan.getForeignSource());\n                    \n                    for(IpInterfacePolicy policy : policies) {\n                        if (iface != null) {\n                            iface = policy.apply(iface);\n                        }\n                    }\n                    \n                    if (iface != null) {\n                        currentPhase.add(ipUpdater(currentPhase, agentScan, iface), \"write\");\n                    }\n                    \n                }\n            }\n        };\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"ipAddrTable\", ipIfTracker);\n        walker.start();\n        walker.waitFor();\n        \n        // After processing the snmp provided interfaces then we need to scan any that \n        // were provisioned but missing from the ip table\n        for(String ipAddr : provisionedIps) {\n            OnmsIpInterface iface = agentScan.getNode().getIpInterfaceByIpAddress(ipAddr);\n            iface.setIpLastCapsdPoll(agentScan.getScanStamp());\n            iface.setIsManaged(\"M\");\n            \n            currentPhase.add(ipUpdater(currentPhase, agentScan, iface), \"write\");\n            \n        }\n        \n        \n        System.err.println(\"detectIpInterfaces\");\n    }","commit_id":"393fa88bdd774dca7ce6fbe005c5293800b6a1c1","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Activity( lifecycle = \"agentScan\", phase = \"detectPhysicalInterfaces\" )\n    public void detectPhysicalInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n        \n        final PhysInterfaceTableTracker physIfTracker = new PhysInterfaceTableTracker() {\n            @Override\n            public void processPhysicalInterfaceRow(PhysicalInterfaceRow row) {\n                System.out.println(\"Processing row for ifIndex \"+row.getIfIndex());\n                OnmsSnmpInterface snmpIface = row.createInterfaceFromRow();\n                snmpIface.setLastCapsdPoll(agentScan.getScanStamp());\n                \n                List<SnmpInterfacePolicy> policies = m_provisionService.getSnmpInterfacePoliciesForForeignSource(agentScan.getForeignSource());\n                for(SnmpInterfacePolicy policy : policies) {\n                    if (snmpIface != null) {\n                        snmpIface = policy.apply(snmpIface);\n                    }\n                }\n                \n                if (snmpIface != null) {\n                    final OnmsSnmpInterface snmpIfaceResult = snmpIface;\n\n                    // add call to the snmp interface collection enable policies\n\n                    Runnable r = new Runnable() {\n                        public void run() {\n                            System.out.println(\"Saving OnmsSnmpInterface \"+snmpIfaceResult);\n                            m_provisionService.updateSnmpInterfaceAttributes(\n                                                                             agentScan.getNodeId(),\n                                                                             snmpIfaceResult);\n                        }\n                    };\n                    currentPhase.add(r, \"write\");\n                }\n            }\n        };\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"ifTable/ifXTable\", physIfTracker);\n        walker.start();\n        walker.waitFor();\n        \n        System.err.println(\"detectPhysicalInterfaces\");\n    }","id":107188,"modified_method":"@Activity( lifecycle = \"agentScan\", phase = \"detectPhysicalInterfaces\" )\n    public void detectPhysicalInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {\n        if (agentScan.isAborted()) { return; }\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n        \n        final PhysInterfaceTableTracker physIfTracker = new PhysInterfaceTableTracker() {\n            @Override\n            public void processPhysicalInterfaceRow(PhysicalInterfaceRow row) {\n                System.out.println(\"Processing row for ifIndex \"+row.getIfIndex());\n                OnmsSnmpInterface snmpIface = row.createInterfaceFromRow();\n                snmpIface.setLastCapsdPoll(agentScan.getScanStamp());\n                \n                List<SnmpInterfacePolicy> policies = m_provisionService.getSnmpInterfacePoliciesForForeignSource(agentScan.getForeignSource());\n                for(SnmpInterfacePolicy policy : policies) {\n                    if (snmpIface != null) {\n                        snmpIface = policy.apply(snmpIface);\n                    }\n                }\n                \n                if (snmpIface != null) {\n                    final OnmsSnmpInterface snmpIfaceResult = snmpIface;\n\n                    // add call to the snmp interface collection enable policies\n\n                    Runnable r = new Runnable() {\n                        public void run() {\n                            System.out.println(\"Saving OnmsSnmpInterface \"+snmpIfaceResult);\n                            m_provisionService.updateSnmpInterfaceAttributes(\n                                                                             agentScan.getNodeId(),\n                                                                             snmpIfaceResult);\n                        }\n                    };\n                    currentPhase.add(r, \"write\");\n                }\n            }\n        };\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"ifTable/ifXTable\", physIfTracker);\n        walker.start();\n        walker.waitFor();\n        \n        System.err.println(\"detectPhysicalInterfaces\");\n    }","commit_id":"393fa88bdd774dca7ce6fbe005c5293800b6a1c1","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void doPersistNodeInfo() {\n            if (m_node == null) {\n                return;\n            }\n            m_nodeId = m_provisionService.updateNodeAttributes(getNode()).getId();\n        }","id":107189,"modified_method":"public void doPersistNodeInfo() {\n            if (isAborted()) {\n                return;\n            }\n            m_nodeId = m_provisionService.updateNodeAttributes(getNode()).getId();\n        }","commit_id":"393fa88bdd774dca7ce6fbe005c5293800b6a1c1","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Activity( lifecycle = \"agentScan\", phase = \"detectIpInterfaces\" )\n    public void detectIpInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n\n        // mark all provisioned interfaces as 'in need of scanning' so we can mark them\n        // as scanned during ipAddrTable processing\n        final Set<String> provisionedIps = new HashSet<String>();\n        for(OnmsIpInterface provisioned : agentScan.getNode().getIpInterfaces()) {\n            provisionedIps.add(provisioned.getIpAddress());\n        }\n        \n        \n        final IPInterfaceTableTracker ipIfTracker = new IPInterfaceTableTracker() {\n            @Override\n            public void processIPInterfaceRow(IPInterfaceRow row) {\n                System.out.println(\"Processing row with ipAddr \"+row.getIpAddress());\n                if (!row.getIpAddress().startsWith(\"127.0.0\")) {\n                    \n                    // mark any provisioned interface as scanned\n                    provisionedIps.remove(row.getIpAddress());\n                    \n                    // save the interface\n                    OnmsIpInterface iface = row.createInterfaceFromRow();\n                    iface.setIpLastCapsdPoll(agentScan.getScanStamp());\n                    \n                    // add call to the ip interface is managed policies\n                    iface.setIsManaged(\"M\");\n                    \n                    List<IpInterfacePolicy> policies = m_provisionService.getIpInterfacePoliciesForForeignSource(agentScan.getForeignSource());\n                    \n                    for(IpInterfacePolicy policy : policies) {\n                        if (iface != null) {\n                            iface = policy.apply(iface);\n                        }\n                    }\n                    \n                    if (iface != null) {\n                        currentPhase.add(ipUpdater(currentPhase, agentScan, iface), \"write\");\n                    }\n                    \n                }\n            }\n        };\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"ipAddrTable\", ipIfTracker);\n        walker.start();\n        walker.waitFor();\n        \n        // After processing the snmp provided interfaces then we need to scan any that \n        // were provisioned but missing from the ip table\n        for(String ipAddr : provisionedIps) {\n            OnmsIpInterface iface = agentScan.getNode().getIpInterfaceByIpAddress(ipAddr);\n            iface.setIpLastCapsdPoll(agentScan.getScanStamp());\n            iface.setIsManaged(\"M\");\n            \n            currentPhase.add(ipUpdater(currentPhase, agentScan, iface), \"write\");\n            \n        }\n        \n        \n        System.err.println(\"detectIpInterfaces\");\n    }","id":107190,"modified_method":"@Activity( lifecycle = \"agentScan\", phase = \"detectIpInterfaces\" )\n    public void detectIpInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {\n        if (agentScan.isAborted()) { return; }\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n\n        // mark all provisioned interfaces as 'in need of scanning' so we can mark them\n        // as scanned during ipAddrTable processing\n        final Set<String> provisionedIps = new HashSet<String>();\n        for(OnmsIpInterface provisioned : agentScan.getNode().getIpInterfaces()) {\n            provisionedIps.add(provisioned.getIpAddress());\n        }\n        \n        \n        final IPInterfaceTableTracker ipIfTracker = new IPInterfaceTableTracker() {\n            @Override\n            public void processIPInterfaceRow(IPInterfaceRow row) {\n                System.out.println(\"Processing row with ipAddr \"+row.getIpAddress());\n                if (!row.getIpAddress().startsWith(\"127.0.0\")) {\n                    \n                    // mark any provisioned interface as scanned\n                    provisionedIps.remove(row.getIpAddress());\n                    \n                    // save the interface\n                    OnmsIpInterface iface = row.createInterfaceFromRow();\n                    iface.setIpLastCapsdPoll(agentScan.getScanStamp());\n                    \n                    // add call to the ip interface is managed policies\n                    iface.setIsManaged(\"M\");\n                    \n                    List<IpInterfacePolicy> policies = m_provisionService.getIpInterfacePoliciesForForeignSource(agentScan.getForeignSource());\n                    \n                    for(IpInterfacePolicy policy : policies) {\n                        if (iface != null) {\n                            iface = policy.apply(iface);\n                        }\n                    }\n                    \n                    if (iface != null) {\n                        currentPhase.add(ipUpdater(currentPhase, agentScan, iface), \"write\");\n                    }\n                    \n                }\n            }\n        };\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"ipAddrTable\", ipIfTracker);\n        walker.start();\n        walker.waitFor();\n        \n        // After processing the snmp provided interfaces then we need to scan any that \n        // were provisioned but missing from the ip table\n        for(String ipAddr : provisionedIps) {\n            OnmsIpInterface iface = agentScan.getNode().getIpInterfaceByIpAddress(ipAddr);\n            iface.setIpLastCapsdPoll(agentScan.getScanStamp());\n            iface.setIsManaged(\"M\");\n            \n            currentPhase.add(ipUpdater(currentPhase, agentScan, iface), \"write\");\n            \n        }\n        \n        \n        System.err.println(\"detectIpInterfaces\");\n    }","commit_id":"558fdb8fa08bf70169372e6241bdc7c87c6dc594","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Activity( lifecycle = \"agentScan\", phase = \"detectPhysicalInterfaces\" )\n    public void detectPhysicalInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n        \n        final PhysInterfaceTableTracker physIfTracker = new PhysInterfaceTableTracker() {\n            @Override\n            public void processPhysicalInterfaceRow(PhysicalInterfaceRow row) {\n                System.out.println(\"Processing row for ifIndex \"+row.getIfIndex());\n                OnmsSnmpInterface snmpIface = row.createInterfaceFromRow();\n                snmpIface.setLastCapsdPoll(agentScan.getScanStamp());\n                \n                List<SnmpInterfacePolicy> policies = m_provisionService.getSnmpInterfacePoliciesForForeignSource(agentScan.getForeignSource());\n                for(SnmpInterfacePolicy policy : policies) {\n                    if (snmpIface != null) {\n                        snmpIface = policy.apply(snmpIface);\n                    }\n                }\n                \n                if (snmpIface != null) {\n                    final OnmsSnmpInterface snmpIfaceResult = snmpIface;\n\n                    // add call to the snmp interface collection enable policies\n\n                    Runnable r = new Runnable() {\n                        public void run() {\n                            System.out.println(\"Saving OnmsSnmpInterface \"+snmpIfaceResult);\n                            m_provisionService.updateSnmpInterfaceAttributes(\n                                                                             agentScan.getNodeId(),\n                                                                             snmpIfaceResult);\n                        }\n                    };\n                    currentPhase.add(r, \"write\");\n                }\n            }\n        };\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"ifTable/ifXTable\", physIfTracker);\n        walker.start();\n        walker.waitFor();\n        \n        System.err.println(\"detectPhysicalInterfaces\");\n    }","id":107191,"modified_method":"@Activity( lifecycle = \"agentScan\", phase = \"detectPhysicalInterfaces\" )\n    public void detectPhysicalInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {\n        if (agentScan.isAborted()) { return; }\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n        \n        final PhysInterfaceTableTracker physIfTracker = new PhysInterfaceTableTracker() {\n            @Override\n            public void processPhysicalInterfaceRow(PhysicalInterfaceRow row) {\n                System.out.println(\"Processing row for ifIndex \"+row.getIfIndex());\n                OnmsSnmpInterface snmpIface = row.createInterfaceFromRow();\n                snmpIface.setLastCapsdPoll(agentScan.getScanStamp());\n                \n                List<SnmpInterfacePolicy> policies = m_provisionService.getSnmpInterfacePoliciesForForeignSource(agentScan.getForeignSource());\n                for(SnmpInterfacePolicy policy : policies) {\n                    if (snmpIface != null) {\n                        snmpIface = policy.apply(snmpIface);\n                    }\n                }\n                \n                if (snmpIface != null) {\n                    final OnmsSnmpInterface snmpIfaceResult = snmpIface;\n\n                    // add call to the snmp interface collection enable policies\n\n                    Runnable r = new Runnable() {\n                        public void run() {\n                            System.out.println(\"Saving OnmsSnmpInterface \"+snmpIfaceResult);\n                            m_provisionService.updateSnmpInterfaceAttributes(\n                                                                             agentScan.getNodeId(),\n                                                                             snmpIfaceResult);\n                        }\n                    };\n                    currentPhase.add(r, \"write\");\n                }\n            }\n        };\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"ifTable/ifXTable\", physIfTracker);\n        walker.start();\n        walker.waitFor();\n        \n        System.err.println(\"detectPhysicalInterfaces\");\n    }","commit_id":"558fdb8fa08bf70169372e6241bdc7c87c6dc594","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Activity( lifecycle = \"agentScan\", phase = \"deleteObsoleteResources\", schedulingHint=\"write\")\n    public void deleteObsoleteResources(Phase currentPhase, AgentScan agentScan) {\n\n        m_provisionService.updateNodeScanStamp(agentScan.getNodeId(), agentScan.getScanStamp());\n        \n        m_provisionService.deleteObsoleteInterfaces(agentScan.getNodeId(), agentScan.getScanStamp());\n        \n        System.err.println(\"agentScan.deleteObsoleteResources\");\n    }","id":107192,"modified_method":"@Activity( lifecycle = \"agentScan\", phase = \"deleteObsoleteResources\", schedulingHint=\"write\")\n    public void deleteObsoleteResources(Phase currentPhase, AgentScan agentScan) {\n        if (agentScan.isAborted()) { return; }\n\n        m_provisionService.updateNodeScanStamp(agentScan.getNodeId(), agentScan.getScanStamp());\n        \n        m_provisionService.deleteObsoleteInterfaces(agentScan.getNodeId(), agentScan.getScanStamp());\n        \n        System.err.println(\"agentScan.deleteObsoleteResources\");\n    }","commit_id":"558fdb8fa08bf70169372e6241bdc7c87c6dc594","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Activity( lifecycle = \"agentScan\", phase = \"collectNodeInfo\" )\n    public void collectNodeInfo(Phase currentPhase, AgentScan agentScan) throws InterruptedException {\n        \n        Date scanStamp = new Date();\n        agentScan.setScanStamp(scanStamp);\n        \n        InetAddress primaryAddress = agentScan.getAgentAddress();\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(primaryAddress);\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n        \n        SystemGroup systemGroup = new SystemGroup(primaryAddress);\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"systemGroup\", systemGroup);\n        walker.start();\n        \n        walker.waitFor();\n        \n        systemGroup.updateSnmpDataForNode(agentScan.getNode());\n        \n        List<NodePolicy> nodePolicies = m_provisionService.getNodePoliciesForForeignSource(agentScan.getForeignSource());\n        \n        OnmsNode node = agentScan.getNode();\n        for(NodePolicy policy : nodePolicies) {\n            if (node != null) {\n                node = policy.apply(node);\n            }\n        }\n        \n        agentScan.setNode(node);\n    }","id":107193,"modified_method":"@Activity( lifecycle = \"agentScan\", phase = \"collectNodeInfo\" )\n    public void collectNodeInfo(Phase currentPhase, AgentScan agentScan) throws InterruptedException {\n        \n        Date scanStamp = new Date();\n        agentScan.setScanStamp(scanStamp);\n        \n        InetAddress primaryAddress = agentScan.getAgentAddress();\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(primaryAddress);\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n        \n        SystemGroup systemGroup = new SystemGroup(primaryAddress);\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"systemGroup\", systemGroup);\n        walker.start();\n        \n        walker.waitFor();\n        \n        systemGroup.updateSnmpDataForNode(agentScan.getNode());\n        \n        List<NodePolicy> nodePolicies = m_provisionService.getNodePoliciesForForeignSource(agentScan.getForeignSource());\n        \n        OnmsNode node = agentScan.getNode();\n        for(NodePolicy policy : nodePolicies) {\n            if (node != null) {\n                node = policy.apply(node);\n            }\n        }\n        \n        if (node == null) {\n            agentScan.abort();\n        } else {\n            agentScan.setNode(node);\n        }\n    }","commit_id":"558fdb8fa08bf70169372e6241bdc7c87c6dc594","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void doPersistNodeInfo() {\n            if (m_node == null) {\n                return;\n            }\n            m_nodeId = m_provisionService.updateNodeAttributes(getNode()).getId();\n        }","id":107194,"modified_method":"public void doPersistNodeInfo() {\n            if (isAborted()) {\n                return;\n            }\n            m_nodeId = m_provisionService.updateNodeAttributes(getNode()).getId();\n        }","commit_id":"558fdb8fa08bf70169372e6241bdc7c87c6dc594","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Activity( lifecycle = \"agentScan\", phase = \"detectPhysicalInterfaces\" )\n    public void detectPhysicalInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n        \n        final PhysInterfaceTableTracker physIfTracker = new PhysInterfaceTableTracker() {\n            @Override\n            public void processPhysicalInterfaceRow(PhysicalInterfaceRow row) {\n                System.out.println(\"Processing row for ifIndex \"+row.getIfIndex());\n                OnmsSnmpInterface snmpIface = row.createInterfaceFromRow();\n                snmpIface.setLastCapsdPoll(agentScan.getScanStamp());\n                \n                List<SnmpInterfacePolicy> policies = m_provisionService.getSnmpInterfacePoliciesForForeignSource(agentScan.getForeignSource());\n                for(SnmpInterfacePolicy policy : policies) {\n                    if (snmpIface != null) {\n                        snmpIface = policy.apply(snmpIface);\n                    }\n                }\n                \n                if (snmpIface != null) {\n                    final OnmsSnmpInterface snmpIfaceResult = snmpIface;\n\n                    // add call to the snmp interface collection enable policies\n\n                    Runnable r = new Runnable() {\n                        public void run() {\n                            System.out.println(\"Saving OnmsSnmpInterface \"+snmpIfaceResult);\n                            m_provisionService.updateSnmpInterfaceAttributes(\n                                                                             agentScan.getNodeId(),\n                                                                             snmpIfaceResult);\n                        }\n                    };\n                    currentPhase.add(r, \"write\");\n                }\n            }\n        };\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"ifTable/ifXTable\", physIfTracker);\n        walker.start();\n        walker.waitFor();\n        \n        System.err.println(\"detectPhysicalInterfaces\");\n    }","id":107195,"modified_method":"@Activity( lifecycle = \"agentScan\", phase = \"detectPhysicalInterfaces\" )\n    public void detectPhysicalInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {\n        if (agentScan.isAborted()) { return; }\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n        \n        final PhysInterfaceTableTracker physIfTracker = new PhysInterfaceTableTracker() {\n            @Override\n            public void processPhysicalInterfaceRow(PhysicalInterfaceRow row) {\n                System.out.println(\"Processing row for ifIndex \"+row.getIfIndex());\n                OnmsSnmpInterface snmpIface = row.createInterfaceFromRow();\n                snmpIface.setLastCapsdPoll(agentScan.getScanStamp());\n                \n                List<SnmpInterfacePolicy> policies = m_provisionService.getSnmpInterfacePoliciesForForeignSource(agentScan.getForeignSource());\n                for(SnmpInterfacePolicy policy : policies) {\n                    if (snmpIface != null) {\n                        snmpIface = policy.apply(snmpIface);\n                    }\n                }\n                \n                if (snmpIface != null) {\n                    final OnmsSnmpInterface snmpIfaceResult = snmpIface;\n\n                    // add call to the snmp interface collection enable policies\n\n                    Runnable r = new Runnable() {\n                        public void run() {\n                            System.out.println(\"Saving OnmsSnmpInterface \"+snmpIfaceResult);\n                            m_provisionService.updateSnmpInterfaceAttributes(\n                                                                             agentScan.getNodeId(),\n                                                                             snmpIfaceResult);\n                        }\n                    };\n                    currentPhase.add(r, \"write\");\n                }\n            }\n        };\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"ifTable/ifXTable\", physIfTracker);\n        walker.start();\n        walker.waitFor();\n        \n        System.err.println(\"detectPhysicalInterfaces\");\n    }","commit_id":"2afcffbfceca4a198302adefb6e97a6332e8df30","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Activity( lifecycle = \"agentScan\", phase = \"detectIpInterfaces\" )\n    public void detectIpInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n\n        // mark all provisioned interfaces as 'in need of scanning' so we can mark them\n        // as scanned during ipAddrTable processing\n        final Set<String> provisionedIps = new HashSet<String>();\n        for(OnmsIpInterface provisioned : agentScan.getNode().getIpInterfaces()) {\n            provisionedIps.add(provisioned.getIpAddress());\n        }\n        \n        \n        final IPInterfaceTableTracker ipIfTracker = new IPInterfaceTableTracker() {\n            @Override\n            public void processIPInterfaceRow(IPInterfaceRow row) {\n                System.out.println(\"Processing row with ipAddr \"+row.getIpAddress());\n                if (!row.getIpAddress().startsWith(\"127.0.0\")) {\n                    \n                    // mark any provisioned interface as scanned\n                    provisionedIps.remove(row.getIpAddress());\n                    \n                    // save the interface\n                    OnmsIpInterface iface = row.createInterfaceFromRow();\n                    iface.setIpLastCapsdPoll(agentScan.getScanStamp());\n                    \n                    // add call to the ip interface is managed policies\n                    iface.setIsManaged(\"M\");\n                    \n                    List<IpInterfacePolicy> policies = m_provisionService.getIpInterfacePoliciesForForeignSource(agentScan.getForeignSource());\n                    \n                    for(IpInterfacePolicy policy : policies) {\n                        if (iface != null) {\n                            iface = policy.apply(iface);\n                        }\n                    }\n                    \n                    if (iface != null) {\n                        currentPhase.add(ipUpdater(currentPhase, agentScan, iface), \"write\");\n                    }\n                    \n                }\n            }\n        };\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"ipAddrTable\", ipIfTracker);\n        walker.start();\n        walker.waitFor();\n        \n        // After processing the snmp provided interfaces then we need to scan any that \n        // were provisioned but missing from the ip table\n        for(String ipAddr : provisionedIps) {\n            OnmsIpInterface iface = agentScan.getNode().getIpInterfaceByIpAddress(ipAddr);\n            iface.setIpLastCapsdPoll(agentScan.getScanStamp());\n            iface.setIsManaged(\"M\");\n            \n            currentPhase.add(ipUpdater(currentPhase, agentScan, iface), \"write\");\n            \n        }\n        \n        \n        System.err.println(\"detectIpInterfaces\");\n    }","id":107196,"modified_method":"@Activity( lifecycle = \"agentScan\", phase = \"detectIpInterfaces\" )\n    public void detectIpInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {\n        if (agentScan.isAborted()) { return; }\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n\n        // mark all provisioned interfaces as 'in need of scanning' so we can mark them\n        // as scanned during ipAddrTable processing\n        final Set<String> provisionedIps = new HashSet<String>();\n        for(OnmsIpInterface provisioned : agentScan.getNode().getIpInterfaces()) {\n            provisionedIps.add(provisioned.getIpAddress());\n        }\n        \n        \n        final IPInterfaceTableTracker ipIfTracker = new IPInterfaceTableTracker() {\n            @Override\n            public void processIPInterfaceRow(IPInterfaceRow row) {\n                System.out.println(\"Processing row with ipAddr \"+row.getIpAddress());\n                if (!row.getIpAddress().startsWith(\"127.0.0\")) {\n                    \n                    // mark any provisioned interface as scanned\n                    provisionedIps.remove(row.getIpAddress());\n                    \n                    // save the interface\n                    OnmsIpInterface iface = row.createInterfaceFromRow();\n                    iface.setIpLastCapsdPoll(agentScan.getScanStamp());\n                    \n                    // add call to the ip interface is managed policies\n                    iface.setIsManaged(\"M\");\n                    \n                    List<IpInterfacePolicy> policies = m_provisionService.getIpInterfacePoliciesForForeignSource(agentScan.getForeignSource());\n                    \n                    for(IpInterfacePolicy policy : policies) {\n                        if (iface != null) {\n                            iface = policy.apply(iface);\n                        }\n                    }\n                    \n                    if (iface != null) {\n                        currentPhase.add(ipUpdater(currentPhase, agentScan, iface), \"write\");\n                    }\n                    \n                }\n            }\n        };\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"ipAddrTable\", ipIfTracker);\n        walker.start();\n        walker.waitFor();\n        \n        // After processing the snmp provided interfaces then we need to scan any that \n        // were provisioned but missing from the ip table\n        for(String ipAddr : provisionedIps) {\n            OnmsIpInterface iface = agentScan.getNode().getIpInterfaceByIpAddress(ipAddr);\n            iface.setIpLastCapsdPoll(agentScan.getScanStamp());\n            iface.setIsManaged(\"M\");\n            \n            currentPhase.add(ipUpdater(currentPhase, agentScan, iface), \"write\");\n            \n        }\n        \n        \n        System.err.println(\"detectIpInterfaces\");\n    }","commit_id":"2afcffbfceca4a198302adefb6e97a6332e8df30","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Activity( lifecycle = \"agentScan\", phase = \"collectNodeInfo\" )\n    public void collectNodeInfo(Phase currentPhase, AgentScan agentScan) throws InterruptedException {\n        \n        Date scanStamp = new Date();\n        agentScan.setScanStamp(scanStamp);\n        \n        InetAddress primaryAddress = agentScan.getAgentAddress();\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(primaryAddress);\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n        \n        SystemGroup systemGroup = new SystemGroup(primaryAddress);\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"systemGroup\", systemGroup);\n        walker.start();\n        \n        walker.waitFor();\n        \n        systemGroup.updateSnmpDataForNode(agentScan.getNode());\n        \n        List<NodePolicy> nodePolicies = m_provisionService.getNodePoliciesForForeignSource(agentScan.getForeignSource());\n        \n        OnmsNode node = agentScan.getNode();\n        for(NodePolicy policy : nodePolicies) {\n            if (node != null) {\n                node = policy.apply(node);\n            }\n        }\n        \n        agentScan.setNode(node);\n    }","id":107197,"modified_method":"@Activity( lifecycle = \"agentScan\", phase = \"collectNodeInfo\" )\n    public void collectNodeInfo(Phase currentPhase, AgentScan agentScan) throws InterruptedException {\n        \n        Date scanStamp = new Date();\n        agentScan.setScanStamp(scanStamp);\n        \n        InetAddress primaryAddress = agentScan.getAgentAddress();\n        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(primaryAddress);\n        Assert.notNull(m_agentConfigFactory, \"agentConfigFactory was not injected\");\n        \n        SystemGroup systemGroup = new SystemGroup(primaryAddress);\n        \n        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, \"systemGroup\", systemGroup);\n        walker.start();\n        \n        walker.waitFor();\n        \n        systemGroup.updateSnmpDataForNode(agentScan.getNode());\n        \n        List<NodePolicy> nodePolicies = m_provisionService.getNodePoliciesForForeignSource(agentScan.getForeignSource());\n        \n        OnmsNode node = agentScan.getNode();\n        for(NodePolicy policy : nodePolicies) {\n            if (node != null) {\n                node = policy.apply(node);\n            }\n        }\n        \n        if (node == null) {\n            agentScan.abort();\n        } else {\n            agentScan.setNode(node);\n        }\n    }","commit_id":"2afcffbfceca4a198302adefb6e97a6332e8df30","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Activity( lifecycle = \"agentScan\", phase = \"deleteObsoleteResources\", schedulingHint=\"write\")\n    public void deleteObsoleteResources(Phase currentPhase, AgentScan agentScan) {\n\n        m_provisionService.updateNodeScanStamp(agentScan.getNodeId(), agentScan.getScanStamp());\n        \n        m_provisionService.deleteObsoleteInterfaces(agentScan.getNodeId(), agentScan.getScanStamp());\n        \n        System.err.println(\"agentScan.deleteObsoleteResources\");\n    }","id":107198,"modified_method":"@Activity( lifecycle = \"agentScan\", phase = \"deleteObsoleteResources\", schedulingHint=\"write\")\n    public void deleteObsoleteResources(Phase currentPhase, AgentScan agentScan) {\n        if (agentScan.isAborted()) { return; }\n\n        m_provisionService.updateNodeScanStamp(agentScan.getNodeId(), agentScan.getScanStamp());\n        \n        m_provisionService.deleteObsoleteInterfaces(agentScan.getNodeId(), agentScan.getScanStamp());\n        \n        System.err.println(\"agentScan.deleteObsoleteResources\");\n    }","commit_id":"2afcffbfceca4a198302adefb6e97a6332e8df30","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void doPersistNodeInfo() {\n            if (m_node == null) {\n                return;\n            }\n            m_nodeId = m_provisionService.updateNodeAttributes(getNode()).getId();\n        }","id":107199,"modified_method":"public void doPersistNodeInfo() {\n            if (isAborted()) {\n                return;\n            }\n            m_nodeId = m_provisionService.updateNodeAttributes(getNode()).getId();\n        }","commit_id":"2afcffbfceca4a198302adefb6e97a6332e8df30","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public CrossReferenceDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tcreateCrossReference = indexDatabase.prepareStatements(\n\t\t\t\t\"INSERT INTO CrossReference(source,target) VALUES(?,?)\");\n\t\t\tselectURIByCrossReferenceTarget = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path, EObject.fragment FROM CrossReference, EObject, Resource, Container WHERE CrossReference.target=? AND CrossReference.source=EObject.id AND EObject.resource=Resource.id AND Resource.container=Container.id\");\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":107200,"modified_method":"public CrossReferenceDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tcreateCrossReference = indexDatabase\n\t\t\t\t\t.prepareStatements(\"INSERT INTO CrossReference(source,target) VALUES(?,?)\");\n\t\t\tselectTargetURIByCrossReferenceSource = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT target FROM CrossReference WHERE source=?\");\n\t\t\tselectSourceURIByCrossReferenceTarget = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path, EObject.fragment FROM CrossReference \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN EObject ON CrossReference.source=EObject.id \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN Resource ON EObject.resource=Resource.id \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN Container ON Resource.container=Container.id \"\n\t\t\t\t\t\t\t+ \"WHERE CrossReference.target=?\");\n\t\t\tselectSourceURIByCrossReferenceTargetAndContainerID = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path, EObject.fragment FROM CrossReference \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN EObject ON CrossReference.source=EObject.id \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN Resource ON EObject.resource=Resource.id \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN Container ON Resource.container=Container.id \"\n\t\t\t\t\t\t\t+ \"WHERE CrossReference.target=? AND Container.id=?\");\n\t\t\tdeleteReferencesBySource = indexDatabase.prepareStatements(\"DELETE FROM CrossReference WHERE source=?\");\n\t\t\tdeleteReferencesBySourceAndTarget = indexDatabase\n\t\t\t\t\t.prepareStatements(\"DELETE FROM CrossReference WHERE source=? AND target=?\");\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findReferencesTo(String eObjectURI) throws SQLException {\n\t\t\n\t\t\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tselectURIByCrossReferenceTarget.setString(1, eObjectURI);\n\t\t\tresult = selectURIByCrossReferenceTarget.executeQuery();\n\t\t\tList<URI> uris = indexDatabase.createURIsFromResult(result);\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","id":107201,"modified_method":"public List<URI> findReferencesTo(String eObjectURI) throws SQLException {\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tselectSourceURIByCrossReferenceTarget.setString(1, eObjectURI);\n\t\t\tresult = selectSourceURIByCrossReferenceTarget.executeQuery();\n\t\t\tList<URI> uris = URIUtil.createURIsFromResult(result);\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findReferencesTo(EObject eObject) throws SQLException {\n\t\treturn findReferencesTo(EcoreUtil.getURI(eObject));\n\t}","id":107202,"modified_method":"public List<URI> findReferencesTo(EObject eObject) throws SQLException {\n\t\treturn findReferencesTo(URIUtil.getURI(eObject));\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findReferencesTo(URI uri) throws SQLException {\n\t\treturn findReferencesTo(uri.toString());\n\t}","id":107203,"modified_method":"public List<URI> findReferencesTo(String eObjectURI, int resourceContainerID) throws SQLException {\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tselectSourceURIByCrossReferenceTargetAndContainerID.setString(1, eObjectURI);\n\t\t\tselectSourceURIByCrossReferenceTargetAndContainerID.setInt(2, resourceContainerID);\n\t\t\tresult = selectSourceURIByCrossReferenceTargetAndContainerID.executeQuery();\n\t\t\tList<URI> uris = URIUtil.createURIsFromResult(result);\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\tindexDatabase = new IndexDatabase();\n\t\tindexDatabase.clearAll();\n\t}","id":107204,"modified_method":"@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\tindexDatabase = new IndexDatabase();\n\t\ttry {\n\t\t\tindexDatabase.clearAll();\n\t\t} catch(Exception exc) {\n\t\t\t// ignore\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testResourceContainer() throws Exception {\n\t\tint idX = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_X);\n\t\tint idY = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_Y);\n\t\tassertEquals(idX, indexDatabase.getResourceContainerDAO().getID(PLATFORM_PLUGIN_X));\n\t\tassertEquals(idY, indexDatabase.getResourceContainerDAO().getID(PLATFORM_PLUGIN_Y));\n\t\tassertNotSame(idX, idY);\n\t\tindexDatabase.getResourceContainerDAO().createReference(idX, idY);\n\t\tList<Integer> dependencyIDs = indexDatabase.getResourceContainerDAO().findDependencyIDs(idX);\n\t\tassertEquals(1, dependencyIDs.size());\n\t\tassertEquals(idY, dependencyIDs.get(0).intValue());\n\t}","id":107205,"modified_method":"public void testResourceContainer() throws Exception {\n\t\t//test create\n\t\tint idX = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_X);\n\t\tint idY = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_Y);\n\t\tassertEquals(idX, indexDatabase.getResourceContainerDAO().getID(PLATFORM_PLUGIN_X));\n\t\tassertEquals(idY, indexDatabase.getResourceContainerDAO().getID(PLATFORM_PLUGIN_Y));\n\t\tassertNotSame(idX, idY);\n\t\t\n\t\t// test create reference\n\t\tindexDatabase.getResourceContainerReferenceDAO().create(idX, PLATFORM_PLUGIN_Y);\n\t\tList<URI> dependencyIDs = indexDatabase.getResourceContainerReferenceDAO().findDependencyURIs(idX);\n\t\tassertEquals(1, dependencyIDs.size());\n\t\tassertEquals(PLATFORM_PLUGIN_Y, dependencyIDs.get(0).toString());\n\t\t\n\t\t// delete source -> reference is deleted\n\t\tindexDatabase.getResourceContainerDAO().delete(idX);\n\t\tdependencyIDs = indexDatabase.getResourceContainerReferenceDAO().findDependencyURIs(idX);\n\t\tassertTrue(dependencyIDs.isEmpty());\n\t\t\n\t\t// delete target -> reference is not deleted\n\t\tint idZ = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_Z);\n\t\tindexDatabase.getResourceContainerReferenceDAO().create(idZ, PLATFORM_PLUGIN_Y);\n\t\tindexDatabase.getResourceContainerDAO().delete(idY);\n\t\tdependencyIDs = indexDatabase.getResourceContainerReferenceDAO().findDependencyURIs(idZ);\n\t\tassertEquals(1, dependencyIDs.size());\n\t\tassertEquals(PLATFORM_PLUGIN_Y, dependencyIDs.get(0).toString());\n\t\t\n\t\t// delete reference \n\t\tindexDatabase.getResourceContainerReferenceDAO().deleteBySource(idZ);\n\t\tdependencyIDs = indexDatabase.getResourceContainerReferenceDAO().findDependencyURIs(idZ);\n\t\tassertTrue(dependencyIDs.isEmpty());\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testResource() throws Exception {\n\t\tint containerID = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_X);\n\t\tResource resourceA = new ResourceImpl(URI.createURI(RESOURCE_URI_A));\n\t\tint idX = indexDatabase.getResourceDAO().create(\"/folder/a.ecore\", containerID);\n\t\tint idXByResource = indexDatabase.getResourceDAO().getID(resourceA);\n\t\tassertEquals(idX, idXByResource);\n\n\t\tResource resourceB = new ResourceImpl(URI.createURI(RESOURCE_URI_B));\n\t\tint idYByResource = indexDatabase.getResourceDAO().create(resourceB, containerID);\n\t\tint idY = indexDatabase.getResourceDAO().getID(\"folder/b.ecore\", containerID);\n\t\tassertEquals(idYByResource, idY);\n\t}","id":107206,"modified_method":"public void testResource() throws Exception {\n\t\tint containerID = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_X);\n\t\tResource resourceA = new ResourceImpl(URI.createURI(RESOURCE_URI_A));\n\t\tint idX = indexDatabase.getResourceDAO().create(\"/folder/a.ecore\", containerID);\n\t\tint idXByResource = indexDatabase.getResourceDAO().getID(resourceA);\n\t\tassertEquals(idX, idXByResource);\n\n\t\tResource resourceB = new ResourceImpl(URI.createURI(RESOURCE_URI_B));\n\t\tint idYByResource = indexDatabase.getResourceDAO().create(resourceB, containerID);\n\t\tint idY = indexDatabase.getResourceDAO().getID(\"folder/b.ecore\", containerID);\n\t\tassertEquals(idYByResource, idY);\n\n\t\tList<URI> allResources = indexDatabase.getResourceDAO().findAllResources();\n\t\tassertEquals(2, allResources.size());\n\t\t\n\t\tindexDatabase.getResourceDAO().delete(idX);\n\t\tallResources = indexDatabase.getResourceDAO().findAllResources();\n\t\tassertEquals(1, allResources.size());\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public EClassDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByEClass = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT EClass.id FROM EClass, EPackage WHERE EClass.name=? AND EPackage.nsUri=?\");\n\t\t\tselectEClassesByEPackage = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT name FROM EClass WHERE ePackage=?\");\n\t\t\tdeleteEClassByName = indexDatabase.prepareStatements(\"DELETE FROM EClass WHERE name=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":107207,"modified_method":"public EClassDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByEClass = indexDatabase.prepareStatements(\"SELECT EClass.id FROM EClass, EPackage \"\n\t\t\t\t\t+ \"WHERE EClass.name=? AND EPackage.nsUri=?\");\n\t\t\tselectEClassesByEPackage = indexDatabase.prepareStatements(\"SELECT name FROM EClass WHERE ePackage=?\");\n\t\t\tdeleteEClassByID = indexDatabase.prepareStatements(\"DELETE FROM EClass WHERE id=?\");\n\t\t\tdeleteEClassByName = indexDatabase.prepareStatements(\"DELETE FROM EClass WHERE name=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findByEClass(EClass eClass) throws SQLException, NotFoundInIndexException {\n\t\tint eClassID = indexDatabase.getEClassDAO().getID(eClass);\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tselectURIByEClass.setInt(1, eClassID);\n\t\t\tresult = selectURIByEClass.executeQuery();\n\t\t\tList<URI> uris = indexDatabase.createURIsFromResult(result);\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","id":107208,"modified_method":"public List<URI> findByEClass(EClass eClass) throws SQLException, NotFoundInIndexException {\n\t\tint eClassID = indexDatabase.getEClassDAO().getID(eClass);\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tselectURIByEClass.setInt(1, eClassID);\n\t\t\tresult = selectURIByEClass.executeQuery();\n\t\t\tList<URI> uris = URIUtil.createURIsFromResult(result);\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public EObjectDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByEObject = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT EObject.id FROM EObject WHERE EObject.fragment=? AND EObject.resource=?\");\n\t\t\tselectURIByEClass = indexDatabase\n\t\t\t\t\t.prepareStatements(\n\t\t\t\t\t\t\t\"SELECT Container.uri, Resource.path, EObject.fragment FROM EObject, Resource, Container WHERE EObject.eClass=? AND EObject.resource=Resource.id AND Resource.container=Container.id\");\n\t\t\tselectFragmentsByResource = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT fragment FROM EObject WHERE resource=?\");\n\t\t\tdeleteByFragmentAndResource = indexDatabase.prepareStatements(\n\t\t\t\t\t\"DELETE FROM EObject WHERE id=?\");\n\t\t\tdeleteReferencesBySource = indexDatabase.prepareStatements(\n\t\t\t\t\t\"DELETE FROM CrossReference WHERE source=?\");\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":107209,"modified_method":"public EObjectDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByEObject = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT EObject.id FROM EObject WHERE EObject.fragment=? AND EObject.resource=?\");\n\t\t\tselectURIByEClass = indexDatabase\n\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path, EObject.fragment FROM EObject \"\n\t\t\t\t\t+ \"LEFT JOIN Resource ON EObject.resource=Resource.id \"\n\t\t\t\t\t+ \"LEFT JOIN Container ON Resource.container=Container.id \" \n\t\t\t\t\t+ \"WHERE EObject.eClass=?\");\n\t\t\tselectURIByEClassAndContainerID = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path, EObject.fragment FROM EObject \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN Resource ON EObject.resource=Resource.id \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN Container ON Resource.container=Container.id \" \n\t\t\t\t\t\t\t+ \"WHERE EObject.eClass=? AND Container.id=?\");\n\t\t\tselectFragmentsByResource = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT fragment FROM EObject WHERE resource=?\");\n\t\t\tdeleteEObjectByID = indexDatabase.prepareStatements(\"DELETE FROM EObject WHERE id=?\");\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public EPackageDAO(IndexDatabase indexDatabase){\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByEPackage = indexDatabase.prepareStatements(\"SELECT id FROM EPackage WHERE nsURI=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":107210,"modified_method":"public EPackageDAO(IndexDatabase indexDatabase){\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByEPackage = indexDatabase.prepareStatements(\"SELECT id FROM EPackage WHERE nsURI=?\");\n\t\t\tdeleteEPackageByID = indexDatabase.prepareStatements(\"DELETE FROM EPackage WHERE id=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"private void createTables() throws Exception {\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE EPackage (id INTEGER GENERATED BY DEFAULT AS IDENTITY, nsURI VARCHAR(512), PRIMARY KEY (id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE EClass (id INTEGER GENERATED BY DEFAULT AS IDENTITY, ePackage INTEGER, name VARCHAR(256), PRIMARY KEY (id), FOREIGN KEY (ePackage) REFERENCES EPackage(id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE Container (id INTEGER GENERATED BY DEFAULT AS IDENTITY, uri VARCHAR(512) NOT NULL, type INTEGER, PRIMARY KEY (id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\"CREATE TABLE ContainerReference (source INTEGER, target INTEGER)\", true);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE Resource (id INTEGER GENERATED BY DEFAULT AS IDENTITY, container INTEGER, path VARCHAR(512), PRIMARY KEY (id), FOREIGN KEY (container) REFERENCES Container(id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE EObject (id INTEGER GENERATED BY DEFAULT AS IDENTITY, resource INTEGER, fragment VARCHAR(256), eClass INTEGER, PRIMARY KEY (id), FOREIGN KEY (resource) REFERENCES Resource(id), FOREIGN KEY (eClass) REFERENCES EClass(id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\"CREATE TABLE CrossReference (source INTEGER, target VARCHAR(768))\", true);\n\t\tcommitOrRollback();\n\t}","id":107211,"modified_method":"private void createTables() throws Exception {\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE EPackage (id INTEGER GENERATED BY DEFAULT AS IDENTITY, nsURI VARCHAR(512), PRIMARY KEY (id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE EClass (id INTEGER GENERATED BY DEFAULT AS IDENTITY, ePackage INTEGER, name VARCHAR(256), PRIMARY KEY (id), FOREIGN KEY (ePackage) REFERENCES EPackage(id) ON DELETE CASCADE)\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE Container (id INTEGER GENERATED BY DEFAULT AS IDENTITY, uri VARCHAR(512) NOT NULL, type INTEGER, PRIMARY KEY (id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\"CREATE TABLE ContainerReference (source INTEGER, target VARCHAR(512), FOREIGN KEY (source) REFERENCES Container(id) ON DELETE CASCADE)\", true);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE Resource (id INTEGER GENERATED BY DEFAULT AS IDENTITY, container INTEGER, path VARCHAR(512), PRIMARY KEY (id), FOREIGN KEY (container) REFERENCES Container(id) ON DELETE CASCADE)\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE EObject (id INTEGER GENERATED BY DEFAULT AS IDENTITY, resource INTEGER, fragment VARCHAR(256), eClass INTEGER, PRIMARY KEY (id), FOREIGN KEY (resource) REFERENCES Resource(id) ON DELETE CASCADE, FOREIGN KEY (eClass) REFERENCES EClass(id) ON DELETE CASCADE)\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\"CREATE TABLE CrossReference (source INTEGER, target VARCHAR(768), FOREIGN KEY (source) REFERENCES EObject(id) ON DELETE CASCADE)\", true);\n\t\tcommitOrRollback();\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void clearAll() throws SQLException {\n\t\tStatement deleteStatement = null;\n\t\ttry {\n\t\t\tdeleteStatement = conn.createStatement();\n\t\t\tdeleteStatement.execute(\"DELETE FROM CrossReference\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM EObject\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM Resource\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM ContainerReference\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM Container\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM EClass\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM EPackage\");\n\t\t\tcommitOrRollback();\n\t\t}\n\t\tfinally {\n\t\t\tif (deleteStatement != null) {\n\t\t\t\tdeleteStatement.close();\n\t\t\t}\n\t\t}\n\t}","id":107212,"modified_method":"public void clearAll() throws SQLException {\n\t\tStatement deleteStatement = null;\n\t\ttry {\n\t\t\tcommitOrRollback();\n\t\t\tdeleteStatement = conn.createStatement();\n\t\t\tdeleteStatement.execute(\"DELETE FROM EPackage\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM EClass\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM CrossReference\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM EObject\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM Resource\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM ContainerReference\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM Container\");\n\t\t\tcommitOrRollback();\n\t\t}\n\t\tfinally {\n\t\t\tif (deleteStatement != null) {\n\t\t\t\tdeleteStatement.close();\n\t\t\t}\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"private void createDAOs() {\n\t\tcrossReferenceDAO = new CrossReferenceDAO(this);\n\t\teClassDAO = new EClassDAO(this);\n\t\teObjectDAO = new EObjectDAO(this);\n\t\tePackageDAO = new EPackageDAO(this);\n\t\tresourceContainerDAO = new ResourceContainerDAO(this);\n\t\tresourceDAO = new ResourceDAO(this);\n\t}","id":107213,"modified_method":"private void createDAOs() {\n\t\tcrossReferenceDAO = new CrossReferenceDAO(this);\n\t\teClassDAO = new EClassDAO(this);\n\t\teObjectDAO = new EObjectDAO(this);\n\t\tePackageDAO = new EPackageDAO(this);\n\t\tresourceContainerDAO = new ResourceContainerDAO(this);\n\t\tresourceContainerReferenceDAO = new ResourceContainerReferenceDAO(this);\n\t\tresourceDAO = new ResourceDAO(this);\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void shutdown() throws Exception {\n\t\tResourcesPlugin.getWorkspace().removeResourceChangeListener(this);\n\t\tindexDatabase.shutdown();\n\t}","id":107214,"modified_method":"public void shutdown() throws Exception {\n\t\tstopListening();\n\t\tindexDatabase.shutdown();\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findInstances(EClass eClass, IProject scope) {\n\t\ttry {\n\t\t\treturn indexDatabase.getEObjectDAO().findByEClass(eClass);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t\treturn Collections.<URI> emptyList();\n\t}","id":107215,"modified_method":"public Collection<URI> findInstances(EClass eClass, IProject scope) {\n\t\ttry {\n\t\t\tif(scope == null) {\n\t\t\t\treturn indexDatabase.getEObjectDAO().findByEClass(eClass);\n\t\t\t} \n\t\t\tList<Integer> projectScope = getProjectScope(scope);\n\t\t\tSet<URI> instances = new HashSet<URI>();\n\t\t\tfor(int resourceContainerID:projectScope) {\n\t\t\t\tinstances.addAll(indexDatabase.getEObjectDAO().findByEClass(eClass, resourceContainerID));\n\t\t\t}\n\t\t\treturn instances;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t\treturn Collections.<URI> emptyList();\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public ModelIndex(boolean isRegisterEPackages) {\n\t\tindexDatabase = new IndexDatabase();\n\t\tworkspaceModelIndexer = new WorkspaceModelIndexer(indexDatabase);\n\t\tecoreRegistryIndexer = new EcoreRegistryIndexer(indexDatabase);\n\t\tif (isRegisterEPackages) {\n\t\t\tecoreRegistryIndexer.indexRegisteredEPackages();\n\t\t}\n\t\tresourceDeltaVisitor = new ResourceDeltaVisitor(workspaceModelIndexer);\n\t\tResourcesPlugin.getWorkspace().addResourceChangeListener(this);\n\t}","id":107216,"modified_method":"public ModelIndex(boolean isRegisterEPackages) {\n\t\tindexDatabase = new IndexDatabase();\n\t\tworkspaceModelIndexer = new WorkspaceModelIndexer(indexDatabase);\n\t\tecoreRegistryIndexer = new EcoreRegistryIndexer(indexDatabase);\n\t\tif (isRegisterEPackages) {\n\t\t\tecoreRegistryIndexer.indexRegisteredEPackages();\n\t\t}\n\t\tresourceDeltaVisitor = new ResourceDeltaVisitor(workspaceModelIndexer);\n\t\tstartListening();\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findReferencesTo(EObject eObject, IProject scope) {\n\t\ttry {\n\t\t\treturn indexDatabase.getCrossReferenceDAO().findReferencesTo(eObject);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t\treturn Collections.<URI> emptyList();\n\t}","id":107217,"modified_method":"public Collection<URI> findReferencesTo(EObject eObject, IProject scope) {\n\t\ttry {\n\t\t\tif(scope == null) {\n\t\t\t\treturn indexDatabase.getCrossReferenceDAO().findReferencesTo(eObject);\n\t\t\t}\n\t\t\tList<Integer> projectScope = getProjectScope(scope);\n\t\t\tSet<URI> references = new HashSet<URI>();\n\t\t\tfor(int resourceContainerID:projectScope) {\n\t\t\t\treferences.addAll(indexDatabase.getCrossReferenceDAO().findReferencesTo(URIUtil.getURI(eObject), resourceContainerID));\n\t\t\t}\n\t\t\treturn references;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t\treturn Collections.<URI> emptyList();\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\tmodelIndex = new ModelIndex(false);\n\t\tmodelIndex.getEcoreRegistryIndexer().indexEPackage(EcorePackage.eINSTANCE);\n\t\tresourceSet = new ResourceSetImpl();\n\t}","id":107218,"modified_method":"@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\tmodelIndex = new ModelIndex(false);\n\t\tmodelIndex.getEcoreRegistryIndexer().indexEPackage(EcorePackage.eINSTANCE);\n\t\tmodelIndex.stopListening();\n\t\tresourceSet = new ResourceSetImpl();\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tprivate void performReferenceTest(EObject object) throws IOException {\n\t\tList<URI> references = modelIndex.findReferencesTo(object, null);\n\t\tassertFalse(references.isEmpty());\n\t\tURI referenceURI = references.get(0);\n\t\tassertTrue(modelIndex.exists(referenceURI));\n\t\tEObject referencingObject = resourceSet.getEObject(referenceURI, false);\n\t\tassertNotNull(referencingObject);\n\t\tEObject parent = referencingObject.eContainer();\n\t\tResource resource = referencingObject.eResource();\n\t\t((List<EObject>) parent.eGet(referencingObject.eContainingFeature())).remove(referencingObject);\n\t\tresource.save(null);\n\t\tmodelIndex.getWorkspaceModelIndexer().indexWorkspace();\n\t\tassertFalse(modelIndex.exists(referenceURI));\n\t}","id":107219,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tprivate void performReferenceTest(EObject object) throws IOException {\n\t\tCollection<URI> references = modelIndex.findReferencesTo(object, project);\n\t\tassertFalse(references.isEmpty());\n\t\tURI referenceURI = references.iterator().next();\n\t\tassertTrue(modelIndex.exists(referenceURI));\n\t\tEObject referencingObject = resourceSet.getEObject(referenceURI, false);\n\t\tassertNotNull(referencingObject);\n\t\tEObject parent = referencingObject.eContainer();\n\t\tResource resource = referencingObject.eResource();\n\t\t((List<EObject>) parent.eGet(referencingObject.eContainingFeature())).remove(referencingObject);\n\t\tresource.save(null);\n\t\tmodelIndex.getWorkspaceModelIndexer().indexWorkspace();\n\t\tassertFalse(modelIndex.exists(referenceURI));\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"private EObject performTestSimpleEClass(IProject project, String expectedURI) throws SQLException, IOException {\n\t\tmodelIndex.getWorkspaceModelIndexer().indexWorkspace();\n\t\tList<URI> eClasses = modelIndex.findInstances(EcorePackage.Literals.ECLASS, project);\n\t\tassertFalse(eClasses.isEmpty());\n\t\tURI expected = URI.createURI(expectedURI);\n\t\tassertTrue(eClasses.contains(expected));\n\t\tassertEquals(expectedURI, expected.toString());\n\n\t\tEObject object = resourceSet.getEObject(expected, true);\n\t\tassertNotNull(object);\n\t\treturn object;\n\n\t}","id":107220,"modified_method":"private EObject performTestSimpleEClass(IProject project, String expectedURI) throws SQLException, IOException {\n\t\tmodelIndex.getWorkspaceModelIndexer().indexWorkspace();\n\t\tCollection<URI> eClasses = modelIndex.findInstances(EcorePackage.Literals.ECLASS, project);\n\t\tassertFalse(eClasses.isEmpty());\n\t\tURI expected = URI.createURI(expectedURI);\n\t\tassertTrue(eClasses.contains(expected));\n\t\tassertEquals(expectedURI, expected.toString());\n\n\t\tEObject object = resourceSet.getEObject(expected, true);\n\t\tassertNotNull(object);\n\t\treturn object;\n\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testIndexModelInPlainProject() throws Exception {\n\t\tproject = JavaProjectSetupUtil.createProject(TEST_PROJECT_NAME);\n\t\tPluginUtil.copyFileToWorkspace(IndexTestPlugin.getDefault(), \"/testfiles/\" + MODEL_FILE, project, MODEL_FILE);\n\t\tString expectedURI = \"platform:/resource/\" + TEST_PROJECT_NAME + \"/\" + MODEL_FILE + \"#//SimpleEClass\";\n\t\tEObject simpleEClass = performTestSimpleEClass(project, expectedURI);\n\t\tperformReferenceTest(simpleEClass);\n\t}","id":107221,"modified_method":"public void testIndexModelInPlainProject() throws Exception {\n\t\tproject = JavaProjectSetupUtil.createProject(TEST_PROJECT_NAME);\n\t\tPluginUtil.copyFileToWorkspace(IndexTestPlugin.getDefault(), \"/testfiles/\" + MODEL_FILE, project, MODEL_FILE);\n\t\tString expectedURI = \"platform:/resource/\" + TEST_PROJECT_NAME + \"/\" + MODEL_FILE + \"#//SimpleEClass\";\n\t\tEObject simpleEClass = performTestSimpleEClass(project, expectedURI);\n\t\tperformReferenceTest(simpleEClass);\n\t\t\n\t\tIProject referencingProject = JavaProjectSetupUtil.createProject(REFERENCING_PROJECT_NAME);\n\t\tmodelIndex.getWorkspaceModelIndexer().indexWorkspace();\n\t\tCollection<URI> eClasses = modelIndex.findInstances(EcorePackage.Literals.ECLASS, referencingProject);\n\t\tassertTrue(eClasses.isEmpty());\n\t\t\n\t\tJavaProjectSetupUtil.addProjectReference(referencingProject, project);\n\t\tperformTestSimpleEClass(referencingProject, expectedURI);\n\t\tJavaProjectSetupUtil.deleteProject(referencingProject);\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public int create(String uri) throws SQLException {\n\t\tStringBuffer insertStatementBuffer = new StringBuffer(\"INSERT INTO Container(uri) VALUES('\");\n\t\tinsertStatementBuffer.append(uri);\n\t\tinsertStatementBuffer.append(\"')\");\n\t\treturn indexDatabase.insertWithAutoID(insertStatementBuffer.toString());\n\t}","id":107222,"modified_method":"public int create(String uri) throws SQLException {\n\t\tStringBuffer insertStatementBuffer = new StringBuffer(\"INSERT INTO Container(uri) VALUES('\");\n\t\tinsertStatementBuffer.append(URIUtil.trimTrailingSlash(uri));\n\t\tinsertStatementBuffer.append(\"')\");\n\t\treturn indexDatabase.insertWithAutoID(insertStatementBuffer.toString());\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public ResourceContainerDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByURI = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT Container.id FROM Container WHERE uri=?\");\n\t\t\tselectReferences = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT ContainerReference.target FROM ContainerReference WHERE source=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":107223,"modified_method":"public ResourceContainerDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByURI = indexDatabase.prepareStatements(\"SELECT Container.id FROM Container WHERE uri=?\");\n\t\t\tselectAllContainerIDs = indexDatabase.prepareStatements(\"SELECT id FROM Container\");\n\t\t\tdeleteContainerByID = indexDatabase.prepareStatements(\"DELETE FROM Container WHERE id=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public int getID(String uri) throws SQLException, NotFoundInIndexException {\n\t\tselectIDByURI.setString(1, uri);\n\t\treturn indexDatabase.queryID(selectIDByURI);\n\t}","id":107224,"modified_method":"public int getID(String uri) throws SQLException, NotFoundInIndexException {\n\t\tselectIDByURI.setString(1, URIUtil.trimTrailingSlash(uri));\n\t\treturn indexDatabase.queryID(selectIDByURI);\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public ResourceDAO(IndexDatabase indexDatabase){\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByResource = indexDatabase\n\t\t\t\t\t.prepareStatements(\n\t\t\t\t\t\t\t\"SELECT Resource.id FROM Resource LEFT JOIN Container ON Container.id=Resource.container WHERE Resource.path=? AND Container.uri=?\");\n\t\t\tselectIDByPath = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT Resource.id FROM Resource WHERE path=? AND container=?\");\n\t\t\tselectAllResourceURIs = indexDatabase\n\t\t\t\t\t.prepareStatements(\n\t\t\t\t\t\t\t\"SELECT Container.uri, Resource.path FROM Resource LEFT JOIN Container ON Resource.container=Container.id\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":107225,"modified_method":"public ResourceDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByResource = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Resource.id FROM Resource LEFT JOIN Container ON Container.id=Resource.container WHERE Resource.path=? AND Container.uri=?\");\n\t\t\tselectIDByPath = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Resource.id FROM Resource WHERE path=? AND container=?\");\n\t\t\tselectAllResourceURIs = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path FROM Resource LEFT JOIN Container ON Resource.container=Container.id\");\n\t\t\tselectResourceURIsByContainer = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path FROM Resource LEFT JOIN Container ON Resource.container=Container.id WHERE Container.id=?\");\n\t\t\tdeleteResourceByID = indexDatabase.prepareStatements(\"DELETE FROM Resource WHERE id=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public int getID(String path, int containerID) throws SQLException, NotFoundInIndexException {\n\t\tif (path.startsWith(\"/\")) {\n\t\t\tpath = path.substring(1);\n\t\t}\n\t\tselectIDByPath.setString(1, path);\n\t\tselectIDByPath.setInt(2, containerID);\n\t\treturn indexDatabase.queryID(selectIDByPath);\n\t}","id":107226,"modified_method":"public int getID(String path, int containerID) throws SQLException, NotFoundInIndexException {\n\t\tselectIDByPath.setString(1, URIUtil.trimLeadingSlash(path));\n\t\tselectIDByPath.setInt(2, containerID);\n\t\treturn indexDatabase.queryID(selectIDByPath);\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findAllResources() throws SQLException {\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tresult = selectAllResourceURIs.executeQuery();\n\t\t\tList<URI> uris = new ArrayList<URI>();\n\t\t\twhile (result.next()) {\n\t\t\t\tStringBuffer uriBuffer = new StringBuffer();\n\t\t\t\turiBuffer.append(result.getString(1));\n\t\t\t\turiBuffer.append('/');\n\t\t\t\turiBuffer.append(result.getString(2));\n\t\t\t\tURI uri = URI.createURI(uriBuffer.toString());\n\t\t\t\turis.add(uri);\n\t\t\t}\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","id":107227,"modified_method":"public List<URI> findAllResources() throws SQLException {\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tresult = selectAllResourceURIs.executeQuery();\n\t\t\tList<URI> uris = createResourceURIsFromResult(result);\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public int create(String path, int containerID) throws SQLException {\n\t\tif (path.startsWith(\"/\")) {\n\t\t\tpath = path.substring(1);\n\t\t}\n\t\tStringBuffer insertStatementBuffer = new StringBuffer(\"INSERT INTO Resource(path, container) VALUES('\");\n\t\tinsertStatementBuffer.append(path);\n\t\tinsertStatementBuffer.append(\"',\");\n\t\tinsertStatementBuffer.append(containerID);\n\t\tinsertStatementBuffer.append(\")\");\n\t\treturn indexDatabase.insertWithAutoID(insertStatementBuffer.toString());\n\t}","id":107228,"modified_method":"public int create(String path, int containerID) throws SQLException {\n\t\tStringBuffer insertStatementBuffer = new StringBuffer(\"INSERT INTO Resource(path, container) VALUES('\");\n\t\tinsertStatementBuffer.append(URIUtil.trimLeadingSlash(path));\n\t\tinsertStatementBuffer.append(\"',\");\n\t\tinsertStatementBuffer.append(containerID);\n\t\tinsertStatementBuffer.append(\")\");\n\t\treturn indexDatabase.insertWithAutoID(insertStatementBuffer.toString());\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public int getID(Resource resource) throws SQLException, NotFoundInIndexException {\n\t\tURI uri = resource.getURI();\n\t\tString uriAsString = uri.toString();\n\t\tint containerURILength = indexDatabase.getResourceContainerDAO().getContainerURILength(uri);\n\t\tString containerURI = uriAsString.substring(0, containerURILength);\n\t\tString path = uriAsString.substring(containerURILength + 1);\n\t\tselectIDByResource.setString(1, path);\n\t\tselectIDByResource.setString(2, containerURI);\n\t\treturn indexDatabase.queryID(selectIDByResource);\n\t}","id":107229,"modified_method":"public int getID(Resource resource) throws SQLException, NotFoundInIndexException {\n\t\tURI resourceURI = resource.getURI();\n\t\treturn getID(resourceURI);\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean visit(IResourceDelta delta) throws CoreException {\n\t\tIResource resource = delta.getResource();\n\t\tint type = resource.getType();\n\t\tint kind = delta.getKind();\n\t\tif (type == IResource.PROJECT) {\n\t\t\tproject = (IProject) resource;\n\t\t\tif (project.isOpen()) {\n\t\t\t\tswitch (kind) {\n\t\t\t\t\tcase IResourceDelta.CHANGED:\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase IResourceDelta.ADDED:\n\t\t\t\t\t\tworkspaceModelIndexer.indexProject(project);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase IResourceDelta.REMOVED:\n\t\t\t\t\t\tworkspaceModelIndexer.removeProject(project);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// do nothing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (type == IResource.ROOT || type == IResource.FOLDER) {\n\t\t\treturn true;\n\t\t}\n\t\tif (type == IResource.FILE) {\n\t\t\tIFile file = (IFile) delta.getResource();\n\t\t\tString fileExtension = file.getFileExtension();\n\t\t\tif (WorkspaceModelIndexer.REGISTERED_EXTENSIONS.contains(fileExtension)) {\n\t\t\t\tswitch (kind) {\n\t\t\t\t\tcase IResourceDelta.ADDED:\n\t\t\t\t\tcase IResourceDelta.CHANGED:\n\t\t\t\t\t\tworkspaceModelIndexer.indexModelFile(file);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase IResourceDelta.REMOVED:\n\t\t\t\t\t\tworkspaceModelIndexer.removeModelFile(file);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn false;\n\t}","id":107230,"modified_method":"public boolean visit(IResourceDelta delta) throws CoreException {\n\t\tIResource resource = delta.getResource();\n\t\tif (!resource.isDerived()) {\n\t\t\tint type = resource.getType();\n\t\t\tint kind = delta.getKind();\n\t\t\tif (type == IResource.PROJECT) {\n\t\t\t\tproject = (IProject) resource;\n\t\t\t\tif (project.isOpen()) {\n\t\t\t\t\tswitch (kind) {\n\t\t\t\t\t\tcase IResourceDelta.CHANGED:\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\tcase IResourceDelta.ADDED:\n\t\t\t\t\t\t\tworkspaceModelIndexer.indexProject(project, Collections.<Integer> emptyList());\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tcase IResourceDelta.REMOVED:\n\t\t\t\t\t\t\tworkspaceModelIndexer.removeProject(project);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type == IResource.ROOT || type == IResource.FOLDER) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (type == IResource.FILE) {\n\t\t\t\tIFile file = (IFile) delta.getResource();\n\t\t\t\tString fileExtension = file.getFileExtension();\n\t\t\t\tif (\"classpath\".equals(fileExtension) || \"MANIFEST.MF\".equals(file.getName())) {\n\t\t\t\t\t// Re-index project on classpath changes\n\t\t\t\t\tworkspaceModelIndexer.indexProject(file.getProject(), Collections.<Integer> emptyList());\n\t\t\t\t}\n\t\t\t\telse if (WorkspaceModelIndexer.REGISTERED_EXTENSIONS.contains(fileExtension)) {\n\t\t\t\t\tswitch (kind) {\n\t\t\t\t\t\tcase IResourceDelta.ADDED:\n\t\t\t\t\t\tcase IResourceDelta.CHANGED:\n\t\t\t\t\t\t\tworkspaceModelIndexer.indexModelFile(file);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase IResourceDelta.REMOVED:\n\t\t\t\t\t\t\tworkspaceModelIndexer.removeModelFile(file);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean visit(IResource resource) throws CoreException {\n\t\tif (resource.isDerived() || ignoredResources.contains(resource)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (resource instanceof IFile) {\n\t\t\tIFile file = (IFile) resource;\n\t\t\tString fileExtension = file.getFileExtension();\n\t\t\tif (WorkspaceModelIndexer.REGISTERED_EXTENSIONS.contains(fileExtension)) {\n\t\t\t\tworkspaceModelIndex.indexModelFile(file, containerID);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}","id":107231,"modified_method":"public boolean visit(IResource resource) throws CoreException {\n\t\tif (resource.isDerived() || ignoredResources.contains(resource)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (resource instanceof IFile) {\n\t\t\tIFile file = (IFile) resource;\n\t\t\tString fileExtension = file.getFileExtension();\n\t\t\tif (WorkspaceModelIndexer.REGISTERED_EXTENSIONS.contains(fileExtension)) {\n\t\t\t\tresourceURIsFromDB.remove(workspaceModelIndex.indexModelFile(file, containerID));\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public ResourceVisitor(WorkspaceModelIndexer workspaceModelIndex, int containerID) {\n\t\tthis.workspaceModelIndex = workspaceModelIndex;\n\t\tignoredResources = new ArrayList<IResource>();\n\t\tthis.containerID = containerID;\n\t}","id":107232,"modified_method":"public ResourceVisitor(WorkspaceModelIndexer workspaceModelIndex, int containerID, List<URI> resourceURIsFromDB) {\n\t\tthis.workspaceModelIndex = workspaceModelIndex;\n\t\tignoredResources = new ArrayList<IResource>();\n\t\tthis.containerID = containerID;\n\t\tthis.resourceURIsFromDB=resourceURIsFromDB;\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void removeModelFile(IFile modelFile, int resourceContainerID) {\n\t\t// TODO: implement\n\t}","id":107233,"modified_method":"public void removeModelFile(IFile modelFile, int resourceContainerID) {\n\t\ttry {\n\t\t\tint resourceID = indexDatabase.getResourceDAO().getID(modelFile.getProjectRelativePath().toString(),\n\t\t\t\t\tresourceContainerID);\n\t\t\tindexDatabase.getResourceDAO().delete(resourceID);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void indexProject(IProject project) {\n\t\ttry {\n\t\t\tif (project.hasNature(JavaCore.NATURE_ID)) {\n\t\t\t\tindexJavaProject(JavaCore.create(project));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tindexPlainProject(project);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception exc) {\n\t\t\tlog.error(exc);\n\t\t}\n\t}","id":107234,"modified_method":"public void indexProject(IProject project, List<Integer> containerIDsFromDB) {\n\t\ttry {\n\t\t\tif (project.hasNature(JavaCore.NATURE_ID)) {\n\t\t\t\tindexJavaProject(JavaCore.create(project), containerIDsFromDB);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tindexPlainProject(project, containerIDsFromDB);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception exc) {\n\t\t\tlog.error(exc);\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void indexWorkspace() {\n\t\tIProject[] projects = ResourcesPlugin.getWorkspace().getRoot().getProjects();\n\t\tfor (IProject project : projects) {\n\t\t\ttry {\n\t\t\t\tindexProject(project);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tlog.error(e);\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tList<URI> allResourceURIs = indexDatabase.getResourceDAO().findAllResources();\n\t\t\tfor (URI resourceUri : allResourceURIs) {\n\t\t\t\tResource resource = resourceSet.getResource(resourceUri, true);\n\t\t\t\tindexCrossRefs(resource);\n\t\t\t\tresource.unload();\n\t\t\t}\n\t\t}\n\t\tcatch (SQLException exc) {\n\t\t\tlog.error(exc);\n\t\t}\n\t\ttry {\n\t\t\tindexDatabase.commitOrRollback();\n\t\t}\n\t\tcatch (SQLException exc) {\n\t\t\tlog.error(exc);\n\t\t}\n\t}","id":107235,"modified_method":"public void indexWorkspace() {\n\t\tIProject[] projects = ResourcesPlugin.getWorkspace().getRoot().getProjects();\n\t\tList<Integer> containerIDsFromDB = null;\n\t\ttry {\n\t\t\tcontainerIDsFromDB = indexDatabase.getResourceContainerDAO().findAllResourceContainerIDs();\n\t\t}\n\t\tcatch (SQLException exc) {\n\t\t\tlog.error(\"Error querying resouce containers\", exc);\n\t\t}\n\t\tfor (IProject project : projects) {\n\t\t\ttry {\n\t\t\t\tindexProject(project, containerIDsFromDB);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tlog.error(e);\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tList<URI> allResourceURIs = indexDatabase.getResourceDAO().findAllResources();\n\t\t\tfor (URI resourceUri : allResourceURIs) {\n\t\t\t\tResource resource = resourceSet.getResource(resourceUri, true);\n\t\t\t\tindexCrossRefs(resource);\n\t\t\t\tresource.unload();\n\t\t\t}\n\t\t}\n\t\tcatch (SQLException exc) {\n\t\t\tlog.error(exc);\n\t\t}\n\t\tif (containerIDsFromDB != null) {\n\t\t\tdeleteStaleResourceContainers(containerIDsFromDB);\n\t\t}\n\t\ttry {\n\t\t\tindexDatabase.commitOrRollback();\n\t\t}\n\t\tcatch (SQLException exc) {\n\t\t\tlog.error(exc);\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void removeJarFile(IPath path) {\n\t\t// TODO: implement\n\t}","id":107236,"modified_method":"public void removeJarFile(IPath path) {\n\t\ttry {\n\t\t\tFile jarFile = path.toFile();\n\t\t\tString jarFileURI = \"jar:file:\" + jarFile.getAbsolutePath() + \"!\";\n\t\t\tint resourceContainerID = indexDatabase.getResourceContainerDAO().create(jarFileURI);\n\t\t\tindexDatabase.getResourceContainerDAO().delete(resourceContainerID);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"private void indexJavaProject(IJavaProject project) {\n\t\ttry {\n\t\t\tint containerID = getResourceContainerID(project.getProject());\n\t\t\tfor (IClasspathEntry classpathEntry : project.getRawClasspath()) {\n\t\t\t\tIPath classpathEntryPath = classpathEntry.getPath();\n\t\t\t\tIResource classpathEntryInWorkspace = project.getProject().getParent().findMember(classpathEntryPath);\n\t\t\t\tswitch (classpathEntry.getEntryKind()) {\n\t\t\t\t\tcase IClasspathEntry.CPE_LIBRARY:\n\t\t\t\t\t\tif (!classpathEntryPath.toString().startsWith(JavaRuntime.JRE_CONTAINER)) {\n\t\t\t\t\t\t\tif (classpathEntryInWorkspace != null && classpathEntryInWorkspace.exists()\n\t\t\t\t\t\t\t\t\t&& classpathEntryInWorkspace instanceof IFile) {\n\t\t\t\t\t\t\t\tindexJarFile(classpathEntryInWorkspace.getLocation(), containerID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tindexJarFile(classpathEntryPath, containerID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase IClasspathEntry.CPE_SOURCE:\n\t\t\t\t\t\tResourceVisitor resourceVisitor = new ResourceVisitor(this, containerID);\n\t\t\t\t\t\tclasspathEntryInWorkspace.accept(resourceVisitor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// do nothing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","id":107237,"modified_method":"private void indexJavaProject(IJavaProject project, List<Integer> containerIDsFromDB) {\n\t\ttry {\n\t\t\tint projectContainerID = getResourceContainerID(project.getProject());\n\t\t\tcontainerIDsFromDB.remove(new Integer(projectContainerID));\n\t\t\tList<URI> containerReferenceURIsFromDB = indexDatabase.getResourceContainerReferenceDAO()\n\t\t\t\t\t.findDependencyURIs(projectContainerID);\n\t\t\tList<URI> resourceURIsFromDB = indexDatabase.getResourceDAO().findByContainer(projectContainerID);\n\t\t\tfor (IClasspathEntry classpathEntry : project.getRawClasspath()) {\n\t\t\t\tIPath classpathEntryPath = classpathEntry.getPath();\n\t\t\t\tIResource classpathEntryInWorkspace = project.getProject().getParent().findMember(classpathEntryPath);\n\t\t\t\tswitch (classpathEntry.getEntryKind()) {\n\t\t\t\t\tcase IClasspathEntry.CPE_LIBRARY:\n\t\t\t\t\t\tif (!classpathEntryPath.toString().startsWith(JavaRuntime.JRE_CONTAINER)) {\n\t\t\t\t\t\t\tURI jarFileURI;\n\t\t\t\t\t\t\tif (classpathEntryInWorkspace != null && classpathEntryInWorkspace.exists()\n\t\t\t\t\t\t\t\t\t&& classpathEntryInWorkspace instanceof IFile) {\n\t\t\t\t\t\t\t\tjarFileURI = indexJarFile(classpathEntryInWorkspace.getLocation(), containerIDsFromDB);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tjarFileURI = indexJarFile(classpathEntryPath, containerIDsFromDB);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!containerReferenceURIsFromDB.remove(jarFileURI)) {\n\t\t\t\t\t\t\t\tindexDatabase.getResourceContainerReferenceDAO().create(projectContainerID, jarFileURI);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase IClasspathEntry.CPE_SOURCE:\n\t\t\t\t\t\tResourceVisitor resourceVisitor = new ResourceVisitor(this, projectContainerID,\n\t\t\t\t\t\t\t\tresourceURIsFromDB);\n\t\t\t\t\t\tclasspathEntryInWorkspace.accept(resourceVisitor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase IClasspathEntry.CPE_PROJECT:\n\t\t\t\t\t\tURI requiredProjectURI = URI.createPlatformResourceURI(classpathEntryPath.toString(), true);\n\t\t\t\t\t\tif (!containerReferenceURIsFromDB.remove(requiredProjectURI)) {\n\t\t\t\t\t\t\tindexDatabase.getResourceContainerReferenceDAO().create(projectContainerID,\n\t\t\t\t\t\t\t\t\trequiredProjectURI);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// do nothing\n\t\t\t\t}\n\t\t\t}\n\t\t\tdeleteStaleContainerReferences(projectContainerID, containerReferenceURIsFromDB);\n\t\t\tdeleteStaleResources(resourceURIsFromDB);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"private void indexCrossRefs(Resource resource) throws SQLException {\n\t\tfor (Iterator<EObject> allContents = resource.getAllContents(); allContents.hasNext();) {\n\t\t\tEObject eObject = allContents.next();\n\t\t\ttry {\n\t\t\t\tint sourceID = indexDatabase.getEObjectDAO().getID(eObject);\n\t\t\t\tBasicEList<EObject> crossReferences = (BasicEList<EObject>) eObject.eCrossReferences();\n\t\t\t\tfor (int i=0; i< crossReferences.size(); ++i) {\n\t\t\t\t\tEObject crossReference = crossReferences.basicGet(i);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tURI targetURI = EcoreUtil.getURI(crossReference);\n\t\t\t\t\t\tindexDatabase.getCrossReferenceDAO().create(sourceID, targetURI.toString());\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SQLException exc) {\n\t\t\t\t\t\tlog.error(\"Error creating cross-reference\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (NotFoundInIndexException exc) {\n\t\t\t\tlog.error(\"EObject has not been indexed. Concurrent modification?\");\n\t\t\t}\n\t\t}\n\t}","id":107238,"modified_method":"private void indexCrossRefs(Resource resource) throws SQLException {\n\t\tfor (Iterator<EObject> allContents = resource.getAllContents(); allContents.hasNext();) {\n\t\t\tEObject eObject = allContents.next();\n\t\t\ttry {\n\t\t\t\tint sourceID = indexDatabase.getEObjectDAO().getID(eObject);\n\t\t\t\tList<URI> crossReferencesFromDB = indexDatabase.getCrossReferenceDAO().findReferencesFrom(sourceID);\n\t\t\t\tInternalEList<EObject> crossReferences = (InternalEList<EObject>) eObject.eCrossReferences();\n\t\t\t\tfor (int i = 0; i < crossReferences.size(); ++i) {\n\t\t\t\t\tEObject crossReference = crossReferences.basicGet(i);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tURI targetURI = EcoreUtil.getURI(crossReference);\n\t\t\t\t\t\tif (!crossReferencesFromDB.remove(targetURI)) {\n\t\t\t\t\t\t\tindexDatabase.getCrossReferenceDAO().create(sourceID, targetURI.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SQLException exc) {\n\t\t\t\t\t\tlog.error(\"Error creating cross-reference\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdeleteStaleCrossReferences(sourceID, crossReferencesFromDB);\n\t\t\t}\n\t\t\tcatch (NotFoundInIndexException exc) {\n\t\t\t\tlog.error(\"EObject has not been indexed. Concurrent modification?\");\n\t\t\t}\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"private void indexResource(int resourceID, Resource resource, boolean isAlreadyIndexed, int containerID)\n\t\t\tthrows SQLException {\n\t\tList<String> fragmentsInResource = indexDatabase.getEObjectDAO().findFragmentsInResource(resourceID);\n\t\tfor (Iterator<EObject> contents = resource.getAllContents(); contents.hasNext();) {\n\t\t\tEObject content = contents.next();\n\t\t\tindexEObject(resourceID, resource, content, fragmentsInResource);\n\t\t}\n\t\tfor (String staleFragment : fragmentsInResource) {\n\t\t\ttry {\n\t\t\t\tint staleEObjectID = indexDatabase.getEObjectDAO().getID(staleFragment, resourceID);\n\t\t\t\tindexDatabase.getEObjectDAO().deleteEObjectAndCrossrefs(staleEObjectID);\n\t\t\t}\n\t\t\tcatch (NotFoundInIndexException e) {\n\t\t\t\tlog.error(\"Cannot find stale EObject in index\", e);\n\t\t\t}\n\t\t}\n\t\tresourceSet.getResources().remove(resource);\n\t}","id":107239,"modified_method":"private void indexResource(int resourceID, Resource resource, boolean isAlreadyIndexed, int containerID)\n\t\t\tthrows SQLException {\n\t\tList<String> fragmentsInResource = indexDatabase.getEObjectDAO().findFragmentsInResource(resourceID);\n\t\tfor (Iterator<EObject> contents = resource.getAllContents(); contents.hasNext();) {\n\t\t\tEObject content = contents.next();\n\t\t\tindexEObject(resourceID, resource, content, fragmentsInResource);\n\t\t}\n\t\tdeleteStaleFragments(resourceID, fragmentsInResource);\n\t\tresourceSet.getResources().remove(resource);\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void indexModelFile(IFile file, int resourceContainerID) {\n\t\ttry {\n\t\t\tString path = file.getProjectRelativePath().toString();\n\t\t\tint resourceID;\n\t\t\tboolean isAlreadyIndexed = true;\n\t\t\ttry {\n\t\t\t\tresourceID = indexDatabase.getResourceDAO().getID(path, resourceContainerID);\n\t\t\t}\n\t\t\tcatch (NotFoundInIndexException exc) {\n\t\t\t\tisAlreadyIndexed = false;\n\t\t\t\tresourceID = indexDatabase.getResourceDAO().create(path, resourceContainerID);\n\t\t\t}\n\t\t\tURI resourceURI = URI.createPlatformResourceURI(file.getFullPath().toString(), true);\n\t\t\tResource resource = resourceSet.getResource(resourceURI, true);\n\t\t\tindexResource(resourceID, resource, isAlreadyIndexed, resourceContainerID);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","id":107240,"modified_method":"public URI indexModelFile(IFile file, int resourceContainerID) {\n\t\ttry {\n\t\t\tString path = file.getProjectRelativePath().toString();\n\t\t\tint resourceID;\n\t\t\tboolean isAlreadyIndexed = true;\n\t\t\ttry {\n\t\t\t\tresourceID = indexDatabase.getResourceDAO().getID(path, resourceContainerID);\n\t\t\t}\n\t\t\tcatch (NotFoundInIndexException exc) {\n\t\t\t\tisAlreadyIndexed = false;\n\t\t\t\tresourceID = indexDatabase.getResourceDAO().create(path, resourceContainerID);\n\t\t\t}\n\t\t\tURI resourceURI = URI.createPlatformResourceURI(file.getFullPath().toString(), true);\n\t\t\tResource resource = resourceSet.getResource(resourceURI, true);\n\t\t\tindexResource(resourceID, resource, isAlreadyIndexed, resourceContainerID);\n\t\t\treturn resourceURI;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t\treturn null;\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void indexJarFile(IPath path, int projectContainerID) throws SQLException, ZipException, IOException {\n\t\tFile jarFile = path.toFile();\n\t\tString jarFileURI = \"jar:file:\" + jarFile.getAbsolutePath() + \"!\";\n\t\tint containerID = indexDatabase.getResourceContainerDAO().create(jarFileURI);\n\t\tZipFile zipFile = new ZipFile(jarFile);\n\t\tEnumeration<? extends ZipEntry> entries = zipFile.entries();\n\t\twhile (entries.hasMoreElements()) {\n\t\t\tZipEntry zipEntry = entries.nextElement();\n\t\t\tString name = zipEntry.getName();\n\t\t\tif (!name.startsWith(\"/\")) {\n\t\t\t\tname = \"/\" + name;\n\t\t\t}\n\t\t\tString fileExtension = name.substring(name.lastIndexOf('.') + 1);\n\t\t\tif (!zipEntry.isDirectory() && REGISTERED_EXTENSIONS.contains(fileExtension)) {\n\t\t\t\tURI resourceURI = URI.createURI(jarFileURI + name);\n\t\t\t\tResource resource = resourceSet.getResource(resourceURI, true);\n\t\t\t\tint resourceID;\n\t\t\t\tboolean isAlreadyIndexed = true;\n\t\t\t\ttry {\n\t\t\t\t\tresourceID = indexDatabase.getResourceDAO().getID(name, containerID);\n\t\t\t\t}\n\t\t\t\tcatch (NotFoundInIndexException e) {\n\t\t\t\t\tresourceID = indexDatabase.getResourceDAO().create(name, containerID);\n\t\t\t\t\tisAlreadyIndexed = false;\n\t\t\t\t}\n\t\t\t\tindexResource(resourceID, resource, isAlreadyIndexed, containerID);\n\t\t\t}\n\t\t}\n\t}","id":107241,"modified_method":"private URI indexJarFile(IPath path, List<Integer> containerIDsFromDB) throws SQLException {\n\t\tFile jarFile = path.toFile();\n\t\tString jarFileURIString = \"jar:file:\" + jarFile.getAbsolutePath() + \"!/\";\n\t\tURI jarFileURI=URI.createURI(jarFileURIString);\n\t\tint jarFileContainerID = getResourceContainerID(jarFileURIString);\n\t\tcontainerIDsFromDB.remove(new Integer(jarFileContainerID));\n\t\tList<URI> resourceURIsFromDB = indexDatabase.getResourceDAO().findByContainer(jarFileContainerID);\n\t\ttry {\n\t\t\tZipFile zipFile = new ZipFile(jarFile);\n\t\t\tEnumeration<? extends ZipEntry> entries = zipFile.entries();\n\t\t\twhile (entries.hasMoreElements()) {\n\t\t\t\tZipEntry zipEntry = entries.nextElement();\n\t\t\t\tString name = URIUtil.trimLeadingSlash(zipEntry.getName());\n\t\t\t\tString fileExtension = name.substring(name.lastIndexOf('.') + 1);\n\t\t\t\tif (!zipEntry.isDirectory() && REGISTERED_EXTENSIONS.contains(fileExtension)) {\n\t\t\t\t\tURI resourceURI = URI.createURI(jarFileURIString + name);\n\t\t\t\t\tresourceURIsFromDB.remove(resourceURI);\n\t\t\t\t\tResource resource = resourceSet.getResource(resourceURI, true);\n\t\t\t\t\tint resourceID;\n\t\t\t\t\tboolean isAlreadyIndexed = true;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresourceID = indexDatabase.getResourceDAO().getID(name, jarFileContainerID);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (NotFoundInIndexException e) {\n\t\t\t\t\t\tresourceID = indexDatabase.getResourceDAO().create(name, jarFileContainerID);\n\t\t\t\t\t\tisAlreadyIndexed = false;\n\t\t\t\t\t}\n\t\t\t\t\tindexResource(resourceID, resource, isAlreadyIndexed, jarFileContainerID);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (IOException e) {\n\t\t\tlog.error(\"Error indexing jar file \" + jarFileURIString, e);\n\t\t}\n\t\tdeleteStaleResources(resourceURIsFromDB);\n\t\treturn jarFileURI;\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void removeProject(IProject project) {\n\t}","id":107242,"modified_method":"public void removeProject(IProject project) {\n\t\ttry {\n\t\t\tint resourceContainerID = getResourceContainerID(project);\n\t\t\tindexDatabase.getResourceContainerDAO().delete(resourceContainerID);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tlog.error(e);\n\t\t}\n\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"private void indexPlainProject(IProject project) {\n\t\ttry {\n\t\t\tint containerID = getResourceContainerID(project);\n\t\t\tResourceVisitor resourceVisitor = new ResourceVisitor(this, containerID);\n\t\t\tproject.accept(resourceVisitor);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","id":107243,"modified_method":"private void indexPlainProject(IProject project, List<Integer> containerIDsFromDB) {\n\t\ttry {\n\t\t\tint containerID = getResourceContainerID(project);\n\t\t\tcontainerIDsFromDB.remove(new Integer(containerID));\n\t\t\tList<URI> resourceURIsFromDB = indexDatabase.getResourceDAO().findByContainer(containerID);\n\t\t\tResourceVisitor resourceVisitor = new ResourceVisitor(this, containerID, resourceURIsFromDB);\n\t\t\tproject.accept(resourceVisitor);\n\t\t\tdeleteStaleResources(resourceURIsFromDB);\n\t\t\tList<URI> dependencyURIsFromDB = indexDatabase.getResourceContainerReferenceDAO().findDependencyURIs(\n\t\t\t\t\tcontainerID);\n\t\t\tIProject[] referencedProjects = project.getReferencedProjects();\n\t\t\tif (referencedProjects != null) {\n\t\t\t\tfor (IProject referencedProject : referencedProjects) {\n\t\t\t\t\tURI projectURI = URIUtil.createContainerURI(referencedProject);\n\t\t\t\t\tif (!dependencyURIsFromDB.remove(projectURI)) {\n\t\t\t\t\t\tindexDatabase.getResourceContainerReferenceDAO().create(containerID, projectURI);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdeleteStaleContainerReferences(containerID, dependencyURIsFromDB);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"private int getResourceContainerID(IProject project) throws SQLException {\n\t\tString projectURI = URI.createPlatformResourceURI(project.getFullPath().toString(), true).toString();\n\t\tint resourceContainerID;\n\t\ttry {\n\t\t\tresourceContainerID = indexDatabase.getResourceContainerDAO().getID(projectURI);\n\t\t}\n\t\tcatch (NotFoundInIndexException exc) {\n\t\t\tresourceContainerID = indexDatabase.getResourceContainerDAO().create(projectURI);\n\t\t}\n\t\treturn resourceContainerID;\n\t}","id":107244,"modified_method":"private int getResourceContainerID(IProject project) throws SQLException {\n\t\tString projectURI = URIUtil.createContainerURI(project).toString();\n\t\treturn getResourceContainerID(projectURI);\n\t}","commit_id":"8f8bb465ddd3d5a050b352f917e46a8785b5119d","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findReferencesTo(String eObjectURI) throws SQLException {\n\t\t\n\t\t\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tselectURIByCrossReferenceTarget.setString(1, eObjectURI);\n\t\t\tresult = selectURIByCrossReferenceTarget.executeQuery();\n\t\t\tList<URI> uris = indexDatabase.createURIsFromResult(result);\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","id":107245,"modified_method":"public List<URI> findReferencesTo(String eObjectURI) throws SQLException {\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tselectSourceURIByCrossReferenceTarget.setString(1, eObjectURI);\n\t\t\tresult = selectSourceURIByCrossReferenceTarget.executeQuery();\n\t\t\tList<URI> uris = URIUtil.createURIsFromResult(result);\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findReferencesTo(URI uri) throws SQLException {\n\t\treturn findReferencesTo(uri.toString());\n\t}","id":107246,"modified_method":"public List<URI> findReferencesTo(String eObjectURI, int resourceContainerID) throws SQLException {\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tselectSourceURIByCrossReferenceTargetAndContainerID.setString(1, eObjectURI);\n\t\t\tselectSourceURIByCrossReferenceTargetAndContainerID.setInt(2, resourceContainerID);\n\t\t\tresult = selectSourceURIByCrossReferenceTargetAndContainerID.executeQuery();\n\t\t\tList<URI> uris = URIUtil.createURIsFromResult(result);\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public CrossReferenceDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tcreateCrossReference = indexDatabase.prepareStatements(\n\t\t\t\t\"INSERT INTO CrossReference(source,target) VALUES(?,?)\");\n\t\t\tselectURIByCrossReferenceTarget = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path, EObject.fragment FROM CrossReference, EObject, Resource, Container WHERE CrossReference.target=? AND CrossReference.source=EObject.id AND EObject.resource=Resource.id AND Resource.container=Container.id\");\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":107247,"modified_method":"public CrossReferenceDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tcreateCrossReference = indexDatabase\n\t\t\t\t\t.prepareStatements(\"INSERT INTO CrossReference(source,target) VALUES(?,?)\");\n\t\t\tselectTargetURIByCrossReferenceSource = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT target FROM CrossReference WHERE source=?\");\n\t\t\tselectSourceURIByCrossReferenceTarget = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path, EObject.fragment FROM CrossReference \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN EObject ON CrossReference.source=EObject.id \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN Resource ON EObject.resource=Resource.id \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN Container ON Resource.container=Container.id \"\n\t\t\t\t\t\t\t+ \"WHERE CrossReference.target=?\");\n\t\t\tselectSourceURIByCrossReferenceTargetAndContainerID = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path, EObject.fragment FROM CrossReference \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN EObject ON CrossReference.source=EObject.id \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN Resource ON EObject.resource=Resource.id \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN Container ON Resource.container=Container.id \"\n\t\t\t\t\t\t\t+ \"WHERE CrossReference.target=? AND Container.id=?\");\n\t\t\tdeleteReferencesBySource = indexDatabase.prepareStatements(\"DELETE FROM CrossReference WHERE source=?\");\n\t\t\tdeleteReferencesBySourceAndTarget = indexDatabase\n\t\t\t\t\t.prepareStatements(\"DELETE FROM CrossReference WHERE source=? AND target=?\");\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findReferencesTo(EObject eObject) throws SQLException {\n\t\treturn findReferencesTo(EcoreUtil.getURI(eObject));\n\t}","id":107248,"modified_method":"public List<URI> findReferencesTo(EObject eObject) throws SQLException {\n\t\treturn findReferencesTo(URIUtil.getURI(eObject));\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\tindexDatabase = new IndexDatabase();\n\t\tindexDatabase.clearAll();\n\t}","id":107249,"modified_method":"@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\tindexDatabase = new IndexDatabase();\n\t\ttry {\n\t\t\tindexDatabase.clearAll();\n\t\t} catch(Exception exc) {\n\t\t\t// ignore\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testResourceContainer() throws Exception {\n\t\tint idX = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_X);\n\t\tint idY = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_Y);\n\t\tassertEquals(idX, indexDatabase.getResourceContainerDAO().getID(PLATFORM_PLUGIN_X));\n\t\tassertEquals(idY, indexDatabase.getResourceContainerDAO().getID(PLATFORM_PLUGIN_Y));\n\t\tassertNotSame(idX, idY);\n\t\tindexDatabase.getResourceContainerDAO().createReference(idX, idY);\n\t\tList<Integer> dependencyIDs = indexDatabase.getResourceContainerDAO().findDependencyIDs(idX);\n\t\tassertEquals(1, dependencyIDs.size());\n\t\tassertEquals(idY, dependencyIDs.get(0).intValue());\n\t}","id":107250,"modified_method":"public void testResourceContainer() throws Exception {\n\t\t//test create\n\t\tint idX = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_X);\n\t\tint idY = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_Y);\n\t\tassertEquals(idX, indexDatabase.getResourceContainerDAO().getID(PLATFORM_PLUGIN_X));\n\t\tassertEquals(idY, indexDatabase.getResourceContainerDAO().getID(PLATFORM_PLUGIN_Y));\n\t\tassertNotSame(idX, idY);\n\t\t\n\t\t// test create reference\n\t\tindexDatabase.getResourceContainerReferenceDAO().create(idX, PLATFORM_PLUGIN_Y);\n\t\tList<URI> dependencyIDs = indexDatabase.getResourceContainerReferenceDAO().findDependencyURIs(idX);\n\t\tassertEquals(1, dependencyIDs.size());\n\t\tassertEquals(PLATFORM_PLUGIN_Y, dependencyIDs.get(0).toString());\n\t\t\n\t\t// delete source -> reference is deleted\n\t\tindexDatabase.getResourceContainerDAO().delete(idX);\n\t\tdependencyIDs = indexDatabase.getResourceContainerReferenceDAO().findDependencyURIs(idX);\n\t\tassertTrue(dependencyIDs.isEmpty());\n\t\t\n\t\t// delete target -> reference is not deleted\n\t\tint idZ = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_Z);\n\t\tindexDatabase.getResourceContainerReferenceDAO().create(idZ, PLATFORM_PLUGIN_Y);\n\t\tindexDatabase.getResourceContainerDAO().delete(idY);\n\t\tdependencyIDs = indexDatabase.getResourceContainerReferenceDAO().findDependencyURIs(idZ);\n\t\tassertEquals(1, dependencyIDs.size());\n\t\tassertEquals(PLATFORM_PLUGIN_Y, dependencyIDs.get(0).toString());\n\t\t\n\t\t// delete reference \n\t\tindexDatabase.getResourceContainerReferenceDAO().deleteBySource(idZ);\n\t\tdependencyIDs = indexDatabase.getResourceContainerReferenceDAO().findDependencyURIs(idZ);\n\t\tassertTrue(dependencyIDs.isEmpty());\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testResource() throws Exception {\n\t\tint containerID = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_X);\n\t\tResource resourceA = new ResourceImpl(URI.createURI(RESOURCE_URI_A));\n\t\tint idX = indexDatabase.getResourceDAO().create(\"/folder/a.ecore\", containerID);\n\t\tint idXByResource = indexDatabase.getResourceDAO().getID(resourceA);\n\t\tassertEquals(idX, idXByResource);\n\n\t\tResource resourceB = new ResourceImpl(URI.createURI(RESOURCE_URI_B));\n\t\tint idYByResource = indexDatabase.getResourceDAO().create(resourceB, containerID);\n\t\tint idY = indexDatabase.getResourceDAO().getID(\"folder/b.ecore\", containerID);\n\t\tassertEquals(idYByResource, idY);\n\t}","id":107251,"modified_method":"public void testResource() throws Exception {\n\t\tint containerID = indexDatabase.getResourceContainerDAO().create(PLATFORM_PLUGIN_X);\n\t\tResource resourceA = new ResourceImpl(URI.createURI(RESOURCE_URI_A));\n\t\tint idX = indexDatabase.getResourceDAO().create(\"/folder/a.ecore\", containerID);\n\t\tint idXByResource = indexDatabase.getResourceDAO().getID(resourceA);\n\t\tassertEquals(idX, idXByResource);\n\n\t\tResource resourceB = new ResourceImpl(URI.createURI(RESOURCE_URI_B));\n\t\tint idYByResource = indexDatabase.getResourceDAO().create(resourceB, containerID);\n\t\tint idY = indexDatabase.getResourceDAO().getID(\"folder/b.ecore\", containerID);\n\t\tassertEquals(idYByResource, idY);\n\n\t\tList<URI> allResources = indexDatabase.getResourceDAO().findAllResources();\n\t\tassertEquals(2, allResources.size());\n\t\t\n\t\tindexDatabase.getResourceDAO().delete(idX);\n\t\tallResources = indexDatabase.getResourceDAO().findAllResources();\n\t\tassertEquals(1, allResources.size());\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public EClassDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByEClass = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT EClass.id FROM EClass, EPackage WHERE EClass.name=? AND EPackage.nsUri=?\");\n\t\t\tselectEClassesByEPackage = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT name FROM EClass WHERE ePackage=?\");\n\t\t\tdeleteEClassByName = indexDatabase.prepareStatements(\"DELETE FROM EClass WHERE name=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":107252,"modified_method":"public EClassDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByEClass = indexDatabase.prepareStatements(\"SELECT EClass.id FROM EClass, EPackage \"\n\t\t\t\t\t+ \"WHERE EClass.name=? AND EPackage.nsUri=?\");\n\t\t\tselectEClassesByEPackage = indexDatabase.prepareStatements(\"SELECT name FROM EClass WHERE ePackage=?\");\n\t\t\tdeleteEClassByID = indexDatabase.prepareStatements(\"DELETE FROM EClass WHERE id=?\");\n\t\t\tdeleteEClassByName = indexDatabase.prepareStatements(\"DELETE FROM EClass WHERE name=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findByEClass(EClass eClass) throws SQLException, NotFoundInIndexException {\n\t\tint eClassID = indexDatabase.getEClassDAO().getID(eClass);\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tselectURIByEClass.setInt(1, eClassID);\n\t\t\tresult = selectURIByEClass.executeQuery();\n\t\t\tList<URI> uris = indexDatabase.createURIsFromResult(result);\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","id":107253,"modified_method":"public List<URI> findByEClass(EClass eClass) throws SQLException, NotFoundInIndexException {\n\t\tint eClassID = indexDatabase.getEClassDAO().getID(eClass);\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tselectURIByEClass.setInt(1, eClassID);\n\t\t\tresult = selectURIByEClass.executeQuery();\n\t\t\tList<URI> uris = URIUtil.createURIsFromResult(result);\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public EObjectDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByEObject = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT EObject.id FROM EObject WHERE EObject.fragment=? AND EObject.resource=?\");\n\t\t\tselectURIByEClass = indexDatabase\n\t\t\t\t\t.prepareStatements(\n\t\t\t\t\t\t\t\"SELECT Container.uri, Resource.path, EObject.fragment FROM EObject, Resource, Container WHERE EObject.eClass=? AND EObject.resource=Resource.id AND Resource.container=Container.id\");\n\t\t\tselectFragmentsByResource = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT fragment FROM EObject WHERE resource=?\");\n\t\t\tdeleteByFragmentAndResource = indexDatabase.prepareStatements(\n\t\t\t\t\t\"DELETE FROM EObject WHERE id=?\");\n\t\t\tdeleteReferencesBySource = indexDatabase.prepareStatements(\n\t\t\t\t\t\"DELETE FROM CrossReference WHERE source=?\");\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":107254,"modified_method":"public EObjectDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByEObject = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT EObject.id FROM EObject WHERE EObject.fragment=? AND EObject.resource=?\");\n\t\t\tselectURIByEClass = indexDatabase\n\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path, EObject.fragment FROM EObject \"\n\t\t\t\t\t+ \"LEFT JOIN Resource ON EObject.resource=Resource.id \"\n\t\t\t\t\t+ \"LEFT JOIN Container ON Resource.container=Container.id \" \n\t\t\t\t\t+ \"WHERE EObject.eClass=?\");\n\t\t\tselectURIByEClassAndContainerID = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path, EObject.fragment FROM EObject \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN Resource ON EObject.resource=Resource.id \"\n\t\t\t\t\t\t\t+ \"LEFT JOIN Container ON Resource.container=Container.id \" \n\t\t\t\t\t\t\t+ \"WHERE EObject.eClass=? AND Container.id=?\");\n\t\t\tselectFragmentsByResource = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT fragment FROM EObject WHERE resource=?\");\n\t\t\tdeleteEObjectByID = indexDatabase.prepareStatements(\"DELETE FROM EObject WHERE id=?\");\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public EPackageDAO(IndexDatabase indexDatabase){\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByEPackage = indexDatabase.prepareStatements(\"SELECT id FROM EPackage WHERE nsURI=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":107255,"modified_method":"public EPackageDAO(IndexDatabase indexDatabase){\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByEPackage = indexDatabase.prepareStatements(\"SELECT id FROM EPackage WHERE nsURI=?\");\n\t\t\tdeleteEPackageByID = indexDatabase.prepareStatements(\"DELETE FROM EPackage WHERE id=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"private void createTables() throws Exception {\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE EPackage (id INTEGER GENERATED BY DEFAULT AS IDENTITY, nsURI VARCHAR(512), PRIMARY KEY (id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE EClass (id INTEGER GENERATED BY DEFAULT AS IDENTITY, ePackage INTEGER, name VARCHAR(256), PRIMARY KEY (id), FOREIGN KEY (ePackage) REFERENCES EPackage(id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE Container (id INTEGER GENERATED BY DEFAULT AS IDENTITY, uri VARCHAR(512) NOT NULL, type INTEGER, PRIMARY KEY (id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\"CREATE TABLE ContainerReference (source INTEGER, target INTEGER)\", true);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE Resource (id INTEGER GENERATED BY DEFAULT AS IDENTITY, container INTEGER, path VARCHAR(512), PRIMARY KEY (id), FOREIGN KEY (container) REFERENCES Container(id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE EObject (id INTEGER GENERATED BY DEFAULT AS IDENTITY, resource INTEGER, fragment VARCHAR(256), eClass INTEGER, PRIMARY KEY (id), FOREIGN KEY (resource) REFERENCES Resource(id), FOREIGN KEY (eClass) REFERENCES EClass(id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\"CREATE TABLE CrossReference (source INTEGER, target VARCHAR(768))\", true);\n\t\tcommitOrRollback();\n\t}","id":107256,"modified_method":"private void createTables() throws Exception {\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE EPackage (id INTEGER GENERATED BY DEFAULT AS IDENTITY, nsURI VARCHAR(512), PRIMARY KEY (id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE EClass (id INTEGER GENERATED BY DEFAULT AS IDENTITY, ePackage INTEGER, name VARCHAR(256), PRIMARY KEY (id), FOREIGN KEY (ePackage) REFERENCES EPackage(id) ON DELETE CASCADE)\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE Container (id INTEGER GENERATED BY DEFAULT AS IDENTITY, uri VARCHAR(512) NOT NULL, type INTEGER, PRIMARY KEY (id))\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\"CREATE TABLE ContainerReference (source INTEGER, target VARCHAR(512), FOREIGN KEY (source) REFERENCES Container(id) ON DELETE CASCADE)\", true);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE Resource (id INTEGER GENERATED BY DEFAULT AS IDENTITY, container INTEGER, path VARCHAR(512), PRIMARY KEY (id), FOREIGN KEY (container) REFERENCES Container(id) ON DELETE CASCADE)\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\n\t\t\t\t\"CREATE TABLE EObject (id INTEGER GENERATED BY DEFAULT AS IDENTITY, resource INTEGER, fragment VARCHAR(256), eClass INTEGER, PRIMARY KEY (id), FOREIGN KEY (resource) REFERENCES Resource(id) ON DELETE CASCADE, FOREIGN KEY (eClass) REFERENCES EClass(id) ON DELETE CASCADE)\",\n\t\t\t\ttrue);\n\t\texecuteCommand(\"CREATE TABLE CrossReference (source INTEGER, target VARCHAR(768), FOREIGN KEY (source) REFERENCES EObject(id) ON DELETE CASCADE)\", true);\n\t\tcommitOrRollback();\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public void clearAll() throws SQLException {\n\t\tStatement deleteStatement = null;\n\t\ttry {\n\t\t\tdeleteStatement = conn.createStatement();\n\t\t\tdeleteStatement.execute(\"DELETE FROM CrossReference\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM EObject\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM Resource\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM ContainerReference\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM Container\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM EClass\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM EPackage\");\n\t\t\tcommitOrRollback();\n\t\t}\n\t\tfinally {\n\t\t\tif (deleteStatement != null) {\n\t\t\t\tdeleteStatement.close();\n\t\t\t}\n\t\t}\n\t}","id":107257,"modified_method":"public void clearAll() throws SQLException {\n\t\tStatement deleteStatement = null;\n\t\ttry {\n\t\t\tcommitOrRollback();\n\t\t\tdeleteStatement = conn.createStatement();\n\t\t\tdeleteStatement.execute(\"DELETE FROM EPackage\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM EClass\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM CrossReference\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM EObject\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM Resource\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM ContainerReference\");\n\t\t\tdeleteStatement.execute(\"DELETE FROM Container\");\n\t\t\tcommitOrRollback();\n\t\t}\n\t\tfinally {\n\t\t\tif (deleteStatement != null) {\n\t\t\t\tdeleteStatement.close();\n\t\t\t}\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"private void createDAOs() {\n\t\tcrossReferenceDAO = new CrossReferenceDAO(this);\n\t\teClassDAO = new EClassDAO(this);\n\t\teObjectDAO = new EObjectDAO(this);\n\t\tePackageDAO = new EPackageDAO(this);\n\t\tresourceContainerDAO = new ResourceContainerDAO(this);\n\t\tresourceDAO = new ResourceDAO(this);\n\t}","id":107258,"modified_method":"private void createDAOs() {\n\t\tcrossReferenceDAO = new CrossReferenceDAO(this);\n\t\teClassDAO = new EClassDAO(this);\n\t\teObjectDAO = new EObjectDAO(this);\n\t\tePackageDAO = new EPackageDAO(this);\n\t\tresourceContainerDAO = new ResourceContainerDAO(this);\n\t\tresourceContainerReferenceDAO = new ResourceContainerReferenceDAO(this);\n\t\tresourceDAO = new ResourceDAO(this);\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findReferencesTo(EObject eObject, IProject scope) {\n\t\ttry {\n\t\t\treturn indexDatabase.getCrossReferenceDAO().findReferencesTo(eObject);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t\treturn Collections.<URI> emptyList();\n\t}","id":107259,"modified_method":"public Collection<URI> findReferencesTo(EObject eObject, IProject scope) {\n\t\ttry {\n\t\t\tif(scope == null) {\n\t\t\t\treturn indexDatabase.getCrossReferenceDAO().findReferencesTo(eObject);\n\t\t\t}\n\t\t\tList<Integer> projectScope = getProjectScope(scope);\n\t\t\tSet<URI> references = new HashSet<URI>();\n\t\t\tfor(int resourceContainerID:projectScope) {\n\t\t\t\treferences.addAll(indexDatabase.getCrossReferenceDAO().findReferencesTo(URIUtil.getURI(eObject), resourceContainerID));\n\t\t\t}\n\t\t\treturn references;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t\treturn Collections.<URI> emptyList();\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public ModelIndex(boolean isRegisterEPackages) {\n\t\tindexDatabase = new IndexDatabase();\n\t\tworkspaceModelIndexer = new WorkspaceModelIndexer(indexDatabase);\n\t\tecoreRegistryIndexer = new EcoreRegistryIndexer(indexDatabase);\n\t\tif (isRegisterEPackages) {\n\t\t\tecoreRegistryIndexer.indexRegisteredEPackages();\n\t\t}\n\t\tresourceDeltaVisitor = new ResourceDeltaVisitor(workspaceModelIndexer);\n\t\tResourcesPlugin.getWorkspace().addResourceChangeListener(this);\n\t}","id":107260,"modified_method":"public ModelIndex(boolean isRegisterEPackages) {\n\t\tindexDatabase = new IndexDatabase();\n\t\tworkspaceModelIndexer = new WorkspaceModelIndexer(indexDatabase);\n\t\tecoreRegistryIndexer = new EcoreRegistryIndexer(indexDatabase);\n\t\tif (isRegisterEPackages) {\n\t\t\tecoreRegistryIndexer.indexRegisteredEPackages();\n\t\t}\n\t\tresourceDeltaVisitor = new ResourceDeltaVisitor(workspaceModelIndexer);\n\t\tstartListening();\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public void shutdown() throws Exception {\n\t\tResourcesPlugin.getWorkspace().removeResourceChangeListener(this);\n\t\tindexDatabase.shutdown();\n\t}","id":107261,"modified_method":"public void shutdown() throws Exception {\n\t\tstopListening();\n\t\tindexDatabase.shutdown();\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findInstances(EClass eClass, IProject scope) {\n\t\ttry {\n\t\t\treturn indexDatabase.getEObjectDAO().findByEClass(eClass);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t\treturn Collections.<URI> emptyList();\n\t}","id":107262,"modified_method":"public Collection<URI> findInstances(EClass eClass, IProject scope) {\n\t\ttry {\n\t\t\tif(scope == null) {\n\t\t\t\treturn indexDatabase.getEObjectDAO().findByEClass(eClass);\n\t\t\t} \n\t\t\tList<Integer> projectScope = getProjectScope(scope);\n\t\t\tSet<URI> instances = new HashSet<URI>();\n\t\t\tfor(int resourceContainerID:projectScope) {\n\t\t\t\tinstances.addAll(indexDatabase.getEObjectDAO().findByEClass(eClass, resourceContainerID));\n\t\t\t}\n\t\t\treturn instances;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t\treturn Collections.<URI> emptyList();\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testIndexModelInPlainProject() throws Exception {\n\t\tproject = JavaProjectSetupUtil.createProject(TEST_PROJECT_NAME);\n\t\tPluginUtil.copyFileToWorkspace(IndexTestPlugin.getDefault(), \"/testfiles/\" + MODEL_FILE, project, MODEL_FILE);\n\t\tString expectedURI = \"platform:/resource/\" + TEST_PROJECT_NAME + \"/\" + MODEL_FILE + \"#//SimpleEClass\";\n\t\tEObject simpleEClass = performTestSimpleEClass(project, expectedURI);\n\t\tperformReferenceTest(simpleEClass);\n\t}","id":107263,"modified_method":"public void testIndexModelInPlainProject() throws Exception {\n\t\tproject = JavaProjectSetupUtil.createProject(TEST_PROJECT_NAME);\n\t\tPluginUtil.copyFileToWorkspace(IndexTestPlugin.getDefault(), \"/testfiles/\" + MODEL_FILE, project, MODEL_FILE);\n\t\tString expectedURI = \"platform:/resource/\" + TEST_PROJECT_NAME + \"/\" + MODEL_FILE + \"#//SimpleEClass\";\n\t\tEObject simpleEClass = performTestSimpleEClass(project, expectedURI);\n\t\tperformReferenceTest(simpleEClass);\n\t\t\n\t\tIProject referencingProject = JavaProjectSetupUtil.createProject(REFERENCING_PROJECT_NAME);\n\t\tmodelIndex.getWorkspaceModelIndexer().indexWorkspace();\n\t\tCollection<URI> eClasses = modelIndex.findInstances(EcorePackage.Literals.ECLASS, referencingProject);\n\t\tassertTrue(eClasses.isEmpty());\n\t\t\n\t\tJavaProjectSetupUtil.addProjectReference(referencingProject, project);\n\t\tperformTestSimpleEClass(referencingProject, expectedURI);\n\t\tJavaProjectSetupUtil.deleteProject(referencingProject);\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tprivate void performReferenceTest(EObject object) throws IOException {\n\t\tList<URI> references = modelIndex.findReferencesTo(object, null);\n\t\tassertFalse(references.isEmpty());\n\t\tURI referenceURI = references.get(0);\n\t\tassertTrue(modelIndex.exists(referenceURI));\n\t\tEObject referencingObject = resourceSet.getEObject(referenceURI, false);\n\t\tassertNotNull(referencingObject);\n\t\tEObject parent = referencingObject.eContainer();\n\t\tResource resource = referencingObject.eResource();\n\t\t((List<EObject>) parent.eGet(referencingObject.eContainingFeature())).remove(referencingObject);\n\t\tresource.save(null);\n\t\tmodelIndex.getWorkspaceModelIndexer().indexWorkspace();\n\t\tassertFalse(modelIndex.exists(referenceURI));\n\t}","id":107264,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tprivate void performReferenceTest(EObject object) throws IOException {\n\t\tCollection<URI> references = modelIndex.findReferencesTo(object, project);\n\t\tassertFalse(references.isEmpty());\n\t\tURI referenceURI = references.iterator().next();\n\t\tassertTrue(modelIndex.exists(referenceURI));\n\t\tEObject referencingObject = resourceSet.getEObject(referenceURI, false);\n\t\tassertNotNull(referencingObject);\n\t\tEObject parent = referencingObject.eContainer();\n\t\tResource resource = referencingObject.eResource();\n\t\t((List<EObject>) parent.eGet(referencingObject.eContainingFeature())).remove(referencingObject);\n\t\tresource.save(null);\n\t\tmodelIndex.getWorkspaceModelIndexer().indexWorkspace();\n\t\tassertFalse(modelIndex.exists(referenceURI));\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"private EObject performTestSimpleEClass(IProject project, String expectedURI) throws SQLException, IOException {\n\t\tmodelIndex.getWorkspaceModelIndexer().indexWorkspace();\n\t\tList<URI> eClasses = modelIndex.findInstances(EcorePackage.Literals.ECLASS, project);\n\t\tassertFalse(eClasses.isEmpty());\n\t\tURI expected = URI.createURI(expectedURI);\n\t\tassertTrue(eClasses.contains(expected));\n\t\tassertEquals(expectedURI, expected.toString());\n\n\t\tEObject object = resourceSet.getEObject(expected, true);\n\t\tassertNotNull(object);\n\t\treturn object;\n\n\t}","id":107265,"modified_method":"private EObject performTestSimpleEClass(IProject project, String expectedURI) throws SQLException, IOException {\n\t\tmodelIndex.getWorkspaceModelIndexer().indexWorkspace();\n\t\tCollection<URI> eClasses = modelIndex.findInstances(EcorePackage.Literals.ECLASS, project);\n\t\tassertFalse(eClasses.isEmpty());\n\t\tURI expected = URI.createURI(expectedURI);\n\t\tassertTrue(eClasses.contains(expected));\n\t\tassertEquals(expectedURI, expected.toString());\n\n\t\tEObject object = resourceSet.getEObject(expected, true);\n\t\tassertNotNull(object);\n\t\treturn object;\n\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\tmodelIndex = new ModelIndex(false);\n\t\tmodelIndex.getEcoreRegistryIndexer().indexEPackage(EcorePackage.eINSTANCE);\n\t\tresourceSet = new ResourceSetImpl();\n\t}","id":107266,"modified_method":"@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\tmodelIndex = new ModelIndex(false);\n\t\tmodelIndex.getEcoreRegistryIndexer().indexEPackage(EcorePackage.eINSTANCE);\n\t\tmodelIndex.stopListening();\n\t\tresourceSet = new ResourceSetImpl();\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public int getID(String uri) throws SQLException, NotFoundInIndexException {\n\t\tselectIDByURI.setString(1, uri);\n\t\treturn indexDatabase.queryID(selectIDByURI);\n\t}","id":107267,"modified_method":"public int getID(String uri) throws SQLException, NotFoundInIndexException {\n\t\tselectIDByURI.setString(1, URIUtil.trimTrailingSlash(uri));\n\t\treturn indexDatabase.queryID(selectIDByURI);\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public ResourceContainerDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByURI = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT Container.id FROM Container WHERE uri=?\");\n\t\t\tselectReferences = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT ContainerReference.target FROM ContainerReference WHERE source=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":107268,"modified_method":"public ResourceContainerDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByURI = indexDatabase.prepareStatements(\"SELECT Container.id FROM Container WHERE uri=?\");\n\t\t\tselectAllContainerIDs = indexDatabase.prepareStatements(\"SELECT id FROM Container\");\n\t\t\tdeleteContainerByID = indexDatabase.prepareStatements(\"DELETE FROM Container WHERE id=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public int create(String uri) throws SQLException {\n\t\tStringBuffer insertStatementBuffer = new StringBuffer(\"INSERT INTO Container(uri) VALUES('\");\n\t\tinsertStatementBuffer.append(uri);\n\t\tinsertStatementBuffer.append(\"')\");\n\t\treturn indexDatabase.insertWithAutoID(insertStatementBuffer.toString());\n\t}","id":107269,"modified_method":"public int create(String uri) throws SQLException {\n\t\tStringBuffer insertStatementBuffer = new StringBuffer(\"INSERT INTO Container(uri) VALUES('\");\n\t\tinsertStatementBuffer.append(URIUtil.trimTrailingSlash(uri));\n\t\tinsertStatementBuffer.append(\"')\");\n\t\treturn indexDatabase.insertWithAutoID(insertStatementBuffer.toString());\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public int getID(Resource resource) throws SQLException, NotFoundInIndexException {\n\t\tURI uri = resource.getURI();\n\t\tString uriAsString = uri.toString();\n\t\tint containerURILength = indexDatabase.getResourceContainerDAO().getContainerURILength(uri);\n\t\tString containerURI = uriAsString.substring(0, containerURILength);\n\t\tString path = uriAsString.substring(containerURILength + 1);\n\t\tselectIDByResource.setString(1, path);\n\t\tselectIDByResource.setString(2, containerURI);\n\t\treturn indexDatabase.queryID(selectIDByResource);\n\t}","id":107270,"modified_method":"public int getID(Resource resource) throws SQLException, NotFoundInIndexException {\n\t\tURI resourceURI = resource.getURI();\n\t\treturn getID(resourceURI);\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public int create(String path, int containerID) throws SQLException {\n\t\tif (path.startsWith(\"/\")) {\n\t\t\tpath = path.substring(1);\n\t\t}\n\t\tStringBuffer insertStatementBuffer = new StringBuffer(\"INSERT INTO Resource(path, container) VALUES('\");\n\t\tinsertStatementBuffer.append(path);\n\t\tinsertStatementBuffer.append(\"',\");\n\t\tinsertStatementBuffer.append(containerID);\n\t\tinsertStatementBuffer.append(\")\");\n\t\treturn indexDatabase.insertWithAutoID(insertStatementBuffer.toString());\n\t}","id":107271,"modified_method":"public int create(String path, int containerID) throws SQLException {\n\t\tStringBuffer insertStatementBuffer = new StringBuffer(\"INSERT INTO Resource(path, container) VALUES('\");\n\t\tinsertStatementBuffer.append(URIUtil.trimLeadingSlash(path));\n\t\tinsertStatementBuffer.append(\"',\");\n\t\tinsertStatementBuffer.append(containerID);\n\t\tinsertStatementBuffer.append(\")\");\n\t\treturn indexDatabase.insertWithAutoID(insertStatementBuffer.toString());\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public ResourceDAO(IndexDatabase indexDatabase){\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByResource = indexDatabase\n\t\t\t\t\t.prepareStatements(\n\t\t\t\t\t\t\t\"SELECT Resource.id FROM Resource LEFT JOIN Container ON Container.id=Resource.container WHERE Resource.path=? AND Container.uri=?\");\n\t\t\tselectIDByPath = indexDatabase.prepareStatements(\n\t\t\t\t\t\"SELECT Resource.id FROM Resource WHERE path=? AND container=?\");\n\t\t\tselectAllResourceURIs = indexDatabase\n\t\t\t\t\t.prepareStatements(\n\t\t\t\t\t\t\t\"SELECT Container.uri, Resource.path FROM Resource LEFT JOIN Container ON Resource.container=Container.id\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":107272,"modified_method":"public ResourceDAO(IndexDatabase indexDatabase) {\n\t\ttry {\n\t\t\tthis.indexDatabase = indexDatabase;\n\t\t\tselectIDByResource = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Resource.id FROM Resource LEFT JOIN Container ON Container.id=Resource.container WHERE Resource.path=? AND Container.uri=?\");\n\t\t\tselectIDByPath = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Resource.id FROM Resource WHERE path=? AND container=?\");\n\t\t\tselectAllResourceURIs = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path FROM Resource LEFT JOIN Container ON Resource.container=Container.id\");\n\t\t\tselectResourceURIsByContainer = indexDatabase\n\t\t\t\t\t.prepareStatements(\"SELECT Container.uri, Resource.path FROM Resource LEFT JOIN Container ON Resource.container=Container.id WHERE Container.id=?\");\n\t\t\tdeleteResourceByID = indexDatabase.prepareStatements(\"DELETE FROM Resource WHERE id=?\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public int getID(String path, int containerID) throws SQLException, NotFoundInIndexException {\n\t\tif (path.startsWith(\"/\")) {\n\t\t\tpath = path.substring(1);\n\t\t}\n\t\tselectIDByPath.setString(1, path);\n\t\tselectIDByPath.setInt(2, containerID);\n\t\treturn indexDatabase.queryID(selectIDByPath);\n\t}","id":107273,"modified_method":"public int getID(String path, int containerID) throws SQLException, NotFoundInIndexException {\n\t\tselectIDByPath.setString(1, URIUtil.trimLeadingSlash(path));\n\t\tselectIDByPath.setInt(2, containerID);\n\t\treturn indexDatabase.queryID(selectIDByPath);\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<URI> findAllResources() throws SQLException {\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tresult = selectAllResourceURIs.executeQuery();\n\t\t\tList<URI> uris = new ArrayList<URI>();\n\t\t\twhile (result.next()) {\n\t\t\t\tStringBuffer uriBuffer = new StringBuffer();\n\t\t\t\turiBuffer.append(result.getString(1));\n\t\t\t\turiBuffer.append('/');\n\t\t\t\turiBuffer.append(result.getString(2));\n\t\t\t\tURI uri = URI.createURI(uriBuffer.toString());\n\t\t\t\turis.add(uri);\n\t\t\t}\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","id":107274,"modified_method":"public List<URI> findAllResources() throws SQLException {\n\t\tResultSet result = null;\n\t\ttry {\n\t\t\tresult = selectAllResourceURIs.executeQuery();\n\t\t\tList<URI> uris = createResourceURIsFromResult(result);\n\t\t\treturn uris;\n\t\t}\n\t\tfinally {\n\t\t\tif (result != null) {\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean visit(IResourceDelta delta) throws CoreException {\n\t\tIResource resource = delta.getResource();\n\t\tint type = resource.getType();\n\t\tint kind = delta.getKind();\n\t\tif (type == IResource.PROJECT) {\n\t\t\tproject = (IProject) resource;\n\t\t\tif (project.isOpen()) {\n\t\t\t\tswitch (kind) {\n\t\t\t\t\tcase IResourceDelta.CHANGED:\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase IResourceDelta.ADDED:\n\t\t\t\t\t\tworkspaceModelIndexer.indexProject(project);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase IResourceDelta.REMOVED:\n\t\t\t\t\t\tworkspaceModelIndexer.removeProject(project);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// do nothing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (type == IResource.ROOT || type == IResource.FOLDER) {\n\t\t\treturn true;\n\t\t}\n\t\tif (type == IResource.FILE) {\n\t\t\tIFile file = (IFile) delta.getResource();\n\t\t\tString fileExtension = file.getFileExtension();\n\t\t\tif (WorkspaceModelIndexer.REGISTERED_EXTENSIONS.contains(fileExtension)) {\n\t\t\t\tswitch (kind) {\n\t\t\t\t\tcase IResourceDelta.ADDED:\n\t\t\t\t\tcase IResourceDelta.CHANGED:\n\t\t\t\t\t\tworkspaceModelIndexer.indexModelFile(file);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase IResourceDelta.REMOVED:\n\t\t\t\t\t\tworkspaceModelIndexer.removeModelFile(file);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn false;\n\t}","id":107275,"modified_method":"public boolean visit(IResourceDelta delta) throws CoreException {\n\t\tIResource resource = delta.getResource();\n\t\tif (!resource.isDerived()) {\n\t\t\tint type = resource.getType();\n\t\t\tint kind = delta.getKind();\n\t\t\tif (type == IResource.PROJECT) {\n\t\t\t\tproject = (IProject) resource;\n\t\t\t\tif (project.isOpen()) {\n\t\t\t\t\tswitch (kind) {\n\t\t\t\t\t\tcase IResourceDelta.CHANGED:\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\tcase IResourceDelta.ADDED:\n\t\t\t\t\t\t\tworkspaceModelIndexer.indexProject(project, Collections.<Integer> emptyList());\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tcase IResourceDelta.REMOVED:\n\t\t\t\t\t\t\tworkspaceModelIndexer.removeProject(project);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type == IResource.ROOT || type == IResource.FOLDER) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (type == IResource.FILE) {\n\t\t\t\tIFile file = (IFile) delta.getResource();\n\t\t\t\tString fileExtension = file.getFileExtension();\n\t\t\t\tif (\"classpath\".equals(fileExtension) || \"MANIFEST.MF\".equals(file.getName())) {\n\t\t\t\t\t// Re-index project on classpath changes\n\t\t\t\t\tworkspaceModelIndexer.indexProject(file.getProject(), Collections.<Integer> emptyList());\n\t\t\t\t}\n\t\t\t\telse if (WorkspaceModelIndexer.REGISTERED_EXTENSIONS.contains(fileExtension)) {\n\t\t\t\t\tswitch (kind) {\n\t\t\t\t\t\tcase IResourceDelta.ADDED:\n\t\t\t\t\t\tcase IResourceDelta.CHANGED:\n\t\t\t\t\t\t\tworkspaceModelIndexer.indexModelFile(file);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase IResourceDelta.REMOVED:\n\t\t\t\t\t\t\tworkspaceModelIndexer.removeModelFile(file);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean visit(IResource resource) throws CoreException {\n\t\tif (resource.isDerived() || ignoredResources.contains(resource)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (resource instanceof IFile) {\n\t\t\tIFile file = (IFile) resource;\n\t\t\tString fileExtension = file.getFileExtension();\n\t\t\tif (WorkspaceModelIndexer.REGISTERED_EXTENSIONS.contains(fileExtension)) {\n\t\t\t\tworkspaceModelIndex.indexModelFile(file, containerID);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}","id":107276,"modified_method":"public boolean visit(IResource resource) throws CoreException {\n\t\tif (resource.isDerived() || ignoredResources.contains(resource)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (resource instanceof IFile) {\n\t\t\tIFile file = (IFile) resource;\n\t\t\tString fileExtension = file.getFileExtension();\n\t\t\tif (WorkspaceModelIndexer.REGISTERED_EXTENSIONS.contains(fileExtension)) {\n\t\t\t\tresourceURIsFromDB.remove(workspaceModelIndex.indexModelFile(file, containerID));\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public ResourceVisitor(WorkspaceModelIndexer workspaceModelIndex, int containerID) {\n\t\tthis.workspaceModelIndex = workspaceModelIndex;\n\t\tignoredResources = new ArrayList<IResource>();\n\t\tthis.containerID = containerID;\n\t}","id":107277,"modified_method":"public ResourceVisitor(WorkspaceModelIndexer workspaceModelIndex, int containerID, List<URI> resourceURIsFromDB) {\n\t\tthis.workspaceModelIndex = workspaceModelIndex;\n\t\tignoredResources = new ArrayList<IResource>();\n\t\tthis.containerID = containerID;\n\t\tthis.resourceURIsFromDB=resourceURIsFromDB;\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"private void indexCrossRefs(Resource resource) throws SQLException {\n\t\tfor (Iterator<EObject> allContents = resource.getAllContents(); allContents.hasNext();) {\n\t\t\tEObject eObject = allContents.next();\n\t\t\ttry {\n\t\t\t\tint sourceID = indexDatabase.getEObjectDAO().getID(eObject);\n\t\t\t\tBasicEList<EObject> crossReferences = (BasicEList<EObject>) eObject.eCrossReferences();\n\t\t\t\tfor (int i=0; i< crossReferences.size(); ++i) {\n\t\t\t\t\tEObject crossReference = crossReferences.basicGet(i);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tURI targetURI = EcoreUtil.getURI(crossReference);\n\t\t\t\t\t\tindexDatabase.getCrossReferenceDAO().create(sourceID, targetURI.toString());\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SQLException exc) {\n\t\t\t\t\t\tlog.error(\"Error creating cross-reference\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (NotFoundInIndexException exc) {\n\t\t\t\tlog.error(\"EObject has not been indexed. Concurrent modification?\");\n\t\t\t}\n\t\t}\n\t}","id":107278,"modified_method":"private void indexCrossRefs(Resource resource) throws SQLException {\n\t\tfor (Iterator<EObject> allContents = resource.getAllContents(); allContents.hasNext();) {\n\t\t\tEObject eObject = allContents.next();\n\t\t\ttry {\n\t\t\t\tint sourceID = indexDatabase.getEObjectDAO().getID(eObject);\n\t\t\t\tList<URI> crossReferencesFromDB = indexDatabase.getCrossReferenceDAO().findReferencesFrom(sourceID);\n\t\t\t\tInternalEList<EObject> crossReferences = (InternalEList<EObject>) eObject.eCrossReferences();\n\t\t\t\tfor (int i = 0; i < crossReferences.size(); ++i) {\n\t\t\t\t\tEObject crossReference = crossReferences.basicGet(i);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tURI targetURI = EcoreUtil.getURI(crossReference);\n\t\t\t\t\t\tif (!crossReferencesFromDB.remove(targetURI)) {\n\t\t\t\t\t\t\tindexDatabase.getCrossReferenceDAO().create(sourceID, targetURI.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SQLException exc) {\n\t\t\t\t\t\tlog.error(\"Error creating cross-reference\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdeleteStaleCrossReferences(sourceID, crossReferencesFromDB);\n\t\t\t}\n\t\t\tcatch (NotFoundInIndexException exc) {\n\t\t\t\tlog.error(\"EObject has not been indexed. Concurrent modification?\");\n\t\t\t}\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"private int getResourceContainerID(IProject project) throws SQLException {\n\t\tString projectURI = URI.createPlatformResourceURI(project.getFullPath().toString(), true).toString();\n\t\tint resourceContainerID;\n\t\ttry {\n\t\t\tresourceContainerID = indexDatabase.getResourceContainerDAO().getID(projectURI);\n\t\t}\n\t\tcatch (NotFoundInIndexException exc) {\n\t\t\tresourceContainerID = indexDatabase.getResourceContainerDAO().create(projectURI);\n\t\t}\n\t\treturn resourceContainerID;\n\t}","id":107279,"modified_method":"private int getResourceContainerID(IProject project) throws SQLException {\n\t\tString projectURI = URIUtil.createContainerURI(project).toString();\n\t\treturn getResourceContainerID(projectURI);\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"private void indexJavaProject(IJavaProject project) {\n\t\ttry {\n\t\t\tint containerID = getResourceContainerID(project.getProject());\n\t\t\tfor (IClasspathEntry classpathEntry : project.getRawClasspath()) {\n\t\t\t\tIPath classpathEntryPath = classpathEntry.getPath();\n\t\t\t\tIResource classpathEntryInWorkspace = project.getProject().getParent().findMember(classpathEntryPath);\n\t\t\t\tswitch (classpathEntry.getEntryKind()) {\n\t\t\t\t\tcase IClasspathEntry.CPE_LIBRARY:\n\t\t\t\t\t\tif (!classpathEntryPath.toString().startsWith(JavaRuntime.JRE_CONTAINER)) {\n\t\t\t\t\t\t\tif (classpathEntryInWorkspace != null && classpathEntryInWorkspace.exists()\n\t\t\t\t\t\t\t\t\t&& classpathEntryInWorkspace instanceof IFile) {\n\t\t\t\t\t\t\t\tindexJarFile(classpathEntryInWorkspace.getLocation(), containerID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tindexJarFile(classpathEntryPath, containerID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase IClasspathEntry.CPE_SOURCE:\n\t\t\t\t\t\tResourceVisitor resourceVisitor = new ResourceVisitor(this, containerID);\n\t\t\t\t\t\tclasspathEntryInWorkspace.accept(resourceVisitor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// do nothing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","id":107280,"modified_method":"private void indexJavaProject(IJavaProject project, List<Integer> containerIDsFromDB) {\n\t\ttry {\n\t\t\tint projectContainerID = getResourceContainerID(project.getProject());\n\t\t\tcontainerIDsFromDB.remove(new Integer(projectContainerID));\n\t\t\tList<URI> containerReferenceURIsFromDB = indexDatabase.getResourceContainerReferenceDAO()\n\t\t\t\t\t.findDependencyURIs(projectContainerID);\n\t\t\tList<URI> resourceURIsFromDB = indexDatabase.getResourceDAO().findByContainer(projectContainerID);\n\t\t\tfor (IClasspathEntry classpathEntry : project.getRawClasspath()) {\n\t\t\t\tIPath classpathEntryPath = classpathEntry.getPath();\n\t\t\t\tIResource classpathEntryInWorkspace = project.getProject().getParent().findMember(classpathEntryPath);\n\t\t\t\tswitch (classpathEntry.getEntryKind()) {\n\t\t\t\t\tcase IClasspathEntry.CPE_LIBRARY:\n\t\t\t\t\t\tif (!classpathEntryPath.toString().startsWith(JavaRuntime.JRE_CONTAINER)) {\n\t\t\t\t\t\t\tURI jarFileURI;\n\t\t\t\t\t\t\tif (classpathEntryInWorkspace != null && classpathEntryInWorkspace.exists()\n\t\t\t\t\t\t\t\t\t&& classpathEntryInWorkspace instanceof IFile) {\n\t\t\t\t\t\t\t\tjarFileURI = indexJarFile(classpathEntryInWorkspace.getLocation(), containerIDsFromDB);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tjarFileURI = indexJarFile(classpathEntryPath, containerIDsFromDB);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!containerReferenceURIsFromDB.remove(jarFileURI)) {\n\t\t\t\t\t\t\t\tindexDatabase.getResourceContainerReferenceDAO().create(projectContainerID, jarFileURI);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase IClasspathEntry.CPE_SOURCE:\n\t\t\t\t\t\tResourceVisitor resourceVisitor = new ResourceVisitor(this, projectContainerID,\n\t\t\t\t\t\t\t\tresourceURIsFromDB);\n\t\t\t\t\t\tclasspathEntryInWorkspace.accept(resourceVisitor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase IClasspathEntry.CPE_PROJECT:\n\t\t\t\t\t\tURI requiredProjectURI = URI.createPlatformResourceURI(classpathEntryPath.toString(), true);\n\t\t\t\t\t\tif (!containerReferenceURIsFromDB.remove(requiredProjectURI)) {\n\t\t\t\t\t\t\tindexDatabase.getResourceContainerReferenceDAO().create(projectContainerID,\n\t\t\t\t\t\t\t\t\trequiredProjectURI);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// do nothing\n\t\t\t\t}\n\t\t\t}\n\t\t\tdeleteStaleContainerReferences(projectContainerID, containerReferenceURIsFromDB);\n\t\t\tdeleteStaleResources(resourceURIsFromDB);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public void removeModelFile(IFile modelFile, int resourceContainerID) {\n\t\t// TODO: implement\n\t}","id":107281,"modified_method":"public void removeModelFile(IFile modelFile, int resourceContainerID) {\n\t\ttry {\n\t\t\tint resourceID = indexDatabase.getResourceDAO().getID(modelFile.getProjectRelativePath().toString(),\n\t\t\t\t\tresourceContainerID);\n\t\t\tindexDatabase.getResourceDAO().delete(resourceID);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public void indexModelFile(IFile file, int resourceContainerID) {\n\t\ttry {\n\t\t\tString path = file.getProjectRelativePath().toString();\n\t\t\tint resourceID;\n\t\t\tboolean isAlreadyIndexed = true;\n\t\t\ttry {\n\t\t\t\tresourceID = indexDatabase.getResourceDAO().getID(path, resourceContainerID);\n\t\t\t}\n\t\t\tcatch (NotFoundInIndexException exc) {\n\t\t\t\tisAlreadyIndexed = false;\n\t\t\t\tresourceID = indexDatabase.getResourceDAO().create(path, resourceContainerID);\n\t\t\t}\n\t\t\tURI resourceURI = URI.createPlatformResourceURI(file.getFullPath().toString(), true);\n\t\t\tResource resource = resourceSet.getResource(resourceURI, true);\n\t\t\tindexResource(resourceID, resource, isAlreadyIndexed, resourceContainerID);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","id":107282,"modified_method":"public URI indexModelFile(IFile file, int resourceContainerID) {\n\t\ttry {\n\t\t\tString path = file.getProjectRelativePath().toString();\n\t\t\tint resourceID;\n\t\t\tboolean isAlreadyIndexed = true;\n\t\t\ttry {\n\t\t\t\tresourceID = indexDatabase.getResourceDAO().getID(path, resourceContainerID);\n\t\t\t}\n\t\t\tcatch (NotFoundInIndexException exc) {\n\t\t\t\tisAlreadyIndexed = false;\n\t\t\t\tresourceID = indexDatabase.getResourceDAO().create(path, resourceContainerID);\n\t\t\t}\n\t\t\tURI resourceURI = URI.createPlatformResourceURI(file.getFullPath().toString(), true);\n\t\t\tResource resource = resourceSet.getResource(resourceURI, true);\n\t\t\tindexResource(resourceID, resource, isAlreadyIndexed, resourceContainerID);\n\t\t\treturn resourceURI;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t\treturn null;\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"private void indexPlainProject(IProject project) {\n\t\ttry {\n\t\t\tint containerID = getResourceContainerID(project);\n\t\t\tResourceVisitor resourceVisitor = new ResourceVisitor(this, containerID);\n\t\t\tproject.accept(resourceVisitor);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","id":107283,"modified_method":"private void indexPlainProject(IProject project, List<Integer> containerIDsFromDB) {\n\t\ttry {\n\t\t\tint containerID = getResourceContainerID(project);\n\t\t\tcontainerIDsFromDB.remove(new Integer(containerID));\n\t\t\tList<URI> resourceURIsFromDB = indexDatabase.getResourceDAO().findByContainer(containerID);\n\t\t\tResourceVisitor resourceVisitor = new ResourceVisitor(this, containerID, resourceURIsFromDB);\n\t\t\tproject.accept(resourceVisitor);\n\t\t\tdeleteStaleResources(resourceURIsFromDB);\n\t\t\tList<URI> dependencyURIsFromDB = indexDatabase.getResourceContainerReferenceDAO().findDependencyURIs(\n\t\t\t\t\tcontainerID);\n\t\t\tIProject[] referencedProjects = project.getReferencedProjects();\n\t\t\tif (referencedProjects != null) {\n\t\t\t\tfor (IProject referencedProject : referencedProjects) {\n\t\t\t\t\tURI projectURI = URIUtil.createContainerURI(referencedProject);\n\t\t\t\t\tif (!dependencyURIsFromDB.remove(projectURI)) {\n\t\t\t\t\t\tindexDatabase.getResourceContainerReferenceDAO().create(containerID, projectURI);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdeleteStaleContainerReferences(containerID, dependencyURIsFromDB);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public void removeJarFile(IPath path) {\n\t\t// TODO: implement\n\t}","id":107284,"modified_method":"public void removeJarFile(IPath path) {\n\t\ttry {\n\t\t\tFile jarFile = path.toFile();\n\t\t\tString jarFileURI = \"jar:file:\" + jarFile.getAbsolutePath() + \"!\";\n\t\t\tint resourceContainerID = indexDatabase.getResourceContainerDAO().create(jarFileURI);\n\t\t\tindexDatabase.getResourceContainerDAO().delete(resourceContainerID);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tlog.error(e);\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public void indexWorkspace() {\n\t\tIProject[] projects = ResourcesPlugin.getWorkspace().getRoot().getProjects();\n\t\tfor (IProject project : projects) {\n\t\t\ttry {\n\t\t\t\tindexProject(project);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tlog.error(e);\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tList<URI> allResourceURIs = indexDatabase.getResourceDAO().findAllResources();\n\t\t\tfor (URI resourceUri : allResourceURIs) {\n\t\t\t\tResource resource = resourceSet.getResource(resourceUri, true);\n\t\t\t\tindexCrossRefs(resource);\n\t\t\t\tresource.unload();\n\t\t\t}\n\t\t}\n\t\tcatch (SQLException exc) {\n\t\t\tlog.error(exc);\n\t\t}\n\t\ttry {\n\t\t\tindexDatabase.commitOrRollback();\n\t\t}\n\t\tcatch (SQLException exc) {\n\t\t\tlog.error(exc);\n\t\t}\n\t}","id":107285,"modified_method":"public void indexWorkspace() {\n\t\tIProject[] projects = ResourcesPlugin.getWorkspace().getRoot().getProjects();\n\t\tList<Integer> containerIDsFromDB = null;\n\t\ttry {\n\t\t\tcontainerIDsFromDB = indexDatabase.getResourceContainerDAO().findAllResourceContainerIDs();\n\t\t}\n\t\tcatch (SQLException exc) {\n\t\t\tlog.error(\"Error querying resouce containers\", exc);\n\t\t}\n\t\tfor (IProject project : projects) {\n\t\t\ttry {\n\t\t\t\tindexProject(project, containerIDsFromDB);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tlog.error(e);\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tList<URI> allResourceURIs = indexDatabase.getResourceDAO().findAllResources();\n\t\t\tfor (URI resourceUri : allResourceURIs) {\n\t\t\t\tResource resource = resourceSet.getResource(resourceUri, true);\n\t\t\t\tindexCrossRefs(resource);\n\t\t\t\tresource.unload();\n\t\t\t}\n\t\t}\n\t\tcatch (SQLException exc) {\n\t\t\tlog.error(exc);\n\t\t}\n\t\tif (containerIDsFromDB != null) {\n\t\t\tdeleteStaleResourceContainers(containerIDsFromDB);\n\t\t}\n\t\ttry {\n\t\t\tindexDatabase.commitOrRollback();\n\t\t}\n\t\tcatch (SQLException exc) {\n\t\t\tlog.error(exc);\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public void indexProject(IProject project) {\n\t\ttry {\n\t\t\tif (project.hasNature(JavaCore.NATURE_ID)) {\n\t\t\t\tindexJavaProject(JavaCore.create(project));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tindexPlainProject(project);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception exc) {\n\t\t\tlog.error(exc);\n\t\t}\n\t}","id":107286,"modified_method":"public void indexProject(IProject project, List<Integer> containerIDsFromDB) {\n\t\ttry {\n\t\t\tif (project.hasNature(JavaCore.NATURE_ID)) {\n\t\t\t\tindexJavaProject(JavaCore.create(project), containerIDsFromDB);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tindexPlainProject(project, containerIDsFromDB);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception exc) {\n\t\t\tlog.error(exc);\n\t\t}\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"private void indexResource(int resourceID, Resource resource, boolean isAlreadyIndexed, int containerID)\n\t\t\tthrows SQLException {\n\t\tList<String> fragmentsInResource = indexDatabase.getEObjectDAO().findFragmentsInResource(resourceID);\n\t\tfor (Iterator<EObject> contents = resource.getAllContents(); contents.hasNext();) {\n\t\t\tEObject content = contents.next();\n\t\t\tindexEObject(resourceID, resource, content, fragmentsInResource);\n\t\t}\n\t\tfor (String staleFragment : fragmentsInResource) {\n\t\t\ttry {\n\t\t\t\tint staleEObjectID = indexDatabase.getEObjectDAO().getID(staleFragment, resourceID);\n\t\t\t\tindexDatabase.getEObjectDAO().deleteEObjectAndCrossrefs(staleEObjectID);\n\t\t\t}\n\t\t\tcatch (NotFoundInIndexException e) {\n\t\t\t\tlog.error(\"Cannot find stale EObject in index\", e);\n\t\t\t}\n\t\t}\n\t\tresourceSet.getResources().remove(resource);\n\t}","id":107287,"modified_method":"private void indexResource(int resourceID, Resource resource, boolean isAlreadyIndexed, int containerID)\n\t\t\tthrows SQLException {\n\t\tList<String> fragmentsInResource = indexDatabase.getEObjectDAO().findFragmentsInResource(resourceID);\n\t\tfor (Iterator<EObject> contents = resource.getAllContents(); contents.hasNext();) {\n\t\t\tEObject content = contents.next();\n\t\t\tindexEObject(resourceID, resource, content, fragmentsInResource);\n\t\t}\n\t\tdeleteStaleFragments(resourceID, fragmentsInResource);\n\t\tresourceSet.getResources().remove(resource);\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public void removeProject(IProject project) {\n\t}","id":107288,"modified_method":"public void removeProject(IProject project) {\n\t\ttry {\n\t\t\tint resourceContainerID = getResourceContainerID(project);\n\t\t\tindexDatabase.getResourceContainerDAO().delete(resourceContainerID);\n\t\t}\n\t\tcatch (SQLException e) {\n\t\t\tlog.error(e);\n\t\t}\n\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public void indexJarFile(IPath path, int projectContainerID) throws SQLException, ZipException, IOException {\n\t\tFile jarFile = path.toFile();\n\t\tString jarFileURI = \"jar:file:\" + jarFile.getAbsolutePath() + \"!\";\n\t\tint containerID = indexDatabase.getResourceContainerDAO().create(jarFileURI);\n\t\tZipFile zipFile = new ZipFile(jarFile);\n\t\tEnumeration<? extends ZipEntry> entries = zipFile.entries();\n\t\twhile (entries.hasMoreElements()) {\n\t\t\tZipEntry zipEntry = entries.nextElement();\n\t\t\tString name = zipEntry.getName();\n\t\t\tif (!name.startsWith(\"/\")) {\n\t\t\t\tname = \"/\" + name;\n\t\t\t}\n\t\t\tString fileExtension = name.substring(name.lastIndexOf('.') + 1);\n\t\t\tif (!zipEntry.isDirectory() && REGISTERED_EXTENSIONS.contains(fileExtension)) {\n\t\t\t\tURI resourceURI = URI.createURI(jarFileURI + name);\n\t\t\t\tResource resource = resourceSet.getResource(resourceURI, true);\n\t\t\t\tint resourceID;\n\t\t\t\tboolean isAlreadyIndexed = true;\n\t\t\t\ttry {\n\t\t\t\t\tresourceID = indexDatabase.getResourceDAO().getID(name, containerID);\n\t\t\t\t}\n\t\t\t\tcatch (NotFoundInIndexException e) {\n\t\t\t\t\tresourceID = indexDatabase.getResourceDAO().create(name, containerID);\n\t\t\t\t\tisAlreadyIndexed = false;\n\t\t\t\t}\n\t\t\t\tindexResource(resourceID, resource, isAlreadyIndexed, containerID);\n\t\t\t}\n\t\t}\n\t}","id":107289,"modified_method":"private URI indexJarFile(IPath path, List<Integer> containerIDsFromDB) throws SQLException {\n\t\tFile jarFile = path.toFile();\n\t\tString jarFileURIString = \"jar:file:\" + jarFile.getAbsolutePath() + \"!/\";\n\t\tURI jarFileURI=URI.createURI(jarFileURIString);\n\t\tint jarFileContainerID = getResourceContainerID(jarFileURIString);\n\t\tcontainerIDsFromDB.remove(new Integer(jarFileContainerID));\n\t\tList<URI> resourceURIsFromDB = indexDatabase.getResourceDAO().findByContainer(jarFileContainerID);\n\t\ttry {\n\t\t\tZipFile zipFile = new ZipFile(jarFile);\n\t\t\tEnumeration<? extends ZipEntry> entries = zipFile.entries();\n\t\t\twhile (entries.hasMoreElements()) {\n\t\t\t\tZipEntry zipEntry = entries.nextElement();\n\t\t\t\tString name = URIUtil.trimLeadingSlash(zipEntry.getName());\n\t\t\t\tString fileExtension = name.substring(name.lastIndexOf('.') + 1);\n\t\t\t\tif (!zipEntry.isDirectory() && REGISTERED_EXTENSIONS.contains(fileExtension)) {\n\t\t\t\t\tURI resourceURI = URI.createURI(jarFileURIString + name);\n\t\t\t\t\tresourceURIsFromDB.remove(resourceURI);\n\t\t\t\t\tResource resource = resourceSet.getResource(resourceURI, true);\n\t\t\t\t\tint resourceID;\n\t\t\t\t\tboolean isAlreadyIndexed = true;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresourceID = indexDatabase.getResourceDAO().getID(name, jarFileContainerID);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (NotFoundInIndexException e) {\n\t\t\t\t\t\tresourceID = indexDatabase.getResourceDAO().create(name, jarFileContainerID);\n\t\t\t\t\t\tisAlreadyIndexed = false;\n\t\t\t\t\t}\n\t\t\t\t\tindexResource(resourceID, resource, isAlreadyIndexed, jarFileContainerID);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (IOException e) {\n\t\t\tlog.error(\"Error indexing jar file \" + jarFileURIString, e);\n\t\t}\n\t\tdeleteStaleResources(resourceURIsFromDB);\n\t\treturn jarFileURI;\n\t}","commit_id":"3c4068a336080da3b90925bae5b02011f14723dc","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n     * Starts the thread to index a single resource.<p>\n     * \n     * @see java.lang.Runnable#run()\n     */\n    public void run() {\n\n        I_CmsDocumentFactory documentFactory = OpenCms.getSearchManager().getDocumentFactory(m_res);\n        if (documentFactory != null\n            && !m_index.getDocumenttypes(m_res.getRootPath()).contains(documentFactory.getName())) {\n            documentFactory = null;\n        }\n\n        if (LOG.isDebugEnabled()) {\n            if (documentFactory != null) {\n                LOG.debug(Messages.get().key(Messages.LOG_INDEXING_DOC_ROOT_1, documentFactory.getName()));\n            } else {\n                LOG.debug(Messages.get().key(Messages.LOG_INDEXING_0));\n            }    \n        }\n\n        if (documentFactory != null) {\n            try {\n\n                if (DEBUG && LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().key(Messages.LOG_CREATING_INDEX_DOC_0));\n                }\n\n                Document doc = documentFactory.newInstance(m_cms, m_res, m_index.getLocale());\n                if (doc == null) {\n                    throw new CmsIndexException(Messages.get().container(Messages.ERR_CREATING_INDEX_DOC_0));\n                }\n\n                if (DEBUG && LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().key(Messages.LOG_WRITING_INDEX_TO_WRITER_1, ((m_writer != null) ? m_writer.toString() : \"null\")));\n                }\n\n                if (!isInterrupted()) {\n                    m_writer.addDocument(doc);\n                }\n\n                if (m_report != null && !isInterrupted()) {\n                    m_report.println(m_report.key(\"search.indexing_file_end\"), I_CmsReport.C_FORMAT_OK);\n                    if (DEBUG && LOG.isDebugEnabled()) {\n                        LOG.debug(Messages.get().key(Messages.LOG_WRITE_SUCCESS_0));\n                    }\n                }\n\n                if (isInterrupted() && LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().key(Messages.LOG_ABANDONED_THREAD_FINISHED_1, m_res.getRootPath()));\n                }\n\n            } catch (Exception exc) {\n\n                if (m_report != null) {\n                    m_report.println();\n                    m_report.println(\n                        m_report.key(\"search.indexing_file_failed\") + \" : \" + exc.getMessage(),\n                        I_CmsReport.C_FORMAT_WARNING);\n                }\n                if (LOG.isWarnEnabled()) {\n                    LOG.warn(Messages.get().key(Messages.LOG_INDEX_FAILED_1, m_res.getRootPath()), exc);\n                }\n            }\n        } else {\n\n            if (m_report != null) {\n                m_report.println(m_report.key(\"search.indexing_file_skipped\"), I_CmsReport.C_FORMAT_NOTE);\n            }\n\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(Messages.get().key(Messages.LOG_SKIPPED_1, m_res.getRootPath()));\n            }    \n            \n        }\n\n        m_threadManager.finished();\n    }","id":107290,"modified_method":"/**\n     * Starts the thread to index a single resource.<p>\n     * \n     * @see java.lang.Runnable#run()\n     */\n    public void run() {\n\n        I_CmsDocumentFactory documentFactory = OpenCms.getSearchManager().getDocumentFactory(m_res);\n        if (documentFactory != null\n            && !m_index.getDocumenttypes(m_res.getRootPath()).contains(documentFactory.getName())) {\n            documentFactory = null;\n        }\n\n        if (LOG.isDebugEnabled()) {\n            if (documentFactory != null) {\n                LOG.debug(Messages.get().key(Messages.LOG_INDEXING_DOC_ROOT_1, documentFactory.getName()));\n            } else {\n                LOG.debug(Messages.get().key(Messages.LOG_INDEXING_0));\n            }    \n        }\n\n        if (documentFactory != null) {\n            try {\n\n                if (DEBUG && LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().key(Messages.LOG_CREATING_INDEX_DOC_0));\n                }\n\n                Document doc = documentFactory.newInstance(m_cms, m_res, m_index.getLocale());\n                if (doc == null) {\n                    throw new CmsIndexException(Messages.get().container(Messages.ERR_CREATING_INDEX_DOC_0));\n                }\n\n                if (DEBUG && LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().key(Messages.LOG_WRITING_INDEX_TO_WRITER_1, ((m_writer != null) ? m_writer.toString() : \"null\")));\n                }\n\n                if (!isInterrupted()) {\n                    m_writer.addDocument(doc);\n                }\n\n                if (m_report != null && !isInterrupted()) {\n                    m_report.println(Messages.get().container(\n                        Messages.RPT_SEARCH_INDEXING_FILE_END_0), I_CmsReport.C_FORMAT_OK);\n                    if (DEBUG && LOG.isDebugEnabled()) {\n                        LOG.debug(Messages.get().key(Messages.LOG_WRITE_SUCCESS_0));\n                    }\n                }\n\n                if (isInterrupted() && LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().key(Messages.LOG_ABANDONED_THREAD_FINISHED_1, m_res.getRootPath()));\n                }\n\n            } catch (Exception exc) {\n\n                if (m_report != null) {\n                    m_report.println();\n                    m_report.print(Messages.get().container(\n                        Messages.RPT_SEARCH_INDEXING_FILE_FAILED_0), I_CmsReport.C_FORMAT_WARNING);\n                    m_report.println(exc);\n                    \n                }\n                if (LOG.isWarnEnabled()) {\n                    LOG.warn(Messages.get().key(Messages.LOG_INDEX_FAILED_1, m_res.getRootPath()), exc);\n                }\n            }\n        } else {\n\n            if (m_report != null) {\n                m_report.println(Messages.get().container(\n                    Messages.RPT_SEARCH_INDEXING_FILE_SKIPPED_0), I_CmsReport.C_FORMAT_NOTE);\n            }\n\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(Messages.get().key(Messages.LOG_SKIPPED_1, m_res.getRootPath()));\n            }    \n            \n        }\n\n        m_threadManager.finished();\n    }","commit_id":"8ed5b8a2f10937ae946f8ff48c609b753affa44d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates and starts a new indexing thread for a resource.<p>\n     * \n     * After an indexing thread was started, the manager suspends itself \n     * and waits for an amount of time specified by the <code>timeout<\/code>\n     * value. If the timeout value is reached, the indexing thread is\n     * aborted by an interrupt signal.\n     * \n     * @param cms the cms object\n     * @param writer the write to write the index\n     * @param res the resource\n     * @param index the index\n     */\n    public void createIndexingThread(CmsObject cms, IndexWriter writer, A_CmsIndexResource res, CmsSearchIndex index) {\n\n        CmsIndexingThread thread = new CmsIndexingThread(cms, writer, res, index, m_report, this);\n\n        try {\n            m_fileCounter++;\n            thread.start();\n            thread.join(m_timeout);\n\n            if (thread.isAlive()) {\n\n                if (LOG.isWarnEnabled()) {\n                    LOG.warn(Messages.get().key(Messages.LOG_INDEXING_TIMEOUT_1, res.getRootPath()));\n                }    \n\n                m_report.println();\n                m_report.println(m_report.key(\"search.indexing_file_failed\")\n                    + \" : \"\n                    + \"Timeout while indexing file \"\n                    + res.getRootPath()\n                    + \", abandoning thread\", I_CmsReport.C_FORMAT_WARNING);\n\n                m_abandonedCounter++;\n                thread.interrupt();\n            }\n        } catch (InterruptedException exc) {\n            // noop\n        }\n    }","id":107291,"modified_method":"/**\n     * Creates and starts a new indexing thread for a resource.<p>\n     * \n     * After an indexing thread was started, the manager suspends itself \n     * and waits for an amount of time specified by the <code>timeout<\/code>\n     * value. If the timeout value is reached, the indexing thread is\n     * aborted by an interrupt signal.\n     * \n     * @param cms the cms object\n     * @param writer the write to write the index\n     * @param res the resource\n     * @param index the index\n     */\n    public void createIndexingThread(\n        CmsObject cms,\n        IndexWriter writer,\n        A_CmsIndexResource res,\n        CmsSearchIndex index) {\n\n        CmsIndexingThread thread = new CmsIndexingThread(cms, writer, res, index, m_report, this);\n\n        try {\n            m_fileCounter++;\n            thread.start();\n            thread.join(m_timeout);\n\n            if (thread.isAlive()) {\n\n                if (LOG.isWarnEnabled()) {\n                    LOG.warn(Messages.get().key(\n                        Messages.LOG_INDEXING_TIMEOUT_1, res.getRootPath()));\n                }\n\n                m_report.println();\n                m_report.print(\n                    Messages.get().container(Messages.RPT_SEARCH_INDEXING_FILE_FAILED_0),\n                    I_CmsReport.C_FORMAT_WARNING);\n                m_report.println(Messages.get().container(\n                    Messages.RPT_SEARCH_INDEXING_TIMEOUT_1,\n                    res.getRootPath()), I_CmsReport.C_FORMAT_WARNING);\n\n                m_abandonedCounter++;\n                thread.interrupt();\n            }\n        } catch (InterruptedException exc) {\n            // noop\n        }\n    }","commit_id":"8ed5b8a2f10937ae946f8ff48c609b753affa44d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Writes statistical information to the report.<p>\n     * \n     * The method reports the total number of threads started\n     * (equals to the number of indexed files), the number of returned\n     * threads (equals to the number of successfully indexed files),\n     * and the number of abandoned threads (hanging threads reaching the timeout). \n     */\n    public void reportStatistics() {\n\n        StringBuffer stats = new StringBuffer();\n        stats.append(m_report.key(\"search.indexing_stats\"));\n        stats.append(m_report.key(\"search.indexing_stats_files\"));\n        stats.append(m_fileCounter + \",\");\n        stats.append(m_report.key(\"search.indexing_stats_returned\"));\n        stats.append(m_returnedCounter + \",\");\n        stats.append(m_report.key(\"search.indexing_stats_abandoned\"));\n        stats.append(m_abandonedCounter + \",\");\n        stats.append(m_report.key(\"search.indexing_stats_duration\"));\n        stats.append(m_report.formatRuntime());\n\n        if (LOG.isInfoEnabled()) {\n            LOG.info(stats.toString());\n        }\n\n        if (m_report != null) {\n\n            m_report.println(m_report.key(\"search.indexing_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n            m_report.println(stats.toString());\n        }\n    }","id":107292,"modified_method":"/**\n     * Writes statistical information to the report.<p>\n     * \n     * The method reports the total number of threads started\n     * (equals to the number of indexed files), the number of returned\n     * threads (equals to the number of successfully indexed files),\n     * and the number of abandoned threads (hanging threads reaching the timeout). \n     */\n    public void reportStatistics() {\n\n        CmsMessageContainer message = Messages.get().container(\n            Messages.RPT_SEARCH_INDEXING_STATS_4,\n            new Object[] {\n                new Integer(m_fileCounter),\n                new Integer(m_returnedCounter),\n                new Integer(m_abandonedCounter),\n                m_report.formatRuntime()});\n        if (LOG.isInfoEnabled()) {\n            LOG.info(message.key());\n        }\n\n        if (m_report != null) {\n\n            m_report.println(\n                Messages.get().container(Messages.RPT_SEARCH_INDEXING_END_0),\n                I_CmsReport.C_FORMAT_HEADLINE);\n            m_report.println(message);\n        }\n    }","commit_id":"8ed5b8a2f10937ae946f8ff48c609b753affa44d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Updates (if required creates) the index with the given name.<p>\n     * \n     * @param indexName the name of the index to update\n     * @param report the report object to write messages or null\n     * @param wait flag signals to wait until the indexing threads are finished or not\n     * \n     * @throws CmsException is something goes wrong\n     */\n    public void updateIndex(String indexName, I_CmsReport report, boolean wait) throws CmsException {\n\n        CmsSearchIndex index = null;\n        CmsSearchIndexSource indexSource = null;\n        List sourceNames = null;\n        String sourceName = null;\n        CmsIndexingThreadManager threadManager = null;\n        I_CmsIndexer indexer = null;\n        List resourceNames = null;\n        String resourceName = null;\n        IndexWriter writer = null;\n        String currentSiteRoot = null;\n        CmsProject currentProject = null;\n        CmsRequestContext context = m_cms.getRequestContext();\n\n        if (report == null) {\n            report = new CmsLogReport();\n        }\n\n        if (report != null) {\n            report.print(report.key(\"search.indexing_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n            report.print(indexName, I_CmsReport.C_FORMAT_HEADLINE);\n            report.println(report.key(\"search.dots\"), I_CmsReport.C_FORMAT_HEADLINE);\n        }\n\n        // get the search index by name\n        index = getIndex(indexName);\n\n        // create a new index writer\n        writer = index.getIndexWriter();\n\n        // iterate over all search index sources of this search index\n        sourceNames = index.getSourceNames();\n        for (int i = 0, n = sourceNames.size(); i < n; i++) {\n            try {\n                // get the search index source\n                sourceName = (String)sourceNames.get(i);\n                indexSource = (CmsSearchIndexSource)m_indexSources.get(sourceName);\n\n                // save the current site root\n                currentSiteRoot = context.getSiteRoot();\n                // switch to the \"/\" root site\n                context.setSiteRoot(\"/\");\n\n                // save the current project\n                currentProject = context.currentProject();\n                // switch to the configured project\n                context.setCurrentProject(m_cms.readProject(index.getProject()));\n\n                // create a new thread manager\n                threadManager = new CmsIndexingThreadManager(report, Long.parseLong(m_timeout), indexName);\n\n                // create an instance of the configured indexer class\n                indexer = (I_CmsIndexer)Class.forName(indexSource.getIndexerClassName()).newInstance();\n\n                resourceNames = indexSource.getResourcesNames();\n                for (int j = 0, m = resourceNames.size(); j < m; j++) {\n                    resourceName = (String)resourceNames.get(j);\n\n                    // update the index\n                    indexer.init(report, index, indexSource, writer, threadManager);\n                    indexer.updateIndex(m_cms, indexSource.getName(), resourceName);\n                }\n\n                // wait for indexing threads to finish\n                while (wait && threadManager.isRunning()) {\n                    Thread.sleep(1000);\n                }\n\n                // optimize the generated index\n                writer.optimize();\n\n                threadManager.reportStatistics();\n            } catch (Exception e) {\n                if (report != null) {\n                    report.println(report.key(\"search.indexing_failed\"), I_CmsReport.C_FORMAT_WARNING);\n                }\n\n                LOG.error(Messages.get().key(Messages.LOG_REBUILD_INDEX_FAILED_1, index.getName()), e);\n                \n                \n            } finally {\n                if (writer != null) {\n                    try {\n                        writer.close();\n                    } catch (IOException e) {\n                        if (LOG.isDebugEnabled()) {\n                            LOG.debug(Messages.get().key(Messages.LOG_CLOSE_INDEX_WRITER_FAILED_0), e);\n                        }   \n                    }\n                }\n\n                // switch back to the original project\n                context.setCurrentProject(currentProject);\n                if (currentSiteRoot != null) {\n                    // switch back to the original site root\n                    context.setSiteRoot(currentSiteRoot);\n                }\n            }\n        }\n\n        // clear the cache for search results\n        m_resultCache.clear();\n    }","id":107293,"modified_method":"/**\n     * Updates (if required creates) the index with the given name.<p>\n     * \n     * @param indexName the name of the index to update\n     * @param report the report object to write messages or null\n     * @param wait flag signals to wait until the indexing threads are finished or not\n     * \n     * @throws CmsException is something goes wrong\n     */\n    public void updateIndex(String indexName, I_CmsReport report, boolean wait) throws CmsException {\n\n        CmsSearchIndex index = null;\n        CmsSearchIndexSource indexSource = null;\n        List sourceNames = null;\n        String sourceName = null;\n        CmsIndexingThreadManager threadManager = null;\n        I_CmsIndexer indexer = null;\n        List resourceNames = null;\n        String resourceName = null;\n        IndexWriter writer = null;\n        String currentSiteRoot = null;\n        CmsProject currentProject = null;\n        CmsRequestContext context = m_cms.getRequestContext();\n\n        if (report == null) {\n            report = new CmsLogReport();\n        }\n\n        if (report != null) {\n            \n            report.print(\n                Messages.get().container(Messages.RPT_SEARCH_INDEXING_BEGIN_0),\n                I_CmsReport.C_FORMAT_HEADLINE);\n            report.print(indexName, I_CmsReport.C_FORMAT_HEADLINE);\n            report.println(org.opencms.report.Messages.get().container(\n                org.opencms.report.Messages.RPT_DOTS_0), I_CmsReport.C_FORMAT_HEADLINE);\n        }\n\n        // get the search index by name\n        index = getIndex(indexName);\n\n        // create a new index writer\n        writer = index.getIndexWriter();\n\n        // iterate over all search index sources of this search index\n        sourceNames = index.getSourceNames();\n        for (int i = 0, n = sourceNames.size(); i < n; i++) {\n            try {\n                // get the search index source\n                sourceName = (String)sourceNames.get(i);\n                indexSource = (CmsSearchIndexSource)m_indexSources.get(sourceName);\n\n                // save the current site root\n                currentSiteRoot = context.getSiteRoot();\n                // switch to the \"/\" root site\n                context.setSiteRoot(\"/\");\n\n                // save the current project\n                currentProject = context.currentProject();\n                // switch to the configured project\n                context.setCurrentProject(m_cms.readProject(index.getProject()));\n\n                // create a new thread manager\n                threadManager = new CmsIndexingThreadManager(report, Long.parseLong(m_timeout), indexName);\n\n                // create an instance of the configured indexer class\n                indexer = (I_CmsIndexer)Class.forName(indexSource.getIndexerClassName()).newInstance();\n\n                resourceNames = indexSource.getResourcesNames();\n                for (int j = 0, m = resourceNames.size(); j < m; j++) {\n                    resourceName = (String)resourceNames.get(j);\n\n                    // update the index\n                    indexer.init(report, index, indexSource, writer, threadManager);\n                    indexer.updateIndex(m_cms, indexSource.getName(), resourceName);\n                }\n\n                // wait for indexing threads to finish\n                while (wait && threadManager.isRunning()) {\n                    Thread.sleep(1000);\n                }\n\n                // optimize the generated index\n                writer.optimize();\n\n                threadManager.reportStatistics();\n            } catch (Exception e) {\n                if (report != null) {\n                    report.println(\n                        Messages.get().container(Messages.RPT_SEARCH_INDEXING_FAILED_0),\n                        I_CmsReport.C_FORMAT_WARNING);\n                }\n\n                LOG.error(\n                    Messages.get().key(Messages.LOG_REBUILD_INDEX_FAILED_1, index.getName()),\n                    e);\n                \n                \n            } finally {\n                if (writer != null) {\n                    try {\n                        writer.close();\n                    } catch (IOException e) {\n                        if (LOG.isDebugEnabled()) {\n                            LOG.debug(\n                                Messages.get().key(Messages.LOG_CLOSE_INDEX_WRITER_FAILED_0),\n                                e);\n                        }   \n                    }\n                }\n\n                // switch back to the original project\n                context.setCurrentProject(currentProject);\n                if (currentSiteRoot != null) {\n                    // switch back to the original site root\n                    context.setSiteRoot(currentSiteRoot);\n                }\n            }\n        }\n\n        // clear the cache for search results\n        m_resultCache.clear();\n    }","commit_id":"8ed5b8a2f10937ae946f8ff48c609b753affa44d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.search.I_CmsIndexer#updateIndex(CmsObject, java.lang.String, java.lang.String)\n     */\n    public void updateIndex(CmsObject cms, String source, String path) throws CmsIndexException {\n\n        boolean folderReported = false;\n        List resources = null;\n        CmsResource res = null;\n\n        try {\n            if (CmsResource.isFolder(path)) {\n                resources = cms.getResourcesInFolder(path, CmsResourceFilter.DEFAULT);\n            } else {\n                resources = Collections.EMPTY_LIST;\n            }\n\n            for (int i = 0; i < resources.size(); i++) {\n\n                res = (CmsResource)resources.get(i);\n\n                if (!res.isInternal()) {\n                    // we only have to index those resources that are not marked as internal\n                    if (res instanceof CmsFolder) {\n                        updateIndex(cms, source, cms.getRequestContext().removeSiteRoot(res.getRootPath()));\n                        continue;\n                    }\n\n                    if (m_report != null && !folderReported) {\n                        m_report.print(m_report.key(\"search.indexing_folder\"), I_CmsReport.C_FORMAT_NOTE);\n                        m_report.println(path, I_CmsReport.C_FORMAT_DEFAULT);\n                        folderReported = true;\n                    }\n\n                    if (m_report != null) {\n                        m_report.print(\"( \" + (m_threadManager.getCounter() + 1) + \" ) \", I_CmsReport.C_FORMAT_NOTE);\n                        m_report.print(m_report.key(\"search.indexing_file_begin\"), I_CmsReport.C_FORMAT_NOTE);\n                        m_report.print(res.getName(), I_CmsReport.C_FORMAT_DEFAULT);\n                        m_report.print(m_report.key(\"search.dots\"), I_CmsReport.C_FORMAT_DEFAULT);\n                    }\n\n                    A_CmsIndexResource ires = new CmsVfsIndexResource(res);\n                    m_threadManager.createIndexingThread(cms, m_writer, ires, m_index);\n                }\n            }\n\n        } catch (CmsIndexException exc) {\n\n            if (m_report != null) {\n                m_report.println();\n                m_report.println(\n                    m_report.key(\"search.indexing_file_failed\") + \" : \" + exc.getMessage(),\n                    I_CmsReport.C_FORMAT_WARNING);\n            }\n            if (LOG.isWarnEnabled()) {\n                LOG.warn(Messages.get().key(Messages.LOG_INDEXING_PATH_FAILED_1, path), exc);\n            } \n\n        } catch (CmsException exc) {\n\n            if (m_report != null) {\n                m_report.println(m_report.key(\"search.indexing_folder\")\n                    + path\n                    + m_report.key(\"search.indexing_folder_failed\")\n                    + \" : \"\n                    + exc.getMessage(), I_CmsReport.C_FORMAT_WARNING);\n            }\n            if (LOG.isWarnEnabled()) {\n                LOG.warn(Messages.get().key(Messages.LOG_INDEXING_PATH_FAILED_1, path), exc);\n            } \n\n        } catch (Exception exc) {\n\n            if (m_report != null) {\n                m_report.println(m_report.key(\"search.indexing_folder_failed\"), I_CmsReport.C_FORMAT_WARNING);\n            }\n            if (LOG.isWarnEnabled()) {\n                LOG.warn(Messages.get().key(Messages.LOG_INDEXING_PATH_FAILED_1, path), exc);\n            } \n\n            throw new CmsIndexException(Messages.get().container(Messages.LOG_INDEXING_FAILED_1));\n            \n        }\n    }","id":107294,"modified_method":"/**\n     * @see org.opencms.search.I_CmsIndexer#updateIndex(CmsObject, java.lang.String, java.lang.String)\n     */\n    public void updateIndex(CmsObject cms, String source, String path) throws CmsIndexException {\n\n        boolean folderReported = false;\n        List resources = null;\n        CmsResource res = null;\n\n        try {\n            if (CmsResource.isFolder(path)) {\n                resources = cms.getResourcesInFolder(path, CmsResourceFilter.DEFAULT);\n            } else {\n                resources = Collections.EMPTY_LIST;\n            }\n\n            for (int i = 0; i < resources.size(); i++) {\n\n                res = (CmsResource)resources.get(i);\n\n                if (!res.isInternal()) {\n                    // we only have to index those resources that are not marked as internal\n                    if (res instanceof CmsFolder) {\n                        updateIndex(cms, source, cms.getRequestContext().removeSiteRoot(res.getRootPath()));\n                        continue;\n                    }\n\n                    if (m_report != null && !folderReported) {\n                        m_report.print(Messages.get().container(Messages.RPT_SEARCH_INDEXING_FOLDER_0), I_CmsReport.C_FORMAT_NOTE);\n                        m_report.println(path, I_CmsReport.C_FORMAT_DEFAULT);\n                        folderReported = true;\n                    }\n\n                    if (m_report != null) {\n                        m_report.print(\n                            org.opencms.report.Messages.get().container(\n                                org.opencms.report.Messages.RPT_SUCCESSION_1,\n                                new Integer(m_threadManager.getCounter() + 1)),\n                            I_CmsReport.C_FORMAT_NOTE);\n                        m_report.print(Messages.get().container(\n                            Messages.RPT_SEARCH_INDEXING_FILE_BEGIN_0), I_CmsReport.C_FORMAT_NOTE);\n                        m_report.print(res.getName(), I_CmsReport.C_FORMAT_DEFAULT);\n                        m_report.print(org.opencms.report.Messages.get().container(\n                            org.opencms.report.Messages.RPT_DOTS_0), I_CmsReport.C_FORMAT_DEFAULT);\n                    }\n\n                    A_CmsIndexResource ires = new CmsVfsIndexResource(res);\n                    m_threadManager.createIndexingThread(cms, m_writer, ires, m_index);\n                }\n            }\n\n        } catch (CmsIndexException exc) {\n\n            if (m_report != null) {\n                m_report.println();\n                m_report.print(Messages.get().container(Messages.RPT_SEARCH_INDEXING_FILE_FAILED_0));\n                m_report.println(exc);\n            }\n            if (LOG.isWarnEnabled()) {\n                LOG.warn(Messages.get().key(Messages.LOG_INDEXING_PATH_FAILED_1, path), exc);\n            } \n\n        } catch (CmsException exc) {\n\n            if (m_report != null) {\n                m_report.println(Messages.get().container(\n                    Messages.RPT_SEARCH_INDEXING_FOLDER_FAILED_2,\n                    path,\n                    exc.getLocalizedMessage()), I_CmsReport.C_FORMAT_WARNING);\n            }\n            if (LOG.isWarnEnabled()) {\n                LOG.warn(Messages.get().key(Messages.LOG_INDEXING_PATH_FAILED_1, path), exc);\n            } \n\n        } catch (Exception exc) {\n\n            if (m_report != null) {\n                m_report.println(\n                    Messages.get().container(Messages.RPT_SEARCH_INDEXING_FOLDER_0),\n                    I_CmsReport.C_FORMAT_WARNING);\n            }\n            if (LOG.isWarnEnabled()) {\n                LOG.warn(Messages.get().key(Messages.LOG_INDEXING_PATH_FAILED_1, path), exc);\n            } \n\n            throw new CmsIndexException(Messages.get().container(Messages.LOG_INDEXING_FAILED_1));\n            \n        }\n    }","commit_id":"8ed5b8a2f10937ae946f8ff48c609b753affa44d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.importexport.I_CmsImportExportHandler#exportData(org.opencms.file.CmsObject, org.opencms.report.I_CmsReport)\n     */\n    public void exportData(CmsObject cms, I_CmsReport report) throws CmsConfigurationException, CmsImportExportException, CmsRoleViolationException {\n        \n        // check if the user has the required permissions\n        cms.checkRole(CmsRole.MODULE_MANAGER);\n        \n        report.print(report.key(\"report.export_module_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n        if (report instanceof CmsHtmlReport) {\n            report.println(\" <i>\" + getModuleName() + \"<\/i>\", I_CmsReport.C_FORMAT_HEADLINE);\n        } else {\n            report.println(\" \" + getModuleName(), I_CmsReport.C_FORMAT_HEADLINE);\n        }\n                        \n        if (! OpenCms.getModuleManager().hasModule(getModuleName())) {\n            // module not available\n            throw new CmsConfigurationException(Messages.get().container(Messages.ERR_NO_MOD_FOR_EXPORT_1, getModuleName()));\n        }\n        \n        // generate module XML\n        CmsModule module = OpenCms.getModuleManager().getModule(getModuleName());\n        if (! module.getVersion().isUpdated()) {\n            // increment version number if not recently updated\n            module.getVersion().increment();\n        }\n        // reset update status so that all following exports auto-increment the number\n        module.getVersion().setUpdated(false);\n        Element moduleElement = CmsModuleXmlHandler.generateXml(module);\n\n        // export the module using the standard export        \n        new CmsExport(cms, getFileName(), getAdditionalResources(), false, false, moduleElement, false, 0, report);\n        \n        report.println(report.key(\"report.export_module_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n    }","id":107295,"modified_method":"/**\n     * @see org.opencms.importexport.I_CmsImportExportHandler#exportData(org.opencms.file.CmsObject, org.opencms.report.I_CmsReport)\n     */\n    public void exportData(CmsObject cms, I_CmsReport report) throws CmsConfigurationException, CmsImportExportException, CmsRoleViolationException {\n        \n        // check if the user has the required permissions\n        cms.checkRole(CmsRole.MODULE_MANAGER);\n                        \n        report.print(Messages.get().container(Messages.RPT_EXPORT_MODULE_BEGIN_0), I_CmsReport.C_FORMAT_HEADLINE);\n        if (report instanceof CmsHtmlReport) {\n            report.print(org.opencms.report.Messages.get().container(\n                org.opencms.report.Messages.RPT_ARGUMENT_1, getModuleName()));\n        } else {\n            report.print(org.opencms.report.Messages.get().container(\n                org.opencms.report.Messages.RPT_ARGUMENT_1, \"<i>\" + getModuleName() + \"<\/i>\"));\n        }\n        report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));\n        \n        if (! OpenCms.getModuleManager().hasModule(getModuleName())) {\n            // module not available\n            throw new CmsConfigurationException(Messages.get().container(Messages.ERR_NO_MOD_FOR_EXPORT_1, getModuleName()));\n        }\n        \n        // generate module XML\n        CmsModule module = OpenCms.getModuleManager().getModule(getModuleName());\n        if (! module.getVersion().isUpdated()) {\n            // increment version number if not recently updated\n            module.getVersion().increment();\n        }\n        // reset update status so that all following exports auto-increment the number\n        module.getVersion().setUpdated(false);\n        Element moduleElement = CmsModuleXmlHandler.generateXml(module);\n\n        // export the module using the standard export        \n        new CmsExport(cms, getFileName(), getAdditionalResources(), false, false, moduleElement, false, 0, report);\n        \n        report.println(Messages.get().container(Messages.RPT_EXPORT_MODULE_END_0), I_CmsReport.C_FORMAT_HEADLINE);\n    }","commit_id":"0dbb2228ca9e11ea34f73249fbcf1b45f8d3b903","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.importexport.I_CmsImportExportHandler#importData(org.opencms.file.CmsObject, java.lang.String, java.lang.String, org.opencms.report.I_CmsReport)\n     */\n    public synchronized void importData(CmsObject cms, String importFile, String importPath, I_CmsReport report) \n    throws CmsXmlException, CmsImportExportException, CmsRoleViolationException {\n        \n        CmsProject previousProject = cms.getRequestContext().currentProject();\n        try {\n            \n            CmsProject importProject = null;\n            \n            try {\n                cms.getRequestContext().saveSiteRoot();\n                cms.getRequestContext().setSiteRoot(\"/\");\n\n                try {\n                    // try to read a (leftover) module import project\n                    importProject = cms.readProject(C_IMPORT_MODULE_PROJECT_NAME);\n                } catch (CmsException e) {\n                    // create a Project to import the module\n                    importProject = cms.createProject(C_IMPORT_MODULE_PROJECT_NAME, \"A System generated project to import the module \" + getModuleName(), OpenCms.getDefaultUsers().getGroupAdministrators(), OpenCms.getDefaultUsers().getGroupAdministrators(), I_CmsConstants.C_PROJECT_TYPE_TEMPORARY);\n                }\n                \n                cms.getRequestContext().setCurrentProject(importProject);\n\n                // copy the root folder to the project\n                cms.copyResourceToProject(\"/\");\n            } finally {\n                cms.getRequestContext().restoreSiteRoot();\n            }\n\n            importFile = importFile.replace('\\\\', '/');\n            String moduleZipName = importFile.substring(importFile.lastIndexOf('/') + 1);\n            String modulePackageName;\n            \n            if (moduleZipName.toLowerCase().endsWith(\".zip\")) {\n                modulePackageName = moduleZipName.substring(0, moduleZipName.lastIndexOf('.'));\n                int pos = modulePackageName.lastIndexOf('_');\n                if (pos > 0) {\n                    modulePackageName = modulePackageName.substring(0, pos);\n                }\n            } else {\n                modulePackageName = moduleZipName;\n            }\n            \n            report.print(report.key(\"report.import_module_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n            if (report instanceof CmsHtmlReport) {\n                report.println(\" <i>\" + modulePackageName + \"<\/i>\", I_CmsReport.C_FORMAT_HEADLINE);\n            } else {\n                report.println(\" \" + modulePackageName, I_CmsReport.C_FORMAT_HEADLINE);\n            }\n\n            importModule(cms, importFile, report);\n\n            report.println(report.key(\"report.publish_project_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n            // now unlock and publish the project\n            cms.unlockProject(importProject.getId());\n            cms.publishProject(report);\n\n            report.println(report.key(\"report.publish_project_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n            report.println(report.key(\"report.import_module_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n        } catch (CmsXmlException e) {\n            \n            throw e;\n        } catch (CmsImportExportException e) {\n            \n            throw e;\n        } catch (CmsRoleViolationException e) {\n            \n            throw e;\n        } catch (CmsException e) {\n            \n            int todo = 0;\n            // remove this catch clause (and the 3 Cms* clauses above) \n            // once the package org.opencms.module is correct localized\n            \n            CmsMessageContainer message = Messages.get().container(Messages.ERR_MODULE_IMPORTING_MODULE_1, importFile);\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(message, e);\n            }\n            \n            throw new CmsImportExportException(message, e);\n        } finally {\n            cms.getRequestContext().setCurrentProject(previousProject);\n        }\n    }","id":107296,"modified_method":"/**\n     * @see org.opencms.importexport.I_CmsImportExportHandler#importData(org.opencms.file.CmsObject, java.lang.String, java.lang.String, org.opencms.report.I_CmsReport)\n     */\n    public synchronized void importData(CmsObject cms, String importFile, String importPath, I_CmsReport report) \n    throws CmsXmlException, CmsImportExportException, CmsRoleViolationException {\n        \n        CmsProject previousProject = cms.getRequestContext().currentProject();\n        try {\n            \n            CmsProject importProject = null;\n            \n            try {\n                cms.getRequestContext().saveSiteRoot();\n                cms.getRequestContext().setSiteRoot(\"/\");\n\n                try {\n                    // try to read a (leftover) module import project\n                    importProject = cms.readProject(C_IMPORT_MODULE_PROJECT_NAME);\n                } catch (CmsException e) {\n                    // create a Project to import the module\n                    importProject = cms.createProject(C_IMPORT_MODULE_PROJECT_NAME, \"A System generated project to import the module \" + getModuleName(), OpenCms.getDefaultUsers().getGroupAdministrators(), OpenCms.getDefaultUsers().getGroupAdministrators(), I_CmsConstants.C_PROJECT_TYPE_TEMPORARY);\n                }\n                \n                cms.getRequestContext().setCurrentProject(importProject);\n\n                // copy the root folder to the project\n                cms.copyResourceToProject(\"/\");\n            } finally {\n                cms.getRequestContext().restoreSiteRoot();\n            }\n\n            importFile = importFile.replace('\\\\', '/');\n            String moduleZipName = importFile.substring(importFile.lastIndexOf('/') + 1);\n            String modulePackageName;\n            \n            if (moduleZipName.toLowerCase().endsWith(\".zip\")) {\n                modulePackageName = moduleZipName.substring(0, moduleZipName.lastIndexOf('.'));\n                int pos = modulePackageName.lastIndexOf('_');\n                if (pos > 0) {\n                    modulePackageName = modulePackageName.substring(0, pos);\n                }\n            } else {\n                modulePackageName = moduleZipName;\n            }\n            \n            report.print(Messages.get().container(Messages.RPT_EXPORT_MODULE_BEGIN_0), I_CmsReport.C_FORMAT_HEADLINE);\n            if (report instanceof CmsHtmlReport) {\n                report.print(org.opencms.report.Messages.get().container(\n                    org.opencms.report.Messages.RPT_ARGUMENT_1, modulePackageName));\n            } else {\n                report.print(org.opencms.report.Messages.get().container(\n                    org.opencms.report.Messages.RPT_ARGUMENT_1, \"<i>\" + modulePackageName + \"<\/i>\"));\n            }\n            report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));\n            \n            importModule(cms, importFile, report);\n            \n            report.println(Messages.get().container(Messages.RPT_PUBLISH_PROJECT_BEGIN_0), I_CmsReport.C_FORMAT_HEADLINE);\n            // now unlock and publish the project\n            cms.unlockProject(importProject.getId());\n            cms.publishProject(report);\n\n            report.println(Messages.get().container(Messages.RPT_PUBLISH_PROJECT_END_0), I_CmsReport.C_FORMAT_HEADLINE);\n            report.println(Messages.get().container(Messages.RPT_IMPORT_MODULE_END_0), I_CmsReport.C_FORMAT_HEADLINE);\n        } catch (CmsXmlException e) {\n            \n            throw e;\n        } catch (CmsImportExportException e) {\n            \n            throw e;\n        } catch (CmsRoleViolationException e) {\n            \n            throw e;\n        } catch (CmsException e) {\n            \n            int todo = 0;\n            // remove this catch clause (and the 3 Cms* clauses above) \n            // once the package org.opencms.module is correct localized\n            \n            CmsMessageContainer message = Messages.get().container(Messages.ERR_MODULE_IMPORTING_MODULE_1, importFile);\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(message, e);\n            }\n            \n            throw new CmsImportExportException(message, e);\n        } finally {\n            cms.getRequestContext().setCurrentProject(previousProject);\n        }\n    }","commit_id":"0dbb2228ca9e11ea34f73249fbcf1b45f8d3b903","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Deletes a module from the configuration.<p>\n     * \n     * @param cms must be initialized with \"Admin\" permissions \n     * @param moduleName the name of the module to delete\n     * @param replace indicates if the module is replaced (true) or finally deleted (false)\n     * @param report the report to print progesss messages to\n     * \n     * @throws CmsRoleViolationException if the required module manager role permissions are not available \n     * @throws CmsConfigurationException if a module with this name is not available for deleting\n     */\n    public synchronized void deleteModule(CmsObject cms, String moduleName, boolean replace, I_CmsReport report)\n    throws CmsRoleViolationException, CmsConfigurationException {\n\n        // check for module manager role permissions\n        cms.checkRole(CmsRole.MODULE_MANAGER);\n\n        if (!m_modules.containsKey(moduleName)) {\n            // module is not currently configured, no update possible\n            throw new CmsConfigurationException(Messages.get().container(Messages.ERR_MODULE_NOT_CONFIGURED_1, moduleName));\n        }\n\n        if (LOG.isInfoEnabled()) {\n            LOG.info(Messages.get().key(\n                Messages.LOG_DEL_MOD_1, moduleName));\n        }\n\n        CmsModule module;\n        boolean removeResourceTypes = false;\n\n        if (!replace) {\n            // module is deleted, not replaced\n            module = (CmsModule)m_modules.get(moduleName);\n            // makr the resource manager to reinitialize if nescessary\n            if (module.getResourceTypes() != Collections.EMPTY_LIST) {\n                removeResourceTypes = true;\n            }\n            if (module.getExplorerTypes() != Collections.EMPTY_LIST) {\n                OpenCms.getWorkplaceManager().removeExplorerTypeSettings(module.getExplorerTypes());\n            }\n\n            // perform dependency check\n            List dependencies = checkDependencies(module, C_DEPENDENCY_MODE_DELETE);\n            if (!dependencies.isEmpty()) {\n                throw new CmsConfigurationException(Messages.get().container(\n                    Messages.ERR_MOD_DEPENDENCIES_0));                \n            }\n            try {\n                I_CmsModuleAction moduleAction = (I_CmsModuleAction)m_moduleActionInstances.get(moduleName);\n                // handle module action instance if initialized\n                if (moduleAction != null) {\n                    moduleAction.moduleUninstall(module);\n                    // remove instance from list of configured instances\n                    m_moduleActionInstances.remove(moduleName);\n                }\n            } catch (Throwable t) {\n                LOG.error(Messages.get().key(\n                    Messages.LOG_MOD_UNINSTALL_ERR_1, moduleName), t);\n            }\n        }\n\n        // now remove the module\n        module = (CmsModule)m_modules.remove(moduleName);\n\n        // move through all module resources and delete them\n        for (int i = 0; i < module.getResources().size(); i++) {\n            String currentResource = null;\n            try {\n                currentResource = (String)module.getResources().get(i);\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().key(\n                        Messages.LOG_DEL_MOD_RESOURCE_1, currentResource));\n                }\n                // lock the resource\n                cms.lockResource(currentResource);\n                // delete the resource\n                cms.deleteResource(currentResource, I_CmsConstants.C_DELETE_OPTION_PRESERVE_SIBLINGS);\n                // update the report\n                report.print(report.key(\"report.deleting\"), I_CmsReport.C_FORMAT_NOTE);\n                report.println(currentResource);\n                // unlock the resource (so it gets deleted with next publish)\n                cms.unlockResource(currentResource);\n            } catch (CmsException e) {\n                // ignore the exception and delete the next resource\n                LOG.error(Messages.get().key(\n                    Messages.LOG_DEL_MOD_EXC_1, currentResource), e);\n                report.println(e);\n            }\n        }\n\n        // initialize the export points (removes export points from deleted module)\n        initModuleExportPoints();\n\n        // update the configuration\n        updateModuleConfiguration();\n\n        // reinit the manager is nescessary\n        if (removeResourceTypes) {\n            OpenCms.getResourceManager().initialize(cms);\n        }\n    }","id":107297,"modified_method":"/**\n     * Deletes a module from the configuration.<p>\n     * \n     * @param cms must be initialized with \"Admin\" permissions \n     * @param moduleName the name of the module to delete\n     * @param replace indicates if the module is replaced (true) or finally deleted (false)\n     * @param report the report to print progesss messages to\n     * \n     * @throws CmsRoleViolationException if the required module manager role permissions are not available \n     * @throws CmsConfigurationException if a module with this name is not available for deleting\n     */\n    public synchronized void deleteModule(CmsObject cms, String moduleName, boolean replace, I_CmsReport report)\n    throws CmsRoleViolationException, CmsConfigurationException {\n\n        // check for module manager role permissions\n        cms.checkRole(CmsRole.MODULE_MANAGER);\n\n        if (!m_modules.containsKey(moduleName)) {\n            // module is not currently configured, no update possible\n            throw new CmsConfigurationException(Messages.get().container(Messages.ERR_MODULE_NOT_CONFIGURED_1, moduleName));\n        }\n\n        if (LOG.isInfoEnabled()) {\n            LOG.info(Messages.get().key(\n                Messages.LOG_DEL_MOD_1, moduleName));\n        }\n\n        CmsModule module;\n        boolean removeResourceTypes = false;\n\n        if (!replace) {\n            // module is deleted, not replaced\n            module = (CmsModule)m_modules.get(moduleName);\n            // makr the resource manager to reinitialize if nescessary\n            if (module.getResourceTypes() != Collections.EMPTY_LIST) {\n                removeResourceTypes = true;\n            }\n            if (module.getExplorerTypes() != Collections.EMPTY_LIST) {\n                OpenCms.getWorkplaceManager().removeExplorerTypeSettings(module.getExplorerTypes());\n            }\n\n            // perform dependency check\n            List dependencies = checkDependencies(module, C_DEPENDENCY_MODE_DELETE);\n            if (!dependencies.isEmpty()) {\n                throw new CmsConfigurationException(Messages.get().container(\n                    Messages.ERR_MOD_DEPENDENCIES_0));                \n            }\n            try {\n                I_CmsModuleAction moduleAction = (I_CmsModuleAction)m_moduleActionInstances.get(moduleName);\n                // handle module action instance if initialized\n                if (moduleAction != null) {\n                    moduleAction.moduleUninstall(module);\n                    // remove instance from list of configured instances\n                    m_moduleActionInstances.remove(moduleName);\n                }\n            } catch (Throwable t) {\n                LOG.error(Messages.get().key(\n                    Messages.LOG_MOD_UNINSTALL_ERR_1, moduleName), t);\n            }\n        }\n\n        // now remove the module\n        module = (CmsModule)m_modules.remove(moduleName);\n\n        // move through all module resources and delete them\n        for (int i = 0; i < module.getResources().size(); i++) {\n            String currentResource = null;\n            try {\n                currentResource = (String)module.getResources().get(i);\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().key(\n                        Messages.LOG_DEL_MOD_RESOURCE_1, currentResource));\n                }\n                // lock the resource\n                cms.lockResource(currentResource);\n                // delete the resource\n                cms.deleteResource(currentResource, I_CmsConstants.C_DELETE_OPTION_PRESERVE_SIBLINGS);\n                // update the report\n                \n                report.print(Messages.get().container(Messages.RPT_DELETE_0), I_CmsReport.C_FORMAT_NOTE);\n                report.println(currentResource);\n                // unlock the resource (so it gets deleted with next publish)\n                cms.unlockResource(currentResource);\n            } catch (CmsException e) {\n                // ignore the exception and delete the next resource\n                LOG.error(Messages.get().key(\n                    Messages.LOG_DEL_MOD_EXC_1, currentResource), e);\n                report.println(e);\n            }\n        }\n\n        // initialize the export points (removes export points from deleted module)\n        initModuleExportPoints();\n\n        // update the configuration\n        updateModuleConfiguration();\n\n        // reinit the manager is nescessary\n        if (removeResourceTypes) {\n            OpenCms.getResourceManager().initialize(cms);\n        }\n    }","commit_id":"0dbb2228ca9e11ea34f73249fbcf1b45f8d3b903","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public void insertMigratedData(int partitionId, Map<String, Map> map) {\n        for (Map.Entry<String, Map> entry : map.entrySet()) {\n            String name = entry.getKey();\n            MultiMapContainer container = getOrCreateCollectionContainer(partitionId, name);\n            Map<Data, MultiMapWrapper> collections = entry.getValue();\n            container.getMultiMapWrappers().putAll(collections);\n        }\n    }","id":107298,"modified_method":"public void insertMigratedData(int partitionId, Map<String, Map> map) {\n        for (Map.Entry<String, Map> entry : map.entrySet()) {\n            String name = entry.getKey();\n            MultiMapContainer container = getOrCreateCollectionContainer(partitionId, name);\n            Map<Data, MultiMapWrapper> collections = entry.getValue();\n            long maxRecordId = -1;\n            for (Map.Entry<Data, MultiMapWrapper> wrapperEntry : collections.entrySet()) {\n                MultiMapWrapper wrapper = wrapperEntry.getValue();\n                container.getMultiMapWrappers().put(wrapperEntry.getKey(), wrapper);\n                long wrapperMaxRecordId = getMaxRecordId(wrapper);\n                maxRecordId = Math.max(maxRecordId, wrapperMaxRecordId);\n            }\n            container.setId(maxRecordId);\n        }\n    }","commit_id":"8fd9a8120115e765012efa5c0e587e927872134e","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected void writeInternal(ObjectDataOutput out) throws IOException {\n        out.writeInt(map.size());\n        for (Map.Entry<String, Map> entry : map.entrySet()) {\n            String name = entry.getKey();\n            out.writeUTF(name);\n\n            Map<Data, MultiMapWrapper> collections = entry.getValue();\n            out.writeInt(collections.size());\n            for (Map.Entry<Data, MultiMapWrapper> collectionEntry : collections.entrySet()) {\n                Data key = collectionEntry.getKey();\n                key.writeData(out);\n                MultiMapWrapper wrapper = collectionEntry.getValue();\n                Collection<MultiMapRecord> coll = wrapper.getCollection();\n                out.writeInt(coll.size());\n                String collectionType = MultiMapConfig.ValueCollectionType.SET.name();\n                if (coll instanceof List){\n                    collectionType = MultiMapConfig.ValueCollectionType.LIST.name();\n                }\n                out.writeUTF(collectionType);\n                for (MultiMapRecord record : coll) {\n                    record.writeData(out);\n                }\n            }\n        }\n    }","id":107299,"modified_method":"protected void writeInternal(ObjectDataOutput out) throws IOException {\n        out.writeInt(map.size());\n        for (Map.Entry<String, Map> entry : map.entrySet()) {\n            String name = entry.getKey();\n            out.writeUTF(name);\n\n            Map<Data, MultiMapWrapper> collections = entry.getValue();\n            out.writeInt(collections.size());\n            for (Map.Entry<Data, MultiMapWrapper> collectionEntry : collections.entrySet()) {\n                Data key = collectionEntry.getKey();\n                key.writeData(out);\n                MultiMapWrapper wrapper = collectionEntry.getValue();\n                Collection<MultiMapRecord> coll = wrapper.getCollection();\n                out.writeInt(coll.size());\n                for (MultiMapRecord record : coll) {\n                    record.writeData(out);\n                }\n            }\n        }\n    }","commit_id":"c1940db7ecf6979b69552ed714184853a05e5f6a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected void readInternal(ObjectDataInput in) throws IOException {\n        int mapSize = in.readInt();\n        map = new HashMap<String, Map>(mapSize);\n        for (int i = 0; i < mapSize; i++) {\n            String name = in.readUTF();\n            int collectionSize = in.readInt();\n            Map<Data, MultiMapWrapper> collections = new HashMap<Data, MultiMapWrapper>();\n            for (int j = 0; j < collectionSize; j++) {\n                Data key = new Data();\n                key.readData(in);\n                int collSize = in.readInt();\n                String collectionType = in.readUTF();\n                Collection<MultiMapRecord> coll;\n                if (collectionType.equals(MultiMapConfig.ValueCollectionType.SET.name())){\n                    coll = new HashSet<MultiMapRecord>();\n                } else {\n                    coll = new LinkedList<MultiMapRecord>();\n                }\n                for (int k = 0; k < collSize; k++) {\n                    MultiMapRecord record = new MultiMapRecord();\n                    record.readData(in);\n                    coll.add(record);\n                }\n                collections.put(key, new MultiMapWrapper(coll));\n\n            }\n            map.put(name, collections);\n        }\n    }","id":107300,"modified_method":"protected void readInternal(ObjectDataInput in) throws IOException {\n        int mapSize = in.readInt();\n        map = new HashMap<String, Map>(mapSize);\n        for (int i = 0; i < mapSize; i++) {\n            String name = in.readUTF();\n            int collectionSize = in.readInt();\n            Map<Data, MultiMapWrapper> collections = new HashMap<Data, MultiMapWrapper>();\n            for (int j = 0; j < collectionSize; j++) {\n                Data key = new Data();\n                key.readData(in);\n                int collSize = in.readInt();\n                Collection<MultiMapRecord> coll = new LinkedList<MultiMapRecord>();\n                for (int k = 0; k < collSize; k++) {\n                    MultiMapRecord record = new MultiMapRecord();\n                    record.readData(in);\n                    coll.add(record);\n                }\n                collections.put(key, new MultiMapWrapper(coll));\n\n            }\n            map.put(name, collections);\n        }\n    }","commit_id":"c1940db7ecf6979b69552ed714184853a05e5f6a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public void insertMigratedData(int partitionId, Map<String, Map> map) {\n        for (Map.Entry<String, Map> entry : map.entrySet()) {\n            String name = entry.getKey();\n            MultiMapContainer container = getOrCreateCollectionContainer(partitionId, name);\n            Map<Data, MultiMapWrapper> collections = entry.getValue();\n            container.multiMapWrappers.putAll(collections);\n        }\n    }","id":107301,"modified_method":"public void insertMigratedData(int partitionId, Map<String, Map> map) {\n        for (Map.Entry<String, Map> entry : map.entrySet()) {\n            String name = entry.getKey();\n            MultiMapContainer container = getOrCreateCollectionContainer(partitionId, name);\n            Map<Data, MultiMapWrapper> collections = entry.getValue();\n            for (Map.Entry<Data, MultiMapWrapper> wrapperEntry : collections.entrySet()) {\n                final Data key = wrapperEntry.getKey();\n                final MultiMapWrapper wrapper = wrapperEntry.getValue();\n                Collection<MultiMapRecord> coll = wrapper.getCollection();\n                if (container.config.getValueCollectionType().equals(MultiMapConfig.ValueCollectionType.SET)){\n                    coll = new HashSet<MultiMapRecord>(wrapper.getCollection());\n                }\n                container.multiMapWrappers.put(key, new MultiMapWrapper(coll));\n            }\n        }\n    }","commit_id":"c1940db7ecf6979b69552ed714184853a05e5f6a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public void insertMigratedData(int partitionId, Map<String, Map> map) {\n        for (Map.Entry<String, Map> entry : map.entrySet()) {\n            String name = entry.getKey();\n            MultiMapContainer container = getOrCreateCollectionContainer(partitionId, name);\n            Map<Data, MultiMapWrapper> collections = entry.getValue();\n            container.getMultiMapWrappers().putAll(collections);\n        }\n    }","id":107302,"modified_method":"public void insertMigratedData(int partitionId, Map<String, Map> map) {\n        for (Map.Entry<String, Map> entry : map.entrySet()) {\n            String name = entry.getKey();\n            MultiMapContainer container = getOrCreateCollectionContainer(partitionId, name);\n            Map<Data, MultiMapWrapper> collections = entry.getValue();\n            long maxRecordId = -1;\n            for (Map.Entry<Data, MultiMapWrapper> wrapperEntry : collections.entrySet()) {\n                MultiMapWrapper wrapper = wrapperEntry.getValue();\n                container.getMultiMapWrappers().put(wrapperEntry.getKey(), wrapper);\n                long wrapperMaxRecordId = getMaxRecordId(wrapper);\n                maxRecordId = Math.max(maxRecordId, wrapperMaxRecordId);\n            }\n            container.setId(maxRecordId);\n        }\n    }","commit_id":"ad2c3fd5884236523b0b02f5d2ae481cc383e203","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void onStartup(Set<Class<?>> types, ServletContext context) throws ServletException {\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(Localizer.getMessage(MSG + \".onStartup\", context.getServletContextName()));\n        }\n\n        boolean validate = Boolean.parseBoolean(context.getInitParameter(VALIDATE));\n\n        // scan the application for TLDs\n        TldScanner scanner = new TldScanner(context, true, validate);\n        try {\n            scanner.scan();\n        } catch (IOException | SAXException e) {\n            throw new ServletException(e);\n        }\n\n        // add any listeners defined in TLDs\n        for (String listener : scanner.getListeners()) {\n            context.addListener(listener);\n        }\n\n        context.setAttribute(TldCache.SERVLET_CONTEXT_ATTRIBUTE_NAME,\n                new TldCache(scanner.getUriTldResourcePathMap(),\n                        scanner.getTldResourcePathTaglibXmlMap()));\n    }","id":107303,"modified_method":"@Override\n    public void onStartup(Set<Class<?>> types, ServletContext context) throws ServletException {\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(Localizer.getMessage(MSG + \".onStartup\", context.getServletContextName()));\n        }\n\n        boolean validate = Boolean.parseBoolean(context.getInitParameter(VALIDATE));\n\n        // scan the application for TLDs\n        TldScanner scanner = new TldScanner(context, true, validate);\n        try {\n            scanner.scan();\n        } catch (IOException | SAXException e) {\n            throw new ServletException(e);\n        }\n\n        // add any listeners defined in TLDs\n        for (String listener : scanner.getListeners()) {\n            context.addListener(listener);\n        }\n\n        context.setAttribute(TldCache.SERVLET_CONTEXT_ATTRIBUTE_NAME,\n                new TldCache(context, scanner.getUriTldResourcePathMap(),\n                        scanner.getTldResourcePathTaglibXmlMap()));\n    }","commit_id":"98ddc9cf133dd48b9b7f45b644f91f549e623d72","url":"https://github.com/apache/tomcat"},{"original_method":"protected void initServletContext(ClassLoader classLoader)\n            throws IOException, JasperException {\n        // TODO: should we use the Ant Project's log?\n        PrintWriter log = new PrintWriter(System.out);\n        URL resourceBase = new File(uriRoot).getCanonicalFile().toURI().toURL();\n\n        context = new JspCServletContext(log, resourceBase, classLoader);\n        TldScanner scanner = new TldScanner(context, true, validateXml);\n        scanner.setClassLoader(classLoader);\n\n        try {\n            scanner.scan();\n        } catch (SAXException e) {\n            throw new JasperException(e);\n        }\n        tldCache = new TldCache(scanner.getUriTldResourcePathMap(),\n                scanner.getTldResourcePathTaglibXmlMap());\n        context.setAttribute(TldCache.SERVLET_CONTEXT_ATTRIBUTE_NAME, tldCache);\n        rctxt = new JspRuntimeContext(context, this);\n        jspConfig = new JspConfig(context);\n        tagPluginManager = new TagPluginManager(context);\n    }","id":107304,"modified_method":"protected void initServletContext(ClassLoader classLoader)\n            throws IOException, JasperException {\n        // TODO: should we use the Ant Project's log?\n        PrintWriter log = new PrintWriter(System.out);\n        URL resourceBase = new File(uriRoot).getCanonicalFile().toURI().toURL();\n\n        context = new JspCServletContext(log, resourceBase, classLoader);\n        TldScanner scanner = new TldScanner(context, true, validateXml);\n        scanner.setClassLoader(classLoader);\n\n        try {\n            scanner.scan();\n        } catch (SAXException e) {\n            throw new JasperException(e);\n        }\n        tldCache = new TldCache(context, scanner.getUriTldResourcePathMap(),\n                scanner.getTldResourcePathTaglibXmlMap());\n        context.setAttribute(TldCache.SERVLET_CONTEXT_ATTRIBUTE_NAME, tldCache);\n        rctxt = new JspRuntimeContext(context, this);\n        jspConfig = new JspConfig(context);\n        tagPluginManager = new TagPluginManager(context);\n    }","commit_id":"98ddc9cf133dd48b9b7f45b644f91f549e623d72","url":"https://github.com/apache/tomcat"},{"original_method":"public TldCache(Map<String, TldResourcePath> uriTldResourcePathMap,\n            Map<TldResourcePath, TaglibXml> tldResourcePathTaglibXmlMap) {\n        this.uriTldResourcePathMap.putAll(uriTldResourcePathMap);\n        this.tldResourcePathTaglibXmlMap.putAll(tldResourcePathTaglibXmlMap);\n    }","id":107305,"modified_method":"public TldCache(ServletContext servletContext,\n            Map<String, TldResourcePath> uriTldResourcePathMap,\n            Map<TldResourcePath, TaglibXml> tldResourcePathTaglibXmlMap) {\n        this.servletContext = servletContext;\n        this.uriTldResourcePathMap.putAll(uriTldResourcePathMap);\n        for (Entry<TldResourcePath, TaglibXml> entry : tldResourcePathTaglibXmlMap.entrySet()) {\n            TldResourcePath tldResourcePath = entry.getKey();\n            long lastModified[] = getLastModified(tldResourcePath);\n            TaglibXmlCacheEntry cacheEntry = new TaglibXmlCacheEntry(\n                    entry.getValue(), lastModified[0], lastModified[1]);\n            this.tldResourcePathTaglibXmlMap.put(tldResourcePath, cacheEntry);\n        }\n        boolean validate = Boolean.parseBoolean(\n                servletContext.getInitParameter(JasperInitializer.VALIDATE));\n        tldParser = new TldParser(true, validate);\n    }","commit_id":"98ddc9cf133dd48b9b7f45b644f91f549e623d72","url":"https://github.com/apache/tomcat"},{"original_method":"public TaglibXml getTaglibXml(TldResourcePath tldResourcePath) {\n        return tldResourcePathTaglibXmlMap.get(tldResourcePath);\n    }","id":107306,"modified_method":"public TaglibXml getTaglibXml(TldResourcePath tldResourcePath) throws JasperException {\n        TaglibXmlCacheEntry cacheEntry = tldResourcePathTaglibXmlMap.get(tldResourcePath);\n        long lastModified[] = getLastModified(tldResourcePath);\n        if (lastModified[0] != cacheEntry.getWebAppPathLastModified() ||\n                lastModified[1] != cacheEntry.getEntryLastModified()) {\n            synchronized (cacheEntry) {\n                if (lastModified[0] != cacheEntry.getWebAppPathLastModified() ||\n                        lastModified[1] != cacheEntry.getEntryLastModified()) {\n                    // Re-parse TLD\n                    TaglibXml updatedTaglibXml;\n                    try {\n                        updatedTaglibXml = tldParser.parse(tldResourcePath);\n                    } catch (IOException | SAXException e) {\n                        throw new JasperException(e);\n                    }\n                    cacheEntry.setTaglibXml(updatedTaglibXml);\n                    cacheEntry.setWebAppPathLastModified(lastModified[0]);\n                    cacheEntry.setEntryLastModified(lastModified[1]);\n                }\n            }\n        }\n        return cacheEntry.getTaglibXml();\n    }","commit_id":"98ddc9cf133dd48b9b7f45b644f91f549e623d72","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * In the case we follow an elected master the new cluster state needs to have the same elected master\n     * This method checks for this and throws an exception if needed\n     */\n\n    public static void validateStateIsFromCurrentMaster(ESLogger logger, DiscoveryNodes currentNodes, ClusterState newClusterState) {\n        if (currentNodes.masterNodeId() == null) {\n            return;\n        }\n        if (!currentNodes.masterNodeId().equals(newClusterState.nodes().masterNodeId())) {\n            logger.warn(\"received a cluster state from a different master then the current one, rejecting (received {}, current {})\", newClusterState.nodes().masterNode(), currentNodes.masterNode());\n            throw new IllegalStateException(\"cluster state from a different master then the current one, rejecting (received \" + newClusterState.nodes().masterNode() + \", current \" + currentNodes.masterNode() + \")\");\n        }\n    }","id":107307,"modified_method":"/**\n     * In the case we follow an elected master the new cluster state needs to have the same elected master\n     * This method checks for this and throws an exception if needed\n     */\n\n    public static void validateStateIsFromCurrentMaster(ESLogger logger, DiscoveryNodes currentNodes, ClusterState newClusterState) {\n        if (currentNodes.masterNodeId() == null) {\n            return;\n        }\n        if (!currentNodes.masterNodeId().equals(newClusterState.nodes().masterNodeId())) {\n            logger.warn(\"received a cluster state from a different master than the current one, rejecting (received {}, current {})\", newClusterState.nodes().masterNode(), currentNodes.masterNode());\n            throw new IllegalStateException(\"cluster state from a different master than the current one, rejecting (received \" + newClusterState.nodes().masterNode() + \", current \" + currentNodes.masterNode() + \")\");\n        }\n    }","commit_id":"7d3a36b20f47572eb6d5a806e1c90f4b2c7b43fd","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testShouldIgnoreNewClusterState() {\n        ClusterName clusterName = new ClusterName(\"abc\");\n\n        DiscoveryNodes.Builder currentNodes = DiscoveryNodes.builder();\n        currentNodes.masterNodeId(\"a\");\n        DiscoveryNodes.Builder newNodes = DiscoveryNodes.builder();\n        newNodes.masterNodeId(\"a\");\n\n        ClusterState.Builder currentState = ClusterState.builder(clusterName);\n        currentState.nodes(currentNodes);\n        ClusterState.Builder newState = ClusterState.builder(clusterName);\n        newState.nodes(newNodes);\n\n        currentState.version(2);\n        newState.version(1);\n        assertTrue(\"should ignore, because new state's version is lower to current state's version\", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()));\n        currentState.version(1);\n        newState.version(1);\n        assertFalse(\"should not ignore, because new state's version is equal to current state's version\", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()));\n        currentState.version(1);\n        newState.version(2);\n        assertFalse(\"should not ignore, because new state's version is higher to current state's version\", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()));\n\n        currentNodes = DiscoveryNodes.builder();\n        currentNodes.masterNodeId(\"b\");\n        // version isn't taken into account, so randomize it to ensure this.\n        if (randomBoolean()) {\n            currentState.version(2);\n            newState.version(1);\n        } else {\n            currentState.version(1);\n            newState.version(2);\n        }\n        currentState.nodes(currentNodes);\n        try {\n            shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build());\n            fail(\"should ignore, because current state's master is not equal to new state's master\");\n        } catch (IllegalStateException e) {\n            assertThat(e.getMessage(), containsString(\"cluster state from a different master than the current one, rejecting\"));\n        }\n\n        currentNodes = DiscoveryNodes.builder();\n        currentNodes.masterNodeId(null);\n        currentState.nodes(currentNodes);\n        // version isn't taken into account, so randomize it to ensure this.\n        if (randomBoolean()) {\n            currentState.version(2);\n            newState.version(1);\n        } else {\n            currentState.version(1);\n            newState.version(2);\n        }\n        assertFalse(\"should not ignore, because current state doesn't have a master\", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()));\n    }","id":107308,"modified_method":"public void testShouldIgnoreNewClusterState() {\n        ClusterName clusterName = new ClusterName(\"abc\");\n\n        DiscoveryNodes.Builder currentNodes = DiscoveryNodes.builder();\n        currentNodes.masterNodeId(\"a\").put(new DiscoveryNode(\"a\", DummyTransportAddress.INSTANCE, Version.CURRENT));\n        ;\n        DiscoveryNodes.Builder newNodes = DiscoveryNodes.builder();\n        newNodes.masterNodeId(\"a\").put(new DiscoveryNode(\"a\", DummyTransportAddress.INSTANCE, Version.CURRENT));\n\n        ClusterState.Builder currentState = ClusterState.builder(clusterName);\n        currentState.nodes(currentNodes);\n        ClusterState.Builder newState = ClusterState.builder(clusterName);\n        newState.nodes(newNodes);\n\n        currentState.version(2);\n        newState.version(1);\n        assertTrue(\"should ignore, because new state's version is lower to current state's version\", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()));\n        currentState.version(1);\n        newState.version(1);\n        assertFalse(\"should not ignore, because new state's version is equal to current state's version\", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()));\n        currentState.version(1);\n        newState.version(2);\n        assertFalse(\"should not ignore, because new state's version is higher to current state's version\", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()));\n\n        currentNodes = DiscoveryNodes.builder();\n        currentNodes.masterNodeId(\"b\").put(new DiscoveryNode(\"b\", DummyTransportAddress.INSTANCE, Version.CURRENT));\n        ;\n        // version isn't taken into account, so randomize it to ensure this.\n        if (randomBoolean()) {\n            currentState.version(2);\n            newState.version(1);\n        } else {\n            currentState.version(1);\n            newState.version(2);\n        }\n        currentState.nodes(currentNodes);\n        try {\n            shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build());\n            fail(\"should ignore, because current state's master is not equal to new state's master\");\n        } catch (IllegalStateException e) {\n            assertThat(e.getMessage(), containsString(\"cluster state from a different master than the current one, rejecting\"));\n        }\n\n        currentNodes = DiscoveryNodes.builder();\n        currentNodes.masterNodeId(null);\n        currentState.nodes(currentNodes);\n        // version isn't taken into account, so randomize it to ensure this.\n        if (randomBoolean()) {\n            currentState.version(2);\n            newState.version(1);\n        } else {\n            currentState.version(1);\n            newState.version(2);\n        }\n        assertFalse(\"should not ignore, because current state doesn't have a master\", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()));\n    }","commit_id":"7d3a36b20f47572eb6d5a806e1c90f4b2c7b43fd","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static BaseClassFieldExtractor getClassFieldExtractor(Class clazz,\r\n\t\t\tString fieldName) {\r\n\t\ttry {\r\n\t\t\tClass fieldType = getFieldType(clazz, fieldName);\r\n\t\t\tString originalClassName = clazz.getName().replace('.', '/');\r\n\t\t\tString getterName = getGetterName(clazz, fieldName);\r\n\t\t\tString className = BASE_PACKAGE + \"/\" + originalClassName + \"$\"\r\n\t\t\t\t\t+ getterName;\r\n\t\t\tString typeName = getTypeName(fieldType);\r\n\t\t\t// generating byte array to create target class\r\n\t\t\tbyte[] bytes = dump(originalClassName, className, getterName,\r\n\t\t\t\t\ttypeName, fieldType);\r\n\t\t\t// use bytes to get a class \r\n\t\t\tByteArrayClassLoader classLoader = new ByteArrayClassLoader(Thread\r\n\t\t\t\t\t.currentThread().getContextClassLoader());\r\n\t\t\tClass newClass = classLoader.defineClass(className\r\n\t\t\t\t\t.replace('/', '.'), bytes);\r\n\t\t\t// instantiating target class\r\n\t\t\tObject[] params = { clazz, fieldName };\r\n\t\t\treturn (BaseClassFieldExtractor) newClass.getConstructors()[0]\r\n\t\t\t\t\t.newInstance(params);\r\n\t\t} catch (Exception e) {\r\n\t\t\tthrow new RuntimeDroolsException(e);\r\n\t\t}\r\n\t}","id":107309,"modified_method":"public static BaseClassFieldExtractor getClassFieldExtractor(Class clazz,\r\n\t\t\tString fieldName) {\r\n\t\ttry {\r\n\t\t\tClass fieldType = getFieldType(clazz, fieldName);\r\n\t\t\tString originalClassName = clazz.getName().replace('.', '/');\r\n\t\t\tString getterName = getGetterName(clazz, fieldName);\r\n\t\t\tString className = BASE_PACKAGE + \"/\" + originalClassName + \"$\"\r\n\t\t\t\t\t+ getterName;\r\n\t\t\tString typeName = getTypeName(fieldType);\r\n\t\t\t// generating byte array to create target class\r\n\t\t\tbyte[] bytes = dump(originalClassName, className, getterName,\r\n\t\t\t\t\ttypeName, fieldType, clazz.isInterface());\r\n\t\t\t// use bytes to get a class \r\n\t\t\tByteArrayClassLoader classLoader = new ByteArrayClassLoader(Thread\r\n\t\t\t\t\t.currentThread().getContextClassLoader());\r\n\t\t\tClass newClass = classLoader.defineClass(className\r\n\t\t\t\t\t.replace('/', '.'), bytes);\r\n\t\t\t// instantiating target class\r\n\t\t\tObject[] params = { clazz, fieldName };\r\n\t\t\treturn (BaseClassFieldExtractor) newClass.getConstructors()[0]\r\n\t\t\t\t\t.newInstance(params);\r\n\t\t} catch (Exception e) {\r\n\t\t\tthrow new RuntimeDroolsException(e);\r\n\t\t}\r\n\t}","commit_id":"d9d05e0b057335f3d1c7923cbee9d37c3a528d01","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private static byte[] dump(String originalClassName, String className,\r\n\t\t\tString getterName, String typeName, Class fieldType)\r\n\t\t\tthrows Exception {\r\n\r\n\t\tClassWriter cw = new ClassWriter(false);\r\n\t\tMethodVisitor mv;\r\n\r\n\t\tcw.visit(Opcodes.V1_2, Opcodes.ACC_PUBLIC + Opcodes.ACC_SUPER,\r\n\t\t\t\tclassName, null, BASE_EXTRACTOR, null);\r\n\r\n\t\tcw.visitSource(null, null);\r\n\r\n\t\t// constractor\r\n\t\t{\r\n\t\t\tmv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"<init>\",\r\n\t\t\t\t\t\"(Ljava/lang/Class;Ljava/lang/String;)V\", null, null);\r\n\t\t\tmv.visitCode();\r\n\t\t\tLabel l0 = new Label();\r\n\t\t\tmv.visitLabel(l0);\r\n\t\t\tmv.visitLineNumber(10, l0);\r\n\t\t\tmv.visitVarInsn(Opcodes.ALOAD, 0);\r\n\t\t\tmv.visitVarInsn(Opcodes.ALOAD, 1);\r\n\t\t\tmv.visitVarInsn(Opcodes.ALOAD, 2);\r\n\t\t\tmv.visitMethodInsn(Opcodes.INVOKESPECIAL, BASE_EXTRACTOR, \"<init>\",\r\n\t\t\t\t\t\"(Ljava/lang/Class;Ljava/lang/String;)V\");\r\n\t\t\tLabel l1 = new Label();\r\n\t\t\tmv.visitLabel(l1);\r\n\t\t\tmv.visitLineNumber(11, l1);\r\n\t\t\tmv.visitInsn(Opcodes.RETURN);\r\n\t\t\tLabel l2 = new Label();\r\n\t\t\tmv.visitLabel(l2);\r\n\t\t\tmv.visitLocalVariable(\"this\", \"L\" + className + \";\", null, l0, l2,\r\n\t\t\t\t\t0);\r\n\t\t\tmv\r\n\t\t\t\t\t.visitLocalVariable(\"clazz\", \"Ljava/lang/Class;\", null, l0,\r\n\t\t\t\t\t\t\tl2, 1);\r\n\t\t\tmv.visitLocalVariable(\"fieldName\", \"Ljava/lang/String;\", null, l0,\r\n\t\t\t\t\tl2, 2);\r\n\t\t\tmv.visitMaxs(3, 3);\r\n\t\t\tmv.visitEnd();\r\n\t\t}\r\n\r\n\t\t// for primitive it's different because we special characters for \r\n\t\t// return types and create corresponding Objects (e.g. int -> Integer, boolean -> Boolean, ..)\r\n\t\tif (fieldType.isPrimitive()) {\r\n\t\t\tString primitiveTypeTag = getPrimitiveTag(fieldType);\r\n\r\n\t\t\tmv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"getValue\",\r\n\t\t\t\t\t\"(Ljava/lang/Object;)Ljava/lang/Object;\", null, null);\r\n\t\t\tmv.visitCode();\r\n\t\t\tLabel l0 = new Label();\r\n\t\t\tmv.visitLabel(l0);\r\n\t\t\tmv.visitLineNumber(14, l0);\r\n\t\t\tmv.visitTypeInsn(Opcodes.NEW, typeName);\r\n\t\t\tmv.visitInsn(Opcodes.DUP);\r\n\t\t\tmv.visitVarInsn(Opcodes.ALOAD, 1);\r\n\t\t\tmv.visitTypeInsn(Opcodes.CHECKCAST, originalClassName);\r\n\t\t\tmv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, originalClassName,\r\n\t\t\t\t\tgetterName, \"()\" + primitiveTypeTag);\r\n\t\t\tmv.visitMethodInsn(Opcodes.INVOKESPECIAL, typeName, \"<init>\", \"(\"\r\n\t\t\t\t\t+ primitiveTypeTag + \")V\");\r\n\t\t\tmv.visitInsn(Opcodes.ARETURN);\r\n\t\t\tLabel l1 = new Label();\r\n\t\t\tmv.visitLabel(l1);\r\n\t\t\tmv.visitLocalVariable(\"this\", \"L\" + className + \";\", null, l0, l1,\r\n\t\t\t\t\t0);\r\n\t\t\tmv.visitLocalVariable(\"object\", \"Ljava/lang/Object;\", null, l0, l1,\r\n\t\t\t\t\t1);\r\n\t\t\tmv.visitMaxs(3, 2);\r\n\t\t\tmv.visitEnd();\r\n\t\t} else {\r\n\t\t\tmv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"getValue\",\r\n\t\t\t\t\t\"(Ljava/lang/Object;)Ljava/lang/Object;\", null, null);\r\n\t\t\tmv.visitCode();\r\n\t\t\tLabel l0 = new Label();\r\n\t\t\tmv.visitLabel(l0);\r\n\t\t\tmv.visitLineNumber(15, l0);\r\n\t\t\tmv.visitVarInsn(Opcodes.ALOAD, 1);\r\n\t\t\tmv.visitTypeInsn(Opcodes.CHECKCAST, originalClassName);\r\n\t\t\tmv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, originalClassName,\r\n\t\t\t\t\tgetterName, \"()L\" + typeName + \";\");\r\n\t\t\tmv.visitInsn(Opcodes.ARETURN);\r\n\t\t\tLabel l1 = new Label();\r\n\t\t\tmv.visitLabel(l1);\r\n\t\t\tmv.visitLocalVariable(\"this\", \"L\" + className + \";\", null, l0, l1,\r\n\t\t\t\t\t0);\r\n\t\t\tmv.visitLocalVariable(\"object\", \"Ljava/lang/Object;\", null, l0, l1,\r\n\t\t\t\t\t1);\r\n\t\t\tmv.visitMaxs(1, 2);\r\n\t\t\tmv.visitEnd();\r\n\t\t}\r\n\t\tcw.visitEnd();\r\n\r\n\t\treturn cw.toByteArray();\r\n\t}","id":107310,"modified_method":"private static byte[] dump(String originalClassName, String className,\r\n\t\t\tString getterName, String typeName, Class fieldType, boolean isInterface)\r\n\t\t\tthrows Exception {\r\n\r\n\t\tClassWriter cw = new ClassWriter(false);\r\n\t\tMethodVisitor mv;\r\n\r\n\t\tcw.visit(Opcodes.V1_2, Opcodes.ACC_PUBLIC + Opcodes.ACC_SUPER,\r\n\t\t\t\tclassName, null, BASE_EXTRACTOR, null);\r\n\r\n\t\tcw.visitSource(null, null);\r\n\r\n\t\t// constractor\r\n\t\t{\r\n\t\t\tmv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"<init>\",\r\n\t\t\t\t\t\"(Ljava/lang/Class;Ljava/lang/String;)V\", null, null);\r\n\t\t\tmv.visitCode();\r\n\t\t\tLabel l0 = new Label();\r\n\t\t\tmv.visitLabel(l0);\r\n\t\t\tmv.visitLineNumber(10, l0);\r\n\t\t\tmv.visitVarInsn(Opcodes.ALOAD, 0);\r\n\t\t\tmv.visitVarInsn(Opcodes.ALOAD, 1);\r\n\t\t\tmv.visitVarInsn(Opcodes.ALOAD, 2);\r\n\t\t\tmv.visitMethodInsn(Opcodes.INVOKESPECIAL, BASE_EXTRACTOR, \"<init>\",\r\n\t\t\t\t\t\"(Ljava/lang/Class;Ljava/lang/String;)V\");\r\n\t\t\tLabel l1 = new Label();\r\n\t\t\tmv.visitLabel(l1);\r\n\t\t\tmv.visitLineNumber(11, l1);\r\n\t\t\tmv.visitInsn(Opcodes.RETURN);\r\n\t\t\tLabel l2 = new Label();\r\n\t\t\tmv.visitLabel(l2);\r\n\t\t\tmv.visitLocalVariable(\"this\", \"L\" + className + \";\", null, l0, l2,\r\n\t\t\t\t\t0);\r\n\t\t\tmv\r\n\t\t\t\t\t.visitLocalVariable(\"clazz\", \"Ljava/lang/Class;\", null, l0,\r\n\t\t\t\t\t\t\tl2, 1);\r\n\t\t\tmv.visitLocalVariable(\"fieldName\", \"Ljava/lang/String;\", null, l0,\r\n\t\t\t\t\tl2, 2);\r\n\t\t\tmv.visitMaxs(3, 3);\r\n\t\t\tmv.visitEnd();\r\n\t\t}\r\n\r\n\t\t// for primitive it's different because we special characters for \r\n\t\t// return types and create corresponding Objects (e.g. int -> Integer, boolean -> Boolean, ..)\r\n\t\tif (fieldType.isPrimitive()) {\r\n\t\t\tString primitiveTypeTag = getPrimitiveTag(fieldType);\r\n\r\n\t\t\tmv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"getValue\",\r\n\t\t\t\t\t\"(Ljava/lang/Object;)Ljava/lang/Object;\", null, null);\r\n\t\t\tmv.visitCode();\r\n\t\t\tLabel l0 = new Label();\r\n\t\t\tmv.visitLabel(l0);\r\n\t\t\tmv.visitLineNumber(14, l0);\r\n\t\t\tmv.visitTypeInsn(Opcodes.NEW, typeName);\r\n\t\t\tmv.visitInsn(Opcodes.DUP);\r\n\t\t\tmv.visitVarInsn(Opcodes.ALOAD, 1);\r\n\t\t\tmv.visitTypeInsn(Opcodes.CHECKCAST, originalClassName);\r\n            \r\n            if (isInterface) {\r\n                mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, originalClassName,\r\n                                    getterName, \"()\" + primitiveTypeTag);\r\n                \r\n            } else {\r\n    \t\t\tmv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, originalClassName,\r\n    \t\t\t\t\tgetterName, \"()\" + primitiveTypeTag);\r\n            }\r\n\t\t\tmv.visitMethodInsn(Opcodes.INVOKESPECIAL, typeName, \"<init>\", \"(\"\r\n\t\t\t\t\t+ primitiveTypeTag + \")V\");\r\n\t\t\tmv.visitInsn(Opcodes.ARETURN);\r\n\t\t\tLabel l1 = new Label();\r\n\t\t\tmv.visitLabel(l1);\r\n\t\t\tmv.visitLocalVariable(\"this\", \"L\" + className + \";\", null, l0, l1,\r\n\t\t\t\t\t0);\r\n\t\t\tmv.visitLocalVariable(\"object\", \"Ljava/lang/Object;\", null, l0, l1,\r\n\t\t\t\t\t1);\r\n\t\t\tmv.visitMaxs(3, 2);\r\n\t\t\tmv.visitEnd();\r\n\t\t} else {\r\n\t\t\tmv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"getValue\",\r\n\t\t\t\t\t\"(Ljava/lang/Object;)Ljava/lang/Object;\", null, null);\r\n\t\t\tmv.visitCode();\r\n\t\t\tLabel l0 = new Label();\r\n\t\t\tmv.visitLabel(l0);\r\n\t\t\tmv.visitLineNumber(15, l0);\r\n\t\t\tmv.visitVarInsn(Opcodes.ALOAD, 1);\r\n\t\t\tmv.visitTypeInsn(Opcodes.CHECKCAST, originalClassName);\r\n            if (isInterface) {\r\n                mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, originalClassName,\r\n                                    getterName, \"()L\" + typeName + \";\");\r\n            } else {\r\n    \t\t\tmv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, originalClassName,\r\n    \t\t\t\t\tgetterName, \"()L\" + typeName + \";\");\r\n            }\r\n\t\t\tmv.visitInsn(Opcodes.ARETURN);\r\n\t\t\tLabel l1 = new Label();\r\n\t\t\tmv.visitLabel(l1);\r\n\t\t\tmv.visitLocalVariable(\"this\", \"L\" + className + \";\", null, l0, l1,\r\n\t\t\t\t\t0);\r\n\t\t\tmv.visitLocalVariable(\"object\", \"Ljava/lang/Object;\", null, l0, l1,\r\n\t\t\t\t\t1);\r\n\t\t\tmv.visitMaxs(1, 2);\r\n\t\t\tmv.visitEnd();\r\n\t\t}\r\n\t\tcw.visitEnd();\r\n\r\n\t\treturn cw.toByteArray();\r\n\t}","commit_id":"d9d05e0b057335f3d1c7923cbee9d37c3a528d01","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private void addToMapping(Method method, int index) {\n            String name = method.getName();\n            if (name.startsWith(\"is\")) {\n                this.fieldNameMap.put(calcFieldName( name, 2 ), new Integer(index));\n            } else {\n                this.fieldNameMap.put(calcFieldName( name, 3 ), new Integer(index));\n            }\n            \n        }","id":107311,"modified_method":"private void addToMapping(String name, int index) {\n\n            if (name.startsWith(\"is\")) {\n                this.fieldNameMap.put(calcFieldName( name, 2 ), new Integer(index));\n            } else {\n                this.fieldNameMap.put(calcFieldName( name, 3 ), new Integer(index));\n            }\n            \n        }","commit_id":"d9d05e0b057335f3d1c7923cbee9d37c3a528d01","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public MethodVisitor visitMethod(int access,\n                                         String name,\n                                         String desc,\n                                         String signature,\n                                         String[] exceptions) {\n            //only want public methods that start with 'get' or 'is'\n            //and have no args, and return a value\n            if (access == Opcodes.ACC_PUBLIC) {\n                if (desc.startsWith( \"()\" ) && ( name.startsWith(\"get\") || name.startsWith(\"is\") ) ) {\n                    try {\n                        Method method = clazz.getMethod(name, null);\n                        if (method.getReturnType() != void.class) {\n                            int fieldIndex = methodList.size();\n                            methodList.add(method);\n                            addToMapping(method, fieldIndex);\n                        }\n                    } catch (NoSuchMethodException e) {\n                        throw new IllegalStateException(\"Error in getting field access method.\");\n                    }\n                }\n            }\n            return null;\n        }","id":107312,"modified_method":"public MethodVisitor visitMethod(int access,\n                                         String name,\n                                         String desc,\n                                         String signature,\n                                         String[] exceptions) {\n            //only want public methods that start with 'get' or 'is'\n            //and have no args, and return a value\n            if ((access & Opcodes.ACC_PUBLIC) > 0) {\n                if (desc.startsWith( \"()\" ) && ( name.startsWith(\"get\") || name.startsWith(\"is\") ) ) {\n                    try {\n                        Method method = clazz.getMethod(name, null);\n                        if (method.getReturnType() != void.class) {\n                            int fieldIndex = methodList.size();\n                            methodList.add(method);                                \n                            addToMapping(method.getName(), fieldIndex);\n                        }\n                    } catch (NoSuchMethodException e) {\n                        throw new IllegalStateException(\"Error in getting field access method.\");\n                    }\n                }\n            }\n            return null;\n        }","commit_id":"d9d05e0b057335f3d1c7923cbee9d37c3a528d01","url":"https://github.com/droolsjbpm/drools"},{"original_method":"/** A regular switch item, which doesn't require boxing */\n        private static void doSwitchItemObject(MethodVisitor mv, Label label,\n                                         int target, String targetType, String targetMethod, Class returnClass) {\n            \n            String returnType = \"()\" + Type.getDescriptor(returnClass);\n            mv.visitLabel( label );            \n            mv.visitVarInsn( ALOAD,\n                             target );\n            mv.visitMethodInsn( INVOKEVIRTUAL,\n                                targetType,\n                                targetMethod,\n                                returnType );\n            mv.visitInsn( ARETURN );\n        }","id":107313,"modified_method":"/** A regular switch item, which doesn't require boxing */\n        private static void doSwitchItemObject(MethodVisitor mv, Label label,\n                                         int target, String targetType, \n                                         String targetMethod, Class returnClass, boolean isInterface) {\n            \n            String returnType = \"()\" + Type.getDescriptor(returnClass);\n            mv.visitLabel( label );            \n            mv.visitVarInsn( ALOAD,\n                             target );\n            if (isInterface) {\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    targetType,\n                                    targetMethod,\n                                    returnType );\n            } else {\n                mv.visitMethodInsn( INVOKEVIRTUAL,\n                                    targetType,\n                                    targetMethod,\n                                    returnType );\n            }\n            mv.visitInsn( ARETURN );\n        }","commit_id":"d9d05e0b057335f3d1c7923cbee9d37c3a528d01","url":"https://github.com/droolsjbpm/drools"},{"original_method":"/** a switch item that requires autoboxing */\n        private static void doSwitchItemBoxed(MethodVisitor mv, Label switchItem,\n                                              int target, String targetType, String targetMethod,\n                                              Class scalarType) {\n            Class boxType = null;\n            boxType = getBoxType( scalarType );\n            String scalarDescriptor = Type.getDescriptor(scalarType);\n            String internalBoxName = Type.getInternalName(boxType);\n            mv.visitLabel( switchItem );\n            mv.visitTypeInsn( NEW,\n                              internalBoxName );\n            mv.visitInsn( DUP );\n            mv.visitVarInsn( ALOAD,\n                             target );\n            mv.visitMethodInsn( INVOKEVIRTUAL,\n                                targetType,\n                                targetMethod,\n                                \"()\" + scalarDescriptor );\n            mv.visitMethodInsn( INVOKESPECIAL,\n                                internalBoxName,\n                                \"<init>\",\n                                \"(\" + scalarDescriptor + \")V\" );\n            mv.visitInsn( ARETURN );\n        }","id":107314,"modified_method":"/** a switch item that requires autoboxing */\n        private static void doSwitchItemBoxed(MethodVisitor mv, Label switchItem,\n                                              int target, String targetType, String targetMethod,\n                                              Class scalarType, boolean isInterface) {\n            Class boxType = null;\n            boxType = getBoxType( scalarType );\n            String scalarDescriptor = Type.getDescriptor(scalarType);\n            String internalBoxName = Type.getInternalName(boxType);\n            mv.visitLabel( switchItem );\n            mv.visitTypeInsn( NEW,\n                              internalBoxName );\n            mv.visitInsn( DUP );\n            mv.visitVarInsn( ALOAD,\n                             target );\n            if (isInterface) {\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    targetType,\n                                    targetMethod,\n                                    \"()\" + scalarDescriptor );\n                \n            } else {\n                mv.visitMethodInsn( INVOKEVIRTUAL,\n                                    targetType,\n                                    targetMethod,\n                                    \"()\" + scalarDescriptor );\n                \n            }\n            mv.visitMethodInsn( INVOKESPECIAL,\n                                internalBoxName,\n                                \"<init>\",\n                                \"(\" + scalarDescriptor + \")V\" );\n            mv.visitInsn( ARETURN );\n        }","commit_id":"d9d05e0b057335f3d1c7923cbee9d37c3a528d01","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public static byte[] generateClass(Method getters[], Class targetClass, String generatedClassName) throws Exception {\n\n            ClassWriter cw = new ClassWriter( true );\n\n            generatedClassName = generatedClassName.replaceAll(\"\\\\.\", \"/\");\n            \n            cw.visit( V1_2,\n                      ACC_PUBLIC + ACC_SUPER,\n                      generatedClassName,\n                      null,\n                      \"java/lang/Object\",\n                      new String[]{Type.getInternalName(FieldAccessor.class)});\n\n            cw.visitSource( getShortName(targetClass) + \".java\",\n                            null );\n\n            doConstructor( cw );\n            \n            doMethods( cw, Type.getInternalName(targetClass), getters );\n\n            cw.visitEnd();\n\n            return cw.toByteArray();\n        }","id":107315,"modified_method":"public static byte[] generateClass(Method getters[], Class targetClass, String generatedClassName) throws Exception {\n\n            ClassWriter cw = new ClassWriter( true );\n\n            generatedClassName = generatedClassName.replaceAll(\"\\\\.\", \"/\");\n            \n            cw.visit( V1_2,\n                      ACC_PUBLIC + ACC_SUPER,\n                      generatedClassName,\n                      null,\n                      \"java/lang/Object\",\n                      new String[]{Type.getInternalName(FieldAccessor.class)});\n\n            cw.visitSource( getShortName(targetClass) + \".java\",\n                            null );\n\n            doConstructor( cw );\n            \n            doMethods( cw, Type.getInternalName(targetClass), getters, targetClass.isInterface());\n\n            cw.visitEnd();\n\n            return cw.toByteArray();\n        }","commit_id":"d9d05e0b057335f3d1c7923cbee9d37c3a528d01","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private static void doMethods(ClassWriter cw, String targetType, Method[] getters) {\n            \n             \n            \n            \n            MethodVisitor mv;\n            mv = cw.visitMethod( ACC_PUBLIC,\n                                 GET_FIELD_BY_INDEX_METHOD_NAME,\n                                 \"(Ljava/lang/Object;I)Ljava/lang/Object;\",\n                                 null,\n                                 null );\n            mv.visitCode();\n            Label entry = new Label();\n            mv.visitLabel( entry );\n            mv.visitVarInsn( ALOAD,\n                             1 );\n            mv.visitTypeInsn( CHECKCAST,\n                              targetType );\n            int target = 3;\n            mv.visitVarInsn( ASTORE,\n                             target ); //this is the actual casted object\n            Label start = new Label();\n            mv.visitLabel( start );\n\n            mv.visitVarInsn( ILOAD,\n                             2 ); //the index, I think.\n            //END BOILERPLATE\n            \n            Label[] switchItems = new Label[getters.length];\n            for (int i= 0; i < getters.length; i++) {\n                switchItems[i] = new Label();\n            }\n            \n            //setup switch statment (with default)\n            Label defaultSwitch = new Label();\n            mv.visitTableSwitchInsn( 0,\n                                     switchItems.length - 1,\n                                     defaultSwitch,\n                                     switchItems );\n            \n            \n            //START switch items\n            for (int i= 0; i < getters.length; i++) {\n                Method method = getters[i];\n                if (method.getReturnType().isPrimitive()) {\n                    doSwitchItemBoxed( mv, switchItems[i],\n                                       target, targetType, method.getName(), method.getReturnType());                    \n                } else {\n                    doSwitchItemObject(mv, switchItems[i], target, targetType, method.getName(), method.getReturnType());\n                }\n            }            \n            \n            //the default item...\n            mv.visitLabel( defaultSwitch );\n            mv.visitInsn( ACONST_NULL );\n            mv.visitInsn( ARETURN );\n            \n            Label endLabel = new Label();\n            mv.visitLabel( endLabel );\n\n            mv.visitMaxs( 0,0 ); //dummy values, its calculated anyway\n            mv.visitEnd();\n        }","id":107316,"modified_method":"private static void doMethods(ClassWriter cw, String targetType, Method[] getters, boolean isInterface) {\n            \n             \n            \n            \n            MethodVisitor mv;\n            mv = cw.visitMethod( ACC_PUBLIC,\n                                 GET_FIELD_BY_INDEX_METHOD_NAME,\n                                 \"(Ljava/lang/Object;I)Ljava/lang/Object;\",\n                                 null,\n                                 null );\n            mv.visitCode();\n            Label entry = new Label();\n            mv.visitLabel( entry );\n            mv.visitVarInsn( ALOAD,\n                             1 );\n            mv.visitTypeInsn( CHECKCAST,\n                              targetType );\n            int target = 3;\n            mv.visitVarInsn( ASTORE,\n                             target ); //this is the actual casted object\n            Label start = new Label();\n            mv.visitLabel( start );\n\n            mv.visitVarInsn( ILOAD,\n                             2 ); //the index, I think.\n            //END BOILERPLATE\n            \n            Label[] switchItems = new Label[getters.length];\n            for (int i= 0; i < getters.length; i++) {\n                switchItems[i] = new Label();\n            }\n            \n            //setup switch statment (with default)\n            Label defaultSwitch = new Label();\n            mv.visitTableSwitchInsn( 0,\n                                     switchItems.length - 1,\n                                     defaultSwitch,\n                                     switchItems );\n            \n            \n            //START switch items\n            for (int i= 0; i < getters.length; i++) {\n                \n                Method method = getters[i];\n                if (method.getReturnType().isPrimitive()) {\n                    doSwitchItemBoxed( mv, switchItems[i],\n                                       target, targetType, method.getName(), method.getReturnType(), isInterface);                    \n                } else {\n                    doSwitchItemObject(mv, switchItems[i], target, targetType, method.getName(), method.getReturnType(), isInterface);\n                }\n            }            \n            \n            //the default item...\n            mv.visitLabel( defaultSwitch );\n            mv.visitInsn( ACONST_NULL );\n            mv.visitInsn( ARETURN );\n            \n            Label endLabel = new Label();\n            mv.visitLabel( endLabel );\n\n            mv.visitMaxs( 0,0 ); //dummy values, its calculated anyway\n            mv.visitEnd();\n        }","commit_id":"d9d05e0b057335f3d1c7923cbee9d37c3a528d01","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private boolean addCreateWrapperObject(String newClassName,\n                                           Class<?> objectFactoryClass) {\n        \n        MethodVisitor mv = cw.visitMethod(Opcodes.ACC_PUBLIC,\n                                          \"createWrapperObject\",\n                                          \"(Ljava/util/List;)Ljava/lang/Object;\",\n                                          \"(Ljava/util/List<*>;)Ljava/lang/Object;\",\n                                          new String[] {\n                                              \"org/apache/cxf/interceptor/Fault\"\n                                          });\n        mv.visitCode();\n        Label lBegin = createLabel();\n        mv.visitLabel(lBegin);\n        mv.visitLineNumber(104, lBegin);\n\n        mv.visitTypeInsn(Opcodes.NEW, periodToSlashes(wrapperType.getName()));\n        mv.visitInsn(Opcodes.DUP);\n        mv.visitMethodInsn(Opcodes.INVOKESPECIAL, periodToSlashes(wrapperType.getName()),\n                           \"<init>\", \"()V\");\n        mv.visitVarInsn(Opcodes.ASTORE, 2);\n    \n        for (int x = 0; x < setMethods.length; x++) {\n            if (getMethods[x] == null) { \n                if (setMethods[x] == null\n                    && fields[x] == null) {\n                    // null placeholder\n                    continue;\n                } else {\n                    return false;\n                }\n            }\n            Class<?> tp = getMethods[x].getReturnType();\n            mv.visitVarInsn(Opcodes.ALOAD, 2);            \n            \n            if (List.class.isAssignableFrom(tp)) {\n                doCollection(mv, x);\n            } else { \n                if (JAXBElement.class.isAssignableFrom(tp)) {\n                    mv.visitVarInsn(Opcodes.ALOAD, 0);\n                    mv.visitFieldInsn(Opcodes.GETFIELD, periodToSlashes(newClassName),\n                                      \"factory\",\n                                      \"L\" + periodToSlashes(objectFactoryClass.getName()) + \";\");\n                }\n                mv.visitVarInsn(Opcodes.ALOAD, 1);\n                mv.visitIntInsn(Opcodes.SIPUSH, x);\n                mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, \"java/util/List\", \"get\", \"(I)Ljava/lang/Object;\");\n                \n                if (tp.isPrimitive()) {\n                    mv.visitTypeInsn(Opcodes.CHECKCAST, NONPRIMITIVE_MAP.get(tp));\n                    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, NONPRIMITIVE_MAP.get(tp), \n                                       tp.getName() + \"Value\", \"()\" + PRIMITIVE_MAP.get(tp));\n                } else if (JAXBElement.class.isAssignableFrom(tp)) {\n                    mv.visitTypeInsn(Opcodes.CHECKCAST,\n                                     periodToSlashes(jaxbMethods[x].getParameterTypes()[0].getName()));\n                    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, periodToSlashes(objectFactoryClass.getName()),\n                                       jaxbMethods[x].getName(),\n                                       getMethodSignature(jaxbMethods[x]));\n                } else if (tp.isArray()) { \n                    mv.visitTypeInsn(Opcodes.CHECKCAST, getClassCode(tp));\n                } else {\n                    mv.visitTypeInsn(Opcodes.CHECKCAST, periodToSlashes(tp.getName()));\n                }\n                mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,\n                                   periodToSlashes(wrapperType.getName()),\n                                   setMethods[x].getName(), \"(\" + getClassCode(tp) + \")V\");\n            }\n        }\n        \n        mv.visitVarInsn(Opcodes.ALOAD, 2);\n        mv.visitInsn(Opcodes.ARETURN);\n    \n        Label lEnd = createLabel();\n        mv.visitLabel(lEnd);\n        mv.visitLocalVariable(\"this\", \"L\" + newClassName + \";\", null, lBegin, lEnd, 0);\n        mv.visitLocalVariable(\"lst\", \"Ljava/util/List;\", \"Ljava/util/List<*>;\", lBegin, lEnd, 1);\n        mv.visitLocalVariable(\"ok\", \"L\" + periodToSlashes(wrapperType.getName()) + \";\",\n                              null, lBegin, lEnd, 2);\n        mv.visitMaxs(0, 0);\n        mv.visitEnd();\n        return true;\n    }","id":107317,"modified_method":"private boolean addCreateWrapperObject(String newClassName,\n                                           Class<?> objectFactoryClass) {\n        \n        MethodVisitor mv = cw.visitMethod(Opcodes.ACC_PUBLIC,\n                                          \"createWrapperObject\",\n                                          \"(Ljava/util/List;)Ljava/lang/Object;\",\n                                          \"(Ljava/util/List<*>;)Ljava/lang/Object;\",\n                                          new String[] {\n                                              \"org/apache/cxf/interceptor/Fault\"\n                                          });\n        mv.visitCode();\n        Label lBegin = createLabel();\n        mv.visitLabel(lBegin);\n        mv.visitLineNumber(104, lBegin);\n\n        mv.visitTypeInsn(Opcodes.NEW, periodToSlashes(wrapperType.getName()));\n        mv.visitInsn(Opcodes.DUP);\n        mv.visitMethodInsn(Opcodes.INVOKESPECIAL, periodToSlashes(wrapperType.getName()),\n                           \"<init>\", \"()V\");\n        mv.visitVarInsn(Opcodes.ASTORE, 2);\n    \n        for (int x = 0; x < setMethods.length; x++) {\n            if (getMethods[x] == null) { \n                if (setMethods[x] == null\n                    && fields[x] == null) {\n                    // null placeholder\n                    continue;\n                } else {\n                    return false;\n                }\n            }\n            Class<?> tp = getMethods[x].getReturnType();\n            mv.visitVarInsn(Opcodes.ALOAD, 2);            \n            \n            if (List.class.isAssignableFrom(tp)) {\n                doCollection(mv, x);\n            } else { \n                if (JAXBElement.class.isAssignableFrom(tp)) {\n                    mv.visitVarInsn(Opcodes.ALOAD, 0);\n                    mv.visitFieldInsn(Opcodes.GETFIELD, periodToSlashes(newClassName),\n                                      \"factory\",\n                                      \"L\" + periodToSlashes(objectFactoryClass.getName()) + \";\");\n                }\n                mv.visitVarInsn(Opcodes.ALOAD, 1);\n                mv.visitIntInsn(Opcodes.SIPUSH, x);\n                mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, \"java/util/List\", \"get\", \"(I)Ljava/lang/Object;\");\n                \n                if (tp.isPrimitive()) {\n                    mv.visitTypeInsn(Opcodes.CHECKCAST, NONPRIMITIVE_MAP.get(tp));\n                    Label l45 = createLabel();\n                    Label l46 = createLabel();\n                    mv.visitInsn(Opcodes.DUP);\n                    mv.visitJumpInsn(Opcodes.IFNULL, l45);\n                    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, NONPRIMITIVE_MAP.get(tp), \n                                       tp.getName() + \"Value\", \"()\" + PRIMITIVE_MAP.get(tp));\n                    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,\n                                       periodToSlashes(wrapperType.getName()),\n                                       setMethods[x].getName(), \"(\" + getClassCode(tp) + \")V\");\n                    mv.visitJumpInsn(Opcodes.GOTO, l46);\n                    mv.visitLabel(l45);\n                    mv.visitInsn(Opcodes.POP);\n                    mv.visitLabel(l46);\n                } else if (JAXBElement.class.isAssignableFrom(tp)) {\n                    mv.visitTypeInsn(Opcodes.CHECKCAST,\n                                     periodToSlashes(jaxbMethods[x].getParameterTypes()[0].getName()));\n                    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, periodToSlashes(objectFactoryClass.getName()),\n                                       jaxbMethods[x].getName(),\n                                       getMethodSignature(jaxbMethods[x]));\n                    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,\n                                       periodToSlashes(wrapperType.getName()),\n                                       setMethods[x].getName(), \"(\" + getClassCode(tp) + \")V\");\n                } else if (tp.isArray()) { \n                    mv.visitTypeInsn(Opcodes.CHECKCAST, getClassCode(tp));\n                    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,\n                                       periodToSlashes(wrapperType.getName()),\n                                       setMethods[x].getName(), \"(\" + getClassCode(tp) + \")V\");\n                } else {\n                    mv.visitTypeInsn(Opcodes.CHECKCAST, periodToSlashes(tp.getName()));\n                    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,\n                                       periodToSlashes(wrapperType.getName()),\n                                       setMethods[x].getName(), \"(\" + getClassCode(tp) + \")V\");\n                }\n            }\n        }\n        \n        mv.visitVarInsn(Opcodes.ALOAD, 2);\n        mv.visitInsn(Opcodes.ARETURN);\n    \n        Label lEnd = createLabel();\n        mv.visitLabel(lEnd);\n        mv.visitLocalVariable(\"this\", \"L\" + newClassName + \";\", null, lBegin, lEnd, 0);\n        mv.visitLocalVariable(\"lst\", \"Ljava/util/List;\", \"Ljava/util/List<*>;\", lBegin, lEnd, 1);\n        mv.visitLocalVariable(\"ok\", \"L\" + periodToSlashes(wrapperType.getName()) + \";\",\n                              null, lBegin, lEnd, 2);\n        mv.visitMaxs(0, 0);\n        mv.visitEnd();\n        return true;\n    }","commit_id":"6f947b7a3e5c935500c949cc5648f7a6a0e94288","url":"https://github.com/apache/cxf"},{"original_method":"private void getOspfLinks() {\n        List<OspfLink> allLinks =  getOspfLinkDao().findAll();\n        Set<OspfLinkDetail> combinedLinkDetails = new HashSet<OspfLinkDetail>();\n        for(OspfLink sourceLink : allLinks) {\n\n            for (OspfLink targetLink : allLinks) {\n                boolean ipAddrCheck = sourceLink.getOspfRemIpAddr().equals(targetLink.getOspfIpAddr()) && targetLink.getOspfRemIpAddr().equals(sourceLink.getOspfIpAddr());\n                if(ipAddrCheck) {\n                    String id = \"ospf::\" + Math.min(sourceLink.getId(), targetLink.getId()) + \"||\" + Math.max(sourceLink.getId(), targetLink.getId());\n                    Vertex source = new AbstractVertex(AbstractLinkdTopologyProvider.TOPOLOGY_NAMESPACE_LINKD, sourceLink.getNode().getNodeId(), sourceLink.getNode().getLabel());\n                    Vertex target = new AbstractVertex(AbstractLinkdTopologyProvider.TOPOLOGY_NAMESPACE_LINKD, targetLink.getNode().getNodeId(), targetLink.getNode().getLabel());\n\n                    OspfLinkDetail linkDetail = new OspfLinkDetail(\n                            Math.min(sourceLink.getId(), targetLink.getId()) + \"|\" + Math.max(sourceLink.getId(), targetLink.getId()),\n                            source, sourceLink, target, targetLink);\n                    combinedLinkDetails.add(linkDetail);\n                }\n            }\n        }\n\n        for (OspfLinkDetail linkDetail : combinedLinkDetails) {\n            AbstractEdge edge = connectVertices(linkDetail.getId(), linkDetail.getSource(), linkDetail.getTarget(), OSPF_EDGE_NAMESPACE);\n            edge.setTooltipText(getEdgeTooltipText(linkDetail));\n        }\n    }","id":107318,"modified_method":"private void getOspfLinks() {\n        List<OspfLink> allLinks =  getOspfLinkDao().findAll();\n        Set<OspfLinkDetail> combinedLinkDetails = new HashSet<OspfLinkDetail>();\n        for(OspfLink sourceLink : allLinks) {\n\n            for (OspfLink targetLink : allLinks) {\n                boolean ipAddrCheck = sourceLink.getOspfRemIpAddr().equals(targetLink.getOspfIpAddr()) && targetLink.getOspfRemIpAddr().equals(sourceLink.getOspfIpAddr());\n                if(ipAddrCheck) {\n                    String id = \"ospf::\" + Math.min(sourceLink.getId(), targetLink.getId()) + \"||\" + Math.max(sourceLink.getId(), targetLink.getId());\n                    AbstractVertex source = new AbstractVertex(AbstractLinkdTopologyProvider.TOPOLOGY_NAMESPACE_LINKD, sourceLink.getNode().getNodeId(), sourceLink.getNode().getLabel());\n                    source.setIpAddress(sourceLink.getOspfIpAddr().getHostAddress());\n\n                    AbstractVertex target = new AbstractVertex(AbstractLinkdTopologyProvider.TOPOLOGY_NAMESPACE_LINKD, targetLink.getNode().getNodeId(), targetLink.getNode().getLabel());\n                    target.setIpAddress(targetLink.getOspfIpAddr().getHostAddress());\n\n                    OspfLinkDetail linkDetail = new OspfLinkDetail(\n                            Math.min(sourceLink.getId(), targetLink.getId()) + \"|\" + Math.max(sourceLink.getId(), targetLink.getId()),\n                            source, sourceLink, target, targetLink);\n                    combinedLinkDetails.add(linkDetail);\n                }\n            }\n        }\n\n        for (OspfLinkDetail linkDetail : combinedLinkDetails) {\n            AbstractEdge edge = connectVertices(linkDetail.getId(), linkDetail.getSource(), linkDetail.getTarget(), OSPF_EDGE_NAMESPACE);\n            edge.setTooltipText(getEdgeTooltipText(linkDetail));\n        }\n    }","commit_id":"2a50198a8cad972080ab696dbe72fd3fe1fbe1c9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected List<EdgeAlarmStatusSummary> getEdgeAlarmSummaries(List<Integer> linkIds) {\n        Criteria criteria = new Criteria(IsIsLink.class);\n        criteria.addRestriction(new InRestriction(\"id\", linkIds));\n\n        List<IsIsLink> links = getIsisLinkDao().findMatching(criteria);\n        Map<String, EdgeAlarmStatusSummary> summaryMap = new HashMap<String, EdgeAlarmStatusSummary>();\n        for (IsIsLink sourceLink : links) {\n            OnmsNode sourceNode = sourceLink.getNode();\n            IsIsElement sourceElement = sourceNode.getIsisElement();\n            for (IsIsLink targetLink : links) {\n                boolean isisAdjIndexCheck = sourceLink.getIsisISAdjIndex() == targetLink.getIsisISAdjIndex();\n                boolean isisSysIdCheck = targetLink.getIsisISAdjNeighSysID().equals(sourceElement.getIsisSysID());\n                if (isisAdjIndexCheck && isisSysIdCheck) {\n                    summaryMap.put(sourceNode.getNodeId() + \":\" + sourceLink.getIsisCircIfIndex(),\n                            new EdgeAlarmStatusSummary(sourceLink.getId(), targetLink.getId(), null));\n                }\n            }\n        }\n\n        List<OnmsAlarm> alarms = getLinkDownAlarms();\n        for (OnmsAlarm alarm : alarms) {\n            String key = alarm.getNodeId() + \":\" + alarm.getIfIndex();\n            if (summaryMap.containsKey(key)) {\n                EdgeAlarmStatusSummary summary = summaryMap.get(key);\n                summary.setEventUEI(alarm.getUei());\n            }\n        }\n        return new ArrayList<EdgeAlarmStatusSummary>(summaryMap.values());\n    }","id":107319,"modified_method":"@Override\n    protected List<EdgeAlarmStatusSummary> getEdgeAlarmSummaries(List<Integer> linkIds) {\n        Criteria criteria = new Criteria(IsIsLink.class);\n        criteria.addRestriction(new InRestriction(\"id\", linkIds));\n\n        List<IsIsLink> links = getIsisLinkDao().findMatching(criteria);\n        Multimap<String, EdgeAlarmStatusSummary> summaryMap = HashMultimap.create();\n        for (IsIsLink sourceLink : links) {\n            OnmsNode sourceNode = sourceLink.getNode();\n            IsIsElement sourceElement = sourceNode.getIsisElement();\n            for (IsIsLink targetLink : links) {\n                boolean isisAdjIndexCheck = sourceLink.getIsisISAdjIndex() == targetLink.getIsisISAdjIndex();\n                boolean isisSysIdCheck = targetLink.getIsisISAdjNeighSysID().equals(sourceElement.getIsisSysID());\n                if (isisAdjIndexCheck && isisSysIdCheck) {\n                    summaryMap.put(sourceNode.getNodeId() + \":\" + sourceLink.getIsisCircIfIndex(),\n                            new EdgeAlarmStatusSummary(sourceLink.getId(), targetLink.getId(), null));\n                }\n            }\n        }\n\n        List<OnmsAlarm> alarms = getLinkDownAlarms();\n        for (OnmsAlarm alarm : alarms) {\n            String key = alarm.getNodeId() + \":\" + alarm.getIfIndex();\n            if (summaryMap.containsKey(key)) {\n                Collection<EdgeAlarmStatusSummary> summaries = summaryMap.get(key);\n                for (EdgeAlarmStatusSummary summary : summaries) {\n                    summary.setEventUEI(alarm.getUei());\n                }\n\n            }\n        }\n        return new ArrayList<EdgeAlarmStatusSummary>(summaryMap.values());\n    }","commit_id":"2a50198a8cad972080ab696dbe72fd3fe1fbe1c9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected List<EdgeAlarmStatusSummary> getEdgeAlarmSummaries(List<Integer> linkIds) {\n        List<LldpLink> links = m_lldpLinkDao.findLinksForIds(linkIds);\n\n        Map<String, EdgeAlarmStatusSummary> summaryMap = new HashMap<String, EdgeAlarmStatusSummary>();\n        for (LldpLink sourceLink : links) {\n\n            OnmsNode sourceNode = sourceLink.getNode();\n            LldpElement sourceElement = sourceNode.getLldpElement();\n\n            for (LldpLink targetLink : links) {\n                OnmsNode targetNode = targetLink.getNode();\n                LldpElement targetLldpElement = targetNode.getLldpElement();\n\n                //Compare the remote data to the targetNode element data\n                boolean bool1 = sourceLink.getLldpRemPortId().equals(targetLink.getLldpPortId()) && targetLink.getLldpRemPortId().equals(sourceLink.getLldpPortId());\n                boolean bool2 = sourceLink.getLldpRemPortDescr().equals(targetLink.getLldpPortDescr()) && targetLink.getLldpRemPortDescr().equals(sourceLink.getLldpPortDescr());\n                boolean bool3 = sourceLink.getLldpRemChassisId().equals(targetLldpElement.getLldpChassisId()) && targetLink.getLldpRemChassisId().equals(sourceElement.getLldpChassisId());\n                boolean bool4 = sourceLink.getLldpRemSysname().equals(targetLldpElement.getLldpSysname()) && targetLink.getLldpRemSysname().equals(sourceElement.getLldpSysname());\n                boolean bool5 = sourceLink.getLldpRemPortIdSubType() == targetLink.getLldpPortIdSubType() && targetLink.getLldpRemPortIdSubType() == sourceLink.getLldpPortIdSubType();\n\n                if (bool1 && bool2 && bool3 && bool4 && bool5) {\n\n                    summaryMap.put(sourceNode.getNodeId() + \":\" + sourceLink.getLldpPortIfindex(),\n                            new EdgeAlarmStatusSummary(sourceLink.getId(),\n                                    targetLink.getId(), null)\n                    );\n\n                }\n            }\n        }\n\n        List<OnmsAlarm> alarms = getLinkDownAlarms();\n\n        for (OnmsAlarm alarm : alarms) {\n            String key = alarm.getNodeId() + \":\" + alarm.getIfIndex();\n            if (summaryMap.containsKey(key)) {\n                EdgeAlarmStatusSummary summary = summaryMap.get(key);\n                summary.setEventUEI(alarm.getUei());\n            }\n\n        }\n        return new ArrayList<EdgeAlarmStatusSummary>(summaryMap.values());\n    }","id":107320,"modified_method":"@Override\n    protected List<EdgeAlarmStatusSummary> getEdgeAlarmSummaries(List<Integer> linkIds) {\n        List<LldpLink> links = m_lldpLinkDao.findLinksForIds(linkIds);\n\n        Multimap<String, EdgeAlarmStatusSummary> summaryMap = HashMultimap.create();\n        for (LldpLink sourceLink : links) {\n\n            OnmsNode sourceNode = sourceLink.getNode();\n            LldpElement sourceElement = sourceNode.getLldpElement();\n\n            for (LldpLink targetLink : links) {\n                OnmsNode targetNode = targetLink.getNode();\n                LldpElement targetLldpElement = targetNode.getLldpElement();\n\n                //Compare the remote data to the targetNode element data\n                boolean bool1 = sourceLink.getLldpRemPortId().equals(targetLink.getLldpPortId()) && targetLink.getLldpRemPortId().equals(sourceLink.getLldpPortId());\n                boolean bool2 = sourceLink.getLldpRemPortDescr().equals(targetLink.getLldpPortDescr()) && targetLink.getLldpRemPortDescr().equals(sourceLink.getLldpPortDescr());\n                boolean bool3 = sourceLink.getLldpRemChassisId().equals(targetLldpElement.getLldpChassisId()) && targetLink.getLldpRemChassisId().equals(sourceElement.getLldpChassisId());\n                boolean bool4 = sourceLink.getLldpRemSysname().equals(targetLldpElement.getLldpSysname()) && targetLink.getLldpRemSysname().equals(sourceElement.getLldpSysname());\n                boolean bool5 = sourceLink.getLldpRemPortIdSubType() == targetLink.getLldpPortIdSubType() && targetLink.getLldpRemPortIdSubType() == sourceLink.getLldpPortIdSubType();\n\n                if (bool1 && bool2 && bool3 && bool4 && bool5) {\n\n                    summaryMap.put(sourceNode.getNodeId() + \":\" + sourceLink.getLldpPortIfindex(),\n                            new EdgeAlarmStatusSummary(sourceLink.getId(),\n                                    targetLink.getId(), null)\n                    );\n\n                }\n            }\n        }\n\n        List<OnmsAlarm> alarms = getLinkDownAlarms();\n\n        for (OnmsAlarm alarm : alarms) {\n            String key = alarm.getNodeId() + \":\" + alarm.getIfIndex();\n            if (summaryMap.containsKey(key)) {\n                Collection<EdgeAlarmStatusSummary> summaries = summaryMap.get(key);\n                for (EdgeAlarmStatusSummary summary : summaries) {\n                    summary.setEventUEI(alarm.getUei());\n                }\n\n            }\n\n        }\n        return new ArrayList<EdgeAlarmStatusSummary>(summaryMap.values());\n    }","commit_id":"2a50198a8cad972080ab696dbe72fd3fe1fbe1c9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected List<EdgeAlarmStatusSummary> getEdgeAlarmSummaries(List<Integer> linkIds) {\n        org.opennms.core.criteria.Criteria criteria = new org.opennms.core.criteria.Criteria(OspfLink.class);\n        criteria.addRestriction(new InRestriction(\"id\", linkIds));\n\n        List<OspfLink> links = getOspfLinkDao().findMatching(criteria);\n        Map<String, EdgeAlarmStatusSummary> summaryMap = new HashMap<String, EdgeAlarmStatusSummary>();\n        for (OspfLink sourceLink : links) {\n            OnmsNode sourceNode = sourceLink.getNode();\n            for (OspfLink targetLink : links) {\n                boolean ipAddrCheck = sourceLink.getOspfRemIpAddr().equals(targetLink.getOspfIpAddr()) && targetLink.getOspfRemIpAddr().equals(sourceLink.getOspfIpAddr());\n                if (ipAddrCheck) {\n                    summaryMap.put(sourceNode.getNodeId() + \":\" + sourceLink.getOspfIfIndex(),\n                            new EdgeAlarmStatusSummary(sourceLink.getId(), targetLink.getId(), null));\n                }\n            }\n        }\n\n        List<OnmsAlarm> alarms = getLinkDownAlarms();\n\n        for (OnmsAlarm alarm : alarms) {\n            String key = alarm.getNodeId() + \":\" + alarm.getIfIndex();\n            if (summaryMap.containsKey(key)) {\n                EdgeAlarmStatusSummary summary = summaryMap.get(key);\n                summary.setEventUEI(alarm.getUei());\n            }\n\n        }\n\n        return new ArrayList<EdgeAlarmStatusSummary>(summaryMap.values());\n\n    }","id":107321,"modified_method":"@Override\n    protected List<EdgeAlarmStatusSummary> getEdgeAlarmSummaries(List<Integer> linkIds) {\n        org.opennms.core.criteria.Criteria criteria = new org.opennms.core.criteria.Criteria(OspfLink.class);\n        criteria.addRestriction(new InRestriction(\"id\", linkIds));\n\n        List<OspfLink> links = getOspfLinkDao().findMatching(criteria);\n        Multimap<String, EdgeAlarmStatusSummary> summaryMap = HashMultimap.create();\n        for (OspfLink sourceLink : links) {\n            OnmsNode sourceNode = sourceLink.getNode();\n            for (OspfLink targetLink : links) {\n                boolean ipAddrCheck = sourceLink.getOspfRemIpAddr().equals(targetLink.getOspfIpAddr()) && targetLink.getOspfRemIpAddr().equals(sourceLink.getOspfIpAddr());\n                if (ipAddrCheck) {\n                    summaryMap.put(sourceNode.getNodeId() + \":\" + sourceLink.getOspfIfIndex(),\n                            new EdgeAlarmStatusSummary(sourceLink.getId(), targetLink.getId(), null));\n                }\n            }\n        }\n\n        List<OnmsAlarm> alarms = getLinkDownAlarms();\n\n        for (OnmsAlarm alarm : alarms) {\n            String key = alarm.getNodeId() + \":\" + alarm.getIfIndex();\n            if (summaryMap.containsKey(key)) {\n\n                Collection<EdgeAlarmStatusSummary> summaries = summaryMap.get(key);\n                for (EdgeAlarmStatusSummary summary : summaries) {\n                    summary.setEventUEI(alarm.getUei());\n                }\n\n            }\n\n        }\n\n        return new ArrayList<EdgeAlarmStatusSummary>(summaryMap.values());\n\n    }","commit_id":"2a50198a8cad972080ab696dbe72fd3fe1fbe1c9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private List<OspfLink> createOspfLinks() {\n        List<OspfLink> links = new ArrayList<OspfLink>();\n\n        OspfLink link = createOspfLink(m_node1, \"192.168.100.246\", \"255.255.255.252\", 0, 10101, \"192.168.100.249\", \"192.168.100.245\", 0);\n        link.setId(1);\n        links.add(link);\n\n        OspfLink link2 = createOspfLink(m_node2, \"192.168.100.245\", \"255.255.255.252\", 0, 10101, \"192.168.100.250\", \"192.168.100.246\", 0);\n        link2.setId(2);\n        links.add(link2);\n\n        return links;\n    }","id":107322,"modified_method":"private List<OspfLink> createOspfLinks() {\n        List<OspfLink> links = new ArrayList<OspfLink>();\n\n        OspfLink link = createOspfLink(m_node1, \"192.168.100.246\", \"255.255.255.252\", 0, 10101, \"192.168.100.249\", \"192.168.100.245\", 0);\n        link.setId(1);\n        links.add(link);\n\n        OspfLink link2 = createOspfLink(m_node2, \"192.168.100.245\", \"255.255.255.252\", 0, 10100, \"192.168.100.250\", \"192.168.100.246\", 0);\n        link2.setId(2);\n        links.add(link2);\n\n        return links;\n    }","commit_id":"2a50198a8cad972080ab696dbe72fd3fe1fbe1c9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testGetLldpLinkStatusDown(){\n        EasyMock.expect(\n                m_alarmDao.findMatching(EasyMock.anyObject(org.opennms.core.criteria.Criteria.class))).andReturn(createDownAlarm());\n        EasyMock.expect(m_lldpLinkDao.findMatching(EasyMock.<org.opennms.core.criteria.Criteria>anyObject())).andReturn(createOspfLinks());\n\n        EasyMock.replay(m_alarmDao, m_lldpLinkDao);\n\n        List<EdgeRef> edges = createEdges();\n        Map<EdgeRef, Status> statusMap = m_statusProvider.getStatusForEdges(m_edgeProvider, edges, new Criteria[0]);\n\n        assertEquals(1, statusMap.size());\n        assertEquals(edges.get(0), new ArrayList<EdgeRef>(statusMap.keySet()).get(0));\n        Status status = statusMap.get(edges.get(0));\n        assertEquals(\"down\", status.computeStatus());\n    }","id":107323,"modified_method":"@Test\n    public void testGetOspfLinkStatusDown(){\n        EasyMock.expect(\n                m_alarmDao.findMatching(EasyMock.anyObject(org.opennms.core.criteria.Criteria.class))).andReturn(createDownAlarm());\n        EasyMock.expect(m_ospfLinkDao.findMatching(EasyMock.<org.opennms.core.criteria.Criteria>anyObject())).andReturn(createOspfLinks());\n\n        EasyMock.replay(m_alarmDao, m_ospfLinkDao);\n\n        List<EdgeRef> edges = createEdges();\n        Map<EdgeRef, Status> statusMap = m_statusProvider.getStatusForEdges(m_edgeProvider, edges, new Criteria[0]);\n\n        assertEquals(1, statusMap.size());\n        assertEquals(edges.get(0), new ArrayList<EdgeRef>(statusMap.keySet()).get(0));\n        Status status = statusMap.get(edges.get(0));\n        assertEquals(\"down\", status.computeStatus());\n    }","commit_id":"2a50198a8cad972080ab696dbe72fd3fe1fbe1c9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testGetLldpLinkStatus() {\n\n        EasyMock.expect(\n                m_alarmDao.findMatching(EasyMock.anyObject(org.opennms.core.criteria.Criteria.class))).andReturn(createAlarm());\n        EasyMock.expect(m_lldpLinkDao.findMatching(EasyMock.<org.opennms.core.criteria.Criteria>anyObject())).andReturn(createOspfLinks());\n\n        EasyMock.replay(m_alarmDao, m_lldpLinkDao);\n\n        List<EdgeRef> edges = createEdges();\n        Map<EdgeRef, Status> statusMap = m_statusProvider.getStatusForEdges(m_edgeProvider, edges, new Criteria[0]);\n\n        assertEquals(1, statusMap.size());\n        assertEquals(edges.get(0), new ArrayList<EdgeRef>(statusMap.keySet()).get(0));\n        Status status = statusMap.get(edges.get(0));\n        assertEquals(\"up\", status.computeStatus());\n\n    }","id":107324,"modified_method":"@Test\n    public void testGetOspfLinkStatus() {\n\n        EasyMock.expect(\n                m_alarmDao.findMatching(EasyMock.anyObject(org.opennms.core.criteria.Criteria.class))).andReturn(createEmptyAlarmList());\n        EasyMock.expect(m_ospfLinkDao.findMatching(EasyMock.<org.opennms.core.criteria.Criteria>anyObject())).andReturn(createOspfLinks());\n\n        EasyMock.replay(m_alarmDao, m_ospfLinkDao);\n\n        List<EdgeRef> edges = createEdges();\n        Map<EdgeRef, Status> statusMap = m_statusProvider.getStatusForEdges(m_edgeProvider, edges, new Criteria[0]);\n\n        assertEquals(1, statusMap.size());\n        assertEquals(edges.get(0), new ArrayList<EdgeRef>(statusMap.keySet()).get(0));\n        Status status = statusMap.get(edges.get(0));\n        assertEquals(\"up\", status.computeStatus());\n\n    }","commit_id":"2a50198a8cad972080ab696dbe72fd3fe1fbe1c9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Before\n    public void setUp() {\n        m_node1 = new OnmsNode();\n        m_node1.setId(1);\n        m_node1.setLldpElement(new LldpElement(m_node1, \"node1ChassisId\", \"node1SysName\", LldpElement.LldpChassisIdSubType.LLDP_CHASSISID_SUBTYPE_LOCAL));\n\n        m_node2 = new OnmsNode();\n        m_node2.setId(2);\n        m_node2.setLldpElement(new LldpElement(m_node2, \"node2ChassisId\", \"node2SysName\", LldpElement.LldpChassisIdSubType.LLDP_CHASSISID_SUBTYPE_LOCAL));\n\n        m_alarmDao = EasyMock.createMock(AlarmDao.class);\n        m_lldpLinkDao = EasyMock.createMock(OspfLinkDao.class);\n\n        m_statusProvider = new OspfLinkStatusProvider();\n        m_statusProvider.setAlarmDao(m_alarmDao);\n        m_statusProvider.setOspfLinkDao(m_lldpLinkDao);\n\n        m_edgeProvider = EasyMock.createMock(EdgeProvider.class);\n\n    }","id":107325,"modified_method":"@Before\n    public void setUp() {\n        m_node1 = new OnmsNode();\n        m_node1.setId(1);\n\n        m_node2 = new OnmsNode();\n        m_node2.setId(2);\n\n        m_nodeChennai = new OnmsNode();\n        m_nodeChennai.setId(14);\n\n        m_nodeDehli = new OnmsNode();\n        m_nodeDehli.setId(10);\n\n\n        m_alarmDao = EasyMock.createMock(AlarmDao.class);\n        m_ospfLinkDao = EasyMock.createMock(OspfLinkDao.class);\n\n        m_statusProvider = new OspfLinkStatusProvider();\n        m_statusProvider.setAlarmDao(m_alarmDao);\n        m_statusProvider.setOspfLinkDao(m_ospfLinkDao);\n\n        m_edgeProvider = EasyMock.createMock(EdgeProvider.class);\n\n    }","commit_id":"2a50198a8cad972080ab696dbe72fd3fe1fbe1c9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private List<OnmsAlarm> createAlarm() {\n        return Collections.EMPTY_LIST;\n    }","id":107326,"modified_method":"private List<OnmsAlarm> createEmptyAlarmList() {\n        return Collections.EMPTY_LIST;\n    }","commit_id":"2a50198a8cad972080ab696dbe72fd3fe1fbe1c9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Checks for possible broken links when the given list of resources would be published.<p>\n     * \n     * @param pubResources list of resources to be published\n     * \n     * @return a list of resources that would produce broken links when published \n     */\n    public List<CmsPublishResourceBean> getBrokenResources(List<CmsResource> pubResources) {\n\n        List<CmsPublishResourceBean> resources = new ArrayList<CmsPublishResourceBean>();\n\n        CmsPublishList publishList = new CmsPublishList(pubResources, m_options.isIncludeSiblings(), false);\n\n        CmsRelationPublishValidator validator = new CmsRelationPublishValidator(m_cms, publishList);\n        for (String resourceName : validator.keySet()) {\n            CmsRelationValidatorInfoEntry infoEntry = validator.getInfoEntry(resourceName);\n            try {\n                CmsResource resource = m_cms.readResource(resourceName, CmsResourceFilter.ALL);\n                if (resource.getState().isDeleted()) {\n                    for (CmsRelation relation : infoEntry.getRelations()) {\n                        try {\n                            CmsResource theResource = relation.getSource(m_cms, CmsResourceFilter.ALL);\n                            CmsPublishResourceInfoBean info = new CmsPublishResourceInfoBean(\n                                Messages.get().getBundle(m_locale).key(Messages.GUI_RESOURCE_MISSING_ONLINE_0),\n                                CmsPublishResourceInfoBean.Type.MISSING);\n                            CmsPublishResourceBean pubRes = resourceToBean(\n                                theResource,\n                                info,\n                                false,\n                                Collections.singletonList(resourceToBean(resource, null, false, null)));\n                            resources.add(pubRes);\n                        } catch (CmsException e) {\n                            // should never happen\n                            LOG.error(e.getLocalizedMessage(), e);\n                        }\n                    }\n                } else {\n                    try {\n                        List<CmsPublishResourceBean> related = new ArrayList<CmsPublishResourceBean>();\n                        for (CmsRelation relation : infoEntry.getRelations()) {\n                            try {\n                                CmsResource theResource = relation.getTarget(m_cms, CmsResourceFilter.ALL);\n                                CmsPublishResourceInfoBean info = new CmsPublishResourceInfoBean(\n                                    Messages.get().getBundle(m_locale).key(Messages.GUI_BROKEN_LINK_ONLINE_0),\n                                    CmsPublishResourceInfoBean.Type.BROKENLINK);\n                                CmsPublishResourceBean pubRes = resourceToBean(theResource, info, false, null);\n                                related.add(pubRes);\n                            } catch (CmsException e) {\n                                // should never happen\n                                LOG.error(e.getLocalizedMessage(), e);\n                            }\n                        }\n                        CmsPublishResourceBean pubRes = resourceToBean(resource, null, false, related);\n                        resources.add(pubRes);\n                    } catch (Exception e) {\n                        // should never happen\n                        LOG.error(e.getLocalizedMessage(), e);\n                    }\n                }\n            } catch (CmsException e) {\n                // should never happen\n                LOG.error(e.getLocalizedMessage(), e);\n            }\n        }\n\n        return resources;\n    }","id":107327,"modified_method":"/**\n     * Checks for possible broken links when the given list of resources would be published.<p>\n     * \n     * @param pubResources list of resources to be published\n     * \n     * @return a list of resources that would produce broken links when published \n     */\n    public List<CmsPublishResourceBean> getBrokenResources(List<CmsResource> pubResources) {\n\n        List<CmsPublishResourceBean> resources = new ArrayList<CmsPublishResourceBean>();\n\n        CmsPublishList publishList = new CmsPublishList(pubResources, m_options.isIncludeSiblings(), false);\n\n        CmsRelationPublishValidator validator = new CmsRelationPublishValidator(m_cms, publishList);\n        for (String resourceName : validator.keySet()) {\n            CmsRelationValidatorInfoEntry infoEntry = validator.getInfoEntry(resourceName);\n            try {\n                CmsResource resource = m_cms.readResource(\n                    m_cms.getRequestContext().removeSiteRoot(resourceName),\n                    CmsResourceFilter.ALL);\n                if (resource.getState().isDeleted()) {\n                    for (CmsRelation relation : infoEntry.getRelations()) {\n                        try {\n                            CmsResource theResource = relation.getSource(m_cms, CmsResourceFilter.ALL);\n                            CmsPublishResourceInfoBean info = new CmsPublishResourceInfoBean(\n                                Messages.get().getBundle(m_locale).key(Messages.GUI_RESOURCE_MISSING_ONLINE_0),\n                                CmsPublishResourceInfoBean.Type.MISSING);\n                            CmsPublishResourceBean pubRes = resourceToBean(\n                                theResource,\n                                info,\n                                false,\n                                Collections.singletonList(resourceToBean(resource, null, false, null)));\n                            resources.add(pubRes);\n                        } catch (CmsException e) {\n                            // should never happen\n                            LOG.error(e.getLocalizedMessage(), e);\n                        }\n                    }\n                } else {\n                    try {\n                        List<CmsPublishResourceBean> related = new ArrayList<CmsPublishResourceBean>();\n                        for (CmsRelation relation : infoEntry.getRelations()) {\n                            try {\n                                CmsResource theResource = relation.getTarget(m_cms, CmsResourceFilter.ALL);\n                                CmsPublishResourceInfoBean info = new CmsPublishResourceInfoBean(\n                                    Messages.get().getBundle(m_locale).key(Messages.GUI_BROKEN_LINK_ONLINE_0),\n                                    CmsPublishResourceInfoBean.Type.BROKENLINK);\n                                CmsPublishResourceBean pubRes = resourceToBean(theResource, info, false, null);\n                                related.add(pubRes);\n                            } catch (CmsException e) {\n                                // should never happen\n                                LOG.error(e.getLocalizedMessage(), e);\n                            }\n                        }\n                        CmsPublishResourceBean pubRes = resourceToBean(resource, null, false, related);\n                        resources.add(pubRes);\n                    } catch (Exception e) {\n                        // should never happen\n                        LOG.error(e.getLocalizedMessage(), e);\n                    }\n                }\n            } catch (CmsException e) {\n                // should never happen\n                LOG.error(e.getLocalizedMessage(), e);\n            }\n        }\n\n        return resources;\n    }","commit_id":"77d9376e92e5191097f02a9c2bb5337a14573227","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the list of publish groups with resources that can be published.<p>\n     * \n     * @return the list of publish groups with resources that can be published\n     */\n    public List<CmsPublishGroupBean> getPublishGroups() {\n\n        // first look for already published resources\n        Set<CmsResource> published = getAlreadyPublishedResources();\n\n        // then for resources without permission\n        Set<CmsResource> exclude = new HashSet<CmsResource>(published);\n\n        ResourcesAndRelated permissions = getResourcesWithoutPermissions(exclude);\n\n        // and finally for locked resources\n        exclude.addAll(permissions.getResources());\n        exclude.addAll(permissions.getRelatedResources());\n\n        ResourcesAndRelated locked = getBlockingLockedResources(exclude);\n\n        // all direct resources that can not be published\n        exclude.clear();\n        exclude.addAll(published);\n        exclude.addAll(permissions.getResources());\n        exclude.addAll(locked.getResources());\n\n        // update the publish list\n        ResourcesAndRelated pubResources = new ResourcesAndRelated();\n        pubResources.getResources().addAll(getPublishResources().getResources());\n        pubResources.getResources().removeAll(exclude);\n        pubResources.getRelatedResources().addAll(getPublishResources().getRelatedResources());\n        pubResources.getRelatedResources().removeAll(permissions.getRelatedResources());\n        pubResources.getRelatedResources().removeAll(locked.getRelatedResources());\n\n        if (pubResources.getResources().isEmpty()) {\n            // nothing to do\n            return new ArrayList<CmsPublishGroupBean>();\n        }\n\n        // the resources the user can really publish\n        Set<CmsResource> allPubRes = new HashSet<CmsResource>(pubResources.getRelatedResources());\n        allPubRes.addAll(pubResources.getResources());\n\n        List<CmsResource> sortedResources = new ArrayList<CmsResource>(pubResources.getResources());\n        Collections.sort(sortedResources, I_CmsResource.COMPARE_DATE_LAST_MODIFIED);\n\n        List<CmsResource> pubList = new ArrayList<CmsResource>();\n        try {\n            pubList = OpenCms.getPublishManager().getUsersPubList(m_cms);\n        } catch (CmsException e) {\n            // should never happen\n            LOG.error(e.getLocalizedMessage(), e);\n        }\n\n        int sessions = GROUP_SESSIONS_NUMBER;\n        int days = GROUP_DAYS_NUMBER;\n        List<CmsPublishGroupBean> groups = new ArrayList<CmsPublishGroupBean>();\n        List<CmsPublishResourceBean> resources = new ArrayList<CmsPublishResourceBean>();\n        long groupDate = sortedResources.get(0).getDateLastModified(); // we checked earlier that there is at least one resource\n        ListIterator<CmsResource> itResources = sortedResources.listIterator();\n        while (itResources.hasNext()) {\n            CmsResource resource = itResources.next();\n            try {\n                List<CmsPublishResourceBean> related = getRelatedResources(\n                    resource,\n                    allPubRes,\n                    published,\n                    permissions,\n                    locked);\n                CmsPublishResourceInfoBean info = getResourceInfo(resource, published, permissions, locked);\n                CmsPublishResourceBean pubResource = resourceToBean(resource, info, pubList.contains(resource), related);\n                resources.add(pubResource);\n            } catch (Exception e) {\n                // should never happen\n                LOG.error(e.getLocalizedMessage(), e);\n            }\n            boolean newGroup = !itResources.hasNext();\n            if (!newGroup) {\n                CmsResource nextRes = itResources.next();\n                itResources.previous(); // go back to continue in the right order\n                if (sessions > 0) {\n                    // check the difference is not greater than x hours\n                    newGroup = (resource.getDateLastModified() - nextRes.getDateLastModified() > GROUP_SESSIONS_GAP);\n                } else if (days > 0) {\n                    // check they are not in the same day\n                    Calendar oldCalendar = Calendar.getInstance();\n                    oldCalendar.setTimeInMillis(resource.getDateLastModified());\n                    Calendar newCalendar = Calendar.getInstance();\n                    newCalendar.setTimeInMillis(nextRes.getDateLastModified());\n\n                    newGroup = (oldCalendar.get(Calendar.DAY_OF_MONTH) == newCalendar.get(Calendar.DAY_OF_MONTH));\n                    newGroup &= (oldCalendar.get(Calendar.MONTH) == newCalendar.get(Calendar.MONTH));\n                    newGroup &= (oldCalendar.get(Calendar.YEAR) == newCalendar.get(Calendar.YEAR));\n                }\n            }\n            if (newGroup) {\n                try {\n                    String groupName;\n                    if (sessions > 0) {\n                        groupName = Messages.get().getBundle(m_locale).key(\n                            Messages.GUI_GROUPNAME_SESSION_2,\n                            new Date(groupDate),\n                            new Date(resource.getDateLastModified()));\n                        sessions--;\n                    } else if (days > 0) {\n                        groupName = Messages.get().getBundle(m_locale).key(\n                            Messages.GUI_GROUPNAME_DAY_1,\n                            new Date(groupDate));\n                        days--;\n                    } else {\n                        groupName = Messages.get().getBundle(m_locale).key(Messages.GUI_GROUPNAME_EVERYTHING_ELSE_0);\n                    }\n                    if (itResources.hasNext()) {\n                        CmsResource nextRes = itResources.next();\n                        itResources.previous(); // go back to continue in the right order\n                        groupDate = nextRes.getDateLastModified();\n                    }\n                    CmsPublishGroupBean group = new CmsPublishGroupBean(groupName, resources);\n                    groups.add(group);\n                    resources = new ArrayList<CmsPublishResourceBean>();\n                } catch (Exception e) {\n                    // should never happen\n                    LOG.error(e.getLocalizedMessage(), e);\n                }\n            }\n        }\n\n        return groups;\n    }","id":107328,"modified_method":"/**\n     * Returns the list of publish groups with resources that can be published.<p>\n     * \n     * @return the list of publish groups with resources that can be published\n     */\n    public List<CmsPublishGroupBean> getPublishGroups() {\n\n        // first look for already published resources\n        Set<CmsResource> published = getAlreadyPublishedResources();\n\n        // then for resources without permission\n        Set<CmsResource> exclude = new HashSet<CmsResource>(published);\n\n        ResourcesAndRelated permissions = getResourcesWithoutPermissions(exclude);\n\n        // and finally for locked resources\n        exclude.addAll(permissions.getResources());\n        exclude.addAll(permissions.getRelatedResources());\n\n        ResourcesAndRelated locked = getBlockingLockedResources(exclude);\n\n        // all direct resources that can not be published\n        exclude.clear();\n        exclude.addAll(published);\n        exclude.addAll(permissions.getResources());\n        exclude.addAll(locked.getResources());\n\n        // update the publish list\n        ResourcesAndRelated pubResources = new ResourcesAndRelated();\n        pubResources.getResources().addAll(getPublishResources().getResources());\n        pubResources.getResources().removeAll(exclude);\n        pubResources.getRelatedResources().addAll(getPublishResources().getRelatedResources());\n        pubResources.getRelatedResources().removeAll(permissions.getRelatedResources());\n        pubResources.getRelatedResources().removeAll(locked.getRelatedResources());\n\n        if (pubResources.getResources().isEmpty()) {\n            // nothing to do\n            return new ArrayList<CmsPublishGroupBean>();\n        }\n\n        // the resources the user can really publish\n        Set<CmsResource> allPubRes = new HashSet<CmsResource>(pubResources.getRelatedResources());\n        allPubRes.addAll(pubResources.getResources());\n\n        List<CmsResource> sortedResources = new ArrayList<CmsResource>(pubResources.getResources());\n        Collections.sort(sortedResources, I_CmsResource.COMPARE_DATE_LAST_MODIFIED);\n\n        List<CmsResource> pubList = new ArrayList<CmsResource>();\n        try {\n            pubList = OpenCms.getPublishManager().getUsersPubList(m_cms);\n        } catch (CmsException e) {\n            // should never happen\n            LOG.error(e.getLocalizedMessage(), e);\n        }\n\n        int sessions = GROUP_SESSIONS_NUMBER;\n        int days = GROUP_DAYS_NUMBER;\n        List<CmsPublishGroupBean> groups = new ArrayList<CmsPublishGroupBean>();\n        List<CmsPublishResourceBean> resources = new ArrayList<CmsPublishResourceBean>();\n        long groupDate = sortedResources.get(0).getDateLastModified(); // we checked earlier that there is at least one resource\n        ListIterator<CmsResource> itResources = sortedResources.listIterator();\n        while (itResources.hasNext()) {\n            CmsResource resource = itResources.next();\n            try {\n                List<CmsPublishResourceBean> related = getRelatedResources(\n                    resource,\n                    allPubRes,\n                    published,\n                    permissions,\n                    locked);\n                CmsPublishResourceInfoBean info = getResourceInfo(resource, published, permissions, locked);\n                CmsPublishResourceBean pubResource = resourceToBean(resource, info, pubList.contains(resource), related);\n                resources.add(pubResource);\n            } catch (Exception e) {\n                // should never happen\n                LOG.error(e.getLocalizedMessage(), e);\n            }\n            boolean newGroup = !itResources.hasNext();\n            if (!newGroup) {\n                CmsResource nextRes = itResources.next();\n                itResources.previous(); // go back to continue in the right order\n                if (sessions > 0) {\n                    // check the difference is not greater than x hours\n                    newGroup = (resource.getDateLastModified() - nextRes.getDateLastModified() > GROUP_SESSIONS_GAP);\n                } else if (days > 0) {\n                    // check they are not in the same day\n                    Calendar oldCalendar = Calendar.getInstance();\n                    oldCalendar.setTimeInMillis(resource.getDateLastModified());\n                    Calendar newCalendar = Calendar.getInstance();\n                    newCalendar.setTimeInMillis(nextRes.getDateLastModified());\n\n                    newGroup = (oldCalendar.get(Calendar.DAY_OF_MONTH) == newCalendar.get(Calendar.DAY_OF_MONTH));\n                    newGroup &= (oldCalendar.get(Calendar.MONTH) == newCalendar.get(Calendar.MONTH));\n                    newGroup &= (oldCalendar.get(Calendar.YEAR) == newCalendar.get(Calendar.YEAR));\n                }\n            }\n            if (newGroup) {\n                try {\n                    String groupName;\n                    if (sessions > 0) {\n                        if (resources.size() > 1) {\n                            groupName = Messages.get().getBundle(m_locale).key(\n                                Messages.GUI_GROUPNAME_SESSION_2,\n                                new Date(groupDate),\n                                new Date(resource.getDateLastModified()));\n                        } else {\n                            groupName = Messages.get().getBundle(m_locale).key(\n                                Messages.GUI_GROUPNAME_SESSION_1,\n                                new Date(groupDate));\n                        }\n                        sessions--;\n                    } else if (days > 0) {\n                        groupName = Messages.get().getBundle(m_locale).key(\n                            Messages.GUI_GROUPNAME_DAY_1,\n                            new Date(groupDate));\n                        days--;\n                    } else {\n                        groupName = Messages.get().getBundle(m_locale).key(Messages.GUI_GROUPNAME_EVERYTHING_ELSE_0);\n                    }\n                    if (itResources.hasNext()) {\n                        CmsResource nextRes = itResources.next();\n                        itResources.previous(); // go back to continue in the right order\n                        groupDate = nextRes.getDateLastModified();\n                    }\n                    CmsPublishGroupBean group = new CmsPublishGroupBean(groupName, resources);\n                    groups.add(group);\n                    resources = new ArrayList<CmsPublishResourceBean>();\n                } catch (Exception e) {\n                    // should never happen\n                    LOG.error(e.getLocalizedMessage(), e);\n                }\n            }\n        }\n\n        return groups;\n    }","commit_id":"77d9376e92e5191097f02a9c2bb5337a14573227","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** \n     * Creates a new publish group bean.<p> \n     * \n     * @param name the group name\n     * @param resources the resources\n     **/\n    public CmsPublishGroupBean(String name, List<CmsPublishResourceBean> resources) {\n\n        m_name = name;\n        m_resources = Collections.unmodifiableList(resources);\n    }","id":107329,"modified_method":"/** \n     * Creates a new publish group bean.<p> \n     * \n     * @param name the group name\n     * @param resources the resources\n     **/\n    public CmsPublishGroupBean(String name, List<CmsPublishResourceBean> resources) {\n\n        m_name = name;\n        m_resources = ((resources == null)\n        ? Collections.<CmsPublishResourceBean> emptyList()\n        : Collections.unmodifiableList(resources));\n    }","commit_id":"77d9376e92e5191097f02a9c2bb5337a14573227","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** \n     * Creates a new publish group bean.<p> \n     * \n     * @param id the resource id\n     * @param name the resource name\n     * @param title the resource title\n     * @param icon the resource icon\n     * @param state the resource state\n     * @param removable to indicate if the resource can be removed from the user's publish list\n     * @param info the additional information, if any\n     * @param related the related resources\n     **/\n    public CmsPublishResourceBean(\n        CmsUUID id,\n        String name,\n        String title,\n        String icon,\n        String state,\n        boolean removable,\n        CmsPublishResourceInfoBean info,\n        List<CmsPublishResourceBean> related) {\n\n        super();\n        m_icon = icon;\n        m_id = id;\n        m_name = name;\n        m_related = Collections.unmodifiableList(related);\n        m_state = state;\n        m_title = title;\n        m_removable = removable;\n        m_info = info;\n    }","id":107330,"modified_method":"/** \n     * Creates a new publish group bean.<p> \n     * \n     * @param id the resource id\n     * @param name the resource name\n     * @param title the resource title\n     * @param icon the resource icon\n     * @param state the resource state\n     * @param removable to indicate if the resource can be removed from the user's publish list\n     * @param info the additional information, if any\n     * @param related the related resources\n     **/\n    public CmsPublishResourceBean(\n        CmsUUID id,\n        String name,\n        String title,\n        String icon,\n        String state,\n        boolean removable,\n        CmsPublishResourceInfoBean info,\n        List<CmsPublishResourceBean> related) {\n\n        super();\n        m_icon = icon;\n        m_id = id;\n        m_name = name;\n        m_related = ((related == null)\n        ? Collections.<CmsPublishResourceBean> emptyList()\n        : Collections.unmodifiableList(related));\n        m_state = state;\n        m_title = title;\n        m_removable = removable;\n        m_info = info;\n    }","commit_id":"77d9376e92e5191097f02a9c2bb5337a14573227","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.json.I_CmsJsonifable#toJson()\n     */\n    public JSONObject toJson() throws JSONException {\n\n        JSONObject jsonRes = new JSONObject();\n        jsonRes.put(JsonProperty.ID.name().toLowerCase(), m_id.toString());\n        jsonRes.put(JsonProperty.URI.name().toLowerCase(), m_name);\n        jsonRes.put(JsonProperty.TITLE.name().toLowerCase(), m_title);\n        jsonRes.put(JsonProperty.ICON.name().toLowerCase(), m_icon);\n        jsonRes.put(JsonProperty.STATE.name().toLowerCase(), m_state);\n        jsonRes.put(JsonProperty.REMOVABLE.name().toLowerCase(), m_removable);\n        jsonRes.put(JsonProperty.INFO.name().toLowerCase(), m_info.getValue());\n        jsonRes.put(JsonProperty.INFOTYPE.name().toLowerCase(), m_info.getType().toString().toLowerCase());\n        JSONArray resources = new JSONArray();\n        for (CmsPublishResourceBean related : m_related) {\n            resources.put(related.toJson());\n        }\n        jsonRes.put(JsonProperty.RELATED.name().toLowerCase(), resources);\n        return jsonRes;\n    }","id":107331,"modified_method":"/**\n     * @see org.opencms.json.I_CmsJsonifable#toJson()\n     */\n    public JSONObject toJson() throws JSONException {\n\n        JSONObject jsonRes = new JSONObject();\n        jsonRes.put(JsonProperty.ID.name().toLowerCase(), m_id.toString());\n        jsonRes.put(JsonProperty.URI.name().toLowerCase(), m_name);\n        jsonRes.put(JsonProperty.TITLE.name().toLowerCase(), m_title);\n        jsonRes.put(JsonProperty.ICON.name().toLowerCase(), m_icon);\n        jsonRes.put(JsonProperty.STATE.name().toLowerCase(), m_state);\n        jsonRes.put(JsonProperty.REMOVABLE.name().toLowerCase(), m_removable);\n        if (m_info != null) {\n            jsonRes.put(JsonProperty.INFO.name().toLowerCase(), m_info.getValue());\n            jsonRes.put(JsonProperty.INFOTYPE.name().toLowerCase(), m_info.getType().toString().toLowerCase());\n        }\n        JSONArray resources = new JSONArray();\n        for (CmsPublishResourceBean related : m_related) {\n            resources.put(related.toJson());\n        }\n        jsonRes.put(JsonProperty.RELATED.name().toLowerCase(), resources);\n        return jsonRes;\n    }","commit_id":"77d9376e92e5191097f02a9c2bb5337a14573227","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the data for the given container page.<p>\n     * \n     * @param resource the container page's resource \n     * @param cntPage the container page to use\n     * @param elemUri the current element uri, <code>null<\/code> if not to be used as template\n     * \n     * @return the data for the given container page\n     * \n     * @throws CmsException if something goes wrong with the cms context\n     * @throws JSONException if something goes wrong with the JSON manipulation\n     */\n    public JSONObject getContainerPage(CmsResource resource, CmsContainerPageBean cntPage, String elemUri)\n    throws CmsException, JSONException {\n\n        CmsObject cms = getCmsObject();\n\n        // create empty result object\n        JSONObject result = new JSONObject();\n        JSONObject resElements = new JSONObject();\n        JSONObject resContainers = new JSONObject();\n        result.put(JsonCntPage.ELEMENTS.getName(), resElements);\n        result.put(JsonCntPage.CONTAINERS.getName(), resContainers);\n        result.put(JsonCntPage.LOCALE.getName(), cms.getRequestContext().getLocale().toString());\n        result.put(JsonCntPage.RECENT_LIST_SIZE.getName(), m_manager.getRecentListMaxSize(cms));\n\n        // get the container page itself\n        Set<String> types = cntPage.getTypes();\n        // collect creatable type elements\n        resElements.merge(getNewResourceTypes(cms.getSitePath(resource), types), true, false);\n        // collect searchable type elements\n        resElements.merge(getSearchResourceTypes(cms.getSitePath(resource), types), true, false);\n\n        // collect page elements\n        CmsElementUtil elemUtil = new CmsElementUtil(\n            cms,\n            getRequest().getParameter(ReqParam.URI.getName()),\n            getRequest(),\n            getResponse());\n        Set<String> ids = new HashSet<String>();\n        for (Map.Entry<String, CmsContainerBean> entry : cntPage.getContainers().entrySet()) {\n            CmsContainerBean container = entry.getValue();\n\n            // set the container data\n            JSONObject resContainer = new JSONObject();\n            resContainer.put(JsonContainer.OBJTYPE.getName(), TYPE_CONTAINER);\n            resContainer.put(JsonContainer.NAME.getName(), container.getName());\n            resContainer.put(JsonContainer.TYPE.getName(), container.getType());\n            resContainer.put(JsonContainer.MAXELEMENTS.getName(), container.getMaxElements());\n            JSONArray resContainerElems = new JSONArray();\n            resContainer.put(JsonContainer.ELEMENTS.getName(), resContainerElems);\n\n            // get the actual number of elements to render\n            int renderElems = container.getElements().size();\n            if ((container.getMaxElements() > -1) && (renderElems > container.getMaxElements())) {\n                renderElems = container.getMaxElements();\n            }\n            // add the template element, this will be executed only once during the whole 'for' iteration\n            if ((elemUri != null) && container.getType().equals(CmsContainerPageBean.TYPE_TEMPLATE)) {\n                renderElems--;\n\n                CmsResource elemRes = cms.readResource(elemUri);\n                CmsContainerElementBean element = new CmsContainerElementBean(elemRes.getStructureId(), null, null);\n                m_sessionCache.setCacheContainerElement(element.getClientId(), element);\n                // check if the element already exists\n                String id = element.getClientId();\n                // collect ids\n                resContainerElems.put(id);\n                if (ids.contains(id)) {\n                    continue;\n                }\n                // get the element data\n                JSONObject resElement = elemUtil.getElementData(element, types);\n                // store element data\n                ids.add(id);\n                resElements.put(id, resElement);\n            }\n\n            // iterate the elements\n            for (CmsContainerElementBean element : container.getElements()) {\n                if (renderElems < 1) {\n                    // just collect as many elements as allowed in the template\n                    break;\n                }\n                renderElems--;\n\n                // collect ids\n                String id = element.getClientId();\n                resContainerElems.put(id);\n                if (ids.contains(id)) {\n                    continue;\n                }\n                m_sessionCache.setCacheContainerElement(element.getClientId(), element);\n                // get the element data\n                JSONObject resElement = elemUtil.getElementData(element, types);\n\n                // get subcontainer elements\n                if (resElement.has(CmsElementUtil.JsonElement.SUBITEMS.getName())) {\n                    // this container page should contain exactly one container\n                    CmsResource elementRes = cms.readResource(element.getElementId());\n                    CmsXmlSubContainer xmlSubContainer = CmsXmlSubContainerFactory.unmarshal(\n                        cms,\n                        elementRes,\n                        getRequest());\n                    CmsSubContainerBean subContainer = xmlSubContainer.getSubContainer(\n                        cms,\n                        cms.getRequestContext().getLocale());\n\n                    // adding all sub-items to the elements data\n                    for (CmsContainerElementBean subElement : subContainer.getElements()) {\n                        if (!ids.contains(subElement.getElementId())) {\n                            m_sessionCache.setCacheContainerElement(subElement.getClientId(), subElement);\n                            String subId = subElement.getClientId();\n                            if (ids.contains(subId)) {\n                                continue;\n                            }\n                            JSONObject subItemData = elemUtil.getElementData(subElement, types);\n                            ids.add(subId);\n                            resElements.put(subId, subItemData);\n                        }\n                    }\n                }\n\n                // store element data\n                ids.add(id);\n                resElements.put(id, resElement);\n            }\n\n            resContainers.put(container.getName(), resContainer);\n        }\n        // collect the favorites\n        JSONArray resFavorites = getFavoriteList(resElements, types);\n        result.put(JsonCntPage.FAVORITES.getName(), resFavorites);\n        // collect the recent list\n        JSONArray resRecent = getRecentList(resElements, types);\n        result.put(JsonCntPage.RECENT.getName(), resRecent);\n\n        return result;\n    }","id":107332,"modified_method":"/**\n     * Returns the data for the given container page.<p>\n     * \n     * @param resource the container page's resource \n     * @param cntPage the container page to use\n     * @param elemUri the current element uri, <code>null<\/code> if not to be used as template\n     * @param types ythe container page types\n     * \n     * @return the data for the given container page\n     * \n     * @throws CmsException if something goes wrong with the cms context\n     * @throws JSONException if something goes wrong with the JSON manipulation\n     */\n    public JSONObject getContainerPage(\n        CmsResource resource,\n        CmsContainerPageBean cntPage,\n        String elemUri,\n        Set<String> types) throws CmsException, JSONException {\n\n        CmsObject cms = getCmsObject();\n\n        // create empty result object\n        JSONObject result = new JSONObject();\n        JSONObject resElements = new JSONObject();\n        result.put(JsonCntPage.ELEMENTS.getName(), resElements);\n        result.put(JsonCntPage.LOCALE.getName(), cms.getRequestContext().getLocale().toString());\n        result.put(JsonCntPage.RECENT_LIST_SIZE.getName(), m_manager.getRecentListMaxSize(cms));\n\n        // collect creatable type elements\n        resElements.merge(getNewResourceTypes(cms.getSitePath(resource), types), true, false);\n        // collect searchable type elements\n        resElements.merge(getSearchResourceTypes(cms.getSitePath(resource), types), true, false);\n\n        // collect page elements\n        CmsElementUtil elemUtil = new CmsElementUtil(\n            cms,\n            getRequest().getParameter(ReqParam.URI.getName()),\n            getRequest(),\n            getResponse());\n        Set<String> ids = new HashSet<String>();\n        for (Map.Entry<String, CmsContainerBean> entry : cntPage.getContainers().entrySet()) {\n            CmsContainerBean container = entry.getValue();\n\n            // get the actual number of elements to render\n            int renderElems = container.getElements().size();\n            if ((container.getMaxElements() > -1) && (renderElems > container.getMaxElements())) {\n                renderElems = container.getMaxElements();\n            }\n            // add the template element, this will be executed only once during the whole 'for' iteration\n            if ((elemUri != null) && container.getType().equals(CmsContainerPageBean.TYPE_TEMPLATE)) {\n                renderElems--;\n\n                CmsResource elemRes = cms.readResource(elemUri);\n                CmsContainerElementBean element = new CmsContainerElementBean(elemRes.getStructureId(), null, null);\n                m_sessionCache.setCacheContainerElement(element.getClientId(), element);\n                // check if the element already exists\n                String id = element.getClientId();\n                // collect ids\n                if (ids.contains(id)) {\n                    continue;\n                }\n                // get the element data\n                JSONObject resElement = elemUtil.getElementData(element, types);\n                // store element data\n                ids.add(id);\n                resElements.put(id, resElement);\n            }\n\n            // iterate the elements\n            for (CmsContainerElementBean element : container.getElements()) {\n                if (renderElems < 1) {\n                    // just collect as many elements as allowed in the template\n                    break;\n                }\n                renderElems--;\n\n                // collect ids\n                String id = element.getClientId();\n                if (ids.contains(id)) {\n                    continue;\n                }\n                m_sessionCache.setCacheContainerElement(element.getClientId(), element);\n                // get the element data\n                JSONObject resElement = elemUtil.getElementData(element, types);\n\n                // get subcontainer elements\n                if (resElement.has(CmsElementUtil.JsonElement.SUBITEMS.getName())) {\n                    // this container page should contain exactly one container\n                    CmsResource elementRes = cms.readResource(element.getElementId());\n                    CmsXmlSubContainer xmlSubContainer = CmsXmlSubContainerFactory.unmarshal(\n                        cms,\n                        elementRes,\n                        getRequest());\n                    CmsSubContainerBean subContainer = xmlSubContainer.getSubContainer(\n                        cms,\n                        cms.getRequestContext().getLocale());\n\n                    // adding all sub-items to the elements data\n                    for (CmsContainerElementBean subElement : subContainer.getElements()) {\n                        if (!ids.contains(subElement.getElementId())) {\n                            m_sessionCache.setCacheContainerElement(subElement.getClientId(), subElement);\n                            String subId = subElement.getClientId();\n                            if (ids.contains(subId)) {\n                                continue;\n                            }\n                            JSONObject subItemData = elemUtil.getElementData(subElement, types);\n                            ids.add(subId);\n                            resElements.put(subId, subItemData);\n                        }\n                    }\n                }\n\n                // store element data\n                ids.add(id);\n                resElements.put(id, resElement);\n            }\n        }\n        // collect the favorites\n        JSONArray resFavorites = getFavoriteList(resElements, types);\n        result.put(JsonCntPage.FAVORITES.getName(), resFavorites);\n        // collect the recent list\n        JSONArray resRecent = getRecentList(resElements, types);\n        result.put(JsonCntPage.RECENT.getName(), resRecent);\n\n        return result;\n    }","commit_id":"6991430d3287e63c3ba2dd13995752fce6d9c8f5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Handles all ADE requests.<p>\n     * \n     * @return the result\n     * \n     * @throws JSONException if there is any problem with JSON\n     * @throws CmsException if there is a problem with the cms context\n     */\n    @Override\n    public JSONObject executeAction() throws CmsException, JSONException {\n\n        JSONObject result = new JSONObject();\n\n        HttpServletRequest request = getRequest();\n        CmsObject cms = getCmsObject();\n\n        if (!checkParameters(\n            request,\n            result,\n            ReqParam.ACTION.getName(),\n            ReqParam.LOCALE.getName(),\n            ReqParam.CNTPAGE.getName(),\n            ReqParam.URI.getName())) {\n            // every request needs to have at least these parameters \n            return result;\n        }\n        String actionParam = request.getParameter(ReqParam.ACTION.getName());\n        Action action = Action.valueOf(actionParam.toUpperCase());\n        String localeParam = request.getParameter(ReqParam.LOCALE.getName());\n        cms.getRequestContext().setLocale(CmsLocaleManager.getLocale(localeParam));\n        String cntPageParam = request.getParameter(ReqParam.CNTPAGE.getName());\n        String uriParam = request.getParameter(ReqParam.URI.getName());\n\n        JSONObject data = new JSONObject();\n        if (checkParameters(request, null, ReqParam.DATA.getName())) {\n            String dataParam = request.getParameter(ReqParam.DATA.getName());\n            data = new JSONObject(dataParam);\n        }\n\n        if (action.equals(Action.ALL)) {\n            // first load, get everything\n            CmsResource cntPageRes = cms.readResource(cntPageParam);\n            CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, cntPageRes, request);\n            CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n            result = getContainerPage(cntPageRes, cntPage, uriParam.equals(cntPageParam) ? null : uriParam);\n        } else if (action.equals(Action.ELEM)) {\n            // get element data\n            if (!checkParameters(data, result, JsonRequest.ELEM.getName())) {\n                return result;\n            }\n            JSONArray elems = data.optJSONArray(JsonRequest.ELEM.getName());\n            if (elems == null) {\n                // single element\n                elems = new JSONArray();\n                elems.put(data.optString(JsonRequest.ELEM.getName()));\n            }\n            result.put(JsonResponse.ELEMENTS.getName(), getElements(elems, uriParam, cntPageParam, request));\n        } else if (action.equals(Action.ELEMPROPS)) {\n            // element formatted with the given properties\n            if (!checkParameters(data, result, JsonRequest.ELEM.getName(), JsonRequest.PROPERTIES.getName())) {\n                return result;\n            }\n            String elemParam = data.optString(JsonRequest.ELEM.getName());\n            JSONObject properties = data.optJSONObject(JsonRequest.PROPERTIES.getName());\n\n            CmsContainerElementBean element = createElement(m_manager.convertToServerId(elemParam), properties);\n\n            m_sessionCache.setCacheContainerElement(element.getClientId(), element);\n\n            JSONObject resElements = new JSONObject();\n            CmsResource cntPageRes = cms.readResource(cntPageParam);\n            CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, cntPageRes, request);\n            CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n            CmsElementUtil elemUtil = new CmsElementUtil(cms, uriParam, request, getResponse());\n            resElements.put(element.getClientId(), elemUtil.getElementData(element, cntPage.getTypes()));\n            result.put(JsonResponse.ELEMENTS.getName(), resElements);\n        } else if (action.equals(Action.GET)) {\n            CmsResource cntPageRes = cms.readResource(cntPageParam);\n            CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, cntPageRes, request);\n            CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n            if (checkParameters(data, null, JsonRequest.FAV.getName())) {\n                // get the favorite list\n                result.put(JsonResponse.FAVORITES.getName(), getFavoriteList(null, cntPage.getTypes()));\n            }\n            if (checkParameters(data, result, JsonRequest.REC.getName())) {\n                // get recent list\n                result.put(JsonResponse.RECENT.getName(), getRecentList(null, cntPage.getTypes()));\n            }\n            return result;\n        } else if (action.equals(Action.SEARCH)) {\n            // new search\n            CmsSearchOptions searchOptions = getSearchOptions(data);\n            CmsResource cntPageRes = cms.readResource(cntPageParam);\n            CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, cntPageRes, request);\n            CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n            JSONObject searchResult = getSearchResult(cntPageParam, searchOptions, cntPage.getTypes());\n            result.merge(searchResult, true, false);\n        } else if (action.equals(Action.LS)) {\n            // last search\n            CmsSearchOptions searchOptions = getSearchOptions(data);\n            CmsResource cntPageRes = cms.readResource(cntPageParam);\n            CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, cntPageRes, request);\n            CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n            JSONObject searchResult = getLastSearchResult(cntPageParam, searchOptions, cntPage.getTypes());\n\n            // we need those on the client side to make scrolling work\n            CmsSearchOptions oldOptions = m_sessionCache.getSearchOptions();\n            if (oldOptions != null) {\n                result.put(JsonSearch.TYPE.getName(), oldOptions.getTypes());\n                result.put(JsonSearch.TEXT.getName(), oldOptions.getText());\n                result.put(JsonSearch.LOCATION.getName(), oldOptions.getLocation());\n            }\n            result.merge(searchResult, true, false);\n        } else if (action.equals(Action.NEW)) {\n            // get a new element\n            if (!checkParameters(data, result, JsonRequest.TYPE.getName())) {\n                return result;\n            }\n            String type = data.optString(JsonRequest.TYPE.getName());\n\n            CmsResource newResource = m_manager.createNewElement(cms, cntPageParam, request, type);\n            result.put(JsonNewRes.ID.getName(), m_manager.convertToClientId(newResource.getStructureId()));\n            result.put(JsonNewRes.URI.getName(), cms.getSitePath(newResource));\n        } else if (action.equals(Action.PROPS)) {\n            // get property dialog information\n            if (!checkParameters(data, result, JsonRequest.ELEM.getName())) {\n                return result;\n            }\n            String elemParam = data.optString(JsonRequest.ELEM.getName());\n            CmsElementUtil elemUtil = new CmsElementUtil(cms, uriParam, request, getResponse());\n            CmsContainerElementBean element = getCachedElement(elemParam);\n            result = elemUtil.getElementPropertyInfo(element);\n        } else if (action.equals(Action.SET)) {\n            if (checkParameters(data, null, JsonRequest.FAV.getName())) {\n                // save the favorite list\n                JSONArray list = data.optJSONArray(JsonRequest.FAV.getName());\n                m_manager.saveFavoriteList(cms, arrayToElementList(list));\n            } else if (checkParameters(data, result, JsonRequest.REC.getName())) {\n                // save the recent list\n                JSONArray list = data.optJSONArray(JsonRequest.REC.getName());\n                m_sessionCache.setCacheRecentList(arrayToElementList(list));\n            } else {\n                return result;\n            }\n        } else if (action.equals(Action.CNT)) {\n            // save the container page\n            setContainerPage(cntPageParam, data);\n        } else if (action.equals(Action.STARTEDIT)) {\n            // lock the container page\n            try {\n                cms.lockResourceTemporary(cntPageParam);\n            } catch (CmsException e) {\n                error(result, e.getLocalizedMessage(getWorkplaceLocale()));\n            }\n        } else if (action.equals(Action.STOPEDIT)) {\n            // lock the container page\n            try {\n                cms.unlockResource(cntPageParam);\n            } catch (CmsException e) {\n                error(result, e.getLocalizedMessage(getWorkplaceLocale()));\n            }\n        } else if (action.equals(Action.DEL)) {\n            // delete elements\n            if (!checkParameters(data, result, JsonRequest.ELEM.getName())) {\n                return result;\n            }\n            JSONArray elems = data.optJSONArray(JsonRequest.ELEM.getName());\n            deleteElements(elems);\n        } else if (action.equals(Action.SUBCNT)) {\n            // save sub container\n            if (!checkParameters(data, result, JsonRequest.ELEM.getName())) {\n                return result;\n            }\n            try {\n                setSubContainer(data.getJSONObject(JsonRequest.ELEM.getName()), localeParam);\n            } catch (Exception e) {\n                error(result, e.getLocalizedMessage());\n            }\n        } else if (action.equals(Action.NEWSUB)) {\n            // save sub container\n            if (!checkParameters(data, result, JsonRequest.ELEM.getName())) {\n                return result;\n            }\n            try {\n                CmsResource newSub = createNewSubContainer(cntPageParam, request);\n                JSONObject subcontainer = data.getJSONObject(JsonRequest.ELEM.getName());\n                subcontainer.put(CmsElementUtil.JsonElement.FILE.getName(), cms.getSitePath(newSub));\n                setSubContainer(subcontainer, localeParam);\n                result.put(JsonNewRes.ID.getName(), m_manager.convertToClientId(newSub.getStructureId()));\n                result.put(JsonNewRes.URI.getName(), cms.getSitePath(newSub));\n            } catch (Exception e) {\n                error(result, e.getLocalizedMessage());\n            }\n        } else {\n            error(result, Messages.get().getBundle(getWorkplaceLocale()).key(\n                Messages.ERR_JSON_WRONG_PARAMETER_VALUE_2,\n                ReqParam.ACTION.getName(),\n                actionParam));\n        }\n        return result;\n    }","id":107333,"modified_method":"/**\n     * Handles all ADE requests.<p>\n     * \n     * @return the result\n     * \n     * @throws JSONException if there is any problem with JSON\n     * @throws CmsException if there is a problem with the cms context\n     */\n    @Override\n    public JSONObject executeAction() throws CmsException, JSONException {\n\n        JSONObject result = new JSONObject();\n\n        HttpServletRequest request = getRequest();\n        CmsObject cms = getCmsObject();\n\n        if (!checkParameters(\n            request,\n            result,\n            ReqParam.ACTION.getName(),\n            ReqParam.LOCALE.getName(),\n            ReqParam.CNTPAGE.getName(),\n            ReqParam.URI.getName())) {\n            // every request needs to have at least these parameters \n            return result;\n        }\n        String actionParam = request.getParameter(ReqParam.ACTION.getName());\n        Action action = Action.valueOf(actionParam.toUpperCase());\n        String localeParam = request.getParameter(ReqParam.LOCALE.getName());\n        cms.getRequestContext().setLocale(CmsLocaleManager.getLocale(localeParam));\n        String cntPageParam = request.getParameter(ReqParam.CNTPAGE.getName());\n        String uriParam = request.getParameter(ReqParam.URI.getName());\n\n        JSONObject data = new JSONObject();\n        if (checkParameters(request, null, ReqParam.DATA.getName())) {\n            String dataParam = request.getParameter(ReqParam.DATA.getName());\n            data = new JSONObject(dataParam);\n        }\n\n        if (action.equals(Action.ALL)) {\n            // get container types\n            if (!checkParameters(data, result, JsonCntPage.CONTAINERS.getName())) {\n                return result;\n            }\n            Set<String> cntTypes = new HashSet<String>();\n            JSONArray types = data.optJSONArray(JsonCntPage.CONTAINERS.getName());\n            for (int i = 0; i < types.length(); i++) {\n                cntTypes.add(types.getString(i));\n            }\n            // first load, get everything\n            CmsResource cntPageRes = cms.readResource(cntPageParam);\n            CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, cntPageRes, request);\n            CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n            result = getContainerPage(cntPageRes, cntPage, uriParam.equals(cntPageParam) ? null : uriParam, cntTypes);\n        } else if (action.equals(Action.ELEM)) {\n            if (!checkParameters(data, result, JsonRequest.ELEM.getName(), JsonCntPage.CONTAINERS.getName())) {\n                return result;\n            }\n            // get container types\n            Set<String> cntTypes = new HashSet<String>();\n            JSONArray types = data.optJSONArray(JsonCntPage.CONTAINERS.getName());\n            for (int i = 0; i < types.length(); i++) {\n                cntTypes.add(types.getString(i));\n            }\n            // get elements\n            JSONArray elems = data.optJSONArray(JsonRequest.ELEM.getName());\n            if (elems == null) {\n                // single element\n                elems = new JSONArray();\n                elems.put(data.optString(JsonRequest.ELEM.getName()));\n            }\n            result.put(JsonResponse.ELEMENTS.getName(), getElements(elems, uriParam, request, cntTypes));\n        } else if (action.equals(Action.ELEMPROPS)) {\n            // element formatted with the given properties\n            if (!checkParameters(data, result, JsonRequest.ELEM.getName(), JsonRequest.PROPERTIES.getName())) {\n                return result;\n            }\n            String elemParam = data.optString(JsonRequest.ELEM.getName());\n            JSONObject properties = data.optJSONObject(JsonRequest.PROPERTIES.getName());\n\n            CmsContainerElementBean element = createElement(m_manager.convertToServerId(elemParam), properties);\n\n            m_sessionCache.setCacheContainerElement(element.getClientId(), element);\n\n            JSONObject resElements = new JSONObject();\n            CmsResource cntPageRes = cms.readResource(cntPageParam);\n            CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, cntPageRes, request);\n            CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n            CmsElementUtil elemUtil = new CmsElementUtil(cms, uriParam, request, getResponse());\n            resElements.put(element.getClientId(), elemUtil.getElementData(element, cntPage.getTypes()));\n            result.put(JsonResponse.ELEMENTS.getName(), resElements);\n        } else if (action.equals(Action.GET)) {\n            CmsResource cntPageRes = cms.readResource(cntPageParam);\n            CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, cntPageRes, request);\n            CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n            if (checkParameters(data, null, JsonRequest.FAV.getName())) {\n                // get the favorite list\n                result.put(JsonResponse.FAVORITES.getName(), getFavoriteList(null, cntPage.getTypes()));\n            }\n            if (checkParameters(data, result, JsonRequest.REC.getName())) {\n                // get recent list\n                result.put(JsonResponse.RECENT.getName(), getRecentList(null, cntPage.getTypes()));\n            }\n            return result;\n        } else if (action.equals(Action.SEARCH)) {\n            // new search\n            CmsSearchOptions searchOptions = getSearchOptions(data);\n            CmsResource cntPageRes = cms.readResource(cntPageParam);\n            CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, cntPageRes, request);\n            CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n            JSONObject searchResult = getSearchResult(cntPageParam, searchOptions, cntPage.getTypes());\n            result.merge(searchResult, true, false);\n        } else if (action.equals(Action.LS)) {\n            // last search\n            CmsSearchOptions searchOptions = getSearchOptions(data);\n            CmsResource cntPageRes = cms.readResource(cntPageParam);\n            CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, cntPageRes, request);\n            CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n            JSONObject searchResult = getLastSearchResult(cntPageParam, searchOptions, cntPage.getTypes());\n\n            // we need those on the client side to make scrolling work\n            CmsSearchOptions oldOptions = m_sessionCache.getSearchOptions();\n            if (oldOptions != null) {\n                result.put(JsonSearch.TYPE.getName(), oldOptions.getTypes());\n                result.put(JsonSearch.TEXT.getName(), oldOptions.getText());\n                result.put(JsonSearch.LOCATION.getName(), oldOptions.getLocation());\n            }\n            result.merge(searchResult, true, false);\n        } else if (action.equals(Action.NEW)) {\n            // get a new element\n            if (!checkParameters(data, result, JsonRequest.TYPE.getName())) {\n                return result;\n            }\n            String type = data.optString(JsonRequest.TYPE.getName());\n\n            CmsResource newResource = m_manager.createNewElement(cms, cntPageParam, request, type);\n            result.put(JsonNewRes.ID.getName(), m_manager.convertToClientId(newResource.getStructureId()));\n            result.put(JsonNewRes.URI.getName(), cms.getSitePath(newResource));\n        } else if (action.equals(Action.PROPS)) {\n            // get property dialog information\n            if (!checkParameters(data, result, JsonRequest.ELEM.getName())) {\n                return result;\n            }\n            String elemParam = data.optString(JsonRequest.ELEM.getName());\n            CmsElementUtil elemUtil = new CmsElementUtil(cms, uriParam, request, getResponse());\n            CmsContainerElementBean element = getCachedElement(elemParam);\n            result = elemUtil.getElementPropertyInfo(element);\n        } else if (action.equals(Action.SET)) {\n            if (checkParameters(data, null, JsonRequest.FAV.getName())) {\n                // save the favorite list\n                JSONArray list = data.optJSONArray(JsonRequest.FAV.getName());\n                m_manager.saveFavoriteList(cms, arrayToElementList(list));\n            } else if (checkParameters(data, result, JsonRequest.REC.getName())) {\n                // save the recent list\n                JSONArray list = data.optJSONArray(JsonRequest.REC.getName());\n                m_sessionCache.setCacheRecentList(arrayToElementList(list));\n            } else {\n                return result;\n            }\n        } else if (action.equals(Action.CNT)) {\n            // save the container page\n            setContainerPage(cntPageParam, data);\n        } else if (action.equals(Action.STARTEDIT)) {\n            // lock the container page\n            try {\n                cms.lockResourceTemporary(cntPageParam);\n            } catch (CmsException e) {\n                error(result, e.getLocalizedMessage(getWorkplaceLocale()));\n            }\n        } else if (action.equals(Action.STOPEDIT)) {\n            // lock the container page\n            try {\n                cms.unlockResource(cntPageParam);\n            } catch (CmsException e) {\n                error(result, e.getLocalizedMessage(getWorkplaceLocale()));\n            }\n        } else if (action.equals(Action.DEL)) {\n            // delete elements\n            if (!checkParameters(data, result, JsonRequest.ELEM.getName())) {\n                return result;\n            }\n            JSONArray elems = data.optJSONArray(JsonRequest.ELEM.getName());\n            deleteElements(elems);\n        } else if (action.equals(Action.SUBCNT)) {\n            // save sub container\n            if (!checkParameters(data, result, JsonRequest.ELEM.getName())) {\n                return result;\n            }\n            try {\n                setSubContainer(data.getJSONObject(JsonRequest.ELEM.getName()), localeParam);\n            } catch (Exception e) {\n                error(result, e.getLocalizedMessage());\n            }\n        } else if (action.equals(Action.NEWSUB)) {\n            // save sub container\n            if (!checkParameters(data, result, JsonRequest.ELEM.getName())) {\n                return result;\n            }\n            try {\n                CmsResource newSub = createNewSubContainer(cntPageParam, request);\n                JSONObject subcontainer = data.getJSONObject(JsonRequest.ELEM.getName());\n                subcontainer.put(CmsElementUtil.JsonElement.FILE.getName(), cms.getSitePath(newSub));\n                setSubContainer(subcontainer, localeParam);\n                result.put(JsonNewRes.ID.getName(), m_manager.convertToClientId(newSub.getStructureId()));\n                result.put(JsonNewRes.URI.getName(), cms.getSitePath(newSub));\n            } catch (Exception e) {\n                error(result, e.getLocalizedMessage());\n            }\n        } else {\n            error(result, Messages.get().getBundle(getWorkplaceLocale()).key(\n                Messages.ERR_JSON_WRONG_PARAMETER_VALUE_2,\n                ReqParam.ACTION.getName(),\n                actionParam));\n        }\n        return result;\n    }","commit_id":"6991430d3287e63c3ba2dd13995752fce6d9c8f5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Saves the new state of the container page.<p>\n     * \n     * @param uri the uri of the container page to save\n     * @param cntPage the container page data\n     * \n     * @throws CmsException if something goes wrong with the cms context\n     * @throws JSONException if something goes wrong with the JSON manipulation\n     */\n    public void setContainerPage(String uri, JSONObject cntPage) throws CmsException, JSONException {\n\n        CmsObject cms = getCmsObject();\n        String paramUri = getRequest().getParameter(ReqParam.URI.getName());\n\n        cms.lockResourceTemporary(uri);\n        CmsFile containerPage = cms.readFile(uri);\n        CmsXmlContainerPage xmlCnt = CmsXmlContainerPageFactory.unmarshal(cms, containerPage);\n        Locale locale = CmsLocaleManager.getLocale(cntPage.getString(JsonCntPage.LOCALE.getName()));\n        if (xmlCnt.hasLocale(locale)) {\n            // remove the locale \n            xmlCnt.removeLocale(locale);\n        }\n        xmlCnt.addLocale(cms, locale);\n\n        JSONObject cnts = cntPage.getJSONObject(JsonCntPage.CONTAINERS.getName());\n        int cntCount = 0;\n        Iterator<String> itCnt = cnts.keys();\n        while (itCnt.hasNext()) {\n            String cntKey = itCnt.next();\n            JSONObject cnt = cnts.getJSONObject(cntKey);\n\n            I_CmsXmlContentValue cntValue = xmlCnt.getValue(\n                CmsXmlContainerPage.XmlNode.CONTAINER.getName(),\n                locale,\n                cntCount);\n            if (cntValue == null) {\n                cntValue = xmlCnt.addValue(cms, CmsXmlContainerPage.XmlNode.CONTAINER.getName(), locale, cntCount);\n            }\n\n            String name = cnt.getString(JsonContainer.NAME.getName());\n            xmlCnt.getValue(\n                CmsXmlUtils.concatXpath(cntValue.getPath(), CmsXmlContainerPage.XmlNode.NAME.getName()),\n                locale,\n                0).setStringValue(cms, name);\n\n            String type = cnt.getString(JsonContainer.TYPE.getName());\n            xmlCnt.getValue(\n                CmsXmlUtils.concatXpath(cntValue.getPath(), CmsXmlContainerPage.XmlNode.TYPE.getName()),\n                locale,\n                0).setStringValue(cms, type);\n\n            JSONArray elems = cnt.getJSONArray(JsonCntPage.ELEMENTS.getName());\n            for (int i = 0; i < elems.length(); i++) {\n                JSONObject elem = elems.getJSONObject(i);\n\n                String formatter = elem.getString(JsonCntElem.FORMATTER.getName());\n                String elemUri = elem.getString(JsonCntElem.URI.getName());\n                if (type.equals(CmsContainerPageBean.TYPE_TEMPLATE) && elemUri.equals(paramUri)) {\n                    // skip main-content if acting as template\n                    continue;\n                }\n                String clientId = elem.getString(JsonCntElem.ID.getName());\n                I_CmsXmlContentValue elemValue = xmlCnt.addValue(cms, CmsXmlUtils.concatXpath(\n                    cntValue.getPath(),\n                    CmsXmlContainerPage.XmlNode.ELEMENT.getName()), locale, i);\n                xmlCnt.getValue(\n                    CmsXmlUtils.concatXpath(elemValue.getPath(), CmsXmlContainerPage.XmlNode.URI.getName()),\n                    locale,\n                    0).setStringValue(cms, elemUri);\n                xmlCnt.getValue(\n                    CmsXmlUtils.concatXpath(elemValue.getPath(), CmsXmlContainerPage.XmlNode.FORMATTER.getName()),\n                    locale,\n                    0).setStringValue(cms, formatter);\n\n                // checking if there are any properties to set\n                if (clientId.contains(\"#\")) {\n                    CmsContainerElementBean element = getCachedElement(clientId);\n                    Map<String, CmsProperty> properties = m_manager.getElementProperties(cms, element);\n                    Map<String, CmsXmlContentProperty> propertiesConf = m_manager.getElementPropertyConfiguration(\n                        cms,\n                        cms.readResource(element.getElementId()));\n                    Iterator<String> itProps = properties.keySet().iterator();\n\n                    // index of the property\n                    int j = 0;\n\n                    // iterating all properties\n                    while (itProps.hasNext()) {\n                        String propertyName = itProps.next();\n\n                        if ((properties.get(propertyName).getStructureValue() == null)\n                            || !propertiesConf.containsKey(propertyName)) {\n                            continue;\n                        }\n                        // only if there is a value set and the property is configured in the schema we will save it to the container-page \n                        I_CmsXmlContentValue propValue = xmlCnt.addValue(cms, CmsXmlUtils.concatXpath(\n                            elemValue.getPath(),\n                            CmsXmlContainerPage.XmlNode.PROPERTIES.getName()), locale, j);\n                        xmlCnt.getValue(\n                            CmsXmlUtils.concatXpath(propValue.getPath(), CmsXmlContainerPage.XmlNode.NAME.getName()),\n                            locale,\n                            0).setStringValue(cms, propertyName);\n                        I_CmsXmlContentValue valValue = xmlCnt.addValue(cms, CmsXmlUtils.concatXpath(\n                            propValue.getPath(),\n                            CmsXmlContainerPage.XmlNode.VALUE.getName()), locale, 0);\n                        if (propertiesConf.get(propertyName).getPropertyType().equals(CmsXmlContentProperty.T_VFSLIST)) {\n                            I_CmsXmlContentValue filelistValue = xmlCnt.addValue(cms, CmsXmlUtils.concatXpath(\n                                valValue.getPath(),\n                                CmsXmlContainerPage.XmlNode.FILELIST.getName()), locale, 0);\n                            int index = 0;\n                            for (String strId : CmsStringUtil.splitAsList(\n                                properties.get(propertyName).getStructureValue(),\n                                CmsXmlContainerPage.IDS_SEPARATOR)) {\n                                try {\n                                    CmsResource res = cms.readResource(new CmsUUID(strId));\n                                    I_CmsXmlContentValue fileValue = xmlCnt.getValue(CmsXmlUtils.concatXpath(\n                                        filelistValue.getPath(),\n                                        CmsXmlContainerPage.XmlNode.URI.getName()), locale, index);\n                                    if (fileValue == null) {\n                                        fileValue = xmlCnt.addValue(cms, CmsXmlUtils.concatXpath(\n                                            filelistValue.getPath(),\n                                            CmsXmlContainerPage.XmlNode.URI.getName()), locale, index);\n                                    }\n                                    fileValue.setStringValue(cms, cms.getSitePath(res));\n                                    index++;\n                                } catch (CmsException e) {\n                                    // could happen when the resource are meanwhile deleted\n                                    LOG.error(e.getLocalizedMessage(), e);\n                                }\n                            }\n                        } else {\n                            xmlCnt.addValue(\n                                cms,\n                                CmsXmlUtils.concatXpath(\n                                    valValue.getPath(),\n                                    CmsXmlContainerPage.XmlNode.STRING.getName()),\n                                locale,\n                                0).setStringValue(cms, properties.get(propertyName).getStructureValue());\n                        }\n                        j++;\n                    }\n                }\n            }\n            cntCount++;\n        }\n        containerPage.setContents(xmlCnt.marshal());\n        cms.writeFile(containerPage);\n    }","id":107334,"modified_method":"/**\n     * Saves the new state of the container page.<p>\n     * \n     * @param uri the uri of the container page to save\n     * @param cntPage the container page data\n     * \n     * @throws CmsException if something goes wrong with the cms context\n     * @throws JSONException if something goes wrong with the JSON manipulation\n     */\n    public void setContainerPage(String uri, JSONObject cntPage) throws CmsException, JSONException {\n\n        CmsObject cms = getCmsObject();\n        String paramUri = getRequest().getParameter(ReqParam.URI.getName());\n\n        cms.lockResourceTemporary(uri);\n        CmsFile containerPage = cms.readFile(uri);\n        CmsXmlContainerPage xmlCnt = CmsXmlContainerPageFactory.unmarshal(cms, containerPage);\n        Locale locale = CmsLocaleManager.getLocale(cntPage.getString(JsonCntPage.LOCALE.getName()));\n        if (xmlCnt.hasLocale(locale)) {\n            // remove the locale \n            xmlCnt.removeLocale(locale);\n        }\n        xmlCnt.addLocale(cms, locale);\n\n        JSONObject cnts = cntPage.getJSONObject(JsonCntPage.CONTAINERS.getName());\n        int cntCount = 0;\n        Iterator<String> itCnt = cnts.keys();\n        while (itCnt.hasNext()) {\n            String cntKey = itCnt.next();\n            JSONObject cnt = cnts.getJSONObject(cntKey);\n\n            I_CmsXmlContentValue cntValue = xmlCnt.getValue(\n                CmsXmlContainerPage.XmlNode.CONTAINER.getName(),\n                locale,\n                cntCount);\n            if (cntValue == null) {\n                cntValue = xmlCnt.addValue(cms, CmsXmlContainerPage.XmlNode.CONTAINER.getName(), locale, cntCount);\n            }\n\n            String name = cnt.getString(CmsJspTagContainer.JsonContainer.NAME.getName());\n            xmlCnt.getValue(\n                CmsXmlUtils.concatXpath(cntValue.getPath(), CmsXmlContainerPage.XmlNode.NAME.getName()),\n                locale,\n                0).setStringValue(cms, name);\n\n            String type = cnt.getString(CmsJspTagContainer.JsonContainer.TYPE.getName());\n            xmlCnt.getValue(\n                CmsXmlUtils.concatXpath(cntValue.getPath(), CmsXmlContainerPage.XmlNode.TYPE.getName()),\n                locale,\n                0).setStringValue(cms, type);\n\n            JSONArray elems = cnt.getJSONArray(JsonCntPage.ELEMENTS.getName());\n            for (int i = 0; i < elems.length(); i++) {\n                JSONObject elem = elems.getJSONObject(i);\n\n                String formatter = elem.getString(JsonCntElem.FORMATTER.getName());\n                String elemUri = elem.getString(JsonCntElem.URI.getName());\n                if (type.equals(CmsContainerPageBean.TYPE_TEMPLATE) && elemUri.equals(paramUri)) {\n                    // skip main-content if acting as template\n                    continue;\n                }\n                String clientId = elem.getString(JsonCntElem.ID.getName());\n                I_CmsXmlContentValue elemValue = xmlCnt.addValue(cms, CmsXmlUtils.concatXpath(\n                    cntValue.getPath(),\n                    CmsXmlContainerPage.XmlNode.ELEMENT.getName()), locale, i);\n                xmlCnt.getValue(\n                    CmsXmlUtils.concatXpath(elemValue.getPath(), CmsXmlContainerPage.XmlNode.URI.getName()),\n                    locale,\n                    0).setStringValue(cms, elemUri);\n                xmlCnt.getValue(\n                    CmsXmlUtils.concatXpath(elemValue.getPath(), CmsXmlContainerPage.XmlNode.FORMATTER.getName()),\n                    locale,\n                    0).setStringValue(cms, formatter);\n\n                // checking if there are any properties to set\n                if (clientId.contains(\"#\")) {\n                    CmsContainerElementBean element = getCachedElement(clientId);\n                    Map<String, CmsProperty> properties = m_manager.getElementProperties(cms, element);\n                    Map<String, CmsXmlContentProperty> propertiesConf = m_manager.getElementPropertyConfiguration(\n                        cms,\n                        cms.readResource(element.getElementId()));\n                    Iterator<String> itProps = properties.keySet().iterator();\n\n                    // index of the property\n                    int j = 0;\n\n                    // iterating all properties\n                    while (itProps.hasNext()) {\n                        String propertyName = itProps.next();\n\n                        if ((properties.get(propertyName).getStructureValue() == null)\n                            || !propertiesConf.containsKey(propertyName)) {\n                            continue;\n                        }\n                        // only if there is a value set and the property is configured in the schema we will save it to the container-page \n                        I_CmsXmlContentValue propValue = xmlCnt.addValue(cms, CmsXmlUtils.concatXpath(\n                            elemValue.getPath(),\n                            CmsXmlContainerPage.XmlNode.PROPERTIES.getName()), locale, j);\n                        xmlCnt.getValue(\n                            CmsXmlUtils.concatXpath(propValue.getPath(), CmsXmlContainerPage.XmlNode.NAME.getName()),\n                            locale,\n                            0).setStringValue(cms, propertyName);\n                        I_CmsXmlContentValue valValue = xmlCnt.addValue(cms, CmsXmlUtils.concatXpath(\n                            propValue.getPath(),\n                            CmsXmlContainerPage.XmlNode.VALUE.getName()), locale, 0);\n                        if (propertiesConf.get(propertyName).getPropertyType().equals(CmsXmlContentProperty.T_VFSLIST)) {\n                            I_CmsXmlContentValue filelistValue = xmlCnt.addValue(cms, CmsXmlUtils.concatXpath(\n                                valValue.getPath(),\n                                CmsXmlContainerPage.XmlNode.FILELIST.getName()), locale, 0);\n                            int index = 0;\n                            for (String strId : CmsStringUtil.splitAsList(\n                                properties.get(propertyName).getStructureValue(),\n                                CmsXmlContainerPage.IDS_SEPARATOR)) {\n                                try {\n                                    CmsResource res = cms.readResource(new CmsUUID(strId));\n                                    I_CmsXmlContentValue fileValue = xmlCnt.getValue(CmsXmlUtils.concatXpath(\n                                        filelistValue.getPath(),\n                                        CmsXmlContainerPage.XmlNode.URI.getName()), locale, index);\n                                    if (fileValue == null) {\n                                        fileValue = xmlCnt.addValue(cms, CmsXmlUtils.concatXpath(\n                                            filelistValue.getPath(),\n                                            CmsXmlContainerPage.XmlNode.URI.getName()), locale, index);\n                                    }\n                                    fileValue.setStringValue(cms, cms.getSitePath(res));\n                                    index++;\n                                } catch (CmsException e) {\n                                    // could happen when the resource are meanwhile deleted\n                                    LOG.error(e.getLocalizedMessage(), e);\n                                }\n                            }\n                        } else {\n                            xmlCnt.addValue(\n                                cms,\n                                CmsXmlUtils.concatXpath(\n                                    valValue.getPath(),\n                                    CmsXmlContainerPage.XmlNode.STRING.getName()),\n                                locale,\n                                0).setStringValue(cms, properties.get(propertyName).getStructureValue());\n                        }\n                        j++;\n                    }\n                }\n            }\n            cntCount++;\n        }\n        containerPage.setContents(xmlCnt.marshal());\n        cms.writeFile(containerPage);\n    }","commit_id":"6991430d3287e63c3ba2dd13995752fce6d9c8f5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"private JSONObject getElements(JSONArray elements, String uriParam, String cntPageUri, HttpServletRequest request)\n    throws CmsException, JSONException {\n\n        CmsObject cms = getCmsObject();\n        CmsResource cntPageRes = cms.readResource(cntPageUri);\n        CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, cntPageRes, request);\n        CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n        CmsElementUtil elemUtil = new CmsElementUtil(cms, uriParam, request, getResponse());\n        JSONObject resElements = new JSONObject();\n        Set<String> ids = new HashSet<String>();\n        for (int i = 0; i < elements.length(); i++) {\n            String elemId = elements.getString(i);\n            if (ids.contains(elemId)) {\n                continue;\n            }\n            CmsContainerElementBean element = getCachedElement(elemId);\n            JSONObject elementData = elemUtil.getElementData(element, cntPage.getTypes());\n            resElements.put(element.getClientId(), elementData);\n            if (elementData.has(CmsElementUtil.JsonElement.SUBITEMS.getName())) {\n                // this is a sub-container \n\n                CmsResource elementRes = cms.readResource(element.getElementId());\n                CmsXmlSubContainer xmlSubContainer = CmsXmlSubContainerFactory.unmarshal(cms, elementRes, getRequest());\n                CmsSubContainerBean subContainer = xmlSubContainer.getSubContainer(\n                    cms,\n                    cms.getRequestContext().getLocale());\n\n                // adding all sub-items to the elements data\n                for (CmsContainerElementBean subElement : subContainer.getElements()) {\n                    if (!ids.contains(subElement.getElementId())) {\n                        String subId = subElement.getClientId();\n                        if (ids.contains(subId)) {\n                            continue;\n                        }\n                        JSONObject subItemData = elemUtil.getElementData(subElement, cntPage.getTypes());\n                        ids.add(subId);\n                        resElements.put(subId, subItemData);\n                    }\n                }\n            }\n            ids.add(elemId);\n        }\n        return resElements;\n    }","id":107335,"modified_method":"/**\n     * Returns the data of the given elements.<p>\n     * \n     * @param elements the list of IDs of the elements to retrieve the data for\n     * @param uriParam the current URI\n     * @param request the current request\n     * @param types the container types to consider\n     * \n     * @return the elements data\n     * \n     * @throws CmsException if something really bad happens\n     * @throws JSONException if there is a problem with JSON operation\n     */\n    protected JSONObject getElements(JSONArray elements, String uriParam, HttpServletRequest request, Set<String> types)\n    throws CmsException, JSONException {\n\n        CmsObject cms = getCmsObject();\n        CmsElementUtil elemUtil = new CmsElementUtil(cms, uriParam, request, getResponse());\n        JSONObject resElements = new JSONObject();\n        Set<String> ids = new HashSet<String>();\n        for (int i = 0; i < elements.length(); i++) {\n            String elemId = elements.getString(i);\n            if (ids.contains(elemId)) {\n                continue;\n            }\n            CmsContainerElementBean element = getCachedElement(elemId);\n            JSONObject elementData = elemUtil.getElementData(element, types);\n            resElements.put(element.getClientId(), elementData);\n            if (elementData.has(CmsElementUtil.JsonElement.SUBITEMS.getName())) {\n                // this is a sub-container \n\n                CmsResource elementRes = cms.readResource(element.getElementId());\n                CmsXmlSubContainer xmlSubContainer = CmsXmlSubContainerFactory.unmarshal(cms, elementRes, getRequest());\n                CmsSubContainerBean subContainer = xmlSubContainer.getSubContainer(\n                    cms,\n                    cms.getRequestContext().getLocale());\n\n                // adding all sub-items to the elements data\n                for (CmsContainerElementBean subElement : subContainer.getElements()) {\n                    if (!ids.contains(subElement.getElementId())) {\n                        String subId = subElement.getClientId();\n                        if (ids.contains(subId)) {\n                            continue;\n                        }\n                        JSONObject subItemData = elemUtil.getElementData(subElement, types);\n                        ids.add(subId);\n                        resElements.put(subId, subItemData);\n                    }\n                }\n            }\n            ids.add(elemId);\n        }\n        return resElements;\n    }","commit_id":"6991430d3287e63c3ba2dd13995752fce6d9c8f5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** \n     * Creates a new container bean.<p> \n     * \n     * @param name the container name\n     * @param type the container type\n     * @param maxElements the maximal number of elements in the container\n     * @param elements the elements\n     **/\n    public CmsContainerBean(String name, String type, int maxElements, List<CmsContainerElementBean> elements) {\n\n        m_name = name;\n        m_type = type;\n        m_maxElements = maxElements;\n        m_elements = Collections.unmodifiableList(elements);\n    }","id":107336,"modified_method":"/** \n     * Creates a new container bean.<p> \n     * \n     * @param name the container name\n     * @param type the container type\n     * @param maxElements the maximal number of elements in the container\n     * @param elements the elements\n     **/\n    public CmsContainerBean(String name, String type, int maxElements, List<CmsContainerElementBean> elements) {\n\n        m_name = name;\n        m_type = type;\n        m_maxElements = maxElements;\n        m_elements = (elements == null\n        ? Collections.<CmsContainerElementBean> emptyList()\n        : Collections.unmodifiableList(elements));\n    }","commit_id":"6991430d3287e63c3ba2dd13995752fce6d9c8f5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates the closing tag for the container.<p>\n     * \n     * @param tagName the tag name\n     * @return the closing tag\n     */\n    private static String getTagClose(String tagName) {\n\n        return \"<\/\" + tagName + \">\";\n    }","id":107337,"modified_method":"/**\n     * Creates the closing tag for the container.<p>\n     * \n     * @param tagName the tag name\n     * \n     * @return the closing tag\n     */\n    protected static String getTagClose(String tagName) {\n\n        return \"<\/\" + tagName + \">\";\n    }","commit_id":"6991430d3287e63c3ba2dd13995752fce6d9c8f5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates the opening tag for the container assigning the appropriate id and class attributes.<p>\n     * \n     * @param tagName the tag name\n     * @param containerName the container name used as id attribute value\n     * @param tagClass the tag class attribute value\n     * @return the opening tag\n     */\n    private static String getTagOpen(String tagName, String containerName, String tagClass) {\n\n        String classAttr = CmsStringUtil.isEmptyOrWhitespaceOnly(tagClass) ? \"\" : \"class=\\\"\" + tagClass + \"\\\" \";\n        return \"<\" + tagName + \" id=\\\"\" + containerName + \"\\\" \" + classAttr + \">\";\n    }","id":107338,"modified_method":"/**\n     * Creates the opening tag for the container assigning the appropriate id and class attributes.<p>\n     * \n     * @param tagName the tag name\n     * @param containerName the container name used as id attribute value\n     * @param tagClass the tag class attribute value\n     * \n     * @return the opening tag\n     */\n    protected static String getTagOpen(String tagName, String containerName, String tagClass) {\n\n        String classAttr = CmsStringUtil.isEmptyOrWhitespaceOnly(tagClass) ? \"\" : \"class=\\\"\" + tagClass + \"\\\" \";\n        return \"<\" + tagName + \" id=\\\"\" + containerName + \"\\\" \" + classAttr + \">\";\n    }","commit_id":"6991430d3287e63c3ba2dd13995752fce6d9c8f5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Internal action method.<p>\n     * \n     * @param pageContext the current JSP page context\n     * @param containerName the name of the container\n     * @param containerType the type of the container\n     * @param containerMaxElements the maximal number of elements in the container \n     * @param tag the tag to create\n     * @param tagClass the tag class attribute\n     * @param req the current request\n     * @param res the current response\n     * \n     * @throws CmsException if something goes wrong\n     * @throws JspException if there is some problem calling the jsp formatter\n     */\n    public static void containerTagAction(\n        PageContext pageContext,\n        String containerName,\n        String containerType,\n        String containerMaxElements,\n        String tag,\n        String tagClass,\n        ServletRequest req,\n        ServletResponse res) throws CmsException, JspException {\n\n        CmsFlexController controller = CmsFlexController.getController(req);\n        CmsObject cms = controller.getCmsObject();\n        boolean actAsTemplate = false;\n\n        // get the container page itself, checking the history first\n        CmsResource containerPage = (CmsResource)CmsHistoryResourceHandler.getHistoryResource(req);\n        if (containerPage == null) {\n            containerPage = cms.readResource(cms.getRequestContext().getUri());\n        }\n        if (!CmsResourceTypeXmlContainerPage.isContainerPage(containerPage)) {\n            // container page is used as template\n            String cntPagePath = cms.readPropertyObject(\n                containerPage,\n                CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,\n                true).getValue(\"\");\n            try {\n                containerPage = cms.readResource(cntPagePath);\n            } catch (CmsException e) {\n                throw new CmsIllegalStateException(Messages.get().container(\n                    Messages.ERR_CONTAINER_PAGE_NOT_FOUND_3,\n                    cms.getRequestContext().getUri(),\n                    CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,\n                    cntPagePath), e);\n            }\n            if (!CmsResourceTypeXmlContainerPage.isContainerPage(containerPage)) {\n                throw new CmsIllegalStateException(Messages.get().container(\n                    Messages.ERR_CONTAINER_PAGE_NOT_FOUND_3,\n                    cms.getRequestContext().getUri(),\n                    CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,\n                    cntPagePath));\n            }\n            actAsTemplate = true;\n        } else if (req.getParameter(CmsContainerPageBean.TEMPLATE_ELEMENT_PARAMETER) != null) {\n            actAsTemplate = true;\n        }\n        CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, containerPage, req);\n        CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n        Locale locale = cntPage.getLocale();\n\n        // get the container\n        CmsContainerBean container = cntPage.getContainers().get(containerName);\n        if (container == null) {\n            // container not found\n            LOG.error(Messages.get().container(\n                Messages.LOG_CONTAINER_NOT_FOUND_3,\n                cms.getSitePath(containerPage),\n                locale,\n                containerName).key());\n            return;\n        }\n\n        // validate the type\n        if (!containerType.equals(container.getType())) {\n            throw new CmsIllegalStateException(Messages.get().container(\n                Messages.LOG_WRONG_CONTAINER_TYPE_4,\n                new Object[] {cms.getSitePath(containerPage), locale, containerName, containerType}));\n        }\n\n        // get the maximal number of elements\n        int maxElements = -1;\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(containerMaxElements)) {\n            try {\n                maxElements = Integer.parseInt(containerMaxElements);\n            } catch (NumberFormatException e) {\n                throw new CmsIllegalStateException(Messages.get().container(\n                    Messages.LOG_WRONG_CONTAINER_MAXELEMENTS_4,\n                    new Object[] {cms.getSitePath(containerPage), locale, containerName, containerMaxElements}), e);\n            }\n            // actualize the cache\n            container.setMaxElements(maxElements);\n        } else {\n            if (LOG.isWarnEnabled()) {\n                LOG.warn(Messages.get().container(\n                    Messages.LOG_MAXELEMENTS_NOT_SET_3,\n                    new Object[] {containerName, locale, cms.getSitePath(containerPage)}));\n            }\n        }\n\n        // get the actual number of elements to render\n        int renderElems = container.getElements().size();\n        if ((maxElements > 0) && (renderElems > maxElements)) {\n            renderElems = maxElements;\n        }\n\n        // create tag for container if necessary\n        boolean createTag = false;\n        String tagName = CmsStringUtil.isEmptyOrWhitespaceOnly(tag) ? DEFAULT_TAG_NAME : tag;\n        if (!CREATE_NO_TAG.equals(tag)) {\n            createTag = true;\n            try {\n                pageContext.getOut().print(getTagOpen(tagName, containerName, tagClass));\n            } catch (IOException t) {\n                throw new JspException(t);\n            }\n        }\n        if (actAsTemplate) {\n            if (!cntPage.getTypes().contains(CmsContainerPageBean.TYPE_TEMPLATE)) {\n                throw new CmsIllegalStateException(Messages.get().container(\n                    Messages.ERR_CONTAINER_PAGE_NO_TYPE_3,\n                    cms.getRequestContext().getUri(),\n                    cms.getSitePath(containerPage),\n                    CmsContainerPageBean.TYPE_TEMPLATE));\n            }\n            if (containerType.equals(CmsContainerPageBean.TYPE_TEMPLATE)) {\n                // render template element\n                renderElems--;\n                CmsResource resUri;\n                if (req.getParameter(CmsContainerPageBean.TEMPLATE_ELEMENT_PARAMETER) != null) {\n                    CmsUUID id = new CmsUUID(req.getParameter(CmsContainerPageBean.TEMPLATE_ELEMENT_PARAMETER));\n                    resUri = cms.readResource(id);\n                } else {\n                    // check the history first\n                    resUri = (CmsResource)CmsHistoryResourceHandler.getHistoryResource(req);\n                    if (resUri == null) {\n                        resUri = cms.readResource(cms.getRequestContext().getUri());\n                    }\n                }\n\n                String elementFormatter = OpenCms.getADEManager().getXmlContentFormatters(cms, resUri).get(\n                    containerType);\n\n                if (CmsStringUtil.isEmptyOrWhitespaceOnly(elementFormatter)) {\n                    throw new CmsIllegalStateException(Messages.get().container(\n                        Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                        cms.getRequestContext().getUri(),\n                        OpenCms.getResourceManager().getResourceType(resUri).getTypeName(),\n                        CmsContainerPageBean.TYPE_TEMPLATE));\n                }\n                // execute the formatter jsp for the given element uri\n                CmsContainerElementBean element = new CmsContainerElementBean(\n                    resUri.getStructureId(),\n                    cms.readResource(elementFormatter).getStructureId(),\n                    null); // when used as template element there are no properties\n\n                CmsJspTagInclude.includeTagAction(\n                    pageContext,\n                    elementFormatter,\n                    null,\n                    false,\n                    null,\n                    Collections.singletonMap(CmsADEManager.ATTR_CURRENT_ELEMENT, (Object)element),\n                    req,\n                    res);\n\n            }\n        }\n\n        // iterate the elements\n        for (CmsContainerElementBean element : container.getElements()) {\n            if (renderElems < 1) {\n                break;\n            }\n            renderElems--;\n\n            CmsResource resUri = cms.readResource(element.getElementId());\n\n            if (resUri.getTypeId() == CmsResourceTypeXmlContainerPage.SUB_CONTAINER_TYPE_ID) {\n                CmsXmlSubContainer xmlSubContainer = CmsXmlSubContainerFactory.unmarshal(cms, resUri, req);\n                CmsSubContainerBean subContainer = xmlSubContainer.getSubContainer(\n                    cms,\n                    cms.getRequestContext().getLocale());\n                if (!subContainer.getTypes().contains(containerType)) {\n                    //TODO: change message\n                    throw new CmsIllegalStateException(Messages.get().container(\n                        Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                        resUri.getRootPath(),\n                        OpenCms.getResourceManager().getResourceType(resUri).getTypeName(),\n                        containerType));\n                }\n                for (CmsContainerElementBean subelement : subContainer.getElements()) {\n                    CmsResource subelementRes = cms.readResource(subelement.getElementId());\n                    String subelementUri = cms.getSitePath(subelementRes);\n\n                    //String subelementFormatter = cms.getSitePath(subelement.getFormatter());\n                    String subelementFormatter = OpenCms.getADEManager().getXmlContentFormatters(cms, subelementRes).get(\n                        containerType);\n                    if (CmsStringUtil.isEmptyOrWhitespaceOnly(subelementFormatter) && LOG.isErrorEnabled()) {\n                        // skip this element, it has no formatter for this container type defined\n                        LOG.error(new CmsIllegalStateException(Messages.get().container(\n                            Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                            subelementUri,\n                            OpenCms.getResourceManager().getResourceType(subelementRes).getTypeName(),\n                            containerType)));\n                        continue;\n                    }\n\n                    // execute the formatter jsp for the given element uri\n                    CmsJspTagInclude.includeTagAction(\n                        pageContext,\n                        subelementFormatter,\n                        null,\n                        false,\n                        null,\n                        Collections.singletonMap(CmsADEManager.ATTR_CURRENT_ELEMENT, (Object)subelement),\n                        req,\n                        res);\n                }\n\n            } else {\n                String elementFormatter = cms.getSitePath(cms.readResource(element.getFormatterId()));\n\n                // execute the formatter jsp for the given element uri\n                CmsJspTagInclude.includeTagAction(\n                    pageContext,\n                    elementFormatter,\n                    null,\n                    false,\n                    null,\n                    Collections.singletonMap(CmsADEManager.ATTR_CURRENT_ELEMENT, (Object)element),\n                    req,\n                    res);\n            }\n        }\n        // close tag for container\n        if (createTag) {\n            try {\n                pageContext.getOut().print(getTagClose(tagName));\n            } catch (IOException t) {\n                throw new JspException(t);\n            }\n        }\n    }","id":107339,"modified_method":"/**\n     * Internal action method.<p>\n     * \n     * @param pageContext the current JSP page context\n     * @param containerName the name of the container\n     * @param containerType the type of the container\n     * @param containerMaxElements the maximal number of elements in the container \n     * @param tag the tag to create\n     * @param tagClass the tag class attribute\n     * @param req the current request\n     * @param res the current response\n     * \n     * @throws CmsException if something goes wrong\n     * @throws JspException if there is some problem calling the jsp formatter\n     * @throws IOException if there is a problem writing on the response\n     */\n    public static void containerTagAction(\n        PageContext pageContext,\n        String containerName,\n        String containerType,\n        String containerMaxElements,\n        String tag,\n        String tagClass,\n        ServletRequest req,\n        ServletResponse res) throws CmsException, JspException, IOException {\n\n        CmsFlexController controller = CmsFlexController.getController(req);\n        CmsObject cms = controller.getCmsObject();\n        boolean actAsTemplate = false;\n\n        // get the container page itself, checking the history first\n        CmsResource containerPage = (CmsResource)CmsHistoryResourceHandler.getHistoryResource(req);\n        if (containerPage == null) {\n            containerPage = cms.readResource(cms.getRequestContext().getUri());\n        }\n        if (!CmsResourceTypeXmlContainerPage.isContainerPage(containerPage)) {\n            // container page is used as template\n            String cntPagePath = cms.readPropertyObject(\n                containerPage,\n                CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,\n                true).getValue(\"\");\n            try {\n                containerPage = cms.readResource(cntPagePath);\n            } catch (CmsException e) {\n                throw new CmsIllegalStateException(Messages.get().container(\n                    Messages.ERR_CONTAINER_PAGE_NOT_FOUND_3,\n                    cms.getRequestContext().getUri(),\n                    CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,\n                    cntPagePath), e);\n            }\n            if (!CmsResourceTypeXmlContainerPage.isContainerPage(containerPage)) {\n                throw new CmsIllegalStateException(Messages.get().container(\n                    Messages.ERR_CONTAINER_PAGE_NOT_FOUND_3,\n                    cms.getRequestContext().getUri(),\n                    CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,\n                    cntPagePath));\n            }\n            actAsTemplate = true;\n        } else if (req.getParameter(CmsContainerPageBean.TEMPLATE_ELEMENT_PARAMETER) != null) {\n            actAsTemplate = true;\n        }\n\n        // create tag for container if necessary\n        boolean createTag = false;\n        String tagName = CmsStringUtil.isEmptyOrWhitespaceOnly(tag) ? DEFAULT_TAG_NAME : tag;\n        if (!CREATE_NO_TAG.equals(tag)) {\n            createTag = true;\n            pageContext.getOut().print(getTagOpen(tagName, containerName, tagClass));\n        }\n\n        CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, containerPage, req);\n        CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, cms.getRequestContext().getLocale());\n        Locale locale = cntPage.getLocale();\n\n        // get the maximal number of elements\n        int maxElements = -1;\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(containerMaxElements)) {\n            try {\n                maxElements = Integer.parseInt(containerMaxElements);\n            } catch (NumberFormatException e) {\n                throw new CmsIllegalStateException(Messages.get().container(\n                    Messages.LOG_WRONG_CONTAINER_MAXELEMENTS_4,\n                    new Object[] {cms.getSitePath(containerPage), locale, containerName, containerMaxElements}), e);\n            }\n        } else {\n            if (LOG.isWarnEnabled()) {\n                LOG.warn(Messages.get().container(\n                    Messages.LOG_MAXELEMENTS_NOT_SET_3,\n                    new Object[] {containerName, locale, cms.getSitePath(containerPage)}));\n            }\n        }\n\n        // get the container\n        CmsContainerBean container = cntPage.getContainers().get(containerName);\n        boolean isOnline = cms.getRequestContext().currentProject().isOnlineProject();\n        if (container == null) {\n            // container not found\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(Messages.get().container(\n                    Messages.LOG_CONTAINER_NOT_FOUND_3,\n                    cms.getSitePath(containerPage),\n                    locale,\n                    containerName).key());\n            }\n            if (!isOnline) {\n                // add container data for the editor\n                try {\n                    pageContext.getOut().print(\n                        getCntDataTag(new CmsContainerBean(containerName, containerType, maxElements, null)));\n                } catch (JSONException e) {\n                    // should never happen\n                    throw new JspException(e);\n                }\n            }\n\n            // close tag for the empty container\n            if (createTag) {\n                pageContext.getOut().print(getTagClose(tagName));\n            }\n            return;\n        }\n        // actualize the cache\n        container.setMaxElements(maxElements);\n\n        if (!isOnline) {\n            // add container data for the editor\n            try {\n                pageContext.getOut().print(getCntDataTag(container));\n            } catch (JSONException e) {\n                // should never happen\n                throw new JspException(e);\n            }\n        }\n\n        // validate the type\n        if (!containerType.equals(container.getType())) {\n            throw new CmsIllegalStateException(Messages.get().container(\n                Messages.LOG_WRONG_CONTAINER_TYPE_4,\n                new Object[] {cms.getSitePath(containerPage), locale, containerName, containerType}));\n        }\n\n        // get the actual number of elements to render\n        int renderElems = container.getElements().size();\n        if ((maxElements > 0) && (renderElems > maxElements)) {\n            renderElems = maxElements;\n        }\n\n        if (actAsTemplate) {\n            if (!cntPage.getTypes().contains(CmsContainerPageBean.TYPE_TEMPLATE)) {\n                throw new CmsIllegalStateException(Messages.get().container(\n                    Messages.ERR_CONTAINER_PAGE_NO_TYPE_3,\n                    cms.getRequestContext().getUri(),\n                    cms.getSitePath(containerPage),\n                    CmsContainerPageBean.TYPE_TEMPLATE));\n            }\n            if (containerType.equals(CmsContainerPageBean.TYPE_TEMPLATE)) {\n                // render template element\n                renderElems--;\n                CmsResource resUri;\n                if (req.getParameter(CmsContainerPageBean.TEMPLATE_ELEMENT_PARAMETER) != null) {\n                    CmsUUID id = new CmsUUID(req.getParameter(CmsContainerPageBean.TEMPLATE_ELEMENT_PARAMETER));\n                    resUri = cms.readResource(id);\n                } else {\n                    // check the history first\n                    resUri = (CmsResource)CmsHistoryResourceHandler.getHistoryResource(req);\n                    if (resUri == null) {\n                        resUri = cms.readResource(cms.getRequestContext().getUri());\n                    }\n                }\n\n                String elementFormatter = OpenCms.getADEManager().getXmlContentFormatters(cms, resUri).get(\n                    containerType);\n\n                if (CmsStringUtil.isEmptyOrWhitespaceOnly(elementFormatter)) {\n                    throw new CmsIllegalStateException(Messages.get().container(\n                        Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                        cms.getRequestContext().getUri(),\n                        OpenCms.getResourceManager().getResourceType(resUri).getTypeName(),\n                        CmsContainerPageBean.TYPE_TEMPLATE));\n                }\n                // execute the formatter jsp for the given element uri\n                CmsContainerElementBean element = new CmsContainerElementBean(\n                    resUri.getStructureId(),\n                    cms.readResource(elementFormatter).getStructureId(),\n                    null); // when used as template element there are no properties\n\n                // do not write element data for the editor\n\n                CmsJspTagInclude.includeTagAction(\n                    pageContext,\n                    elementFormatter,\n                    null,\n                    false,\n                    null,\n                    Collections.singletonMap(CmsADEManager.ATTR_CURRENT_ELEMENT, (Object)element),\n                    req,\n                    res);\n            }\n        }\n\n        // iterate the elements\n        for (CmsContainerElementBean element : container.getElements()) {\n            if (renderElems < 1) {\n                break;\n            }\n            renderElems--;\n\n            CmsResource resUri = cms.readResource(element.getElementId());\n\n            if (resUri.getTypeId() == CmsResourceTypeXmlContainerPage.SUB_CONTAINER_TYPE_ID) {\n                CmsXmlSubContainer xmlSubContainer = CmsXmlSubContainerFactory.unmarshal(cms, resUri, req);\n                CmsSubContainerBean subContainer = xmlSubContainer.getSubContainer(\n                    cms,\n                    cms.getRequestContext().getLocale());\n                if (!subContainer.getTypes().contains(containerType)) {\n                    //TODO: change message\n                    throw new CmsIllegalStateException(Messages.get().container(\n                        Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                        resUri.getRootPath(),\n                        OpenCms.getResourceManager().getResourceType(resUri).getTypeName(),\n                        containerType));\n                }\n                for (CmsContainerElementBean subelement : subContainer.getElements()) {\n                    CmsResource subelementRes = cms.readResource(subelement.getElementId());\n                    String subelementUri = cms.getSitePath(subelementRes);\n\n                    //String subelementFormatter = cms.getSitePath(subelement.getFormatter());\n                    String subelementFormatter = OpenCms.getADEManager().getXmlContentFormatters(cms, subelementRes).get(\n                        containerType);\n                    if (CmsStringUtil.isEmptyOrWhitespaceOnly(subelementFormatter) && LOG.isErrorEnabled()) {\n                        // skip this element, it has no formatter for this container type defined\n                        LOG.error(new CmsIllegalStateException(Messages.get().container(\n                            Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                            subelementUri,\n                            OpenCms.getResourceManager().getResourceType(subelementRes).getTypeName(),\n                            containerType)));\n                        continue;\n                    }\n\n                    // execute the formatter jsp for the given element uri\n                    CmsJspTagInclude.includeTagAction(\n                        pageContext,\n                        subelementFormatter,\n                        null,\n                        false,\n                        null,\n                        Collections.singletonMap(CmsADEManager.ATTR_CURRENT_ELEMENT, (Object)subelement),\n                        req,\n                        res);\n                }\n\n            } else {\n                String elementFormatter = cms.getSitePath(cms.readResource(element.getFormatterId()));\n\n                // execute the formatter jsp for the given element uri\n                CmsJspTagInclude.includeTagAction(\n                    pageContext,\n                    elementFormatter,\n                    null,\n                    false,\n                    null,\n                    Collections.singletonMap(CmsADEManager.ATTR_CURRENT_ELEMENT, (Object)element),\n                    req,\n                    res);\n            }\n        }\n        // close tag for container\n        if (createTag) {\n            pageContext.getOut().print(getTagClose(tagName));\n        }\n    }","commit_id":"6991430d3287e63c3ba2dd13995752fce6d9c8f5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"@Override\n    public void close(ServerSocket sock) throws IOException {\n        this.manager.unregisterSocket(sock);\n        this.factory.close(sock);\n    }","id":107340,"modified_method":"@Override\n    public void close(ServerSocket sock) throws IOException {\n        final SocketBindingManager.NamedManagedBindingRegistry registry = this.manager.getNamedRegistry();\n        final String name = getSockets().get(sock);\n        registry.unregisterBinding(name);\n        this.factory.close(sock);\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public DatagramSocket createDatagramSocket(String serviceName, int port, InetAddress localAddress) throws SocketException {\n        return this.register(this.factory.createDatagramSocket(serviceName, port, localAddress));\n    }","id":107341,"modified_method":"@Override\n    public DatagramSocket createDatagramSocket(String serviceName, int port, InetAddress localAddress) throws SocketException {\n        return this.register(serviceName, this.factory.createDatagramSocket(serviceName, port, localAddress));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Socket createSocket(String serviceName, String host, int port) throws IOException {\n        return this.register(this.factory.createSocket(serviceName, host, port));\n    }","id":107342,"modified_method":"@Override\n    public Socket createSocket(String serviceName, String host, int port) throws IOException {\n        return this.register(serviceName, this.factory.createSocket(serviceName, host, port));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void close(DatagramSocket sock) {\n        this.manager.unregisterSocket(sock);\n        this.factory.close(sock);\n    }","id":107343,"modified_method":"@Override\n    public void close(DatagramSocket sock) {\n        final SocketBindingManager.NamedManagedBindingRegistry registry = this.manager.getNamedRegistry();\n        final String name = getSockets().get(sock);\n        registry.unregisterBinding(name);\n        this.factory.close(sock);\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Socket createSocket(String serviceName, InetAddress address, int port) throws IOException {\n        return this.register(this.factory.createSocket(serviceName, address, port));\n    }","id":107344,"modified_method":"@Override\n    public Socket createSocket(String serviceName, InetAddress address, int port) throws IOException {\n        return this.register(serviceName, this.factory.createSocket(serviceName, address, port));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"private Socket register(Socket socket) {\n        this.manager.registerSocket(socket);\n        return socket;\n    }","id":107345,"modified_method":"private Socket register(final String name, final Socket socket) {\n        final SocketBindingManager.NamedManagedBindingRegistry registry = this.manager.getNamedRegistry();\n        registry.registerSocket(name, socket);\n        return socket;\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ServerSocket createServerSocket(String serviceName) throws IOException {\n        return this.register(this.factory.createServerSocket(serviceName));\n    }","id":107346,"modified_method":"@Override\n    public ServerSocket createServerSocket(String serviceName) throws IOException {\n        return this.register(serviceName, this.factory.createServerSocket(serviceName));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public MulticastSocket createMulticastSocket(String serviceName) throws IOException {\n        return this.register(this.factory.createMulticastSocket(serviceName));\n    }","id":107347,"modified_method":"@Override\n    public MulticastSocket createMulticastSocket(String serviceName) throws IOException {\n        return this.register(serviceName, this.factory.createMulticastSocket(serviceName));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ServerSocket createServerSocket(String serviceName, int port, int backlog, InetAddress bindAddr) throws IOException {\n        return this.register(this.factory.createServerSocket(serviceName, port, backlog, bindAddr));\n    }","id":107348,"modified_method":"@Override\n    public ServerSocket createServerSocket(String serviceName, int port, int backlog, InetAddress bindAddr) throws IOException {\n        return this.register(serviceName, this.factory.createServerSocket(serviceName, port, backlog, bindAddr));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public DatagramSocket createDatagramSocket(String serviceName) throws SocketException {\n        return this.register(this.factory.createDatagramSocket(serviceName));\n    }","id":107349,"modified_method":"@Override\n    public DatagramSocket createDatagramSocket(String serviceName) throws SocketException {\n        return this.register(serviceName, this.factory.createDatagramSocket(serviceName));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ServerSocket createServerSocket(String serviceName, int port, int backlog) throws IOException {\n        return this.register(this.factory.createServerSocket(serviceName, port, backlog));\n    }","id":107350,"modified_method":"@Override\n    public ServerSocket createServerSocket(String serviceName, int port, int backlog) throws IOException {\n        return this.register(serviceName, this.factory.createServerSocket(serviceName, port, backlog));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public MulticastSocket createMulticastSocket(String serviceName, SocketAddress bindAddress) throws IOException {\n        return this.register(this.factory.createMulticastSocket(serviceName, bindAddress));\n    }","id":107351,"modified_method":"@Override\n    public MulticastSocket createMulticastSocket(String serviceName, SocketAddress bindAddress) throws IOException {\n        return this.register(serviceName, this.factory.createMulticastSocket(serviceName, bindAddress));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public DatagramSocket createDatagramSocket(String serviceName, int port) throws SocketException {\n        return this.register(this.factory.createDatagramSocket(serviceName, port));\n    }","id":107352,"modified_method":"@Override\n    public DatagramSocket createDatagramSocket(String serviceName, int port) throws SocketException {\n        return this.register(serviceName, this.factory.createDatagramSocket(serviceName, port));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public MulticastSocket createMulticastSocket(String serviceName, int port) throws IOException {\n        return this.register(this.factory.createMulticastSocket(serviceName, port));\n    }","id":107353,"modified_method":"@Override\n    public MulticastSocket createMulticastSocket(String serviceName, int port) throws IOException {\n        return this.register(serviceName, this.factory.createMulticastSocket(serviceName, port));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public DatagramSocket createDatagramSocket(String serviceName, SocketAddress bindAddress) throws SocketException {\n        return this.register(this.factory.createDatagramSocket(serviceName, bindAddress));\n    }","id":107354,"modified_method":"@Override\n    public DatagramSocket createDatagramSocket(String serviceName, SocketAddress bindAddress) throws SocketException {\n        return this.register(serviceName, this.factory.createDatagramSocket(serviceName, bindAddress));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"private ServerSocket register(ServerSocket socket) {\n        this.manager.registerSocket(socket);\n        return socket;\n    }","id":107355,"modified_method":"private ServerSocket register(final String name, ServerSocket socket) {\n        final SocketBindingManager.NamedManagedBindingRegistry registry = this.manager.getNamedRegistry();\n        registry.registerSocket(name, socket);\n        return socket;\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Socket createSocket(String serviceName) throws IOException {\n        return this.register(this.factory.createSocket(serviceName));\n    }","id":107356,"modified_method":"@Override\n    public Socket createSocket(String serviceName) throws IOException {\n        return this.register(serviceName, this.factory.createSocket(serviceName));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"private DatagramSocket register(DatagramSocket socket) {\n        this.manager.registerSocket(socket);\n        return socket;\n    }","id":107357,"modified_method":"private DatagramSocket register(final String name, final DatagramSocket socket) {\n        final SocketBindingManager.NamedManagedBindingRegistry registry = this.manager.getNamedRegistry();\n        registry.registerSocket(name, socket);\n        return socket;\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Socket createSocket(String serviceName, String host, int port, InetAddress localAddress, int localPort) throws IOException {\n        return this.register(this.factory.createSocket(serviceName, host, port, localAddress, localPort));\n    }","id":107358,"modified_method":"@Override\n    public Socket createSocket(String serviceName, String host, int port, InetAddress localAddress, int localPort) throws IOException {\n        return this.register(serviceName, this.factory.createSocket(serviceName, host, port, localAddress, localPort));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void close(Socket sock) throws IOException {\n        this.manager.unregisterSocket(sock);\n        this.factory.close(sock);\n    }","id":107359,"modified_method":"@Override\n    public void close(Socket sock) throws IOException {\n        final SocketBindingManager.NamedManagedBindingRegistry registry = this.manager.getNamedRegistry();\n        final String name = getSockets().get(sock);\n        registry.unregisterBinding(name);\n        this.factory.close(sock);\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Socket createSocket(String serviceName, InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException {\n        return this.register(this.factory.createSocket(serviceName, address, port, localAddress, localPort));\n    }","id":107360,"modified_method":"@Override\n    public Socket createSocket(String serviceName, InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException {\n        return this.register(serviceName, this.factory.createSocket(serviceName, address, port, localAddress, localPort));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ServerSocket createServerSocket(String serviceName, int port) throws IOException {\n        return this.register(this.factory.createServerSocket(serviceName, port));\n    }","id":107361,"modified_method":"@Override\n    public ServerSocket createServerSocket(String serviceName, int port) throws IOException {\n        return this.register(serviceName, this.factory.createServerSocket(serviceName, port));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"private MulticastSocket register(MulticastSocket socket) {\n        this.manager.registerSocket(socket);\n        return socket;\n    }","id":107362,"modified_method":"private MulticastSocket register(final String name, final MulticastSocket socket) {\n        final SocketBindingManager.NamedManagedBindingRegistry registry = this.manager.getNamedRegistry();\n        registry.registerSocket(name, socket);\n        return socket;\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"public static void initOperations(final ModelNodeRegistration root, final DeploymentRepository deploymentRepository, final ExtensibleConfigurationPersister extensibleConfigurationPersister, ServerEnvironment serverEnvironment) {\n        // Build up the core model registry\n        root.registerReadWriteAttribute(NAME, null, new StringLengthValidatingHandler(1), AttributeAccess.Storage.CONFIGURATION);\n        // Global operations\n        root.registerOperationHandler(GlobalOperationHandlers.ResolveAddressOperationHandler.OPERATION_NAME, GlobalOperationHandlers.RESOLVE, GlobalOperationHandlers.RESOLVE, false, OperationEntry.EntryType.PRIVATE);\n        root.registerOperationHandler(READ_RESOURCE_OPERATION, ServerOperationHandlers.SERVER_READ_RESOURCE_HANDLER, CommonProviders.READ_RESOURCE_PROVIDER, true);\n        root.registerOperationHandler(READ_ATTRIBUTE_OPERATION, ServerOperationHandlers.SERVER_READ_ATTRIBUTE_HANDLER, CommonProviders.READ_ATTRIBUTE_PROVIDER, true);\n        root.registerOperationHandler(READ_RESOURCE_DESCRIPTION_OPERATION, GlobalOperationHandlers.READ_RESOURCE_DESCRIPTION, CommonProviders.READ_RESOURCE_DESCRIPTION_PROVIDER, true);\n        root.registerOperationHandler(READ_CHILDREN_NAMES_OPERATION, GlobalOperationHandlers.READ_CHILDREN_NAMES, CommonProviders.READ_CHILDREN_NAMES_PROVIDER, true);\n        root.registerOperationHandler(READ_CHILDREN_TYPES_OPERATION, GlobalOperationHandlers.READ_CHILDREN_TYPES, CommonProviders.READ_CHILDREN_TYPES_PROVIDER, true);\n        root.registerOperationHandler(READ_CHILDREN_RESOURCES_OPERATION, GlobalOperationHandlers.READ_CHILDREN_RESOURCES, CommonProviders.READ_CHILDREN_RESOURCES_PROVIDER, true);\n        root.registerOperationHandler(READ_OPERATION_NAMES_OPERATION, GlobalOperationHandlers.READ_OPERATION_NAMES, CommonProviders.READ_OPERATION_NAMES_PROVIDER, true);\n        root.registerOperationHandler(READ_OPERATION_DESCRIPTION_OPERATION, GlobalOperationHandlers.READ_OPERATION_DESCRIPTION, CommonProviders.READ_OPERATION_PROVIDER, true);\n        root.registerOperationHandler(WRITE_ATTRIBUTE_OPERATION, ServerOperationHandlers.SERVER_WRITE_ATTRIBUTE_HANDLER, CommonProviders.WRITE_ATTRIBUTE_PROVIDER, true);\n        // Other root resource operations\n        root.registerOperationHandler(NamespaceAddHandler.OPERATION_NAME, NamespaceAddHandler.INSTANCE, NamespaceAddHandler.INSTANCE, false);\n        root.registerOperationHandler(NamespaceRemoveHandler.OPERATION_NAME, NamespaceRemoveHandler.INSTANCE, NamespaceRemoveHandler.INSTANCE, false);\n        root.registerOperationHandler(SchemaLocationAddHandler.OPERATION_NAME, SchemaLocationAddHandler.INSTANCE, SchemaLocationAddHandler.INSTANCE, false);\n        root.registerOperationHandler(SchemaLocationRemoveHandler.OPERATION_NAME, SchemaLocationRemoveHandler.INSTANCE, SchemaLocationRemoveHandler.INSTANCE, false);\n        root.registerOperationHandler(SystemPropertyAddHandler.OPERATION_NAME, SystemPropertyAddHandler.INSTANCE, SystemPropertyAddHandler.INSTANCE, false);\n        root.registerOperationHandler(SystemPropertyRemoveHandler.OPERATION_NAME, SystemPropertyRemoveHandler.INSTANCE, SystemPropertyRemoveHandler.INSTANCE, false);\n        DeploymentUploadBytesHandler dubh = new DeploymentUploadBytesHandler(deploymentRepository);\n        root.registerOperationHandler(DeploymentUploadBytesHandler.OPERATION_NAME, dubh, dubh, false);\n        DeploymentUploadURLHandler duuh = new DeploymentUploadURLHandler(deploymentRepository);\n        root.registerOperationHandler(DeploymentUploadURLHandler.OPERATION_NAME, duuh, duuh, false);\n        DeploymentUploadStreamAttachmentHandler dush = new DeploymentUploadStreamAttachmentHandler(deploymentRepository);\n        root.registerOperationHandler(DeploymentUploadStreamAttachmentHandler.OPERATION_NAME, dush, dush, false);\n        root.registerOperationHandler(DeploymentReplaceHandler.OPERATION_NAME, DeploymentReplaceHandler.INSTANCE, DeploymentReplaceHandler.INSTANCE, false);\n        DeploymentFullReplaceHandler dfrh = new DeploymentFullReplaceHandler(deploymentRepository);\n        root.registerOperationHandler(DeploymentFullReplaceHandler.OPERATION_NAME, dfrh, dfrh, false);\n        SnapshotDeleteHandler snapshotDelete = new SnapshotDeleteHandler(extensibleConfigurationPersister);\n        root.registerOperationHandler(SnapshotDeleteHandler.OPERATION_NAME, snapshotDelete, snapshotDelete, false);\n        SnapshotListHandler snapshotList = new SnapshotListHandler(extensibleConfigurationPersister);\n        root.registerOperationHandler(SnapshotListHandler.OPERATION_NAME, snapshotList, snapshotList, false);\n        SnapshotTakeHandler snapshotTake = new SnapshotTakeHandler(extensibleConfigurationPersister);\n        root.registerOperationHandler(SnapshotTakeHandler.OPERATION_NAME, snapshotTake, snapshotTake, false);\n\n        root.registerReadOnlyAttribute(ServerDescriptionConstants.SERVER_STATE, ServerStateAttributeHandler.INSTANCE, Storage.RUNTIME);\n\n//        root.registerOperationHandler(ServerCompositeOperationHandler.OPERATION_NAME, ServerCompositeOperationHandler.INSTANCE, ServerCompositeOperationHandler.INSTANCE, false);\n\n        // Runtime operations\n        root.registerOperationHandler(ServerReloadHandler.OPERATION_NAME, ServerReloadHandler.INSTANCE, ServerReloadHandler.INSTANCE, false);\n\n        if (serverEnvironment != null && serverEnvironment.isStandalone())\n            root.registerOperationHandler(ServerShutdownHandler.OPERATION_NAME, ServerShutdownHandler.INSTANCE, ServerShutdownHandler.INSTANCE, false);\n\n        // Management API protocols\n        ModelNodeRegistration managementNative = root.registerSubModel(PathElement.pathElement(MANAGEMENT_INTERFACES, NATIVE_INTERFACE), CommonProviders.MANAGEMENT_PROVIDER);\n        managementNative.registerOperationHandler(NativeManagementAddHandler.OPERATION_NAME, NativeManagementAddHandler.INSTANCE, NativeManagementAddHandler.INSTANCE, false);\n\n        ModelNodeRegistration managementHttp = root.registerSubModel(PathElement.pathElement(MANAGEMENT_INTERFACES, HTTP_INTERFACE), CommonProviders.MANAGEMENT_PROVIDER);\n        managementHttp.registerOperationHandler(HttpManagementAddHandler.OPERATION_NAME, HttpManagementAddHandler.INSTANCE, HttpManagementAddHandler.INSTANCE, false);\n        // root.registerReadWriteAttribute(ModelDescriptionConstants.MANAGEMENT_INTERFACES, GlobalOperationHandlers.READ_ATTRIBUTE, ManagementSocketAddHandler.INSTANCE);\n\n        // Paths\n        ModelNodeRegistration paths = root.registerSubModel(PathElement.pathElement(PATH), CommonProviders.SPECIFIED_PATH_PROVIDER);\n        paths.registerOperationHandler(SpecifiedPathAddHandler.OPERATION_NAME, SpecifiedPathAddHandler.INSTANCE, SpecifiedPathAddHandler.INSTANCE, false);\n        paths.registerOperationHandler(SpecifiedPathRemoveHandler.OPERATION_NAME, SpecifiedPathRemoveHandler.INSTANCE, SpecifiedPathRemoveHandler.INSTANCE, false);\n\n        // Interfaces\n        ModelNodeRegistration interfaces = root.registerSubModel(PathElement.pathElement(INTERFACE), CommonProviders.SPECIFIED_INTERFACE_PROVIDER);\n        interfaces.registerOperationHandler(SpecifiedInterfaceAddHandler.OPERATION_NAME, SpecifiedInterfaceAddHandler.INSTANCE, SpecifiedInterfaceAddHandler.INSTANCE, false);\n        interfaces.registerOperationHandler(SpecifiedInterfaceRemoveHandler.OPERATION_NAME, SpecifiedInterfaceRemoveHandler.INSTANCE, SpecifiedInterfaceRemoveHandler.INSTANCE, false);\n\n        // Sockets\n        ModelNodeRegistration socketGroup = root.registerSubModel(PathElement.pathElement(SOCKET_BINDING_GROUP), ServerDescriptionProviders.SOCKET_BINDING_GROUP_PROVIDER);\n        socketGroup.registerOperationHandler(BindingGroupAddHandler.OPERATION_NAME, BindingGroupAddHandler.INSTANCE, BindingGroupAddHandler.INSTANCE, false);\n        socketGroup.registerOperationHandler(BindingGroupRemoveHandler.OPERATION_NAME, BindingGroupRemoveHandler.INSTANCE, BindingGroupRemoveHandler.INSTANCE, false);\n        socketGroup.registerReadWriteAttribute(PORT_OFFSET, null, BindingGroupPortOffsetHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n        socketGroup.registerReadWriteAttribute(DEFAULT_INTERFACE, null, BindingGroupDefaultInterfaceHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n        ModelNodeRegistration socketBinding = socketGroup.registerSubModel(PathElement.pathElement(SOCKET_BINDING), CommonProviders.SOCKET_BINDING_PROVIDER);\n        socketBinding.registerOperationHandler(BindingAddHandler.OPERATION_NAME, BindingAddHandler.INSTANCE, BindingAddHandler.INSTANCE, false);\n        socketBinding.registerOperationHandler(BindingRemoveHandler.OPERATION_NAME, BindingRemoveHandler.INSTANCE, BindingRemoveHandler.INSTANCE, false);\n        socketBinding.registerReadWriteAttribute(INTERFACE, null, BindingInterfaceHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n        socketBinding.registerReadWriteAttribute(PORT, null, BindingPortHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n        socketBinding.registerReadWriteAttribute(FIXED_PORT, null, BindingFixedPortHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n        socketBinding.registerReadWriteAttribute(MULTICAST_ADDRESS, null, BindingMulticastAddressHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n        socketBinding.registerReadWriteAttribute(MULTICAST_PORT, null, BindingPortHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n\n        // Deployments\n        ModelNodeRegistration deployments = root.registerSubModel(PathElement.pathElement(DEPLOYMENT), ServerDescriptionProviders.DEPLOYMENT_PROVIDER);\n        DeploymentAddHandler dah = new DeploymentAddHandler(deploymentRepository);\n        deployments.registerOperationHandler(DeploymentAddHandler.OPERATION_NAME, dah, dah, false);\n        deployments.registerOperationHandler(DeploymentRemoveHandler.OPERATION_NAME, DeploymentRemoveHandler.INSTANCE, DeploymentRemoveHandler.INSTANCE, false);\n        deployments.registerOperationHandler(DeploymentDeployHandler.OPERATION_NAME, DeploymentDeployHandler.INSTANCE, DeploymentDeployHandler.INSTANCE, false);\n        deployments.registerOperationHandler(DeploymentUndeployHandler.OPERATION_NAME, DeploymentUndeployHandler.INSTANCE, DeploymentUndeployHandler.INSTANCE, false);\n        deployments.registerOperationHandler(DeploymentRedeployHandler.OPERATION_NAME, DeploymentRedeployHandler.INSTANCE, DeploymentRedeployHandler.INSTANCE, false);\n\n        // Extensions\n        ModelNodeRegistration extensions = root.registerSubModel(PathElement.pathElement(EXTENSION), CommonProviders.EXTENSION_PROVIDER);\n        ExtensionContext extensionContext = new ExtensionContextImpl(root, deployments, extensibleConfigurationPersister);\n        ExtensionAddHandler addExtensionHandler = new ExtensionAddHandler(extensionContext);\n        extensions.registerOperationHandler(ExtensionAddHandler.OPERATION_NAME, addExtensionHandler, addExtensionHandler, false);\n        extensions.registerOperationHandler(ExtensionRemoveHandler.OPERATION_NAME, ExtensionRemoveHandler.INSTANCE, ExtensionRemoveHandler.INSTANCE, false);\n\n    }","id":107363,"modified_method":"public static void initOperations(final ModelNodeRegistration root, final DeploymentRepository deploymentRepository, final ExtensibleConfigurationPersister extensibleConfigurationPersister, ServerEnvironment serverEnvironment) {\n        // Build up the core model registry\n        root.registerReadWriteAttribute(NAME, null, new StringLengthValidatingHandler(1), AttributeAccess.Storage.CONFIGURATION);\n        // Global operations\n        root.registerOperationHandler(GlobalOperationHandlers.ResolveAddressOperationHandler.OPERATION_NAME, GlobalOperationHandlers.RESOLVE, GlobalOperationHandlers.RESOLVE, false, OperationEntry.EntryType.PRIVATE);\n        root.registerOperationHandler(READ_RESOURCE_OPERATION, ServerOperationHandlers.SERVER_READ_RESOURCE_HANDLER, CommonProviders.READ_RESOURCE_PROVIDER, true);\n        root.registerOperationHandler(READ_ATTRIBUTE_OPERATION, ServerOperationHandlers.SERVER_READ_ATTRIBUTE_HANDLER, CommonProviders.READ_ATTRIBUTE_PROVIDER, true);\n        root.registerOperationHandler(READ_RESOURCE_DESCRIPTION_OPERATION, GlobalOperationHandlers.READ_RESOURCE_DESCRIPTION, CommonProviders.READ_RESOURCE_DESCRIPTION_PROVIDER, true);\n        root.registerOperationHandler(READ_CHILDREN_NAMES_OPERATION, GlobalOperationHandlers.READ_CHILDREN_NAMES, CommonProviders.READ_CHILDREN_NAMES_PROVIDER, true);\n        root.registerOperationHandler(READ_CHILDREN_TYPES_OPERATION, GlobalOperationHandlers.READ_CHILDREN_TYPES, CommonProviders.READ_CHILDREN_TYPES_PROVIDER, true);\n        root.registerOperationHandler(READ_CHILDREN_RESOURCES_OPERATION, GlobalOperationHandlers.READ_CHILDREN_RESOURCES, CommonProviders.READ_CHILDREN_RESOURCES_PROVIDER, true);\n        root.registerOperationHandler(READ_OPERATION_NAMES_OPERATION, GlobalOperationHandlers.READ_OPERATION_NAMES, CommonProviders.READ_OPERATION_NAMES_PROVIDER, true);\n        root.registerOperationHandler(READ_OPERATION_DESCRIPTION_OPERATION, GlobalOperationHandlers.READ_OPERATION_DESCRIPTION, CommonProviders.READ_OPERATION_PROVIDER, true);\n        root.registerOperationHandler(WRITE_ATTRIBUTE_OPERATION, ServerOperationHandlers.SERVER_WRITE_ATTRIBUTE_HANDLER, CommonProviders.WRITE_ATTRIBUTE_PROVIDER, true);\n        // Other root resource operations\n        root.registerOperationHandler(NamespaceAddHandler.OPERATION_NAME, NamespaceAddHandler.INSTANCE, NamespaceAddHandler.INSTANCE, false);\n        root.registerOperationHandler(NamespaceRemoveHandler.OPERATION_NAME, NamespaceRemoveHandler.INSTANCE, NamespaceRemoveHandler.INSTANCE, false);\n        root.registerOperationHandler(SchemaLocationAddHandler.OPERATION_NAME, SchemaLocationAddHandler.INSTANCE, SchemaLocationAddHandler.INSTANCE, false);\n        root.registerOperationHandler(SchemaLocationRemoveHandler.OPERATION_NAME, SchemaLocationRemoveHandler.INSTANCE, SchemaLocationRemoveHandler.INSTANCE, false);\n        root.registerOperationHandler(SystemPropertyAddHandler.OPERATION_NAME, SystemPropertyAddHandler.INSTANCE, SystemPropertyAddHandler.INSTANCE, false);\n        root.registerOperationHandler(SystemPropertyRemoveHandler.OPERATION_NAME, SystemPropertyRemoveHandler.INSTANCE, SystemPropertyRemoveHandler.INSTANCE, false);\n        DeploymentUploadBytesHandler dubh = new DeploymentUploadBytesHandler(deploymentRepository);\n        root.registerOperationHandler(DeploymentUploadBytesHandler.OPERATION_NAME, dubh, dubh, false);\n        DeploymentUploadURLHandler duuh = new DeploymentUploadURLHandler(deploymentRepository);\n        root.registerOperationHandler(DeploymentUploadURLHandler.OPERATION_NAME, duuh, duuh, false);\n        DeploymentUploadStreamAttachmentHandler dush = new DeploymentUploadStreamAttachmentHandler(deploymentRepository);\n        root.registerOperationHandler(DeploymentUploadStreamAttachmentHandler.OPERATION_NAME, dush, dush, false);\n        root.registerOperationHandler(DeploymentReplaceHandler.OPERATION_NAME, DeploymentReplaceHandler.INSTANCE, DeploymentReplaceHandler.INSTANCE, false);\n        DeploymentFullReplaceHandler dfrh = new DeploymentFullReplaceHandler(deploymentRepository);\n        root.registerOperationHandler(DeploymentFullReplaceHandler.OPERATION_NAME, dfrh, dfrh, false);\n        SnapshotDeleteHandler snapshotDelete = new SnapshotDeleteHandler(extensibleConfigurationPersister);\n        root.registerOperationHandler(SnapshotDeleteHandler.OPERATION_NAME, snapshotDelete, snapshotDelete, false);\n        SnapshotListHandler snapshotList = new SnapshotListHandler(extensibleConfigurationPersister);\n        root.registerOperationHandler(SnapshotListHandler.OPERATION_NAME, snapshotList, snapshotList, false);\n        SnapshotTakeHandler snapshotTake = new SnapshotTakeHandler(extensibleConfigurationPersister);\n        root.registerOperationHandler(SnapshotTakeHandler.OPERATION_NAME, snapshotTake, snapshotTake, false);\n\n        root.registerReadOnlyAttribute(ServerDescriptionConstants.SERVER_STATE, ServerStateAttributeHandler.INSTANCE, Storage.RUNTIME);\n\n//        root.registerOperationHandler(ServerCompositeOperationHandler.OPERATION_NAME, ServerCompositeOperationHandler.INSTANCE, ServerCompositeOperationHandler.INSTANCE, false);\n\n        // Runtime operations\n        root.registerOperationHandler(ServerReloadHandler.OPERATION_NAME, ServerReloadHandler.INSTANCE, ServerReloadHandler.INSTANCE, false);\n\n        if (serverEnvironment != null && serverEnvironment.isStandalone())\n            root.registerOperationHandler(ServerShutdownHandler.OPERATION_NAME, ServerShutdownHandler.INSTANCE, ServerShutdownHandler.INSTANCE, false);\n\n        // Management API protocols\n        ModelNodeRegistration managementNative = root.registerSubModel(PathElement.pathElement(MANAGEMENT_INTERFACES, NATIVE_INTERFACE), CommonProviders.MANAGEMENT_PROVIDER);\n        managementNative.registerOperationHandler(NativeManagementAddHandler.OPERATION_NAME, NativeManagementAddHandler.INSTANCE, NativeManagementAddHandler.INSTANCE, false);\n\n        ModelNodeRegistration managementHttp = root.registerSubModel(PathElement.pathElement(MANAGEMENT_INTERFACES, HTTP_INTERFACE), CommonProviders.MANAGEMENT_PROVIDER);\n        managementHttp.registerOperationHandler(HttpManagementAddHandler.OPERATION_NAME, HttpManagementAddHandler.INSTANCE, HttpManagementAddHandler.INSTANCE, false);\n        // root.registerReadWriteAttribute(ModelDescriptionConstants.MANAGEMENT_INTERFACES, GlobalOperationHandlers.READ_ATTRIBUTE, ManagementSocketAddHandler.INSTANCE);\n\n        // Paths\n        ModelNodeRegistration paths = root.registerSubModel(PathElement.pathElement(PATH), CommonProviders.SPECIFIED_PATH_PROVIDER);\n        paths.registerOperationHandler(SpecifiedPathAddHandler.OPERATION_NAME, SpecifiedPathAddHandler.INSTANCE, SpecifiedPathAddHandler.INSTANCE, false);\n        paths.registerOperationHandler(SpecifiedPathRemoveHandler.OPERATION_NAME, SpecifiedPathRemoveHandler.INSTANCE, SpecifiedPathRemoveHandler.INSTANCE, false);\n\n        // Interfaces\n        ModelNodeRegistration interfaces = root.registerSubModel(PathElement.pathElement(INTERFACE), CommonProviders.SPECIFIED_INTERFACE_PROVIDER);\n        interfaces.registerOperationHandler(SpecifiedInterfaceAddHandler.OPERATION_NAME, SpecifiedInterfaceAddHandler.INSTANCE, SpecifiedInterfaceAddHandler.INSTANCE, false);\n        interfaces.registerOperationHandler(SpecifiedInterfaceRemoveHandler.OPERATION_NAME, SpecifiedInterfaceRemoveHandler.INSTANCE, SpecifiedInterfaceRemoveHandler.INSTANCE, false);\n\n        // Sockets\n        ModelNodeRegistration socketGroup = root.registerSubModel(PathElement.pathElement(SOCKET_BINDING_GROUP), ServerDescriptionProviders.SOCKET_BINDING_GROUP_PROVIDER);\n        socketGroup.registerOperationHandler(BindingGroupAddHandler.OPERATION_NAME, BindingGroupAddHandler.INSTANCE, BindingGroupAddHandler.INSTANCE, false);\n        socketGroup.registerOperationHandler(BindingGroupRemoveHandler.OPERATION_NAME, BindingGroupRemoveHandler.INSTANCE, BindingGroupRemoveHandler.INSTANCE, false);\n        socketGroup.registerReadWriteAttribute(PORT_OFFSET, null, BindingGroupPortOffsetHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n        socketGroup.registerReadWriteAttribute(DEFAULT_INTERFACE, null, BindingGroupDefaultInterfaceHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n        ModelNodeRegistration socketBinding = socketGroup.registerSubModel(PathElement.pathElement(SOCKET_BINDING), CommonProviders.SOCKET_BINDING_PROVIDER);\n        socketBinding.registerOperationHandler(BindingAddHandler.OPERATION_NAME, BindingAddHandler.INSTANCE, BindingAddHandler.INSTANCE, false);\n        socketBinding.registerOperationHandler(BindingRemoveHandler.OPERATION_NAME, BindingRemoveHandler.INSTANCE, BindingRemoveHandler.INSTANCE, false);\n        socketBinding.registerMetric(BindingMetricHandlers.BoundHandler.ATTRIBUTE_NAME, BindingMetricHandlers.BoundHandler.INSTANCE);\n        socketBinding.registerReadWriteAttribute(INTERFACE, null, BindingInterfaceHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n        socketBinding.registerReadWriteAttribute(PORT, null, BindingPortHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n        socketBinding.registerReadWriteAttribute(FIXED_PORT, null, BindingFixedPortHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n        socketBinding.registerReadWriteAttribute(MULTICAST_ADDRESS, null, BindingMulticastAddressHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n        socketBinding.registerReadWriteAttribute(MULTICAST_PORT, null, BindingPortHandler.INSTANCE, AttributeAccess.Storage.CONFIGURATION);\n\n        // Deployments\n        ModelNodeRegistration deployments = root.registerSubModel(PathElement.pathElement(DEPLOYMENT), ServerDescriptionProviders.DEPLOYMENT_PROVIDER);\n        DeploymentAddHandler dah = new DeploymentAddHandler(deploymentRepository);\n        deployments.registerOperationHandler(DeploymentAddHandler.OPERATION_NAME, dah, dah, false);\n        deployments.registerOperationHandler(DeploymentRemoveHandler.OPERATION_NAME, DeploymentRemoveHandler.INSTANCE, DeploymentRemoveHandler.INSTANCE, false);\n        deployments.registerOperationHandler(DeploymentDeployHandler.OPERATION_NAME, DeploymentDeployHandler.INSTANCE, DeploymentDeployHandler.INSTANCE, false);\n        deployments.registerOperationHandler(DeploymentUndeployHandler.OPERATION_NAME, DeploymentUndeployHandler.INSTANCE, DeploymentUndeployHandler.INSTANCE, false);\n        deployments.registerOperationHandler(DeploymentRedeployHandler.OPERATION_NAME, DeploymentRedeployHandler.INSTANCE, DeploymentRedeployHandler.INSTANCE, false);\n\n        // Extensions\n        ModelNodeRegistration extensions = root.registerSubModel(PathElement.pathElement(EXTENSION), CommonProviders.EXTENSION_PROVIDER);\n        ExtensionContext extensionContext = new ExtensionContextImpl(root, deployments, extensibleConfigurationPersister);\n        ExtensionAddHandler addExtensionHandler = new ExtensionAddHandler(extensionContext);\n        extensions.registerOperationHandler(ExtensionAddHandler.OPERATION_NAME, addExtensionHandler, addExtensionHandler, false);\n        extensions.registerOperationHandler(ExtensionRemoveHandler.OPERATION_NAME, ExtensionRemoveHandler.INSTANCE, ExtensionRemoveHandler.INSTANCE, false);\n\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Start, register and bind the web connector.\n     *\n     * @param context the start context\n     * @throws StartException if the connector cannot be started\n     */\n    public synchronized void start(StartContext context) throws StartException {\n        final SocketBinding binding = this.binding.getValue();\n        final InetSocketAddress address = binding.getSocketAddress();\n        final Executor executor = this.executor.getOptionalValue();\n        try {\n            // Create connector\n            final Connector connector = new Connector(protocol);\n            connector.setPort(address.getPort());\n            connector.setScheme(scheme);\n            if(enableLookups != null) connector.setEnableLookups(enableLookups);\n            if(maxPostSize != null) connector.setMaxPostSize(maxPostSize);\n            if(maxSavePostSize != null) connector.setMaxSavePostSize(maxSavePostSize);\n            if(proxyName != null) connector.setProxyName(proxyName);\n            if(proxyPort != null) connector.setProxyPort(proxyPort);\n            if(redirectPort != null) connector.setRedirectPort(redirectPort);\n            if(secure != null) connector.setSecure(secure);\n            if (executor != null) {\n                Method m = connector.getProtocolHandler().getClass().getMethod(\"setExecutor\", Executor.class);\n                m.invoke(connector.getProtocolHandler(), executor);\n            }\n            if (address != null && address.getAddress() != null)  {\n                Method m = connector.getProtocolHandler().getClass().getMethod(\"setAddress\", InetAddress.class);\n                m.invoke(connector.getProtocolHandler(), address.getAddress());\n            }\n            if (maxConnections != null) {\n                try {\n                    Method m = connector.getProtocolHandler().getClass().getMethod(\"setPollerSize\", Integer.TYPE);\n                    m.invoke(connector.getProtocolHandler(), maxConnections);\n                } catch (NoSuchMethodException e) {\n                 // Not all connectors will have this\n                }\n                try {\n                    Method m = connector.getProtocolHandler().getClass().getMethod(\"setSendfileSize\", Integer.TYPE);\n                    m.invoke(connector.getProtocolHandler(), maxConnections);\n                } catch (NoSuchMethodException e) {\n                 // Not all connectors will have this\n                }\n            }\n            if (virtualServers != null) {\n                HashSet<String> virtualServersList = new HashSet<String>();\n                for (final ModelNode virtualServer : virtualServers.asList()) {\n                    virtualServersList.add(virtualServer.asString());\n                }\n                connector.setAllowedHosts(virtualServersList);\n            }\n            if (ssl != null) {\n                boolean nativeSSL = false;\n                if (connector.getProtocolHandler() instanceof Http11AprProtocol) {\n                    nativeSSL = true;\n                } else if (!(connector.getProtocolHandler() instanceof Http11Protocol)) {\n                    throw new StartException(\"Non HTTP connectors dor not support SSL\");\n                }\n                // Enable SSL\n                try {\n                    Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLEnabled\", Boolean.TYPE);\n                    m.invoke(connector.getProtocolHandler(), true);\n                } catch (NoSuchMethodException e) {\n                    // No SSL support\n                    throw new StartException(e);\n                }\n                if (nativeSSL) {\n                    // OpenSSL configuration\n                    try {\n                        if (ssl.hasDefined(Constants.PASSWORD)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLPassword\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.PASSWORD).asString());\n                        }\n                        if (ssl.hasDefined(Constants.CERTIFICATE_KEY_FILE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLCertificateKeyFile\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CERTIFICATE_KEY_FILE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.CIPHER_SUITE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLCipherSuite\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CIPHER_SUITE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.PROTOCOL)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLProtocol\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.PROTOCOL).asString());\n                        }\n                        if (ssl.hasDefined(Constants.VERIFY_CLIENT)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLVerifyClient\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.VERIFY_CLIENT).asString());\n                        }\n                        if (ssl.hasDefined(Constants.VERIFY_DEPTH)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLVerifyDepth\", Integer.TYPE);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.VERIFY_DEPTH).asInt());\n                        }\n                        if (ssl.hasDefined(Constants.CERTIFICATE_FILE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLCertificateFile\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CERTIFICATE_FILE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.CA_CERTIFICATE_FILE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLCACertificateFile\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CA_CERTIFICATE_FILE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.CA_REVOCATION_URL)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLCARevocationFile\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CA_REVOCATION_URL).asString());\n                        }\n                   } catch (NoSuchMethodException e) {\n                        throw new StartException(e);\n                    }\n                } else {\n                    // JSSE configuration\n                    try {\n                        if (ssl.hasDefined(Constants.KEY_ALIAS)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setKeyAlias\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.KEY_ALIAS).asString());\n                        }\n                        if (ssl.hasDefined(Constants.PASSWORD)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setKeypass\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.PASSWORD).asString());\n                        }\n                        if (ssl.hasDefined(Constants.CERTIFICATE_KEY_FILE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setKeystore\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CERTIFICATE_KEY_FILE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.CIPHER_SUITE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setCiphers\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CIPHER_SUITE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.PROTOCOL)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setProtocols\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.PROTOCOL).asString());\n                        }\n                        if (ssl.hasDefined(Constants.VERIFY_CLIENT)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setClientauth\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.VERIFY_CLIENT).asString());\n                        }\n                        if (ssl.hasDefined(Constants.SESSION_CACHE_SIZE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setAttribute\", String.class, Object.class);\n                            m.invoke(connector.getProtocolHandler(), \"sessionCacheSize\", ssl.get(Constants.SESSION_CACHE_SIZE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.SESSION_TIMEOUT)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setAttribute\", String.class, Object.class);\n                            m.invoke(connector.getProtocolHandler(), \"sessionCacheTimeout\", ssl.get(Constants.SESSION_TIMEOUT).asString());\n                        }\n                    } catch (NoSuchMethodException e) {\n                        throw new StartException(e);\n                    }\n                }\n            }\n            getWebServer().addConnector(connector);\n            this.connector = connector;\n        } catch (Exception e) {\n            throw new StartException(e);\n        }\n    }","id":107364,"modified_method":"/**\n     * Start, register and bind the web connector.\n     *\n     * @param context the start context\n     * @throws StartException if the connector cannot be started\n     */\n    public synchronized void start(StartContext context) throws StartException {\n        final SocketBinding binding = this.binding.getValue();\n        final InetSocketAddress address = binding.getSocketAddress();\n        final Executor executor = this.executor.getOptionalValue();\n        try {\n            // Create connector\n            final Connector connector = new Connector(protocol);\n            connector.setPort(address.getPort());\n            connector.setScheme(scheme);\n            if(enableLookups != null) connector.setEnableLookups(enableLookups);\n            if(maxPostSize != null) connector.setMaxPostSize(maxPostSize);\n            if(maxSavePostSize != null) connector.setMaxSavePostSize(maxSavePostSize);\n            if(proxyName != null) connector.setProxyName(proxyName);\n            if(proxyPort != null) connector.setProxyPort(proxyPort);\n            if(redirectPort != null) connector.setRedirectPort(redirectPort);\n            if(secure != null) connector.setSecure(secure);\n            if (executor != null) {\n                Method m = connector.getProtocolHandler().getClass().getMethod(\"setExecutor\", Executor.class);\n                m.invoke(connector.getProtocolHandler(), executor);\n            }\n            if (address != null && address.getAddress() != null)  {\n                Method m = connector.getProtocolHandler().getClass().getMethod(\"setAddress\", InetAddress.class);\n                m.invoke(connector.getProtocolHandler(), address.getAddress());\n            }\n            if (maxConnections != null) {\n                try {\n                    Method m = connector.getProtocolHandler().getClass().getMethod(\"setPollerSize\", Integer.TYPE);\n                    m.invoke(connector.getProtocolHandler(), maxConnections);\n                } catch (NoSuchMethodException e) {\n                 // Not all connectors will have this\n                }\n                try {\n                    Method m = connector.getProtocolHandler().getClass().getMethod(\"setSendfileSize\", Integer.TYPE);\n                    m.invoke(connector.getProtocolHandler(), maxConnections);\n                } catch (NoSuchMethodException e) {\n                 // Not all connectors will have this\n                }\n            }\n            if (virtualServers != null) {\n                HashSet<String> virtualServersList = new HashSet<String>();\n                for (final ModelNode virtualServer : virtualServers.asList()) {\n                    virtualServersList.add(virtualServer.asString());\n                }\n                connector.setAllowedHosts(virtualServersList);\n            }\n            if (ssl != null) {\n                boolean nativeSSL = false;\n                if (connector.getProtocolHandler() instanceof Http11AprProtocol) {\n                    nativeSSL = true;\n                } else if (!(connector.getProtocolHandler() instanceof Http11Protocol)) {\n                    throw new StartException(\"Non HTTP connectors dor not support SSL\");\n                }\n                // Enable SSL\n                try {\n                    Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLEnabled\", Boolean.TYPE);\n                    m.invoke(connector.getProtocolHandler(), true);\n                } catch (NoSuchMethodException e) {\n                    // No SSL support\n                    throw new StartException(e);\n                }\n                if (nativeSSL) {\n                    // OpenSSL configuration\n                    try {\n                        if (ssl.hasDefined(Constants.PASSWORD)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLPassword\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.PASSWORD).asString());\n                        }\n                        if (ssl.hasDefined(Constants.CERTIFICATE_KEY_FILE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLCertificateKeyFile\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CERTIFICATE_KEY_FILE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.CIPHER_SUITE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLCipherSuite\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CIPHER_SUITE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.PROTOCOL)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLProtocol\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.PROTOCOL).asString());\n                        }\n                        if (ssl.hasDefined(Constants.VERIFY_CLIENT)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLVerifyClient\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.VERIFY_CLIENT).asString());\n                        }\n                        if (ssl.hasDefined(Constants.VERIFY_DEPTH)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLVerifyDepth\", Integer.TYPE);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.VERIFY_DEPTH).asInt());\n                        }\n                        if (ssl.hasDefined(Constants.CERTIFICATE_FILE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLCertificateFile\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CERTIFICATE_FILE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.CA_CERTIFICATE_FILE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLCACertificateFile\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CA_CERTIFICATE_FILE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.CA_REVOCATION_URL)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setSSLCARevocationFile\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CA_REVOCATION_URL).asString());\n                        }\n                   } catch (NoSuchMethodException e) {\n                        throw new StartException(e);\n                    }\n                } else {\n                    // JSSE configuration\n                    try {\n                        if (ssl.hasDefined(Constants.KEY_ALIAS)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setKeyAlias\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.KEY_ALIAS).asString());\n                        }\n                        if (ssl.hasDefined(Constants.PASSWORD)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setKeypass\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.PASSWORD).asString());\n                        }\n                        if (ssl.hasDefined(Constants.CERTIFICATE_KEY_FILE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setKeystore\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CERTIFICATE_KEY_FILE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.CIPHER_SUITE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setCiphers\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CIPHER_SUITE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.PROTOCOL)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setProtocols\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.PROTOCOL).asString());\n                        }\n                        if (ssl.hasDefined(Constants.VERIFY_CLIENT)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setClientauth\", String.class);\n                            m.invoke(connector.getProtocolHandler(), ssl.get(Constants.VERIFY_CLIENT).asString());\n                        }\n                        if (ssl.hasDefined(Constants.SESSION_CACHE_SIZE)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setAttribute\", String.class, Object.class);\n                            m.invoke(connector.getProtocolHandler(), \"sessionCacheSize\", ssl.get(Constants.SESSION_CACHE_SIZE).asString());\n                        }\n                        if (ssl.hasDefined(Constants.SESSION_TIMEOUT)) {\n                            Method m = connector.getProtocolHandler().getClass().getMethod(\"setAttribute\", String.class, Object.class);\n                            m.invoke(connector.getProtocolHandler(), \"sessionCacheTimeout\", ssl.get(Constants.SESSION_TIMEOUT).asString());\n                        }\n                    } catch (NoSuchMethodException e) {\n                        throw new StartException(e);\n                    }\n                }\n            }\n            getWebServer().addConnector(connector);\n            this.connector = connector;\n        } catch (Exception e) {\n            throw new StartException(e);\n        }\n        // Register the binding after the connector is started\n        binding.getSocketBindings().getNamedRegistry().registerBinding(new ConnectorBinding(binding));\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"/** {@inheritDoc} */\n    public synchronized void stop(StopContext context) {\n        final Connector connector = this.connector;\n        getWebServer().removeConnector(connector);\n        this.connector = null;\n    }","id":107365,"modified_method":"/** {@inheritDoc} */\n    public synchronized void stop(StopContext context) {\n        final SocketBinding binding = this.binding.getValue();\n        binding.getSocketBindings().getNamedRegistry().unregisterBinding(binding.getName());\n        final Connector connector = this.connector;\n        getWebServer().removeConnector(connector);\n        this.connector = null;\n    }","commit_id":"a4c5d80d7f89484fe18d58232f190e29f33bb864","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n   * Moves the metadata of an existing block to another location.\n   *\n   * @param blockId the block ID\n   * @return the new block metadata if success, absent otherwise\n   */\n  public synchronized Optional<BlockMeta> moveBlockMeta(long userId, long blockId,\n      BlockStoreLocation newLocation) {\n    // Check if the blockId is valid.\n    BlockMeta block = getBlockMeta(blockId).orNull();\n    if (block == null) {\n      LOG.error(\"No block found for block ID {}\", blockId);\n      return Optional.absent();\n    }\n\n    // If move target can be any tier, then simply return the current block meta.\n    if (newLocation == BlockStoreLocation.anyTier()) {\n      return Optional.of(block);\n    }\n\n    int newTierAlias = newLocation.tierAlias();\n    StorageTier newTier = getTier(newTierAlias);\n    StorageDir newDir = null;\n    if (newLocation == BlockStoreLocation.anyDirInTier(newTierAlias)) {\n      for (StorageDir dir : newTier.getStorageDirs()) {\n        if (dir.getAvailableBytes() > block.getBlockSize()) {\n          newDir = dir;\n        }\n      }\n    } else {\n      newDir = newTier.getDir(newLocation.dir());\n    }\n\n    if (newDir == null) {\n      return Optional.absent();\n    }\n    StorageDir oldDir = block.getParentDir();\n    if (!oldDir.removeBlockMeta(block)) {\n      return Optional.absent();\n    }\n    return newDir.addBlockMeta(block);\n  }","id":107366,"modified_method":"/**\n   * Moves the metadata of an existing block to another location.\n   *\n   * @param blockId the block ID\n   * @return the new block metadata if success, absent otherwise\n   */\n  public synchronized Optional<BlockMeta> moveBlockMeta(long userId, long blockId,\n      BlockStoreLocation newLocation) {\n    // Check if the blockId is valid.\n    BlockMeta block = getBlockMeta(blockId).orNull();\n    if (block == null) {\n      LOG.error(\"No block found for block ID {}\", blockId);\n      return Optional.absent();\n    }\n\n    // If move target can be any tier, then simply return the current block meta.\n    if (newLocation.equals(BlockStoreLocation.anyTier())) {\n      return Optional.of(block);\n    }\n\n    int newTierAlias = newLocation.tierAlias();\n    StorageTier newTier = getTier(newTierAlias);\n    StorageDir newDir = null;\n    if (newLocation.equals(BlockStoreLocation.anyDirInTier(newTierAlias))) {\n      for (StorageDir dir : newTier.getStorageDirs()) {\n        if (dir.getAvailableBytes() > block.getBlockSize()) {\n          newDir = dir;\n        }\n      }\n    } else {\n      newDir = newTier.getDir(newLocation.dir());\n    }\n\n    if (newDir == null) {\n      return Optional.absent();\n    }\n    StorageDir oldDir = block.getParentDir();\n    if (!oldDir.removeBlockMeta(block)) {\n      return Optional.absent();\n    }\n    return newDir.addBlockMeta(block);\n  }","commit_id":"7f21aa216b10f32bfc07091318b5f1ab66a7ac3e","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Stop the tachyon filesystem's service thread only\n   *\n   * @throws Exception\n   */\n  public void stopTFS() throws Exception {\n    stopWorker();\n    mMaster.stop();\n\n    System.clearProperty(\"tachyon.home\");\n    System.clearProperty(\"tachyon.worker.port\");\n    System.clearProperty(\"tachyon.worker.data.port\");\n    System.clearProperty(\"tachyon.worker.data.folder\");\n    System.clearProperty(\"tachyon.worker.memory.size\");\n    System.clearProperty(\"tachyon.user.remote.read.buffer.size.byte\");\n    System.clearProperty(\"tachyon.worker.to.master.heartbeat.interval.ms\");\n    System.clearProperty(\"tachyon.worker.tieredstore.level.max\");\n    System.clearProperty(\"tachyon.worker.network.netty.worker.threads\");\n    System.clearProperty(\"tachyon.worker.min.worker.threads\");\n  }","id":107367,"modified_method":"/**\n   * Stop the tachyon filesystem's service thread only\n   *\n   * @throws Exception\n   */\n  public void stopTFS() throws Exception {\n    mMaster.stop();\n    mWorker.stop();\n\n    System.clearProperty(\"tachyon.home\");\n    System.clearProperty(\"tachyon.worker.port\");\n    System.clearProperty(\"tachyon.worker.data.port\");\n    System.clearProperty(\"tachyon.worker.data.folder\");\n    System.clearProperty(\"tachyon.worker.memory.size\");\n    System.clearProperty(\"tachyon.user.remote.read.buffer.size.byte\");\n    System.clearProperty(\"tachyon.worker.to.master.heartbeat.interval.ms\");\n    System.clearProperty(\"tachyon.worker.tieredstore.level.max\");\n    System.clearProperty(\"tachyon.worker.network.netty.worker.threads\");\n    System.clearProperty(\"tachyon.worker.min.worker.threads\");\n  }","commit_id":"7f21aa216b10f32bfc07091318b5f1ab66a7ac3e","url":"https://github.com/amplab/tachyon"},{"original_method":"public FrameCreator(CreateFrame createFrame, Key job) {\n    super(null);\n    _job=job;\n    _createFrame = createFrame;\n\n    int[] idx = ArrayUtils.seq(1, _createFrame.cols + 1);\n    int[] shuffled_idx = new int[idx.length];\n    ArrayUtils.shuffleArray(idx, idx.length, shuffled_idx, _createFrame.seed, 0);\n\n    int catcols = (int)(_createFrame.categorical_fraction * _createFrame.cols);\n    int intcols = (int)(_createFrame.integer_fraction * _createFrame.cols);\n    int bincols = (int)(_createFrame.binary_fraction * _createFrame.cols);\n    int realcols = _createFrame.cols - catcols - intcols - bincols;\n\n    assert(catcols >= 0);\n    assert(intcols >= 0);\n    assert(bincols >= 0);\n    assert(realcols >= 0);\n\n    _cat_cols  = Arrays.copyOfRange(shuffled_idx, 0,                        catcols);\n    _int_cols  = Arrays.copyOfRange(shuffled_idx, catcols,                  catcols+intcols);\n    _real_cols = Arrays.copyOfRange(shuffled_idx, catcols+intcols,          catcols+intcols+realcols);\n    _bin_cols  = Arrays.copyOfRange(shuffled_idx, catcols+intcols+realcols, catcols+intcols+realcols+bincols);\n\n    // create domains for categorical variables\n    if (_createFrame.randomize) {\n      assert(_createFrame.response_factors >= 1);\n      _domain = new String[_createFrame.cols+1][];\n      _domain[0] = _createFrame.response_factors == 1 ? null : new String[_createFrame.response_factors];\n      if (_domain[0] != null) {\n        for (int i=0; i <_domain[0].length; ++i) {\n          _domain[0][i] = \"resp.\" + i;\n        }\n      }\n\n      for (int c : _cat_cols) {\n        _domain[c] = new String[_createFrame.factors];\n        for (int i = 0; i < _createFrame.factors; ++i) {\n          _domain[c][i] = UUID.randomUUID().toString().subSequence(0,5).toString();\n          // make sure that there's no pure number-labels\n          while ( _domain[c][i].matches(\"^\\\\d+$\") || _domain[c][i].matches(\"^\\\\d+e\\\\d+$\") ) {\n            _domain[c][i] = UUID.randomUUID().toString().subSequence(0,5).toString();\n          }\n        }\n      }\n    }\n    _v = makeCon(_createFrame.value, _createFrame.rows);\n  }","id":107368,"modified_method":"public FrameCreator(CreateFrame createFrame, Key job) {\n    super(null);\n    _job=job;\n    _createFrame = createFrame;\n\n    int[] idx = _createFrame.has_response ? ArrayUtils.seq(1, _createFrame.cols + 1) : ArrayUtils.seq(0, _createFrame.cols);\n    int[] shuffled_idx = new int[idx.length];\n    ArrayUtils.shuffleArray(idx, idx.length, shuffled_idx, _createFrame.seed, 0);\n\n    int catcols = (int)(_createFrame.categorical_fraction * _createFrame.cols);\n    int intcols = (int)(_createFrame.integer_fraction * _createFrame.cols);\n    int bincols = (int)(_createFrame.binary_fraction * _createFrame.cols);\n    int realcols = _createFrame.cols - catcols - intcols - bincols;\n\n    assert(catcols >= 0);\n    assert(intcols >= 0);\n    assert(bincols >= 0);\n    assert(realcols >= 0);\n\n    _cat_cols  = Arrays.copyOfRange(shuffled_idx, 0,                        catcols);\n    _int_cols  = Arrays.copyOfRange(shuffled_idx, catcols,                  catcols+intcols);\n    _real_cols = Arrays.copyOfRange(shuffled_idx, catcols+intcols,          catcols+intcols+realcols);\n    _bin_cols  = Arrays.copyOfRange(shuffled_idx, catcols+intcols+realcols, catcols+intcols+realcols+bincols);\n\n    // create domains for categorical variables\n    if (_createFrame.randomize) {\n      if(_createFrame.has_response) {\n        assert(_createFrame.response_factors >= 1);\n        _domain = new String[_createFrame.cols + 1][];\n        _domain[0] = _createFrame.response_factors == 1 ? null : new String[_createFrame.response_factors];\n        if (_domain[0] != null) {\n          for (int i = 0; i < _domain[0].length; ++i) {\n            _domain[0][i] = \"resp.\" + i;\n          }\n        }\n      } else {\n        _domain = new String[_createFrame.cols][];\n      }\n\n      for (int c : _cat_cols) {\n        _domain[c] = new String[_createFrame.factors];\n        for (int i = 0; i < _createFrame.factors; ++i) {\n          _domain[c][i] = UUID.randomUUID().toString().subSequence(0,5).toString();\n          // make sure that there's no pure number-labels\n          while ( _domain[c][i].matches(\"^\\\\d+$\") || _domain[c][i].matches(\"^\\\\d+e\\\\d+$\") ) {\n            _domain[c][i] = UUID.randomUUID().toString().subSequence(0,5).toString();\n          }\n        }\n      }\n    }\n    _v = makeCon(_createFrame.value, _createFrame.rows);\n  }","commit_id":"de7224889eba27fe58e0ba09d6d42f6a99d21422","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override\n    public void map (Chunk[]cs){\n      if (!_createFrame.randomize) return;\n      final Random rng = new Random();\n\n      // response\n      for (int r = 0; r < cs[0]._len; r++) {\n        setSeed(rng, 0, cs[0]._start + r);\n        if (_createFrame.response_factors >1)\n          cs[0].set(r, (int)(rng.nextDouble() * _createFrame.response_factors)); //classification\n        else if (_createFrame.positive_response)\n          cs[0].set(r, _createFrame.real_range * rng.nextDouble()); //regression with positive response\n        else\n          cs[0].set(r, _createFrame.real_range * (1 - 2 * rng.nextDouble())); //regression\n      }\n\n      for (int c : _cat_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, (int)(rng.nextDouble() * _createFrame.factors));\n        }\n      }\n      for (int c : _int_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, (long) ((_createFrame.integer_range+1) * (1 - 2 * rng.nextDouble())));\n        }\n      }\n      for (int c : _real_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, _createFrame.real_range * (1 - 2 * rng.nextDouble()));\n        }\n      }\n      for (int c : _bin_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, rng.nextFloat() > _createFrame.binary_ones_fraction ? 0 : 1);\n        }\n      }\n      _createFrame.update(1);\n    }","id":107369,"modified_method":"@Override\n    public void map (Chunk[]cs){\n      if (!_createFrame.randomize) return;\n      final Random rng = new Random();\n\n      // response\n      if(_createFrame.has_response) {\n        for (int r = 0; r < cs[0]._len; r++) {\n          setSeed(rng, 0, cs[0]._start + r);\n          if (_createFrame.response_factors > 1)\n            cs[0].set(r, (int) (rng.nextDouble() * _createFrame.response_factors)); //classification\n          else if (_createFrame.positive_response)\n            cs[0].set(r, _createFrame.real_range * rng.nextDouble()); //regression with positive response\n          else\n            cs[0].set(r, _createFrame.real_range * (1 - 2 * rng.nextDouble())); //regression\n        }\n      }\n\n      for (int c : _cat_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, (int)(rng.nextDouble() * _createFrame.factors));\n        }\n      }\n      for (int c : _int_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, (long) ((_createFrame.integer_range+1) * (1 - 2 * rng.nextDouble())));\n        }\n      }\n      for (int c : _real_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, _createFrame.real_range * (1 - 2 * rng.nextDouble()));\n        }\n      }\n      for (int c : _bin_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, rng.nextFloat() > _createFrame.binary_ones_fraction ? 0 : 1);\n        }\n      }\n      _createFrame.update(1);\n    }","commit_id":"de7224889eba27fe58e0ba09d6d42f6a99d21422","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override public void compute2() {\n    Vec[] vecs = new Vec[_createFrame.cols+1];\n    for (int i=0; i<vecs.length; ++i) {\n      vecs[i] = _v.makeZero(_domain[i]);\n    }\n    _v.remove();\n    _v=null;\n    String[] names = new String[vecs.length];\n    names[0] = \"response\";\n    for( int i=1; i<vecs.length; i++ ) names[i] = \"C\"+i;\n\n    _out = new Frame(_createFrame._dest, names, vecs);\n    assert _out.numRows() == _createFrame.rows;\n    assert _out.numCols() == _createFrame.cols+1;\n    _out.delete_and_lock(_job);\n\n    // fill with random values\n    new FrameRandomizer(_createFrame, _cat_cols, _int_cols, _real_cols, _bin_cols).doAll(_out);\n\n    //overwrite a fraction with N/A\n    new MissingInserter(this, _createFrame.seed, _createFrame.missing_fraction).asyncExec(_out);\n  }","id":107370,"modified_method":"@Override public void compute2() {\n    int totcols = _createFrame.has_response ? (_createFrame.cols+1) : _createFrame.cols;\n    Vec[] vecs = new Vec[totcols];\n    for (int i=0; i<vecs.length; ++i) {\n      vecs[i] = _v.makeZero(_domain[i]);\n    }\n    _v.remove();\n    _v=null;\n    String[] names = new String[vecs.length];\n    if(_createFrame.has_response) {\n      names[0] = \"response\";\n      for (int i = 1; i < vecs.length; i++) names[i] = \"C\" + i;\n    } else {\n      for (int i = 0; i < vecs.length; i++) names[i] = \"C\" + (i+1);\n    }\n\n    _out = new Frame(_createFrame._dest, names, vecs);\n    assert _out.numRows() == _createFrame.rows;\n    assert _out.numCols() == totcols;\n    _out.delete_and_lock(_job);\n\n    // fill with random values\n    new FrameRandomizer(_createFrame, _cat_cols, _int_cols, _real_cols, _bin_cols).doAll(_out);\n\n    //overwrite a fraction with N/A\n    new MissingInserter(this, _createFrame.seed, _createFrame.missing_fraction).asyncExec(_out);\n  }","commit_id":"de7224889eba27fe58e0ba09d6d42f6a99d21422","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override\n    public void map (Chunk[]cs){\n      if (!_createFrame.randomize) return;\n      final Random rng = new Random();\n\n      // response\n      for (int r = 0; r < cs[0]._len; r++) {\n        setSeed(rng, 0, cs[0]._start + r);\n        if (_createFrame.response_factors >1)\n          cs[0].set(r, (int)(rng.nextDouble() * _createFrame.response_factors)); //classification\n        else if (_createFrame.positive_response)\n          cs[0].set(r, _createFrame.real_range * rng.nextDouble()); //regression with positive response\n        else\n          cs[0].set(r, _createFrame.real_range * (1 - 2 * rng.nextDouble())); //regression\n      }\n\n      for (int c : _cat_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, (int)(rng.nextDouble() * _createFrame.factors));\n        }\n      }\n      for (int c : _int_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, (long) ((_createFrame.integer_range+1) * (1 - 2 * rng.nextDouble())));\n        }\n      }\n      for (int c : _real_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, _createFrame.real_range * (1 - 2 * rng.nextDouble()));\n        }\n      }\n      for (int c : _bin_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, rng.nextFloat() > _createFrame.binary_ones_fraction ? 0 : 1);\n        }\n      }\n      _createFrame.update(1);\n    }","id":107371,"modified_method":"@Override\n    public void map (Chunk[]cs){\n      if (!_createFrame.randomize) return;\n      final Random rng = new Random();\n\n      // response\n      if(_createFrame.has_response) {\n        for (int r = 0; r < cs[0]._len; r++) {\n          setSeed(rng, 0, cs[0]._start + r);\n          if (_createFrame.response_factors > 1)\n            cs[0].set(r, (int) (rng.nextDouble() * _createFrame.response_factors)); //classification\n          else if (_createFrame.positive_response)\n            cs[0].set(r, _createFrame.real_range * rng.nextDouble()); //regression with positive response\n          else\n            cs[0].set(r, _createFrame.real_range * (1 - 2 * rng.nextDouble())); //regression\n        }\n      }\n\n      for (int c : _cat_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, (int)(rng.nextDouble() * _createFrame.factors));\n        }\n      }\n      for (int c : _int_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, (long) ((_createFrame.integer_range+1) * (1 - 2 * rng.nextDouble())));\n        }\n      }\n      for (int c : _real_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, _createFrame.real_range * (1 - 2 * rng.nextDouble()));\n        }\n      }\n      for (int c : _bin_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set(r, rng.nextFloat() > _createFrame.binary_ones_fraction ? 0 : 1);\n        }\n      }\n      _createFrame.update(1);\n    }","commit_id":"a83f8397d04ecd23d336da818471249572cf919c","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override public void compute2() {\n    Vec[] vecs = new Vec[_createFrame.cols+1];\n    for (int i=0; i<vecs.length; ++i) {\n      vecs[i] = _v.makeZero(_domain[i]);\n    }\n    _v.remove();\n    _v=null;\n    String[] names = new String[vecs.length];\n    names[0] = \"response\";\n    for( int i=1; i<vecs.length; i++ ) names[i] = \"C\"+i;\n\n    _out = new Frame(_createFrame._dest, names, vecs);\n    assert _out.numRows() == _createFrame.rows;\n    assert _out.numCols() == _createFrame.cols+1;\n    _out.delete_and_lock(_job);\n\n    // fill with random values\n    new FrameRandomizer(_createFrame, _cat_cols, _int_cols, _real_cols, _bin_cols).doAll(_out);\n\n    //overwrite a fraction with N/A\n    new MissingInserter(this, _createFrame.seed, _createFrame.missing_fraction).asyncExec(_out);\n  }","id":107372,"modified_method":"@Override public void compute2() {\n    int totcols = _createFrame.has_response ? (_createFrame.cols+1) : _createFrame.cols;\n    Vec[] vecs = new Vec[totcols];\n    for (int i=0; i<vecs.length; ++i) {\n      vecs[i] = _v.makeZero(_domain[i]);\n    }\n    _v.remove();\n    _v=null;\n    String[] names = new String[vecs.length];\n    if(_createFrame.has_response) {\n      names[0] = \"response\";\n      for (int i = 1; i < vecs.length; i++) names[i] = \"C\" + i;\n    } else {\n      for (int i = 0; i < vecs.length; i++) names[i] = \"C\" + (i+1);\n    }\n\n    _out = new Frame(_createFrame._dest, names, vecs);\n    assert _out.numRows() == _createFrame.rows;\n    assert _out.numCols() == totcols;\n    _out.delete_and_lock(_job);\n\n    // fill with random values\n    new FrameRandomizer(_createFrame, _cat_cols, _int_cols, _real_cols, _bin_cols).doAll(_out);\n\n    //overwrite a fraction with N/A\n    new MissingInserter(this, _createFrame.seed, _createFrame.missing_fraction).asyncExec(_out);\n  }","commit_id":"a83f8397d04ecd23d336da818471249572cf919c","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public FrameCreator(CreateFrame createFrame, Key job) {\n    super(null);\n    _job=job;\n    _createFrame = createFrame;\n\n    int[] idx = ArrayUtils.seq(1, _createFrame.cols + 1);\n    int[] shuffled_idx = new int[idx.length];\n    ArrayUtils.shuffleArray(idx, idx.length, shuffled_idx, _createFrame.seed, 0);\n\n    int catcols = (int)(_createFrame.categorical_fraction * _createFrame.cols);\n    int intcols = (int)(_createFrame.integer_fraction * _createFrame.cols);\n    int bincols = (int)(_createFrame.binary_fraction * _createFrame.cols);\n    int realcols = _createFrame.cols - catcols - intcols - bincols;\n\n    assert(catcols >= 0);\n    assert(intcols >= 0);\n    assert(bincols >= 0);\n    assert(realcols >= 0);\n\n    _cat_cols  = Arrays.copyOfRange(shuffled_idx, 0,                        catcols);\n    _int_cols  = Arrays.copyOfRange(shuffled_idx, catcols,                  catcols+intcols);\n    _real_cols = Arrays.copyOfRange(shuffled_idx, catcols+intcols,          catcols+intcols+realcols);\n    _bin_cols  = Arrays.copyOfRange(shuffled_idx, catcols+intcols+realcols, catcols+intcols+realcols+bincols);\n\n    // create domains for categorical variables\n    if (_createFrame.randomize) {\n      assert(_createFrame.response_factors >= 1);\n      _domain = new String[_createFrame.cols+1][];\n      _domain[0] = _createFrame.response_factors == 1 ? null : new String[_createFrame.response_factors];\n      if (_domain[0] != null) {\n        for (int i=0; i <_domain[0].length; ++i) {\n          _domain[0][i] = \"resp.\" + i;\n        }\n      }\n\n      for (int c : _cat_cols) {\n        _domain[c] = new String[_createFrame.factors];\n        for (int i = 0; i < _createFrame.factors; ++i) {\n          _domain[c][i] = UUID.randomUUID().toString().subSequence(0,5).toString();\n          // make sure that there's no pure number-labels\n          while ( _domain[c][i].matches(\"^\\\\d+$\") || _domain[c][i].matches(\"^\\\\d+e\\\\d+$\") ) {\n            _domain[c][i] = UUID.randomUUID().toString().subSequence(0,5).toString();\n          }\n        }\n      }\n    }\n    _v = makeCon(_createFrame.value, _createFrame.rows);\n  }","id":107373,"modified_method":"public FrameCreator(CreateFrame createFrame, Key job) {\n    super(null);\n    _job=job;\n    _createFrame = createFrame;\n\n    int[] idx = _createFrame.has_response ? ArrayUtils.seq(1, _createFrame.cols + 1) : ArrayUtils.seq(0, _createFrame.cols);\n    int[] shuffled_idx = new int[idx.length];\n    ArrayUtils.shuffleArray(idx, idx.length, shuffled_idx, _createFrame.seed, 0);\n\n    int catcols = (int)(_createFrame.categorical_fraction * _createFrame.cols);\n    int intcols = (int)(_createFrame.integer_fraction * _createFrame.cols);\n    int bincols = (int)(_createFrame.binary_fraction * _createFrame.cols);\n    int realcols = _createFrame.cols - catcols - intcols - bincols;\n\n    assert(catcols >= 0);\n    assert(intcols >= 0);\n    assert(bincols >= 0);\n    assert(realcols >= 0);\n\n    _cat_cols  = Arrays.copyOfRange(shuffled_idx, 0,                        catcols);\n    _int_cols  = Arrays.copyOfRange(shuffled_idx, catcols,                  catcols+intcols);\n    _real_cols = Arrays.copyOfRange(shuffled_idx, catcols+intcols,          catcols+intcols+realcols);\n    _bin_cols  = Arrays.copyOfRange(shuffled_idx, catcols+intcols+realcols, catcols+intcols+realcols+bincols);\n\n    // create domains for categorical variables\n    if (_createFrame.randomize) {\n      if(_createFrame.has_response) {\n        assert(_createFrame.response_factors >= 1);\n        _domain = new String[_createFrame.cols + 1][];\n        _domain[0] = _createFrame.response_factors == 1 ? null : new String[_createFrame.response_factors];\n        if (_domain[0] != null) {\n          for (int i = 0; i < _domain[0].length; ++i) {\n            _domain[0][i] = \"resp.\" + i;\n          }\n        }\n      } else {\n        _domain = new String[_createFrame.cols][];\n      }\n\n      for (int c : _cat_cols) {\n        _domain[c] = new String[_createFrame.factors];\n        for (int i = 0; i < _createFrame.factors; ++i) {\n          _domain[c][i] = UUID.randomUUID().toString().subSequence(0,5).toString();\n          // make sure that there's no pure number-labels\n          while ( _domain[c][i].matches(\"^\\\\d+$\") || _domain[c][i].matches(\"^\\\\d+e\\\\d+$\") ) {\n            _domain[c][i] = UUID.randomUUID().toString().subSequence(0,5).toString();\n          }\n        }\n      }\n    }\n    _v = makeCon(_createFrame.value, _createFrame.rows);\n  }","commit_id":"a83f8397d04ecd23d336da818471249572cf919c","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override public void compute2() {\n    Vec[] vecs = Vec.makeNewCons(_createFrame.rows, _createFrame.cols+1, _createFrame.value, _domain);\n    String[] names = new String[vecs.length];\n    names[0] = \"response\";\n    for( int i=1; i<vecs.length; i++ ) names[i] = \"C\"+i;\n\n    _out = new Frame(Key.make(_createFrame.key), names, vecs);\n    assert _out.numRows() == _createFrame.rows;\n    assert _out.numCols() == _createFrame.cols+1;\n    _out.delete_and_lock(_job);\n\n    // fill with random values\n    new FrameRandomizer(_createFrame, _cat_cols, _int_cols, _real_cols, _bin_cols).doAll(_out);\n\n    //overwrite a fraction with N/A\n    new MissingInserter(this, _createFrame.seed, _createFrame.missing_fraction).asyncExec(_out);\n  }","id":107374,"modified_method":"@Override public void compute2() {\n    int totcols = _createFrame.has_response ? (_createFrame.cols+1) : _createFrame.cols;\n    Vec[] vecs = Vec.makeNewCons(_createFrame.rows, totcols, _createFrame.value, _domain);\n    String[] names = new String[vecs.length];\n    if(_createFrame.has_response) {\n      names[0] = \"response\";\n      for (int i = 1; i < vecs.length; i++) names[i] = \"C\" + i;\n    } else {\n      for (int i = 0; i < vecs.length; i++) names[i] = \"C\" + (i+1);\n    }\n\n    _out = new Frame(Key.make(_createFrame.key), names, vecs);\n    assert _out.numRows() == _createFrame.rows;\n    assert _out.numCols() == totcols;\n    _out.delete_and_lock(_job);\n\n    // fill with random values\n    new FrameRandomizer(_createFrame, _cat_cols, _int_cols, _real_cols, _bin_cols).doAll(_out);\n\n    //overwrite a fraction with N/A\n    new MissingInserter(this, _createFrame.seed, _createFrame.missing_fraction).asyncExec(_out);\n  }","commit_id":"372bb4a94a1b404328c4c50ad780a480bf49efa8","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public FrameCreator(CreateFrame createFrame, Key job) {\n    super(null);\n    _job=job;\n    _createFrame = createFrame;\n\n    int[] idx = Utils.seq(1, _createFrame.cols+1);\n    int[] shuffled_idx = new int[idx.length];\n    Utils.shuffleArray(idx, idx.length, shuffled_idx, _createFrame.seed, 0);\n\n    int catcols = (int)(_createFrame.categorical_fraction * _createFrame.cols);\n    int intcols = (int)(_createFrame.integer_fraction * _createFrame.cols);\n    int bincols = (int)(_createFrame.binary_fraction * _createFrame.cols);\n    int realcols = _createFrame.cols - catcols - intcols - bincols;\n\n    assert(catcols >= 0);\n    assert(intcols >= 0);\n    assert(bincols >= 0);\n    assert(realcols >= 0);\n\n    _cat_cols  = Arrays.copyOfRange(shuffled_idx, 0,                        catcols);\n    _int_cols  = Arrays.copyOfRange(shuffled_idx, catcols,                  catcols+intcols);\n    _real_cols = Arrays.copyOfRange(shuffled_idx, catcols+intcols,          catcols+intcols+realcols);\n    _bin_cols  = Arrays.copyOfRange(shuffled_idx, catcols+intcols+realcols, catcols+intcols+realcols+bincols);\n\n    // create domains for categorical variables\n    if (_createFrame.randomize) {\n      assert(_createFrame.response_factors >= 1);\n      _domain = new String[_createFrame.cols+1][];\n      _domain[0] = _createFrame.response_factors == 1 ? null : new String[_createFrame.response_factors];\n      if (_domain[0] != null) {\n        for (int i=0; i <_domain[0].length; ++i) {\n          _domain[0][i] = \"resp.\" + i;\n        }\n      }\n\n      for (int c : _cat_cols) {\n        _domain[c] = new String[_createFrame.factors];\n        for (int i = 0; i < _createFrame.factors; ++i) {\n          _domain[c][i] = UUID.randomUUID().toString().subSequence(0,5).toString();\n          // make sure that there's no pure number-labels\n          while ( _domain[c][i].matches(\"^\\\\d+$\") || _domain[c][i].matches(\"^\\\\d+e\\\\d+$\") ) {\n            _domain[c][i] = UUID.randomUUID().toString().subSequence(0,5).toString();\n          }\n        }\n      }\n    }\n  }","id":107375,"modified_method":"public FrameCreator(CreateFrame createFrame, Key job) {\n    super(null);\n    _job=job;\n    _createFrame = createFrame;\n\n    int[] idx = _createFrame.has_response ? Utils.seq(1, _createFrame.cols + 1) : Utils.seq(0, _createFrame.cols);\n    int[] shuffled_idx = new int[idx.length];\n    Utils.shuffleArray(idx, idx.length, shuffled_idx, _createFrame.seed, 0);\n\n    int catcols = (int)(_createFrame.categorical_fraction * _createFrame.cols);\n    int intcols = (int)(_createFrame.integer_fraction * _createFrame.cols);\n    int bincols = (int)(_createFrame.binary_fraction * _createFrame.cols);\n    int realcols = _createFrame.cols - catcols - intcols - bincols;\n\n    assert(catcols >= 0);\n    assert(intcols >= 0);\n    assert(bincols >= 0);\n    assert(realcols >= 0);\n\n    _cat_cols  = Arrays.copyOfRange(shuffled_idx, 0,                        catcols);\n    _int_cols  = Arrays.copyOfRange(shuffled_idx, catcols,                  catcols+intcols);\n    _real_cols = Arrays.copyOfRange(shuffled_idx, catcols+intcols,          catcols+intcols+realcols);\n    _bin_cols  = Arrays.copyOfRange(shuffled_idx, catcols+intcols+realcols, catcols+intcols+realcols+bincols);\n\n    // create domains for categorical variables\n    if (_createFrame.randomize) {\n      if(_createFrame.has_response) {\n        assert(_createFrame.response_factors >= 1);\n        _domain = new String[_createFrame.cols+1][];\n        _domain[0] = _createFrame.response_factors == 1 ? null : new String[_createFrame.response_factors];\n        if (_domain[0] != null) {\n          for (int i = 0; i < _domain[0].length; ++i) {\n            _domain[0][i] = \"resp.\" + i;\n          }\n        }\n      } else {\n        _domain = new String[_createFrame.cols][];\n      }\n\n      for (int c : _cat_cols) {\n        _domain[c] = new String[_createFrame.factors];\n        for (int i = 0; i < _createFrame.factors; ++i) {\n          _domain[c][i] = UUID.randomUUID().toString().subSequence(0,5).toString();\n          // make sure that there's no pure number-labels\n          while ( _domain[c][i].matches(\"^\\\\d+$\") || _domain[c][i].matches(\"^\\\\d+e\\\\d+$\") ) {\n            _domain[c][i] = UUID.randomUUID().toString().subSequence(0,5).toString();\n          }\n        }\n      }\n    }\n  }","commit_id":"372bb4a94a1b404328c4c50ad780a480bf49efa8","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override\n    public void map (Chunk[]cs){\n      if (!_createFrame.randomize) return;\n      final Random rng = new Random();\n\n      // response\n      for (int r = 0; r < cs[0]._len; r++) {\n        setSeed(rng, 0, cs[0]._start + r);\n        if (_createFrame.response_factors >1)\n          cs[0].set0(r, (int)(rng.nextDouble() * _createFrame.response_factors)); //classification\n        else if (_createFrame.positive_response)\n          cs[0].set0(r, _createFrame.real_range * rng.nextDouble()); //regression with positive response\n        else\n          cs[0].set0(r, _createFrame.real_range * (1 - 2 * rng.nextDouble())); //regression\n      }\n\n      for (int c : _cat_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set0(r, (int)(rng.nextDouble() * _createFrame.factors));\n        }\n      }\n      for (int c : _int_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set0(r, (long) ((_createFrame.integer_range+1) * (1 - 2 * rng.nextDouble())));\n        }\n      }\n      for (int c : _real_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set0(r, _createFrame.real_range * (1 - 2 * rng.nextDouble()));\n        }\n      }\n      for (int c : _bin_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set0(r, rng.nextFloat() > _createFrame.binary_ones_fraction ? 0 : 1);\n        }\n      }\n    }","id":107376,"modified_method":"@Override\n    public void map (Chunk[]cs){\n      if (!_createFrame.randomize) return;\n      final Random rng = new Random();\n\n      // response\n      if(_createFrame.has_response) {\n        for (int r = 0; r < cs[0]._len; r++) {\n          setSeed(rng, 0, cs[0]._start + r);\n          if (_createFrame.response_factors > 1)\n            cs[0].set0(r, (int) (rng.nextDouble() * _createFrame.response_factors)); //classification\n          else if (_createFrame.positive_response)\n            cs[0].set0(r, _createFrame.real_range * rng.nextDouble()); //regression with positive response\n          else\n            cs[0].set0(r, _createFrame.real_range * (1 - 2 * rng.nextDouble())); //regression\n        }\n      }\n\n      for (int c : _cat_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set0(r, (int)(rng.nextDouble() * _createFrame.factors));\n        }\n      }\n      for (int c : _int_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set0(r, (long) ((_createFrame.integer_range+1) * (1 - 2 * rng.nextDouble())));\n        }\n      }\n      for (int c : _real_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set0(r, _createFrame.real_range * (1 - 2 * rng.nextDouble()));\n        }\n      }\n      for (int c : _bin_cols) {\n        for (int r = 0; r < cs[c]._len; r++) {\n          setSeed(rng, c, cs[c]._start + r);\n          cs[c].set0(r, rng.nextFloat() > _createFrame.binary_ones_fraction ? 0 : 1);\n        }\n      }\n    }","commit_id":"372bb4a94a1b404328c4c50ad780a480bf49efa8","url":"https://github.com/h2oai/h2o-2"},{"original_method":"private JComponent createActionsToolbar() {\n    AnAction hideBranchesAction = new DumbAwareAction(\"Collapse linear branches\", \"Collapse linear branches\", VcsLogIcons.CollapseBranches) {\n      @Override\n      public void actionPerformed(AnActionEvent e) {\n        myUI.hideAll();\n      }\n    };\n\n    AnAction showBranchesAction = new DumbAwareAction(\"Expand all branches\", \"Expand all branches\", VcsLogIcons.ExpandBranches) {\n      @Override\n      public void actionPerformed(AnActionEvent e) {\n        myUI.showAll();\n      }\n    };\n\n    RefreshAction refreshAction = new RefreshAction(\"Refresh\", \"Refresh\", AllIcons.Actions.Refresh) {\n      @Override\n      public void actionPerformed(AnActionEvent e) {\n        myLogDataHolder.refreshCompletely();\n      }\n\n      @Override\n      public void update(AnActionEvent e) {\n        e.getPresentation().setEnabled(true);\n      }\n    };\n\n    AnAction showFullPatchAction = new ToggleAction(\"Show long edges\",\n                                                    \"Show long branch edges even if commits are invisible in the current view.\",\n                                                    VcsLogIcons.ShowHideLongEdges) {\n      @Override\n      public boolean isSelected(AnActionEvent e) {\n        return !myUI.areLongEdgesHidden();\n      }\n\n      @Override\n      public void setSelected(AnActionEvent e, boolean state) {\n        myUI.setLongEdgeVisibility(state);\n      }\n    };\n\n    ToggleAction showDetailsAction = new ToggleAction(\"Show Details\", \"Display details panel\", AllIcons.Actions.Preview) {\n      @Override\n      public boolean isSelected(AnActionEvent e) {\n        return !myProject.isDisposed() && myUiProperties.isShowDetails();\n      }\n\n      @Override\n      public void setSelected(AnActionEvent e, boolean state) {\n        setupDetailsSplitter(state);\n        if (!myProject.isDisposed()) {\n          myUiProperties.setShowDetails(state);\n        }\n      }\n    };\n\n    refreshAction.registerShortcutOn(this);\n\n    DefaultActionGroup toolbarGroup = new DefaultActionGroup(hideBranchesAction, showBranchesAction, showFullPatchAction, refreshAction,\n                                                             showDetailsAction);\n    toolbarGroup.add(ActionManager.getInstance().getAction(VcsLogUI.TOOLBAR_ACTION_GROUP));\n\n    DefaultActionGroup mainGroup = new DefaultActionGroup();\n    mainGroup.add(myFilterUi.getFilterActionComponents());\n    mainGroup.addSeparator();\n    mainGroup.add(toolbarGroup);\n    return ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, mainGroup, true).getComponent();\n  }","id":107377,"modified_method":"private JComponent createActionsToolbar() {\n    AnAction hideBranchesAction = new DumbAwareAction(\"Collapse linear branches\", \"Collapse linear branches\", VcsLogIcons.CollapseBranches) {\n      @Override\n      public void actionPerformed(AnActionEvent e) {\n        myUI.hideAll();\n      }\n    };\n\n    AnAction showBranchesAction = new DumbAwareAction(\"Expand all branches\", \"Expand all branches\", VcsLogIcons.ExpandBranches) {\n      @Override\n      public void actionPerformed(AnActionEvent e) {\n        myUI.showAll();\n      }\n    };\n\n    RefreshAction refreshAction = new RefreshAction(\"Refresh\", \"Refresh\", AllIcons.Actions.Refresh) {\n      @Override\n      public void actionPerformed(AnActionEvent e) {\n        myLogDataHolder.refreshCompletely();\n      }\n\n      @Override\n      public void update(AnActionEvent e) {\n        e.getPresentation().setEnabled(true);\n      }\n    };\n\n    AnAction showFullPatchAction = new ToggleAction(\"Show long edges\",\n                                                    \"Show long branch edges even if commits are invisible in the current view.\",\n                                                    VcsLogIcons.ShowHideLongEdges) {\n      @Override\n      public boolean isSelected(AnActionEvent e) {\n        return !myUI.areLongEdgesHidden();\n      }\n\n      @Override\n      public void setSelected(AnActionEvent e, boolean state) {\n        myUI.setLongEdgeVisibility(state);\n      }\n    };\n\n    ToggleAction showDetailsAction = new ToggleAction(\"Show Details\", \"Display details panel\", AllIcons.Actions.Preview) {\n      @Override\n      public boolean isSelected(AnActionEvent e) {\n        return !myProject.isDisposed() && myUiProperties.isShowDetails();\n      }\n\n      @Override\n      public void setSelected(AnActionEvent e, boolean state) {\n        setupDetailsSplitter(state);\n        if (!myProject.isDisposed()) {\n          myUiProperties.setShowDetails(state);\n        }\n      }\n    };\n\n    refreshAction.registerShortcutOn(this);\n\n    DefaultActionGroup toolbarGroup = new DefaultActionGroup(hideBranchesAction, showBranchesAction, showFullPatchAction, refreshAction,\n                                                             showDetailsAction);\n    toolbarGroup.add(ActionManager.getInstance().getAction(VcsLogUI.TOOLBAR_ACTION_GROUP));\n\n    DefaultActionGroup mainGroup = new DefaultActionGroup();\n    mainGroup.add(myFilterUi.getFilterActionComponents());\n    mainGroup.addSeparator();\n    mainGroup.add(toolbarGroup);\n    ActionToolbar toolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, mainGroup, true);\n    toolbar.setTargetComponent(this);\n    return toolbar.getComponent();\n  }","commit_id":"538fcaf0415db69de88075563ce3c3b570d454bc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private JComponent createToolbar() {\n    DefaultActionGroup toolbarGroups = new DefaultActionGroup();\n    myToolBarGroup = new DefaultActionGroup();\n    toolbarGroups.add(myToolBarGroup);\n    buildToolBar(myToolBarGroup);\n\n    toolbarGroups.addSeparator();\n    DefaultActionGroup treeActionsGroup = new DefaultActionGroup();\n    toolbarGroups.add(treeActionsGroup);\n    for(AnAction action: myViewer.getTreeActions()) {\n      treeActionsGroup.add(action);\n    }\n\n    return ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, toolbarGroups, true).getComponent();\n  }","id":107378,"modified_method":"private JComponent createToolbar() {\n    DefaultActionGroup toolbarGroups = new DefaultActionGroup();\n    myToolBarGroup = new DefaultActionGroup();\n    toolbarGroups.add(myToolBarGroup);\n    buildToolBar(myToolBarGroup);\n\n    toolbarGroups.addSeparator();\n    DefaultActionGroup treeActionsGroup = new DefaultActionGroup();\n    toolbarGroups.add(treeActionsGroup);\n    for(AnAction action: myViewer.getTreeActions()) {\n      treeActionsGroup.add(action);\n    }\n\n    ActionToolbar toolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, toolbarGroups, true);\n    toolbar.setTargetComponent(this);\n    return toolbar.getComponent();\n  }","commit_id":"806c98e66731f5a22c0166e3f51438fc0ec159b5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static JComponent createToolbar(final DefaultActionGroup specialGroup) {\n    return ActionManager.getInstance().createActionToolbar(ActionPlaces.CODE_INSPECTION, specialGroup, false).getComponent();\n  }","id":107379,"modified_method":"private JComponent createToolbar(final DefaultActionGroup specialGroup) {\n    final ActionToolbar toolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.CODE_INSPECTION, specialGroup, false);\n    toolbar.setTargetComponent(this);\n    return toolbar.getComponent();\n  }","commit_id":"5cb12c93fb2c06668f0734867495fd63e96c23b3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static Object instanciateClass(String name, Object[] constructorArgs, ClassLoader classLoader)\n            throws ClassNotFoundException, SecurityException, NoSuchMethodException, IllegalArgumentException,\n            InstantiationException, IllegalAccessException, InvocationTargetException\n    {\n        Class clazz;\n        if (classLoader != null)\n        {\n            clazz = loadClass(name, classLoader);\n        }\n        else\n        {\n            clazz = loadClass(name, ClassUtils.class);\n        }\n        if (clazz == null)\n        {\n            throw new ClassNotFoundException(name);\n        }\n        return instanciateClass(clazz, constructorArgs);\n    }","id":107380,"modified_method":"public static Object instanciateClass(String name, Object[] constructorArgs, ClassLoader classLoader)\n            throws ClassNotFoundException, SecurityException, NoSuchMethodException, IllegalArgumentException,\n            InstantiationException, IllegalAccessException, InvocationTargetException\n    {\n        Class<?> clazz;\n        if (classLoader != null)\n        {\n            clazz = loadClass(name, classLoader);\n        }\n        else\n        {\n            clazz = loadClass(name, ClassUtils.class);\n        }\n        if (clazz == null)\n        {\n            throw new ClassNotFoundException(name);\n        }\n        return instanciateClass(clazz, constructorArgs);\n    }","commit_id":"40372fc67be7f819d829f74d39ab82c9641453ba","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n     * A helper method that will find all matching methods on a class with the given\n     * parameter type\n     *\n     * @param implementation     the class to build methods on\n     * @param parameterTypes     the argument param types to look for\n     * @param voidOk             whether void methods shouldbe included in the found list\n     * @param matchOnObject      determines whether parameters of Object type are matched\n     *                           when they are of Object.class type\n     * @param ignoredMethodNames a Set of method names to ignore. Often 'equals' is\n     *                           not a desired match. This argument can be null.\n     * @return a List of methods on the class that match the criteria. If there are\n     *         none, an empty list is returned\n     */\n    public static List getSatisfiableMethods(Class implementation,\n                                             Class[] parameterTypes,\n                                             boolean voidOk,\n                                             boolean matchOnObject,\n                                             Set ignoredMethodNames)\n    {\n        return getSatisfiableMethods(implementation, parameterTypes, voidOk, matchOnObject, ignoredMethodNames, null);\n    }","id":107381,"modified_method":"/**\n     * A helper method that will find all matching methods on a class with the given\n     * parameter type\n     *\n     * @param implementation     the class to build methods on\n     * @param parameterTypes     the argument param types to look for\n     * @param voidOk             whether void methods shouldbe included in the found list\n     * @param matchOnObject      determines whether parameters of Object type are matched\n     *                           when they are of Object.class type\n     * @param ignoredMethodNames a Set of method names to ignore. Often 'equals' is\n     *                           not a desired match. This argument can be null.\n     * @return a List of methods on the class that match the criteria. If there are\n     *         none, an empty list is returned\n     */\n    public static List getSatisfiableMethods(Class<?> implementation,\n                                             Class<?>[] parameterTypes,\n                                             boolean voidOk,\n                                             boolean matchOnObject,\n                                             Set ignoredMethodNames)\n    {\n        return getSatisfiableMethods(implementation, parameterTypes, voidOk, matchOnObject, ignoredMethodNames, null);\n    }","commit_id":"40372fc67be7f819d829f74d39ab82c9641453ba","url":"https://github.com/mulesoft/mule"},{"original_method":"public static Object instanciateClass(Class clazz, Object... constructorArgs)\n            throws SecurityException, NoSuchMethodException, IllegalArgumentException, InstantiationException,\n            IllegalAccessException, InvocationTargetException\n    {\n        Class[] args;\n        if (constructorArgs != null)\n        {\n            args = new Class[constructorArgs.length];\n            for (int i = 0; i < constructorArgs.length; i++)\n            {\n                if (constructorArgs[i] == null)\n                {\n                    args[i] = null;\n                }\n                else\n                {\n                    args[i] = constructorArgs[i].getClass();\n                }\n            }\n        }\n        else\n        {\n            args = new Class[0];\n        }\n\n        // try the arguments as given\n        //Constructor ctor = clazz.getConstructor(args);\n        Constructor ctor = getConstructor(clazz, args);\n\n        if (ctor == null)\n        {\n            // try again but adapt value classes to primitives\n            ctor = getConstructor(clazz, wrappersToPrimitives(args));\n        }\n\n        if (ctor == null)\n        {\n            StringBuffer argsString = new StringBuffer(100);\n            for (Class arg : args)\n            {\n                argsString.append(arg.getName()).append(\", \");\n            }\n            throw new NoSuchMethodException(\"could not find constructor with matching arg params: \"\n                    + argsString);\n        }\n\n        return ctor.newInstance(constructorArgs);\n    }","id":107382,"modified_method":"public static Object instanciateClass(Class<?> clazz, Object... constructorArgs)\n            throws SecurityException, NoSuchMethodException, IllegalArgumentException, InstantiationException,\n            IllegalAccessException, InvocationTargetException\n    {\n        Class<?>[] args;\n        if (constructorArgs != null)\n        {\n            args = new Class[constructorArgs.length];\n            for (int i = 0; i < constructorArgs.length; i++)\n            {\n                if (constructorArgs[i] == null)\n                {\n                    args[i] = null;\n                }\n                else\n                {\n                    args[i] = constructorArgs[i].getClass();\n                }\n            }\n        }\n        else\n        {\n            args = new Class[0];\n        }\n\n        // try the arguments as given\n        //Constructor ctor = clazz.getConstructor(args);\n        Constructor<?> ctor = getConstructor(clazz, args);\n\n        if (ctor == null)\n        {\n            // try again but adapt value classes to primitives\n            ctor = getConstructor(clazz, wrappersToPrimitives(args));\n        }\n\n        if (ctor == null)\n        {\n            StringBuffer argsString = new StringBuffer(100);\n            for (Class<?> arg : args)\n            {\n                argsString.append(arg.getName()).append(\", \");\n            }\n            throw new NoSuchMethodException(\"could not find constructor with matching arg params: \"\n                    + argsString);\n        }\n\n        return ctor.newInstance(constructorArgs);\n    }","commit_id":"40372fc67be7f819d829f74d39ab82c9641453ba","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n     * Ensure that the given class is properly initialized when the argument is passed in\n     * as .class literal. This method can never fail unless the bytecode is corrupted or\n     * the VM is otherwise seriously confused.\n     *\n     * @param clazz the Class to be initialized\n     * @return the same class but initialized\n     */\n    public static Class initializeClass(Class clazz)\n    {\n        try\n        {\n            return getClass(clazz.getName(), true);\n        }\n        catch (ClassNotFoundException e)\n        {\n            IllegalStateException ise = new IllegalStateException();\n            ise.initCause(e);\n            throw ise;\n        }\n    }","id":107383,"modified_method":"/**\n     * Ensure that the given class is properly initialized when the argument is passed in\n     * as .class literal. This method can never fail unless the bytecode is corrupted or\n     * the VM is otherwise seriously confused.\n     *\n     * @param clazz the Class to be initialized\n     * @return the same class but initialized\n     */\n    public static Class<?> initializeClass(Class<?> clazz)\n    {\n        try\n        {\n            return getClass(clazz.getName(), true);\n        }\n        catch (ClassNotFoundException e)\n        {\n            IllegalStateException ise = new IllegalStateException();\n            ise.initCause(e);\n            throw ise;\n        }\n    }","commit_id":"40372fc67be7f819d829f74d39ab82c9641453ba","url":"https://github.com/mulesoft/mule"},{"original_method":"public static Object instanciateClass(String name, Object[] constructorArgs, Class callingClass)\n            throws ClassNotFoundException, SecurityException, NoSuchMethodException, IllegalArgumentException,\n            InstantiationException, IllegalAccessException, InvocationTargetException\n    {\n        Class clazz = loadClass(name, callingClass);\n        return instanciateClass(clazz, constructorArgs);\n    }","id":107384,"modified_method":"public static Object instanciateClass(String name, Object[] constructorArgs, Class<?> callingClass)\n            throws ClassNotFoundException, SecurityException, NoSuchMethodException, IllegalArgumentException,\n            InstantiationException, IllegalAccessException, InvocationTargetException\n    {\n        Class<?> clazz = loadClass(name, callingClass);\n        return instanciateClass(clazz, constructorArgs);\n    }","commit_id":"40372fc67be7f819d829f74d39ab82c9641453ba","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n     * Returns a matching method for the given name and parameters on the given class\n     * If the parameterTypes arguments is null it will return the first matching\n     * method on the class.\n     *\n     * @param clazz          the class to find the method on\n     * @param name           the method name to find\n     * @param parameterTypes an array of argument types or null\n     * @return the Method object or null if none was found\n     */\n    public static Method getMethod(Class clazz, String name, Class[] parameterTypes)\n    {\n        Method[] methods = clazz.getMethods();\n        for (int i = 0; i < methods.length; i++)\n        {\n            if (methods[i].getName().equals(name))\n            {\n                if (parameterTypes == null)\n                {\n                    return methods[i];\n                }\n                else if (compare(methods[i].getParameterTypes(), parameterTypes, true))\n                {\n                    return methods[i];\n                }\n            }\n        }\n        return null;\n    }","id":107385,"modified_method":"/**\n     * Returns a matching method for the given name and parameters on the given class\n     * If the parameterTypes arguments is null it will return the first matching\n     * method on the class.\n     *\n     * @param clazz          the class to find the method on\n     * @param name           the method name to find\n     * @param parameterTypes an array of argument types or null\n     * @return the Method object or null if none was found\n     */\n    public static Method getMethod(Class<?> clazz, String name, Class<?>[] parameterTypes)\n    {\n        Method[] methods = clazz.getMethods();\n        for (int i = 0; i < methods.length; i++)\n        {\n            if (methods[i].getName().equals(name))\n            {\n                if (parameterTypes == null)\n                {\n                    return methods[i];\n                }\n                else if (compare(methods[i].getParameterTypes(), parameterTypes, true))\n                {\n                    return methods[i];\n                }\n            }\n        }\n        return null;\n    }","commit_id":"40372fc67be7f819d829f74d39ab82c9641453ba","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n     * Load a given resource. <p/> This method will try to load the resource using\n     * the following methods (in order):\n     * <ul>\n     * <li>From\n     * {@link Thread#getContextClassLoader() Thread.currentThread().getContextClassLoader()}\n     * <li>From\n     * {@link Class#getClassLoader() ClassUtils.class.getClassLoader()}\n     * <li>From the {@link Class#getClassLoader() callingClass.getClassLoader() }\n     * <\/ul>\n     *\n     * @param resourceName The name of the resource to load\n     * @param callingClass The Class object of the calling object\n     */\n    public static URL getResource(final String resourceName, final Class callingClass)\n    {\n        URL url = (URL) AccessController.doPrivileged(new PrivilegedAction()\n        {\n            public Object run()\n            {\n                final ClassLoader cl = Thread.currentThread().getContextClassLoader();\n                return cl != null ? cl.getResource(resourceName) : null;\n            }\n        });\n\n        if (url == null)\n        {\n            url = (URL) AccessController.doPrivileged(new PrivilegedAction()\n            {\n                public Object run()\n                {\n                    return ClassUtils.class.getClassLoader().getResource(resourceName);\n                }\n            });\n        }\n\n        if (url == null)\n        {\n            url = (URL) AccessController.doPrivileged(new PrivilegedAction()\n            {\n                public Object run()\n                {\n                    return callingClass.getClassLoader().getResource(resourceName);\n                }\n            });\n        }\n\n        return url;\n    }","id":107386,"modified_method":"/**\n     * Load a given resource. <p/> This method will try to load the resource using\n     * the following methods (in order):\n     * <ul>\n     * <li>From\n     * {@link Thread#getContextClassLoader() Thread.currentThread().getContextClassLoader()}\n     * <li>From\n     * {@link Class#getClassLoader() ClassUtils.class.getClassLoader()}\n     * <li>From the {@link Class#getClassLoader() callingClass.getClassLoader() }\n     * <\/ul>\n     *\n     * @param resourceName The name of the resource to load\n     * @param callingClass The Class object of the calling object\n     */\n    public static URL getResource(final String resourceName, final Class<?> callingClass)\n    {\n        URL url = AccessController.doPrivileged(new PrivilegedAction<URL>()\n        {\n            public URL run()\n            {\n                final ClassLoader cl = Thread.currentThread().getContextClassLoader();\n                return cl != null ? cl.getResource(resourceName) : null;\n            }\n        });\n\n        if (url == null)\n        {\n            url = AccessController.doPrivileged(new PrivilegedAction<URL>()\n            {\n                public URL run()\n                {\n                    return ClassUtils.class.getClassLoader().getResource(resourceName);\n                }\n            });\n        }\n\n        if (url == null)\n        {\n            url = AccessController.doPrivileged(new PrivilegedAction<URL>()\n            {\n                public URL run()\n                {\n                    return callingClass.getClassLoader().getResource(resourceName);\n                }\n            });\n        }\n\n        return url;\n    }","commit_id":"40372fc67be7f819d829f74d39ab82c9641453ba","url":"https://github.com/mulesoft/mule"},{"original_method":"public static boolean isConcrete(Class clazz)\n    {\n        if (clazz == null)\n        {\n            throw new IllegalArgumentException(\"clazz may not be null\");\n        }\n        return !(clazz.isInterface() || Modifier.isAbstract(clazz.getModifiers()));\n    }","id":107387,"modified_method":"public static boolean isConcrete(Class<?> clazz)\n    {\n        if (clazz == null)\n        {\n            throw new IllegalArgumentException(\"clazz may not be null\");\n        }\n        return !(clazz.isInterface() || Modifier.isAbstract(clazz.getModifiers()));\n    }","commit_id":"40372fc67be7f819d829f74d39ab82c9641453ba","url":"https://github.com/mulesoft/mule"},{"original_method":"public static Enumeration getResources(final String resourceName, final Class callingClass)\n    {\n        Enumeration enumeration = (Enumeration) AccessController.doPrivileged(new PrivilegedAction()\n        {\n            public Object run()\n            {\n                try\n                {\n                    final ClassLoader cl = Thread.currentThread().getContextClassLoader();\n                    return cl != null ? cl.getResources(resourceName) : null;\n                }\n                catch (IOException e)\n                {\n                    return null;\n                }\n            }\n        });\n\n        if (enumeration == null)\n        {\n            enumeration = (Enumeration) AccessController.doPrivileged(new PrivilegedAction()\n            {\n                public Object run()\n                {\n                    try\n                    {\n                        return ClassUtils.class.getClassLoader().getResources(resourceName);\n                    }\n                    catch (IOException e)\n                    {\n                        return null;\n                    }\n                }\n            });\n        }\n\n        if (enumeration == null)\n        {\n            enumeration = (Enumeration) AccessController.doPrivileged(new PrivilegedAction()\n            {\n                public Object run()\n                {\n                    try\n                    {\n                        return callingClass.getClassLoader().getResources(resourceName);\n                    }\n                    catch (IOException e)\n                    {\n                        return null;\n                    }\n                }\n            });\n        }\n\n        return enumeration;\n    }","id":107388,"modified_method":"public static Enumeration<URL> getResources(final String resourceName, final Class<?> callingClass)\n    {\n        Enumeration<URL> enumeration = AccessController.doPrivileged(new PrivilegedAction<Enumeration<URL>>()\n        {\n            public Enumeration<URL> run()\n            {\n                try\n                {\n                    final ClassLoader cl = Thread.currentThread().getContextClassLoader();\n                    return cl != null ? cl.getResources(resourceName) : null;\n                }\n                catch (IOException e)\n                {\n                    return null;\n                }\n            }\n        });\n\n        if (enumeration == null)\n        {\n            enumeration = AccessController.doPrivileged(new PrivilegedAction<Enumeration<URL>>()\n            {\n                public Enumeration<URL> run()\n                {\n                    try\n                    {\n                        return ClassUtils.class.getClassLoader().getResources(resourceName);\n                    }\n                    catch (IOException e)\n                    {\n                        return null;\n                    }\n                }\n            });\n        }\n\n        if (enumeration == null)\n        {\n            enumeration = AccessController.doPrivileged(new PrivilegedAction<Enumeration<URL>>()\n            {\n                public Enumeration<URL> run()\n                {\n                    try\n                    {\n                        return callingClass.getClassLoader().getResources(resourceName);\n                    }\n                    catch (IOException e)\n                    {\n                        return null;\n                    }\n                }\n            });\n        }\n\n        return enumeration;\n    }","commit_id":"40372fc67be7f819d829f74d39ab82c9641453ba","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n     * Load a class with a given name. <p/> It will try to load the class in the\n     * following order:\n     * <ul>\n     * <li>From\n     * {@link Thread#getContextClassLoader() Thread.currentThread().getContextClassLoader()}\n     * <li>Using the basic {@link Class#forName(java.lang.String) }\n     * <li>From\n     * {@link Class#getClassLoader() ClassLoaderUtil.class.getClassLoader()}\n     * <li>From the {@link Class#getClassLoader() callingClass.getClassLoader() }\n     * <\/ul>\n     *\n     * @param className    The name of the class to load\n     * @param callingClass The Class object of the calling object\n     * @throws ClassNotFoundException If the class cannot be found anywhere.\n     */\n    public static Class loadClass(final String className, final Class callingClass)\n            throws ClassNotFoundException\n    {\n        Class clazz = (Class) AccessController.doPrivileged(new PrivilegedAction()\n        {\n            public Object run()\n            {\n                try\n                {\n                    final ClassLoader cl = Thread.currentThread().getContextClassLoader();\n                    return cl != null ? cl.loadClass(className) : null;\n\n                }\n                catch (ClassNotFoundException e)\n                {\n                    return null;\n                }\n            }\n        });\n\n        if (clazz == null)\n        {\n            clazz = (Class) AccessController.doPrivileged(new PrivilegedAction()\n            {\n                public Object run()\n                {\n                    try\n                    {\n                        return Class.forName(className);\n                    }\n                    catch (ClassNotFoundException e)\n                    {\n                        return null;\n                    }\n                }\n            });\n        }\n\n        if (clazz == null)\n        {\n            clazz = (Class) AccessController.doPrivileged(new PrivilegedAction()\n            {\n                public Object run()\n                {\n                    try\n                    {\n                        return ClassUtils.class.getClassLoader().loadClass(className);\n                    }\n                    catch (ClassNotFoundException e)\n                    {\n                        return null;\n                    }\n                }\n            });\n        }\n\n        if (clazz == null)\n        {\n            clazz = (Class) AccessController.doPrivileged(new PrivilegedAction()\n            {\n                public Object run()\n                {\n                    try\n                    {\n                        return callingClass.getClassLoader().loadClass(className);\n                    }\n                    catch (ClassNotFoundException e)\n                    {\n                        return null;\n                    }\n                }\n            });\n        }\n\n        if (clazz == null)\n        {\n            throw new ClassNotFoundException(className);\n        }\n\n        return clazz;\n    }","id":107389,"modified_method":"/**\n     * Load a class with a given name. <p/> It will try to load the class in the\n     * following order:\n     * <ul>\n     * <li>From\n     * {@link Thread#getContextClassLoader() Thread.currentThread().getContextClassLoader()}\n     * <li>Using the basic {@link Class#forName(java.lang.String) }\n     * <li>From\n     * {@link Class#getClassLoader() ClassLoaderUtil.class.getClassLoader()}\n     * <li>From the {@link Class#getClassLoader() callingClass.getClassLoader() }\n     * <\/ul>\n     *\n     * @param className    The name of the class to load\n     * @param callingClass The Class object of the calling object\n     * @throws ClassNotFoundException If the class cannot be found anywhere.\n     */\n    public static Class loadClass(final String className, final Class<?> callingClass)\n            throws ClassNotFoundException\n    {\n        Class<?> clazz = AccessController.doPrivileged(new PrivilegedAction<Class<?>>()\n        {\n            public Class<?> run()\n            {\n                try\n                {\n                    final ClassLoader cl = Thread.currentThread().getContextClassLoader();\n                    return cl != null ? cl.loadClass(className) : null;\n\n                }\n                catch (ClassNotFoundException e)\n                {\n                    return null;\n                }\n            }\n        });\n\n        if (clazz == null)\n        {\n            clazz = AccessController.doPrivileged(new PrivilegedAction<Class<?>>()\n            {\n                public Class<?> run()\n                {\n                    try\n                    {\n                        return Class.forName(className);\n                    }\n                    catch (ClassNotFoundException e)\n                    {\n                        return null;\n                    }\n                }\n            });\n        }\n\n        if (clazz == null)\n        {\n            clazz = AccessController.doPrivileged(new PrivilegedAction<Class<?>>()\n            {\n                public Class<?> run()\n                {\n                    try\n                    {\n                        return ClassUtils.class.getClassLoader().loadClass(className);\n                    }\n                    catch (ClassNotFoundException e)\n                    {\n                        return null;\n                    }\n                }\n            });\n        }\n\n        if (clazz == null)\n        {\n            clazz = AccessController.doPrivileged(new PrivilegedAction<Class<?>>()\n            {\n                public Class<?> run()\n                {\n                    try\n                    {\n                        return callingClass.getClassLoader().loadClass(className);\n                    }\n                    catch (ClassNotFoundException e)\n                    {\n                        return null;\n                    }\n                }\n            });\n        }\n\n        if (clazz == null)\n        {\n            throw new ClassNotFoundException(className);\n        }\n\n        return clazz;\n    }","commit_id":"40372fc67be7f819d829f74d39ab82c9641453ba","url":"https://github.com/mulesoft/mule"},{"original_method":"private void processConfigFile(String configFile)\n    {\n        try\n        {\n            Class cfgBuilderClass = ClassUtils.loadClass(\n                \"org.mule.config.spring.SpringXmlConfigurationBuilder\", MuleServer.class);\n            ConfigurationBuilder cfgBuilder = (ConfigurationBuilder) ClassUtils.instanciateClass(\n                cfgBuilderClass, configFile);\n\n            if (!cfgBuilder.isConfigured())\n            {\n                // TODO Update after MULE-1988\n                cfgBuilder.configure(muleContext);\n            }\n        }\n        catch (Exception e)\n        {\n            logger.error(e);\n        }\n    }","id":107390,"modified_method":"private void processConfigFile(String configFile)\n    {\n        try\n        {\n            Class<?> cfgBuilderClass = ClassUtils.loadClass(\n                \"org.mule.config.spring.SpringXmlConfigurationBuilder\", MuleServer.class);\n            ConfigurationBuilder cfgBuilder = (ConfigurationBuilder) ClassUtils.instanciateClass(\n                cfgBuilderClass, configFile);\n\n            if (!cfgBuilder.isConfigured())\n            {\n                // TODO Update after MULE-1988\n                cfgBuilder.configure(muleContext);\n            }\n        }\n        catch (Exception e)\n        {\n            logger.error(e);\n        }\n    }","commit_id":"40372fc67be7f819d829f74d39ab82c9641453ba","url":"https://github.com/mulesoft/mule"},{"original_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tJournalArticle article = null;\n\t\tString oldUrlTitle = StringPool.BLANK;\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tObject[] returnValue = updateArticle(actionRequest);\n\n\t\t\t\tarticle = (JournalArticle)returnValue[0];\n\t\t\t\toldUrlTitle = ((String)returnValue[1]);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.EXPIRE)) {\n\t\t\t\texpireArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.SUBSCRIBE)) {\n\t\t\t\tsubscribeArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNSUBSCRIBE)) {\n\t\t\t\tunsubscribeArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(\"removeArticlesLocale\")) {\n\t\t\t\tremoveArticlesLocale(actionRequest);\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(cmd)) {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\t\t\tactionRequest, \"workflowAction\",\n\t\t\t\t\tWorkflowConstants.ACTION_PUBLISH);\n\n\t\t\t\tif ((article != null) &&\n\t\t\t\t\t(workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT)) {\n\n\t\t\t\t\tredirect = getSaveAndContinueRedirect(\n\t\t\t\t\t\tportletConfig, actionRequest, article, redirect);\n\t\t\t\t}\n\n\t\t\t\tif (redirect.contains(\"/content/\" + oldUrlTitle + \"?\")) {\n\t\t\t\t\tint pos = redirect.indexOf(\"?\");\n\n\t\t\t\t\tif (pos == -1) {\n\t\t\t\t\t\tpos = redirect.length();\n\t\t\t\t\t}\n\n\t\t\t\t\tString newRedirect = redirect.substring(\n\t\t\t\t\t\t0, pos - oldUrlTitle.length());\n\n\t\t\t\t\tnewRedirect += article.getUrlTitle();\n\n\t\t\t\t\tif (oldUrlTitle.contains(\"/maximized\")) {\n\t\t\t\t\t\tnewRedirect += \"/maximized\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pos < redirect.length()) {\n\t\t\t\t\t\tnewRedirect +=\n\t\t\t\t\t\t\t\"?\" +\n\t\t\t\t\t\t\t\tredirect.substring(pos + 1, redirect.length());\n\t\t\t\t\t}\n\n\t\t\t\t\tredirect = newRedirect;\n\t\t\t\t}\n\n\t\t\t\tif (!actionRequest.getWindowState().toString().equals(\n\t\t\t\t\t\"pop_up\")) {\n\n\t\t\t\t\tsendRedirect(actionRequest, actionResponse, redirect);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchArticleException ||\n\t\t\t\te instanceof NoSuchStructureException ||\n\t\t\t\te instanceof NoSuchTemplateException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.journal.error\");\n\t\t\t}\n\t\t\telse if (e instanceof ArticleContentException ||\n\t\t\t\t\t e instanceof ArticleDisplayDateException ||\n\t\t\t\t\t e instanceof ArticleExpirationDateException ||\n\t\t\t\t\t e instanceof ArticleIdException ||\n\t\t\t\t\t e instanceof ArticleSmallImageNameException ||\n\t\t\t\t\t e instanceof ArticleSmallImageSizeException ||\n\t\t\t\t\t e instanceof ArticleTitleException ||\n\t\t\t\t\t e instanceof ArticleTypeException ||\n\t\t\t\t\t e instanceof ArticleVersionException ||\n\t\t\t\t\t e instanceof DuplicateArticleIdException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse if (e instanceof AssetTagException) {\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","id":107391,"modified_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tJournalArticle article = null;\n\t\tString oldUrlTitle = StringPool.BLANK;\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tObject[] returnValue = updateArticle(actionRequest);\n\n\t\t\t\tarticle = (JournalArticle)returnValue[0];\n\t\t\t\toldUrlTitle = ((String)returnValue[1]);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.EXPIRE)) {\n\t\t\t\texpireArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.SUBSCRIBE)) {\n\t\t\t\tsubscribeArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNSUBSCRIBE)) {\n\t\t\t\tunsubscribeArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(\"removeArticlesLocale\")) {\n\t\t\t\tremoveArticlesLocale(actionRequest);\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(cmd)) {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\t\t\tactionRequest, \"workflowAction\",\n\t\t\t\t\tWorkflowConstants.ACTION_PUBLISH);\n\n\t\t\t\tif ((article != null) &&\n\t\t\t\t\t(workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT)) {\n\n\t\t\t\t\tredirect = getSaveAndContinueRedirect(\n\t\t\t\t\t\tportletConfig, actionRequest, article, redirect);\n\t\t\t\t}\n\n\t\t\t\tif (redirect.contains(\"/content/\" + oldUrlTitle + \"?\")) {\n\t\t\t\t\tint pos = redirect.indexOf(\"?\");\n\n\t\t\t\t\tif (pos == -1) {\n\t\t\t\t\t\tpos = redirect.length();\n\t\t\t\t\t}\n\n\t\t\t\t\tString newRedirect = redirect.substring(\n\t\t\t\t\t\t0, pos - oldUrlTitle.length());\n\n\t\t\t\t\tnewRedirect += article.getUrlTitle();\n\n\t\t\t\t\tif (oldUrlTitle.contains(\"/maximized\")) {\n\t\t\t\t\t\tnewRedirect += \"/maximized\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pos < redirect.length()) {\n\t\t\t\t\t\tnewRedirect +=\n\t\t\t\t\t\t\t\"?\" +\n\t\t\t\t\t\t\t\tredirect.substring(pos + 1, redirect.length());\n\t\t\t\t\t}\n\n\t\t\t\t\tredirect = newRedirect;\n\t\t\t\t}\n\n\t\t\t\tWindowState windowState = actionRequest.getWindowState();\n\n\t\t\t\tif (!windowState.equals(LiferayWindowState.POP_UP)) {\n\t\t\t\t\tsendRedirect(actionRequest, actionResponse, redirect);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchArticleException ||\n\t\t\t\te instanceof NoSuchStructureException ||\n\t\t\t\te instanceof NoSuchTemplateException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.journal.error\");\n\t\t\t}\n\t\t\telse if (e instanceof ArticleContentException ||\n\t\t\t\t\t e instanceof ArticleDisplayDateException ||\n\t\t\t\t\t e instanceof ArticleExpirationDateException ||\n\t\t\t\t\t e instanceof ArticleIdException ||\n\t\t\t\t\t e instanceof ArticleSmallImageNameException ||\n\t\t\t\t\t e instanceof ArticleSmallImageSizeException ||\n\t\t\t\t\t e instanceof ArticleTitleException ||\n\t\t\t\t\t e instanceof ArticleTypeException ||\n\t\t\t\t\t e instanceof ArticleVersionException ||\n\t\t\t\t\t e instanceof DuplicateArticleIdException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse if (e instanceof AssetTagException) {\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","commit_id":"17508cbd8827b9e0a8afdcee620252ecc2f85a6f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tupdateEntry(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteEntry(actionRequest);\n\t\t\t}\n\n\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);\n\n\t\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t\tthemeDisplay.getLayoutTypePortlet();\n\n\t\t\tif (layoutTypePortlet.hasPortletId(\n\t\t\t\t\tportletConfig.getPortletName()) &&\n\t\t\t\t\t\t!actionRequest.getWindowState().toString().equals(\n\t\t\t\t\t\t\t\"pop_up\")) {\n\n\t\t\t\tsendRedirect(actionRequest, actionResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.bookmarks.error\");\n\t\t\t}\n\t\t\telse if (e instanceof EntryURLException ||\n\t\t\t\t\t e instanceof NoSuchFolderException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse if (e instanceof AssetTagException) {\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","id":107392,"modified_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tupdateEntry(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteEntry(actionRequest);\n\t\t\t}\n\n\t\t\tWindowState windowState = actionRequest.getWindowState();\n\n\t\t\tif (!windowState.equals(LiferayWindowState.POP_UP)) {\n\t\t\t\tsendRedirect(actionRequest, actionResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.bookmarks.error\");\n\t\t\t}\n\t\t\telse if (e instanceof EntryURLException ||\n\t\t\t\t\t e instanceof NoSuchFolderException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse if (e instanceof AssetTagException) {\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","commit_id":"45f76d703ecbdedc15f9744812d3a7e2a90c7030","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tBlogsEntry entry = null;\n\t\t\tString oldUrlTitle = StringPool.BLANK;\n\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tObject[] returnValue = updateEntry(actionRequest);\n\n\t\t\t\tentry = (BlogsEntry)returnValue[0];\n\t\t\t\toldUrlTitle = ((String)returnValue[1]);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteEntries(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.SUBSCRIBE)) {\n\t\t\t\tsubscribe(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNSUBSCRIBE)) {\n\t\t\t\tunsubscribe(actionRequest);\n\t\t\t}\n\n\t\t\tString redirect = ParamUtil.getString(actionRequest, \"redirect\");\n\t\t\tboolean updateRedirect = false;\n\n\t\t\tif (redirect.contains(\"/blogs/\" + oldUrlTitle + \"/maximized\")) {\n\t\t\t\toldUrlTitle += \"/maximized\";\n\t\t\t}\n\n\t\t\tif ((entry != null) && (Validator.isNotNull(oldUrlTitle)) &&\n\t\t\t\t(redirect.endsWith(\"/blogs/\" + oldUrlTitle) ||\n\t\t\t\t redirect.contains(\"/blogs/\" + oldUrlTitle + \"?\") ||\n\t\t\t\t redirect.contains(\"/blog/\" + oldUrlTitle + \"?\"))) {\n\n\t\t\t\tint pos = redirect.indexOf(\"?\");\n\n\t\t\t\tif (pos == -1) {\n\t\t\t\t\tpos = redirect.length();\n\t\t\t\t}\n\n\t\t\t\tString newRedirect = redirect.substring(\n\t\t\t\t\t0, pos - oldUrlTitle.length());\n\n\t\t\t\tnewRedirect += entry.getUrlTitle();\n\n\t\t\t\tif (oldUrlTitle.indexOf(\"/maximized\") != -1) {\n\t\t\t\t\tnewRedirect += \"/maximized\";\n\t\t\t\t}\n\n\t\t\t\tif (pos < redirect.length()) {\n\t\t\t\t\tnewRedirect +=\n\t\t\t\t\t\t\"?\" + redirect.substring(pos + 1, redirect.length());\n\t\t\t\t}\n\n\t\t\t\tredirect = newRedirect;\n\t\t\t\tupdateRedirect = true;\n\t\t\t}\n\n\t\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\t\tactionRequest, \"workflowAction\",\n\t\t\t\tWorkflowConstants.ACTION_SAVE_DRAFT);\n\n\t\t\tboolean ajax = ParamUtil.getBoolean(actionRequest, \"ajax\");\n\n\t\t\tif (ajax) {\n\t\t\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\t\t\tjsonObject.put(\"entryId\", entry.getEntryId());\n\t\t\t\tjsonObject.put(\"redirect\", redirect);\n\t\t\t\tjsonObject.put(\"updateRedirect\", updateRedirect);\n\n\t\t\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\t\t\tactionRequest);\n\t\t\t\tHttpServletResponse response =\n\t\t\t\t\tPortalUtil.getHttpServletResponse(actionResponse);\n\t\t\t\tInputStream inputStream = new UnsyncByteArrayInputStream(\n\t\t\t\t\tjsonObject.toString().getBytes());\n\t\t\t\tString contentType = ContentTypes.TEXT_JAVASCRIPT;\n\n\t\t\t\tServletResponseUtil.sendFile(\n\t\t\t\t\trequest, response, null, inputStream, contentType);\n\n\t\t\t\tsetForward(actionRequest, ActionConstants.COMMON_NULL);\n\t\t\t}\n\t\t\telse if ((entry != null) &&\n\t\t\t\t\t (workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT)) {\n\n\t\t\t\tredirect = getSaveAndContinueRedirect(\n\t\t\t\t\tportletConfig, actionRequest, entry, redirect);\n\n\t\t\t\tsendRedirect(actionRequest, actionResponse, redirect);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t\t\tthemeDisplay.getLayoutTypePortlet();\n\n\t\t\t\tif (layoutTypePortlet.hasPortletId(\n\t\t\t\t\t\tportletConfig.getPortletName()) &&\n\t\t\t\t\t\t!actionRequest.getWindowState().toString().equals(\n\t\t\t\t\t\t\t\"pop_up\")) {\n\n\t\t\t\t\tsendRedirect(actionRequest, actionResponse, redirect);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.blogs.error\");\n\t\t\t}\n\t\t\telse if (e instanceof EntryContentException ||\n\t\t\t\t\t e instanceof EntryDisplayDateException ||\n\t\t\t\t\t e instanceof EntrySmallImageNameException ||\n\t\t\t\t\t e instanceof EntrySmallImageSizeException ||\n\t\t\t\t\t e instanceof EntryTitleException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse if (e instanceof AssetTagException) {\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","id":107393,"modified_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tBlogsEntry entry = null;\n\t\t\tString oldUrlTitle = StringPool.BLANK;\n\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tObject[] returnValue = updateEntry(actionRequest);\n\n\t\t\t\tentry = (BlogsEntry)returnValue[0];\n\t\t\t\toldUrlTitle = ((String)returnValue[1]);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteEntries(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.SUBSCRIBE)) {\n\t\t\t\tsubscribe(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNSUBSCRIBE)) {\n\t\t\t\tunsubscribe(actionRequest);\n\t\t\t}\n\n\t\t\tString redirect = ParamUtil.getString(actionRequest, \"redirect\");\n\t\t\tboolean updateRedirect = false;\n\n\t\t\tif (redirect.contains(\"/blogs/\" + oldUrlTitle + \"/maximized\")) {\n\t\t\t\toldUrlTitle += \"/maximized\";\n\t\t\t}\n\n\t\t\tif ((entry != null) && (Validator.isNotNull(oldUrlTitle)) &&\n\t\t\t\t(redirect.endsWith(\"/blogs/\" + oldUrlTitle) ||\n\t\t\t\t redirect.contains(\"/blogs/\" + oldUrlTitle + \"?\") ||\n\t\t\t\t redirect.contains(\"/blog/\" + oldUrlTitle + \"?\"))) {\n\n\t\t\t\tint pos = redirect.indexOf(\"?\");\n\n\t\t\t\tif (pos == -1) {\n\t\t\t\t\tpos = redirect.length();\n\t\t\t\t}\n\n\t\t\t\tString newRedirect = redirect.substring(\n\t\t\t\t\t0, pos - oldUrlTitle.length());\n\n\t\t\t\tnewRedirect += entry.getUrlTitle();\n\n\t\t\t\tif (oldUrlTitle.indexOf(\"/maximized\") != -1) {\n\t\t\t\t\tnewRedirect += \"/maximized\";\n\t\t\t\t}\n\n\t\t\t\tif (pos < redirect.length()) {\n\t\t\t\t\tnewRedirect +=\n\t\t\t\t\t\t\"?\" + redirect.substring(pos + 1, redirect.length());\n\t\t\t\t}\n\n\t\t\t\tredirect = newRedirect;\n\t\t\t\tupdateRedirect = true;\n\t\t\t}\n\n\t\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\t\tactionRequest, \"workflowAction\",\n\t\t\t\tWorkflowConstants.ACTION_SAVE_DRAFT);\n\n\t\t\tboolean ajax = ParamUtil.getBoolean(actionRequest, \"ajax\");\n\n\t\t\tif (ajax) {\n\t\t\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\t\t\tjsonObject.put(\"entryId\", entry.getEntryId());\n\t\t\t\tjsonObject.put(\"redirect\", redirect);\n\t\t\t\tjsonObject.put(\"updateRedirect\", updateRedirect);\n\n\t\t\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\t\t\tactionRequest);\n\t\t\t\tHttpServletResponse response =\n\t\t\t\t\tPortalUtil.getHttpServletResponse(actionResponse);\n\t\t\t\tInputStream inputStream = new UnsyncByteArrayInputStream(\n\t\t\t\t\tjsonObject.toString().getBytes());\n\t\t\t\tString contentType = ContentTypes.TEXT_JAVASCRIPT;\n\n\t\t\t\tServletResponseUtil.sendFile(\n\t\t\t\t\trequest, response, null, inputStream, contentType);\n\n\t\t\t\tsetForward(actionRequest, ActionConstants.COMMON_NULL);\n\t\t\t}\n\t\t\telse if ((entry != null) &&\n\t\t\t\t\t (workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT)) {\n\n\t\t\t\tredirect = getSaveAndContinueRedirect(\n\t\t\t\t\tportletConfig, actionRequest, entry, redirect);\n\n\t\t\t\tsendRedirect(actionRequest, actionResponse, redirect);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tWindowState windowState = actionRequest.getWindowState();\n\n\t\t\t\tif (!windowState.equals(LiferayWindowState.POP_UP)) {\n\t\t\t\t\tsendRedirect(actionRequest, actionResponse, redirect);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.blogs.error\");\n\t\t\t}\n\t\t\telse if (e instanceof EntryContentException ||\n\t\t\t\t\t e instanceof EntryDisplayDateException ||\n\t\t\t\t\t e instanceof EntrySmallImageNameException ||\n\t\t\t\t\t e instanceof EntrySmallImageSizeException ||\n\t\t\t\t\t e instanceof EntryTitleException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse if (e instanceof AssetTagException) {\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","commit_id":"45f76d703ecbdedc15f9744812d3a7e2a90c7030","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tupdateEvent(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteEvent(actionRequest);\n\t\t\t}\n\n\t\t\tif (!actionRequest.getWindowState().toString().equals(\"pop_up\")) {\n\t\t\t\tsendRedirect(actionRequest, actionResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchEventException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.calendar.error\");\n\t\t\t}\n\t\t\telse if (e instanceof EventDurationException ||\n\t\t\t\t\t e instanceof EventEndDateException ||\n\t\t\t\t\t e instanceof EventStartDateException ||\n\t\t\t\t\t e instanceof EventTitleException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","id":107394,"modified_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tupdateEvent(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteEvent(actionRequest);\n\t\t\t}\n\n\t\t\tWindowState windowState = actionRequest.getWindowState();\n\n\t\t\tif (!windowState.equals(LiferayWindowState.POP_UP)) {\n\t\t\t\tsendRedirect(actionRequest, actionResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchEventException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.calendar.error\");\n\t\t\t}\n\t\t\telse if (e instanceof EventDurationException ||\n\t\t\t\t\t e instanceof EventEndDateException ||\n\t\t\t\t\t e instanceof EventStartDateException ||\n\t\t\t\t\t e instanceof EventTitleException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","commit_id":"45f76d703ecbdedc15f9744812d3a7e2a90c7030","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tupdateFileEntry(actionRequest, actionResponse);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteFileEntries(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.LOCK)) {\n\t\t\t\tlockFileEntry(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.MOVE)) {\n\t\t\t\tmoveFileEntry(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.REVERT)) {\n\t\t\t\trevertFileEntry(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNLOCK)) {\n\t\t\t\tunlockFileEntry(actionRequest);\n\t\t\t}\n\t\t\tif (!actionRequest.getWindowState().toString().equals(\"pop_up\")) {\n\t\t\t\tsendRedirect(actionRequest, actionResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof DuplicateLockException ||\n\t\t\t\te instanceof NoSuchFileEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tif (e instanceof DuplicateLockException) {\n\t\t\t\t\tDuplicateLockException dle = (DuplicateLockException)e;\n\n\t\t\t\t\tSessionErrors.add(\n\t\t\t\t\t\tactionRequest, dle.getClass().getName(), dle.getLock());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t\t}\n\n\t\t\t\tsetForward(actionRequest, \"portlet.document_library.error\");\n\t\t\t}\n\t\t\telse if (e instanceof DuplicateFileException ||\n\t\t\t\t\t e instanceof DuplicateFolderNameException ||\n\t\t\t\t\t e instanceof FileNameException ||\n\t\t\t\t\t e instanceof FileSizeException ||\n\t\t\t\t\t e instanceof NoSuchFolderException ||\n\t\t\t\t\t e instanceof SourceFileNameException) {\n\n\t\t\t\tif (e instanceof DuplicateFileException) {\n\t\t\t\t\tHttpServletResponse response =\n\t\t\t\t\t\tPortalUtil.getHttpServletResponse(actionResponse);\n\n\t\t\t\t\tresponse.setStatus(\n\t\t\t\t\t\tServletResponseConstants.SC_DUPLICATE_FILE_EXCEPTION);\n\t\t\t\t}\n\t\t\t\telse if (e instanceof FileNameException) {\n\t\t\t\t\tHttpServletResponse response =\n\t\t\t\t\t\tPortalUtil.getHttpServletResponse(actionResponse);\n\n\t\t\t\t\tresponse.setStatus(\n\t\t\t\t\t\tServletResponseConstants.SC_FILE_NAME_EXCEPTION);\n\t\t\t\t}\n\t\t\t\telse if (e instanceof FileSizeException) {\n\t\t\t\t\tHttpServletResponse response =\n\t\t\t\t\t\tPortalUtil.getHttpServletResponse(actionResponse);\n\n\t\t\t\t\tresponse.setStatus(\n\t\t\t\t\t\tServletResponseConstants.SC_FILE_SIZE_EXCEPTION);\n\t\t\t\t}\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse if (e instanceof AssetTagException) {\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","id":107395,"modified_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tupdateFileEntry(actionRequest, actionResponse);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteFileEntries(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.LOCK)) {\n\t\t\t\tlockFileEntry(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.MOVE)) {\n\t\t\t\tmoveFileEntry(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.REVERT)) {\n\t\t\t\trevertFileEntry(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNLOCK)) {\n\t\t\t\tunlockFileEntry(actionRequest);\n\t\t\t}\n\n\t\t\tWindowState windowState = actionRequest.getWindowState();\n\n\t\t\tif (!windowState.equals(LiferayWindowState.POP_UP)) {\n\t\t\t\tsendRedirect(actionRequest, actionResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof DuplicateLockException ||\n\t\t\t\te instanceof NoSuchFileEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tif (e instanceof DuplicateLockException) {\n\t\t\t\t\tDuplicateLockException dle = (DuplicateLockException)e;\n\n\t\t\t\t\tSessionErrors.add(\n\t\t\t\t\t\tactionRequest, dle.getClass().getName(), dle.getLock());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t\t}\n\n\t\t\t\tsetForward(actionRequest, \"portlet.document_library.error\");\n\t\t\t}\n\t\t\telse if (e instanceof DuplicateFileException ||\n\t\t\t\t\t e instanceof DuplicateFolderNameException ||\n\t\t\t\t\t e instanceof FileNameException ||\n\t\t\t\t\t e instanceof FileSizeException ||\n\t\t\t\t\t e instanceof NoSuchFolderException ||\n\t\t\t\t\t e instanceof SourceFileNameException) {\n\n\t\t\t\tif (e instanceof DuplicateFileException) {\n\t\t\t\t\tHttpServletResponse response =\n\t\t\t\t\t\tPortalUtil.getHttpServletResponse(actionResponse);\n\n\t\t\t\t\tresponse.setStatus(\n\t\t\t\t\t\tServletResponseConstants.SC_DUPLICATE_FILE_EXCEPTION);\n\t\t\t\t}\n\t\t\t\telse if (e instanceof FileNameException) {\n\t\t\t\t\tHttpServletResponse response =\n\t\t\t\t\t\tPortalUtil.getHttpServletResponse(actionResponse);\n\n\t\t\t\t\tresponse.setStatus(\n\t\t\t\t\t\tServletResponseConstants.SC_FILE_NAME_EXCEPTION);\n\t\t\t\t}\n\t\t\t\telse if (e instanceof FileSizeException) {\n\t\t\t\t\tHttpServletResponse response =\n\t\t\t\t\t\tPortalUtil.getHttpServletResponse(actionResponse);\n\n\t\t\t\t\tresponse.setStatus(\n\t\t\t\t\t\tServletResponseConstants.SC_FILE_SIZE_EXCEPTION);\n\t\t\t\t}\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse if (e instanceof AssetTagException) {\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","commit_id":"45f76d703ecbdedc15f9744812d3a7e2a90c7030","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tupdateImage(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteImage(actionRequest);\n\t\t\t}\n\n\t\t\tif (!actionRequest.getWindowState().toString().equals(\"pop_up\")) {\n\t\t\t\tsendRedirect(actionRequest, actionResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchImageException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.image_gallery.error\");\n\t\t\t}\n\t\t\telse if (e instanceof DuplicateImageNameException ||\n\t\t\t\t\t e instanceof ImageNameException ||\n\t\t\t\t\t e instanceof ImageSizeException ||\n\t\t\t\t\t e instanceof NoSuchFolderException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse if (e instanceof AssetTagException) {\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","id":107396,"modified_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tupdateImage(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteImage(actionRequest);\n\t\t\t}\n\n\t\t\tWindowState windowState = actionRequest.getWindowState();\n\n\t\t\tif (!windowState.equals(LiferayWindowState.POP_UP)) {\n\t\t\t\tsendRedirect(actionRequest, actionResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchImageException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.image_gallery.error\");\n\t\t\t}\n\t\t\telse if (e instanceof DuplicateImageNameException ||\n\t\t\t\t\t e instanceof ImageNameException ||\n\t\t\t\t\t e instanceof ImageSizeException ||\n\t\t\t\t\t e instanceof NoSuchFolderException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse if (e instanceof AssetTagException) {\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","commit_id":"45f76d703ecbdedc15f9744812d3a7e2a90c7030","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public HostResponse createHostResponse(Host host) {\n        HostResponse hostResponse = new HostResponse();\n        hostResponse.setId(host.getId());\n        hostResponse.setCapabilities(host.getCapabilities());\n        hostResponse.setClusterId(host.getClusterId());\n        hostResponse.setCpuNumber(host.getCpus());\n        hostResponse.setZoneId(host.getDataCenterId());\n        hostResponse.setDisconnectedOn(host.getDisconnectedOn());\n        hostResponse.setHypervisor(host.getHypervisorType());\n        hostResponse.setHostType(host.getType());\n        hostResponse.setLastPinged(new Date(host.getLastPinged()));\n        hostResponse.setManagementServerId(host.getManagementServerId());\n        hostResponse.setName(host.getName());\n        hostResponse.setPodId(host.getPodId());\n        hostResponse.setRemoved(host.getRemoved());\n        hostResponse.setCpuSpeed(host.getSpeed());\n        hostResponse.setState(host.getStatus());\n        hostResponse.setIpAddress(host.getPrivateIpAddress());\n        hostResponse.setVersion(host.getVersion());\n        hostResponse.setCreated(host.getCreated());\n\n        GuestOSCategoryVO guestOSCategory = ApiDBUtils.getHostGuestOSCategory(host.getId());\n        if (guestOSCategory != null) {\n            hostResponse.setOsCategoryId(guestOSCategory.getId());\n            hostResponse.setOsCategoryName(guestOSCategory.getName());\n        }\n        hostResponse.setZoneName(ApiDBUtils.findZoneById(host.getDataCenterId()).getName());\n\n        if (host.getPodId() != null) {\n            hostResponse.setPodName(ApiDBUtils.findPodById(host.getPodId()).getName());\n        }\n\n        DecimalFormat decimalFormat = new DecimalFormat(\"#.##\");\n\n        // calculate cpu allocated by vm\n        if ((host.getCpus() != null) && (host.getSpeed() != null)) {\n            int cpu = 0;\n            String cpuAlloc = null;\n            List<UserVmVO> instances = ApiDBUtils.listUserVMsByHostId(host.getId());\n            for (UserVmVO vm : instances) {\n                ServiceOffering so = ApiDBUtils.findServiceOfferingById(vm.getServiceOfferingId());\n                cpu += so.getCpu() * so.getSpeed();\n            }\n            cpuAlloc = decimalFormat.format(((float) cpu / (float) (host.getCpus() * host.getSpeed())) * 100f) + \"%\";\n            hostResponse.setCpuAllocated(cpuAlloc);\n        }\n\n        // calculate cpu utilized\n        String cpuUsed = null;\n        HostStats hostStats = ApiDBUtils.getHostStatistics(host.getId());\n        if (hostStats != null) {\n            float cpuUtil = (float) hostStats.getCpuUtilization();\n            cpuUsed = decimalFormat.format(cpuUtil) + \"%\";\n            hostResponse.setCpuUsed(cpuUsed);\n            hostResponse.setAverageLoad((long) hostStats.getAverageLoad());\n            hostResponse.setNetworkKbsRead((long) hostStats.getNetworkReadKBs());\n            hostResponse.setNetworkKbsWrite((long) hostStats.getNetworkWriteKBs());\n        }\n\n        if (host.getType() == Host.Type.Routing) {\n            hostResponse.setMemoryTotal(host.getTotalMemory());\n\n            // calculate memory allocated by systemVM and userVm\n            long mem = ApiDBUtils.getMemoryUsagebyHost(host.getId());\n            hostResponse.setMemoryAllocated(mem);\n            hostResponse.setMemoryUsed(mem);\n        } else if (host.getType().toString().equals(\"Storage\")) {\n            hostResponse.setDiskSizeTotal(host.getTotalSize());\n            hostResponse.setDiskSizeAllocated(0L);\n        }\n\n        if (host.getClusterId() != null) {\n            ClusterVO cluster = ApiDBUtils.findClusterById(host.getClusterId());\n            hostResponse.setClusterName(cluster.getName());\n        }\n\n        hostResponse.setLocalStorageActive(ApiDBUtils.isLocalStorageActiveOnHost(host));\n\n        Set<com.cloud.host.Status.Event> possibleEvents = host.getStatus().getPossibleEvents();\n        if ((possibleEvents != null) && !possibleEvents.isEmpty()) {\n            String events = \"\";\n            Iterator<com.cloud.host.Status.Event> iter = possibleEvents.iterator();\n            while (iter.hasNext()) {\n                com.cloud.host.Status.Event event = iter.next();\n                events += event.toString();\n                if (iter.hasNext()) {\n                    events += \"; \";\n                }\n            }\n            hostResponse.setEvents(events);\n        }\n        hostResponse.setObjectName(\"host\");\n\n        return hostResponse;\n    }","id":107397,"modified_method":"@Override\n    public HostResponse createHostResponse(Host host) {\n        HostResponse hostResponse = new HostResponse();\n        hostResponse.setId(host.getId());\n        hostResponse.setCapabilities(host.getCapabilities());\n        hostResponse.setClusterId(host.getClusterId());\n        hostResponse.setCpuNumber(host.getCpus());\n        hostResponse.setZoneId(host.getDataCenterId());\n        hostResponse.setDisconnectedOn(host.getDisconnectedOn());\n        hostResponse.setHypervisor(host.getHypervisorType());\n        hostResponse.setHostType(host.getType());\n        hostResponse.setLastPinged(new Date(host.getLastPinged()));\n        hostResponse.setManagementServerId(host.getManagementServerId());\n        hostResponse.setName(host.getName());\n        hostResponse.setPodId(host.getPodId());\n        hostResponse.setRemoved(host.getRemoved());\n        hostResponse.setCpuSpeed(host.getSpeed());\n        hostResponse.setState(host.getStatus());\n        hostResponse.setIpAddress(host.getPrivateIpAddress());\n        hostResponse.setVersion(host.getVersion());\n        hostResponse.setCreated(host.getCreated());\n\n        GuestOSCategoryVO guestOSCategory = ApiDBUtils.getHostGuestOSCategory(host.getId());\n        if (guestOSCategory != null) {\n            hostResponse.setOsCategoryId(guestOSCategory.getId());\n            hostResponse.setOsCategoryName(guestOSCategory.getName());\n        }\n        hostResponse.setZoneName(ApiDBUtils.findZoneById(host.getDataCenterId()).getName());\n\n        if (host.getPodId() != null) {\n            hostResponse.setPodName(ApiDBUtils.findPodById(host.getPodId()).getName());\n        }\n\n        DecimalFormat decimalFormat = new DecimalFormat(\"#.##\");\n\n        // calculate cpu allocated by vm\n        if ((host.getCpus() != null) && (host.getSpeed() != null)) {\n            int cpu = 0;\n            String cpuAlloc = null;\n            List<UserVmVO> instances = ApiDBUtils.listUserVMsByHostId(host.getId());\n            for (UserVmVO vm : instances) {\n                ServiceOffering so = ApiDBUtils.findServiceOfferingById(vm.getServiceOfferingId());\n                cpu += so.getCpu() * so.getSpeed();\n            }\n            cpuAlloc = decimalFormat.format(((float) cpu / (float) (host.getCpus() * host.getSpeed())) * 100f) + \"%\";\n            hostResponse.setCpuAllocated(cpuAlloc);\n        }\n\n        // calculate cpu utilized\n        String cpuUsed = null;\n        HostStats hostStats = ApiDBUtils.getHostStatistics(host.getId());\n        if (hostStats != null) {\n            float cpuUtil = (float) hostStats.getCpuUtilization();\n            cpuUsed = decimalFormat.format(cpuUtil) + \"%\";\n            hostResponse.setCpuUsed(cpuUsed);\n            hostResponse.setAverageLoad(Double.doubleToLongBits(hostStats.getAverageLoad()));\n            hostResponse.setNetworkKbsRead(Double.doubleToLongBits(hostStats.getNetworkReadKBs()));\n            hostResponse.setNetworkKbsWrite(Double.doubleToLongBits(hostStats.getNetworkWriteKBs()));\n        }\n\n        if (host.getType() == Host.Type.Routing) {\n            hostResponse.setMemoryTotal(host.getTotalMemory());\n\n            // calculate memory allocated by systemVM and userVm\n            Long mem = ApiDBUtils.getMemoryUsagebyHost(host.getId());\n            hostResponse.setMemoryAllocated(mem);\n            hostResponse.setMemoryUsed(mem);\n        } else if (host.getType().toString().equals(\"Storage\")) {\n            hostResponse.setDiskSizeTotal(host.getTotalSize());\n            hostResponse.setDiskSizeAllocated(0L);\n        }\n\n        if (host.getClusterId() != null) {\n            ClusterVO cluster = ApiDBUtils.findClusterById(host.getClusterId());\n            hostResponse.setClusterName(cluster.getName());\n        }\n\n        hostResponse.setLocalStorageActive(ApiDBUtils.isLocalStorageActiveOnHost(host));\n\n        Set<com.cloud.host.Status.Event> possibleEvents = host.getStatus().getPossibleEvents();\n        if ((possibleEvents != null) && !possibleEvents.isEmpty()) {\n            String events = \"\";\n            Iterator<com.cloud.host.Status.Event> iter = possibleEvents.iterator();\n            while (iter.hasNext()) {\n                com.cloud.host.Status.Event event = iter.next();\n                events += event.toString();\n                if (iter.hasNext()) {\n                    events += \"; \";\n                }\n            }\n            hostResponse.setEvents(events);\n        }\n        hostResponse.setObjectName(\"host\");\n\n        return hostResponse;\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public UserVmResponse createUserVm2Response(UserVm userVm) {\n        UserVmResponse userVmResponse = new UserVmResponse();\n        Account acct = ApiDBUtils.findAccountById(Long.valueOf(userVm.getAccountId()));\n        // FIXME - this check should be done in searchForUserVm method in\n        // ManagementServerImpl;\n        // otherwise the number of vms returned is not going to match pageSize\n        // request parameter\n        if ((acct != null) && (acct.getRemoved() == null)) {\n            userVmResponse.setAccountName(acct.getAccountName());\n            userVmResponse.setDomainId(acct.getDomainId());\n            userVmResponse.setDomainName(ApiDBUtils.findDomainById(acct.getDomainId()).getName());\n        } else {\n            return null; // the account has been deleted, skip this VM in the\n                         // response\n        }\n\n        userVmResponse.setId(userVm.getId());\n        AsyncJobVO asyncJob = ApiDBUtils.findInstancePendingAsyncJob(\"vm_instance\", userVm.getId());\n        if (asyncJob != null) {\n            userVmResponse.setJobId(asyncJob.getId());\n            userVmResponse.setJobStatus(asyncJob.getStatus());\n        }\n\n        userVmResponse.setName(userVm.getHostName());\n        userVmResponse.setCreated(userVm.getCreated());\n\n        if (userVm.getState() != null) {\n            userVmResponse.setState(userVm.getState().toString());\n        }\n\n        userVmResponse.setHaEnable(userVm.isHaEnabled());\n\n        if (userVm.getDisplayName() != null) {\n            userVmResponse.setDisplayName(userVm.getDisplayName());\n        } else {\n            userVmResponse.setDisplayName(userVm.getHostName());\n        }\n\n        InstanceGroupVO group = ApiDBUtils.findInstanceGroupForVM(userVm.getId());\n        if (group != null) {\n            userVmResponse.setGroup(group.getName());\n            userVmResponse.setGroupId(group.getId());\n        }\n\n        // Data Center Info\n        userVmResponse.setZoneId(userVm.getDataCenterId());\n        userVmResponse.setZoneName(ApiDBUtils.findZoneById(userVm.getDataCenterId()).getName());\n\n        Account account = UserContext.current().getAccount();\n        // if user is an admin, display host id\n        if (((account == null) || (account.getType() == Account.ACCOUNT_TYPE_ADMIN)) && (userVm.getHostId() != null)) {\n            userVmResponse.setHostId(userVm.getHostId());\n            userVmResponse.setHostName(ApiDBUtils.findHostById(userVm.getHostId()).getName());\n        }\n\n        // Template Info\n        VMTemplateVO template = ApiDBUtils.findTemplateById(userVm.getTemplateId());\n        if (template != null) {\n            userVmResponse.setTemplateId(userVm.getTemplateId());\n            userVmResponse.setTemplateName(template.getName());\n            userVmResponse.setTemplateDisplayText(template.getDisplayText());\n            userVmResponse.setPasswordEnabled(template.getEnablePassword());\n        } else {\n            userVmResponse.setTemplateId(-1L);\n            userVmResponse.setTemplateName(\"ISO Boot\");\n            userVmResponse.setTemplateDisplayText(\"ISO Boot\");\n            userVmResponse.setPasswordEnabled(false);\n        }\n\n        if (userVm.getPassword() != null) {\n            userVmResponse.setPassword(userVm.getPassword());\n        }\n\n        // ISO Info\n        if (userVm.getIsoId() != null) {\n            VMTemplateVO iso = ApiDBUtils.findTemplateById(userVm.getIsoId().longValue());\n            if (iso != null) {\n                userVmResponse.setIsoId(userVm.getIsoId());\n                userVmResponse.setIsoName(iso.getName());\n            }\n        }\n\n        // Service Offering Info\n        ServiceOffering offering = ApiDBUtils.findServiceOfferingById(userVm.getServiceOfferingId());\n        userVmResponse.setServiceOfferingId(userVm.getServiceOfferingId());\n        userVmResponse.setServiceOfferingName(offering.getName());\n        userVmResponse.setCpuNumber(offering.getCpu());\n        userVmResponse.setCpuSpeed(offering.getSpeed());\n        userVmResponse.setMemory(offering.getRamSize());\n\n        VolumeVO rootVolume = ApiDBUtils.findRootVolume(userVm.getId());\n        if (rootVolume != null) {\n            userVmResponse.setRootDeviceId(rootVolume.getDeviceId());\n            String rootDeviceType = \"Not created\";\n            if (rootVolume.getPoolId() != null) {\n                StoragePoolVO storagePool = ApiDBUtils.findStoragePoolById(rootVolume.getPoolId());\n                rootDeviceType = storagePool.getPoolType().toString();\n            }\n            userVmResponse.setRootDeviceType(rootDeviceType);\n        }\n\n        // stats calculation\n        DecimalFormat decimalFormat = new DecimalFormat(\"#.##\");\n        String cpuUsed = null;\n        VmStats vmStats = ApiDBUtils.getVmStatistics(userVm.getId());\n        if (vmStats != null) {\n            float cpuUtil = (float) vmStats.getCPUUtilization();\n            cpuUsed = decimalFormat.format(cpuUtil) + \"%\";\n            userVmResponse.setCpuUsed(cpuUsed);\n\n            long networkKbRead = (long) vmStats.getNetworkReadKBs();\n            userVmResponse.setNetworkKbsRead(networkKbRead);\n\n            long networkKbWrite = (long) vmStats.getNetworkWriteKBs();\n            userVmResponse.setNetworkKbsWrite(networkKbWrite);\n        }\n\n        userVmResponse.setGuestOsId(userVm.getGuestOSId());\n        // network groups\n        userVmResponse.setNetworkGroupList(ApiDBUtils.getNetworkGroupsNamesForVm(userVm.getId()));\n\n        List<? extends Nic> nics = ApiDBUtils.getNics(userVm);\n        for (Nic singleNic : nics) {\n            long configId = singleNic.getNetworkId();\n            Network networkConf = ApiDBUtils.getNetwork(configId);\n            if (networkConf.getTrafficType() == TrafficType.Guest) {\n                userVmResponse.setIpAddress(singleNic.getIp4Address());\n            }\n        }\n\n        userVmResponse.setObjectName(\"virtualmachine\");\n        return userVmResponse;\n    }","id":107398,"modified_method":"@Override\n    public UserVmResponse createUserVm2Response(UserVm userVm) {\n        UserVmResponse userVmResponse = new UserVmResponse();\n        Account acct = ApiDBUtils.findAccountById(Long.valueOf(userVm.getAccountId()));\n        // FIXME - this check should be done in searchForUserVm method in\n        // ManagementServerImpl;\n        // otherwise the number of vms returned is not going to match pageSize\n        // request parameter\n        if ((acct != null) && (acct.getRemoved() == null)) {\n            userVmResponse.setAccountName(acct.getAccountName());\n            userVmResponse.setDomainId(acct.getDomainId());\n            userVmResponse.setDomainName(ApiDBUtils.findDomainById(acct.getDomainId()).getName());\n        } else {\n            return null; // the account has been deleted, skip this VM in the\n                         // response\n        }\n\n        userVmResponse.setId(userVm.getId());\n        AsyncJobVO asyncJob = ApiDBUtils.findInstancePendingAsyncJob(\"vm_instance\", userVm.getId());\n        if (asyncJob != null) {\n            userVmResponse.setJobId(asyncJob.getId());\n            userVmResponse.setJobStatus(asyncJob.getStatus());\n        }\n\n        userVmResponse.setName(userVm.getHostName());\n        userVmResponse.setCreated(userVm.getCreated());\n\n        if (userVm.getState() != null) {\n            userVmResponse.setState(userVm.getState().toString());\n        }\n\n        userVmResponse.setHaEnable(userVm.isHaEnabled());\n\n        if (userVm.getDisplayName() != null) {\n            userVmResponse.setDisplayName(userVm.getDisplayName());\n        } else {\n            userVmResponse.setDisplayName(userVm.getHostName());\n        }\n\n        InstanceGroupVO group = ApiDBUtils.findInstanceGroupForVM(userVm.getId());\n        if (group != null) {\n            userVmResponse.setGroup(group.getName());\n            userVmResponse.setGroupId(group.getId());\n        }\n\n        // Data Center Info\n        userVmResponse.setZoneId(userVm.getDataCenterId());\n        userVmResponse.setZoneName(ApiDBUtils.findZoneById(userVm.getDataCenterId()).getName());\n\n        Account account = UserContext.current().getAccount();\n        // if user is an admin, display host id\n        if (((account == null) || (account.getType() == Account.ACCOUNT_TYPE_ADMIN)) && (userVm.getHostId() != null)) {\n            userVmResponse.setHostId(userVm.getHostId());\n            userVmResponse.setHostName(ApiDBUtils.findHostById(userVm.getHostId()).getName());\n        }\n\n        // Template Info\n        VMTemplateVO template = ApiDBUtils.findTemplateById(userVm.getTemplateId());\n        if (template != null) {\n            userVmResponse.setTemplateId(userVm.getTemplateId());\n            userVmResponse.setTemplateName(template.getName());\n            userVmResponse.setTemplateDisplayText(template.getDisplayText());\n            userVmResponse.setPasswordEnabled(template.getEnablePassword());\n        } else {\n            userVmResponse.setTemplateId(-1L);\n            userVmResponse.setTemplateName(\"ISO Boot\");\n            userVmResponse.setTemplateDisplayText(\"ISO Boot\");\n            userVmResponse.setPasswordEnabled(false);\n        }\n\n        if (userVm.getPassword() != null) {\n            userVmResponse.setPassword(userVm.getPassword());\n        }\n\n        // ISO Info\n        if (userVm.getIsoId() != null) {\n            VMTemplateVO iso = ApiDBUtils.findTemplateById(userVm.getIsoId());\n            if (iso != null) {\n                userVmResponse.setIsoId(userVm.getIsoId());\n                userVmResponse.setIsoName(iso.getName());\n            }\n        }\n\n        // Service Offering Info\n        ServiceOffering offering = ApiDBUtils.findServiceOfferingById(userVm.getServiceOfferingId());\n        userVmResponse.setServiceOfferingId(userVm.getServiceOfferingId());\n        userVmResponse.setServiceOfferingName(offering.getName());\n        userVmResponse.setCpuNumber(offering.getCpu());\n        userVmResponse.setCpuSpeed(offering.getSpeed());\n        userVmResponse.setMemory(offering.getRamSize());\n\n        VolumeVO rootVolume = ApiDBUtils.findRootVolume(userVm.getId());\n        if (rootVolume != null) {\n            userVmResponse.setRootDeviceId(rootVolume.getDeviceId());\n            String rootDeviceType = \"Not created\";\n            if (rootVolume.getPoolId() != null) {\n                StoragePoolVO storagePool = ApiDBUtils.findStoragePoolById(rootVolume.getPoolId());\n                rootDeviceType = storagePool.getPoolType().toString();\n            }\n            userVmResponse.setRootDeviceType(rootDeviceType);\n        }\n\n        // stats calculation\n        DecimalFormat decimalFormat = new DecimalFormat(\"#.##\");\n        String cpuUsed = null;\n        VmStats vmStats = ApiDBUtils.getVmStatistics(userVm.getId());\n        if (vmStats != null) {\n            float cpuUtil = (float) vmStats.getCPUUtilization();\n            cpuUsed = decimalFormat.format(cpuUtil) + \"%\";\n            userVmResponse.setCpuUsed(cpuUsed);\n\n            Long networkKbRead = Double.doubleToLongBits(vmStats.getNetworkReadKBs());\n            userVmResponse.setNetworkKbsRead(networkKbRead);\n\n            Long networkKbWrite = Double.doubleToLongBits(vmStats.getNetworkWriteKBs());\n            userVmResponse.setNetworkKbsWrite(networkKbWrite);\n        }\n\n        userVmResponse.setGuestOsId(userVm.getGuestOSId());\n        // network groups\n        userVmResponse.setNetworkGroupList(ApiDBUtils.getNetworkGroupsNamesForVm(userVm.getId()));\n\n        List<? extends Nic> nics = ApiDBUtils.getNics(userVm);\n        for (Nic singleNic : nics) {\n            Long configId = singleNic.getNetworkId();\n            Network networkConf = ApiDBUtils.getNetwork(configId);\n            if (networkConf.getTrafficType() == TrafficType.Guest) {\n                userVmResponse.setIpAddress(singleNic.getIp4Address());\n            }\n        }\n\n        userVmResponse.setObjectName(\"virtualmachine\");\n        return userVmResponse;\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public VirtualMachineTemplate findTemplateById(long templateId) {\n        return ApiDBUtils.findTemplateById(templateId);\n    }","id":107399,"modified_method":"@Override\n    public VirtualMachineTemplate findTemplateById(Long templateId) {\n        return ApiDBUtils.findTemplateById(templateId);\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public SystemVmResponse createSystemVm2Response(VirtualMachine systemVM) {\n        SystemVmResponse vmResponse = new SystemVmResponse();\n        if (systemVM instanceof SystemVm) {\n            SystemVm vm = (SystemVm) systemVM;\n\n            vmResponse.setId(vm.getId());\n            vmResponse.setSystemVmType(vm.getType().toString().toLowerCase());\n            vmResponse.setZoneId(vm.getDataCenterId());\n\n            vmResponse.setNetworkDomain(vm.getDomain());\n            vmResponse.setName(vm.getHostName());\n            vmResponse.setPodId(vm.getPodId());\n            vmResponse.setTemplateId(vm.getTemplateId());\n            vmResponse.setCreated(vm.getCreated());\n\n            if (vm.getHostId() != null) {\n                vmResponse.setHostId(vm.getHostId());\n                vmResponse.setHostName(ApiDBUtils.findHostById(vm.getHostId()).getName());\n            }\n\n            if (vm.getState() != null) {\n                vmResponse.setState(vm.getState().toString());\n            }\n\n            String instanceType = \"console_proxy\";\n            if (systemVM instanceof SecondaryStorageVmVO) {\n                instanceType = \"sec_storage_vm\"; // FIXME: this should be a\n                                                 // constant so that the async\n                                                 // jobs get updated with the\n                                                 // correct instance type, they\n                                                 // are using\n                                                 // different instance types at\n                                                 // the moment\n            }\n\n            AsyncJobVO asyncJob = ApiDBUtils.findInstancePendingAsyncJob(instanceType, vm.getId());\n            if (asyncJob != null) {\n                vmResponse.setJobId(asyncJob.getId());\n                vmResponse.setJobStatus(asyncJob.getStatus());\n            }\n\n            // for console proxies, add the active sessions\n            if (systemVM instanceof ConsoleProxyVO) {\n                ConsoleProxyVO proxy = (ConsoleProxyVO) systemVM;\n                vmResponse.setActiveViewerSessions(proxy.getActiveSession());\n            }\n\n            DataCenter zone = ApiDBUtils.findZoneById(vm.getDataCenterId());\n            if (zone != null) {\n                vmResponse.setZoneName(zone.getName());\n                vmResponse.setDns1(zone.getDns1());\n                vmResponse.setDns2(zone.getDns2());\n            }\n\n            List<? extends Nic> nics = ApiDBUtils.getNics(systemVM);\n            for (Nic singleNic : nics) {\n                long configId = singleNic.getNetworkId();\n                Network networkConf = ApiDBUtils.getNetwork(configId);\n\n                if (networkConf.getTrafficType() == TrafficType.Management) {\n                    vmResponse.setPrivateIp(singleNic.getIp4Address());\n                    vmResponse.setPrivateMacAddress(singleNic.getMacAddress());\n                    vmResponse.setPrivateNetmask(singleNic.getNetmask());\n                }\n\n                if (networkConf.getTrafficType() == TrafficType.Public) {\n                    vmResponse.setPublicIp(singleNic.getIp4Address());\n                    vmResponse.setPublicMacAddress(singleNic.getMacAddress());\n                    vmResponse.setPublicNetmask(singleNic.getNetmask());\n                    vmResponse.setGateway(singleNic.getGateway());\n                }\n            }\n        }\n\n        vmResponse.setObjectName(\"systemvm\");\n        return vmResponse;\n    }","id":107400,"modified_method":"@Override\n    public SystemVmResponse createSystemVm2Response(VirtualMachine systemVM) {\n        SystemVmResponse vmResponse = new SystemVmResponse();\n        if (systemVM instanceof SystemVm) {\n            SystemVm vm = (SystemVm) systemVM;\n\n            vmResponse.setId(vm.getId());\n            vmResponse.setSystemVmType(vm.getType().toString().toLowerCase());\n            vmResponse.setZoneId(vm.getDataCenterId());\n\n            vmResponse.setNetworkDomain(vm.getDomain());\n            vmResponse.setName(vm.getHostName());\n            vmResponse.setPodId(vm.getPodId());\n            vmResponse.setTemplateId(vm.getTemplateId());\n            vmResponse.setCreated(vm.getCreated());\n\n            if (vm.getHostId() != null) {\n                vmResponse.setHostId(vm.getHostId());\n                vmResponse.setHostName(ApiDBUtils.findHostById(vm.getHostId()).getName());\n            }\n\n            if (vm.getState() != null) {\n                vmResponse.setState(vm.getState().toString());\n            }\n\n            String instanceType = \"console_proxy\";\n            if (systemVM instanceof SecondaryStorageVmVO) {\n                instanceType = \"sec_storage_vm\"; // FIXME: this should be a\n                                                 // constant so that the async\n                                                 // jobs get updated with the\n                                                 // correct instance type, they\n                                                 // are using\n                                                 // different instance types at\n                                                 // the moment\n            }\n\n            AsyncJobVO asyncJob = ApiDBUtils.findInstancePendingAsyncJob(instanceType, vm.getId());\n            if (asyncJob != null) {\n                vmResponse.setJobId(asyncJob.getId());\n                vmResponse.setJobStatus(asyncJob.getStatus());\n            }\n\n            // for console proxies, add the active sessions\n            if (systemVM instanceof ConsoleProxyVO) {\n                ConsoleProxyVO proxy = (ConsoleProxyVO) systemVM;\n                vmResponse.setActiveViewerSessions(proxy.getActiveSession());\n            }\n\n            DataCenter zone = ApiDBUtils.findZoneById(vm.getDataCenterId());\n            if (zone != null) {\n                vmResponse.setZoneName(zone.getName());\n                vmResponse.setDns1(zone.getDns1());\n                vmResponse.setDns2(zone.getDns2());\n            }\n\n            List<? extends Nic> nics = ApiDBUtils.getNics(systemVM);\n            for (Nic singleNic : nics) {\n                Long configId = singleNic.getNetworkId();\n                Network networkConf = ApiDBUtils.getNetwork(configId);\n\n                if (networkConf.getTrafficType() == TrafficType.Management) {\n                    vmResponse.setPrivateIp(singleNic.getIp4Address());\n                    vmResponse.setPrivateMacAddress(singleNic.getMacAddress());\n                    vmResponse.setPrivateNetmask(singleNic.getNetmask());\n                }\n\n                if (networkConf.getTrafficType() == TrafficType.Public) {\n                    vmResponse.setPublicIp(singleNic.getIp4Address());\n                    vmResponse.setPublicMacAddress(singleNic.getMacAddress());\n                    vmResponse.setPublicNetmask(singleNic.getNetmask());\n                    vmResponse.setGateway(singleNic.getGateway());\n                }\n            }\n        }\n\n        vmResponse.setObjectName(\"systemvm\");\n        return vmResponse;\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public TemplateResponse createTemplateResponse(VirtualMachineTemplate template, Long snapshotId, long volumeId) {\n        TemplateResponse response = new TemplateResponse();\n        response.setId(template.getId());\n        response.setName(template.getName());\n        response.setDisplayText(template.getDisplayText());\n        response.setPublic(template.isPublicTemplate());\n        response.setPasswordEnabled(template.getEnablePassword());\n        response.setCrossZones(template.isCrossZones());\n\n        Volume volume = null;\n        if (snapshotId != null) {\n            Snapshot snapshot = ApiDBUtils.findSnapshotById(snapshotId);\n            volume = ApiDBUtils.findVolumeById(snapshot.getVolumeId());\n        } else {\n            volume = ApiDBUtils.findVolumeById(volumeId);\n        }\n\n        VMTemplateHostVO templateHostRef = ApiDBUtils.findTemplateHostRef(template.getId(), volume.getDataCenterId());\n        response.setCreated(templateHostRef.getCreated());\n        response.setReady(templateHostRef != null && templateHostRef.getDownloadState() == Status.DOWNLOADED);\n\n        GuestOS os = ApiDBUtils.findGuestOSById(template.getGuestOSId());\n        if (os != null) {\n            response.setOsTypeId(os.getId());\n            response.setOsTypeName(os.getDisplayName());\n        } else {\n            response.setOsTypeId(-1L);\n            response.setOsTypeName(\"\");\n        }\n\n        Account owner = ApiDBUtils.findAccountById(template.getAccountId());\n        if (owner != null) {\n            response.setAccount(owner.getAccountName());\n            response.setDomainId(owner.getDomainId());\n            response.setDomainName(ApiDBUtils.findDomainById(owner.getDomainId()).getName());\n        }\n\n        DataCenter zone = ApiDBUtils.findZoneById(volume.getDataCenterId());\n        if (zone != null) {\n            response.setZoneId(zone.getId());\n            response.setZoneName(zone.getName());\n        }\n\n        response.setObjectName(\"template\");\n        return response;\n\n    }","id":107401,"modified_method":"@Override\n    public TemplateResponse createTemplateResponse(VirtualMachineTemplate template, Long snapshotId, Long volumeId) {\n        TemplateResponse response = new TemplateResponse();\n        response.setId(template.getId());\n        response.setName(template.getName());\n        response.setDisplayText(template.getDisplayText());\n        response.setPublic(template.isPublicTemplate());\n        response.setPasswordEnabled(template.getEnablePassword());\n        response.setCrossZones(template.isCrossZones());\n\n        Volume volume = null;\n        if (snapshotId != null) {\n            Snapshot snapshot = ApiDBUtils.findSnapshotById(snapshotId);\n            volume = ApiDBUtils.findVolumeById(snapshot.getVolumeId());\n        } else {\n            volume = ApiDBUtils.findVolumeById(volumeId);\n        }\n\n        VMTemplateHostVO templateHostRef = ApiDBUtils.findTemplateHostRef(template.getId(), volume.getDataCenterId());\n        response.setCreated(templateHostRef.getCreated());\n        response.setReady(templateHostRef != null && templateHostRef.getDownloadState() == Status.DOWNLOADED);\n\n        GuestOS os = ApiDBUtils.findGuestOSById(template.getGuestOSId());\n        if (os != null) {\n            response.setOsTypeId(os.getId());\n            response.setOsTypeName(os.getDisplayName());\n        } else {\n            response.setOsTypeId(-1L);\n            response.setOsTypeName(\"\");\n        }\n\n        Account owner = ApiDBUtils.findAccountById(template.getAccountId());\n        if (owner != null) {\n            response.setAccount(owner.getAccountName());\n            response.setDomainId(owner.getDomainId());\n            response.setDomainName(ApiDBUtils.findDomainById(owner.getDomainId()).getName());\n        }\n\n        DataCenter zone = ApiDBUtils.findZoneById(volume.getDataCenterId());\n        if (zone != null) {\n            response.setZoneId(zone.getId());\n            response.setZoneName(zone.getName());\n        }\n\n        response.setObjectName(\"template\");\n        return response;\n\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"private List<CapacityVO> sumCapacities(List<? extends Capacity> hostCapacities) {           \n        Map<String, Long> totalCapacityMap = new HashMap<String, Long>();\n        Map<String, Long> usedCapacityMap = new HashMap<String, Long>();\n        \n        Set<Long> poolIdsToIgnore = new HashSet<Long>();\n        Criteria c = new Criteria();\n        // TODO:  implement\n        List<? extends StoragePoolVO> allStoragePools = ApiDBUtils.searchForStoragePools(c);\n        for (StoragePoolVO pool : allStoragePools) {\n            StoragePoolType poolType = pool.getPoolType();\n            if (!(poolType.equals(StoragePoolType.NetworkFilesystem) || poolType.equals(StoragePoolType.IscsiLUN))) {\n                poolIdsToIgnore.add(pool.getId());\n            }\n        }\n        \n        // collect all the capacity types, sum allocated/used and sum total...get one capacity number for each\n        for (Capacity capacity : hostCapacities) {\n            if (poolIdsToIgnore.contains(capacity.getHostOrPoolId())) {\n                continue;\n            }\n            \n            String key = capacity.getCapacityType() + \"_\" + capacity.getDataCenterId();\n            String keyForPodTotal = key + \"_-1\";\n            \n            boolean sumPodCapacity = false;\n            if (capacity.getPodId() != null) {\n                key += \"_\" + capacity.getPodId();\n                sumPodCapacity = true;\n            }\n\n            Long totalCapacity = totalCapacityMap.get(key);\n            Long usedCapacity = usedCapacityMap.get(key);\n\n            if (totalCapacity == null) {\n                totalCapacity = new Long(capacity.getTotalCapacity());\n            } else {\n                totalCapacity = new Long(capacity.getTotalCapacity() + totalCapacity.longValue());\n            }\n\n            if (usedCapacity == null) {\n                usedCapacity = new Long(capacity.getUsedCapacity());\n            } else {\n                usedCapacity = new Long(capacity.getUsedCapacity() + usedCapacity.longValue());\n            }\n\n            totalCapacityMap.put(key, totalCapacity);\n            usedCapacityMap.put(key, usedCapacity);\n            \n            if (sumPodCapacity) {\n                totalCapacity = totalCapacityMap.get(keyForPodTotal);\n                usedCapacity = usedCapacityMap.get(keyForPodTotal);\n\n                if (totalCapacity == null) {\n                    totalCapacity = new Long(capacity.getTotalCapacity());\n                } else {\n                    totalCapacity = new Long(capacity.getTotalCapacity() + totalCapacity.longValue());\n                }\n\n                if (usedCapacity == null) {\n                    usedCapacity = new Long(capacity.getUsedCapacity());\n                } else {\n                    usedCapacity = new Long(capacity.getUsedCapacity() + usedCapacity.longValue());\n                }\n\n                totalCapacityMap.put(keyForPodTotal, totalCapacity);\n                usedCapacityMap.put(keyForPodTotal, usedCapacity);\n            }\n        }\n\n        List<CapacityVO> summedCapacities = new ArrayList<CapacityVO>();\n        for (String key : totalCapacityMap.keySet()) {\n            CapacityVO summedCapacity = new CapacityVO();\n\n            StringTokenizer st = new StringTokenizer(key, \"_\");\n            summedCapacity.setCapacityType(Short.parseShort(st.nextToken()));\n            summedCapacity.setDataCenterId(Long.parseLong(st.nextToken()));\n            if (st.hasMoreTokens()) {\n                summedCapacity.setPodId(Long.parseLong(st.nextToken()));\n            }\n\n            summedCapacity.setTotalCapacity(totalCapacityMap.get(key));\n            summedCapacity.setUsedCapacity(usedCapacityMap.get(key));\n\n            summedCapacities.add(summedCapacity);\n        }\n        return summedCapacities;\n    }","id":107402,"modified_method":"private List<CapacityVO> sumCapacities(List<? extends Capacity> hostCapacities) {           \n        Map<String, Long> totalCapacityMap = new HashMap<String, Long>();\n        Map<String, Long> usedCapacityMap = new HashMap<String, Long>();\n        \n        Set<Long> poolIdsToIgnore = new HashSet<Long>();\n        Criteria c = new Criteria();\n        // TODO:  implement\n        List<? extends StoragePoolVO> allStoragePools = ApiDBUtils.searchForStoragePools(c);\n        for (StoragePoolVO pool : allStoragePools) {\n            StoragePoolType poolType = pool.getPoolType();\n            if (!(poolType.equals(StoragePoolType.NetworkFilesystem) || poolType.equals(StoragePoolType.IscsiLUN))) {\n                poolIdsToIgnore.add(pool.getId());\n            }\n        }\n        \n        // collect all the capacity types, sum allocated/used and sum total...get one capacity number for each\n        for (Capacity capacity : hostCapacities) {\n            if (poolIdsToIgnore.contains(capacity.getHostOrPoolId())) {\n                continue;\n            }\n            \n            String key = capacity.getCapacityType() + \"_\" + capacity.getDataCenterId();\n            String keyForPodTotal = key + \"_-1\";\n            \n            boolean sumPodCapacity = false;\n            if (capacity.getPodId() != null) {\n                key += \"_\" + capacity.getPodId();\n                sumPodCapacity = true;\n            }\n\n            Long totalCapacity = totalCapacityMap.get(key);\n            Long usedCapacity = usedCapacityMap.get(key);\n\n            if (totalCapacity == null) {\n                totalCapacity = new Long(capacity.getTotalCapacity());\n            } else {\n                totalCapacity = new Long(capacity.getTotalCapacity() + totalCapacity);\n            }\n\n            if (usedCapacity == null) {\n                usedCapacity = new Long(capacity.getUsedCapacity());\n            } else {\n                usedCapacity = new Long(capacity.getUsedCapacity() + usedCapacity);\n            }\n\n            totalCapacityMap.put(key, totalCapacity);\n            usedCapacityMap.put(key, usedCapacity);\n            \n            if (sumPodCapacity) {\n                totalCapacity = totalCapacityMap.get(keyForPodTotal);\n                usedCapacity = usedCapacityMap.get(keyForPodTotal);\n\n                if (totalCapacity == null) {\n                    totalCapacity = new Long(capacity.getTotalCapacity());\n                } else {\n                    totalCapacity = new Long(capacity.getTotalCapacity() + totalCapacity);\n                }\n\n                if (usedCapacity == null) {\n                    usedCapacity = new Long(capacity.getUsedCapacity());\n                } else {\n                    usedCapacity = new Long(capacity.getUsedCapacity() + usedCapacity);\n                }\n\n                totalCapacityMap.put(keyForPodTotal, totalCapacity);\n                usedCapacityMap.put(keyForPodTotal, usedCapacity);\n            }\n        }\n\n        List<CapacityVO> summedCapacities = new ArrayList<CapacityVO>();\n        for (String key : totalCapacityMap.keySet()) {\n            CapacityVO summedCapacity = new CapacityVO();\n\n            StringTokenizer st = new StringTokenizer(key, \"_\");\n            summedCapacity.setCapacityType(Short.parseShort(st.nextToken()));\n            summedCapacity.setDataCenterId(Long.parseLong(st.nextToken()));\n            if (st.hasMoreTokens()) {\n                summedCapacity.setPodId(Long.parseLong(st.nextToken()));\n            }\n\n            summedCapacity.setTotalCapacity(totalCapacityMap.get(key));\n            summedCapacity.setUsedCapacity(usedCapacityMap.get(key));\n\n            summedCapacities.add(summedCapacity);\n        }\n        return summedCapacities;\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public UserVmResponse createUserVmResponse(UserVm userVm) {\n        if (userVm.getPrivateIpAddress() == null) {\n            return createUserVm2Response(userVm);\n        }\n        UserVmResponse userVmResponse = new UserVmResponse();\n        Account acct = ApiDBUtils.findAccountById(Long.valueOf(userVm.getAccountId()));\n        // FIXME - this check should be done in searchForUserVm method in\n        // ManagementServerImpl;\n        // otherwise the number of vms returned is not going to match pageSize\n        // request parameter\n        if ((acct != null) && (acct.getRemoved() == null)) {\n            userVmResponse.setAccountName(acct.getAccountName());\n            userVmResponse.setDomainId(acct.getDomainId());\n            userVmResponse.setDomainName(ApiDBUtils.findDomainById(acct.getDomainId()).getName());\n        } else {\n            return null; // the account has been deleted, skip this VM in the\n                         // response\n        }\n\n        userVmResponse.setId(userVm.getId());\n        AsyncJobVO asyncJob = ApiDBUtils.findInstancePendingAsyncJob(\"vm_instance\", userVm.getId());\n        if (asyncJob != null) {\n            userVmResponse.setJobId(asyncJob.getId());\n            userVmResponse.setJobStatus(asyncJob.getStatus());\n        }\n\n        userVmResponse.setName(userVm.getHostName());\n        userVmResponse.setCreated(userVm.getCreated());\n        userVmResponse.setIpAddress(userVm.getPrivateIpAddress());\n        if (userVm.getState() != null) {\n            userVmResponse.setState(userVm.getState().toString());\n        }\n\n        userVmResponse.setHaEnable(userVm.isHaEnabled());\n\n        if (userVm.getDisplayName() != null) {\n            userVmResponse.setDisplayName(userVm.getDisplayName());\n        } else {\n            userVmResponse.setDisplayName(userVm.getHostName());\n        }\n\n        InstanceGroupVO group = ApiDBUtils.findInstanceGroupForVM(userVm.getId());\n        if (group != null) {\n            userVmResponse.setGroup(group.getName());\n            userVmResponse.setGroupId(group.getId());\n        }\n\n        // Data Center Info\n        userVmResponse.setZoneId(userVm.getDataCenterId());\n        userVmResponse.setZoneName(ApiDBUtils.findZoneById(userVm.getDataCenterId()).getName());\n\n        Account account = UserContext.current().getAccount();\n        // if user is an admin, display host id\n        if (((account == null) || (account.getType() == Account.ACCOUNT_TYPE_ADMIN)) && (userVm.getHostId() != null)) {\n            userVmResponse.setHostId(userVm.getHostId());\n            userVmResponse.setHostName(ApiDBUtils.findHostById(userVm.getHostId()).getName());\n        }\n\n        // Template Info\n        VMTemplateVO template = ApiDBUtils.findTemplateById(userVm.getTemplateId());\n        if (template != null) {\n            userVmResponse.setTemplateId(userVm.getTemplateId());\n            userVmResponse.setTemplateName(template.getName());\n            userVmResponse.setTemplateDisplayText(template.getDisplayText());\n            userVmResponse.setPasswordEnabled(template.getEnablePassword());\n        } else {\n            userVmResponse.setTemplateId(-1L);\n            userVmResponse.setTemplateName(\"ISO Boot\");\n            userVmResponse.setTemplateDisplayText(\"ISO Boot\");\n            userVmResponse.setPasswordEnabled(false);\n        }\n\n        if (userVm.getPassword() != null) {\n            userVmResponse.setPassword(userVm.getPassword());\n        }\n\n        // ISO Info\n        if (userVm.getIsoId() != null) {\n            VMTemplateVO iso = ApiDBUtils.findTemplateById(userVm.getIsoId().longValue());\n            if (iso != null) {\n                userVmResponse.setIsoId(userVm.getIsoId());\n                userVmResponse.setIsoName(iso.getName());\n            }\n        }\n\n        // Service Offering Info\n        ServiceOffering offering = ApiDBUtils.findServiceOfferingById(userVm.getServiceOfferingId());\n        userVmResponse.setServiceOfferingId(userVm.getServiceOfferingId());\n        userVmResponse.setServiceOfferingName(offering.getName());\n        userVmResponse.setCpuNumber(offering.getCpu());\n        userVmResponse.setCpuSpeed(offering.getSpeed());\n        userVmResponse.setMemory(offering.getRamSize());\n        userVmResponse.setForVirtualNetwork(offering.getGuestIpType().equals(GuestIpType.Virtualized));\n\n        VolumeVO rootVolume = ApiDBUtils.findRootVolume(userVm.getId());\n        if (rootVolume != null) {\n            userVmResponse.setRootDeviceId(rootVolume.getDeviceId());\n            String rootDeviceType = \"Not created\";\n            if (rootVolume.getPoolId() != null) {\n                StoragePoolVO storagePool = ApiDBUtils.findStoragePoolById(rootVolume.getPoolId());\n                rootDeviceType = storagePool.getPoolType().toString();\n            }\n            userVmResponse.setRootDeviceType(rootDeviceType);\n        }\n\n        // stats calculation\n        DecimalFormat decimalFormat = new DecimalFormat(\"#.##\");\n        String cpuUsed = null;\n        VmStats vmStats = ApiDBUtils.getVmStatistics(userVm.getId());\n        if (vmStats != null) {\n            float cpuUtil = (float) vmStats.getCPUUtilization();\n            cpuUsed = decimalFormat.format(cpuUtil) + \"%\";\n            userVmResponse.setCpuUsed(cpuUsed);\n\n            long networkKbRead = (long) vmStats.getNetworkReadKBs();\n            userVmResponse.setNetworkKbsRead(networkKbRead);\n\n            long networkKbWrite = (long) vmStats.getNetworkWriteKBs();\n            userVmResponse.setNetworkKbsWrite(networkKbWrite);\n        }\n\n        userVmResponse.setGuestOsId(userVm.getGuestOSId());\n        // network groups\n        userVmResponse.setNetworkGroupList(ApiDBUtils.getNetworkGroupsNamesForVm(userVm.getId()));\n        userVmResponse.setObjectName(\"virtualmachine\");\n        return userVmResponse;\n    }","id":107403,"modified_method":"@Override\n    public UserVmResponse createUserVmResponse(UserVm userVm) {\n        if (userVm.getPrivateIpAddress() == null) {\n            return createUserVm2Response(userVm);\n        }\n        UserVmResponse userVmResponse = new UserVmResponse();\n        Account acct = ApiDBUtils.findAccountById(Long.valueOf(userVm.getAccountId()));\n        // FIXME - this check should be done in searchForUserVm method in\n        // ManagementServerImpl;\n        // otherwise the number of vms returned is not going to match pageSize\n        // request parameter\n        if ((acct != null) && (acct.getRemoved() == null)) {\n            userVmResponse.setAccountName(acct.getAccountName());\n            userVmResponse.setDomainId(acct.getDomainId());\n            userVmResponse.setDomainName(ApiDBUtils.findDomainById(acct.getDomainId()).getName());\n        } else {\n            return null; // the account has been deleted, skip this VM in the\n                         // response\n        }\n\n        userVmResponse.setId(userVm.getId());\n        AsyncJobVO asyncJob = ApiDBUtils.findInstancePendingAsyncJob(\"vm_instance\", userVm.getId());\n        if (asyncJob != null) {\n            userVmResponse.setJobId(asyncJob.getId());\n            userVmResponse.setJobStatus(asyncJob.getStatus());\n        }\n\n        userVmResponse.setName(userVm.getHostName());\n        userVmResponse.setCreated(userVm.getCreated());\n        userVmResponse.setIpAddress(userVm.getPrivateIpAddress());\n        if (userVm.getState() != null) {\n            userVmResponse.setState(userVm.getState().toString());\n        }\n\n        userVmResponse.setHaEnable(userVm.isHaEnabled());\n\n        if (userVm.getDisplayName() != null) {\n            userVmResponse.setDisplayName(userVm.getDisplayName());\n        } else {\n            userVmResponse.setDisplayName(userVm.getHostName());\n        }\n\n        InstanceGroupVO group = ApiDBUtils.findInstanceGroupForVM(userVm.getId());\n        if (group != null) {\n            userVmResponse.setGroup(group.getName());\n            userVmResponse.setGroupId(group.getId());\n        }\n\n        // Data Center Info\n        userVmResponse.setZoneId(userVm.getDataCenterId());\n        userVmResponse.setZoneName(ApiDBUtils.findZoneById(userVm.getDataCenterId()).getName());\n\n        Account account = UserContext.current().getAccount();\n        // if user is an admin, display host id\n        if (((account == null) || (account.getType() == Account.ACCOUNT_TYPE_ADMIN)) && (userVm.getHostId() != null)) {\n            userVmResponse.setHostId(userVm.getHostId());\n            userVmResponse.setHostName(ApiDBUtils.findHostById(userVm.getHostId()).getName());\n        }\n\n        // Template Info\n        VMTemplateVO template = ApiDBUtils.findTemplateById(userVm.getTemplateId());\n        if (template != null) {\n            userVmResponse.setTemplateId(userVm.getTemplateId());\n            userVmResponse.setTemplateName(template.getName());\n            userVmResponse.setTemplateDisplayText(template.getDisplayText());\n            userVmResponse.setPasswordEnabled(template.getEnablePassword());\n        } else {\n            userVmResponse.setTemplateId(-1L);\n            userVmResponse.setTemplateName(\"ISO Boot\");\n            userVmResponse.setTemplateDisplayText(\"ISO Boot\");\n            userVmResponse.setPasswordEnabled(false);\n        }\n\n        if (userVm.getPassword() != null) {\n            userVmResponse.setPassword(userVm.getPassword());\n        }\n\n        // ISO Info\n        if (userVm.getIsoId() != null) {\n            VMTemplateVO iso = ApiDBUtils.findTemplateById(userVm.getIsoId());\n            if (iso != null) {\n                userVmResponse.setIsoId(userVm.getIsoId());\n                userVmResponse.setIsoName(iso.getName());\n            }\n        }\n\n        // Service Offering Info\n        ServiceOffering offering = ApiDBUtils.findServiceOfferingById(userVm.getServiceOfferingId());\n        userVmResponse.setServiceOfferingId(userVm.getServiceOfferingId());\n        userVmResponse.setServiceOfferingName(offering.getName());\n        userVmResponse.setCpuNumber(offering.getCpu());\n        userVmResponse.setCpuSpeed(offering.getSpeed());\n        userVmResponse.setMemory(offering.getRamSize());\n        userVmResponse.setForVirtualNetwork(offering.getGuestIpType().equals(GuestIpType.Virtualized));\n\n        VolumeVO rootVolume = ApiDBUtils.findRootVolume(userVm.getId());\n        if (rootVolume != null) {\n            userVmResponse.setRootDeviceId(rootVolume.getDeviceId());\n            String rootDeviceType = \"Not created\";\n            if (rootVolume.getPoolId() != null) {\n                StoragePoolVO storagePool = ApiDBUtils.findStoragePoolById(rootVolume.getPoolId());\n                rootDeviceType = storagePool.getPoolType().toString();\n            }\n            userVmResponse.setRootDeviceType(rootDeviceType);\n        }\n\n        // stats calculation\n        DecimalFormat decimalFormat = new DecimalFormat(\"#.##\");\n        String cpuUsed = null;\n        VmStats vmStats = ApiDBUtils.getVmStatistics(userVm.getId());\n        if (vmStats != null) {\n            float cpuUtil = (float) vmStats.getCPUUtilization();\n            cpuUsed = decimalFormat.format(cpuUtil) + \"%\";\n            userVmResponse.setCpuUsed(cpuUsed);\n\n            Long networkKbRead = Double.doubleToLongBits(vmStats.getNetworkReadKBs());\n            userVmResponse.setNetworkKbsRead(networkKbRead);\n\n            Long networkKbWrite = Double.doubleToLongBits(vmStats.getNetworkWriteKBs());\n            userVmResponse.setNetworkKbsWrite(networkKbWrite);\n        }\n\n        userVmResponse.setGuestOsId(userVm.getGuestOSId());\n        // network groups\n        userVmResponse.setNetworkGroupList(ApiDBUtils.getNetworkGroupsNamesForVm(userVm.getId()));\n        userVmResponse.setObjectName(\"virtualmachine\");\n        return userVmResponse;\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void createTemplateResponse(List<TemplateResponse> responses, VirtualMachineTemplate template, boolean onlyReady, Long zoneId, boolean isAdmin, Account account) {\n        List<VMTemplateHostVO> templateHostRefsForTemplate = ApiDBUtils.listTemplateHostBy(template.getId(), zoneId);\n\n        for (VMTemplateHostVO templateHostRef : templateHostRefsForTemplate) {\n            if (onlyReady && templateHostRef.getDownloadState() != Status.DOWNLOADED) {\n                continue;\n            }\n\n            TemplateResponse templateResponse = new TemplateResponse();\n            templateResponse.setId(template.getId());\n            templateResponse.setName(template.getName());\n            templateResponse.setDisplayText(template.getDisplayText());\n            templateResponse.setPublic(template.isPublicTemplate());\n            templateResponse.setCreated(templateHostRef.getCreated());\n\n            templateResponse.setReady(templateHostRef.getDownloadState()==Status.DOWNLOADED);\n            templateResponse.setFeatured(template.isFeatured());\n            templateResponse.setPasswordEnabled(template.getEnablePassword());\n            templateResponse.setCrossZones(template.isCrossZones());\n            templateResponse.setFormat(template.getFormat());\n            if (template.getTemplateType() != null) {\n                templateResponse.setTemplateType(template.getTemplateType().toString());\n            }\n            templateResponse.setHypervisor(template.getHypervisorType().toString());\n            \n            GuestOS os = ApiDBUtils.findGuestOSById(template.getGuestOSId());\n            if (os != null) {\n                templateResponse.setOsTypeId(os.getId());\n                templateResponse.setOsTypeName(os.getDisplayName());\n            } else {\n                templateResponse.setOsTypeId(-1L);\n                templateResponse.setOsTypeName(\"\");\n            }\n            \n            // add account ID and name\n            Account owner = ApiDBUtils.findAccountById(template.getAccountId());\n            if (owner != null) {\n                templateResponse.setAccount(owner.getAccountName());\n                templateResponse.setDomainId(owner.getDomainId());\n                templateResponse.setDomainName(ApiDBUtils.findDomainById(owner.getDomainId()).getName());\n            }\n            \n            HostVO host = ApiDBUtils.findHostById(templateHostRef.getHostId());\n            DataCenterVO datacenter = ApiDBUtils.findZoneById(host.getDataCenterId());\n            \n            // Add the zone ID\n            templateResponse.setZoneId(host.getDataCenterId());\n            templateResponse.setZoneName(datacenter.getName());\n            \n            // If the user is an admin, add the template download status\n            if (isAdmin || account.getId() == template.getAccountId()) {\n                // add download status\n                if (templateHostRef.getDownloadState()!=Status.DOWNLOADED) {\n                    String templateStatus = \"Processing\";\n                    if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOAD_IN_PROGRESS) {\n                        if (templateHostRef.getDownloadPercent() == 100) {\n                            templateStatus = \"Installing Template\";\n                        } else {\n                            templateStatus = templateHostRef.getDownloadPercent() + \"% Downloaded\";\n                        }\n                    } else {\n                        templateStatus = templateHostRef.getErrorString();\n                    }\n                    templateResponse.setStatus(templateStatus);\n                } else if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED) {\n                    templateResponse.setStatus(\"Download Complete\");\n                } else {\n                    templateResponse.setStatus(\"Successfully Installed\");\n                }\n            }\n            \n            long templateSize = templateHostRef.getSize();\n            if (templateSize > 0) {\n                templateResponse.setSize(templateSize);\n            }\n            \n            AsyncJobVO asyncJob = ApiDBUtils.findInstancePendingAsyncJob(\"vm_template\", template.getId());\n            if (asyncJob != null) {\n                templateResponse.setJobId(asyncJob.getId());\n                templateResponse.setJobStatus(asyncJob.getStatus());\n            }\n\n            templateResponse.setObjectName(\"template\");\n            responses.add(templateResponse);\n        }\n    }","id":107404,"modified_method":"@Override\n    public void createTemplateResponse(List<TemplateResponse> responses, VirtualMachineTemplate template, boolean onlyReady, Long zoneId, boolean isAdmin, Account account) {\n        List<VMTemplateHostVO> templateHostRefsForTemplate = ApiDBUtils.listTemplateHostBy(template.getId(), zoneId);\n\n        for (VMTemplateHostVO templateHostRef : templateHostRefsForTemplate) {\n            if (onlyReady && templateHostRef.getDownloadState() != Status.DOWNLOADED) {\n                continue;\n            }\n\n            TemplateResponse templateResponse = new TemplateResponse();\n            templateResponse.setId(template.getId());\n            templateResponse.setName(template.getName());\n            templateResponse.setDisplayText(template.getDisplayText());\n            templateResponse.setPublic(template.isPublicTemplate());\n            templateResponse.setCreated(templateHostRef.getCreated());\n\n            templateResponse.setReady(templateHostRef.getDownloadState()==Status.DOWNLOADED);\n            templateResponse.setFeatured(template.isFeatured());\n            templateResponse.setPasswordEnabled(template.getEnablePassword());\n            templateResponse.setCrossZones(template.isCrossZones());\n            templateResponse.setFormat(template.getFormat());\n            if (template.getTemplateType() != null) {\n                templateResponse.setTemplateType(template.getTemplateType().toString());\n            }\n            templateResponse.setHypervisor(template.getHypervisorType().toString());\n            \n            GuestOS os = ApiDBUtils.findGuestOSById(template.getGuestOSId());\n            if (os != null) {\n                templateResponse.setOsTypeId(os.getId());\n                templateResponse.setOsTypeName(os.getDisplayName());\n            } else {\n                templateResponse.setOsTypeId(-1L);\n                templateResponse.setOsTypeName(\"\");\n            }\n            \n            // add account ID and name\n            Account owner = ApiDBUtils.findAccountById(template.getAccountId());\n            if (owner != null) {\n                templateResponse.setAccount(owner.getAccountName());\n                templateResponse.setDomainId(owner.getDomainId());\n                templateResponse.setDomainName(ApiDBUtils.findDomainById(owner.getDomainId()).getName());\n            }\n            \n            HostVO host = ApiDBUtils.findHostById(templateHostRef.getHostId());\n            DataCenterVO datacenter = ApiDBUtils.findZoneById(host.getDataCenterId());\n            \n            // Add the zone ID\n            templateResponse.setZoneId(host.getDataCenterId());\n            templateResponse.setZoneName(datacenter.getName());\n            \n            // If the user is an admin, add the template download status\n            if (isAdmin || account.getId() == template.getAccountId()) {\n                // add download status\n                if (templateHostRef.getDownloadState()!=Status.DOWNLOADED) {\n                    String templateStatus = \"Processing\";\n                    if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOAD_IN_PROGRESS) {\n                        if (templateHostRef.getDownloadPercent() == 100) {\n                            templateStatus = \"Installing Template\";\n                        } else {\n                            templateStatus = templateHostRef.getDownloadPercent() + \"% Downloaded\";\n                        }\n                    } else {\n                        templateStatus = templateHostRef.getErrorString();\n                    }\n                    templateResponse.setStatus(templateStatus);\n                } else if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED) {\n                    templateResponse.setStatus(\"Download Complete\");\n                } else {\n                    templateResponse.setStatus(\"Successfully Installed\");\n                }\n            }\n            \n            Long templateSize = templateHostRef.getSize();\n            if (templateSize > 0) {\n                templateResponse.setSize(templateSize);\n            }\n            \n            AsyncJobVO asyncJob = ApiDBUtils.findInstancePendingAsyncJob(\"vm_template\", template.getId());\n            if (asyncJob != null) {\n                templateResponse.setJobId(asyncJob.getId());\n                templateResponse.setJobStatus(asyncJob.getStatus());\n            }\n\n            templateResponse.setObjectName(\"template\");\n            responses.add(templateResponse);\n        }\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void synchronizeCommand(Object job, String syncObjType, long syncObjId) {\n        ApiDBUtils.synchronizeCommand(job, syncObjType, syncObjId);\n    }","id":107405,"modified_method":"@Override\n    public void synchronizeCommand(Object job, String syncObjType, Long syncObjId) {\n        ApiDBUtils.synchronizeCommand(job, syncObjType, syncObjId);\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public Account findAccountByNameDomain(String accountName, long domainId) {\n        return ApiDBUtils.findAccountByNameDomain(accountName, domainId);        \n    }","id":107406,"modified_method":"@Override\n    public Account findAccountByNameDomain(String accountName, Long domainId) {\n        return ApiDBUtils.findAccountByNameDomain(accountName, domainId);        \n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public Volume findVolumeById(long volumeId) {\n        return ApiDBUtils.findVolumeById(volumeId);\n    }","id":107407,"modified_method":"@Override\n    public Volume findVolumeById(Long volumeId) {\n        return ApiDBUtils.findVolumeById(volumeId);\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public User findUserById(long userId) {\n        return ApiDBUtils.findUserById(userId);\n    }","id":107408,"modified_method":"@Override\n    public User findUserById(Long userId) {\n        return ApiDBUtils.findUserById(userId);\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public TemplateResponse createTemplateResponse(VirtualMachineTemplate template, long destZoneId) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        if (template != null) {\n            templateResponse.setId(template.getId());\n            templateResponse.setName(template.getName());\n            templateResponse.setDisplayText(template.getDisplayText());\n            templateResponse.setPublic(template.isPublicTemplate());\n            templateResponse.setBootable(template.isBootable());\n            templateResponse.setFeatured(template.isFeatured());\n            templateResponse.setCrossZones(template.isCrossZones());\n            templateResponse.setCreated(template.getCreated());\n            templateResponse.setFormat(template.getFormat());\n            templateResponse.setPasswordEnabled(template.getEnablePassword());\n            templateResponse.setZoneId(destZoneId);\n            templateResponse.setZoneName(ApiDBUtils.findZoneById(destZoneId).getName());\n             \n            GuestOS os = ApiDBUtils.findGuestOSById(template.getGuestOSId());\n            if (os != null) {\n                templateResponse.setOsTypeId(os.getId());\n                templateResponse.setOsTypeName(os.getDisplayName());\n            } else {\n                templateResponse.setOsTypeId(-1L);\n                templateResponse.setOsTypeName(\"\");\n            }\n                \n            // add account ID and name\n            Account owner = ApiDBUtils.findAccountById(template.getAccountId());\n            if (owner != null) {\n                templateResponse.setAccount(owner.getAccountName());\n                templateResponse.setDomainId(owner.getDomainId());\n                templateResponse.setDomainName(ApiDBUtils.findDomainById(owner.getDomainId()).getName());\n            }\n            \n            //set status \n            Account account = UserContext.current().getAccount();\n            boolean isAdmin = false;\n            if ((account == null) || (account.getType() == Account.ACCOUNT_TYPE_ADMIN) || (account.getType() == Account.ACCOUNT_TYPE_DOMAIN_ADMIN)) {\n                isAdmin = true;\n            }\n            \n            //Return download status for admin users\n            VMTemplateHostVO templateHostRef = ApiDBUtils.findTemplateHostRef(template.getId(), destZoneId);\n            \n            if (isAdmin || template.getAccountId() == account.getId()) {\n                if (templateHostRef.getDownloadState()!=Status.DOWNLOADED) {\n                    String templateStatus = \"Processing\";\n                    if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOAD_IN_PROGRESS) {\n                        if (templateHostRef.getDownloadPercent() == 100) {\n                            templateStatus = \"Installing Template\";\n                        } else {\n                            templateStatus = templateHostRef.getDownloadPercent() + \"% Downloaded\";\n                        }\n                    } else {\n                        templateStatus = templateHostRef.getErrorString();\n                    }\n                    templateResponse.setStatus(templateStatus);\n                } else if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED) {\n                    templateResponse.setStatus(\"Download Complete\");\n                } else {\n                    templateResponse.setStatus(\"Successfully Installed\");\n                }\n            }\n            \n            templateResponse.setReady(templateHostRef != null && templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED);\n            \n        } else {\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Failed to copy template\");\n        }\n        \n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }","id":107409,"modified_method":"@Override\n    public TemplateResponse createTemplateResponse(VirtualMachineTemplate template, Long destZoneId) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        if (template != null) {\n            templateResponse.setId(template.getId());\n            templateResponse.setName(template.getName());\n            templateResponse.setDisplayText(template.getDisplayText());\n            templateResponse.setPublic(template.isPublicTemplate());\n            templateResponse.setBootable(template.isBootable());\n            templateResponse.setFeatured(template.isFeatured());\n            templateResponse.setCrossZones(template.isCrossZones());\n            templateResponse.setCreated(template.getCreated());\n            templateResponse.setFormat(template.getFormat());\n            templateResponse.setPasswordEnabled(template.getEnablePassword());\n            templateResponse.setZoneId(destZoneId);\n            templateResponse.setZoneName(ApiDBUtils.findZoneById(destZoneId).getName());\n             \n            GuestOS os = ApiDBUtils.findGuestOSById(template.getGuestOSId());\n            if (os != null) {\n                templateResponse.setOsTypeId(os.getId());\n                templateResponse.setOsTypeName(os.getDisplayName());\n            } else {\n                templateResponse.setOsTypeId(-1L);\n                templateResponse.setOsTypeName(\"\");\n            }\n                \n            // add account ID and name\n            Account owner = ApiDBUtils.findAccountById(template.getAccountId());\n            if (owner != null) {\n                templateResponse.setAccount(owner.getAccountName());\n                templateResponse.setDomainId(owner.getDomainId());\n                templateResponse.setDomainName(ApiDBUtils.findDomainById(owner.getDomainId()).getName());\n            }\n            \n            //set status \n            Account account = UserContext.current().getAccount();\n            boolean isAdmin = false;\n            if ((account == null) || (account.getType() == Account.ACCOUNT_TYPE_ADMIN) || (account.getType() == Account.ACCOUNT_TYPE_DOMAIN_ADMIN)) {\n                isAdmin = true;\n            }\n            \n            //Return download status for admin users\n            VMTemplateHostVO templateHostRef = ApiDBUtils.findTemplateHostRef(template.getId(), destZoneId);\n            \n            if (isAdmin || template.getAccountId() == account.getId()) {\n                if (templateHostRef.getDownloadState()!=Status.DOWNLOADED) {\n                    String templateStatus = \"Processing\";\n                    if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOAD_IN_PROGRESS) {\n                        if (templateHostRef.getDownloadPercent() == 100) {\n                            templateStatus = \"Installing Template\";\n                        } else {\n                            templateStatus = templateHostRef.getDownloadPercent() + \"% Downloaded\";\n                        }\n                    } else {\n                        templateStatus = templateHostRef.getErrorString();\n                    }\n                    templateResponse.setStatus(templateStatus);\n                } else if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED) {\n                    templateResponse.setStatus(\"Download Complete\");\n                } else {\n                    templateResponse.setStatus(\"Successfully Installed\");\n                }\n            }\n            \n            templateResponse.setReady(templateHostRef != null && templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED);\n            \n        } else {\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Failed to copy template\");\n        }\n        \n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public StoragePoolResponse createStoragePoolResponse(StoragePool pool) {\n        StoragePoolResponse poolResponse = new StoragePoolResponse();\n        poolResponse.setId(pool.getId());\n        poolResponse.setName(pool.getName());\n        poolResponse.setState(pool.getStatus());\n        poolResponse.setPath(pool.getPath());\n        poolResponse.setIpAddress(pool.getHostAddress());\n        poolResponse.setZoneId(pool.getDataCenterId());\n        poolResponse.setZoneName(ApiDBUtils.findZoneById(pool.getDataCenterId()).getName());\n        if (pool.getPoolType() != null) {\n            poolResponse.setType(pool.getPoolType().toString());\n        }\n        if (pool.getPodId() != null) {\n            poolResponse.setPodId(pool.getPodId());\n            poolResponse.setPodName(ApiDBUtils.findPodById(pool.getPodId()).getName());\n        }\n        if (pool.getCreated() != null) {\n            poolResponse.setCreated(pool.getCreated());\n        }\n\n        StorageStats stats = ApiDBUtils.getStoragePoolStatistics(pool.getId());\n        long capacity = pool.getCapacityBytes();\n        long available = pool.getAvailableBytes();\n        long used = capacity - available;\n\n        if (stats != null) {\n            used = stats.getByteUsed();\n            available = capacity - used;\n        }\n\n        poolResponse.setDiskSizeTotal(pool.getCapacityBytes());\n        poolResponse.setDiskSizeAllocated(used);\n\n        if (pool.getClusterId() != null) {\n            ClusterVO cluster = ApiDBUtils.findClusterById(pool.getClusterId());\n            poolResponse.setClusterId(cluster.getId());\n            poolResponse.setClusterName(cluster.getName());\n        }\n        poolResponse.setTags(ApiDBUtils.getStoragePoolTags(pool.getId()));\n        poolResponse.setObjectName(\"storagepool\");\n        return poolResponse;\n    }","id":107410,"modified_method":"@Override\n    public StoragePoolResponse createStoragePoolResponse(StoragePool pool) {\n        StoragePoolResponse poolResponse = new StoragePoolResponse();\n        poolResponse.setId(pool.getId());\n        poolResponse.setName(pool.getName());\n        poolResponse.setState(pool.getStatus());\n        poolResponse.setPath(pool.getPath());\n        poolResponse.setIpAddress(pool.getHostAddress());\n        poolResponse.setZoneId(pool.getDataCenterId());\n        poolResponse.setZoneName(ApiDBUtils.findZoneById(pool.getDataCenterId()).getName());\n        if (pool.getPoolType() != null) {\n            poolResponse.setType(pool.getPoolType().toString());\n        }\n        if (pool.getPodId() != null) {\n            poolResponse.setPodId(pool.getPodId());\n            poolResponse.setPodName(ApiDBUtils.findPodById(pool.getPodId()).getName());\n        }\n        if (pool.getCreated() != null) {\n            poolResponse.setCreated(pool.getCreated());\n        }\n\n        StorageStats stats = ApiDBUtils.getStoragePoolStatistics(pool.getId());\n        Long capacity = pool.getCapacityBytes();\n        Long available = pool.getAvailableBytes();\n        Long used = capacity - available;\n\n        if (stats != null) {\n            used = stats.getByteUsed();\n            available = capacity - used;\n        }\n\n        poolResponse.setDiskSizeTotal(pool.getCapacityBytes());\n        poolResponse.setDiskSizeAllocated(used);\n\n        if (pool.getClusterId() != null) {\n            ClusterVO cluster = ApiDBUtils.findClusterById(pool.getClusterId());\n            poolResponse.setClusterId(cluster.getId());\n            poolResponse.setClusterName(cluster.getName());\n        }\n        poolResponse.setTags(ApiDBUtils.getStoragePoolTags(pool.getId()));\n        poolResponse.setObjectName(\"storagepool\");\n        return poolResponse;\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public TemplateResponse createIsoResponse3(VirtualMachineTemplate iso, long destZoneId) {\n        TemplateResponse isoResponse = new TemplateResponse();\n        if (iso != null) {\n            isoResponse.setId(iso.getId());\n            isoResponse.setName(iso.getName());\n            isoResponse.setDisplayText(iso.getDisplayText());\n            isoResponse.setPublic(iso.isPublicTemplate());\n            isoResponse.setBootable(iso.isBootable());\n            isoResponse.setFeatured(iso.isFeatured());\n            isoResponse.setCrossZones(iso.isCrossZones());\n            isoResponse.setCreated(iso.getCreated());\n            isoResponse.setZoneId(destZoneId);\n            isoResponse.setZoneName(ApiDBUtils.findZoneById(destZoneId).getName());\n             \n            GuestOS os = ApiDBUtils.findGuestOSById(iso.getGuestOSId());\n            if (os != null) {\n                isoResponse.setOsTypeId(os.getId());\n                isoResponse.setOsTypeName(os.getDisplayName());\n            } else {\n                isoResponse.setOsTypeId(-1L);\n                isoResponse.setOsTypeName(\"\");\n            }\n                \n            // add account ID and name\n            Account owner = ApiDBUtils.findAccountById(iso.getAccountId());\n            if (owner != null) {\n                isoResponse.setAccount(owner.getAccountName());\n                isoResponse.setDomainId(owner.getDomainId());\n                isoResponse.setDomainName(ApiDBUtils.findDomainById(owner.getDomainId()).getName());\n            }\n            \n            //set status \n            Account account = UserContext.current().getAccount();\n            boolean isAdmin = false;\n            if ((account == null) || (account.getType() == Account.ACCOUNT_TYPE_ADMIN) || (account.getType() == Account.ACCOUNT_TYPE_DOMAIN_ADMIN)) {\n                isAdmin = true;\n            }\n            \n            //Return download status for admin users\n            VMTemplateHostVO templateHostRef = ApiDBUtils.findTemplateHostRef(iso.getId(), destZoneId);\n            \n            if (isAdmin || iso.getAccountId() == account.getId()) {\n                if (templateHostRef.getDownloadState()!=Status.DOWNLOADED) {\n                    String templateStatus = \"Processing\";\n                    if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOAD_IN_PROGRESS) {\n                        if (templateHostRef.getDownloadPercent() == 100) {\n                            templateStatus = \"Installing Template\";\n                        } else {\n                            templateStatus = templateHostRef.getDownloadPercent() + \"% Downloaded\";\n                        }\n                    } else {\n                        templateStatus = templateHostRef.getErrorString();\n                    }\n                    isoResponse.setStatus(templateStatus);\n                } else if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED) {\n                    isoResponse.setStatus(\"Download Complete\");\n                } else {\n                    isoResponse.setStatus(\"Successfully Installed\");\n                }\n            }\n            \n            isoResponse.setReady(templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED);\n            \n        } else {\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Failed to copy iso\");\n        }\n\n        isoResponse.setObjectName(\"iso\");\n        return isoResponse;\n    }","id":107411,"modified_method":"@Override\n    public TemplateResponse createIsoResponse3(VirtualMachineTemplate iso, Long destZoneId) {\n        TemplateResponse isoResponse = new TemplateResponse();\n        if (iso != null) {\n            isoResponse.setId(iso.getId());\n            isoResponse.setName(iso.getName());\n            isoResponse.setDisplayText(iso.getDisplayText());\n            isoResponse.setPublic(iso.isPublicTemplate());\n            isoResponse.setBootable(iso.isBootable());\n            isoResponse.setFeatured(iso.isFeatured());\n            isoResponse.setCrossZones(iso.isCrossZones());\n            isoResponse.setCreated(iso.getCreated());\n            isoResponse.setZoneId(destZoneId);\n            isoResponse.setZoneName(ApiDBUtils.findZoneById(destZoneId).getName());\n             \n            GuestOS os = ApiDBUtils.findGuestOSById(iso.getGuestOSId());\n            if (os != null) {\n                isoResponse.setOsTypeId(os.getId());\n                isoResponse.setOsTypeName(os.getDisplayName());\n            } else {\n                isoResponse.setOsTypeId(-1L);\n                isoResponse.setOsTypeName(\"\");\n            }\n                \n            // add account ID and name\n            Account owner = ApiDBUtils.findAccountById(iso.getAccountId());\n            if (owner != null) {\n                isoResponse.setAccount(owner.getAccountName());\n                isoResponse.setDomainId(owner.getDomainId());\n                isoResponse.setDomainName(ApiDBUtils.findDomainById(owner.getDomainId()).getName());\n            }\n            \n            //set status \n            Account account = UserContext.current().getAccount();\n            boolean isAdmin = false;\n            if ((account == null) || (account.getType() == Account.ACCOUNT_TYPE_ADMIN) || (account.getType() == Account.ACCOUNT_TYPE_DOMAIN_ADMIN)) {\n                isAdmin = true;\n            }\n            \n            //Return download status for admin users\n            VMTemplateHostVO templateHostRef = ApiDBUtils.findTemplateHostRef(iso.getId(), destZoneId);\n            \n            if (isAdmin || iso.getAccountId() == account.getId()) {\n                if (templateHostRef.getDownloadState()!=Status.DOWNLOADED) {\n                    String templateStatus = \"Processing\";\n                    if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOAD_IN_PROGRESS) {\n                        if (templateHostRef.getDownloadPercent() == 100) {\n                            templateStatus = \"Installing Template\";\n                        } else {\n                            templateStatus = templateHostRef.getDownloadPercent() + \"% Downloaded\";\n                        }\n                    } else {\n                        templateStatus = templateHostRef.getErrorString();\n                    }\n                    isoResponse.setStatus(templateStatus);\n                } else if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED) {\n                    isoResponse.setStatus(\"Download Complete\");\n                } else {\n                    isoResponse.setStatus(\"Successfully Installed\");\n                }\n            }\n            \n            isoResponse.setReady(templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED);\n            \n        } else {\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Failed to copy iso\");\n        }\n\n        isoResponse.setObjectName(\"iso\");\n        return isoResponse;\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public UserVm findUserVmById(long vmId) {\n        return ApiDBUtils.findUserVmById(vmId);\n\n    }","id":107412,"modified_method":"@Override\n    public UserVm findUserVmById(Long vmId) {\n        return ApiDBUtils.findUserVmById(vmId);\n\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public AccountResponse createAccountResponse(Account account) {\n        boolean accountIsAdmin = (account.getType() == Account.ACCOUNT_TYPE_ADMIN);\n        AccountResponse accountResponse = new AccountResponse();\n        accountResponse.setId(account.getId());\n        accountResponse.setName(account.getAccountName());\n        accountResponse.setAccountType(account.getType());\n        accountResponse.setDomainId(account.getDomainId());\n        accountResponse.setDomainName(ApiDBUtils.findDomainById(account.getDomainId()).getName());\n        accountResponse.setState(account.getState());\n\n        // get network stat\n        List<UserStatisticsVO> stats = ApiDBUtils.listUserStatsBy(account.getId());\n        if (stats == null) {\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Internal error searching for user stats\");\n        }\n\n        long bytesSent = 0;\n        long bytesReceived = 0;\n        for (UserStatisticsVO stat : stats) {\n            long rx = stat.getNetBytesReceived() + stat.getCurrentBytesReceived();\n            long tx = stat.getNetBytesSent() + stat.getCurrentBytesSent();\n            bytesReceived = bytesReceived + Long.valueOf(rx);\n            bytesSent = bytesSent + Long.valueOf(tx);\n        }\n        accountResponse.setBytesReceived(bytesReceived);\n        accountResponse.setBytesSent(bytesSent);\n\n        // Get resource limits and counts\n\n        long vmLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.user_vm, account.getId());\n        String vmLimitDisplay = (accountIsAdmin || vmLimit == -1) ? \"Unlimited\" : String.valueOf(vmLimit);\n        long vmTotal = ApiDBUtils.getResourceCount(ResourceType.user_vm, account.getId());\n        String vmAvail = (accountIsAdmin || vmLimit == -1) ? \"Unlimited\" : String.valueOf(vmLimit - vmTotal);\n        accountResponse.setVmLimit(vmLimitDisplay);\n        accountResponse.setVmTotal(vmTotal);\n        accountResponse.setVmAvailable(vmAvail);\n\n        long ipLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.public_ip, account.getId());\n        String ipLimitDisplay = (accountIsAdmin || ipLimit == -1) ? \"Unlimited\" : String.valueOf(ipLimit);\n        long ipTotal = ApiDBUtils.getResourceCount(ResourceType.public_ip, account.getId());\n        String ipAvail = (accountIsAdmin || ipLimit == -1) ? \"Unlimited\" : String.valueOf(ipLimit - ipTotal);\n        accountResponse.setIpLimit(ipLimitDisplay);\n        accountResponse.setIpTotal(ipTotal);\n        accountResponse.setIpAvailable(ipAvail);\n\n        long volumeLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.volume, account.getId());\n        String volumeLimitDisplay = (accountIsAdmin || volumeLimit == -1) ? \"Unlimited\" : String.valueOf(volumeLimit);\n        long volumeTotal = ApiDBUtils.getResourceCount(ResourceType.volume, account.getId());\n        String volumeAvail = (accountIsAdmin || volumeLimit == -1) ? \"Unlimited\" : String.valueOf(volumeLimit - volumeTotal);\n        accountResponse.setVolumeLimit(volumeLimitDisplay);\n        accountResponse.setVolumeTotal(volumeTotal);\n        accountResponse.setVolumeAvailable(volumeAvail);\n\n        long snapshotLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.snapshot, account.getId());\n        String snapshotLimitDisplay = (accountIsAdmin || snapshotLimit == -1) ? \"Unlimited\" : String.valueOf(snapshotLimit);\n        long snapshotTotal = ApiDBUtils.getResourceCount(ResourceType.snapshot, account.getId());\n        String snapshotAvail = (accountIsAdmin || snapshotLimit == -1) ? \"Unlimited\" : String.valueOf(snapshotLimit - snapshotTotal);\n        accountResponse.setSnapshotLimit(snapshotLimitDisplay);\n        accountResponse.setSnapshotTotal(snapshotTotal);\n        accountResponse.setSnapshotAvailable(snapshotAvail);\n\n        long templateLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.template, account.getId());\n        String templateLimitDisplay = (accountIsAdmin || templateLimit == -1) ? \"Unlimited\" : String.valueOf(templateLimit);\n        long templateTotal = ApiDBUtils.getResourceCount(ResourceType.template, account.getId());\n        String templateAvail = (accountIsAdmin || templateLimit == -1) ? \"Unlimited\" : String.valueOf(templateLimit - templateTotal);\n        accountResponse.setTemplateLimit(templateLimitDisplay);\n        accountResponse.setTemplateTotal(templateTotal);\n        accountResponse.setTemplateAvailable(templateAvail);\n\n        // Get stopped and running VMs\n        int vmStopped = 0;\n        int vmRunning = 0;\n\n        Long[] accountIds = new Long[1];\n        accountIds[0] = account.getId();\n\n        Criteria c1 = new Criteria();\n        c1.addCriteria(Criteria.ACCOUNTID, accountIds);\n        List<? extends UserVm> virtualMachines = ApiDBUtils.searchForUserVMs(c1);\n\n        // get Running/Stopped VMs\n        for (Iterator<? extends UserVm> iter = virtualMachines.iterator(); iter.hasNext();) {\n            // count how many stopped/running vms we have\n            UserVm vm = iter.next();\n\n            if (vm.getState() == State.Stopped) {\n                vmStopped++;\n            } else if (vm.getState() == State.Running) {\n                vmRunning++;\n            }\n        }\n\n        accountResponse.setVmStopped(vmStopped);\n        accountResponse.setVmRunning(vmRunning);\n        accountResponse.setObjectName(\"account\");\n\n        return accountResponse;\n    }","id":107413,"modified_method":"@Override\n    public AccountResponse createAccountResponse(Account account) {\n        boolean accountIsAdmin = (account.getType() == Account.ACCOUNT_TYPE_ADMIN);\n        AccountResponse accountResponse = new AccountResponse();\n        accountResponse.setId(account.getId());\n        accountResponse.setName(account.getAccountName());\n        accountResponse.setAccountType(account.getType());\n        accountResponse.setDomainId(account.getDomainId());\n        accountResponse.setDomainName(ApiDBUtils.findDomainById(account.getDomainId()).getName());\n        accountResponse.setState(account.getState());\n\n        // get network stat\n        List<UserStatisticsVO> stats = ApiDBUtils.listUserStatsBy(account.getId());\n        if (stats == null) {\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Internal error searching for user stats\");\n        }\n\n        Long bytesSent = 0L;\n        Long bytesReceived = 0L;\n        for (UserStatisticsVO stat : stats) {\n            Long rx = stat.getNetBytesReceived() + stat.getCurrentBytesReceived();\n            Long tx = stat.getNetBytesSent() + stat.getCurrentBytesSent();\n            bytesReceived = bytesReceived + Long.valueOf(rx);\n            bytesSent = bytesSent + Long.valueOf(tx);\n        }\n        accountResponse.setBytesReceived(bytesReceived);\n        accountResponse.setBytesSent(bytesSent);\n\n        // Get resource limits and counts\n\n        Long vmLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.user_vm, account.getId());\n        String vmLimitDisplay = (accountIsAdmin || vmLimit == -1) ? \"Unlimited\" : String.valueOf(vmLimit);\n        Long vmTotal = ApiDBUtils.getResourceCount(ResourceType.user_vm, account.getId());\n        String vmAvail = (accountIsAdmin || vmLimit == -1) ? \"Unlimited\" : String.valueOf(vmLimit - vmTotal);\n        accountResponse.setVmLimit(vmLimitDisplay);\n        accountResponse.setVmTotal(vmTotal);\n        accountResponse.setVmAvailable(vmAvail);\n\n        Long ipLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.public_ip, account.getId());\n        String ipLimitDisplay = (accountIsAdmin || ipLimit == -1) ? \"Unlimited\" : String.valueOf(ipLimit);\n        Long ipTotal = ApiDBUtils.getResourceCount(ResourceType.public_ip, account.getId());\n        String ipAvail = (accountIsAdmin || ipLimit == -1) ? \"Unlimited\" : String.valueOf(ipLimit - ipTotal);\n        accountResponse.setIpLimit(ipLimitDisplay);\n        accountResponse.setIpTotal(ipTotal);\n        accountResponse.setIpAvailable(ipAvail);\n\n        Long volumeLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.volume, account.getId());\n        String volumeLimitDisplay = (accountIsAdmin || volumeLimit == -1) ? \"Unlimited\" : String.valueOf(volumeLimit);\n        Long volumeTotal = ApiDBUtils.getResourceCount(ResourceType.volume, account.getId());\n        String volumeAvail = (accountIsAdmin || volumeLimit == -1) ? \"Unlimited\" : String.valueOf(volumeLimit - volumeTotal);\n        accountResponse.setVolumeLimit(volumeLimitDisplay);\n        accountResponse.setVolumeTotal(volumeTotal);\n        accountResponse.setVolumeAvailable(volumeAvail);\n\n        Long snapshotLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.snapshot, account.getId());\n        String snapshotLimitDisplay = (accountIsAdmin || snapshotLimit == -1) ? \"Unlimited\" : String.valueOf(snapshotLimit);\n        Long snapshotTotal = ApiDBUtils.getResourceCount(ResourceType.snapshot, account.getId());\n        String snapshotAvail = (accountIsAdmin || snapshotLimit == -1) ? \"Unlimited\" : String.valueOf(snapshotLimit - snapshotTotal);\n        accountResponse.setSnapshotLimit(snapshotLimitDisplay);\n        accountResponse.setSnapshotTotal(snapshotTotal);\n        accountResponse.setSnapshotAvailable(snapshotAvail);\n\n        Long templateLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.template, account.getId());\n        String templateLimitDisplay = (accountIsAdmin || templateLimit == -1) ? \"Unlimited\" : String.valueOf(templateLimit);\n        Long templateTotal = ApiDBUtils.getResourceCount(ResourceType.template, account.getId());\n        String templateAvail = (accountIsAdmin || templateLimit == -1) ? \"Unlimited\" : String.valueOf(templateLimit - templateTotal);\n        accountResponse.setTemplateLimit(templateLimitDisplay);\n        accountResponse.setTemplateTotal(templateTotal);\n        accountResponse.setTemplateAvailable(templateAvail);\n\n        // Get stopped and running VMs\n        int vmStopped = 0;\n        int vmRunning = 0;\n\n        Long[] accountIds = new Long[1];\n        accountIds[0] = account.getId();\n\n        Criteria c1 = new Criteria();\n        c1.addCriteria(Criteria.ACCOUNTID, accountIds);\n        List<? extends UserVm> virtualMachines = ApiDBUtils.searchForUserVMs(c1);\n\n        // get Running/Stopped VMs\n        for (Iterator<? extends UserVm> iter = virtualMachines.iterator(); iter.hasNext();) {\n            // count how many stopped/running vms we have\n            UserVm vm = iter.next();\n\n            if (vm.getState() == State.Stopped) {\n                vmStopped++;\n            } else if (vm.getState() == State.Running) {\n                vmRunning++;\n            }\n        }\n\n        accountResponse.setVmStopped(vmStopped);\n        accountResponse.setVmRunning(vmRunning);\n        accountResponse.setObjectName(\"account\");\n\n        return accountResponse;\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public ExtractResponse createExtractResponse(long uploadId, long id, long zoneId, long accountId, String mode) {\n        UploadVO uploadInfo = ApiDBUtils.findUploadById(uploadId);\n        ExtractResponse response = new ExtractResponse();\n        response.setObjectName(\"template\");\n        response.setId(id);\n        response.setName(ApiDBUtils.findTemplateById(id).getName());        \n        response.setZoneId(zoneId);\n        response.setZoneName(ApiDBUtils.findZoneById(zoneId).getName());\n        response.setMode(mode);\n        response.setUploadId(uploadId);\n        response.setState(uploadInfo.getUploadState().toString());\n        response.setAccountId(accountId);        \n        //FIX ME - Need to set the url once the gson jar is upgraded since it is throwing an error right now.\n        //response.setUrl(uploadInfo.getUploadUrl());         \n        response.setUrl(uploadInfo.getUploadUrl().replaceAll(\"/\", \"%2F\"));\n        return response;\n        \n    }","id":107414,"modified_method":"@Override\n    public ExtractResponse createExtractResponse(Long uploadId, Long id, Long zoneId, Long accountId, String mode) {\n        UploadVO uploadInfo = ApiDBUtils.findUploadById(uploadId);\n        ExtractResponse response = new ExtractResponse();\n        response.setObjectName(\"template\");\n        response.setId(id);\n        response.setName(ApiDBUtils.findTemplateById(id).getName());        \n        response.setZoneId(zoneId);\n        response.setZoneName(ApiDBUtils.findZoneById(zoneId).getName());\n        response.setMode(mode);\n        response.setUploadId(uploadId);\n        response.setState(uploadInfo.getUploadState().toString());\n        response.setAccountId(accountId);        \n        //FIX ME - Need to set the url once the gson jar is upgraded since it is throwing an error right now.\n        //response.setUrl(uploadInfo.getUploadUrl());         \n        response.setUrl(uploadInfo.getUploadUrl().replaceAll(\"/\", \"%2F\"));\n        return response;\n        \n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public TemplatePermissionsResponse createTemplatePermissionsResponse(List<String> accountNames, long id, boolean isAdmin) {\n        Long templateOwnerDomain = null;\n        VirtualMachineTemplate template = ApiDBUtils.findTemplateById(id);\n        if (isAdmin) {\n            // FIXME:  we have just template id and need to get template owner from that\n            Account templateOwner = ApiDBUtils.findAccountById(template.getAccountId());\n            if (templateOwner != null) {\n                templateOwnerDomain = templateOwner.getDomainId();\n            }\n        }\n\n        TemplatePermissionsResponse response = new TemplatePermissionsResponse();\n        response.setId(template.getId());\n        response.setPublicTemplate(template.isPublicTemplate());\n        if (isAdmin && (templateOwnerDomain != null)) {\n            response.setDomainId(templateOwnerDomain);\n        }\n\n        response.setAccountNames(accountNames);\n        response.setObjectName(\"templatepermission\");\n        return response;\n    }","id":107415,"modified_method":"@Override\n    public TemplatePermissionsResponse createTemplatePermissionsResponse(List<String> accountNames, Long id, boolean isAdmin) {\n        Long templateOwnerDomain = null;\n        VirtualMachineTemplate template = ApiDBUtils.findTemplateById(id);\n        if (isAdmin) {\n            // FIXME:  we have just template id and need to get template owner from that\n            Account templateOwner = ApiDBUtils.findAccountById(template.getAccountId());\n            if (templateOwner != null) {\n                templateOwnerDomain = templateOwner.getDomainId();\n            }\n        }\n\n        TemplatePermissionsResponse response = new TemplatePermissionsResponse();\n        response.setId(template.getId());\n        response.setPublicTemplate(template.isPublicTemplate());\n        if (isAdmin && (templateOwnerDomain != null)) {\n            response.setDomainId(templateOwnerDomain);\n        }\n\n        response.setAccountNames(accountNames);\n        response.setObjectName(\"templatepermission\");\n        return response;\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public DomainRouterResponse createDomainRouter2Response(VirtualRouter router) {\n        DomainRouterResponse routerResponse = new DomainRouterResponse();\n        routerResponse.setId(router.getId());\n        routerResponse.setZoneId(router.getDataCenterId());\n        routerResponse.setName(router.getHostName());\n        routerResponse.setPodId(router.getPodId());\n        routerResponse.setTemplateId(router.getTemplateId());\n        routerResponse.setCreated(router.getCreated());\n        routerResponse.setState(router.getState());\n        routerResponse.setNetworkDomain(router.getDomain());\n\n        if (router.getHostId() != null) {\n            routerResponse.setHostId(router.getHostId());\n            routerResponse.setHostName(ApiDBUtils.findHostById(router.getHostId()).getName());\n        }\n\n        Account accountTemp = ApiDBUtils.findAccountById(router.getAccountId());\n        if (accountTemp != null) {\n            routerResponse.setAccountName(accountTemp.getAccountName());\n            routerResponse.setDomainId(accountTemp.getDomainId());\n            routerResponse.setDomainName(ApiDBUtils.findDomainById(accountTemp.getDomainId()).getName());\n        }\n\n        AsyncJobVO asyncJob = ApiDBUtils.findInstancePendingAsyncJob(\"domain_router\", router.getId());\n        if (asyncJob != null) {\n            routerResponse.setJobId(asyncJob.getId());\n            routerResponse.setJobStatus(asyncJob.getStatus());\n        }\n\n        List<? extends Nic> nics = ApiDBUtils.getNics(router);\n        for (Nic singleNic : nics) {\n            long configId = singleNic.getNetworkId();\n            Network networkConf = ApiDBUtils.getNetwork(configId);\n\n            if (networkConf.getTrafficType() == TrafficType.Guest) {\n                routerResponse.setGuestIpAddress(singleNic.getIp4Address());\n                routerResponse.setGuestMacAddress(singleNic.getMacAddress());\n                routerResponse.setGuestNetmask(singleNic.getNetmask());\n            }\n\n            if (networkConf.getTrafficType() == TrafficType.Control) {\n                routerResponse.setPrivateIp(singleNic.getIp4Address());\n                routerResponse.setPrivateMacAddress(singleNic.getMacAddress());\n                routerResponse.setPrivateNetmask(singleNic.getNetmask());\n            }\n\n            if (networkConf.getTrafficType() == TrafficType.Public) {\n                routerResponse.setPublicIp(singleNic.getIp4Address());\n                routerResponse.setPublicMacAddress(singleNic.getMacAddress());\n                routerResponse.setPublicNetmask(singleNic.getNetmask());\n                routerResponse.setGateway(singleNic.getGateway());\n            }\n\n            DataCenter zone = ApiDBUtils.findZoneById(router.getDataCenterId());\n            if (zone != null) {\n                routerResponse.setZoneName(zone.getName());\n                routerResponse.setDns1(zone.getDns1());\n                routerResponse.setDns2(zone.getDns2());\n            }\n        }\n\n        routerResponse.setObjectName(\"domainrouter\");\n        return routerResponse;\n    }","id":107416,"modified_method":"@Override\n    public DomainRouterResponse createDomainRouter2Response(VirtualRouter router) {\n        DomainRouterResponse routerResponse = new DomainRouterResponse();\n        routerResponse.setId(router.getId());\n        routerResponse.setZoneId(router.getDataCenterId());\n        routerResponse.setName(router.getHostName());\n        routerResponse.setPodId(router.getPodId());\n        routerResponse.setTemplateId(router.getTemplateId());\n        routerResponse.setCreated(router.getCreated());\n        routerResponse.setState(router.getState());\n        routerResponse.setNetworkDomain(router.getDomain());\n\n        if (router.getHostId() != null) {\n            routerResponse.setHostId(router.getHostId());\n            routerResponse.setHostName(ApiDBUtils.findHostById(router.getHostId()).getName());\n        }\n\n        Account accountTemp = ApiDBUtils.findAccountById(router.getAccountId());\n        if (accountTemp != null) {\n            routerResponse.setAccountName(accountTemp.getAccountName());\n            routerResponse.setDomainId(accountTemp.getDomainId());\n            routerResponse.setDomainName(ApiDBUtils.findDomainById(accountTemp.getDomainId()).getName());\n        }\n\n        AsyncJobVO asyncJob = ApiDBUtils.findInstancePendingAsyncJob(\"domain_router\", router.getId());\n        if (asyncJob != null) {\n            routerResponse.setJobId(asyncJob.getId());\n            routerResponse.setJobStatus(asyncJob.getStatus());\n        }\n\n        List<? extends Nic> nics = ApiDBUtils.getNics(router);\n        for (Nic singleNic : nics) {\n            Long configId = singleNic.getNetworkId();\n            Network networkConf = ApiDBUtils.getNetwork(configId);\n\n            if (networkConf.getTrafficType() == TrafficType.Guest) {\n                routerResponse.setGuestIpAddress(singleNic.getIp4Address());\n                routerResponse.setGuestMacAddress(singleNic.getMacAddress());\n                routerResponse.setGuestNetmask(singleNic.getNetmask());\n            }\n\n            if (networkConf.getTrafficType() == TrafficType.Control) {\n                routerResponse.setPrivateIp(singleNic.getIp4Address());\n                routerResponse.setPrivateMacAddress(singleNic.getMacAddress());\n                routerResponse.setPrivateNetmask(singleNic.getNetmask());\n            }\n\n            if (networkConf.getTrafficType() == TrafficType.Public) {\n                routerResponse.setPublicIp(singleNic.getIp4Address());\n                routerResponse.setPublicMacAddress(singleNic.getMacAddress());\n                routerResponse.setPublicNetmask(singleNic.getNetmask());\n                routerResponse.setGateway(singleNic.getGateway());\n            }\n\n            DataCenter zone = ApiDBUtils.findZoneById(router.getDataCenterId());\n            if (zone != null) {\n                routerResponse.setZoneName(zone.getName());\n                routerResponse.setDns1(zone.getDns1());\n                routerResponse.setDns2(zone.getDns2());\n            }\n        }\n\n        routerResponse.setObjectName(\"domainrouter\");\n        return routerResponse;\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public ListResponse<TemplateResponse> createIsoResponse(List<? extends VirtualMachineTemplate> isos, Long zoneId, boolean onlyReady, boolean isAdmin, Account account)  {\n        Map<Long, List<VMTemplateHostVO>> isoHostsMap = new HashMap<Long, List<VMTemplateHostVO>>();\n        for (VirtualMachineTemplate iso : isos) {\n            // TODO:  implement\n            List<VMTemplateHostVO> isoHosts = ApiDBUtils.listTemplateHostBy(iso.getId(), zoneId);\n            if (iso.getName().equals(\"xs-tools.iso\")) {\n                List<Long> xstoolsZones = new ArrayList<Long>();\n                // the xs-tools.iso is a special case since it will be available on every computing host in the zone and we want to return it once per zone\n                List<VMTemplateHostVO> xstoolsHosts = new ArrayList<VMTemplateHostVO>();\n                for (VMTemplateHostVO isoHost : isoHosts) {\n                    // TODO:  implement\n                    HostVO host = ApiDBUtils.findHostById(isoHost.getHostId());\n                    if (!xstoolsZones.contains(Long.valueOf(host.getDataCenterId()))) {\n                        xstoolsZones.add(Long.valueOf(host.getDataCenterId()));\n                        xstoolsHosts.add(isoHost);\n                    }\n                }\n                isoHostsMap.put(iso.getId(), xstoolsHosts);\n            } else {\n                isoHostsMap.put(iso.getId(), isoHosts);\n            }\n        }\n\n        ListResponse<TemplateResponse> response = new ListResponse<TemplateResponse>();\n        List<TemplateResponse> isoResponses = new ArrayList<TemplateResponse>();\n        for (VirtualMachineTemplate iso : isos) {\n            List<VMTemplateHostVO> isoHosts = isoHostsMap.get(iso.getId());\n            for (VMTemplateHostVO isoHost : isoHosts) {\n                if (onlyReady && isoHost.getDownloadState() != Status.DOWNLOADED) {\n                    continue;\n                }\n\n                TemplateResponse isoResponse = new TemplateResponse();\n                isoResponse.setId(iso.getId());\n                isoResponse.setName(iso.getName());\n                isoResponse.setDisplayText(iso.getDisplayText());\n                isoResponse.setPublic(iso.isPublicTemplate());\n                isoResponse.setCreated(isoHost.getCreated());\n                isoResponse.setReady(isoHost.getDownloadState() == Status.DOWNLOADED);\n                isoResponse.setBootable(iso.isBootable());\n                isoResponse.setFeatured(iso.isFeatured());\n                isoResponse.setCrossZones(iso.isCrossZones());\n                isoResponse.setPublic(iso.isPublicTemplate());\n\n                // TODO:  implement\n                GuestOS os = ApiDBUtils.findGuestOSById(iso.getGuestOSId());\n                if (os != null) {\n                    isoResponse.setOsTypeId(os.getId());\n                    isoResponse.setOsTypeName(os.getDisplayName());\n                } else {\n                    isoResponse.setOsTypeId(-1L);\n                    isoResponse.setOsTypeName(\"\");\n                }\n                    \n                // add account ID and name\n                Account owner = ApiDBUtils.findAccountById(iso.getAccountId());\n                if (owner != null) {\n                    isoResponse.setAccount(owner.getAccountName());\n                    isoResponse.setDomainId(owner.getDomainId());\n                    // TODO:  implement\n                    isoResponse.setDomainName(ApiDBUtils.findDomainById(owner.getDomainId()).getName());\n                }\n                \n                // Add the zone ID\n                // TODO:  implement\n                HostVO host = ApiDBUtils.findHostById(isoHost.getHostId());\n                DataCenterVO datacenter = ApiDBUtils.findZoneById(host.getDataCenterId());\n                isoResponse.setZoneId(host.getDataCenterId());\n                isoResponse.setZoneName(datacenter.getName());\n\n                // If the user is an admin, add the template download status\n                if (isAdmin || account.getId() == iso.getAccountId()) {\n                    // add download status\n                    if (isoHost.getDownloadState()!=Status.DOWNLOADED) {\n                        String isoStatus = \"Processing\";\n                        if (isoHost.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED) {\n                            isoStatus = \"Download Complete\";\n                        } else if (isoHost.getDownloadState() == VMTemplateHostVO.Status.DOWNLOAD_IN_PROGRESS) {\n                            if (isoHost.getDownloadPercent() == 100) {\n                                isoStatus = \"Installing ISO\";\n                            } else {\n                                isoStatus = isoHost.getDownloadPercent() + \"% Downloaded\";\n                            }\n                        } else {\n                            isoStatus = isoHost.getErrorString();\n                        }\n                        isoResponse.setStatus(isoStatus);\n                    } else {\n                        isoResponse.setStatus(\"Successfully Installed\");\n                    }\n                }\n\n                long isoSize = isoHost.getSize();\n                if (isoSize > 0) {\n                    isoResponse.setSize(isoSize);\n                }\n                \n                AsyncJobVO asyncJob = ApiDBUtils.findInstancePendingAsyncJob(\"vm_template\", iso.getId());\n                if(asyncJob != null) {\n                    isoResponse.setJobId(asyncJob.getId());\n                    isoResponse.setJobStatus(asyncJob.getStatus());\n                }\n\n                isoResponse.setObjectName(\"iso\");\n                isoResponses.add(isoResponse);\n            }\n        }\n        \n        response.setResponses(isoResponses);\n\n        return response;\n    }","id":107417,"modified_method":"@Override\n    public ListResponse<TemplateResponse> createIsoResponse(List<? extends VirtualMachineTemplate> isos, Long zoneId, boolean onlyReady, boolean isAdmin, Account account)  {\n        Map<Long, List<VMTemplateHostVO>> isoHostsMap = new HashMap<Long, List<VMTemplateHostVO>>();\n        for (VirtualMachineTemplate iso : isos) {\n            // TODO:  implement\n            List<VMTemplateHostVO> isoHosts = ApiDBUtils.listTemplateHostBy(iso.getId(), zoneId);\n            if (iso.getName().equals(\"xs-tools.iso\")) {\n                List<Long> xstoolsZones = new ArrayList<Long>();\n                // the xs-tools.iso is a special case since it will be available on every computing host in the zone and we want to return it once per zone\n                List<VMTemplateHostVO> xstoolsHosts = new ArrayList<VMTemplateHostVO>();\n                for (VMTemplateHostVO isoHost : isoHosts) {\n                    // TODO:  implement\n                    HostVO host = ApiDBUtils.findHostById(isoHost.getHostId());\n                    if (!xstoolsZones.contains(Long.valueOf(host.getDataCenterId()))) {\n                        xstoolsZones.add(Long.valueOf(host.getDataCenterId()));\n                        xstoolsHosts.add(isoHost);\n                    }\n                }\n                isoHostsMap.put(iso.getId(), xstoolsHosts);\n            } else {\n                isoHostsMap.put(iso.getId(), isoHosts);\n            }\n        }\n\n        ListResponse<TemplateResponse> response = new ListResponse<TemplateResponse>();\n        List<TemplateResponse> isoResponses = new ArrayList<TemplateResponse>();\n        for (VirtualMachineTemplate iso : isos) {\n            List<VMTemplateHostVO> isoHosts = isoHostsMap.get(iso.getId());\n            for (VMTemplateHostVO isoHost : isoHosts) {\n                if (onlyReady && isoHost.getDownloadState() != Status.DOWNLOADED) {\n                    continue;\n                }\n\n                TemplateResponse isoResponse = new TemplateResponse();\n                isoResponse.setId(iso.getId());\n                isoResponse.setName(iso.getName());\n                isoResponse.setDisplayText(iso.getDisplayText());\n                isoResponse.setPublic(iso.isPublicTemplate());\n                isoResponse.setCreated(isoHost.getCreated());\n                isoResponse.setReady(isoHost.getDownloadState() == Status.DOWNLOADED);\n                isoResponse.setBootable(iso.isBootable());\n                isoResponse.setFeatured(iso.isFeatured());\n                isoResponse.setCrossZones(iso.isCrossZones());\n                isoResponse.setPublic(iso.isPublicTemplate());\n\n                // TODO:  implement\n                GuestOS os = ApiDBUtils.findGuestOSById(iso.getGuestOSId());\n                if (os != null) {\n                    isoResponse.setOsTypeId(os.getId());\n                    isoResponse.setOsTypeName(os.getDisplayName());\n                } else {\n                    isoResponse.setOsTypeId(-1L);\n                    isoResponse.setOsTypeName(\"\");\n                }\n                    \n                // add account ID and name\n                Account owner = ApiDBUtils.findAccountById(iso.getAccountId());\n                if (owner != null) {\n                    isoResponse.setAccount(owner.getAccountName());\n                    isoResponse.setDomainId(owner.getDomainId());\n                    // TODO:  implement\n                    isoResponse.setDomainName(ApiDBUtils.findDomainById(owner.getDomainId()).getName());\n                }\n                \n                // Add the zone ID\n                // TODO:  implement\n                HostVO host = ApiDBUtils.findHostById(isoHost.getHostId());\n                DataCenterVO datacenter = ApiDBUtils.findZoneById(host.getDataCenterId());\n                isoResponse.setZoneId(host.getDataCenterId());\n                isoResponse.setZoneName(datacenter.getName());\n\n                // If the user is an admin, add the template download status\n                if (isAdmin || account.getId() == iso.getAccountId()) {\n                    // add download status\n                    if (isoHost.getDownloadState()!=Status.DOWNLOADED) {\n                        String isoStatus = \"Processing\";\n                        if (isoHost.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED) {\n                            isoStatus = \"Download Complete\";\n                        } else if (isoHost.getDownloadState() == VMTemplateHostVO.Status.DOWNLOAD_IN_PROGRESS) {\n                            if (isoHost.getDownloadPercent() == 100) {\n                                isoStatus = \"Installing ISO\";\n                            } else {\n                                isoStatus = isoHost.getDownloadPercent() + \"% Downloaded\";\n                            }\n                        } else {\n                            isoStatus = isoHost.getErrorString();\n                        }\n                        isoResponse.setStatus(isoStatus);\n                    } else {\n                        isoResponse.setStatus(\"Successfully Installed\");\n                    }\n                }\n\n                Long isoSize = isoHost.getSize();\n                if (isoSize > 0) {\n                    isoResponse.setSize(isoSize);\n                }\n                \n                AsyncJobVO asyncJob = ApiDBUtils.findInstancePendingAsyncJob(\"vm_template\", iso.getId());\n                if(asyncJob != null) {\n                    isoResponse.setJobId(asyncJob.getId());\n                    isoResponse.setJobStatus(asyncJob.getStatus());\n                }\n\n                isoResponse.setObjectName(\"iso\");\n                isoResponses.add(isoResponse);\n            }\n        }\n        \n        response.setResponses(isoResponses);\n\n        return response;\n    }","commit_id":"6765e9797678a9867f113f42b0fcf7caf83aba2a","url":"https://github.com/apache/cloudstack"},{"original_method":"public void setDisplayGroupQueryMatchValue(Object newValue) {\n        if (key() != null && displayGroup() != null && displayGroup().queryMatch() != null)\n                displayGroup().queryMatch().setObjectForKey(newValue, key());\n    }","id":107418,"modified_method":"public void setDisplayGroupQueryMatchValue(Object newValue) {\n        if (key() != null && displayGroup() != null && displayGroup().queryMatch() != null) {\n        \tif(newValue != null) {\n        \t\tdisplayGroup().queryMatch().setObjectForKey(newValue, key());\n        \t} else {\n                displayGroup().queryMatch().removeObjectForKey(key());\n                displayGroup().queryOperator().removeObjectForKey(key());\n            }\n        }\n    }","commit_id":"c175b68b88c06566241ea50b6604b539d48a6cdd","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void setDisplayGroupQueryMatchValue (Object newValue) {\n        if (primaryQueryKey() != null && displayGroup () != null && displayGroup().queryMatch()!=null )\n            displayGroup().queryMatch().setObjectForKey(newValue,primaryQueryKey());\n    }","id":107419,"modified_method":"public void setDisplayGroupQueryMatchValue (Object newValue) {\n        if (primaryQueryKey() != null && displayGroup () != null && displayGroup().queryMatch()!=null ) {\n            if(newValue != null) {\n                displayGroup().queryMatch().setObjectForKey(newValue,primaryQueryKey());\n            } else {\n                displayGroup().queryMatch().removeObjectForKey(primaryQueryKey());\n            }\n        }\n    }","commit_id":"4aff50b623c4e73148e3682db340c99607f854be","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void setSecondaryDisplayGroupQueryMatchValue (Object newValue) {\n        if (secondaryQueryKey() != null && displayGroup () != null && displayGroup().queryMatch()!=null )\n            displayGroup().queryMatch().setObjectForKey(newValue,secondaryQueryKey());\n    }","id":107420,"modified_method":"public void setSecondaryDisplayGroupQueryMatchValue (Object newValue) {\n        if (secondaryQueryKey() != null && displayGroup () != null && displayGroup().queryMatch()!=null ) {\n            if(newValue != null) {\n                displayGroup().queryMatch().setObjectForKey(newValue,secondaryQueryKey());\n            } else {\n                displayGroup().queryMatch().removeObjectForKey(secondaryQueryKey());\n            }\n        }\n    }","commit_id":"4aff50b623c4e73148e3682db340c99607f854be","url":"https://github.com/wocommunity/wonder"},{"original_method":"private static String filter(XmlTag tag, CustomTemplateCallback callback) {\n    if (XmlZenCodingTemplate.isTrueXml(callback)) {\n      closeUnclosingTags(tag);\n    }\n    return tag.getContainingFile().getText();\n  }","id":107421,"modified_method":"@Nullable\n  private static String filter(XmlTag tag, CustomTemplateCallback callback) {\n    PsiElement context = callback.getContext();\n    for (ZenCodingFilter filter : ZenCodingFilter.EP_NAME.getExtensions()) {\n      if (filter.isMyContext(context)) {\n        return filter.toString(tag, context);\n      }\n    }\n    return new ZenCodingFilterImpl().toString(tag, context);\n  }","commit_id":"d49291919b88a3cd23c7ea53da015d9b91f86e21","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private static String buildAttributesString(List<Pair<String, String>> attribute2value, int numberInIteration) {\n    StringBuilder result = new StringBuilder();\n    for (Iterator<Pair<String, String>> it = attribute2value.iterator(); it.hasNext();) {\n      Pair<String, String> pair = it.next();\n      String name = pair.first;\n      String value = getValue(pair, numberInIteration);\n      result.append(getAttributeString(name, value));\n      if (it.hasNext()) {\n        result.append(' ');\n      }\n    }\n    return result.toString();\n  }","id":107422,"modified_method":"@Nullable\n  private static String buildAttributesString(List<Pair<String, String>> attribute2value,\n                                              int numberInIteration,\n                                              CustomTemplateCallback callback) {\n    PsiElement context = callback.getContext();\n    for (ZenCodingFilter filter : ZenCodingFilter.EP_NAME.getExtensions()) {\n      if (filter.isMyContext(context)) {\n        return filter.buildAttributesString(attribute2value, numberInIteration);\n      }\n    }\n    return new ZenCodingFilterImpl().buildAttributesString(attribute2value, numberInIteration);\n  }","commit_id":"d49291919b88a3cd23c7ea53da015d9b91f86e21","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static Map<String, String> buildPredefinedValues(List<Pair<String, String>> attribute2value, int numberInIteration) {\n    String attributes = buildAttributesString(attribute2value, numberInIteration);\n    attributes = attributes.length() > 0 ? ' ' + attributes : null;\n    Map<String, String> predefinedValues = null;\n    if (attributes != null) {\n      predefinedValues = new HashMap<String, String>();\n      predefinedValues.put(ATTRS, attributes);\n    }\n    return predefinedValues;\n  }","id":107423,"modified_method":"@Nullable\n  private static Map<String, String> buildPredefinedValues(List<Pair<String, String>> attribute2value,\n                                                           int numberInIteration,\n                                                           CustomTemplateCallback callback) {\n    String attributes = buildAttributesString(attribute2value, numberInIteration, callback);\n    assert attributes != null;\n    attributes = attributes.length() > 0 ? ' ' + attributes : null;\n    Map<String, String> predefinedValues = null;\n    if (attributes != null) {\n      predefinedValues = new HashMap<String, String>();\n      predefinedValues.put(ATTRS, attributes);\n    }\n    return predefinedValues;\n  }","commit_id":"d49291919b88a3cd23c7ea53da015d9b91f86e21","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void invokeTemplate(TemplateToken token,\n                                     final CustomTemplateCallback callback,\n                                     int numberInIteration) {\n    List<Pair<String, String>> attr2value = new ArrayList<Pair<String, String>>(token.getAttribute2Value());\n    if (token.getTemplate() != null) {\n      if (attr2value.size() > 0 || XmlZenCodingTemplate.isTrueXml(callback)) {\n        TemplateImpl modifiedTemplate = token.getTemplate().copy();\n        XmlTag tag = token.getTag();\n        if (tag != null) {\n          for (Iterator<Pair<String, String>> iterator = attr2value.iterator(); iterator.hasNext();) {\n            Pair<String, String> pair = iterator.next();\n            if (tag.getAttribute(pair.first) != null) {\n              tag.setAttribute(pair.first, getValue(pair, numberInIteration));\n              iterator.remove();\n            }\n          }\n          modifiedTemplate.setString(filter(tag, callback));\n          removeVariablesWhichHasNoSegment(modifiedTemplate);\n          Map<String, String> predefinedValues = buildPredefinedValues(attr2value, numberInIteration);\n          callback.expandTemplate(modifiedTemplate, predefinedValues);\n          return;\n        }\n      }\n      callback.expandTemplate(token.getTemplate(), null);\n    }\n    else {\n      // for CSS\n      Map<String, String> predefinedValues = buildPredefinedValues(attr2value, numberInIteration);\n      callback.expandTemplate(token.getKey(), predefinedValues);\n    }\n  }","id":107424,"modified_method":"private static void invokeTemplate(TemplateToken token,\n                                     final CustomTemplateCallback callback,\n                                     int numberInIteration) {\n    List<Pair<String, String>> attr2value = new ArrayList<Pair<String, String>>(token.getAttribute2Value());\n    if (token.getTemplate() != null) {\n      if (attr2value.size() > 0 || XmlZenCodingTemplate.isTrueXml(callback)) {\n        TemplateImpl modifiedTemplate = token.getTemplate().copy();\n        XmlTag tag = token.getTag();\n        if (tag != null) {\n          for (Iterator<Pair<String, String>> iterator = attr2value.iterator(); iterator.hasNext();) {\n            Pair<String, String> pair = iterator.next();\n            if (tag.getAttribute(pair.first) != null) {\n              tag.setAttribute(pair.first, ZenCodingUtil.getValue(pair, numberInIteration));\n              iterator.remove();\n            }\n          }\n          String s = filter(tag, callback);\n          assert s != null;\n          modifiedTemplate.setString(s);\n          removeVariablesWhichHasNoSegment(modifiedTemplate);\n          Map<String, String> predefinedValues = buildPredefinedValues(attr2value, numberInIteration, callback);\n          callback.expandTemplate(modifiedTemplate, predefinedValues);\n          return;\n        }\n      }\n      callback.expandTemplate(token.getTemplate(), null);\n    }\n    else {\n      // for CSS\n      Map<String, String> predefinedValues = buildPredefinedValues(attr2value, numberInIteration, callback);\n      callback.expandTemplate(token.getKey(), predefinedValues);\n    }\n  }","commit_id":"d49291919b88a3cd23c7ea53da015d9b91f86e21","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean isTrueXml(CustomTemplateCallback callback) {\n    FileType type = callback.getFileType();\n    return type == StdFileTypes.XHTML || type == StdFileTypes.JSPX || type == StdFileTypes.XML;\n  }","id":107425,"modified_method":"public static boolean isTrueXml(CustomTemplateCallback callback) {\n    return isTrueXml(callback.getFileType());\n  }","commit_id":"d49291919b88a3cd23c7ea53da015d9b91f86e21","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected boolean isApplicable(@NotNull PsiElement element) {\n    if (element.getLanguage() instanceof XMLLanguage) {\n      if (PsiTreeUtil.getParentOfType(element, XmlAttributeValue.class) != null) {\n        return false;\n      }\n      if (PsiTreeUtil.getParentOfType(element, XmlComment.class) != null) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }","id":107426,"modified_method":"protected boolean isApplicable(@NotNull PsiElement element) {\n    if (element.getLanguage() instanceof XMLLanguage) {\n      if (PsiTreeUtil.getParentOfType(element, XmlAttributeValue.class) != null) {\n        return false;\n      }\n      if (PsiTreeUtil.getParentOfType(element, XmlComment.class) != null) {\n        return false;\n      }\n      if (!findApplicableFilter(element)) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }","commit_id":"d49291919b88a3cd23c7ea53da015d9b91f86e21","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean hasTextEditor(VirtualFile selectedFile) {\n    FileType fileType = selectedFile.getFileType();\n    return !fileType.isBinary() && fileType != StdFileTypes.GUI_DESIGNER_FORM;\n  }","id":107427,"modified_method":"private static boolean hasTextEditor(@NotNull VirtualFile selectedFile) {\n    return !selectedFile.getFileType().isBinary();\n  }","commit_id":"464dc05345c4ff34e7610fd1cef8aab3821cd69c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public PsiFile createFile(FileViewProvider viewProvider) {\n    if (shouldCreateJavaFile(viewProvider)) {\n      return new PsiJavaFileImpl(viewProvider);\n    }\n    else {\n        //todo not used? see JavaLanguageSubstitutor\n      return new PsiPlainTextFileImpl(viewProvider);\n    }\n  }","id":107428,"modified_method":"public PsiFile createFile(FileViewProvider viewProvider) {\n    return new PsiJavaFileImpl(viewProvider);\n  }","commit_id":"e390974185cec7f93a84c8477d450a408ea91f35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean contains(final VirtualFile file) {\n    final FileType fileType = file.getFileType();\n    return (myDelegate == null || myDelegate.contains(file)) &&\n           (StdFileTypes.JAVA == fileType && myIndex.isInSourceContent(file) ||\n            StdFileTypes.CLASS == fileType && myIndex.isInLibraryClasses(file));\n  }","id":107429,"modified_method":"public boolean contains(final VirtualFile file) {\n    if (myDelegate != null && !myDelegate.contains(file)) {\n      return false;\n    }\n    if (myIndex.isInLibraryClasses(file)) {\n      return true;\n    }\n    return StdFileTypes.JAVA == file.getFileType() && myIndex.isInSourceContent(file);\n  }","commit_id":"e390974185cec7f93a84c8477d450a408ea91f35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private TypeQualifierValue(ClassDescriptor typeQualifier, @CheckForNull Object value) {\n        this.typeQualifier = typeQualifier;\n        this.value = value;\n        boolean isStrict1 = false; // will be set to true if this is a strict\n                                  // type qualifier value\n        boolean isExclusive1 = false; // will be set to true if this is an\n                                     // exclusive type qualifier value\n        boolean isExhaustive1 = false; // will be set to true if this is an\n                                      // exhaustive type qualifier value\n\n        TypeQualifierValidator<A> validator1 = null;\n        Class<A> qualifierClass = null;\n        XClass xclass  = null;\n        A proxy1 = null;\n        try {\n            xclass = Global.getAnalysisCache().getClassAnalysis(XClass.class, typeQualifier);\n\n            // Annotation elements appear as abstract methods in the annotation\n            // class (interface).\n            // So, if the type qualifier annotation has specified a default When\n            // value,\n            // it will appear as an abstract method called \"when\".\n            XMethod whenMethod = xclass.findMethod(\"when\", \"()Ljavax/annotation/meta/When;\", false);\n            if (whenMethod == null) {\n                isStrict1 = true;\n            }\n            for (XMethod xmethod : xclass.getXMethods()) {\n                if (xmethod.getName().equals(\"value\") && xmethod.getSignature().startsWith(\"()\")) {\n                    isExhaustive1 = xmethod.getAnnotation(EXHAUSTIVE_ANNOTATION) != null;\n                    if (isExhaustive1) {\n                        // exhaustive qualifiers are automatically exclusive\n                        isExclusive1 = true;\n                    } else {\n                        // see if there is an explicit @Exclusive annotation\n                        isExclusive1 = xmethod.getAnnotation(EXCLUSIVE_ANNOTATION) != null;\n                    }\n\n                    break;\n                }\n            }\n        } catch (MissingClassException e) {\n            AnalysisContext.currentAnalysisContext().getLookupFailureCallback().reportMissingClass(e.getClassNotFoundException());\n        } catch (CheckedAnalysisException e) {\n            AnalysisContext.logError(\"Error looking up annotation class \" + typeQualifier.toDottedClassName(), e);\n        }\n        this.isStrict = isStrict1;\n        this.isExclusive = isExclusive1;\n        this.isExhaustive = isExhaustive1;\n        if (xclass != null) {\n            ClassDescriptor checkerName = DescriptorFactory.createClassDescriptor(typeQualifier.getClassName() + \"$Checker\");\n            // XXX don't do this if running in Eclipse; check below is the quick\n            // fix for bug 3599258 (Random obscure Eclipse failures during\n            // analysis)\n\n            if (!SystemProperties.RUNNING_IN_ECLIPSE)\n            try {\n                Global.getAnalysisCache().getClassAnalysis(ClassData.class, checkerName);\n\n                // found it.\n                SecurityManager m = System.getSecurityManager();\n                if (m == null) {\n                    System.out.println(\"Setting ValidationSecurityManager\");\n                    System.setSecurityManager(ValidationSecurityManager.INSTANCE);\n                }\n\n                Class<?> c = ValidationSecurityManager.VALIDATOR_LOADER.loadClass(checkerName.getDottedClassName());\n                if (TypeQualifierValidator.class.isAssignableFrom(c)) {\n\n                    @SuppressWarnings(\"unchecked\")\n                    Class<? extends TypeQualifierValidator<A>> validatorClass = (Class<? extends TypeQualifierValidator<A>>) c\n                            .asSubclass(TypeQualifierValidator.class);\n                    validator1 = getValidator(validatorClass);\n                    qualifierClass = getQualifierClass(typeQualifier);\n\n                    InvocationHandler handler = new InvocationHandler() {\n\n                        public Object invoke(Object arg0, Method arg1, Object[] arg2) throws Throwable {\n                            if (arg1.getName() == \"value\")\n                                return TypeQualifierValue.this.value;\n                            throw new UnsupportedOperationException(\"Can't handle \" + arg1);\n                        }\n                    };\n\n                    proxy1 = qualifierClass.cast(Proxy.newProxyInstance(ValidationSecurityManager.VALIDATOR_LOADER,\n                            new Class[] { qualifierClass }, handler));\n                }\n            } catch (ClassNotFoundException e) {\n                assert true; // ignore\n            } catch (CheckedAnalysisException e) {\n                assert true; // ignore\n            } catch (Exception e) {\n                AnalysisContext.logError(\"Unable to construct type qualifier checker \" + checkerName, e);\n            } catch (Throwable e) {\n                AnalysisContext.logError(\"Unable to construct type qualifier checker \" + checkerName + \" due to \"\n                        + e.getClass().getSimpleName() + \":\" + e.getMessage());\n            }\n\n\n        }\n        this.validator = validator1;\n        this.typeQualifierClass = qualifierClass;\n        this.proxy = proxy1;\n    }","id":107430,"modified_method":"private TypeQualifierValue(ClassDescriptor typeQualifier, @CheckForNull Object value) {\n        this.typeQualifier = typeQualifier;\n        this.value = value;\n        boolean isStrict1 = false; // will be set to true if this is a strict\n                                  // type qualifier value\n        boolean isExclusive1 = false; // will be set to true if this is an\n                                     // exclusive type qualifier value\n        boolean isExhaustive1 = false; // will be set to true if this is an\n                                      // exhaustive type qualifier value\n\n        TypeQualifierValidator<A> validator1 = null;\n        Class<A> qualifierClass = null;\n        XClass xclass  = null;\n        A proxy1 = null;\n        try {\n            xclass = Global.getAnalysisCache().getClassAnalysis(XClass.class, typeQualifier);\n\n            // Annotation elements appear as abstract methods in the annotation\n            // class (interface).\n            // So, if the type qualifier annotation has specified a default When\n            // value,\n            // it will appear as an abstract method called \"when\".\n            XMethod whenMethod = xclass.findMethod(\"when\", \"()Ljavax/annotation/meta/When;\", false);\n            if (whenMethod == null) {\n                isStrict1 = true;\n            }\n            for (XMethod xmethod : xclass.getXMethods()) {\n                if (xmethod.getName().equals(\"value\") && xmethod.getSignature().startsWith(\"()\")) {\n                    isExhaustive1 = xmethod.getAnnotation(EXHAUSTIVE_ANNOTATION) != null;\n                    if (isExhaustive1) {\n                        // exhaustive qualifiers are automatically exclusive\n                        isExclusive1 = true;\n                    } else {\n                        // see if there is an explicit @Exclusive annotation\n                        isExclusive1 = xmethod.getAnnotation(EXCLUSIVE_ANNOTATION) != null;\n                    }\n\n                    break;\n                }\n            }\n        } catch (MissingClassException e) {\n            AnalysisContext.currentAnalysisContext().getLookupFailureCallback().reportMissingClass(e.getClassNotFoundException());\n        } catch (CheckedAnalysisException e) {\n            AnalysisContext.logError(\"Error looking up annotation class \" + typeQualifier.toDottedClassName(), e);\n        }\n        this.isStrict = isStrict1;\n        this.isExclusive = isExclusive1;\n        this.isExhaustive = isExhaustive1;\n        if (xclass != null) {\n            ClassDescriptor checkerName = DescriptorFactory.createClassDescriptor(typeQualifier.getClassName() + \"$Checker\");\n            // XXX don't do this if running in Eclipse; check below is the quick\n            // fix for bug 3599258 (Random obscure Eclipse failures during\n            // analysis)\n\n            if (!SystemProperties.RUNNING_IN_ECLIPSE)\n            try {\n                Global.getAnalysisCache().getClassAnalysis(ClassData.class, checkerName);\n\n                // found it.\n                SecurityManager m = System.getSecurityManager();\n                if (m == null) {\n                    if (DEBUG_CLASSLOADING) System.out.println(\"Setting ValidationSecurityManager\");\n                    System.setSecurityManager(ValidationSecurityManager.INSTANCE);\n                }\n\n                Class<?> c = ValidationSecurityManager.VALIDATOR_LOADER.loadClass(checkerName.getDottedClassName());\n                if (TypeQualifierValidator.class.isAssignableFrom(c)) {\n\n                    @SuppressWarnings(\"unchecked\")\n                    Class<? extends TypeQualifierValidator<A>> validatorClass = (Class<? extends TypeQualifierValidator<A>>) c\n                            .asSubclass(TypeQualifierValidator.class);\n                    validator1 = getValidator(validatorClass);\n                    qualifierClass = getQualifierClass(typeQualifier);\n\n                    InvocationHandler handler = new InvocationHandler() {\n\n                        public Object invoke(Object arg0, Method arg1, Object[] arg2) throws Throwable {\n                            if (arg1.getName() == \"value\")\n                                return TypeQualifierValue.this.value;\n                            throw new UnsupportedOperationException(\"Can't handle \" + arg1);\n                        }\n                    };\n\n                    proxy1 = qualifierClass.cast(Proxy.newProxyInstance(ValidationSecurityManager.VALIDATOR_LOADER,\n                            new Class[] { qualifierClass }, handler));\n                }\n            } catch (ClassNotFoundException e) {\n                assert true; // ignore\n            } catch (CheckedAnalysisException e) {\n                assert true; // ignore\n            } catch (Exception e) {\n                AnalysisContext.logError(\"Unable to construct type qualifier checker \" + checkerName, e);\n            } catch (Throwable e) {\n                AnalysisContext.logError(\"Unable to construct type qualifier checker \" + checkerName + \" due to \"\n                        + e.getClass().getSimpleName() + \":\" + e.getMessage());\n            }\n\n\n        }\n        this.validator = validator1;\n        this.typeQualifierClass = qualifierClass;\n        this.proxy = proxy1;\n    }","commit_id":"00ae5727c24f084d9b8943c9d836deb56a3884b1","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    private static <A> Class<A> getQualifierClass(ClassDescriptor typeQualifier) throws ClassNotFoundException {\n        String className = typeQualifier.getClassName();\n        if (className.startsWith(\"javax.annotation\"))\n            return (Class<A>) Class.forName(className);\n        ClassData data;\n        try {\n            data = Global.getAnalysisCache().getClassAnalysis(ClassData.class, typeQualifier);\n        } catch (CheckedAnalysisException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n            throw new ClassNotFoundException(\"No class data found for \" + typeQualifier, e);\n        }\n        byte [] b = data.getData();\n        \n        ValidatorClassLoader validatorLoader = ValidationSecurityManager.VALIDATOR_LOADER;\n        return (Class<A>) validatorLoader.findClass(typeQualifier.getDottedClassName(), b);\n    }","id":107431,"modified_method":"@SuppressWarnings(\"unchecked\")\n    private static <A> Class<A> getQualifierClass(ClassDescriptor typeQualifier) throws ClassNotFoundException {\n        @DottedClassName String className = typeQualifier.getDottedClassName();\n        if (DEBUG_CLASSLOADING)\n            System.out.println(\"Getting qualifier class for \" + className);\n        if (className.startsWith(\"javax.annotation\"))\n            return (Class<A>) Class.forName(className);\n        ClassData data;\n        try {\n            data = Global.getAnalysisCache().getClassAnalysis(ClassData.class, typeQualifier);\n        } catch (CheckedAnalysisException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n            throw new ClassNotFoundException(\"No class data found for \" + typeQualifier, e);\n        }\n        byte [] b = data.getData();\n        \n        ValidatorClassLoader validatorLoader = ValidationSecurityManager.VALIDATOR_LOADER;\n        return (Class<A>) validatorLoader.findClass(typeQualifier.getDottedClassName(), b);\n    }","commit_id":"00ae5727c24f084d9b8943c9d836deb56a3884b1","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public static <A extends Annotation> When sandboxedValidation(A proxy, TypeQualifierValidator<A> v, @CheckForNull\n    Object constantValue) {\n        if (performingValidation.get())\n            throw new IllegalStateException(\"recursive validation\");\n\n        try {\n            performingValidation.set(Boolean.TRUE);\n\n            When result = v.forConstantValue(proxy, constantValue);\n            if (!performingValidation.get())\n                throw new IllegalStateException(\"performingValidation not set when validation completes\");\n            return result;\n        } finally {\n            performingValidation.set(Boolean.FALSE);\n        }\n    }","id":107432,"modified_method":"public static <A extends Annotation> When sandboxedValidation(A proxy, TypeQualifierValidator<A> v, @CheckForNull\n    Object constantValue) {\n        if (performingValidation.get())\n            throw new IllegalStateException(\"recursive validation\");\n\n        try {\n            performingValidation.set(Boolean.TRUE);\n\n            try {\n                When result = v.forConstantValue(proxy, constantValue);\n                if (!performingValidation.get())\n                    throw new IllegalStateException(\"performingValidation not set when validation completes\");\n                return result;\n            } catch (ClassCastException e) {\n                Class<? extends Annotation> c = proxy.getClass();\n                System.out.println(c.getName() + \" extends \" + c.getSuperclass().getName());\n                for(Class<?> i : c.getInterfaces())\n                        System.out.println(\"  \" + i.getName());\n                throw e;\n            }\n            \n        } finally {\n            performingValidation.set(Boolean.FALSE);\n        }\n    }","commit_id":"00ae5727c24f084d9b8943c9d836deb56a3884b1","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"ValidatorClassLoader() {\n        super(ClassLoader.getSystemClassLoader().getParent());\n        new RuntimeException(\"Creating ValidatorClassLoader #\").printStackTrace();\n    }","id":107433,"modified_method":"ValidatorClassLoader() {\n        super(ClassLoader.getSystemClassLoader().getParent());\n        if (TypeQualifierValue.DEBUG_CLASSLOADING)\n            new RuntimeException(\"Creating ValidatorClassLoader #\").printStackTrace();\n    }","commit_id":"00ae5727c24f084d9b8943c9d836deb56a3884b1","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n    public Class<?> findClass(String name) throws ClassNotFoundException {\n        if (name.startsWith(\"javax.annotation\"))\n                return Class.forName(name);\n       \n        try {\n            System.out.println(\"Looking for class data for \" + name);\n            byte[] b = TypeQualifierValue.loadClassData(name);\n            return findClass(name, b);\n        } catch (CheckedAnalysisException e) {\n            e.printStackTrace();\n            return super.findClass(name);\n        } catch (RuntimeException e) {\n            e.printStackTrace();\n            throw e;\n        }\n\n\n    }","id":107434,"modified_method":"@Override\n    public Class<?> findClass(@DottedClassName String name) throws ClassNotFoundException {\n        if (TypeQualifierValue.DEBUG_CLASSLOADING)\n            System.out.println(\"Looking for class data for \" + name);\n      \n        if (name.startsWith(\"javax.annotation\"))\n                return Class.forName(name);\n       \n        try {\n             byte[] b = TypeQualifierValue.loadClassData(name);\n            return findClass(name, b);\n        } catch (CheckedAnalysisException e) {\n            if (TypeQualifierValue.DEBUG_CLASSLOADING)\n                e.printStackTrace();\n            return super.findClass(name);\n        } catch (RuntimeException e) {\n            if (TypeQualifierValue.DEBUG_CLASSLOADING)\n                e.printStackTrace();\n            throw e;\n        }\n\n\n    }","commit_id":"00ae5727c24f084d9b8943c9d836deb56a3884b1","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public Class<?> findClass(String name, byte [] b) throws ClassNotFoundException {\n        try {\n            System.out.println(\"Loading \" + b.length + \" bytes for class \" + name);\n            Class<?> result = defineClass(name, b, 0, b.length);\n            System.out.println(\"defined class\");\n            return result;\n        } catch (RuntimeException e) {\n            e.printStackTrace();\n            throw e;\n        }\n\n\n    }","id":107435,"modified_method":"public Class<?> findClass(@DottedClassName String name, byte [] b) throws ClassNotFoundException {\n        try {\n            if (TypeQualifierValue.DEBUG_CLASSLOADING)\n                System.out.println(\"Loading \" + b.length + \" bytes for class \" + name);\n            Class<?> result = defineClass(name, b, 0, b.length);\n            if (TypeQualifierValue.DEBUG_CLASSLOADING)\n                System.out.println(\"defined class\");\n            return result;\n        } catch (RuntimeException e) {\n            e.printStackTrace();\n            throw e;\n        }\n\n\n    }","commit_id":"00ae5727c24f084d9b8943c9d836deb56a3884b1","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private void loadDefaultDataSources() {\n        try {\n            String breakTag = \"\";\n            //dataSourceList.getContents().addElement(breakTag);\n            DataSource ds1 = new FavoritesDataSource(\"My Saved Content\");\n            dataSourceList.addOrdered(ds1);\n            //dataSourceList.getContents().addElement(breakTag);\n            DataSource ds2 = new LocalFileDataSource(\"My Computer\",\"\");\n            dataSourceList.addOrdered(ds2);\n            // default selection\n            dataSourceList.setSelectedValue(ds2,true);\n        } catch(Exception ex) {\n            if(DEBUG.DR) System.out.println(\"Datasource loading problem =\"+ex);\n        }\n        \n    }","id":107436,"modified_method":"private void loadDefaultDataSources() {\n        try {\n            String breakTag = \"\";\n            //dataSourceList.getContents().addElement(breakTag);\n            DataSource ds1 = new FavoritesDataSource(\"My Saved Content\");\n            dataSourceList.addOrdered(ds1);\n            //dataSourceList.getContents().addElement(breakTag);\n            DataSource ds2 = new LocalFileDataSource(\"My Computer\",\"\");\n            dataSourceList.addOrdered(ds2);\n            // default selection\n            dataSourceList.setSelectedValue(ds2,true);\n            DataSourceViewer.saveDataSourceViewer();\n        } catch(Exception ex) {\n            if(DEBUG.DR) System.out.println(\"Datasource loading problem =\"+ex);\n        }\n        \n    }","commit_id":"780c794a357bbdb450afe2cd50205315018010e0","url":"https://github.com/VUE/VUE"},{"original_method":"public static void saveDataSourceViewer() {\n        if (dataSourceList == null) {\n            System.err.println(\"DataSourceViewer: No dataSourceList to save.\");\n            return;\n        }\n        int size = dataSourceList.getModel().getSize();\n        File f  = new File(VueUtil.getDefaultUserFolder().getAbsolutePath()+File.separatorChar+VueResources.getString(\"save.datasources\"));\n        Vector sDataSources = new Vector();\n        for (int i = 0; i< size; i++) {\n            Object item = dataSourceList.getModel().getElementAt(i);\n            if (DEBUG.DR) System.out.println(\"saveDataSourceViewer: item \" + i + \" is \" + item.getClass().getName() + \"[\" + item + \"]\");\n            if (item instanceof DataSource) {\n                sDataSources.add((DataSource)item);\n            } else {\n                if (DEBUG.DR) System.out.println(\"\\tskipped item of \" + item.getClass());\n            }\n        }\n        try {\n            if (DEBUG.DR) System.out.println(\"saveDataSourceViewer: creating new SaveDataSourceViewer\");\n            SaveDataSourceViewer sViewer= new SaveDataSourceViewer(sDataSources);\n            if (DEBUG.DR) System.out.println(\"saveDataSourceViewer: marshallMap: saving \" + sViewer + \" to \" + f);\n            marshallMap(f,sViewer);\n        } catch (Throwable t) {\n            t.printStackTrace();\n        }\n    }","id":107437,"modified_method":"public static void saveDataSourceViewer() {\n        if (dataSourceList == null) {\n            System.err.println(\"DataSourceViewer: No dataSourceList to save.\");\n            return;\n        }\n        int size = dataSourceList.getModel().getSize();\n        File f  = new File(VueUtil.getDefaultUserFolder().getAbsolutePath()+File.separatorChar+VueResources.getString(\"save.datasources\"));\n        Vector sDataSources = new Vector();\n        for (int i = 0; i<size; i++) {\n            Object item = dataSourceList.getModel().getElementAt(i);\n            if (DEBUG.DR) System.out.println(\"saveDataSourceViewer: item \" + i + \" is \" + item.getClass().getName() + \"[\" + item + \"] of \" + size);\n            if (item instanceof DataSource) {\n                sDataSources.add((DataSource)item);\n            } else {\n                if (DEBUG.DR) System.out.println(\"\\tskipped item of \" + item.getClass());\n            }\n        }\n        try {\n            if (DEBUG.DR) System.out.println(\"saveDataSourceViewer: creating new SaveDataSourceViewer\");\n            SaveDataSourceViewer sViewer= new SaveDataSourceViewer(sDataSources);\n            if (DEBUG.DR) System.out.println(\"saveDataSourceViewer: marshallMap: saving \" + sViewer + \" to \" + f);\n            marshallMap(f,sViewer);\n        } catch (Throwable t) {\n            t.printStackTrace();\n        }\n    }","commit_id":"780c794a357bbdb450afe2cd50205315018010e0","url":"https://github.com/VUE/VUE"},{"original_method":"public void loadDataSources() {\n        boolean init = true;\n        File f  = new File(VueUtil.getDefaultUserFolder().getAbsolutePath()+File.separatorChar+VueResources.getString(\"save.datasources\"));\n        System.out.println(\"Data source file: \" + f.getAbsolutePath());\n        if (!f.exists()) {\n            loadDefaultDataSources();\n        } else {\n            int type;\n            try{\n                SaveDataSourceViewer rViewer = unMarshallMap(f);\n                Vector rsources = rViewer.getSaveDataSources();\n                while (!(rsources.isEmpty())){\n                    DataSource ds = (DataSource)rsources.remove(0);\n                    ds.setResourceViewer();\n                    try {\n                        dataSourceList.addOrdered(ds);\n                    } catch(Exception ex) {System.out.println(\"this is a problem in restoring the datasources\");}\n                }\n                saveDataSourceViewer();\n            } catch (Exception ex) {\n                System.out.println(\"Datasource loading problem = \"+ex);\n                ex.printStackTrace();\n                loadDefaultDataSources();\n            }\n        }\n    }","id":107438,"modified_method":"public void loadDataSources() {\n        boolean init = true;\n        File f  = new File(VueUtil.getDefaultUserFolder().getAbsolutePath()+File.separatorChar+VueResources.getString(\"save.datasources\"));\n        if(DEBUG.DR) System.out.println(\"Data source file: \" + f.getAbsolutePath());\n        if (!f.exists()) {\n            if(DEBUG.DR) System.out.println(\"Loading Default Datasource\");\n            loadDefaultDataSources();\n        } else {\n            int type;\n            try{\n                if(DEBUG.DR) System.out.println(\"Loading Existing Datasource\");\n                SaveDataSourceViewer rViewer = unMarshallMap(f);\n                Vector rsources = rViewer.getSaveDataSources();\n                while (!(rsources.isEmpty())){\n                    DataSource ds = (DataSource)rsources.remove(0);\n                    ds.setResourceViewer();\n                    try {\n                        dataSourceList.addOrdered(ds);\n                    } catch(Exception ex) {System.out.println(\"DataSourceViewer.loadDataSources\"+ex);}\n                }\n            } catch (Exception ex) {\n                System.out.println(\"Datasource loading problem = \"+ex);\n                ex.printStackTrace();\n                loadDefaultDataSources();\n            }\n        }\n    }","commit_id":"780c794a357bbdb450afe2cd50205315018010e0","url":"https://github.com/VUE/VUE"},{"original_method":"public void dragExit(DropTargetEvent e) {}","id":107439,"modified_method":"public void dragExit(DropTargetEvent e) {\n        if (DEBUG.DND) out(\"dragExit\");\n    }","commit_id":"bb6fec762386c56677b2245e447ee33c77597f27","url":"https://github.com/VUE/VUE"},{"original_method":"public void dropActionChanged( DropTargetDragEvent e ) {}","id":107440,"modified_method":"public void dropActionChanged( DropTargetDragEvent e ) {\n        e.acceptDrag(ACCEPTABLE_DROP_TYPES);        \n    }","commit_id":"bb6fec762386c56677b2245e447ee33c77597f27","url":"https://github.com/VUE/VUE"},{"original_method":"public DataSourceList(DataSourceViewer dsViewer) {\n        super(new DefaultListModel());\n        //this.dsViewer = dsViewer;\n        this.setSelectionMode(DefaultListSelectionModel.SINGLE_SELECTION);\n        this.setFixedCellHeight(-1);    \n    \n        int ACCEPTABLE_DROP_TYPES =\n            DnDConstants.ACTION_COPY |\n            DnDConstants.ACTION_LINK |\n            DnDConstants.ACTION_MOVE;\n\n        // TODO: create a generic resource drop handler from MapDropTarget to use\n        // in places such as this (this code originiated as a copy of MapDropTarget,\n        // but is now completely old/out of sync with with it).\n        \n        new DropTarget(this,  ACCEPTABLE_DROP_TYPES, this);\n        this.setCellRenderer(new DataSourceListCellRenderer());\n    }","id":107441,"modified_method":"public DataSourceList(DataSourceViewer dsViewer) {\n        super(new DefaultListModel());\n        //this.dsViewer = dsViewer;\n        this.setSelectionMode(DefaultListSelectionModel.SINGLE_SELECTION);\n        this.setFixedCellHeight(-1);    \n    \n        // TODO: create a generic resource drop handler from MapDropTarget to use\n        // in places such as this (this code originiated as a copy of MapDropTarget,\n        // but is now completely old/out of sync with with it).\n        \n        new DropTarget(this,  ACCEPTABLE_DROP_TYPES, this);\n        this.setCellRenderer(new DataSourceListCellRenderer());\n    }","commit_id":"bb6fec762386c56677b2245e447ee33c77597f27","url":"https://github.com/VUE/VUE"},{"original_method":"public void dragOver(DropTargetDragEvent e) {}","id":107442,"modified_method":"public void dragOver(DropTargetDragEvent e) {\n        Object over = locationToValue(e.getLocation());\n        if (DEBUG.DND) out(\"dragOver: \" + over);\n        if (over instanceof FavoritesDataSource)\n            e.acceptDrag(e.getDropAction());\n        else\n            e.rejectDrag();\n    }","commit_id":"bb6fec762386c56677b2245e447ee33c77597f27","url":"https://github.com/VUE/VUE"},{"original_method":"public void drop(DropTargetDropEvent e) {\n        e.acceptDrop(DnDConstants.ACTION_COPY);\n        int current = this.getSelectedIndex();\n        int dropLocation = locationToIndex(e.getLocation());\n        this.setSelectedIndex(dropLocation);\n        DataSource ds = (DataSource)getSelectedValue();\n        System.out.println(\"Selected datasource:\"+ds.getDisplayName());\n        try {\n            FavoritesWindow fw = (FavoritesWindow)ds.getResourceViewer();\n            VueDandDTree favoritesTree = fw.getFavoritesTree();\n            favoritesTree.setRootVisible(true);\n            DefaultTreeModel model = (DefaultTreeModel)favoritesTree.getModel();\n            FavoritesNode rootNode = (FavoritesNode)model.getRoot();\n            boolean success = false;\n            Transferable transfer = e.getTransferable();\n            DataFlavor[] dataFlavors = transfer.getTransferDataFlavors();\n            String resourceName = null;\n            java.util.List fileList = null;\n            java.util.List resourceList = null;\n            try {\n                if (transfer.isDataFlavorSupported(Resource.DataFlavor)) {\n                    if (debug) System.out.println(\"RESOURCE FOUND\");\n                    resourceList = (java.util.List) transfer.getTransferData(Resource.DataFlavor);\n                    java.util.Iterator iter = resourceList.iterator();\n                    while(iter.hasNext()) {\n                        Resource resource = (Resource) iter.next();\n                        ResourceNode newNode =new  ResourceNode(resource);\n                        model.insertNodeInto(newNode, rootNode, 0);\n                        favoritesTree.expandPath(new TreePath(rootNode.getPath()));\n                        favoritesTree.setRootVisible(false);  \n                    }\n                } else if (transfer.isDataFlavorSupported(DataFlavor.javaFileListFlavor)){\n                    fileList = (java.util.List)transfer.getTransferData(DataFlavor.javaFileListFlavor);\n                    java.util.Iterator iter = fileList.iterator();\n                    while(iter.hasNext()){\n                        File file = (File)iter.next();\n                        if (file.isDirectory()){\n                            try{\n                                LocalFilingManager manager = new LocalFilingManager();   // get a filing manager\n                                osid.shared.Agent agent = null;\n                                LocalCabinet cab = new LocalCabinet(file.getAbsolutePath(),agent,null);\n                                CabinetResource res = new CabinetResource(cab);\n                                CabinetEntry entry = res.getEntry();\n                                if (file.getPath().toLowerCase().endsWith(\".url\")) {\n                                    String url = convertWindowsURLShortCutToURL(file);\n                                    if (url != null) {\n                                        res.setSpec(\"file://\" + url);\n                                        String resName;\n                                        if (file.getName().length() > 4)\n                                            resName = file.getName().substring(0, file.getName().length() - 4);\n                                        else\n                                            resName = file.getName();\n                                        res.setTitle(resName);\n                                    }\n                                }\n                                CabinetNode cabNode = null;\n                                if (entry instanceof RemoteCabinetEntry)\n                                    cabNode = new CabinetNode(res, CabinetNode.REMOTE);\n                                else\n                                    cabNode = new CabinetNode(res, CabinetNode.LOCAL);\n                                model.insertNodeInto(cabNode, rootNode, 0);\n                                favoritesTree.expandPath(new TreePath(rootNode.getPath()));\n                                favoritesTree.setRootVisible(false);\n                            }catch (Exception ex) {System.out.println(\"DataSourceList.drop: \"+ex);}\n                        } else{\n                            try{\n                                LocalFilingManager manager = new LocalFilingManager();   // get a filing manager\n                                osid.shared.Agent agent = null;\n                                LocalCabinet cab = new LocalCabinet(file.getAbsolutePath(),agent,null);\n                                CabinetResource res = new CabinetResource(cab);\n                                res.setTitle(file.getAbsolutePath());\n                                CabinetEntry oldentry = res.getEntry();\n                                res.setEntry(null);\n                                if (file.getPath().toLowerCase().endsWith(\".url\")) {\n                                    // Search a windows .url file (an internet shortcut)\n                                    // for the actual web reference.\n                                    String url = convertWindowsURLShortCutToURL(file);\n                                    if (url != null) {\n                                        //resourceSpec = url;\n                                        res.setSpec(\"file://\" + url);\n                                        String resName;\n                                        if (file.getName().length() > 4)\n                                            resName = file.getName().substring(0, file.getName().length() - 4);\n                                        else\n                                            resName = file.getName();\n                                        res.setTitle(resourceName);\n                                    }\n                                }\n                                CabinetNode cabNode = null;\n                                if (oldentry instanceof RemoteCabinetEntry)\n                                    cabNode = new CabinetNode(res, CabinetNode.REMOTE);\n                                else\n                                    cabNode = new CabinetNode(res, CabinetNode.LOCAL);\n                                model.insertNodeInto(cabNode, rootNode, 0);\n                                favoritesTree.expandPath(new TreePath(rootNode.getPath()));\n                                favoritesTree.setRootVisible(false);\n                            }catch (Exception ex) {System.out.println(\"DataSourceList.drop: \"+ex);}\n                        }\n                    }\n                }\n                \n                else if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)){\n                    String dataString = (String)transfer.getTransferData(DataFlavor.stringFlavor);\n                    Resource resource = new MapResource(dataString);\n                    ResourceNode newNode =new  ResourceNode(resource);\n                    model.insertNodeInto(newNode, rootNode, 0);\n                    favoritesTree.expandPath(new TreePath(rootNode.getPath()));\n                    favoritesTree.setRootVisible(false);\n                }\n            } catch (Exception ex) {\n                ex.printStackTrace();\n            }\n            e.dropComplete(success);\n            favoritesTree.setRootVisible(true);\n            favoritesTree.expandRow(0);\n            favoritesTree.setRootVisible(false);\n            this.setSelectedIndex(current);\n        } catch (Exception ex) {\n            this.setSelectedIndex(current);\n            VueUtil.alert(null, \"You can only add resources to a Favorites Datasource\",\"Resource Not Added\");\n        }\n    }","id":107443,"modified_method":"public void drop(DropTargetDropEvent e) {\n        Object over = locationToValue(e.getLocation());\n        if (DEBUG.DND) out(\"DROP over \" + over);\n        if (over instanceof FavoritesDataSource) {\n            if (DEBUG.DND) out(\"drag ACCEPTED\");\n            e.acceptDrop(e.getDropAction());\n        } else {\n            if (DEBUG.DND) out(\"drag rejected\");\n            e.rejectDrop();\n            return;\n        }\n\n        int current = this.getSelectedIndex();\n        setSelectedIndex(locationToIndex(e.getLocation()));\n        DataSource ds = (DataSource)getSelectedValue();\n                         \n        if (DEBUG.DND) System.out.println(\"DROP ON DATA SOURCE: \" + ds.getDisplayName());\n        try {\n            FavoritesWindow fw = (FavoritesWindow)ds.getResourceViewer();\n            VueDandDTree favoritesTree = fw.getFavoritesTree();\n            favoritesTree.setRootVisible(true);\n            DefaultTreeModel model = (DefaultTreeModel)favoritesTree.getModel();\n            FavoritesNode rootNode = (FavoritesNode)model.getRoot();\n            boolean success = true;\n            Transferable transfer = e.getTransferable();\n            DataFlavor[] dataFlavors = transfer.getTransferDataFlavors();\n            String resourceName = null;\n            java.util.List fileList = null;\n            java.util.List resourceList = null;\n            if (DEBUG.DND) System.out.println(\"RESOURCE TRANSFER FOUND: \" + transfer);\n            try {\n                if (transfer.isDataFlavorSupported(Resource.DataFlavor)) {\n                    resourceList = (java.util.List) transfer.getTransferData(Resource.DataFlavor);\n                    java.util.Iterator iter = resourceList.iterator();\n                    while(iter.hasNext()) {\n                        Resource resource = (Resource) iter.next();\n                        if (DEBUG.DND) System.out.println(\"RESOURCE FOUND: \" + resource);\n                        ResourceNode newNode =new  ResourceNode(resource);\n                        model.insertNodeInto(newNode, rootNode, 0);\n                        favoritesTree.expandPath(new TreePath(rootNode.getPath()));\n                        favoritesTree.setRootVisible(false);  \n                    }\n                } else if (transfer.isDataFlavorSupported(DataFlavor.javaFileListFlavor)){\n                    fileList = (java.util.List)transfer.getTransferData(DataFlavor.javaFileListFlavor);\n                    java.util.Iterator iter = fileList.iterator();\n                    while(iter.hasNext()){\n                        File file = (File)iter.next();\n                        if (file.isDirectory()){\n                            try{\n                                LocalFilingManager manager = new LocalFilingManager();   // get a filing manager\n                                osid.shared.Agent agent = null;\n                                LocalCabinet cab = new LocalCabinet(file.getAbsolutePath(),agent,null);\n                                CabinetResource res = new CabinetResource(cab);\n                                CabinetEntry entry = res.getEntry();\n                                if (file.getPath().toLowerCase().endsWith(\".url\")) {\n                                    String url = convertWindowsURLShortCutToURL(file);\n                                    if (url != null) {\n                                        res.setSpec(\"file://\" + url);\n                                        String resName;\n                                        if (file.getName().length() > 4)\n                                            resName = file.getName().substring(0, file.getName().length() - 4);\n                                        else\n                                            resName = file.getName();\n                                        res.setTitle(resName);\n                                    }\n                                }\n                                CabinetNode cabNode = null;\n                                if (entry instanceof RemoteCabinetEntry)\n                                    cabNode = new CabinetNode(res, CabinetNode.REMOTE);\n                                else\n                                    cabNode = new CabinetNode(res, CabinetNode.LOCAL);\n                                model.insertNodeInto(cabNode, rootNode, 0);\n                                favoritesTree.expandPath(new TreePath(rootNode.getPath()));\n                                favoritesTree.setRootVisible(false);\n                            }catch (Exception ex) {System.out.println(\"DataSourceList.drop: \"+ex);}\n                        } else{\n                            try{\n                                LocalFilingManager manager = new LocalFilingManager();   // get a filing manager\n                                osid.shared.Agent agent = null;\n                                LocalCabinet cab = new LocalCabinet(file.getAbsolutePath(),agent,null);\n                                CabinetResource res = new CabinetResource(cab);\n                                res.setTitle(file.getAbsolutePath());\n                                CabinetEntry oldentry = res.getEntry();\n                                res.setEntry(null);\n                                if (file.getPath().toLowerCase().endsWith(\".url\")) {\n                                    // Search a windows .url file (an internet shortcut)\n                                    // for the actual web reference.\n                                    String url = convertWindowsURLShortCutToURL(file);\n                                    if (url != null) {\n                                        //resourceSpec = url;\n                                        res.setSpec(\"file://\" + url);\n                                        String resName;\n                                        if (file.getName().length() > 4)\n                                            resName = file.getName().substring(0, file.getName().length() - 4);\n                                        else\n                                            resName = file.getName();\n                                        res.setTitle(resourceName);\n                                    }\n                                }\n                                CabinetNode cabNode = null;\n                                if (oldentry instanceof RemoteCabinetEntry)\n                                    cabNode = new CabinetNode(res, CabinetNode.REMOTE);\n                                else\n                                    cabNode = new CabinetNode(res, CabinetNode.LOCAL);\n                                model.insertNodeInto(cabNode, rootNode, 0);\n                                favoritesTree.expandPath(new TreePath(rootNode.getPath()));\n                                favoritesTree.setRootVisible(false);\n                            }catch (Exception ex) {System.out.println(\"DataSourceList.drop: \"+ex);}\n                        }\n                    }\n                }\n                \n                else if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)){\n                    String dataString = (String)transfer.getTransferData(DataFlavor.stringFlavor);\n                    Resource resource = new MapResource(dataString);\n                    ResourceNode newNode =new  ResourceNode(resource);\n                    model.insertNodeInto(newNode, rootNode, 0);\n                    favoritesTree.expandPath(new TreePath(rootNode.getPath()));\n                    favoritesTree.setRootVisible(false);\n                }\n            } catch (Exception ex) {\n                ex.printStackTrace();\n            }\n            e.dropComplete(success);\n            favoritesTree.setRootVisible(true);\n            favoritesTree.expandRow(0);\n            favoritesTree.setRootVisible(false);\n            this.setSelectedIndex(current);\n        } catch (Exception ex) {\n            if (DEBUG.DND) tufts.Util.printStackTrace(ex);\n            this.setSelectedIndex(current);\n            VueUtil.alert(null, \"You can only add resources to a Favorites Datasource\",\"Resource Not Added\");\n        }\n    }","commit_id":"bb6fec762386c56677b2245e447ee33c77597f27","url":"https://github.com/VUE/VUE"},{"original_method":"public void dragEnter(DropTargetDragEvent e) { }","id":107444,"modified_method":"public void dragEnter(DropTargetDragEvent e) {\n        if (DEBUG.DND) out(\"dragEnter\");\n        e.acceptDrag(ACCEPTABLE_DROP_TYPES);        \n    }","commit_id":"bb6fec762386c56677b2245e447ee33c77597f27","url":"https://github.com/VUE/VUE"},{"original_method":"private static void removeParensFromBinaryExpression(\n    @NotNull PsiBinaryExpression binaryExpression,\n    boolean ignoreClarifyingParentheses)\n    throws IncorrectOperationException {\n    final PsiExpression lhs = binaryExpression.getLOperand();\n    removeParentheses(lhs, ignoreClarifyingParentheses);\n    final PsiExpression rhs = binaryExpression.getROperand();\n    if (rhs != null) {\n      removeParentheses(rhs, ignoreClarifyingParentheses);\n    }\n  }","id":107445,"modified_method":"private static void removeParensFromPolyadicExpression(@NotNull PsiPolyadicExpression polyadicExpression,\n                                                         boolean ignoreClarifyingParentheses) {\n    for (PsiExpression operand : polyadicExpression.getOperands()) {\n      removeParentheses(operand, ignoreClarifyingParentheses);\n    }\n  }","commit_id":"f0b5a83a78f9ce6864acbfa305c122480106acc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean areParenthesesNeeded(\n    PsiParenthesizedExpression expression,\n    boolean ignoreClarifyingParentheses) {\n    final PsiElement parent = expression.getParent();\n    final PsiExpression child = expression.getExpression();\n    return areParenthesesNeeded(child, parent,\n                                ignoreClarifyingParentheses);\n  }","id":107446,"modified_method":"public static boolean areParenthesesNeeded(PsiParenthesizedExpression expression) {\n    final PsiElement parent = expression.getParent();\n    if (!(parent instanceof PsiExpression)) {\n      return false;\n    }\n    final PsiExpression child = expression.getExpression();\n    if (child == null) {\n      return true;\n    }\n    return areParenthesesNeeded(child, (PsiExpression)parent);\n  }","commit_id":"f0b5a83a78f9ce6864acbfa305c122480106acc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void removeParentheses(@NotNull PsiExpression expression,\n                                       boolean ignoreClarifyingParentheses)\n    throws IncorrectOperationException {\n    if (expression instanceof PsiMethodCallExpression) {\n      final PsiMethodCallExpression methodCall =\n        (PsiMethodCallExpression)expression;\n      removeParensFromMethodCallExpression(methodCall,\n                                           ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiReferenceExpression) {\n      final PsiReferenceExpression referenceExpression =\n        (PsiReferenceExpression)expression;\n      removeParensFromReferenceExpression(referenceExpression,\n                                          ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiNewExpression) {\n      final PsiNewExpression newExpression = (PsiNewExpression)expression;\n      removeParensFromNewExpression(newExpression,\n                                    ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiAssignmentExpression) {\n      final PsiAssignmentExpression assignmentExpression =\n        (PsiAssignmentExpression)expression;\n      removeParensFromAssignmentExpression(assignmentExpression,\n                                           ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiArrayInitializerExpression) {\n      final PsiArrayInitializerExpression arrayInitializerExpression =\n        (PsiArrayInitializerExpression)expression;\n      removeParensFromArrayInitializerExpression(\n        arrayInitializerExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiTypeCastExpression) {\n      final PsiTypeCastExpression typeCastExpression =\n        (PsiTypeCastExpression)expression;\n      removeParensFromTypeCastExpression(typeCastExpression,\n                                         ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiArrayAccessExpression) {\n      final PsiArrayAccessExpression arrayAccessExpression =\n        (PsiArrayAccessExpression)expression;\n      removeParensFromArrayAccessExpression(arrayAccessExpression,\n                                            ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiPrefixExpression) {\n      final PsiPrefixExpression prefixExpression =\n        (PsiPrefixExpression)expression;\n      removeParensFromPrefixExpression(prefixExpression,\n                                       ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiPostfixExpression) {\n      final PsiPostfixExpression postfixExpression =\n        (PsiPostfixExpression)expression;\n      removeParensFromPostfixExpression(postfixExpression,\n                                        ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiBinaryExpression) {\n      final PsiBinaryExpression binaryExpression =\n        (PsiBinaryExpression)expression;\n      removeParensFromBinaryExpression(binaryExpression,\n                                       ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiInstanceOfExpression) {\n      final PsiInstanceOfExpression instanceofExpression =\n        (PsiInstanceOfExpression)expression;\n      removeParensFromInstanceOfExpression(instanceofExpression,\n                                           ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiConditionalExpression) {\n      final PsiConditionalExpression conditionalExpression =\n        (PsiConditionalExpression)expression;\n      removeParensFromConditionalExpression(conditionalExpression,\n                                            ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiParenthesizedExpression) {\n      final PsiParenthesizedExpression parenthesizedExpression =\n        (PsiParenthesizedExpression)expression;\n      removeParensFromParenthesizedExpression(\n        parenthesizedExpression, ignoreClarifyingParentheses);\n    }\n  }","id":107447,"modified_method":"public static void removeParentheses(@NotNull PsiExpression expression, boolean ignoreClarifyingParentheses) {\n    if (expression instanceof PsiMethodCallExpression) {\n      final PsiMethodCallExpression methodCall = (PsiMethodCallExpression)expression;\n      removeParensFromMethodCallExpression(methodCall, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiReferenceExpression) {\n      final PsiReferenceExpression referenceExpression = (PsiReferenceExpression)expression;\n      removeParensFromReferenceExpression(referenceExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiNewExpression) {\n      final PsiNewExpression newExpression = (PsiNewExpression)expression;\n      removeParensFromNewExpression(newExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiAssignmentExpression) {\n      final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression)expression;\n      removeParensFromAssignmentExpression(assignmentExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiArrayInitializerExpression) {\n      final PsiArrayInitializerExpression arrayInitializerExpression = (PsiArrayInitializerExpression)expression;\n      removeParensFromArrayInitializerExpression(arrayInitializerExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiTypeCastExpression) {\n      final PsiTypeCastExpression typeCastExpression = (PsiTypeCastExpression)expression;\n      removeParensFromTypeCastExpression(typeCastExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiArrayAccessExpression) {\n      final PsiArrayAccessExpression arrayAccessExpression = (PsiArrayAccessExpression)expression;\n      removeParensFromArrayAccessExpression(arrayAccessExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiPrefixExpression) {\n      final PsiPrefixExpression prefixExpression = (PsiPrefixExpression)expression;\n      removeParensFromPrefixExpression(prefixExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiPostfixExpression) {\n      final PsiPostfixExpression postfixExpression = (PsiPostfixExpression)expression;\n      removeParensFromPostfixExpression(postfixExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiPolyadicExpression) {\n      final PsiPolyadicExpression binaryExpression = (PsiPolyadicExpression)expression;\n      removeParensFromPolyadicExpression(binaryExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiInstanceOfExpression) {\n      final PsiInstanceOfExpression instanceofExpression = (PsiInstanceOfExpression)expression;\n      removeParensFromInstanceOfExpression(instanceofExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiConditionalExpression) {\n      final PsiConditionalExpression conditionalExpression = (PsiConditionalExpression)expression;\n      removeParensFromConditionalExpression(conditionalExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiParenthesizedExpression) {\n      final PsiParenthesizedExpression parenthesizedExpression = (PsiParenthesizedExpression)expression;\n      removeParensFromParenthesizedExpression(parenthesizedExpression, ignoreClarifyingParentheses);\n    }\n  }","commit_id":"f0b5a83a78f9ce6864acbfa305c122480106acc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static int getPrecedence(PsiExpression expression) {\n    if (expression instanceof PsiThisExpression ||\n        expression instanceof PsiLiteralExpression ||\n        expression instanceof PsiSuperExpression ||\n        expression instanceof PsiClassObjectAccessExpression ||\n        expression instanceof PsiArrayAccessExpression ||\n        expression instanceof PsiArrayInitializerExpression) {\n      return LITERAL_PRECEDENCE;\n    }\n    if (expression instanceof PsiReferenceExpression) {\n      final PsiReferenceExpression referenceExpression =\n        (PsiReferenceExpression)expression;\n      if (referenceExpression.getQualifier() != null) {\n        return METHOD_CALL_PRECEDENCE;\n      }\n      else {\n        return LITERAL_PRECEDENCE;\n      }\n    }\n    if (expression instanceof PsiMethodCallExpression ||\n        expression instanceof PsiNewExpression) {\n      return METHOD_CALL_PRECEDENCE;\n    }\n    if (expression instanceof PsiTypeCastExpression) {\n      return TYPE_CAST_PRECEDENCE;\n    }\n    if (expression instanceof PsiPrefixExpression) {\n      return PREFIX_PRECEDENCE;\n    }\n    if (expression instanceof PsiPostfixExpression) {\n      return POSTFIX_PRECEDENCE;\n    }\n    if (expression instanceof PsiPolyadicExpression) {\n      final PsiPolyadicExpression binaryExpression =\n        (PsiPolyadicExpression)expression;\n      return getPrecedenceForBinaryOperator(binaryExpression.getOperationTokenType());\n    }\n    if (expression instanceof PsiInstanceOfExpression) {\n      return RELATIONAL_PRECEDENCE;\n    }\n    if (expression instanceof PsiConditionalExpression) {\n      return CONDITIONAL_PRECEDENCE;\n    }\n    if (expression instanceof PsiAssignmentExpression) {\n      return ASSIGNMENT_PRECEDENCE;\n    }\n    if (expression instanceof PsiParenthesizedExpression) {\n      return PARENTHESIZED_PRECEDENCE;\n    }\n    return -1;\n  }","id":107448,"modified_method":"public static int getPrecedence(PsiExpression expression) {\n    if (expression instanceof PsiThisExpression ||\n        expression instanceof PsiLiteralExpression ||\n        expression instanceof PsiSuperExpression ||\n        expression instanceof PsiClassObjectAccessExpression ||\n        expression instanceof PsiArrayAccessExpression ||\n        expression instanceof PsiArrayInitializerExpression) {\n      return LITERAL_PRECEDENCE;\n    }\n    if (expression instanceof PsiReferenceExpression) {\n      final PsiReferenceExpression referenceExpression = (PsiReferenceExpression)expression;\n      if (referenceExpression.getQualifier() != null) {\n        return METHOD_CALL_PRECEDENCE;\n      }\n      else {\n        return LITERAL_PRECEDENCE;\n      }\n    }\n    if (expression instanceof PsiMethodCallExpression || expression instanceof PsiNewExpression) {\n      return METHOD_CALL_PRECEDENCE;\n    }\n    if (expression instanceof PsiTypeCastExpression) {\n      return TYPE_CAST_PRECEDENCE;\n    }\n    if (expression instanceof PsiPrefixExpression) {\n      return PREFIX_PRECEDENCE;\n    }\n    if (expression instanceof PsiPostfixExpression) {\n      return POSTFIX_PRECEDENCE;\n    }\n    if (expression instanceof PsiPolyadicExpression) {\n      final PsiPolyadicExpression polyadicExpression = (PsiPolyadicExpression)expression;\n      return getPrecedenceForOperator(polyadicExpression.getOperationTokenType());\n    }\n    if (expression instanceof PsiInstanceOfExpression) {\n      return RELATIONAL_PRECEDENCE;\n    }\n    if (expression instanceof PsiConditionalExpression) {\n      return CONDITIONAL_PRECEDENCE;\n    }\n    if (expression instanceof PsiAssignmentExpression) {\n      return ASSIGNMENT_PRECEDENCE;\n    }\n    if (expression instanceof PsiParenthesizedExpression) {\n      return PARENTHESIZED_PRECEDENCE;\n    }\n    return -1;\n  }","commit_id":"f0b5a83a78f9ce6864acbfa305c122480106acc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean areParenthesesNeeded(\n    PsiExpression expression, PsiElement parentExpression,\n    boolean ignoreClarifyingParentheses) {\n    if (parentExpression instanceof PsiBinaryExpression) {\n      final PsiBinaryExpression parentBinaryExpression =\n        (PsiBinaryExpression)parentExpression;\n      if (expression instanceof PsiBinaryExpression) {\n        final PsiBinaryExpression childBinaryExpression =\n          (PsiBinaryExpression)expression;\n        final IElementType childOperator =\n          childBinaryExpression.getOperationTokenType();\n        final IElementType parentOperator =\n          parentBinaryExpression.getOperationTokenType();\n        if (ignoreClarifyingParentheses &&\n            !childOperator.equals(parentOperator)) {\n          return true;\n        }\n        final PsiType parentType = parentBinaryExpression.getType();\n        if (parentType == null) {\n          return true;\n        }\n        final PsiType childType = childBinaryExpression.getType();\n        if (!parentType.equals(childType)) {\n          return true;\n        }\n        if (PsiTreeUtil.isAncestor(parentBinaryExpression.getROperand(),\n                                   expression, false)) {\n          if (!isCommutativeBinaryOperator(parentOperator)) {\n            return true;\n          }\n        }\n        return false;\n      }\n      else if (expression instanceof PsiConditionalExpression) {\n        if (PsiTreeUtil.isAncestor(parentBinaryExpression.getROperand(),\n                                   expression, false)) {\n          return true;\n        }\n      }\n    }\n    else if (parentExpression instanceof PsiPrefixExpression) {\n      if (expression instanceof PsiBinaryExpression) {\n        return true;\n      }\n    }\n    return false;\n  }","id":107449,"modified_method":"public static boolean areParenthesesNeeded(PsiExpression expression, PsiExpression parentExpression) {\n    if (parentExpression instanceof PsiParenthesizedExpression) {\n      return false;\n    }\n    else if (parentExpression instanceof PsiPolyadicExpression && expression instanceof PsiPolyadicExpression) {\n      final PsiPolyadicExpression parentBinaryExpression = (PsiPolyadicExpression)parentExpression;\n      final PsiType parentType = parentBinaryExpression.getType();\n      if (parentType == null) {\n        return true;\n      }\n      final PsiPolyadicExpression childBinaryExpression = (PsiPolyadicExpression)expression;\n      final PsiType childType = childBinaryExpression.getType();\n      if (!parentType.equals(childType)) {\n        return true;\n      }\n      final PsiExpression[] parentOperands = parentBinaryExpression.getOperands();\n      if (!PsiTreeUtil.isAncestor(parentOperands[0], expression, false)) {\n        final IElementType parentOperator = parentBinaryExpression.getOperationTokenType();\n        if (!isCommutativeBinaryOperator(parentOperator)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    final int parentPrecedence = getPrecedence(parentExpression);\n    final int childPrecedence = getPrecedence(expression);\n    return parentPrecedence < childPrecedence;\n  }","commit_id":"f0b5a83a78f9ce6864acbfa305c122480106acc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static int getPrecedenceForBinaryOperator(IElementType operator) {\n    final Integer precedence = s_binaryOperatorPrecedence.get(operator);\n    return precedence.intValue();\n  }","id":107450,"modified_method":"public static int getPrecedenceForOperator(@NotNull IElementType operator) {\n    final Integer precedence = s_binaryOperatorPrecedence.get(operator);\n    if (precedence == null) {\n      throw new IllegalArgumentException(\"unknown operator: \" + operator);\n    }\n    return precedence.intValue();\n  }","commit_id":"f0b5a83a78f9ce6864acbfa305c122480106acc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void removeParensFromParenthesizedExpression(\n    @NotNull PsiParenthesizedExpression parenthesizedExpression,\n    boolean ignoreClarifyingParentheses)\n    throws IncorrectOperationException {\n    final PsiExpression body = parenthesizedExpression.getExpression();\n    if (body == null) {\n      parenthesizedExpression.delete();\n      return;\n    }\n    final PsiElement parent = parenthesizedExpression.getParent();\n    if (!(parent instanceof PsiExpression) ||\n        parent instanceof PsiParenthesizedExpression) {\n      final PsiExpression newExpression =\n        (PsiExpression)parenthesizedExpression.replace(body);\n      removeParentheses(newExpression, ignoreClarifyingParentheses);\n      return;\n    }\n    final PsiExpression parentExpression = (PsiExpression)parent;\n    final int parentPrecedence = getPrecedence(parentExpression);\n    final int childPrecedence = getPrecedence(body);\n    if (parentPrecedence < childPrecedence) {\n      final PsiElement bodyParent = body.getParent();\n      final PsiParenthesizedExpression newParenthesizedExpression =\n        (PsiParenthesizedExpression)\n          parenthesizedExpression.replace(bodyParent);\n      final PsiExpression expression =\n        newParenthesizedExpression.getExpression();\n      if (expression != null) {\n        removeParentheses(expression, ignoreClarifyingParentheses);\n      }\n    }\n    else if (parentPrecedence == childPrecedence) {\n      if (parentExpression instanceof PsiBinaryExpression &&\n          body instanceof PsiBinaryExpression) {\n        final PsiBinaryExpression parentBinaryExpression =\n          (PsiBinaryExpression)parentExpression;\n        final IElementType parentOperator =\n          parentBinaryExpression.getOperationTokenType();\n        final PsiBinaryExpression bodyBinaryExpression =\n          (PsiBinaryExpression)body;\n        final IElementType bodyOperator =\n          bodyBinaryExpression.getOperationTokenType();\n        final PsiType parentType = parentBinaryExpression.getType();\n        final PsiType bodyType = body.getType();\n        if (parentType != null && parentType.equals(bodyType) &&\n            parentOperator.equals(bodyOperator)) {\n          final PsiExpression rhs =\n            parentBinaryExpression.getROperand();\n          if (!PsiTreeUtil.isAncestor(rhs, body, true) ||\n              isCommutativeBinaryOperator(bodyOperator)) {\n            // use addAfter() + delete() instead of replace() to\n            // workaround automatic insertion of parentheses by psi\n            final PsiExpression newExpression = (PsiExpression)\n              parent.addAfter(body, parenthesizedExpression);\n            parenthesizedExpression.delete();\n            removeParentheses(newExpression,\n                              ignoreClarifyingParentheses);\n            return;\n          }\n        }\n        if (ignoreClarifyingParentheses) {\n          if (parentOperator.equals(bodyOperator)) {\n            removeParentheses(body, ignoreClarifyingParentheses);\n          }\n        }\n        else {\n          final PsiExpression newExpression = (PsiExpression)\n            parenthesizedExpression.replace(body);\n          removeParentheses(newExpression,\n                            ignoreClarifyingParentheses);\n        }\n      }\n      else {\n        final PsiExpression newExpression =\n          (PsiExpression)parenthesizedExpression.replace(body);\n        removeParentheses(newExpression, ignoreClarifyingParentheses);\n      }\n    }\n    else {\n      if (ignoreClarifyingParentheses &&\n          parent instanceof PsiBinaryExpression &&\n          (body instanceof PsiBinaryExpression ||\n           body instanceof PsiInstanceOfExpression)) {\n        removeParentheses(body, ignoreClarifyingParentheses);\n      }\n      else {\n        final PsiExpression newExpression =\n          (PsiExpression)parenthesizedExpression.replace(body);\n        removeParentheses(newExpression, ignoreClarifyingParentheses);\n      }\n    }\n  }","id":107451,"modified_method":"private static void removeParensFromParenthesizedExpression(@NotNull PsiParenthesizedExpression parenthesizedExpression,\n                                                              boolean ignoreClarifyingParentheses) {\n    final PsiExpression body = parenthesizedExpression.getExpression();\n    if (body == null) {\n      parenthesizedExpression.delete();\n      return;\n    }\n    final PsiElement parent = parenthesizedExpression.getParent();\n    if (!(parent instanceof PsiExpression) || parent instanceof PsiParenthesizedExpression) {\n      final PsiExpression newExpression = (PsiExpression)parenthesizedExpression.replace(body);\n      removeParentheses(newExpression, ignoreClarifyingParentheses);\n      return;\n    }\n    final PsiExpression parentExpression = (PsiExpression)parent;\n    final int parentPrecedence = getPrecedence(parentExpression);\n    final int childPrecedence = getPrecedence(body);\n    if (parentPrecedence < childPrecedence) {\n      final PsiElement bodyParent = body.getParent();\n      final PsiParenthesizedExpression newParenthesizedExpression = (PsiParenthesizedExpression)parenthesizedExpression.replace(bodyParent);\n      final PsiExpression expression = newParenthesizedExpression.getExpression();\n      if (expression != null) {\n        removeParentheses(expression, ignoreClarifyingParentheses);\n      }\n    }\n    else if (parentPrecedence == childPrecedence) {\n      if (parentExpression instanceof PsiPolyadicExpression && body instanceof PsiPolyadicExpression) {\n        final PsiPolyadicExpression parentBinaryExpression = (PsiPolyadicExpression)parentExpression;\n        final IElementType parentOperator = parentBinaryExpression.getOperationTokenType();\n        final PsiPolyadicExpression bodyBinaryExpression = (PsiPolyadicExpression)body;\n        final IElementType bodyOperator = bodyBinaryExpression.getOperationTokenType();\n        final PsiType parentType = parentBinaryExpression.getType();\n        final PsiType bodyType = body.getType();\n        if (parentType != null && parentType.equals(bodyType) && parentOperator.equals(bodyOperator)) {\n          final PsiExpression[] parentOperands = parentBinaryExpression.getOperands();\n          if (PsiTreeUtil.isAncestor(parentOperands[0], body, true) || isCommutativeBinaryOperator(bodyOperator)) {\n            // use addAfter() + delete() instead of replace() to\n            // workaround automatic insertion of parentheses by psi\n            final PsiExpression newExpression = (PsiExpression)parent.addAfter(body, parenthesizedExpression);\n            parenthesizedExpression.delete();\n            removeParentheses(newExpression, ignoreClarifyingParentheses);\n            return;\n          }\n        }\n        if (ignoreClarifyingParentheses) {\n          if (parentOperator.equals(bodyOperator)) {\n            removeParentheses(body, ignoreClarifyingParentheses);\n          }\n        }\n        else {\n          final PsiExpression newExpression = (PsiExpression)parenthesizedExpression.replace(body);\n          removeParentheses(newExpression, ignoreClarifyingParentheses);\n        }\n      }\n      else {\n        final PsiExpression newExpression = (PsiExpression)parenthesizedExpression.replace(body);\n        removeParentheses(newExpression, ignoreClarifyingParentheses);\n      }\n    }\n    else {\n      if (ignoreClarifyingParentheses && parent instanceof PsiPolyadicExpression &&\n          (body instanceof PsiPolyadicExpression || body instanceof PsiInstanceOfExpression)) {\n        removeParentheses(body, ignoreClarifyingParentheses);\n      }\n      else {\n        final PsiExpression newExpression = (PsiExpression)parenthesizedExpression.replace(body);\n        removeParentheses(newExpression, ignoreClarifyingParentheses);\n      }\n    }\n  }","commit_id":"f0b5a83a78f9ce6864acbfa305c122480106acc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void stripLambdaParameterParentheses(PsiParameterList element) {\n    final PsiLambdaExpression expression =\n      (PsiLambdaExpression)JavaPsiFacade\n        .getElementFactory(element.getProject()).createExpressionFromText(element.getParameters()[0].getName() + \"->{}\",element);\n    element.replace(expression.getParameterList());\n  }","id":107452,"modified_method":"public static void stripLambdaParameterParentheses(PsiParameterList element) {\n    final PsiElementFactory factory = JavaPsiFacade.getElementFactory(element.getProject());\n    final String text = element.getParameters()[0].getName() + \"->{}\";\n    final PsiLambdaExpression expression = (PsiLambdaExpression)factory.createExpressionFromText(text, element);\n    element.replace(expression.getParameterList());\n  }","commit_id":"f0b5a83a78f9ce6864acbfa305c122480106acc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void processIntention(@NotNull PsiElement element)\n    throws IncorrectOperationException {\n    if (element instanceof PsiParameterList) {\n      stripLambdaParameterParentheses((PsiParameterList)element);\n      return;\n    }\n    PsiExpression expression = (PsiExpression)element;\n    while (expression.getParent() instanceof PsiExpression) {\n      expression = (PsiExpression)expression.getParent();\n      assert expression != null;\n    }\n    ParenthesesUtils.removeParentheses(expression, false);\n  }","id":107453,"modified_method":"@Override\n  public void processIntention(@NotNull PsiElement element) throws IncorrectOperationException {\n    if (element instanceof PsiParameterList) {\n      stripLambdaParameterParentheses((PsiParameterList)element);\n      return;\n    }\n    PsiExpression expression = (PsiExpression)element;\n    ParenthesesUtils.removeParentheses(expression, false);\n  }","commit_id":"f0b5a83a78f9ce6864acbfa305c122480106acc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void appendElementTextWithoutParentheses(@NotNull PsiElement element, @NotNull PsiElement elementToReplace,\n                                                          @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) {\n    final PsiElement expressionParent = elementToReplace.getParent();\n    if (expressionParent instanceof PsiParenthesizedExpression) {\n      final PsiElement grandParent = expressionParent.getParent();\n      if (!ParenthesesUtils.areParenthesesNeeded(replacementExpression, grandParent, true)) {\n        appendElementText(element, expressionParent, replacementExpression, out);\n        return;\n      }\n    }\n    appendElementText(element, elementToReplace, replacementExpression, out);\n  }","id":107454,"modified_method":"private static void appendElementTextWithoutParentheses(@NotNull PsiElement element, @NotNull PsiElement elementToReplace,\n                                                          @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) {\n    final PsiElement expressionParent = elementToReplace.getParent();\n    if (expressionParent instanceof PsiParenthesizedExpression) {\n      final PsiElement grandParent = expressionParent.getParent();\n      if (replacementExpression == null || !(grandParent instanceof PsiExpression) ||\n          !ParenthesesUtils.areParenthesesNeeded(replacementExpression, (PsiExpression) grandParent)) {\n        appendElementText(element, expressionParent, replacementExpression, out);\n        return;\n      }\n    }\n    appendElementText(element, elementToReplace, replacementExpression, out);\n  }","commit_id":"f0b5a83a78f9ce6864acbfa305c122480106acc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void processIntention(@NotNull PsiElement element) throws IncorrectOperationException {\n    final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression)element;\n    final PsiJavaToken sign = assignmentExpression.getOperationSign();\n    final PsiExpression lhs = assignmentExpression.getLExpression();\n    final PsiExpression rhs = assignmentExpression.getRExpression();\n    final String operator = sign.getText();\n    final String newOperator = operator.substring(0, operator.length() - 1);\n    final String lhsText = lhs.getText();\n    final String rhsText = (rhs == null) ? \"\" : rhs.getText();\n    final boolean parentheses;\n    if (rhs instanceof PsiBinaryExpression) {\n      final PsiBinaryExpression binaryExpression = (PsiBinaryExpression)rhs;\n      final int precedence1 = ParenthesesUtils.getPrecedenceForBinaryOperator(binaryExpression.getOperationTokenType());\n      final IElementType signTokenType = sign.getTokenType();\n      final IElementType newOperatorToken = tokenMap.get(signTokenType);\n      final int precedence2 = ParenthesesUtils.getPrecedenceForBinaryOperator(newOperatorToken);\n      parentheses = precedence1 >= precedence2 || !ParenthesesUtils.isCommutativeBinaryOperator(newOperatorToken);\n    }\n    else {\n      parentheses = false;\n    }\n    final String cast = getCastString(lhs, rhs);\n    final StringBuilder newExpression = new StringBuilder(lhsText);\n    newExpression.append('=').append(cast);\n    if (!cast.isEmpty()) {\n      newExpression.append('(');\n    }\n    newExpression.append(lhsText).append(newOperator);\n    if (parentheses) {\n      newExpression.append('(').append(rhsText).append(')');\n    }\n    else {\n      newExpression.append(rhsText);\n    }\n    if (!cast.isEmpty()) {\n      newExpression.append(')');\n    }\n    replaceExpression(newExpression.toString(), assignmentExpression);\n  }","id":107455,"modified_method":"@Override\n  protected void processIntention(@NotNull PsiElement element) throws IncorrectOperationException {\n    final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression)element;\n    final PsiJavaToken sign = assignmentExpression.getOperationSign();\n    final PsiExpression lhs = assignmentExpression.getLExpression();\n    final PsiExpression rhs = assignmentExpression.getRExpression();\n    final String operator = sign.getText();\n    final String newOperator = operator.substring(0, operator.length() - 1);\n    final String lhsText = lhs.getText();\n    final String rhsText = (rhs == null) ? \"\" : rhs.getText();\n    final boolean parentheses;\n    if (rhs instanceof PsiBinaryExpression) {\n      final PsiBinaryExpression binaryExpression = (PsiBinaryExpression)rhs;\n      final int precedence1 = ParenthesesUtils.getPrecedenceForOperator(binaryExpression.getOperationTokenType());\n      final IElementType signTokenType = sign.getTokenType();\n      final IElementType newOperatorToken = tokenMap.get(signTokenType);\n      final int precedence2 = ParenthesesUtils.getPrecedenceForOperator(newOperatorToken);\n      parentheses = precedence1 >= precedence2 || !ParenthesesUtils.isCommutativeBinaryOperator(newOperatorToken);\n    }\n    else {\n      parentheses = false;\n    }\n    final String cast = getCastString(lhs, rhs);\n    final StringBuilder newExpression = new StringBuilder(lhsText);\n    newExpression.append('=').append(cast);\n    if (!cast.isEmpty()) {\n      newExpression.append('(');\n    }\n    newExpression.append(lhsText).append(newOperator);\n    if (parentheses) {\n      newExpression.append('(').append(rhsText).append(')');\n    }\n    else {\n      newExpression.append(rhsText);\n    }\n    if (!cast.isEmpty()) {\n      newExpression.append(')');\n    }\n    replaceExpression(newExpression.toString(), assignmentExpression);\n  }","commit_id":"f0b5a83a78f9ce6864acbfa305c122480106acc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean satisfiedBy(PsiElement element) {\n    if (element instanceof PsiParameterList) {\n      final PsiElement parent = element.getParent();\n      if (parent instanceof PsiLambdaExpression && ((PsiParameterList)element).getParametersCount() == 1) {\n        final PsiParameter parameter = ((PsiParameterList)element).getParameters()[0];\n        return parameter.getTypeElement() == null && element.getFirstChild() != parameter && element.getLastChild() != parameter;\n      }\n    }\n    if (!(element instanceof PsiParenthesizedExpression)) {\n      return false;\n    }\n    if (ErrorUtil.containsError(element)) {\n      return false;\n    }\n    final PsiParenthesizedExpression expression =\n      (PsiParenthesizedExpression)element;\n    final PsiElement parent = expression.getParent();\n    if (!(parent instanceof PsiExpression)) {\n      return true;\n    }\n    final PsiExpression body = expression.getExpression();\n    if (body instanceof PsiParenthesizedExpression) {\n      return true;\n    }\n    final int parentPrecedence =\n      ParenthesesUtils.getPrecedence((PsiExpression)parent);\n    final int childPrecedence = ParenthesesUtils.getPrecedence(body);\n    if (parentPrecedence > childPrecedence) {\n      return true;\n    }\n    else if (parentPrecedence == childPrecedence) {\n      if (parent instanceof PsiBinaryExpression &&\n          body instanceof PsiBinaryExpression) {\n        final PsiBinaryExpression binaryExpression =\n          (PsiBinaryExpression)parent;\n        final PsiJavaToken parentSign =\n          binaryExpression.getOperationSign();\n        final IElementType parentOperator = parentSign.getTokenType();\n        final IElementType childOperator = ((PsiBinaryExpression)body).getOperationTokenType();\n        if (!parentOperator.equals(childOperator)) {\n          return false;\n        }\n        final PsiType parentType = binaryExpression.getType();\n        final PsiType bodyType = body.getType();\n        return parentType != null && parentType.equals(bodyType);\n      }\n      else {\n        return false;\n      }\n    }\n    else {\n      return false;\n    }\n  }","id":107456,"modified_method":"public boolean satisfiedBy(PsiElement element) {\n    if (element instanceof PsiParameterList) {\n      final PsiParameterList parameterList = (PsiParameterList)element;\n      final PsiElement parent = element.getParent();\n      if (parent instanceof PsiLambdaExpression && parameterList.getParametersCount() == 1) {\n        final PsiParameter parameter = parameterList.getParameters()[0];\n        return parameter.getTypeElement() == null && element.getFirstChild() != parameter && element.getLastChild() != parameter;\n      }\n    }\n    if (!(element instanceof PsiParenthesizedExpression)) {\n      return false;\n    }\n    final PsiParenthesizedExpression expression = (PsiParenthesizedExpression)element;\n    return !ParenthesesUtils.areParenthesesNeeded(expression);\n  }","commit_id":"f0b5a83a78f9ce6864acbfa305c122480106acc6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void applyFix(@NotNull Project project, @NotNull ProblemDescriptor descriptor) {\n      final PsiElement element = descriptor.getPsiElement();\n      final PsiLambdaExpression lambdaExpression = PsiTreeUtil.getParentOfType(element, PsiLambdaExpression.class);\n      if (lambdaExpression == null) return;\n      final String methodRefText = createMethodReferenceText(element, lambdaExpression.getFunctionalInterfaceType());\n\n      if (methodRefText != null) {\n        final PsiExpression psiExpression =\n          JavaPsiFacade.getElementFactory(project).createExpressionFromText(methodRefText, lambdaExpression);\n        JavaCodeStyleManager.getInstance(project).shortenClassReferences(lambdaExpression.replace(psiExpression));\n      }\n    }","id":107457,"modified_method":"@Override\n    public void applyFix(@NotNull Project project, @NotNull ProblemDescriptor descriptor) {\n      final PsiElement element = descriptor.getPsiElement();\n      final PsiLambdaExpression lambdaExpression = PsiTreeUtil.getParentOfType(element, PsiLambdaExpression.class);\n      if (lambdaExpression == null) return;\n      final PsiType functionalInterfaceType = lambdaExpression.getFunctionalInterfaceType();\n      final String methodRefText = createMethodReferenceText(element, functionalInterfaceType);\n\n      if (methodRefText != null) {\n        final PsiElementFactory factory = JavaPsiFacade.getElementFactory(project);\n        final PsiExpression psiExpression =\n          factory.createExpressionFromText(methodRefText, lambdaExpression);\n        PsiElement replace = lambdaExpression.replace(psiExpression);\n        if (((PsiMethodReferenceExpression)replace).getFunctionalInterfaceType() == null) { //ambiguity\n          final PsiTypeCastExpression cast = (PsiTypeCastExpression)factory.createExpressionFromText(\"(A)a\", replace);\n          cast.getCastType().replace(factory.createTypeElement(functionalInterfaceType));\n          cast.getOperand().replace(replace);\n          replace = replace.replace(cast);\n        }\n        JavaCodeStyleManager.getInstance(project).shortenClassReferences(replace);\n      }\n    }","commit_id":"e8c454f42626d78eb25496d90abb8ce7703bd481","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void removeParentheses(@NotNull PsiExpression expression,\n                                       boolean ignoreClarifyingParentheses)\n    throws IncorrectOperationException {\n    if (expression instanceof PsiMethodCallExpression) {\n      final PsiMethodCallExpression methodCall =\n        (PsiMethodCallExpression)expression;\n      removeParensFromMethodCallExpression(methodCall,\n                                           ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiReferenceExpression) {\n      final PsiReferenceExpression referenceExpression =\n        (PsiReferenceExpression)expression;\n      removeParensFromReferenceExpression(referenceExpression,\n                                          ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiNewExpression) {\n      final PsiNewExpression newExpression = (PsiNewExpression)expression;\n      removeParensFromNewExpression(newExpression,\n                                    ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiAssignmentExpression) {\n      final PsiAssignmentExpression assignmentExpression =\n        (PsiAssignmentExpression)expression;\n      removeParensFromAssignmentExpression(assignmentExpression,\n                                           ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiArrayInitializerExpression) {\n      final PsiArrayInitializerExpression arrayInitializerExpression =\n        (PsiArrayInitializerExpression)expression;\n      removeParensFromArrayInitializerExpression(\n        arrayInitializerExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiTypeCastExpression) {\n      final PsiTypeCastExpression typeCastExpression =\n        (PsiTypeCastExpression)expression;\n      removeParensFromTypeCastExpression(typeCastExpression,\n                                         ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiArrayAccessExpression) {\n      final PsiArrayAccessExpression arrayAccessExpression =\n        (PsiArrayAccessExpression)expression;\n      removeParensFromArrayAccessExpression(arrayAccessExpression,\n                                            ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiPrefixExpression) {\n      final PsiPrefixExpression prefixExpression =\n        (PsiPrefixExpression)expression;\n      removeParensFromPrefixExpression(prefixExpression,\n                                       ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiPostfixExpression) {\n      final PsiPostfixExpression postfixExpression =\n        (PsiPostfixExpression)expression;\n      removeParensFromPostfixExpression(postfixExpression,\n                                        ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiPolyadicExpression) {\n      final PsiPolyadicExpression binaryExpression =\n        (PsiPolyadicExpression)expression;\n      removeParensFromBinaryExpression(binaryExpression,\n                                       ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiInstanceOfExpression) {\n      final PsiInstanceOfExpression instanceofExpression =\n        (PsiInstanceOfExpression)expression;\n      removeParensFromInstanceOfExpression(instanceofExpression,\n                                           ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiConditionalExpression) {\n      final PsiConditionalExpression conditionalExpression =\n        (PsiConditionalExpression)expression;\n      removeParensFromConditionalExpression(conditionalExpression,\n                                            ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiParenthesizedExpression) {\n      final PsiParenthesizedExpression parenthesizedExpression =\n        (PsiParenthesizedExpression)expression;\n      removeParensFromParenthesizedExpression(\n        parenthesizedExpression, ignoreClarifyingParentheses);\n    }\n  }","id":107458,"modified_method":"public static void removeParentheses(@NotNull PsiExpression expression, boolean ignoreClarifyingParentheses) {\n    if (expression instanceof PsiMethodCallExpression) {\n      final PsiMethodCallExpression methodCall = (PsiMethodCallExpression)expression;\n      removeParensFromMethodCallExpression(methodCall, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiReferenceExpression) {\n      final PsiReferenceExpression referenceExpression = (PsiReferenceExpression)expression;\n      removeParensFromReferenceExpression(referenceExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiNewExpression) {\n      final PsiNewExpression newExpression = (PsiNewExpression)expression;\n      removeParensFromNewExpression(newExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiAssignmentExpression) {\n      final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression)expression;\n      removeParensFromAssignmentExpression(assignmentExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiArrayInitializerExpression) {\n      final PsiArrayInitializerExpression arrayInitializerExpression = (PsiArrayInitializerExpression)expression;\n      removeParensFromArrayInitializerExpression(arrayInitializerExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiTypeCastExpression) {\n      final PsiTypeCastExpression typeCastExpression = (PsiTypeCastExpression)expression;\n      removeParensFromTypeCastExpression(typeCastExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiArrayAccessExpression) {\n      final PsiArrayAccessExpression arrayAccessExpression = (PsiArrayAccessExpression)expression;\n      removeParensFromArrayAccessExpression(arrayAccessExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiPrefixExpression) {\n      final PsiPrefixExpression prefixExpression = (PsiPrefixExpression)expression;\n      removeParensFromPrefixExpression(prefixExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiPostfixExpression) {\n      final PsiPostfixExpression postfixExpression = (PsiPostfixExpression)expression;\n      removeParensFromPostfixExpression(postfixExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiPolyadicExpression) {\n      final PsiPolyadicExpression polyadicExpression = (PsiPolyadicExpression)expression;\n      removeParensFromPolyadicExpression(polyadicExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiInstanceOfExpression) {\n      final PsiInstanceOfExpression instanceofExpression = (PsiInstanceOfExpression)expression;\n      removeParensFromInstanceOfExpression(instanceofExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiConditionalExpression) {\n      final PsiConditionalExpression conditionalExpression = (PsiConditionalExpression)expression;\n      removeParensFromConditionalExpression(conditionalExpression, ignoreClarifyingParentheses);\n    }\n    if (expression instanceof PsiParenthesizedExpression) {\n      final PsiParenthesizedExpression parenthesizedExpression = (PsiParenthesizedExpression)expression;\n      removeParensFromParenthesizedExpression(parenthesizedExpression, ignoreClarifyingParentheses);\n    }\n  }","commit_id":"9fae529fcda6266f8f36cde848c51b2d8066c46f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static int getPrecedenceForBinaryOperator(IElementType operator) {\n    final Integer precedence = s_binaryOperatorPrecedence.get(operator);\n    return precedence.intValue();\n  }","id":107459,"modified_method":"private static int getPrecedenceForOperator(@NotNull IElementType operator) {\n    final Integer precedence = s_binaryOperatorPrecedence.get(operator);\n    if (precedence == null) {\n      throw new IllegalArgumentException(\"unknown operator: \" + operator);\n    }\n    return precedence.intValue();\n  }","commit_id":"9fae529fcda6266f8f36cde848c51b2d8066c46f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static int getPrecedence(PsiExpression expression) {\n    if (expression instanceof PsiThisExpression ||\n        expression instanceof PsiLiteralExpression ||\n        expression instanceof PsiSuperExpression ||\n        expression instanceof PsiClassObjectAccessExpression ||\n        expression instanceof PsiArrayAccessExpression ||\n        expression instanceof PsiArrayInitializerExpression) {\n      return LITERAL_PRECEDENCE;\n    }\n    if (expression instanceof PsiReferenceExpression) {\n      final PsiReferenceExpression referenceExpression =\n        (PsiReferenceExpression)expression;\n      if (referenceExpression.getQualifier() != null) {\n        return METHOD_CALL_PRECEDENCE;\n      }\n      else {\n        return LITERAL_PRECEDENCE;\n      }\n    }\n    if (expression instanceof PsiMethodCallExpression ||\n        expression instanceof PsiNewExpression) {\n      return METHOD_CALL_PRECEDENCE;\n    }\n    if (expression instanceof PsiTypeCastExpression) {\n      return TYPE_CAST_PRECEDENCE;\n    }\n    if (expression instanceof PsiPrefixExpression) {\n      return PREFIX_PRECEDENCE;\n    }\n    if (expression instanceof PsiPostfixExpression) {\n      return POSTFIX_PRECEDENCE;\n    }\n    if (expression instanceof PsiPolyadicExpression) {\n      final PsiPolyadicExpression binaryExpression =\n        (PsiPolyadicExpression)expression;\n      final IElementType sign =\n        binaryExpression.getOperationTokenType();\n      return getPrecedenceForBinaryOperator(sign);\n    }\n    if (expression instanceof PsiInstanceOfExpression) {\n      return RELATIONAL_PRECEDENCE;\n    }\n    if (expression instanceof PsiConditionalExpression) {\n      return CONDITIONAL_PRECEDENCE;\n    }\n    if (expression instanceof PsiAssignmentExpression) {\n      return ASSIGNMENT_PRECEDENCE;\n    }\n    if (expression instanceof PsiParenthesizedExpression) {\n      return PARENTHESIZED_PRECEDENCE;\n    }\n    return -1;\n  }","id":107460,"modified_method":"public static int getPrecedence(PsiExpression expression) {\n    if (expression instanceof PsiThisExpression ||\n        expression instanceof PsiLiteralExpression ||\n        expression instanceof PsiSuperExpression ||\n        expression instanceof PsiClassObjectAccessExpression ||\n        expression instanceof PsiArrayAccessExpression ||\n        expression instanceof PsiArrayInitializerExpression) {\n      return LITERAL_PRECEDENCE;\n    }\n    if (expression instanceof PsiReferenceExpression) {\n      final PsiReferenceExpression referenceExpression = (PsiReferenceExpression)expression;\n      if (referenceExpression.getQualifier() != null) {\n        return METHOD_CALL_PRECEDENCE;\n      }\n      else {\n        return LITERAL_PRECEDENCE;\n      }\n    }\n    if (expression instanceof PsiMethodCallExpression || expression instanceof PsiNewExpression) {\n      return METHOD_CALL_PRECEDENCE;\n    }\n    if (expression instanceof PsiTypeCastExpression) {\n      return TYPE_CAST_PRECEDENCE;\n    }\n    if (expression instanceof PsiPrefixExpression) {\n      return PREFIX_PRECEDENCE;\n    }\n    if (expression instanceof PsiPostfixExpression) {\n      return POSTFIX_PRECEDENCE;\n    }\n    if (expression instanceof PsiPolyadicExpression) {\n      final PsiPolyadicExpression polyadicExpression = (PsiPolyadicExpression)expression;\n      return getPrecedenceForOperator(polyadicExpression.getOperationTokenType());\n    }\n    if (expression instanceof PsiInstanceOfExpression) {\n      return RELATIONAL_PRECEDENCE;\n    }\n    if (expression instanceof PsiConditionalExpression) {\n      return CONDITIONAL_PRECEDENCE;\n    }\n    if (expression instanceof PsiAssignmentExpression) {\n      return ASSIGNMENT_PRECEDENCE;\n    }\n    if (expression instanceof PsiParenthesizedExpression) {\n      return PARENTHESIZED_PRECEDENCE;\n    }\n    return -1;\n  }","commit_id":"9fae529fcda6266f8f36cde848c51b2d8066c46f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void removeParensFromBinaryExpression(\n    @NotNull PsiPolyadicExpression binaryExpression,\n    boolean ignoreClarifyingParentheses)\n    throws IncorrectOperationException {\n    for (PsiExpression operand : binaryExpression.getOperands()) {\n      removeParentheses(operand, ignoreClarifyingParentheses);\n    }\n  }","id":107461,"modified_method":"private static void removeParensFromPolyadicExpression(@NotNull PsiPolyadicExpression polyadicExpression,\n                                                         boolean ignoreClarifyingParentheses) {\n    for (PsiExpression operand : polyadicExpression.getOperands()) {\n      removeParentheses(operand, ignoreClarifyingParentheses);\n    }\n  }","commit_id":"9fae529fcda6266f8f36cde848c51b2d8066c46f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void removeParensFromParenthesizedExpression(\n    @NotNull PsiParenthesizedExpression parenthesizedExpression,\n    boolean ignoreClarifyingParentheses)\n    throws IncorrectOperationException {\n    final PsiExpression body = parenthesizedExpression.getExpression();\n    if (body == null) {\n      parenthesizedExpression.delete();\n      return;\n    }\n    final PsiElement parent = parenthesizedExpression.getParent();\n    if (!(parent instanceof PsiExpression) ||\n        parent instanceof PsiParenthesizedExpression) {\n      final PsiExpression newExpression =\n        (PsiExpression)parenthesizedExpression.replace(body);\n      removeParentheses(newExpression, ignoreClarifyingParentheses);\n      return;\n    }\n    final PsiExpression parentExpression = (PsiExpression)parent;\n    final int parentPrecedence = getPrecedence(parentExpression);\n    final int childPrecedence = getPrecedence(body);\n    if (parentPrecedence < childPrecedence) {\n      final PsiElement bodyParent = body.getParent();\n      final PsiParenthesizedExpression newParenthesizedExpression =\n        (PsiParenthesizedExpression)\n          parenthesizedExpression.replace(bodyParent);\n      final PsiExpression expression =\n        newParenthesizedExpression.getExpression();\n      if (expression != null) {\n        removeParentheses(expression, ignoreClarifyingParentheses);\n      }\n    }\n    else if (parentPrecedence == childPrecedence) {\n      if (parentExpression instanceof PsiPolyadicExpression &&\n          body instanceof PsiPolyadicExpression) {\n        final PsiPolyadicExpression parentBinaryExpression =\n          (PsiPolyadicExpression)parentExpression;\n        final IElementType parentOperator =\n          parentBinaryExpression.getOperationTokenType();\n        final PsiPolyadicExpression bodyBinaryExpression =\n          (PsiPolyadicExpression)body;\n        final IElementType bodyOperator =\n          bodyBinaryExpression.getOperationTokenType();\n        final PsiType parentType = parentBinaryExpression.getType();\n        final PsiType bodyType = body.getType();\n        if (parentType != null && parentType.equals(bodyType) &&\n            parentOperator.equals(bodyOperator)) {\n          PsiExpression[] parentOperands = parentBinaryExpression.getOperands();\n          if (PsiTreeUtil.isAncestor(parentOperands[0], body, true) ||\n              isCommutativeBinaryOperator(bodyOperator)) {\n            // use addAfter() + delete() instead of replace() to\n            // workaround automatic insertion of parentheses by psi\n            final PsiExpression newExpression = (PsiExpression)\n              parent.addAfter(body, parenthesizedExpression);\n            parenthesizedExpression.delete();\n            removeParentheses(newExpression,\n                              ignoreClarifyingParentheses);\n            return;\n          }\n        }\n        if (ignoreClarifyingParentheses) {\n          if (parentOperator.equals(bodyOperator)) {\n            removeParentheses(body, ignoreClarifyingParentheses);\n          }\n        }\n        else {\n          final PsiExpression newExpression = (PsiExpression)\n            parenthesizedExpression.replace(body);\n          removeParentheses(newExpression,\n                            ignoreClarifyingParentheses);\n        }\n      }\n      else {\n        final PsiExpression newExpression =\n          (PsiExpression)parenthesizedExpression.replace(body);\n        removeParentheses(newExpression, ignoreClarifyingParentheses);\n      }\n    }\n    else {\n      if (ignoreClarifyingParentheses &&\n          parent instanceof PsiPolyadicExpression &&\n          (body instanceof PsiPolyadicExpression ||\n           body instanceof PsiInstanceOfExpression)) {\n        removeParentheses(body, ignoreClarifyingParentheses);\n      }\n      else {\n        final PsiExpression newExpression =\n          (PsiExpression)parenthesizedExpression.replace(body);\n        removeParentheses(newExpression, ignoreClarifyingParentheses);\n      }\n    }\n  }","id":107462,"modified_method":"private static void removeParensFromParenthesizedExpression(@NotNull PsiParenthesizedExpression parenthesizedExpression,\n                                                              boolean ignoreClarifyingParentheses) {\n    final PsiExpression body = parenthesizedExpression.getExpression();\n    if (body == null) {\n      parenthesizedExpression.delete();\n      return;\n    }\n    final PsiElement parent = parenthesizedExpression.getParent();\n    if (!(parent instanceof PsiExpression) || parent instanceof PsiParenthesizedExpression) {\n      final PsiExpression newExpression = (PsiExpression)parenthesizedExpression.replace(body);\n      removeParentheses(newExpression, ignoreClarifyingParentheses);\n      return;\n    }\n    final PsiExpression parentExpression = (PsiExpression)parent;\n    final int parentPrecedence = getPrecedence(parentExpression);\n    final int childPrecedence = getPrecedence(body);\n    if (parentPrecedence < childPrecedence) {\n      final PsiElement bodyParent = body.getParent();\n      final PsiParenthesizedExpression newParenthesizedExpression = (PsiParenthesizedExpression)parenthesizedExpression.replace(bodyParent);\n      final PsiExpression expression = newParenthesizedExpression.getExpression();\n      if (expression != null) {\n        removeParentheses(expression, ignoreClarifyingParentheses);\n      }\n    }\n    else if (parentPrecedence == childPrecedence) {\n      if (parentExpression instanceof PsiPolyadicExpression && body instanceof PsiPolyadicExpression) {\n        final PsiPolyadicExpression parentPolyadicExpression = (PsiPolyadicExpression)parentExpression;\n        final IElementType parentOperator = parentPolyadicExpression.getOperationTokenType();\n        final PsiPolyadicExpression bodyPolyadicExpression = (PsiPolyadicExpression)body;\n        final IElementType bodyOperator = bodyPolyadicExpression.getOperationTokenType();\n        final PsiType parentType = parentPolyadicExpression.getType();\n        final PsiType bodyType = body.getType();\n        if (parentType != null && parentType.equals(bodyType) && parentOperator.equals(bodyOperator)) {\n          final PsiExpression[] parentOperands = parentPolyadicExpression.getOperands();\n          if (PsiTreeUtil.isAncestor(parentOperands[0], body, true) || isCommutativeOperator(bodyOperator)) {\n            // use addAfter() + delete() instead of replace() to\n            // workaround automatic insertion of parentheses by psi\n            final PsiExpression newExpression = (PsiExpression)parent.addAfter(body, parenthesizedExpression);\n            parenthesizedExpression.delete();\n            removeParentheses(newExpression, ignoreClarifyingParentheses);\n            return;\n          }\n        }\n        if (ignoreClarifyingParentheses) {\n          if (parentOperator.equals(bodyOperator)) {\n            removeParentheses(body, ignoreClarifyingParentheses);\n          }\n        }\n        else {\n          final PsiExpression newExpression = (PsiExpression)parenthesizedExpression.replace(body);\n          removeParentheses(newExpression, ignoreClarifyingParentheses);\n        }\n      }\n      else {\n        final PsiExpression newExpression = (PsiExpression)parenthesizedExpression.replace(body);\n        removeParentheses(newExpression, ignoreClarifyingParentheses);\n      }\n    }\n    else {\n      if (ignoreClarifyingParentheses && parent instanceof PsiPolyadicExpression &&\n          (body instanceof PsiPolyadicExpression || body instanceof PsiInstanceOfExpression)) {\n        removeParentheses(body, ignoreClarifyingParentheses);\n      }\n      else {\n        final PsiExpression newExpression = (PsiExpression)parenthesizedExpression.replace(body);\n        removeParentheses(newExpression, ignoreClarifyingParentheses);\n      }\n    }\n  }","commit_id":"9fae529fcda6266f8f36cde848c51b2d8066c46f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean isCommutativeBinaryOperator(\n    @NotNull IElementType token) {\n    return !(token.equals(JavaTokenType.MINUS) ||\n             token.equals(JavaTokenType.DIV) ||\n             token.equals(JavaTokenType.PERC) ||\n             token.equals(JavaTokenType.LTLT) ||\n             token.equals(JavaTokenType.GTGT) ||\n             token.equals(JavaTokenType.GTGTGT));\n  }","id":107463,"modified_method":"private static boolean isCommutativeOperator(@NotNull IElementType token) {\n    return !(token.equals(JavaTokenType.MINUS) ||\n             token.equals(JavaTokenType.DIV) ||\n             token.equals(JavaTokenType.PERC) ||\n             token.equals(JavaTokenType.LTLT) ||\n             token.equals(JavaTokenType.GTGT) ||\n             token.equals(JavaTokenType.GTGTGT));\n  }","commit_id":"9fae529fcda6266f8f36cde848c51b2d8066c46f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean areParenthesesNeeded(\n    PsiExpression expression, PsiElement parentExpression,\n    boolean ignoreClarifyingParentheses) {\n    if (parentExpression instanceof PsiPolyadicExpression) {\n      final PsiPolyadicExpression parentBinaryExpression =\n        (PsiPolyadicExpression)parentExpression;\n      PsiExpression[] parentOperands = parentBinaryExpression.getOperands();\n      if (expression instanceof PsiPolyadicExpression) {\n        final PsiPolyadicExpression childBinaryExpression =\n          (PsiPolyadicExpression)expression;\n        final IElementType childOperator =\n          childBinaryExpression.getOperationTokenType();\n        final IElementType parentOperator =\n          parentBinaryExpression.getOperationTokenType();\n        if (ignoreClarifyingParentheses &&\n            !childOperator.equals(parentOperator)) {\n          return true;\n        }\n        final PsiType parentType = parentBinaryExpression.getType();\n        if (parentType == null) {\n          return true;\n        }\n        final PsiType childType = childBinaryExpression.getType();\n        if (!parentType.equals(childType)) {\n          return true;\n        }\n        if (!PsiTreeUtil.isAncestor(parentOperands[0],\n                                    expression, false)) {\n          if (!isCommutativeBinaryOperator(parentOperator)) {\n            return true;\n          }\n        }\n        return false;\n      }\n      else if (expression instanceof PsiConditionalExpression) {\n        if (!PsiTreeUtil.isAncestor(parentOperands[0],\n                                    expression, false)) {\n          return true;\n        }\n      }\n    }\n    else if (parentExpression instanceof PsiPrefixExpression) {\n      if (expression instanceof PsiPolyadicExpression) {\n        return true;\n      }\n    }\n    return false;\n  }","id":107464,"modified_method":"public static boolean areParenthesesNeeded(PsiExpression expression, PsiExpression parentExpression,\n                                             boolean ignoreClarifyingParentheses) {\n    if (parentExpression instanceof PsiParenthesizedExpression) {\n      return false;\n    }\n    else if (parentExpression instanceof PsiPolyadicExpression && expression instanceof PsiPolyadicExpression) {\n      final PsiPolyadicExpression parentBinaryExpression = (PsiPolyadicExpression)parentExpression;\n      final PsiType parentType = parentBinaryExpression.getType();\n      if (parentType == null) {\n        return true;\n      }\n      final PsiPolyadicExpression childBinaryExpression = (PsiPolyadicExpression)expression;\n      final PsiType childType = childBinaryExpression.getType();\n      if (!parentType.equals(childType)) {\n        return true;\n      }\n      final IElementType parentOperator = parentBinaryExpression.getOperationTokenType();\n      final IElementType childOperator = childBinaryExpression.getOperationTokenType();\n      if (ignoreClarifyingParentheses && !childOperator.equals(parentOperator)) {\n        return true;\n      }\n      final PsiExpression[] parentOperands = parentBinaryExpression.getOperands();\n      if (!PsiTreeUtil.isAncestor(parentOperands[0], expression, false)) {\n        if (!isCommutativeOperator(parentOperator)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    final int parentPrecedence = getPrecedence(parentExpression);\n    final int childPrecedence = getPrecedence(expression);\n    return parentPrecedence < childPrecedence;\n  }","commit_id":"9fae529fcda6266f8f36cde848c51b2d8066c46f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean areParenthesesNeeded(\n    PsiParenthesizedExpression expression,\n    boolean ignoreClarifyingParentheses) {\n    final PsiElement parent = expression.getParent();\n    final PsiExpression child = expression.getExpression();\n    return areParenthesesNeeded(child, parent,\n                                ignoreClarifyingParentheses);\n  }","id":107465,"modified_method":"public static boolean areParenthesesNeeded(PsiParenthesizedExpression expression, boolean ignoreClarifyingParentheses) {\n    final PsiElement parent = expression.getParent();\n    if (!(parent instanceof PsiExpression)) {\n      return false;\n    }\n    final PsiExpression child = expression.getExpression();\n    if (child == null) {\n      return true;\n    }\n    return areParenthesesNeeded(child, (PsiExpression)parent, ignoreClarifyingParentheses);\n  }","commit_id":"9fae529fcda6266f8f36cde848c51b2d8066c46f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void doFix(Project project, ProblemDescriptor descriptor)\n      throws IncorrectOperationException {\n      final PsiElement element = descriptor.getPsiElement();\n      if (element instanceof PsiParameterList) {\n        final PsiLambdaExpression expression = (PsiLambdaExpression)JavaPsiFacade.getElementFactory(element.getProject())\n          .createExpressionFromText(((PsiParameterList)element).getParameters()[0].getName() + \"->{}\",element);\n            element.replace(expression.getParameterList());\n      } else {\n        ParenthesesUtils.removeParentheses((PsiExpression)element, ignoreClarifyingParentheses);\n      }\n    }","id":107466,"modified_method":"@Override\n    public void doFix(Project project, ProblemDescriptor descriptor) {\n      final PsiElement element = descriptor.getPsiElement();\n      if (element instanceof PsiParameterList) {\n        final PsiElementFactory factory = JavaPsiFacade.getElementFactory(element.getProject());\n        final PsiParameterList parameterList = (PsiParameterList)element;\n        final String text = parameterList.getParameters()[0].getName() + \"->{}\";\n        final PsiLambdaExpression expression = (PsiLambdaExpression)factory.createExpressionFromText(text, element);\n        element.replace(expression.getParameterList());\n      } else {\n        ParenthesesUtils.removeParentheses((PsiExpression)element, ignoreClarifyingParentheses);\n      }\n    }","commit_id":"9fae529fcda6266f8f36cde848c51b2d8066c46f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected List<JournalArticle> doFindByC_G_F_C_A_V_T_D_C_T_S_T_D_R(\n\t\t\tlong companyId, long groupId, List<Long> folderIds,\n\t\t\tlong classNameId, String[] articleIds, Double version,\n\t\t\tString[] titles, String[] descriptions, String[] contents,\n\t\t\tString type, String[] ddmStructureKeys, String[] ddmTemplateKeys,\n\t\t\tDate displayDateGT, Date displayDateLT, Date reviewDate,\n\t\t\tboolean andOperator, QueryDefinition queryDefinition,\n\t\t\tboolean inlineSQLHelper)\n\t\tthrows SystemException {\n\n\t\tarticleIds = CustomSQLUtil.keywords(articleIds, false);\n\t\ttitles = CustomSQLUtil.keywords(titles);\n\t\tdescriptions = CustomSQLUtil.keywords(descriptions, false);\n\t\tcontents = CustomSQLUtil.keywords(contents, false);\n\t\tddmStructureKeys = CustomSQLUtil.keywords(ddmStructureKeys, false);\n\t\tddmTemplateKeys = CustomSQLUtil.keywords(ddmTemplateKeys, false);\n\t\tTimestamp displayDateGT_TS = CalendarUtil.getTimestamp(displayDateGT);\n\t\tTimestamp displayDateLT_TS = CalendarUtil.getTimestamp(displayDateLT);\n\t\tTimestamp reviewDate_TS = CalendarUtil.getTimestamp(reviewDate);\n\n\t\tSession session = null;\n\n\t\ttry {\n\t\t\tsession = openSession();\n\n\t\t\tString sql = CustomSQLUtil.get(\n\t\t\t\tFIND_BY_C_G_F_C_A_V_T_D_C_T_S_T_D_R, queryDefinition,\n\t\t\t\t\"JournalArticle\");\n\n\t\t\tsql = replaceStatusJoin(sql, queryDefinition);\n\n\t\t\tif (groupId <= 0) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"(JournalArticle.groupId = ?) AND\", StringPool.BLANK);\n\t\t\t}\n\n\t\t\tif (folderIds.isEmpty()) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"([$FOLDER_ID$]) AND\", StringPool.BLANK);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"[$FOLDER_ID$]\",\n\t\t\t\t\tgetFolderIds(folderIds, JournalArticleImpl.TABLE_NAME));\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"JournalArticle.articleId\", StringPool.LIKE, false,\n\t\t\t\tarticleIds);\n\n\t\t\tif ((version == null) || (version <= 0)) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]\",\n\t\t\t\t\tStringPool.BLANK);\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"lower(JournalArticle.title)\", StringPool.LIKE, false,\n\t\t\t\ttitles);\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"JournalArticle.description\", StringPool.LIKE, false,\n\t\t\t\tdescriptions);\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"JournalArticle.content\", StringPool.LIKE, false,\n\t\t\t\tcontents);\n\n\t\t\tif (Validator.isNull(type)) {\n\t\t\t\tsql = StringUtil.replace(sql, _TYPE_SQL, StringPool.BLANK);\n\t\t\t}\n\n\t\t\tif (isNullArray(ddmStructureKeys)) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, _STRUCTURE_ID_SQL, StringPool.BLANK);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\t\tsql, \"JournalArticle.structureId\", StringPool.LIKE, false,\n\t\t\t\t\tddmStructureKeys);\n\t\t\t}\n\n\t\t\tif (isNullArray(ddmTemplateKeys)) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, _TEMPLATE_ID_SQL, StringPool.BLANK);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\t\tsql, \"JournalArticle.templateId\", StringPool.LIKE, false,\n\t\t\t\t\tddmTemplateKeys);\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceAndOperator(sql, andOperator);\n\t\t\tsql = CustomSQLUtil.replaceOrderBy(\n\t\t\t\tsql, queryDefinition.getOrderByComparator());\n\n\t\t\tif (inlineSQLHelper) {\n\t\t\t\tsql = InlineSQLHelperUtil.replacePermissionCheck(\n\t\t\t\t\tsql, JournalArticle.class.getName(),\n\t\t\t\t\t\"JournalArticle.resourcePrimKey\", groupId);\n\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"(companyId\", \"(JournalArticle.companyId\");\n\t\t\t}\n\n\t\t\tSQLQuery q = session.createSynchronizedSQLQuery(sql);\n\n\t\t\tq.addEntity(\n\t\t\t\tJournalArticleImpl.TABLE_NAME, JournalArticleImpl.class);\n\n\t\t\tQueryPos qPos = QueryPos.getInstance(q);\n\n\t\t\tqPos.add(companyId);\n\n\t\t\tif (groupId > 0) {\n\t\t\t\tqPos.add(groupId);\n\t\t\t}\n\n\t\t\tfor (long folderId : folderIds) {\n\t\t\t\tqPos.add(folderId);\n\t\t\t}\n\n\t\t\tqPos.add(classNameId);\n\t\t\tqPos.add(queryDefinition.getStatus());\n\t\t\tqPos.add(articleIds, 2);\n\n\t\t\tif ((version != null) && (version > 0)) {\n\t\t\t\tqPos.add(version);\n\t\t\t}\n\n\t\t\tqPos.add(titles, 2);\n\t\t\tqPos.add(descriptions, 2);\n\t\t\tqPos.add(contents, 2);\n\t\t\tqPos.add(displayDateGT_TS);\n\t\t\tqPos.add(displayDateGT_TS);\n\t\t\tqPos.add(displayDateLT_TS);\n\t\t\tqPos.add(displayDateLT_TS);\n\t\t\tqPos.add(reviewDate_TS);\n\t\t\tqPos.add(reviewDate_TS);\n\n\t\t\tif (Validator.isNotNull(type)) {\n\t\t\t\tqPos.add(type);\n\t\t\t\tqPos.add(type);\n\t\t\t}\n\n\t\t\tif (!isNullArray(ddmStructureKeys)) {\n\t\t\t\tqPos.add(ddmStructureKeys, 2);\n\t\t\t}\n\n\t\t\tif (!isNullArray(ddmTemplateKeys)) {\n\t\t\t\tqPos.add(ddmTemplateKeys, 2);\n\t\t\t}\n\n\t\t\treturn (List<JournalArticle>)QueryUtil.list(\n\t\t\t\tq, getDialect(), queryDefinition.getStart(),\n\t\t\t\tqueryDefinition.getEnd());\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(e);\n\t\t}\n\t\tfinally {\n\t\t\tcloseSession(session);\n\t\t}\n\t}","id":107467,"modified_method":"protected List<JournalArticle> doFindByC_G_F_C_A_V_T_D_C_T_S_T_D_R(\n\t\t\tlong companyId, long groupId, List<Long> folderIds,\n\t\t\tlong classNameId, String[] articleIds, Double version,\n\t\t\tString[] titles, String[] descriptions, String[] contents,\n\t\t\tString type, String[] ddmStructureKeys, String[] ddmTemplateKeys,\n\t\t\tDate displayDateGT, Date displayDateLT, Date reviewDate,\n\t\t\tboolean andOperator, QueryDefinition queryDefinition,\n\t\t\tboolean inlineSQLHelper)\n\t\tthrows SystemException {\n\n\t\tarticleIds = CustomSQLUtil.keywords(articleIds, false);\n\t\ttitles = CustomSQLUtil.keywords(titles);\n\t\tdescriptions = CustomSQLUtil.keywords(descriptions, false);\n\t\tcontents = CustomSQLUtil.keywords(contents, false);\n\t\tddmStructureKeys = CustomSQLUtil.keywords(ddmStructureKeys, false);\n\t\tddmTemplateKeys = CustomSQLUtil.keywords(ddmTemplateKeys, false);\n\t\tTimestamp displayDateGT_TS = CalendarUtil.getTimestamp(displayDateGT);\n\t\tTimestamp displayDateLT_TS = CalendarUtil.getTimestamp(displayDateLT);\n\t\tTimestamp reviewDate_TS = CalendarUtil.getTimestamp(reviewDate);\n\n\t\tSession session = null;\n\n\t\ttry {\n\t\t\tsession = openSession();\n\n\t\t\tString sql = CustomSQLUtil.get(\n\t\t\t\tFIND_BY_C_G_F_C_A_V_T_D_C_T_S_T_D_R, queryDefinition,\n\t\t\t\t\"JournalArticle\");\n\n\t\t\tsql = replaceStatusJoin(sql, queryDefinition);\n\n\t\t\tif (groupId <= 0) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"(JournalArticle.groupId = ?) AND\", StringPool.BLANK);\n\t\t\t}\n\n\t\t\tif (folderIds.isEmpty()) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"([$FOLDER_ID$]) AND\", StringPool.BLANK);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"[$FOLDER_ID$]\",\n\t\t\t\t\tgetFolderIds(folderIds, JournalArticleImpl.TABLE_NAME));\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"JournalArticle.articleId\", StringPool.LIKE, false,\n\t\t\t\tarticleIds);\n\n\t\t\tif ((version == null) || (version <= 0)) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]\",\n\t\t\t\t\tStringPool.BLANK);\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"lower(JournalArticle.title)\", StringPool.LIKE, false,\n\t\t\t\ttitles);\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"JournalArticle.description\", StringPool.LIKE, false,\n\t\t\t\tdescriptions);\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"JournalArticle.content\", StringPool.LIKE, false,\n\t\t\t\tcontents);\n\n\t\t\tsql = replaceTypeStructureTemplate(\n\t\t\t\tsql, type, ddmStructureKeys, ddmTemplateKeys);\n\n\t\t\tif (!isNullArray(ddmStructureKeys)) {\n\t\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\t\tsql, \"JournalArticle.structureId\", StringPool.LIKE, false,\n\t\t\t\t\tddmStructureKeys);\n\t\t\t}\n\n\t\t\tif (!isNullArray(ddmTemplateKeys)) {\n\t\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\t\tsql, \"JournalArticle.templateId\", StringPool.LIKE, false,\n\t\t\t\t\tddmTemplateKeys);\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceAndOperator(sql, andOperator);\n\t\t\tsql = CustomSQLUtil.replaceOrderBy(\n\t\t\t\tsql, queryDefinition.getOrderByComparator());\n\n\t\t\tif (inlineSQLHelper) {\n\t\t\t\tsql = InlineSQLHelperUtil.replacePermissionCheck(\n\t\t\t\t\tsql, JournalArticle.class.getName(),\n\t\t\t\t\t\"JournalArticle.resourcePrimKey\", groupId);\n\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"(companyId\", \"(JournalArticle.companyId\");\n\t\t\t}\n\n\t\t\tSQLQuery q = session.createSynchronizedSQLQuery(sql);\n\n\t\t\tq.addEntity(\n\t\t\t\tJournalArticleImpl.TABLE_NAME, JournalArticleImpl.class);\n\n\t\t\tQueryPos qPos = QueryPos.getInstance(q);\n\n\t\t\tqPos.add(companyId);\n\n\t\t\tif (groupId > 0) {\n\t\t\t\tqPos.add(groupId);\n\t\t\t}\n\n\t\t\tfor (long folderId : folderIds) {\n\t\t\t\tqPos.add(folderId);\n\t\t\t}\n\n\t\t\tqPos.add(classNameId);\n\t\t\tqPos.add(queryDefinition.getStatus());\n\n\t\t\tif (Validator.isNotNull(type)) {\n\t\t\t\tqPos.add(type);\n\t\t\t\tqPos.add(type);\n\t\t\t}\n\n\t\t\tif (!isNullArray(ddmStructureKeys)) {\n\t\t\t\tqPos.add(ddmStructureKeys, 2);\n\t\t\t}\n\n\t\t\tif (!isNullArray(ddmTemplateKeys)) {\n\t\t\t\tqPos.add(ddmTemplateKeys, 2);\n\t\t\t}\n\n\t\t\tqPos.add(articleIds, 2);\n\n\t\t\tif ((version != null) && (version > 0)) {\n\t\t\t\tqPos.add(version);\n\t\t\t}\n\n\t\t\tqPos.add(titles, 2);\n\t\t\tqPos.add(descriptions, 2);\n\t\t\tqPos.add(contents, 2);\n\t\t\tqPos.add(displayDateGT_TS);\n\t\t\tqPos.add(displayDateGT_TS);\n\t\t\tqPos.add(displayDateLT_TS);\n\t\t\tqPos.add(displayDateLT_TS);\n\t\t\tqPos.add(reviewDate_TS);\n\t\t\tqPos.add(reviewDate_TS);\n\n\t\t\treturn (List<JournalArticle>)QueryUtil.list(\n\t\t\t\tq, getDialect(), queryDefinition.getStart(),\n\t\t\t\tqueryDefinition.getEnd());\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(e);\n\t\t}\n\t\tfinally {\n\t\t\tcloseSession(session);\n\t\t}\n\t}","commit_id":"af294b245ff38d043d9d5dadb89f13f1cc2bd6cc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected int doCountByC_G_F_C_A_V_T_D_C_T_S_T_D_R(\n\t\t\tlong companyId, long groupId, List<Long> folderIds,\n\t\t\tlong classNameId, String[] articleIds, Double version,\n\t\t\tString[] titles, String[] descriptions, String[] contents,\n\t\t\tString type, String[] ddmStructureKeys, String[] ddmTemplateKeys,\n\t\t\tDate displayDateGT, Date displayDateLT, Date reviewDate,\n\t\t\tboolean andOperator, QueryDefinition queryDefinition,\n\t\t\tboolean inlineSQLHelper)\n\t\tthrows SystemException {\n\n\t\tarticleIds = CustomSQLUtil.keywords(articleIds, false);\n\t\ttitles = CustomSQLUtil.keywords(titles);\n\t\tdescriptions = CustomSQLUtil.keywords(descriptions, false);\n\t\tcontents = CustomSQLUtil.keywords(contents, false);\n\t\tddmStructureKeys = CustomSQLUtil.keywords(ddmStructureKeys, false);\n\t\tddmTemplateKeys = CustomSQLUtil.keywords(ddmTemplateKeys, false);\n\t\tTimestamp displayDateGT_TS = CalendarUtil.getTimestamp(displayDateGT);\n\t\tTimestamp displayDateLT_TS = CalendarUtil.getTimestamp(displayDateLT);\n\t\tTimestamp reviewDate_TS = CalendarUtil.getTimestamp(reviewDate);\n\n\t\tSession session = null;\n\n\t\ttry {\n\t\t\tsession = openSession();\n\n\t\t\tString sql = CustomSQLUtil.get(\n\t\t\t\tCOUNT_BY_C_G_F_C_A_V_T_D_C_T_S_T_D_R, queryDefinition,\n\t\t\t\t\"JournalArticle\");\n\n\t\t\tsql = replaceStatusJoin(sql, queryDefinition);\n\n\t\t\tif (groupId <= 0) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"(JournalArticle.groupId = ?) AND\", StringPool.BLANK);\n\t\t\t}\n\n\t\t\tif (folderIds.isEmpty()) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"([$FOLDER_ID$]) AND\", StringPool.BLANK);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"[$FOLDER_ID$]\",\n\t\t\t\t\tgetFolderIds(folderIds, JournalArticleImpl.TABLE_NAME));\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"JournalArticle.articleId\", StringPool.LIKE, false,\n\t\t\t\tarticleIds);\n\n\t\t\tif ((version == null) || (version <= 0)) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]\",\n\t\t\t\t\tStringPool.BLANK);\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"lower(JournalArticle.title)\", StringPool.LIKE, false,\n\t\t\t\ttitles);\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"JournalArticle.description\", StringPool.LIKE, false,\n\t\t\t\tdescriptions);\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"JournalArticle.content\", StringPool.LIKE, false,\n\t\t\t\tcontents);\n\n\t\t\tif (Validator.isNull(type)) {\n\t\t\t\tsql = StringUtil.replace(sql, _TYPE_SQL, StringPool.BLANK);\n\t\t\t}\n\n\t\t\tif (isNullArray(ddmStructureKeys)) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, _STRUCTURE_ID_SQL, StringPool.BLANK);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\t\tsql, \"JournalArticle.structureId\", StringPool.LIKE, false,\n\t\t\t\t\tddmStructureKeys);\n\t\t\t}\n\n\t\t\tif (isNullArray(ddmTemplateKeys)) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, _TEMPLATE_ID_SQL, StringPool.BLANK);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\t\tsql, \"JournalArticle.templateId\", StringPool.LIKE, false,\n\t\t\t\t\tddmTemplateKeys);\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceAndOperator(sql, andOperator);\n\n\t\t\tif (inlineSQLHelper) {\n\t\t\t\tsql = InlineSQLHelperUtil.replacePermissionCheck(\n\t\t\t\t\tsql, JournalArticle.class.getName(),\n\t\t\t\t\t\"JournalArticle.resourcePrimKey\", groupId);\n\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"(companyId\", \"(JournalArticle.companyId\");\n\t\t\t}\n\n\t\t\tSQLQuery q = session.createSynchronizedSQLQuery(sql);\n\n\t\t\tq.addScalar(COUNT_COLUMN_NAME, Type.LONG);\n\n\t\t\tQueryPos qPos = QueryPos.getInstance(q);\n\n\t\t\tqPos.add(companyId);\n\n\t\t\tif (groupId > 0) {\n\t\t\t\tqPos.add(groupId);\n\t\t\t}\n\n\t\t\tfor (long folderId : folderIds) {\n\t\t\t\tqPos.add(folderId);\n\t\t\t}\n\n\t\t\tqPos.add(classNameId);\n\t\t\tqPos.add(queryDefinition.getStatus());\n\t\t\tqPos.add(articleIds, 2);\n\n\t\t\tif ((version != null) && (version > 0)) {\n\t\t\t\tqPos.add(version);\n\t\t\t}\n\n\t\t\tqPos.add(titles, 2);\n\t\t\tqPos.add(descriptions, 2);\n\t\t\tqPos.add(contents, 2);\n\t\t\tqPos.add(displayDateGT_TS);\n\t\t\tqPos.add(displayDateGT_TS);\n\t\t\tqPos.add(displayDateLT_TS);\n\t\t\tqPos.add(displayDateLT_TS);\n\t\t\tqPos.add(reviewDate_TS);\n\t\t\tqPos.add(reviewDate_TS);\n\n\t\t\tif (Validator.isNotNull(type)) {\n\t\t\t\tqPos.add(type);\n\t\t\t\tqPos.add(type);\n\t\t\t}\n\n\t\t\tif (!isNullArray(ddmStructureKeys)) {\n\t\t\t\tqPos.add(ddmStructureKeys, 2);\n\t\t\t}\n\n\t\t\tif (!isNullArray(ddmTemplateKeys)) {\n\t\t\t\tqPos.add(ddmTemplateKeys, 2);\n\t\t\t}\n\n\t\t\tIterator<Long> itr = q.iterate();\n\n\t\t\tif (itr.hasNext()) {\n\t\t\t\tLong count = itr.next();\n\n\t\t\t\tif (count != null) {\n\t\t\t\t\treturn count.intValue();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(e);\n\t\t}\n\t\tfinally {\n\t\t\tcloseSession(session);\n\t\t}\n\t}","id":107468,"modified_method":"protected int doCountByC_G_F_C_A_V_T_D_C_T_S_T_D_R(\n\t\t\tlong companyId, long groupId, List<Long> folderIds,\n\t\t\tlong classNameId, String[] articleIds, Double version,\n\t\t\tString[] titles, String[] descriptions, String[] contents,\n\t\t\tString type, String[] ddmStructureKeys, String[] ddmTemplateKeys,\n\t\t\tDate displayDateGT, Date displayDateLT, Date reviewDate,\n\t\t\tboolean andOperator, QueryDefinition queryDefinition,\n\t\t\tboolean inlineSQLHelper)\n\t\tthrows SystemException {\n\n\t\tarticleIds = CustomSQLUtil.keywords(articleIds, false);\n\t\ttitles = CustomSQLUtil.keywords(titles);\n\t\tdescriptions = CustomSQLUtil.keywords(descriptions, false);\n\t\tcontents = CustomSQLUtil.keywords(contents, false);\n\t\tddmStructureKeys = CustomSQLUtil.keywords(ddmStructureKeys, false);\n\t\tddmTemplateKeys = CustomSQLUtil.keywords(ddmTemplateKeys, false);\n\t\tTimestamp displayDateGT_TS = CalendarUtil.getTimestamp(displayDateGT);\n\t\tTimestamp displayDateLT_TS = CalendarUtil.getTimestamp(displayDateLT);\n\t\tTimestamp reviewDate_TS = CalendarUtil.getTimestamp(reviewDate);\n\n\t\tSession session = null;\n\n\t\ttry {\n\t\t\tsession = openSession();\n\n\t\t\tString sql = CustomSQLUtil.get(\n\t\t\t\tCOUNT_BY_C_G_F_C_A_V_T_D_C_T_S_T_D_R, queryDefinition,\n\t\t\t\t\"JournalArticle\");\n\n\t\t\tsql = replaceStatusJoin(sql, queryDefinition);\n\n\t\t\tif (groupId <= 0) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"(JournalArticle.groupId = ?) AND\", StringPool.BLANK);\n\t\t\t}\n\n\t\t\tif (folderIds.isEmpty()) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"([$FOLDER_ID$]) AND\", StringPool.BLANK);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"[$FOLDER_ID$]\",\n\t\t\t\t\tgetFolderIds(folderIds, JournalArticleImpl.TABLE_NAME));\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"JournalArticle.articleId\", StringPool.LIKE, false,\n\t\t\t\tarticleIds);\n\n\t\t\tif ((version == null) || (version <= 0)) {\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]\",\n\t\t\t\t\tStringPool.BLANK);\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"lower(JournalArticle.title)\", StringPool.LIKE, false,\n\t\t\t\ttitles);\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"JournalArticle.description\", StringPool.LIKE, false,\n\t\t\t\tdescriptions);\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"JournalArticle.content\", StringPool.LIKE, false,\n\t\t\t\tcontents);\n\n\t\t\tsql = replaceTypeStructureTemplate(\n\t\t\t\tsql, type, ddmStructureKeys, ddmTemplateKeys);\n\n\t\t\tif (!isNullArray(ddmStructureKeys)) {\n\t\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\t\tsql, \"JournalArticle.structureId\", StringPool.LIKE, false,\n\t\t\t\t\tddmStructureKeys);\n\t\t\t}\n\n\t\t\tif (!isNullArray(ddmTemplateKeys)) {\n\t\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\t\tsql, \"JournalArticle.templateId\", StringPool.LIKE, false,\n\t\t\t\t\tddmTemplateKeys);\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceAndOperator(sql, andOperator);\n\n\t\t\tif (inlineSQLHelper) {\n\t\t\t\tsql = InlineSQLHelperUtil.replacePermissionCheck(\n\t\t\t\t\tsql, JournalArticle.class.getName(),\n\t\t\t\t\t\"JournalArticle.resourcePrimKey\", groupId);\n\n\t\t\t\tsql = StringUtil.replace(\n\t\t\t\t\tsql, \"(companyId\", \"(JournalArticle.companyId\");\n\t\t\t}\n\n\t\t\tSQLQuery q = session.createSynchronizedSQLQuery(sql);\n\n\t\t\tq.addScalar(COUNT_COLUMN_NAME, Type.LONG);\n\n\t\t\tQueryPos qPos = QueryPos.getInstance(q);\n\n\t\t\tqPos.add(companyId);\n\n\t\t\tif (groupId > 0) {\n\t\t\t\tqPos.add(groupId);\n\t\t\t}\n\n\t\t\tfor (long folderId : folderIds) {\n\t\t\t\tqPos.add(folderId);\n\t\t\t}\n\n\t\t\tqPos.add(classNameId);\n\t\t\tqPos.add(queryDefinition.getStatus());\n\n\t\t\tif (Validator.isNotNull(type)) {\n\t\t\t\tqPos.add(type);\n\t\t\t\tqPos.add(type);\n\t\t\t}\n\n\t\t\tif (!isNullArray(ddmStructureKeys)) {\n\t\t\t\tqPos.add(ddmStructureKeys, 2);\n\t\t\t}\n\n\t\t\tif (!isNullArray(ddmTemplateKeys)) {\n\t\t\t\tqPos.add(ddmTemplateKeys, 2);\n\t\t\t}\n\n\t\t\tqPos.add(articleIds, 2);\n\n\t\t\tif ((version != null) && (version > 0)) {\n\t\t\t\tqPos.add(version);\n\t\t\t}\n\n\t\t\tqPos.add(titles, 2);\n\t\t\tqPos.add(descriptions, 2);\n\t\t\tqPos.add(contents, 2);\n\t\t\tqPos.add(displayDateGT_TS);\n\t\t\tqPos.add(displayDateGT_TS);\n\t\t\tqPos.add(displayDateLT_TS);\n\t\t\tqPos.add(displayDateLT_TS);\n\t\t\tqPos.add(reviewDate_TS);\n\t\t\tqPos.add(reviewDate_TS);\n\n\t\t\tIterator<Long> itr = q.iterate();\n\n\t\t\tif (itr.hasNext()) {\n\t\t\t\tLong count = itr.next();\n\n\t\t\t\tif (count != null) {\n\t\t\t\t\treturn count.intValue();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(e);\n\t\t}\n\t\tfinally {\n\t\t\tcloseSession(session);\n\t\t}\n\t}","commit_id":"af294b245ff38d043d9d5dadb89f13f1cc2bd6cc","url":"https://github.com/liferay/liferay-portal"}]