[{"original_method":"public FingerprintAction(Run build, Map<String, String> record) {\n            this.build = build;\n            this.record = PackedMap.of(record);\n            compact();\n        }","id":1000,"modified_method":"public FingerprintAction(Run build, Map<String, String> record) {\n            this.build = build;\n            this.record = compact(record);\n        }","commit_id":"2f59ffc475dc73a9a9cd5a7596819f3242c22f6f","url":"https://github.com/kohsuke/hudson"},{"original_method":"@Override public void onLoad(Run<?,?> r) {\n            build = r;\n            compact();\n        }","id":1001,"modified_method":"@Override public void onLoad(Run<?,?> r) {\n            build = r;\n            record = compact(record);\n        }","commit_id":"2f59ffc475dc73a9a9cd5a7596819f3242c22f6f","url":"https://github.com/kohsuke/hudson"},{"original_method":"public void add(Map<String,String> moreRecords) {\n            Map<String,String> r = new HashMap<String, String>(record);\n            r.putAll(moreRecords);\n            record = PackedMap.of(r);\n            ref = null;\n            compact();\n        }","id":1002,"modified_method":"public void add(Map<String,String> moreRecords) {\n            Map<String,String> r = new HashMap<String, String>(record);\n            r.putAll(moreRecords);\n            record = compact(r);\n            ref = null;\n        }","commit_id":"2f59ffc475dc73a9a9cd5a7596819f3242c22f6f","url":"https://github.com/kohsuke/hudson"},{"original_method":"public void add(Map<String,String> moreRecords) {\n            Map<String,String> r = new HashMap<String, String>(record);\n            r.putAll(moreRecords);\n            record = PackedMap.of(r);\n            ref = null;\n            compact();\n        }","id":1003,"modified_method":"public void add(Map<String,String> moreRecords) {\n            Map<String,String> r = new HashMap<String, String>(record);\n            r.putAll(moreRecords);\n            record = compact(r);\n            ref = null;\n        }","commit_id":"dd2083aa4734836164b82a86608ad8a9ec353a02","url":"https://github.com/kohsuke/hudson"},{"original_method":"public FingerprintAction(Run build, Map<String, String> record) {\n            this.build = build;\n            this.record = PackedMap.of(record);\n            compact();\n        }","id":1004,"modified_method":"public FingerprintAction(Run build, Map<String, String> record) {\n            this.build = build;\n            this.record = compact(record);\n        }","commit_id":"dd2083aa4734836164b82a86608ad8a9ec353a02","url":"https://github.com/kohsuke/hudson"},{"original_method":"@Override public void onLoad(Run<?,?> r) {\n            build = r;\n            compact();\n        }","id":1005,"modified_method":"@Override public void onLoad(Run<?,?> r) {\n            build = r;\n            record = compact(record);\n        }","commit_id":"dd2083aa4734836164b82a86608ad8a9ec353a02","url":"https://github.com/kohsuke/hudson"},{"original_method":"public void actionPerformed(AnActionEvent e) {\n    String projectFile = SamplesExtractor.getInstance().getSamplesPath() + File.separator + \"complexLanguage\" + File.separator + \"Complex.mpr\";\n    if (!new File(projectFile).exists()) {\n      SamplesExtractor.getInstance().extractSamples();\n    }\n    ProjectUtil.openProject(projectFile, e.getData(PlatformDataKeys.PROJECT), false);\n  }","id":1006,"modified_method":"public void actionPerformed(AnActionEvent e) {\n    String projectFile = SamplesExtractor.getInstance().getSamplesPath() + File.separator + \"complexLanguage\" + File.separator + \"Complex.mpr\";\n    if (!new File(projectFile).exists()) {\n      SamplesExtractor.getInstance().extractSamples();\n    }\n    Project project = ProjectUtil.openProject(projectFile, e.getData(PlatformDataKeys.PROJECT), false);\n    if (project != null) {\n      ProjectBaseDirectory.getInstance(project).setBaseDir(project.getBaseDir());\n    }\n  }","commit_id":"bf26b90c6bc21a9eac64109a17928a111272adbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doExecute(AnActionEvent e, Map<String, Object> _params) {\n    TreeFileChooser chooser = new TreeFileChooser();\n\n    chooser.setFileFilter(new IFileFilter() {\n      public boolean accept(IFile file) {\n        return file.isDirectory() || file.getName().toLowerCase().endsWith(MPSExtentions.DOT_MPS_PROJECT);\n      }\n    });\n\n    IFile file = chooser.showDialog((Frame) null);\n    if (file == null) {\n      return;\n    }\n\n    String filePath = file.getPath();\n\n    ProjectUtil.openProject(filePath, e.getData(PlatformDataKeys.PROJECT), false);\n  }","id":1007,"modified_method":"public void doExecute(AnActionEvent e, Map<String, Object> _params) {\n    TreeFileChooser chooser = new TreeFileChooser();\n\n    chooser.setFileFilter(new IFileFilter() {\n      public boolean accept(IFile file) {\n        return file.isDirectory() || file.getName().toLowerCase().endsWith(MPSExtentions.DOT_MPS_PROJECT);\n      }\n    });\n\n    IFile file = chooser.showDialog((Frame) null);\n    if (file == null) {\n      return;\n    }\n\n    String filePath = file.getPath();\n\n    Project project = ProjectUtil.openProject(filePath, e.getData(PlatformDataKeys.PROJECT), false);\n    if (project != null) {\n      ProjectBaseDirectory.getInstance(project).setBaseDir(project.getBaseDir());\n    }\n  }","commit_id":"bf26b90c6bc21a9eac64109a17928a111272adbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void actionPerformed(AnActionEvent e) {\n    String projectFile = SamplesExtractor.getInstance().getSamplesPath() + File.separator + \"theSimplestLanguage\" + File.separator + \"theSimplestLanguage.mpr\";\n    if (!new File(projectFile).exists()) {\n      SamplesExtractor.getInstance().extractSamples();\n    }\n    ProjectUtil.openProject(projectFile, e.getData(PlatformDataKeys.PROJECT), false);\n  }","id":1008,"modified_method":"public void actionPerformed(AnActionEvent e) {\n    String projectFile = SamplesExtractor.getInstance().getSamplesPath() + File.separator + \"theSimplestLanguage\" + File.separator + \"theSimplestLanguage.mpr\";\n    if (!new File(projectFile).exists()) {\n      SamplesExtractor.getInstance().extractSamples();\n    }\n    Project project = ProjectUtil.openProject(projectFile, e.getData(PlatformDataKeys.PROJECT), false);\n    if (project != null) {\n      ProjectBaseDirectory.getInstance(project).setBaseDir(project.getBaseDir());\n    }\n  }","commit_id":"bf26b90c6bc21a9eac64109a17928a111272adbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean processCheckedOutDirectory(Project project, File directory) {\n    File[] files = directory.listFiles(new FilenameFilter() {\n      public boolean accept(File dir, String name) {\n        return name.endsWith(MPSExtentions.DOT_MPS_PROJECT);\n      }\n    });\n    if (files != null && files.length > 0) {\n      int rc = Messages.showYesNoDialog(project, \"You have checked out an MPS project file:\\n\" + files[0].getAbsolutePath() + \"\\nWould you like to open it?\", \"Checkout from Version Control\", Messages.getQuestionIcon());\n      if (rc == 0) {\n        ProjectUtil.openProject(files[0].getAbsolutePath(), project, false);\n      }\n      return true;\n    }\n    return false;\n  }","id":1009,"modified_method":"public boolean processCheckedOutDirectory(Project project, File directory) {\n    File[] files = directory.listFiles(new FilenameFilter() {\n      public boolean accept(File dir, String name) {\n        return name.endsWith(MPSExtentions.DOT_MPS_PROJECT);\n      }\n    });\n    if (files != null && files.length > 0) {\n      int rc = Messages.showYesNoDialog(project, \"You have checked out an MPS project file:\\n\" + files[0].getAbsolutePath() + \"\\nWould you like to open it?\", \"Checkout from Version Control\", Messages.getQuestionIcon());\n      if (rc == 0) {\n        Project openedProject = ProjectUtil.openProject(files[0].getAbsolutePath(), project, false);\n        if (openedProject != null) {\n          ProjectBaseDirectory.getInstance(openedProject).setBaseDir(openedProject.getBaseDir());\n        }\n      }\n      return true;\n    }\n    return false;\n  }","commit_id":"bf26b90c6bc21a9eac64109a17928a111272adbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public ProcessResult process(Content dataSource, DataSourceIngestModuleProgress progressBar) {\n        services.postMessage(IngestMessage.createMessage(IngestMessage.MessageType.INFO, AndroidModuleFactory.getModuleName(),\n                                                         NbBundle.getMessage(this.getClass(),\n                                                                             \"AndroidIngestModule.processing.startedAnalysis\")));\n\n        ArrayList<String> errors = new ArrayList<>();\n        progressBar.switchToDeterminate(9);\n\n        try {\n            ContactAnalyzer.findContacts();\n            progressBar.progress(1);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Contacts\"); //NON-NLS\n        }\n\n        try {\n            CallLogAnalyzer.findCallLogs();\n            progressBar.progress(2);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Call Logs\"); //NON-NLS\n        }\n\n        try {\n            TextMessageAnalyzer.findTexts();\n            progressBar.progress(3);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Text Messages\"); //NON-NLS\n        }\n\n        try {\n            TangoMessageAnalyzer.findTangoMessages();\n            progressBar.progress(4);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Tango Messages\"); //NON-NLS\n        }\n\n        try {\n            WWFMessageAnalyzer.findWWFMessages();\n            progressBar.progress(5);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Words with Friends Messages\"); //NON-NLS\n        }\n\n        try {\n            GoogleMapLocationAnalyzer.findGeoLocations();\n            progressBar.progress(6);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Google Map Locations\"); //NON-NLS\n        }\n\n        try {\n            BrowserLocationAnalyzer.findGeoLocations();\n            progressBar.progress(7);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Browser Locations\"); //NON-NLS\n        }\n\n        try {\n            CacheLocationAnalyzer.findGeoLocations();\n            progressBar.progress(8);\n        } catch (Exception e) {\n            errors.add(\"Error getting Cache Locations\"); //NON-NLS\n        }\n\n        // create the final message for inbox\n        StringBuilder errorMessage = new StringBuilder();\n        String errorMsgSubject;\n        IngestMessage.MessageType msgLevel = IngestMessage.MessageType.INFO;\n        if (errors.isEmpty() == false) {\n            msgLevel = IngestMessage.MessageType.ERROR;\n            errorMessage.append(\"Errors were encountered\"); //NON-NLS\n            for (String msg : errors) {\n                errorMessage.append(\"<li>\").append(msg).append(\"<\/li>\\n\"); //NON-NLS\n            }\n            errorMessage.append(\"<\/ul>\\n\"); //NON-NLS\n\n            if (errors.size() == 1) {\n                errorMsgSubject = \"One error was found\"; //NON-NLS\n            } else {\n                errorMsgSubject = \"errors found: \" + errors.size(); //NON-NLS\n            }\n        } else {\n            errorMessage.append(\"No errors\"); //NON-NLS\n            errorMsgSubject = \"No errors\"; //NON-NLS\n        }\n\n        services.postMessage(IngestMessage.createMessage(msgLevel, AndroidModuleFactory.getModuleName(),\n                                                         NbBundle.getMessage(this.getClass(),\n                                                                             \"AndroidIngestModule.processing.finishedAnalysis\",\n                                                                             errorMsgSubject), errorMessage.toString()));\n\n        return IngestModule.ProcessResult.OK;\n    }","id":1010,"modified_method":"@Override\n    public ProcessResult process(Content dataSource, DataSourceIngestModuleProgress progressBar) {\n        services.postMessage(IngestMessage.createMessage(IngestMessage.MessageType.INFO, AndroidModuleFactory.getModuleName(),\n                                                         NbBundle.getMessage(this.getClass(),\n                                                                             \"AndroidIngestModule.processing.startedAnalysis\")));\n\n        ArrayList<String> errors = new ArrayList<>();\n        progressBar.switchToDeterminate(9);\n\n        try {\n            ContactAnalyzer.findContacts(dataSource);\n            progressBar.progress(1);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Contacts\"); //NON-NLS\n        }\n\n        try {\n            CallLogAnalyzer.findCallLogs(dataSource);\n            progressBar.progress(2);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Call Logs\"); //NON-NLS\n        }\n\n        try {\n            TextMessageAnalyzer.findTexts(dataSource);\n            progressBar.progress(3);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Text Messages\"); //NON-NLS\n        }\n\n        try {\n            TangoMessageAnalyzer.findTangoMessages(dataSource);\n            progressBar.progress(4);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Tango Messages\"); //NON-NLS\n        }\n\n        try {\n            WWFMessageAnalyzer.findWWFMessages(dataSource);\n            progressBar.progress(5);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Words with Friends Messages\"); //NON-NLS\n        }\n\n        try {\n            GoogleMapLocationAnalyzer.findGeoLocations(dataSource);\n            progressBar.progress(6);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Google Map Locations\"); //NON-NLS\n        }\n\n        try {\n            BrowserLocationAnalyzer.findGeoLocations(dataSource);\n            progressBar.progress(7);\n            if (context.dataSourceIngestIsCancelled()) {\n                return IngestModule.ProcessResult.OK;\n            }\n        } catch (Exception e) {\n            errors.add(\"Error getting Browser Locations\"); //NON-NLS\n        }\n\n        try {\n            CacheLocationAnalyzer.findGeoLocations(dataSource);\n            progressBar.progress(8);\n        } catch (Exception e) {\n            errors.add(\"Error getting Cache Locations\"); //NON-NLS\n        }\n\n        // create the final message for inbox\n        StringBuilder errorMessage = new StringBuilder();\n        String errorMsgSubject;\n        IngestMessage.MessageType msgLevel = IngestMessage.MessageType.INFO;\n        if (errors.isEmpty() == false) {\n            msgLevel = IngestMessage.MessageType.ERROR;\n            errorMessage.append(\"Errors were encountered\"); //NON-NLS\n            for (String msg : errors) {\n                errorMessage.append(\"<li>\").append(msg).append(\"<\/li>\\n\"); //NON-NLS\n            }\n            errorMessage.append(\"<\/ul>\\n\"); //NON-NLS\n\n            if (errors.size() == 1) {\n                errorMsgSubject = \"One error was found\"; //NON-NLS\n            } else {\n                errorMsgSubject = \"errors found: \" + errors.size(); //NON-NLS\n            }\n        } else {\n            errorMessage.append(\"No errors\"); //NON-NLS\n            errorMsgSubject = \"No errors\"; //NON-NLS\n        }\n\n        services.postMessage(IngestMessage.createMessage(msgLevel, AndroidModuleFactory.getModuleName(),\n                                                         NbBundle.getMessage(this.getClass(),\n                                                                             \"AndroidIngestModule.processing.finishedAnalysis\",\n                                                                             errorMsgSubject), errorMessage.toString()));\n\n        return IngestModule.ProcessResult.OK;\n    }","commit_id":"7ccfe9ceb861320a21b48f8d22ea33b388d1476f","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public static void findGeoLocations() {\n        try {\n            SleuthkitCase skCase = Case.getCurrentCase().getSleuthkitCase();\n            List<AbstractFile> abstractFiles = skCase.findAllFilesWhere(\"name LIKE 'CachedGeoposition%.db'\");  //NON-NLS  //get exact file names\n\n            for (AbstractFile abstractFile : abstractFiles) {\n                try {\n                    if (abstractFile.getSize() == 0) {\n                        continue;\n                    }\n                    File jFile = new File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, jFile);\n                    findGeoLocationsInDB(jFile.toString(), abstractFile);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing Browser Location files\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding Browser Location files\", e); //NON-NLS\n\n        }\n    }","id":1011,"modified_method":"public static void findGeoLocations(Content dataSource) {\n        try {\n            FileManager fileManager = Case.getCurrentCase().getServices().getFileManager();\n            List<AbstractFile> abstractFiles = fileManager.findFiles(dataSource, \"CachedGeoposition%.db\"); //NON-NLS\n\n            for (AbstractFile abstractFile : abstractFiles) {\n                try {\n                    if (abstractFile.getSize() == 0) {\n                        continue;\n                    }\n                    File jFile = new File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, jFile);\n                    findGeoLocationsInDB(jFile.toString(), abstractFile);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing Browser Location files\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding Browser Location files\", e); //NON-NLS\n\n        }\n    }","commit_id":"7ccfe9ceb861320a21b48f8d22ea33b388d1476f","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * cache.cell stores mobile tower GPS locations and cache.wifi stores GPS and MAC info from Wifi points. \n     */\n    public static void findGeoLocations() {\n\n        try {\n            SleuthkitCase skCase = Case.getCurrentCase().getSleuthkitCase();\n            List<AbstractFile> abstractFiles = skCase.findAllFilesWhere(\"name ='cache.cell' OR name='cache.wifi'\");  //NON-NLS  //get exact file names\n\n            for (AbstractFile abstractFile : abstractFiles) {\n                try {\n                    if (abstractFile.getSize() == 0) {\n                        continue;\n                    }\n                    File jFile = new File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, jFile);\n\n                    findGeoLocationsInFile(jFile, abstractFile);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing cached Location files\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding cached Location files\", e); //NON-NLS\n        }\n    }","id":1012,"modified_method":"/**\n     * cache.cell stores mobile tower GPS locations and cache.wifi stores GPS and MAC info from Wifi points. \n     */\n    public static void findGeoLocations(Content dataSource) {\n\n        try {\n            FileManager fileManager = Case.getCurrentCase().getServices().getFileManager();\n            List<AbstractFile> abstractFiles = fileManager.findFiles(dataSource, \"cache.cell\"); //NON-NLS\n            abstractFiles.addAll(fileManager.findFiles(dataSource, \"cache.wifi\"));\n\n            for (AbstractFile abstractFile : abstractFiles) {\n                try {\n                    if (abstractFile.getSize() == 0) {\n                        continue;\n                    }\n                    File jFile = new File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, jFile);\n\n                    findGeoLocationsInFile(jFile, abstractFile);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing cached Location files\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding cached Location files\", e); //NON-NLS\n        }\n    }","commit_id":"7ccfe9ceb861320a21b48f8d22ea33b388d1476f","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public static void findCallLogs() {\n        try {\n            SleuthkitCase skCase = Case.getCurrentCase().getSleuthkitCase();\n\n            for (AbstractFile abstractFile : skCase.findAllFilesWhere(fileNameQuery)) {\n                try {\n                    File file = new File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, file);\n                    findCallLogsInDB(file.toString(), abstractFile);\n                } catch (IOException e) {\n                    logger.log(Level.SEVERE, \"Error writing temporary call log db to disk\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding call logs\", e); //NON-NLS\n        }\n    }","id":1013,"modified_method":"public static void findCallLogs(Content dataSource) {\n        try {\n            FileManager fileManager = Case.getCurrentCase().getServices().getFileManager();\n            List<AbstractFile> absFiles = fileManager.findFiles(dataSource, \"logs.db\"); //NON-NLS\n            absFiles.addAll(fileManager.findFiles(dataSource, \"contacts.db\")); //NON-NLS\n            absFiles.addAll(fileManager.findFiles(dataSource, \"contacts2.db\")); //NON-NLS\n            for (AbstractFile abstractFile : absFiles) {\n                try {\n                    File file = new File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, file);\n                    findCallLogsInDB(file.toString(), abstractFile);\n                } catch (IOException e) {\n                    logger.log(Level.SEVERE, \"Error writing temporary call log db to disk\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding call logs\", e); //NON-NLS\n        }\n    }","commit_id":"7ccfe9ceb861320a21b48f8d22ea33b388d1476f","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public static void findContacts() {\n\n        List<AbstractFile> absFiles;\n        try {\n            SleuthkitCase skCase = Case.getCurrentCase().getSleuthkitCase();\n            absFiles = skCase.findAllFilesWhere(\"name ='contacts2.db' OR name ='contacts.db'\"); //NON-NLS //get exact file names\n            if (absFiles.isEmpty()) {\n                return;\n            }\n            for (AbstractFile AF : absFiles) {\n                try {\n                    File jFile = new File(Case.getCurrentCase().getTempDirectory(), AF.getName());\n                    ContentUtils.writeToFile(AF, jFile);\n                    findContactsInDB(jFile.toString(), AF);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing Contacts\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding Contacts\", e); //NON-NLS\n        }\n    }","id":1014,"modified_method":"public static void findContacts(Content dataSource) {\n\n        List<AbstractFile> absFiles;\n        try {\n            FileManager fileManager = Case.getCurrentCase().getServices().getFileManager();\n            absFiles = fileManager.findFiles(dataSource, \"contacts.db\"); //NON-NLS\n            absFiles.addAll(fileManager.findFiles(dataSource, \"contacts2.db\")); //NON-NLS\n            if (absFiles.isEmpty()) {\n                return;\n            }\n            for (AbstractFile AF : absFiles) {\n                try {\n                    File jFile = new File(Case.getCurrentCase().getTempDirectory(), AF.getName());\n                    ContentUtils.writeToFile(AF, jFile);\n                    findContactsInDB(jFile.toString(), AF);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing Contacts\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding Contacts\", e); //NON-NLS\n        }\n    }","commit_id":"7ccfe9ceb861320a21b48f8d22ea33b388d1476f","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public static void findGeoLocations() {\n        List<AbstractFile> absFiles;\n        try {\n            SleuthkitCase skCase = Case.getCurrentCase().getSleuthkitCase();\n            absFiles = skCase.findAllFilesWhere(\"name ='da_destination_history'\"); //NON-NLS //get exact file name\n            if (absFiles.isEmpty()) {\n                return;\n            }\n            for (AbstractFile abstractFile : absFiles) {\n                try {\n                    File jFile = new java.io.File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, jFile);\n                    findGeoLocationsInDB(jFile.toString(), abstractFile);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing Google map locations\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding Google map locations\", e); //NON-NLS\n        }\n    }","id":1015,"modified_method":"public static void findGeoLocations(Content dataSource) {\n        List<AbstractFile> absFiles;\n        try {\n            FileManager fileManager = Case.getCurrentCase().getServices().getFileManager();\n            absFiles = fileManager.findFiles(dataSource, \"da_destination_history\"); //NON-NLS\n            if (absFiles.isEmpty()) {\n                return;\n            }\n            for (AbstractFile abstractFile : absFiles) {\n                try {\n                    File jFile = new java.io.File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, jFile);\n                    findGeoLocationsInDB(jFile.toString(), abstractFile);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing Google map locations\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding Google map locations\", e); //NON-NLS\n        }\n    }","commit_id":"7ccfe9ceb861320a21b48f8d22ea33b388d1476f","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public static void findTangoMessages() {\n        List<AbstractFile> absFiles;\n        try {\n            SleuthkitCase skCase = Case.getCurrentCase().getSleuthkitCase();\n            absFiles = skCase.findAllFilesWhere(\"name ='tc.db' \"); //NON-NLS //get exact file names\n            for (AbstractFile abstractFile : absFiles) {\n                try {\n                    File jFile = new File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, jFile);\n                    findTangoMessagesInDB(jFile.toString(), abstractFile);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing Tango messages\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding Tango messages\", e); //NON-NLS\n        }\n    }","id":1016,"modified_method":"public static void findTangoMessages(Content dataSource) {\n        List<AbstractFile> absFiles;\n        try {\n            FileManager fileManager = Case.getCurrentCase().getServices().getFileManager();\n            absFiles = fileManager.findFiles(dataSource, \"tc.db\"); //NON-NLS\n            for (AbstractFile abstractFile : absFiles) {\n                try {\n                    File jFile = new File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, jFile);\n                    findTangoMessagesInDB(jFile.toString(), abstractFile);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing Tango messages\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding Tango messages\", e); //NON-NLS\n        }\n    }","commit_id":"7ccfe9ceb861320a21b48f8d22ea33b388d1476f","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public static void findTexts() {\n        try {\n            SleuthkitCase skCase = Case.getCurrentCase().getSleuthkitCase();\n            List<AbstractFile> absFiles = skCase.findAllFilesWhere(\"name ='mmssms.db'\"); //NON-NLS //get exact file name\n\n            for (AbstractFile abstractFile : absFiles) {\n                try {\n                    File jFile = new File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, jFile);\n                    findTextsInDB(jFile.toString(), abstractFile);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing text messages\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding text messages\", e); //NON-NLS\n        }\n    }","id":1017,"modified_method":"public static void findTexts(Content dataSource) {\n        try {\n            \n            FileManager fileManager = Case.getCurrentCase().getServices().getFileManager();\n            List<AbstractFile> absFiles = fileManager.findFiles(dataSource, \"mmssms.db\"); //NON-NLS\n            for (AbstractFile abstractFile : absFiles) {\n                try {\n                    File jFile = new File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, jFile);\n                    findTextsInDB(jFile.toString(), abstractFile);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing text messages\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding text messages\", e); //NON-NLS\n        }\n    }","commit_id":"7ccfe9ceb861320a21b48f8d22ea33b388d1476f","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public static void findWWFMessages() {\n        List<AbstractFile> absFiles;\n        try {\n            SleuthkitCase skCase = Case.getCurrentCase().getSleuthkitCase();\n            absFiles = skCase.findAllFilesWhere(\"name ='WordsFramework' \"); //NON-NLS //get exact file names\n\n            for (AbstractFile abstractFile : absFiles) {\n                try {\n                    File jFile = new File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, jFile);\n\n                    findWWFMessagesInDB(jFile.toString(), abstractFile);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing WWF messages\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding WWF messages\", e); //NON-NLS\n        }\n    }","id":1018,"modified_method":"public static void findWWFMessages(Content dataSource) {\n        List<AbstractFile> absFiles;\n        try {\n            FileManager fileManager = Case.getCurrentCase().getServices().getFileManager();\n            absFiles = fileManager.findFiles(dataSource, \"WordsFramework\"); //NON-NLS\n\n            for (AbstractFile abstractFile : absFiles) {\n                try {\n                    File jFile = new File(Case.getCurrentCase().getTempDirectory(), abstractFile.getName());\n                    ContentUtils.writeToFile(abstractFile, jFile);\n\n                    findWWFMessagesInDB(jFile.toString(), abstractFile);\n                } catch (Exception e) {\n                    logger.log(Level.SEVERE, \"Error parsing WWF messages\", e); //NON-NLS\n                }\n            }\n        } catch (TskCoreException e) {\n            logger.log(Level.SEVERE, \"Error finding WWF messages\", e); //NON-NLS\n        }\n    }","commit_id":"7ccfe9ceb861320a21b48f8d22ea33b388d1476f","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n    protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        if (log.isTraceEnabled()) {\n            log.trace(\"Service: \" + request);\n        }\n\n        // is there a consumer registered for the request.\n        HttpConsumer consumer = resolve(request);\n        if (consumer == null) {\n            response.sendError(HttpServletResponse.SC_NOT_FOUND);\n            return;\n        }\n\n        final Exchange result = (Exchange) request.getAttribute(EXCHANGE_ATTRIBUTE_NAME);\n        if (result == null) {\n            // no asynchronous result so leverage continuation\n            final Continuation continuation = ContinuationSupport.getContinuation(request);\n            if (continuationTimeout != null) {\n                continuation.setTimeout(continuationTimeout);\n            }\n\n            // are we suspended and a request is dispatched initially?\n            if (consumer.isSuspended() && continuation.isInitial()) {\n                response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);\n                return;\n            }\n\n            if (continuation.isExpired()) {\n                String id = (String) continuation.getAttribute(EXCHANGE_ATTRIBUTE_ID);\n                log.warn(\"Continuation expired of exchangeId: \" + id);\n                response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);\n                return;\n            }\n\n            // a new request so create an exchange\n            final Exchange exchange = new DefaultExchange(consumer.getEndpoint(), ExchangePattern.InOut);\n            if (consumer.getEndpoint().isBridgeEndpoint()) {\n                exchange.setProperty(Exchange.SKIP_GZIP_ENCODING, Boolean.TRUE);\n            }\n            if (consumer.getEndpoint().isDisableStreamCache()) {\n                exchange.setProperty(Exchange.DISABLE_HTTP_STREAM_CACHE, Boolean.TRUE);\n            }\n            \n            HttpHelper.setCharsetFromContentType(request.getContentType(), exchange);\n            exchange.setIn(new HttpMessage(exchange, request, response));\n\n            if (log.isTraceEnabled()) {\n                log.trace(\"Suspending continuation of exchangeId: \" + exchange.getExchangeId());\n            }\n            continuation.setAttribute(EXCHANGE_ATTRIBUTE_ID, exchange.getExchangeId());\n            // must suspend before we process the exchange\n            continuation.suspend();\n\n            if (log.isTraceEnabled()) {\n                log.trace(\"Processing request for exchangeId: \" + exchange.getExchangeId());\n            }\n            // use the asynchronous API to process the exchange\n            consumer.getAsyncProcessor().process(exchange, new AsyncCallback() {\n                public void done(boolean doneSync) {\n                    if (log.isTraceEnabled()) {\n                        log.trace(\"Resuming continuation of exchangeId: \" + exchange.getExchangeId());\n                    }\n                    // resume processing after both, sync and async callbacks\n                    continuation.setAttribute(EXCHANGE_ATTRIBUTE_NAME, exchange);\n                    continuation.resume();\n                }\n            });\n\n            // return to let Jetty continuation to work as it will resubmit and invoke the service\n            // method again when its resumed\n            return;\n        }\n\n        try {\n            if (log.isTraceEnabled()) {\n                log.trace(\"Resumed continuation and writing response for exchangeId: \" + result.getExchangeId());\n            }\n            // now lets output to the response\n            consumer.getBinding().writeResponse(result, response);\n        } catch (IOException e) {\n            log.error(\"Error processing request\", e);\n            throw e;\n        } catch (Exception e) {\n            log.error(\"Error processing request\", e);\n            throw new ServletException(e);\n        }\n    }","id":1019,"modified_method":"@Override\n    protected void service(final HttpServletRequest request, final HttpServletResponse response) throws ServletException, IOException {\n        log.trace(\"Service: {}\", request);\n\n        // is there a consumer registered for the request.\n        HttpConsumer consumer = resolve(request);\n        if (consumer == null) {\n            response.sendError(HttpServletResponse.SC_NOT_FOUND);\n            return;\n        }\n\n        final Exchange result = (Exchange) request.getAttribute(EXCHANGE_ATTRIBUTE_NAME);\n        if (result == null) {\n            // no asynchronous result so leverage continuation\n            final Continuation continuation = ContinuationSupport.getContinuation(request);\n            if (continuation.isInitial() && continuationTimeout != null) {\n                // set timeout on initial\n                continuation.setTimeout(continuationTimeout);\n            }\n\n            // are we suspended and a request is dispatched initially?\n            if (consumer.isSuspended() && continuation.isInitial()) {\n                response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);\n                return;\n            }\n\n            if (continuation.isExpired()) {\n                String id = (String) continuation.getAttribute(EXCHANGE_ATTRIBUTE_ID);\n                // remember this id as expired\n                expiredExchanges.put(id, id);\n                log.warn(\"Continuation expired of exchangeId: {}\", id);\n                response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);\n                return;\n            }\n\n            // a new request so create an exchange\n            final Exchange exchange = new DefaultExchange(consumer.getEndpoint(), ExchangePattern.InOut);\n            if (consumer.getEndpoint().isBridgeEndpoint()) {\n                exchange.setProperty(Exchange.SKIP_GZIP_ENCODING, Boolean.TRUE);\n            }\n            if (consumer.getEndpoint().isDisableStreamCache()) {\n                exchange.setProperty(Exchange.DISABLE_HTTP_STREAM_CACHE, Boolean.TRUE);\n            }\n            \n            HttpHelper.setCharsetFromContentType(request.getContentType(), exchange);\n            exchange.setIn(new HttpMessage(exchange, request, response));\n\n            log.trace(\"Suspending continuation of exchangeId: {}\", exchange.getExchangeId());\n            continuation.setAttribute(EXCHANGE_ATTRIBUTE_ID, exchange.getExchangeId());\n            // must suspend before we process the exchange\n            continuation.suspend();\n\n            log.trace(\"Processing request for exchangeId: {}\", exchange.getExchangeId());\n            // use the asynchronous API to process the exchange\n            consumer.getAsyncProcessor().process(exchange, new AsyncCallback() {\n                public void done(boolean doneSync) {\n                    // check if the exchange id is already expired\n                    boolean expired = expiredExchanges.remove(exchange.getExchangeId()) != null;\n                    if (!expired) {\n                        log.trace(\"Resuming continuation of exchangeId: {}\", exchange.getExchangeId());\n                        // resume processing after both, sync and async callbacks\n                        continuation.setAttribute(EXCHANGE_ATTRIBUTE_NAME, exchange);\n                        continuation.resume();\n                    } else {\n                        log.warn(\"Cannot resume expired continuation of exchangeId: {}\", exchange.getExchangeId());\n                    }\n                }\n            });\n\n            // return to let Jetty continuation to work as it will resubmit and invoke the service\n            // method again when its resumed\n            return;\n        }\n\n        try {\n            log.trace(\"Resumed continuation and writing response for exchangeId: {}\", result.getExchangeId());\n            // now lets output to the response\n            consumer.getBinding().writeResponse(result, response);\n        } catch (IOException e) {\n            log.error(\"Error processing request\", e);\n            throw e;\n        } catch (Exception e) {\n            log.error(\"Error processing request\", e);\n            throw new ServletException(e);\n        }\n    }","commit_id":"375c508894d7cd6ac8012424cf12a4a18e401788","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Serialize a given column to the JSON format\n     *\n     * @param column column presentation\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     *\n     * @return column as serialized list\n     */\n    private static List<Object> serializeColumn(IColumn column, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        ArrayList<Object> serializedColumn = new ArrayList<Object>();\n\n        ByteBuffer name = ByteBufferUtil.clone(column.name());\n        ByteBuffer value = ByteBufferUtil.clone(column.value());\n        AbstractType validator = cfMetaData.getValueValidator(name);\n\n        serializedColumn.add(comparator.getString(name));\n        serializedColumn.add(validator.getString(value));\n        serializedColumn.add(column.timestamp());\n\n        if (column instanceof DeletedColumn)\n        {\n            serializedColumn.add(\"d\");\n        }\n        else if (column instanceof ExpiringColumn)\n        {\n            serializedColumn.add(\"e\");\n            serializedColumn.add(((ExpiringColumn) column).getTimeToLive());\n            serializedColumn.add(column.getLocalDeletionTime());\n        }\n        else if (column instanceof CounterColumn)\n        {\n            serializedColumn.add(\"c\");\n            serializedColumn.add(((CounterColumn) column).timestampOfLastDelete());\n        }\n\n        return serializedColumn;\n    }","id":1020,"modified_method":"/**\n     * Serialize a given column to the JSON format\n     *\n     * @param column column presentation\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     *\n     * @return column as serialized list\n     */\n    private static List<Object> serializeColumn(IColumn column, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        ArrayList<Object> serializedColumn = new ArrayList<Object>();\n\n        ByteBuffer name = ByteBufferUtil.clone(column.name());\n        ByteBuffer value = ByteBufferUtil.clone(column.value());\n        AbstractType validator = cfMetaData.getValueValidator(name);\n\n        serializedColumn.add(comparator.getString(name));\n        if (column instanceof DeletedColumn)\n            serializedColumn.add(ByteBufferUtil.bytesToHex(value));\n        else\n            serializedColumn.add(validator.getString(value));\n        serializedColumn.add(column.timestamp());\n\n        if (column instanceof DeletedColumn)\n        {\n            serializedColumn.add(\"d\");\n        }\n        else if (column instanceof ExpiringColumn)\n        {\n            serializedColumn.add(\"e\");\n            serializedColumn.add(((ExpiringColumn) column).getTimeToLive());\n            serializedColumn.add(column.getLocalDeletionTime());\n        }\n        else if (column instanceof CounterColumn)\n        {\n            serializedColumn.add(\"c\");\n            serializedColumn.add(((CounterColumn) column).timestampOfLastDelete());\n        }\n\n        return serializedColumn;\n    }","commit_id":"84de35d2d7a06875937086655e364633a849e9d1","url":"https://github.com/apache/cassandra"},{"original_method":"public JsonColumn(T json, CFMetaData meta, boolean isSubColumn)\n        {\n            AbstractType comparator = (isSubColumn) ? meta.subcolumnComparator : meta.comparator;\n\n            if (json instanceof List)\n            {\n                List fields = (List<?>) json;\n\n                assert fields.size() >= 3 : \"Column definition should have at least 3\";\n\n                name  = stringAsType((String) fields.get(0), comparator);\n                value = stringAsType((String) fields.get(1), meta.getValueValidator(name.duplicate()));\n                timestamp = (Long) fields.get(2);\n                kind = \"\";\n\n                if (fields.size() > 3)\n                {\n                    if (fields.get(3) instanceof Boolean)\n                    {\n                        // old format, reading this for backward compatibility sake\n                        if (fields.size() == 6)\n                        {\n                            kind = \"e\";\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else\n                        {\n                            kind = ((Boolean) fields.get(3)) ? \"d\" : \"\";\n                        }\n                    }\n                    else\n                    {\n                        kind = (String) fields.get(3);\n                        if (isExpiring())\n                        {\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else if (isCounter())\n                        {\n                            timestampOfLastDelete = (long) ((Integer) fields.get(4));\n                        }\n                    }\n                }\n            }\n        }","id":1021,"modified_method":"public JsonColumn(T json, CFMetaData meta, boolean isSubColumn)\n        {\n            AbstractType comparator = (isSubColumn) ? meta.subcolumnComparator : meta.comparator;\n\n            if (json instanceof List)\n            {\n                List fields = (List<?>) json;\n\n                assert fields.size() >= 3 : \"Column definition should have at least 3\";\n\n                name  = stringAsType((String) fields.get(0), comparator);\n                timestamp = (Long) fields.get(2);\n                kind = \"\";\n\n                if (fields.size() > 3)\n                {\n                    if (fields.get(3) instanceof Boolean)\n                    {\n                        // old format, reading this for backward compatibility sake\n                        if (fields.size() == 6)\n                        {\n                            kind = \"e\";\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else\n                        {\n                            kind = ((Boolean) fields.get(3)) ? \"d\" : \"\";\n                        }\n                    }\n                    else\n                    {\n                        kind = (String) fields.get(3);\n                        if (isExpiring())\n                        {\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else if (isCounter())\n                        {\n                            timestampOfLastDelete = (long) ((Integer) fields.get(4));\n                        }\n                    }\n                }\n\n                value = isDeleted() ? ByteBufferUtil.hexToBytes((String) fields.get(1))\n                                    : stringAsType((String) fields.get(1), meta.getValueValidator(name.duplicate()));\n            }\n        }","commit_id":"84de35d2d7a06875937086655e364633a849e9d1","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Serialize a given column to the JSON format\n     *\n     * @param column column presentation\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     *\n     * @return column as serialized list\n     */\n    private static List<Object> serializeColumn(IColumn column, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        ArrayList<Object> serializedColumn = new ArrayList<Object>();\n\n        ByteBuffer name = ByteBufferUtil.clone(column.name());\n        ByteBuffer value = ByteBufferUtil.clone(column.value());\n        AbstractType validator = cfMetaData.getValueValidator(name);\n\n        serializedColumn.add(comparator.getString(name));\n        serializedColumn.add(validator.getString(value));\n        serializedColumn.add(column.timestamp());\n\n        if (column instanceof DeletedColumn)\n        {\n            serializedColumn.add(\"d\");\n        }\n        else if (column instanceof ExpiringColumn)\n        {\n            serializedColumn.add(\"e\");\n            serializedColumn.add(((ExpiringColumn) column).getTimeToLive());\n            serializedColumn.add(column.getLocalDeletionTime());\n        }\n        else if (column instanceof CounterColumn)\n        {\n            serializedColumn.add(\"c\");\n            serializedColumn.add(((CounterColumn) column).timestampOfLastDelete());\n        }\n\n        return serializedColumn;\n    }","id":1022,"modified_method":"/**\n     * Serialize a given column to the JSON format\n     *\n     * @param column column presentation\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     *\n     * @return column as serialized list\n     */\n    private static List<Object> serializeColumn(IColumn column, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        ArrayList<Object> serializedColumn = new ArrayList<Object>();\n\n        ByteBuffer name = ByteBufferUtil.clone(column.name());\n        ByteBuffer value = ByteBufferUtil.clone(column.value());\n        AbstractType validator = cfMetaData.getValueValidator(name);\n\n        serializedColumn.add(comparator.getString(name));\n        if (column instanceof DeletedColumn)\n            serializedColumn.add(ByteBufferUtil.bytesToHex(value));\n        else\n            serializedColumn.add(validator.getString(value));\n        serializedColumn.add(column.timestamp());\n\n        if (column instanceof DeletedColumn)\n        {\n            serializedColumn.add(\"d\");\n        }\n        else if (column instanceof ExpiringColumn)\n        {\n            serializedColumn.add(\"e\");\n            serializedColumn.add(((ExpiringColumn) column).getTimeToLive());\n            serializedColumn.add(column.getLocalDeletionTime());\n        }\n        else if (column instanceof CounterColumn)\n        {\n            serializedColumn.add(\"c\");\n            serializedColumn.add(((CounterColumn) column).timestampOfLastDelete());\n        }\n\n        return serializedColumn;\n    }","commit_id":"e2fe59d7b614141f3b63e7d46bcc0b305ea9c920","url":"https://github.com/apache/cassandra"},{"original_method":"public JsonColumn(T json, CFMetaData meta, boolean isSubColumn)\n        {\n            AbstractType comparator = (isSubColumn) ? meta.subcolumnComparator : meta.comparator;\n\n            if (json instanceof List)\n            {\n                List fields = (List<?>) json;\n\n                assert fields.size() >= 3 : \"Column definition should have at least 3\";\n\n                name  = stringAsType((String) fields.get(0), comparator);\n                value = stringAsType((String) fields.get(1), meta.getValueValidator(name.duplicate()));\n                timestamp = (Long) fields.get(2);\n                kind = \"\";\n\n                if (fields.size() > 3)\n                {\n                    if (fields.get(3) instanceof Boolean)\n                    {\n                        // old format, reading this for backward compatibility sake\n                        if (fields.size() == 6)\n                        {\n                            kind = \"e\";\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else\n                        {\n                            kind = ((Boolean) fields.get(3)) ? \"d\" : \"\";\n                        }\n                    }\n                    else\n                    {\n                        kind = (String) fields.get(3);\n                        if (isExpiring())\n                        {\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else if (isCounter())\n                        {\n                            timestampOfLastDelete = (long) ((Integer) fields.get(4));\n                        }\n                    }\n                }\n            }\n        }","id":1023,"modified_method":"public JsonColumn(T json, CFMetaData meta, boolean isSubColumn)\n        {\n            AbstractType comparator = (isSubColumn) ? meta.subcolumnComparator : meta.comparator;\n\n            if (json instanceof List)\n            {\n                List fields = (List<?>) json;\n\n                assert fields.size() >= 3 : \"Column definition should have at least 3\";\n\n                name  = stringAsType((String) fields.get(0), comparator);\n                timestamp = (Long) fields.get(2);\n                kind = \"\";\n\n                if (fields.size() > 3)\n                {\n                    if (fields.get(3) instanceof Boolean)\n                    {\n                        // old format, reading this for backward compatibility sake\n                        if (fields.size() == 6)\n                        {\n                            kind = \"e\";\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else\n                        {\n                            kind = ((Boolean) fields.get(3)) ? \"d\" : \"\";\n                        }\n                    }\n                    else\n                    {\n                        kind = (String) fields.get(3);\n                        if (isExpiring())\n                        {\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else if (isCounter())\n                        {\n                            timestampOfLastDelete = (long) ((Integer) fields.get(4));\n                        }\n                    }\n                }\n\n                value = isDeleted() ? ByteBufferUtil.hexToBytes((String) fields.get(1))\n                                    : stringAsType((String) fields.get(1), meta.getValueValidator(name.duplicate()));\n            }\n        }","commit_id":"e2fe59d7b614141f3b63e7d46bcc0b305ea9c920","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Serialize a given column to the JSON format\n     *\n     * @param column column presentation\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     *\n     * @return column as serialized list\n     */\n    private static List<Object> serializeColumn(IColumn column, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        ArrayList<Object> serializedColumn = new ArrayList<Object>();\n\n        ByteBuffer name = ByteBufferUtil.clone(column.name());\n        ByteBuffer value = ByteBufferUtil.clone(column.value());\n        AbstractType validator = cfMetaData.getValueValidator(name);\n\n        serializedColumn.add(comparator.getString(name));\n        serializedColumn.add(validator.getString(value));\n        serializedColumn.add(column.timestamp());\n\n        if (column instanceof DeletedColumn)\n        {\n            serializedColumn.add(\"d\");\n        }\n        else if (column instanceof ExpiringColumn)\n        {\n            serializedColumn.add(\"e\");\n            serializedColumn.add(((ExpiringColumn) column).getTimeToLive());\n            serializedColumn.add(column.getLocalDeletionTime());\n        }\n        else if (column instanceof CounterColumn)\n        {\n            serializedColumn.add(\"c\");\n            serializedColumn.add(((CounterColumn) column).timestampOfLastDelete());\n        }\n\n        return serializedColumn;\n    }","id":1024,"modified_method":"/**\n     * Serialize a given column to the JSON format\n     *\n     * @param column column presentation\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     *\n     * @return column as serialized list\n     */\n    private static List<Object> serializeColumn(IColumn column, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        ArrayList<Object> serializedColumn = new ArrayList<Object>();\n\n        ByteBuffer name = ByteBufferUtil.clone(column.name());\n        ByteBuffer value = ByteBufferUtil.clone(column.value());\n        AbstractType validator = cfMetaData.getValueValidator(name);\n\n        serializedColumn.add(comparator.getString(name));\n        if (column instanceof DeletedColumn)\n            serializedColumn.add(ByteBufferUtil.bytesToHex(value));\n        else\n            serializedColumn.add(validator.getString(value));\n        serializedColumn.add(column.timestamp());\n\n        if (column instanceof DeletedColumn)\n        {\n            serializedColumn.add(\"d\");\n        }\n        else if (column instanceof ExpiringColumn)\n        {\n            serializedColumn.add(\"e\");\n            serializedColumn.add(((ExpiringColumn) column).getTimeToLive());\n            serializedColumn.add(column.getLocalDeletionTime());\n        }\n        else if (column instanceof CounterColumn)\n        {\n            serializedColumn.add(\"c\");\n            serializedColumn.add(((CounterColumn) column).timestampOfLastDelete());\n        }\n\n        return serializedColumn;\n    }","commit_id":"bc281a7fa0abb665bd5675dc449d53440239e91f","url":"https://github.com/apache/cassandra"},{"original_method":"public JsonColumn(T json, CFMetaData meta, boolean isSubColumn)\n        {\n            AbstractType comparator = (isSubColumn) ? meta.subcolumnComparator : meta.comparator;\n\n            if (json instanceof List)\n            {\n                List fields = (List<?>) json;\n\n                assert fields.size() >= 3 : \"Column definition should have at least 3\";\n\n                name  = stringAsType((String) fields.get(0), comparator);\n                value = stringAsType((String) fields.get(1), meta.getValueValidator(name.duplicate()));\n                timestamp = (Long) fields.get(2);\n                kind = \"\";\n\n                if (fields.size() > 3)\n                {\n                    if (fields.get(3) instanceof Boolean)\n                    {\n                        // old format, reading this for backward compatibility sake\n                        if (fields.size() == 6)\n                        {\n                            kind = \"e\";\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else\n                        {\n                            kind = ((Boolean) fields.get(3)) ? \"d\" : \"\";\n                        }\n                    }\n                    else\n                    {\n                        kind = (String) fields.get(3);\n                        if (isExpiring())\n                        {\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else if (isCounter())\n                        {\n                            timestampOfLastDelete = (long) ((Integer) fields.get(4));\n                        }\n                    }\n                }\n            }\n        }","id":1025,"modified_method":"public JsonColumn(T json, CFMetaData meta, boolean isSubColumn)\n        {\n            AbstractType comparator = (isSubColumn) ? meta.subcolumnComparator : meta.comparator;\n\n            if (json instanceof List)\n            {\n                List fields = (List<?>) json;\n\n                assert fields.size() >= 3 : \"Column definition should have at least 3\";\n\n                name  = stringAsType((String) fields.get(0), comparator);\n                timestamp = (Long) fields.get(2);\n                kind = \"\";\n\n                if (fields.size() > 3)\n                {\n                    if (fields.get(3) instanceof Boolean)\n                    {\n                        // old format, reading this for backward compatibility sake\n                        if (fields.size() == 6)\n                        {\n                            kind = \"e\";\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else\n                        {\n                            kind = ((Boolean) fields.get(3)) ? \"d\" : \"\";\n                        }\n                    }\n                    else\n                    {\n                        kind = (String) fields.get(3);\n                        if (isExpiring())\n                        {\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else if (isCounter())\n                        {\n                            timestampOfLastDelete = (long) ((Integer) fields.get(4));\n                        }\n                    }\n                }\n\n                value = isDeleted() ? ByteBufferUtil.hexToBytes((String) fields.get(1))\n                                    : stringAsType((String) fields.get(1), meta.getValueValidator(name.duplicate()));\n            }\n        }","commit_id":"bc281a7fa0abb665bd5675dc449d53440239e91f","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Serialize a given column to the JSON format\n     *\n     * @param column column presentation\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     *\n     * @return column as serialized list\n     */\n    private static List<Object> serializeColumn(IColumn column, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        ArrayList<Object> serializedColumn = new ArrayList<Object>();\n\n        ByteBuffer name = ByteBufferUtil.clone(column.name());\n        ByteBuffer value = ByteBufferUtil.clone(column.value());\n        AbstractType validator = cfMetaData.getValueValidator(name);\n\n        serializedColumn.add(comparator.getString(name));\n        serializedColumn.add(validator.getString(value));\n        serializedColumn.add(column.timestamp());\n\n        if (column instanceof DeletedColumn)\n        {\n            serializedColumn.add(\"d\");\n        }\n        else if (column instanceof ExpiringColumn)\n        {\n            serializedColumn.add(\"e\");\n            serializedColumn.add(((ExpiringColumn) column).getTimeToLive());\n            serializedColumn.add(column.getLocalDeletionTime());\n        }\n        else if (column instanceof CounterColumn)\n        {\n            serializedColumn.add(\"c\");\n            serializedColumn.add(((CounterColumn) column).timestampOfLastDelete());\n        }\n\n        return serializedColumn;\n    }","id":1026,"modified_method":"/**\n     * Serialize a given column to the JSON format\n     *\n     * @param column column presentation\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     *\n     * @return column as serialized list\n     */\n    private static List<Object> serializeColumn(IColumn column, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        ArrayList<Object> serializedColumn = new ArrayList<Object>();\n\n        ByteBuffer name = ByteBufferUtil.clone(column.name());\n        ByteBuffer value = ByteBufferUtil.clone(column.value());\n        AbstractType validator = cfMetaData.getValueValidator(name);\n\n        serializedColumn.add(comparator.getString(name));\n        if (column instanceof DeletedColumn)\n            serializedColumn.add(ByteBufferUtil.bytesToHex(value));\n        else\n            serializedColumn.add(validator.getString(value));\n        serializedColumn.add(column.timestamp());\n\n        if (column instanceof DeletedColumn)\n        {\n            serializedColumn.add(\"d\");\n        }\n        else if (column instanceof ExpiringColumn)\n        {\n            serializedColumn.add(\"e\");\n            serializedColumn.add(((ExpiringColumn) column).getTimeToLive());\n            serializedColumn.add(column.getLocalDeletionTime());\n        }\n        else if (column instanceof CounterColumn)\n        {\n            serializedColumn.add(\"c\");\n            serializedColumn.add(((CounterColumn) column).timestampOfLastDelete());\n        }\n\n        return serializedColumn;\n    }","commit_id":"03f24a9a32c24f2f4e1046ecd074400a65263bb2","url":"https://github.com/apache/cassandra"},{"original_method":"public JsonColumn(T json, CFMetaData meta, boolean isSubColumn)\n        {\n            AbstractType comparator = (isSubColumn) ? meta.subcolumnComparator : meta.comparator;\n\n            if (json instanceof List)\n            {\n                List fields = (List<?>) json;\n\n                assert fields.size() >= 3 : \"Column definition should have at least 3\";\n\n                name  = stringAsType((String) fields.get(0), comparator);\n                value = stringAsType((String) fields.get(1), meta.getValueValidator(name.duplicate()));\n                timestamp = (Long) fields.get(2);\n                kind = \"\";\n\n                if (fields.size() > 3)\n                {\n                    if (fields.get(3) instanceof Boolean)\n                    {\n                        // old format, reading this for backward compatibility sake\n                        if (fields.size() == 6)\n                        {\n                            kind = \"e\";\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else\n                        {\n                            kind = ((Boolean) fields.get(3)) ? \"d\" : \"\";\n                        }\n                    }\n                    else\n                    {\n                        kind = (String) fields.get(3);\n                        if (isExpiring())\n                        {\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else if (isCounter())\n                        {\n                            timestampOfLastDelete = (long) ((Integer) fields.get(4));\n                        }\n                    }\n                }\n            }\n        }","id":1027,"modified_method":"public JsonColumn(T json, CFMetaData meta, boolean isSubColumn)\n        {\n            AbstractType comparator = (isSubColumn) ? meta.subcolumnComparator : meta.comparator;\n\n            if (json instanceof List)\n            {\n                List fields = (List<?>) json;\n\n                assert fields.size() >= 3 : \"Column definition should have at least 3\";\n\n                name  = stringAsType((String) fields.get(0), comparator);\n                timestamp = (Long) fields.get(2);\n                kind = \"\";\n\n                if (fields.size() > 3)\n                {\n                    if (fields.get(3) instanceof Boolean)\n                    {\n                        // old format, reading this for backward compatibility sake\n                        if (fields.size() == 6)\n                        {\n                            kind = \"e\";\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else\n                        {\n                            kind = ((Boolean) fields.get(3)) ? \"d\" : \"\";\n                        }\n                    }\n                    else\n                    {\n                        kind = (String) fields.get(3);\n                        if (isExpiring())\n                        {\n                            ttl = (Integer) fields.get(4);\n                            localExpirationTime = (int) (long) ((Long) fields.get(5));\n                        }\n                        else if (isCounter())\n                        {\n                            timestampOfLastDelete = (long) ((Integer) fields.get(4));\n                        }\n                    }\n                }\n\n                value = isDeleted() ? ByteBufferUtil.hexToBytes((String) fields.get(1))\n                                    : stringAsType((String) fields.get(1), meta.getValueValidator(name.duplicate()));\n            }\n        }","commit_id":"03f24a9a32c24f2f4e1046ecd074400a65263bb2","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Write DOAP homepage and old-homepage.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#homepage\">http://usefulinc.com/ns/doap#homepage<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#old-homepage\">http://usefulinc.com/ns/doap#old-homepage<\/a>\n     */\n    private void writeHomepage( XMLWriter writer, MavenProject project )\n    {\n        String homepage = interpolate( doapOptions.getHomepage(), project, settings );\n        if ( StringUtils.isEmpty( homepage ) )\n        {\n            addDoapMessage( \"homepage\" );\n        }\n        else\n        {\n            homepage = homepage.trim();\n\n            try\n            {\n                new URL( homepage );\n\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer,\n                                                \"URL of a project's homepage, associated with exactly one project.\", 2 );\n                DoapUtil.writeRdfResourceElement( writer, \"homepage\", homepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The <doapOptions><homepage>\" + homepage\n                    + \"<\/homepage><\/doapOptions> parameter is not a valid URL.\" );\n            }\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getOldHomepage() ) )\n        {\n            String oldHomepage = interpolate( doapOptions.getOldHomepage(), project, settings );\n            if ( StringUtils.isEmpty( oldHomepage ) )\n            {\n                return;\n            }\n\n            oldHomepage = oldHomepage.trim();\n            try\n            {\n                new URL( oldHomepage );\n\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer,\n                                                \"URL of a project's past homepage, associated with exactly one project.\",\n                                                2 );\n                DoapUtil.writeRdfResourceElement( writer, \"old-homepage\", oldHomepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The <doapOptions><oldHomepage>\" + oldHomepage\n                    + \"<\/oldHomepage><\/doapOptions> parameter is not a valid URL.\" );\n            }\n        }\n    }","id":1028,"modified_method":"/**\n     * Write DOAP homepage and old-homepage.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#homepage\">http://usefulinc.com/ns/doap#homepage<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#old-homepage\">http://usefulinc.com/ns/doap#old-homepage<\/a>\n     */\n    private void writeHomepage( XMLWriter writer, MavenProject project )\n    {\n        String homepage = interpolate( doapOptions.getHomepage(), project, settings );\n        if ( StringUtils.isEmpty( homepage ) )\n        {\n            addDoapMessage( \"homepage\" );\n        }\n        else\n        {\n            try\n            {\n                new URL( homepage );\n\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer,\n                                                \"URL of a project's homepage, associated with exactly one project.\", 2 );\n                DoapUtil.writeRdfResourceElement( writer, \"homepage\", homepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The <doapOptions><homepage>\" + homepage\n                    + \"<\/homepage><\/doapOptions> parameter is not a valid URL.\" );\n            }\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getOldHomepage() ) )\n        {\n            String oldHomepage = interpolate( doapOptions.getOldHomepage(), project, settings );\n            if ( StringUtils.isEmpty( oldHomepage ) )\n            {\n                return;\n            }\n\n            try\n            {\n                new URL( oldHomepage );\n\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer,\n                                                \"URL of a project's past homepage, associated with exactly one project.\",\n                                                2 );\n                DoapUtil.writeRdfResourceElement( writer, \"old-homepage\", oldHomepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The <doapOptions><oldHomepage>\" + oldHomepage\n                    + \"<\/oldHomepage><\/doapOptions> parameter is not a valid URL.\" );\n            }\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Writer a single developer or contributor\n     *\n     * @param writer not null\n     * @param developerOrContributor not null, instance of <code>{@link Developer}/{@link Contributor}<\/code>\n     * @param doapType not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#maintainer\">http://usefulinc.com/ns/doap#maintainer<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#developer\">http://usefulinc.com/ns/doap#developer<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#documenter\">http://usefulinc.com/ns/doap#documenter<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#translator\">http://usefulinc.com/ns/doap#translator<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#tester\">http://usefulinc.com/ns/doap#tester<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#helper\">http://usefulinc.com/ns/doap#helper<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/Person\">http://xmlns.com/foaf/0.1/Person<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/name\">http://xmlns.com/foaf/0.1/name<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/mbox\">http://xmlns.com/foaf/0.1/mbox<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/Organization\">http://xmlns.com/foaf/0.1/Organization<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/homepage\">http://xmlns.com/foaf/0.1/homepage<\/a>\n     */\n    private void writeContributor( XMLWriter writer, Contributor developerOrContributor, String doapType )\n    {\n        if ( developerOrContributor == null )\n        {\n            return;\n        }\n\n        if ( StringUtils.isEmpty( doapType ) )\n        {\n            throw new IllegalArgumentException( \"doapType is required.\" );\n        }\n\n        String name = developerOrContributor.getName();\n        String email = developerOrContributor.getEmail();\n        String organization = developerOrContributor.getOrganization();\n        String organizationUrl = developerOrContributor.getOrganizationUrl();\n        String homepage = developerOrContributor.getUrl();\n        String nodeId = null;\n\n        // Name is required to write doap\n        if ( StringUtils.isEmpty( name ) )\n        {\n            errorMessages.add( \"A <project><developers|contributors><developer|contributor><name/>\"\n                + \"<\/developer|contributor><\/developers|contributors><\/project> parameter is missing.\" );\n            return;\n        }\n\n        if ( !StringUtils.isEmpty( organization ) || !StringUtils.isEmpty( organizationUrl ) )\n        {\n            DoapUtil.Organization doapOrganization = DoapUtil.addOrganization( organization, organizationUrl );\n            nodeId = DoapUtil.getNodeId();\n            doapOrganization.addMember( nodeId );\n        }\n\n        writer.startElement( doapType );\n        writer.startElement( \"foaf:Person\" );\n        if ( StringUtils.isNotEmpty( nodeId ) )\n        {\n            writer.addAttribute( \"rdf:nodeID\", nodeId );\n        }\n        writer.startElement( \"foaf:name\" );\n        writer.writeText( name );\n        writer.endElement(); // foaf:name\n        if ( StringUtils.isNotEmpty( email ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"foaf:mbox\", \"mailto:\" + email );\n        }\n        if ( StringUtils.isNotEmpty( organization ) && StringUtils.isNotEmpty( organizationUrl ) )\n        {\n            try\n            {\n                new URL( organizationUrl );\n\n                DoapUtil.addOrganization( organization, organizationUrl );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"A <project><developers|contributors><developer|contributor><organizationUrl>\"\n                    + organizationUrl\n                    + \"<\/organizationUrl><\/developer|contributor><\/developers|contributors><\/project> parameter is not a valid URL.\" );\n            }\n        }\n        if ( StringUtils.isNotEmpty( homepage ) )\n        {\n            try\n            {\n                new URL( homepage );\n\n                DoapUtil.writeRdfResourceElement( writer, \"foaf:homepage\", homepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"A <project><developers|contributors><developer|contributor><url>\"\n                    + homepage\n                    + \"<\/url><\/developer|contributor><\/developers|contributors><\/project> parameter is not a valid URL.\" );\n            }\n        }\n        writer.endElement(); // foaf:Person\n        writer.endElement(); // doapType\n    }","id":1029,"modified_method":"/**\n     * Writer a single developer or contributor\n     *\n     * @param writer not null\n     * @param developerOrContributor not null, instance of <code>{@link Developer}/{@link Contributor}<\/code>\n     * @param doapType not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#maintainer\">http://usefulinc.com/ns/doap#maintainer<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#developer\">http://usefulinc.com/ns/doap#developer<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#documenter\">http://usefulinc.com/ns/doap#documenter<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#translator\">http://usefulinc.com/ns/doap#translator<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#tester\">http://usefulinc.com/ns/doap#tester<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#helper\">http://usefulinc.com/ns/doap#helper<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/Person\">http://xmlns.com/foaf/0.1/Person<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/name\">http://xmlns.com/foaf/0.1/name<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/mbox\">http://xmlns.com/foaf/0.1/mbox<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/Organization\">http://xmlns.com/foaf/0.1/Organization<\/a>\n     * @see <a href=\"http://xmlns.com/foaf/0.1/homepage\">http://xmlns.com/foaf/0.1/homepage<\/a>\n     */\n    private void writeContributor( XMLWriter writer, Contributor developerOrContributor, String doapType )\n    {\n        if ( developerOrContributor == null )\n        {\n            return;\n        }\n\n        if ( StringUtils.isEmpty( doapType ) )\n        {\n            throw new IllegalArgumentException( \"doapType is required.\" );\n        }\n\n        String name = developerOrContributor.getName();\n        String email = developerOrContributor.getEmail();\n        String organization = developerOrContributor.getOrganization();\n        String organizationUrl = developerOrContributor.getOrganizationUrl();\n        String homepage = developerOrContributor.getUrl();\n        String nodeId = null;\n\n        // Name is required to write doap\n        if ( StringUtils.isEmpty( name ) )\n        {\n            errorMessages.add( \"The POM <project><developers|contributors><developer|contributor><name/>\"\n                + \"<\/developer|contributor><\/developers|contributors><\/project> value is missing.\" );\n            return;\n        }\n\n        if ( !StringUtils.isEmpty( organization ) || !StringUtils.isEmpty( organizationUrl ) )\n        {\n            DoapUtil.Organization doapOrganization = DoapUtil.addOrganization( organization, organizationUrl );\n            nodeId = DoapUtil.getNodeId();\n            doapOrganization.addMember( nodeId );\n        }\n\n        writer.startElement( doapType );\n        writer.startElement( \"foaf:Person\" );\n        if ( StringUtils.isNotEmpty( nodeId ) )\n        {\n            writer.addAttribute( \"rdf:nodeID\", nodeId );\n        }\n        writer.startElement( \"foaf:name\" );\n        writer.writeText( name );\n        writer.endElement(); // foaf:name\n        if ( StringUtils.isNotEmpty( email ) )\n        {\n            if ( DoapUtil.isValidEmail( email ) )\n            {\n                DoapUtil.writeRdfResourceElement( writer, \"foaf:mbox\", \"mailto:\" + email );\n            }\n            else\n            {\n                warnMessages.add( \"The POM <project><developers|contributors><developer|contributor><email>\"\n                    + email\n                    + \"<\/email><\/developer|contributor><\/developers|contributors><\/project> value is not a valid email.\" );\n            }\n        }\n        if ( StringUtils.isNotEmpty( organization ) && StringUtils.isNotEmpty( organizationUrl ) )\n        {\n            try\n            {\n                new URL( organizationUrl );\n\n                DoapUtil.addOrganization( organization, organizationUrl );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The POM <project><developers|contributors><developer|contributor><organizationUrl>\"\n                    + organizationUrl\n                    + \"<\/organizationUrl><\/developer|contributor><\/developers|contributors><\/project> value is not a valid URL.\" );\n            }\n        }\n        if ( StringUtils.isNotEmpty( homepage ) )\n        {\n            try\n            {\n                new URL( homepage );\n\n                DoapUtil.writeRdfResourceElement( writer, \"foaf:homepage\", homepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The POM <project><developers|contributors><developer|contributor><url>\" + homepage\n                    + \"<\/url><\/developer|contributor><\/developers|contributors><\/project> value is not a valid URL.\" );\n            }\n        }\n        writer.endElement(); // foaf:Person\n        writer.endElement(); // doapType\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP mailing-list.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#mailing-list\">http://usefulinc.com/ns/doap#mailing-list<\/a>\n     * @see DoapOptions#getMailingList()\n     */\n    private void writeMailingList( XMLWriter writer, MavenProject project )\n    {\n        String ml = interpolate( doapOptions.getMailingList(), project, settings );\n        if ( StringUtils.isEmpty( ml ) )\n        {\n            addDoapMessage( \"mailingList\" );\n            return;\n        }\n\n        ml = ml.trim();\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Mailing lists.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"mailing-list\", ml );\n    }","id":1030,"modified_method":"/**\n     * Write DOAP mailing-list.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#mailing-list\">http://usefulinc.com/ns/doap#mailing-list<\/a>\n     * @see DoapOptions#getMailingList()\n     */\n    private void writeMailingList( XMLWriter writer, MavenProject project )\n    {\n        String ml = interpolate( doapOptions.getMailingList(), project, settings );\n        if ( StringUtils.isEmpty( ml ) )\n        {\n            addDoapMessage( \"mailingList\" );\n            return;\n        }\n\n        try\n        {\n            new URL( ml );\n\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Mailing lists.\", 2 );\n            DoapUtil.writeRdfResourceElement( writer, \"mailing-list\", ml );\n        }\n        catch ( MalformedURLException e )\n        {\n            errorMessages.add( \"The <doapOptions><mailingList>\" + ml\n                + \"<\/mailingList><\/doapOptions> value is not a valid URL.\" );\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP audience.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#audience\">http://usefulinc.com/ns/doap#audience<\/a>\n     * @since 1.1\n     */\n    private void writeAudience( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getAudience() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Audience.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"audience\", doapOptions.getAudience() );\n    }","id":1031,"modified_method":"/**\n     * Write DOAP audience.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#audience\">http://usefulinc.com/ns/doap#audience<\/a>\n     * @since 1.1\n     */\n    private void writeAudience( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getAudience() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Audience.\", 2 );\n        DoapUtil.writeElement( writer, \"audience\", doapOptions.getAudience().trim() );\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP vendor.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#vendor\">http://usefulinc.com/ns/doap#vendor<\/a>\n     * @since 1.1\n     */\n    private void writeVendor( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getVendor() ) || project.getOrganization() == null\n            || StringUtils.isEmpty( project.getOrganization().getName() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Vendor.\", 2 );\n        if ( StringUtils.isNotEmpty( doapOptions.getVendor() ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"vendor\", doapOptions.getVendor().trim() );\n        }\n        else if ( project.getOrganization() != null && StringUtils.isNotEmpty( project.getOrganization().getName() ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"vendor\", project.getOrganization().getName().trim() );\n        }\n    }","id":1032,"modified_method":"/**\n     * Write DOAP vendor.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#vendor\">http://usefulinc.com/ns/doap#vendor<\/a>\n     * @since 1.1\n     */\n    private void writeVendor( XMLWriter writer, MavenProject project )\n    {\n        String vendor = interpolate( doapOptions.getVendor(), project, settings );\n        if ( StringUtils.isEmpty( vendor ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Vendor.\", 2 );\n        DoapUtil.writeElement( writer, \"vendor\", vendor );\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP name.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#name\">http://usefulinc.com/ns/doap#name<\/a>\n     */\n    private void writeName( XMLWriter writer, MavenProject project )\n    {\n        String name = interpolate( doapOptions.getName(), project, settings );\n        if ( StringUtils.isEmpty( name ) )\n        {\n            addDoapMessage( \"name\" );\n            return;\n        }\n\n        name = name.trim();\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"A name of something.\", 2 );\n\n        if ( asfExtOptions.isIncluded() && !name.toLowerCase( Locale.ENGLISH ).startsWith( \"apache\" ) )\n        {\n            DoapUtil.writeElement( writer, \"name\", \"Apache \" + name );\n        }\n        else\n        {\n            DoapUtil.writeElement( writer, \"name\", name );\n        }\n    }","id":1033,"modified_method":"/**\n     * Write DOAP name.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#name\">http://usefulinc.com/ns/doap#name<\/a>\n     */\n    private void writeName( XMLWriter writer, MavenProject project )\n    {\n        String name = interpolate( doapOptions.getName(), project, settings );\n        if ( StringUtils.isEmpty( name ) )\n        {\n            addDoapMessage( \"name\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"A name of something.\", 2 );\n\n        if ( asfExtOptions.isIncluded() && !name.toLowerCase( Locale.ENGLISH ).startsWith( \"apache\" ) )\n        {\n            DoapUtil.writeElement( writer, \"name\", \"Apache \" + name );\n        }\n        else\n        {\n            DoapUtil.writeElement( writer, \"name\", name );\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP description.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#description\">http://usefulinc.com/ns/doap#description<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#shortdesc\">http://usefulinc.com/ns/doap#shortdesc<\/a>\n     */\n    private void writeDescription( XMLWriter writer, MavenProject project )\n    {\n        String description = interpolate( doapOptions.getDescription(), project, settings );\n        if ( StringUtils.isEmpty( description ) )\n        {\n            addDoapMessage( \"description\" );\n        }\n        else\n        {\n            description = description.trim();\n\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Plain text description of a project, of 2-4 sentences in length.\",\n                                            2 );\n            DoapUtil.writeElement( writer, \"description\", description, lang );\n        }\n\n        if ( StringUtils.isEmpty( doapOptions.getShortdesc() ) )\n        {\n            addDoapMessage( \"shortdesc\" );\n            return;\n        }\n\n        DoapUtil.writeElement( writer, \"shortdesc\", doapOptions.getShortdesc().trim(), lang );\n    }","id":1034,"modified_method":"/**\n     * Write DOAP description.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#description\">http://usefulinc.com/ns/doap#description<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#shortdesc\">http://usefulinc.com/ns/doap#shortdesc<\/a>\n     */\n    private void writeDescription( XMLWriter writer, MavenProject project )\n    {\n        boolean addComment = false;\n        String description = interpolate( doapOptions.getDescription(), project, settings );\n        if ( StringUtils.isEmpty( description ) )\n        {\n            addDoapMessage( \"description\" );\n        }\n        else\n        {\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Plain text description of a project, of 2-4 sentences in length.\",\n                                            2 );\n            addComment = true;\n            DoapUtil.writeElement( writer, \"description\", description, lang );\n        }\n\n        String shortdesc = interpolate( doapOptions.getShortdesc(), project, settings );\n        if ( StringUtils.isEmpty( shortdesc ) )\n        {\n            addDoapMessage( \"shortdesc\" );\n            return;\n        }\n        if ( description.equals( shortdesc ) )\n        {\n            // try to get the first 10 words of the description\n            String sentence = StringUtils.split( shortdesc, \".\" )[0];\n            if ( StringUtils.split( sentence, \" \" ).length > 10 )\n            {\n                addDoapMessage( \"shortdesc\" );\n                return;\n            }\n            if ( !addComment )\n            {\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer, \"Short plain text description of a project.\", 2 );\n            }\n            DoapUtil.writeElement( writer, \"shortdesc\", sentence, lang );\n            return;\n        }\n        if ( !addComment )\n        {\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Short plain text description of a project.\", 2 );\n        }\n        DoapUtil.writeElement( writer, \"shortdesc\", shortdesc, lang );\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP language.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#language\">http://usefulinc.com/ns/doap#language<\/a>\n     * @since 1.1\n     */\n    private void writeLanguage( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getLanguage() ) )\n        {\n            return;\n        }\n\n        String language = doapOptions.getLanguage().trim();\n        if ( Arrays.binarySearch( Locale.getISOLanguages(), language ) < 0 )\n        {\n            errorMessages.add( \"The <doapOptions><language>\" + language\n                + \"<\/language><\/doapOptions> parameter is not a valid ISO language.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Language.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"language\", language );\n    }","id":1035,"modified_method":"/**\n     * Write DOAP language.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#language\">http://usefulinc.com/ns/doap#language<\/a>\n     * @since 1.1\n     */\n    private void writeLanguage( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getLanguage() ) )\n        {\n            return;\n        }\n\n        boolean addComment = false;\n        String[] languages = StringUtils.split( doapOptions.getLanguage(), \",\" );\n        for ( String language : languages )\n        {\n            language = language.trim();\n\n            if ( Arrays.binarySearch( Locale.getISOLanguages(), language ) < 0 )\n            {\n                errorMessages.add( \"The <doapOptions><languages>\" + language\n                    + \"<\/languages><\/doapOptions> parameter is not a valid ISO language.\" );\n                continue;\n            }\n\n            if ( !addComment )\n            {\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer, \"Language.\", 2 );\n                addComment = true;\n            }\n            DoapUtil.writeElement( writer, \"language\", language );\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP programming-language.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#programming-language\">\n     *      http://usefulinc.com/ns/doap#programming-language<\/a>\n     */\n    private void writeProgrammingLanguage( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getProgrammingLanguage() ) && StringUtils.isEmpty( language ) )\n        {\n            addDoapMessage( \"programmingLanguage\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Programming language.\", 2 );\n\n        if ( StringUtils.isNotEmpty( language ) ) // backward compatible\n        {\n            getLog().warn( \"The <language/> parameter is deprecated, please use <doapOptions><programmingLanguage/><\/doapOptions> parameter instead of.\" );\n            language = language.trim();\n\n            if ( asfExtOptions.isIncluded() )\n            {\n                if ( ASFExtOptions.getProgrammingLanguageSupportedByASF( language ) == null )\n                {\n                    errorMessages.add( \"The programming language '\" + language + \"' is not supported by ASF. \"\n                        + \"Should be one of \" + Arrays.toString( ASFExtOptions.PROGRAMMING_LANGUAGES ) );\n                }\n                else\n                {\n                    language = ASFExtOptions.getProgrammingLanguageSupportedByASF( language );\n                }\n            }\n\n            DoapUtil.writeElement( writer, \"programming-language\", language.trim() );\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getProgrammingLanguage() ) )\n        {\n            String[] languages = StringUtils.split( doapOptions.getProgrammingLanguage(), \",\" );\n            for ( String language : languages )\n            {\n                language = language.trim();\n\n                if ( asfExtOptions.isIncluded() )\n                {\n                    if ( ASFExtOptions.getProgrammingLanguageSupportedByASF( language ) == null )\n                    {\n                        errorMessages.add( \"The programming language '\" + language + \"' is not supported by ASF. \"\n                            + \"Should be one of \" + Arrays.toString( ASFExtOptions.PROGRAMMING_LANGUAGES ) );\n                    }\n                    else\n                    {\n                        language = ASFExtOptions.getProgrammingLanguageSupportedByASF( language );\n                    }\n                }\n\n                DoapUtil.writeElement( writer, \"programming-language\", language );\n            }\n        }\n    }","id":1036,"modified_method":"/**\n     * Write DOAP programming-language.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#programming-language\">\n     *      http://usefulinc.com/ns/doap#programming-language<\/a>\n     */\n    private void writeProgrammingLanguage( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getProgrammingLanguage() ) && StringUtils.isEmpty( language ) )\n        {\n            addDoapMessage( \"programmingLanguage\" );\n            return;\n        }\n\n        boolean addComment = false;\n        if ( StringUtils.isNotEmpty( language ) ) // backward compatible\n        {\n            getLog().warn( \"The <language/> parameter is deprecated, please use <doapOptions><programmingLanguage/><\/doapOptions> parameter instead of.\" );\n\n            language = language.trim();\n\n            if ( asfExtOptions.isIncluded() )\n            {\n                String asfLanguage = ASFExtOptions.getProgrammingLanguageSupportedByASF( language );\n                if ( asfLanguage == null )\n                {\n                    errorMessages.add( \"The deprecated <language>\" + language\n                        + \"<\/language> parameter is not supported by ASF. Should be one of \"\n                        + Arrays.toString( ASFExtOptions.PROGRAMMING_LANGUAGES ) );\n                }\n                else\n                {\n                    XmlWriterUtil.writeLineBreak( writer );\n                    XmlWriterUtil.writeCommentText( writer, \"Programming language.\", 2 );\n                    addComment = true;\n                    DoapUtil.writeElement( writer, \"programming-language\", asfLanguage.trim() );\n                }\n            }\n            else\n            {\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer, \"Programming language.\", 2 );\n                addComment = true;\n                DoapUtil.writeElement( writer, \"programming-language\", language.trim() );\n            }\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getProgrammingLanguage() ) )\n        {\n            String[] languages = StringUtils.split( doapOptions.getProgrammingLanguage(), \",\" );\n            for ( String language : languages )\n            {\n                language = language.trim();\n\n                if ( asfExtOptions.isIncluded() )\n                {\n                    String asfLanguage = ASFExtOptions.getProgrammingLanguageSupportedByASF( language );\n                    if ( asfLanguage == null )\n                    {\n                        errorMessages.add( \"The <doapOptions><programmingLanguage>\" + language\n                            + \"<\/programmingLanguage><\/doapOptions> parameter is not supported by ASF. \"\n                            + \"Should be one of \" + Arrays.toString( ASFExtOptions.PROGRAMMING_LANGUAGES ) );\n                    }\n                    else\n                    {\n                        if ( !addComment )\n                        {\n                            XmlWriterUtil.writeLineBreak( writer );\n                            XmlWriterUtil.writeCommentText( writer, \"Programming language.\", 2 );\n                            addComment = true;\n                        }\n                        DoapUtil.writeElement( writer, \"programming-language\", asfLanguage );\n                    }\n                }\n                else\n                {\n                    if ( !addComment )\n                    {\n                        XmlWriterUtil.writeLineBreak( writer );\n                        XmlWriterUtil.writeCommentText( writer, \"Programming language.\", 2 );\n                        addComment = true;\n                    }\n                    DoapUtil.writeElement( writer, \"programming-language\", language );\n                }\n            }\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP plateform.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#plateform\">http://usefulinc.com/ns/doap#plateform<\/a>\n     * @since 1.1\n     */\n    private void writePlateform( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getPlatform() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Plateform.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"plateform\", doapOptions.getPlatform().trim() );\n    }","id":1037,"modified_method":"/**\n     * Write DOAP plateform.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#plateform\">http://usefulinc.com/ns/doap#plateform<\/a>\n     * @since 1.1\n     */\n    private void writePlateform( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getPlatform() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Plateform.\", 2 );\n        DoapUtil.writeElement( writer, \"plateform\", doapOptions.getPlatform().trim() );\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write the ASF extensions\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext\">\n     *      http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext<\/a>\n     * @see <a href=\"http://projects.apache.org/docs/pmc.html\">http://projects.apache.org/docs/pmc.html<\/a>\n     */\n    private void writeASFext( XMLWriter writer, MavenProject project )\n    {\n        if ( !ASFExtOptions.isASFProject( project ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"ASF extension\", 2 );\n\n        // asfext:pmc\n        String pmc = interpolate( asfExtOptions.getPmc(), project, settings );\n        if ( StringUtils.isNotEmpty( pmc ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"asfext:pmc\", pmc.trim() );\n        }\n        else\n        {\n            errorMessages.add( \"A <asfExtOptions><pmc/><\/asfExtOptions> parameter is required by ASF.\" );\n        }\n\n        // asfext:name\n        String name = interpolate( asfExtOptions.getName(), project, settings );\n        if ( StringUtils.isNotEmpty( name ) )\n        {\n            if ( !name.toLowerCase( Locale.ENGLISH ).trim().startsWith( \"apache\" ) )\n            {\n                name = \"Apache \" + name.trim();\n            }\n            DoapUtil.writeElement( writer, \"asfext:name\", name.trim() );\n        }\n        else\n        {\n            errorMessages.add( \"A <asfExtOptions><name/><\/asfExtOptions> parameter is required by ASF.\" );\n        }\n\n        // asfext:charter\n        if ( StringUtils.isEmpty( asfExtOptions.getCharter() ) )\n        {\n            errorMessages.add( \"A <asfExtOptions><charter/><\/asfExtOptions> parameter is required by ASF.\" );\n        }\n        else\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"asfext:charter\", asfExtOptions.getCharter() );\n        }\n\n        // asfext:chair\n        @SuppressWarnings( \"unchecked\" )\n        List<Developer> developers = project.getDevelopers();\n\n        if ( StringUtils.isNotEmpty( asfExtOptions.getChair() ) )\n        {\n            writer.startElement( \"asfext:chair\" );\n            writer.startElement( \"foaf:Person\" );\n            writer.startElement( \"foaf:name\" );\n            writer.writeText( asfExtOptions.getChair() );\n            writer.endElement(); // foaf:name\n            writer.endElement(); // foaf:Person\n            writer.endElement(); // asfext:chair\n        }\n        else\n        {\n            Developer chair = ASFExtOptions.findChair( developers );\n            if ( chair != null )\n            {\n                writeContributor( writer, chair, \"asfext:chair\" );\n            }\n            else\n            {\n                errorMessages.add( \"A <asfExtOptions><chair/><\/asfExtOptions> parameter is required by ASF.\" );\n            }\n        }\n\n        // asfext:member\n        if ( developers != null && developers.size() > 0 )\n        {\n            List<Developer> pmcMembers = ASFExtOptions.findPMCMembers( developers );\n            for ( Developer pmcMember : pmcMembers )\n            {\n                writeContributor( writer, pmcMember, \"asfext:member\" );\n            }\n        }\n\n        writeASFImplements( writer );\n    }","id":1038,"modified_method":"/**\n     * Write the ASF extensions\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext\">\n     *      http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext<\/a>\n     * @see <a href=\"http://projects.apache.org/docs/pmc.html\">http://projects.apache.org/docs/pmc.html<\/a>\n     */\n    private void writeASFext( XMLWriter writer, MavenProject project )\n    {\n        if ( !ASFExtOptions.isASFProject( project ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"ASF extension\", 2 );\n\n        // asfext:pmc\n        String pmc = interpolate( asfExtOptions.getPmc(), project, settings );\n        if ( StringUtils.isNotEmpty( pmc ) )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"asfext:pmc\", pmc );\n        }\n        else\n        {\n            errorMessages.add( \"A <asfExtOptions><pmc/><\/asfExtOptions> parameter is required by ASF.\" );\n        }\n\n        // asfext:name\n        String name = interpolate( asfExtOptions.getName(), project, settings );\n        if ( StringUtils.isNotEmpty( name ) )\n        {\n            if ( !name.toLowerCase( Locale.ENGLISH ).trim().startsWith( \"apache\" ) )\n            {\n                name = \"Apache \" + name;\n            }\n            DoapUtil.writeElement( writer, \"asfext:name\", name );\n        }\n        else\n        {\n            errorMessages.add( \"A <asfExtOptions><name/><\/asfExtOptions> parameter is required by ASF.\" );\n        }\n\n        String homepage = interpolate( doapOptions.getHomepage(), project, settings );\n        if ( StringUtils.isNotEmpty( homepage ) )\n        {\n            try\n            {\n                new URL( homepage );\n\n                DoapUtil.writeRdfResourceElement( writer, \"foaf:homepage\", homepage );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The <doapOptions><homepage>\" + homepage\n                    + \"<\/homepage><\/doapOptions> parameter is not a valid URL.\" );\n            }\n        }\n\n        // asfext:charter\n        if ( StringUtils.isEmpty( asfExtOptions.getCharter() ) )\n        {\n            errorMessages.add( \"A <asfExtOptions><charter/><\/asfExtOptions> parameter is required by ASF.\" );\n        }\n        else\n        {\n            DoapUtil.writeElement( writer, \"asfext:charter\", asfExtOptions.getCharter() );\n        }\n\n        // asfext:chair\n        @SuppressWarnings( \"unchecked\" )\n        List<Developer> developers = new ArrayList<Developer>( project.getDevelopers() );\n        sortContributors( developers );\n\n        if ( StringUtils.isNotEmpty( asfExtOptions.getChair() ) )\n        {\n            writer.startElement( \"asfext:chair\" );\n            writer.startElement( \"foaf:Person\" );\n            writer.startElement( \"foaf:name\" );\n            writer.writeText( asfExtOptions.getChair() );\n            writer.endElement(); // foaf:name\n            writer.endElement(); // foaf:Person\n            writer.endElement(); // asfext:chair\n        }\n        else\n        {\n            Developer chair = ASFExtOptions.findChair( developers );\n            if ( chair != null )\n            {\n                writeContributor( writer, chair, \"asfext:chair\" );\n                developers.remove( chair );\n            }\n            else\n            {\n                errorMessages.add( \"A <asfExtOptions><chair/><\/asfExtOptions> parameter is required by ASF.\" );\n            }\n        }\n\n        // asfext:member\n        if ( developers != null && developers.size() > 0 )\n        {\n            List<Developer> pmcMembers = ASFExtOptions.findPMCMembers( developers );\n            for ( Developer pmcMember : pmcMembers )\n            {\n                writeContributor( writer, pmcMember, \"asfext:member\" );\n            }\n        }\n\n        writeASFImplements( writer );\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write the ASF implements.\n     *\n     * @param writer not null\n     * @see <a href=\"http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext\">\n     *      http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext<\/a>\n     * @see <a href=\"http://projects.apache.org/docs/standards.html\">http://projects.apache.org/docs/standards.html<\/a>\n     */\n    private void writeASFImplements( XMLWriter writer )\n    {\n        if ( asfExtOptions.getStandards() == null || asfExtOptions.getStandards().isEmpty() )\n        {\n            return;\n        }\n\n        for ( Standard standard : asfExtOptions.getStandards() )\n        {\n            writer.startElement( \"asfext:implements\" );\n            writer.startElement( \"asfext:Standard\" );\n\n            if ( StringUtils.isEmpty( standard.getTitle() ) )\n            {\n                errorMessages.add( \"A <asfExtOptions><standards><title/><\/standards><\/asfExtOptions> parameter is required by ASF.\" );\n            }\n            else\n            {\n                writer.startElement( \"asfext:title\" );\n                writer.writeText( standard.getTitle() );\n                writer.endElement(); // asfext:title\n            }\n\n            if ( StringUtils.isEmpty( standard.getBody() ) )\n            {\n                errorMessages.add( \"A <asfExtOptions><standards><body/><\/standards><\/asfExtOptions> parameter is required by ASF.\" );\n            }\n            else\n            {\n                writer.startElement( \"asfext:body\" );\n                writer.writeText( standard.getBody() );\n                writer.endElement(); // asfext:body\n            }\n\n            if ( StringUtils.isEmpty( standard.getId() ) )\n            {\n                errorMessages.add( \"A <asfExtOptions><standards><id/><\/standards><\/asfExtOptions> parameter is required by ASF.\" );\n            }\n            else\n            {\n                writer.startElement( \"asfext:id\" );\n                writer.writeText( standard.getId() );\n                writer.endElement(); // asfext:id\n            }\n\n            if ( StringUtils.isNotEmpty( standard.getUrl() ) )\n            {\n                try\n                {\n                    new URL( standard.getUrl() );\n\n                    writer.startElement( \"asfext:url\" );\n                    writer.writeText( standard.getUrl() );\n                    writer.endElement(); // asfext:url\n                }\n                catch ( MalformedURLException e )\n                {\n                    errorMessages.add( \"The <asfExtOptions><standards><url>\" + standard.getUrl()\n                        + \"<url><\/standards><\/asfExtOptions> parameter is not a valid URL.\" );\n                }\n            }\n\n            writer.endElement(); // asfext:Standard\n            writer.endElement(); // asfext:implements\n        }\n    }","id":1039,"modified_method":"/**\n     * Write the ASF implements.\n     *\n     * @param writer not null\n     * @see <a href=\"http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext\">\n     *      http://svn.apache.org/repos/asf/infrastructure/site-tools/trunk/projects/asfext<\/a>\n     * @see <a href=\"http://projects.apache.org/docs/standards.html\">http://projects.apache.org/docs/standards.html<\/a>\n     */\n    private void writeASFImplements( XMLWriter writer )\n    {\n        if ( asfExtOptions.getStandards() == null || asfExtOptions.getStandards().isEmpty() )\n        {\n            return;\n        }\n\n        for ( Standard standard : asfExtOptions.getStandards() )\n        {\n            writer.startElement( \"asfext:implements\" );\n            writer.startElement( \"asfext:Standard\" );\n\n            if ( StringUtils.isEmpty( standard.getTitle() ) )\n            {\n                errorMessages.add( \"A <asfExtOptions><standards><title/><\/standards><\/asfExtOptions> parameter is required by ASF.\" );\n            }\n            else\n            {\n                DoapUtil.writeElement( writer, \"asfext:title\", standard.getTitle() );\n            }\n\n            if ( StringUtils.isEmpty( standard.getBody() ) )\n            {\n                errorMessages.add( \"A <asfExtOptions><standards><body/><\/standards><\/asfExtOptions> parameter is required by ASF.\" );\n            }\n            else\n            {\n                DoapUtil.writeElement( writer, \"asfext:body\", standard.getBody() );\n            }\n\n            if ( StringUtils.isEmpty( standard.getId() ) )\n            {\n                errorMessages.add( \"A <asfExtOptions><standards><id/><\/standards><\/asfExtOptions> parameter is required by ASF.\" );\n            }\n            else\n            {\n                DoapUtil.writeElement( writer, \"asfext:id\", standard.getId() );\n            }\n\n            if ( StringUtils.isNotEmpty( standard.getUrl() ) )\n            {\n                try\n                {\n                    new URL( standard.getUrl() );\n\n                    DoapUtil.writeElement( writer, \"asfext:url\", standard.getUrl() );\n                }\n                catch ( MalformedURLException e )\n                {\n                    errorMessages.add( \"The <asfExtOptions><standards><url>\" + standard.getUrl()\n                        + \"<url><\/standards><\/asfExtOptions> parameter is not a valid URL.\" );\n                }\n            }\n\n            writer.endElement(); // asfext:Standard\n            writer.endElement(); // asfext:implements\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP download-page and download-mirror.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#download-page\">http://usefulinc.com/ns/doap#download-page<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#download-mirror\">http://usefulinc.com/ns/doap#download-mirror<\/a>\n     */\n    private void writeDownloadPage( XMLWriter writer, MavenProject project )\n    {\n        String downloadPage = interpolate( doapOptions.getDownloadPage(), project, settings );\n        if ( StringUtils.isEmpty( downloadPage ) )\n        {\n            addDoapMessage( \"downloadPage\" );\n            return;\n        }\n\n        downloadPage = downloadPage.trim();\n        try\n        {\n            new URL( downloadPage );\n\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Download page.\", 2 );\n            DoapUtil.writeRdfResourceElement( writer, \"download-page\", downloadPage );\n        }\n        catch ( MalformedURLException e )\n        {\n            errorMessages.add( \"The <doapOptions><downloadPage>\" + downloadPage\n                + \"<\/downloadPage><\/doapOptions> parameter is not a valid URL.\" );\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getDownloadMirror() ) )\n        {\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Mirror of software download web page.\", 2 );\n            String[] downloadMirrors = StringUtils.split( doapOptions.getDownloadMirror(), \",\" );\n            for ( String downloadMirror : downloadMirrors )\n            {\n                downloadMirror = downloadMirror.trim();\n\n                try\n                {\n                    new URL( downloadMirror );\n\n                    DoapUtil.writeRdfResourceElement( writer, \"download-mirror\", downloadMirror );\n                }\n                catch ( MalformedURLException e )\n                {\n                    errorMessages.add( \"The <doapOptions><downloadMirror>\" + downloadMirror\n                        + \"<\/downloadMirror><\/doapOptions> parameter is not a valid URL.\" );\n                }\n            }\n        }\n    }","id":1040,"modified_method":"/**\n     * Write DOAP download-page and download-mirror.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#download-page\">http://usefulinc.com/ns/doap#download-page<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#download-mirror\">http://usefulinc.com/ns/doap#download-mirror<\/a>\n     */\n    private void writeDownloadPage( XMLWriter writer, MavenProject project )\n    {\n        String downloadPage = interpolate( doapOptions.getDownloadPage(), project, settings );\n        if ( StringUtils.isEmpty( downloadPage ) )\n        {\n            addDoapMessage( \"downloadPage\" );\n            return;\n        }\n\n        try\n        {\n            new URL( downloadPage );\n\n            XmlWriterUtil.writeLineBreak( writer );\n            XmlWriterUtil.writeCommentText( writer, \"Download page.\", 2 );\n            DoapUtil.writeRdfResourceElement( writer, \"download-page\", downloadPage );\n        }\n        catch ( MalformedURLException e )\n        {\n            errorMessages.add( \"The <doapOptions><downloadPage>\" + downloadPage\n                + \"<\/downloadPage><\/doapOptions> parameter is not a valid URL.\" );\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getDownloadMirror() ) )\n        {\n            boolean addComment = false;\n            String[] downloadMirrors = StringUtils.split( doapOptions.getDownloadMirror(), \",\" );\n            for ( String downloadMirror : downloadMirrors )\n            {\n                downloadMirror = downloadMirror.trim();\n\n                try\n                {\n                    new URL( downloadMirror );\n\n                    if ( !addComment )\n                    {\n                        XmlWriterUtil.writeLineBreak( writer );\n                        XmlWriterUtil.writeCommentText( writer, \"Mirror of software download web page.\", 2 );\n                        addComment = true;\n                    }\n                    DoapUtil.writeRdfResourceElement( writer, \"download-mirror\", downloadMirror );\n                }\n                catch ( MalformedURLException e )\n                {\n                    errorMessages.add( \"The <doapOptions><downloadMirror>\" + downloadMirror\n                        + \"<\/downloadMirror><\/doapOptions> parameter is not a valid URL.\" );\n                }\n            }\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP implements.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#implements\">http://usefulinc.com/ns/doap#implements<\/a>\n     * @since 1.1\n     */\n    private void writeImplements( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getImplementations() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Implements.\", 2 );\n        String[] implementations = StringUtils.split( doapOptions.getImplementations(), \",\" );\n        for ( String implementation : implementations )\n        {\n            DoapUtil.writeRdfResourceElement( writer, \"implements\", implementation.trim() );\n        }\n    }","id":1041,"modified_method":"/**\n     * Write DOAP implements.\n     *\n     * @param writer not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#implements\">http://usefulinc.com/ns/doap#implements<\/a>\n     * @since 1.1\n     */\n    private void writeImplements( XMLWriter writer )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getImplementations() ) )\n        {\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Implements.\", 2 );\n        String[] implementations = StringUtils.split( doapOptions.getImplementations(), \",\" );\n        for ( String implementation : implementations )\n        {\n            DoapUtil.writeElement( writer, \"implements\", implementation.trim() );\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write a DOAP maintainer or developer or documenter or translator or tester or helper, for instance:\n     *\n     * <pre>\n     *   &lt;maintainer&gt;\n     *     &lt;foaf:Person&gt;\n     *       &lt;foaf:name&gt;Emmanuel Venisse&lt;/foaf:name&gt;\n     *       &lt;foaf:mbox rdf:resource=\"mailto:evenisse@apache.org\"/&gt;\n     *     &lt;/foaf:Person&gt;\n     *   &lt;/maintainer&gt;\n     * <\/pre>\n     *\n     * @param writer not null\n     * @param developersOrContributors list of <code>{@link Developer}/{@link Contributor}<\/code>\n     * @param doapType not null\n     * @see #writeContributor(XMLWriter, Object, String)\n     */\n    private void writeContributor( XMLWriter writer, List<Contributor> developersOrContributors, String doapType )\n    {\n        if ( developersOrContributors == null || developersOrContributors.isEmpty() )\n        {\n            return;\n        }\n\n        // Sort list by names\n        Collections.sort( developersOrContributors, new Comparator<Contributor>()\n        {\n            /** {@inheritDoc} */\n            public int compare( Contributor arg0, Contributor arg1 )\n            {\n                if ( Developer.class.isAssignableFrom( arg0.getClass() ) )\n                {\n                    Developer developer0 = (Developer) arg0;\n                    Developer developer1 = (Developer) arg1;\n\n                    if ( developer0.getName() == null )\n                    {\n                        return -1;\n                    }\n                    if ( developer1.getName() == null )\n                    {\n                        return +1;\n                    }\n\n                    return developer0.getName().compareTo( developer1.getName() );\n                }\n\n                Contributor contributor0 = arg0;\n                Contributor contributor1 = arg1;\n\n                if ( contributor0.getName() == null )\n                {\n                    return -1;\n                }\n                if ( contributor1.getName() == null )\n                {\n                    return +1;\n                }\n\n                return contributor0.getName().compareTo( contributor1.getName() );\n            }\n        } );\n\n        for ( Contributor developersOrContributor : developersOrContributors )\n        {\n            writeContributor( writer, developersOrContributor, doapType );\n        }\n    }","id":1042,"modified_method":"/**\n     * Write a DOAP maintainer or developer or documenter or translator or tester or helper, for instance:\n     *\n     * <pre>\n     *   &lt;maintainer&gt;\n     *     &lt;foaf:Person&gt;\n     *       &lt;foaf:name&gt;Emmanuel Venisse&lt;/foaf:name&gt;\n     *       &lt;foaf:mbox rdf:resource=\"mailto:evenisse@apache.org\"/&gt;\n     *     &lt;/foaf:Person&gt;\n     *   &lt;/maintainer&gt;\n     * <\/pre>\n     *\n     * @param writer not null\n     * @param developersOrContributors list of <code>{@link Developer}/{@link Contributor}<\/code>\n     * @param doapType not null\n     * @see #writeContributor(XMLWriter, Object, String)\n     */\n    private void writeContributor( XMLWriter writer, List<Contributor> developersOrContributors, String doapType )\n    {\n        if ( developersOrContributors == null || developersOrContributors.isEmpty() )\n        {\n            return;\n        }\n\n        sortContributors( developersOrContributors );\n\n        for ( Contributor developersOrContributor : developersOrContributors )\n        {\n            writeContributor( writer, developersOrContributor, doapType );\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Interpolate a string with project and settings.\n     *\n     * @param value not null\n     * @param project not null\n     * @param settings not null\n     * @return the value interpolated or null if interpolation doesn't work.\n     * @since 1.1\n     */\n    private static String interpolate( String value, MavenProject project, Settings settings )\n    {\n        if ( StringUtils.isEmpty( value ) || project == null )\n        {\n            throw new IllegalArgumentException( \"parameters are required\" );\n        }\n\n        if ( !value.contains( \"${\" ) )\n        {\n            return value;\n        }\n\n        RegexBasedInterpolator interpolator = new RegexBasedInterpolator();\n        try\n        {\n            interpolator.addValueSource( new EnvarBasedValueSource() );\n        }\n        catch ( IOException e )\n        {\n        }\n\n        interpolator.addValueSource( new PropertiesBasedValueSource( System.getProperties() ) );\n        interpolator.addValueSource( new PropertiesBasedValueSource( project.getProperties() ) );\n        interpolator.addValueSource( new PrefixedObjectValueSource( \"project\", project ) );\n        interpolator.addValueSource( new PrefixedObjectValueSource( \"pom\", project ) );\n        if ( settings != null )\n        {\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"settings\", settings ) );\n        }\n\n        String interpolatedValue = value;\n        try\n        {\n            interpolatedValue = interpolator.interpolate( value );\n        }\n        catch ( InterpolationException e )\n        {\n        }\n\n        if ( interpolatedValue.contains( \"${\" ) )\n        {\n            return null;\n        }\n\n        return interpolatedValue;\n    }","id":1043,"modified_method":"/**\n     * Interpolate a string with project and settings.\n     *\n     * @param value not null\n     * @param project not null\n     * @param settings not null\n     * @return the value trimmed and interpolated or null if interpolation doesn't work.\n     * @since 1.1\n     */\n    private static String interpolate( String value, MavenProject project, Settings settings )\n    {\n        if ( StringUtils.isEmpty( value ) || project == null )\n        {\n            throw new IllegalArgumentException( \"parameters are required\" );\n        }\n\n        if ( !value.contains( \"${\" ) )\n        {\n            return value.trim();\n        }\n\n        RegexBasedInterpolator interpolator = new RegexBasedInterpolator();\n        try\n        {\n            interpolator.addValueSource( new EnvarBasedValueSource() );\n        }\n        catch ( IOException e )\n        {\n        }\n\n        interpolator.addValueSource( new PropertiesBasedValueSource( System.getProperties() ) );\n        interpolator.addValueSource( new PropertiesBasedValueSource( project.getProperties() ) );\n        interpolator.addValueSource( new PrefixedObjectValueSource( \"project\", project ) );\n        interpolator.addValueSource( new PrefixedObjectValueSource( \"pom\", project ) );\n        if ( settings != null )\n        {\n            interpolator.addValueSource( new PrefixedObjectValueSource( \"settings\", settings ) );\n        }\n\n        String interpolatedValue = value;\n        try\n        {\n            interpolatedValue = interpolator.interpolate( value );\n        }\n        catch ( InterpolationException e )\n        {\n        }\n\n        if ( interpolatedValue.contains( \"${\" ) )\n        {\n            return null;\n        }\n\n        return interpolatedValue.trim();\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP created.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#created\">http://usefulinc.com/ns/doap#created<\/a>\n     */\n    private void writeCreated( XMLWriter writer, MavenProject project )\n    {\n        String created = interpolate( doapOptions.getCreated(), project, settings );\n        if ( StringUtils.isEmpty( created ) )\n        {\n            addDoapMessage( \"created\" );\n            return;\n        }\n\n        created = created.trim();\n        try\n        {\n            DOAP_DATE_FORMAT.parse( created );\n        }\n        catch ( ParseException e )\n        {\n            errorMessages.add( \"The <doapOptions><created>\" + created\n                + \"<\/created><\/doapOptions> parameter should be in YYYY-MM-DD.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Date when something was created, in YYYY-MM-DD form. e.g. 2004-04-05\",\n                                        2 );\n        DoapUtil.writeElement( writer, \"created\", created );\n    }","id":1044,"modified_method":"/**\n     * Write DOAP created.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#created\">http://usefulinc.com/ns/doap#created<\/a>\n     */\n    private void writeCreated( XMLWriter writer, MavenProject project )\n    {\n        String created = interpolate( doapOptions.getCreated(), project, settings );\n        if ( StringUtils.isEmpty( created ) )\n        {\n            addDoapMessage( \"created\" );\n            return;\n        }\n\n        try\n        {\n            DOAP_DATE_FORMAT.parse( created );\n        }\n        catch ( ParseException e )\n        {\n            errorMessages.add( \"The <doapOptions><created>\" + created\n                + \"<\/created><\/doapOptions> parameter should be in YYYY-MM-DD.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Date when something was created, in YYYY-MM-DD form. e.g. 2004-04-05\",\n                                        2 );\n        DoapUtil.writeElement( writer, \"created\", created );\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP licenses.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#license\">http://usefulinc.com/ns/doap#license<\/a>\n     */\n    private void writeLicenses( XMLWriter writer, MavenProject project )\n    {\n        if ( project.getLicenses() == null || project.getLicenses().isEmpty() )\n        {\n            addPomMessage( \"licenses\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"The URI of the license the software is distributed under.\", 2 );\n        // TODO: how to map to usefulinc site, or if this is necessary, the OSI page might\n        // be more appropriate.\n        @SuppressWarnings( \"unchecked\" )\n        List<License> licenses = project.getLicenses();\n        for ( License license : licenses )\n        {\n            if ( StringUtils.isEmpty( license.getUrl() ) )\n            {\n                addPomMessage( \"licenses><license><url/><license><licenses\" );\n                continue;\n            }\n\n            String licenseUrl = license.getUrl().trim();\n            try\n            {\n                new URL( licenseUrl );\n\n                DoapUtil.writeRdfResourceElement( writer, \"license\", licenseUrl );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The POM license URL \" + licenseUrl + \" is not a valid URL.\" );\n            }\n        }\n    }","id":1045,"modified_method":"/**\n     * Write DOAP licenses.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#license\">http://usefulinc.com/ns/doap#license<\/a>\n     */\n    private void writeLicenses( XMLWriter writer, MavenProject project )\n    {\n        if ( project.getLicenses() == null || project.getLicenses().isEmpty() )\n        {\n            addPomMessage( \"licenses\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"The URI of the license the software is distributed under.\", 2 );\n        // TODO: how to map to usefulinc site, or if this is necessary, the OSI page might\n        // be more appropriate.\n        @SuppressWarnings( \"unchecked\" )\n        List<License> licenses = project.getLicenses();\n        for ( License license : licenses )\n        {\n            if ( StringUtils.isEmpty( license.getUrl() ) )\n            {\n                continue;\n            }\n\n            String licenseUrl = license.getUrl().trim();\n            try\n            {\n                new URL( licenseUrl );\n\n                DoapUtil.writeRdfResourceElement( writer, \"license\", licenseUrl );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The POM <project><licenses><license><url>\" + licenseUrl\n                    + \"<\/url><\/license><\/licenses><\/project> value is not a valid URL.\" );\n            }\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * @param tag not null\n     * @since 1.1\n     */\n    private void addDoapMessage( String tag )\n    {\n        if ( asfExtOptions.isIncluded() )\n        {\n            errorMessages.add( \"A <doapOptions><\" + tag + \"/><\/doapOptions> parameter is required by ASF.\" );\n        }\n        else\n        {\n            warnMessages.add( \"No <doapOptions><\" + tag\n                + \"/><\/doapOptions> parameter defined, it highly recommended to have one.\" );\n        }\n    }","id":1046,"modified_method":"/**\n     * @param tag not null\n     * @since 1.1\n     */\n    private void addDoapMessage( String tag )\n    {\n        if ( asfExtOptions.isIncluded() )\n        {\n            errorMessages.add( \"A <doapOptions><\" + tag + \"/><\/doapOptions> parameter is required by ASF.\" );\n        }\n        else\n        {\n            warnMessages.add( \"No <doapOptions><\" + tag\n                + \"/><\/doapOptions> parameter defined, it is highly recommended to have one.\" );\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write all DOAP releases.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @throws MojoExecutionException if any\n     * @see <a href=\"http://usefulinc.com/ns/doap#release\">http://usefulinc.com/ns/doap#release<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#Version\">http://usefulinc.com/ns/doap#Version<\/a>\n     */\n    private void writeReleases( XMLWriter writer, MavenProject project )\n        throws MojoExecutionException\n    {\n        Artifact artifact =\n            artifactFactory.createArtifact( project.getGroupId(), project.getArtifactId(), project.getVersion(), null,\n                                            project.getPackaging() );\n        RepositoryMetadata metadata = new ArtifactRepositoryMetadata( artifact );\n\n        for ( ArtifactRepository repo : remoteRepositories )\n        {\n            if ( repo.isBlacklisted() )\n            {\n                continue;\n            }\n            if ( repo.getSnapshots().isEnabled() )\n            {\n                continue;\n            }\n            if ( repo.getReleases().isEnabled() )\n            {\n                try\n                {\n                    repositoryMetadataManager.resolveAlways( metadata, localRepository, repo );\n                    break;\n                }\n                catch ( RepositoryMetadataResolutionException e )\n                {\n                    throw new MojoExecutionException( metadata\n                        + \" could not be retrieved from repositories due to an error: \" + e.getMessage(), e );\n                }\n            }\n        }\n\n        if ( metadata.getMetadata().getVersioning() == null )\n        {\n            warnMessages.add( \"No versioning was found. Ignored <release/> tag.\" );\n            return;\n        }\n\n        List<String> versions = metadata.getMetadata().getVersioning().getVersions();\n\n        // Recent releases in first\n        Collections.reverse( versions );\n        boolean addComment = false;\n        int i = 0;\n        for ( String version : versions )\n        {\n            if ( !addComment )\n            {\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer, \"Project releases.\", 2 );\n                addComment = true;\n            }\n\n            writer.startElement( \"release\" );\n            writer.startElement( \"Version\" );\n\n            writer.startElement( \"name\" );\n            if ( version.equals( metadata.getMetadata().getVersioning().getRelease() ) )\n            {\n                writer.writeText( \"Latest stable release\" );\n            }\n            else\n            {\n                writer.writeText( project.getName() + \" - \" + version );\n            }\n            writer.endElement(); // name\n\n            writer.startElement( \"revision\" );\n            writer.writeText( version );\n            writer.endElement(); // revision\n\n            // list all file release from all remote repos\n            for ( ArtifactRepository repo : remoteRepositories )\n            {\n                Artifact artifactRelease =\n                    artifactFactory.createArtifact( project.getGroupId(), project.getArtifactId(), version, null,\n                                                    project.getPackaging() );\n\n                if ( artifactRelease == null )\n                {\n                    continue;\n                }\n\n                String fileRelease = repo.getUrl() + \"/\" + repo.pathOf( artifactRelease );\n                writer.startElement( \"file-release\" );\n                writer.writeText( fileRelease );\n                writer.endElement(); // file-release\n\n                Date releaseDate = null;\n                try\n                {\n                    releaseDate =\n                        REPOSITORY_DATE_FORMAT.parse( metadata.getMetadata().getVersioning().getLastUpdated() );\n                }\n                catch ( ParseException e )\n                {\n                    getLog().error( \"Unable to parse date '\" + metadata.getMetadata().getVersioning().getLastUpdated()\n                                        + \"'\" );\n                    continue;\n                }\n\n                // See MDOAP-11\n                if ( i == 0 )\n                {\n                    writer.startElement( \"created\" );\n                    writer.writeText( DOAP_DATE_FORMAT.format( releaseDate ) );\n                    writer.endElement(); // created\n                }\n            }\n\n            writer.endElement(); // Version\n            writer.endElement(); // release\n\n            i++;\n        }\n    }","id":1047,"modified_method":"/**\n     * Write all DOAP releases.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @throws MojoExecutionException if any\n     * @see <a href=\"http://usefulinc.com/ns/doap#release\">http://usefulinc.com/ns/doap#release<\/a>\n     * @see <a href=\"http://usefulinc.com/ns/doap#Version\">http://usefulinc.com/ns/doap#Version<\/a>\n     */\n    private void writeReleases( XMLWriter writer, MavenProject project )\n        throws MojoExecutionException\n    {\n        Artifact artifact =\n            artifactFactory.createArtifact( project.getGroupId(), project.getArtifactId(), project.getVersion(), null,\n                                            project.getPackaging() );\n        RepositoryMetadata metadata = new ArtifactRepositoryMetadata( artifact );\n\n        for ( ArtifactRepository repo : remoteRepositories )\n        {\n            if ( repo.isBlacklisted() )\n            {\n                continue;\n            }\n            if ( repo.getSnapshots().isEnabled() )\n            {\n                continue;\n            }\n            if ( repo.getReleases().isEnabled() )\n            {\n                try\n                {\n                    repositoryMetadataManager.resolveAlways( metadata, localRepository, repo );\n                    break;\n                }\n                catch ( RepositoryMetadataResolutionException e )\n                {\n                    throw new MojoExecutionException( metadata.extendedToString()\n                        + \" could not be retrieved from repositories due to an error: \" + e.getMessage(), e );\n                }\n            }\n        }\n\n        if ( metadata.getMetadata().getVersioning() == null )\n        {\n            warnMessages.add( \"No versioning was found. Ignored DOAP <release/> tag.\" );\n            return;\n        }\n\n        List<String> versions = metadata.getMetadata().getVersioning().getVersions();\n\n        // Recent releases in first\n        Collections.reverse( versions );\n        boolean addComment = false;\n        int i = 0;\n        for ( String version : versions )\n        {\n            if ( !addComment )\n            {\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer, \"Project releases.\", 2 );\n                addComment = true;\n            }\n\n            writer.startElement( \"release\" );\n            writer.startElement( \"Version\" );\n\n            writer.startElement( \"name\" );\n            if ( version.equals( metadata.getMetadata().getVersioning().getRelease() ) )\n            {\n                writer.writeText( \"Latest stable release\" );\n            }\n            else\n            {\n                writer.writeText( project.getName() + \" - \" + version );\n            }\n            writer.endElement(); // name\n\n            DoapUtil.writeElement( writer, \"revision\", version );\n\n            // list all file release from all remote repos\n            for ( ArtifactRepository repo : remoteRepositories )\n            {\n                Artifact artifactRelease =\n                    artifactFactory.createArtifact( project.getGroupId(), project.getArtifactId(), version, null,\n                                                    project.getPackaging() );\n\n                if ( artifactRelease == null )\n                {\n                    continue;\n                }\n\n                String fileRelease = repo.getUrl() + \"/\" + repo.pathOf( artifactRelease );\n                DoapUtil.writeElement( writer, \"file-release\", fileRelease );\n\n                Date releaseDate = null;\n                try\n                {\n                    releaseDate =\n                        REPOSITORY_DATE_FORMAT.parse( metadata.getMetadata().getVersioning().getLastUpdated() );\n                }\n                catch ( ParseException e )\n                {\n                    getLog().error( \"Unable to parse date '\" + metadata.getMetadata().getVersioning().getLastUpdated()\n                                        + \"'\" );\n                    continue;\n                }\n\n                // See MDOAP-11\n                if ( i == 0 )\n                {\n                    DoapUtil.writeElement( writer, \"created\", DOAP_DATE_FORMAT.format( releaseDate ) );\n                }\n            }\n\n            writer.endElement(); // Version\n            writer.endElement(); // release\n\n            i++;\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP bug-database.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#bug-database\">http://usefulinc.com/ns/doap#bug-database<\/a>\n     */\n    private void writeBugDatabase( XMLWriter writer, MavenProject project )\n    {\n        if ( project.getIssueManagement() == null || StringUtils.isEmpty( project.getIssueManagement().getUrl() ) )\n        {\n            addPomMessage( \"issueManagement\" );\n            return;\n        }\n\n        String issueManagementUrl = project.getIssueManagement().getUrl().trim();\n        try\n        {\n            new URL( issueManagementUrl );\n        }\n        catch ( MalformedURLException e )\n        {\n            errorMessages.add( \"The POM issueManagement url \" + issueManagementUrl + \" is not a valid URL.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Bug database.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"bug-database\", issueManagementUrl );\n    }","id":1048,"modified_method":"/**\n     * Write DOAP bug-database.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#bug-database\">http://usefulinc.com/ns/doap#bug-database<\/a>\n     */\n    private void writeBugDatabase( XMLWriter writer, MavenProject project )\n    {\n        if ( project.getIssueManagement() == null || StringUtils.isEmpty( project.getIssueManagement().getUrl() ) )\n        {\n            addPomMessage( \"issueManagement\" );\n            return;\n        }\n\n        String issueManagementUrl = project.getIssueManagement().getUrl().trim();\n        try\n        {\n            new URL( issueManagementUrl );\n        }\n        catch ( MalformedURLException e )\n        {\n            errorMessages.add( \"The POM <project><issueManagement><url>\" + issueManagementUrl\n                + \"<\/url><\/issueManagement><\/project> value is not a valid URL.\" );\n            return;\n        }\n\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"Bug database.\", 2 );\n        DoapUtil.writeRdfResourceElement( writer, \"bug-database\", issueManagementUrl );\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * @param tag not null\n     * @since 1.1\n     */\n    private void addPomMessage( String tag )\n    {\n        if ( asfExtOptions.isIncluded() )\n        {\n            errorMessages.add( \"A <project><\" + tag + \"/><\/project> parameter is required by ASF.\" );\n        }\n        else\n        {\n            warnMessages.add( \"No <project><\" + tag\n                + \"/><\/project> parameter defined, it highly recommended to have one.\" );\n        }\n    }","id":1049,"modified_method":"/**\n     * @param tag not null\n     * @since 1.1\n     */\n    private void addPomMessage( String tag )\n    {\n        if ( asfExtOptions.isIncluded() )\n        {\n            errorMessages.add( \"A POM <project><\" + tag + \"/><\/project> value is required by ASF.\" );\n        }\n        else\n        {\n            warnMessages.add( \"No POM <project><\" + tag\n                + \"/><\/project> value defined, it is highly recommended to have one.\" );\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write DOAP category.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#category\">http://usefulinc.com/ns/doap#category<\/a>\n     */\n    private void writeCategory( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getCategory() ) && StringUtils.isEmpty( category ) )\n        {\n            addDoapMessage( \"category\" );\n            return;\n        }\n\n        // TODO: how to lookup category, map it, or just declare it.\n        XmlWriterUtil.writeLineBreak( writer );\n        XmlWriterUtil.writeCommentText( writer, \"A category of project.\", 2 );\n\n        if ( StringUtils.isNotEmpty( category ) ) // backward compatible\n        {\n            getLog().warn( \"The <category/> parameter is deprecated, please use <doapOptions><category/><\/doapOptions> parameter instead of.\" );\n            category = category.trim();\n\n            if ( asfExtOptions.isIncluded() )\n            {\n                if ( ASFExtOptions.getCategorySupportedByASF( category ) == null )\n                {\n                    warnMessages.add( \"The programming category '\" + category + \"' is not supported by ASF. \"\n                        + \"Should be one of \" + Arrays.toString( ASFExtOptions.CATEGORIES ) );\n                }\n                else\n                {\n                    category = ASFExtOptions.getCategorySupportedByASF( category );\n                }\n            }\n\n            if ( asfExtOptions.isIncluded() )\n            {\n                DoapUtil.writeRdfResourceElement( writer, \"category\", \"http://projects.apache.org/category/\" + category );\n            }\n            else\n            {\n                DoapUtil.writeRdfResourceElement( writer, \"category\", category );\n            }\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getCategory() ) )\n        {\n            String[] categories = StringUtils.split( doapOptions.getCategory(), \",\" );\n            for ( String category : categories )\n            {\n                category = category.trim();\n\n                if ( asfExtOptions.isIncluded() )\n                {\n                    if ( ASFExtOptions.getCategorySupportedByASF( category ) == null )\n                    {\n                        warnMessages.add( \"The programming category '\" + category + \"' is not supported by ASF. \"\n                            + \"Should be one of \" + Arrays.toString( ASFExtOptions.CATEGORIES ) );\n                    }\n                    else\n                    {\n                        category = ASFExtOptions.getCategorySupportedByASF( category );\n                    }\n                }\n\n                if ( asfExtOptions.isIncluded() )\n                {\n                    DoapUtil.writeRdfResourceElement( writer, \"category\", \"http://projects.apache.org/category/\"\n                        + category );\n                }\n                else\n                {\n                    DoapUtil.writeRdfResourceElement( writer, \"category\", category );\n                }\n            }\n        }\n    }","id":1050,"modified_method":"/**\n     * Write DOAP category.\n     *\n     * @param writer not null\n     * @param project the Maven project, not null\n     * @see <a href=\"http://usefulinc.com/ns/doap#category\">http://usefulinc.com/ns/doap#category<\/a>\n     */\n    private void writeCategory( XMLWriter writer, MavenProject project )\n    {\n        if ( StringUtils.isEmpty( doapOptions.getCategory() ) && StringUtils.isEmpty( category ) )\n        {\n            addDoapMessage( \"category\" );\n            return;\n        }\n\n        // TODO: how to lookup category, map it, or just declare it.\n        boolean addComment = false;\n        if ( StringUtils.isNotEmpty( category ) ) // backward compatible\n        {\n            getLog().warn( \"The <category/> parameter is deprecated, please use <doapOptions><category/><\/doapOptions> parameter instead of.\" );\n\n            category = category.trim();\n\n            if ( asfExtOptions.isIncluded() )\n            {\n                String asfCategory = ASFExtOptions.getCategorySupportedByASF( category );\n                if ( asfCategory == null )\n                {\n                    errorMessages.add( \"The deprecated <category>\" + category\n                        + \"<\/category> parameter is not supported by ASF. Should be one of \"\n                        + Arrays.toString( ASFExtOptions.CATEGORIES ) );\n                }\n                else\n                {\n                    XmlWriterUtil.writeLineBreak( writer );\n                    XmlWriterUtil.writeCommentText( writer, \"A category of project.\", 2 );\n                    addComment = true;\n                    DoapUtil.writeRdfResourceElement( writer, \"category\", ASFExtOptions.CATEGORY_RESOURCE + asfCategory );\n                }\n            }\n            else\n            {\n                XmlWriterUtil.writeLineBreak( writer );\n                XmlWriterUtil.writeCommentText( writer, \"A category of project.\", 2 );\n                addComment = true;\n                DoapUtil.writeElement( writer, \"category\", category );\n            }\n        }\n\n        if ( StringUtils.isNotEmpty( doapOptions.getCategory() ) )\n        {\n            String[] categories = StringUtils.split( doapOptions.getCategory(), \",\" );\n            for ( String category : categories )\n            {\n                category = category.trim();\n\n                if ( asfExtOptions.isIncluded() )\n                {\n                    String asfCategory = ASFExtOptions.getCategorySupportedByASF( category );\n                    if ( asfCategory == null )\n                    {\n                        errorMessages.add( \"The <doapOptions><category>\" + category\n                            + \"<\/category><\/doapOptions> parameter is not supported by ASF. Should be one of \"\n                            + Arrays.toString( ASFExtOptions.CATEGORIES ) );\n                    }\n                    else\n                    {\n                        if ( !addComment )\n                        {\n                            XmlWriterUtil.writeLineBreak( writer );\n                            XmlWriterUtil.writeCommentText( writer, \"A category of project.\", 2 );\n                            addComment = true;\n                        }\n                        DoapUtil.writeRdfResourceElement( writer, \"category\", ASFExtOptions.CATEGORY_RESOURCE\n                            + asfCategory );\n                    }\n                }\n                else\n                {\n                    if ( !addComment )\n                    {\n                        XmlWriterUtil.writeLineBreak( writer );\n                        XmlWriterUtil.writeCommentText( writer, \"A category of project.\", 2 );\n                        addComment = true;\n                    }\n                    DoapUtil.writeElement( writer, \"category\", category );\n                }\n            }\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write a doap file for the given project.\n     *\n     * @param project not null\n     * @param outputFile not null\n     * @since 1.1\n     */\n    private void writeDoapFile( MavenProject project, File outputFile )\n        throws MojoExecutionException\n    {\n        // ----------------------------------------------------------------------------\n        // Includes ASF extensions\n        // ----------------------------------------------------------------------------\n\n        if ( !asfExtOptions.isIncluded() && ASFExtOptions.isASFProject( project ) )\n        {\n            getLog().info( \"This project is an ASF project, ASF Extensions to DOAP will be added.\" );\n            asfExtOptions.setIncluded( true );\n        }\n\n        // ----------------------------------------------------------------------------\n        // setup pretty print xml writer\n        // ----------------------------------------------------------------------------\n\n        Writer w;\n        try\n        {\n            if ( !outputFile.getParentFile().exists() )\n            {\n                FileUtils.mkdir( outputFile.getParentFile().getAbsolutePath() );\n            }\n\n            w = WriterFactory.newXmlWriter( outputFile );\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error creating DOAP file \" + outputFile.getAbsolutePath(), e );\n        }\n\n        if ( asfExtOptions.isIncluded() )\n        {\n            getLog().info( \"Generating an ASF DOAP file \" + outputFile.getAbsolutePath() );\n        }\n        else\n        {\n            getLog().info( \"Generating a pure DOAP file \" + outputFile.getAbsolutePath() );\n        }\n\n        XMLWriter writer = new PrettyPrintXMLWriter( w, project.getModel().getModelEncoding(), null );\n\n        // ----------------------------------------------------------------------------\n        // Convert POM to DOAP\n        // ----------------------------------------------------------------------------\n\n        DoapUtil.writeHeader( writer );\n\n        // Heading\n        writer.startElement( \"rdf:RDF\" );\n        writer.addAttribute( \"xml:lang\", lang );\n        writer.addAttribute( \"xmlns\", \"http://usefulinc.com/ns/doap#\" );\n        writer.addAttribute( \"xmlns:rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" );\n        writer.addAttribute( \"xmlns:foaf\", \"http://xmlns.com/foaf/0.1/\" );\n        if ( asfExtOptions.isIncluded() )\n        {\n            writer.addAttribute( \"xmlns:asfext\", ASFExtOptions.ASFEXT_NAMESPACE );\n        }\n\n        // Project\n        writer.startElement( \"Project\" );\n        if ( StringUtils.isNotEmpty( about ) )\n        {\n            if ( artifact != null )\n            {\n                about = project.getUrl();\n            }\n\n            try\n            {\n                new URL( about );\n\n                writer.addAttribute( \"rdf:about\", about );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The <about/> parameter \" + about + \" is not a valid URL.\" );\n            }\n        }\n        else\n        {\n            warnMessages.add( \"rdf:about should be required\" );\n        }\n\n        // name\n        writeName( writer, project );\n\n        // description\n        writeDescription( writer, project );\n\n        // implements\n        writeImplements( writer );\n\n        // Audience\n        writeAudience( writer );\n\n        // Vendor\n        writeVendor( writer, project );\n\n        // created\n        writeCreated( writer, project );\n\n        // homepage and old-homepage\n        writeHomepage( writer, project );\n\n        // Blog\n        writeBlog( writer );\n\n        // licenses\n        writeLicenses( writer, project );\n\n        // programming-language\n        writeProgrammingLanguage( writer, project );\n\n        // category\n        writeCategory( writer, project );\n\n        // os\n        writeOS( writer, project );\n\n        // Plateform\n        writePlateform( writer );\n\n        // Language\n        writeLanguage( writer );\n\n        // SCM\n        writeSourceRepositories( writer, project );\n\n        // bug-database\n        writeBugDatabase( writer, project );\n\n        // mailing list\n        writeMailingList( writer, project );\n\n        // download-page and download-mirror\n        writeDownloadPage( writer, project );\n\n        // screenshots\n        writeScreenshots( writer, project );\n\n        // service-endpoint\n        writeServiceEndpoint( writer );\n\n        // wiki\n        writeWiki( writer, project );\n\n        // Releases\n        writeReleases( writer, project );\n\n        // Developers\n        @SuppressWarnings( \"unchecked\" )\n        List<Contributor> developers = project.getDevelopers();\n        if ( developers == null || developers.isEmpty() )\n        {\n            addPomMessage( \"developers\" );\n        }\n        else\n        {\n            writeContributors( writer, developers );\n        }\n\n        // Contributors\n        @SuppressWarnings( \"unchecked\" )\n        List<Contributor> contributors = project.getContributors();\n        writeContributors( writer, contributors );\n\n        // ASFext\n        writeASFext( writer, project );\n\n        writer.endElement(); // Project\n\n        writeOrganizations( writer );\n\n        writer.endElement(); // rdf:RDF\n\n        try\n        {\n            w.close();\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error when closing the writer.\", e );\n        }\n\n        if ( !warnMessages.isEmpty() )\n        {\n            for ( String warn : warnMessages )\n            {\n                getLog().warn( warn );\n            }\n        }\n\n        if ( !errorMessages.isEmpty() )\n        {\n            for ( String error : errorMessages )\n            {\n                getLog().error( error );\n            }\n\n            // TODO need to do more tests\n            // if ( ASFExtOptions.isASFProject( project ) )\n            // {\n            // throw new MojoExecutionException( \"The generated DOAP doesn't respect ASF rule, see above.\" );\n            // }\n        }\n\n        if ( validate )\n        {\n            List<String> errors = DoapUtil.validate( outputFile );\n            if ( !errors.isEmpty() )\n            {\n                for ( String error : errors )\n                {\n                    getLog().error( error );\n                }\n\n                throw new MojoExecutionException( \"Error parsing the generated doap file, see above.\" );\n            }\n        }\n    }","id":1051,"modified_method":"/**\n     * Write a doap file for the given project.\n     *\n     * @param project not null\n     * @param outputFile not null\n     * @since 1.1\n     */\n    private void writeDoapFile( MavenProject project, File outputFile )\n        throws MojoExecutionException\n    {\n        // ----------------------------------------------------------------------------\n        // Includes ASF extensions\n        // ----------------------------------------------------------------------------\n\n        if ( !asfExtOptions.isIncluded() && ASFExtOptions.isASFProject( project ) )\n        {\n            getLog().info( \"This project is an ASF project, ASF Extensions to DOAP will be added.\" );\n            asfExtOptions.setIncluded( true );\n        }\n\n        // ----------------------------------------------------------------------------\n        // setup pretty print xml writer\n        // ----------------------------------------------------------------------------\n\n        Writer w;\n        try\n        {\n            if ( !outputFile.getParentFile().exists() )\n            {\n                FileUtils.mkdir( outputFile.getParentFile().getAbsolutePath() );\n            }\n\n            w = WriterFactory.newXmlWriter( outputFile );\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error creating DOAP file \" + outputFile.getAbsolutePath(), e );\n        }\n\n        if ( asfExtOptions.isIncluded() )\n        {\n            getLog().info( \"Generating an ASF DOAP file \" + outputFile.getAbsolutePath() );\n        }\n        else\n        {\n            getLog().info( \"Generating a pure DOAP file \" + outputFile.getAbsolutePath() );\n        }\n\n        XMLWriter writer = new PrettyPrintXMLWriter( w, project.getModel().getModelEncoding(), null );\n\n        // ----------------------------------------------------------------------------\n        // Convert POM to DOAP\n        // ----------------------------------------------------------------------------\n\n        DoapUtil.writeHeader( writer );\n\n        // Heading\n        writer.startElement( \"rdf:RDF\" );\n        writer.addAttribute( \"xml:lang\", lang );\n        writer.addAttribute( \"xmlns\", \"http://usefulinc.com/ns/doap#\" );\n        writer.addAttribute( \"xmlns:rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" );\n        writer.addAttribute( \"xmlns:foaf\", \"http://xmlns.com/foaf/0.1/\" );\n        if ( asfExtOptions.isIncluded() )\n        {\n            writer.addAttribute( \"xmlns:asfext\", ASFExtOptions.ASFEXT_NAMESPACE );\n        }\n\n        // Project\n        writer.startElement( \"Project\" );\n        if ( StringUtils.isNotEmpty( about ) )\n        {\n            if ( artifact != null )\n            {\n                about = project.getUrl();\n            }\n\n            try\n            {\n                new URL( about );\n\n                writer.addAttribute( \"rdf:about\", about );\n            }\n            catch ( MalformedURLException e )\n            {\n                errorMessages.add( \"The <about/> parameter \" + about + \" is not a valid URL.\" );\n            }\n        }\n        else\n        {\n            warnMessages.add( \"rdf:about should be required\" );\n        }\n\n        // name\n        writeName( writer, project );\n\n        // description\n        writeDescription( writer, project );\n\n        // implements\n        writeImplements( writer );\n\n        // Audience\n        writeAudience( writer );\n\n        // Vendor\n        writeVendor( writer, project );\n\n        // created\n        writeCreated( writer, project );\n\n        // homepage and old-homepage\n        writeHomepage( writer, project );\n\n        // Blog\n        writeBlog( writer );\n\n        // licenses\n        writeLicenses( writer, project );\n\n        // programming-language\n        writeProgrammingLanguage( writer, project );\n\n        // category\n        writeCategory( writer, project );\n\n        // os\n        writeOS( writer, project );\n\n        // Plateform\n        writePlateform( writer );\n\n        // Language\n        writeLanguage( writer );\n\n        // SCM\n        writeSourceRepositories( writer, project );\n\n        // bug-database\n        writeBugDatabase( writer, project );\n\n        // mailing list\n        writeMailingList( writer, project );\n\n        // download-page and download-mirror\n        writeDownloadPage( writer, project );\n\n        // screenshots\n        writeScreenshots( writer, project );\n\n        // service-endpoint\n        writeServiceEndpoint( writer );\n\n        // wiki\n        writeWiki( writer, project );\n\n        // Releases\n        writeReleases( writer, project );\n\n        // Developers\n        @SuppressWarnings( \"unchecked\" )\n        List<Contributor> developers = project.getDevelopers();\n        if ( developers == null || developers.isEmpty() )\n        {\n            addPomMessage( \"developers\" );\n        }\n        else\n        {\n            writeContributors( writer, developers );\n        }\n\n        // Contributors\n        @SuppressWarnings( \"unchecked\" )\n        List<Contributor> contributors = project.getContributors();\n        writeContributors( writer, contributors );\n\n        // ASFext\n        writeASFext( writer, project );\n\n        writer.endElement(); // Project\n\n        writeOrganizations( writer );\n\n        writer.endElement(); // rdf:RDF\n\n        try\n        {\n            w.close();\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error when closing the writer.\", e );\n        }\n\n        if ( !warnMessages.isEmpty() )\n        {\n            for ( String warn : warnMessages )\n            {\n                getLog().warn( warn );\n            }\n        }\n\n        if ( !errorMessages.isEmpty() )\n        {\n            getLog().error( \"\" );\n            for ( String error : errorMessages )\n            {\n                getLog().error( error );\n            }\n            getLog().error( \"\" );\n\n            if ( ASFExtOptions.isASFProject( project ) )\n            {\n                getLog().error( \"For more information about the errors and possible solutions, please read the following articles:\" );\n                getLog().error( \"http://maven.apache.org/plugins/maven-doap-plugin/usage.html#DOAP_ASF_Configuration\" );\n                throw new MojoExecutionException( \"The generated DOAP doesn't respect ASF rules, see above.\" );\n            }\n        }\n\n        if ( validate )\n        {\n            List<String> errors = DoapUtil.validate( outputFile );\n            if ( !errors.isEmpty() )\n            {\n                getLog().error( \"\" );\n                for ( String error : errors )\n                {\n                    getLog().error( error );\n                }\n                getLog().error( \"\" );\n\n                throw new MojoExecutionException( \"Error parsing the generated DOAP file, see above.\" );\n            }\n        }\n    }","commit_id":"6a80d2ca3904aaf3c225ca7c0f51086671c9eb59","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void initTree(){\n    myTree.setRootVisible(false);\n    myTree.setShowsRootHandles(true);\n    UIUtil.setLineStyleAngled(myTree);\n    TreeToolTipHandler.install(myTree);\n    TreeUtil.installActions(myTree);\n    PopupHandler.installFollowingSelectionTreePopup(myTree, createActionsGroup(), ActionPlaces.UNKNOWN, ActionManager.getInstance());\n    myTree.setCellRenderer(new ColoredTreeCellRenderer(){\n      public void customizeCellRenderer(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n        if (value instanceof DefaultMutableTreeNode){\n          final DefaultMutableTreeNode node = (DefaultMutableTreeNode)value;\n          final Object userObject = node.getUserObject();\n          if (userObject instanceof ConfigurationType){\n            final ConfigurationType configurationType = (ConfigurationType)userObject;\n            append(configurationType.getDisplayName(), SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n            setIcon(configurationType.getIcon());\n          } else if (userObject instanceof SingleConfigurationConfigurable){\n            final SingleConfigurationConfigurable settings = (SingleConfigurationConfigurable)userObject;\n            final RunManager runManager = getRunManager();\n            final RunConfiguration configuration = settings.getConfiguration();\n            append(settings.getNameText(), runManager.isTemporary(configuration) ? SimpleTextAttributes.GRAY_ATTRIBUTES : SimpleTextAttributes.REGULAR_ATTRIBUTES);\n            setIcon(ExecutionUtil.getConfigurationIcon(getProject(), configuration, !settings.isValid()));\n          }\n        }\n      }\n    });\n    final RunManagerEx manager = getRunManager();\n    final ConfigurationType[] factories = getRunManager().getConfigurationFactories();\n    for (ConfigurationType type : factories) {\n      final RunnerAndConfigurationSettingsImpl[] configurations = manager.getConfigurationSettings(type);\n      if (configurations != null && configurations.length > 0){\n        final DefaultMutableTreeNode typeNode = new DefaultMutableTreeNode(type);\n        myRoot.add(typeNode);\n        for (RunnerAndConfigurationSettingsImpl configuration : configurations) {\n          final SingleConfigurationConfigurable<RunConfiguration> configurationConfigurable =\n            SingleConfigurationConfigurable.editSettings(configuration);\n          installUpdateListeners(configurationConfigurable);\n          typeNode.add(new DefaultMutableTreeNode(configurationConfigurable));\n        }\n      }\n    }\n\n    myTree.addTreeSelectionListener(new TreeSelectionListener() {\n      public void valueChanged(TreeSelectionEvent e) {\n        final TreePath selectionPath = myTree.getSelectionPath();\n        if (selectionPath != null){\n          DefaultMutableTreeNode node = (DefaultMutableTreeNode)selectionPath.getLastPathComponent();\n          final Object userObject = node.getUserObject();\n          if (userObject instanceof SingleConfigurationConfigurable){\n            myRightPanel.removeAll();\n            mySelectedConfigurable = (SingleConfigurationConfigurable<RunConfiguration>)userObject;\n            myRightPanel.add(mySelectedConfigurable.createComponent(), BorderLayout.CENTER);\n            updateCompileMethodComboStatus(mySelectedConfigurable);\n            setupDialogBounds();\n          } else if (userObject instanceof ConfigurationType){\n            drawPressAddButtonMessage(((ConfigurationType)userObject));\n          }\n        }\n        updateDialog();\n      }\n    });\n    myTree.registerKeyboardAction(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        clickDefaultButton();\n      }\n    }, KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), JComponent.WHEN_FOCUSED);\n    SwingUtilities.invokeLater(new Runnable() {\n      public void run() {\n        myTree.requestFocusInWindow();\n        final RunnerAndConfigurationSettings settings = manager.getSelectedConfiguration();\n        if (settings != null) {\n          final Enumeration enumeration = myRoot.breadthFirstEnumeration();\n          while (enumeration.hasMoreElements()){\n            final DefaultMutableTreeNode node = (DefaultMutableTreeNode)enumeration.nextElement();\n            final Object userObject = node.getUserObject();\n            if (userObject instanceof SingleConfigurationConfigurable) {\n              final SingleConfigurationConfigurable<RunConfiguration> configurationConfigurable = ((SingleConfigurationConfigurable<RunConfiguration>)userObject);\n              if (configurationConfigurable.getConfiguration().getType() == settings.getType() &&\n                  Comparing.strEqual(configurationConfigurable.getConfiguration().getName(),\n                                     settings.getName())){\n                mySelectedConfigurable = configurationConfigurable;\n                TreeUtil.selectInTree(node, true, myTree);\n                return;\n              }\n            }\n          }\n        } else {\n          mySelectedConfigurable = null;\n        }\n        TreeUtil.selectFirstNode(myTree);\n        drawPressAddButtonMessage(null);\n      }\n    });\n    sortTree(myRoot);\n    ((DefaultTreeModel)myTree.getModel()).reload();\n  }","id":1052,"modified_method":"private void initTree(){\n    myTree.setRootVisible(false);\n    myTree.setShowsRootHandles(true);\n    UIUtil.setLineStyleAngled(myTree);\n    TreeToolTipHandler.install(myTree);\n    TreeUtil.installActions(myTree);\n    PopupHandler.installFollowingSelectionTreePopup(myTree, createActionsGroup(), ActionPlaces.UNKNOWN, ActionManager.getInstance());\n    myTree.setCellRenderer(new ColoredTreeCellRenderer(){\n      public void customizeCellRenderer(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n        if (value instanceof DefaultMutableTreeNode){\n          final DefaultMutableTreeNode node = (DefaultMutableTreeNode)value;\n          final Object userObject = node.getUserObject();\n          if (userObject instanceof ConfigurationType){\n            final ConfigurationType configurationType = (ConfigurationType)userObject;\n            append(configurationType.getDisplayName(), SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n            setIcon(configurationType.getIcon());\n          } else {\n            final RunManager runManager = getRunManager();\n            RunConfiguration configuration = null;\n            if (userObject instanceof SingleConfigurationConfigurable){\n              final SingleConfigurationConfigurable settings = ((SingleConfigurationConfigurable)userObject);\n              configuration = settings.getConfiguration();\n              setIcon(ExecutionUtil.getConfigurationIcon(getProject(), configuration, !settings.isValid()));\n            } else if (userObject instanceof RunnerAndConfigurationSettingsImpl) {\n              configuration = ((RunnerAndConfigurationSettingsImpl)userObject).getConfiguration();\n              setIcon(ExecutionUtil.getConfigurationIcon(getProject(), configuration));\n            }\n            if (configuration != null) {\n              append(configuration.getName(), runManager.isTemporary(configuration) ? SimpleTextAttributes.GRAY_ATTRIBUTES : SimpleTextAttributes.REGULAR_ATTRIBUTES);\n            }\n          }\n        }\n      }\n    });\n    final RunManagerEx manager = getRunManager();\n    final ConfigurationType[] factories = manager.getConfigurationFactories();\n    for (ConfigurationType type : factories) {\n      final RunnerAndConfigurationSettingsImpl[] configurations = manager.getConfigurationSettings(type);\n      if (configurations != null && configurations.length > 0){\n        final DefaultMutableTreeNode typeNode = new DefaultMutableTreeNode(type);\n        myRoot.add(typeNode);\n        for (RunnerAndConfigurationSettingsImpl configuration : configurations) {\n          typeNode.add(new DefaultMutableTreeNode(configuration));\n        }\n      }\n    }\n\n    myTree.addTreeSelectionListener(new TreeSelectionListener() {\n      public void valueChanged(TreeSelectionEvent e) {\n        final TreePath selectionPath = myTree.getSelectionPath();\n        if (selectionPath != null){\n          DefaultMutableTreeNode node = (DefaultMutableTreeNode)selectionPath.getLastPathComponent();\n          final Object userObject = node.getUserObject();\n          if (userObject instanceof RunnerAndConfigurationSettingsImpl) {\n            final SingleConfigurationConfigurable<RunConfiguration> configurationConfigurable =\n            SingleConfigurationConfigurable.editSettings((RunnerAndConfigurationSettingsImpl)userObject);\n            installUpdateListeners(configurationConfigurable);\n            node.setUserObject(configurationConfigurable);\n            updateRightPanel(configurationConfigurable);\n          } else if (userObject instanceof SingleConfigurationConfigurable){\n            updateRightPanel((SingleConfigurationConfigurable<RunConfiguration>)userObject);\n          } else if (userObject instanceof ConfigurationType){\n            drawPressAddButtonMessage(((ConfigurationType)userObject));\n          }\n        }\n        updateDialog();\n      }\n    });\n    myTree.registerKeyboardAction(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        clickDefaultButton();\n      }\n    }, KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), JComponent.WHEN_FOCUSED);\n    SwingUtilities.invokeLater(new Runnable() {\n      public void run() {\n        myTree.requestFocusInWindow();\n        final RunnerAndConfigurationSettings settings = manager.getSelectedConfiguration();\n        if (settings != null) {\n          final Enumeration enumeration = myRoot.breadthFirstEnumeration();\n          while (enumeration.hasMoreElements()){\n            final DefaultMutableTreeNode node = (DefaultMutableTreeNode)enumeration.nextElement();\n            final Object userObject = node.getUserObject();\n            if (userObject instanceof RunnerAndConfigurationSettingsImpl) {\n              final RunnerAndConfigurationSettingsImpl runnerAndConfigurationSettings = (RunnerAndConfigurationSettingsImpl)userObject;\n              if (runnerAndConfigurationSettings.getConfiguration().getType() == settings.getType() &&\n                  Comparing.strEqual(runnerAndConfigurationSettings.getConfiguration().getName(), settings.getName())){\n                TreeUtil.selectInTree(node, true, myTree);\n                return;\n              }\n            }\n          }\n        } else {\n          mySelectedConfigurable = null;\n        }\n        TreeUtil.selectFirstNode(myTree);\n        drawPressAddButtonMessage(null);\n      }\n    });\n    sortTree(myRoot);\n    ((DefaultTreeModel)myTree.getModel()).reload();\n  }","commit_id":"b7f7a1bea87d315aa7fe0e5588784506ca66d460","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isModified() {\n    if (super.isModified()) return true;\n    final RunManagerImpl runManager = getRunManager();\n    final RunnerAndConfigurationSettingsImpl settings = runManager.getSelectedConfiguration();\n    if (mySelectedConfigurable == null) {\n      return settings != null;\n    }\n    if (settings == null ||\n        mySelectedConfigurable.getConfiguration().getType() != settings.getType() ||\n        (mySelectedConfigurable.getConfiguration().getType() == settings.getType() &&\n         !Comparing.strEqual(mySelectedConfigurable.getNameText(), settings.getConfiguration().getName()))){\n      return true;\n    }\n    final RunConfiguration[] allConfigurations = runManager.getAllConfigurations();\n    final Set<RunConfiguration> currentConfigurations = new HashSet<RunConfiguration>();\n    for(int i = 0; i < myRoot.getChildCount(); i++){\n      DefaultMutableTreeNode typeNode = (DefaultMutableTreeNode)myRoot.getChildAt(i);\n      final RunnerAndConfigurationSettingsImpl[] configurationSettings =\n        runManager.getConfigurationSettings((ConfigurationType)typeNode.getUserObject());\n      if (configurationSettings.length != typeNode.getChildCount()) return true;\n      for(int j= 0; j < typeNode.getChildCount(); j++){\n        SingleConfigurationConfigurable configurable = (SingleConfigurationConfigurable)((DefaultMutableTreeNode)typeNode.getChildAt(j)).getUserObject();\n        if (!Comparing.strEqual(configurationSettings[j].getConfiguration().getName(), configurable.getConfiguration().getName())) return true;\n        if (configurable.isModified()) return true;\n        currentConfigurations.add(configurable.getConfiguration());\n      }\n    }\n    for (RunConfiguration configuration : allConfigurations) {\n      if (!currentConfigurations.contains(configuration)) return true;\n    }\n    return false;\n  }","id":1053,"modified_method":"public boolean isModified() {\n    if (super.isModified()) return true;\n    final RunManagerImpl runManager = getRunManager();\n    final RunnerAndConfigurationSettingsImpl settings = runManager.getSelectedConfiguration();\n    if (mySelectedConfigurable == null) {\n      return settings != null;\n    }\n    if (settings == null ||\n        mySelectedConfigurable.getConfiguration().getType() != settings.getType() ||\n        (mySelectedConfigurable.getConfiguration().getType() == settings.getType() &&\n         !Comparing.strEqual(mySelectedConfigurable.getNameText(), settings.getConfiguration().getName()))){\n      return true;\n    }\n    final RunConfiguration[] allConfigurations = runManager.getAllConfigurations();\n    final Set<RunConfiguration> currentConfigurations = new HashSet<RunConfiguration>();\n    for(int i = 0; i < myRoot.getChildCount(); i++){\n      DefaultMutableTreeNode typeNode = (DefaultMutableTreeNode)myRoot.getChildAt(i);\n      final RunnerAndConfigurationSettingsImpl[] configurationSettings =\n        runManager.getConfigurationSettings((ConfigurationType)typeNode.getUserObject());\n      if (configurationSettings.length != typeNode.getChildCount()) return true;\n      for(int j= 0; j < typeNode.getChildCount(); j++){\n        final Object userObject = ((DefaultMutableTreeNode)typeNode.getChildAt(j)).getUserObject();\n        if (userObject instanceof SingleConfigurationConfigurable) {\n          SingleConfigurationConfigurable configurable = (SingleConfigurationConfigurable)userObject;\n          if (!Comparing.strEqual(configurationSettings[j].getConfiguration().getName(), configurable.getConfiguration().getName())) return true;\n          if (configurable.isModified()) return true;\n          currentConfigurations.add(configurable.getConfiguration());\n        } else if (userObject instanceof RunnerAndConfigurationSettingsImpl) {\n          currentConfigurations.add(((RunnerAndConfigurationSettingsImpl)userObject).getConfiguration());\n        }\n      }\n    }\n    for (RunConfiguration configuration : allConfigurations) {\n      if (!currentConfigurations.contains(configuration)) return true;\n    }\n    return false;\n  }","commit_id":"b7f7a1bea87d315aa7fe0e5588784506ca66d460","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private SingleConfigurationConfigurable<RunConfiguration> getSelectedConfiguration(){\n    final TreePath selectionPath = myTree.getSelectionPath();\n    if (selectionPath != null){\n      final DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode)selectionPath.getLastPathComponent();\n      if (treeNode.getUserObject() instanceof SingleConfigurationConfigurable){\n        return (SingleConfigurationConfigurable<RunConfiguration>)treeNode.getUserObject();\n      }\n    }\n    return null;\n  }","id":1054,"modified_method":"@Nullable\n  private SingleConfigurationConfigurable<RunConfiguration> getSelectedConfiguration(){\n    final TreePath selectionPath = myTree.getSelectionPath();\n    if (selectionPath != null){\n      final DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode)selectionPath.getLastPathComponent();\n      final Object userObject = treeNode.getUserObject();\n      if (userObject instanceof SingleConfigurationConfigurable){\n        return (SingleConfigurationConfigurable<RunConfiguration>)userObject;\n      }\n    }\n    return null;\n  }","commit_id":"b7f7a1bea87d315aa7fe0e5588784506ca66d460","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void applyByType(ConfigurationType type) throws ConfigurationException {\n    DefaultMutableTreeNode typeNode = getConfigurationTypeNode(type);\n    final RunManagerImpl manager = getRunManager();\n    final ArrayList<SingleConfigurationConfigurable> stableConfigurations = new ArrayList<SingleConfigurationConfigurable>();\n    SingleConfigurationConfigurable tempConfiguration = null;\n\n    if (typeNode != null) {\n      for (int i = 0; i < typeNode.getChildCount(); i++) {\n        final SingleConfigurationConfigurable configurable =\n          ((SingleConfigurationConfigurable)((DefaultMutableTreeNode)typeNode.getChildAt(i))\n            .getUserObject());\n        if (manager.isTemporary((RunnerAndConfigurationSettingsImpl)configurable.getSettings())) {\n          tempConfiguration = configurable;\n        }\n        else {\n          stableConfigurations.add(configurable);\n        }\n      }\n    }\n    // try to apply all\n    for (SingleConfigurationConfigurable configurable : stableConfigurations) {\n      applyConfiguration(typeNode, configurable);\n    }\n    if (tempConfiguration != null) {\n      applyConfiguration(typeNode, tempConfiguration);\n    }\n\n    // if apply succeeded, update the list of configurations in RunManager\n    manager.removeConfigurations(type);\n    for (final SingleConfigurationConfigurable<RunConfiguration> stableConfiguration : stableConfigurations) {\n      final ConfigurationSettingsEditorWrapper settingsEditorWrapper = ((ConfigurationSettingsEditorWrapper)stableConfiguration.getEditor());\n      manager.addConfiguration(stableConfiguration.getSettings(),\n                               settingsEditorWrapper.isStoreProjectConfiguration(),\n                               settingsEditorWrapper.getStepsBeforeLaunch());\n    }\n    if (tempConfiguration != null) {\n      manager.setTemporaryConfiguration((RunnerAndConfigurationSettingsImpl)tempConfiguration.getSettings());\n    }\n  }","id":1055,"modified_method":"public void applyByType(ConfigurationType type) throws ConfigurationException {\n    DefaultMutableTreeNode typeNode = getConfigurationTypeNode(type);\n    final RunManagerImpl manager = getRunManager();\n    final ArrayList<RunConfigurationBean> stableConfigurations = new ArrayList<RunConfigurationBean>();\n    RunnerAndConfigurationSettingsImpl tempConfiguration = null;\n    if (typeNode != null) {\n      for (int i = 0; i < typeNode.getChildCount(); i++) {\n        final Object userObject = ((DefaultMutableTreeNode)typeNode.getChildAt(i)).getUserObject();\n        if (userObject instanceof SingleConfigurationConfigurable) {\n          final SingleConfigurationConfigurable configurable = (SingleConfigurationConfigurable)userObject;\n          final RunnerAndConfigurationSettingsImpl settings = (RunnerAndConfigurationSettingsImpl)configurable.getSettings();\n          if (manager.isTemporary(settings)) {\n            applyConfiguration(typeNode, configurable);\n            tempConfiguration = settings;\n          } else {\n            stableConfigurations.add(new RunConfigurationBean(configurable));\n          }\n        } else if (userObject instanceof RunnerAndConfigurationSettingsImpl) {\n          RunnerAndConfigurationSettingsImpl settings = ((RunnerAndConfigurationSettingsImpl)userObject);\n          if (manager.isTemporary(settings)) {\n            tempConfiguration = settings;\n          } else {\n            stableConfigurations.add(new RunConfigurationBean(settings,\n                                                              manager.isConfigurationShared(settings),\n                                                              manager.getStepsBeforeLaunch(settings.getConfiguration())));\n          }\n        }\n      }\n    }\n    // try to apply all\n    for (RunConfigurationBean bean : stableConfigurations) {\n      final SingleConfigurationConfigurable configurable = bean.getConfigurable();\n      if (configurable != null) {\n        applyConfiguration(typeNode, configurable);\n      }\n    }\n\n    // if apply succeeded, update the list of configurations in RunManager\n    manager.removeConfigurations(type);\n    for (final RunConfigurationBean stableConfiguration : stableConfigurations) {\n      manager.addConfiguration(stableConfiguration.getSettings(),\n                               stableConfiguration.isShared(),\n                               stableConfiguration.getStepsBeforeLaunch());\n    }\n\n    if (tempConfiguration != null) {\n      manager.setTemporaryConfiguration(tempConfiguration);\n    }\n  }","commit_id":"b7f7a1bea87d315aa7fe0e5588784506ca66d460","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String createUniqueName(DefaultMutableTreeNode typeNode) {\n    String str = ExecutionBundle.message(\"run.configuration.unnamed.name.prefix\");\n    final ArrayList<String> currentNames = new ArrayList<String>();\n    for (int i = 0; i < typeNode.getChildCount(); i++) {\n      currentNames.add(((SingleConfigurationConfigurable)((DefaultMutableTreeNode)typeNode.getChildAt(i)).getUserObject()).getNameText());\n    }\n    if (!currentNames.contains(str)) return str;\n    int i = 1;\n    while (true) {\n      if (!currentNames.contains(str + i)) return str + i;\n      i++;\n    }\n  }","id":1056,"modified_method":"private static String createUniqueName(DefaultMutableTreeNode typeNode) {\n    String str = ExecutionBundle.message(\"run.configuration.unnamed.name.prefix\");\n    final ArrayList<String> currentNames = new ArrayList<String>();\n    for (int i = 0; i < typeNode.getChildCount(); i++) {\n      final Object userObject = ((DefaultMutableTreeNode)typeNode.getChildAt(i)).getUserObject();\n      if (userObject instanceof SingleConfigurationConfigurable) {\n        currentNames.add(((SingleConfigurationConfigurable)userObject).getNameText());\n      } else if (userObject instanceof RunnerAndConfigurationSettingsImpl) {\n        currentNames.add(((RunnerAndConfigurationSettingsImpl)userObject).getName());\n      }\n    }\n    if (!currentNames.contains(str)) return str;\n    int i = 1;\n    while (true) {\n      if (!currentNames.contains(str + i)) return str + i;\n      i++;\n    }\n  }","commit_id":"b7f7a1bea87d315aa7fe0e5588784506ca66d460","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    protected Endpoint selectEndpoint(Message message, Set<Endpoint> eps) {\n        \n        InputStream is = message.getContent(InputStream.class);        \n        if (is == null) {\n            return null;\n        }\n        //cache the input stream\n        CachedOutputStream bos = new CachedOutputStream(4096);\n        try {\n            IOUtils.copy(is, bos);\n            is.close();\n            \n            message.setContent(InputStream.class, bos.getInputStream());\n        \n            String encoding = (String)message.get(Message.ENCODING);\n\n            XMLStreamReader xsr;\n            xsr = StaxInInterceptor.getXMLInputFactory(message).\n                createXMLStreamReader(bos.getInputStream(), encoding);\n            \n            // move to the soap body            \n            while (true) {                \n                xsr.nextTag();              \n                \n                if (\"Body\".equals(xsr.getName().getLocalPart())) {\n                    break;\n                }\n            }\n            \n            xsr.nextTag();\n            if (!xsr.isStartElement()) {\n                return null;\n            }\n            \n            String methodName = xsr.getName().getLocalPart();\n            //if the incoming message has a element containes \"SayHi\", we redirect the message\n            //to the new version of service on endpoint \"local://localhost:9027/SoapContext/version2/SoapPort\"\n            for (Endpoint ep : eps) {               \n                if (methodName.indexOf(\"sayHi\") != -1) {\n                    if (\"2\".equals(ep.get(\"version\"))) {\n                        return ep;\n                    }\n                } else if (\"1\".equals(ep.get(\"version\"))) {\n                    return ep;\n                }\n            }\n            bos.close();            \n        } catch (Exception e) {\n            throw new Fault(e);\n        }    \n        return null;\n    }","id":1057,"modified_method":"@Override\n    protected Endpoint selectEndpoint(Message message, Set<Endpoint> eps) {\n        \n        InputStream is = message.getContent(InputStream.class);        \n        if (is == null) {\n            return null;\n        }\n        //cache the input stream\n        CachedOutputStream bos = new CachedOutputStream(4096);\n        try {\n            IOUtils.copy(is, bos);\n            is.close();\n            \n            message.setContent(InputStream.class, bos.getInputStream());\n        \n            String encoding = (String)message.get(Message.ENCODING);\n\n            XMLStreamReader xsr;\n            XMLInputFactory factory = StaxInInterceptor.getXMLInputFactory(message);\n            synchronized (factory) {\n                xsr = factory.createXMLStreamReader(bos.getInputStream(), encoding);\n            }\n            \n            // move to the soap body            \n            while (true) {                \n                xsr.nextTag();              \n                \n                if (\"Body\".equals(xsr.getName().getLocalPart())) {\n                    break;\n                }\n            }\n            \n            xsr.nextTag();\n            if (!xsr.isStartElement()) {\n                return null;\n            }\n            \n            String methodName = xsr.getName().getLocalPart();\n            //if the incoming message has a element containes \"SayHi\", we redirect the message\n            //to the new version of service on endpoint \"local://localhost:9027/SoapContext/version2/SoapPort\"\n            for (Endpoint ep : eps) {               \n                if (methodName.indexOf(\"sayHi\") != -1) {\n                    if (\"2\".equals(ep.get(\"version\"))) {\n                        return ep;\n                    }\n                } else if (\"1\".equals(ep.get(\"version\"))) {\n                    return ep;\n                }\n            }\n            bos.close();            \n        } catch (Exception e) {\n            throw new Fault(e);\n        }    \n        return null;\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public void handleMessage(SoapMessage message) throws Fault {\n        SOAPMessage saaj = message.getContent(SOAPMessage.class);\n\n        try { \n            if (message.hasHeaders()\n                && saaj != null \n                && saaj.getSOAPPart().getEnvelope().getHeader() == null) {\n\n                // creating an empty SOAPHeader at this point in the\n                // pre-existing SOAPMessage avoids the <soap:body> and \n                // <soap:header> appearing in reverse order when the envolope\n                // is written to the wire\n                //\n                saaj.getSOAPPart().getEnvelope().addHeader();\n            }\n        } catch (SOAPException e) {\n            throw new SoapFault(new Message(\"SOAPEXCEPTION\", BUNDLE), \n                                e,\n                                message.getVersion().getSender());\n        }    \n\n        if (saaj == null) {\n            SoapVersion version = message.getVersion();\n            try {\n                MessageFactory factory = getFactory(message);\n                SOAPMessage soapMessage = factory.createMessage();\n\n                SOAPPart soapPart = soapMessage.getSOAPPart();\n                \n                XMLStreamWriter origWriter = message.getContent(XMLStreamWriter.class);\n                message.put(ORIGINAL_XML_WRITER, origWriter);\n                W3CDOMStreamWriter writer = new W3CDOMStreamWriter(soapPart);\n                // Replace stax writer with DomStreamWriter\n                message.setContent(XMLStreamWriter.class, writer);\n                message.setContent(SOAPMessage.class, soapMessage);\n                \n                \n            } catch (SOAPException e) {\n                throw new SoapFault(new Message(\"SOAPEXCEPTION\", BUNDLE), e, version.getSender());\n            }\n        } else if (!message.containsKey(ORIGINAL_XML_WRITER)) {\n            //as the SOAPMessage already has everything in place, we do not need XMLStreamWriter to write\n            //anything for us, so we just set XMLStreamWriter's output to a dummy output stream.         \n            try {\n                XMLStreamWriter origWriter = message.getContent(XMLStreamWriter.class);\n                message.put(ORIGINAL_XML_WRITER, origWriter);\n                \n                XMLStreamWriter dummyWriter = StaxUtils.getXMLOutputFactory()\n                    .createXMLStreamWriter(new OutputStream() {\n                        public void write(int b) throws IOException {\n                        }\n                        public void write(byte b[], int off, int len) throws IOException {\n                        }                        \n                    });\n                message.setContent(XMLStreamWriter.class, dummyWriter);\n            } catch (XMLStreamException e) {\n                // do nothing\n            }   \n        }\n        \n        // Add a final interceptor to write the message\n        message.getInterceptorChain().add(SAAJOutEndingInterceptor.INSTANCE);\n    }","id":1058,"modified_method":"public void handleMessage(SoapMessage message) throws Fault {\n        SOAPMessage saaj = message.getContent(SOAPMessage.class);\n\n        try { \n            if (message.hasHeaders()\n                && saaj != null \n                && saaj.getSOAPPart().getEnvelope().getHeader() == null) {\n\n                // creating an empty SOAPHeader at this point in the\n                // pre-existing SOAPMessage avoids the <soap:body> and \n                // <soap:header> appearing in reverse order when the envolope\n                // is written to the wire\n                //\n                saaj.getSOAPPart().getEnvelope().addHeader();\n            }\n        } catch (SOAPException e) {\n            throw new SoapFault(new Message(\"SOAPEXCEPTION\", BUNDLE), \n                                e,\n                                message.getVersion().getSender());\n        }    \n\n        if (saaj == null) {\n            SoapVersion version = message.getVersion();\n            try {\n                MessageFactory factory = getFactory(message);\n                SOAPMessage soapMessage = factory.createMessage();\n\n                SOAPPart soapPart = soapMessage.getSOAPPart();\n                \n                XMLStreamWriter origWriter = message.getContent(XMLStreamWriter.class);\n                message.put(ORIGINAL_XML_WRITER, origWriter);\n                W3CDOMStreamWriter writer = new W3CDOMStreamWriter(soapPart);\n                // Replace stax writer with DomStreamWriter\n                message.setContent(XMLStreamWriter.class, writer);\n                message.setContent(SOAPMessage.class, soapMessage);\n                \n                \n            } catch (SOAPException e) {\n                throw new SoapFault(new Message(\"SOAPEXCEPTION\", BUNDLE), e, version.getSender());\n            }\n        } else if (!message.containsKey(ORIGINAL_XML_WRITER)) {\n            //as the SOAPMessage already has everything in place, we do not need XMLStreamWriter to write\n            //anything for us, so we just set XMLStreamWriter's output to a dummy output stream.         \n            XMLStreamWriter origWriter = message.getContent(XMLStreamWriter.class);\n            message.put(ORIGINAL_XML_WRITER, origWriter);\n            \n            XMLStreamWriter dummyWriter = StaxUtils.createXMLStreamWriter(new OutputStream() {\n                    public void write(int b) throws IOException {\n                    }\n                    public void write(byte b[], int off, int len) throws IOException {\n                    }                        \n                });\n            message.setContent(XMLStreamWriter.class, dummyWriter);\n        }\n        \n        // Add a final interceptor to write the message\n        message.getInterceptorChain().add(SAAJOutEndingInterceptor.INSTANCE);\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * Default constructor.\n     */\n    public StaxBuilder() {\n        xifactory = StaxUtils.getXMLInputFactory();\n    }","id":1059,"modified_method":"/**\n     * Default constructor.\n     */\n    public StaxBuilder() {\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public Document build(Reader reader) throws XMLStreamException {\n        isReadingMidStream = false;\n        return buildInternal(xifactory.createXMLStreamReader(reader));\n    }","id":1060,"modified_method":"public Document build(Reader reader) throws XMLStreamException {\n        isReadingMidStream = false;\n        return buildInternal(StaxUtils.createXMLStreamReader(reader));\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public StaxBuilder(Map namespaces) {\n        xifactory = StaxUtils.getXMLInputFactory();\n        this.additionalNamespaces = namespaces;\n    }","id":1061,"modified_method":"public StaxBuilder(Map namespaces) {\n        this.additionalNamespaces = namespaces;\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public Document build(InputStream is) throws XMLStreamException {\n        isReadingMidStream = false;\n        return buildInternal(xifactory.createXMLStreamReader(is));\n    }","id":1062,"modified_method":"public Document build(InputStream is) throws XMLStreamException {\n        isReadingMidStream = false;\n        return buildInternal(StaxUtils.createXMLStreamReader(is));\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public void handleMessage(Message message) {\n        if (isGET(message) || message.getContentFormats().contains(XMLStreamReader.class)) {\n            LOG.fine(\"StaxInInterceptor skipped.\");\n            return;\n        }\n        InputStream is = message.getContent(InputStream.class);\n        assert is != null;\n\n        String contentType = (String)message.get(Message.CONTENT_TYPE);\n        \n        if (contentType != null && contentType.contains(\"text/html\")) {\n            String htmlMessage = null;\n            try {\n                htmlMessage = IOUtils.toString(is, 500);\n            } catch (IOException e) {\n                throw new Fault(new org.apache.cxf.common.i18n.Message(\"INVALID_HTML_RESPONSETYPE\",\n                        LOG, \"(none)\"));\n            }\n            throw new Fault(new org.apache.cxf.common.i18n.Message(\"INVALID_HTML_RESPONSETYPE\",\n                    LOG, (htmlMessage == null || htmlMessage.length() == 0) ? \"(none)\" : htmlMessage));\n        }\n        \n        String encoding = (String)message.get(Message.ENCODING);\n\n        XMLStreamReader reader;\n        try {\n            reader = getXMLInputFactory(message).createXMLStreamReader(is, encoding);\n        } catch (XMLStreamException e) {\n            throw new Fault(new org.apache.cxf.common.i18n.Message(\"STREAM_CREATE_EXC\",\n                                                                   LOG,\n                                                                   encoding), e);\n        }\n\n        message.setContent(XMLStreamReader.class, reader);\n    }","id":1063,"modified_method":"public void handleMessage(Message message) {\n        if (isGET(message) || message.getContentFormats().contains(XMLStreamReader.class)) {\n            LOG.fine(\"StaxInInterceptor skipped.\");\n            return;\n        }\n        InputStream is = message.getContent(InputStream.class);\n        assert is != null;\n\n        String contentType = (String)message.get(Message.CONTENT_TYPE);\n        \n        if (contentType != null && contentType.contains(\"text/html\")) {\n            String htmlMessage = null;\n            try {\n                htmlMessage = IOUtils.toString(is, 500);\n            } catch (IOException e) {\n                throw new Fault(new org.apache.cxf.common.i18n.Message(\"INVALID_HTML_RESPONSETYPE\",\n                        LOG, \"(none)\"));\n            }\n            throw new Fault(new org.apache.cxf.common.i18n.Message(\"INVALID_HTML_RESPONSETYPE\",\n                    LOG, (htmlMessage == null || htmlMessage.length() == 0) ? \"(none)\" : htmlMessage));\n        }\n        \n        String encoding = (String)message.get(Message.ENCODING);\n\n        XMLStreamReader reader;\n        try {\n            XMLInputFactory factory = getXMLInputFactory(message);\n            synchronized (factory) {\n                reader = factory.createXMLStreamReader(is, encoding);\n            }\n        } catch (XMLStreamException e) {\n            throw new Fault(new org.apache.cxf.common.i18n.Message(\"STREAM_CREATE_EXC\",\n                                                                   LOG,\n                                                                   encoding), e);\n        }\n\n        message.setContent(XMLStreamReader.class, reader);\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public void handleMessage(Message message) {\n        OutputStream os = message.getContent(OutputStream.class);\n        XMLStreamWriter writer = message.getContent(XMLStreamWriter.class);\n        if (os == null || writer != null) {\n            return;\n        }\n\n        String encoding = getEncoding(message);\n        \n        try {\n            writer = getXMLOutputFactory(message).createXMLStreamWriter(os, encoding);\n            if (Boolean.TRUE.equals(message.getContextualProperty(FORCE_START_DOCUMENT))) {\n                writer.writeStartDocument(encoding, \"1.0\");\n                message.removeContent(OutputStream.class);\n                message.put(OUTPUT_STREAM_HOLDER, os);\n            }\n        } catch (XMLStreamException e) {\n            throw new Fault(new org.apache.cxf.common.i18n.Message(\"STREAM_CREATE_EXC\", BUNDLE), e);\n        }\n        message.setContent(XMLStreamWriter.class, writer);\n\n        // Add a final interceptor to write end elements\n        message.getInterceptorChain().add(ending);\n    }","id":1064,"modified_method":"public void handleMessage(Message message) {\n        OutputStream os = message.getContent(OutputStream.class);\n        XMLStreamWriter writer = message.getContent(XMLStreamWriter.class);\n        if (os == null || writer != null) {\n            return;\n        }\n\n        String encoding = getEncoding(message);\n        \n        try {\n            XMLOutputFactory factory = getXMLOutputFactory(message);\n            synchronized (factory) {\n                writer = factory.createXMLStreamWriter(os, encoding);\n            }\n            if (Boolean.TRUE.equals(message.getContextualProperty(FORCE_START_DOCUMENT))) {\n                writer.writeStartDocument(encoding, \"1.0\");\n                message.removeContent(OutputStream.class);\n                message.put(OUTPUT_STREAM_HOLDER, os);\n            }\n        } catch (XMLStreamException e) {\n            throw new Fault(new org.apache.cxf.common.i18n.Message(\"STREAM_CREATE_EXC\", BUNDLE), e);\n        }\n        message.setContent(XMLStreamWriter.class, writer);\n\n        // Add a final interceptor to write end elements\n        message.getInterceptorChain().add(ending);\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public static XMLStreamWriter createXMLStreamWriter(OutputStream out, String encoding) {\n        if (encoding == null) {\n            encoding = \"UTF-8\";\n        }\n\n        try {\n            return getXMLOutputFactory().createXMLStreamWriter(out, encoding);\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Cant' create XMLStreamWriter\", e);\n        }\n    }","id":1065,"modified_method":"public static XMLStreamWriter createXMLStreamWriter(OutputStream out, String encoding) {\n        if (encoding == null) {\n            encoding = \"UTF-8\";\n        }\n\n        try {\n            XMLOutputFactory factory = getXMLOutputFactory();\n            synchronized (factory) {\n                return factory.createXMLStreamWriter(out, encoding);\n            }\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Cant' create XMLStreamWriter\", e);\n        }\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * @param in\n     * @return\n     */\n    public static XMLStreamReader createXMLStreamReader(InputStream in) {\n        try {\n            return getXMLInputFactory().createXMLStreamReader(in);\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Couldn't parse stream.\", e);\n        }\n    }","id":1066,"modified_method":"/**\n     * @param in\n     * @return\n     */\n    public static XMLStreamReader createXMLStreamReader(InputStream in) {\n        try {\n            XMLInputFactory factory = getXMLInputFactory();\n            synchronized (factory) {\n                return factory.createXMLStreamReader(in);\n            }\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Couldn't parse stream.\", e);\n        }\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public static XMLStreamWriter createXMLStreamWriter(Result r) {\n        try {\n            return getXMLOutputFactory().createXMLStreamWriter(r);\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Cant' create XMLStreamWriter\", e);\n        }\n    }","id":1067,"modified_method":"public static XMLStreamWriter createXMLStreamWriter(Result r) {\n        try {\n            XMLOutputFactory factory = getXMLOutputFactory();\n            synchronized (factory) {\n                return factory.createXMLStreamWriter(r);\n            }\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Cant' create XMLStreamWriter\", e);\n        }\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public static XMLStreamWriter createXMLStreamWriter(Writer out) {\n        try {\n            return getXMLOutputFactory().createXMLStreamWriter(out);\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Cant' create XMLStreamWriter\", e);\n        }\n    }","id":1068,"modified_method":"public static XMLStreamWriter createXMLStreamWriter(Writer out) {\n        try {\n            XMLOutputFactory factory = getXMLOutputFactory();\n            synchronized (factory) {\n                return factory.createXMLStreamWriter(out);\n            }\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Cant' create XMLStreamWriter\", e);\n        }\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public static XMLStreamReader createXMLStreamReader(String systemId, InputStream in) {\n        try {\n            return getXMLInputFactory().createXMLStreamReader(systemId, in);\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Couldn't parse stream.\", e);\n        }\n    }","id":1069,"modified_method":"public static XMLStreamReader createXMLStreamReader(String systemId, InputStream in) {\n        try {\n            XMLInputFactory factory = getXMLInputFactory();\n            synchronized (factory) {\n                return factory.createXMLStreamReader(systemId, in);\n            }\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Couldn't parse stream.\", e);\n        }\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * @param in\n     * @param encoding\n     * @param ctx\n     * @return\n     */\n    public static XMLStreamReader createXMLStreamReader(InputStream in, String encoding) {\n        if (encoding == null) {\n            encoding = \"UTF-8\";\n        }\n\n        try {\n            return getXMLInputFactory().createXMLStreamReader(in, encoding);\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Couldn't parse stream.\", e);\n        }\n    }","id":1070,"modified_method":"/**\n     * @param in\n     * @param encoding\n     * @param ctx\n     * @return\n     */\n    public static XMLStreamReader createXMLStreamReader(InputStream in, String encoding) {\n        if (encoding == null) {\n            encoding = \"UTF-8\";\n        }\n\n        try {\n            XMLInputFactory factory = getXMLInputFactory();\n            synchronized (factory) {\n                return factory.createXMLStreamReader(in, encoding);\n            }\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Couldn't parse stream.\", e);\n        }\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * @param reader\n     * @return\n     */\n    public static XMLStreamReader createXMLStreamReader(Reader reader) {\n\n        try {\n            return getXMLInputFactory().createXMLStreamReader(reader);\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Couldn't parse stream.\", e);\n        }\n    }","id":1071,"modified_method":"/**\n     * @param reader\n     * @return\n     */\n    public static XMLStreamReader createXMLStreamReader(Reader reader) {\n\n        try {\n            XMLInputFactory factory = getXMLInputFactory();\n            synchronized (factory) {\n                return factory.createXMLStreamReader(reader);\n            }\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Couldn't parse stream.\", e);\n        }\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public static XMLStreamReader createFilteredReader(XMLStreamReader reader, StreamFilter filter) {\n        try {\n            return getXMLInputFactory().createFilteredReader(reader, filter);\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Cant' create XMLStreamReader\", e);\n        }\n    }","id":1072,"modified_method":"public static XMLStreamReader createFilteredReader(XMLStreamReader reader, StreamFilter filter) {\n        try {\n            XMLInputFactory factory = getXMLInputFactory();\n            synchronized (factory) {\n                return factory.createFilteredReader(reader, filter);\n            }\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Cant' create XMLStreamReader\", e);\n        }\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public static XMLStreamReader createXMLStreamReader(Source source) {\n        try {\n            if (source instanceof DOMSource) {\n                DOMSource ds = (DOMSource)source;\n                Node nd = ds.getNode();\n                Element el = null;\n                if (nd instanceof Document) {\n                    el = ((Document)nd).getDocumentElement();\n                } else if (nd instanceof Element) {\n                    el = (Element)nd;\n                }\n                \n                if (null != el) {\n                    return new W3CDOMStreamReader(el);\n                }\n            }\n            \n            return getXMLInputFactory().createXMLStreamReader(source);\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Couldn't parse stream.\", e);\n        }\n    }","id":1073,"modified_method":"public static XMLStreamReader createXMLStreamReader(Source source) {\n        try {\n            if (source instanceof DOMSource) {\n                DOMSource ds = (DOMSource)source;\n                Node nd = ds.getNode();\n                Element el = null;\n                if (nd instanceof Document) {\n                    el = ((Document)nd).getDocumentElement();\n                } else if (nd instanceof Element) {\n                    el = (Element)nd;\n                }\n                \n                if (null != el) {\n                    return new W3CDOMStreamReader(el);\n                }\n            }\n            XMLInputFactory factory = getXMLInputFactory();\n            synchronized (factory) {\n                return factory.createXMLStreamReader(source);\n            }\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Couldn't parse stream.\", e);\n        }\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"private void mergeParams(Message message, String path, String method, MessagePartInfo part,\n                             List<Param> params) {\n        // TODO: If its a POST/PUT operation we probably need to merge the\n        // incoming doc\n        Document doc;\n        Collection<SchemaInfo> schemas = part.getMessageInfo().getOperation()\n            .getInterface().getService().getSchemas();\n        if (\"POST\".equals(method) || \"PUT\".equals(method)) {\n            XMLInputFactory inputFactory = StaxInInterceptor.getXMLInputFactory(message);\n            try {\n                XMLStreamReader reader = \n                    inputFactory.createXMLStreamReader(message.getContent(InputStream.class));\n                doc = StaxUtils.read(reader);\n            } catch (XMLStreamException e) {\n                throw new Fault(e);\n            }\n            doc = IriDecoderHelper.interopolateParams(doc, \n                                                      part.getXmlSchema(),\n                                                      schemas,\n                                                      params);\n        } else {\n            doc = IriDecoderHelper.buildDocument(part.getXmlSchema(),\n                                                 schemas,\n                                                 params);\n        }\n\n        XMLStreamReader reader = StaxUtils.createXMLStreamReader(new DOMSource(doc));\n        try {\n            reader.next();\n        } catch (XMLStreamException e) {\n            throw new Fault(e);\n        }\n        message.setContent(XMLStreamReader.class, reader);\n    }","id":1074,"modified_method":"private void mergeParams(Message message, String path, String method, MessagePartInfo part,\n                             List<Param> params) {\n        // TODO: If its a POST/PUT operation we probably need to merge the\n        // incoming doc\n        Document doc;\n        Collection<SchemaInfo> schemas = part.getMessageInfo().getOperation()\n            .getInterface().getService().getSchemas();\n        if (\"POST\".equals(method) || \"PUT\".equals(method)) {\n            XMLInputFactory inputFactory = StaxInInterceptor.getXMLInputFactory(message);\n            try {\n                XMLStreamReader reader;\n                synchronized (inputFactory) {\n                    reader = inputFactory.createXMLStreamReader(message.getContent(InputStream.class));\n                }\n                doc = StaxUtils.read(reader);\n            } catch (XMLStreamException e) {\n                throw new Fault(e);\n            }\n            doc = IriDecoderHelper.interopolateParams(doc, \n                                                      part.getXmlSchema(),\n                                                      schemas,\n                                                      params);\n        } else {\n            doc = IriDecoderHelper.buildDocument(part.getXmlSchema(),\n                                                 schemas,\n                                                 params);\n        }\n\n        XMLStreamReader reader = StaxUtils.createXMLStreamReader(new DOMSource(doc));\n        try {\n            reader.next();\n        } catch (XMLStreamException e) {\n            throw new Fault(e);\n        }\n        message.setContent(XMLStreamReader.class, reader);\n    }","commit_id":"d7c8eed4bbb875456f93cdc6ce7459d8ccb18078","url":"https://github.com/apache/cxf"},{"original_method":"public void actionPerformed(ActionEvent e)\n    {\n        if(e.getSource() == activate)\n        {\n            NotificationsTableEntry tmpNTE \n                    = (NotificationsTableEntry) dataVector.elementAt(index);\n            tmpNTE.setEnabled(true);\n            this.updateTableRow(tmpNTE, index);\n            activate.setEnabled(false);\n            desactivate.setEnabled(true);\n            tmpNTE.setModify(true);\n        }    \n        else if(e.getSource() == desactivate)\n        {\n            NotificationsTableEntry tmpNTE \n                    = (NotificationsTableEntry) dataVector.elementAt(index);\n            tmpNTE.setEnabled(false);\n            this.updateTableRow(tmpNTE, index);\n            activate.setEnabled(true);\n            desactivate.setEnabled(false);\n            tmpNTE.setModify(true);\n        }\n        else if(e.getSource() == soundFileChooser)\n        {\n            int returnVal = fileChooserSound.showOpenDialog(this);\n            \n            noListener = true;\n            if (returnVal == JFileChooser.APPROVE_OPTION)\n            {\n                try\n                {\n                    NotificationsTableEntry tmpNTE = (NotificationsTableEntry) dataVector.elementAt(index);\n                    File file = fileChooserSound.getSelectedFile();\n                    //This is where a real application would open the file.\n                    logger.debug(\"Opening: \" + file.toURL().toExternalForm());\n                    tmpNTE.setSoundFile(file.toURL().toExternalForm());\n                    tmpNTE.setSound(true);\n                    tmpNTE.setModify(true);\n                    this.updateTableRow(tmpNTE, index);\n                    notificationList.setLine(tmpNTE, index);\n                    soundFileTextField.setText(file.toURL().toExternalForm());\n                }\n                catch (MalformedURLException ex)\n                {\n                    logger.error(\"Error file path parsing\", ex);\n                }\n            }\n            else\n            {\n                logger.debug(\"Open command cancelled by user.\");\n            }\n            noListener = false;\n        }\n        else if(e.getSource() == programFileChooser)\n        {\n            int returnVal = fileChooserProgram.showOpenDialog(this);\n            noListener = true;\n            \n            if (returnVal == JFileChooser.APPROVE_OPTION)\n            {\n                NotificationsTableEntry tmpNTE\n                        = (NotificationsTableEntry)dataVector.elementAt(index);\n                File file = fileChooserProgram.getSelectedFile();\n                //This is where a real application would open the file.\n                logger.debug(\"Opening: \" +file.getAbsolutePath());\n                tmpNTE.setProgramFile(file.getAbsolutePath());\n                tmpNTE.setProgram(true);\n                tmpNTE.setModify(true);\n                this.updateTableRow(tmpNTE,index);\n                notificationList.setLine(tmpNTE,index);\n                programFileTextField.setText(file.getAbsolutePath());\n            }\n            else\n            {\n                logger.debug(\"Open command cancelled by user.\");\n            }\n            noListener = false;\n        }\n        else if(e.getSource() == playSoundButton)\n        {\n            if(playSoundCheckBox.isSelected() == true)\n            {\n                String soundFile = soundFileTextField.getText();\n                \n                logger.debug(\"****\"+soundFile+\"****\"+soundFile.length());\n                if(soundFile.length() != 0)\n                {\n                    AudioNotifierService audioNotifServ \n                            = NotificationConfigurationActivator\n                            .getAudioNotifierService();\n                    SCAudioClip sound = audioNotifServ.createAudio(soundFile);\n                    sound.play();\n                    //audioNotifServ.destroyAudio(sound);\n                }\n                else\n                {\n                    logger.debug(\"Aucun fichier specifie\");\n                }\n            }\n            else\n            {\n                logger.debug(\"Son non actif\");\n            }\n        }\n        else if(e.getSource() == turnOnAll)\n        {\n            Iterator it = dataVector.iterator();\n            NotificationsTableEntry tmpNTE = null;\n            int cpt = 0;\n            \n            if(!it.hasNext())\n                return;\n            \n            turnAll = true;\n            while(it.hasNext())\n            {\n                tmpNTE = (NotificationsTableEntry)it.next();\n                if(((String)comboBoxTurnOn.getSelectedItem()).equals(\"Sounds\"))\n                {\n                    if(tmpNTE.getSoundFile().trim().length() != 0)\n                    {\n                        tmpNTE.setSound(true);\n                        tmpNTE.setModify(true);\n                    }\n                }\n                if(((String)comboBoxTurnOn.getSelectedItem())\n                        .equals(\"Program Execution\"))\n                {\n                    if(tmpNTE.getProgramFile().trim().length() != 0)\n                    {\n                        tmpNTE.setProgram(true);\n                        tmpNTE.setModify(true);\n                    }\n                }\n                if(((String)comboBoxTurnOn.getSelectedItem())\n                        .equals(\"Messages Popup\"))\n                {\n                    tmpNTE.setPopup(true);\n                    tmpNTE.setModify(true);\n                }\n                notificationList.setLine(tmpNTE, cpt);\n                cpt ++;\n            }\n            notificationList.setRowSelectionInterval(index, index);\n            tmpNTE = (NotificationsTableEntry) dataVector.elementAt(index);\n            if(((String)comboBoxTurnOn.getSelectedItem()).equals(\"Sounds\"))\n            {\n                playSoundCheckBox.setSelected(tmpNTE.getSound());\n            }\n            else if(((String)comboBoxTurnOn.getSelectedItem())\n                    .equals(\"Program Execution\"))\n            {\n                programCheckBox.setSelected(tmpNTE.getProgram());\n            }\n            else if(((String)comboBoxTurnOn.getSelectedItem())\n                    .equals(\"Messages Popup\"))\n            {\n                popupCheckBox.setSelected(tmpNTE.getPopup());\n            }\n            turnAll = false;\n        }\n        else if(e.getSource() == turnOffAll)\n        {\n            Iterator it = dataVector.iterator();\n            NotificationsTableEntry tmpNTE = null;\n            int cpt = 0;\n            \n            if(!it.hasNext())\n                return;\n            \n            turnAll = true;\n            while(it.hasNext())\n            {\n                tmpNTE = (NotificationsTableEntry)it.next();\n                if(((String)comboBoxTurnOff.getSelectedItem()).equals(\"Sounds\"))\n                {\n                    tmpNTE.setSound(false);\n                    tmpNTE.setModify(true);\n                }\n                if(((String)comboBoxTurnOff.getSelectedItem())\n                        .equals(\"Program Execution\"))\n                {\n                    tmpNTE.setProgram(false);\n                    tmpNTE.setModify(true);\n                }\n                if(((String)comboBoxTurnOff.getSelectedItem())\n                        .equals(\"Messages Popup\"))\n                {\n                    tmpNTE.setPopup(false);\n                    tmpNTE.setModify(true);\n                }\n                notificationList.setLine(tmpNTE, cpt);\n                cpt ++;\n            }\n            notificationList.setRowSelectionInterval(index, index);\n            tmpNTE = (NotificationsTableEntry) dataVector.elementAt(index);\n            if(((String)comboBoxTurnOn.getSelectedItem()).equals(\"Sounds\"))\n            {\n                playSoundCheckBox.setSelected(tmpNTE.getSound());\n            }\n            else if(((String)comboBoxTurnOn.getSelectedItem())\n                    .equals(\"Program Execution\"))\n            {\n                programCheckBox.setSelected(tmpNTE.getProgram());\n            }\n            else if(((String)comboBoxTurnOn.getSelectedItem())\n                    .equals(\"Messages Popup\"))\n            {\n                popupCheckBox.setSelected(tmpNTE.getPopup());\n            }\n            turnAll = false;\n        }\n        else if(e.getSource() == apply)\n        {          \n            Iterator it = dataVector.iterator();\n            NotificationsTableEntry tmpNTE = null;\n            while(it.hasNext())\n            {\n                tmpNTE = (NotificationsTableEntry) it.next();\n\n                if(tmpNTE.isModified())\n                {\n                    logger.debug(\"Event modify : \"+tmpNTE.getEvent());\n                    \n                    notificationService.setActive(tmpNTE.getEvent(),\n                            tmpNTE.getEnabled());\n                    if(tmpNTE.getSound() == true)\n                    {\n                        notificationService.registerNotificationForEvent(\n                                tmpNTE.getEvent(),\n                                notificationService.ACTION_SOUND,\n                                tmpNTE.getSoundFile(),\n                                \"\");\n                        logger.debug(\"Adding Sound\");\n                    }\n                    else\n                    {\n                        notificationService.removeEventNotificationAction(\n                                tmpNTE.getEvent(),\n                                notificationService.ACTION_SOUND);\n                        logger.debug(\"Deleting Sound\");\n                    }\n                    \n                    if(tmpNTE.getProgram() == true)\n                    {\n                        notificationService.registerNotificationForEvent(\n                                tmpNTE.getEvent(),\n                                notificationService.ACTION_COMMAND,\n                                tmpNTE.getProgramFile(),\n                                \"\");\n                        logger.debug(\"Program\");\n                    }\n                    else\n                    {\n                        notificationService.removeEventNotificationAction(\n                                tmpNTE.getEvent(),\n                                notificationService.ACTION_COMMAND);\n                        logger.debug(\"Deleting Program\");\n                    }\n                    \n                    if(tmpNTE.getPopup())\n                    {\n                        notificationService.registerNotificationForEvent(\n                                tmpNTE.getEvent(),\n                                notificationService.ACTION_POPUP_MESSAGE,\n                                \"\",\n                                \"\");\n                        logger.debug(\"Popup\");\n                    }\n                    else\n                    {\n                        notificationService.removeEventNotificationAction(\n                                tmpNTE.getEvent(),\n                                notificationService.ACTION_POPUP_MESSAGE);\n                        logger.debug(\"Deleting Popup\");\n                    }\n                    tmpNTE.setModify(false);\n                }\n            }\n        }\n    }","id":1075,"modified_method":"public void actionPerformed(ActionEvent e)\n    {\n        if(e.getSource() == activate)\n        {\n            NotificationsTableEntry tmpNTE \n                    = (NotificationsTableEntry) dataVector.elementAt(index);\n            tmpNTE.setEnabled(true);\n            this.updateTableRow(tmpNTE, index);\n            activate.setEnabled(false);\n            desactivate.setEnabled(true);\n            tmpNTE.setModify(true);\n        }    \n        else if(e.getSource() == desactivate)\n        {\n            NotificationsTableEntry tmpNTE \n                    = (NotificationsTableEntry) dataVector.elementAt(index);\n            tmpNTE.setEnabled(false);\n            this.updateTableRow(tmpNTE, index);\n            activate.setEnabled(true);\n            desactivate.setEnabled(false);\n            tmpNTE.setModify(true);\n        }\n        else if(e.getSource() == soundFileChooser)\n        {\n            int returnVal = fileChooserSound.showOpenDialog(this);\n            \n            noListener = true;\n            if (returnVal == JFileChooser.APPROVE_OPTION)\n            {\n                try\n                {\n                    NotificationsTableEntry tmpNTE = (NotificationsTableEntry) dataVector.elementAt(index);\n                    File file = fileChooserSound.getSelectedFile();\n                    //This is where a real application would open the file.\n                    logger.debug(\"Opening: \" + file.toURL().toExternalForm());\n                    tmpNTE.setSoundFile(file.toURL().toExternalForm());\n                    tmpNTE.setSound(true);\n                    tmpNTE.setModify(true);\n                    this.updateTableRow(tmpNTE, index);\n                    notificationList.setLine(tmpNTE, index);\n                    soundFileTextField.setText(file.toURL().toExternalForm());\n                }\n                catch (MalformedURLException ex)\n                {\n                    logger.error(\"Error file path parsing\", ex);\n                }\n            }\n            else\n            {\n                logger.debug(\"Open command cancelled by user.\");\n            }\n            noListener = false;\n        }\n        else if(e.getSource() == programFileChooser)\n        {\n            int returnVal = fileChooserProgram.showOpenDialog(this);\n            noListener = true;\n            \n            if (returnVal == JFileChooser.APPROVE_OPTION)\n            {\n                NotificationsTableEntry tmpNTE\n                        = (NotificationsTableEntry)dataVector.elementAt(index);\n                File file = fileChooserProgram.getSelectedFile();\n                //This is where a real application would open the file.\n                logger.debug(\"Opening: \" +file.getAbsolutePath());\n                tmpNTE.setProgramFile(file.getAbsolutePath());\n                tmpNTE.setProgram(true);\n                tmpNTE.setModify(true);\n                this.updateTableRow(tmpNTE,index);\n                notificationList.setLine(tmpNTE,index);\n                programFileTextField.setText(file.getAbsolutePath());\n            }\n            else\n            {\n                logger.debug(\"Open command cancelled by user.\");\n            }\n            noListener = false;\n        }\n        else if(e.getSource() == playSoundButton)\n        {\n            if(playSoundCheckBox.isSelected() == true)\n            {\n                String soundFile = soundFileTextField.getText();\n                \n                logger.debug(\"****\"+soundFile+\"****\"+soundFile.length());\n                if(soundFile.length() != 0)\n                {\n                    AudioNotifierService audioNotifServ \n                            = NotificationConfigurationActivator\n                            .getAudioNotifierService();\n                    SCAudioClip sound = audioNotifServ.createAudio(soundFile);\n                    sound.play();\n                    //audioNotifServ.destroyAudio(sound);\n                }\n                else\n                {\n                    logger.debug(\"Aucun fichier specifie\");\n                }\n            }\n            else\n            {\n                logger.debug(\"Son non actif\");\n            }\n        }\n        else if(e.getSource() == turnOnAll)\n        {\n            Iterator it = dataVector.iterator();\n            NotificationsTableEntry tmpNTE = null;\n            int cpt = 0;\n            \n            if(!it.hasNext())\n                return;\n            \n            turnAll = true;\n            while(it.hasNext())\n            {\n                tmpNTE = (NotificationsTableEntry)it.next();\n                if(((String)comboBoxTurnOn.getSelectedItem()).equals(\"Sounds\"))\n                {\n                    if(tmpNTE.getSoundFile().trim().length() != 0)\n                    {\n                        tmpNTE.setSound(true);\n                        tmpNTE.setModify(true);\n                    }\n                }\n                if(((String)comboBoxTurnOn.getSelectedItem())\n                        .equals(\"Program Execution\"))\n                {\n                    if(tmpNTE.getProgramFile().trim().length() != 0)\n                    {\n                        tmpNTE.setProgram(true);\n                        tmpNTE.setModify(true);\n                    }\n                }\n                if(((String)comboBoxTurnOn.getSelectedItem())\n                        .equals(\"Messages Popup\"))\n                {\n                    tmpNTE.setPopup(true);\n                    tmpNTE.setModify(true);\n                }\n                notificationList.setLine(tmpNTE, cpt);\n                cpt ++;\n            }\n            notificationList.setRowSelectionInterval(index, index);\n            tmpNTE = (NotificationsTableEntry) dataVector.elementAt(index);\n            if(((String)comboBoxTurnOn.getSelectedItem()).equals(\"Sounds\"))\n            {\n                playSoundCheckBox.setSelected(tmpNTE.getSound());\n                playSoundCheckBox.setEnabled(tmpNTE.getSound());\n            }\n            else if(((String)comboBoxTurnOn.getSelectedItem())\n                    .equals(\"Program Execution\"))\n            {\n                programCheckBox.setSelected(tmpNTE.getProgram());\n                programCheckBox.setEnabled(tmpNTE.getProgram());\n            }\n            else if(((String)comboBoxTurnOn.getSelectedItem())\n                    .equals(\"Messages Popup\"))\n            {\n                popupCheckBox.setSelected(tmpNTE.getPopup());\n                popupCheckBox.setEnabled(tmpNTE.getPopup());\n            }\n            turnAll = false;\n        }\n        else if(e.getSource() == turnOffAll)\n        {\n            Iterator it = dataVector.iterator();\n            NotificationsTableEntry tmpNTE = null;\n            int cpt = 0;\n            \n            if(!it.hasNext())\n                return;\n            \n            turnAll = true;\n            while(it.hasNext())\n            {\n                tmpNTE = (NotificationsTableEntry)it.next();\n                if(((String)comboBoxTurnOff.getSelectedItem()).equals(\"Sounds\"))\n                {\n                    tmpNTE.setSound(false);\n                    tmpNTE.setModify(true);\n                }\n                if(((String)comboBoxTurnOff.getSelectedItem())\n                        .equals(\"Program Execution\"))\n                {\n                    tmpNTE.setProgram(false);\n                    tmpNTE.setModify(true);\n                }\n                if(((String)comboBoxTurnOff.getSelectedItem())\n                        .equals(\"Messages Popup\"))\n                {\n                    tmpNTE.setPopup(false);\n                    tmpNTE.setModify(true);\n                }\n                notificationList.setLine(tmpNTE, cpt);\n                cpt ++;\n            }\n            notificationList.setRowSelectionInterval(index, index);\n            tmpNTE = (NotificationsTableEntry) dataVector.elementAt(index);\n            if(((String)comboBoxTurnOn.getSelectedItem()).equals(\"Sounds\"))\n            {\n                playSoundCheckBox.setSelected(tmpNTE.getSound());\n                playSoundCheckBox.setEnabled(tmpNTE.getSound());\n            }\n            else if(((String)comboBoxTurnOn.getSelectedItem())\n                    .equals(\"Program Execution\"))\n            {\n                programCheckBox.setSelected(tmpNTE.getProgram());\n                programCheckBox.setEnabled(tmpNTE.getProgram());\n            }\n            else if(((String)comboBoxTurnOn.getSelectedItem())\n                    .equals(\"Messages Popup\"))\n            {\n                popupCheckBox.setSelected(tmpNTE.getPopup());\n                popupCheckBox.setEnabled(tmpNTE.getPopup());\n            }\n            turnAll = false;\n        }\n        else if(e.getSource() == apply)\n        {          \n            Iterator it = dataVector.iterator();\n            NotificationsTableEntry tmpNTE = null;\n            while(it.hasNext())\n            {\n                tmpNTE = (NotificationsTableEntry) it.next();\n\n                if(tmpNTE.isModified())\n                {\n                    logger.debug(\"Event modify : \"+tmpNTE.getEvent());\n                    \n                    notificationService.setActive(tmpNTE.getEvent(),\n                            tmpNTE.getEnabled());\n                    if(tmpNTE.getSound() == true)\n                    {\n                        notificationService.registerNotificationForEvent(\n                                tmpNTE.getEvent(),\n                                notificationService.ACTION_SOUND,\n                                tmpNTE.getSoundFile(),\n                                \"\");\n                        logger.debug(\"Adding Sound\");\n                    }\n                    else\n                    {\n                        notificationService.removeEventNotificationAction(\n                                tmpNTE.getEvent(),\n                                notificationService.ACTION_SOUND);\n                        logger.debug(\"Deleting Sound\");\n                    }\n                    \n                    if(tmpNTE.getProgram() == true)\n                    {\n                        notificationService.registerNotificationForEvent(\n                                tmpNTE.getEvent(),\n                                notificationService.ACTION_COMMAND,\n                                tmpNTE.getProgramFile(),\n                                \"\");\n                        logger.debug(\"Program\");\n                    }\n                    else\n                    {\n                        notificationService.removeEventNotificationAction(\n                                tmpNTE.getEvent(),\n                                notificationService.ACTION_COMMAND);\n                        logger.debug(\"Deleting Program\");\n                    }\n                    \n                    if(tmpNTE.getPopup())\n                    {\n                        notificationService.registerNotificationForEvent(\n                                tmpNTE.getEvent(),\n                                notificationService.ACTION_POPUP_MESSAGE,\n                                \"\",\n                                \"\");\n                        logger.debug(\"Popup\");\n                    }\n                    else\n                    {\n                        notificationService.removeEventNotificationAction(\n                                tmpNTE.getEvent(),\n                                notificationService.ACTION_POPUP_MESSAGE);\n                        logger.debug(\"Deleting Popup\");\n                    }\n                    tmpNTE.setModify(false);\n                }\n            }\n        }\n        else if(e.getSource() == restore)\n        {\n            // Register incoming message notifications.\n            notificationService.registerNotificationForEvent(\n                    INCOMING_MESSAGE,\n                    NotificationService.ACTION_POPUP_MESSAGE,\n                    null,\n                    null);\n\n            notificationService.registerNotificationForEvent(\n                    INCOMING_MESSAGE,\n                    NotificationService.ACTION_SOUND,\n                    SOUND_INCOMING_MESSAGE,\n                    null);\n\n            // Register incoming call notifications.\n            notificationService.registerNotificationForEvent(\n                    INCOMING_CALL,\n                    NotificationService.ACTION_POPUP_MESSAGE,\n                    null,\n                    null);\n\n            SoundNotificationHandler inCallSoundHandler\n                = (SoundNotificationHandler) notificationService\n                    .createSoundNotificationHandler(SOUND_INCOMING_CALL, 2000);\n\n            notificationService.registerNotificationForEvent(\n                    INCOMING_CALL,\n                    NotificationService.ACTION_SOUND,\n                    inCallSoundHandler);\n\n            // Register outgoing call notifications.\n            SoundNotificationHandler outCallSoundHandler\n                = (SoundNotificationHandler) notificationService\n                    .createSoundNotificationHandler(SOUND_OUTGOING_CALL, 3000);\n\n            notificationService.registerNotificationForEvent(\n                    OUTGOING_CALL,\n                    NotificationService.ACTION_SOUND,\n                    outCallSoundHandler);\n\n            // Register busy call notifications.\n            SoundNotificationHandler busyCallSoundHandler\n                = (SoundNotificationHandler) notificationService\n                    .createSoundNotificationHandler(SOUND_BUSY, 1);\n\n            notificationService.registerNotificationForEvent(\n                    BUSY_CALL,\n                    NotificationService.ACTION_SOUND,\n                    busyCallSoundHandler);\n            \n            int ix = notificationList.getLine();\n            NotificationsTableEntry tmpNTE\n                    = (NotificationsTableEntry) dataVector.elementAt(ix);\n            updatePanel(tmpNTE);\n        }\n    }","commit_id":"f6c6a37c962a02658f29476dfe17933a47c0597f","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void actionAdded(NotificationActionTypeEvent event)\n    {\n        logger.debug(\"Debut action added\");\n        String eventName = (String) event.getSourceEventType();\n        Iterator it = null;\n        int row = 0;\n        NotificationsTableEntry tmpNTE = null;\n        \n        NotificationActionHandler handler = event.getActionHandler();\n        boolean isActionEnabled = (handler != null && handler.isEnabled());\n        \n        if(dataVector.size() <= 0)\n        {\n            tmpNTE = new NotificationsTableEntry();\n            tmpNTE.setEvent(eventName);\n            \n            \n            \n            if(event.getSourceActionType()\n                    .equals(NotificationService.ACTION_POPUP_MESSAGE))\n            {\n                tmpNTE.setPopup(isActionEnabled);\n            }\n            else if(event.getSourceActionType()\n                    .equals(notificationService.ACTION_COMMAND))\n            {\n                tmpNTE.setProgram(isActionEnabled);\n                \n                tmpNTE.setProgramFile(((CommandNotificationHandler)event\n                        .getActionHandler()).getDescriptor());\n            }\n            else if(event.getSourceActionType()\n                    .equals(NotificationService.ACTION_SOUND))\n            {\n                tmpNTE.setSound(isActionEnabled);\n                \n                tmpNTE.setSoundFile(((SoundNotificationHandler)event\n                        .getActionHandler()).getDescriptor());\n            }\n            this.addRowAtVector(tmpNTE);\n            logger.debug(\"Fin action added\");\n            return;\n        }\n        /*\n         * Si le Vecteur contient des évènements et que l'élément auquel on veut\n         * rajouter l'action existe déjà.\n         */\n        it = dataVector.iterator();\n        while(it.hasNext())\n        {\n            tmpNTE = (NotificationsTableEntry)it.next();\n            if(tmpNTE.getEvent().equals(eventName))\n            {\n                if(event.getSourceActionType()\n                        .equals(NotificationService.ACTION_POPUP_MESSAGE))\n                {\n                    tmpNTE.setPopup(isActionEnabled);\n                     \n                }\n                else if(event.getSourceActionType()\n                        .equals(notificationService.ACTION_COMMAND))\n                {\n                    tmpNTE.setProgram(isActionEnabled);\n                    tmpNTE.setProgramFile(((CommandNotificationHandler)event\n                            .getActionHandler()).getDescriptor());\n                }\n                else if(event.getSourceActionType()\n                        .equals(NotificationService.ACTION_SOUND))\n                {\n                    tmpNTE.setSound(isActionEnabled);\n                    tmpNTE.setSoundFile(((SoundNotificationHandler)event\n                            .getActionHandler()).getDescriptor());\n                }\n                this.updateTableRow(tmpNTE,row);\n                logger.debug(\"Fin action added\");\n                return;\n            }\n            row ++;\n        }\n        /*\n         * Le vecteur contient déjà des évènements mais pas l'évènement auquel\n         * on veut rajouter l'action. On le créé et l'ajoute au vecteur.\n         */\n        tmpNTE = new NotificationsTableEntry();\n        tmpNTE.setEvent(eventName);\n        if(event.getSourceActionType()\n                .equals(NotificationService.ACTION_POPUP_MESSAGE))\n        {\n            tmpNTE.setPopup(isActionEnabled);\n        }\n        else if(event.getSourceActionType()\n                .equals(notificationService.ACTION_COMMAND))\n        {\n            tmpNTE.setProgram(isActionEnabled);\n            tmpNTE.setProgramFile(((CommandNotificationHandler)event\n                    .getActionHandler()).getDescriptor());\n        }\n        else if(event.getSourceActionType()\n                .equals(NotificationService.ACTION_SOUND))\n        {\n            tmpNTE.setSound(isActionEnabled);\n            tmpNTE.setSoundFile(((SoundNotificationHandler)event\n                    .getActionHandler()).getDescriptor());\n        }\n        this.addRowAtVector(tmpNTE);\n        logger.debug(\"Fin action added\");\n        return;\n    }","id":1076,"modified_method":"public void actionAdded(NotificationActionTypeEvent event)\n    {\n        logger.debug(\"Debut action added\");\n        String eventName = (String) event.getSourceEventType();\n        Iterator it = null;\n        int row = 0;\n        NotificationsTableEntry tmpNTE = null;\n        \n        NotificationActionHandler handler = event.getActionHandler();\n        boolean isActionEnabled = (handler != null && handler.isEnabled());\n        \n        if(dataVector.size() <= 0)\n        {\n            tmpNTE = new NotificationsTableEntry();\n            tmpNTE.setEvent(eventName);\n            \n            if(event.getSourceActionType()\n                    .equals(NotificationService.ACTION_POPUP_MESSAGE))\n            {\n                tmpNTE.setPopup(isActionEnabled);\n            }\n            else if(event.getSourceActionType()\n                    .equals(notificationService.ACTION_COMMAND))\n            {\n                tmpNTE.setProgram(isActionEnabled);\n                \n                tmpNTE.setProgramFile(((CommandNotificationHandler)event\n                        .getActionHandler()).getDescriptor());\n            }\n            else if(event.getSourceActionType()\n                    .equals(NotificationService.ACTION_SOUND))\n            {\n                tmpNTE.setSound(isActionEnabled);\n                \n                tmpNTE.setSoundFile(((SoundNotificationHandler)event\n                        .getActionHandler()).getDescriptor());\n            }\n            this.addRowAtVector(tmpNTE);\n            updatePanel(tmpNTE);\n            logger.debug(\"Fin action added\");\n            return;\n        }\n        /*\n         * Si le Vecteur contient des évènements et que l'élément auquel on veut\n         * rajouter l'action existe déjà.\n         */\n        it = dataVector.iterator();\n        while(it.hasNext())\n        {\n            tmpNTE = (NotificationsTableEntry)it.next();\n            if(tmpNTE.getEvent().equals(eventName))\n            {\n                if(event.getSourceActionType()\n                        .equals(NotificationService.ACTION_POPUP_MESSAGE))\n                {\n                    tmpNTE.setPopup(isActionEnabled);\n                     \n                }\n                else if(event.getSourceActionType()\n                        .equals(notificationService.ACTION_COMMAND))\n                {\n                    tmpNTE.setProgram(isActionEnabled);\n                    tmpNTE.setProgramFile(((CommandNotificationHandler)event\n                            .getActionHandler()).getDescriptor());\n                }\n                else if(event.getSourceActionType()\n                        .equals(NotificationService.ACTION_SOUND))\n                {\n                    tmpNTE.setSound(isActionEnabled);\n                    tmpNTE.setSoundFile(((SoundNotificationHandler)event\n                            .getActionHandler()).getDescriptor());\n                }\n                this.updateTableRow(tmpNTE,row);\n                updatePanel(tmpNTE);\n                logger.debug(\"Fin action added\");\n                return;\n            }\n            row ++;\n        }\n        /*\n         * Le vecteur contient déjà des évènements mais pas l'évènement auquel\n         * on veut rajouter l'action. On le créé et l'ajoute au vecteur.\n         */\n        tmpNTE = new NotificationsTableEntry();\n        tmpNTE.setEvent(eventName);\n        if(event.getSourceActionType()\n                .equals(NotificationService.ACTION_POPUP_MESSAGE))\n        {\n            tmpNTE.setPopup(isActionEnabled);\n        }\n        else if(event.getSourceActionType()\n                .equals(notificationService.ACTION_COMMAND))\n        {\n            tmpNTE.setProgram(isActionEnabled);\n            tmpNTE.setProgramFile(((CommandNotificationHandler)event\n                    .getActionHandler()).getDescriptor());\n        }\n        else if(event.getSourceActionType()\n                .equals(NotificationService.ACTION_SOUND))\n        {\n            tmpNTE.setSound(isActionEnabled);\n            tmpNTE.setSoundFile(((SoundNotificationHandler)event\n                    .getActionHandler()).getDescriptor());\n        }\n        this.addRowAtVector(tmpNTE);\n        updatePanel(tmpNTE);\n        logger.debug(\"Fin action added\");\n        return;\n    }","commit_id":"f6c6a37c962a02658f29476dfe17933a47c0597f","url":"https://github.com/jitsi/jitsi"},{"original_method":"public NotificationConfigurationConfigForm()\n    {\n        super();\n        this.nC = this;\n        // constraints on the table\n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 0;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weightx = 1.0;\n        constraints.weighty = 1.0;\n        constraints.fill = GridBagConstraints.BOTH;\n        \n        notificationList = new ListMulti(column, columnToolTips);\n        \n        dataVector = new Vector();\n        //dataVector.add(row1);\n        //dataVector.add(row2);\n        //dataVector.add(row3);\n        \n        gridLayoutGlobal.setConstraints(notificationList, constraints);\n        this.add(notificationList);\n                \n        // Initializing variable part of the \"actions\"\n        title1 = BorderFactory.createTitledBorder(\n                Resources.getString(\"actions\"));\n        actions.setBorder(title1);\n        \n        activateDescactivatePanel = new JPanel();\n        layoutADP = new FlowLayout(FlowLayout.CENTER);\n        layoutADP.setHgap(75);\n        activateDescactivatePanel.setLayout(layoutADP);\n        \n        activate = new JButton(Resources.getString(\"activate\"));\n        activate.setMinimumSize(new Dimension(150,30));\n        activate.setPreferredSize(new Dimension(150,30));\n        activate.addActionListener(this);\n        desactivate = new JButton(Resources.getString(\"desactivate\"));\n        desactivate.setMinimumSize(new Dimension(150,30));\n        desactivate.setPreferredSize(new Dimension(150,30));\n        desactivate.addActionListener(this);\n        playSoundCheckBox = new JCheckBox(Resources.getString(\"playsound\"));\n        playSoundCheckBox.addItemListener(this);\n        playSoundButton = new JButton(\n                new ImageIcon(Resources.getImageInBytes(\"playIcon\")));\n        playSoundButton.setMinimumSize(new Dimension(50,30));\n        playSoundButton.setPreferredSize(new Dimension(50,30));\n        playSoundButton.addActionListener(this);\n        soundFileTextField = new JTextField();\n        soundFileTextField.setMinimumSize(new Dimension(250,30));\n        soundFileTextField.setPreferredSize(new Dimension(250,30));\n        soundFileTextField.getDocument().addDocumentListener(this);\n        soundFileChooser = new JButton(\n                new ImageIcon(Resources.getImageInBytes(\"foldericon\")));\n        soundFileChooser.setMinimumSize(new Dimension(30,30));\n        soundFileChooser.setPreferredSize(new Dimension(30,30));\n        soundFileChooser.addActionListener(this);\n        programCheckBox = new JCheckBox(Resources.getString(\"execprog\"));\n        programCheckBox.addItemListener(this);\n        programFileTextField = new JTextField();\n        programFileTextField.setMinimumSize(new Dimension(250,30));\n        programFileTextField.setPreferredSize(new Dimension(250,30));\n        programFileTextField.getDocument().addDocumentListener(this);\n        programFileChooser = new JButton(\n                new ImageIcon(Resources.getImageInBytes(\"foldericon\")));\n        programFileChooser.setMinimumSize(new Dimension(30,30));\n        programFileChooser.setPreferredSize(new Dimension(30,30));\n        programFileChooser.addActionListener(this);\n        popupCheckBox = new JCheckBox(Resources.getString(\"displaypopup\"));\n        popupCheckBox.addItemListener(this);\n        \n       \n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 0;\n        constraints.gridwidth = 4;\n        constraints.weightx = 1.0;\n        constraints.fill = GridBagConstraints.HORIZONTAL;\n        constraints.insets = new Insets(0,0,10,0);\n        \n        activateDescactivatePanel.add(activate);\n        activateDescactivatePanel.add(desactivate);\n        actionsLayout.setConstraints(activateDescactivatePanel, constraints);\n        actions.add(activateDescactivatePanel);\n        \n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.insets = new Insets(0,0,2,0);\n        actionsLayout.setConstraints(playSoundCheckBox, constraints);\n        actions.add(playSoundCheckBox);\n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 1;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.insets = new Insets(0,0,2,5);\n        constraints.anchor = GridBagConstraints.EAST;\n        actionsLayout.setConstraints(playSoundButton, constraints);\n        actions.add(playSoundButton);\n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 2;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.insets = new Insets(0,0,2,0);\n        constraints.weightx = 1.0;\n        constraints.fill = GridBagConstraints.HORIZONTAL;\n        actionsLayout.setConstraints(soundFileTextField, constraints);\n        actions.add(soundFileTextField);\n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 3;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.anchor = GridBagConstraints.WEST;\n        constraints.insets = new Insets(0,5,2,0);\n        actionsLayout.setConstraints(soundFileChooser, constraints);\n        actions.add(soundFileChooser);\n        \n        constraints.gridx = 0;\n        constraints.gridy = 2;\n        constraints.gridwidth = 2;\n        constraints.weightx = 1.0;\n        constraints.fill = GridBagConstraints.HORIZONTAL;\n        constraints.insets = new Insets(0,0,2,0);\n        actionsLayout.setConstraints(programCheckBox, constraints);\n        actions.add(programCheckBox);\n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 2;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.weightx = 1.0;\n        constraints.fill = GridBagConstraints.HORIZONTAL;\n        constraints.insets = new Insets(0,0,2,0);\n        actionsLayout.setConstraints(programFileTextField, constraints);\n        actions.add(programFileTextField);\n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 3;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.insets = new Insets(0,5,2,0);\n        constraints.anchor = GridBagConstraints.WEST;\n        actionsLayout.setConstraints(programFileChooser, constraints);\n        actions.add(programFileChooser);\n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 3;\n        constraints.gridwidth = 4;\n        constraints.weightx = 1.0;\n        constraints.fill = GridBagConstraints.HORIZONTAL;\n        actionsLayout.setConstraints(popupCheckBox, constraints);\n        actions.add(popupCheckBox);\n                \n        actions.setLayout(actionsLayout);\n                \n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weightx = 1.0;\n        //constraints.weighty = 40.0;\n        constraints.fill = GridBagConstraints.BOTH;\n        gridLayoutGlobal.setConstraints(actions, constraints);\n        this.add(actions);\n        \n        \n        \n        // Initializing variables of the \"quickControl\"\n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weightx = 1.0;\n        //constraints.weighty = 10.0;\n        constraints.fill = GridBagConstraints.BOTH;\n        \n        comboBoxTurnOn = new JComboBox(textComboBox);\n        comboBoxTurnOn.addActionListener(this);\n        comboBoxTurnOff = new JComboBox(textComboBox);\n        comboBoxTurnOff.addActionListener(this);\n        turnOnAll = new JButton(Resources.getString(\"turnonall\"));\n        turnOnAll.addActionListener(this);\n        turnOffAll = new JButton(Resources.getString(\"turnoffall\"));\n        turnOffAll.addActionListener(this);\n        \n        \n        title2 = BorderFactory.createTitledBorder(\n                Resources.getString(\"quickcontrols\"));\n        quickControl.setLayout(layoutButton);\n        quickControl.setBorder(title2);\n        quickControl.add(turnOnAll);\n        quickControl.add(comboBoxTurnOn);\n        quickControl.add(turnOffAll);\n        quickControl.add(comboBoxTurnOff);\n        gridLayoutGlobal.setConstraints(quickControl, constraints);\n//        this.add(quickControl);\n        \n        this.setLayout(gridLayoutGlobal);\n        \n        \n        fileChooserSound = new JFileChooser();\n        fileChooserProgram = new JFileChooser();\n        fileChooserSound.setMultiSelectionEnabled(false);\n        fileChooserProgram.setMultiSelectionEnabled(false);\n        fileChooserSound.addChoosableFileFilter(new SoundFilter());\n        \n        notificationList.addMouseListener(new MyMouseAdapter());\n        \n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 3;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weightx = 1.0;\n        constraints.fill = GridBagConstraints.BOTH;\n        \n        apply = new JButton(Resources.getString(\"apply\"));\n        apply.addActionListener(this);\n        applyPanel.setLayout(layoutApply);\n        applyPanel.add(apply);\n        gridLayoutGlobal.setConstraints(applyPanel, constraints);\n        this.add(applyPanel);\n        \n        \n        notificationService\n                = NotificationConfigurationActivator.getNotificationService();\n        notificationService.addNotificationChangeListener(this);\n        this.buildingVector();\n        this.updateTable();\n        \n        if(dataVector.size() > 0)\n        {\n            NotificationsTableEntry tmpNTE\n                    = (NotificationsTableEntry) dataVector.elementAt(0);\n\n            activate.setEnabled(!tmpNTE.getEnabled());\n            desactivate.setEnabled(tmpNTE.getEnabled());\n            programCheckBox.setSelected(tmpNTE.getProgram());\n            programFileChooser.setEnabled(tmpNTE.getProgram());\n            programFileTextField.setEnabled(tmpNTE.getProgram());\n            programFileTextField.setText(tmpNTE.getProgramFile());\n            playSoundCheckBox.setSelected(tmpNTE.getSound());\n            playSoundButton.setEnabled(tmpNTE.getSound());\n            soundFileChooser.setEnabled(tmpNTE.getSound());\n            soundFileTextField.setEnabled(tmpNTE.getSound());\n            soundFileTextField.setText(tmpNTE.getSoundFile());\n            popupCheckBox.setSelected(tmpNTE.getPopup());\n            notificationList.setRowSelectionInterval(0,0);\n            index = 0;\n        }\n    }","id":1077,"modified_method":"public NotificationConfigurationConfigForm()\n    {\n        super();\n        this.nC = this;\n        // constraints on the table\n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 0;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weightx = 1.0;\n        constraints.weighty = 1.0;\n        constraints.fill = GridBagConstraints.BOTH;\n        \n        notificationList = new ListMulti(column, columnToolTips);\n        \n        dataVector = new Vector();\n        //dataVector.add(row1);\n        //dataVector.add(row2);\n        //dataVector.add(row3);\n        \n        gridLayoutGlobal.setConstraints(notificationList, constraints);\n        this.add(notificationList);\n                \n        // Initializing variable part of the \"actions\"\n        title1 = BorderFactory.createTitledBorder(\n                Resources.getString(\"actions\"));\n        actions.setBorder(title1);\n        \n        activateDescactivatePanel = new JPanel();\n        layoutADP = new FlowLayout(FlowLayout.CENTER);\n        layoutADP.setHgap(75);\n        activateDescactivatePanel.setLayout(layoutADP);\n        \n        activate = new JButton(Resources.getString(\"activate\"));\n        activate.setMinimumSize(new Dimension(150,30));\n        activate.setPreferredSize(new Dimension(150,30));\n        activate.addActionListener(this);\n        desactivate = new JButton(Resources.getString(\"desactivate\"));\n        desactivate.setMinimumSize(new Dimension(150,30));\n        desactivate.setPreferredSize(new Dimension(150,30));\n        desactivate.addActionListener(this);\n        playSoundCheckBox = new JCheckBox(Resources.getString(\"playsound\"));\n        playSoundCheckBox.addItemListener(this);\n        playSoundButton = new JButton(\n                new ImageIcon(Resources.getImageInBytes(\"playIcon\")));\n        playSoundButton.setMinimumSize(new Dimension(50,30));\n        playSoundButton.setPreferredSize(new Dimension(50,30));\n        playSoundButton.addActionListener(this);\n        soundFileTextField = new JTextField();\n        soundFileTextField.setMinimumSize(new Dimension(250,30));\n        soundFileTextField.setPreferredSize(new Dimension(250,30));\n        soundFileTextField.getDocument().addDocumentListener(this);\n        soundFileChooser = new JButton(\n                new ImageIcon(Resources.getImageInBytes(\"foldericon\")));\n        soundFileChooser.setMinimumSize(new Dimension(30,30));\n        soundFileChooser.setPreferredSize(new Dimension(30,30));\n        soundFileChooser.addActionListener(this);\n        programCheckBox = new JCheckBox(Resources.getString(\"execprog\"));\n        programCheckBox.addItemListener(this);\n        programFileTextField = new JTextField();\n        programFileTextField.setMinimumSize(new Dimension(250,30));\n        programFileTextField.setPreferredSize(new Dimension(250,30));\n        programFileTextField.getDocument().addDocumentListener(this);\n        programFileChooser = new JButton(\n                new ImageIcon(Resources.getImageInBytes(\"foldericon\")));\n        programFileChooser.setMinimumSize(new Dimension(30,30));\n        programFileChooser.setPreferredSize(new Dimension(30,30));\n        programFileChooser.addActionListener(this);\n        popupCheckBox = new JCheckBox(Resources.getString(\"displaypopup\"));\n        popupCheckBox.addItemListener(this);\n        \n       \n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 0;\n        constraints.gridwidth = 4;\n        constraints.weightx = 1.0;\n        constraints.fill = GridBagConstraints.HORIZONTAL;\n        constraints.insets = new Insets(0,0,10,0);\n        \n        activateDescactivatePanel.add(activate);\n        activateDescactivatePanel.add(desactivate);\n        actionsLayout.setConstraints(activateDescactivatePanel, constraints);\n        actions.add(activateDescactivatePanel);\n        \n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.insets = new Insets(0,0,2,0);\n        actionsLayout.setConstraints(playSoundCheckBox, constraints);\n        actions.add(playSoundCheckBox);\n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 1;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.insets = new Insets(0,0,2,5);\n        constraints.anchor = GridBagConstraints.EAST;\n        actionsLayout.setConstraints(playSoundButton, constraints);\n        actions.add(playSoundButton);\n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 2;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.insets = new Insets(0,0,2,0);\n        constraints.weightx = 1.0;\n        constraints.fill = GridBagConstraints.HORIZONTAL;\n        actionsLayout.setConstraints(soundFileTextField, constraints);\n        actions.add(soundFileTextField);\n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 3;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.anchor = GridBagConstraints.WEST;\n        constraints.insets = new Insets(0,5,2,0);\n        actionsLayout.setConstraints(soundFileChooser, constraints);\n        actions.add(soundFileChooser);\n        \n        constraints.gridx = 0;\n        constraints.gridy = 2;\n        constraints.gridwidth = 2;\n        constraints.weightx = 1.0;\n        constraints.fill = GridBagConstraints.HORIZONTAL;\n        constraints.insets = new Insets(0,0,2,0);\n        actionsLayout.setConstraints(programCheckBox, constraints);\n        actions.add(programCheckBox);\n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 2;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.weightx = 1.0;\n        constraints.fill = GridBagConstraints.HORIZONTAL;\n        constraints.insets = new Insets(0,0,2,0);\n        actionsLayout.setConstraints(programFileTextField, constraints);\n        actions.add(programFileTextField);\n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 3;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.insets = new Insets(0,5,2,0);\n        constraints.anchor = GridBagConstraints.WEST;\n        actionsLayout.setConstraints(programFileChooser, constraints);\n        actions.add(programFileChooser);\n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 3;\n        constraints.gridwidth = 4;\n        constraints.weightx = 1.0;\n        constraints.fill = GridBagConstraints.HORIZONTAL;\n        actionsLayout.setConstraints(popupCheckBox, constraints);\n        actions.add(popupCheckBox);\n                \n        actions.setLayout(actionsLayout);\n                \n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weightx = 1.0;\n        //constraints.weighty = 40.0;\n        constraints.fill = GridBagConstraints.BOTH;\n        gridLayoutGlobal.setConstraints(actions, constraints);\n        this.add(actions);\n        \n        \n        \n        // Initializing variables of the \"quickControl\"\n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weightx = 1.0;\n        //constraints.weighty = 10.0;\n        constraints.fill = GridBagConstraints.BOTH;\n        \n        comboBoxTurnOn = new JComboBox(textComboBox);\n        comboBoxTurnOn.addActionListener(this);\n        comboBoxTurnOff = new JComboBox(textComboBox);\n        comboBoxTurnOff.addActionListener(this);\n        turnOnAll = new JButton(Resources.getString(\"turnonall\"));\n        turnOnAll.addActionListener(this);\n        turnOffAll = new JButton(Resources.getString(\"turnoffall\"));\n        turnOffAll.addActionListener(this);\n        \n        \n        title2 = BorderFactory.createTitledBorder(\n                Resources.getString(\"quickcontrols\"));\n        quickControl.setLayout(layoutButton);\n        quickControl.setBorder(title2);\n        quickControl.add(turnOnAll);\n        quickControl.add(comboBoxTurnOn);\n        quickControl.add(turnOffAll);\n        quickControl.add(comboBoxTurnOff);\n        gridLayoutGlobal.setConstraints(quickControl, constraints);\n//        this.add(quickControl);\n        \n        this.setLayout(gridLayoutGlobal);\n        \n        \n        fileChooserSound = new JFileChooser();\n        fileChooserProgram = new JFileChooser();\n        fileChooserSound.setMultiSelectionEnabled(false);\n        fileChooserProgram.setMultiSelectionEnabled(false);\n        fileChooserSound.addChoosableFileFilter(new SoundFilter());\n        \n        notificationList.addMouseListener(new MyMouseAdapter());\n        \n        \n        constraints = new GridBagConstraints();\n        constraints.gridx = 0;\n        constraints.gridy = 3;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weightx = 1.0;\n        constraints.fill = GridBagConstraints.BOTH;\n        \n        restore = new JButton(Resources.getString(\"restore\"));\n        restore.addActionListener(this);\n        apply = new JButton(Resources.getString(\"apply\"));\n        apply.addActionListener(this);\n        applyPanel.setLayout(layoutApply);\n        applyPanel.add(apply, BorderLayout.EAST);\n        applyPanel.add(restore, BorderLayout.WEST);\n        gridLayoutGlobal.setConstraints(applyPanel, constraints);\n        this.add(applyPanel);\n        \n        \n        notificationService\n                = NotificationConfigurationActivator.getNotificationService();\n        notificationService.addNotificationChangeListener(this);\n        this.buildingVector();\n        this.updateTable();\n        \n        if(dataVector.size() > 0)\n        {\n            NotificationsTableEntry tmpNTE\n                    = (NotificationsTableEntry) dataVector.elementAt(0);\n\n            updatePanel(tmpNTE);\n            notificationList.setRowSelectionInterval(0,0);\n            index = 0;\n        }\n    }","commit_id":"f6c6a37c962a02658f29476dfe17933a47c0597f","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void mouseClicked(MouseEvent me)\n        {\n            index = notificationList.rowAtPoint(me.getPoint());\n            Iterator it = dataVector.iterator();\n            \n            noListener = true;\n            \n            if(index != -1)\n            {\n                NotificationsTableEntry tmpNTE\n                        = (NotificationsTableEntry) dataVector.elementAt(index);\n                activate.setEnabled(!tmpNTE.getEnabled());\n                desactivate.setEnabled(tmpNTE.getEnabled());\n                if(tmpNTE.getProgram() \n                    && tmpNTE.getProgramFile().trim().length() > 0)\n                {\n                    programCheckBox.setSelected(true);\n                    programFileChooser.setEnabled(tmpNTE.getProgram());\n                    programFileTextField.setEnabled(tmpNTE.getProgram());\n                    programFileTextField.setText(tmpNTE.getProgramFile());\n                }\n                else\n                {\n                    programCheckBox.setSelected(false);\n                    programFileChooser.setEnabled(false);\n                    programFileTextField.setEnabled(false);\n                    programFileTextField.setText(tmpNTE.getProgramFile());\n                }\n                if(tmpNTE.getSound()\n                    && tmpNTE.getSoundFile().trim().length() > 0)\n                {\n                    playSoundCheckBox.setSelected(true);\n                    playSoundButton.setEnabled(true);\n                    soundFileChooser.setEnabled(true);\n                    soundFileTextField.setEnabled(true);\n                    soundFileTextField.setText(tmpNTE.getSoundFile());\n                }\n                else\n                {\n                    playSoundCheckBox.setSelected(false);\n                    playSoundButton.setEnabled(false);\n                    soundFileChooser.setEnabled(false);\n                    soundFileTextField.setEnabled(false);\n                    soundFileTextField.setText(tmpNTE.getSoundFile());\n                }\n                popupCheckBox.setSelected(tmpNTE.getPopup());\n                notificationList.setRowSelectionInterval(index,index);\n                noListener = false;\n                return;\n            }\n        }","id":1078,"modified_method":"public void mouseClicked(MouseEvent me)\n        {\n            index = notificationList.rowAtPoint(me.getPoint());\n            \n            noListener = true;\n            \n            if(index != -1)\n            {\n                NotificationsTableEntry tmpNTE\n                        = (NotificationsTableEntry) dataVector.elementAt(index);\n                activate.setEnabled(!tmpNTE.getEnabled());\n                desactivate.setEnabled(tmpNTE.getEnabled());\n                if(tmpNTE.getProgram() \n                    && tmpNTE.getProgramFile().trim().length() > 0)\n                {\n                    programCheckBox.setSelected(true);\n                    programCheckBox.setEnabled(true);\n                    programFileChooser.setEnabled(tmpNTE.getProgram());\n                    programFileTextField.setEnabled(tmpNTE.getProgram());\n                    programFileTextField.setText(tmpNTE.getProgramFile());\n                }\n                else\n                {\n                    programCheckBox.setSelected(false);\n                    programFileChooser.setEnabled(false);\n                    programFileTextField.setEnabled(false);\n                    programFileTextField.setText(tmpNTE.getProgramFile());\n                }\n                if(tmpNTE.getSound()\n                    && tmpNTE.getSoundFile().trim().length() > 0)\n                {\n                    playSoundCheckBox.setSelected(true);\n                    playSoundCheckBox.setEnabled(true);\n                    playSoundButton.setEnabled(true);\n                    soundFileChooser.setEnabled(true);\n                    soundFileTextField.setEnabled(true);\n                    soundFileTextField.setText(tmpNTE.getSoundFile());\n                }\n                else\n                {\n                    playSoundCheckBox.setSelected(false);\n                    playSoundButton.setEnabled(false);\n                    soundFileChooser.setEnabled(false);          \n                    soundFileTextField.setEnabled(false);\n                    soundFileTextField.setText(tmpNTE.getSoundFile());\n                }\n                popupCheckBox.setSelected(tmpNTE.getPopup());\n                popupCheckBox.setEnabled(tmpNTE.getPopup());\n                notificationList.setRowSelectionInterval(index,index);\n                noListener = false;\n                return;\n            }\n        }","commit_id":"f6c6a37c962a02658f29476dfe17933a47c0597f","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void eventTypeAdded(NotificationEventTypeEvent event)\n    {\n        String eventAdded = (String) event.getSourceEventType();\n        Iterator it = dataVector.iterator();\n        NotificationsTableEntry tmpNTE = null;\n        while(it.hasNext())\n        {\n            tmpNTE = (NotificationsTableEntry) it.next();\n            if(tmpNTE.getEvent().equals(eventAdded))\n                return;\n        }\n        tmpNTE = new NotificationsTableEntry();\n        tmpNTE.setEvent(eventAdded);\n        tmpNTE.setEnabled(notificationService.isActive(event.getEventType()));\n        this.addRowAtVector(tmpNTE);\n    }","id":1079,"modified_method":"public void eventTypeAdded(NotificationEventTypeEvent event)\n    {\n        String eventAdded = (String) event.getSourceEventType();\n        Iterator it = dataVector.iterator();\n        NotificationsTableEntry tmpNTE = null;\n        while(it.hasNext())\n        {\n            tmpNTE = (NotificationsTableEntry) it.next();\n            if(tmpNTE.getEvent().equals(eventAdded))\n                return;\n        }\n        tmpNTE = new NotificationsTableEntry();\n        tmpNTE.setEvent(eventAdded);\n        tmpNTE.setEnabled(notificationService.isActive(event.getSourceEventType()));\n        this.addRowAtVector(tmpNTE);\n    }","commit_id":"f6c6a37c962a02658f29476dfe17933a47c0597f","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Loads all previously saved event notifications.\n     */\n    private void loadNotifications()\n    {\n        ConfigurationService configService\n            = NotificationActivator.getConfigurationService();\n\n        String prefix = \"net.java.sip.communicator.impl.notifications\";\n        \n        List eventTypes = configService\n                .getPropertyNamesByPrefix(prefix, true);\n    \n        Iterator eventTypesIter = eventTypes.iterator();\n    \n        while(eventTypesIter.hasNext())\n        {\n            String eventTypeRootPropName\n                = (String) eventTypesIter.next();\n            \n            boolean isEventActive = Boolean.parseBoolean(\n                (String)configService.getProperty(eventTypeRootPropName + \".active\"));\n\n            String eventType\n                = configService.getString(eventTypeRootPropName);\n        \n            List actions = configService\n                .getPropertyNamesByPrefix(\n                    eventTypeRootPropName + \".actions\", true);\n            \n            Iterator actionsIter = actions.iterator();\n\n            while(actionsIter.hasNext())\n            {\n                String actionPropName\n                    = (String) actionsIter.next();\n                \n                String actionType\n                    = configService.getString(actionPropName);\n                \n                NotificationActionHandler handler = null;\n                \n                if(actionType.equals(ACTION_SOUND))\n                {\n                    String soundFileDescriptor\n                        = configService.getString(\n                            actionPropName + \".soundFileDescriptor\");\n                \n                    String loopInterval\n                        = configService.getString(\n                            actionPropName + \".loopInterval\");\n\n                    handler = new SoundNotificationHandlerImpl(\n                        soundFileDescriptor,\n                        new Integer(loopInterval).intValue());\n                    \n                    boolean isEnabled = Boolean.parseBoolean(\n                        configService.getString(\n                            actionPropName + \".enabled\"));\n                    handler.setEnabled(isEnabled);\n                }\n                else if(actionType.equals(ACTION_POPUP_MESSAGE))\n                {\n                    String defaultMessage\n                        = configService.getString(\n                            actionPropName + \".defaultMessage\");\n            \n                    handler = new PopupMessageNotificationHandlerImpl(\n                                                                defaultMessage);\n                    boolean isEnabled = Boolean.parseBoolean(\n                        configService.getString(\n                            actionPropName + \".enabled\"));\n                    handler.setEnabled(isEnabled);\n                }\n                else if(actionType.equals(ACTION_LOG_MESSAGE))\n                {\n                    String logType\n                        = configService.getString(\n                            actionPropName + \".logType\");\n            \n                    handler = new LogMessageNotificationHandlerImpl(logType);\n                    \n                    boolean isEnabled = Boolean.parseBoolean(\n                        configService.getString(\n                            actionPropName + \".enabled\"));\n                    handler.setEnabled(isEnabled);\n                }\n                else if(actionType.equals(ACTION_COMMAND))\n                {\n                    String commandDescriptor\n                        = configService.getString(\n                            actionPropName + \".commandDescriptor\");\n        \n                    handler = new CommandNotificationHandlerImpl(\n                                                            commandDescriptor);\n                    boolean isEnabled = Boolean.parseBoolean(\n                        configService.getString(\n                            actionPropName + \".enabled\"));\n                    handler.setEnabled(isEnabled);                              \n                }\n                \n                // Load the data in the notifications table.\n                EventNotification notification\n                    = (EventNotification)notificationsTable.get(eventType);\n                    \n                if(notification == null)\n                {\n                    notification = new EventNotification(eventType);\n                    notificationsTable.put(eventType, notification);\n                }\n                notification.setActive(isEventActive);\n\n                notification.addAction(actionType, handler);\n            }\n        }\n    }","id":1080,"modified_method":"/**\n     * Loads all previously saved event notifications.\n     */\n    private void loadNotifications()\n    {\n        ConfigurationService configService\n            = NotificationActivator.getConfigurationService();\n\n        String prefix = \"net.java.sip.communicator.impl.notifications\";\n        \n        List eventTypes = configService\n                .getPropertyNamesByPrefix(prefix, true);\n    \n        Iterator eventTypesIter = eventTypes.iterator();\n    \n        while(eventTypesIter.hasNext())\n        {\n            String eventTypeRootPropName\n                = (String) eventTypesIter.next();\n            \n            boolean isEventActive = \n                isEnabled(eventTypeRootPropName + \".active\");\n            \n            String eventType\n                = configService.getString(eventTypeRootPropName);\n        \n            List actions = configService\n                .getPropertyNamesByPrefix(\n                    eventTypeRootPropName + \".actions\", true);\n            \n            Iterator actionsIter = actions.iterator();\n\n            while(actionsIter.hasNext())\n            {\n                String actionPropName\n                    = (String) actionsIter.next();\n                \n                String actionType\n                    = configService.getString(actionPropName);\n                \n                NotificationActionHandler handler = null;\n                \n                if(actionType.equals(ACTION_SOUND))\n                {\n                    String soundFileDescriptor\n                        = configService.getString(\n                            actionPropName + \".soundFileDescriptor\");\n                \n                    String loopInterval\n                        = configService.getString(\n                            actionPropName + \".loopInterval\");\n\n                    handler = new SoundNotificationHandlerImpl(\n                        soundFileDescriptor,\n                        new Integer(loopInterval).intValue());\n                    \n                    handler.setEnabled(\n                        isEnabled(actionPropName + \".enabled\"));\n                }\n                else if(actionType.equals(ACTION_POPUP_MESSAGE))\n                {\n                    String defaultMessage\n                        = configService.getString(\n                            actionPropName + \".defaultMessage\");\n            \n                    handler = new PopupMessageNotificationHandlerImpl(\n                                                                defaultMessage);\n                    handler.setEnabled(\n                        isEnabled(actionPropName + \".enabled\"));\n                }\n                else if(actionType.equals(ACTION_LOG_MESSAGE))\n                {\n                    String logType\n                        = configService.getString(\n                            actionPropName + \".logType\");\n            \n                    handler = new LogMessageNotificationHandlerImpl(logType);\n                    \n                    handler.setEnabled(isEnabled(actionPropName + \".enabled\"));\n                }\n                else if(actionType.equals(ACTION_COMMAND))\n                {\n                    String commandDescriptor\n                        = configService.getString(\n                            actionPropName + \".commandDescriptor\");\n        \n                    handler = new CommandNotificationHandlerImpl(\n                                                            commandDescriptor);\n                    handler.setEnabled(isEnabled(actionPropName + \".enabled\"));                              \n                }\n                \n                // Load the data in the notifications table.\n                EventNotification notification\n                    = (EventNotification)notificationsTable.get(eventType);\n                    \n                if(notification == null)\n                {\n                    notification = new EventNotification(eventType);\n                    notificationsTable.put(eventType, notification);\n                }\n                notification.setActive(isEventActive);\n\n                notification.addAction(actionType, handler);\n            }\n        }\n    }","commit_id":"f6c6a37c962a02658f29476dfe17933a47c0597f","url":"https://github.com/jitsi/jitsi"},{"original_method":"protected void importShortcut(\n\t\t\tPortletDataContext context, Map folderPKs, Map entryNames,\n\t\t\tDLFileShortcut shortcut)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(shortcut.getUserUuid());\n\t\tlong folderId = MapUtil.getLong(\n\t\t\tfolderPKs, shortcut.getFolderId(), shortcut.getFolderId());\n\t\tlong toFolderId = MapUtil.getLong(\n\t\t\tfolderPKs, shortcut.getToFolderId(), shortcut.getToFolderId());\n\t\tString toName = MapUtil.getString(\n\t\t\tentryNames, shortcut.getToName(), shortcut.getToName());\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\ttry {\n\t\t\tDLFolderUtil.findByPrimaryKey(folderId);\n\t\t\tDLFolderUtil.findByPrimaryKey(toFolderId);\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\ttry {\n\t\t\t\t\tDLFileShortcut existingShortcut =\n\t\t\t\t\t\tDLFileShortcutFinderUtil.findByUuid_G(\n\t\t\t\t\t\t\tshortcut.getUuid(), context.getGroupId());\n\n\t\t\t\t\tDLFileShortcutLocalServiceUtil.updateFileShortcut(\n\t\t\t\t\t\tuserId, existingShortcut.getFileShortcutId(), folderId,\n\t\t\t\t\t\ttoFolderId, toName);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchFileShortcutException nsfse) {\n\t\t\t\t\tDLFileShortcutLocalServiceUtil.addFileShortcut(\n\t\t\t\t\t\tshortcut.getUuid(), userId, folderId, toFolderId,\n\t\t\t\t\t\ttoName, addCommunityPermissions, addGuestPermissions);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tDLFileShortcutLocalServiceUtil.addFileShortcut(\n\t\t\t\t\tuserId, folderId, toFolderId, toName,\n\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the folder for shortcut \" +\n\t\t\t\t\tshortcut.getFileShortcutId());\n\t\t}\n\t}","id":1081,"modified_method":"protected void importFileShortcut(\n\t\t\tPortletDataContext context, Map<Long, Long> folderPKs,\n\t\t\tMap<String, String> fileEntryNames, DLFileShortcut fileShortcut)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(fileShortcut.getUserUuid());\n\t\tlong folderId = MapUtil.getLong(\n\t\t\tfolderPKs, fileShortcut.getFolderId(), fileShortcut.getFolderId());\n\t\tlong toFolderId = MapUtil.getLong(\n\t\t\tfolderPKs, fileShortcut.getToFolderId(),\n\t\t\tfileShortcut.getToFolderId());\n\t\tString toName = MapUtil.getString(\n\t\t\tfileEntryNames, fileShortcut.getToName(), fileShortcut.getToName());\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\ttry {\n\t\t\tDLFolderUtil.findByPrimaryKey(folderId);\n\t\t\tDLFolderUtil.findByPrimaryKey(toFolderId);\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\ttry {\n\t\t\t\t\tDLFileShortcut existingFileShortcut =\n\t\t\t\t\t\tDLFileShortcutFinderUtil.findByUuid_G(\n\t\t\t\t\t\t\tfileShortcut.getUuid(), context.getGroupId());\n\n\t\t\t\t\tDLFileShortcutLocalServiceUtil.updateFileShortcut(\n\t\t\t\t\t\tuserId, existingFileShortcut.getFileShortcutId(),\n\t\t\t\t\t\tfolderId, toFolderId, toName);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchFileShortcutException nsfse) {\n\t\t\t\t\tDLFileShortcutLocalServiceUtil.addFileShortcut(\n\t\t\t\t\t\tfileShortcut.getUuid(), userId, folderId, toFolderId,\n\t\t\t\t\t\ttoName, addCommunityPermissions, addGuestPermissions);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tDLFileShortcutLocalServiceUtil.addFileShortcut(\n\t\t\t\t\tuserId, folderId, toFolderId, toName,\n\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the folder for shortcut \" +\n\t\t\t\t\tfileShortcut.getFileShortcutId());\n\t\t}\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void importRank(\n\t\t\tPortletDataContext context, Map folderPKs, Map entryNames,\n\t\t\tDLFileRank rank)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(rank.getUserUuid());\n\t\tlong folderId = MapUtil.getLong(\n\t\t\tfolderPKs, rank.getFolderId(), rank.getFolderId());\n\n\t\tString name = (String)folderPKs.get(rank.getName());\n\n\t\tif (name == null) {\n\t\t\tname = rank.getName();\n\t\t}\n\n\t\ttry {\n\t\t\tDLFolderUtil.findByPrimaryKey(folderId);\n\n\t\t\tDLFileRankLocalServiceUtil.updateFileRank(\n\t\t\t\tcontext.getGroupId(), context.getCompanyId(), userId, folderId,\n\t\t\t\tname);\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the folder for rank \" + rank.getFileRankId());\n\t\t}\n\t}","id":1082,"modified_method":"protected void importFileRank(\n\t\t\tPortletDataContext context, Map<Long, Long> folderPKs,\n\t\t\tMap<String, String> fileEntryNames, DLFileRank rank)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(rank.getUserUuid());\n\t\tlong folderId = MapUtil.getLong(\n\t\t\tfolderPKs, rank.getFolderId(), rank.getFolderId());\n\n\t\tString name = fileEntryNames.get(rank.getName());\n\n\t\tif (name == null) {\n\t\t\tname = rank.getName();\n\t\t}\n\n\t\ttry {\n\t\t\tDLFolderUtil.findByPrimaryKey(folderId);\n\n\t\t\tDLFileRankLocalServiceUtil.updateFileRank(\n\t\t\t\tcontext.getGroupId(), context.getCompanyId(), userId, folderId,\n\t\t\t\tname);\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the folder for rank \" + rank.getFileRankId());\n\t\t}\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportEntry(\n\t\t\tPortletDataContext context, Element foldersEl, Element entriesEl,\n\t\t\tElement ranksEl, DLFileEntry entry)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(entry.getModifiedDate())) {\n\t\t\tString path = getEntryPath(context, entry);\n\n\t\t\tElement entryEl = entriesEl.addElement(\"entry\");\n\t\t\tentryEl.addAttribute(\"path\", path);\n\t\t\tentryEl.addAttribute(\"bin-path\", getEntryBinPath(context, entry));\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tentry.setUserUuid(entry.getUserUuid());\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"comments\")) {\n\t\t\t\t\tcontext.addComments(\n\t\t\t\t\t\tDLFileEntry.class, entry.getPrimaryKeyObj());\n\t\t\t\t}\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\t\t\tcontext.addRatingsEntries(\n\t\t\t\t\t\tDLFileEntry.class, entry.getPrimaryKeyObj());\n\t\t\t\t}\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\t\t\tcontext.addTagsEntries(\n\t\t\t\t\t\tDLFileEntry.class, entry.getPrimaryKeyObj());\n\t\t\t\t}\n\n\t\t\t\tInputStream in =\n\t\t\t\t\tDLFileEntryLocalServiceUtil.getFileAsStream(\n\t\t\t\t\t\tentry.getCompanyId(), entry.getUserId(),\n\t\t\t\t\t\tentry.getFolderId(), entry.getName());\n\n\t\t\t\ttry {\n\t\t\t\t\tcontext.addZipEntry(\n\t\t\t\t\t\tgetEntryBinPath(context, entry), FileUtil.getBytes(in));\n\t\t\t\t}\n\t\t\t\tcatch (IOException ioe) {\n\t\t\t\t\tthrow new SystemException(ioe);\n\t\t\t\t}\n\n\t\t\t\tcontext.addZipEntry(path, entry);\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ranks\")) {\n\t\t\t\t\tList<DLFileRank> entryRanks = DLFileRankUtil.findByF_N(\n\t\t\t\t\t\tentry.getFolderId(), entry.getName());\n\n\t\t\t\t\tfor (DLFileRank entryRank : entryRanks) {\n\t\t\t\t\t\texportRank(context, ranksEl, entryRank);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\texportParentFolder(context, foldersEl, entry.getFolderId());\n\t\t}\n\t}","id":1083,"modified_method":"protected void exportFileEntry(\n\t\t\tPortletDataContext context, Element foldersEl,\n\t\t\tElement fileEntriesEl, Element fileRanksEl, DLFileEntry fileEntry)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(fileEntry.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getFileEntryPath(context, fileEntry);\n\t\tString binPath = getFileEntryBinPath(context, fileEntry);\n\n\t\tElement fileEntryEl = fileEntriesEl.addElement(\"file-entry\");\n\n\t\tfileEntryEl.addAttribute(\"path\", path);\n\t\tfileEntryEl.addAttribute(\"bin-path\", binPath);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tfileEntry.setUserUuid(fileEntry.getUserUuid());\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"comments\")) {\n\t\t\t\tcontext.addComments(\n\t\t\t\t\tDLFileEntry.class, fileEntry.getFileEntryId());\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\t\tcontext.addRatingsEntries(\n\t\t\t\t\tDLFileEntry.class, fileEntry.getFileEntryId());\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\t\tcontext.addTagsEntries(\n\t\t\t\t\tDLFileEntry.class, fileEntry.getFileEntryId());\n\t\t\t}\n\n\t\t\tInputStream is = DLFileEntryLocalServiceUtil.getFileAsStream(\n\t\t\t\tfileEntry.getCompanyId(), fileEntry.getUserId(),\n\t\t\t\tfileEntry.getFolderId(), fileEntry.getName());\n\n\t\t\ttry {\n\t\t\t\tcontext.addZipEntry(\n\t\t\t\t\tgetFileEntryBinPath(context, fileEntry),\n\t\t\t\t\tFileUtil.getBytes(is));\n\t\t\t}\n\t\t\tcatch (IOException ioe) {\n\t\t\t\tthrow new SystemException(ioe);\n\t\t\t}\n\n\t\t\tcontext.addZipEntry(path, fileEntry);\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ranks\")) {\n\t\t\t\tList<DLFileRank> fileRanks = DLFileRankUtil.findByF_N(\n\t\t\t\t\tfileEntry.getFolderId(), fileEntry.getName());\n\n\t\t\t\tfor (DLFileRank fileRank : fileRanks) {\n\t\t\t\t\texportFileRank(context, fileRanksEl, fileRank);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\texportParentFolder(context, foldersEl, fileEntry.getFolderId());\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getShortcutPath(\n\t\t\tPortletDataContext context, DLFileShortcut shortcut) {\n\t\treturn context.getPortletPath(PortletKeys.DOCUMENT_LIBRARY) +\n\t\t\t\"/shortcut/\" + shortcut.getFileShortcutId() + \".xml\";\n\t}","id":1084,"modified_method":"protected String getFileShortcutPath(\n\t\tPortletDataContext context, DLFileShortcut fileShortcut) {\n\n\t\treturn context.getPortletPath(PortletKeys.DOCUMENT_LIBRARY) +\n\t\t\t\"/shortcut/\" + fileShortcut.getFileShortcutId() + \".xml\";\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void importFolder(\n\t\t\tPortletDataContext context, Map folderPKs, DLFolder folder)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(folder.getUserUuid());\n\t\tlong plid = context.getPlid();\n\t\tlong parentFolderId = MapUtil.getLong(\n\t\t\tfolderPKs, folder.getParentFolderId(), folder.getParentFolderId());\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tDLFolder existingFolder = null;\n\n\t\ttry {\n\t\t\tif (parentFolderId != DLFolderImpl.DEFAULT_PARENT_FOLDER_ID) {\n\t\t\t\tDLFolderUtil.findByPrimaryKey(parentFolderId);\n\t\t\t}\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\texistingFolder = DLFolderUtil.fetchByUUID_G(\n\t\t\t\t\tfolder.getUuid(), context.getGroupId());\n\n\t\t\t\tif (existingFolder == null) {\n\t\t\t\t\tString name = getFolderName(\n\t\t\t\t\t\tcontext.getCompanyId(), context.getGroupId(),\n\t\t\t\t\t\tparentFolderId, folder.getName(), 2);\n\n\t\t\t\t\texistingFolder = DLFolderLocalServiceUtil.addFolder(\n\t\t\t\t\t\tfolder.getUuid(), userId, plid, parentFolderId,\n\t\t\t\t\t\tname, folder.getDescription(), addCommunityPermissions,\n\t\t\t\t\t\taddGuestPermissions);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texistingFolder = DLFolderLocalServiceUtil.updateFolder(\n\t\t\t\t\t\texistingFolder.getFolderId(), parentFolderId,\n\t\t\t\t\t\tfolder.getName(), folder.getDescription());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString name = getFolderName(\n\t\t\t\t\tcontext.getCompanyId(), context.getGroupId(),\n\t\t\t\t\tparentFolderId, folder.getName(), 2);\n\n\t\t\t\texistingFolder = DLFolderLocalServiceUtil.addFolder(\n\t\t\t\t\tuserId, plid, parentFolderId, name, folder.getDescription(),\n\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\n\t\t\tfolderPKs.put(\n\t\t\t\tfolder.getPrimaryKeyObj(), existingFolder.getPrimaryKeyObj());\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent folder for folder \" +\n\t\t\t\t\tfolder.getFolderId());\n\t\t}\n\t}","id":1085,"modified_method":"protected void importFolder(\n\t\t\tPortletDataContext context, Map<Long, Long> folderPKs,\n\t\t\tDLFolder folder)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(folder.getUserUuid());\n\t\tlong plid = context.getPlid();\n\t\tlong parentFolderId = MapUtil.getLong(\n\t\t\tfolderPKs, folder.getParentFolderId(), folder.getParentFolderId());\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tDLFolder existingFolder = null;\n\n\t\ttry {\n\t\t\tif (parentFolderId != DLFolderImpl.DEFAULT_PARENT_FOLDER_ID) {\n\t\t\t\tDLFolderUtil.findByPrimaryKey(parentFolderId);\n\t\t\t}\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\texistingFolder = DLFolderUtil.fetchByUUID_G(\n\t\t\t\t\tfolder.getUuid(), context.getGroupId());\n\n\t\t\t\tif (existingFolder == null) {\n\t\t\t\t\tString name = getFolderName(\n\t\t\t\t\t\tcontext.getCompanyId(), context.getGroupId(),\n\t\t\t\t\t\tparentFolderId, folder.getName(), 2);\n\n\t\t\t\t\texistingFolder = DLFolderLocalServiceUtil.addFolder(\n\t\t\t\t\t\tfolder.getUuid(), userId, plid, parentFolderId,\n\t\t\t\t\t\tname, folder.getDescription(), addCommunityPermissions,\n\t\t\t\t\t\taddGuestPermissions);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texistingFolder = DLFolderLocalServiceUtil.updateFolder(\n\t\t\t\t\t\texistingFolder.getFolderId(), parentFolderId,\n\t\t\t\t\t\tfolder.getName(), folder.getDescription());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString name = getFolderName(\n\t\t\t\t\tcontext.getCompanyId(), context.getGroupId(),\n\t\t\t\t\tparentFolderId, folder.getName(), 2);\n\n\t\t\t\texistingFolder = DLFolderLocalServiceUtil.addFolder(\n\t\t\t\t\tuserId, plid, parentFolderId, name, folder.getDescription(),\n\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\n\t\t\tfolderPKs.put(folder.getFolderId(), existingFolder.getFolderId());\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent folder for folder \" +\n\t\t\t\t\tfolder.getFolderId());\n\t\t}\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void importEntry(\n\t\t\tPortletDataContext context, Map folderPKs, Map entryNames,\n\t\t\tDLFileEntry entry, String binPath)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(entry.getUserUuid());\n\t\tlong folderId = MapUtil.getLong(\n\t\t\tfolderPKs, entry.getFolderId(), entry.getFolderId());\n\n\t\tString[] tagsEntries = null;\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\ttagsEntries = context.getTagsEntries(\n\t\t\t\tDLFileEntry.class, entry.getPrimaryKeyObj());\n\t\t}\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tbyte[] byteArray = context.getZipEntryAsByteArray(binPath);\n\n\t\tDLFileEntry existingEntry = null;\n\n\t\ttry {\n\t\t\tDLFolderUtil.findByPrimaryKey(folderId);\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\ttry {\n\t\t\t\t\texistingEntry = DLFileEntryFinderUtil.findByUuid_G(\n\t\t\t\t\t\tentry.getUuid(), context.getGroupId());\n\n\t\t\t\t\texistingEntry = DLFileEntryLocalServiceUtil.updateFileEntry(\n\t\t\t\t\t\tuserId, existingEntry.getFolderId(), folderId,\n\t\t\t\t\t\texistingEntry.getName(), entry.getName(),\n\t\t\t\t\t\tentry.getTitle(), entry.getDescription(), tagsEntries,\n\t\t\t\t\t\tentry.getExtraSettings(), byteArray);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchFileEntryException nsfee) {\n\t\t\t\t\texistingEntry = DLFileEntryLocalServiceUtil.addFileEntry(\n\t\t\t\t\t\tentry.getUuid(), userId, folderId, entry.getName(),\n\t\t\t\t\t\tentry.getTitle(), entry.getDescription(),\n\t\t\t\t\t\ttagsEntries, entry.getExtraSettings(), byteArray,\n\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingEntry = DLFileEntryLocalServiceUtil.addFileEntry(\n\t\t\t\t\tuserId, folderId, entry.getName(), entry.getTitle(),\n\t\t\t\t\tentry.getDescription(), tagsEntries,\n\t\t\t\t\tentry.getExtraSettings(), byteArray,\n\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\n\t\t\tentryNames.put(entry.getName(), existingEntry.getName());\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"comments\")) {\n\t\t\t\tcontext.importComments(\n\t\t\t\t\tDLFileEntry.class, entry.getPrimaryKeyObj(),\n\t\t\t\t\texistingEntry.getPrimaryKeyObj(), context.getGroupId());\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\t\tcontext.importRatingsEntries(\n\t\t\t\t\tDLFileEntry.class, entry.getPrimaryKeyObj(),\n\t\t\t\t\texistingEntry.getPrimaryKeyObj());\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent folder for entry \" +\n\t\t\t\t\tentry.getFileEntryId());\n\t\t}\n\t}","id":1086,"modified_method":"protected void importFileEntry(\n\t\t\tPortletDataContext context, Map<Long, Long> folderPKs,\n\t\t\tMap<String, String> fileEntryNames, DLFileEntry fileEntry,\n\t\t\tString binPath)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(fileEntry.getUserUuid());\n\t\tlong folderId = MapUtil.getLong(\n\t\t\tfolderPKs, fileEntry.getFolderId(), fileEntry.getFolderId());\n\n\t\tString[] tagsEntries = null;\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\ttagsEntries = context.getTagsEntries(\n\t\t\t\tDLFileEntry.class, fileEntry.getFileEntryId());\n\t\t}\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tbyte[] bytes = context.getZipEntryAsByteArray(binPath);\n\n\t\tDLFileEntry existingFileEntry = null;\n\n\t\ttry {\n\t\t\tDLFolderUtil.findByPrimaryKey(folderId);\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\ttry {\n\t\t\t\t\texistingFileEntry = DLFileEntryFinderUtil.findByUuid_G(\n\t\t\t\t\t\tfileEntry.getUuid(), context.getGroupId());\n\n\t\t\t\t\texistingFileEntry =\n\t\t\t\t\t\tDLFileEntryLocalServiceUtil.updateFileEntry(\n\t\t\t\t\t\t\tuserId, existingFileEntry.getFolderId(), folderId,\n\t\t\t\t\t\t\texistingFileEntry.getName(), fileEntry.getName(),\n\t\t\t\t\t\t\tfileEntry.getTitle(), fileEntry.getDescription(),\n\t\t\t\t\t\t\ttagsEntries, fileEntry.getExtraSettings(), bytes);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchFileEntryException nsfee) {\n\t\t\t\t\texistingFileEntry =\n\t\t\t\t\tDLFileEntryLocalServiceUtil.addFileEntry(\n\t\t\t\t\t\tfileEntry.getUuid(), userId, folderId,\n\t\t\t\t\t\tfileEntry.getName(), fileEntry.getTitle(),\n\t\t\t\t\t\tfileEntry.getDescription(), tagsEntries,\n\t\t\t\t\t\tfileEntry.getExtraSettings(), bytes,\n\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingFileEntry = DLFileEntryLocalServiceUtil.addFileEntry(\n\t\t\t\t\tuserId, folderId, fileEntry.getName(), fileEntry.getTitle(),\n\t\t\t\t\tfileEntry.getDescription(), tagsEntries,\n\t\t\t\t\tfileEntry.getExtraSettings(), bytes,\n\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\n\t\t\tfileEntryNames.put(\n\t\t\t\tfileEntry.getName(), existingFileEntry.getName());\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"comments\")) {\n\t\t\t\tcontext.importComments(\n\t\t\t\t\tDLFileEntry.class, fileEntry.getFileEntryId(),\n\t\t\t\t\texistingFileEntry.getFileEntryId(), context.getGroupId());\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\t\tcontext.importRatingsEntries(\n\t\t\t\t\tDLFileEntry.class, fileEntry.getFileEntryId(),\n\t\t\t\t\texistingFileEntry.getFileEntryId());\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent folder for entry \" +\n\t\t\t\t\tfileEntry.getFileEntryId());\n\t\t}\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String exportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\t\tElement root = doc.addElement(\"documentlibrary-data\");\n\n\t\t\troot.addAttribute(\"group-id\", String.valueOf(context.getGroupId()));\n\n\t\t\tElement foldersEl = root.addElement(\"folders\");\n\n\t\t\tElement entriesEl = root.addElement(\"entries\");\n\n\t\t\tElement shortcutsEl = root.addElement(\"shortcuts\");\n\n\t\t\tElement ranksEl = root.addElement(\"ranks\");\n\n\t\t\tList<DLFolder> folders = DLFolderUtil.findByGroupId(\n\t\t\t\tcontext.getGroupId());\n\n\t\t\tfor (DLFolder folder : folders) {\n\t\t\t\texportFolder(\n\t\t\t\t\tcontext, foldersEl, entriesEl, shortcutsEl, ranksEl,\n\t\t\t\t\tfolder);\n\t\t\t}\n\n\t\t\treturn XMLFormatter.toString(doc);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":1087,"modified_method":"public String exportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\t\tElement root = doc.addElement(\"documentlibrary-data\");\n\n\t\t\troot.addAttribute(\"group-id\", String.valueOf(context.getGroupId()));\n\n\t\t\tElement foldersEl = root.addElement(\"folders\");\n\t\t\tElement fileEntriesEl = root.addElement(\"file-entries\");\n\t\t\tElement fileShortcutsEl = root.addElement(\"file-shortcuts\");\n\t\t\tElement fileRanksEl = root.addElement(\"file-ranks\");\n\n\t\t\tList<DLFolder> folders = DLFolderUtil.findByGroupId(\n\t\t\t\tcontext.getGroupId());\n\n\t\t\tfor (DLFolder folder : folders) {\n\t\t\t\texportFolder(\n\t\t\t\t\tcontext, foldersEl, fileEntriesEl, fileShortcutsEl,\n\t\t\t\t\tfileRanksEl, folder);\n\t\t\t}\n\n\t\t\treturn XMLFormatter.toString(doc);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\t// Folders\n\n\t\t\tList<Element> folderEls =\n\t\t\t\troot.element(\"folders\").elements(\"folder\");\n\n\t\t\tMap<Long, Long> folderPKs = context.getNewPrimaryKeysMap(\n\t\t\t\tDLFolder.class);\n\n\t\t\tfor (Element el : folderEls) {\n\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tDLFolder folder =\n\t\t\t\t\t\t(DLFolder)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportFolder(context, folderPKs, folder);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Entries\n\n\t\t\tList<Element> entryEls = root.element(\"entries\").elements(\"entry\");\n\n\t\t\tMap entryNames = context.getNewPrimaryKeysMap(DLFileEntry.class);\n\n\t\t\tfor (Element el : entryEls) {\n\t\t\t\tString path = el.attributeValue(\"path\");\n\t\t\t\tString binPath = el.attributeValue(\"bin-path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tDLFileEntry entry =\n\t\t\t\t\t\t(DLFileEntry)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportEntry(context, folderPKs, entryNames, entry, binPath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Shortcuts\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"shortcuts\")) {\n\t\t\t\tList<Element> shortcutEls =\n\t\t\t\t\troot.element(\"shortcuts\").elements(\"shortcut\");\n\n\t\t\t\tfor (Element el : shortcutEls) {\n\t\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\t\tDLFileShortcut shortcut =\n\t\t\t\t\t\t\t(DLFileShortcut)context.getZipEntryAsObject(path);\n\n\t\t\t\t\t\timportShortcut(context, folderPKs, entryNames, shortcut);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Ranks\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ranks\")) {\n\t\t\t\tList<Element> rankEls =\n\t\t\t\t\troot.element(\"ranks\").elements(\"rank\");\n\n\t\t\t\tfor (Element el : rankEls) {\n\t\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\t\tDLFileRank rank =\n\t\t\t\t\t\t\t(DLFileRank)context.getZipEntryAsObject(path);\n\n\t\t\t\t\t\timportRank(context, folderPKs, entryNames, rank);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":1088,"modified_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tList<Element> folderEls = root.element(\"folders\").elements(\n\t\t\t\t\"folder\");\n\n\t\t\tMap<Long, Long> folderPKs = context.getNewPrimaryKeysMap(\n\t\t\t\tDLFolder.class);\n\n\t\t\tfor (Element folderEl : folderEls) {\n\t\t\t\tString path = folderEl.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tDLFolder folder = (DLFolder)context.getZipEntryAsObject(\n\t\t\t\t\t\tpath);\n\n\t\t\t\t\timportFolder(context, folderPKs, folder);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tList<Element> fileEntryEls = root.element(\"file-entries\").elements(\n\t\t\t\t\"file-entry\");\n\n\t\t\tMap<String, String> fileEntryNames = context.getNewPrimaryKeysMap(\n\t\t\t\tDLFileEntry.class);\n\n\t\t\tfor (Element fileEntryEl : fileEntryEls) {\n\t\t\t\tString path = fileEntryEl.attributeValue(\"path\");\n\t\t\t\tString binPath = fileEntryEl.attributeValue(\"bin-path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tDLFileEntry fileEntry =\n\t\t\t\t\t\t(DLFileEntry)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportFileEntry(\n\t\t\t\t\t\tcontext, folderPKs, fileEntryNames, fileEntry, binPath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"shortcuts\")) {\n\t\t\t\tList<Element> fileShortcutEls = root.element(\n\t\t\t\t\t\"file-shortcuts\").elements(\"file-shortcut\");\n\n\t\t\t\tfor (Element fileShortcutEl : fileShortcutEls) {\n\t\t\t\t\tString path = fileShortcutEl.attributeValue(\"path\");\n\n\t\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\t\tDLFileShortcut fileShortcut =\n\t\t\t\t\t\t\t(DLFileShortcut)context.getZipEntryAsObject(path);\n\n\t\t\t\t\t\timportFileShortcut(\n\t\t\t\t\t\t\tcontext, folderPKs, fileEntryNames, fileShortcut);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ranks\")) {\n\t\t\t\tList<Element> fileRankEls = root.element(\"file-ranks\").elements(\n\t\t\t\t\t\"file-rank\");\n\n\t\t\t\tfor (Element fileRankEl : fileRankEls) {\n\t\t\t\t\tString path = fileRankEl.attributeValue(\"path\");\n\n\t\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\t\tDLFileRank fileRank =\n\t\t\t\t\t\t\t(DLFileRank)context.getZipEntryAsObject(path);\n\n\t\t\t\t\t\timportFileRank(\n\t\t\t\t\t\t\tcontext, folderPKs, fileEntryNames, fileRank);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportFolder(\n\t\t\tPortletDataContext context, Element foldersEl, Element entriesEl,\n\t\t\tElement shortcutsEl, Element ranksEl, DLFolder folder)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(folder.getModifiedDate())) {\n\t\t\tString path = getFolderPath(context, folder);\n\n\t\t\tfoldersEl.addElement(\"folder\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tfolder.setUserUuid(folder.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, folder);\n\t\t\t}\n\n\t\t\texportParentFolder(\n\t\t\t\tcontext, foldersEl, folder.getParentFolderId());\n\t\t}\n\n\t\tList<DLFileEntry> folderEntries =\n\t\t\tDLFileEntryUtil.findByFolderId(folder.getFolderId());\n\n\t\tfor (DLFileEntry entry : folderEntries) {\n\t\t\texportEntry(context, foldersEl, entriesEl, ranksEl, entry);\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"shortcuts\")) {\n\t\t\tList<DLFileShortcut> folderShortcuts =\n\t\t\t\tDLFileShortcutUtil.findByFolderId(\n\t\t\t\t\tfolder.getFolderId());\n\n\t\t\tfor (DLFileShortcut shortcut : folderShortcuts) {\n\t\t\t\texportShortcut(context, foldersEl, shortcutsEl, shortcut);\n\t\t\t}\n\t\t}\n\t}","id":1089,"modified_method":"protected void exportFolder(\n\t\t\tPortletDataContext context, Element foldersEl,\n\t\t\tElement fileEntriesEl, Element fileShortcutsEl, Element fileRanksEl,\n\t\t\tDLFolder folder)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(folder.getModifiedDate())) {\n\t\t\tString path = getFolderPath(context, folder);\n\n\t\t\tElement folderEl = foldersEl.addElement(\"folder\");\n\n\t\t\tfolderEl.addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tfolder.setUserUuid(folder.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, folder);\n\t\t\t}\n\n\t\t\texportParentFolder(context, foldersEl, folder.getParentFolderId());\n\t\t}\n\n\t\tList<DLFileEntry> fileEntries = DLFileEntryUtil.findByFolderId(\n\t\tfolder.getFolderId());\n\n\t\tfor (DLFileEntry fileEntry : fileEntries) {\n\t\t\texportFileEntry(\n\t\t\t\tcontext, foldersEl, fileEntriesEl, fileRanksEl, fileEntry);\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"shortcuts\")) {\n\t\t\tList<DLFileShortcut> fileShortcuts =\n\t\t\t\tDLFileShortcutUtil.findByFolderId(folder.getFolderId());\n\n\t\t\tfor (DLFileShortcut fileShortcut : fileShortcuts) {\n\t\t\t\texportFileShortcut(\n\t\t\t\t\tcontext, foldersEl, fileShortcutsEl, fileShortcut);\n\t\t\t}\n\t\t}\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getEntryPath(\n\t\t\tPortletDataContext context, DLFileEntry entry) {\n\t\treturn context.getPortletPath(PortletKeys.DOCUMENT_LIBRARY) +\n\t\t\t\"/entries/\" + entry.getFileEntryId() + CharPool.FORWARD_SLASH +\n\t\t\t\tentry.getVersion() + CharPool.FORWARD_SLASH +\n\t\t\t\t\tentry.getFileEntryId() + \".xml\";\n\t}","id":1090,"modified_method":"protected String getFileEntryPath(\n\t\tPortletDataContext context, DLFileEntry fileEntry) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.DOCUMENT_LIBRARY));\n\t\tsm.append(\"/entries/\");\n\t\tsm.append(fileEntry.getFileEntryId());\n\t\tsm.append(StringPool.SLASH);\n\t\tsm.append(fileEntry.getVersion());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportRank(\n\t\t\tPortletDataContext context, Element ranksEl, DLFileRank entryRank)\n\t\tthrows PortalException, SystemException {\n\n\t\tString path = getRankPath(context, entryRank);\n\n\t\tranksEl.addElement(\"rank\").addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tentryRank.setUserUuid(entryRank.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, entryRank);\n\t\t}\n\t}","id":1091,"modified_method":"protected void exportFileRank(\n\t\t\tPortletDataContext context, Element fileRanksEl,\n\t\t\tDLFileRank fileRank)\n\t\tthrows PortalException, SystemException {\n\n\t\tString path = getFileRankPath(context, fileRank);\n\n\t\tElement fileRankEl = fileRanksEl.addElement(\"file-rank\");\n\n\t\tfileRankEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tfileRank.setUserUuid(fileRank.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, fileRank);\n\t\t}\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getEntryBinPath(\n\t\t\tPortletDataContext context, DLFileEntry entry) {\n\t\treturn context.getPortletPath(PortletKeys.DOCUMENT_LIBRARY) +\n\t\t\t\"/bin/\" + entry.getFileEntryId() + CharPool.FORWARD_SLASH +\n\t\t\t\tentry.getVersion() + CharPool.FORWARD_SLASH +\n\t\t\t\t\tentry.getTitleWithExtension();\n\t}","id":1092,"modified_method":"protected String getFileEntryBinPath(\n\t\tPortletDataContext context, DLFileEntry fileEntry) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.DOCUMENT_LIBRARY));\n\t\tsm.append(\"/bin/\");\n\t\tsm.append(fileEntry.getFileEntryId());\n\t\tsm.append(StringPool.SLASH);\n\t\tsm.append(fileEntry.getVersion());\n\t\tsm.append(StringPool.SLASH);\n\t\tsm.append(fileEntry.getTitleWithExtension());\n\n\t\treturn sm.toString();\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportParentFolder(\n\t\t\tPortletDataContext context, Element foldersEl,\n\t\t\tlong folderId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.hasDateRange() &&\n\t\t\t\t(folderId != DLFolderImpl.DEFAULT_PARENT_FOLDER_ID)) {\n\t\t\tDLFolder folder = DLFolderUtil.findByPrimaryKey(folderId);\n\n\t\t\tString path = getFolderPath(context, folder);\n\n\t\t\tfoldersEl.addElement(\"folder\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tfolder.setUserUuid(folder.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, folder);\n\t\t\t}\n\n\t\t\texportParentFolder(\n\t\t\t\tcontext, foldersEl, folder.getParentFolderId());\n\t\t}\n\t}","id":1093,"modified_method":"protected void exportParentFolder(\n\t\t\tPortletDataContext context, Element foldersEl, long folderId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif ((!context.hasDateRange()) ||\n\t\t\t(folderId == DLFolderImpl.DEFAULT_PARENT_FOLDER_ID)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tDLFolder folder = DLFolderUtil.findByPrimaryKey(folderId);\n\n\t\tString path = getFolderPath(context, folder);\n\n\t\tElement folderEl = foldersEl.addElement(\"folder\");\n\n\t\tfolderEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tfolder.setUserUuid(folder.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, folder);\n\t\t}\n\n\t\texportParentFolder(context, foldersEl, folder.getParentFolderId());\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportShortcut(\n\t\t\tPortletDataContext context, Element foldersEl, Element ranksEl,\n\t\t\tDLFileShortcut shortcut)\n\t\tthrows PortalException, SystemException {\n\n\t\tString path = getShortcutPath(context, shortcut);\n\n\t\tranksEl.addElement(\"shortcut\").addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tshortcut.setUserUuid(shortcut.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, shortcut);\n\t\t}\n\n\t\texportParentFolder(context, foldersEl, shortcut.getFolderId());\n\t}","id":1094,"modified_method":"protected void exportFileShortcut(\n\t\t\tPortletDataContext context, Element foldersEl,\n\t\t\tElement fileShortcutsEl, DLFileShortcut fileShortcut)\n\t\tthrows PortalException, SystemException {\n\n\t\tString path = getFileShortcutPath(context, fileShortcut);\n\n\t\tElement fileShortcutEl = fileShortcutsEl.addElement(\"file-shortcut\");\n\n\t\tfileShortcutEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tfileShortcut.setUserUuid(fileShortcut.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, fileShortcut);\n\t\t}\n\n\t\texportParentFolder(context, foldersEl, fileShortcut.getFolderId());\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getRankPath(\n\t\t\tPortletDataContext context, DLFileRank entryRank) {\n\t\treturn context.getPortletPath(PortletKeys.DOCUMENT_LIBRARY) +\n\t\t\t\"/ranks/\" + entryRank.getFileRankId() + \".xml\";\n\t}","id":1095,"modified_method":"protected String getFileRankPath(\n\t\tPortletDataContext context, DLFileRank fileRank) {\n\n\t\treturn context.getPortletPath(PortletKeys.DOCUMENT_LIBRARY) +\n\t\t\t\"/ranks/\" + fileRank.getFileRankId() + \".xml\";\n\t}","commit_id":"255f71288a03f18f8790ab4f73c6e1d2defb846e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportFolder(\n\t\t\tPortletDataContext context, Element foldersEl, Element imagesEl,\n\t\t\tIGFolder igFolder)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(igFolder.getModifiedDate())) {\n\t\t\tString path = getFolderPath(context, igFolder);\n\n\t\t\tfoldersEl.addElement(\"folder\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tigFolder.setUserUuid(igFolder.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, igFolder);\n\t\t\t}\n\n\t\t\texportParentFolder(\n\t\t\t\tcontext, foldersEl, igFolder.getParentFolderId());\n\t\t}\n\n\t\tList<IGImage> igImages =\n\t\t\tIGImageUtil.findByFolderId(igFolder.getFolderId());\n\n\t\tfor (IGImage igImage : igImages) {\n\t\t\texportImage(context, foldersEl, imagesEl, igImage);\n\t\t}\n\t}","id":1096,"modified_method":"protected void exportFolder(\n\t\t\tPortletDataContext context, Element foldersEl, Element imagesEl,\n\t\t\tIGFolder folder)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(folder.getModifiedDate())) {\n\t\t\tString path = getFolderPath(context, folder);\n\n\t\t\tElement folderEl = foldersEl.addElement(\"folder\");\n\n\t\t\tfolderEl.addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tfolder.setUserUuid(folder.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, folder);\n\t\t\t}\n\n\t\t\texportParentFolder(context, foldersEl, folder.getParentFolderId());\n\t\t}\n\n\t\tList<IGImage> images = IGImageUtil.findByFolderId(folder.getFolderId());\n\n\t\tfor (IGImage image : images) {\n\t\t\texportImage(context, foldersEl, imagesEl, image);\n\t\t}\n\t}","commit_id":"f35424098a10dd225f109d71bde5e0d6c8ca682e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getImagePath(\n\t\t\tPortletDataContext context, IGImage image) {\n\t\treturn context.getPortletPath(PortletKeys.IMAGE_GALLERY) + \"/images/\" +\n\t\t\timage.getImageId() + \".xml\";\n\t}","id":1097,"modified_method":"protected String getImagePath(\n\t\tPortletDataContext context, IGImage image) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.IMAGE_GALLERY));\n\t\tsm.append(\"/images/\");\n\t\tsm.append(image.getImageId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"f35424098a10dd225f109d71bde5e0d6c8ca682e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void importFolder(\n\t\t\tPortletDataContext context, Map<Long, Long> folderPKs,\n\t\t\tIGFolder igFolder)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(igFolder.getUserUuid());\n\t\tlong plid = context.getPlid();\n\t\tlong parentFolderId = MapUtil.getLong(\n\t\t\tfolderPKs, igFolder.getParentFolderId(), igFolder.getParentFolderId());\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tIGFolder existingFolder = null;\n\n\t\ttry {\n\t\t\tif (parentFolderId != IGFolderImpl.DEFAULT_PARENT_FOLDER_ID) {\n\t\t\t\tIGFolderUtil.findByPrimaryKey(parentFolderId);\n\t\t\t}\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\texistingFolder = IGFolderUtil.fetchByUUID_G(\n\t\t\t\t\tigFolder.getUuid(), context.getGroupId());\n\n\t\t\t\tif (existingFolder == null) {\n\t\t\t\t\tString name = getFolderName(\n\t\t\t\t\t\tcontext.getCompanyId(), context.getGroupId(),\n\t\t\t\t\t\tparentFolderId, igFolder.getName(), 2);\n\n\t\t\t\t\texistingFolder = IGFolderLocalServiceUtil.addFolder(\n\t\t\t\t\t\tigFolder.getUuid(), userId, plid, parentFolderId,\n\t\t\t\t\t\tname, igFolder.getDescription(), addCommunityPermissions,\n\t\t\t\t\t\taddGuestPermissions);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texistingFolder =\n\t\t\t\t\t\tIGFolderLocalServiceUtil.updateFolder(\n\t\t\t\t\t\texistingFolder.getFolderId(), parentFolderId,\n\t\t\t\t\t\tigFolder.getName(), igFolder.getDescription(),\n\t\t\t\t\t\tfalse);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString name = getFolderName(\n\t\t\t\t\tcontext.getCompanyId(), context.getGroupId(),\n\t\t\t\t\tparentFolderId, igFolder.getName(), 2);\n\n\t\t\t\texistingFolder = IGFolderLocalServiceUtil.addFolder(\n\t\t\t\t\tuserId, plid, parentFolderId, name, igFolder.getDescription(),\n\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\n\t\t\tfolderPKs.put(igFolder.getFolderId(), existingFolder.getFolderId());\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent folder for folder \" +\n\t\t\t\t\tigFolder.getFolderId());\n\t\t}\n\t}","id":1098,"modified_method":"protected void importFolder(\n\t\t\tPortletDataContext context, Map<Long, Long> folderPKs,\n\t\t\tIGFolder folder)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(folder.getUserUuid());\n\t\tlong plid = context.getPlid();\n\t\tlong parentFolderId = MapUtil.getLong(\n\t\t\tfolderPKs, folder.getParentFolderId(), folder.getParentFolderId());\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tIGFolder existingFolder = null;\n\n\t\ttry {\n\t\t\tif (parentFolderId != IGFolderImpl.DEFAULT_PARENT_FOLDER_ID) {\n\t\t\t\tIGFolderUtil.findByPrimaryKey(parentFolderId);\n\t\t\t}\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\texistingFolder = IGFolderUtil.fetchByUUID_G(\n\t\t\t\t\tfolder.getUuid(), context.getGroupId());\n\n\t\t\t\tif (existingFolder == null) {\n\t\t\t\t\tString name = getFolderName(\n\t\t\t\t\t\tcontext.getCompanyId(), context.getGroupId(),\n\t\t\t\t\t\tparentFolderId, folder.getName(), 2);\n\n\t\t\t\t\texistingFolder = IGFolderLocalServiceUtil.addFolder(\n\t\t\t\t\t\tfolder.getUuid(), userId, plid, parentFolderId,\n\t\t\t\t\t\tname, folder.getDescription(), addCommunityPermissions,\n\t\t\t\t\t\taddGuestPermissions);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texistingFolder =\n\t\t\t\t\t\tIGFolderLocalServiceUtil.updateFolder(\n\t\t\t\t\t\texistingFolder.getFolderId(), parentFolderId,\n\t\t\t\t\t\tfolder.getName(), folder.getDescription(),\n\t\t\t\t\t\tfalse);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString name = getFolderName(\n\t\t\t\t\tcontext.getCompanyId(), context.getGroupId(),\n\t\t\t\t\tparentFolderId, folder.getName(), 2);\n\n\t\t\t\texistingFolder = IGFolderLocalServiceUtil.addFolder(\n\t\t\t\t\tuserId, plid, parentFolderId, name, folder.getDescription(),\n\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\n\t\t\tfolderPKs.put(folder.getFolderId(), existingFolder.getFolderId());\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent folder for folder \" +\n\t\t\t\t\tfolder.getFolderId());\n\t\t}\n\t}","commit_id":"f35424098a10dd225f109d71bde5e0d6c8ca682e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\t// Folders\n\n\t\t\tList<Element> folderEls =\n\t\t\t\troot.element(\"folders\").elements(\"folder\");\n\n\t\t\tMap<Long, Long> folderPKs = context.getNewPrimaryKeysMap(\n\t\t\t\tIGFolder.class);\n\n\t\t\tfor (Element el : folderEls) {\n\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tIGFolder folder =\n\t\t\t\t\t\t(IGFolder)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportFolder(context, folderPKs, folder);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// IGImages\n\n\t\t\tList<Element> entryEls = root.element(\"images\").elements(\"image\");\n\n\t\t\tfor (Element el : entryEls) {\n\t\t\t\tString path = el.attributeValue(\"path\");\n\t\t\t\tString binPath = el.attributeValue(\"bin-path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tIGImage igImage =\n\t\t\t\t\t\t(IGImage)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportImage(context, folderPKs, igImage, binPath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":1099,"modified_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tList<Element> folderEls = root.element(\"folders\").elements(\n\t\t\t\t\"folder\");\n\n\t\t\tMap<Long, Long> folderPKs = context.getNewPrimaryKeysMap(\n\t\t\t\tIGFolder.class);\n\n\t\t\tfor (Element folderEl : folderEls) {\n\t\t\t\tString path = folderEl.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tIGFolder folder = (IGFolder)context.getZipEntryAsObject(\n\t\t\t\t\t\tpath);\n\n\t\t\t\t\timportFolder(context, folderPKs, folder);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tList<Element> imageEls = root.element(\"images\").elements(\"image\");\n\n\t\t\tfor (Element imageEl : imageEls) {\n\t\t\t\tString path = imageEl.attributeValue(\"path\");\n\t\t\t\tString binPath = imageEl.attributeValue(\"bin-path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tIGImage image = (IGImage)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportImage(context, folderPKs, image, binPath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"f35424098a10dd225f109d71bde5e0d6c8ca682e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void importImage(\n\t\t\tPortletDataContext context, Map<Long, Long> folderPKs,\n\t\t\tIGImage igImage, String binPath)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(igImage.getUserUuid());\n\t\tlong folderId = MapUtil.getLong(\n\t\t\tfolderPKs, igImage.getFolderId(), igImage.getFolderId());\n\n\t\tFile imageFile = null;\n\n\t\tbyte[] byteArray = context.getZipEntryAsByteArray(binPath);\n\n\t\tif (byteArray == null) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find image for IG image \" + igImage.getImageId());\n\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\timageFile = File.createTempFile(\n\t\t\t\tString.valueOf(igImage.getPrimaryKey()),\n\t\t\t\tStringPool.PERIOD + igImage.getImageType());\n\n\t\t\tFileUtil.write(imageFile, byteArray);\n\t\t}\n\n\t\tString[] tagsEntries = null;\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\ttagsEntries = context.getTagsEntries(\n\t\t\t\tIGImage.class, igImage.getPrimaryKeyObj());\n\t\t}\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tIGImage existingImage = null;\n\n\t\ttry {\n\t\t\tIGFolderUtil.findByPrimaryKey(folderId);\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\ttry {\n\t\t\t\t\texistingImage = IGImageFinderUtil.findByUuid_G(\n\t\t\t\t\t\tigImage.getUuid(), context.getGroupId());\n\n\t\t\t\t\tIGImageLocalServiceUtil.updateImage(\n\t\t\t\t\t\tuserId, existingImage.getImageId(), folderId,\n\t\t\t\t\t\tigImage.getName(), igImage.getDescription(), imageFile,\n\t\t\t\t\t\tigImage.getImageType(), tagsEntries);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchImageException nsie) {\n\t\t\t\t\tIGImageLocalServiceUtil.addImage(\n\t\t\t\t\t\tigImage.getUuid(), userId, folderId,\n\t\t\t\t\t\tigImage.getName(), igImage.getDescription(), imageFile,\n\t\t\t\t\t\tigImage.getImageType(), tagsEntries,\n\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tIGImageLocalServiceUtil.addImage(\n\t\t\t\t\tuserId, folderId, igImage.getName(),\n\t\t\t\t\tigImage.getDescription(), imageFile, igImage.getImageType(),\n\t\t\t\t\ttagsEntries, addCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent folder for IG image \" +\n\t\t\t\t\tigImage.getImageId());\n\t\t}\n\t}","id":1100,"modified_method":"protected void importImage(\n\t\t\tPortletDataContext context, Map<Long, Long> folderPKs,\n\t\t\tIGImage image, String binPath)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(image.getUserUuid());\n\t\tlong folderId = MapUtil.getLong(\n\t\t\tfolderPKs, image.getFolderId(), image.getFolderId());\n\n\t\tFile imageFile = null;\n\n\t\tbyte[] bytes = context.getZipEntryAsByteArray(binPath);\n\n\t\tif (bytes == null) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find image file for image \" + image.getImageId());\n\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\timageFile = File.createTempFile(\n\t\t\t\tString.valueOf(image.getPrimaryKey()),\n\t\t\t\tStringPool.PERIOD + image.getImageType());\n\n\t\t\tFileUtil.write(imageFile, bytes);\n\t\t}\n\n\t\tString[] tagsEntries = null;\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\ttagsEntries = context.getTagsEntries(\n\t\t\t\tIGImage.class, image.getImageId());\n\t\t}\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tIGImage existingImage = null;\n\n\t\ttry {\n\t\t\tIGFolderUtil.findByPrimaryKey(folderId);\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\ttry {\n\t\t\t\t\texistingImage = IGImageFinderUtil.findByUuid_G(\n\t\t\t\t\t\timage.getUuid(), context.getGroupId());\n\n\t\t\t\t\tIGImageLocalServiceUtil.updateImage(\n\t\t\t\t\t\tuserId, existingImage.getImageId(), folderId,\n\t\t\t\t\t\timage.getName(), image.getDescription(), imageFile,\n\t\t\t\t\t\timage.getImageType(), tagsEntries);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchImageException nsie) {\n\t\t\t\t\tIGImageLocalServiceUtil.addImage(\n\t\t\t\t\t\timage.getUuid(), userId, folderId,\n\t\t\t\t\t\timage.getName(), image.getDescription(), imageFile,\n\t\t\t\t\t\timage.getImageType(), tagsEntries,\n\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tIGImageLocalServiceUtil.addImage(\n\t\t\t\t\tuserId, folderId, image.getName(),\n\t\t\t\t\timage.getDescription(), imageFile, image.getImageType(),\n\t\t\t\t\ttagsEntries, addCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent folder for image \" +\n\t\t\t\t\timage.getImageId());\n\t\t}\n\t}","commit_id":"f35424098a10dd225f109d71bde5e0d6c8ca682e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getImageBinPath(\n\t\t\tPortletDataContext context, IGImage image) {\n\t\treturn context.getPortletPath(PortletKeys.IMAGE_GALLERY) +\n\t\t\t\"/bin/\" + image.getImageId() + CharPool.PERIOD +\n\t\t\t\timage.getImageType();\n\t}","id":1101,"modified_method":"protected String getImageBinPath(\n\t\tPortletDataContext context, IGImage image) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.IMAGE_GALLERY));\n\t\tsm.append(\"/bin/\");\n\t\tsm.append(image.getImageId());\n\t\tsm.append(StringPool.PERIOD);\n\t\tsm.append(image.getImageType());\n\n\t\treturn sm.toString();\n\t}","commit_id":"f35424098a10dd225f109d71bde5e0d6c8ca682e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportImage(\n\t\t\tPortletDataContext context, Element foldersEl, Element imagesEl,\n\t\t\tIGImage image)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(image.getModifiedDate())) {\n\t\t\tString path = getImagePath(context, image);\n\n\t\t\tElement imageEl = imagesEl.addElement(\"image\");\n\t\t\timageEl.addAttribute(\"path\", path);\n\t\t\timageEl.addAttribute(\"bin-path\", getImageBinPath(context, image));\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\t\t\tcontext.addTagsEntries(\n\t\t\t\t\t\tIGImage.class, image.getPrimaryKeyObj());\n\t\t\t\t}\n\n\t\t\t\timage.setUserUuid(image.getUserUuid());\n\n\t\t\t\tImage largeImage = ImageUtil.findByPrimaryKey(\n\t\t\t\t\timage.getLargeImageId());\n\n\t\t\t\timage.setImageType(largeImage.getType());\n\n\t\t\t\tcontext.addZipEntry(\n\t\t\t\t\tgetImageBinPath(context, image), largeImage.getTextObj());\n\n\t\t\t\tcontext.addZipEntry(path, image);\n\t\t\t}\n\n\t\t\texportParentFolder(context, foldersEl, image.getFolderId());\n\t\t}\n\t}","id":1102,"modified_method":"protected void exportImage(\n\t\t\tPortletDataContext context, Element foldersEl, Element imagesEl,\n\t\t\tIGImage image)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(image.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getImagePath(context, image);\n\n\t\tElement imageEl = imagesEl.addElement(\"image\");\n\n\t\timageEl.addAttribute(\"path\", path);\n\t\timageEl.addAttribute(\"bin-path\", getImageBinPath(context, image));\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\t\tcontext.addTagsEntries(IGImage.class, image.getImageId());\n\t\t\t}\n\n\t\t\timage.setUserUuid(image.getUserUuid());\n\n\t\t\tImage largeImage = ImageUtil.findByPrimaryKey(\n\t\t\t\timage.getLargeImageId());\n\n\t\t\timage.setImageType(largeImage.getType());\n\n\t\t\tcontext.addZipEntry(\n\t\t\t\tgetImageBinPath(context, image), largeImage.getTextObj());\n\n\t\t\tcontext.addZipEntry(path, image);\n\t\t}\n\n\t\texportParentFolder(context, foldersEl, image.getFolderId());\n\t}","commit_id":"f35424098a10dd225f109d71bde5e0d6c8ca682e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportParentFolder(\n\t\t\tPortletDataContext context, Element foldersEl,\n\t\t\tlong folderId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.hasDateRange() &&\n\t\t\t\t(folderId != IGFolderImpl.DEFAULT_PARENT_FOLDER_ID)) {\n\t\t\tIGFolder folder = IGFolderUtil.findByPrimaryKey(folderId);\n\n\t\t\tString path = getFolderPath(context, folder);\n\n\t\t\tfoldersEl.addElement(\"folder\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tfolder.setUserUuid(folder.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, folder);\n\t\t\t}\n\n\t\t\texportParentFolder(context, foldersEl, folder.getParentFolderId());\n\t\t}\n\t}","id":1103,"modified_method":"protected void exportParentFolder(\n\t\t\tPortletDataContext context, Element foldersEl, long folderId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif ((!context.hasDateRange()) ||\n\t\t\t(folderId == IGFolderImpl.DEFAULT_PARENT_FOLDER_ID)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tIGFolder folder = IGFolderUtil.findByPrimaryKey(folderId);\n\n\t\tString path = getFolderPath(context, folder);\n\n\t\tElement folderEl = foldersEl.addElement(\"folder\");\n\n\t\tfolderEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tfolder.setUserUuid(folder.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, folder);\n\t\t}\n\n\t\texportParentFolder(context, foldersEl, folder.getParentFolderId());\n\t}","commit_id":"f35424098a10dd225f109d71bde5e0d6c8ca682e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String exportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\t\tElement root = doc.addElement(\"image-gallery\");\n\n\t\t\troot.addAttribute(\"group-id\", String.valueOf(context.getGroupId()));\n\n\t\t\tElement foldersEl = root.addElement(\"folders\");\n\n\t\t\tElement imagesEl = root.addElement(\"images\");\n\n\t\t\tList<IGFolder> folders = IGFolderUtil.findByGroupId(\n\t\t\t\tcontext.getGroupId());\n\n\t\t\tfor (IGFolder igFolder : folders) {\n\t\t\t\texportFolder(context, foldersEl, imagesEl, igFolder);\n\t\t\t}\n\n\t\t\treturn XMLFormatter.toString(doc);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":1104,"modified_method":"public String exportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\t\tElement root = doc.addElement(\"image-gallery\");\n\n\t\t\troot.addAttribute(\"group-id\", String.valueOf(context.getGroupId()));\n\n\t\t\tElement foldersEl = root.addElement(\"folders\");\n\t\t\tElement imagesEl = root.addElement(\"images\");\n\n\t\t\tList<IGFolder> folders = IGFolderUtil.findByGroupId(\n\t\t\t\tcontext.getGroupId());\n\n\t\t\tfor (IGFolder folder : folders) {\n\t\t\t\texportFolder(context, foldersEl, imagesEl, folder);\n\t\t\t}\n\n\t\t\treturn XMLFormatter.toString(doc);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"f35424098a10dd225f109d71bde5e0d6c8ca682e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getFolderPath(\n\t\t\tPortletDataContext context, IGFolder folder) {\n\t\treturn context.getPortletPath(PortletKeys.IMAGE_GALLERY) + \"/folders/\" +\n\t\t\tfolder.getFolderId() + \".xml\";\n\t}","id":1105,"modified_method":"protected String getFolderPath(\n\t\tPortletDataContext context, IGFolder folder) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.IMAGE_GALLERY));\n\t\tsm.append(\"/folders/\");\n\t\tsm.append(folder.getFolderId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"f35424098a10dd225f109d71bde5e0d6c8ca682e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getEntryPath(\n\t\t\tPortletDataContext context, BookmarksEntry entry) {\n\t\treturn context.getPortletPath(PortletKeys.BOOKMARKS) + \"/entries/\" +\n\t\t\tentry.getEntryId() + \".xml\";\n\t}","id":1106,"modified_method":"protected String getEntryPath(\n\t\tPortletDataContext context, BookmarksEntry entry) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.BOOKMARKS));\n\t\tsm.append(\"/entries/\");\n\t\tsm.append(entry.getEntryId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"c203a1768bcff02b9fbbbfd244463533a5cbdadd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportParentFolder(\n\t\t\tPortletDataContext context, Element foldersEl,\n\t\t\tlong folderId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.hasDateRange() &&\n\t\t\t\t(folderId != BookmarksFolderImpl.DEFAULT_PARENT_FOLDER_ID)) {\n\t\t\tBookmarksFolder folder =\n\t\t\t\tBookmarksFolderUtil.findByPrimaryKey(folderId);\n\n\t\t\tString path = getFolderPath(context, folder);\n\n\t\t\tfoldersEl.addElement(\"folder\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tfolder.setUserUuid(folder.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, folder);\n\t\t\t}\n\n\t\t\texportParentFolder(context, foldersEl, folder.getParentFolderId());\n\t\t}\n\t}","id":1107,"modified_method":"protected void exportParentFolder(\n\t\t\tPortletDataContext context, Element foldersEl, long folderId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif ((!context.hasDateRange()) ||\n\t\t\t(folderId == BookmarksFolderImpl.DEFAULT_PARENT_FOLDER_ID)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tBookmarksFolder folder = BookmarksFolderUtil.findByPrimaryKey(folderId);\n\n\t\tString path = getFolderPath(context, folder);\n\n\t\tElement folderEl = foldersEl.addElement(\"folder\");\n\n\t\tfolderEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tfolder.setUserUuid(folder.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, folder);\n\t\t}\n\n\t\texportParentFolder(context, foldersEl, folder.getParentFolderId());\n\t}","commit_id":"c203a1768bcff02b9fbbbfd244463533a5cbdadd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportFolder(\n\t\t\tPortletDataContext context, Element foldersEl, Element entriesEl,\n\t\t\tBookmarksFolder folder)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(folder.getModifiedDate())) {\n\t\t\tString path = getFolderPath(context, folder);\n\n\t\t\tfoldersEl.addElement(\"folder\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tfolder.setUserUuid(folder.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, folder);\n\t\t\t}\n\n\t\t\texportParentFolder(context, foldersEl, folder.getParentFolderId());\n\t\t}\n\n\t\tList<BookmarksEntry> entries =\n\t\t\tBookmarksEntryUtil.findByFolderId(folder.getFolderId());\n\n\t\tfor (BookmarksEntry entry : entries) {\n\t\t\texportEntry(context, foldersEl, entriesEl, entry);\n\t\t}\n\t}","id":1108,"modified_method":"protected void exportFolder(\n\t\t\tPortletDataContext context, Element foldersEl, Element entriesEl,\n\t\t\tBookmarksFolder folder)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(folder.getModifiedDate())) {\n\t\t\tString path = getFolderPath(context, folder);\n\n\t\t\tElement folderEl = foldersEl.addElement(\"folder\");\n\n\t\t\tfolderEl.addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tfolder.setUserUuid(folder.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, folder);\n\t\t\t}\n\n\t\t\texportParentFolder(context, foldersEl, folder.getParentFolderId());\n\t\t}\n\n\t\tList<BookmarksEntry> entries = BookmarksEntryUtil.findByFolderId(\n\t\t\tfolder.getFolderId());\n\n\t\tfor (BookmarksEntry entry : entries) {\n\t\t\texportEntry(context, foldersEl, entriesEl, entry);\n\t\t}\n\t}","commit_id":"c203a1768bcff02b9fbbbfd244463533a5cbdadd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getFolderPath(\n\t\t\tPortletDataContext context, BookmarksFolder folder) {\n\t\treturn context.getPortletPath(PortletKeys.BOOKMARKS) + \"/folders/\" +\n\t\t\tfolder.getFolderId() + \".xml\";\n\t}","id":1109,"modified_method":"protected String getFolderPath(\n\t\tPortletDataContext context, BookmarksFolder folder) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.BOOKMARKS));\n\t\tsm.append(\"/folders/\");\n\t\tsm.append(folder.getFolderId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"c203a1768bcff02b9fbbbfd244463533a5cbdadd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\t// Folders\n\n\t\t\tList<Element> folderEls = root.element(\"folders\").elements(\"folder\");\n\n\t\t\tMap<Long, Long> folderPKs = context.getNewPrimaryKeysMap(\n\t\t\t\tBookmarksFolder.class);\n\n\t\t\tfor (Element el : folderEls) {\n\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tBookmarksFolder folder =\n\t\t\t\t\t\t(BookmarksFolder)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportFolder(context, folderPKs, folder);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Entries\n\n\t\t\tList<Element> entryEls = root.element(\"entries\").elements(\"entry\");\n\n\t\t\tfor (Element el : entryEls) {\n\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tBookmarksEntry entry =\n\t\t\t\t\t\t(BookmarksEntry)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportEntry(context, folderPKs, entry);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":1110,"modified_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tList<Element> folderEls = root.element(\"folders\").elements(\n\t\t\t\t\"folder\");\n\n\t\t\tMap<Long, Long> folderPKs = context.getNewPrimaryKeysMap(\n\t\t\t\tBookmarksFolder.class);\n\n\t\t\tfor (Element folderEl : folderEls) {\n\t\t\t\tString path = folderEl.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tBookmarksFolder folder =\n\t\t\t\t\t\t(BookmarksFolder)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportFolder(context, folderPKs, folder);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tList<Element> entryEls = root.element(\"entries\").elements(\"entry\");\n\n\t\t\tfor (Element entryEl : entryEls) {\n\t\t\t\tString path = entryEl.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tBookmarksEntry entry =\n\t\t\t\t\t\t(BookmarksEntry)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportEntry(context, folderPKs, entry);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"c203a1768bcff02b9fbbbfd244463533a5cbdadd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void importFolder(\n\t\t\tPortletDataContext context, Map<Long, Long> folderPKs,\n\t\t\tBookmarksFolder folder)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(folder.getUserUuid());\n\t\tlong plid = context.getPlid();\n\t\tlong parentFolderId = MapUtil.getLong(\n\t\t\tfolderPKs, folder.getParentFolderId(), folder.getParentFolderId());\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tBookmarksFolder existingFolder = null;\n\n\t\ttry {\n\t\t\tif (parentFolderId !=\n\t\t\t\t\tBookmarksFolderImpl.DEFAULT_PARENT_FOLDER_ID) {\n\n\t\t\t\tBookmarksFolderUtil.findByPrimaryKey(parentFolderId);\n\t\t\t}\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\t\t\t\texistingFolder = BookmarksFolderUtil.fetchByUUID_G(\n\t\t\t\t\tfolder.getUuid(), context.getGroupId());\n\n\t\t\t\tif (existingFolder == null) {\n\t\t\t\t\texistingFolder = BookmarksFolderLocalServiceUtil.addFolder(\n\t\t\t\t\t\tfolder.getUuid(), userId, plid, parentFolderId,\n\t\t\t\t\t\tfolder.getName(), folder.getDescription(),\n\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texistingFolder =\n\t\t\t\t\t\tBookmarksFolderLocalServiceUtil.updateFolder(\n\t\t\t\t\t\t\texistingFolder.getFolderId(), parentFolderId,\n\t\t\t\t\t\t\tfolder.getName(), folder.getDescription(), false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingFolder = BookmarksFolderLocalServiceUtil.addFolder(\n\t\t\t\t\tuserId, plid, parentFolderId, folder.getName(),\n\t\t\t\t\tfolder.getDescription(), addCommunityPermissions,\n\t\t\t\t\taddGuestPermissions);\n\t\t\t}\n\n\t\t\tfolderPKs.put(\n\t\t\t\tnew Long(folder.getFolderId()),\n\t\t\t\tnew Long(existingFolder.getFolderId()));\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent folder for folder \" +\n\t\t\t\t\tfolder.getFolderId());\n\t\t}\n\t}","id":1111,"modified_method":"protected void importFolder(\n\t\t\tPortletDataContext context, Map<Long, Long> folderPKs,\n\t\t\tBookmarksFolder folder)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(folder.getUserUuid());\n\t\tlong plid = context.getPlid();\n\t\tlong parentFolderId = MapUtil.getLong(\n\t\t\tfolderPKs, folder.getParentFolderId(), folder.getParentFolderId());\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tBookmarksFolder existingFolder = null;\n\n\t\ttry {\n\t\t\tif (parentFolderId !=\n\t\t\t\t\tBookmarksFolderImpl.DEFAULT_PARENT_FOLDER_ID) {\n\n\t\t\t\tBookmarksFolderUtil.findByPrimaryKey(parentFolderId);\n\t\t\t}\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\t\t\t\texistingFolder = BookmarksFolderUtil.fetchByUUID_G(\n\t\t\t\t\tfolder.getUuid(), context.getGroupId());\n\n\t\t\t\tif (existingFolder == null) {\n\t\t\t\t\texistingFolder = BookmarksFolderLocalServiceUtil.addFolder(\n\t\t\t\t\t\tfolder.getUuid(), userId, plid, parentFolderId,\n\t\t\t\t\t\tfolder.getName(), folder.getDescription(),\n\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texistingFolder =\n\t\t\t\t\t\tBookmarksFolderLocalServiceUtil.updateFolder(\n\t\t\t\t\t\t\texistingFolder.getFolderId(), parentFolderId,\n\t\t\t\t\t\t\tfolder.getName(), folder.getDescription(), false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingFolder = BookmarksFolderLocalServiceUtil.addFolder(\n\t\t\t\t\tuserId, plid, parentFolderId, folder.getName(),\n\t\t\t\t\tfolder.getDescription(), addCommunityPermissions,\n\t\t\t\t\taddGuestPermissions);\n\t\t\t}\n\n\t\t\tfolderPKs.put(folder.getFolderId(), existingFolder.getFolderId());\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent folder for folder \" +\n\t\t\t\t\tfolder.getFolderId());\n\t\t}\n\t}","commit_id":"c203a1768bcff02b9fbbbfd244463533a5cbdadd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void importEntry(\n\t\t\tPortletDataContext context, Map<Long, Long> folderPKs,\n\t\t\tBookmarksEntry entry)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(entry.getUserUuid());\n\t\tlong folderId = MapUtil.getLong(\n\t\t\tfolderPKs, entry.getFolderId(), entry.getFolderId());\n\n\t\tString[] tagsEntries = null;\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\ttagsEntries = context.getTagsEntries(\n\t\t\t\tBookmarksEntry.class, entry.getPrimaryKeyObj());\n\t\t}\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tBookmarksEntry existingEntry = null;\n\n\t\ttry {\n\t\t\tBookmarksFolderUtil.findByPrimaryKey(folderId);\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\ttry {\n\t\t\t\t\texistingEntry = BookmarksEntryFinderUtil.findByUuid_G(\n\t\t\t\t\t\tentry.getUuid(), context.getGroupId());\n\n\t\t\t\t\tBookmarksEntryLocalServiceUtil.updateEntry(\n\t\t\t\t\t\tuserId, existingEntry.getEntryId(), folderId,\n\t\t\t\t\t\tentry.getName(), entry.getUrl(), entry.getComments(),\n\t\t\t\t\t\ttagsEntries);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchEntryException nsee) {\n\t\t\t\t\tBookmarksEntryLocalServiceUtil.addEntry(\n\t\t\t\t\t\tentry.getUuid(), userId, folderId, entry.getName(),\n\t\t\t\t\t\tentry.getUrl(), entry.getComments(), tagsEntries,\n\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tBookmarksEntryLocalServiceUtil.addEntry(\n\t\t\t\t\tuserId, folderId, entry.getName(), entry.getUrl(),\n\t\t\t\t\tentry.getComments(), tagsEntries, addCommunityPermissions,\n\t\t\t\t\taddGuestPermissions);\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent folder for entry \" +\n\t\t\t\t\tentry.getEntryId());\n\t\t}\n\t}","id":1112,"modified_method":"protected void importEntry(\n\t\t\tPortletDataContext context, Map<Long, Long> folderPKs,\n\t\t\tBookmarksEntry entry)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(entry.getUserUuid());\n\t\tlong folderId = MapUtil.getLong(\n\t\t\tfolderPKs, entry.getFolderId(), entry.getFolderId());\n\n\t\tString[] tagsEntries = null;\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\ttagsEntries = context.getTagsEntries(\n\t\t\t\tBookmarksEntry.class, entry.getEntryId());\n\t\t}\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tBookmarksEntry existingEntry = null;\n\n\t\ttry {\n\t\t\tBookmarksFolderUtil.findByPrimaryKey(folderId);\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\ttry {\n\t\t\t\t\texistingEntry = BookmarksEntryFinderUtil.findByUuid_G(\n\t\t\t\t\t\tentry.getUuid(), context.getGroupId());\n\n\t\t\t\t\tBookmarksEntryLocalServiceUtil.updateEntry(\n\t\t\t\t\t\tuserId, existingEntry.getEntryId(), folderId,\n\t\t\t\t\t\tentry.getName(), entry.getUrl(), entry.getComments(),\n\t\t\t\t\t\ttagsEntries);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchEntryException nsee) {\n\t\t\t\t\tBookmarksEntryLocalServiceUtil.addEntry(\n\t\t\t\t\t\tentry.getUuid(), userId, folderId, entry.getName(),\n\t\t\t\t\t\tentry.getUrl(), entry.getComments(), tagsEntries,\n\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tBookmarksEntryLocalServiceUtil.addEntry(\n\t\t\t\t\tuserId, folderId, entry.getName(), entry.getUrl(),\n\t\t\t\t\tentry.getComments(), tagsEntries, addCommunityPermissions,\n\t\t\t\t\taddGuestPermissions);\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent folder for entry \" +\n\t\t\t\t\tentry.getEntryId());\n\t\t}\n\t}","commit_id":"c203a1768bcff02b9fbbbfd244463533a5cbdadd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportEntry(\n\t\t\tPortletDataContext context, Element foldersEl, Element entriesEl,\n\t\t\tBookmarksEntry entry)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(entry.getModifiedDate())) {\n\t\t\tString path = getEntryPath(context, entry);\n\n\t\t\tentriesEl.addElement(\"entry\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\t\t\tcontext.addTagsEntries(\n\t\t\t\t\t\tBookmarksEntry.class,\n\t\t\t\t\t\tnew Long(entry.getEntryId()));\n\t\t\t\t}\n\n\t\t\t\tentry.setUserUuid(entry.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, entry);\n\t\t\t}\n\n\t\t\texportParentFolder(context, foldersEl, entry.getFolderId());\n\t\t}\n\t}","id":1113,"modified_method":"protected void exportEntry(\n\t\t\tPortletDataContext context, Element foldersEl, Element entriesEl,\n\t\t\tBookmarksEntry entry)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(entry.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getEntryPath(context, entry);\n\n\t\tElement entryEl = entriesEl.addElement(\"entry\");\n\n\t\tentryEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\t\tcontext.addTagsEntries(\n\t\t\t\t\tBookmarksEntry.class, entry.getEntryId());\n\t\t\t}\n\n\t\t\tentry.setUserUuid(entry.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, entry);\n\t\t}\n\n\t\texportParentFolder(context, foldersEl, entry.getFolderId());\n\t}","commit_id":"c203a1768bcff02b9fbbbfd244463533a5cbdadd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void importMessage(\n\t\t\tPortletDataContext context, Map<Long, Long> categoryPKs,\n\t\t\tMap<Long, Long> threadPKs, Map<Long, Long> messagePKs,\n\t\t\tElement messageEl, MBMessage message)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(message.getUserUuid());\n\t\tlong categoryId = MapUtil.getLong(\n\t\t\tcategoryPKs, message.getCategoryId(), message.getCategoryId());\n\t\tlong threadId = MapUtil.getLong(\n\t\t\tthreadPKs, message.getThreadId(), message.getThreadId());\n\t\tlong parentMessageId = MapUtil.getLong(\n\t\t\tmessagePKs, message.getParentMessageId(),\n\t\t\tmessage.getParentMessageId());\n\n\t\tList<ObjectValuePair<String, byte[]>> files =\n\t\t\tnew ArrayList<ObjectValuePair<String, byte[]>>();\n\t\tList<String> existingFiles = new ArrayList<String>();\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"attachments\") &&\n\t\t\t\tmessage.isAttachments()) {\n\n\t\t\tList<Element> attachementEls = messageEl.elements(\"attachement\");\n\n\t\t\tfor (Element attachementEl : attachementEls) {\n\t\t\t\tString name = attachementEl.attributeValue(\"name\");\n\t\t\t\tString attachementPath = attachementEl.attributeValue(\n\t\t\t\t\t\"bin-path\");\n\n\t\t\t\tbyte[] bytes = context.getZipEntryAsByteArray(attachementPath);\n\n\t\t\t\tfiles.add(new ObjectValuePair<String, byte[]>(name, bytes));\n\t\t\t}\n\n\t\t\tif (files.size() <= 0) {\n\t\t\t\t_log.error(\n\t\t\t\t\t\"Could not find attachments for message \" +\n\t\t\t\t\t\tmessage.getMessageId());\n\t\t\t}\n\t\t}\n\n\t\tString[] tagsEntries = null;\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\ttagsEntries = context.getTagsEntries(\n\t\t\t\tMBMessage.class, message.getPrimaryKeyObj());\n\t\t}\n\n\t\tPortletPreferences prefs = null;\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tThemeDisplay themeDisplay = null;\n\n\t\tMBMessage existingMessage = null;\n\n\t\ttry {\n\t\t\tMBCategoryUtil.findByPrimaryKey(categoryId);\n\n\t\t\tif (parentMessageId != MBMessageImpl.DEFAULT_PARENT_MESSAGE_ID) {\n\t\t\t\tMBMessageUtil.findByPrimaryKey(parentMessageId);\n\t\t\t\tMBThreadUtil.findByPrimaryKey(threadId);\n\t\t\t}\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\ttry {\n\t\t\t\t\texistingMessage = MBMessageFinderUtil.findByUuid_G(\n\t\t\t\t\t\tmessage.getUuid(), context.getGroupId());\n\n\t\t\t\t\tMBMessageLocalServiceUtil.updateMessage(\n\t\t\t\t\t\tuserId, existingMessage.getMessageId(),\n\t\t\t\t\t\tmessage.getSubject(), message.getBody(), files,\n\t\t\t\t\t\texistingFiles, message.getPriority(), tagsEntries,\n\t\t\t\t\t\tprefs, themeDisplay);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchMessageException nsme) {\n\t\t\t\t\texistingMessage = MBMessageLocalServiceUtil.addMessage(\n\t\t\t\t\t\tmessage.getUuid(), userId, categoryId, threadId,\n\t\t\t\t\t\tparentMessageId, message.getSubject(),\n\t\t\t\t\t\tmessage.getBody(), files, message.getAnonymous(),\n\t\t\t\t\t\tmessage.getPriority(), tagsEntries, prefs,\n\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions,\n\t\t\t\t\t\tthemeDisplay);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingMessage = MBMessageLocalServiceUtil.addMessage(\n\t\t\t\t\tuserId, categoryId, threadId, parentMessageId,\n\t\t\t\t\tmessage.getSubject(), message.getBody(), files,\n\t\t\t\t\tmessage.getAnonymous(), message.getPriority(), tagsEntries,\n\t\t\t\t\tprefs, addCommunityPermissions, addGuestPermissions,\n\t\t\t\t\tthemeDisplay);\n\t\t\t}\n\n\t\t\tthreadPKs.put(\n\t\t\t\tnew Long(message.getThreadId()),\n\t\t\t\tnew Long(existingMessage.getThreadId()));\n\t\t\tmessagePKs.put(\n\t\t\t\tmessage.getMessageId(), existingMessage.getMessageId());\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\t\tcontext.importRatingsEntries(\n\t\t\t\t\tMBMessage.class, message.getPrimaryKeyObj(),\n\t\t\t\t\texistingMessage.getPrimaryKeyObj());\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchCategoryException nsce) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent category for message \" +\n\t\t\t\t\tmessage.getMessageId());\n\t\t}\n\t\tcatch (NoSuchMessageException nsme) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent message for message \" +\n\t\t\t\t\tmessage.getMessageId());\n\t\t}\n\t\tcatch (NoSuchThreadException nste) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the thread for message \" +\n\t\t\t\t\tmessage.getMessageId());\n\t\t}\n\t}","id":1114,"modified_method":"protected void importMessage(\n\t\t\tPortletDataContext context, Map<Long, Long> categoryPKs,\n\t\t\tMap<Long, Long> threadPKs, Map<Long, Long> messagePKs,\n\t\t\tElement messageEl, MBMessage message)\n\t\tthrows Exception {\n\n\t\tlong userId = context.getUserId(message.getUserUuid());\n\t\tlong categoryId = MapUtil.getLong(\n\t\t\tcategoryPKs, message.getCategoryId(), message.getCategoryId());\n\t\tlong threadId = MapUtil.getLong(\n\t\t\tthreadPKs, message.getThreadId(), message.getThreadId());\n\t\tlong parentMessageId = MapUtil.getLong(\n\t\t\tmessagePKs, message.getParentMessageId(),\n\t\t\tmessage.getParentMessageId());\n\n\t\tList<ObjectValuePair<String, byte[]>> files =\n\t\t\tnew ArrayList<ObjectValuePair<String, byte[]>>();\n\t\tList<String> existingFiles = new ArrayList<String>();\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"attachments\") &&\n\t\t\tmessage.isAttachments()) {\n\n\t\t\tList<Element> attachmentEls = messageEl.elements(\"attachment\");\n\n\t\t\tfor (Element attachmentEl : attachmentEls) {\n\t\t\t\tString name = attachmentEl.attributeValue(\"name\");\n\t\t\t\tString binPath = attachmentEl.attributeValue(\"bin-path\");\n\n\t\t\t\tbyte[] bytes = context.getZipEntryAsByteArray(binPath);\n\n\t\t\t\tfiles.add(new ObjectValuePair<String, byte[]>(name, bytes));\n\t\t\t}\n\n\t\t\tif (files.size() <= 0) {\n\t\t\t\t_log.error(\n\t\t\t\t\t\"Could not find attachments for message \" +\n\t\t\t\t\t\tmessage.getMessageId());\n\t\t\t}\n\t\t}\n\n\t\tString[] tagsEntries = null;\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\ttagsEntries = context.getTagsEntries(\n\t\t\t\tMBMessage.class, message.getMessageId());\n\t\t}\n\n\t\tPortletPreferences prefs = null;\n\n\t\tboolean addCommunityPermissions = true;\n\t\tboolean addGuestPermissions = true;\n\n\t\tThemeDisplay themeDisplay = null;\n\n\t\tMBMessage existingMessage = null;\n\n\t\ttry {\n\t\t\tMBCategoryUtil.findByPrimaryKey(categoryId);\n\n\t\t\tif (parentMessageId != MBMessageImpl.DEFAULT_PARENT_MESSAGE_ID) {\n\t\t\t\tMBMessageUtil.findByPrimaryKey(parentMessageId);\n\t\t\t\tMBThreadUtil.findByPrimaryKey(threadId);\n\t\t\t}\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\ttry {\n\t\t\t\t\texistingMessage = MBMessageFinderUtil.findByUuid_G(\n\t\t\t\t\t\tmessage.getUuid(), context.getGroupId());\n\n\t\t\t\t\tMBMessageLocalServiceUtil.updateMessage(\n\t\t\t\t\t\tuserId, existingMessage.getMessageId(),\n\t\t\t\t\t\tmessage.getSubject(), message.getBody(), files,\n\t\t\t\t\t\texistingFiles, message.getPriority(), tagsEntries,\n\t\t\t\t\t\tprefs, themeDisplay);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchMessageException nsme) {\n\t\t\t\t\texistingMessage = MBMessageLocalServiceUtil.addMessage(\n\t\t\t\t\t\tmessage.getUuid(), userId, categoryId, threadId,\n\t\t\t\t\t\tparentMessageId, message.getSubject(),\n\t\t\t\t\t\tmessage.getBody(), files, message.getAnonymous(),\n\t\t\t\t\t\tmessage.getPriority(), tagsEntries, prefs,\n\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions,\n\t\t\t\t\t\tthemeDisplay);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingMessage = MBMessageLocalServiceUtil.addMessage(\n\t\t\t\t\tuserId, categoryId, threadId, parentMessageId,\n\t\t\t\t\tmessage.getSubject(), message.getBody(), files,\n\t\t\t\t\tmessage.getAnonymous(), message.getPriority(), tagsEntries,\n\t\t\t\t\tprefs, addCommunityPermissions, addGuestPermissions,\n\t\t\t\t\tthemeDisplay);\n\t\t\t}\n\n\t\t\tthreadPKs.put(message.getThreadId(), existingMessage.getThreadId());\n\t\t\tmessagePKs.put(\n\t\t\t\tmessage.getMessageId(), existingMessage.getMessageId());\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\t\tcontext.importRatingsEntries(\n\t\t\t\t\tMBMessage.class, message.getMessageId(),\n\t\t\t\t\texistingMessage.getMessageId());\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchCategoryException nsce) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent category for message \" +\n\t\t\t\t\tmessage.getMessageId());\n\t\t}\n\t\tcatch (NoSuchMessageException nsme) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent message for message \" +\n\t\t\t\t\tmessage.getMessageId());\n\t\t}\n\t\tcatch (NoSuchThreadException nste) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the thread for message \" +\n\t\t\t\t\tmessage.getMessageId());\n\t\t}\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportCategory(\n\t\t\tPortletDataContext context, Element categoriesEl, Element messagesEl,\n\t\t\tElement messageFlagsEl, MBCategory category)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(category.getModifiedDate())) {\n\t\t\tString path = getCategoryPath(context, category);\n\n\t\t\tcategoriesEl.addElement(\"category\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tcategory.setUserUuid(category.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, category);\n\t\t\t}\n\n\t\t\texportParentCategory(\n\t\t\t\tcontext, categoriesEl, category.getParentCategoryId());\n\t\t}\n\n\t\tList<MBMessage> categoryMessages = MBMessageUtil.findByCategoryId(\n\t\t\t\tcategory.getCategoryId());\n\n\t\tfor (MBMessage message : categoryMessages) {\n\t\t\texportMessage(\n\t\t\t\tcontext, categoriesEl, messagesEl, messageFlagsEl, message);\n\t\t}\n\t}","id":1115,"modified_method":"protected void exportCategory(\n\t\t\tPortletDataContext context, Element categoriesEl,\n\t\t\tElement messagesEl, Element messageFlagsEl, MBCategory category)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(category.getModifiedDate())) {\n\t\t\tString path = getCategoryPath(context, category);\n\n\t\t\tElement categoryEl = categoriesEl.addElement(\"category\");\n\n\t\t\tcategoryEl.addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tcategory.setUserUuid(category.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, category);\n\t\t\t}\n\n\t\t\texportParentCategory(\n\t\t\t\tcontext, categoriesEl, category.getParentCategoryId());\n\t\t}\n\n\t\tList<MBMessage> messages = MBMessageUtil.findByCategoryId(\n\t\t\tcategory.getCategoryId());\n\n\t\tfor (MBMessage message : messages) {\n\t\t\texportMessage(\n\t\t\t\tcontext, categoriesEl, messagesEl, messageFlagsEl, message);\n\t\t}\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String exportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\t\tElement root = doc.addElement(\"message-boards-data\");\n\n\t\t\troot.addAttribute(\"group-id\", String.valueOf(context.getGroupId()));\n\n\t\t\t// Categories\n\n\t\t\tElement categoriesEl = root.addElement(\"categories\");\n\n\t\t\tElement messagesEl = root.addElement(\"messages\");\n\n\t\t\tElement messageFlagsEl = root.addElement(\"message-flags\");\n\n\t\t\tList<MBCategory> categories = MBCategoryUtil.findByGroupId(\n\t\t\t\tcontext.getGroupId());\n\n\t\t\tfor (MBCategory category : categories) {\n\t\t\t\texportCategory(\n\t\t\t\t\tcontext, categoriesEl, messagesEl, messageFlagsEl, category);\n\t\t\t}\n\n\t\t\t// Bans\n\n\t\t\tElement userBansEl = root.addElement(\"user-bans\");\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"user-bans\")) {\n\t\t\t\tList<MBBan> bans = MBBanUtil.findByGroupId(context.getGroupId());\n\n\t\t\t\tfor (MBBan ban : bans) {\n\t\t\t\t\texportUserBan(context, userBansEl, ban);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn XMLFormatter.toString(doc);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":1116,"modified_method":"public String exportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\t\tElement root = doc.addElement(\"message-boards-data\");\n\n\t\t\troot.addAttribute(\"group-id\", String.valueOf(context.getGroupId()));\n\n\t\t\tElement categoriesEl = root.addElement(\"categories\");\n\t\t\tElement messagesEl = root.addElement(\"messages\");\n\t\t\tElement messageFlagsEl = root.addElement(\"message-flags\");\n\t\t\tElement userBansEl = root.addElement(\"user-bans\");\n\n\t\t\tList<MBCategory> categories = MBCategoryUtil.findByGroupId(\n\t\t\t\tcontext.getGroupId());\n\n\t\t\tfor (MBCategory category : categories) {\n\t\t\t\texportCategory(\n\t\t\t\t\tcontext, categoriesEl, messagesEl, messageFlagsEl,\n\t\t\t\t\tcategory);\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"user-bans\")) {\n\t\t\t\tList<MBBan> bans = MBBanUtil.findByGroupId(\n\t\t\t\t\tcontext.getGroupId());\n\n\t\t\t\tfor (MBBan ban : bans) {\n\t\t\t\t\texportUserBan(context, userBansEl, ban);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn XMLFormatter.toString(doc);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\t// Categories\n\n\t\t\tList<Element> categoryEls =\n\t\t\t\troot.element(\"categories\").elements(\"category\");\n\n\t\t\tMap<Long, Long> categoryPKs = context.getNewPrimaryKeysMap(\n\t\t\t\tMBCategory.class);\n\n\t\t\tfor (Element el : categoryEls) {\n\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tMBCategory category =\n\t\t\t\t\t\t(MBCategory)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportCategory(context, categoryPKs, category);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Messages\n\n\t\t\tList<Element> messageEls =\n\t\t\t\troot.element(\"messages\").elements(\"message\");\n\n\t\t\tMap<Long, Long> threadPKs = context.getNewPrimaryKeysMap(\n\t\t\t\tMBThread.class);\n\t\t\tMap<Long, Long> messagePKs = context.getNewPrimaryKeysMap(\n\t\t\t\tMBMessage.class);\n\n\t\t\tfor (Element el : messageEls) {\n\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tMBMessage message =\n\t\t\t\t\t\t(MBMessage)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportMessage(\n\t\t\t\t\t\tcontext, categoryPKs, threadPKs, messagePKs, el,\n\t\t\t\t\t\tmessage);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flags\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"flags\")) {\n\t\t\t\tList<Element> flagEls =\n\t\t\t\t\troot.element(\"message-flags\").elements(\"flag\");\n\n\t\t\t\tfor (Element el : flagEls) {\n\t\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\t\tMBMessageFlag flag =\n\t\t\t\t\t\t\t(MBMessageFlag)context.getZipEntryAsObject(path);\n\n\t\t\t\t\t\timportFlag(context, messagePKs, flag);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Bans\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"user-bans\")) {\n\t\t\t\tList<Element> banEls = root.element(\"user-bans\").elements(\"ban\");\n\n\t\t\t\tfor (Element el : banEls) {\n\t\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\t\tMBBan ban =\n\t\t\t\t\t\t\t(MBBan)context.getZipEntryAsObject(path);\n\n\t\t\t\t\t\timportBan(context, ban);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":1117,"modified_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tList<Element> categoryEls = root.element(\"categories\").elements(\n\t\t\t\t\"category\");\n\n\t\t\tMap<Long, Long> categoryPKs = context.getNewPrimaryKeysMap(\n\t\t\t\tMBCategory.class);\n\n\t\t\tfor (Element categoryEl : categoryEls) {\n\t\t\t\tString path = categoryEl.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tMBCategory category =\n\t\t\t\t\t\t(MBCategory)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportCategory(context, categoryPKs, category);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tList<Element> messageEls = root.element(\"messages\").elements(\n\t\t\t\t\"message\");\n\n\t\t\tMap<Long, Long> threadPKs = context.getNewPrimaryKeysMap(\n\t\t\t\tMBThread.class);\n\t\t\tMap<Long, Long> messagePKs = context.getNewPrimaryKeysMap(\n\t\t\t\tMBMessage.class);\n\n\t\t\tfor (Element messageEl : messageEls) {\n\t\t\t\tString path = messageEl.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tMBMessage message = (MBMessage)context.getZipEntryAsObject(\n\t\t\t\t\t\tpath);\n\n\t\t\t\t\timportMessage(\n\t\t\t\t\t\tcontext, categoryPKs, threadPKs, messagePKs, messageEl,\n\t\t\t\t\t\tmessage);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"flags\")) {\n\t\t\t\tList<Element> flagEls = root.element(\"message-flags\").elements(\n\t\t\t\t\t\"flag\");\n\n\t\t\t\tfor (Element flagEl : flagEls) {\n\t\t\t\t\tString path = flagEl.attributeValue(\"path\");\n\n\t\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\t\tMBMessageFlag flag =\n\t\t\t\t\t\t\t(MBMessageFlag)context.getZipEntryAsObject(path);\n\n\t\t\t\t\t\timportFlag(context, messagePKs, flag);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"user-bans\")) {\n\t\t\t\tList<Element> banEls = root.element(\"user-bans\").elements(\n\t\t\t\t\t\"user-ban\");\n\n\t\t\t\tfor (Element banEl : banEls) {\n\t\t\t\t\tString path = banEl.attributeValue(\"path\");\n\n\t\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\t\tMBBan ban = (MBBan)context.getZipEntryAsObject(path);\n\n\t\t\t\t\t\timportBan(context, ban);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getMessageAttachementBinPath(\n\t\t\tPortletDataContext context, String attachment, MBMessage message) {\n\t\treturn context.getPortletPath(PortletKeys.MESSAGE_BOARDS) +\n\t\t\t\"/bin/\" + message.getMessageId() + CharPool.FORWARD_SLASH +\n\t\t\t\tattachment;\n\t}","id":1118,"modified_method":"protected String getMessageAttachementBinPath(\n\t\tPortletDataContext context, MBMessage message, String attachment) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.MESSAGE_BOARDS));\n\t\tsm.append(\"/bin/\");\n\t\tsm.append(message.getMessageId());\n\t\tsm.append(StringPool.SLASH);\n\t\tsm.append(attachment);\n\n\t\treturn sm.toString();\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getUserBanPath(\n\t\t\tPortletDataContext context, MBBan ban) {\n\t\treturn context.getPortletPath(PortletKeys.MESSAGE_BOARDS) +\n\t\t\t\"/user-bans/\" + ban.getBanId() + \".xml\";\n\t}","id":1119,"modified_method":"protected String getUserBanPath(PortletDataContext context, MBBan ban) {\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.MESSAGE_BOARDS));\n\t\tsm.append(\"/user-bans/\");\n\t\tsm.append(ban.getBanId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportUserBan(\n\t\t\tPortletDataContext context, Element userBansEl, MBBan ban)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(ban.getModifiedDate())) {\n\t\t\tString path = getUserBanPath(context, ban);\n\n\t\t\tuserBansEl.addElement(\"ban\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tban.setBanUserUuid(ban.getBanUserUuid());\n\t\t\t\tban.setUserUuid(ban.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, ban);\n\t\t\t}\n\t\t}\n\t}","id":1120,"modified_method":"protected void exportUserBan(\n\t\t\tPortletDataContext context, Element userBansEl, MBBan ban)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(ban.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getUserBanPath(context, ban);\n\n\t\tElement userBanEl = userBansEl.addElement(\"user-ban\");\n\n\t\tuserBanEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tban.setBanUserUuid(ban.getBanUserUuid());\n\t\t\tban.setUserUuid(ban.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, ban);\n\t\t}\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getCategoryPath(\n\t\t\tPortletDataContext context, MBCategory category) {\n\t\treturn context.getPortletPath(PortletKeys.MESSAGE_BOARDS) +\n\t\t\t\"/categories/\" + category.getCategoryId() + \".xml\";\n\t}","id":1121,"modified_method":"protected String getCategoryPath(\n\t\tPortletDataContext context, MBCategory category) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.MESSAGE_BOARDS));\n\t\tsm.append(\"/categories/\");\n\t\tsm.append(category.getCategoryId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportParentCategory(\n\t\t\tPortletDataContext context, Element categoriesEl,\n\t\t\tlong categoryId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.hasDateRange() &&\n\t\t\t\t(categoryId != MBCategoryImpl.DEFAULT_PARENT_CATEGORY_ID)) {\n\t\t\tMBCategory category = MBCategoryUtil.findByPrimaryKey(categoryId);\n\n\t\t\tString path = getCategoryPath(context, category);\n\n\t\t\tcategoriesEl.addElement(\"category\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tcategory.setUserUuid(category.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, category);\n\t\t\t}\n\n\t\t\texportParentCategory(\n\t\t\t\tcontext, categoriesEl, category.getParentCategoryId());\n\t\t}\n\t}","id":1122,"modified_method":"protected void exportParentCategory(\n\t\t\tPortletDataContext context, Element categoriesEl, long categoryId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif ((!context.hasDateRange()) ||\n\t\t\t(categoryId == MBCategoryImpl.DEFAULT_PARENT_CATEGORY_ID)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tMBCategory category = MBCategoryUtil.findByPrimaryKey(categoryId);\n\n\t\tString path = getCategoryPath(context, category);\n\n\t\tElement categoryEl = categoriesEl.addElement(\"category\");\n\n\t\tcategoryEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tcategory.setUserUuid(category.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, category);\n\t\t}\n\n\t\texportParentCategory(\n\t\t\tcontext, categoriesEl, category.getParentCategoryId());\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getMessageFlagPath(\n\t\t\tPortletDataContext context, MBMessageFlag messageFlag) {\n\t\treturn context.getPortletPath(PortletKeys.MESSAGE_BOARDS) +\n\t\t\t\"/message-flags/\" + messageFlag.getMessageFlagId() + \".xml\";\n\t}","id":1123,"modified_method":"protected String getMessageFlagPath(\n\t\tPortletDataContext context, MBMessageFlag messageFlag) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.MESSAGE_BOARDS));\n\t\tsm.append(\"/message-flags/\");\n\t\tsm.append(messageFlag.getMessageFlagId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportMessageFlag(\n\t\t\tPortletDataContext context, Element messageFlagsEl,\n\t\t\tMBMessageFlag messageFlag)\n\t\tthrows PortalException, SystemException {\n\n\t\tString path = getMessageFlagPath(context, messageFlag);\n\n\t\tmessageFlagsEl.addElement(\"message-flag\").addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tmessageFlag.setUserUuid(messageFlag.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, messageFlag);\n\t\t}\n\t}","id":1124,"modified_method":"protected void exportMessageFlag(\n\t\t\tPortletDataContext context, Element messageFlagsEl,\n\t\t\tMBMessageFlag messageFlag)\n\t\tthrows PortalException, SystemException {\n\n\t\tString path = getMessageFlagPath(context, messageFlag);\n\n\t\tElement messageFlagEl = messageFlagsEl.addElement(\"message-flag\");\n\n\t\tmessageFlagEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tmessageFlag.setUserUuid(messageFlag.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, messageFlag);\n\t\t}\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportMessage(\n\t\t\tPortletDataContext context, Element categoriesEl, Element messagesEl,\n\t\t\tElement messageFlagsEl, MBMessage message)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(message.getModifiedDate())) {\n\t\t\tString path = getMessagePath(context, message);\n\n\t\t\tElement messageEl = messagesEl.addElement(\"message\");\n\t\t\tmessageEl.addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tmessage.setUserUuid(message.getUserUuid());\n\t\t\t\tmessage.setPriority(message.getPriority());\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\t\t\tcontext.addRatingsEntries(\n\t\t\t\t\t\tMBMessage.class, message.getPrimaryKeyObj());\n\t\t\t\t}\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\t\t\tcontext.addTagsEntries(\n\t\t\t\t\t\tMBMessage.class, message.getPrimaryKeyObj());\n\t\t\t\t}\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"attachments\") &&\n\t\t\t\t\t\tmessage.isAttachments()) {\n\n\t\t\t\t\tfor (String attachment : message.getAttachmentsFiles()) {\n\t\t\t\t\t\tint lf = attachment.lastIndexOf(CharPool.FORWARD_SLASH);\n\n\t\t\t\t\t\tString attachementName = attachment.substring(\n\t\t\t\t\t\t\t(lf+1), attachment.length());\n\n\t\t\t\t\t\tString attachementPath = getMessageAttachementBinPath(\n\t\t\t\t\t\t\tcontext, attachementName, message);\n\n\t\t\t\t\t\tElement attachementEl = messageEl.addElement(\n\t\t\t\t\t\t\t\"attachement\");\n\t\t\t\t\t\tattachementEl.addAttribute(\"name\", attachementName);\n\t\t\t\t\t\tattachementEl.addAttribute(\"bin-path\", attachementPath);\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tbyte[] byteArray = DLServiceUtil.getFile(\n\t\t\t\t\t\t\t\tcontext.getCompanyId(), CompanyConstants.SYSTEM,\n\t\t\t\t\t\t\t\tattachment);\n\n\t\t\t\t\t\t\tcontext.addZipEntry(\n\t\t\t\t\t\t\t\tattachementPath, byteArray);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (RemoteException re) {\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tmessage.setAttachmentsDir(message.getAttachmentsDir());\n\t\t\t\t}\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"flags\")) {\n\t\t\t\t\tList<MBMessageFlag> messageFlags =\n\t\t\t\t\t\tMBMessageFlagUtil.findByMessageId(\n\t\t\t\t\t\t\tmessage.getMessageId());\n\n\t\t\t\t\tfor (MBMessageFlag messageFlag : messageFlags) {\n\t\t\t\t\t\texportMessageFlag(context, messageFlagsEl, messageFlag);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcontext.addZipEntry(path, message);\n\t\t\t}\n\n\t\t\texportParentCategory(\n\t\t\t\tcontext, categoriesEl, message.getCategoryId());\n\t\t}\n\t}","id":1125,"modified_method":"protected void exportMessage(\n\t\t\tPortletDataContext context, Element categoriesEl,\n\t\t\tElement messagesEl, Element messageFlagsEl, MBMessage message)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(message.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getMessagePath(context, message);\n\n\t\tElement messageEl = messagesEl.addElement(\"message\");\n\n\t\tmessageEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tmessage.setUserUuid(message.getUserUuid());\n\t\t\tmessage.setPriority(message.getPriority());\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\t\tcontext.addRatingsEntries(\n\t\t\t\t\tMBMessage.class, message.getMessageId());\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\t\tcontext.addTagsEntries(\n\t\t\t\t\tMBMessage.class, message.getMessageId());\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"attachments\") &&\n\t\t\t\tmessage.isAttachments()) {\n\n\t\t\t\tfor (String attachment : message.getAttachmentsFiles()) {\n\t\t\t\t\tint pos = attachment.lastIndexOf(StringPool.FORWARD_SLASH);\n\n\t\t\t\t\tString name = attachment.substring(pos + 1);\n\t\t\t\t\tString binPath = getMessageAttachementBinPath(\n\t\t\t\t\t\tcontext, message, name);\n\n\t\t\t\t\tElement attachmentEl = messageEl.addElement(\"attachment\");\n\n\t\t\t\t\tattachmentEl.addAttribute(\"name\", name);\n\t\t\t\t\tattachmentEl.addAttribute(\"bin-path\", binPath);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbyte[] bytes = DLServiceUtil.getFile(\n\t\t\t\t\t\t\tcontext.getCompanyId(), CompanyConstants.SYSTEM,\n\t\t\t\t\t\t\tattachment);\n\n\t\t\t\t\t\tcontext.addZipEntry(binPath, bytes);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (RemoteException re) {\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmessage.setAttachmentsDir(message.getAttachmentsDir());\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"flags\")) {\n\t\t\t\tList<MBMessageFlag> messageFlags =\n\t\t\t\t\tMBMessageFlagUtil.findByMessageId(\n\t\t\t\t\t\tmessage.getMessageId());\n\n\t\t\t\tfor (MBMessageFlag messageFlag : messageFlags) {\n\t\t\t\t\texportMessageFlag(context, messageFlagsEl, messageFlag);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontext.addZipEntry(path, message);\n\t\t}\n\n\t\texportParentCategory(context, categoriesEl, message.getCategoryId());\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getMessagePath(\n\t\t\tPortletDataContext context, MBMessage message) {\n\t\treturn context.getPortletPath(PortletKeys.MESSAGE_BOARDS) +\n\t\t\t\"/messages/\" + message.getMessageId() + \".xml\";\n\t}","id":1126,"modified_method":"protected String getMessagePath(\n\t\tPortletDataContext context, MBMessage message) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.MESSAGE_BOARDS));\n\t\tsm.append(\"/messages/\");\n\t\tsm.append(message.getMessageId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"015bd197c406f6b1895164f6ba6635e607ae2875","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void indexData() throws Exception {\n\n        /*\n\n\n        ||          ||           size = 3, shard_size = 5               ||           shard_size = size = 3               ||\n        ||==========||==================================================||===============================================||\n        || shard 1: ||  \"1\" - 5 | \"2\" - 4 | \"3\" - 3 | \"4\" - 2 | \"5\" - 1 || \"1\" - 5 | \"3\" - 3 | \"2\" - 4                   ||\n        ||----------||--------------------------------------------------||-----------------------------------------------||\n        || shard 2: ||  \"1\" - 3 | \"2\" - 1 | \"3\" - 5 | \"4\" - 2 | \"5\" - 1 || \"1\" - 3 | \"3\" - 5 | \"4\" - 2                   ||\n        ||----------||--------------------------------------------------||-----------------------------------------------||\n        || reduced: ||  \"1\" - 8 | \"2\" - 5 | \"3\" - 8 | \"4\" - 4 | \"5\" - 2 ||                                               ||\n        ||          ||                                                  || \"1\" - 8, \"3\" - 8, \"2\" - 4    <= WRONG         ||\n        ||          ||  \"1\" - 8 | \"3\" - 8 | \"2\" - 5     <= CORRECT      ||                                               ||\n\n\n        */\n\n\n        indexDoc(\"1\", \"1\", 5);\n        indexDoc(\"1\", \"2\", 4);\n        indexDoc(\"1\", \"3\", 3);\n        indexDoc(\"1\", \"4\", 2);\n        indexDoc(\"1\", \"5\", 1);\n\n        // total docs in shard \"1\" = 15\n\n        indexDoc(\"2\", \"1\", 3);\n        indexDoc(\"2\", \"2\", 1);\n        indexDoc(\"2\", \"3\", 5);\n        indexDoc(\"2\", \"4\", 2);\n        indexDoc(\"2\", \"5\", 1);\n\n        // total docs in shard \"2\"  = 12\n\n        client().admin().indices().prepareFlush(\"idx\").execute().actionGet();\n        client().admin().indices().prepareRefresh(\"idx\").execute().actionGet();\n\n        long totalOnOne = client().prepareSearch(\"idx\").setTypes(\"type\").setRouting(\"1\").setQuery(matchAllQuery()).execute().actionGet().getHits().getTotalHits();\n        assertThat(totalOnOne, is(15l));\n        long totalOnTwo = client().prepareSearch(\"idx\").setTypes(\"type\").setRouting(\"2\").setQuery(matchAllQuery()).execute().actionGet().getHits().getTotalHits();\n        assertThat(totalOnTwo, is(12l));\n    }","id":1127,"modified_method":"protected void indexData() throws Exception {\n\n        /*\n\n\n        ||          ||           size = 3, shard_size = 5               ||           shard_size = size = 3               ||\n        ||==========||==================================================||===============================================||\n        || shard 1: ||  \"1\" - 5 | \"2\" - 4 | \"3\" - 3 | \"4\" - 2 | \"5\" - 1 || \"1\" - 5 | \"3\" - 3 | \"2\" - 4                   ||\n        ||----------||--------------------------------------------------||-----------------------------------------------||\n        || shard 2: ||  \"1\" - 3 | \"2\" - 1 | \"3\" - 5 | \"4\" - 2 | \"5\" - 1 || \"1\" - 3 | \"3\" - 5 | \"4\" - 2                   ||\n        ||----------||--------------------------------------------------||-----------------------------------------------||\n        || reduced: ||  \"1\" - 8 | \"2\" - 5 | \"3\" - 8 | \"4\" - 4 | \"5\" - 2 ||                                               ||\n        ||          ||                                                  || \"1\" - 8, \"3\" - 8, \"2\" - 4    <= WRONG         ||\n        ||          ||  \"1\" - 8 | \"3\" - 8 | \"2\" - 5     <= CORRECT      ||                                               ||\n\n\n        */\n\n        List<IndexRequestBuilder> docs = new ArrayList<>();\n\n        docs.addAll(indexDoc(\"1\", \"1\", 5));\n        docs.addAll(indexDoc(\"1\", \"2\", 4));\n        docs.addAll(indexDoc(\"1\", \"3\", 3));\n        docs.addAll(indexDoc(\"1\", \"4\", 2));\n        docs.addAll(indexDoc(\"1\", \"5\", 1));\n\n        // total docs in shard \"1\" = 15\n\n        docs.addAll(indexDoc(\"2\", \"1\", 3));\n        docs.addAll(indexDoc(\"2\", \"2\", 1));\n        docs.addAll(indexDoc(\"2\", \"3\", 5));\n        docs.addAll(indexDoc(\"2\", \"4\", 2));\n        docs.addAll(indexDoc(\"2\", \"5\", 1));\n\n        // total docs in shard \"2\"  = 12\n\n        indexRandom(true, docs);\n\n        SearchResponse resp = client().prepareSearch(\"idx\").setTypes(\"type\").setRouting(\"1\").setQuery(matchAllQuery()).execute().actionGet();\n        assertSearchResponse(resp);\n        long totalOnOne = resp.getHits().getTotalHits();\n        assertThat(totalOnOne, is(15l));\n        resp = client().prepareSearch(\"idx\").setTypes(\"type\").setRouting(\"2\").setQuery(matchAllQuery()).execute().actionGet();\n        assertSearchResponse(resp);\n        long totalOnTwo = resp.getHits().getTotalHits();\n        assertThat(totalOnTwo, is(12l));\n    }","commit_id":"e688f445ad15054d9335f71c94a0b6736877481b","url":"https://github.com/elastic/elasticsearch"},{"original_method":"protected void indexDoc(String shard, String key, int times) throws Exception {\n        for (int i = 0; i < times; i++) {\n            client().prepareIndex(\"idx\", \"type\").setRouting(shard).setCreate(true).setSource(jsonBuilder()\n                    .startObject()\n                    .field(\"key\", key)\n                    .field(\"value\", 1)\n                    .endObject()).execute().actionGet();\n        }\n    }","id":1128,"modified_method":"protected List<IndexRequestBuilder> indexDoc(String shard, String key, int times) throws Exception {\n        IndexRequestBuilder[] builders = new IndexRequestBuilder[times];\n        for (int i = 0; i < times; i++) {\n            builders[i] = client().prepareIndex(\"idx\", \"type\").setRouting(shard).setCreate(true).setSource(jsonBuilder()\n                    .startObject()\n                    .field(\"key\", key)\n                    .field(\"value\", 1)\n                    .endObject());\n        }\n        return Arrays.asList(builders);\n    }","commit_id":"e688f445ad15054d9335f71c94a0b6736877481b","url":"https://github.com/elastic/elasticsearch"},{"original_method":"JCExpression transformAssignment(Node op, Term leftTerm, Term rightTerm) {\n        // right side is easy\n        JCExpression rhs = transformExpression(rightTerm);\n        // left side depends\n        // FIXME: can this be anything else than a Primary?\n        Declaration decl = ((Tree.Primary)leftTerm).getDeclaration();\n        // FIXME: can this be anything else than a Value or a TypedDeclaration?\n        boolean variable = false;\n        if (decl instanceof Value) {\n            variable = ((Value)decl).isVariable();\n        } else if (decl instanceof TypedDeclaration) {\n            variable = ((TypedDeclaration)decl).isVariable();\n        }\n        if(decl.isToplevel()){\n            // must use top level setter\n            return gen.globalGenAt(op).setGlobalValue(\n                    makeIdent(decl.getContainer().getQualifiedNameString()),\n                    decl.getName(),\n                    rhs);\n        } else if (decl instanceof Getter) {\n            // must use the setter\n            if (decl.getContainer() instanceof Method){\n                return at(op).Apply(List.<JCTree.JCExpression>nil(), makeIdent(((Getter)decl).getName(), Util.getSetterName(decl.getName())), \n                        List.<JCTree.JCExpression>of(rhs));\n                \n            } else {\n                return at(op).Apply(List.<JCTree.JCExpression>nil(), makeIdent(Util.getSetterName(decl.getName())), \n                        List.<JCTree.JCExpression>of(rhs));            \n            }\n        } else if(variable && (Util.isClassAttribute(decl) || decl.isCaptured())){\n            // must use the setter\n            return at(op).Apply(List.<JCTree.JCExpression>nil(), makeIdent(Util.getSetterName(decl.getName())), \n                    List.<JCTree.JCExpression>of(rhs));\n        } else {\n            return at(op).Assign(make().Ident(names().fromString(decl.getName())), rhs);\n        }\n    }","id":1129,"modified_method":"JCExpression transformAssignment(Node op, Term leftTerm, Term rightTerm) {\n        // right side is easy\n        JCExpression rhs = transformExpression(rightTerm);\n        // left side depends\n        // FIXME: can this be anything else than a Primary?\n        Declaration decl = ((Tree.Primary)leftTerm).getDeclaration();\n        // FIXME: can this be anything else than a Value or a TypedDeclaration?\n        boolean variable = false;\n        if (decl instanceof Value) {\n            variable = ((Value)decl).isVariable();\n        } else if (decl instanceof TypedDeclaration) {\n            variable = ((TypedDeclaration)decl).isVariable();\n        }\n        if(decl.isToplevel()){\n            // must use top level setter\n            return gen.globalGenAt(op).setGlobalValue(\n                    makeIdent(decl.getContainer().getQualifiedNameString()),\n                    decl.getName(),\n                    rhs);\n        } else if ((decl instanceof Getter)) {\n            // must use the setter\n            if (decl.getContainer() instanceof Method){\n                return at(op).Apply(List.<JCTree.JCExpression>nil(), makeIdent(decl.getName(), Util.getSetterName(decl.getName())), \n                        List.<JCTree.JCExpression>of(rhs));\n                \n            } else {\n                return at(op).Apply(List.<JCTree.JCExpression>nil(), makeIdent(Util.getSetterName(decl.getName())), \n                        List.<JCTree.JCExpression>of(rhs));            \n            }\n        } else if(variable && (Util.isClassAttribute(decl))){\n            // must use the setter\n            return at(op).Apply(List.<JCTree.JCExpression>nil(), makeIdent(Util.getSetterName(decl.getName())), \n                    List.<JCTree.JCExpression>of(rhs));\n        } else if(variable && decl.isCaptured()){\n            // must use the qualified setter\n            return at(op).Apply(List.<JCTree.JCExpression>nil(), makeIdent(decl.getName(), Util.getSetterName(decl.getName())), \n                    List.<JCTree.JCExpression>of(rhs));\n        } else {\n            return at(op).Assign(make().Ident(names().fromString(decl.getName())), rhs);\n        }\n    }","commit_id":"41ac008af51b220bcb74d24ce9d98c412aa227cd","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"public JCExpression transform(Tree.BaseMemberExpression member) {\n        JCExpression result = null;\n        Declaration decl = member.getDeclaration();\n        if (decl instanceof Value) {\n            if (decl.isToplevel()) {\n                // ERASURE\n                if (\"null\".equals(decl.getName())) {\n                    // FIXME this is a pretty brain-dead way to go about erase I think\n                    result = at(member).Literal(TypeTags.BOT, null);\n                } else if (gen.isBooleanTrue(decl)) {\n                    result = makeBoolean(true);\n                } else if (gen.isBooleanFalse(decl)) {\n                    result = makeBoolean(false);\n                } else {\n                    // it's a toplevel attribute\n                    result = gen.globalGenAt(member).getGlobalValue(\n                            makeIdent(decl.getContainer().getQualifiedNameString()),\n                            decl.getName());\n                }\n             } else if(Util.isClassAttribute(decl) || decl.isCaptured()) {\n                 // invoke the getter\n                 result = at(member).Apply(List.<JCExpression>nil(), \n                        makeIdent(Util.getGetterName(decl.getName())), \n                        List.<JCExpression>nil());\n            }\n        } else if (decl instanceof Getter) {\n            // invoke the getter\n            if (decl.isToplevel()) {\n                result = gen.globalGenAt(member).getGlobalValue(\n                        makeIdent(decl.getContainer().getQualifiedNameString()),\n                        decl.getName());\n            } else if (decl.isClassMember()) {\n                result =  at(member).Apply(List.<JCExpression>nil(), \n                        makeIdent(Util.getGetterName(decl.getName())), \n                        List.<JCExpression>nil());\n            } else {// method local attr\n                result = at(member).Apply(List.<JCExpression>nil(), \n                        makeIdent(decl.getName(), Util.getGetterName(decl.getName())), \n                        List.<JCExpression>nil());\n            }\n        } else if (decl instanceof Method) {\n            if (Util.isInnerMethod(decl)\n            \t\t|| decl.isToplevel()) {\n                java.util.List<String> path = new LinkedList<String>();\n                path.add(decl.getName());\n                path.add(decl.getName());\n                result = makeIdent(path);\n            }\n        }\n        if (result == null) {\n            result = at(member).Ident(names().fromString(gen.substitute(member.getIdentifier().getText())));\n        }\n        return result;\n    }","id":1130,"modified_method":"public JCExpression transform(Tree.BaseMemberExpression member) {\n        JCExpression result = null;\n        Declaration decl = member.getDeclaration();\n        if (decl instanceof Getter) {\n            // invoke the getter\n            if (decl.isToplevel()) {\n                result = gen.globalGenAt(member).getGlobalValue(\n                        makeIdent(decl.getContainer().getQualifiedNameString()),\n                        decl.getName());\n            } else if (decl.isClassMember()) {\n                result =  at(member).Apply(List.<JCExpression>nil(), \n                        makeIdent(Util.getGetterName(decl.getName())), \n                        List.<JCExpression>nil());\n            } else {// method local attr\n                result = at(member).Apply(List.<JCExpression>nil(), \n                        makeIdent(decl.getName(), Util.getGetterName(decl.getName())), \n                        List.<JCExpression>nil());\n            }\n        } else if (decl instanceof Value) {\n            if (decl.isToplevel()) {\n                // ERASURE\n                if (\"null\".equals(decl.getName())) {\n                    // FIXME this is a pretty brain-dead way to go about erase I think\n                    result = at(member).Literal(TypeTags.BOT, null);\n                } else if (gen.isBooleanTrue(decl)) {\n                    result = makeBoolean(true);\n                } else if (gen.isBooleanFalse(decl)) {\n                    result = makeBoolean(false);\n                } else {\n                    // it's a toplevel attribute\n                    result = gen.globalGenAt(member).getGlobalValue(\n                            makeIdent(decl.getContainer().getQualifiedNameString()),\n                            decl.getName());\n                }\n            } else if(Util.isClassAttribute(decl)) {\n                // invoke the getter\n                result = at(member).Apply(List.<JCExpression>nil(), \n                       makeIdent(Util.getGetterName(decl.getName())), \n                       List.<JCExpression>nil());\n             } else if(decl.isCaptured()) {\n                 // invoke the qualified getter\n                 result = at(member).Apply(List.<JCExpression>nil(), \n                        makeIdent(decl.getName(), Util.getGetterName(decl.getName())), \n                        List.<JCExpression>nil());\n            }\n        } else if (decl instanceof Method) {\n            if (Util.isInnerMethod(decl)\n            \t\t|| decl.isToplevel()) {\n                java.util.List<String> path = new LinkedList<String>();\n                path.add(decl.getName());\n                path.add(decl.getName());\n                result = makeIdent(path);\n            }\n        }\n        if (result == null) {\n            result = at(member).Ident(names().fromString(gen.substitute(member.getIdentifier().getText())));\n        }\n        return result;\n    }","commit_id":"41ac008af51b220bcb74d24ce9d98c412aa227cd","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"/**\n     * Sets the modifier flags of the generated getter. If no getter is generated the modifier flags will be silently\n     * ignored.\n     * @param getterFlags the modifier flags (see {@link Flags})\n     * @return this instance for method chaining\n     */\n    public AttributeDefinitionBuilder getterFlags(long getterFlags) {\n        this.getterFlags = getterFlags;\n        return this;\n    }","id":1131,"modified_method":"/**\n     * Sets the modifier flags of the generated getter. If no getter is generated the modifier flags will be silently\n     * ignored.\n     * @param getterFlags the modifier flags (see {@link Flags})\n     * @return this instance for method chaining\n     */\n    public AttributeDefinitionBuilder getterFlags(int getterFlags) {\n        this.getterFlags = getterFlags;\n        return this;\n    }","commit_id":"6647e68135a5e92911fdf27b33f66455d4709e8e","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"public AttributeDefinitionBuilder addGetterFlags(long getterFlags) {\n        this.getterFlags = this.getterFlags | getterFlags;\n        return this;\n    }","id":1132,"modified_method":"public AttributeDefinitionBuilder addGetterFlags(int getterFlags) {\n        this.getterFlags = this.getterFlags | getterFlags;\n        return this;\n    }","commit_id":"6647e68135a5e92911fdf27b33f66455d4709e8e","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private JCTree generateField() {\n        int flags = Flags.PRIVATE | Flags.STATIC;\n        if (!writable) {\n            flags |= Flags.FINAL;\n        }\n\n        return owner.make().VarDef(\n                owner.make().Modifiers(flags),\n                fieldName,\n                variableType,\n                variableInit\n        );\n    }","id":1133,"modified_method":"private JCTree generateField() {\n        int flags = Flags.PRIVATE | (getterFlags & Flags.STATIC);\n        if (!writable) {\n            flags |= Flags.FINAL;\n        }\n\n        return owner.make().VarDef(\n                owner.make().Modifiers(flags),\n                fieldName,\n                variableType,\n                variableInit\n        );\n    }","commit_id":"6647e68135a5e92911fdf27b33f66455d4709e8e","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"JCExpression transformAssignment(Node op, Term leftTerm, Term rightTerm) {\n        // right side is easy\n        JCExpression rhs = transformExpression(rightTerm);\n        // left side depends\n        // FIXME: can this be anything else than a Primary?\n        Declaration decl = ((Tree.Primary)leftTerm).getDeclaration();\n        // FIXME: can this be anything else than a Value or a TypedDeclaration?\n        boolean variable = false;\n        if (decl instanceof Value) {\n            variable = ((Value)decl).isVariable();\n        } else if (decl instanceof TypedDeclaration) {\n            variable = ((TypedDeclaration)decl).isVariable();\n        }\n        if(decl.isToplevel()){\n            // must use top level setter\n            return gen.globalGenAt(op).setGlobalValue(\n                    makeIdent(decl.getContainer().getQualifiedNameString()),\n                    decl.getName(),\n                    rhs);\n        } else if((decl instanceof Getter) || (Util.isClassAttribute(decl) && variable)){\n            // must use the setter\n            return at(op).Apply(List.<JCTree.JCExpression>nil(), makeIdent(Util.getSetterName(decl.getName())), \n                    List.<JCTree.JCExpression>of(rhs));\n        } else {\n            return at(op).Assign(make().Ident(names().fromString(decl.getName())), rhs);\n        }\n    }","id":1134,"modified_method":"JCExpression transformAssignment(Node op, Term leftTerm, Term rightTerm) {\n        // right side is easy\n        JCExpression rhs = transformExpression(rightTerm);\n        // left side depends\n        // FIXME: can this be anything else than a Primary?\n        Declaration decl = ((Tree.Primary)leftTerm).getDeclaration();\n        // FIXME: can this be anything else than a Value or a TypedDeclaration?\n        boolean variable = false;\n        if (decl instanceof Value) {\n            variable = ((Value)decl).isVariable();\n        } else if (decl instanceof TypedDeclaration) {\n            variable = ((TypedDeclaration)decl).isVariable();\n        }\n        if(decl.isToplevel()){\n            // must use top level setter\n            return gen.globalGenAt(op).setGlobalValue(\n                    makeIdent(decl.getContainer().getQualifiedNameString()),\n                    decl.getName(),\n                    rhs);\n        } else if (decl instanceof Getter) {\n            // must use the setter\n            if (decl.getContainer() instanceof Method){\n                return at(op).Apply(List.<JCTree.JCExpression>nil(), makeIdent(((Getter)decl).getName(), Util.getSetterName(decl.getName())), \n                        List.<JCTree.JCExpression>of(rhs));\n                \n            } else {\n                return at(op).Apply(List.<JCTree.JCExpression>nil(), makeIdent(Util.getSetterName(decl.getName())), \n                        List.<JCTree.JCExpression>of(rhs));            \n            }\n        } else if(variable && (Util.isClassAttribute(decl) || decl.isCaptured())){\n            // must use the setter\n            return at(op).Apply(List.<JCTree.JCExpression>nil(), makeIdent(Util.getSetterName(decl.getName())), \n                    List.<JCTree.JCExpression>of(rhs));\n        } else {\n            return at(op).Assign(make().Ident(names().fromString(decl.getName())), rhs);\n        }\n    }","commit_id":"6647e68135a5e92911fdf27b33f66455d4709e8e","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"public JCExpression transform(Tree.BaseMemberExpression member) {\n        JCExpression result = null;\n        Declaration decl = member.getDeclaration();\n        if (decl instanceof Value) {\n            if (decl.isToplevel()) {\n                // ERASURE\n                if (\"null\".equals(decl.getName())) {\n                    // FIXME this is a pretty brain-dead way to go about erase I think\n                    result = at(member).Literal(TypeTags.BOT, null);\n                } else if (gen.isBooleanTrue(decl)) {\n                    result = makeBoolean(true);\n                } else if (gen.isBooleanFalse(decl)) {\n                    result = makeBoolean(false);\n                } else {\n                    // it's a toplevel attribute\n                    result = gen.globalGenAt(member).getGlobalValue(\n                            makeIdent(decl.getContainer().getQualifiedNameString()),\n                            decl.getName());\n                }\n             } else if(Util.isClassAttribute(decl)) {\n                 // invoke the getter\n                 result = at(member).Apply(List.<JCExpression>nil(), \n                        makeIdent(Util.getGetterName(decl.getName())), \n                        List.<JCExpression>nil());\n            }\n        } else if (decl instanceof Getter) {\n            // invoke the getter\n            if (decl.isToplevel()) {\n                result = gen.globalGenAt(member).getGlobalValue(\n                        makeIdent(decl.getContainer().getQualifiedNameString()),\n                        decl.getName());\n            } else if (decl.isClassMember()) {\n                result =  at(member).Apply(List.<JCExpression>nil(), \n                        makeIdent(Util.getGetterName(decl.getName())), \n                        List.<JCExpression>nil());\n            } else {// method local attr\n                result = at(member).Apply(List.<JCExpression>nil(), \n                        makeIdent(decl.getName(), Util.getGetterName(decl.getName())), \n                        List.<JCExpression>nil());\n            }\n        } else if (decl instanceof Method) {\n            if (Util.isInnerMethod(decl)\n            \t\t|| decl.isToplevel()) {\n                java.util.List<String> path = new LinkedList<String>();\n                path.add(decl.getName());\n                path.add(decl.getName());\n                result = makeIdent(path);\n            }\n        }\n        if (result == null) {\n            result = at(member).Ident(names().fromString(gen.substitute(member.getIdentifier().getText())));\n        }\n        return result;\n    }","id":1135,"modified_method":"public JCExpression transform(Tree.BaseMemberExpression member) {\n        JCExpression result = null;\n        Declaration decl = member.getDeclaration();\n        if (decl instanceof Value) {\n            if (decl.isToplevel()) {\n                // ERASURE\n                if (\"null\".equals(decl.getName())) {\n                    // FIXME this is a pretty brain-dead way to go about erase I think\n                    result = at(member).Literal(TypeTags.BOT, null);\n                } else if (gen.isBooleanTrue(decl)) {\n                    result = makeBoolean(true);\n                } else if (gen.isBooleanFalse(decl)) {\n                    result = makeBoolean(false);\n                } else {\n                    // it's a toplevel attribute\n                    result = gen.globalGenAt(member).getGlobalValue(\n                            makeIdent(decl.getContainer().getQualifiedNameString()),\n                            decl.getName());\n                }\n             } else if(Util.isClassAttribute(decl) || decl.isCaptured()) {\n                 // invoke the getter\n                 result = at(member).Apply(List.<JCExpression>nil(), \n                        makeIdent(Util.getGetterName(decl.getName())), \n                        List.<JCExpression>nil());\n            }\n        } else if (decl instanceof Getter) {\n            // invoke the getter\n            if (decl.isToplevel()) {\n                result = gen.globalGenAt(member).getGlobalValue(\n                        makeIdent(decl.getContainer().getQualifiedNameString()),\n                        decl.getName());\n            } else if (decl.isClassMember()) {\n                result =  at(member).Apply(List.<JCExpression>nil(), \n                        makeIdent(Util.getGetterName(decl.getName())), \n                        List.<JCExpression>nil());\n            } else {// method local attr\n                result = at(member).Apply(List.<JCExpression>nil(), \n                        makeIdent(decl.getName(), Util.getGetterName(decl.getName())), \n                        List.<JCExpression>nil());\n            }\n        } else if (decl instanceof Method) {\n            if (Util.isInnerMethod(decl)\n            \t\t|| decl.isToplevel()) {\n                java.util.List<String> path = new LinkedList<String>();\n                path.add(decl.getName());\n                path.add(decl.getName());\n                result = makeIdent(path);\n            }\n        }\n        if (result == null) {\n            result = at(member).Ident(names().fromString(gen.substitute(member.getIdentifier().getText())));\n        }\n        return result;\n    }","commit_id":"6647e68135a5e92911fdf27b33f66455d4709e8e","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"/**\r\n   * Checks the dDecl for Attlist Objects.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void dDecl() throws BuildException {\r\n    // sign after attType has to be a whitespace\r\n    if(!consumeWS()) error();\r\n    // checks for REQUIRED, IMPLIED or FIXED elements\r\n    if(consume(REQ)) {\r\n      BaseX.debug(REQ);\r\n    } else if(consume(IMP)) {\r\n      BaseX.debug(IMP);\r\n    } else if(consume(FIX)) {\r\n      //TODO: (('#FIXED' S)? AttValue);\r\n      BaseX.debug(FIX);\r\n      consumeWS();\r\n      BaseX.debug(consumeQuoted());\r\n    }\r\n  }","id":1136,"modified_method":"/**\r\n   * Checks the dDecl for Attlist Objects.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void dDecl() throws BuildException {\r\n    if (!consumeWS()) error();\r\n    // checks for REQUIRED, IMPLIED or FIXED elements\r\n    if(consume(REQ)) {\r\n      BaseX.debug(REQ);\r\n      if (consumeWS()) {\r\n        if (consume(REQ) || consume(IMP) || consume(FIX)) error();\r\n      }\r\n    } else if(consume(IMP)) {\r\n      BaseX.debug(IMP);\r\n      if (consumeWS()) {\r\n        if (consume(REQ) || consume(IMP) || consume(FIX)) error();\r\n      }\r\n    } else if(consume(FIX)) {\r\n      BaseX.debug(FIX);\r\n      if (!consumeWS()) error();\r\n      BaseX.debug(consumeQuoted());\r\n    } else {\r\n      BaseX.debug(consumeQuoted());\r\n      if (consumeWS()) {\r\n        if (consume(REQ) || consume(IMP) || consume(FIX)) error();\r\n      }\r\n    }\r\n  }","commit_id":"e1d4d56f89b3d352b7967435295df178f6f41fcf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Checks the EntityDef for Entity Objects.\r\n   */\r\n  private void entityDef() {\r\n  //TODO: Implement EntityValue  | (ExternalID  NDataDecl?)\r\n  }","id":1137,"modified_method":"/**\r\n   * Checks the EntityDef and PEDef for Entity Objects.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void entDef() throws BuildException {\r\n    consumeWS();\r\n    if(consume(SYSTEM) || consume(PUBLIC)) {\r\n      consumeWS();\r\n      BaseX.debug(consumeQuoted());\r\n      if (!consumeWS()) error();\r\n        if(consume(ND)) {\r\n          BaseX.debug(ND);\r\n          if (!consumeWS()) error();\r\n          BaseX.debug(consumeName());\r\n        } else if(consume(GREAT)) {\r\n        } else {\r\n          BaseX.debug(consumeQuoted());\r\n        }\r\n    } else {\r\n      consumeWS();\r\n      BaseX.debug(consumeQuoted()); \r\n      if (consumeWS()) {\r\n        if (consume(SYSTEM)) error();\r\n      }\r\n    }\r\n  }","commit_id":"e1d4d56f89b3d352b7967435295df178f6f41fcf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Method to consume the Content of Internal or/and External DTD.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void consumeContent() throws BuildException {\r\n    // runs till the last character\r\n    while(next() != 0) {\r\n      // checks for element, attlist and entity tags\r\n      if(consume(ELEM) && consumeWS()) {\r\n        element = consumeName();\r\n        tags.add(element);\r\n        BaseX.debug(\"----------------------\");\r\n        BaseX.debug(\"- Element: %\", element);\r\n        contentSpec();\r\n      } else if(consume(ATTL) && consumeWS()) {\r\n        attl = consumeName();\r\n        atts.add(attl);\r\n        BaseX.debug(\"----------------------\");\r\n        BaseX.debug(\"- ATTLIST: %\", attl);\r\n        attType();\r\n        dDecl();\r\n      } else if(consume(ENT) && consumeWS()) {\r\n        if(percentage(next())) {\r\n          if(!consumeWS()) error();\r\n          enti = consumeName();\r\n          ents.add(enti);\r\n          BaseX.debug(\"----------------------\");\r\n          BaseX.debug(\"- Entity: %\", enti);\r\n          if(!consumeWS()) error();\r\n          peDef();\r\n        } else {\r\n          prev();\r\n          enti = consumeName();\r\n          ents.add(enti);\r\n          BaseX.debug(\"----------------------\");\r\n          BaseX.debug(\"- Entity: %\", enti);\r\n          entityDef();\r\n        }\r\n      }\r\n    }\r\n    BaseX.debug(\"----------------------\");\r\n    BaseX.debug(\"THE END\");\r\n  }","id":1138,"modified_method":"/**\r\n   * Method to consume the Content of Internal or/and External DTD.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void consumeContent() throws BuildException {\r\n    // runs till the last character\r\n    while(next() != 0) {\r\n      check = true;\r\n      // checks for element, attlist and entity tags\r\n      if(consume(ELEM)) {\r\n        if (!consumeWS()) error();\r\n        element = consumeName();\r\n        tags.add(element);\r\n        BaseX.debug(\"----------------------\");\r\n        BaseX.debug(\"- Element: %\", element);\r\n        contentSpec();\r\n      } else if(consume(ATTL)) {\r\n        if (!consumeWS()) error();\r\n        attl = consumeName();\r\n        atts.add(attl);\r\n        BaseX.debug(\"----------------------\");\r\n        BaseX.debug(\"- ATTLIST: %\", attl);\r\n        if (!consume(GREAT)) {\r\n          attType();\r\n          dDecl();\r\n        }\r\n      } else if(consume(ENT)) {\r\n        if (!consumeWS()) error();\r\n        if(percentage(next())) {\r\n          if(!consumeWS()) error();\r\n          enti = consumeName();\r\n          ents.add(enti);\r\n          BaseX.debug(\"----------------------\");\r\n          BaseX.debug(\"- Entity: %\", enti);\r\n          if(!consumeWS()) error();\r\n          entDef();\r\n        } else {\r\n          prev();\r\n          enti = consumeName();\r\n          ents.add(enti);\r\n          BaseX.debug(\"----------------------\");\r\n          BaseX.debug(\"- Entity: %\", enti);\r\n          entDef();\r\n        }\r\n      } else if(consume(NOT)) {\r\n        if (!consumeWS()) error();\r\n        BaseX.debug(\"----------------------\");\r\n        BaseX.debug(NOT);\r\n      } else if(consume(WELEM1) || consume(WELEM2) || consume(WELEM3)\r\n          || consume(WATTL1) || consume(WATTL2) || consume(XML)) {\r\n        error();\r\n      }\r\n    }\r\n    consumeWS();\r\n    if(!consume(SBRACKETC)) error();\r\n    BaseX.debug(\"----------------------\");\r\n    BaseX.debug(\"THE END\");\r\n  }","commit_id":"e1d4d56f89b3d352b7967435295df178f6f41fcf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Checks the attType for Attlist Objects.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void attType() throws BuildException {\r\n    // sign after name has to be a whitespace\r\n    if(!consumeWS()) error();\r\n    BaseX.debug(consumeName());\r\n    if(!consumeWS()) error();\r\n    if(consume(CD)) {\r\n      BaseX.debug(CD);\r\n    } else if(checkTokenize()) {\r\n      BaseX.debug(checkT);\r\n    } else if(consume(NOT)) {\r\n      if(!consumeWS() && !consume(BRACKETO)) error();\r\n      consumeWS();\r\n      BaseX.debug(consumeName());\r\n      if(consume(BRACKETO)) {\r\n        while(!consume(BRACKETC)) {\r\n          consumeWS();\r\n          if(consume(DASH)) {\r\n            consumeWS();\r\n            BaseX.debug(consumeName());\r\n            consumeWS();\r\n          } else if(consume(BRACKETO)) {\r\n            while(!consume(BRACKETC)) {\r\n              consumeWS();\r\n              if(consume(DASH)) {\r\n                consumeWS();\r\n                BaseX.debug(consumeName());\r\n                consumeWS();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if(consume(BRACKETO)) {\r\n      consumeWS();\r\n      //TODO: consume(NMTOKEN)\r\n      if(consume(BRACKETO)) {\r\n        while(!consume(BRACKETC)) {\r\n          consumeWS();\r\n          if(consume(DASH)) {\r\n            consumeWS();\r\n            //TODO: consume(NMTOKEN)\r\n            consumeWS();\r\n          } else if(consume(BRACKETO)) {\r\n            while(!consume(BRACKETC)) {\r\n              consumeWS();\r\n              if(consume(DASH)) {\r\n                consumeWS();\r\n                //TODO: consume(NMTOKEN)\r\n                consumeWS();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else error();\r\n  }","id":1139,"modified_method":"/**\r\n   * Checks the attType for Attlist Objects.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void attType() throws BuildException {\r\n    consumeWS();\r\n    BaseX.debug(consumeName());\r\n    consumeWS();\r\n    if(consume(CD)) {\r\n      BaseX.debug(CD);\r\n    } else if(consume(BRACKETO)) {\r\n        consumeBracketed2();\r\n    } else if(consume(NOT)) {\r\n      if(!consumeWS() && !consume(BRACKETO)) error();\r\n      consumeWS();\r\n      if(consume(BRACKETO)) {\r\n        consumeBracketed2();\r\n      } else {\r\n      BaseX.debug(consumeName());\r\n      }\r\n    } else if(checkTokenize()) {\r\n      BaseX.debug(checkT);\r\n    } else error();\r\n  }","commit_id":"e1d4d56f89b3d352b7967435295df178f6f41fcf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Checks the contentSpec for Element Objects.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void contentSpec() throws BuildException {\r\n    // sign after name has to be a whitespace\r\n    if(!consumeWS()) error();\r\n    // checks for empty, any or mixed elements\r\n    if(consume(EMP)) {\r\n      BaseX.debug(EMP);\r\n    } else if(consume(ANY)) {\r\n      BaseX.debug(ANY);\r\n    } else if(consume(BRACKETO)) {\r\n      consumeWS();\r\n      if(consume(PC)) {\r\n        BaseX.debug(PC);\r\n        consumeMixed();\r\n      } else {\r\n        consumeChildren();\r\n      }\r\n    } else error();\r\n  }","id":1140,"modified_method":"/**\r\n   * Checks the contentSpec for Element Objects.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void contentSpec() throws BuildException {\r\n    // sign after name has to be a whitespace\r\n    if(!consumeWS()) error();\r\n    // checks for empty, any or mixed elements\r\n    if(consume(EMP)) {\r\n      BaseX.debug(EMP);\r\n    } else if(consume(ANY)) {\r\n      BaseX.debug(ANY);\r\n    } else if(consume(BRACKETO)) {\r\n      consumeWS();\r\n      if(consume(PC)) {\r\n        BaseX.debug(PC);\r\n        check = false;\r\n        consumeWS();\r\n        consumeBracketed();\r\n      } else {\r\n        consumeBracketed();\r\n      }\r\n    } else if(consume(WEMP1) || consume(WEMP2) || consume(WANY1)\r\n        || consume(WANY2)) {\r\n      error();\r\n    } else {\r\n      consumeWS();\r\n      BaseX.debug(consumeName());\r\n      consumeWS();\r\n    }\r\n  }","commit_id":"e1d4d56f89b3d352b7967435295df178f6f41fcf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Checks for all kind of defined tokens.\r\n   * @return boolean if token is found.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private boolean checkTokenize() throws BuildException {\r\n    checkT = consumeName();\r\n    if(checkT.equals(ID) || checkT.equals(IDR) || checkT.equals(IDRS)\r\n        || checkT.equals(ENT) || checkT.equals(ENTS) || checkT.equals(NMT)\r\n        || checkT.equals(NMTS)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }","id":1141,"modified_method":"/**\r\n   * Checks for all kind of defined tokens.\r\n   * @return boolean if token is found.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private boolean checkTokenize() throws BuildException {\r\n    int p = pos;\r\n    checkT = consumeName();\r\n    String help = string(checkT);\r\n    if(help.equals(string(ID)) || help.equals(string(IDR))\r\n        || help.equals(string(IDRS)) || help.equals(string(ENT))\r\n        || help.equals(string(ENTS)) || help.equals(string(NMT))\r\n        || help.equals(string(NMTS))) {\r\n      return true;\r\n    }\r\n    pos = p;\r\n    return false;\r\n  }","commit_id":"e1d4d56f89b3d352b7967435295df178f6f41fcf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Constructor.\r\n   * @param dtd contents\r\n   * @param xml input xml file\r\n   * @param tag tag index\r\n   * @param att attribute index\r\n   * @param ent entity index\r\n   * @throws IOException I/O Exception\r\n   */\r\n  public DTDParser(final byte[] dtd, final String xml, final Names tag,\r\n      final Names att, final Names ent) throws IOException {\r\n\r\n    xmlfile = xml;\r\n    tags = tag;\r\n    atts = att;\r\n    ents = ent;\r\n\r\n    // cache content\r\n    content = dtd;\r\n    // check DOCTYPE S\r\n    if(!consume(DOCTYPE) || !consumeWS()) error();\r\n    // check NAME\r\n    root = consumeName();\r\n    // check Whitespace\r\n    if(!consumeWS()) error();\r\n    // check for ExternDTD\r\n    if(consume(SYSTEM) && consumeWS()) {\r\n      // check ExternalID in quotes\r\n      byte[] extid = consumeQuoted();\r\n      // read external file\r\n      String file = new File(xmlfile).getParent() + \"\\\\\" + string(extid);\r\n      content = IOConstants.read(file);\r\n      pos = 0;\r\n      BaseX.debug(\"- Root Element Type: %\", root);\r\n      BaseX.debug(\"- Content:\\n %\", content);\r\n      BaseX.debug(\"----------------\");\r\n      consumeContent();\r\n    }\r\n    // check for InternDTD\r\n    if(consume(SBRACKETO)) {\r\n      content = dtd;\r\n      BaseX.debug(\"- Root Element Type: %\", root);\r\n      BaseX.debug(\"- Content:\\n %\", content);\r\n      consumeContent();\r\n    }\r\n  }","id":1142,"modified_method":"/**\r\n   * Constructor.\r\n   * @param dtd contents\r\n   * @param xml input xml file\r\n   * @param tag tag index\r\n   * @param att attribute index\r\n   * @param ent entity index\r\n   * @throws IOException I/O Exception\r\n   */\r\n  public DTDParser(final byte[] dtd, final String xml, final Names tag,\r\n      final Names att, final Names ent) throws IOException {\r\n\r\n    xmlfile = xml;\r\n    tags = tag;\r\n    atts = att;\r\n    ents = ent;\r\n\r\n    // cache content\r\n    content = dtd;\r\n    // check DOCTYPE S\r\n    if(!consume(DOCTYPE) || !consumeWS()) error();\r\n    // check NAME\r\n    root = consumeName();\r\n    if (string(root).equals(string(SYSTEM))) error();\r\n    // check Whitespace\r\n    if(!consumeWS()) error();\r\n    // check for ExternDTD\r\n    if(consume(SYSTEM) && consumeWS()) {\r\n      // check ExternalID in quotes\r\n      byte[] extid = consumeQuoted();\r\n      consumeWS();\r\n      if(consume(SBRACKETO)) {\r\n        content = dtd;\r\n        BaseX.debug(\"- Root Element Type: %\", root);\r\n        BaseX.debug(\"- Content:\\n %\", content);\r\n        consumeContent();\r\n      }\r\n      // read external file\r\n      String file = new File(xmlfile).getParent() + \"\\\\\" + string(extid);\r\n      content = IOConstants.read(file);\r\n      pos = 0;\r\n      BaseX.debug(\"- Root Element Type: %\", root);\r\n      BaseX.debug(\"- Content:\\n %\", content);\r\n      BaseX.debug(\"----------------\");\r\n      consumeContent();\r\n    } else if (consume(SBRACKETO)) {\r\n      content = dtd;\r\n      BaseX.debug(\"- Root Element Type: %\", root);\r\n      BaseX.debug(\"- Content:\\n %\", content);\r\n      consumeContent();\r\n    } else {\r\n      error();\r\n    }\r\n  }","commit_id":"e1d4d56f89b3d352b7967435295df178f6f41fcf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Checks for quantity sign.\r\n   * @return boolean if sign is there\r\n   */\r\n  private boolean checkQuantity() {\r\n    byte c = next();\r\n    prev();\r\n    if(quantity(c)) return true;\r\n    return false;\r\n  }","id":1143,"modified_method":"/**\r\n   * Checks for quantity sign.\r\n   * @return boolean if sign is there\r\n   */\r\n  private byte[] consumeQuantity() {\r\n    byte c = next();\r\n    if(!quantity(c)) prev();\r\n    return substring(content, pos, pos);\r\n  }","commit_id":"e1d4d56f89b3d352b7967435295df178f6f41fcf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n     * Consumes bracketed content.\r\n     * @throws BuildException Build Exception\r\n     */  \r\n  private void consumeBracketed() throws BuildException  {\r\n    while(!consume(BRACKETC)) {\r\n      consumeWS();\r\n      if(consume(DASH) || consume(COLON)) {\r\n        consumeWS();\r\n        BaseX.debug(consumeName());\r\n        consumeWS();\r\n      } else {\r\n        consumeWS();\r\n        BaseX.debug(consumeName());\r\n        consumeWS();\r\n      }\r\n    }\r\n    if(checkQuantity()) BaseX.debug(consumeName());\r\n    if(consumeWS()) {\r\n      if (consume(DASH) || consume(COLON)) {\r\n        consumeWS();\r\n        if(consume(BRACKETO)) {\r\n          consumeBracketed();\r\n        }\r\n      }\r\n    } \r\n  }","id":1144,"modified_method":"/**\r\n     * Consumes bracketed content.\r\n     * @throws BuildException Build Exception\r\n     */  \r\n  private void consumeBracketed() throws BuildException  {\r\n    while(!consume(BRACKETC)) {\r\n      consumeWS();\r\n      if(consume(DASH) || consume(COLON)) {\r\n        consumeWS();\r\n        if (consume(BRACKETO)) {\r\n          consumeBracketed();\r\n        } else {\r\n        BaseX.debug(consumeName());\r\n        consumeWS();\r\n        }\r\n      } else if (consume(BRACKETO)) { \r\n        consumeBracketed();\r\n      } else {\r\n        if (check) {\r\n        consumeWS();\r\n        BaseX.debug(consumeName());\r\n        consumeWS();\r\n        check = false;\r\n        } else {\r\n          error();\r\n        }\r\n      }\r\n    }\r\n    BaseX.debug(consumeQuantity());\r\n    if(consumeWS()) {\r\n      if (consume(DASH) || consume(COLON)) {\r\n        consumeWS();\r\n        if(consume(BRACKETO)) {\r\n          consumeBracketed();\r\n        }\r\n      }\r\n    } \r\n  }","commit_id":"e1d4d56f89b3d352b7967435295df178f6f41fcf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Consumes a name.\r\n   * @return consumed name\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private byte[] consumeName() throws BuildException {\r\n    int p = pos;\r\n    byte c = next();\r\n    if(!XMLScanner.isFirstLetter(c) && !percentage(c) && !quantity(c)) {\r\n      System.out.println(\"Pos: \" + string(substring(content, pos, pos + 5)));\r\n      error();\r\n    }\r\n    do {\r\n      c = next();\r\n    } while(XMLScanner.isLetter(c) || percentage(c) || semicolon(c)\r\n        || quantity(c));\r\n    prev();\r\n    return substring(content, p, pos);\r\n  }","id":1145,"modified_method":"/**\r\n   * Consumes a name.\r\n   * @return consumed name\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private byte[] consumeName() throws BuildException {\r\n    int p = pos;\r\n    byte c = next();\r\n    if(!XMLScanner.isFirstLetter(c) && !percentage(c)) {\r\n      error();\r\n    }\r\n    do {\r\n      c = next();\r\n    } while(XMLScanner.isLetter(c) || percentage(c) || semicolon(c)\r\n        || quantity(c));\r\n    prev();\r\n    return substring(content, p, pos);\r\n  }","commit_id":"e1d4d56f89b3d352b7967435295df178f6f41fcf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Consumes bracketed content.\r\n   * @throws BuildException Build Exception\r\n   */  \r\nprivate void consumeBracketed2() throws BuildException  {\r\n  while(!consume(BRACKETC)) {\r\n    consumeWS();\r\n    if(consume(DASH)) {\r\n      consumeWS();\r\n      if (consume(BRACKETO)) {\r\n        consumeBracketed();\r\n      } else {\r\n      BaseX.debug(consumeName());\r\n      consumeWS();\r\n      }\r\n    } else if (consume(BRACKETO)) { \r\n      consumeBracketed();\r\n    } else if (consume(COLON)) {\r\n      error();\r\n    } else {\r\n      if (check) {\r\n      consumeWS();\r\n      BaseX.debug(consumeName());\r\n      consumeWS();\r\n      check = false;\r\n      } else {\r\n        error();\r\n      }\r\n    }\r\n  }\r\n  BaseX.debug(consumeQuantity());\r\n  if(consumeWS()) {\r\n    if (consume(DASH) || consume(COLON)) {\r\n      consumeWS();\r\n      if(consume(BRACKETO)) {\r\n        consumeBracketed();\r\n      }\r\n    }\r\n  } \r\n}","id":1146,"modified_method":"/**\r\n   * Consumes bracketed content.\r\n   * @throws BuildException Build Exception\r\n   */  \r\nprivate void consumeBracketed2() throws BuildException  {\r\n  while(!consume(BRACKETC)) {\r\n    consumeWS1();\r\n    if(consume(DASH)) {\r\n      consumeWS1();\r\n      if (consume(BRACKETO)) {\r\n        consumeBracketed();\r\n      } else {\r\n      BaseX.debug(consumeName());\r\n      consumeWS1();\r\n      }\r\n    } else if (consume(BRACKETO)) { \r\n      consumeBracketed();\r\n    } else if (consume(COLON)) {\r\n      error();\r\n    } else {\r\n      if (check) {\r\n      consumeWS1();\r\n      BaseX.debug(consumeName());\r\n      consumeWS1();\r\n      check = false;\r\n      } else {\r\n        error();\r\n      }\r\n    }\r\n  }\r\n  BaseX.debug(consumeQuantity());\r\n  if(consumeWS()) {\r\n    if (consume(DASH) || consume(COLON)) {\r\n      consumeWS1();\r\n      if(consume(BRACKETO)) {\r\n        consumeBracketed();\r\n      }\r\n    }\r\n  } \r\n}","commit_id":"7e4bc21541f11e50db566b50ed19a0e0f26851bb","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Constructor.\r\n   * @param dtd contents\r\n   * @param xml input xml file\r\n   * @param tag tag index\r\n   * @param att attribute index\r\n   * @param ent entity index\r\n   * @throws IOException I/O Exception\r\n   */\r\n  public DTDParser(final byte[] dtd, final String xml, final Names tag,\r\n      final Names att, final Map ent) throws IOException {\r\n\r\n    xmlfile = xml;\r\n    tags = tag;\r\n    atts = att;\r\n    ents = ent;\r\n\r\n    // cache content\r\n    content = dtd;\r\n    // check DOCTYPE S\r\n    if(!consume(DOCTYPE) || !consumeWS()) error();\r\n    // check NAME\r\n    root = consumeName();\r\n    if (string(root).equals(string(SYSTEM))) error();\r\n    // check Whitespace\r\n    if(!consumeWS()) error();\r\n    // check for ExternDTD\r\n    if((consume(SYSTEM) || consume(PUBLIC)) && consumeWS()) {\r\n      // check ExternalID in quotes\r\n      byte[] extid = consumeQuoted();\r\n      consumeWS();\r\n      if (checkQuoted()) {\r\n        BaseX.debug(\"PubidLiteral\");\r\n        extid = consumeQuoted();\r\n      }\r\n      if(consume(SBRACKETO)) {\r\n        content = dtd;\r\n        BaseX.debug(\"- Root Element Type: %\", root);\r\n        BaseX.debug(\"- Content:\\n %\", content);\r\n        consumeContent();\r\n      }\r\n      // read external file\r\n      String file = new File(xmlfile).getParent() + \"\\\\\" + string(extid);\r\n      content = IOConstants.read(file);\r\n      extern = true;\r\n      pos = 0;\r\n      BaseX.debug(\"- Root Element Type: %\", root);\r\n      BaseX.debug(\"- Content:\\n %\", content);\r\n      BaseX.debug(\"----------------\");\r\n      consumeContent();\r\n      extern = false;\r\n    } else if (consume(SBRACKETO)) {\r\n      content = dtd;\r\n      BaseX.debug(\"- Root Element Type: %\", root);\r\n      BaseX.debug(\"- Content:\\n %\", content);\r\n      consumeContent();\r\n    } else {\r\n      error();\r\n    }\r\n  }","id":1147,"modified_method":"/**\r\n   * Constructor.\r\n   * @param dtd contents\r\n   * @param xml input xml file\r\n   * @param tag tag index\r\n   * @param att attribute index\r\n   * @param ent entity index\r\n   * @throws IOException I/O Exception\r\n   */\r\n  public DTDParser(final byte[] dtd, final String xml, final Names tag,\r\n      final Names att, final Map ent) throws IOException {\r\n\r\n    xmlfile = xml;\r\n    tags = tag;\r\n    atts = att;\r\n    ents = ent;\r\n\r\n    // cache content\r\n    content = dtd;\r\n    // check DOCTYPE S\r\n    if(!consume(DOCTYPE) || !consumeWS()) error();\r\n    // check NAME\r\n    root = consumeName();\r\n    if (string(root).equals(string(SYSTEM))) error();\r\n    // check Whitespace\r\n    if(!consumeWS()) error();\r\n    // check for ExternDTD\r\n    if(consume(SYSTEM)) {\r\n      if(!consumeWS()) error();\r\n      extid = consumeQuoted();\r\n      starter();\r\n    } else if (consume(PUBLIC)) {\r\n      if(!consumeWS()) error();\r\n      consumeQuoted();\r\n      if(!consumeWS()) error();\r\n      extid = consumeQuoted();\r\n      starter();\r\n    } else if(consume(SBRACKETO)) {\r\n      content = dtd;\r\n      BaseX.debug(\"- Root Element Type: %\", root);\r\n      BaseX.debug(\"- Content:\\n %\", content);\r\n      consumeContent();\r\n    } else {\r\n      error();\r\n    }\r\n  }","commit_id":"7e4bc21541f11e50db566b50ed19a0e0f26851bb","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Checks the EntityDef and PEDef for Entity Objects.\r\n   * @return entity definition\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private byte[] entDef() throws BuildException {\r\n    consumeWS();\r\n    if(consume(SYSTEM) || consume(PUBLIC)) {\r\n      consumeWS();\r\n      byte[] val = consumeQuoted();\r\n      BaseX.debug(val);\r\n      if (!consumeWS()) error();\r\n      if(consume(ND)) {\r\n        BaseX.debug(ND);\r\n        if (!consumeWS()) error();\r\n        BaseX.debug(consumeName());\r\n      } else if(consume(GREAT)) {\r\n      } else {\r\n        BaseX.debug(consumeQuoted());\r\n      }\r\n      return val;\r\n    } else {\r\n      consumeWS();\r\n      byte[] val = consumeQuoted();\r\n      BaseX.debug(val);\r\n      if (consumeWS()) {\r\n        if (consume(SYSTEM)) error();\r\n      }\r\n      return val;\r\n    }\r\n  }","id":1148,"modified_method":"/**\r\n   * Checks the EntityDef and PEDef for Entity Objects.\r\n   * @return entity definition\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private byte[] entDef() throws BuildException {\r\n    consumeWS1();\r\n    if(consume(SYSTEM) || consume(PUBLIC)) {\r\n      consumeWS1();\r\n      byte[] val = consumeQuoted();\r\n      BaseX.debug(val);\r\n      if (!consumeWS()) error();\r\n      if(consume(ND)) {\r\n        BaseX.debug(ND);\r\n        if (!consumeWS()) error();\r\n        BaseX.debug(consumeName());\r\n      } else if(consume(GREAT)) {\r\n      } else {\r\n        BaseX.debug(consumeQuoted());\r\n      }\r\n      return val;\r\n    } else {\r\n      consumeWS1();\r\n      byte[] val = consumeQuoted();\r\n      BaseX.debug(val);\r\n      if (consumeWS()) {\r\n        if (consume(SYSTEM)) error();\r\n      }\r\n      return val;\r\n    }\r\n  }","commit_id":"7e4bc21541f11e50db566b50ed19a0e0f26851bb","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Checks the contentSpec for Element Objects.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void contentSpec() throws BuildException {\r\n    // sign after name has to be a whitespace\r\n    if(!consumeWS()) error();\r\n    // checks for empty, any or mixed elements\r\n    if(consume(EMP)) {\r\n      BaseX.debug(EMP);\r\n    } else if(consume(ANY)) {\r\n      BaseX.debug(ANY);\r\n    } else if(consume(BRACKETO)) {\r\n      consumeWS();\r\n      if(consume(PC)) {\r\n        BaseX.debug(PC);\r\n        check = false;\r\n        consumeWS();\r\n        consumeBracketed();\r\n      } else {\r\n        consumeBracketed();\r\n      }\r\n    } else if(consume(WEMP1) || consume(WEMP2) || consume(WANY1)\r\n        || consume(WANY2)) {\r\n      error();\r\n    } else {\r\n      consumeWS();\r\n      BaseX.debug(consumeName());\r\n      consumeWS();\r\n    }\r\n  }","id":1149,"modified_method":"/**\r\n   * Checks the contentSpec for Element Objects.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void contentSpec() throws BuildException {\r\n    // sign after name has to be a whitespace\r\n    if(!consumeWS()) error();\r\n    // checks for empty, any or mixed elements\r\n    if(consume(EMP)) {\r\n      BaseX.debug(EMP);\r\n    } else if(consume(ANY)) {\r\n      BaseX.debug(ANY);\r\n    } else if(consume(BRACKETO)) {\r\n      consumeWS1();\r\n      if(consume(PC)) {\r\n        BaseX.debug(PC);\r\n        check = false;\r\n        consumeWS1();\r\n        consumeBracketed();\r\n      } else {\r\n        consumeBracketed();\r\n      }\r\n    } else if(consume(WEMP1) || consume(WEMP2) || consume(WANY1)\r\n        || consume(WANY2)) {\r\n      error();\r\n    } else {\r\n      consumeWS1();\r\n      BaseX.debug(consumeName());\r\n      consumeWS1();\r\n    }\r\n  }","commit_id":"7e4bc21541f11e50db566b50ed19a0e0f26851bb","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Checks the attType for Attlist Objects.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void attType() throws BuildException {\r\n    consumeWS();\r\n    BaseX.debug(consumeName());\r\n    consumeWS();\r\n    if(consume(CD)) {\r\n      BaseX.debug(CD);\r\n    } else if(consume(BRACKETO)) {\r\n        consumeBracketed2();\r\n    } else if(consume(NOT)) {\r\n      if(!consumeWS() && !consume(BRACKETO)) error();\r\n      consumeWS();\r\n      if(consume(BRACKETO)) {\r\n        consumeBracketed2();\r\n      } else {\r\n      BaseX.debug(consumeName());\r\n      }\r\n    } else if(checkTokenize()) {\r\n      BaseX.debug(checkT);\r\n    } else error();\r\n  }","id":1150,"modified_method":"/**\r\n   * Checks the attType for Attlist Objects.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void attType() throws BuildException {\r\n    consumeWS1();\r\n    BaseX.debug(consumeName());\r\n    consumeWS1();\r\n    if(consume(CD)) {\r\n      BaseX.debug(CD);\r\n    } else if(consume(BRACKETO)) {\r\n        consumeBracketed2();\r\n    } else if(consume(NOT)) {\r\n      if(!consumeWS() && !consume(BRACKETO)) error();\r\n      consumeWS1();\r\n      if(consume(BRACKETO)) {\r\n        consumeBracketed2();\r\n      } else {\r\n      BaseX.debug(consumeName());\r\n      }\r\n    } else if(checkTokenize()) {\r\n      BaseX.debug(checkT);\r\n    } else error();\r\n  }","commit_id":"7e4bc21541f11e50db566b50ed19a0e0f26851bb","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Method to consume the Content of Internal or/and External DTD.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void consumeContent() throws BuildException {\r\n    // runs till the last character\r\n    while(next() != 0) {\r\n      check = true;\r\n      // checks for element, attlist and entity tags\r\n      if(consume(ELEM)) {\r\n        if (!consumeWS()) error();\r\n        element = consumeName();\r\n        tags.add(element);\r\n        BaseX.debug(\"----------------------\");\r\n        BaseX.debug(\"- Element: %\", element);\r\n        contentSpec();\r\n      } else if(consume(ATTL)) {\r\n        if (!consumeWS()) error();\r\n        attl = consumeName();\r\n        atts.add(attl);\r\n        BaseX.debug(\"----------------------\");\r\n        BaseX.debug(\"- ATTLIST: %\", attl);\r\n        if (!consume(GREAT)) {\r\n          attType();\r\n          dDecl();\r\n        }\r\n      } else if(consume(ENT)) {\r\n        if (!consumeWS()) error();\r\n        if(percentage(next())) {\r\n          if(!consumeWS()) error();\r\n          byte[] name = consumeName();\r\n          BaseX.debug(\"----------------------\");\r\n          BaseX.debug(\"- Entity: %\", name);\r\n          if(!consumeWS()) error();\r\n          final byte[] val = entDef();\r\n          ents.add(name, val);\r\n        } else {\r\n          prev();\r\n          byte[] name = consumeName();\r\n          BaseX.debug(\"----------------------\");\r\n          BaseX.debug(\"- Entity: %\", name);\r\n          final byte[] val = entDef();\r\n          ents.add(name, val);\r\n        }\r\n      } else if(consume(NOT)) {\r\n        if (!consumeWS()) error();\r\n        BaseX.debug(\"----------------------\");\r\n        BaseX.debug(NOT);\r\n      } else if(consume(WELEM1) || consume(WELEM2) || consume(WELEM3)\r\n          || consume(WATTL1) || consume(WATTL2) || consume(XML)) {\r\n        error();\r\n      }\r\n    }\r\n    consumeWS();\r\n    if (!extern) {\r\n    if(!consume(SBRACKETC)) error();\r\n    }\r\n    BaseX.debug(\"----------------------\");\r\n    BaseX.debug(\"THE END\");\r\n  }","id":1151,"modified_method":"/**\r\n   * Method to consume the Content of Internal or/and External DTD.\r\n   * @throws BuildException Build Exception\r\n   */\r\n  private void consumeContent() throws BuildException {\r\n    // runs till the last character\r\n    while(next() != 0) {\r\n      check = true;\r\n      // checks for element, attlist and entity tags\r\n      if(consume(ELEM)) {\r\n        if (!consumeWS()) error();\r\n        element = consumeName();\r\n        tags.add(element);\r\n        BaseX.debug(\"----------------------\");\r\n        BaseX.debug(\"- Element: %\", element);\r\n        contentSpec();\r\n      } else if(consume(ATTL)) {\r\n        if (!consumeWS()) error();\r\n        attl = consumeName();\r\n        atts.add(attl);\r\n        BaseX.debug(\"----------------------\");\r\n        BaseX.debug(\"- ATTLIST: %\", attl);\r\n        if (!consume(GREAT)) {\r\n          attType();\r\n          dDecl();\r\n        }\r\n      } else if(consume(ENT)) {\r\n        if (!consumeWS()) error();\r\n        if(percentage(next())) {\r\n          if(!consumeWS()) error();\r\n          byte[] name = consumeName();\r\n          BaseX.debug(\"----------------------\");\r\n          BaseX.debug(\"- Entity: %\", name);\r\n          if(!consumeWS()) error();\r\n          final byte[] val = entDef();\r\n          ents.add(name, val);\r\n        } else {\r\n          prev();\r\n          byte[] name = consumeName();\r\n          BaseX.debug(\"----------------------\");\r\n          BaseX.debug(\"- Entity: %\", name);\r\n          final byte[] val = entDef();\r\n          ents.add(name, val);\r\n        }\r\n      } else if(consume(NOT)) {\r\n        if (!consumeWS()) error();\r\n        BaseX.debug(\"----------------------\");\r\n        BaseX.debug(NOT);\r\n      } else if(consume(WELEM1) || consume(WELEM2) || consume(WELEM3)\r\n          || consume(WATTL1) || consume(WATTL2) || consume(XML)) {\r\n        error();\r\n      }\r\n    }\r\n    consumeWS1();\r\n    if (!extern) {\r\n    if(!consume(SBRACKETC)) error();\r\n    }\r\n    BaseX.debug(\"----------------------\");\r\n    BaseX.debug(\"THE END\");\r\n  }","commit_id":"7e4bc21541f11e50db566b50ed19a0e0f26851bb","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n     * Consumes bracketed content.\r\n     * @throws BuildException Build Exception\r\n     */  \r\n  private void consumeBracketed() throws BuildException  {\r\n    while(!consume(BRACKETC)) {\r\n      consumeWS();\r\n      if(consume(DASH) || consume(COLON)) {\r\n        consumeWS();\r\n        if (consume(BRACKETO)) {\r\n          consumeBracketed();\r\n        } else {\r\n        BaseX.debug(consumeName());\r\n        consumeWS();\r\n        }\r\n      } else if (consume(BRACKETO)) { \r\n        consumeBracketed();\r\n      } else {\r\n        if (check) {\r\n        consumeWS();\r\n        BaseX.debug(consumeName());\r\n        consumeWS();\r\n        check = false;\r\n        } else {\r\n          error();\r\n        }\r\n      }\r\n    }\r\n    BaseX.debug(consumeQuantity());\r\n    if(consumeWS()) {\r\n      if (consume(DASH) || consume(COLON)) {\r\n        consumeWS();\r\n        if(consume(BRACKETO)) {\r\n          consumeBracketed();\r\n        }\r\n      }\r\n    } \r\n  }","id":1152,"modified_method":"/**\r\n     * Consumes bracketed content.\r\n     * @throws BuildException Build Exception\r\n     */  \r\n  private void consumeBracketed() throws BuildException  {\r\n    while(!consume(BRACKETC)) {\r\n      consumeWS1();\r\n      if(consume(DASH) || consume(COLON)) {\r\n        consumeWS1();\r\n        if (consume(BRACKETO)) {\r\n          consumeBracketed();\r\n        } else {\r\n        BaseX.debug(consumeName());\r\n        consumeWS1();\r\n        }\r\n      } else if (consume(BRACKETO)) { \r\n        consumeBracketed();\r\n      } else {\r\n        if (check) {\r\n        consumeWS1();\r\n        BaseX.debug(consumeName());\r\n        consumeWS1();\r\n        check = false;\r\n        } else {\r\n          error();\r\n        }\r\n      }\r\n    }\r\n    BaseX.debug(consumeQuantity());\r\n    if(consumeWS()) {\r\n      if (consume(DASH) || consume(COLON)) {\r\n        consumeWS1();\r\n        if(consume(BRACKETO)) {\r\n          consumeBracketed();\r\n        }\r\n      }\r\n    } \r\n  }","commit_id":"7e4bc21541f11e50db566b50ed19a0e0f26851bb","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * put your documentation comment here\n   * @param doc\n   * @param chanId\n   * @param idTag\n   * @param rs\n   * @param channel\n   * @exception java.sql.SQLException\n   */\n  protected static final void createChannelNodeHeaders (DocumentImpl doc, int chanId, String idTag, ResultSet rs, Element channel) throws java.sql.SQLException {\n    String chanTitle = rs.getString(\"CHAN_TITLE\");\n    String chanDesc = rs.getString(\"CHAN_DESC\");\n    String chanClass = rs.getString(\"CHAN_CLASS\");\n    int chanPupblUsrId = rs.getInt(\"CHAN_PUBL_ID\");\n    int chanApvlId = rs.getInt(\"CHAN_APVL_ID\");\n    java.sql.Timestamp chanPublDt = rs.getTimestamp(\"CHAN_PUBL_DT\");\n    java.sql.Timestamp chanApvlDt = rs.getTimestamp(\"CHAN_APVL_DT\");\n    int chanTimeout = rs.getInt(\"CHAN_TIMEOUT\");\n    String chanMinimizable = rs.getString(\"CHAN_MINIMIZABLE\");\n    String chanEditable = rs.getString(\"CHAN_EDITABLE\");\n    String chanHasHelp = rs.getString(\"CHAN_HAS_HELP\");\n    String chanHasAbout = rs.getString(\"CHAN_HAS_ABOUT\");\n    String chanUnremovable = rs.getString(\"CHAN_UNREMOVABLE\");\n    String chanDetachable = rs.getString(\"CHAN_DETACHABLE\");\n    String chanName = rs.getString(\"CHAN_NAME\");\n    String chanFName = rs.getString(\"CHAN_FNAME\");\n    doc.putIdentifier(idTag, channel);\n    addChannelHeaderAttribute(\"ID\", idTag, channel);\n    channel.setAttribute(\"chanID\", chanId + \"\");\n    if (DEBUG > 1) {\n      System.err.println(\"channel \" + chanName + \"@\" + chanId + \" has tag \" + chanId);\n    }\n    addChannelHeaderAttribute(\"name\", chanName, channel);\n    addChannelHeaderAttribute(\"fname\", chanFName, channel);\n    addChannelHeaderAttribute(\"class\", chanClass, channel);\n    addChannelHeaderAttribute(\"timeout\", chanTimeout, channel);\n    addChannelHeaderAttributeFlag(\"minimizable\", chanMinimizable, channel);\n    addChannelHeaderAttributeFlag(\"editable\", chanEditable, channel);\n    addChannelHeaderAttributeFlag(\"hasHelp\", chanHasHelp, channel);\n    addChannelHeaderAttributeFlag(\"hasAbout\", chanHasAbout, channel);\n    addChannelHeaderAttributeFlag(\"unremovable\", chanUnremovable, channel);\n    addChannelHeaderAttributeFlag(\"detachable\", chanDetachable, channel);\n  }","id":1153,"modified_method":"/**\n   * put your documentation comment here\n   * @param doc\n   * @param chanId\n   * @param idTag\n   * @param rs\n   * @param channel\n   * @exception java.sql.SQLException\n   */\n  protected static final void createChannelNodeHeaders (DocumentImpl doc, int chanId, String idTag, ResultSet rs, Element channel) throws java.sql.SQLException {\n    String chanTitle = rs.getString(\"CHAN_TITLE\");\n    String chanDesc = rs.getString(\"CHAN_DESC\");\n    String chanClass = rs.getString(\"CHAN_CLASS\");\n    int chanPupblUsrId = rs.getInt(\"CHAN_PUBL_ID\");\n    int chanApvlId = rs.getInt(\"CHAN_APVL_ID\");\n    java.sql.Timestamp chanPublDt = rs.getTimestamp(\"CHAN_PUBL_DT\");\n    java.sql.Timestamp chanApvlDt = rs.getTimestamp(\"CHAN_APVL_DT\");\n    int chanTimeout = rs.getInt(\"CHAN_TIMEOUT\");\n    String chanMinimizable = rs.getString(\"CHAN_MINIMIZABLE\");\n    String chanEditable = rs.getString(\"CHAN_EDITABLE\");\n    String chanHasHelp = rs.getString(\"CHAN_HAS_HELP\");\n    String chanHasAbout = rs.getString(\"CHAN_HAS_ABOUT\");\n    //   String chanUnremovable = rs.getString(\"CHAN_UNREMOVABLE\");\n    String chanDetachable = rs.getString(\"CHAN_DETACHABLE\");\n    String chanName = rs.getString(\"CHAN_NAME\");\n    String chanFName = rs.getString(\"CHAN_FNAME\");\n    doc.putIdentifier(idTag, channel);\n    addChannelHeaderAttribute(\"ID\", idTag, channel);\n    channel.setAttribute(\"chanID\", chanId + \"\");\n    if (DEBUG > 1) {\n      System.err.println(\"channel \" + chanName + \"@\" + chanId + \" has tag \" + chanId);\n    }\n    addChannelHeaderAttribute(\"name\", chanName, channel);\n    addChannelHeaderAttribute(\"fname\", chanFName, channel);\n    addChannelHeaderAttribute(\"class\", chanClass, channel);\n    addChannelHeaderAttribute(\"timeout\", chanTimeout, channel);\n    addChannelHeaderAttributeFlag(\"minimizable\", chanMinimizable, channel);\n    addChannelHeaderAttributeFlag(\"editable\", chanEditable, channel);\n    addChannelHeaderAttributeFlag(\"hasHelp\", chanHasHelp, channel);\n    addChannelHeaderAttributeFlag(\"hasAbout\", chanHasAbout, channel);\n    //    addChannelHeaderAttributeFlag(\"unremovable\", chanUnremovable, channel);\n    addChannelHeaderAttributeFlag(\"detachable\", chanDetachable, channel);\n  }","commit_id":"c814be7d11ed02d11af4cbc3cd70d0f97076c103","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param rs\n   * @param chanId\n   * @param userId\n   * @param stmt\n   * @param doc\n   * @return\n   * @exception java.sql.SQLException\n   */\n  protected final Element createLayoutStructure (ResultSet rs, int chanId, int userId, Statement stmt, DocumentImpl doc) throws java.sql.SQLException {\n    String idTag = rs.getString(\"STRUCT_ID\");\n    if (chanId != 0) {          // Channel\n\n      /* See if we have access to the channel */\n      if (!channelInUserRole(chanId, userId, stmt.getConnection())) {\n\n        /* No access to channel. Replace it with the error channel and a suitable message */\n\n        /* !!!!!!!   Add code here someday !!!!!!!!!!!*/\n        Logger.log(Logger.INFO, \"RDBMUserLayoutStore::createLayoutStructure(): No role access (ignored at the moment) for channel \"\n            + chanId + \" for user \" + userId);\n\n        // return new ErrorChannel()\n\n      }\n\n      return  createChannelNode(stmt.getConnection(), doc, chanId, channelPrefix + idTag);\n\n    }\n    else {      // Folder\n      String name = rs.getString(\"NAME\");\n      String type = rs.getString(\"TYPE\");\n      String hidden = rs.getString(\"HIDDEN\");\n      String unremovable = rs.getString(\"UNREMOVABLE\");\n      String immutable = rs.getString(\"IMMUTABLE\");\n      Element folder = doc.createElement(\"folder\");\n      doc.putIdentifier(folderPrefix + idTag, folder);\n      addChannelHeaderAttribute(\"ID\", folderPrefix + idTag, folder);\n      addChannelHeaderAttribute(\"name\", name, folder);\n      addChannelHeaderAttribute(\"type\", (type != null ? type : \"regular\"), folder);\n      addChannelHeaderAttribute(\"hidden\", (hidden != null && hidden.equals(\"Y\") ? \"true\" : \"false\"), folder);\n      addChannelHeaderAttribute(\"immutable\", (immutable != null && immutable.equals(\"Y\") ? \"true\" : \"false\"), folder);\n      addChannelHeaderAttribute(\"unremovable\", (unremovable != null && unremovable.equals(\"Y\") ? \"true\" : \"false\"), folder);\n      return  folder;\n    }\n  }","id":1154,"modified_method":"/**\n   * put your documentation comment here\n   * @param rs\n   * @param chanId\n   * @param userId\n   * @param stmt\n   * @param doc\n   * @return\n   * @exception java.sql.SQLException\n   */\n  protected final Element createLayoutStructure (ResultSet rs, int chanId, int userId, Statement stmt, DocumentImpl doc) throws java.sql.SQLException {\n    String idTag = rs.getString(\"STRUCT_ID\");\n    Element returnNode=null;\n    if (chanId != 0) {          // Channel\n\n      /* See if we have access to the channel */\n      if (!channelInUserRole(chanId, userId, stmt.getConnection())) {\n\n        /* No access to channel. Replace it with the error channel and a suitable message */\n\n        /* !!!!!!!   Add code here someday !!!!!!!!!!!*/\n        Logger.log(Logger.INFO, \"RDBMUserLayoutStore::createLayoutStructure(): No role access (ignored at the moment) for channel \"\n            + chanId + \" for user \" + userId);\n\n        // return new ErrorChannel()\n\n      }\n\n      returnNode = createChannelNode(stmt.getConnection(), doc, chanId, channelPrefix + idTag);\n\n    }\n    else {      // Folder\n      String name = rs.getString(\"NAME\");\n      String type = rs.getString(\"TYPE\");\n      returnNode = doc.createElement(\"folder\");\n      doc.putIdentifier(folderPrefix + idTag, returnNode);\n      addChannelHeaderAttribute(\"ID\", folderPrefix + idTag, returnNode);\n      addChannelHeaderAttribute(\"name\", name, returnNode);\n      addChannelHeaderAttribute(\"type\", (type != null ? type : \"regular\"), returnNode);\n    }\n    // set common attributes\n    if(returnNode!=null) {\n      String hidden = rs.getString(\"HIDDEN\");\n      String unremovable = rs.getString(\"UNREMOVABLE\");\n      String immutable = rs.getString(\"IMMUTABLE\");\n      addChannelHeaderAttribute(\"hidden\", (hidden != null && hidden.equals(\"Y\") ? \"true\" : \"false\"), returnNode);\n      addChannelHeaderAttribute(\"immutable\", (immutable != null && immutable.equals(\"Y\") ? \"true\" : \"false\"), returnNode);\n      addChannelHeaderAttribute(\"unremovable\", (unremovable != null && unremovable.equals(\"Y\") ? \"true\" : \"false\"), returnNode);\n    }\n    return returnNode;\n  }","commit_id":"c814be7d11ed02d11af4cbc3cd70d0f97076c103","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n    protected TxHook createTxHook()\n    {\n        clusterEventsDelegateInvocationHandler = new DelegateInvocationHandler();\n        memberContextDelegateInvocationHandler = new DelegateInvocationHandler();\n        clusterMemberAvailabilityDelegateInvocationHandler = new DelegateInvocationHandler();\n\n        clusterEvents = (ClusterMemberEvents) Proxy.newProxyInstance( ClusterMemberEvents.class.getClassLoader(),\n                new Class[]{ClusterMemberEvents.class, Lifecycle.class}, clusterEventsDelegateInvocationHandler );\n        HighAvailabilityMemberContext memberContext = (HighAvailabilityMemberContext) Proxy.newProxyInstance(\n                HighAvailabilityMemberContext.class.getClassLoader(),\n                new Class[]{HighAvailabilityMemberContext.class}, memberContextDelegateInvocationHandler );\n        clusterMemberAvailability = (ClusterMemberAvailability) Proxy.newProxyInstance(\n                ClusterMemberAvailability.class.getClassLoader(),\n        new Class[]{ClusterMemberAvailability.class}, clusterMemberAvailabilityDelegateInvocationHandler );\n\n        /*\n         *  We need to create these anyway since even in compatibility mode we'll use them for switchover. If it turns\n         *  out we are not going to need zookeeper, just assign them to the class fields. The difference is in when\n         *  they start().\n         */\n        ElectionCredentialsProvider electionCredentialsProvider = config.get( HaSettings.slave_only ) ?\n                new NotElectableElectionCredentialsProvider() :\n                new DefaultElectionCredentialsProvider( config.get( ClusterSettings.server_id ),\n                        new OnDiskLastTxIdGetter( new File( getStoreDir() ) ), new HighAvailabilityMemberInfoProvider()\n                {\n                    @Override\n                    public HighAvailabilityMemberState getHighAvailabilityMemberState()\n                    {\n                        return memberStateMachine.getCurrentState();\n                    }\n                } );\n\n\n        ObjectStreamFactory objectStreamFactory = new ObjectStreamFactory();\n\n\n        clusterClient = new ClusterClient( ClusterClient.adapt( config ), logging, electionCredentialsProvider, objectStreamFactory, objectStreamFactory );\n        PaxosClusterMemberEvents localClusterEvents = new PaxosClusterMemberEvents( clusterClient, clusterClient,\n                clusterClient, clusterClient, logging, new Predicate<PaxosClusterMemberEvents.ClusterMembersSnapshot>()\n        {\n            @Override\n            public boolean accept( PaxosClusterMemberEvents.ClusterMembersSnapshot item )\n            {\n                for ( MemberIsAvailable member : item.getCurrentAvailableMembers() )\n                {\n                    if ( member.getRoleUri().getScheme().equals( \"ha\" ) )\n                    {\n                        if ( HighAvailabilityModeSwitcher.getServerId( member.getRoleUri() ) ==\n                                config.get( ClusterSettings.server_id ) )\n                        {\n                            msgLog.error( String.format( \"Instance %s has the same serverId as ours (%d) - will not join this cluster\",\n                                    member.getRoleUri(), config.get( ClusterSettings.server_id ) ) );\n                            return true;\n                        }\n                    }\n                }\n                return true;\n            }\n        }, new HANewSnapshotFunction(), objectStreamFactory, objectStreamFactory );\n\n        // Force a reelection after we enter the cluster\n        // and when that election is finished refresh the snapshot\n        clusterClient.addClusterListener( new ClusterListener.Adapter()\n        {\n            boolean hasRequestedElection = false; // This ensures that the election result is (at least) from our request or thereafter\n\n            @Override\n            public void enteredCluster( ClusterConfiguration clusterConfiguration )\n            {\n                hasRequestedElection = true;\n                clusterClient.performRoleElections();\n            }\n\n            @Override\n            public void elected( String role, InstanceId instanceId, URI electedMember )\n            {\n                if ( hasRequestedElection && role.equals( ClusterConfiguration.COORDINATOR ) )\n                {\n                    clusterClient.refreshSnapshot();\n                    clusterClient.removeClusterListener( this );\n                }\n            }\n        });\n\n        HighAvailabilityMemberContext localMemberContext = new SimpleHighAvailabilityMemberContext( clusterClient.getServerId() );\n        PaxosClusterMemberAvailability localClusterMemberAvailability = new PaxosClusterMemberAvailability(\n            clusterClient.getServerId(), clusterClient, clusterClient, logging, objectStreamFactory, objectStreamFactory );\n\n        // Here we decide whether to start in compatibility mode or mode or not\n        //noinspection deprecation\n        if ( !config.get( HaSettings.coordinators ).isEmpty() &&\n            !config.get( HaSettings.coordinators ).get( 0 ).toString().trim().equals( \"\" ) )\n        {\n            compatibilityMode = true;\n            compatibilityLifecycle = new LinkedList<>();\n\n            Switchover switchover = new ZooToPaxosSwitchover( life, paxosLife, compatibilityLifecycle,\n                clusterEventsDelegateInvocationHandler, memberContextDelegateInvocationHandler,\n                clusterMemberAvailabilityDelegateInvocationHandler, localClusterEvents,\n                localMemberContext, localClusterMemberAvailability );\n\n            ZooKeeperHighAvailabilityEvents zkEvents =\n                new ZooKeeperHighAvailabilityEvents( logging, config, switchover );\n            compatibilityLifecycle.add( zkEvents );\n            memberContextDelegateInvocationHandler.setDelegate(\n                    new SimpleHighAvailabilityMemberContext( zkEvents.getInstanceId() ) );\n            clusterEventsDelegateInvocationHandler.setDelegate( zkEvents );\n            clusterMemberAvailabilityDelegateInvocationHandler.setDelegate( zkEvents );\n            // Paxos Events added to life, won't be stopped because it isn't started yet\n            paxosLife.add( localClusterEvents );\n        }\n        else\n        {\n            memberContextDelegateInvocationHandler.setDelegate( localMemberContext );\n            clusterEventsDelegateInvocationHandler.setDelegate( localClusterEvents );\n            clusterMemberAvailabilityDelegateInvocationHandler.setDelegate( localClusterMemberAvailability );\n        }\n\n        members = new ClusterMembers( clusterClient, clusterClient, clusterEvents,\n                new InstanceId( config.get( ClusterSettings.server_id ) ) );\n        memberStateMachine = new HighAvailabilityMemberStateMachine( memberContext, accessGuard, members, clusterEvents,\n                clusterClient, logging.getMessagesLog( HighAvailabilityMemberStateMachine.class ) );\n\n        HighAvailabilityConsoleLogger highAvailabilityConsoleLogger = new HighAvailabilityConsoleLogger( logging.getConsoleLog( HighAvailabilityConsoleLogger.class), new InstanceId(config.get(ClusterSettings.server_id) ));\n        accessGuard.addListener( highAvailabilityConsoleLogger );\n        clusterEvents.addClusterMemberListener( highAvailabilityConsoleLogger );\n        clusterClient.addClusterListener( highAvailabilityConsoleLogger );\n\n        if ( compatibilityMode )\n        {\n            /*\n             * In here goes stuff that needs to stop when switching. If added in paxosLife too they will be restarted.\n             * Adding to life starts them when life.start is called - adding them to compatibilityLifeCycle shuts them\n             * down on switchover\n             */\n            compatibilityLifecycle.add( memberStateMachine );\n            compatibilityLifecycle.add( (Lifecycle) clusterEvents );\n            life.add( memberStateMachine );\n            life.add( clusterEvents );\n        }\n        /*\n        * Here goes stuff that needs to start when paxos kicks in:\n        * In Normal (non compatibility mode): That means they start normally\n        * In Compatibility Mode: That means they start when switchover happens. If added to life too they will be\n        * restarted\n        */\n        paxosLife.add( clusterClient );\n        paxosLife.add( memberStateMachine );\n        paxosLife.add( clusterEvents );\n        paxosLife.add( localClusterMemberAvailability );\n\n        DelegateInvocationHandler<TxHook> txHookDelegate = new DelegateInvocationHandler<>();\n        TxHook txHook = (TxHook) Proxy.newProxyInstance( TxHook.class.getClassLoader(), new Class[]{TxHook.class},\n                txHookDelegate );\n        new TxHookModeSwitcher( memberStateMachine, txHookDelegate,\n                master, new TxHookModeSwitcher.RequestContextFactoryResolver()\n        {\n            @Override\n            public RequestContextFactory get()\n            {\n                return requestContextFactory;\n            }\n        }, dependencyResolver );\n        return txHook;\n    }","id":1155,"modified_method":"@Override\n    protected TxHook createTxHook()\n    {\n        clusterEventsDelegateInvocationHandler = new DelegateInvocationHandler();\n        memberContextDelegateInvocationHandler = new DelegateInvocationHandler();\n        clusterMemberAvailabilityDelegateInvocationHandler = new DelegateInvocationHandler();\n\n        clusterEvents = (ClusterMemberEvents) Proxy.newProxyInstance( ClusterMemberEvents.class.getClassLoader(),\n                new Class[]{ClusterMemberEvents.class, Lifecycle.class}, clusterEventsDelegateInvocationHandler );\n        HighAvailabilityMemberContext memberContext = (HighAvailabilityMemberContext) Proxy.newProxyInstance(\n                HighAvailabilityMemberContext.class.getClassLoader(),\n                new Class[]{HighAvailabilityMemberContext.class}, memberContextDelegateInvocationHandler );\n        clusterMemberAvailability = (ClusterMemberAvailability) Proxy.newProxyInstance(\n                ClusterMemberAvailability.class.getClassLoader(),\n        new Class[]{ClusterMemberAvailability.class}, clusterMemberAvailabilityDelegateInvocationHandler );\n\n        /*\n         *  We need to create these anyway since even in compatibility mode we'll use them for switchover. If it turns\n         *  out we are not going to need zookeeper, just assign them to the class fields. The difference is in when\n         *  they start().\n         */\n        ElectionCredentialsProvider electionCredentialsProvider = config.get( HaSettings.slave_only ) ?\n                new NotElectableElectionCredentialsProvider() :\n                new DefaultElectionCredentialsProvider( config.get( ClusterSettings.server_id ),\n                        new OnDiskLastTxIdGetter( new File( getStoreDir() ) ), new HighAvailabilityMemberInfoProvider()\n                {\n                    @Override\n                    public HighAvailabilityMemberState getHighAvailabilityMemberState()\n                    {\n                        return memberStateMachine.getCurrentState();\n                    }\n                } );\n\n\n        ObjectStreamFactory objectStreamFactory = new ObjectStreamFactory();\n\n\n        clusterClient = new ClusterClient( ClusterClient.adapt( config ), logging, electionCredentialsProvider, objectStreamFactory, objectStreamFactory );\n        PaxosClusterMemberEvents localClusterEvents = new PaxosClusterMemberEvents( clusterClient, clusterClient,\n                clusterClient, clusterClient, logging, new Predicate<PaxosClusterMemberEvents.ClusterMembersSnapshot>()\n        {\n            @Override\n            public boolean accept( PaxosClusterMemberEvents.ClusterMembersSnapshot item )\n            {\n                for ( MemberIsAvailable member : item.getCurrentAvailableMembers() )\n                {\n                    if ( member.getRoleUri().getScheme().equals( \"ha\" ) )\n                    {\n                        if ( HighAvailabilityModeSwitcher.getServerId( member.getRoleUri() ) ==\n                                config.get( ClusterSettings.server_id ) )\n                        {\n                            msgLog.error( String.format( \"Instance %s has the same serverId as ours (%d) - will not join this cluster\",\n                                    member.getRoleUri(), config.get( ClusterSettings.server_id ) ) );\n                            return true;\n                        }\n                    }\n                }\n                return true;\n            }\n        }, new HANewSnapshotFunction(), objectStreamFactory, objectStreamFactory );\n\n        // Force a reelection after we enter the cluster\n        // and when that election is finished refresh the snapshot\n        clusterClient.addClusterListener( new ClusterListener.Adapter()\n        {\n            boolean hasRequestedElection = false; // This ensures that the election result is (at least) from our request or thereafter\n\n            @Override\n            public void enteredCluster( ClusterConfiguration clusterConfiguration )\n            {\n                hasRequestedElection = true;\n                clusterClient.performRoleElections();\n            }\n\n            @Override\n            public void elected( String role, InstanceId instanceId, URI electedMember )\n            {\n                if ( hasRequestedElection && role.equals( ClusterConfiguration.COORDINATOR ) )\n                {\n                    clusterClient.refreshSnapshot();\n                    clusterClient.removeClusterListener( this );\n                }\n            }\n        });\n\n        HighAvailabilityMemberContext localMemberContext = new SimpleHighAvailabilityMemberContext( clusterClient.getServerId() );\n        PaxosClusterMemberAvailability localClusterMemberAvailability = new PaxosClusterMemberAvailability(\n            clusterClient.getServerId(), clusterClient, clusterClient, logging, objectStreamFactory, objectStreamFactory );\n\n        memberContextDelegateInvocationHandler.setDelegate( localMemberContext );\n        clusterEventsDelegateInvocationHandler.setDelegate( localClusterEvents );\n        clusterMemberAvailabilityDelegateInvocationHandler.setDelegate( localClusterMemberAvailability );\n\n        members = new ClusterMembers( clusterClient, clusterClient, clusterEvents,\n                new InstanceId( config.get( ClusterSettings.server_id ) ) );\n        memberStateMachine = new HighAvailabilityMemberStateMachine( memberContext, accessGuard, members, clusterEvents,\n                clusterClient, logging.getMessagesLog( HighAvailabilityMemberStateMachine.class ) );\n\n        HighAvailabilityConsoleLogger highAvailabilityConsoleLogger = new HighAvailabilityConsoleLogger( logging.getConsoleLog( HighAvailabilityConsoleLogger.class), new InstanceId(config.get(ClusterSettings.server_id) ));\n        accessGuard.addListener( highAvailabilityConsoleLogger );\n        clusterEvents.addClusterMemberListener( highAvailabilityConsoleLogger );\n        clusterClient.addClusterListener( highAvailabilityConsoleLogger );\n\n        if ( compatibilityMode )\n        {\n            /*\n             * In here goes stuff that needs to stop when switching. If added in paxosLife too they will be restarted.\n             * Adding to life starts them when life.start is called - adding them to compatibilityLifeCycle shuts them\n             * down on switchover\n             */\n            compatibilityLifecycle.add( memberStateMachine );\n            compatibilityLifecycle.add( (Lifecycle) clusterEvents );\n            life.add( memberStateMachine );\n            life.add( clusterEvents );\n        }\n        /*\n        * Here goes stuff that needs to start when paxos kicks in:\n        * In Normal (non compatibility mode): That means they start normally\n        * In Compatibility Mode: That means they start when switchover happens. If added to life too they will be\n        * restarted\n        */\n        paxosLife.add( clusterClient );\n        paxosLife.add( memberStateMachine );\n        paxosLife.add( clusterEvents );\n        paxosLife.add( localClusterMemberAvailability );\n\n        DelegateInvocationHandler<TxHook> txHookDelegate = new DelegateInvocationHandler<>();\n        TxHook txHook = (TxHook) Proxy.newProxyInstance( TxHook.class.getClassLoader(), new Class[]{TxHook.class},\n                txHookDelegate );\n        new TxHookModeSwitcher( memberStateMachine, txHookDelegate,\n                master, new TxHookModeSwitcher.RequestContextFactoryResolver()\n        {\n            @Override\n            public RequestContextFactory get()\n            {\n                return requestContextFactory;\n            }\n        }, dependencyResolver );\n        return txHook;\n    }","commit_id":"b0037eb033465a1a141e6c6b54c7141d88efb694","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void doInsertList(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            // just pass in the body as Object and allow MyBatis to iterate using its own foreach statement\n            LOG.trace(\"Inserting: {} using statement: {}\", in, statement);\n            result = session.insert(statement, in);\n            doProcessResult(exchange, result);\n        } else {\n            LOG.trace(\"Inserting using statement: {}\", statement);\n            result = session.insert(statement);\n            doProcessResult(exchange, result);\n        }\n    }","id":1156,"modified_method":"private void doInsertList(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            // just pass in the body as Object and allow MyBatis to iterate using its own foreach statement\n            LOG.trace(\"Inserting: {} using statement: {}\", in, statement);\n            result = session.insert(statement, in);\n            doProcessResult(exchange, result, session);\n        } else {\n            LOG.trace(\"Inserting using statement: {}\", statement);\n            result = session.insert(statement);\n            doProcessResult(exchange, result, session);\n        }\n    }","commit_id":"53e95788f7ebcd8efbffc633e177105fa0cfdadc","url":"https://github.com/apache/camel"},{"original_method":"private void doSelectList(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            LOG.trace(\"SelectList: {} using statement: {}\", in, statement);\n            result = session.selectList(statement, in);\n        } else {\n            LOG.trace(\"SelectList using statement: {}\", statement);\n            result = session.selectList(statement);\n        }\n\n        doProcessResult(exchange, result);\n    }","id":1157,"modified_method":"private void doSelectList(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            LOG.trace(\"SelectList: {} using statement: {}\", in, statement);\n            result = session.selectList(statement, in);\n        } else {\n            LOG.trace(\"SelectList using statement: {}\", statement);\n            result = session.selectList(statement);\n        }\n\n        doProcessResult(exchange, result, session);\n    }","commit_id":"53e95788f7ebcd8efbffc633e177105fa0cfdadc","url":"https://github.com/apache/camel"},{"original_method":"private void doInsert(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            // lets handle arrays or collections of objects\n            Iterator<?> iter = ObjectHelper.createIterator(in);\n            while (iter.hasNext()) {\n                Object value = iter.next();\n                LOG.trace(\"Inserting: {} using statement: {}\", value, statement);\n                result = session.insert(statement, value);\n                doProcessResult(exchange, result);\n            }\n        } else {\n            LOG.trace(\"Inserting using statement: {}\", statement);\n            result = session.insert(statement);\n            doProcessResult(exchange, result);\n        }\n    }","id":1158,"modified_method":"private void doInsert(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            // lets handle arrays or collections of objects\n            Iterator<?> iter = ObjectHelper.createIterator(in);\n            while (iter.hasNext()) {\n                Object value = iter.next();\n                LOG.trace(\"Inserting: {} using statement: {}\", value, statement);\n                result = session.insert(statement, value);\n                doProcessResult(exchange, result, session);\n            }\n        } else {\n            LOG.trace(\"Inserting using statement: {}\", statement);\n            result = session.insert(statement);\n            doProcessResult(exchange, result, session);\n        }\n    }","commit_id":"53e95788f7ebcd8efbffc633e177105fa0cfdadc","url":"https://github.com/apache/camel"},{"original_method":"private void doUpdateList(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            // just pass in the body as Object and allow MyBatis to iterate using its own foreach statement\n            LOG.trace(\"Updating: {} using statement: {}\", in, statement);\n            result = session.update(statement, in);\n            doProcessResult(exchange, result);\n        } else {\n            LOG.trace(\"Updating using statement: {}\", statement);\n            result = session.update(statement);\n            doProcessResult(exchange, result);\n        }\n    }","id":1159,"modified_method":"private void doUpdateList(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            // just pass in the body as Object and allow MyBatis to iterate using its own foreach statement\n            LOG.trace(\"Updating: {} using statement: {}\", in, statement);\n            result = session.update(statement, in);\n            doProcessResult(exchange, result, session);\n        } else {\n            LOG.trace(\"Updating using statement: {}\", statement);\n            result = session.update(statement);\n            doProcessResult(exchange, result, session);\n        }\n    }","commit_id":"53e95788f7ebcd8efbffc633e177105fa0cfdadc","url":"https://github.com/apache/camel"},{"original_method":"private void doDelete(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            // lets handle arrays or collections of objects\n            Iterator<?> iter = ObjectHelper.createIterator(in);\n            while (iter.hasNext()) {\n                Object value = iter.next();\n                LOG.trace(\"Deleting: {} using statement: {}\", value, statement);\n                result = session.delete(statement, value);\n                doProcessResult(exchange, result);\n            }\n        } else {\n            LOG.trace(\"Deleting using statement: {}\", statement);\n            result = session.delete(statement);\n            doProcessResult(exchange, result);\n        }\n    }","id":1160,"modified_method":"private void doDelete(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            // lets handle arrays or collections of objects\n            Iterator<?> iter = ObjectHelper.createIterator(in);\n            while (iter.hasNext()) {\n                Object value = iter.next();\n                LOG.trace(\"Deleting: {} using statement: {}\", value, statement);\n                result = session.delete(statement, value);\n                doProcessResult(exchange, result, session);\n            }\n        } else {\n            LOG.trace(\"Deleting using statement: {}\", statement);\n            result = session.delete(statement);\n            doProcessResult(exchange, result, session);\n        }\n    }","commit_id":"53e95788f7ebcd8efbffc633e177105fa0cfdadc","url":"https://github.com/apache/camel"},{"original_method":"private void doProcessResult(Exchange exchange, Object result) {\n        if (endpoint.getStatementType() == StatementType.SelectList || endpoint.getStatementType() == StatementType.SelectOne) {\n            Message answer = exchange.getIn();\n            if (ExchangeHelper.isOutCapable(exchange)) {\n                answer = exchange.getOut();\n                // preserve headers\n                answer.getHeaders().putAll(exchange.getIn().getHeaders());\n            }\n            // set the result as body for insert\n            answer.setBody(result);\n\n            answer.setHeader(MyBatisConstants.MYBATIS_RESULT, result);\n            answer.setHeader(MyBatisConstants.MYBATIS_STATEMENT_NAME, statement);\n        } else {\n            Message msg = exchange.getIn();\n            msg.setHeader(MyBatisConstants.MYBATIS_RESULT, result);\n            msg.setHeader(MyBatisConstants.MYBATIS_STATEMENT_NAME, statement);\n        }\n    }","id":1161,"modified_method":"private void doProcessResult(Exchange exchange, Object result, SqlSession session) {\n        if (endpoint.getStatementType() == StatementType.SelectList || endpoint.getStatementType() == StatementType.SelectOne) {\n            Message answer = exchange.getIn();\n            if (ExchangeHelper.isOutCapable(exchange)) {\n                answer = exchange.getOut();\n                // preserve headers\n                answer.getHeaders().putAll(exchange.getIn().getHeaders());\n            }\n\n            // we should not set the body if its a stored procedure as the result is already in its OUT parameter\n            MappedStatement ms = session.getConfiguration().getMappedStatement(statement);\n            if (ms != null && ms.getStatementType() == org.apache.ibatis.mapping.StatementType.CALLABLE) {\n                if (result == null) {\n                    LOG.trace(\"Setting result as existing body as MyBatis statement type is Callable, and there was no result.\");\n                    answer.setBody(exchange.getIn().getBody());\n                } else {\n                    // set the result as body for insert\n                    LOG.trace(\"Setting result as body: {}\", result);\n                    answer.setBody(result);\n                }\n            } else {\n                // set the result as body for insert\n                LOG.trace(\"Setting result as body: {}\", result);\n                answer.setBody(result);\n            }\n\n            answer.setHeader(MyBatisConstants.MYBATIS_RESULT, result);\n            answer.setHeader(MyBatisConstants.MYBATIS_STATEMENT_NAME, statement);\n        } else {\n            Message msg = exchange.getIn();\n            msg.setHeader(MyBatisConstants.MYBATIS_RESULT, result);\n            msg.setHeader(MyBatisConstants.MYBATIS_STATEMENT_NAME, statement);\n        }\n    }","commit_id":"53e95788f7ebcd8efbffc633e177105fa0cfdadc","url":"https://github.com/apache/camel"},{"original_method":"private void doUpdate(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            // lets handle arrays or collections of objects\n            Iterator<?> iter = ObjectHelper.createIterator(in);\n            while (iter.hasNext()) {\n                Object value = iter.next();\n                LOG.trace(\"Updating: {} using statement: {}\", value, statement);\n                result = session.update(statement, value);\n                doProcessResult(exchange, result);\n            }\n        } else {\n            LOG.trace(\"Updating using statement: {}\", statement);\n            result = session.update(statement);\n            doProcessResult(exchange, result);\n        }\n    }","id":1162,"modified_method":"private void doUpdate(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            // lets handle arrays or collections of objects\n            Iterator<?> iter = ObjectHelper.createIterator(in);\n            while (iter.hasNext()) {\n                Object value = iter.next();\n                LOG.trace(\"Updating: {} using statement: {}\", value, statement);\n                result = session.update(statement, value);\n                doProcessResult(exchange, result, session);\n            }\n        } else {\n            LOG.trace(\"Updating using statement: {}\", statement);\n            result = session.update(statement);\n            doProcessResult(exchange, result, session);\n        }\n    }","commit_id":"53e95788f7ebcd8efbffc633e177105fa0cfdadc","url":"https://github.com/apache/camel"},{"original_method":"private void doSelectOne(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            LOG.trace(\"SelectOne: {} using statement: {}\", in, statement);\n            result = session.selectOne(statement, in);\n        } else {\n            LOG.trace(\"SelectOne using statement: {}\", statement);\n            result = session.selectOne(statement);\n        }\n\n        doProcessResult(exchange, result);\n    }","id":1163,"modified_method":"private void doSelectOne(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            LOG.trace(\"SelectOne: {} using statement: {}\", in, statement);\n            result = session.selectOne(statement, in);\n        } else {\n            LOG.trace(\"SelectOne using statement: {}\", statement);\n            result = session.selectOne(statement);\n        }\n\n        doProcessResult(exchange, result, session);\n    }","commit_id":"53e95788f7ebcd8efbffc633e177105fa0cfdadc","url":"https://github.com/apache/camel"},{"original_method":"private void doDeleteList(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            // just pass in the body as Object and allow MyBatis to iterate using its own foreach statement\n            LOG.trace(\"Deleting: {} using statement: {}\", in, statement);\n            result = session.delete(statement, in);\n            doProcessResult(exchange, result);\n        } else {\n            LOG.trace(\"Deleting using statement: {}\", statement);\n            result = session.delete(statement);\n            doProcessResult(exchange, result);\n        }\n    }","id":1164,"modified_method":"private void doDeleteList(Exchange exchange, SqlSession session) throws Exception {\n        Object result;\n        Object in = exchange.getIn().getBody();\n        if (in != null) {\n            // just pass in the body as Object and allow MyBatis to iterate using its own foreach statement\n            LOG.trace(\"Deleting: {} using statement: {}\", in, statement);\n            result = session.delete(statement, in);\n            doProcessResult(exchange, result, session);\n        } else {\n            LOG.trace(\"Deleting using statement: {}\", statement);\n            result = session.delete(statement);\n            doProcessResult(exchange, result, session);\n        }\n    }","commit_id":"53e95788f7ebcd8efbffc633e177105fa0cfdadc","url":"https://github.com/apache/camel"},{"original_method":"public String getQuery(String location) throws Exception {\n        String answer = \"http://api.openweathermap.org/data/2.5/\";\n\n        if (isEmpty(location) || \"current\".equals(location)) {\n            location = getCurrentGeoLocation();\n        } else {\n            // assuming the location is a town or country\n            location = \"q=\" + location;\n        }\n\n        if (isEmpty(getPeriod())) {\n            answer += \"weather?\" + location;\n        } else {\n            answer += \"forecast/daily?\" + location + \"&cnt=\" + getPeriod();\n        }\n\n        // append the desired measurement unit if not the default (which is metric)\n        if (getUnits() != METRIC) {\n            answer += \"&units=\" + getUnits().name().toLowerCase();\n        }\n\n        // append the desired output mode if not the default (which is json)\n        if (getMode() != JSON) {\n            answer += \"&mode=\" + getMode().name().toLowerCase();\n        }\n\n        return answer;\n    }","id":1165,"modified_method":"public String getQuery(String location) throws Exception {\n        String answer = \"http://api.openweathermap.org/data/2.5/\";\n\n        if (lat != null && lon != null) {\n            location = \"lat=\" + lat + \"&lon=\" + lon;\n        } else if (isEmpty(location) || \"current\".equals(location)) {\n            location = getCurrentGeoLocation();\n        } else {\n            // assuming the location is a town or country\n            location = \"q=\" + location;\n        }\n\n        if (isEmpty(getPeriod())) {\n            answer += \"weather?\" + location;\n        } else {\n            answer += \"forecast/daily?\" + location + \"&cnt=\" + getPeriod();\n        }\n\n        // append the desired measurement unit if not the default (which is metric)\n        if (getUnits() != METRIC) {\n            answer += \"&units=\" + getUnits().name().toLowerCase();\n        }\n\n        // append the desired output mode if not the default (which is json)\n        if (getMode() != JSON) {\n            answer += \"&mode=\" + getMode().name().toLowerCase();\n        }\n\n        return answer;\n    }","commit_id":"de9de108bbf9f61ac8230f6b8938086e350d036a","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected int poll() throws Exception {\n        LOG.debug(\"Going to execute the Weather query {}\", query);\n        String weather = getEndpoint().getCamelContext().getTypeConverter().mandatoryConvertTo(String.class, new URL(query));\n        LOG.debug(\"Got back the Weather information {}\", weather);\n        if (ObjectHelper.isEmpty(weather)) {\n            throw new IllegalStateException(\"Got the unexpected value '\" + weather + \"' as the result of the query '\" + query + \"'\");\n        }\n\n        Exchange exchange = getEndpoint().createExchange();\n        exchange.getIn().setBody(weather);\n        exchange.getIn().setHeader(WeatherConstants.WEATHER_QUERY, query);\n        getProcessor().process(exchange);\n\n        return 1;\n    }","id":1166,"modified_method":"@Override\n    protected int poll() throws Exception {\n        LOG.debug(\"Going to execute the Weather query {}\", query);\n        String weather = getEndpoint().getCamelContext().getTypeConverter().mandatoryConvertTo(String.class, new URL(query));\n        LOG.debug(\"Got back the Weather information {}\", weather);\n        if (ObjectHelper.isEmpty(weather)) {\n            throw new IllegalStateException(\"Got the unexpected value '\" + weather + \"' as the result of the query '\" + query + \"'\");\n        }\n\n        Exchange exchange = getEndpoint().createExchange();\n        String header = getEndpoint().getConfiguration().getHeaderName();\n        if (header != null) {\n            exchange.getIn().setHeader(header, weather);\n        } else {\n            exchange.getIn().setBody(weather);\n        }\n        exchange.getIn().setHeader(WeatherConstants.WEATHER_QUERY, query);\n\n        getProcessor().process(exchange);\n\n        return 1;\n    }","commit_id":"de9de108bbf9f61ac8230f6b8938086e350d036a","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    public void process(Exchange exchange) throws Exception {\n        String q = query;\n        String location = exchange.getIn().getHeader(WeatherConstants.WEATHER_LOCATION, String.class);\n        if (location != null) {\n            q = getEndpoint().getConfiguration().getQuery(location);\n        }\n\n        log.debug(\"Going to execute the Weather query {}\", q);\n        String weather = getEndpoint().getCamelContext().getTypeConverter().mandatoryConvertTo(String.class, new URL(q));\n        log.debug(\"Got back the Weather information {}\", weather);\n\n        if (ObjectHelper.isEmpty(weather)) {\n            throw new IllegalStateException(\"Got the unexpected value '\" + weather + \"' as the result of the query '\" + q + \"'\");\n        }\n\n        exchange.getIn().setBody(weather);\n        exchange.getIn().setHeader(WeatherConstants.WEATHER_QUERY, q);\n    }","id":1167,"modified_method":"@Override\n    public void process(Exchange exchange) throws Exception {\n        String q = query;\n        String location = exchange.getIn().getHeader(WeatherConstants.WEATHER_LOCATION, String.class);\n        if (location != null) {\n            q = getEndpoint().getConfiguration().getQuery(location);\n        }\n\n        log.debug(\"Going to execute the Weather query {}\", q);\n        String weather = getEndpoint().getCamelContext().getTypeConverter().mandatoryConvertTo(String.class, new URL(q));\n        log.debug(\"Got back the Weather information {}\", weather);\n\n        if (ObjectHelper.isEmpty(weather)) {\n            throw new IllegalStateException(\"Got the unexpected value '\" + weather + \"' as the result of the query '\" + q + \"'\");\n        }\n\n        String header = getEndpoint().getConfiguration().getHeaderName();\n        if (header != null) {\n            exchange.getIn().setHeader(header, weather);\n        } else {\n            exchange.getIn().setBody(weather);\n        }\n        exchange.getIn().setHeader(WeatherConstants.WEATHER_QUERY, q);\n    }","commit_id":"de9de108bbf9f61ac8230f6b8938086e350d036a","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Generate the PDF.\n     *\n     * @throws MojoExecutionException if any\n     * @throws IOException if any\n     * @since 1.1\n     */\n    private void generatePdf()\n        throws MojoExecutionException, IOException\n    {\n        Locale.setDefault( getDefaultLocale() );\n\n        for ( final Iterator iterator = getAvailableLocales().iterator(); iterator.hasNext(); )\n        {\n            final Locale locale = (Locale) iterator.next();\n\n            final File workingDir = getLocaleDirectory( workingDirectory, locale );\n\n            File siteDirectoryFile = getLocaleDirectory( getSiteDirectoryTmp(), locale );\n\n            copyResources( locale );\n\n            generateMavenReports( locale );\n\n            DocumentRendererContext context = new DocumentRendererContext();\n            context.put( \"project\", project );\n            context.put( \"settings\", settings );\n            context.put( \"PathTool\", new PathTool() );\n            context.put( \"FileUtils\", new FileUtils() );\n            context.put( \"StringUtils\", new StringUtils() );\n            context.put( \"i18n\", i18n );\n            context.put( \"generateTOC\", generateTOC );\n            context.put( \"validate\", Boolean.valueOf( validate ) );\n\n            final DocumentModel model = aggregate ? getDocumentModel( locale ) : null;\n\n            try\n            {\n                // TODO use interface see DOXIASITETOOLS-30\n                ( (AbstractDocumentRenderer) docRenderer ).render( siteDirectoryFile, workingDir, model, context );\n            }\n            catch ( DocumentRendererException e )\n            {\n                throw new MojoExecutionException( \"Error during document generation: \" + e.getMessage(), e );\n            }\n        }\n    }","id":1168,"modified_method":"/**\n     * Generate the PDF.\n     *\n     * @throws MojoExecutionException if any\n     * @throws IOException if any\n     * @since 1.1\n     */\n    private void generatePdf()\n        throws MojoExecutionException, IOException\n    {\n        Locale.setDefault( getDefaultLocale() );\n\n        for ( final Locale locale : getAvailableLocales() )\n        {\n            final File workingDir = getLocaleDirectory( workingDirectory, locale );\n\n            File siteDirectoryFile = getLocaleDirectory( getSiteDirectoryTmp(), locale );\n\n            copyResources( locale );\n\n            generateMavenReports( locale );\n\n            DocumentRendererContext context = new DocumentRendererContext();\n            context.put( \"project\", project );\n            context.put( \"settings\", settings );\n            context.put( \"PathTool\", new PathTool() );\n            context.put( \"FileUtils\", new FileUtils() );\n            context.put( \"StringUtils\", new StringUtils() );\n            context.put( \"i18n\", i18n );\n            context.put( \"generateTOC\", generateTOC );\n            context.put( \"validate\", Boolean.valueOf( validate ) );\n\n            final DocumentModel model = aggregate ? getDocumentModel( locale ) : null;\n\n            try\n            {\n                // TODO use interface see DOXIASITETOOLS-30\n                ( (AbstractDocumentRenderer) docRenderer ).render( siteDirectoryFile, workingDir, model, context );\n            }\n            catch ( DocumentRendererException e )\n            {\n                throw new MojoExecutionException( \"Error during document generation: \" + e.getMessage(), e );\n            }\n        }\n    }","commit_id":"81f4c0fdccc50e871943f7aae7e9e83a585745dc","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Copy the generated PDF to outputDirectory.\n     *\n     * @throws MojoExecutionException if any\n     * @throws IOException if any\n     * @since 1.1\n     */\n    private void copyGeneratedPdf()\n        throws MojoExecutionException, IOException\n    {\n        if ( outputDirectory.getCanonicalPath().equals( workingDirectory.getCanonicalPath() ) )\n        {\n            return;\n        }\n\n        String outputName = getDocumentModel( getDefaultLocale() ).getOutputName().trim();\n        if ( !outputName.endsWith( \".pdf\" ) )\n        {\n            outputName = outputName.concat( \".pdf\" );\n        }\n\n        for ( final Iterator iterator = getAvailableLocales().iterator(); iterator.hasNext(); )\n        {\n            final Locale locale = (Locale) iterator.next();\n\n            File generatedPdfSource = new File( getLocaleDirectory( workingDirectory, locale), outputName );\n\n            if ( !generatedPdfSource.exists() )\n            {\n                getLog().warn( \"Unable to find the generated pdf: \" + generatedPdfSource.getAbsolutePath() );\n                continue;\n            }\n\n            File generatedPdfDest = new File( getLocaleDirectory( outputDirectory, locale), outputName );\n\n            FileUtils.copyFile( generatedPdfSource, generatedPdfDest );\n            generatedPdfSource.delete();\n        }\n    }","id":1169,"modified_method":"/**\n     * Copy the generated PDF to outputDirectory.\n     *\n     * @throws MojoExecutionException if any\n     * @throws IOException if any\n     * @since 1.1\n     */\n    private void copyGeneratedPdf()\n        throws MojoExecutionException, IOException\n    {\n        if ( outputDirectory.getCanonicalPath().equals( workingDirectory.getCanonicalPath() ) )\n        {\n            return;\n        }\n\n        String outputName = getDocumentModel( getDefaultLocale() ).getOutputName().trim();\n        if ( !outputName.endsWith( \".pdf\" ) )\n        {\n            outputName = outputName.concat( \".pdf\" );\n        }\n\n        for ( final Locale locale : getAvailableLocales() )\n        {\n            File generatedPdfSource = new File( getLocaleDirectory( workingDirectory, locale), outputName );\n\n            if ( !generatedPdfSource.exists() )\n            {\n                getLog().warn( \"Unable to find the generated pdf: \" + generatedPdfSource.getAbsolutePath() );\n                continue;\n            }\n\n            File generatedPdfDest = new File( getLocaleDirectory( outputDirectory, locale), outputName );\n\n            FileUtils.copyFile( generatedPdfSource, generatedPdfDest );\n            generatedPdfSource.delete();\n        }\n    }","commit_id":"81f4c0fdccc50e871943f7aae7e9e83a585745dc","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Parse the decoration model to find the skin artifact and copy its resources to the output dir.\n     *\n     * @param locale not null\n     * @throws MojoExecutionException if any\n     * @see #getDefaultDecorationModel()\n     */\n    private void copyResources( Locale locale )\n        throws MojoExecutionException\n    {\n        final DecorationModel decorationModel = getDefaultDecorationModel();\n        if ( decorationModel == null )\n        {\n            return;\n        }\n\n        File skinFile;\n        try\n        {\n            skinFile =\n                siteTool.getSkinArtifactFromRepository( localRepository, project.getRemoteArtifactRepositories(),\n                                                        decorationModel ).getFile();\n        }\n        catch ( SiteToolException e )\n        {\n            throw new MojoExecutionException( \"SiteToolException: \" + e.getMessage(), e );\n        }\n\n        if ( skinFile == null )\n        {\n            return;\n        }\n\n        if ( getLog().isDebugEnabled() )\n        {\n            getLog().debug( \"Copy resources from skin artifact: '\" + skinFile + \"'...\" );\n        }\n\n        try\n        {\n            final SiteRenderingContext context =\n                siteRenderer.createContextForSkin( skinFile, new HashMap( 2 ), decorationModel, project.getName(),\n                                                   locale );\n            context.addSiteDirectory( new File( siteDirectory, locale.getLanguage() ) );\n\n            for ( final Iterator i = context.getSiteDirectories().iterator(); i.hasNext(); )\n            {\n                final File siteDirectoryFile = (File) i.next();\n\n                siteRenderer.copyResources( context, new File( siteDirectoryFile, \"resources\" ), workingDirectory );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"IOException: \" + e.getMessage(), e );\n        }\n    }","id":1170,"modified_method":"/**\n     * Parse the decoration model to find the skin artifact and copy its resources to the output dir.\n     *\n     * @param locale not null\n     * @throws MojoExecutionException if any\n     * @see #getDefaultDecorationModel()\n     */\n    private void copyResources( Locale locale )\n        throws MojoExecutionException\n    {\n        final DecorationModel decorationModel = getDefaultDecorationModel();\n        if ( decorationModel == null )\n        {\n            return;\n        }\n\n        File skinFile;\n        try\n        {\n            skinFile =\n                siteTool.getSkinArtifactFromRepository( localRepository, project.getRemoteArtifactRepositories(),\n                                                        decorationModel ).getFile();\n        }\n        catch ( SiteToolException e )\n        {\n            throw new MojoExecutionException( \"SiteToolException: \" + e.getMessage(), e );\n        }\n\n        if ( skinFile == null )\n        {\n            return;\n        }\n\n        if ( getLog().isDebugEnabled() )\n        {\n            getLog().debug( \"Copy resources from skin artifact: '\" + skinFile + \"'...\" );\n        }\n\n        try\n        {\n            final SiteRenderingContext context =\n                siteRenderer.createContextForSkin( skinFile, new HashMap( 2 ), decorationModel, project.getName(),\n                                                   locale );\n            context.addSiteDirectory( new File( siteDirectory, locale.getLanguage() ) );\n\n            for ( final File siteDirectoryFile : context.getSiteDirectories() )\n            {\n                siteRenderer.copyResources( context, new File( siteDirectoryFile, \"resources\" ), workingDirectory );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"IOException: \" + e.getMessage(), e );\n        }\n    }","commit_id":"81f4c0fdccc50e871943f7aae7e9e83a585745dc","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Copy the from site dir to the to dir.\n     *\n     * @param from not null\n     * @param to not null\n     * @throws IOException if any\n     * @since 1.1\n     */\n    private void copySiteDir( final File from, final File to )\n        throws IOException\n    {\n        if ( from == null || !from.exists() )\n        {\n            return;\n        }\n\n        // copy generated-site\n        for ( final Iterator iterator = getAvailableLocales().iterator(); iterator.hasNext(); )\n        {\n            final Locale locale = (Locale) iterator.next();\n\n            String excludes = getDefaultExcludesWithLocales( getAvailableLocales(), getDefaultLocale() );\n            List siteFiles = FileUtils.getFileNames( siteDirectory, \"**/*\", excludes, false );\n            File siteDirectoryLocale = new File( siteDirectory, locale.getLanguage() );\n            if ( !locale.getLanguage().equals( getDefaultLocale().getLanguage() ) && siteDirectoryLocale.exists() )\n            {\n                siteFiles = FileUtils.getFileNames( siteDirectoryLocale, \"**/*\", excludes, false );\n            }\n\n            List generatedSiteFiles = FileUtils.getFileNames( from, \"**/*\", excludes, false );\n            File fromLocale = new File( from, locale.getLanguage() );\n            if ( !locale.getLanguage().equals( getDefaultLocale().getLanguage() ) && fromLocale.exists() )\n            {\n                generatedSiteFiles = FileUtils.getFileNames( fromLocale, \"**/*\", excludes, false );\n            }\n\n            for ( final Iterator it = generatedSiteFiles.iterator(); it.hasNext(); )\n            {\n                final String generatedSiteFile = it.next().toString();\n\n                if ( siteFiles.contains( generatedSiteFile ) )\n                {\n                    getLog().warn( \"Generated-site already contains a file in site: \" + generatedSiteFile\n                                       + \". Ignoring copying it!\" );\n                    continue;\n                }\n\n                if ( !locale.getLanguage().equals( getDefaultLocale().getLanguage() ) )\n                {\n                    if ( fromLocale.exists() )\n                    {\n                        File in = new File( fromLocale, generatedSiteFile );\n                        File out = new File( new File( to, locale.getLanguage() ), generatedSiteFile );\n                        out.getParentFile().mkdirs();\n                        FileUtils.copyFile( in, out );\n                    }\n                }\n                else\n                {\n                    File in = new File( from, generatedSiteFile );\n                    File out = new File( to, generatedSiteFile );\n                    out.getParentFile().mkdirs();\n                    FileUtils.copyFile( in, out );\n                }\n            }\n        }\n    }","id":1171,"modified_method":"/**\n     * Copy the from site dir to the to dir.\n     *\n     * @param from not null\n     * @param to not null\n     * @throws IOException if any\n     * @since 1.1\n     */\n    private void copySiteDir( final File from, final File to )\n        throws IOException\n    {\n        if ( from == null || !from.exists() )\n        {\n            return;\n        }\n\n        // copy generated-site\n        for ( final Locale locale : getAvailableLocales() )\n        {\n            String excludes = getDefaultExcludesWithLocales( getAvailableLocales(), getDefaultLocale() );\n            List siteFiles = FileUtils.getFileNames( siteDirectory, \"**/*\", excludes, false );\n            File siteDirectoryLocale = new File( siteDirectory, locale.getLanguage() );\n            if ( !locale.getLanguage().equals( getDefaultLocale().getLanguage() ) && siteDirectoryLocale.exists() )\n            {\n                siteFiles = FileUtils.getFileNames( siteDirectoryLocale, \"**/*\", excludes, false );\n            }\n\n            List generatedSiteFiles = FileUtils.getFileNames( from, \"**/*\", excludes, false );\n            File fromLocale = new File( from, locale.getLanguage() );\n            if ( !locale.getLanguage().equals( getDefaultLocale().getLanguage() ) && fromLocale.exists() )\n            {\n                generatedSiteFiles = FileUtils.getFileNames( fromLocale, \"**/*\", excludes, false );\n            }\n\n            for ( final Iterator it = generatedSiteFiles.iterator(); it.hasNext(); )\n            {\n                final String generatedSiteFile = it.next().toString();\n\n                if ( siteFiles.contains( generatedSiteFile ) )\n                {\n                    getLog().warn( \"Generated-site already contains a file in site: \" + generatedSiteFile\n                                       + \". Ignoring copying it!\" );\n                    continue;\n                }\n\n                if ( !locale.getLanguage().equals( getDefaultLocale().getLanguage() ) )\n                {\n                    if ( fromLocale.exists() )\n                    {\n                        File in = new File( fromLocale, generatedSiteFile );\n                        File out = new File( new File( to, locale.getLanguage() ), generatedSiteFile );\n                        out.getParentFile().mkdirs();\n                        FileUtils.copyFile( in, out );\n                    }\n                }\n                else\n                {\n                    File in = new File( from, generatedSiteFile );\n                    File out = new File( to, generatedSiteFile );\n                    out.getParentFile().mkdirs();\n                    FileUtils.copyFile( in, out );\n                }\n            }\n        }\n    }","commit_id":"81f4c0fdccc50e871943f7aae7e9e83a585745dc","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void flattenToBuffer(ByteBuffer buf) throws IOException\n    {\n        assert(!((params == null) && (unserializedParams == null)));\n        assert((params != null) || (unserializedParams != null));\n        buf.put(type.getValue()); //version and type, version is currently 0\n        if (type == ProcedureInvocationType.REPLICATED) {\n            buf.putLong(originalTxnId);\n        }\n        buf.putInt(procName.length());\n        buf.put(procName.getBytes());\n        buf.putLong(clientHandle);\n        if (unserializedParams != null)\n            buf.put(unserializedParams.array(),\n                    unserializedParams.position() + unserializedParams.arrayOffset(),\n                    unserializedParams.remaining());\n        else if (params != null) {\n            getParams().flattenToBuffer(buf);\n        }\n    }","id":1172,"modified_method":"public void flattenToBuffer(ByteBuffer buf) throws IOException\n    {\n        assert(!((params == null) && (unserializedParams == null)));\n        assert((params != null) || (unserializedParams != null));\n        buf.put(type.getValue()); //version and type, version is currently 0\n        if (type == ProcedureInvocationType.REPLICATED) {\n            buf.putLong(originalTxnId);\n        }\n        buf.putInt(procName.length());\n        buf.put(procName.getBytes());\n        buf.putLong(clientHandle);\n        if (unserializedParams != null)\n        {\n            if (!unserializedParams.isReadOnly())\n            {\n                buf.put(unserializedParams.array(),\n                        unserializedParams.position() + unserializedParams.arrayOffset(),\n                        unserializedParams.remaining());\n            }\n            else\n            {\n                buf.put(unserializedParams);\n            }\n        }\n        else if (params != null) {\n            getParams().flattenToBuffer(buf);\n        }\n    }","commit_id":"ceea7635e195e9789d5d735a646c315ed3d38ca8","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testHeartbeat() throws IOException {\n        DBBPool pool = new DBBPool();\n        HeartbeatMessage mn = new HeartbeatMessage(100222, 555555555555L, 97L);\n\n        HeartbeatMessage mn2 = (HeartbeatMessage) checkVoltMessage(mn, pool);\n\n        assertEquals(mn.getInitiatorHSId(), mn2.getInitiatorHSId());\n        assertEquals(mn.getCoordinatorHSId(), mn2.getCoordinatorHSId());\n        assertEquals(mn.getTxnId(), mn2.getTxnId());\n        assertEquals(mn.isReadOnly(), mn2.isReadOnly());\n        assertEquals(mn.getLastSafeTxnId(), mn2.getLastSafeTxnId());\n        mn.discard();\n        mn2.discard();\n        pool.clear();\n    }","id":1173,"modified_method":"public void testHeartbeat() throws IOException {\n        HeartbeatMessage mn = new HeartbeatMessage(100222, 555555555555L, 97L);\n\n        HeartbeatMessage mn2 = (HeartbeatMessage) checkVoltMessage(mn);\n\n        assertEquals(mn.getInitiatorHSId(), mn2.getInitiatorHSId());\n        assertEquals(mn.getCoordinatorHSId(), mn2.getCoordinatorHSId());\n        assertEquals(mn.getTxnId(), mn2.getTxnId());\n        assertEquals(mn.isReadOnly(), mn2.isReadOnly());\n        assertEquals(mn.getLastSafeTxnId(), mn2.getLastSafeTxnId());\n    }","commit_id":"ceea7635e195e9789d5d735a646c315ed3d38ca8","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testHeartbeatResponse() throws IOException {\n        DBBPool pool = new DBBPool();\n        HeartbeatResponseMessage mn = new HeartbeatResponseMessage(55, 100222, true);\n\n        HeartbeatResponseMessage mn2 = (HeartbeatResponseMessage) checkVoltMessage(mn, pool);\n\n        assertEquals(mn.getExecSiteId(), mn2.getExecSiteId());\n        assertEquals(mn.getLastReceivedTxnId(), mn2.getLastReceivedTxnId());\n        assertEquals(mn.isBlocked(), mn2.isBlocked());\n        mn.discard();\n        mn2.discard();\n        pool.clear();\n    }","id":1174,"modified_method":"public void testHeartbeatResponse() throws IOException {\n        HeartbeatResponseMessage mn = new HeartbeatResponseMessage(55, 100222, true);\n\n        HeartbeatResponseMessage mn2 = (HeartbeatResponseMessage) checkVoltMessage(mn);\n\n        assertEquals(mn.getExecHSId(), mn2.getExecHSId());\n        assertEquals(mn.getLastReceivedTxnId(), mn2.getLastReceivedTxnId());\n        assertEquals(mn.isBlocked(), mn2.isBlocked());\n    }","commit_id":"ceea7635e195e9789d5d735a646c315ed3d38ca8","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testInitiateTask() throws IOException {\n        DBBPool pool = new DBBPool();\n        StoredProcedureInvocation spi = new StoredProcedureInvocation();\n        spi.setClientHandle(25);\n        spi.setProcName(\"johnisgreat\");\n        spi.setParams(57, \"gooniestoo\");\n\n        InitiateTaskMessage itask = new InitiateTaskMessage(23, 8, 100045, true, false, spi, 2101);\n\n        InitiateTaskMessage itask2 = (InitiateTaskMessage) checkVoltMessage(itask, pool);\n\n        assertEquals(itask.getInitiatorHSId(), itask2.getInitiatorHSId());\n        assertEquals(itask.getTxnId(), itask2.getTxnId());\n        assertEquals(itask.isReadOnly(), itask2.isReadOnly());\n        assertEquals(itask.isSinglePartition(), itask2.isSinglePartition());\n        assertEquals(itask.getStoredProcedureName(), itask2.getStoredProcedureName());\n        assertEquals(itask.getParameterCount(), itask2.getParameterCount());\n        assertEquals(itask.getLastSafeTxnId(), itask2.getLastSafeTxnId());\n\n        itask.discard();\n        itask2.discard();\n        pool.clear();\n    }","id":1175,"modified_method":"public void testInitiateTask() throws IOException {\n        StoredProcedureInvocation spi = new StoredProcedureInvocation();\n        spi.setClientHandle(25);\n        spi.setProcName(\"johnisgreat\");\n        spi.setParams(57, \"gooniestoo\", \"dudemandude\");\n\n        InitiateTaskMessage itask = new InitiateTaskMessage(23, 8, 100045, true, false, spi, 2101);\n\n        InitiateTaskMessage itask2 = (InitiateTaskMessage) checkVoltMessage(itask);\n\n        assertEquals(itask.getInitiatorHSId(), itask2.getInitiatorHSId());\n        assertEquals(itask.getTxnId(), itask2.getTxnId());\n        assertEquals(itask.isReadOnly(), itask2.isReadOnly());\n        assertEquals(itask.isSinglePartition(), itask2.isSinglePartition());\n        assertEquals(itask.getStoredProcedureName(), itask2.getStoredProcedureName());\n        assertEquals(itask.getParameterCount(), itask2.getParameterCount());\n        assertEquals(itask.getLastSafeTxnId(), itask2.getLastSafeTxnId());\n    }","commit_id":"ceea7635e195e9789d5d735a646c315ed3d38ca8","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testFragmentResponse() throws IOException {\n        DBBPool pool = new DBBPool();\n        FragmentTaskMessage ft = new FragmentTaskMessage(\n                15, 12, 37,\n                false, new long[0], null,\n                new ByteBuffer[0], false);\n\n        VoltTable table = new VoltTable(\n                new VoltTable.ColumnInfo(\"bearhugg\", VoltType.STRING)\n        );\n        table.addRow(\"sandimashighschoolfootballrules\");\n\n        FragmentResponseMessage fr = new FragmentResponseMessage(ft, 23);\n        fr.setStatus(FragmentResponseMessage.UNEXPECTED_ERROR, new EEException(1));\n        fr.addDependency(99, table);\n\n        FragmentResponseMessage fr2 = (FragmentResponseMessage) checkVoltMessage(fr, pool);\n\n        assertEquals(fr.getExecutorSiteId(), fr2.getExecutorSiteId());\n        assertEquals(fr.getDestinationSiteId(), fr2.getDestinationSiteId());\n        assertEquals(fr.getTxnId(), fr2.getTxnId());\n        assertEquals(fr.getStatusCode(), fr2.getStatusCode());\n        assertEquals(fr.getTableCount(), fr2.getTableCount());\n\n        VoltTable t1 = fr.getTableAtIndex(0);\n        VoltTable t2 = fr2.getTableAtIndex(0);\n        assertEquals(t1.fetchRow(0).getString(0), t2.fetchRow(0).getString(0));\n        ft.discard();\n        fr2.discard();\n        fr.discard();\n        pool.clear();\n    }","id":1176,"modified_method":"public void testFragmentResponse() throws IOException {\n        FragmentTaskMessage ft = new FragmentTaskMessage(\n                15, 12, 37,\n                false, new long[0], null,\n                new ByteBuffer[0], false);\n\n        VoltTable table = new VoltTable(\n                new VoltTable.ColumnInfo(\"bearhugg\", VoltType.STRING)\n        );\n        table.addRow(\"sandimashighschoolfootballrules\");\n\n        FragmentResponseMessage fr = new FragmentResponseMessage(ft, 23);\n        fr.setStatus(FragmentResponseMessage.UNEXPECTED_ERROR, new EEException(1));\n        fr.addDependency(99, table);\n\n        FragmentResponseMessage fr2 = (FragmentResponseMessage) checkVoltMessage(fr);\n\n        assertEquals(fr.getExecutorSiteId(), fr2.getExecutorSiteId());\n        assertEquals(fr.getDestinationSiteId(), fr2.getDestinationSiteId());\n        assertEquals(fr.getTxnId(), fr2.getTxnId());\n        assertEquals(fr.getStatusCode(), fr2.getStatusCode());\n        assertEquals(fr.getTableCount(), fr2.getTableCount());\n\n        VoltTable t1 = fr.getTableAtIndex(0);\n        VoltTable t2 = fr2.getTableAtIndex(0);\n        assertEquals(t1.fetchRow(0).getString(0), t2.fetchRow(0).getString(0));\n    }","commit_id":"ceea7635e195e9789d5d735a646c315ed3d38ca8","url":"https://github.com/VoltDB/voltdb"},{"original_method":"VoltMessage checkVoltMessage(VoltMessage msg, final DBBPool pool) throws IOException {\n        msg.flattenToBuffer( pool );\n        ByteBuffer buf1 = msg.m_buffer;\n\n        VoltMessage msg2 = VoltMessage.createMessageFromBuffer(buf1, false);\n        msg2.flattenToBuffer( pool );\n        ByteBuffer buf2 = msg2.m_buffer;\n\n        assertTrue(buf1.compareTo(buf2) == 0);\n\n        return msg2;\n    }","id":1177,"modified_method":"VoltMessage checkVoltMessage(VoltMessage msg) throws IOException {\n        ByteBuffer buf1 = ByteBuffer.allocate(msg.getSerializedSize());\n        msg.flattenToBuffer(buf1);\n        buf1.flip();\n\n        VoltDbMessageFactory vdbmf = new VoltDbMessageFactory();\n\n        VoltMessage msg2 = vdbmf.createMessageFromBuffer(buf1, -1);\n        ByteBuffer buf2 = ByteBuffer.allocate(msg2.getSerializedSize());\n        msg2.flattenToBuffer(buf2);\n        buf1.rewind();\n        buf2.rewind();\n\n        assertTrue(buf1.compareTo(buf2) == 0);\n\n        return msg2;\n    }","commit_id":"ceea7635e195e9789d5d735a646c315ed3d38ca8","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testInitiateResponse() throws IOException {\n        DBBPool pool = new DBBPool();\n        StoredProcedureInvocation spi = new StoredProcedureInvocation();\n        spi.setClientHandle(25);\n        spi.setProcName(\"elmerfudd\");\n        spi.setParams(57, \"wrascallywabbit\");\n\n        InitiateTaskMessage itask = new InitiateTaskMessage(23, 8, 100045, true, false, spi, 2101);\n\n        VoltTable table = new VoltTable(\n                new VoltTable.ColumnInfo(\"foobar\", VoltType.STRING)\n        );\n        table.addRow(\"howmanylicksdoesittaketogettothecenterofatootsiepop\");\n\n        InitiateResponseMessage iresponse = new InitiateResponseMessage(itask);\n        iresponse.setResults( new ClientResponseImpl(ClientResponseImpl.GRACEFUL_FAILURE,\n                new VoltTable[] { table }, \"knockknockbananna\", new EEException(1)));\n        iresponse.setClientHandle(99);\n\n        InitiateResponseMessage iresponse2 = (InitiateResponseMessage) checkVoltMessage(iresponse, pool);\n\n        assertEquals(iresponse.getTxnId(), iresponse2.getTxnId());\n        iresponse.discard();\n        iresponse2.discard();\n        pool.clear();\n    }","id":1178,"modified_method":"public void testInitiateResponse() throws IOException {\n        StoredProcedureInvocation spi = new StoredProcedureInvocation();\n        spi.setClientHandle(25);\n        spi.setProcName(\"elmerfudd\");\n        spi.setParams(57, \"wrascallywabbit\");\n\n        InitiateTaskMessage itask = new InitiateTaskMessage(23, 8, 100045, true, false, spi, 2101);\n\n        VoltTable table = new VoltTable(\n                new VoltTable.ColumnInfo(\"foobar\", VoltType.STRING)\n        );\n        table.addRow(\"howmanylicksdoesittaketogettothecenterofatootsiepop\");\n\n        InitiateResponseMessage iresponse = new InitiateResponseMessage(itask);\n        iresponse.setResults( new ClientResponseImpl(ClientResponseImpl.GRACEFUL_FAILURE,\n                new VoltTable[] { table }, \"knockknockbananna\", new EEException(1)));\n        iresponse.setClientHandle(99);\n\n        InitiateResponseMessage iresponse2 = (InitiateResponseMessage) checkVoltMessage(iresponse);\n\n        assertEquals(iresponse.getTxnId(), iresponse2.getTxnId());\n    }","commit_id":"ceea7635e195e9789d5d735a646c315ed3d38ca8","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testFragmentTask() throws IOException {\n        DBBPool pool = new DBBPool();\n        FragmentTaskMessage ft = new FragmentTaskMessage(9, 70654312, -75, true,\n            new long[] { 5 }, new int[] { 12 }, new ByteBuffer[] { ByteBuffer.allocate(0) }, true);\n        ft.setFragmentTaskType(FragmentTaskMessage.SYS_PROC_PER_PARTITION);\n\n        FragmentTaskMessage ft2 = (FragmentTaskMessage) checkVoltMessage(ft, pool);\n\n        assertEquals(ft.getInitiatorHSId(), ft2.getInitiatorHSId());\n        assertEquals(ft.getCoordinatorHSId(), ft2.getCoordinatorHSId());\n        assertEquals(ft.getTxnId(), ft2.getTxnId());\n        assertEquals(ft.isReadOnly(), ft2.isReadOnly());\n\n        assertEquals(ft.getFragmentCount(), ft2.getFragmentCount());\n\n        assertEquals(ft.isFinalTask(), ft2.isFinalTask());\n        assertEquals(ft.isSysProcTask(), ft2.isSysProcTask());\n        ft.discard();\n        ft2.discard();\n        pool.clear();\n    }","id":1179,"modified_method":"public void testFragmentTask() throws IOException {\n        FragmentTaskMessage ft = new FragmentTaskMessage(9, 70654312, -75, true,\n            new long[] { 5 }, new int[] { 12 }, new ByteBuffer[] { ByteBuffer.allocate(0) }, true);\n        ft.setFragmentTaskType(FragmentTaskMessage.SYS_PROC_PER_PARTITION);\n\n        FragmentTaskMessage ft2 = (FragmentTaskMessage) checkVoltMessage(ft);\n\n        assertEquals(ft.getInitiatorHSId(), ft2.getInitiatorHSId());\n        assertEquals(ft.getCoordinatorHSId(), ft2.getCoordinatorHSId());\n        assertEquals(ft.getTxnId(), ft2.getTxnId());\n        assertEquals(ft.isReadOnly(), ft2.isReadOnly());\n\n        assertEquals(ft.getFragmentCount(), ft2.getFragmentCount());\n\n        assertEquals(ft.isFinalTask(), ft2.isFinalTask());\n        assertEquals(ft.isSysProcTask(), ft2.isSysProcTask());\n    }","commit_id":"ceea7635e195e9789d5d735a646c315ed3d38ca8","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testMembershipNotice() throws IOException {\n        DBBPool pool = new DBBPool();\n        MultiPartitionParticipantMessage mn = new MultiPartitionParticipantMessage(100222, -75, 555555555555L, false);\n\n        MultiPartitionParticipantMessage mn2 = (MultiPartitionParticipantMessage) checkVoltMessage(mn, pool);\n\n        assertEquals(mn.getInitiatorHSId(), mn2.getInitiatorHSId());\n        assertEquals(mn.getCoordinatorHSId(), mn2.getCoordinatorHSId());\n        assertEquals(mn.getTxnId(), mn2.getTxnId());\n        assertEquals(mn.isReadOnly(), mn2.isReadOnly());\n        mn.discard();\n        mn2.discard();\n        pool.clear();\n    }","id":1180,"modified_method":"public void testMembershipNotice() throws IOException {\n        MultiPartitionParticipantMessage mn = new MultiPartitionParticipantMessage(100222, -75, 555555555555L, false);\n\n        MultiPartitionParticipantMessage mn2 =\n            (MultiPartitionParticipantMessage) checkVoltMessage(mn);\n\n        assertEquals(mn.getInitiatorHSId(), mn2.getInitiatorHSId());\n        assertEquals(mn.getCoordinatorHSId(), mn2.getCoordinatorHSId());\n        assertEquals(mn.getTxnId(), mn2.getTxnId());\n        assertEquals(mn.isReadOnly(), mn2.isReadOnly());\n    }","commit_id":"ceea7635e195e9789d5d735a646c315ed3d38ca8","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testFragmentTaskWithTwoFrags() throws IOException {\n        DBBPool pool = new DBBPool();\n\n        Object[] params1 = {(Integer)10, (Double)10.1};\n        Object[] params2 = {(Integer)20, (Double)20.2};\n\n        ParameterSet param_set1 = new ParameterSet(true);\n        param_set1.setParameters(params1);\n        ParameterSet param_set2 = new ParameterSet(true);\n        param_set2.setParameters(params2);\n\n        FastSerializer param1_fs = new FastSerializer();\n        param1_fs.writeObject(param_set1);\n        ByteBuffer param1_buf = param1_fs.getBuffer();\n\n        FastSerializer param2_fs = new FastSerializer();\n        param2_fs.writeObject(param_set2);\n        ByteBuffer param2_buf = param2_fs.getBuffer();\n\n        FragmentTaskMessage ft = new FragmentTaskMessage(9, 70654312, -75, true,\n            new long[] { 5, 10 }, new int[] { 12, 24 },\n            new ByteBuffer[] { param1_buf, param2_buf }, true);\n        ft.setFragmentTaskType(FragmentTaskMessage.SYS_PROC_PER_PARTITION);\n\n        FragmentTaskMessage ft2 = (FragmentTaskMessage) checkVoltMessage(ft, pool);\n\n        assertEquals(ft.getInitiatorHSId(), ft2.getInitiatorHSId());\n        assertEquals(ft.getCoordinatorHSId(), ft2.getCoordinatorHSId());\n        assertEquals(ft.getTxnId(), ft2.getTxnId());\n        assertEquals(ft.isReadOnly(), ft2.isReadOnly());\n\n        assertEquals(ft.getFragmentCount(), ft2.getFragmentCount());\n\n        assertEquals(ft.isFinalTask(), ft2.isFinalTask());\n        assertEquals(ft.isSysProcTask(), ft2.isSysProcTask());\n\n        assertEquals(2, ft2.getFragmentCount());\n        ParameterSet params = null;\n        ByteBuffer paramData = ft2.getParameterDataForFragment(0);\n        if (paramData != null) {\n            final FastDeserializer fds = new FastDeserializer(paramData);\n            params = fds.readObject(ParameterSet.class);\n        }\n        assertEquals(10, params.toArray()[0]);\n        assertEquals(10.1, params.toArray()[1]);\n\n        params = null;\n        paramData = ft2.getParameterDataForFragment(1);\n        if (paramData != null) {\n            final FastDeserializer fds = new FastDeserializer(paramData);\n            params = fds.readObject(ParameterSet.class);\n        }\n        assertEquals(20, params.toArray()[0]);\n        assertEquals(20.2, params.toArray()[1]);\n\n        ft.discard();\n        ft2.discard();\n        pool.clear();\n    }","id":1181,"modified_method":"public void testFragmentTaskWithTwoFrags() throws IOException {\n        Object[] params1 = {(Integer)10, (Double)10.1};\n        Object[] params2 = {(Integer)20, (Double)20.2};\n\n        ParameterSet param_set1 = new ParameterSet(true);\n        param_set1.setParameters(params1);\n        ParameterSet param_set2 = new ParameterSet(true);\n        param_set2.setParameters(params2);\n\n        FastSerializer param1_fs = new FastSerializer();\n        param1_fs.writeObject(param_set1);\n        ByteBuffer param1_buf = param1_fs.getBuffer();\n\n        FastSerializer param2_fs = new FastSerializer();\n        param2_fs.writeObject(param_set2);\n        ByteBuffer param2_buf = param2_fs.getBuffer();\n\n        FragmentTaskMessage ft = new FragmentTaskMessage(9, 70654312, -75, true,\n            new long[] { 5, 10 }, new int[] { 12, 24 },\n            new ByteBuffer[] { param1_buf, param2_buf }, true);\n        ft.setFragmentTaskType(FragmentTaskMessage.SYS_PROC_PER_PARTITION);\n\n        FragmentTaskMessage ft2 = (FragmentTaskMessage) checkVoltMessage(ft);\n\n        assertEquals(ft.getInitiatorHSId(), ft2.getInitiatorHSId());\n        assertEquals(ft.getCoordinatorHSId(), ft2.getCoordinatorHSId());\n        assertEquals(ft.getTxnId(), ft2.getTxnId());\n        assertEquals(ft.isReadOnly(), ft2.isReadOnly());\n\n        assertEquals(ft.getFragmentCount(), ft2.getFragmentCount());\n\n        assertEquals(ft.isFinalTask(), ft2.isFinalTask());\n        assertEquals(ft.isSysProcTask(), ft2.isSysProcTask());\n\n        assertEquals(2, ft2.getFragmentCount());\n        ParameterSet params = null;\n        ByteBuffer paramData = ft2.getParameterDataForFragment(0);\n        if (paramData != null) {\n            final FastDeserializer fds = new FastDeserializer(paramData);\n            params = fds.readObject(ParameterSet.class);\n        }\n        assertEquals(10, params.toArray()[0]);\n        assertEquals(10.1, params.toArray()[1]);\n\n        params = null;\n        paramData = ft2.getParameterDataForFragment(1);\n        if (paramData != null) {\n            final FastDeserializer fds = new FastDeserializer(paramData);\n            params = fds.readObject(ParameterSet.class);\n        }\n        assertEquals(20, params.toArray()[0]);\n        assertEquals(20.2, params.toArray()[1]);\n    }","commit_id":"ceea7635e195e9789d5d735a646c315ed3d38ca8","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static void main( String[] args) {\n\t\n\t// table col -> definition\n\tHashMap<String,String> adds = new HashMap<String, String>();\n\n\ttry {\n\t    BufferedReader diffs = new BufferedReader(new FileReader(args[0]));\n\t    BufferedReader schema = new BufferedReader(new FileReader(args[1]));\n\n\t    PrintWriter out = new PrintWriter(args[2]);\n\t\n\t    String line;\n\n\t    while ((line = diffs.readLine()) != null) {\n\t\tif (line.startsWith(\"+\")) {\n\t\t    line = line.substring(2);\n\t\t    adds.put(line,\"\");\n\t\t}\n\t    }\n\t    while ((line = schema.readLine()) != null) {\n\t\tint i = line.indexOf(\" \");\n\t\tString table = line.substring(0,i);\n\t\tint j = line.indexOf(\" \",i+1);\n\t\tString col = line.substring(i+1, j);\n\t\tString definition = line.substring(j+1);\n\n\t\tif (adds.get(table + \" \" + col) != null) {\n\t\t    if (definition.endsWith(\",\") || definition.endsWith(\")\"))\n\t\t\tdefinition = definition.substring(0, definition.length() - 1);\n\t\t    out.println(\"alter table \" + table + \" add \" + col + \" \" + definition + \";\");\n\t\t}\n\t    }\n\n\t    out.close();\n\n\t} catch (Exception e) {\n\t    System.err.println(e);\n\t}\n    }","id":1182,"modified_method":"public static void main( String[] args) {\n\t\n\t// table col -> definition\n\tHashSet<String> olds = new HashSet<String>();\n\n\ttry {\n\t    BufferedReader oldschema = new BufferedReader(new FileReader(args[0]));\n\t    BufferedReader newschema = new BufferedReader(new FileReader(args[1]));\n\n\t    String table = null;\n\t    String line = null;\n\n\t    // build a set of the old cols\n\t    while ((line = oldschema.readLine()) != null) {\n\t\tline = line.trim();\n\t\tif (line.startsWith(\"create table\")) {\n\t\t    int i = line.indexOf(\"(\");\n\t\t    line = line.substring(12, i-1);\n\t\t    table = line.trim();\n\t\t} else if (line.length() > 0) {\n\t\t    int i = line.indexOf(\" \");\n\t\t    if (i > 0) {\n\t\t\tolds.add(table + \" \" + line.substring(0,i));\n\t\t    }\n\t\t}\t\t    \n\t    }\n\n\t    PrintWriter out = new PrintWriter(args[2]);\n\n\t    // now go through new definition. Anything not in old is added.\n\t    // at the end, anythnig form the old not used should be deleted.\n\n\t    while ((line = newschema.readLine()) != null) {\n\t\tline = line.trim();\n\t\tif (line.startsWith(\"create table\")) {\n\t\t    int i = line.indexOf(\"(\");\n\t\t    line = line.substring(12, i-1);\n\t\t    table = line.trim();\n\t\t} else if (line.length() > 0) {\n\t\t    int i = line.indexOf(\" \");\n\t\t    if (i > 0) {\n\t\t\tif (! olds.remove(table + \" \" + line.substring(0,i))) {\n\t\t\t    if (line.endsWith(\",\") || line.endsWith(\")\"))\n\t\t\t\tline = line.substring(0, line.length() - 1);\n\t\t\t    out.println(\"alter table \" + table + \" add \" + line + \";\");\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\n\t    out.close();\n\n\t} catch (Exception e) {\n\t    System.err.println(e);\n\t}\n    }","commit_id":"df1092c15492278808bedc546597c1177362ffa9","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n     * Ignore an exception unless trace is enabled.\n     * This works around the problem that log4j does not support the trace level.\n     */\n    public static void ignore(Throwable th)\n    {\n        if (!initialized())\n            return;\n        if (__ignored)\n        {\n            __log.warn(IGNORED,th);\n            unwind(th);\n        }\n        else if (__verbose)\n        {\n            __log.warn(IGNORED,th);\n            unwind(th);\n        }\n    }","id":1183,"modified_method":"/**\n     * Ignore an exception unless trace is enabled.\n     * This works around the problem that log4j does not support the trace level.\n     */\n    public static void ignore(Throwable th)\n    {\n        if (!initialized())\n            return;\n        if (__ignored)\n        {\n            __log.warn(IGNORED,th);\n            unwind(th);\n        }\n    }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private static void initStandardLogging(Throwable e) {\n        Class log_class;\n        if (__log==null)\n        {\n            log_class= StdErrLog.class;\n            __log=new StdErrLog();\n            __log.info(\"Logging to {} via {}\",__log,log_class.getName());\n            if(e != null && __verbose)\n                e.printStackTrace();\n        }\n    }","id":1184,"modified_method":"private static void initStandardLogging(Throwable e) \n    {\n        Class log_class;\n        if(e != null && __ignored)\n            e.printStackTrace();\n        if (__log==null)\n        {\n            log_class= StdErrLog.class;\n            __log=new StdErrLog();\n            __log.info(\"Logging to {} via {}\",__log,log_class.getName());\n        }\n    }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void start(String[] args)\n    {\n        ArrayList al=new ArrayList();\n        for (int i=0; i<args.length; i++)\n        {\n            if (args[i]==null)\n                continue;\n            else\n                al.add(args[i]);\n        }\n        args=(String[])al.toArray(new String[al.size()]);\n        // set up classpath:\n        InputStream cpcfg=null;\n        try\n        {\n            Monitor.monitor();\n\n            cpcfg=getClass().getClassLoader().getResourceAsStream(_config);\n            if (_debug)\n                System.err.println(\"config=\"+_config);\n            if (cpcfg==null)\n                cpcfg=new FileInputStream(_config);\n            configure(cpcfg,args.length);\n            String jetty_home=System.getProperty(\"jetty.home\");\n            if (jetty_home!=null)\n            {\n                File file=new File(jetty_home);\n                String canonical=file.getCanonicalPath();\n                System.setProperty(\"jetty.home\",canonical);\n            }\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n            System.exit(1);\n        }\n        finally\n        {\n            try\n            {\n                cpcfg.close();\n            }\n            catch (Exception e)\n            {\n                e.printStackTrace();\n            }\n        }\n        // okay, classpath complete.\n        System.setProperty(\"java.class.path\",_classpath.toString());\n        ClassLoader cl=_classpath.getClassLoader();\n        if (_debug)\n        {\n            System.err.println(\"java.class.path=\"+System.getProperty(\"java.class.path\"));\n            System.err.println(\"jetty.home=\"+System.getProperty(\"jetty.home\"));\n            System.err.println(\"java.io.tmpdir=\"+System.getProperty(\"java.io.tmpdir\"));\n            System.err.println(\"java.class.path=\"+_classpath);\n            System.err.println(\"classloader=\"+cl);\n            System.err.println(\"classloader.parent=\"+cl.getParent());\n        }\n        // Invoke main(args) using new classloader.\n        Thread.currentThread().setContextClassLoader(cl);\n        // re-eval the policy now that env is set\n        try\n        {\n            Policy policy=Policy.getPolicy();\n            if (policy!=null)\n                policy.refresh();\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n        try\n        {\n            for (int i=0; i<args.length; i++)\n            {\n                if (args[i]==null)\n                    continue;\n                _xml.add(args[i]);\n            }\n            args=(String[])_xml.toArray(args);\n            //check for override of start class\n            String mainClass=System.getProperty(\"jetty.server\");\n            if (mainClass!=null)\n                _classname=mainClass;\n            mainClass=System.getProperty(\"main.class\");\n            if (mainClass!=null)\n                _classname=mainClass;\n            if (_debug)\n                System.err.println(\"main.class=\"+_classname);\n            invokeMain(cl,_classname,args);\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n    }","id":1185,"modified_method":"public void start(String[] args)\n    {\n        // set up classpath:\n        InputStream cpcfg=null;\n        try\n        {\n            int port = Integer.parseInt(getProperty(\"STOP.PORT\",\"-1\"));\n            String key = getProperty(\"STOP.KEY\", null);\n            \n            Monitor.monitor(port,key);\n\n            String config=getProperty(\"START\",\"org/eclipse/jetty/start/start.config\");\n            if (DEBUG)\n            {\n                System.err.println(\"config=\"+config);\n                System.err.println(\"properties=\"+_properties);\n            }\n            cpcfg=getClass().getClassLoader().getResourceAsStream(config);\n            if (cpcfg==null)\n                cpcfg=new FileInputStream(config);\n            \n            configure(cpcfg,args.length);\n            \n            /* TODO is this needed?\n            String jetty_home=System.getProperty(\"jetty.home\");\n            if (jetty_home!=null)\n            {\n                File file=new File(jetty_home);\n                String canonical=file.getCanonicalPath();\n                System.setProperty(\"jetty.home\",canonical);\n            }\n            */\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n            System.exit(1);\n        }\n        finally\n        {\n            try\n            {\n                cpcfg.close();\n            }\n            catch (Exception e)\n            {\n                e.printStackTrace();\n            }\n        }\n        // okay, classpath complete.\n        System.setProperty(\"java.class.path\",_classpath.toString());\n        ClassLoader cl=_classpath.getClassLoader();\n        if (DEBUG)\n        {\n            System.err.println(\"java.class.path=\"+System.getProperty(\"java.class.path\"));\n            System.err.println(\"jetty.home=\"+System.getProperty(\"jetty.home\"));\n            System.err.println(\"java.io.tmpdir=\"+System.getProperty(\"java.io.tmpdir\"));\n            System.err.println(\"java.class.path=\"+_classpath);\n            System.err.println(\"classloader=\"+cl);\n            System.err.println(\"classloader.parent=\"+cl.getParent());\n        }\n        // Invoke main(args) using new classloader.\n        Thread.currentThread().setContextClassLoader(cl);\n        // re-eval the policy now that env is set\n        try\n        {\n            Policy policy=Policy.getPolicy();\n            if (policy!=null)\n                policy.refresh();\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n        try\n        {\n            for (int i=0; i<args.length; i++)\n            {\n                if (args[i]==null)\n                    continue;\n                _xml.add(args[i]);\n            }\n            args=(String[])_xml.toArray(args);\n            //check for override of start class\n            String mainClass=System.getProperty(\"jetty.server\");\n            if (mainClass!=null)\n                _classname=mainClass;\n            mainClass=System.getProperty(\"main.class\");\n            if (mainClass!=null)\n                _classname=mainClass;\n            if (DEBUG)\n                System.err.println(\"main.class=\"+_classname);\n            invokeMain(cl,_classname,args);\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n    }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"void configure(InputStream config, int nargs) throws Exception\n    {\n        BufferedReader cfg=new BufferedReader(new InputStreamReader(config,\"ISO-8859-1\"));\n        Version java_version=new Version(System.getProperty(\"java.version\"));\n        Version ver=new Version();\n        // JAR's already processed\n        Hashtable done=new Hashtable();\n        // Initial classpath\n        String classpath=System.getProperty(\"CLASSPATH\");\n        if (classpath!=null)\n        {\n            StringTokenizer tok=new StringTokenizer(classpath,File.pathSeparator);\n            while (tok.hasMoreTokens())\n                _classpath.addComponent(tok.nextToken());\n        }\n\n        List section=null;\n        List options=null;\n        String o=System.getProperty(\"OPTIONS\");\n        if (o==null)\n            o=\"default\";\n        options=Arrays.asList((o.toString()+\",*\").split(\"[ ,]\")); \n        ArrayList unsatisfiedOptions = new ArrayList(options);\n        \n        // Handle line by line\n        String line=null;\n        while (true)\n        {\n            line=cfg.readLine();\n            if (line==null)\n                break;\n            String trim=line.trim();\n            if (trim.length()==0||trim.startsWith(\"#\"))\n                continue;\n            \n            // handle options\n            if (trim.startsWith(\"[\") && trim.endsWith(\"]\"))\n            {\n                section = Arrays.asList(trim.substring(1,trim.length()-1).split(\"[ ,]\"));  \n                _options.addAll(section);\n            }\n            \n            if (section!=null && Collections.disjoint(section,options))\n                continue;\n            if (section!=null)\n                unsatisfiedOptions.removeAll(section);\n            try\n            {\n                StringTokenizer st=new StringTokenizer(line);\n                String subject=st.nextToken();\n                boolean expression=true;\n                boolean not=false;\n                String condition=null;\n                // Evaluate all conditions\n                while (st.hasMoreTokens())\n                {\n                    condition=st.nextToken();\n                    if (condition.equalsIgnoreCase(\"!\"))\n                    {\n                        not=true;\n                        continue;\n                    }\n                    if (condition.equalsIgnoreCase(\"OR\"))\n                    {\n                        if (expression)\n                            break;\n                        expression=true;\n                        continue;\n                    }\n                    if (condition.equalsIgnoreCase(\"AND\"))\n                    {\n                        if (!expression)\n                            break;\n                        continue;\n                    }\n                    boolean eval=true;\n                    if (condition.equals(\"true\")||condition.equals(\"always\"))\n                    {\n                        eval=true;\n                    }\n                    else if (condition.equals(\"false\")||condition.equals(\"never\"))\n                    {\n                        eval=false;\n                    }\n                    else if (condition.equals(\"available\"))\n                    {\n                        String class_to_check=st.nextToken();\n                        eval=isAvailable(class_to_check);\n                    }\n                    else if (condition.equals(\"exists\"))\n                    {\n                        try\n                        {\n                            eval=false;\n                            File file=new File(expand(st.nextToken()));\n                            eval=file.exists();\n                        }\n                        catch (Exception e)\n                        {\n                            if (_debug)\n                                e.printStackTrace();\n                        }\n                    }\n                    else if (condition.equals(\"property\"))\n                    {\n                        String property=System.getProperty(st.nextToken());\n                        eval=property!=null&&property.length()>0;\n                    }\n                    else if (condition.equals(\"java\"))\n                    {\n                        String operator=st.nextToken();\n                        String version=st.nextToken();\n                        ver.parse(version);\n                        eval=(operator.equals(\"<\")&&java_version.compare(ver)<0)||(operator.equals(\">\")&&java_version.compare(ver)>0)\n                                ||(operator.equals(\"<=\")&&java_version.compare(ver)<=0)||(operator.equals(\"=<\")&&java_version.compare(ver)<=0)\n                                ||(operator.equals(\"=>\")&&java_version.compare(ver)>=0)||(operator.equals(\">=\")&&java_version.compare(ver)>=0)\n                                ||(operator.equals(\"==\")&&java_version.compare(ver)==0)||(operator.equals(\"!=\")&&java_version.compare(ver)!=0);\n                    }\n                    else if (condition.equals(\"nargs\"))\n                    {\n                        String operator=st.nextToken();\n                        int number=Integer.parseInt(st.nextToken());\n                        eval=(operator.equals(\"<\")&&nargs<number)||(operator.equals(\">\")&&nargs>number)||(operator.equals(\"<=\")&&nargs<=number)\n                                ||(operator.equals(\"=<\")&&nargs<=number)||(operator.equals(\"=>\")&&nargs>=number)||(operator.equals(\">=\")&&nargs>=number)\n                                ||(operator.equals(\"==\")&&nargs==number)||(operator.equals(\"!=\")&&nargs!=number);\n                    }\n                    else\n                    {\n                        System.err.println(\"ERROR: Unknown condition: \"+condition);\n                        eval=false;\n                    }\n                    expression&=not?!eval:eval;\n                    not=false;\n                }\n                String file=expand(subject).replace('/',File.separatorChar);\n                if (_debug)\n                    System.err.println((expression?\"T \":\"F \")+line);\n                if (!expression)\n                {\n                    done.put(file,file);\n                    continue;\n                }\n                // Handle the subject\n                if (subject.indexOf(\"=\")>0)\n                {\n                    int i=file.indexOf(\"=\");\n                    String property=file.substring(0,i);\n                    String value=file.substring(i+1);\n                    if (_debug)\n                        System.err.println(\"  \"+property+\"=\"+value);\n                    System.setProperty(property,value);\n                }\n                else if (subject.endsWith(\"/*\"))\n                {\n                    // directory of JAR files - only add jars and zips\n                    // within the directory\n                    File dir=new File(file.substring(0,file.length()-1));\n                    addJars(dir,done,false);\n                }\n                else if (subject.endsWith(\"/**\"))\n                {\n                    //directory hierarchy of jar files - recursively add all\n                    //jars and zips in the hierarchy\n                    File dir=new File(file.substring(0,file.length()-2));\n                    addJars(dir,done,true);\n                }\n                else if (subject.endsWith(\"/\"))\n                {\n                    // class directory\n                    File cd=new File(file);\n                    String d=cd.getCanonicalPath();\n                    if (!done.containsKey(d))\n                    {\n                        done.put(d,d);\n                        boolean added=_classpath.addComponent(d);\n                        if (_debug)\n                            System.err.println((added?\"  CLASSPATH+=\":\"  !\")+d);\n                    }\n                }\n                else if (subject.toLowerCase().endsWith(\".xml\"))\n                {\n                    // Config file\n                    File f=new File(file);\n                    if (f.exists())\n                        _xml.add(f.getCanonicalPath());\n                    if (_debug)\n                        System.err.println(\"  ARGS+=\"+f);\n                }\n                else if (subject.toLowerCase().endsWith(\".class\"))\n                {\n                    // Class\n                    String cn=expand(subject.substring(0,subject.length()-6));\n                    if (cn!=null&&cn.length()>0)\n                    {\n                        if (_debug)\n                            System.err.println(\"  CLASS=\"+cn);\n                        _classname=cn;\n                    }\n                }\n                else if (subject.toLowerCase().endsWith(\".path\"))\n                {\n                    //classpath (jetty.class.path?) to add to runtime classpath\n                    String cn=expand(subject.substring(0,subject.length()-5));\n                    if (cn!=null&&cn.length()>0)\n                    {\n                        if (_debug)\n                            System.err.println(\"  PATH=\"+cn);\n                        _classpath.addClasspath(cn);\n                    }                  \n                }\n                else\n                {\n                    // single JAR file\n                    File f=new File(file);\n                    if(f.exists())\n                    {\n                        String d=f.getCanonicalPath();\n                        if (!done.containsKey(d))\n                        {\n                            done.put(d,d);\n                            boolean added=_classpath.addComponent(d);\n                            if (!added)\n                            {\n                                added=_classpath.addClasspath(expand(subject));\n                                if (_debug)\n                                    System.err.println((added?\"  CLASSPATH+=\":\"  !\")+d);\n                            }\n                            else if (_debug)\n                                System.err.println((added?\"  CLASSPATH+=\":\"  !\")+d);\n                        }\n                    }\n                }\n            }\n            catch (Exception e)\n            {\n                System.err.println(\"on line: '\"+line+\"'\");\n                e.printStackTrace();\n            }\n        }\n\n        if (unsatisfiedOptions!=null && unsatisfiedOptions.size()>0)\n        {\n            String home = System.getProperty(\"jetty.home\");\n            String lib = System.getProperty(\"jetty.lib\");\n            File libDir = null;\n            if (lib!=null)\n            {\n                libDir = new File (lib);\n            }\n            else if (home != null)\n            {\n                libDir = new File (home, \"lib\");\n            }\n\n            for (int i=0; i< unsatisfiedOptions.size(); i++)\n            {   \n                if (libDir != null)\n                {\n                    File dir = new File (libDir, (String)unsatisfiedOptions.get(i));\n                    if (dir.exists())\n                        addJars(dir,done,true);\n                    else\n                        System.err.println(\"Unsatisfied option:\"+unsatisfiedOptions.get(i));\n                }\n                else\n                    System.err.println(\"Unsatisfied option:\"+unsatisfiedOptions.get(i));\n            }\n        }\n    }","id":1186,"modified_method":"void configure(InputStream config, int nargs) throws Exception\n    {\n        BufferedReader cfg=new BufferedReader(new InputStreamReader(config,\"ISO-8859-1\"));\n        Version java_version=new Version(System.getProperty(\"java.version\"));\n        Version ver=new Version();\n        // JAR's already processed\n        Set<String> done=new HashSet<String>();\n        \n        // Initial classpath\n        String classpath=System.getProperty(\"CLASSPATH\");\n        if (classpath!=null)\n        {\n            StringTokenizer tok=new StringTokenizer(classpath,File.pathSeparator);\n            while (tok.hasMoreTokens())\n                _classpath.addComponent(tok.nextToken());\n        }\n\n        List<String> section=null;\n        List<String> options=null;\n        String o=getProperty(\"OPTIONS\",\"default\");\n        options=Arrays.asList((o.toString()+\",*\").split(\"[ ,]\")); \n        List<String> unsatisfied_options = new ArrayList<String>(options);\n        \n        // Handle line by line\n        String line=null;\n        while (true)\n        {\n            line=cfg.readLine();\n            if (line==null)\n                break;\n            String trim=line.trim();\n            if (trim.length()==0||trim.startsWith(\"#\"))\n                continue;\n            \n            // handle options\n            if (trim.startsWith(\"[\") && trim.endsWith(\"]\"))\n            {\n                section = Arrays.asList(trim.substring(1,trim.length()-1).split(\"[ ,]\"));  \n                _options.addAll(section);\n            }\n            \n            if (section!=null && Collections.disjoint(section,options))\n                continue;\n            if (section!=null)\n                unsatisfied_options.removeAll(section);\n            try\n            {\n                StringTokenizer st=new StringTokenizer(line);\n                String subject=st.nextToken();\n                boolean expression=true;\n                boolean not=false;\n                String condition=null;\n                // Evaluate all conditions\n                while (st.hasMoreTokens())\n                {\n                    condition=st.nextToken();\n                    if (condition.equalsIgnoreCase(\"!\"))\n                    {\n                        not=true;\n                        continue;\n                    }\n                    if (condition.equalsIgnoreCase(\"OR\"))\n                    {\n                        if (expression)\n                            break;\n                        expression=true;\n                        continue;\n                    }\n                    if (condition.equalsIgnoreCase(\"AND\"))\n                    {\n                        if (!expression)\n                            break;\n                        continue;\n                    }\n                    boolean eval=true;\n                    if (condition.equals(\"true\")||condition.equals(\"always\"))\n                    {\n                        eval=true;\n                    }\n                    else if (condition.equals(\"false\")||condition.equals(\"never\"))\n                    {\n                        eval=false;\n                    }\n                    else if (condition.equals(\"available\"))\n                    {\n                        String class_to_check=st.nextToken();\n                        eval=isAvailable(class_to_check);\n                    }\n                    else if (condition.equals(\"exists\"))\n                    {\n                        try\n                        {\n                            eval=false;\n                            File file=new File(expand(st.nextToken()));\n                            eval=file.exists();\n                        }\n                        catch (Exception e)\n                        {\n                            if (DEBUG)\n                                e.printStackTrace();\n                        }\n                    }\n                    else if (condition.equals(\"property\"))\n                    {\n                        String property=getProperty(st.nextToken());\n                        eval=property!=null&&property.length()>0;\n                    }\n                    else if (condition.equals(\"system\"))\n                    {\n                        String property=System.getProperty(st.nextToken());\n                        eval=property!=null&&property.length()>0;\n                    }\n                    else if (condition.equals(\"java\"))\n                    {\n                        String operator=st.nextToken();\n                        String version=st.nextToken();\n                        ver.parse(version);\n                        eval=(operator.equals(\"<\")&&java_version.compare(ver)<0)||(operator.equals(\">\")&&java_version.compare(ver)>0)\n                                ||(operator.equals(\"<=\")&&java_version.compare(ver)<=0)||(operator.equals(\"=<\")&&java_version.compare(ver)<=0)\n                                ||(operator.equals(\"=>\")&&java_version.compare(ver)>=0)||(operator.equals(\">=\")&&java_version.compare(ver)>=0)\n                                ||(operator.equals(\"==\")&&java_version.compare(ver)==0)||(operator.equals(\"!=\")&&java_version.compare(ver)!=0);\n                    }\n                    else if (condition.equals(\"nargs\"))\n                    {\n                        String operator=st.nextToken();\n                        int number=Integer.parseInt(st.nextToken());\n                        eval=(operator.equals(\"<\")&&nargs<number)||(operator.equals(\">\")&&nargs>number)||(operator.equals(\"<=\")&&nargs<=number)\n                                ||(operator.equals(\"=<\")&&nargs<=number)||(operator.equals(\"=>\")&&nargs>=number)||(operator.equals(\">=\")&&nargs>=number)\n                                ||(operator.equals(\"==\")&&nargs==number)||(operator.equals(\"!=\")&&nargs!=number);\n                    }\n                    else\n                    {\n                        System.err.println(\"ERROR: Unknown condition: \"+condition);\n                        eval=false;\n                    }\n                    expression&=not?!eval:eval;\n                    not=false;\n                }\n                String file=expand(subject).replace('/',File.separatorChar);\n                if (DEBUG)\n                    System.err.println((expression?\"T \":\"F \")+line);\n                if (!expression)\n                {\n                    done.add(file);\n                    continue;\n                }\n                \n                \n                // Handle the subject\n                if (subject.indexOf(\"~=\")>0)\n                {\n                    int i=file.indexOf(\"=\");\n                    String property=file.substring(0,i);\n                    String value=file.substring(i+1);\n                    if (DEBUG)\n                        System.err.println(\"  \"+property+\"~=\"+value);\n                    setProperty(property,value);\n                }\n                else if (subject.indexOf(\"=\")>0)\n                {\n                    int i=file.indexOf(\"=\");\n                    String property=file.substring(0,i);\n                    String value=file.substring(i+1);\n                    if (DEBUG)\n                        System.err.println(\"  \"+property+\"=\"+value);\n                    System.setProperty(property,value);\n                }\n                else if (subject.endsWith(\"/*\"))\n                {\n                    // directory of JAR files - only add jars and zips\n                    // within the directory\n                    File dir=new File(file.substring(0,file.length()-1));\n                    addJars(dir,done,false);\n                }\n                else if (subject.endsWith(\"/**\"))\n                {\n                    //directory hierarchy of jar files - recursively add all\n                    //jars and zips in the hierarchy\n                    File dir=new File(file.substring(0,file.length()-2));\n                    addJars(dir,done,true);\n                }\n                else if (subject.endsWith(\"/\"))\n                {\n                    // class directory\n                    File cd=new File(file);\n                    String d=cd.getCanonicalPath();\n                    if (!done.contains(d))\n                    {\n                        done.add(d);\n                        boolean added=_classpath.addComponent(d);\n                        if (DEBUG)\n                            System.err.println((added?\"  CLASSPATH+=\":\"  !\")+d);\n                    }\n                }\n                else if (subject.toLowerCase().endsWith(\".xml\"))\n                {\n                    // Config file\n                    File f=new File(file);\n                    if (f.exists())\n                        _xml.add(f.getCanonicalPath());\n                    if (DEBUG)\n                        System.err.println(\"  ARGS+=\"+f);\n                }\n                else if (subject.toLowerCase().endsWith(\".class\"))\n                {\n                    // Class\n                    String cn=expand(subject.substring(0,subject.length()-6));\n                    if (cn!=null&&cn.length()>0)\n                    {\n                        if (DEBUG)\n                            System.err.println(\"  CLASS=\"+cn);\n                        _classname=cn;\n                    }\n                }\n                else if (subject.toLowerCase().endsWith(\".path\"))\n                {\n                    //classpath (jetty.class.path?) to add to runtime classpath\n                    String cn=expand(subject.substring(0,subject.length()-5));\n                    if (cn!=null&&cn.length()>0)\n                    {\n                        if (DEBUG)\n                            System.err.println(\"  PATH=\"+cn);\n                        _classpath.addClasspath(cn);\n                    }                  \n                }\n                else\n                {\n                    // single JAR file\n                    File f=new File(file);\n                    if(f.exists())\n                    {\n                        String d=f.getCanonicalPath();\n                        if (!done.contains(d))\n                        {\n                            done.add(d);\n                            boolean added=_classpath.addComponent(d);\n                            if (!added)\n                            {\n                                added=_classpath.addClasspath(expand(subject));\n                                if (DEBUG)\n                                    System.err.println((added?\"  CLASSPATH+=\":\"  !\")+d);\n                            }\n                            else if (DEBUG)\n                                System.err.println((added?\"  CLASSPATH+=\":\"  !\")+d);\n                        }\n                    }\n                }\n            }\n            catch (Exception e)\n            {\n                System.err.println(\"on line: '\"+line+\"'\");\n                e.printStackTrace();\n            }\n        }\n\n        if (unsatisfied_options!=null && unsatisfied_options.size()>0)\n        {\n            System.err.println(\"Unresolved options: \"+unsatisfied_options);\n        }\n    }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"String expand(String s)\n    {\n        int i1=0;\n        int i2=0;\n        while (s!=null)\n        {\n            i1=s.indexOf(\"$(\",i2);\n            if (i1<0)\n                break;\n            i2=s.indexOf(\")\",i1+2);\n            if (i2<0)\n                break;\n            String name=s.substring(i1+2,i2);\n            String property;\n            if (\"version\".equalsIgnoreCase(name))\n                property=_version;\n            else\n                property=System.getProperty(s.substring(i1+2,i2),\"\");\n            s=s.substring(0,i1)+property+s.substring(i2+1);\n        }\n        return s;\n    }","id":1187,"modified_method":"String expand(String s)\n    {\n        int i1=0;\n        int i2=0;\n        while (s!=null)\n        {\n            i1=s.indexOf(\"$(\",i2);\n            if (i1<0)\n                break;\n            i2=s.indexOf(\")\",i1+2);\n            if (i2<0)\n                break;\n            String name=s.substring(i1+2,i2);\n            String property=getSystemProperty(name);\n            s=s.substring(0,i1)+property+s.substring(i2+1);\n        }\n        \n        i1=0;\n        i2=0;\n        while (s!=null)\n        {\n            i1=s.indexOf(\"${\",i2);\n            if (i1<0)\n                break;\n            i2=s.indexOf(\"}\",i1+2);\n            if (i2<0)\n                break;\n            String name=s.substring(i1+2,i2);\n            String property=getProperty(name);\n            s=s.substring(0,i1)+property+s.substring(i2+1);\n        }\n        \n        return s;\n    }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private static void usage()\n    {\n        System.err.println(\"Usage: java [-DDEBUG] [-DSTART=start.config] [-DOPTIONS=opts] [-Dmain.class=org.MyMain] -jar start.jar [--help|--stop|--version|--info] [config ...]\");        \n        System.exit(1);\n    }","id":1188,"modified_method":"private static void usage()\n    {\n        System.err.println(\"Usage: java -jar start.jar [--help|--stop|--version] [config ...]\");        \n        System.exit(1);\n    }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private void addJars(File dir, Hashtable table, boolean recurse) throws IOException\n    {\n        File[] entries=dir.listFiles();\n\n        for (int i=0; entries!=null&&i<entries.length; i++)\n        {\n            File entry=entries[i];\n\n            if (entry.isDirectory()&&recurse)\n                addJars(entry,table,recurse);\n            else\n            {\n                String name=entry.getName().toLowerCase();\n                if (name.endsWith(\".jar\")||name.endsWith(\".zip\"))\n                {\n                    String jar=entry.getCanonicalPath();\n                    if (!table.containsKey(jar))\n                    {\n                        table.put(jar,jar);\n                        boolean added=_classpath.addComponent(jar);\n                        if (_debug)\n                            System.err.println((added?\"  CLASSPATH+=\":\"  !\")+jar);\n                    }\n                }\n            }\n        }\n    }","id":1189,"modified_method":"private void addJars(File dir, Set<String> table, boolean recurse) throws IOException\n    {\n        File[] entries=dir.listFiles();\n\n        for (int i=0; entries!=null&&i<entries.length; i++)\n        {\n            File entry=entries[i];\n\n            if (entry.isDirectory()&&recurse)\n                addJars(entry,table,recurse);\n            else\n            {\n                String name=entry.getName().toLowerCase();\n                if (name.endsWith(\".jar\")||name.endsWith(\".zip\"))\n                {\n                    String jar=entry.getCanonicalPath();\n                    if (!table.contains(jar))\n                    {\n                        table.add(jar);\n                        boolean added=_classpath.addComponent(jar);\n                        if (DEBUG)\n                            System.err.println((added?\"  CLASSPATH+=\":\"  !\")+jar);\n                    }\n                }\n            }\n        }\n    }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public static void main(String[] args)\n    {\n        try\n        {\n            if (args.length>0&&args[0].equalsIgnoreCase(\"--help\"))\n            {\n                usage();\n            }\n            else if (args.length>0&&args[0].equalsIgnoreCase(\"--stop\"))\n            {\n                new Main().stop();\n            }\n            else if (args.length>0&&(args[0].equalsIgnoreCase(\"--version\")||args[0].equalsIgnoreCase(\"--info\")))\n            {\n                String[] nargs=new String[args.length-1];\n                System.arraycopy(args,1,nargs,0,nargs.length);\n                Main main=new Main();\n                main._showVersions=true;\n                main.start(nargs);\n            }\n            else\n            {\n                new Main().start(args);\n            }\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n            usage();\n        }\n    }","id":1190,"modified_method":"public static void main(String[] args)\n    {\n        try\n        {\n            Main main=new Main();\n            List<String> arguments = new ArrayList<String>(Arrays.asList(args));\n            \n            for (int i=0; i<arguments.size(); i++)\n            {\n                String arg=arguments.get(i);\n                if (arg.equalsIgnoreCase(\"--help\"))\n                {\n                    usage();\n                }\n                \n                if (arg.equalsIgnoreCase(\"--stop\"))\n                {\n                    int port = Integer.parseInt(main.getProperty(\"STOP.PORT\",\"-1\"));\n                    String key = main.getProperty(\"STOP.KEY\", null);\n                    main.stop(port,key);\n                    return;\n                }\n                \n                if (arg.equalsIgnoreCase(\"--version\")||arg.equalsIgnoreCase(\"-v\")||arg.equalsIgnoreCase(\"-info\"))\n                {\n                    arguments.remove(i--);\n                    main._showVersions=true;\n                }\n\n                if (arg.indexOf('=')>=0)\n                {\n                    arguments.remove(i--);\n                    String[] assign=arg.split(\"=\",2);\n                    \n                    if (assign.length==2)\n                        main.setProperty(assign[0],assign[1]);\n                    else\n                        main.setProperty(assign[0],null);\n                }\n            }\n            \n            DEBUG=Boolean.parseBoolean(main.getProperty(\"DEBUG\",\"false\"));\n            main.start(arguments.toArray(new String[arguments.size()]));        \n            \n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n            usage();\n        }\n    }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void invokeMain(ClassLoader classloader, String classname, String[] args) throws IllegalAccessException, InvocationTargetException,\n            NoSuchMethodException, ClassNotFoundException\n    {\n        Class invoked_class=null;\n        \n        try\n        {\n            invoked_class=classloader.loadClass(classname);\n        }\n        catch(ClassNotFoundException e)\n        {\n            //ignored\n        }\n        \n        if (_debug || _showVersions || invoked_class==null)\n        {\n            if (invoked_class==null)\n                System.err.println(\"ClassNotFound: \"+classname);\n            else\n                System.err.println(classname+\" \"+invoked_class.getPackage().getImplementationVersion());\n            File[] elements = _classpath.getElements();\n            for (int i=0;i<elements.length;i++)\n                System.err.println(\"  \"+elements[i].getAbsolutePath());\n            if (_showVersions || invoked_class==null)\n            {\n                List opts = new ArrayList(_options);\n                Collections.sort(opts);\n                System.err.println(\"OPTIONS: \"+opts);\n\t        usage();\n            }\n        }\n\n        Class[] method_param_types=new Class[1];\n        method_param_types[0]=args.getClass();\n        Method main=null;\n        main=invoked_class.getDeclaredMethod(\"main\",method_param_types);\n        Object[] method_params=new Object[1];\n        method_params[0]=args;\n\n        main.invoke(null,method_params);\n    }","id":1191,"modified_method":"public void invokeMain(ClassLoader classloader, String classname, String[] args) throws IllegalAccessException, InvocationTargetException,\n            NoSuchMethodException, ClassNotFoundException\n    {\n        Class invoked_class=null;\n        \n        try\n        {\n            invoked_class=classloader.loadClass(classname);\n        }\n        catch(ClassNotFoundException e)\n        {\n            //ignored\n        }\n        \n        if (DEBUG || _showVersions || invoked_class==null)\n        {\n            if (invoked_class==null)\n                System.err.println(\"ClassNotFound: \"+classname);\n            else\n                System.err.println(classname+\" \"+invoked_class.getPackage().getImplementationVersion());\n            File[] elements = _classpath.getElements();\n            for (int i=0;i<elements.length;i++)\n                System.err.println(\"  \"+elements[i].getAbsolutePath());\n            if (_showVersions || invoked_class==null)\n            {\n                System.err.println(\"OPTIONS: \"+_options);\n\t        usage();\n            }\n        }\n\n        Class[] method_param_types=new Class[1];\n        method_param_types[0]=args.getClass();\n        Method main=null;\n        main=invoked_class.getDeclaredMethod(\"main\",method_param_types);\n        Object[] method_params=new Object[1];\n        method_params[0]=args;\n\n        main.invoke(null,method_params);\n    }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"boolean isAvailable(String classname)\n    {\n        try\n        {\n            Class.forName(classname);\n            return true;\n        }\n        catch (NoClassDefFoundError e)\n        {\n            if (_debug)\n                System.err.println(e);\n        }\n        catch (ClassNotFoundException e)\n        {            \n            if (_debug)\n                System.err.println(e);\n        }\n        ClassLoader loader=_classpath.getClassLoader();\n        try\n        {\n            loader.loadClass(classname);\n            return true;\n        }\n        catch (NoClassDefFoundError e)\n        {\n            if (_debug)\n                System.err.println(e);\n        }\n        catch (ClassNotFoundException e)\n        {\n            if (_debug)\n                System.err.println(e);\n        }\n        return false;\n    }","id":1192,"modified_method":"boolean isAvailable(String classname)\n    {\n        try\n        {\n            Class.forName(classname);\n            return true;\n        }\n        catch (NoClassDefFoundError e)\n        {\n            if (DEBUG)\n                System.err.println(e);\n        }\n        catch (ClassNotFoundException e)\n        {            \n            if (DEBUG)\n                System.err.println(e);\n        }\n        ClassLoader loader=_classpath.getClassLoader();\n        try\n        {\n            loader.loadClass(classname);\n            return true;\n        }\n        catch (NoClassDefFoundError e)\n        {\n            if (DEBUG)\n                System.err.println(e);\n        }\n        catch (ClassNotFoundException e)\n        {\n            if (DEBUG)\n                System.err.println(e);\n        }\n        return false;\n    }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void run()\n    {\n        while (true)\n        {\n            Socket socket=null;\n            try{\n                socket=_socket.accept();\n                \n                LineNumberReader lin=\n                    new LineNumberReader(new InputStreamReader(socket.getInputStream()));\n                String key=lin.readLine();\n                if (!_key.equals(key))\n                    continue;\n                \n                String cmd=lin.readLine();\n                if (Main._debug) System.err.println(\"command=\"+cmd);\n                if (\"stop\".equals(cmd))\n                {\n                    try {socket.close();}catch(Exception e){e.printStackTrace();}\n                    try {_socket.close();}catch(Exception e){e.printStackTrace();}\n                    System.exit(0);\n                }\n                else if (\"status\".equals(cmd))\n                {\n                    socket.getOutputStream().write(\"OK\\r\\n\".getBytes());\n                    socket.getOutputStream().flush();\n                }\n            }\n            catch(Exception e)\n            {\n                if (Main._debug)\n                    e.printStackTrace();\n                else\n                    System.err.println(e.toString());\n            }\n            finally\n            {\n                if (socket!=null)\n                {\n                    try{socket.close();}catch(Exception e){}\n                }\n                socket=null;\n            }\n        }\n    }","id":1193,"modified_method":"public void run()\n    {\n        while (true)\n        {\n            Socket socket=null;\n            try{\n                socket=_socket.accept();\n                \n                LineNumberReader lin=\n                    new LineNumberReader(new InputStreamReader(socket.getInputStream()));\n                String key=lin.readLine();\n                if (!_key.equals(key))\n                    continue;\n                \n                String cmd=lin.readLine();\n                if (Main.DEBUG) System.err.println(\"command=\"+cmd);\n                if (\"stop\".equals(cmd))\n                {\n                    try {socket.close();}catch(Exception e){e.printStackTrace();}\n                    try {_socket.close();}catch(Exception e){e.printStackTrace();}\n                    System.exit(0);\n                }\n                else if (\"status\".equals(cmd))\n                {\n                    socket.getOutputStream().write(\"OK\\r\\n\".getBytes());\n                    socket.getOutputStream().flush();\n                }\n            }\n            catch(Exception e)\n            {\n                if (Main.DEBUG)\n                    e.printStackTrace();\n                else\n                    System.err.println(e.toString());\n            }\n            finally\n            {\n                if (socket!=null)\n                {\n                    try{socket.close();}catch(Exception e){}\n                }\n                socket=null;\n            }\n        }\n    }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n         * Stop all Servers in list.\n         */\n        public void run()\n        {\n            setName(\"Shutdown\");\n            Log.info(\"Shutdown hook executing\");\n            Iterator it = servers.iterator();\n            while (it.hasNext())\n            {\n                Server svr = (Server) it.next();\n                if (svr == null)\n                    continue;\n                try\n                {\n                    svr.stop();\n                }\n                catch (Exception e)\n                {\n                    Log.warn(e);\n                }\n                Log.info(\"Shutdown hook complete\");\n\n                // Try to avoid JVM crash\n                try\n                {\n                    Thread.sleep(1000);\n                }\n                catch (Exception e)\n                {\n                    Log.warn(e);\n                }\n            }\n        }","id":1194,"modified_method":"/**\n         * Stop all Servers in list.\n         */\n        public void run()\n        {\n            setName(\"Shutdown\");\n            Log.info(\"Shutdown hook executing\");\n            Iterator it = servers.iterator();\n            while (it.hasNext())\n            {\n                Server svr = (Server) it.next();\n                if (svr == null || !svr.getStopAtShutdown())\n                    continue;\n                try\n                {\n                    svr.stop();\n                }\n                catch (Exception e)\n                {\n                    Log.warn(e);\n                }\n                Log.info(\"Shutdown hook complete\");\n\n                // Try to avoid JVM crash\n                try\n                {\n                    Thread.sleep(1000);\n                }\n                catch (Exception e)\n                {\n                    Log.warn(e);\n                }\n            }\n        }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n         * Hooks this thread for shutdown.\n         * \n         * @see java.lang.Runtime#addShutdownHook(java.lang.Thread)\n         */\n        private void createShutdownHook()\n        {\n            if (!Boolean.getBoolean(\"JETTY_NO_SHUTDOWN_HOOK\") && !hooked)\n            {\n                try\n                {\n                    Method shutdownHook = java.lang.Runtime.class.getMethod(\"addShutdownHook\", new Class[]\n                    { java.lang.Thread.class});\n                    shutdownHook.invoke(Runtime.getRuntime(), new Object[]\n                    { this});\n                    this.hooked = true;\n                }\n                catch (Exception e)\n                {\n                    if (Log.isDebugEnabled())\n                        Log.debug(\"No shutdown hook in JVM \", e);\n                }\n            }\n        }","id":1195,"modified_method":"/**\n         * Hooks this thread for shutdown.\n         * \n         * @see java.lang.Runtime#addShutdownHook(java.lang.Thread)\n         */\n        private void createShutdownHook()\n        {\n            if (!hooked)\n            {\n                try\n                {\n                    Method shutdownHook = java.lang.Runtime.class.getMethod(\"addShutdownHook\", new Class[]\n                    { java.lang.Thread.class});\n                    shutdownHook.invoke(Runtime.getRuntime(), new Object[]\n                    { this});\n                    this.hooked = true;\n                }\n                catch (Exception e)\n                {\n                    if (Log.isDebugEnabled())\n                        Log.debug(\"No shutdown hook in JVM \", e);\n                }\n            }\n        }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n         * Clear list of Servers.\n         */\n        public void clear()\n        {\n            createShutdownHook();\n            this.servers.clear();\n        }","id":1196,"modified_method":"/**\n         * Clear list of Servers.\n         */\n        public void clear()\n        {\n            this.servers.clear();\n        }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n         * Add Server to servers list.\n         */\n        public boolean add(Server server)\n        {\n            createShutdownHook();\n            return this.servers.add(server);\n        }","id":1197,"modified_method":"/**\n         * Add Server to servers list.\n         */\n        public boolean add(Server server)\n        {\n            if (server.getStopAtShutdown())\n                createShutdownHook();\n            return this.servers.add(server);\n        }","commit_id":"f9a8e45c9c79076228e30024319c6fb0eb4213d1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private String dom(File f) {\r\n        String s = f.toString().substring(this.cachePath.toString().length() + 1);\r\n        int p = s.indexOf(\"/\");\r\n        if (p < 0) p = s.indexOf(\"\\\\\");\r\n        if (p < 0) return null;\r\n        return s.substring(0, p);\r\n    }","id":1198,"modified_method":"private String dom(File f) {\r\n        String s = f.toString().substring(this.cachePath.toString().length() + 1);\r\n        int p = s.indexOf(\"/\");\r\n        if (p < 0) p = s.indexOf(\"\\\\\");\r\n        if (p < 0) return null;\r\n        // remove the protokoll\r\n        s = s.substring(p + 1);\r\n        p = s.indexOf(\"/\");\r\n        if (p < 0) p = s.indexOf(\"\\\\\");\r\n        if (p < 0) return null;\r\n        String prefix = new String(\"\");\r\n        if (s.startsWith(\"www\")) prefix = new String(\"www.\");\r\n        // remove the www|other|ip directory\r\n        s = s.substring(p + 1);\r\n        p = s.indexOf(\"/\");\r\n        if (p < 0) p = s.indexOf(\"\\\\\");\r\n        if (p < 0) return null;\r\n        int e = s.indexOf(\"!\");\r\n        if ((e > 0) && (e < p)) p = e; // strip port\r\n        return prefix + s.substring(0, p);\r\n    }","commit_id":"0b73f2b1322943910d5454460ef557daad95c0fb","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void testRunningEclipsePlugin()\n        throws Exception\n    {\n        File basedir = runWithProject( \"eclipse:eclipse\" );\n\n        assertFileExists( new File( basedir, \".classpath\" ) );\n\n        assertFileExists( new File( basedir, \".project\" ) );\n    }","id":1199,"modified_method":"public void testRunningEclipsePlugin()\n        throws Exception\n    {\n        File basedir = runWithProject( \"org.apache.maven.plugins:maven-eclipse-plugin:2.3:eclipse\" );\n\n        assertFileExists( new File( basedir, \".classpath\" ) );\n\n        assertFileExists( new File( basedir, \".project\" ) );\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testRunningScmPlugin()\n        throws Exception\n    {\n        File svnDirectory = new File( getBasedir(), \".svn\" );\n\n        if ( svnDirectory.exists() )\n        {\n            Properties p = new Properties();\n\n            File outputDirectory = new File( getBasedir(), \"target/scm.diff\" );\n\n            p.setProperty( \"outputDirectory\", outputDirectory.getCanonicalPath() );\n\n            p.setProperty( \"connectionUrl\", \"scm:svn:http://svn.apache.org/repos/asf/maven/components/trunk/maven-embedder\" );\n\n            File basedir = runWithProject( \"scm:diff\", p );\n        }\n    }","id":1200,"modified_method":"public void testRunningScmPlugin()\n        throws Exception\n    {\n        File svnDirectory = new File( getBasedir(), \".svn\" );\n\n        if ( svnDirectory.exists() )\n        {\n            Properties p = new Properties();\n\n            File outputDirectory = new File( getBasedir(), \"target/scm.diff\" );\n\n            p.setProperty( \"outputDirectory\", outputDirectory.getCanonicalPath() );\n\n            p.setProperty( \"connectionUrl\", \"scm:svn:http://svn.apache.org/repos/asf/maven/components/trunk/maven-embedder\" );\n\n            File basedir = runWithProject( \"org.apache.maven.plugins:maven-scm-plugin:1.0:diff\", p );\n        }\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportProjectCollision()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-collision\" );\n\n        reporter.reportProjectCollision( null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1201,"modified_method":"public void testReportProjectCollision()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-collision\" );\n\n        reporter.reportProjectCollision( null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportDuplicateAttachmentException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"duplicated-attachments\" );\n\n        File plugin = new File( projectDir, \"plugin\" );\n        File project = new File( projectDir, \"project\" );\n\n        buildTestAccessory( plugin );\n\n        Settings settings = new Settings();\n        settings.addPluginGroup( \"org.apache.maven.errortest\" );\n\n        reporter.reportDuplicateAttachmentException( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setSettings( settings )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"duplicated-attachments:test\"\n                                                                          } ) );\n\n        MavenExecutionResult result = maven.execute( request );\n\n        assertTrue( result.hasExceptions() );\n        reportExceptions( result, project );\n\n        reporterCtl.verify();\n    }","id":1202,"modified_method":"public void testReportDuplicateAttachmentException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"duplicated-attachments\" );\n\n        File plugin = new File( projectDir, \"plugin\" );\n        File project = new File( projectDir, \"project\" );\n\n        buildTestAccessory( plugin );\n\n        Settings settings = new Settings();\n        settings.addPluginGroup( \"org.apache.maven.errortest\" );\n\n        reporter.reportDuplicateAttachmentException( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( project, reporter ).setSettings( settings ).setGoals(\n                                                                                 Arrays.asList( \"duplicated-attachments:test\" ) );\n\n        MavenExecutionResult result = maven.execute( request );\n\n        assertTrue( result.hasExceptions() );\n        reportExceptions( result, project );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportInvalidPluginForDirectInvocation()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"missing-direct-invoke-mojo\" );\n\n        File plugin = new File( projectDir, \"plugin\" );\n\n        buildTestAccessory( plugin );\n\n        Settings settings = new Settings();\n        settings.addPluginGroup( \"org.apache.maven.errortest\" );\n\n        reporter.reportInvalidPluginForDirectInvocation( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setSettings( settings )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"missing-direct-invoke-mojo:test\"\n                                                                          } ) );\n\n        MavenExecutionResult result = maven.execute( request );\n\n        assertTrue( result.hasExceptions() );\n        reportExceptions( result, projectDir );\n\n        reporterCtl.verify();\n    }","id":1203,"modified_method":"public void testReportInvalidPluginForDirectInvocation()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"missing-direct-invoke-mojo\" );\n\n        File plugin = new File( projectDir, \"plugin\" );\n\n        buildTestAccessory( plugin );\n\n        Settings settings = new Settings();\n        settings.addPluginGroup( \"org.apache.maven.errortest\" );\n\n        reporter.reportInvalidPluginForDirectInvocation( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( projectDir, reporter ).setSettings( settings ).setGoals(\n                                                                                    Arrays.asList( \"missing-direct-invoke-mojo:test\" ) );\n\n        MavenExecutionResult result = maven.execute( request );\n\n        assertTrue( result.hasExceptions() );\n        reportExceptions( result, projectDir );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorManagingRealmForExtension()\n        throws IOException\n    {\n        if ( !checkOnline() )\n        {\n            return;\n        }\n\n        File projectDir = prepareProjectDir( \"ext-realm-error\" );\n\n        buildTestAccessory( new File( projectDir, \"ext\" ) );\n\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportErrorManagingRealmForExtension( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1204,"modified_method":"public void testReportErrorManagingRealmForExtension()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"ext-realm-error\" );\n\n        buildTestAccessory( new File( projectDir, \"ext\" ) );\n\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportErrorManagingRealmForExtension( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( project, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorInterpolatingModel_UsingModelInstance()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"interp-from-model\" );\n\n        reporter.reportErrorInterpolatingModel( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"compile\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1205,"modified_method":"public void testReportErrorInterpolatingModel_UsingModelInstance()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"interp-from-model\" );\n\n        reporter.reportErrorInterpolatingModel( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"compile\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorCreatingArtifactRepository()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"repo-creation-err\" );\n\n        reporter.reportErrorCreatingArtifactRepository( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"compile\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1206,"modified_method":"public void testReportErrorCreatingArtifactRepository()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"repo-creation-err\" );\n\n        reporter.reportErrorCreatingArtifactRepository( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"compile\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorFormulatingBuildPlan()\n        throws IOException\n    {\n        if ( !checkOnline() )\n        {\n            return;\n        }\n\n        File projectDir = prepareProjectDir( \"bad-build-plan\" );\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        File basedir = new File( projectDir, \"project\" );\n\n        reporter.reportErrorFormulatingBuildPlan( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( basedir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"org.apache.maven.errortest:bad-build-plan-maven-plugin:1:test\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1207,"modified_method":"public void testReportErrorFormulatingBuildPlan()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-build-plan\" );\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        File basedir = new File( projectDir, \"project\" );\n\n        reporter.reportErrorFormulatingBuildPlan( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( basedir, reporter ).setGoals(\n                                                         Arrays.asList( \"org.apache.maven.errortest:bad-build-plan-maven-plugin:1:test\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportBadNonDependencyProjectArtifactVersion()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-non-dep-version\" );\n\n        reporter.reportBadNonDependencyProjectArtifactVersion( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1208,"modified_method":"public void testReportBadNonDependencyProjectArtifactVersion()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-non-dep-version\" );\n\n        reporter.reportBadNonDependencyProjectArtifactVersion( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportIncompatibleMavenVersionForExtensionPlugin()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-ext-plugin-maven-ver\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportIncompatibleMavenVersionForExtensionPlugin( null,\n                                                                   null,\n                                                                   null,\n                                                                   null,\n                                                                   null,\n                                                                   null,\n                                                                   null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setShowErrors( true )\n                                                                          .setLocalRepositoryPath( localRepo )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1209,"modified_method":"public void testReportIncompatibleMavenVersionForExtensionPlugin()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-ext-plugin-maven-ver\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportIncompatibleMavenVersionForExtensionPlugin( null,\n                                                                   null,\n                                                                   null,\n                                                                   null,\n                                                                   null,\n                                                                   null,\n                                                                   null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( project, reporter ).setLocalRepositoryPath( localRepo ).setGoals(\n                                                                                             Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportInvalidDependencyVersionInExtensionPluginPOM()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-ext-plugin-dep-ver\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        // TODO: Verify that the actual error reported is the one that identified the failing project as an extension POM.\n        reporter.reportBadDependencyVersion( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporter.reportInvalidDependencyVersionInExtensionPluginPOM( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setShowErrors( true )\n                                                                          .setLocalRepositoryPath( localRepo )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1210,"modified_method":"public void testReportInvalidDependencyVersionInExtensionPluginPOM()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-ext-plugin-dep-ver\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        // TODO: Verify that the actual error reported is the one that identified the failing project as an extension POM.\n        reporter.reportBadDependencyVersion( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporter.reportInvalidDependencyVersionInExtensionPluginPOM( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( project, reporter ).setLocalRepositoryPath( localRepo ).setGoals(\n                                                                                             Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportExtensionPluginVersionNotFound()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"ext-plugin-version-err\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        Settings settings = new Settings();\n        settings.setOffline( true );\n        settings.setLocalRepository( localRepo.getAbsolutePath() );\n\n        reporter.reportExtensionPluginVersionNotFound( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setShowErrors( true )\n                                                                          .setSettings( settings )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1211,"modified_method":"public void testReportExtensionPluginVersionNotFound()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"ext-plugin-version-err\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        Settings settings = new Settings();\n        settings.setOffline( true );\n        settings.setLocalRepository( localRepo.getAbsolutePath() );\n\n        reporter.reportExtensionPluginVersionNotFound( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( project, reporter ).setSettings( settings ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportNoGoalsSpecifiedException()\n    {\n        reporter.reportNoGoalsSpecifiedException( null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Collections.EMPTY_LIST );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1212,"modified_method":"public void testReportNoGoalsSpecifiedException()\n    {\n        reporter.reportNoGoalsSpecifiedException( null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( reporter ).setGoals( Collections.EMPTY_LIST );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportBadDependencyVersion()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-dep-version\" );\n\n        reporter.reportBadDependencyVersion( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"compile\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1213,"modified_method":"public void testReportBadDependencyVersion()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-dep-version\" );\n\n        reporter.reportBadDependencyVersion( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"compile\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"private void reportExceptions( MavenExecutionResult result,\n                                   File basedir,\n                                   boolean expectExceptions )\n    {\n        assertTrue( !expectExceptions || result.hasExceptions() );\n\n        StringWriter writer = new StringWriter();\n        PrintWriter pWriter = new PrintWriter( writer );\n\n        writer.write( \"Failed to build project in: \" );\n        writer.write( basedir.getPath() );\n        writer.write( \"\\nEncountered the following errors:\" );\n\n        for ( Iterator it = result.getExceptions().iterator(); it.hasNext(); )\n        {\n            Throwable error = (Throwable) it.next();\n            writer.write( \"\\n\\n\" );\n            error.printStackTrace( pWriter );\n        }\n\n        if ( expectExceptions )\n        {\n            fail( writer.toString() );\n        }\n        else\n        {\n            System.out.println( writer.toString() );\n        }\n    }","id":1214,"modified_method":"private void reportExceptions( MavenExecutionResult result,\n                                   File basedir,\n                                   boolean expectExceptions )\n    {\n        assertTrue( !expectExceptions || result.hasExceptions() );\n\n        StringWriter writer = new StringWriter();\n        PrintWriter pWriter = new PrintWriter( writer );\n\n        writer.write( \"Failed to build project in: \" );\n        writer.write( basedir.getPath() );\n        writer.write( \"\\nEncountered the following errors:\" );\n\n        for ( Throwable error : (Collection<Throwable>) result.getExceptions() )\n        {\n            writer.write( \"\\n\\n\" );\n            error.printStackTrace( pWriter );\n        }\n\n        if ( expectExceptions )\n        {\n            fail( writer.toString() );\n        }\n        else\n        {\n            System.out.println( writer.toString() );\n        }\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportMissingModulePom()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"missing-module-pom\" );\n\n        reporter.reportMissingModulePom( null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1215,"modified_method":"public void testReportMissingModulePom()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"missing-module-pom\" );\n\n        reporter.reportMissingModulePom( null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportAttemptToOverrideUneditableMojoParameter()\n        throws IOException\n    {\n        if ( !checkOnline() )\n        {\n            return;\n        }\n\n        File projectDir = prepareProjectDir( \"config-rdonly-mojo-param\");\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        File basedir = new File( projectDir, \"project\" );\n\n        reporter.reportAttemptToOverrideUneditableMojoParameter( null,\n                                                                 null,\n                                                                 null,\n                                                                 null,\n                                                                 null,\n                                                                 null,\n                                                                 null,\n                                                                 null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( basedir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1216,"modified_method":"public void testReportAttemptToOverrideUneditableMojoParameter()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"config-rdonly-mojo-param\");\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        File basedir = new File( projectDir, \"project\" );\n\n        reporter.reportAttemptToOverrideUneditableMojoParameter( null,\n                                                                 null,\n                                                                 null,\n                                                                 null,\n                                                                 null,\n                                                                 null,\n                                                                 null,\n                                                                 null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( basedir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorConfiguringExtensionPluginRealm()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"ext-plugin-realm-error\" );\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportErrorConfiguringExtensionPluginRealm( null,\n                                                             null,\n                                                             null,\n                                                             null,\n                                                             (PluginManagerException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1217,"modified_method":"public void testReportErrorConfiguringExtensionPluginRealm()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"ext-plugin-realm-error\" );\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportErrorConfiguringExtensionPluginRealm( null,\n                                                             null,\n                                                             null,\n                                                             null,\n                                                             (PluginManagerException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( project, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorLoadingExternalProfilesFromFile_IOException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"load-extern-profiles-ioex\" );\n\n        reporter.reportErrorLoadingExternalProfilesFromFile( null, null, null, (IOException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1218,"modified_method":"public void testReportErrorLoadingExternalProfilesFromFile_IOException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"load-extern-profiles-ioex\" );\n\n        reporter.reportErrorLoadingExternalProfilesFromFile( null, null, null, (IOException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportProjectValidationFailure()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-validation\" );\n\n        reporter.reportProjectValidationFailure( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1219,"modified_method":"public void testReportProjectValidationFailure()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-validation\" );\n\n        reporter.reportProjectValidationFailure( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorInterpolatingModel_UsingProjectInstance()\n        throws IOException\n    {\n        if ( !checkOnline() )\n        {\n            return;\n        }\n\n        File projectDir = prepareProjectDir( \"interp-from-project\");\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportErrorInterpolatingModel( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setLocalRepositoryPath( localRepo )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"compile\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1220,"modified_method":"public void testReportErrorInterpolatingModel_UsingProjectInstance()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"interp-from-project\");\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportErrorInterpolatingModel( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( project, reporter ).setGoals( Arrays.asList( \"compile\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportAggregatedMojoFailureException()\n        throws IOException\n    {\n        if ( !checkOnline() )\n        {\n            return;\n        }\n\n        File projectDir = prepareProjectDir( \"aggregate-mojo-failure\");\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        File basedir = new File( projectDir, \"project\" );\n\n        reporter.reportAggregatedMojoFailureException( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( basedir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"org.apache.maven.errortest:aggregate-mojo-failure-maven-plugin:1:test\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1221,"modified_method":"public void testReportAggregatedMojoFailureException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"aggregate-mojo-failure\");\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        File basedir = new File( projectDir, \"project\" );\n\n        reporter.reportAggregatedMojoFailureException( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( basedir, reporter ).setGoals(\n                                                         Arrays.asList( \"org.apache.maven.errortest:aggregate-mojo-failure-maven-plugin:1:test\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorLoadingExternalProfilesFromFile_XmlPullParserException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"load-extern-profiles-xex\" );\n\n        reporter.reportErrorLoadingExternalProfilesFromFile( null,\n                                                             null,\n                                                             null,\n                                                             (XmlPullParserException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1222,"modified_method":"public void testReportErrorLoadingExternalProfilesFromFile_XmlPullParserException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"load-extern-profiles-xex\" );\n\n        reporter.reportErrorLoadingExternalProfilesFromFile( null,\n                                                             null,\n                                                             null,\n                                                             (XmlPullParserException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportMojoLookupError()\n        throws IOException\n    {\n        if ( !checkOnline() )\n        {\n            return;\n        }\n\n        File projectDir = prepareProjectDir( \"mojo-lookup-err\" );\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        reporter.reportMojoLookupError( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"org.apache.maven.errortest:mojo-lookup-err-maven-plugin:1:test\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1223,"modified_method":"public void testReportMojoLookupError()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"mojo-lookup-err\" );\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        reporter.reportMojoLookupError( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( projectDir, reporter ).setGoals(\n                                                Arrays.asList( \"org.apache.maven.errortest:mojo-lookup-err-maven-plugin:1:test\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportBadManagedDependencyVersion()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-mg-dep-version\" );\n\n        reporter.reportBadManagedDependencyVersion( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1224,"modified_method":"public void testReportBadManagedDependencyVersion()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-mg-dep-version\" );\n\n        reporter.reportBadManagedDependencyVersion( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorLoadingPlugin()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"err-loading-plugin\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        Settings settings = new Settings();\n        settings.setOffline( true );\n        settings.setLocalRepository( localRepo.getAbsolutePath() );\n\n        reporter.reportErrorLoadingPlugin( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable( MockControl.ONE_OR_MORE );\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setSettings( settings )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"org.apache.maven.errortest:err-loading-plugin-maven-plugin:1:test\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1225,"modified_method":"public void testReportErrorLoadingPlugin()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"err-loading-plugin\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        Settings settings = new Settings();\n        settings.setOffline( true );\n        settings.setLocalRepository( localRepo.getAbsolutePath() );\n\n        reporter.reportErrorLoadingPlugin( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable( MockControl.ONE_OR_MORE );\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( project, reporter ).setSettings( settings ).setGoals(\n                                                                                 Arrays.asList( \"org.apache.maven.errortest:err-loading-plugin-maven-plugin:1:test\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"private void buildTestAccessory( File basedir )\n    {\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( basedir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( new DummyCoreErrorReporter() )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"clean\",\n                                                                              \"install\"\n                                                                          } ) );\n\n        MavenExecutionResult result = maven.execute( request );\n\n        if ( result.hasExceptions() )\n        {\n            reportExceptions( result, basedir, true );\n        }\n    }","id":1226,"modified_method":"private void buildTestAccessory( File basedir )\n    {\n        MavenExecutionRequest request =\n            createRequest( basedir, new DummyCoreErrorReporter() ).setGoals( Arrays.asList( \"clean\", \"install\" ) );\n\n        MavenExecutionResult result = maven.execute( request );\n\n        if ( result.hasExceptions() )\n        {\n            reportExceptions( result, basedir, true );\n        }\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorResolvingExtensionDependencies()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"ext-deps-resolve-err\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportErrorResolvingExtensionDependencies( null, null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setLocalRepositoryPath( localRepo )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1227,"modified_method":"public void testReportErrorResolvingExtensionDependencies()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"ext-deps-resolve-err\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportErrorResolvingExtensionDependencies( null, null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( project, reporter ).setLocalRepositoryPath( localRepo ).setGoals(\n                                                                                             Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorCreatingDeploymentArtifactRepository()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"deploy-repo-creation-err\" );\n\n        reporter.reportErrorCreatingDeploymentArtifactRepository( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"compile\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1228,"modified_method":"public void testReportErrorCreatingDeploymentArtifactRepository()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"deploy-repo-creation-err\" );\n\n        reporter.reportErrorCreatingDeploymentArtifactRepository( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"compile\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportActivatorLookupError()\n        throws IOException\n    {\n        if ( !checkOnline() )\n        {\n            return;\n        }\n\n        File projectDir = prepareProjectDir( \"profile-activator-lookup-err\" );\n\n        buildTestAccessory( new File( projectDir, \"ext\" ) );\n\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportActivatorLookupError( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1229,"modified_method":"public void testReportActivatorLookupError()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"profile-activator-lookup-err\" );\n\n        buildTestAccessory( new File( projectDir, \"ext\" ) );\n\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportActivatorLookupError( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( project, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportProjectCycle()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-cycle\" );\n\n        reporter.reportProjectCycle( null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1230,"modified_method":"public void testReportProjectCycle()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-cycle\" );\n\n        reporter.reportProjectCycle( null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportProjectDependenciesNotFound()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-dep-missing\" );\n\n        reporter.reportProjectDependenciesNotFound( null,\n                                                    null,\n                                                    (MultipleArtifactsNotFoundException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"compile\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1231,"modified_method":"public void testReportProjectDependenciesNotFound()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-dep-missing\" );\n\n        reporter.reportProjectDependenciesNotFound( null,\n                                                    null,\n                                                    (MultipleArtifactsNotFoundException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"compile\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportMissingRequiredMojoParameter()\n        throws IOException\n    {\n        if ( !checkOnline() )\n        {\n            return;\n        }\n\n        File projectDir = prepareProjectDir( \"missing-req-mojo-param\" );\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        File basedir = new File( projectDir, \"project\" );\n\n        reporter.reportMissingRequiredMojoParameter( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( basedir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"org.apache.maven.errortest:missing-req-mojo-param-maven-plugin:1:test\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1232,"modified_method":"public void testReportMissingRequiredMojoParameter()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"missing-req-mojo-param\" );\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        File basedir = new File( projectDir, \"project\" );\n\n        reporter.reportMissingRequiredMojoParameter( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( basedir, reporter ).setGoals(\n                                                Arrays.asList( \"org.apache.maven.errortest:missing-req-mojo-param-maven-plugin:1:test\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorResolvingExtensionDirectDependencies()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-ext-direct-deps\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        // TODO: Verify that the actual error reported is the one that identified the failing project as an extension POM.\n        reporter.reportBadDependencyVersion( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporter.reportErrorResolvingExtensionDirectDependencies( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setLocalRepositoryPath( localRepo )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1233,"modified_method":"public void testReportErrorResolvingExtensionDirectDependencies()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-ext-direct-deps\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        // TODO: Verify that the actual error reported is the one that identified the failing project as an extension POM.\n        reporter.reportBadDependencyVersion( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporter.reportErrorResolvingExtensionDirectDependencies( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( project, reporter ).setLocalRepositoryPath( localRepo ).setGoals(\n                                                                                             Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorParsingProjectModel_XmlPullParserException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-parse-xex\" );\n\n        reporter.reportErrorParsingProjectModel( null, null, (XmlPullParserException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1234,"modified_method":"public void testReportErrorParsingProjectModel_XmlPullParserException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-parse-xex\" );\n\n        reporter.reportErrorParsingProjectModel( null, null, (XmlPullParserException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportLifecycleLoaderErrorWhileValidatingTask()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"task-lifecycle-loader-err\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n\n        Settings settings = new Settings();\n        settings.setLocalRepository( localRepo.getAbsolutePath() );\n        settings.setOffline( true );\n\n        reporter.reportLifecycleLoaderErrorWhileValidatingTask( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setSettings( settings )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"invalid:test\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1235,"modified_method":"public void testReportLifecycleLoaderErrorWhileValidatingTask()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"task-lifecycle-loader-err\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n\n        Settings settings = new Settings();\n        settings.setLocalRepository( localRepo.getAbsolutePath() );\n        settings.setOffline( true );\n\n        reporter.reportLifecycleLoaderErrorWhileValidatingTask( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( projectDir, reporter ).setSettings( settings ).setGoals( Arrays.asList( \"invalid:test\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorParsingParentProjectModel_XmlPullParserException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"parent-parse-xex\");\n        File childDir = new File( projectDir, \"child\" );\n\n        reporter.reportErrorParsingParentProjectModel( null, null, (XmlPullParserException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( childDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1236,"modified_method":"public void testReportErrorParsingParentProjectModel_XmlPullParserException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"parent-parse-xex\");\n        File childDir = new File( projectDir, \"child\" );\n\n        reporter.reportErrorParsingParentProjectModel( null, null, (XmlPullParserException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( childDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportExtensionPluginArtifactNotFound()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"ext-plugin-artifact-missing\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportExtensionPluginArtifactNotFound( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setShowErrors( true )\n                                                                          .setLocalRepositoryPath( localRepo )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1237,"modified_method":"public void testReportExtensionPluginArtifactNotFound()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"ext-plugin-artifact-missing\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportExtensionPluginArtifactNotFound( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( project, reporter ).setLocalRepositoryPath( localRepo ).setGoals(\n                                                                                             Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportProjectMojoFailureException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-mojo-failure\" );\n\n        reporter.reportProjectMojoFailureException( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"clean\",\n                                                                              \"package\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1238,"modified_method":"public void testReportProjectMojoFailureException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-mojo-failure\" );\n\n        reporter.reportProjectMojoFailureException( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"clean\", \"package\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportUnresolvableArtifactWhileAddingExtensionPlugin()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"err-resolving-ext-plugin\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        Settings settings = new Settings();\n        settings.setOffline( true );\n        settings.setLocalRepository( localRepo.getAbsolutePath() );\n\n        reporter.reportUnresolvableArtifactWhileAddingExtensionPlugin( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setShowErrors( true )\n                                                                          .setSettings( settings )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1239,"modified_method":"public void testReportUnresolvableArtifactWhileAddingExtensionPlugin()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"err-resolving-ext-plugin\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        Settings settings = new Settings();\n        settings.setOffline( true );\n        settings.setLocalRepository( localRepo.getAbsolutePath() );\n\n        reporter.reportUnresolvableArtifactWhileAddingExtensionPlugin( null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( project, reporter ).setSettings( settings ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportProjectDependenciesUnresolvable()\n        throws IOException\n    {\n        if ( !checkOnline() )\n        {\n            return;\n        }\n\n        File projectDir = prepareProjectDir( \"err-resolving-project-dep\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportProjectDependenciesUnresolvable( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setShowErrors( true )\n                                                                          .setLocalRepositoryPath( localRepo )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"compile\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1240,"modified_method":"public void testReportProjectDependenciesUnresolvable()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"err-resolving-project-dep\" );\n        File project = new File( projectDir, \"project\" );\n\n        reporter.reportProjectDependenciesUnresolvable( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( project, reporter ).setGoals( Arrays.asList( \"compile\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorParsingParentProjectModel_IOException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"parent-parse-ioex\" );\n        File childDir = new File( projectDir, \"child\" );\n\n        reporter.reportErrorParsingParentProjectModel( null, null, (IOException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( childDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1241,"modified_method":"public void testReportErrorParsingParentProjectModel_IOException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"parent-parse-ioex\" );\n        File childDir = new File( projectDir, \"child\" );\n\n        reporter.reportErrorParsingParentProjectModel( null, null, (IOException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( childDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportInvalidPluginExecutionEnvironment()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-plugin-exec-env\" );\n\n        reporter.reportInvalidPluginExecutionEnvironment( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"compiler:compile\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1242,"modified_method":"public void testReportInvalidPluginExecutionEnvironment()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-plugin-exec-env\" );\n\n        reporter.reportInvalidPluginExecutionEnvironment( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( projectDir, reporter ).setGoals(\n                                                            Arrays.asList( \"org.apache.maven.plugins:maven-compiler-plugin:2.0.2:compile\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportInvalidMavenVersion()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-maven-version\" );\n\n        reporter.reportInvalidMavenVersion( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1243,"modified_method":"public void testReportInvalidMavenVersion()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"bad-maven-version\" );\n\n        reporter.reportInvalidMavenVersion( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportLifecycleSpecErrorWhileValidatingTask()\n    {\n        reporter.reportLifecycleSpecErrorWhileValidatingTask( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"name:of:invalid:direct:mojo:for:test\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1244,"modified_method":"public void testReportLifecycleSpecErrorWhileValidatingTask()\n    {\n        reporter.reportLifecycleSpecErrorWhileValidatingTask( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( reporter ).setGoals( Arrays.asList( \"name:of:invalid:direct:mojo:for:test\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorApplyingMojoConfiguration()\n        throws IOException\n    {\n        if ( !checkOnline() )\n        {\n            return;\n        }\n\n        File projectDir = prepareProjectDir( \"mojo-config-error\");\n        File plugin = new File( projectDir, \"plugin\" );\n        File project = new File( projectDir, \"project\" );\n\n        buildTestAccessory( plugin );\n\n        reporter.reportErrorApplyingMojoConfiguration( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( project )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"org.apache.maven.errortest:mojo-config-error-maven-plugin:1:test\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1245,"modified_method":"public void testReportErrorApplyingMojoConfiguration()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"mojo-config-error\");\n        File plugin = new File( projectDir, \"plugin\" );\n        File project = new File( projectDir, \"project\" );\n\n        buildTestAccessory( plugin );\n\n        reporter.reportErrorApplyingMojoConfiguration( null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( project, reporter ).setGoals(\n                                                         Arrays.asList( \"org.apache.maven.errortest:mojo-config-error-maven-plugin:1:test\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportParentPomArtifactNotFound()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"missing-parent-pom\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n\n        Settings settings = new Settings();\n        settings.setLocalRepository( localRepo.getAbsolutePath() );\n        settings.setOffline( true );\n\n        reporter.reportParentPomArtifactNotFound( null, null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setSettings( settings )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1246,"modified_method":"public void testReportParentPomArtifactNotFound()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"missing-parent-pom\" );\n        File localRepo = new File( projectDir, \"local-repo\" );\n\n        Settings settings = new Settings();\n        settings.setLocalRepository( localRepo.getAbsolutePath() );\n        settings.setOffline( true );\n\n        reporter.reportParentPomArtifactNotFound( null, null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( projectDir, reporter ).setSettings( settings ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportMojoExecutionException()\n        throws IOException\n    {\n        if ( !checkOnline() )\n        {\n            return;\n        }\n\n        File projectDir = prepareProjectDir( \"mojo-exec-err\" );\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        File basedir = new File( projectDir, \"project\" );\n\n        reporter.reportMojoExecutionException( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( basedir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"org.apache.maven.errortest:mojo-exec-err-maven-plugin:1:test\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1247,"modified_method":"public void testReportMojoExecutionException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"mojo-exec-err\" );\n\n        buildTestAccessory( new File( projectDir, \"plugin\" ) );\n\n        File basedir = new File( projectDir, \"project\" );\n\n        reporter.reportMojoExecutionException( null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( basedir, reporter ).setGoals(\n                                                Arrays.asList( \"org.apache.maven.errortest:mojo-exec-err-maven-plugin:1:test\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportActivatorError()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"profile-activator-err\" );\n\n        reporter.reportActivatorError( null, null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setBaseDirectory( projectDir )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1248,"modified_method":"public void testReportActivatorError()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"profile-activator-err\" );\n\n        reporter.reportActivatorError( null, null, null, null, null, null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = createRequest( projectDir, reporter ).setGoals( Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"public void testReportErrorParsingProjectModel_IOException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-parse-ioex\" );\n\n        reporter.reportErrorParsingProjectModel( null, null, (IOException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setPom( new File(\n                                                                                             projectDir,\n                                                                                             \"pom.xml\" ) )\n                                                                          .setShowErrors( true )\n                                                                          .setErrorReporter( reporter )\n                                                                          .setGoals( Arrays.asList( new String[] {\n                                                                              \"initialize\"\n                                                                          } ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","id":1249,"modified_method":"public void testReportErrorParsingProjectModel_IOException()\n        throws IOException\n    {\n        File projectDir = prepareProjectDir( \"project-parse-ioex\" );\n\n        reporter.reportErrorParsingProjectModel( null, null, (IOException) null );\n        reporterCtl.setMatcher( MockControl.ALWAYS_MATCHER );\n        reporterCtl.setVoidCallable();\n\n        reporterCtl.replay();\n\n        MavenExecutionRequest request =\n            createRequest( reporter ).setPom( new File( projectDir, \"pom.xml\" ) ).setGoals(\n                                                                                            Arrays.asList( \"initialize\" ) );\n\n        maven.execute( request );\n\n        reporterCtl.verify();\n    }","commit_id":"3acaa63cf8a167a0c8f10116dbd7545f1929d128","url":"https://github.com/apache/maven"},{"original_method":"protected void setUp()\n        throws Exception\n    {\n        super.setUp();\n\n        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n\n        Configuration configuration = new DefaultConfiguration().setClassLoader( classLoader ).setMavenEmbedderLogger( new MavenEmbedderConsoleLogger() );\n        configuration.setUserSettingsFile( MavenEmbedder.DEFAULT_USER_SETTINGS_FILE );\n\n        maven = new MavenEmbedder( configuration );\n        \n        // Some help with detecting executables on the command line. We want, in some cases, to use tools that are available on the command line\n        // but if they are not present on the machine we don't want tests to fail. Case in point would be using SVN via the SCM plugin. We'll\n        // run it if we can, pass through gracefully otherwise.\n\n        Properties env = CommandLineUtils.getSystemEnvVars( !Os.isFamily( Os.FAMILY_WINDOWS ) );\n\n        String defaultPath = env.getProperty( \"PATH\" );\n\n        if ( defaultPath == null )\n        {\n            defaultPathList = Collections.EMPTY_LIST;\n        }\n        else\n        {\n            StringTokenizer tokenizer = new StringTokenizer( defaultPath, File.pathSeparator );\n\n            defaultPathList = new LinkedList();\n\n            while ( tokenizer.hasMoreElements() )\n            {\n                String element = (String) tokenizer.nextElement();\n\n                defaultPathList.add( element );\n            }\n        }        \n\n        String pathExt = env.getProperty( \"PATHEXT\" );\n\n        if ( pathExt == null )\n        {\n            commandExtensions = Collections.EMPTY_LIST;\n        }\n        else\n        {\n            commandExtensions = Arrays.asList( pathExt.split( \"\\\\\" + File.pathSeparatorChar + \"+\" ) );\n        }        \n    }","id":1250,"modified_method":"protected void setUp()\n        throws Exception\n    {\n        super.setUp();\n\n        Configuration configuration = new SimpleConfiguration();\n\n        maven = new MavenEmbedder( configuration );\n        \n        // Some help with detecting executables on the command line. We want, in some cases, to use tools that are available on the command line\n        // but if they are not present on the machine we don't want tests to fail. Case in point would be using SVN via the SCM plugin. We'll\n        // run it if we can, pass through gracefully otherwise.\n\n        Properties env = CommandLineUtils.getSystemEnvVars( !Os.isFamily( Os.FAMILY_WINDOWS ) );\n\n        String defaultPath = env.getProperty( \"PATH\" );\n\n        if ( defaultPath == null )\n        {\n            defaultPathList = Collections.EMPTY_LIST;\n        }\n        else\n        {\n            StringTokenizer tokenizer = new StringTokenizer( defaultPath, File.pathSeparator );\n\n            defaultPathList = new LinkedList();\n\n            while ( tokenizer.hasMoreElements() )\n            {\n                String element = (String) tokenizer.nextElement();\n\n                defaultPathList.add( element );\n            }\n        }        \n\n        String pathExt = env.getProperty( \"PATHEXT\" );\n\n        if ( pathExt == null )\n        {\n            commandExtensions = Collections.EMPTY_LIST;\n        }\n        else\n        {\n            commandExtensions = Arrays.asList( pathExt.split( \"\\\\\" + File.pathSeparatorChar + \"+\" ) );\n        }        \n    }","commit_id":"0ba6f79521e8833d4606532877d0765f7b667a14","url":"https://github.com/apache/maven"},{"original_method":"public void test()\n        throws Exception\n    {\n        Configuration configuration = new DefaultConfiguration();\n        configuration.setMavenEmbedderLogger( new MavenEmbedderConsoleLogger() );\n        MavenEmbedder embedder = new MavenEmbedder( configuration );\n\n        File pom = new File( \"src/test/projects/bad-module-non-recursive/pom.xml\" ).getCanonicalFile();\n\n        System.out.println( pom.getCanonicalFile() );\n\n        DefaultMavenExecutionRequest request = new DefaultMavenExecutionRequest();\n        request.setOffline( false );\n        request.setUseReactor( false );\n        request.setRecursive( false );\n        //request.setLoggingLevel( Logger.LEVEL_DEBUG );\n        request.setPom( pom );\n        request.setBaseDirectory( pom.getParentFile() );\n        MavenExecutionResult result = embedder.readProjectWithDependencies( request );\n        MavenProject project = result.getProject();\n\n        if ( result.hasExceptions() )\n        {\n            for ( Iterator it = result.getExceptions().iterator(); it.hasNext(); )\n            {\n                Exception ex = (Exception) it.next();\n                ex.printStackTrace();\n            }\n        }\n\n        assertNotNull( project );\n    }","id":1251,"modified_method":"public void test()\n        throws Exception\n    {\n        Configuration configuration = new SimpleConfiguration();\n        MavenEmbedder embedder = new MavenEmbedder( configuration );\n\n        File pom = new File( \"src/test/projects/bad-module-non-recursive/pom.xml\" ).getCanonicalFile();\n\n        System.out.println( pom.getCanonicalFile() );\n\n        DefaultMavenExecutionRequest request = new DefaultMavenExecutionRequest();\n        request.setOffline( false );\n        request.setUseReactor( false );\n        request.setRecursive( false );\n        //request.setLoggingLevel( Logger.LEVEL_DEBUG );\n        request.setPom( pom );\n        request.setBaseDirectory( pom.getParentFile() );\n        MavenExecutionResult result = embedder.readProjectWithDependencies( request );\n        MavenProject project = result.getProject();\n\n        if ( result.hasExceptions() )\n        {\n            for ( Exception e : result.getExceptions() )\n            {\n                e.printStackTrace();\n            }\n        }\n\n        assertNotNull( project );\n    }","commit_id":"0ba6f79521e8833d4606532877d0765f7b667a14","url":"https://github.com/apache/maven"},{"original_method":"protected void setUp()\n        throws Exception\n    {\n        super.setUp();\n\n        basedir = System.getProperty( \"basedir\" );\n\n        if ( basedir == null )\n        {\n            basedir = new File( \".\" ).getCanonicalPath();\n        }\n\n        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n\n        Configuration configuration = new DefaultConfiguration()\n            .setClassLoader( classLoader )\n            .setMavenEmbedderLogger( new MavenEmbedderConsoleLogger() );\n        configuration.setUserSettingsFile( MavenEmbedder.DEFAULT_USER_SETTINGS_FILE );\n\n        mavenEmbedder = new MavenEmbedder( configuration );\n    }","id":1252,"modified_method":"protected void setUp()\n        throws Exception\n    {\n        super.setUp();\n\n        basedir = System.getProperty( \"basedir\" );\n\n        if ( basedir == null )\n        {\n            basedir = new File( \".\" ).getCanonicalPath();\n        }\n\n        Configuration configuration = new SimpleConfiguration();\n\n        mavenEmbedder = new MavenEmbedder( configuration );\n    }","commit_id":"0ba6f79521e8833d4606532877d0765f7b667a14","url":"https://github.com/apache/maven"},{"original_method":"protected void assertNoExceptions( MavenExecutionResult result )\n    {\n        List exceptions = result.getExceptions();\n        if ( ( exceptions == null ) || exceptions.isEmpty() )\n        {\n            // everything is a-ok.\n            return;\n        }\n\n        System.err.println( \"Encountered \" + exceptions.size() + \" exception(s).\" );\n        Iterator it = exceptions.iterator();\n        while ( it.hasNext() )\n        {\n            Exception exception = (Exception) it.next();\n            exception.printStackTrace( System.err );\n        }\n\n        fail( \"Encountered Exceptions in MavenExecutionResult during \" + getName() );\n    }","id":1253,"modified_method":"protected void assertNoExceptions( MavenExecutionResult result )\n    {\n        List<Exception> exceptions = result.getExceptions();\n        if ( ( exceptions == null ) || exceptions.isEmpty() )\n        {\n            // everything is a-ok.\n            return;\n        }\n\n        System.err.println( \"Encountered \" + exceptions.size() + \" exception(s).\" );\n        for ( Exception exception : exceptions )\n        {\n            exception.printStackTrace( System.err );\n        }\n\n        fail( \"Encountered Exceptions in MavenExecutionResult during \" + getName() );\n    }","commit_id":"0ba6f79521e8833d4606532877d0765f7b667a14","url":"https://github.com/apache/maven"},{"original_method":"public void testEmbedderWillStillStartupWhenTheSettingsConfigurationIsCrap()\n        throws Exception\n    {\n        // START SNIPPET: simple-embedder-example\n\n        File projectDirectory = getTestFile( \"src/examples/simple-project\" );\n\n        File user = new File( projectDirectory, \"invalid-settings.xml\" );\n\n        Configuration configuration = new DefaultConfiguration()\n            .setUserSettingsFile( user )\n            .setClassLoader( Thread.currentThread().getContextClassLoader() );\n\n        ConfigurationValidationResult validationResult = MavenEmbedder.validateConfiguration( configuration );\n\n        assertFalse( validationResult.isValid() );\n\n        MavenEmbedder embedder = new MavenEmbedder( configuration );\n\n        assertNotNull( embedder.getLocalRepository().getBasedir() );\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setBaseDirectory( projectDirectory )\n            .setGoals( Arrays.asList( new String[]{\"validate\"} ) );\n\n        MavenExecutionResult result = embedder.execute( request );\n        \n        for ( Iterator i = result.getExceptions().iterator(); i.hasNext(); )\n        {\n            Exception e = (Exception) i.next();\n            e.printStackTrace();\n        }\n        \n        assertFalse( result.hasExceptions() );\n\n        assertNotNull( result.getProject() );\n\n        MavenProject project = result.getProject();\n\n        String environment = project.getProperties().getProperty( \"environment\" );\n\n        assertEquals( \"development\", environment );\n\n        // END SNIPPET: simple-embedder-example\n    }","id":1254,"modified_method":"public void testEmbedderWillStillStartupWhenTheSettingsConfigurationIsCrap()\n        throws Exception\n    {\n        // START SNIPPET: simple-embedder-example\n\n        File projectDirectory = getTestFile( \"src/examples/simple-project\" );\n\n        File user = new File( projectDirectory, \"invalid-settings.xml\" );\n\n        Configuration configuration = new SimpleConfiguration()\n            .setUserSettingsFile( user );\n\n        ConfigurationValidationResult validationResult = MavenEmbedder.validateConfiguration( configuration );\n\n        assertFalse( validationResult.isValid() );\n\n        MavenEmbedder embedder = new MavenEmbedder( configuration );\n\n        assertNotNull( embedder.getLocalRepository().getBasedir() );\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setBaseDirectory( projectDirectory )\n            .setGoals( Arrays.asList( new String[]{\"validate\"} ) );\n\n        MavenExecutionResult result = embedder.execute( request );\n        \n        for ( Exception e : result.getExceptions() )\n        {\n            e.printStackTrace();\n        }\n        \n        assertFalse( result.hasExceptions() );\n\n        assertNotNull( result.getProject() );\n\n        MavenProject project = result.getProject();\n\n        String environment = project.getProperties().getProperty( \"environment\" );\n\n        assertEquals( \"development\", environment );\n\n        // END SNIPPET: simple-embedder-example\n    }","commit_id":"0ba6f79521e8833d4606532877d0765f7b667a14","url":"https://github.com/apache/maven"},{"original_method":"public ExtendableMavenEmbedder( ClassLoader classLoader )\n            throws MavenEmbedderException\n        {\n            super( new DefaultConfiguration()\n                .setClassLoader( classLoader )\n                .setMavenEmbedderLogger( new MavenEmbedderConsoleLogger() ) );\n        }","id":1255,"modified_method":"public ExtendableMavenEmbedder( ClassLoader classLoader )\n            throws MavenEmbedderException\n        {\n            super( new SimpleConfiguration().setClassLoader( classLoader ) );\n        }","commit_id":"0ba6f79521e8833d4606532877d0765f7b667a14","url":"https://github.com/apache/maven"},{"original_method":"public void testProjectReading()\n        throws Exception\n    {\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setShowErrors( true ).setPom( getPomFile() );\n\n        MavenExecutionResult result = mavenEmbedder.readProjectWithDependencies( request );\n\n        assertNoExceptions( result );\n\n        assertEquals( \"org.apache.maven\", result.getProject().getGroupId() );\n\n        Set artifacts = result.getProject().getArtifacts();\n\n        assertEquals( 1, artifacts.size() );\n\n        artifacts.iterator().next();\n    }","id":1256,"modified_method":"public void testProjectReading()\n        throws Exception\n    {\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setShowErrors( true ).setPom( getPomFile() );\n\n        MavenExecutionResult result = mavenEmbedder.readProjectWithDependencies( request );\n\n        assertNoExceptions( result );\n\n        assertEquals( \"org.apache.maven\", result.getProject().getGroupId() );\n\n        Set<Artifact> artifacts = result.getProject().getArtifacts();\n\n        assertEquals( 1, artifacts.size() );\n\n        artifacts.iterator().next();\n    }","commit_id":"0ba6f79521e8833d4606532877d0765f7b667a14","url":"https://github.com/apache/maven"},{"original_method":"protected void assertNoExceptions( MavenExecutionResult result )\n    {\n        List exceptions = result.getExceptions();\n        if ( ( exceptions == null ) || exceptions.isEmpty() )\n        {\n            // everything is a-ok.\n            return;\n        }\n\n        System.err.println( \"Encountered \" + exceptions.size() + \" exception(s).\" );\n        Iterator it = exceptions.iterator();\n        while ( it.hasNext() )\n        {\n            Exception exception = (Exception) it.next();\n            exception.printStackTrace( System.err );\n        }\n\n        fail( \"Encountered Exceptions in MavenExecutionResult during \" + getName() );\n    }","id":1257,"modified_method":"protected void assertNoExceptions( MavenExecutionResult result )\n    {\n        List<Exception> exceptions = result.getExceptions();\n        if ( ( exceptions == null ) || exceptions.isEmpty() )\n        {\n            // everything is a-ok.\n            return;\n        }\n\n        System.err.println( \"Encountered \" + exceptions.size() + \" exception(s).\" );\n        for (Exception exception : exceptions)\n        {\n            exception.printStackTrace( System.err );\n        }\n\n        fail( \"Encountered Exceptions in MavenExecutionResult during \" + getName() );\n    }","commit_id":"0ba6f79521e8833d4606532877d0765f7b667a14","url":"https://github.com/apache/maven"},{"original_method":"protected void setUp()\n        throws Exception\n    {\n        super.setUp();\n\n        basedir = System.getProperty( \"basedir\" );\n\n        if ( basedir == null )\n        {\n            basedir = new File( \".\" ).getCanonicalPath();\n        }\n\n        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n\n        Configuration configuration = new DefaultConfiguration()\n            .setClassLoader( classLoader )\n            .setMavenEmbedderLogger( new MavenEmbedderConsoleLogger() );\n        configuration.setUserSettingsFile( MavenEmbedder.DEFAULT_USER_SETTINGS_FILE );\n\n        mavenEmbedder = new MavenEmbedder( configuration );\n\n        System.err.println( \"CHECK-CHECK: \" + mavenEmbedder.getLocalRepository().getBasedir() );\n    }","id":1258,"modified_method":"protected void setUp()\n        throws Exception\n    {\n        super.setUp();\n\n        basedir = System.getProperty( \"basedir\" );\n\n        if ( basedir == null )\n        {\n            basedir = new File( \".\" ).getCanonicalPath();\n        }\n\n        Configuration configuration = new SimpleConfiguration();\n\n        mavenEmbedder = new MavenEmbedder( configuration );\n\n        System.err.println( \"CHECK-CHECK: \" + mavenEmbedder.getLocalRepository().getBasedir() );\n    }","commit_id":"0ba6f79521e8833d4606532877d0765f7b667a14","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Test that two executions of the embedder don't share data that has changed, see MNG-3013\n     *\n     * @throws Exception\n     */\n    public void testTwoExecutionsDoNotCacheChangedData()\n        throws Exception\n    {\n        File testDirectory = new File( basedir, \"src/test/embedder-test-project\" );\n\n        File targetDirectory = new File( basedir, \"target/embedder-test-project-caching\" );\n\n        FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n\n        File pom = new File( targetDirectory, \"pom.xml\" );\n\n        Model model = mavenEmbedder.readModel( pom );\n\n        Plugin plugin = new Plugin();\n        plugin.setArtifactId( \"maven-surefire-plugin\" );\n        plugin.setVersion( \"2.4.2\" );\n        model.setBuild( new Build() );\n        model.getBuild().addPlugin( plugin );\n\n        Writer writer = WriterFactory.newXmlWriter( pom );\n        mavenEmbedder.writeModel( writer, model );\n        writer.close();\n\n        /* execute maven */\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setPom( pom ).setShowErrors( true )\n            .setGoals( Arrays.asList( new String[] { \"package\" } ) );\n\n        MavenExecutionResult result = mavenEmbedder.execute( request );\n\n        assertNoExceptions( result );\n\n        MavenProject project = result.getProject();\n\n        Artifact p = (Artifact) project.getPluginArtifactMap().get( plugin.getKey() );\n        assertEquals( \"2.4.2\", p.getVersion() );\n\n        /* Add the surefire plugin 2.3 to the pom */\n        plugin.setVersion( \"2.4.3\" );\n        writer = WriterFactory.newXmlWriter( pom );\n        mavenEmbedder.writeModel( writer, model );\n        writer.close();\n\n        /* execute Maven */\n        request = new DefaultMavenExecutionRequest().setPom( pom ).setShowErrors( true )\n            .setGoals( Arrays.asList( new String[] { \"package\" } ) );\n        result = mavenEmbedder.execute( request );\n\n        assertNoExceptions( result );\n\n        project = result.getProject();\n\n        p = (Artifact) project.getPluginArtifactMap().get( plugin.getKey() );\n        assertEquals( \"2.4.3\", p.getVersion() );\n    }","id":1259,"modified_method":"/**\n     * Test that two executions of the embedder don't share data that has changed, see MNG-3013\n     *\n     * @throws Exception\n     */\n    public void testTwoExecutionsDoNotCacheChangedData()\n        throws Exception\n    {\n        File testDirectory = new File( basedir, \"src/test/embedder-test-project\" );\n\n        File targetDirectory = new File( basedir, \"target/embedder-test-project-caching\" );\n\n        FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n\n        File pom = new File( targetDirectory, \"pom.xml\" );\n\n        Model model = mavenEmbedder.readModel( pom );\n\n        Plugin plugin = new Plugin();\n        plugin.setArtifactId( \"maven-surefire-plugin\" );\n        plugin.setVersion( \"2.4.2\" );\n        model.setBuild( new Build() );\n        model.getBuild().addPlugin( plugin );\n\n        Writer writer = WriterFactory.newXmlWriter( pom );\n        mavenEmbedder.writeModel( writer, model );\n        writer.close();\n\n        /* execute maven */\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setPom( pom ).setShowErrors( true )\n            .setGoals( Arrays.asList( new String[] { \"package\" } ) );\n\n        MavenExecutionResult result = mavenEmbedder.execute( request );\n\n        assertNoExceptions( result );\n\n        MavenProject project = result.getProject();\n\n        Artifact p = project.getPluginArtifactMap().get( plugin.getKey() );\n        assertEquals( \"2.4.2\", p.getVersion() );\n\n        /* Add the surefire plugin 2.3 to the pom */\n        plugin.setVersion( \"2.4.3\" );\n        writer = WriterFactory.newXmlWriter( pom );\n        mavenEmbedder.writeModel( writer, model );\n        writer.close();\n\n        /* execute Maven */\n        request = new DefaultMavenExecutionRequest().setPom( pom ).setShowErrors( true )\n            .setGoals( Arrays.asList( new String[] { \"package\" } ) );\n        result = mavenEmbedder.execute( request );\n\n        assertNoExceptions( result );\n\n        project = result.getProject();\n\n        p = project.getPluginArtifactMap().get( plugin.getKey() );\n        assertEquals( \"2.4.3\", p.getVersion() );\n    }","commit_id":"0ba6f79521e8833d4606532877d0765f7b667a14","url":"https://github.com/apache/maven"},{"original_method":"public void testWithInvalidGoal()\n        throws Exception\n    {\n        File testDirectory = new File( basedir, \"src/test/projects/invalid-goal\" );\n\n        File targetDirectory = new File( basedir, \"target/projects/invalid-goal\" );\n\n        FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setBaseDirectory( targetDirectory )\n            .setShowErrors( true )\n            .setGoals( Arrays.asList( new String[]{\"validate\"} ) );\n\n        MavenExecutionResult result = mavenEmbedder.execute( request );\n        List exceptions = result.getExceptions();\n        assertEquals(\"Incorrect number of exceptions\", 1, exceptions.size());\n\n        Iterator it = exceptions.iterator();\n        if( (it.next() instanceof NullPointerException))\n        {\n            fail(\"Null Pointer on Exception\");\n        }\n    }","id":1260,"modified_method":"public void testWithInvalidGoal()\n        throws Exception\n    {\n        File testDirectory = new File( basedir, \"src/test/projects/invalid-goal\" );\n\n        File targetDirectory = new File( basedir, \"target/projects/invalid-goal\" );\n\n        FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setBaseDirectory( targetDirectory )\n            .setShowErrors( true )\n            .setGoals( Arrays.asList( new String[]{\"validate\"} ) );\n\n        MavenExecutionResult result = mavenEmbedder.execute( request );\n        List<Exception> exceptions = result.getExceptions();\n        assertEquals(\"Incorrect number of exceptions\", 1, exceptions.size());\n\n        if ( ( exceptions.get( 0 ) instanceof NullPointerException ) )\n        {\n            fail(\"Null Pointer on Exception\");\n        }\n    }","commit_id":"0ba6f79521e8833d4606532877d0765f7b667a14","url":"https://github.com/apache/maven"},{"original_method":"protected void setUp()\n        throws Exception\n    {\n        ClassLoader loader = Thread.currentThread().getContextClassLoader();\n\n        Configuration request = new DefaultConfiguration();\n\n        request.setClassLoader( loader );\n\n        request.setMavenEmbedderLogger( new MavenEmbedderConsoleLogger() );\n\n        File extensions = new File( getBasedir(), \"src/test/extensions\" );\n        \n        assertTrue( extensions.exists() );\n        \n        request.addExtension( extensions.toURI().toURL() );\n\n        maven = new MavenEmbedder( request );\n        \n        container = maven.getPlexusContainer();\n    }","id":1261,"modified_method":"protected void setUp()\n        throws Exception\n    {\n        Configuration request = new SimpleConfiguration();\n\n        File extensions = new File( getBasedir(), \"src/test/extensions\" );\n        \n        assertTrue( extensions.exists() );\n        \n        request.addExtension( extensions.toURI().toURL() );\n\n        maven = new MavenEmbedder( request );\n        \n        container = maven.getPlexusContainer();\n    }","commit_id":"0ba6f79521e8833d4606532877d0765f7b667a14","url":"https://github.com/apache/maven"},{"original_method":"@NotNull\n  protected StorageData loadData(boolean useProvidersData, @Nullable RoamingType roamingType) {\n    StorageData result = createStorageData();\n\n    if (useProvidersData && myStreamProvider != null && myStreamProvider.isEnabled()) {\n      try {\n        if (roamingType == null) {\n          loadDataFromStreamProvider(result, RoamingType.PER_USER);\n          loadDataFromStreamProvider(result, RoamingType.PER_PLATFORM);\n        }\n        else if (roamingType != RoamingType.DISABLED) {\n          loadDataFromStreamProvider(result, roamingType);\n        }\n      }\n      catch (Exception e) {\n        LOG.warn(e);\n      }\n    }\n\n    Element element = loadLocalData();\n    if (element != null) {\n      loadState(result, element);\n    }\n\n    return result;\n  }","id":1262,"modified_method":"@NotNull\n  protected StorageData loadData(boolean useProvidersData, @Nullable RoamingType roamingType) {\n    StorageData result = createStorageData();\n\n    if (useProvidersData && myStreamProvider != null && myStreamProvider.isEnabled()) {\n      boolean wasLoaded = false;\n      try {\n        if (roamingType == null) {\n          wasLoaded = loadDataFromStreamProvider(result, RoamingType.PER_USER) || loadDataFromStreamProvider(result, RoamingType.PER_PLATFORM);\n        }\n        else if (roamingType != RoamingType.DISABLED) {\n          wasLoaded = loadDataFromStreamProvider(result, roamingType);\n        }\n      }\n      catch (Exception e) {\n        LOG.warn(e);\n      }\n\n      //noinspection deprecation\n      if (wasLoaded && !(myStreamProvider instanceof OldStreamProviderAdapter || myStreamProvider instanceof CurrentUserHolder)) {\n        // we don't use local data if stream provider has one (to preserve backward compatibility, we don't use this logic for old stream providers)\n        return result;\n      }\n    }\n\n    Element element = loadLocalData();\n    if (element != null) {\n      loadState(result, element);\n    }\n\n    return result;\n  }","commit_id":"ee1452f250c25134d4c518c2caf9acf5045f6fb1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void loadDataFromStreamProvider(@NotNull StorageData result, @NotNull RoamingType roamingType) throws IOException {\n    assert myStreamProvider != null;\n    Document sharedDocument = StorageUtil.loadDocument(myStreamProvider.loadContent(myFileSpec, roamingType));\n    if (sharedDocument != null) {\n      filterOutOfDate(sharedDocument.getRootElement());\n      loadState(result, sharedDocument.getRootElement());\n    }\n  }","id":1263,"modified_method":"private boolean loadDataFromStreamProvider(@NotNull StorageData result, @NotNull RoamingType roamingType) throws IOException, JDOMException {\n    assert myStreamProvider != null;\n    InputStream inputStream = myStreamProvider.loadContent(myFileSpec, roamingType);\n    if (inputStream == null) {\n      return false;\n    }\n\n    Document sharedDocument = JDOMUtil.loadDocument(inputStream);\n    filterOutOfDate(sharedDocument.getRootElement());\n    loadState(result, sharedDocument.getRootElement());\n    return true;\n  }","commit_id":"ee1452f250c25134d4c518c2caf9acf5045f6fb1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * This method searches for nodes matching a column in the assets table and also having been\n     * assigned to a category in the cateories table.  Note: this implmentation requires that\n     * the column type be of type VARCHAR.\n     * \n     * @param columnName is VARCHAR column in assets table used in where clause\n     * @param columnValue is the value used for matching <code>columnName<\/code>\n     * @param categoryNames is a collection of names from categories\n     *  table assigned to the node via category_node table\n     * @return Collection of nodes.\n     */\n    public Collection<OnmsNode> findAllByVarCharAssetColumnCategoryList(String columnName, String columnValue, Collection<String> categoryNames) {\n        log().debug(\"findAllByVarCharAssetColumnCategoryList: beginning find.\");\n        List<OnmsNode> nodes = new FindByVarCharAssetColumnAndCategoryList(getDataSource(), columnName, categoryNames).execute(columnValue);\n        log().debug(\"findAllByVarCharAssetColumnCateoryList: find complete. Nodes found: \"+nodes.size());\n        return nodes;\n    }","id":1264,"modified_method":"/**\n     * This method searches for nodes matching a column in the assets table and also having been\n     * assigned to a category in the cateories table.  Note: this implmentation requires that\n     * the column type be of type VARCHAR.\n     * \n     * @param columnName is VARCHAR column in assets table used in where clause\n     * @param columnValue is the value used for matching <code>columnName<\/code>\n     * @param categoryNames is a collection of names from categories\n     *  table assigned to the node via category_node table\n     * @return Collection of nodes.\n     */\n    public Collection<OnmsNode> findAllByVarCharAssetColumnCategoryList(String columnName, String columnValue, Collection<String> categoryNames) {\n        log().debug(\"findAllByVarCharAssetColumnCategoryList: beginning find.\");\n        \n    \tNodeHierarchyMapper rowMapper = new NodeHierarchyMapper(getDataSource());\n    \t\n\n    \tfinal String hierarchyQuery = \"SELECT \" +\n    \trowMapper.getColumns() +\n    \t\"FROM node \" +\n    \t\"JOIN assets ON (node.nodeid = assets.nodeid) \" +\n    \t\"JOIN category_node ON (node.nodeid = category_node.nodeid) \" +\n    \t\"JOIN categories ON (category_node.categoryid = category.categoryid) \" +\n    \t\"LEFT JOIN ipInterface ON (node.nodeId = ipInterface.nodeId) \" +\n    \t\"LEFT JOIN ifservices ON (ipInterface.nodeId = ifservices.nodeId AND ipInterface.ipAddr = ifservices.ipAddr) \" +\n    \t\"LEFT JOIN outages ON (ifServices.nodeId = outages.nodeId AND ifServices.ipAddr = outages.ipAddr AND ifServices.serviceID = outages.serviceId AND outages.ifRegainedService is null) \" +\n    \t\"WHERE assets.\" + columnName +\" = ? \" +\n    \t\"AMD categories.categoryName in (\"+StringUtils.collectionToDelimitedString(categoryNames, \",\", \"'\", \"'\")+\")\" +\n    \t\"\";\n    \t\n    \tSet<OnmsNode> nodes = new HashSet<OnmsNode>(getJdbcTemplate().query(hierarchyQuery, new Object[] { columnValue }, rowMapper));\n\n    \tlog().debug(\"findAllByVarCharAssetColumnCateoryList: find complete. Nodes found: \"+nodes.size());\n        return nodes;\n    }","commit_id":"cccd42d2a0e3e13cb77dcb9e2fe75ec432ea1ec7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tpublic OnmsNode getHierarchy(Integer id) {\n    \t\n    \tfinal String hierarchyQuery = \"SELECT \" +\n    \t\"node.nodeid as nodeid, \" +\n    \t\"node.dpName as dpName, \" +\n    \t\"node.nodeCreateTime as nodeCreateTime, \" +\n    \t\"node.nodeParentID as nodeParentID, \" +\n    \t\"node.nodeType as nodeType, \" +\n    \t\"node.nodeSysOid as nodeSysOid, \" +\n    \t\"node.nodeSysName as nodeSysName, \" +\n    \t\"node.nodeSysDescription as nodeSysDescription, \" +\n    \t\"node.nodeSysLocation as nodeSysLocation, \" +\n    \t\"node.nodeSysContact as nodeSysContact, \" +\n    \t\"node.nodeLabel as nodeLabel, \" +\n    \t\"node.nodeLabelSource as nodeLabelSource, \" +\n    \t\"node.nodeNetBiosName as nodeNetBiosName, \" +\n    \t\"node.nodeDomainName as nodeDomainName, \" +\n    \t\"node.operatingSystem as operatingSystem, \" +\n    \t\"node.lastCapsdPoll as lastCapsdPoll, \" +\n\t\t\"ipInterface.nodeID as ipInterface_nodeID, \" +\n\t\t\"ipInterface.ipAddr as ipInterface_ipAddr, \" +\n\t\t\"ipInterface.ifIndex as ipInterface_ifIndex, \" +\n\t\t\"ipInterface.ipHostname as ipInterface_ipHostname, \" +\n\t\t\"ipInterface.isManaged as ipInterface_isManaged, \" +\n\t\t\"ipInterface.ipStatus as ipInterface_ipStatus, \" +\n\t\t\"ipInterface.ipLastCapsdPoll as ipInterface_ipLastCapsdPoll, \" +\n\t\t\"ipInterface.isSnmpPrimary as ipInterface_isSnmpPrimary, \" +\n\t\t\"ifservices.nodeid as ifservices_nodeid, \" +\n\t\t\"ifservices.ipAddr as ifservices_ipAddr, \" +\n\t\t\"ifservices.ifIndex as ifservices_ifIndex, \" +\n\t\t\"ifservices.serviceId as ifservices_serviceId, \" +\n\t\t\"ifservices.lastGood as ifservices_lastGood, \" +\n\t\t\"ifservices.lastFail as ifservices_lastFail, \" +\n\t\t\"ifservices.qualifier as ifservices_qualifier, \" +\n\t\t\"ifservices.status as ifservices_status, \" +\n\t\t\"ifservices.source as ifservices_source, \" +\n\t\t\"ifservices.notify as ifservices_notify, \" +\n\t\t\"outages.outageID as outages_outageID, \" +\n\t\t\"outages.svcLostEventID as outages_svcLostEventID, \" +\n\t\t\"outages.svcRegainedEventID as outages_svcRegainedEventID, \" +\n\t\t\"outages.nodeID as outages_nodeID, \" +\n\t\t\"outages.ipAddr as outages_ipAddr, \" +\n\t\t\"outages.serviceID as outages_serviceID, \" +\n\t\t\"ifservices.ifIndex as outages_ifIndex, \" +\n\t\t\"outages.ifLostService as outages_ifLostService, \" +\n\t\t\"outages.ifRegainedService as outages_ifRegainedService, \" +\n\t\t\"outages.suppressTime as outages_suppressTime, \" +\n\t\t\"outages.suppressedBy as outages_suppressedBy \" +\n    \t\"FROM node \" +\n    \t\"LEFT JOIN ipInterface ON (node.nodeId = ipInterface.nodeId) \" +\n    \t\"LEFT JOIN ifservices ON (ipInterface.nodeId = ifservices.nodeId AND ipInterface.ipAddr = ifservices.ipAddr) \" +\n    \t\"LEFT JOIN outages ON (ifServices.nodeId = outages.nodeId AND ifServices.ipAddr = outages.ipAddr AND ifServices.serviceID = outages.serviceId AND outages.ifRegainedService is null) \" +\n    \t\"WHERE node.nodeId = ?\" +\n    \t\"\";\n    \t\n    \tRowMapper rowMapper = new RowMapper() {\n    \t\t// we use the lazy mapper to that the other relationships that we are using\n    \t\t// are filling in in a lazy way\n    \t\tNodeMapper nodeMapper = new NodeMapperWithLazyRelatives(getDataSource()) {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void setIpInterfaces(OnmsNode node) {\n                    node.setIpInterfaces(new LinkedHashSet<OnmsIpInterface>());\n                }\n    \t\t\t\n    \t\t};\n    \t\tIpInterfaceMapper ifMapper = new IpInterfaceMapper();\n    \t\tMonitoredServiceMapper monSvcMapper = new MonitoredServiceMapper();\n    \t\tOutageMapper outageMapper = new OutageMapper();\n\n\t\t\tpublic Object mapRow(ResultSet rs, int rowNum) throws SQLException {\n\t\t\t\tOnmsNode node = nodeMapper.mapNode(rs, rowNum);\n\t\t\t\tOnmsIpInterface iface = ifMapper.mapInterface(rs, rowNum);\n\t\t\t\tif (iface != null) {\n\t\t\t\t\tnode.getIpInterfaces().add(iface);\n\t\t\t\t\tOnmsMonitoredService monSvc = (OnmsMonitoredService)monSvcMapper.mapRow(rs, rowNum);\n\t\t\t\t\tif (monSvc != null) {\n\t\t\t\t\t\tiface.getMonitoredServices().add(monSvc);\n\t\t\t\t\t\tOnmsOutage outage = (OnmsOutage)outageMapper.mapRow(rs, rowNum);\n\t\t\t\t\t\tif (outage != null) {\n\t\t\t\t\t\t\tmonSvc.getCurrentOutages().add(outage);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n    \t\t\n    \t};\n    \t\n    \tSet<OnmsNode> nodes = new HashSet<OnmsNode>(getJdbcTemplate().query(hierarchyQuery, new Object[] { id }, rowMapper));\n    \tif (nodes.isEmpty())\n    \t\treturn null;\n    \telse if (nodes.size() == 1)\n    \t\treturn (OnmsNode)nodes.iterator().next();\n    \telse\n    \t\tthrow new IncorrectResultSizeDataAccessException(\"Unexpected number of nodes returned.\", 1, nodes.size());\n    }","id":1265,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tpublic OnmsNode getHierarchy(Integer id) {\n    \t\n    \tNodeHierarchyMapper rowMapper = new NodeHierarchyMapper(getDataSource());\n    \t\n\n    \tfinal String hierarchyQuery = \"SELECT \" +\n    \trowMapper.getColumns() +\n    \t\"FROM node \" +\n    \t\"LEFT JOIN ipInterface ON (node.nodeId = ipInterface.nodeId) \" +\n    \t\"LEFT JOIN ifservices ON (ipInterface.nodeId = ifservices.nodeId AND ipInterface.ipAddr = ifservices.ipAddr) \" +\n    \t\"LEFT JOIN outages ON (ifServices.nodeId = outages.nodeId AND ifServices.ipAddr = outages.ipAddr AND ifServices.serviceID = outages.serviceId AND outages.ifRegainedService is null) \" +\n    \t\"WHERE node.nodeId = ?\" +\n    \t\"\";\n    \t\n    \tSet<OnmsNode> nodes = new HashSet<OnmsNode>(getJdbcTemplate().query(hierarchyQuery, new Object[] { id }, rowMapper));\n    \tif (nodes.isEmpty())\n    \t\treturn null;\n    \telse if (nodes.size() == 1)\n    \t\treturn (OnmsNode)nodes.iterator().next();\n    \telse\n    \t\tthrow new IncorrectResultSizeDataAccessException(\"Unexpected number of nodes returned.\", 1, nodes.size());\n    }","commit_id":"cccd42d2a0e3e13cb77dcb9e2fe75ec432ea1ec7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method searches for nodes matching a column in the assets table and also having been\n     * assigned to a category in the cateories table.  Note: this implmentation requires that\n     * the column type be of type VARCHAR.\n     * \n     * @param columnName is VARCHAR column in assets table used in where clause\n     * @param columnValue is the value used for matching <code>columnName<\/code>\n     * @param categoryNames is a collection of names from categories\n     *  table assigned to the node via category_node table\n     * @return Collection of nodes.\n     */\n    public Collection<OnmsNode> findAllByVarCharAssetColumnCategoryList(String columnName, String columnValue, Collection<String> categoryNames) {\n        log().debug(\"findAllByVarCharAssetColumnCategoryList: beginning find.\");\n        List<OnmsNode> nodes = new FindByVarCharAssetColumnAndCategoryList(getDataSource(), columnName, categoryNames).execute(columnValue);\n        log().debug(\"findAllByVarCharAssetColumnCateoryList: find complete. Nodes found: \"+nodes.size());\n        return nodes;\n    }","id":1266,"modified_method":"/**\n     * This method searches for nodes matching a column in the assets table and also having been\n     * assigned to a category in the cateories table.  Note: this implmentation requires that\n     * the column type be of type VARCHAR.\n     * \n     * @param columnName is VARCHAR column in assets table used in where clause\n     * @param columnValue is the value used for matching <code>columnName<\/code>\n     * @param categoryNames is a collection of names from categories\n     *  table assigned to the node via category_node table\n     * @return Collection of nodes.\n     */\n    public Collection<OnmsNode> findAllByVarCharAssetColumnCategoryList(String columnName, String columnValue, Collection<String> categoryNames) {\n        log().debug(\"findAllByVarCharAssetColumnCategoryList: beginning find.\");\n        \n    \tNodeHierarchyMapper rowMapper = new NodeHierarchyMapper(getDataSource());\n    \t\n\n    \tfinal String hierarchyQuery = \"SELECT \" +\n    \trowMapper.getColumns() +\n    \t\"FROM node \" +\n    \t\"JOIN assets ON (node.nodeid = assets.nodeid) \" +\n    \t\"JOIN category_node ON (node.nodeid = category_node.nodeid) \" +\n    \t\"JOIN categories ON (category_node.categoryid = category.categoryid) \" +\n    \t\"LEFT JOIN ipInterface ON (node.nodeId = ipInterface.nodeId) \" +\n    \t\"LEFT JOIN ifservices ON (ipInterface.nodeId = ifservices.nodeId AND ipInterface.ipAddr = ifservices.ipAddr) \" +\n    \t\"LEFT JOIN outages ON (ifServices.nodeId = outages.nodeId AND ifServices.ipAddr = outages.ipAddr AND ifServices.serviceID = outages.serviceId AND outages.ifRegainedService is null) \" +\n    \t\"WHERE assets.\" + columnName +\" = ? \" +\n    \t\"AMD categories.categoryName in (\"+StringUtils.collectionToDelimitedString(categoryNames, \",\", \"'\", \"'\")+\")\" +\n    \t\"\";\n    \t\n    \tSet<OnmsNode> nodes = new HashSet<OnmsNode>(getJdbcTemplate().query(hierarchyQuery, new Object[] { columnValue }, rowMapper));\n\n    \tlog().debug(\"findAllByVarCharAssetColumnCateoryList: find complete. Nodes found: \"+nodes.size());\n        return nodes;\n    }","commit_id":"17ddc6b7a1384dfd1f5571eecfad9afda80ac50f","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tpublic OnmsNode getHierarchy(Integer id) {\n    \t\n    \tfinal String hierarchyQuery = \"SELECT \" +\n    \t\"node.nodeid as nodeid, \" +\n    \t\"node.dpName as dpName, \" +\n    \t\"node.nodeCreateTime as nodeCreateTime, \" +\n    \t\"node.nodeParentID as nodeParentID, \" +\n    \t\"node.nodeType as nodeType, \" +\n    \t\"node.nodeSysOid as nodeSysOid, \" +\n    \t\"node.nodeSysName as nodeSysName, \" +\n    \t\"node.nodeSysDescription as nodeSysDescription, \" +\n    \t\"node.nodeSysLocation as nodeSysLocation, \" +\n    \t\"node.nodeSysContact as nodeSysContact, \" +\n    \t\"node.nodeLabel as nodeLabel, \" +\n    \t\"node.nodeLabelSource as nodeLabelSource, \" +\n    \t\"node.nodeNetBiosName as nodeNetBiosName, \" +\n    \t\"node.nodeDomainName as nodeDomainName, \" +\n    \t\"node.operatingSystem as operatingSystem, \" +\n    \t\"node.lastCapsdPoll as lastCapsdPoll, \" +\n\t\t\"ipInterface.nodeID as ipInterface_nodeID, \" +\n\t\t\"ipInterface.ipAddr as ipInterface_ipAddr, \" +\n\t\t\"ipInterface.ifIndex as ipInterface_ifIndex, \" +\n\t\t\"ipInterface.ipHostname as ipInterface_ipHostname, \" +\n\t\t\"ipInterface.isManaged as ipInterface_isManaged, \" +\n\t\t\"ipInterface.ipStatus as ipInterface_ipStatus, \" +\n\t\t\"ipInterface.ipLastCapsdPoll as ipInterface_ipLastCapsdPoll, \" +\n\t\t\"ipInterface.isSnmpPrimary as ipInterface_isSnmpPrimary, \" +\n\t\t\"ifservices.nodeid as ifservices_nodeid, \" +\n\t\t\"ifservices.ipAddr as ifservices_ipAddr, \" +\n\t\t\"ifservices.ifIndex as ifservices_ifIndex, \" +\n\t\t\"ifservices.serviceId as ifservices_serviceId, \" +\n\t\t\"ifservices.lastGood as ifservices_lastGood, \" +\n\t\t\"ifservices.lastFail as ifservices_lastFail, \" +\n\t\t\"ifservices.qualifier as ifservices_qualifier, \" +\n\t\t\"ifservices.status as ifservices_status, \" +\n\t\t\"ifservices.source as ifservices_source, \" +\n\t\t\"ifservices.notify as ifservices_notify, \" +\n\t\t\"outages.outageID as outages_outageID, \" +\n\t\t\"outages.svcLostEventID as outages_svcLostEventID, \" +\n\t\t\"outages.svcRegainedEventID as outages_svcRegainedEventID, \" +\n\t\t\"outages.nodeID as outages_nodeID, \" +\n\t\t\"outages.ipAddr as outages_ipAddr, \" +\n\t\t\"outages.serviceID as outages_serviceID, \" +\n\t\t\"ifservices.ifIndex as outages_ifIndex, \" +\n\t\t\"outages.ifLostService as outages_ifLostService, \" +\n\t\t\"outages.ifRegainedService as outages_ifRegainedService, \" +\n\t\t\"outages.suppressTime as outages_suppressTime, \" +\n\t\t\"outages.suppressedBy as outages_suppressedBy \" +\n    \t\"FROM node \" +\n    \t\"LEFT JOIN ipInterface ON (node.nodeId = ipInterface.nodeId) \" +\n    \t\"LEFT JOIN ifservices ON (ipInterface.nodeId = ifservices.nodeId AND ipInterface.ipAddr = ifservices.ipAddr) \" +\n    \t\"LEFT JOIN outages ON (ifServices.nodeId = outages.nodeId AND ifServices.ipAddr = outages.ipAddr AND ifServices.serviceID = outages.serviceId AND outages.ifRegainedService is null) \" +\n    \t\"WHERE node.nodeId = ?\" +\n    \t\"\";\n    \t\n    \tRowMapper rowMapper = new RowMapper() {\n    \t\t// we use the lazy mapper to that the other relationships that we are using\n    \t\t// are filling in in a lazy way\n    \t\tNodeMapper nodeMapper = new NodeMapperWithLazyRelatives(getDataSource()) {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void setIpInterfaces(OnmsNode node) {\n                    node.setIpInterfaces(new LinkedHashSet<OnmsIpInterface>());\n                }\n    \t\t\t\n    \t\t};\n    \t\tIpInterfaceMapper ifMapper = new IpInterfaceMapper();\n    \t\tMonitoredServiceMapper monSvcMapper = new MonitoredServiceMapper();\n    \t\tOutageMapper outageMapper = new OutageMapper();\n\n\t\t\tpublic Object mapRow(ResultSet rs, int rowNum) throws SQLException {\n\t\t\t\tOnmsNode node = nodeMapper.mapNode(rs, rowNum);\n\t\t\t\tOnmsIpInterface iface = ifMapper.mapInterface(rs, rowNum);\n\t\t\t\tif (iface != null) {\n\t\t\t\t\tnode.getIpInterfaces().add(iface);\n\t\t\t\t\tOnmsMonitoredService monSvc = (OnmsMonitoredService)monSvcMapper.mapRow(rs, rowNum);\n\t\t\t\t\tif (monSvc != null) {\n\t\t\t\t\t\tiface.getMonitoredServices().add(monSvc);\n\t\t\t\t\t\tOnmsOutage outage = (OnmsOutage)outageMapper.mapRow(rs, rowNum);\n\t\t\t\t\t\tif (outage != null) {\n\t\t\t\t\t\t\tmonSvc.getCurrentOutages().add(outage);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n    \t\t\n    \t};\n    \t\n    \tSet<OnmsNode> nodes = new HashSet<OnmsNode>(getJdbcTemplate().query(hierarchyQuery, new Object[] { id }, rowMapper));\n    \tif (nodes.isEmpty())\n    \t\treturn null;\n    \telse if (nodes.size() == 1)\n    \t\treturn (OnmsNode)nodes.iterator().next();\n    \telse\n    \t\tthrow new IncorrectResultSizeDataAccessException(\"Unexpected number of nodes returned.\", 1, nodes.size());\n    }","id":1267,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tpublic OnmsNode getHierarchy(Integer id) {\n    \t\n    \tNodeHierarchyMapper rowMapper = new NodeHierarchyMapper(getDataSource());\n    \t\n\n    \tfinal String hierarchyQuery = \"SELECT \" +\n    \trowMapper.getColumns() +\n    \t\"FROM node \" +\n    \t\"LEFT JOIN ipInterface ON (node.nodeId = ipInterface.nodeId) \" +\n    \t\"LEFT JOIN ifservices ON (ipInterface.nodeId = ifservices.nodeId AND ipInterface.ipAddr = ifservices.ipAddr) \" +\n    \t\"LEFT JOIN outages ON (ifServices.nodeId = outages.nodeId AND ifServices.ipAddr = outages.ipAddr AND ifServices.serviceID = outages.serviceId AND outages.ifRegainedService is null) \" +\n    \t\"WHERE node.nodeId = ?\" +\n    \t\"\";\n    \t\n    \tSet<OnmsNode> nodes = new HashSet<OnmsNode>(getJdbcTemplate().query(hierarchyQuery, new Object[] { id }, rowMapper));\n    \tif (nodes.isEmpty())\n    \t\treturn null;\n    \telse if (nodes.size() == 1)\n    \t\treturn (OnmsNode)nodes.iterator().next();\n    \telse\n    \t\tthrow new IncorrectResultSizeDataAccessException(\"Unexpected number of nodes returned.\", 1, nodes.size());\n    }","commit_id":"17ddc6b7a1384dfd1f5571eecfad9afda80ac50f","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method searches for nodes matching a column in the assets table and also having been\n     * assigned to a category in the cateories table.  Note: this implmentation requires that\n     * the column type be of type VARCHAR.\n     * \n     * @param columnName is VARCHAR column in assets table used in where clause\n     * @param columnValue is the value used for matching <code>columnName<\/code>\n     * @param categoryNames is a collection of names from categories\n     *  table assigned to the node via category_node table\n     * @return Collection of nodes.\n     */\n    public Collection<OnmsNode> findAllByVarCharAssetColumnCategoryList(String columnName, String columnValue, Collection<String> categoryNames) {\n        log().debug(\"findAllByVarCharAssetColumnCategoryList: beginning find.\");\n        \n    \tNodeHierarchyMapper rowMapper = new NodeHierarchyMapper(getDataSource());\n    \t\n\n    \tfinal String hierarchyQuery = \"SELECT \" +\n    \trowMapper.getColumns() +\n    \t\"FROM node \" +\n    \t\"JOIN assets ON (node.nodeid = assets.nodeid) \" +\n    \t\"JOIN category_node ON (node.nodeid = category_node.nodeid) \" +\n    \t\"JOIN categories ON (category_node.categoryid = category.categoryid) \" +\n    \t\"LEFT JOIN ipInterface ON (node.nodeId = ipInterface.nodeId) \" +\n    \t\"LEFT JOIN ifservices ON (ipInterface.nodeId = ifservices.nodeId AND ipInterface.ipAddr = ifservices.ipAddr) \" +\n    \t\"LEFT JOIN outages ON (ifServices.nodeId = outages.nodeId AND ifServices.ipAddr = outages.ipAddr AND ifServices.serviceID = outages.serviceId AND outages.ifRegainedService is null) \" +\n    \t\"WHERE assets.\" + columnName +\" = ? \" +\n    \t\"AMD categories.categoryName in (\"+StringUtils.collectionToDelimitedString(categoryNames, \",\", \"'\", \"'\")+\")\" +\n    \t\"\";\n    \t\n    \tSet<OnmsNode> nodes = new HashSet<OnmsNode>(getJdbcTemplate().query(hierarchyQuery, new Object[] { columnValue }, rowMapper));\n\n    \tlog().debug(\"findAllByVarCharAssetColumnCateoryList: find complete. Nodes found: \"+nodes.size());\n        return nodes;\n    }","id":1268,"modified_method":"/**\n     * This method searches for nodes matching a column in the assets table and also having been\n     * assigned to a category in the cateories table.  Note: this implmentation requires that\n     * the column type be of type VARCHAR.\n     * \n     * @param columnName is VARCHAR column in assets table used in where clause\n     * @param columnValue is the value used for matching <code>columnName<\/code>\n     * @param categoryNames is a collection of names from categories\n     *  table assigned to the node via category_node table\n     * @return Collection of nodes.\n     */\n    public Collection<OnmsNode> findAllByVarCharAssetColumnCategoryList(String columnName, String columnValue, Collection<String> categoryNames) {\n        log().debug(\"findAllByVarCharAssetColumnCategoryList: beginning find.\");\n        List<OnmsNode> nodes = new FindByVarCharAssetColumnAndCategoryList(getDataSource(), columnName, categoryNames).execute(columnValue);\n\n        for (OnmsNode node : nodes) {\n\t\t\tgetHierarchy(node.getId());\n\t\t}\n        \n// Turns out its faster just go thru and load the hierarchy of each node... go figure!        \n//    \tNodeHierarchyMapper rowMapper = new NodeHierarchyMapper(getDataSource());\n//    \t\n//\n//    \tfinal String hierarchyQuery = \"SELECT \" +\n//    \trowMapper.getColumns() +\n//    \t\"FROM node \" +\n//    \t\"JOIN assets ON (node.nodeid = assets.nodeid) \" +\n//    \t\"JOIN category_node ON (node.nodeid = category_node.nodeid) \" +\n//    \t\"JOIN categories ON (category_node.categoryid = category.categoryid) \" +\n//    \t\"LEFT JOIN ipInterface ON (node.nodeId = ipInterface.nodeId) \" +\n//    \t\"LEFT JOIN ifservices ON (ipInterface.nodeId = ifservices.nodeId AND ipInterface.ipAddr = ifservices.ipAddr) \" +\n//    \t\"LEFT JOIN outages ON (ifServices.nodeId = outages.nodeId AND ifServices.ipAddr = outages.ipAddr AND ifServices.serviceID = outages.serviceId AND outages.ifRegainedService is null) \" +\n//    \t\"WHERE assets.\" + columnName +\" = ? \" +\n//    \t\"AMD categories.categoryName in (\"+StringUtils.collectionToDelimitedString(categoryNames, \",\", \"'\", \"'\")+\")\" +\n//    \t\"\";\n//    \t\n//    \tSet<OnmsNode> nodes = new HashSet<OnmsNode>(getJdbcTemplate().query(hierarchyQuery, new Object[] { columnValue }, rowMapper));\n\n    \tlog().debug(\"findAllByVarCharAssetColumnCateoryList: find complete. Nodes found: \"+nodes.size());\n        return nodes;\n    }","commit_id":"d517fc1582ba5c17f0dbe690537863b305a7b599","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method searches for nodes matching a column in the assets table and also having been\n     * assigned to a category in the cateories table.  Note: this implmentation requires that\n     * the column type be of type VARCHAR.\n     * \n     * @param columnName is VARCHAR column in assets table used in where clause\n     * @param columnValue is the value used for matching <code>columnName<\/code>\n     * @param categoryNames is a collection of names from categories\n     *  table assigned to the node via category_node table\n     * @return Collection of nodes.\n     */\n    public Collection<OnmsNode> findAllByVarCharAssetColumnCategoryList(String columnName, String columnValue, Collection<String> categoryNames) {\n        log().debug(\"findAllByVarCharAssetColumnCategoryList: beginning find.\");\n        \n    \tNodeHierarchyMapper rowMapper = new NodeHierarchyMapper(getDataSource());\n    \t\n\n    \tfinal String hierarchyQuery = \"SELECT \" +\n    \trowMapper.getColumns() +\n    \t\"FROM node \" +\n    \t\"JOIN assets ON (node.nodeid = assets.nodeid) \" +\n    \t\"JOIN category_node ON (node.nodeid = category_node.nodeid) \" +\n    \t\"JOIN categories ON (category_node.categoryid = category.categoryid) \" +\n    \t\"LEFT JOIN ipInterface ON (node.nodeId = ipInterface.nodeId) \" +\n    \t\"LEFT JOIN ifservices ON (ipInterface.nodeId = ifservices.nodeId AND ipInterface.ipAddr = ifservices.ipAddr) \" +\n    \t\"LEFT JOIN outages ON (ifServices.nodeId = outages.nodeId AND ifServices.ipAddr = outages.ipAddr AND ifServices.serviceID = outages.serviceId AND outages.ifRegainedService is null) \" +\n    \t\"WHERE assets.\" + columnName +\" = ? \" +\n    \t\"AMD categories.categoryName in (\"+StringUtils.collectionToDelimitedString(categoryNames, \",\", \"'\", \"'\")+\")\" +\n    \t\"\";\n    \t\n    \tSet<OnmsNode> nodes = new HashSet<OnmsNode>(getJdbcTemplate().query(hierarchyQuery, new Object[] { columnValue }, rowMapper));\n\n    \tlog().debug(\"findAllByVarCharAssetColumnCateoryList: find complete. Nodes found: \"+nodes.size());\n        return nodes;\n    }","id":1269,"modified_method":"/**\n     * This method searches for nodes matching a column in the assets table and also having been\n     * assigned to a category in the cateories table.  Note: this implmentation requires that\n     * the column type be of type VARCHAR.\n     * \n     * @param columnName is VARCHAR column in assets table used in where clause\n     * @param columnValue is the value used for matching <code>columnName<\/code>\n     * @param categoryNames is a collection of names from categories\n     *  table assigned to the node via category_node table\n     * @return Collection of nodes.\n     */\n    public Collection<OnmsNode> findAllByVarCharAssetColumnCategoryList(String columnName, String columnValue, Collection<String> categoryNames) {\n        log().debug(\"findAllByVarCharAssetColumnCategoryList: beginning find.\");\n        List<OnmsNode> nodes = new FindByVarCharAssetColumnAndCategoryList(getDataSource(), columnName, categoryNames).execute(columnValue);\n\n        for (OnmsNode node : nodes) {\n\t\t\tgetHierarchy(node.getId());\n\t\t}\n        \n// Turns out its faster just go thru and load the hierarchy of each node... go figure!        \n//    \tNodeHierarchyMapper rowMapper = new NodeHierarchyMapper(getDataSource());\n//    \t\n//\n//    \tfinal String hierarchyQuery = \"SELECT \" +\n//    \trowMapper.getColumns() +\n//    \t\"FROM node \" +\n//    \t\"JOIN assets ON (node.nodeid = assets.nodeid) \" +\n//    \t\"JOIN category_node ON (node.nodeid = category_node.nodeid) \" +\n//    \t\"JOIN categories ON (category_node.categoryid = category.categoryid) \" +\n//    \t\"LEFT JOIN ipInterface ON (node.nodeId = ipInterface.nodeId) \" +\n//    \t\"LEFT JOIN ifservices ON (ipInterface.nodeId = ifservices.nodeId AND ipInterface.ipAddr = ifservices.ipAddr) \" +\n//    \t\"LEFT JOIN outages ON (ifServices.nodeId = outages.nodeId AND ifServices.ipAddr = outages.ipAddr AND ifServices.serviceID = outages.serviceId AND outages.ifRegainedService is null) \" +\n//    \t\"WHERE assets.\" + columnName +\" = ? \" +\n//    \t\"AMD categories.categoryName in (\"+StringUtils.collectionToDelimitedString(categoryNames, \",\", \"'\", \"'\")+\")\" +\n//    \t\"\";\n//    \t\n//    \tSet<OnmsNode> nodes = new HashSet<OnmsNode>(getJdbcTemplate().query(hierarchyQuery, new Object[] { columnValue }, rowMapper));\n\n    \tlog().debug(\"findAllByVarCharAssetColumnCateoryList: find complete. Nodes found: \"+nodes.size());\n        return nodes;\n    }","commit_id":"b5ded7d1a73b41106c3fdbd739a09f3b04889df7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\r\n    public int getConvertedManaCost() {\r\n        if (this.isCopy()) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return this.topHalfCard.getConvertedManaCost() + this.bottomHalfCard.getConvertedManaCost();\r\n        }\r\n    }","id":1270,"modified_method":"@Override\r\n    public int getConvertedManaCost() {\r\n        if (this.isCopy()) {\r\n            return 0;\r\n        } else {\r\n            return (this.topHalfCard != null ? this.topHalfCard.getConvertedManaCost() : 0)\r\n                    + (this.bottomHalfCard != null ? this.bottomHalfCard.getConvertedManaCost() : 0);\r\n        }\r\n    }","commit_id":"54ad8a6ec0e931f33c6b3abf31e49b44a10c4e12","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public int getConvertedManaCost() {\n        if (this.isCopy()) {\n            return 0;\n        }\n        else {\n            return this.topHalfCard.getConvertedManaCost() + this.bottomHalfCard.getConvertedManaCost();\n        }\n    }","id":1271,"modified_method":"@Override\n    public int getConvertedManaCost() {\n        if (this.isCopy()) {\n            return 0;\n        } else {\n            return (this.topHalfCard != null ? this.topHalfCard.getConvertedManaCost() : 0)\n                    + (this.bottomHalfCard != null ? this.bottomHalfCard.getConvertedManaCost() : 0);\n        }\n    }","commit_id":"2a55110627368b48a950de2289eebfb054057db6","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public String getRule() {\n        return \"Whenever a player casts an instant or sorcery spell that targets only {this}, \"\n                + \"that player copies that spell for each creature he or she controls that the spell could target. \"\n                + \"Each copy targets a different one of those creatures.\";\n    }","id":1272,"modified_method":"@Override\n    public String getRule() {\n        return \"Whenever a player casts an instant or sorcery spell that targets only {this}, \"\n                + \"that player copies that spell for each other creature he or she controls that the spell could target. \"\n                + \"Each copy targets a different one of those creatures.\";\n    }","commit_id":"2a55110627368b48a950de2289eebfb054057db6","url":"https://github.com/magefree/mage"},{"original_method":"public MirrorwingDragonCopySpellEffect() {\n        this(new FilterControlledCreaturePermanent());\n        this.staticText = \"that player copies that spell for each creature he or she controls that the spell could target. Each copy targets a different one of those creatures.\";\n    }","id":1273,"modified_method":"public MirrorwingDragonCopySpellEffect() {\n        this(new FilterControlledCreaturePermanent());\n        this.staticText = \"that player copies that spell for each other creature he or she controls that the spell could target. Each copy targets a different one of those creatures.\";\n    }","commit_id":"2a55110627368b48a950de2289eebfb054057db6","url":"https://github.com/magefree/mage"},{"original_method":"private void validateNodeRel1( int node, int prop1, int prop2, int prop3,\n        int rel1, int rel2, int relType1, int relType2 ) throws IOException\n    {\n        assertTrue( nStore.loadLightNode( node ) );\n        ArrayMap<Integer,PropertyData> props = nStore.getProperties( node, \n                false );\n        int count = 0;\n        for ( int keyId : props.keySet() )\n        {\n            int id = props.get( keyId ).getId();\n            PropertyRecord record = pStore.getRecord( id );\n            PropertyData data = new PropertyData( id, getValue( record ) );\n            if ( data.getId() == prop1 )\n            {\n                assertEquals( \"prop1\", MyPropertyIndex.getIndexFor( \n                    keyId ).getKey() );\n                assertEquals( \"string1\", data.getValue() );\n                nStore.changeProperty( node, prop1, \"-string1\" );\n            }\n            else if ( data.getId() == prop2 )\n            {\n                assertEquals( \"prop2\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Integer( 1 ), data.getValue() );\n                nStore.changeProperty( node, prop2, new Integer( -1 ) );\n            }\n            else if ( data.getId() == prop3 )\n            {\n                assertEquals( \"prop3\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Boolean( true ), data.getValue() );\n                nStore.changeProperty( node, prop3, new Boolean( false ) );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 3, count );\n        count = 0;\n        RelationshipChainPosition pos = \n            rStore.getRelationshipChainPosition( node );\n        for ( RelationshipData rel : \n            rStore.getMoreRelationships( node, pos ) )\n        {\n            if ( rel.getId() == rel1 )\n            {\n                assertEquals( node, rel.firstNode() );\n                assertEquals( relType1, rel.relationshipType() );\n            }\n            else if ( rel.getId() == rel2 )\n            {\n                assertEquals( node, rel.secondNode() );\n                assertEquals( relType2, rel.relationshipType() );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 2, count );\n    }","id":1274,"modified_method":"private void validateNodeRel1( int node, int prop1, int prop2, int prop3,\n        int rel1, int rel2, int relType1, int relType2 ) throws IOException\n    {\n        assertTrue( nStore.loadLightNode( node ) );\n        ArrayMap<Integer,PropertyData> props = nStore.getProperties( node, \n                false );\n        int count = 0;\n        for ( int keyId : props.keySet() )\n        {\n            int id = props.get( keyId ).getId();\n            PropertyRecord record = pStore.getRecord( id );\n            PropertyData data = new PropertyData( id, getValue( record ) );\n            if ( data.getId() == prop1 )\n            {\n                assertEquals( \"prop1\", MyPropertyIndex.getIndexFor( \n                    keyId ).getKey() );\n                assertEquals( \"string1\", data.getValue() );\n                nStore.changeProperty( node, prop1, \"-string1\" );\n            }\n            else if ( data.getId() == prop2 )\n            {\n                assertEquals( \"prop2\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Integer( 1 ), data.getValue() );\n                nStore.changeProperty( node, prop2, new Integer( -1 ) );\n            }\n            else if ( data.getId() == prop3 )\n            {\n                assertEquals( \"prop3\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Boolean( true ), data.getValue() );\n                nStore.changeProperty( node, prop3, new Boolean( false ) );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 3, count );\n        count = 0;\n        RelationshipChainPosition pos = rStore.getRelationshipChainPosition( node );\n        while ( true )\n        {\n            Iterable<RelationshipData> relData = rStore.getMoreRelationships( node, pos );\n            if ( !relData.iterator().hasNext() )\n            {\n                break;\n            }\n            for ( RelationshipData rel : relData )\n            {\n                if ( rel.getId() == rel1 )\n                {\n                    assertEquals( node, rel.firstNode() );\n                    assertEquals( relType1, rel.relationshipType() );\n                }\n                else if ( rel.getId() == rel2 )\n                {\n                    assertEquals( node, rel.secondNode() );\n                    assertEquals( relType2, rel.relationshipType() );\n                }\n                else\n                {\n                    throw new IOException();\n                }\n                count++;\n            }\n        }\n        assertEquals( 2, count );\n    }","commit_id":"58781ed25750f8e7ed0ea85f811fa7c2146517c9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void validateNodeRel2( int node, int prop1, int prop2, int prop3,\n        int rel1, int rel2, int relType1, int relType2 ) throws IOException\n    {\n        assertTrue( nStore.loadLightNode( node ) );\n        ArrayMap<Integer,PropertyData> props = nStore.getProperties( node, \n                false );\n        int count = 0;\n        for ( int keyId : props.keySet() )\n        {\n            int id = props.get( keyId ).getId();\n            PropertyRecord record = pStore.getRecord( id );\n            PropertyData data = new PropertyData( id, getValue( record ) );\n            if ( data.getId() == prop1 )\n            {\n                assertEquals( \"prop1\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( \"string2\", data.getValue() );\n                nStore.changeProperty( node, prop1, \"-string2\" );\n            }\n            else if ( data.getId() == prop2 )\n            {\n                assertEquals( \"prop2\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Integer( 2 ), data.getValue() );\n                nStore.changeProperty( node, prop2, new Integer( -2 ) );\n            }\n            else if ( data.getId() == prop3 )\n            {\n                assertEquals( \"prop3\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Boolean( false ), data.getValue() );\n                nStore.changeProperty( node, prop3, new Boolean( true ) );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 3, count );\n        count = 0;\n        RelationshipChainPosition pos = \n            rStore.getRelationshipChainPosition( node );\n        for ( RelationshipData rel : \n            rStore.getMoreRelationships( node, pos ) )\n        {\n            if ( rel.getId() == rel1 )\n            {\n                assertEquals( node, rel.secondNode() );\n                assertEquals( relType1, rel.relationshipType() );\n            }\n            else if ( rel.getId() == rel2 )\n            {\n                assertEquals( node, rel.firstNode() );\n                assertEquals( relType2, rel.relationshipType() );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 2, count );\n    }","id":1275,"modified_method":"private void validateNodeRel2( int node, int prop1, int prop2, int prop3,\n        int rel1, int rel2, int relType1, int relType2 ) throws IOException\n    {\n        assertTrue( nStore.loadLightNode( node ) );\n        ArrayMap<Integer,PropertyData> props = nStore.getProperties( node, \n                false );\n        int count = 0;\n        for ( int keyId : props.keySet() )\n        {\n            int id = props.get( keyId ).getId();\n            PropertyRecord record = pStore.getRecord( id );\n            PropertyData data = new PropertyData( id, getValue( record ) );\n            if ( data.getId() == prop1 )\n            {\n                assertEquals( \"prop1\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( \"string2\", data.getValue() );\n                nStore.changeProperty( node, prop1, \"-string2\" );\n            }\n            else if ( data.getId() == prop2 )\n            {\n                assertEquals( \"prop2\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Integer( 2 ), data.getValue() );\n                nStore.changeProperty( node, prop2, new Integer( -2 ) );\n            }\n            else if ( data.getId() == prop3 )\n            {\n                assertEquals( \"prop3\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Boolean( false ), data.getValue() );\n                nStore.changeProperty( node, prop3, new Boolean( true ) );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 3, count );\n        count = 0;\n        \n        RelationshipChainPosition pos = rStore.getRelationshipChainPosition( node );\n        while ( true )\n        {\n            Iterable<RelationshipData> relData = rStore.getMoreRelationships( node, pos );\n            if ( !relData.iterator().hasNext() )\n            {\n                break;\n            }\n            for ( RelationshipData rel : relData )\n            {\n                if ( rel.getId() == rel1 )\n                {\n                    assertEquals( node, rel.secondNode() );\n                    assertEquals( relType1, rel.relationshipType() );\n                }\n                else if ( rel.getId() == rel2 )\n                {\n                    assertEquals( node, rel.firstNode() );\n                    assertEquals( relType2, rel.relationshipType() );\n                }\n                else\n                {\n                    throw new IOException();\n                }\n                count++;\n            }\n        }\n        assertEquals( 2, count );\n    }","commit_id":"58781ed25750f8e7ed0ea85f811fa7c2146517c9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void validateNodeRel2( int node, int prop1, int prop2, int prop3,\n        int rel1, int rel2, int relType1, int relType2 ) throws IOException\n    {\n        assertTrue( nStore.loadLightNode( node ) );\n        ArrayMap<Integer,PropertyData> props = nStore.getProperties( node, \n                false );\n        int count = 0;\n        for ( int keyId : props.keySet() )\n        {\n            int id = props.get( keyId ).getId();\n            PropertyRecord record = pStore.getRecord( id );\n            PropertyData data = new PropertyData( id, getValue( record ) );\n            if ( data.getId() == prop1 )\n            {\n                assertEquals( \"prop1\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( \"string2\", data.getValue() );\n                nStore.changeProperty( node, prop1, \"-string2\" );\n            }\n            else if ( data.getId() == prop2 )\n            {\n                assertEquals( \"prop2\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Integer( 2 ), data.getValue() );\n                nStore.changeProperty( node, prop2, new Integer( -2 ) );\n            }\n            else if ( data.getId() == prop3 )\n            {\n                assertEquals( \"prop3\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Boolean( false ), data.getValue() );\n                nStore.changeProperty( node, prop3, new Boolean( true ) );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 3, count );\n        count = 0;\n        RelationshipChainPosition pos = \n            rStore.getRelationshipChainPosition( node );\n        for ( RelationshipData rel : \n            rStore.getMoreRelationships( node, pos ) )\n        {\n            if ( rel.getId() == rel1 )\n            {\n                assertEquals( node, rel.secondNode() );\n                assertEquals( relType1, rel.relationshipType() );\n            }\n            else if ( rel.getId() == rel2 )\n            {\n                assertEquals( node, rel.firstNode() );\n                assertEquals( relType2, rel.relationshipType() );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 2, count );\n    }","id":1276,"modified_method":"private void validateNodeRel2( int node, int prop1, int prop2, int prop3,\n        int rel1, int rel2, int relType1, int relType2 ) throws IOException\n    {\n        assertTrue( nStore.loadLightNode( node ) );\n        ArrayMap<Integer,PropertyData> props = nStore.getProperties( node, \n                false );\n        int count = 0;\n        for ( int keyId : props.keySet() )\n        {\n            int id = props.get( keyId ).getId();\n            PropertyRecord record = pStore.getRecord( id );\n            PropertyData data = new PropertyData( id, getValue( record ) );\n            if ( data.getId() == prop1 )\n            {\n                assertEquals( \"prop1\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( \"string2\", data.getValue() );\n                nStore.changeProperty( node, prop1, \"-string2\" );\n            }\n            else if ( data.getId() == prop2 )\n            {\n                assertEquals( \"prop2\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Integer( 2 ), data.getValue() );\n                nStore.changeProperty( node, prop2, new Integer( -2 ) );\n            }\n            else if ( data.getId() == prop3 )\n            {\n                assertEquals( \"prop3\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Boolean( false ), data.getValue() );\n                nStore.changeProperty( node, prop3, new Boolean( true ) );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 3, count );\n        count = 0;\n        \n        RelationshipChainPosition pos = rStore.getRelationshipChainPosition( node );\n        while ( true )\n        {\n            Iterable<RelationshipData> relData = rStore.getMoreRelationships( node, pos );\n            if ( !relData.iterator().hasNext() )\n            {\n                break;\n            }\n            for ( RelationshipData rel : relData )\n            {\n                if ( rel.getId() == rel1 )\n                {\n                    assertEquals( node, rel.secondNode() );\n                    assertEquals( relType1, rel.relationshipType() );\n                }\n                else if ( rel.getId() == rel2 )\n                {\n                    assertEquals( node, rel.firstNode() );\n                    assertEquals( relType2, rel.relationshipType() );\n                }\n                else\n                {\n                    throw new IOException();\n                }\n                count++;\n            }\n        }\n        assertEquals( 2, count );\n    }","commit_id":"62823c7dc285876e8e33becc0a878de345e86475","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void validateNodeRel1( int node, int prop1, int prop2, int prop3,\n        int rel1, int rel2, int relType1, int relType2 ) throws IOException\n    {\n        assertTrue( nStore.loadLightNode( node ) );\n        ArrayMap<Integer,PropertyData> props = nStore.getProperties( node, \n                false );\n        int count = 0;\n        for ( int keyId : props.keySet() )\n        {\n            int id = props.get( keyId ).getId();\n            PropertyRecord record = pStore.getRecord( id );\n            PropertyData data = new PropertyData( id, getValue( record ) );\n            if ( data.getId() == prop1 )\n            {\n                assertEquals( \"prop1\", MyPropertyIndex.getIndexFor( \n                    keyId ).getKey() );\n                assertEquals( \"string1\", data.getValue() );\n                nStore.changeProperty( node, prop1, \"-string1\" );\n            }\n            else if ( data.getId() == prop2 )\n            {\n                assertEquals( \"prop2\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Integer( 1 ), data.getValue() );\n                nStore.changeProperty( node, prop2, new Integer( -1 ) );\n            }\n            else if ( data.getId() == prop3 )\n            {\n                assertEquals( \"prop3\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Boolean( true ), data.getValue() );\n                nStore.changeProperty( node, prop3, new Boolean( false ) );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 3, count );\n        count = 0;\n        RelationshipChainPosition pos = \n            rStore.getRelationshipChainPosition( node );\n        for ( RelationshipData rel : \n            rStore.getMoreRelationships( node, pos ) )\n        {\n            if ( rel.getId() == rel1 )\n            {\n                assertEquals( node, rel.firstNode() );\n                assertEquals( relType1, rel.relationshipType() );\n            }\n            else if ( rel.getId() == rel2 )\n            {\n                assertEquals( node, rel.secondNode() );\n                assertEquals( relType2, rel.relationshipType() );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 2, count );\n    }","id":1277,"modified_method":"private void validateNodeRel1( int node, int prop1, int prop2, int prop3,\n        int rel1, int rel2, int relType1, int relType2 ) throws IOException\n    {\n        assertTrue( nStore.loadLightNode( node ) );\n        ArrayMap<Integer,PropertyData> props = nStore.getProperties( node, \n                false );\n        int count = 0;\n        for ( int keyId : props.keySet() )\n        {\n            int id = props.get( keyId ).getId();\n            PropertyRecord record = pStore.getRecord( id );\n            PropertyData data = new PropertyData( id, getValue( record ) );\n            if ( data.getId() == prop1 )\n            {\n                assertEquals( \"prop1\", MyPropertyIndex.getIndexFor( \n                    keyId ).getKey() );\n                assertEquals( \"string1\", data.getValue() );\n                nStore.changeProperty( node, prop1, \"-string1\" );\n            }\n            else if ( data.getId() == prop2 )\n            {\n                assertEquals( \"prop2\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Integer( 1 ), data.getValue() );\n                nStore.changeProperty( node, prop2, new Integer( -1 ) );\n            }\n            else if ( data.getId() == prop3 )\n            {\n                assertEquals( \"prop3\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Boolean( true ), data.getValue() );\n                nStore.changeProperty( node, prop3, new Boolean( false ) );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 3, count );\n        count = 0;\n        RelationshipChainPosition pos = rStore.getRelationshipChainPosition( node );\n        while ( true )\n        {\n            Iterable<RelationshipData> relData = rStore.getMoreRelationships( node, pos );\n            if ( !relData.iterator().hasNext() )\n            {\n                break;\n            }\n            for ( RelationshipData rel : relData )\n            {\n                if ( rel.getId() == rel1 )\n                {\n                    assertEquals( node, rel.firstNode() );\n                    assertEquals( relType1, rel.relationshipType() );\n                }\n                else if ( rel.getId() == rel2 )\n                {\n                    assertEquals( node, rel.secondNode() );\n                    assertEquals( relType2, rel.relationshipType() );\n                }\n                else\n                {\n                    throw new IOException();\n                }\n                count++;\n            }\n        }\n        assertEquals( 2, count );\n    }","commit_id":"62823c7dc285876e8e33becc0a878de345e86475","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void validateNodeRel1( int node, int prop1, int prop2, int prop3,\n        int rel1, int rel2, int relType1, int relType2 ) throws IOException\n    {\n        assertTrue( nStore.loadLightNode( node ) );\n        ArrayMap<Integer,PropertyData> props = nStore.getProperties( node, \n                false );\n        int count = 0;\n        for ( int keyId : props.keySet() )\n        {\n            int id = props.get( keyId ).getId();\n            PropertyRecord record = pStore.getRecord( id );\n            PropertyData data = new PropertyData( id, getValue( record ) );\n            if ( data.getId() == prop1 )\n            {\n                assertEquals( \"prop1\", MyPropertyIndex.getIndexFor( \n                    keyId ).getKey() );\n                assertEquals( \"string1\", data.getValue() );\n                nStore.changeProperty( node, prop1, \"-string1\" );\n            }\n            else if ( data.getId() == prop2 )\n            {\n                assertEquals( \"prop2\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Integer( 1 ), data.getValue() );\n                nStore.changeProperty( node, prop2, new Integer( -1 ) );\n            }\n            else if ( data.getId() == prop3 )\n            {\n                assertEquals( \"prop3\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Boolean( true ), data.getValue() );\n                nStore.changeProperty( node, prop3, new Boolean( false ) );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 3, count );\n        count = 0;\n        RelationshipChainPosition pos = \n            rStore.getRelationshipChainPosition( node );\n        for ( RelationshipData rel : \n            rStore.getMoreRelationships( node, pos ) )\n        {\n            if ( rel.getId() == rel1 )\n            {\n                assertEquals( node, rel.firstNode() );\n                assertEquals( relType1, rel.relationshipType() );\n            }\n            else if ( rel.getId() == rel2 )\n            {\n                assertEquals( node, rel.secondNode() );\n                assertEquals( relType2, rel.relationshipType() );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 2, count );\n    }","id":1278,"modified_method":"private void validateNodeRel1( int node, int prop1, int prop2, int prop3,\n        int rel1, int rel2, int relType1, int relType2 ) throws IOException\n    {\n        assertTrue( nStore.loadLightNode( node ) );\n        ArrayMap<Integer,PropertyData> props = nStore.getProperties( node, \n                false );\n        int count = 0;\n        for ( int keyId : props.keySet() )\n        {\n            int id = props.get( keyId ).getId();\n            PropertyRecord record = pStore.getRecord( id );\n            PropertyData data = new PropertyData( id, getValue( record ) );\n            if ( data.getId() == prop1 )\n            {\n                assertEquals( \"prop1\", MyPropertyIndex.getIndexFor( \n                    keyId ).getKey() );\n                assertEquals( \"string1\", data.getValue() );\n                nStore.changeProperty( node, prop1, \"-string1\" );\n            }\n            else if ( data.getId() == prop2 )\n            {\n                assertEquals( \"prop2\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Integer( 1 ), data.getValue() );\n                nStore.changeProperty( node, prop2, new Integer( -1 ) );\n            }\n            else if ( data.getId() == prop3 )\n            {\n                assertEquals( \"prop3\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Boolean( true ), data.getValue() );\n                nStore.changeProperty( node, prop3, new Boolean( false ) );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 3, count );\n        count = 0;\n        RelationshipChainPosition pos = rStore.getRelationshipChainPosition( node );\n        while ( true )\n        {\n            Iterable<RelationshipData> relData = rStore.getMoreRelationships( node, pos );\n            if ( !relData.iterator().hasNext() )\n            {\n                break;\n            }\n            for ( RelationshipData rel : relData )\n            {\n                if ( rel.getId() == rel1 )\n                {\n                    assertEquals( node, rel.firstNode() );\n                    assertEquals( relType1, rel.relationshipType() );\n                }\n                else if ( rel.getId() == rel2 )\n                {\n                    assertEquals( node, rel.secondNode() );\n                    assertEquals( relType2, rel.relationshipType() );\n                }\n                else\n                {\n                    throw new IOException();\n                }\n                count++;\n            }\n        }\n        assertEquals( 2, count );\n    }","commit_id":"40a99e5e725ec89b093d738d7d2ebce603db2a2b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void validateNodeRel2( int node, int prop1, int prop2, int prop3,\n        int rel1, int rel2, int relType1, int relType2 ) throws IOException\n    {\n        assertTrue( nStore.loadLightNode( node ) );\n        ArrayMap<Integer,PropertyData> props = nStore.getProperties( node, \n                false );\n        int count = 0;\n        for ( int keyId : props.keySet() )\n        {\n            int id = props.get( keyId ).getId();\n            PropertyRecord record = pStore.getRecord( id );\n            PropertyData data = new PropertyData( id, getValue( record ) );\n            if ( data.getId() == prop1 )\n            {\n                assertEquals( \"prop1\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( \"string2\", data.getValue() );\n                nStore.changeProperty( node, prop1, \"-string2\" );\n            }\n            else if ( data.getId() == prop2 )\n            {\n                assertEquals( \"prop2\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Integer( 2 ), data.getValue() );\n                nStore.changeProperty( node, prop2, new Integer( -2 ) );\n            }\n            else if ( data.getId() == prop3 )\n            {\n                assertEquals( \"prop3\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Boolean( false ), data.getValue() );\n                nStore.changeProperty( node, prop3, new Boolean( true ) );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 3, count );\n        count = 0;\n        RelationshipChainPosition pos = \n            rStore.getRelationshipChainPosition( node );\n        for ( RelationshipData rel : \n            rStore.getMoreRelationships( node, pos ) )\n        {\n            if ( rel.getId() == rel1 )\n            {\n                assertEquals( node, rel.secondNode() );\n                assertEquals( relType1, rel.relationshipType() );\n            }\n            else if ( rel.getId() == rel2 )\n            {\n                assertEquals( node, rel.firstNode() );\n                assertEquals( relType2, rel.relationshipType() );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 2, count );\n    }","id":1279,"modified_method":"private void validateNodeRel2( int node, int prop1, int prop2, int prop3,\n        int rel1, int rel2, int relType1, int relType2 ) throws IOException\n    {\n        assertTrue( nStore.loadLightNode( node ) );\n        ArrayMap<Integer,PropertyData> props = nStore.getProperties( node, \n                false );\n        int count = 0;\n        for ( int keyId : props.keySet() )\n        {\n            int id = props.get( keyId ).getId();\n            PropertyRecord record = pStore.getRecord( id );\n            PropertyData data = new PropertyData( id, getValue( record ) );\n            if ( data.getId() == prop1 )\n            {\n                assertEquals( \"prop1\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( \"string2\", data.getValue() );\n                nStore.changeProperty( node, prop1, \"-string2\" );\n            }\n            else if ( data.getId() == prop2 )\n            {\n                assertEquals( \"prop2\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Integer( 2 ), data.getValue() );\n                nStore.changeProperty( node, prop2, new Integer( -2 ) );\n            }\n            else if ( data.getId() == prop3 )\n            {\n                assertEquals( \"prop3\", MyPropertyIndex.getIndexFor(\n                    keyId ).getKey() );\n                assertEquals( new Boolean( false ), data.getValue() );\n                nStore.changeProperty( node, prop3, new Boolean( true ) );\n            }\n            else\n            {\n                throw new IOException();\n            }\n            count++;\n        }\n        assertEquals( 3, count );\n        count = 0;\n        \n        RelationshipChainPosition pos = rStore.getRelationshipChainPosition( node );\n        while ( true )\n        {\n            Iterable<RelationshipData> relData = rStore.getMoreRelationships( node, pos );\n            if ( !relData.iterator().hasNext() )\n            {\n                break;\n            }\n            for ( RelationshipData rel : relData )\n            {\n                if ( rel.getId() == rel1 )\n                {\n                    assertEquals( node, rel.secondNode() );\n                    assertEquals( relType1, rel.relationshipType() );\n                }\n                else if ( rel.getId() == rel2 )\n                {\n                    assertEquals( node, rel.firstNode() );\n                    assertEquals( relType2, rel.relationshipType() );\n                }\n                else\n                {\n                    throw new IOException();\n                }\n                count++;\n            }\n        }\n        assertEquals( 2, count );\n    }","commit_id":"40a99e5e725ec89b093d738d7d2ebce603db2a2b","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Deployment\n    public static Archive<?> runAsDeployment() {\n        // using JavaArchive doesn't work, because of a bug in Arquillian, it only deploys wars properly\n        final WebArchive war = ShrinkWrap.create(WebArchive.class, \"ejb3security.war\")\n                .addPackage(RolesAllowedOverrideBean.class.getPackage()).addClass(Util.class)\n                .addClasses(AnnotationAuthorizationTestCase.class)\n                .addClasses(AbstractSecurityDomainSetup.class, EjbSecurityDomainSetup.class)\n                .addAsResource(AnnotationAuthorizationTestCase.class.getPackage(), \"users.properties\", \"users.properties\")\n                .addAsResource(AnnotationAuthorizationTestCase.class.getPackage(), \"roles.properties\", \"roles.properties\")\n                .addAsWebInfResource(AnnotationAuthorizationTestCase.class.getPackage(), \"jboss-web.xml\", \"jboss-web.xml\")\n                .addAsManifestResource(new StringAsset(\"Manifest-Version: 1.0\\nDependencies: org.jboss.as.controller-client,org.jboss.dmr\\n\"), \"MANIFEST.MF\");\n        war.addPackage(CommonCriteria.class.getPackage());\n        return war;\n    }","id":1280,"modified_method":"@Deployment\n    public static Archive<?> runAsDeployment() {\n        final Package currentPackage = AnnotationAuthorizationTestCase.class.getPackage();\n        // using JavaArchive doesn't work, because of a bug in Arquillian, it only deploys wars properly\n        final WebArchive war = ShrinkWrap.create(WebArchive.class, \"ejb3security.war\")\n                .addPackage(RolesAllowedOverrideBean.class.getPackage()).addClass(Util.class)\n                .addClasses(AnnotationAuthorizationTestCase.class)\n                .addClasses(AbstractSecurityDomainSetup.class, EjbSecurityDomainSetup.class)\n                .addAsResource(currentPackage, \"users.properties\", \"users.properties\")\n                .addAsResource(currentPackage, \"roles.properties\", \"roles.properties\")\n                .addAsWebInfResource(currentPackage, \"jboss-web.xml\", \"jboss-web.xml\")\n                .addAsManifestResource(new StringAsset(\"Manifest-Version: 1.0\\nDependencies: org.jboss.as.controller-client,org.jboss.dmr\\n\"), \"MANIFEST.MF\")\n                .addAsManifestResource(currentPackage, \"permissions.xml\", \"permissions.xml\");\n        war.addPackage(CommonCriteria.class.getPackage());\n        return war;\n    }","commit_id":"8d76a2faa0a700409de82e1d2fd2204993afcd51","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static Archive<?> deploy() {       \n        JavaArchive jar = ShrinkWrap.create(JavaArchive.class, ARCHIVE_NAME + \".jar\");\n        jar.addPackage(AsynchronousSecurityTestCase.class.getPackage());\n        jar.addClass(AnnotationAuthorizationTestCase.class);\n        jar.addClasses(EjbSecurityDomainSetup.class, AbstractSecurityDomainSetup.class, ServerSetupTask.class, Util.class);\n        jar.addAsResource(AsynchronousSecurityTestCase.class.getPackage(), \"roles.properties\", \"roles.properties\");\n        jar.addAsResource(AsynchronousSecurityTestCase.class.getPackage(), \"users.properties\", \"users.properties\");\n        jar.addAsManifestResource(new StringAsset(\"Dependencies: org.jboss.as.controller-client,org.jboss.dmr\\n\"),\"MANIFEST.MF\");\n        jar.addPackage(CommonCriteria.class.getPackage());\n        log.info(jar.toString(true));\n        return jar;\n    }","id":1281,"modified_method":"@Deployment\n    public static Archive<?> deploy() {\n        final Package currentPackage = AsynchronousSecurityTestCase.class.getPackage();\n        JavaArchive jar = ShrinkWrap.create(JavaArchive.class, ARCHIVE_NAME + \".jar\")\n                .addPackage(currentPackage)\n                .addClass(AnnotationAuthorizationTestCase.class)\n                .addClasses(EjbSecurityDomainSetup.class, AbstractSecurityDomainSetup.class, ServerSetupTask.class, Util.class)\n                .addAsResource(currentPackage, \"roles.properties\", \"roles.properties\")\n                .addAsResource(currentPackage, \"users.properties\", \"users.properties\")\n                .addAsManifestResource(new StringAsset(\"Dependencies: org.jboss.as.controller-client,org.jboss.dmr\\n\"),\"MANIFEST.MF\")\n                .addAsManifestResource(currentPackage, \"permissions.xml\", \"permissions.xml\")\n                .addPackage(CommonCriteria.class.getPackage());\n        log.info(jar.toString(true));\n        return jar;\n    }","commit_id":"8d76a2faa0a700409de82e1d2fd2204993afcd51","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static Archive<?> deployment() {\n        // using JavaArchive doesn't work, because of a bug in Arquillian, it only deploys wars properly\n        final WebArchive war = ShrinkWrap.create(WebArchive.class, \"ejb3security.war\")\n                .addPackage(WhoAmIBean.class.getPackage()).addPackage(EntryBean.class.getPackage())\n                .addClass(WhoAmI.class).addClass(Util.class).addClass(Entry.class)\n                .addClasses(WhoAmIServlet.class, AuthenticationTestCase.class)\n                .addClasses(AbstractSecurityDomainSetup.class, EjbSecurityDomainSetup.class)\n                .addAsResource(AnnotationAuthorizationTestCase.class.getPackage(), \"users.properties\", \"users.properties\")\n                .addAsResource(AnnotationAuthorizationTestCase.class.getPackage(), \"roles.properties\", \"roles.properties\")\n                .addAsWebInfResource(AnnotationAuthorizationTestCase.class.getPackage(), \"web.xml\", \"web.xml\")\n                .addAsWebInfResource(AnnotationAuthorizationTestCase.class.getPackage(), \"jboss-web.xml\", \"jboss-web.xml\")\n                .addAsWebInfResource(AuthenticationTestCase.class.getPackage(), \"jboss-ejb3.xml\", \"jboss-ejb3.xml\")\n                .addAsManifestResource(new StringAsset(\"Manifest-Version: 1.0\\nDependencies: org.jboss.as.controller-client,org.jboss.dmr\\n\"), \"MANIFEST.MF\");\n        war.addPackage(CommonCriteria.class.getPackage());\n        return war;\n    }","id":1282,"modified_method":"@Deployment\n    public static Archive<?> deployment() {\n        final Package currentPackage = AuthenticationTestCase.class.getPackage();\n        // using JavaArchive doesn't work, because of a bug in Arquillian, it only deploys wars properly\n        final WebArchive war = ShrinkWrap.create(WebArchive.class, \"ejb3security.war\")\n                .addPackage(WhoAmIBean.class.getPackage()).addPackage(EntryBean.class.getPackage())\n                .addClass(WhoAmI.class).addClass(Util.class).addClass(Entry.class)\n                .addClasses(WhoAmIServlet.class, AuthenticationTestCase.class)\n                .addClasses(AbstractSecurityDomainSetup.class, EjbSecurityDomainSetup.class)\n                .addAsResource(currentPackage, \"users.properties\", \"users.properties\")\n                .addAsResource(currentPackage, \"roles.properties\", \"roles.properties\")\n                .addAsWebInfResource(currentPackage, \"web.xml\", \"web.xml\")\n                .addAsWebInfResource(currentPackage, \"jboss-web.xml\", \"jboss-web.xml\")\n                .addAsWebInfResource(currentPackage, \"jboss-ejb3.xml\", \"jboss-ejb3.xml\")\n                .addAsManifestResource(new StringAsset(\"Manifest-Version: 1.0\\nDependencies: org.jboss.as.controller-client,org.jboss.dmr\\n\"), \"MANIFEST.MF\")\n                .addAsManifestResource(currentPackage, AuthenticationTestCase.class.getSimpleName() + \"-permissions.xml\", \"permissions.xml\");\n        war.addPackage(CommonCriteria.class.getPackage());\n        return war;\n    }","commit_id":"8d76a2faa0a700409de82e1d2fd2204993afcd51","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static WebArchive createDeployment() {\n        final WebArchive war = ShrinkWrap.create(WebArchive.class, \"ejb-security-test.war\");\n        war.addClasses(BeanWithoutExplicitSecurityDomain.class, Restriction.class, FullAccess.class, EjbSecurityDomainSetup.class, Util.class);\n        war.addAsWebInfResource(EJBInWarDefaultSecurityDomainTestCase.class.getPackage(), \"jboss-web.xml\", \"jboss-web.xml\");\n        war.addPackage(CommonCriteria.class.getPackage());\n        war.addPackage(AbstractSecurityDomainSetup.class.getPackage());\n        war.addAsResource(AnnotationAuthorizationTestCase.class.getPackage(), \"users.properties\", \"users.properties\");\n        war.addAsResource(AnnotationAuthorizationTestCase.class.getPackage(), \"roles.properties\", \"roles.properties\");\n        return war;\n    }","id":1283,"modified_method":"@Deployment\n    public static WebArchive createDeployment() {\n        final Package currentPackage = EJBInWarDefaultSecurityDomainTestCase.class.getPackage();\n        final WebArchive war = ShrinkWrap.create(WebArchive.class, \"ejb-security-test.war\")\n                .addClasses(BeanWithoutExplicitSecurityDomain.class, Restriction.class)\n                .addClasses(FullAccess.class, EjbSecurityDomainSetup.class, Util.class)\n                .addAsWebInfResource(currentPackage, \"jboss-web.xml\", \"jboss-web.xml\")\n                .addPackage(CommonCriteria.class.getPackage())\n                .addPackage(AbstractSecurityDomainSetup.class.getPackage())\n                .addAsResource(currentPackage, \"users.properties\", \"users.properties\")\n                .addAsResource(currentPackage, \"roles.properties\", \"roles.properties\")\n                .addAsManifestResource(currentPackage, \"permissions.xml\", \"permissions.xml\");\n        return war;\n    }","commit_id":"8d76a2faa0a700409de82e1d2fd2204993afcd51","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static Archive<?> runAsDeployment() {\n        // using JavaArchive doesn't work, because of a bug in Arquillian, it only deploys wars properly\n        final WebArchive war = ShrinkWrap.create(WebArchive.class, \"ejb3security.war\")\n                .addPackage(EntryBean.class.getPackage())\n                .addClasses(Util.class) // TODO - Should not need to exclude the interfaces.\n                .addClasses(AbstractSecurityDomainSetup.class, EjbSecurityDomainSetup.class)\n                .addAsResource(AnnotationAuthorizationTestCase.class.getPackage(), \"users.properties\", \"users.properties\")\n                .addAsResource(AnnotationAuthorizationTestCase.class.getPackage(), \"roles.properties\", \"roles.properties\")\n                .addAsWebInfResource(AnnotationAuthorizationTestCase.class.getPackage(), \"jboss-web.xml\", \"jboss-web.xml\")\n                .addAsWebInfResource(LifecycleTestCase.class.getPackage(), \"jboss-ejb3.xml\", \"jboss-ejb3.xml\")\n                .addAsManifestResource(new StringAsset(\"Manifest-Version: 1.0\\nDependencies: org.jboss.as.controller-client,org.jboss.dmr\\n\"), \"MANIFEST.MF\");\n        war.addPackage(CommonCriteria.class.getPackage());\n        return war;\n    }","id":1284,"modified_method":"@Deployment\n    public static Archive<?> runAsDeployment() {\n        final Package currentPackage = LifecycleTestCase.class.getPackage();\n        // using JavaArchive doesn't work, because of a bug in Arquillian, it only deploys wars properly\n        final WebArchive war = ShrinkWrap.create(WebArchive.class, \"ejb3security.war\")\n                .addPackage(EntryBean.class.getPackage())\n                .addClasses(Util.class) // TODO - Should not need to exclude the interfaces.\n                .addClasses(AbstractSecurityDomainSetup.class, EjbSecurityDomainSetup.class)\n                .addAsResource(currentPackage, \"users.properties\", \"users.properties\")\n                .addAsResource(currentPackage, \"roles.properties\", \"roles.properties\")\n                .addAsWebInfResource(currentPackage, \"jboss-web.xml\", \"jboss-web.xml\")\n                .addAsWebInfResource(currentPackage, \"jboss-ejb3.xml\", \"jboss-ejb3.xml\")\n                .addAsManifestResource(new StringAsset(\"Manifest-Version: 1.0\\nDependencies: org.jboss.as.controller-client,org.jboss.dmr\\n\"), \"MANIFEST.MF\")\n                .addAsManifestResource(currentPackage, \"permissions.xml\", \"permissions.xml\");\n        war.addPackage(CommonCriteria.class.getPackage());\n        return war;\n    }","commit_id":"8d76a2faa0a700409de82e1d2fd2204993afcd51","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static Archive createDeployment() {\n        final JavaArchive ejbJarOne = ShrinkWrap.create(JavaArchive.class, MODULE_ONE_NAME + \".jar\");\n        ejbJarOne.addClasses(SecuredBeanOne.class);\n        ejbJarOne.addAsManifestResource(SecuredBeanOne.class.getPackage(), \"one-jboss-ejb3.xml\", \"jboss-ejb3.xml\");\n\n        final JavaArchive ejbJarTwo = ShrinkWrap.create(JavaArchive.class, MODULE_TWO_NAME + \".jar\");\n        ejbJarTwo.addClass(SecuredBeanTwo.class);\n        ejbJarTwo.addAsManifestResource(SecuredBeanTwo.class.getPackage(), \"two-jboss-ejb3.xml\", \"jboss-ejb3.xml\");\n\n\n        final JavaArchive ejbJarThree = ShrinkWrap.create(JavaArchive.class, MODULE_THREE_NAME + \".jar\");\n        ejbJarThree.addClass(SecuredBeanThree.class);\n\n        final JavaArchive libJar = ShrinkWrap.create(JavaArchive.class, \"bean-interfaces.jar\");\n        libJar.addClasses(SecurityTestRemoteView.class, Util.class, MissingMethodPermissionsDefaultAllowedTestCase.class);\n\n        final EnterpriseArchive ear = ShrinkWrap.create(EnterpriseArchive.class, APP_NAME + \".ear\");\n        ear.addAsModules(ejbJarOne, ejbJarTwo, ejbJarThree);\n        ear.addAsLibrary(libJar);\n\n        return ear;\n    }","id":1285,"modified_method":"@Deployment\n    public static Archive createDeployment() {\n        final Package currentPackage = MissingMethodPermissionsDefaultAllowedTestCase.class.getPackage();\n\n        final JavaArchive ejbJarOne = ShrinkWrap.create(JavaArchive.class, MODULE_ONE_NAME + \".jar\")\n                .addClasses(SecuredBeanOne.class)\n                .addAsManifestResource(currentPackage, \"one-jboss-ejb3.xml\", \"jboss-ejb3.xml\");\n\n        final JavaArchive ejbJarTwo = ShrinkWrap.create(JavaArchive.class, MODULE_TWO_NAME + \".jar\")\n                .addClass(SecuredBeanTwo.class)\n                .addAsManifestResource(currentPackage, \"two-jboss-ejb3.xml\", \"jboss-ejb3.xml\");\n\n\n        final JavaArchive ejbJarThree = ShrinkWrap.create(JavaArchive.class, MODULE_THREE_NAME + \".jar\")\n                .addClass(SecuredBeanThree.class);\n\n        final JavaArchive libJar = ShrinkWrap.create(JavaArchive.class, \"bean-interfaces.jar\")\n                .addClasses(SecurityTestRemoteView.class, Util.class, MissingMethodPermissionsDefaultAllowedTestCase.class);\n\n        final EnterpriseArchive ear = ShrinkWrap.create(EnterpriseArchive.class, APP_NAME + \".ear\")\n                .addAsModules(ejbJarOne, ejbJarTwo, ejbJarThree)\n                .addAsLibrary(libJar)\n                .addAsManifestResource(currentPackage, \"permissions.xml\", \"permissions.xml\");\n\n        return ear;\n    }","commit_id":"8d76a2faa0a700409de82e1d2fd2204993afcd51","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static Archive createDeployment() {\n        final JavaArchive ejbJarOne = ShrinkWrap.create(JavaArchive.class, MODULE_ONE_NAME + \".jar\");\n        ejbJarOne.addClasses(SecuredBeanOne.class);\n        ejbJarOne.addAsManifestResource(SecuredBeanOne.class.getPackage(), \"one-jboss-ejb3.xml\", \"jboss-ejb3.xml\");\n\n        final JavaArchive ejbJarTwo = ShrinkWrap.create(JavaArchive.class, MODULE_TWO_NAME + \".jar\");\n        ejbJarTwo.addClass(SecuredBeanTwo.class);\n        ejbJarTwo.addAsManifestResource(SecuredBeanTwo.class.getPackage(), \"two-jboss-ejb3.xml\", \"jboss-ejb3.xml\");\n\n\n        final JavaArchive ejbJarThree = ShrinkWrap.create(JavaArchive.class, MODULE_THREE_NAME + \".jar\");\n        ejbJarThree.addClass(SecuredBeanThree.class);\n\n        final JavaArchive libJar = ShrinkWrap.create(JavaArchive.class, \"bean-interfaces.jar\");\n        libJar.addClasses(SecurityTestRemoteView.class, Util.class, MissingMethodPermissionsTestCase.class);\n\n        final EnterpriseArchive ear = ShrinkWrap.create(EnterpriseArchive.class, APP_NAME + \".ear\");\n        ear.addAsModules(ejbJarOne, ejbJarTwo, ejbJarThree);\n        ear.addAsLibrary(libJar);\n\n        return ear;\n    }","id":1286,"modified_method":"@Deployment\n    public static Archive createDeployment() {\n        final Package currentPackage = MissingMethodPermissionsTestCase.class.getPackage();\n\n        final JavaArchive ejbJarOne = ShrinkWrap.create(JavaArchive.class, MODULE_ONE_NAME + \".jar\")\n                .addClasses(SecuredBeanOne.class)\n                .addAsManifestResource(currentPackage, \"one-jboss-ejb3.xml\", \"jboss-ejb3.xml\");\n\n        final JavaArchive ejbJarTwo = ShrinkWrap.create(JavaArchive.class, MODULE_TWO_NAME + \".jar\")\n                .addClass(SecuredBeanTwo.class)\n                .addAsManifestResource(currentPackage, \"two-jboss-ejb3.xml\", \"jboss-ejb3.xml\");\n\n        final JavaArchive ejbJarThree = ShrinkWrap.create(JavaArchive.class, MODULE_THREE_NAME + \".jar\")\n                .addClass(SecuredBeanThree.class);\n\n        final JavaArchive libJar = ShrinkWrap.create(JavaArchive.class, \"bean-interfaces.jar\")\n                .addClasses(SecurityTestRemoteView.class, Util.class, MissingMethodPermissionsTestCase.class);\n\n        final EnterpriseArchive ear = ShrinkWrap.create(EnterpriseArchive.class, APP_NAME + \".ear\")\n                .addAsModules(ejbJarOne, ejbJarTwo, ejbJarThree)\n                .addAsLibrary(libJar)\n                .addAsManifestResource(currentPackage, \"permissions.xml\", \"permissions.xml\");\n\n        return ear;\n    }","commit_id":"8d76a2faa0a700409de82e1d2fd2204993afcd51","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static Archive<?> runAsDeployment() {\n        // using JavaArchive doesn't work, because of a bug in Arquillian, it only deploys wars properly\n        final WebArchive war = ShrinkWrap.create(WebArchive.class, \"ejb3security.war\")\n                .addPackage(WhoAmIBean.class.getPackage()).addPackage(EntryBean.class.getPackage())\n                .addPackage(HttpRequest.class.getPackage()).addClass(WhoAmI.class).addClass(Util.class).addClass(Entry.class)\n                .addClasses(AbstractSecurityDomainSetup.class, EjbSecurityDomainSetup.class)\n                .addAsResource(RunAsTestCase.class.getPackage(), \"users.properties\", \"users.properties\")\n                .addAsResource(RunAsTestCase.class.getPackage(), \"roles.properties\", \"roles.properties\")\n                .addAsWebInfResource(RunAsTestCase.class.getPackage(), \"web.xml\", \"web.xml\")\n                .addAsWebInfResource(RunAsTestCase.class.getPackage(), \"jboss-web.xml\", \"jboss-web.xml\")\n                .addAsWebInfResource(RunAsTestCase.class.getPackage(), \"jboss-ejb3.xml\", \"jboss-ejb3.xml\")\n                .addAsManifestResource(new StringAsset(\"Manifest-Version: 1.0\\nDependencies: org.jboss.as.controller-client,org.jboss.dmr\\n\"), \"MANIFEST.MF\");\n        war.addPackage(CommonCriteria.class.getPackage());\n        return war;\n    }","id":1287,"modified_method":"@Deployment\n    public static Archive<?> runAsDeployment() {\n        final Package currentPackage = RunAsTestCase.class.getPackage();\n        // using JavaArchive doesn't work, because of a bug in Arquillian, it only deploys wars properly\n        final WebArchive war = ShrinkWrap.create(WebArchive.class, \"ejb3security.war\")\n                .addPackage(WhoAmIBean.class.getPackage()).addPackage(EntryBean.class.getPackage())\n                .addPackage(HttpRequest.class.getPackage()).addClass(WhoAmI.class).addClass(Util.class).addClass(Entry.class)\n                .addClasses(AbstractSecurityDomainSetup.class, EjbSecurityDomainSetup.class)\n                .addAsResource(currentPackage, \"users.properties\", \"users.properties\")\n                .addAsResource(currentPackage, \"roles.properties\", \"roles.properties\")\n                .addAsWebInfResource(currentPackage, \"web.xml\", \"web.xml\")\n                .addAsWebInfResource(currentPackage, \"jboss-web.xml\", \"jboss-web.xml\")\n                .addAsWebInfResource(currentPackage, \"jboss-ejb3.xml\", \"jboss-ejb3.xml\")\n                .addAsManifestResource(new StringAsset(\"Manifest-Version: 1.0\\nDependencies: org.jboss.as.controller-client,org.jboss.dmr\\n\"), \"MANIFEST.MF\")\n                .addAsManifestResource(currentPackage, \"permissions.xml\", \"permissions.xml\");\n        war.addPackage(CommonCriteria.class.getPackage());\n        return war;\n    }","commit_id":"8d76a2faa0a700409de82e1d2fd2204993afcd51","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static Archive<?> runAsDeployment() {\n        final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, \"ejb3-security-partial-dd-test.jar\");\n        jar.addPackage(PartialDDBean.class.getPackage());\n        jar.addClass(Util.class);\n        jar.addClasses(AbstractSecurityDomainSetup.class, EjbSecurityDomainSetup.class);\n        jar.addAsResource(AnnotationAuthorizationTestCase.class.getPackage(), \"users.properties\", \"users.properties\");\n        jar.addAsResource(AnnotationAuthorizationTestCase.class.getPackage(), \"roles.properties\", \"roles.properties\");\n        jar.addAsManifestResource(AnnotationAuthorizationTestCase.class.getPackage(), \"partial-ejb-jar.xml\", \"ejb-jar.xml\");\n        jar.addAsManifestResource(new StringAsset(\"Manifest-Version: 1.0\\nDependencies: org.jboss.as.controller-client,org.jboss.dmr\\n\"), \"MANIFEST.MF\");\n        jar.addPackage(CommonCriteria.class.getPackage());\n        logger.info(jar.toString(true));\n        return jar;\n    }","id":1288,"modified_method":"@Deployment\n    public static Archive<?> runAsDeployment() {\n        final Package currentPackage = SecurityDDOverrideTestCase.class.getPackage();\n        final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, \"ejb3-security-partial-dd-test.jar\")\n                .addPackage(PartialDDBean.class.getPackage())\n                .addClass(Util.class)\n                .addClasses(AbstractSecurityDomainSetup.class, EjbSecurityDomainSetup.class)\n                .addAsResource(currentPackage, \"users.properties\", \"users.properties\")\n                .addAsResource(currentPackage, \"roles.properties\", \"roles.properties\")\n                .addAsManifestResource(currentPackage, \"partial-ejb-jar.xml\", \"ejb-jar.xml\")\n                .addAsManifestResource(new StringAsset(\"Manifest-Version: 1.0\\nDependencies: org.jboss.as.controller-client,org.jboss.dmr\\n\"), \"MANIFEST.MF\")\n                .addAsManifestResource(currentPackage, \"permissions.xml\", \"permissions.xml\")\n                .addPackage(CommonCriteria.class.getPackage());\n        logger.info(jar.toString(true));\n        return jar;\n    }","commit_id":"8d76a2faa0a700409de82e1d2fd2204993afcd51","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static Archive createDeployment() throws Exception {\n\n        final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, MODULE_NAME + \".jar\");\n        jar.addPackage(CallerRoleCheckerBean.class.getPackage());\n        jar.addClasses(Util.class, SecurityRoleLinkTestCaseSetup.class);\n        jar.addClasses(AbstractSecurityDomainSetup.class, EjbSecurityDomainSetup.class);\n        jar.addAsResource(SecurityRoleLinkTestCase.class.getPackage(), \"users.properties\", \"users.properties\");\n        jar.addAsResource(SecurityRoleLinkTestCase.class.getPackage(),\"roles.properties\", \"roles.properties\");\n        jar.addAsManifestResource(SecurityRoleLinkTestCase.class.getPackage(),\"ejb-jar.xml\", \"ejb-jar.xml\");\n        jar.addAsManifestResource(SecurityRoleLinkTestCase.class.getPackage(),\"jboss-ejb3.xml\", \"jboss-ejb3.xml\");\n        jar.addPackage(CommonCriteria.class.getPackage());\n\n        return jar;\n    }","id":1289,"modified_method":"@Deployment\n    public static Archive createDeployment() throws Exception {\n        final Package currentPackage = SecurityRoleLinkTestCase.class.getPackage();\n\n        final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, MODULE_NAME + \".jar\")\n                .addPackage(CallerRoleCheckerBean.class.getPackage())\n                .addClasses(Util.class, SecurityRoleLinkTestCaseSetup.class)\n                .addClasses(AbstractSecurityDomainSetup.class, EjbSecurityDomainSetup.class)\n                .addAsResource(currentPackage, \"users.properties\", \"users.properties\")\n                .addAsResource(currentPackage,\"roles.properties\", \"roles.properties\")\n                .addAsManifestResource(currentPackage,\"ejb-jar.xml\", \"ejb-jar.xml\")\n                .addAsManifestResource(currentPackage,\"jboss-ejb3.xml\", \"jboss-ejb3.xml\")\n                .addAsManifestResource(currentPackage, \"permissions.xml\", \"permissions.xml\")\n                .addPackage(CommonCriteria.class.getPackage());\n\n        return jar;\n    }","commit_id":"8d76a2faa0a700409de82e1d2fd2204993afcd51","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static Archive createDeplyoment() {\n        final EnterpriseArchive ear = create(EnterpriseArchive.class, \"ear-with-rar.ear\")\n                .addAsModule(create(JavaArchive.class, \"telnet-ra.rar\")\n                        .addAsManifestResource(TelnetResourceAdapter.class.getPackage(), \"ra.xml\", \"ra.xml\")\n                        .addPackages(true, TelnetResourceAdapter.class.getPackage(), TelnetListener.class.getPackage(), TelnetServer.class.getPackage()))\n                .addAsModule(create(JavaArchive.class, \"mdb.jar\")\n                        .addClasses(MyMdb.class));\n        // the deployment uses PropertyEditorManager which needs this\n        ear.addAsResource(createPermissionsXmlAsset(new PropertyPermission(\"ts.timeout.factor\", \"read\")), \"META-INF/permissions.xml\");\n        return ear;\n    }","id":1290,"modified_method":"@Deployment\n    public static Archive createDeplyoment() {\n        final EnterpriseArchive ear = create(EnterpriseArchive.class, \"ear-with-rar.ear\")\n                .addAsModule(create(JavaArchive.class, \"telnet-ra.rar\")\n                        .addAsManifestResource(TelnetResourceAdapter.class.getPackage(), \"ra.xml\", \"ra.xml\")\n                        .addPackages(true, TelnetResourceAdapter.class.getPackage(), TelnetListener.class.getPackage(), TelnetServer.class.getPackage()))\n                .addAsModule(create(JavaArchive.class, \"mdb.jar\")\n                        .addClasses(MyMdb.class));\n\n        ear.addAsManifestResource(createPermissionsXmlAsset(\n                new PropertyPermission(\"*\", \"read,write\"),\n                new RuntimePermission(\"accessDeclaredMembers\"),\n                new RuntimePermission(\"defineClassInPackage.\" + MyMdb.class.getPackage().getName()),\n                new RuntimePermission(\"getClassLoader\"),\n                new SocketPermission(Utils.getDefaultHost(true), \"accept,listen,resolve\"),\n                new PropertyPermission(\"ts.timeout.factor\", \"read\")),\n                \"permissions.xml\");\n        return ear;\n    }","commit_id":"c0ae0505165311e5dd70802c030cbcf3a8d88959","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment(name=\"binder\")\n\tpublic static WebArchive deploymentThree() {\n\t\treturn ShrinkWrap.create(WebArchive.class, \"binder.war\")\n\t\t\t\t.addClasses(BindRmiServlet.class, MyObject.class)\n                .setWebXML(MultipleClientRemoteJndiTestCase.class.getPackage(), \"web.xml\")\n                .addAsResource(createPermissionsXmlAsset(new JndiPermission(\"java:jboss/exported/-\", \"all\")), \"META-INF/jboss-permissions.xml\");\n\t}","id":1291,"modified_method":"@Deployment(name=\"binder\")\n    public static WebArchive deploymentThree() {\n        return ShrinkWrap.create(WebArchive.class, \"binder.war\")\n                .addClasses(BindRmiServlet.class, MyObject.class)\n                .setWebXML(MultipleClientRemoteJndiTestCase.class.getPackage(), \"web.xml\")\n                .addAsManifestResource(new StringAsset(\"Dependencies: org.jboss.as.naming\\n\"), \"MANIFEST.MF\")\n                .addAsManifestResource(createPermissionsXmlAsset(new JndiPermission(\"java:jboss/exported/loc/stub\", \"bind\")),\n                        \"permissions.xml\");\n    }","commit_id":"c0ae0505165311e5dd70802c030cbcf3a8d88959","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment(name=\"two\")\n\tpublic static WebArchive deploymentTwo() {\n\t\treturn ShrinkWrap.create(WebArchive.class, \"two.war\")\n\t\t\t\t.addClasses(RunRmiServlet.class, MyObject.class)\n\t\t\t\t.setWebXML(thisPackage, \"web.xml\")\n\t\t\t\t.addAsManifestResource(thisPackage, \"war-jboss-deployment-structure.xml\", \"jboss-deployment-structure.xml\");\n\t}","id":1292,"modified_method":"@Deployment(name=\"two\")\n    public static WebArchive deploymentTwo() {\n        return ShrinkWrap.create(WebArchive.class, \"two.war\")\n                .addClasses(RunRmiServlet.class, MyObject.class)\n                .setWebXML(thisPackage, \"web.xml\")\n                .addAsManifestResource(thisPackage, \"war-jboss-deployment-structure.xml\", \"jboss-deployment-structure.xml\")\n                .addAsManifestResource(createPermissionsXmlAsset(\n                        new PropertyPermission(\"node0\", \"read\"),\n                        new RemotingPermission(\"connect\"),\n                        new SocketPermission(Utils.getDefaultHost(true), \"accept,connect,listen,resolve\"),\n                        new RuntimePermission(\"getClassLoader\")),\n                        \"permissions.xml\");\n    }","commit_id":"c0ae0505165311e5dd70802c030cbcf3a8d88959","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment(name=\"one\")\n\tpublic static WebArchive deploymentOne() {\n\t\treturn ShrinkWrap.create(WebArchive.class, \"one.war\")\n\t\t\t\t.addClasses(RunRmiServlet.class, MyObject.class)\n\t\t\t\t.setWebXML(thisPackage, \"web.xml\")\n\t\t\t\t.addAsManifestResource(thisPackage, \"war-jboss-deployment-structure.xml\", \"jboss-deployment-structure.xml\");\n\t}","id":1293,"modified_method":"@Deployment(name=\"one\")\n    public static WebArchive deploymentOne() {\n        return ShrinkWrap.create(WebArchive.class, \"one.war\")\n                .addClasses(RunRmiServlet.class, MyObject.class)\n                .setWebXML(thisPackage, \"web.xml\")\n                .addAsManifestResource(thisPackage, \"war-jboss-deployment-structure.xml\", \"jboss-deployment-structure.xml\")\n                .addAsManifestResource(createPermissionsXmlAsset(\n                        new PropertyPermission(\"node0\", \"read\"),\n                        new RemotingPermission(\"createEndpoint\"),\n                        new RuntimePermission(\"createXnioWorker\"),\n                        new RemotingPermission(\"addConnectionProvider\"),\n                        new RemotingPermission(\"connect\"),\n                        new SocketPermission(Utils.getDefaultHost(true), \"accept,connect,listen,resolve\"),\n                        new RuntimePermission(\"getClassLoader\"),\n                        new RuntimePermission(\"accessDeclaredMembers\"),\n                        new ReflectPermission(\"suppressAccessChecks\")),\n                        \"permissions.xml\");\n    }","commit_id":"c0ae0505165311e5dd70802c030cbcf3a8d88959","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment(name=\"binder\")\n\tpublic static WebArchive deploymentThree() {\n\t\treturn ShrinkWrap.create(WebArchive.class, \"binder.war\")\n\t\t\t\t.addClasses(BindRmiServlet.class, MyObject.class)\n\t\t\t\t.setWebXML(MultipleClientRemoteJndiTestCase.class.getPackage(), \"web.xml\");\n\t}","id":1294,"modified_method":"@Deployment(name=\"binder\")\n    public static WebArchive deploymentThree() {\n        return ShrinkWrap.create(WebArchive.class, \"binder.war\")\n                .addClasses(BindRmiServlet.class, MyObject.class)\n                .setWebXML(MultipleClientRemoteJndiTestCase.class.getPackage(), \"web.xml\")\n                .addAsManifestResource(new StringAsset(\"Dependencies: org.jboss.as.naming\\n\"), \"MANIFEST.MF\")\n                .addAsManifestResource(createPermissionsXmlAsset(new JndiPermission(\"java:jboss/exported/loc/stub\", \"bind\")),\n                        \"permissions.xml\");\n    }","commit_id":"c0ae0505165311e5dd70802c030cbcf3a8d88959","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n\tpublic static EnterpriseArchive deploymentTwo() {\n\t\tJavaArchive ejbJar = ShrinkWrap.create(JavaArchive.class, \"ejb.jar\")\n\t\t\t\t.addClasses(MyEjbBean.class, MyEjb.class, MyObject.class);\n\n\t\tWebArchive war = ShrinkWrap.create(WebArchive.class, \"web.war\")\n\t\t\t\t.addClasses(CallEjbServlet.class,  MyObject.class)\n\t\t\t\t.setWebXML(thisPackage, \"web.xml\");\n\n\t\tEnterpriseArchive ear = ShrinkWrap.create(EnterpriseArchive.class, \"ejb.ear\")\n\t\t\t\t.addAsModule(ejbJar)\n\t\t\t\t.addAsModule(war)\n\t\t\t\t.addAsManifestResource(thisPackage, \"ear-jboss-deployment-structure.xml\", \"jboss-deployment-structure.xml\");\n\t\treturn ear;\n\t}","id":1295,"modified_method":"@Deployment\n    public static EnterpriseArchive deploymentTwo() {\n        JavaArchive ejbJar = ShrinkWrap.create(JavaArchive.class, \"ejb.jar\")\n                .addClasses(MyEjbBean.class, MyEjb.class, MyObject.class);\n\n        WebArchive war = ShrinkWrap.create(WebArchive.class, \"web.war\")\n                .addClasses(CallEjbServlet.class,  MyObject.class)\n                .setWebXML(thisPackage, \"web.xml\");\n\n        EnterpriseArchive ear = ShrinkWrap.create(EnterpriseArchive.class, \"ejb.ear\")\n                .addAsModule(ejbJar)\n                .addAsModule(war)\n                .addAsManifestResource(thisPackage, \"ear-jboss-deployment-structure.xml\", \"jboss-deployment-structure.xml\")\n                .addAsManifestResource(createPermissionsXmlAsset(\n                        new PropertyPermission(\"node0\", \"read\"),\n                        new RemotingPermission(\"createEndpoint\"),\n                        new RuntimePermission(\"createXnioWorker\"),\n                        new RemotingPermission(\"addConnectionProvider\"),\n                        new RemotingPermission(\"connect\"),\n                        new SocketPermission(Utils.getDefaultHost(true), \"accept,connect,listen,resolve\"),\n                        new RuntimePermission(\"getClassLoader\"),\n                        new RuntimePermission(\"accessDeclaredMembers\"),\n                        new ReflectPermission(\"suppressAccessChecks\")),\n                        \"permissions.xml\");\n        return ear;\n    }","commit_id":"c0ae0505165311e5dd70802c030cbcf3a8d88959","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static Archive createDeployment() {\n        final EnterpriseArchive ear = ShrinkWrap.create(EnterpriseArchive.class, EAR_NAME + \".ear\");\n\n        final JavaArchive rar = ShrinkWrap.create(JavaArchive.class, RAR_NAME + \".rar\");\n        rar.addAsManifestResource(NoMethodMessageListenerTestCase.class.getPackage(), \"ra.xml\", \"ra.xml\");\n\n        final JavaArchive ejbJar = ShrinkWrap.create(JavaArchive.class, EJB_JAR_NAME + \".jar\");\n        ejbJar.addClasses(SimpleMessageDrivenBean.class, NoMethodMessageListenerTestCase.class,\n                ReceivedMessageTracker.class);\n\n        final JavaArchive libJar = ShrinkWrap.create(JavaArchive.class, LIB_JAR_NAME + \".jar\");\n        libJar.addClasses(SimpleActivationSpec.class, SimpleResourceAdapter.class,\n                NoMethodMessageListener.class, TimeoutUtil.class);\n\n        ear.addAsModule(rar);\n        ear.addAsModule(ejbJar);\n        ear.addAsLibrary(libJar);\n\n        return ear;\n    }","id":1296,"modified_method":"@Deployment\n    public static Archive createDeployment() {\n        final Package currentPackage = NoMethodMessageListenerTestCase.class.getPackage();\n\n        final JavaArchive rar = ShrinkWrap.create(JavaArchive.class, RAR_NAME + \".rar\")\n                .addAsManifestResource(currentPackage, \"ra.xml\", \"ra.xml\");\n\n        final JavaArchive ejbJar = ShrinkWrap.create(JavaArchive.class, EJB_JAR_NAME + \".jar\")\n                .addClasses(SimpleMessageDrivenBean.class, NoMethodMessageListenerTestCase.class, ReceivedMessageTracker.class);\n\n        final JavaArchive libJar = ShrinkWrap.create(JavaArchive.class, LIB_JAR_NAME + \".jar\")\n                .addClasses(SimpleActivationSpec.class, SimpleResourceAdapter.class)\n                .addClasses(NoMethodMessageListener.class, TimeoutUtil.class);\n\n        final EnterpriseArchive ear = ShrinkWrap.create(EnterpriseArchive.class, EAR_NAME + \".ear\")\n                .addAsModule(rar)\n                .addAsModule(ejbJar)\n                .addAsLibrary(libJar)\n                .addAsManifestResource(currentPackage, \"permissions.xml\", \"permissions.xml\");\n\n        return ear;\n    }","commit_id":"c0ae0505165311e5dd70802c030cbcf3a8d88959","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static Archive<?> deploy() {\n        final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, \"test.jar\");\n        jar.addClasses(BindingEjb.class);\n                // grant necessary permissions\n        jar.addAsResource(createPermissionsXmlAsset(new JndiPermission(\"java:jboss/exported/-\", \"all\"), new JndiPermission(\"java:jboss/exported\", \"all\")), \"META-INF/jboss-permissions.xml\");\n\n        return jar;\n    }","id":1297,"modified_method":"@Deployment\n    public static Archive<?> deploy() {\n        final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, \"test.jar\")\n                .addClasses(BindingEjb.class)\n                .addAsManifestResource(new StringAsset(\"Dependencies: org.jboss.as.naming\\n\"), \"MANIFEST.MF\")\n                .addAsManifestResource(createPermissionsXmlAsset(\n                        new JndiPermission(\"java:jboss/exported/test\", \"bind\"),\n                        new JndiPermission(\"java:jboss/exported/context/test\", \"bind\")),\n                        \"permissions.xml\");\n\n        return jar;\n    }","commit_id":"c0ae0505165311e5dd70802c030cbcf3a8d88959","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Deployment\n    public static Archive<?> getDeployment() {\n        JavaArchive jar = ShrinkWrap.create(JavaArchive.class, TransactionObjectStoreTestCase.class.getSimpleName() + \".jar\");\n        jar.addClass(ObjectStoreBrowserService.class);\n        jar.addAsManifestResource(new StringAsset(\"Dependencies: org.jboss.jts\\n\"), \"MANIFEST.MF\");\n        return jar;\n    }","id":1298,"modified_method":"@Deployment\n    public static Archive<?> getDeployment() {\n        JavaArchive jar = ShrinkWrap.create(JavaArchive.class, TransactionObjectStoreTestCase.class.getSimpleName() + \".jar\")\n                .addClass(ObjectStoreBrowserService.class)\n                .addAsManifestResource(new StringAsset(\"Dependencies: org.jboss.jts\\n\"), \"MANIFEST.MF\")\n                .addAsManifestResource(TransactionObjectStoreTestCase.class.getPackage(), \"permissions.xml\", \"permissions.xml\");\n        return jar;\n    }","commit_id":"c0ae0505165311e5dd70802c030cbcf3a8d88959","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    protected Object doExecute() throws Exception {\n        Map<String, String> props = CloudUtils.parseProviderOptions(options);\n        if (options != null && options.length > 1) {\n            for (String option : options) {\n                if (option.contains(\"=\")) {\n                    String key = option.substring(0,option.indexOf(\"=\"));\n                    String value = option.substring(option.lastIndexOf(\"=\") + 1);\n                    props.put(key, value);\n                }\n            }\n        }\n\n        if (!Strings.isNullOrEmpty(owner)) {\n            props.put(\"owner\", owner);\n        }\n        Container current = fabricService.getCurrentContainer();\n        if (!getZooKeeper().isConnected() || !current.isManaged()) {\n            CloudUtils.registerProvider(getZooKeeper(), configurationAdmin, provider, identity, credential, props);\n            if(!registerAsync) {\n                System.out.println(\"Waiting for \"+provider+\" service to initialize.\");\n                CloudUtils.waitForComputeService(bundleContext, provider);\n            }\n        }\n\n        return null;\n    }","id":1299,"modified_method":"@Override\n    protected Object doExecute() throws Exception {\n        Map<String, String> props = CloudUtils.parseProviderOptions(options);\n        if (options != null && options.length > 1) {\n            for (String option : options) {\n                if (option.contains(\"=\")) {\n                    String key = option.substring(0,option.indexOf(\"=\"));\n                    String value = option.substring(option.lastIndexOf(\"=\") + 1);\n                    props.put(key, value);\n                }\n            }\n        }\n\n        if (!Strings.isNullOrEmpty(owner)) {\n            props.put(\"owner\", owner);\n        }\n\n        CloudUtils.registerProvider(getZooKeeper(), configurationAdmin, provider, identity, credential, props);\n        if (!registerAsync) {\n            System.out.println(\"Waiting for \" + provider + \" service to initialize.\");\n            CloudUtils.waitForComputeService(bundleContext, provider);\n        }\n        return null;\n    }","commit_id":"e88e29e9cf96ae1cc501fe21667d3093266590fc","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\n    protected Object doExecute() throws Exception {\n        boolean connected = getZooKeeper().isConnected();\n        Container current = null;\n        if (connected) {\n            getZooKeeper().deleteWithChildren(ZkPath.CLOUD_PROVIDER.getPath(provider));\n            current = fabricService.getCurrentContainer();\n        }\n        if (current == null || !current.isManaged()) {\n            //Remove compute configurations for the provider.\n            Configuration[] computeConfigs = findConfigurationByFactoryPid(\"org.jclouds.compute\");\n            if (computeConfigs != null) {\n                for (Configuration configuration : computeConfigs) {\n                    configuration.delete();\n                }\n            }\n        }\n        return null;\n    }","id":1300,"modified_method":"@Override\n    protected Object doExecute() throws Exception {\n        boolean connected = getZooKeeper().isConnected();\n        Container current = null;\n        if (connected) {\n            if (getZooKeeper().exists(ZkPath.CLOUD_PROVIDER.getPath(provider)) != null) {\n                getZooKeeper().deleteWithChildren(ZkPath.CLOUD_PROVIDER.getPath(provider));\n            }\n            current = fabricService.getCurrentContainer();\n        }\n        //Remove compute configurations for the provider.\n        Configuration[] computeConfigs = findConfigurationByFactoryPid(\"org.jclouds.compute\");\n        if (computeConfigs != null) {\n            for (Configuration configuration : computeConfigs) {\n                Dictionary props = configuration.getProperties();\n                if (props != null) {\n                    String fabricPid = (String) props.get(\"fabric.zookeeper.pid\");\n                    if (fabricPid.equals(\"org.jclouds.compute-\" + provider.replaceAll(\"-\", \"\"))) {\n                        configuration.delete();\n                    }\n                }\n            }\n        }\n        return null;\n    }","commit_id":"e88e29e9cf96ae1cc501fe21667d3093266590fc","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public static void registerProvider(final IZKClient zooKeeper, final ConfigurationAdmin configurationAdmin, final String provider, final String identity, final String credential, final Map<String, String> props) throws Exception {\n        Runnable registrationTask = new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    Configuration configuration = findOrCreateFactoryConfiguration(configurationAdmin, \"org.jclouds.compute\", provider);\n                    if (configuration != null) {\n                        Dictionary dictionary = configuration.getProperties();\n                        if (dictionary == null) {\n                            dictionary = new Properties();\n                        }\n                        dictionary.put(\"provider\", provider);\n                        dictionary.put(\"credential\", credential);\n                        dictionary.put(\"identity\", identity);\n                        dictionary.put(\"credential-store\", \"zookeeper\");\n                        //This is set to workaround race conditions with ssh pk copies.\n                        //Required workaround for some images (e.g. Red Hat) on Amazon EC2.\n                        dictionary.put(\"jclouds.ssh.max-retries\", \"40\");\n                        if (provider != null && provider.equals(\"aws-ec2\") && props != null && props.containsKey(\"owner\") && props.get(\"owner\") != null) {\n                            dictionary.put(\"jclouds.ec2.ami-owners\", props.get(\"owner\"));\n\n                        }\n                        for (Map.Entry<String,String> entry:props.entrySet()) {\n                            String key = entry.getKey();\n                            String value = entry.getValue();\n                            dictionary.put(key,value);\n                        }\n\n                        configuration.update(dictionary);\n\n                        if (zooKeeper.isConnected()) {\n                            if (zooKeeper.exists(ZkPath.CLOUD_PROVIDER.getPath(provider)) == null) {\n                                ZooKeeperUtils.create(zooKeeper, ZkPath.CLOUD_PROVIDER.getPath(provider));\n                            }\n                            ZooKeeperUtils.set(zooKeeper, ZkPath.CLOUD_PROVIDER_IDENTIY.getPath(provider), identity);\n                            ZooKeeperUtils.set(zooKeeper, ZkPath.CLOUD_PROVIDER_CREDENTIAL.getPath(provider), credential);\n                        } else {\n                            System.out.println(\"Fabric has not been initialized. Provider registration will be local to the current container.\");\n                        }\n                    }\n                } catch (Exception ex) {\n                   //noop\n                }\n            }\n        };\n        new Thread(registrationTask).start();\n    }","id":1301,"modified_method":"public static void registerProvider(final IZKClient zooKeeper, final ConfigurationAdmin configurationAdmin, final String provider, final String identity, final String credential, final Map<String, String> props) throws Exception {\n        Runnable registrationTask = new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    Configuration configuration = findOrCreateFactoryConfiguration(configurationAdmin, \"org.jclouds.compute\", provider);\n                    if (configuration != null) {\n                        Dictionary dictionary = configuration.getProperties();\n                        if (dictionary == null) {\n                            dictionary = new Properties();\n                        }\n                        dictionary.put(\"fabric.zookeeper.pid\", \"org.jclouds.compute-\"+provider.replaceAll(\"-\", \"\"));\n                        dictionary.put(\"provider\", provider);\n                        dictionary.put(\"credential\", credential);\n                        dictionary.put(\"identity\", identity);\n                        dictionary.put(\"credential-store\", \"zookeeper\");\n                        //This is set to workaround race conditions with ssh pk copies.\n                        //Required workaround for some images (e.g. Red Hat) on Amazon EC2.\n                        dictionary.put(\"jclouds.ssh.max-retries\", \"40\");\n                        if (provider != null && provider.equals(\"aws-ec2\") && props != null && props.containsKey(\"owner\") && props.get(\"owner\") != null) {\n                            dictionary.put(\"jclouds.ec2.ami-owners\", props.get(\"owner\"));\n\n                        }\n                        for (Map.Entry<String, String> entry : props.entrySet()) {\n                            String key = entry.getKey();\n                            String value = entry.getValue();\n                            dictionary.put(key, value);\n                        }\n\n                        configuration.update(dictionary);\n\n                        if (zooKeeper.isConnected()) {\n                            if (zooKeeper.exists(ZkPath.CLOUD_PROVIDER.getPath(provider)) == null) {\n                                ZooKeeperUtils.create(zooKeeper, ZkPath.CLOUD_PROVIDER.getPath(provider));\n                            }\n                            ZooKeeperUtils.set(zooKeeper, ZkPath.CLOUD_PROVIDER_IDENTIY.getPath(provider), identity);\n                            ZooKeeperUtils.set(zooKeeper, ZkPath.CLOUD_PROVIDER_CREDENTIAL.getPath(provider), credential);\n                        } else {\n                            System.out.println(\"Fabric has not been initialized. Provider registration will be local to the current container.\");\n                        }\n                    }\n                } catch (Exception ex) {\n                    //noop\n                }\n            }\n        };\n        new Thread(registrationTask).start();\n    }","commit_id":"e88e29e9cf96ae1cc501fe21667d3093266590fc","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\n    protected Object doExecute() throws Exception {\n        Map<String, String> props = CloudUtils.parseProviderOptions(options);\n        if (options != null && options.length > 1) {\n            for (String option : options) {\n                if (option.contains(\"=\")) {\n                    String key = option.substring(0,option.indexOf(\"=\"));\n                    String value = option.substring(option.lastIndexOf(\"=\") + 1);\n                    props.put(key, value);\n                }\n            }\n        }\n\n        if (!Strings.isNullOrEmpty(owner)) {\n            props.put(\"owner\", owner);\n        }\n        Container current = fabricService.getCurrentContainer();\n        if (!getZooKeeper().isConnected() || !current.isManaged()) {\n            CloudUtils.registerProvider(getZooKeeper(), configurationAdmin, provider, identity, credential, props);\n            if(!registerAsync) {\n                System.out.println(\"Waiting for \"+provider+\" service to initialize.\");\n                CloudUtils.waitForComputeService(bundleContext, provider);\n            }\n        }\n\n        return null;\n    }","id":1302,"modified_method":"@Override\n    protected Object doExecute() throws Exception {\n        Map<String, String> props = CloudUtils.parseProviderOptions(options);\n        if (options != null && options.length > 1) {\n            for (String option : options) {\n                if (option.contains(\"=\")) {\n                    String key = option.substring(0,option.indexOf(\"=\"));\n                    String value = option.substring(option.lastIndexOf(\"=\") + 1);\n                    props.put(key, value);\n                }\n            }\n        }\n\n        if (!Strings.isNullOrEmpty(owner)) {\n            props.put(\"owner\", owner);\n        }\n\n        CloudUtils.registerProvider(getZooKeeper(), configurationAdmin, provider, identity, credential, props);\n        if (!registerAsync) {\n            System.out.println(\"Waiting for \" + provider + \" service to initialize.\");\n            CloudUtils.waitForComputeService(bundleContext, provider);\n        }\n        return null;\n    }","commit_id":"adf54aadc84f8ceaf1b9d5e50b09baa25004dad3","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\n    protected Object doExecute() throws Exception {\n        boolean connected = getZooKeeper().isConnected();\n        Container current = null;\n        if (connected) {\n            getZooKeeper().deleteWithChildren(ZkPath.CLOUD_PROVIDER.getPath(provider));\n            current = fabricService.getCurrentContainer();\n        }\n        if (current == null || !current.isManaged()) {\n            //Remove compute configurations for the provider.\n            Configuration[] computeConfigs = findConfigurationByFactoryPid(\"org.jclouds.compute\");\n            if (computeConfigs != null) {\n                for (Configuration configuration : computeConfigs) {\n                    configuration.delete();\n                }\n            }\n        }\n        return null;\n    }","id":1303,"modified_method":"@Override\n    protected Object doExecute() throws Exception {\n        boolean connected = getZooKeeper().isConnected();\n        Container current = null;\n        if (connected) {\n            if (getZooKeeper().exists(ZkPath.CLOUD_PROVIDER.getPath(provider)) != null) {\n                getZooKeeper().deleteWithChildren(ZkPath.CLOUD_PROVIDER.getPath(provider));\n            }\n            current = fabricService.getCurrentContainer();\n        }\n        //Remove compute configurations for the provider.\n        Configuration[] computeConfigs = findConfigurationByFactoryPid(\"org.jclouds.compute\");\n        if (computeConfigs != null) {\n            for (Configuration configuration : computeConfigs) {\n                Dictionary props = configuration.getProperties();\n                if (props != null) {\n                    String fabricPid = (String) props.get(\"fabric.zookeeper.pid\");\n                    if (fabricPid.equals(\"org.jclouds.compute-\" + provider.replaceAll(\"-\", \"\"))) {\n                        configuration.delete();\n                    }\n                }\n            }\n        }\n        return null;\n    }","commit_id":"adf54aadc84f8ceaf1b9d5e50b09baa25004dad3","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public static void registerProvider(final IZKClient zooKeeper, final ConfigurationAdmin configurationAdmin, final String provider, final String identity, final String credential, final Map<String, String> props) throws Exception {\n        Runnable registrationTask = new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    Configuration configuration = findOrCreateFactoryConfiguration(configurationAdmin, \"org.jclouds.compute\", provider);\n                    if (configuration != null) {\n                        Dictionary dictionary = configuration.getProperties();\n                        if (dictionary == null) {\n                            dictionary = new Properties();\n                        }\n                        dictionary.put(\"provider\", provider);\n                        dictionary.put(\"credential\", credential);\n                        dictionary.put(\"identity\", identity);\n                        dictionary.put(\"credential-store\", \"zookeeper\");\n                        //This is set to workaround race conditions with ssh pk copies.\n                        //Required workaround for some images (e.g. Red Hat) on Amazon EC2.\n                        dictionary.put(\"jclouds.ssh.max-retries\", \"40\");\n                        if (provider != null && provider.equals(\"aws-ec2\") && props != null && props.containsKey(\"owner\") && props.get(\"owner\") != null) {\n                            dictionary.put(\"jclouds.ec2.ami-owners\", props.get(\"owner\"));\n\n                        }\n                        for (Map.Entry<String,String> entry:props.entrySet()) {\n                            String key = entry.getKey();\n                            String value = entry.getValue();\n                            dictionary.put(key,value);\n                        }\n\n                        configuration.update(dictionary);\n\n                        if (zooKeeper.isConnected()) {\n                            if (zooKeeper.exists(ZkPath.CLOUD_PROVIDER.getPath(provider)) == null) {\n                                ZooKeeperUtils.create(zooKeeper, ZkPath.CLOUD_PROVIDER.getPath(provider));\n                            }\n                            ZooKeeperUtils.set(zooKeeper, ZkPath.CLOUD_PROVIDER_IDENTIY.getPath(provider), identity);\n                            ZooKeeperUtils.set(zooKeeper, ZkPath.CLOUD_PROVIDER_CREDENTIAL.getPath(provider), credential);\n                        } else {\n                            System.out.println(\"Fabric has not been initialized. Provider registration will be local to the current container.\");\n                        }\n                    }\n                } catch (Exception ex) {\n                   //noop\n                }\n            }\n        };\n        new Thread(registrationTask).start();\n    }","id":1304,"modified_method":"public static void registerProvider(final IZKClient zooKeeper, final ConfigurationAdmin configurationAdmin, final String provider, final String identity, final String credential, final Map<String, String> props) throws Exception {\n        Runnable registrationTask = new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    Configuration configuration = findOrCreateFactoryConfiguration(configurationAdmin, \"org.jclouds.compute\", provider);\n                    if (configuration != null) {\n                        Dictionary dictionary = configuration.getProperties();\n                        if (dictionary == null) {\n                            dictionary = new Properties();\n                        }\n                        dictionary.put(\"fabric.zookeeper.pid\", \"org.jclouds.compute-\"+provider.replaceAll(\"-\", \"\"));\n                        dictionary.put(\"provider\", provider);\n                        dictionary.put(\"credential\", credential);\n                        dictionary.put(\"identity\", identity);\n                        dictionary.put(\"credential-store\", \"zookeeper\");\n                        //This is set to workaround race conditions with ssh pk copies.\n                        //Required workaround for some images (e.g. Red Hat) on Amazon EC2.\n                        dictionary.put(\"jclouds.ssh.max-retries\", \"40\");\n                        if (provider != null && provider.equals(\"aws-ec2\") && props != null && props.containsKey(\"owner\") && props.get(\"owner\") != null) {\n                            dictionary.put(\"jclouds.ec2.ami-owners\", props.get(\"owner\"));\n\n                        }\n                        for (Map.Entry<String, String> entry : props.entrySet()) {\n                            String key = entry.getKey();\n                            String value = entry.getValue();\n                            dictionary.put(key, value);\n                        }\n\n                        configuration.update(dictionary);\n\n                        if (zooKeeper.isConnected()) {\n                            if (zooKeeper.exists(ZkPath.CLOUD_PROVIDER.getPath(provider)) == null) {\n                                ZooKeeperUtils.create(zooKeeper, ZkPath.CLOUD_PROVIDER.getPath(provider));\n                            }\n                            ZooKeeperUtils.set(zooKeeper, ZkPath.CLOUD_PROVIDER_IDENTIY.getPath(provider), identity);\n                            ZooKeeperUtils.set(zooKeeper, ZkPath.CLOUD_PROVIDER_CREDENTIAL.getPath(provider), credential);\n                        } else {\n                            System.out.println(\"Fabric has not been initialized. Provider registration will be local to the current container.\");\n                        }\n                    }\n                } catch (Exception ex) {\n                    //noop\n                }\n            }\n        };\n        new Thread(registrationTask).start();\n    }","commit_id":"adf54aadc84f8ceaf1b9d5e50b09baa25004dad3","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\n    protected Object doExecute() throws Exception {\n        // validate input before creating containers\n        preCreateContainer(name);\n\n        CreateContainerOptions args = CreateContainerOptionsBuilder.jclouds()\n        .name(name)\n        .resolver(resolver)\n        .ensembleServer(isEnsembleServer)\n        .credential(credential)\n        .group(group)\n        .hardwareId(hardwareId)\n        .identity(identity)\n        .osFamily(osFamily)\n        .osVersion(osVersion)\n        .imageId(imageId)\n        .instanceType(instanceType)\n        .locationId(locationId)\n        .number(number)\n        .nodeOptions(CloudUtils.parseProviderOptions(options))\n        .owner(owner)\n        .publicKeyFile(publicKeyFile)\n        .providerName(providerName)\n        .user(user)\n        .proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI())\n        .zookeeperUrl(fabricService.getZookeeperUrl())\n        .jvmOpts(jvmOpts)\n        .creationStateListener(new PrintStreamCreationStateListener(System.out));\n\n        CreateContainerMetadata[] metadatas = fabricService.createContainers(args);\n        // display containers\n        displayContainers(metadatas);\n        // and set its profiles and versions after creation\n        postCreateContainers(metadatas);\n        return null;\n    }","id":1305,"modified_method":"@Override\n    protected Object doExecute() throws Exception {\n        // validate input before creating containers\n        preCreateContainer(name);\n\n        CreateContainerOptions args = CreateContainerOptionsBuilder.jclouds()\n        .name(name)\n        .resolver(resolver)\n        .ensembleServer(isEnsembleServer)\n        .credential(credential)\n        .group(group)\n        .hardwareId(hardwareId)\n        .identity(identity)\n        .osFamily(osFamily)\n        .osVersion(osVersion)\n        .imageId(imageId)\n        .instanceType(instanceType)\n        .locationId(locationId)\n        .number(number)\n        .nodeOptions(CloudUtils.parseProviderOptions(options))\n        .owner(owner)\n        .adminAccess(!disableAdminAccess)\n        .publicKeyFile(publicKeyFile)\n        .providerName(providerName)\n        .user(user)\n        .proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI())\n        .zookeeperUrl(fabricService.getZookeeperUrl())\n        .jvmOpts(jvmOpts)\n        .creationStateListener(new PrintStreamCreationStateListener(System.out));\n\n        CreateContainerMetadata[] metadatas = fabricService.createContainers(args);\n        // display containers\n        displayContainers(metadatas);\n        // and set its profiles and versions after creation\n        postCreateContainers(metadatas);\n        return null;\n    }","commit_id":"dbe85e554a5119feb6cdf6996c7908b69c48e972","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public Set<CreateJCloudsContainerMetadata> create(CreateJCloudsContainerOptions options) throws MalformedURLException, RunNodesException, URISyntaxException, InterruptedException {\n        final Set<CreateJCloudsContainerMetadata> result = new LinkedHashSet<CreateJCloudsContainerMetadata>();\n        try {\n            options.getCreationStateListener().onStateChange(\"Looking up for compute service.\");\n            ComputeService computeService = getOrCreateComputeService(options);\n\n            if (computeService == null) {\n                throw new IllegalStateException(\"Compute service could not be found or created.\");\n            }\n\n            TemplateBuilder builder = computeService.templateBuilder();\n            builder.any();\n            switch (options.getInstanceType()) {\n                case Smallest:\n                    builder.smallest();\n                    break;\n                case Biggest:\n                    builder.biggest();\n                    break;\n                case Fastest:\n                    builder.fastest();\n                    break;\n                default:\n                    builder.fastest();\n            }\n\n            StringBuilder overviewBuilder = new StringBuilder();\n\n            overviewBuilder.append(String.format(\"Creating %s nodes in the cloud. Using\", options.getNumber()));\n\n\n            //Define ImageId\n            if (!Strings.isNullOrEmpty(options.getImageId())) {\n                overviewBuilder.append(\" image id: \").append(options.getImageId());\n                builder.imageId(options.getImageId());\n            }\n            //or define Image by OS & Version or By ImageId\n            else if (!Strings.isNullOrEmpty(options.getOsFamily())) {\n                overviewBuilder.append(\" operating system: \").append(options.getOsFamily());\n                builder.osFamily(OsFamily.fromValue(options.getOsFamily()));\n                if (!Strings.isNullOrEmpty(options.getOsVersion())) {\n                    overviewBuilder.append(\" and version: \");\n                    builder.osVersionMatches(options.getOsVersion());\n                }\n            } else {\n                throw new IllegalArgumentException(\"Required Image id or Operation System and version predicates.\");\n            }\n\n            overviewBuilder.append(\".\");\n\n            //Define Location & Hardware\n            if (!Strings.isNullOrEmpty(options.getLocationId())) {\n                overviewBuilder.append(\" On location: \").append(options.getLocationId()).append(\".\");\n                builder.locationId(options.getLocationId());\n            }\n\n            if (!Strings.isNullOrEmpty(options.getHardwareId())) {\n                builder.hardwareId(options.getHardwareId());\n            }\n\n            AdminAccess.Builder adminAccess = AdminAccess.builder();\n            TemplateOptions templateOptions = computeService.templateOptions();\n            applyProviderSpecificOptions(templateOptions, options);\n\n            if (!Strings.isNullOrEmpty(options.getPublicKeyFile())) {\n                File publicKey = new File(options.getPublicKeyFile());\n                if (publicKey.exists()) {\n                    adminAccess.adminPublicKey(publicKey);\n                } else {\n                    templateOptions.runScript(AdminAccess.standard());\n                    LOGGER.warn(\"Public key has been specified file: {} files cannot be found. Ignoring.\", publicKey.getAbsolutePath());\n                }\n            }\n\n            if (!Strings.isNullOrEmpty(options.getUser())) {\n                adminAccess.adminUsername(options.getUser());\n            }\n\n            templateOptions.runScript(adminAccess.build());\n            builder.options(templateOptions);\n\n            Set<? extends NodeMetadata> metadatas = null;\n            overviewBuilder.append(\" It may take a while ...\");\n            options.getCreationStateListener().onStateChange(overviewBuilder.toString());\n            metadatas = computeService.createNodesInGroup(options.getGroup(), options.getNumber(), builder.build());\n\n            if (metadatas != null) {\n                for (NodeMetadata metadata : metadatas) {\n                    options.getCreationStateListener().onStateChange(String.format(\"Node %s has been created.\", metadata.getName()));\n                }\n            }\n\n            Thread.sleep(5000);\n\n            int suffix = 1;\n            if (metadatas != null) {\n                String originalName = new String(options.getName());\n                for (NodeMetadata nodeMetadata : metadatas) {\n                    LoginCredentials credentials = nodeMetadata.getCredentials();\n                    //For some cloud providers return do not allow shell access to root, so the user needs to be overrided.\n                    if (!Strings.isNullOrEmpty(options.getUser()) && credentials != null) {\n                        credentials = credentials.toBuilder().user(options.getUser()).build();\n                    } else {\n                        credentials = nodeMetadata.getCredentials();\n                    }\n                    String id = nodeMetadata.getId();\n                    Set<String> publicAddresses = nodeMetadata.getPublicAddresses();\n\n                    String containerName;\n                    if (options.getNumber() > 1) {\n                        containerName = originalName + (suffix++);\n                    } else {\n                        containerName = originalName;\n                    }\n\n                    //Make a copy of the addresses, because we don't want to return back a guice implementation of Set.\n                    Set<String> copyOfPublicAddresses = new HashSet<String>();\n                    for (String publicAddress : publicAddresses) {\n                        copyOfPublicAddresses.add(publicAddress);\n                    }\n\n                    CreateJCloudsContainerMetadata jCloudsContainerMetadata = new CreateJCloudsContainerMetadata();\n                    jCloudsContainerMetadata.setCreateOptions(options);\n                    jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());\n                    jCloudsContainerMetadata.setContainerName(containerName);\n                    jCloudsContainerMetadata.setPublicAddresses(copyOfPublicAddresses);\n                    jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());\n                    if (credentials != null) {\n                        jCloudsContainerMetadata.setIdentity(credentials.identity);\n                        jCloudsContainerMetadata.setCredential(credentials.credential);\n                    }\n\n                    String publicAddress = \"\";\n                    Properties addresses = new Properties();\n                    if (publicAddresses != null && !publicAddresses.isEmpty()) {\n                        publicAddress = publicAddresses.toArray(new String[publicAddresses.size()])[0];\n                        addresses.put(ZkDefs.PUBLIC_IP, publicAddress);\n                    }\n\n                    options.getSystemProperties().put(ContainerProviderUtils.ADDRESSES_PROPERTY_KEY, addresses);\n                    options.getMetadataMap().put(containerName, jCloudsContainerMetadata);\n\n                    //Setup firwall for node\n                    try {\n                        FirewallManager firewallManager = firewallManagerFactory.getFirewallManager(computeService);\n                        if (firewallManager.isSupported()) {\n                            options.getCreationStateListener().onStateChange(\"Configuring firewall.\");\n                            String source = getOriginatingIp();\n                            Rule jmxRule = Rule.create().source(source).destination(nodeMetadata).ports(44444, 1099);\n                            Rule sshRule = Rule.create().source(source).destination(nodeMetadata).port(8101);\n                            Rule httpRule = Rule.create().source(\"0.0.0.0/0\").destination(nodeMetadata).port(8181);\n                            Rule zookeeperRule = Rule.create().source(source).destination(nodeMetadata).port(2181);\n                            firewallManager.addRules(jmxRule, sshRule, httpRule, zookeeperRule);\n                            //We do add the target node public address to the firewall rules, as a way to make things easier in cases\n                            //where firewall configuration is shared among nodes of the same groups, e.g. EC2.\n                            if (!Strings.isNullOrEmpty(publicAddress)) {\n                                Rule zookeeperFromTargetRule = Rule.create().source(publicAddress + \"/32\").destination(nodeMetadata).port(2181);\n                                firewallManager.addRule(zookeeperRule);\n                            }\n                        } else {\n                            options.getCreationStateListener().onStateChange(String.format(\"Skipping firewall configuration. Not supported for provider %s\", options.getProviderName()));\n                        }\n                    } catch (FirewallNotSupportedOnProviderException e) {\n                        LOGGER.warn(\"Firewall manager not supported. Firewall will have to be manually configured.\");\n                    } catch (IOException e) {\n                        LOGGER.warn(\"Could not lookup originating ip. Firewall will have to be manually configured.\", e);\n                    } catch (Throwable t) {\n                        LOGGER.warn(\"Failed to setup firewall\", t);\n                    }\n\n\n                    try {\n                        String script = buildInstallAndStartScript(options.name(containerName));\n                        options.getCreationStateListener().onStateChange(String.format(\"Installing fabric agent on container %s. It may take a while...\", containerName));\n                        ExecResponse response = null;\n                        if (credentials != null) {\n                            response = computeService.runScriptOnNode(id, script, templateOptions.overrideLoginCredentials(credentials).runAsRoot(false));\n                        } else {\n                            response = computeService.runScriptOnNode(id, script, templateOptions);\n                        }\n                        if (response != null && response.getOutput() != null) {\n                            if (response.getOutput().contains(ContainerProviderUtils.FAILURE_PREFIX)) {\n                                jCloudsContainerMetadata.setFailure(new Exception(ContainerProviderUtils.parseScriptFailure(response.getOutput())));\n                            }\n                            String overridenResolverValue = ContainerProviderUtils.parseResolverOverride(response.getOutput());\n                            if (overridenResolverValue != null) {\n                                options.setResolver(overridenResolverValue);\n                                options.getCreationStateListener().onStateChange(\"Overriding resolver to \" + overridenResolverValue + \".\");\n                            }\n                        } else {\n                            jCloudsContainerMetadata.setFailure(new Exception(\"No response received for fabric install script.\"));\n                        }\n                    } catch (Throwable t) {\n                        jCloudsContainerMetadata.setFailure(t);\n                    }\n                    //Cleanup addresses.\n                    options.getSystemProperties().clear();\n                    result.add(jCloudsContainerMetadata);\n                }\n            }\n        } catch (Throwable t) {\n            if (options != null && options.getNumber() > 0) {\n                for (int i = result.size(); i < options.getNumber(); i++) {\n                    CreateJCloudsContainerMetadata failureMetdata = new CreateJCloudsContainerMetadata();\n                    failureMetdata.setFailure(t);\n                    result.add(failureMetdata);\n                }\n            }\n        }\n        return result;\n    }","id":1306,"modified_method":"public Set<CreateJCloudsContainerMetadata> create(CreateJCloudsContainerOptions options) throws MalformedURLException, RunNodesException, URISyntaxException, InterruptedException {\n        final Set<CreateJCloudsContainerMetadata> result = new LinkedHashSet<CreateJCloudsContainerMetadata>();\n        try {\n            options.getCreationStateListener().onStateChange(\"Looking up for compute service.\");\n            ComputeService computeService = getOrCreateComputeService(options);\n\n            if (computeService == null) {\n                throw new IllegalStateException(\"Compute service could not be found or created.\");\n            }\n\n            TemplateBuilder builder = computeService.templateBuilder();\n            builder.any();\n            switch (options.getInstanceType()) {\n                case Smallest:\n                    builder.smallest();\n                    break;\n                case Biggest:\n                    builder.biggest();\n                    break;\n                case Fastest:\n                    builder.fastest();\n                    break;\n                default:\n                    builder.fastest();\n            }\n\n            StringBuilder overviewBuilder = new StringBuilder();\n\n            overviewBuilder.append(String.format(\"Creating %s nodes in the cloud. Using\", options.getNumber()));\n\n\n            //Define ImageId\n            if (!Strings.isNullOrEmpty(options.getImageId())) {\n                overviewBuilder.append(\" image id: \").append(options.getImageId());\n                builder.imageId(options.getImageId());\n            }\n            //or define Image by OS & Version or By ImageId\n            else if (!Strings.isNullOrEmpty(options.getOsFamily())) {\n                overviewBuilder.append(\" operating system: \").append(options.getOsFamily());\n                builder.osFamily(OsFamily.fromValue(options.getOsFamily()));\n                if (!Strings.isNullOrEmpty(options.getOsVersion())) {\n                    overviewBuilder.append(\" and version: \");\n                    builder.osVersionMatches(options.getOsVersion());\n                }\n            } else {\n                throw new IllegalArgumentException(\"Required Image id or Operation System and version predicates.\");\n            }\n\n            overviewBuilder.append(\".\");\n\n            //Define Location & Hardware\n            if (!Strings.isNullOrEmpty(options.getLocationId())) {\n                overviewBuilder.append(\" On location: \").append(options.getLocationId()).append(\".\");\n                builder.locationId(options.getLocationId());\n            }\n\n            if (!Strings.isNullOrEmpty(options.getHardwareId())) {\n                builder.hardwareId(options.getHardwareId());\n            }\n\n            AdminAccess.Builder adminAccess = AdminAccess.builder();\n            TemplateOptions templateOptions = computeService.templateOptions();\n            applyProviderSpecificOptions(templateOptions, options);\n\n            //There are images that have issues with copying of public keys, creation of admin user accounts,etc\n            //To allow\n            if (options.isAdminAccess()) {\n                if (!Strings.isNullOrEmpty(options.getPublicKeyFile())) {\n                    File publicKey = new File(options.getPublicKeyFile());\n                    if (publicKey.exists()) {\n                        adminAccess.adminPublicKey(publicKey);\n                    } else {\n                        templateOptions.runScript(AdminAccess.standard());\n                        LOGGER.warn(\"Public key has been specified file: {} files cannot be found. Ignoring.\", publicKey.getAbsolutePath());\n                    }\n                }\n\n                if (!Strings.isNullOrEmpty(options.getUser())) {\n                    adminAccess.adminUsername(options.getUser());\n                }\n\n                templateOptions.runScript(adminAccess.build());\n            }\n            builder = builder.options(templateOptions);\n\n            Set<? extends NodeMetadata> metadatas = null;\n            overviewBuilder.append(\" It may take a while ...\");\n            options.getCreationStateListener().onStateChange(overviewBuilder.toString());\n            metadatas = computeService.createNodesInGroup(options.getGroup(), options.getNumber(), builder.build());\n\n            if (metadatas != null) {\n                for (NodeMetadata metadata : metadatas) {\n                    options.getCreationStateListener().onStateChange(String.format(\"Node %s has been created.\", metadata.getName()));\n                }\n            }\n\n            Thread.sleep(5000);\n\n            int suffix = 1;\n            if (metadatas != null) {\n                String originalName = new String(options.getName());\n                for (NodeMetadata nodeMetadata : metadatas) {\n                    LoginCredentials credentials = nodeMetadata.getCredentials();\n                    //For some cloud providers return do not allow shell access to root, so the user needs to be overrided.\n                    if (!Strings.isNullOrEmpty(options.getUser()) && credentials != null) {\n                        credentials = credentials.toBuilder().user(options.getUser()).build();\n                    } else {\n                        credentials = nodeMetadata.getCredentials();\n                    }\n                    String id = nodeMetadata.getId();\n                    Set<String> publicAddresses = nodeMetadata.getPublicAddresses();\n\n                    String containerName;\n                    if (options.getNumber() > 1) {\n                        containerName = originalName + (suffix++);\n                    } else {\n                        containerName = originalName;\n                    }\n\n                    //Make a copy of the addresses, because we don't want to return back a guice implementation of Set.\n                    Set<String> copyOfPublicAddresses = new HashSet<String>();\n                    for (String publicAddress : publicAddresses) {\n                        copyOfPublicAddresses.add(publicAddress);\n                    }\n\n                    CreateJCloudsContainerMetadata jCloudsContainerMetadata = new CreateJCloudsContainerMetadata();\n                    jCloudsContainerMetadata.setCreateOptions(options);\n                    jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());\n                    jCloudsContainerMetadata.setContainerName(containerName);\n                    jCloudsContainerMetadata.setPublicAddresses(copyOfPublicAddresses);\n                    jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());\n                    if (credentials != null) {\n                        jCloudsContainerMetadata.setIdentity(credentials.identity);\n                        jCloudsContainerMetadata.setCredential(credentials.credential);\n                    }\n\n                    String publicAddress = \"\";\n                    Properties addresses = new Properties();\n                    if (publicAddresses != null && !publicAddresses.isEmpty()) {\n                        publicAddress = publicAddresses.toArray(new String[publicAddresses.size()])[0];\n                        addresses.put(ZkDefs.PUBLIC_IP, publicAddress);\n                    }\n\n                    options.getSystemProperties().put(ContainerProviderUtils.ADDRESSES_PROPERTY_KEY, addresses);\n                    options.getMetadataMap().put(containerName, jCloudsContainerMetadata);\n\n                    //Setup firwall for node\n                    try {\n                        FirewallManager firewallManager = firewallManagerFactory.getFirewallManager(computeService);\n                        if (firewallManager.isSupported()) {\n                            options.getCreationStateListener().onStateChange(\"Configuring firewall.\");\n                            String source = getOriginatingIp();\n                            Rule jmxRule = Rule.create().source(source).destination(nodeMetadata).ports(44444, 1099);\n                            Rule sshRule = Rule.create().source(source).destination(nodeMetadata).port(8101);\n                            Rule httpRule = Rule.create().source(\"0.0.0.0/0\").destination(nodeMetadata).port(8181);\n                            Rule zookeeperRule = Rule.create().source(source).destination(nodeMetadata).port(2181);\n                            firewallManager.addRules(jmxRule, sshRule, httpRule, zookeeperRule);\n                            //We do add the target node public address to the firewall rules, as a way to make things easier in cases\n                            //where firewall configuration is shared among nodes of the same groups, e.g. EC2.\n                            if (!Strings.isNullOrEmpty(publicAddress)) {\n                                Rule zookeeperFromTargetRule = Rule.create().source(publicAddress + \"/32\").destination(nodeMetadata).port(2181);\n                                firewallManager.addRule(zookeeperRule);\n                            }\n                        } else {\n                            options.getCreationStateListener().onStateChange(String.format(\"Skipping firewall configuration. Not supported for provider %s\", options.getProviderName()));\n                        }\n                    } catch (FirewallNotSupportedOnProviderException e) {\n                        LOGGER.warn(\"Firewall manager not supported. Firewall will have to be manually configured.\");\n                    } catch (IOException e) {\n                        LOGGER.warn(\"Could not lookup originating ip. Firewall will have to be manually configured.\", e);\n                    } catch (Throwable t) {\n                        LOGGER.warn(\"Failed to setup firewall\", t);\n                    }\n\n\n                    try {\n                        String script = buildInstallAndStartScript(options.name(containerName));\n                        options.getCreationStateListener().onStateChange(String.format(\"Installing fabric agent on container %s. It may take a while...\", containerName));\n                        ExecResponse response = null;\n                        boolean doRetry = true;\n                        //In some cases it just needs time for the keys to setup.\n                        //So we do a couple of retries in case we encounter ssh related errors.\n                        //TODO: we may be able to avoid looping ourselves and leverage jclouds.ssh-retries option to a really big number.\n                        for (int i = 0; i < 5 && doRetry; i++) {\n                            try {\n                                if (credentials != null) {\n                                    response = computeService.runScriptOnNode(id, script, templateOptions.overrideLoginCredentials(credentials).runAsRoot(false));\n                                } else {\n                                    response = computeService.runScriptOnNode(id, script, templateOptions);\n                                }\n                                doRetry = false;\n                            } catch (AuthorizationException ex) {\n                                doRetry = true;\n                            } catch (SshException ex) {\n                                doRetry = true;\n                            }\n                        }\n                        //If all retry attempts failed.\n                        if (doRetry) {\n                            throw new Exception(\"Failed to connect to the container via ssh.\");\n                        }\n\n                        if (response != null && response.getOutput() != null) {\n                            if (response.getOutput().contains(ContainerProviderUtils.FAILURE_PREFIX)) {\n                                jCloudsContainerMetadata.setFailure(new Exception(ContainerProviderUtils.parseScriptFailure(response.getOutput())));\n                            }\n                            String overridenResolverValue = ContainerProviderUtils.parseResolverOverride(response.getOutput());\n                            if (overridenResolverValue != null) {\n                                options.setResolver(overridenResolverValue);\n                                options.getCreationStateListener().onStateChange(\"Overriding resolver to \" + overridenResolverValue + \".\");\n                            }\n                        } else {\n                            jCloudsContainerMetadata.setFailure(new Exception(\"No response received for fabric install script.\"));\n                        }\n                    } catch (Throwable t) {\n                        jCloudsContainerMetadata.setFailure(t);\n                    }\n                    //Cleanup addresses.\n                    options.getSystemProperties().clear();\n                    result.add(jCloudsContainerMetadata);\n                }\n            }\n        } catch (Throwable t) {\n            if (options != null && options.getNumber() > 0) {\n                for (int i = result.size(); i < options.getNumber(); i++) {\n                    CreateJCloudsContainerMetadata failureMetdata = new CreateJCloudsContainerMetadata();\n                    failureMetdata.setFailure(t);\n                    result.add(failureMetdata);\n                }\n            }\n        }\n        return result;\n    }","commit_id":"dbe85e554a5119feb6cdf6996c7908b69c48e972","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public void clear() {\n            cache.cleanUp();\n            if (zookeeper.isConnected()) {\n                try {\n                    for (String nodeId : keySet()) {\n                        zookeeper.deleteWithChildren(ZkPath.CLOUD_NODE_IDENTITY.getPath(nodeId));\n                        zookeeper.deleteWithChildren(ZkPath.CLOUD_NODE_CREDENTIAL.getPath(nodeId));\n                    }\n                } catch (Exception e) {\n                    LOGGER.warn(\"Failed to clear zookeeper jclouds credentials store.\", e);\n                }\n            }\n        }","id":1307,"modified_method":"public void clear() {\n            cache.cleanUp();\n            if (zookeeper.isConnected()) {\n                try {\n                    for (String nodeId : keySet()) {\n                        if (zookeeper.exists(ZkPath.CLOUD_NODE_IDENTITY.getPath(nodeId)) != null) {\n                            zookeeper.deleteWithChildren(ZkPath.CLOUD_NODE_IDENTITY.getPath(nodeId));\n                        }\n                        if (zookeeper.exists(ZkPath.CLOUD_NODE_CREDENTIAL.getPath(nodeId)) != null) {\n                            zookeeper.deleteWithChildren(ZkPath.CLOUD_NODE_CREDENTIAL.getPath(nodeId));\n                        }\n                    }\n                } catch (Exception e) {\n                    LOGGER.warn(\"Failed to clear zookeeper jclouds credentials store.\", e);\n                }\n            }\n        }","commit_id":"dbe85e554a5119feb6cdf6996c7908b69c48e972","url":"https://github.com/fabric8io/fabric8"},{"original_method":"/**\n         * Removes {@link Credentials} for {@link Cache} and Zookeeper.\n         * @param o\n         * @return\n         */\n        public Credentials remove(Object o) {\n            Credentials credentials = cache.asMap().remove(o);\n            if (zookeeper.isConnected()) {\n                try {\n                    if (credentials == null) {\n                        credentials = get(o);\n                    }\n                    zookeeper.deleteWithChildren(ZkPath.CLOUD_NODE_IDENTITY.getPath(normalizeKey(o)));\n                    zookeeper.deleteWithChildren(ZkPath.CLOUD_NODE_CREDENTIAL.getPath(normalizeKey(o)));\n                } catch (Exception e) {\n                    LOGGER.warn(\"Failed to remove jclouds credentials to zookeeper.\", e);\n                }\n            }\n            return credentials;\n        }","id":1308,"modified_method":"/**\n         * Removes {@link Credentials} for {@link Cache} and Zookeeper.\n         * @param o\n         * @return\n         */\n        public Credentials remove(Object o) {\n            Credentials credentials = cache.asMap().remove(o);\n            if (zookeeper.isConnected()) {\n                try {\n                    if (credentials == null) {\n                        credentials = get(o);\n                    }\n                    String normalizedKey = normalizeKey(o);\n                    if (zookeeper.exists(ZkPath.CLOUD_NODE_IDENTITY.getPath(normalizedKey)) != null) {\n                        zookeeper.deleteWithChildren(ZkPath.CLOUD_NODE_IDENTITY.getPath(normalizedKey));\n                    }\n                    if (zookeeper.exists(ZkPath.CLOUD_NODE_CREDENTIAL.getPath(normalizedKey)) != null) {\n                        zookeeper.deleteWithChildren(ZkPath.CLOUD_NODE_CREDENTIAL.getPath(normalizedKey));\n                    }\n                } catch (Exception e) {\n                    LOGGER.warn(\"Failed to remove jclouds credentials to zookeeper.\", e);\n                }\n            }\n            return credentials;\n        }","commit_id":"dbe85e554a5119feb6cdf6996c7908b69c48e972","url":"https://github.com/fabric8io/fabric8"},{"original_method":"/**\n     * @see java.util.Map#remove(java.lang.Object)\n     */\n    public Object remove(final Object name) {\n        final Object result = this.valueMap.get(name);\n        if ( result != null ) {\n            final String key;\n            if ( name.toString().startsWith(\"_\") ) {\n                key = \"_\" + name;\n            } else {\n                key = name.toString();\n            }\n            this.resource.getProperties().removeField(key);\n\n            // update map and resource\n            this.createValueMap(this.resource.getProperties());\n            this.resource.changed();\n        }\n        return result;\n    }","id":1309,"modified_method":"/**\n     * @see java.util.Map#remove(java.lang.Object)\n     */\n    public Object remove(final Object name) {\n        final Object result = this.valueMap.get(name);\n        if ( result != null ) {\n            final String key = MongoDBResourceProvider.propNameToKey(name.toString());\n\n            this.resource.getProperties().removeField(key);\n\n            // update map and resource\n            this.createValueMap(this.resource.getProperties());\n            this.resource.changed();\n        }\n        return result;\n    }","commit_id":"f255a27b307d22fea7deee54755b00c5e5781a89","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * @see java.util.Map#put(java.lang.Object, java.lang.Object)\n     */\n    public Object put(final String name, final Object value) {\n        final Object oldValue = this.valueMap.get(name);\n        final String key;\n        if ( name.startsWith(\"_\") ) {\n            key = \"_\" + name;\n        } else {\n            key = name;\n        }\n        this.resource.getProperties().put(key, value);\n\n        // update map and resource\n        this.createValueMap(this.resource.getProperties());\n        this.resource.changed();\n\n        return oldValue;\n    }","id":1310,"modified_method":"/**\n     * @see java.util.Map#put(java.lang.Object, java.lang.Object)\n     */\n    public Object put(final String name, final Object value) {\n        final Object oldValue = this.valueMap.get(name);\n        final String key = MongoDBResourceProvider.propNameToKey(name);\n\n        this.resource.getProperties().put(key, value);\n\n        // update map and resource\n        this.createValueMap(this.resource.getProperties());\n        this.resource.changed();\n\n        return oldValue;\n    }","commit_id":"f255a27b307d22fea7deee54755b00c5e5781a89","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * @see org.apache.sling.api.resource.ModifyingResourceProvider#create(org.apache.sling.api.resource.ResourceResolver, java.lang.String, java.util.Map)\n     */\n    public Resource create(final ResourceResolver resolver, final String path, final Map<String, Object> properties)\n    throws PersistenceException {\n        final String[] info = this.extractResourceInfo(path);\n        if ( info != null && info.length == 2) {\n            final boolean deleted = this.deletedResources.remove(path);\n            final MongoDBResource oldResource = (MongoDBResource)this.getResource(resolver, path, info);\n            if ( !deleted && oldResource != null ) {\n                throw new PersistenceException(\"Resource already exists at \" + path, null, path, null);\n            }\n            final DBObject dbObj = new BasicDBObject();\n            dbObj.put(PROP_PATH, info[1]);\n            if ( properties != null ) {\n                for(Map.Entry<String, Object> entry : properties.entrySet()) {\n                    final String key;\n                    if ( entry.getKey().startsWith(\"_\") ) {\n                        key = \"_\" + entry.getKey();\n                    } else {\n                        key = entry.getKey();\n                    }\n                    dbObj.put(key, entry.getValue());\n                }\n            }\n            if ( deleted && oldResource != null ) {\n                dbObj.put(PROP_ID, oldResource.getProperties().get(PROP_ID));\n            }\n            final MongoDBResource rsrc = new MongoDBResource(resolver, path, info[0], dbObj, this);\n            this.changedResources.put(path, rsrc);\n\n            return rsrc;\n        }\n        throw new PersistenceException(\"Illegal path - unable to create resource at \" + path, null, path, null);\n    }","id":1311,"modified_method":"/**\n     * @see org.apache.sling.api.resource.ModifyingResourceProvider#create(org.apache.sling.api.resource.ResourceResolver, java.lang.String, java.util.Map)\n     */\n    public Resource create(final ResourceResolver resolver, final String path, final Map<String, Object> properties)\n    throws PersistenceException {\n        final String[] info = this.extractResourceInfo(path);\n        if ( info != null && info.length == 2) {\n            final boolean deleted = this.deletedResources.remove(path);\n            final MongoDBResource oldResource = (MongoDBResource)this.getResource(resolver, path, info);\n            if ( !deleted && oldResource != null ) {\n                throw new PersistenceException(\"Resource already exists at \" + path, null, path, null);\n            }\n            final DBObject dbObj = new BasicDBObject();\n            dbObj.put(PROP_PATH, info[1]);\n            if ( properties != null ) {\n                for(Map.Entry<String, Object> entry : properties.entrySet()) {\n                    final String key = propNameToKey(entry.getKey());\n                    dbObj.put(key, entry.getValue());\n                }\n            }\n            if ( deleted && oldResource != null ) {\n                dbObj.put(PROP_ID, oldResource.getProperties().get(PROP_ID));\n            }\n            final MongoDBResource rsrc = new MongoDBResource(resolver, path, info[0], dbObj, this);\n            this.changedResources.put(path, rsrc);\n\n            return rsrc;\n        }\n        throw new PersistenceException(\"Illegal path - unable to create resource at \" + path, null, path, null);\n    }","commit_id":"f255a27b307d22fea7deee54755b00c5e5781a89","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * @see org.apache.sling.api.resource.ResourceProvider#listChildren(org.apache.sling.api.resource.Resource)\n     */\n    public Iterator<Resource> listChildren(final Resource parent) {\n        final String[] info = this.extractResourceInfo(parent.getPath());\n        if ( info != null ) {\n            if ( info.length == 0 ) {\n                // all collections\n                final Set<String> names = new HashSet<String>(context.getDatabase().getCollectionNames());\n                names.removeAll(this.context.getFilterCollectionNames());\n                final Iterator<String> i = names.iterator();\n                return new Iterator<Resource>() {\n\n                    public boolean hasNext() {\n                        return i.hasNext();\n                    }\n\n                    public Resource next() {\n                        final String name = i.next();\n                        return new MongoDBCollectionResource(parent.getResourceResolver(), parent.getPath() + '/' + name);\n                    }\n\n                    public void remove() {\n                        throw new UnsupportedOperationException(\"remove\");\n                    }\n\n                };\n            }\n            if ( this.hasDatabase(info[0]) ) {\n                final DBCollection col = this.context.getDatabase().getCollection(info[0]);\n                if ( col != null ) {\n                    final String pattern;\n                    if ( info.length == 1 ) {\n                        pattern = \"^([^/])*$\";\n                    } else {\n                        pattern = \"^\" + Pattern.quote(info[1]) + \"/([^/])*$\";\n                    }\n\n                    final DBObject query = QueryBuilder.start(PROP_PATH).regex(Pattern.compile(pattern)).get();\n                    final DBCursor cur = col.find(query).\n                                    sort(BasicDBObjectBuilder.start(PROP_PATH, 1).get());\n                    return new Iterator<Resource>() {\n\n                        public boolean hasNext() {\n                            return cur.hasNext();\n                        }\n\n                        public Resource next() {\n                            final DBObject obj = cur.next();\n                            final String objPath = obj.get(PROP_PATH).toString();\n                            final int lastSlash = objPath.lastIndexOf('/');\n                            final String name;\n                            if (lastSlash == -1) {\n                                name = objPath;\n                            } else {\n                                name = objPath.substring(lastSlash + 1);\n                            }\n                            return new MongoDBResource(parent.getResourceResolver(),\n                                            parent.getPath() + '/' + name,\n                                            info[0],\n                                            obj,\n                                            MongoDBResourceProvider.this);\n                        }\n\n                        public void remove() {\n                            throw new UnsupportedOperationException(\"remove\");\n                        }\n\n                    };\n                }\n            }\n        }\n        return null;\n    }","id":1312,"modified_method":"/**\n     * @see org.apache.sling.api.resource.ResourceProvider#listChildren(org.apache.sling.api.resource.Resource)\n     */\n    public Iterator<Resource> listChildren(final Resource parent) {\n        final String[] info = this.extractResourceInfo(parent.getPath());\n        if ( info != null ) {\n            if ( info.length == 0 ) {\n                // all collections\n                final Set<String> names = new HashSet<String>(context.getDatabase().getCollectionNames());\n                names.removeAll(this.context.getFilterCollectionNames());\n                final Iterator<String> i = names.iterator();\n                return new Iterator<Resource>() {\n\n                    public boolean hasNext() {\n                        return i.hasNext();\n                    }\n\n                    public Resource next() {\n                        final String name = i.next();\n                        return new MongoDBCollectionResource(parent.getResourceResolver(), parent.getPath() + '/' + name);\n                    }\n\n                    public void remove() {\n                        throw new UnsupportedOperationException(\"remove\");\n                    }\n\n                };\n            }\n            final DBCollection col = this.getCollection(info[0]);\n            if ( col != null ) {\n                final String pattern;\n                if ( info.length == 1 ) {\n                    pattern = \"^([^/])*$\";\n                } else {\n                    pattern = \"^\" + Pattern.quote(info[1]) + \"/([^/])*$\";\n                }\n\n                final DBObject query = QueryBuilder.start(PROP_PATH).regex(Pattern.compile(pattern)).get();\n                final DBCursor cur = col.find(query).\n                                sort(BasicDBObjectBuilder.start(PROP_PATH, 1).get());\n                return new Iterator<Resource>() {\n\n                    public boolean hasNext() {\n                        return cur.hasNext();\n                    }\n\n                    public Resource next() {\n                        final DBObject obj = cur.next();\n                        final String objPath = obj.get(PROP_PATH).toString();\n                        final int lastSlash = objPath.lastIndexOf('/');\n                        final String name;\n                        if (lastSlash == -1) {\n                            name = objPath;\n                        } else {\n                            name = objPath.substring(lastSlash + 1);\n                        }\n                        return new MongoDBResource(parent.getResourceResolver(),\n                                        parent.getPath() + '/' + name,\n                                        info[0],\n                                        obj,\n                                        MongoDBResourceProvider.this);\n                    }\n\n                    public void remove() {\n                        throw new UnsupportedOperationException(\"remove\");\n                    }\n\n                };\n            }\n        }\n        return null;\n    }","commit_id":"f255a27b307d22fea7deee54755b00c5e5781a89","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * @see org.apache.sling.api.resource.ModifyingResourceProvider#commit()\n     */\n    public void commit() throws PersistenceException {\n        try {\n            for(final String deleted : this.deletedResources) {\n                final String[] info = this.extractResourceInfo(deleted);\n\n                // check if the database still exists\n                if ( this.hasDatabase(info[0]) ) {\n                    final DBCollection col = this.context.getDatabase().getCollection(info[0]);\n                    if ( col != null ) {\n                        col.findAndRemove(QueryBuilder.start(PROP_PATH).is(info[1]).get());\n                    }\n                }\n            }\n            for(final MongoDBResource changed : this.changedResources.values()) {\n\n                final DBCollection col = this.context.getDatabase().getCollection(changed.getCollection());\n                if ( col != null ) {\n                    // create or update?\n                    if ( changed.getProperties().get(PROP_ID) != null ) {\n                        col.update(QueryBuilder.start(PROP_PATH).is(changed.getProperties().get(PROP_PATH)).get(),\n                                        changed.getProperties());\n                    } else {\n                        // create\n                        col.save(changed.getProperties());\n                    }\n                } else {\n                    throw new PersistenceException(\"Unable to create collection \" + changed.getCollection(), null, changed.getPath(), null);\n                }\n            }\n        } finally {\n            this.revert();\n        }\n    }","id":1313,"modified_method":"/**\n     * @see org.apache.sling.api.resource.ModifyingResourceProvider#commit()\n     */\n    public void commit() throws PersistenceException {\n        try {\n            for(final String deleted : this.deletedResources) {\n                final String[] info = this.extractResourceInfo(deleted);\n\n                // check if the collection still exists\n                final DBCollection col = this.getCollection(info[0]);\n                if ( col != null ) {\n                    col.findAndRemove(QueryBuilder.start(PROP_PATH).is(info[1]).get());\n                }\n            }\n            for(final MongoDBResource changed : this.changedResources.values()) {\n\n                final DBCollection col = this.context.getDatabase().getCollection(changed.getCollection());\n                if ( col != null ) {\n                    // create or update?\n                    if ( changed.getProperties().get(PROP_ID) != null ) {\n                        col.update(QueryBuilder.start(PROP_PATH).is(changed.getProperties().get(PROP_PATH)).get(),\n                                        changed.getProperties());\n                    } else {\n                        // create\n                        col.save(changed.getProperties());\n                    }\n                } else {\n                    throw new PersistenceException(\"Unable to create collection \" + changed.getCollection(), null, changed.getPath(), null);\n                }\n            }\n        } finally {\n            this.revert();\n        }\n    }","commit_id":"f255a27b307d22fea7deee54755b00c5e5781a89","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Create a resource\n     */\n    private Resource getResource(final ResourceResolver resourceResolver, final String path, final String[] info) {\n        if ( info.length == 0 ) {\n            // special resource : all collections\n            return new MongoDBCollectionResource(resourceResolver, path);\n        } else if ( info.length == 1 ) {\n            // special resource : collection\n            if ( this.hasDatabase(info[0]) ) {\n                return new MongoDBCollectionResource(resourceResolver, path);\n            }\n            return null;\n        }\n        logger.info(\"Searching {} in {}\", info[1], info[0]);\n        if ( this.hasDatabase(info[0]) ) {\n            final DBCollection col = this.context.getDatabase().getCollection(info[0]);\n            if ( col != null ) {\n                final DBObject obj = col.findOne(QueryBuilder.start(PROP_PATH).is(info[1]).get());\n                logger.info(\"Result={}\", obj);\n                if ( obj != null ) {\n                    return new MongoDBResource(resourceResolver,\n                                    path,\n                                    info[0],\n                                    obj,\n                                    this);\n                }\n            }\n        }\n        return null;\n    }","id":1314,"modified_method":"/**\n     * Get a resource\n     */\n    private Resource getResource(final ResourceResolver resourceResolver, final String path, final String[] info) {\n        if ( info.length == 0 ) {\n            // special resource : all collections\n            return new MongoDBCollectionResource(resourceResolver, path);\n        } else if ( info.length == 1 ) {\n            // special resource : collection\n            if ( this.hasCollection(info[0]) ) {\n                return new MongoDBCollectionResource(resourceResolver, path);\n            }\n            return null;\n        }\n        logger.debug(\"Searching {} in {}\", info[1], info[0]);\n        final DBCollection col = this.getCollection(info[0]);\n        if ( col != null ) {\n            final DBObject obj = col.findOne(QueryBuilder.start(PROP_PATH).is(info[1]).get());\n            logger.debug(\"Found {}\", obj);\n            if ( obj != null ) {\n                return new MongoDBResource(resourceResolver,\n                                path,\n                                info[0],\n                                obj,\n                                this);\n            }\n        }\n\n        return null;\n    }","commit_id":"f255a27b307d22fea7deee54755b00c5e5781a89","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * @see org.apache.sling.api.resource.ModifyingResourceProvider#delete(org.apache.sling.api.resource.ResourceResolver, java.lang.String)\n     */\n    public void delete(final ResourceResolver resolver, final String path)\n    throws PersistenceException {\n        final Resource rsrc = this.getResource(resolver, path);\n        if ( rsrc != null ) {\n            // TODO - delete all child resources!\n            this.deletedResources.add(path);\n            this.changedResources.remove(path);\n        }\n    }","id":1315,"modified_method":"/**\n     * @see org.apache.sling.api.resource.ModifyingResourceProvider#delete(org.apache.sling.api.resource.ResourceResolver, java.lang.String)\n     */\n    public void delete(final ResourceResolver resolver, final String path)\n    throws PersistenceException {\n        if ( deletedResources.contains(path) ) {\n            return;\n        }\n\n        final String[] info = this.extractResourceInfo(path);\n        if ( info != null ) {\n            final Resource rsrc = this.getResource(resolver, path, info);\n            if ( rsrc instanceof MongoDBResource ) {\n                this.deletedResources.add(path);\n                this.changedResources.remove(path);\n\n                final DBCollection col = this.getCollection(info[0]);\n                final String pattern = \"^\" + Pattern.quote(info[1]) + \"/\";\n\n                final DBObject query = QueryBuilder.start(PROP_PATH).regex(Pattern.compile(pattern)).get();\n                final DBCursor cur = col.find(query);\n                while ( cur.hasNext() ) {\n                    final DBObject dbObj = cur.next();\n                    final String childPath = info[0] + '/' + dbObj.get(PROP_PATH);\n                    this.deletedResources.add(childPath);\n                    this.changedResources.remove(childPath);\n                }\n                return;\n            }\n\n        }\n        throw new PersistenceException(\"Unable to delete resource at {}\" + path, null, path, null);\n    }","commit_id":"f255a27b307d22fea7deee54755b00c5e5781a89","url":"https://github.com/apache/sling"},{"original_method":"protected void createValueMap(final DBObject dbObject) {\n        @SuppressWarnings(\"unchecked\")\n        final Map<String, Object> map = new HashMap<String, Object>(dbObject.toMap());\n        final Set<String> names = new HashSet<String>(map.keySet());\n        for(final String name : names) {\n            if ( name.startsWith(\"__\") ) {\n                final Object value = map.remove(name);\n                map.put(name.substring(1), value);\n            } else if ( name.startsWith(\"_\") ) {\n                // remove internal props, like _id, _path\n                map.remove(name);\n            }\n        }\n        this.valueMap = Collections.unmodifiableMap(map);\n    }","id":1316,"modified_method":"protected void createValueMap(final DBObject dbObject) {\n        final Map<String, Object> map = new HashMap<String, Object>();\n        for(final Map.Entry<String, Object> entry : map.entrySet()) {\n            final String name = MongoDBResourceProvider.keyToPropName(entry.getKey());\n            if ( name != null ) {\n                map.put(name, entry.getValue());\n            }\n        }\n        this.valueMap = Collections.unmodifiableMap(map);\n    }","commit_id":"f255a27b307d22fea7deee54755b00c5e5781a89","url":"https://github.com/apache/sling"},{"original_method":"protected Project getCurrentProject() {\n    Project project = PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext());\n    if (project == null) {\n      project = ProjectManager.getInstance().getDefaultProject();\n    }\n    return project;\n  }","id":1317,"modified_method":"protected Project getCurrentProject() {\n    Project project = null;\n    Project[] openProjects = ProjectManager.getInstance().getOpenProjects();\n    if (openProjects.length > 0) project = openProjects[0];\n    if (project == null) {\n      project = PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(this.getPanel()));\n    }\n    if (project == null) {\n      project = ProjectManager.getInstance().getDefaultProject();\n    }\n    return project;\n  }","commit_id":"69b706d39ded3978355c3896b21c1adc556f47fc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public CommonCodeStyleSettingsManager clone(CodeStyleSettings parentSettings) {\n    CommonCodeStyleSettingsManager settingsManager = new CommonCodeStyleSettingsManager(parentSettings);\n    if (myCommonSettingsMap != null) {\n      settingsManager.initCommonSettingsMap();\n      for (Map.Entry<Language, CommonCodeStyleSettings> entry : myCommonSettingsMap.entrySet()) {\n        settingsManager.registerCommonSettings(entry.getKey(), entry.getValue().clone());\n      }\n    }\n    return settingsManager;\n  }","id":1318,"modified_method":"public CommonCodeStyleSettingsManager clone(CodeStyleSettings parentSettings) {\n    CommonCodeStyleSettingsManager settingsManager = new CommonCodeStyleSettingsManager(parentSettings);\n    if (myCommonSettingsMap != null && myCommonSettingsMap.size() > 0) {\n      settingsManager.initCommonSettingsMap();\n      for (Map.Entry<Language, CommonCodeStyleSettings> entry : myCommonSettingsMap.entrySet()) {\n        settingsManager.registerCommonSettings(entry.getKey(), entry.getValue().clone());\n      }\n    }\n    return settingsManager;\n  }","commit_id":"69b706d39ded3978355c3896b21c1adc556f47fc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  protected EditorHighlighter createHighlighter(final EditorColorsScheme scheme) {\n    Project project = PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(this.getPanel()));\n    if (project == null) {\n      project = ProjectManager.getInstance().getDefaultProject();\n    }\n    if (getFileType() instanceof LanguageFileType) {\n      return ((LanguageFileType)getFileType()).getEditorHighlighter(project, null, scheme);\n    }\n    return null;\n  }","id":1319,"modified_method":"@Nullable\n  protected EditorHighlighter createHighlighter(final EditorColorsScheme scheme) {\n    if (getFileType() instanceof LanguageFileType) {\n      return ((LanguageFileType)getFileType()).getEditorHighlighter(getCurrentProject(), null, scheme);\n    }\n    return null;\n  }","commit_id":"69b706d39ded3978355c3896b21c1adc556f47fc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected Object getSettings(CodeStyleSettings settings) {\n      return clazz == null ? settings : settings.getCustomSettings(clazz);\n    }","id":1320,"modified_method":"protected Object getSettings(CodeStyleSettings settings) {\n      if (clazz != null) return settings.getCustomSettings(clazz);\n      return settings.getCommonSettings(getSelectedLanguage());\n    }","commit_id":"69b706d39ded3978355c3896b21c1adc556f47fc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setFieldValue(CodeStyleSettings settings, int value) {\n      try {\n        myTarget.setInt(myTargetClass == null ? settings : settings.getCustomSettings(myTargetClass), value);\n      }\n      catch (IllegalAccessException e) {\n        LOG.error(e);\n      }\n    }","id":1321,"modified_method":"public void setFieldValue(CodeStyleSettings settings, int value) {\n      try {\n        if (myTargetClass != null) {\n          myTarget.setInt(settings.getCustomSettings(myTargetClass), value);\n        }\n        else {\n          CommonCodeStyleSettings commonSettings = settings.getCommonSettings(getSelectedLanguage());\n          myTarget.setInt(commonSettings, value);\n        }\n      }\n      catch (IllegalAccessException e) {\n        LOG.error(e);\n      }\n    }","commit_id":"822bde828f5562ff7e9c31d35381f7cacfdd7671","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setValue(int fieldValue) {\n      myTextField.setText(String.valueOf(fieldValue));\n    }","id":1322,"modified_method":"public void setValue(int fieldValue) {\n      if (fieldValue != myCurrValue) {\n        myTextField.setText(String.valueOf(fieldValue));\n        myCurrValue = fieldValue;\n      }\n    }","commit_id":"822bde828f5562ff7e9c31d35381f7cacfdd7671","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void renameStandardOption(String fieldName, String newTitle) {\n    if (myIsFirstUpdate) {\n      myRenamedFields.put(fieldName, newTitle);\n    }\n  }","id":1323,"modified_method":"@Override\n  public void renameStandardOption(String fieldName, String newTitle) {\n    for (IntOption option : myOptions) {\n      option.myTextField.invalidate();\n    }\n  }","commit_id":"822bde828f5562ff7e9c31d35381f7cacfdd7671","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private int getFieldValue(CodeStyleSettings settings) {\n      try {\n        return myTarget.getInt(myTargetClass == null ? settings : settings.getCustomSettings(myTargetClass));\n      }\n      catch (IllegalAccessException e) {\n        throw new RuntimeException(e);\n      }\n    }","id":1324,"modified_method":"private int getFieldValue(CodeStyleSettings settings) {\n      try {\n        if (myTargetClass != null) {\n          return myTarget.getInt(settings.getCustomSettings(myTargetClass));\n        }\n        CommonCodeStyleSettings commonSettings = settings.getCommonSettings(getSelectedLanguage());\n        return myTarget.getInt(commonSettings);\n      }\n      catch (IllegalAccessException e) {\n        throw new RuntimeException(e);\n      }\n    }","commit_id":"822bde828f5562ff7e9c31d35381f7cacfdd7671","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private int getValue() {\n      int ret = 0;\n      try {\n        ret = Integer.parseInt(myTextField.getText());\n        if (ret < 0) {\n          ret = 0;\n        }\n        if (ret > 10) {\n          ret = 10;\n        }\n      }\n      catch (NumberFormatException e) {\n        //bad number entered\n      }\n      return ret;\n    }","id":1325,"modified_method":"private int getValue() {\n      try {\n        myCurrValue = Integer.parseInt(myTextField.getText());\n        if (myCurrValue < 0) {\n          myCurrValue = 0;\n        }\n        if (myCurrValue > 10) {\n          myCurrValue = 10;\n        }\n      }\n      catch (NumberFormatException e) {\n        //bad number entered\n        myCurrValue = 0;\n      }\n      return myCurrValue;\n    }","commit_id":"822bde828f5562ff7e9c31d35381f7cacfdd7671","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void writeExternal(Element element) throws WriteExternalException {\n    if (myCommonSettingsMap == null) return;\n    final Language[] languages = myCommonSettingsMap.keySet().toArray(new Language[myCommonSettingsMap.keySet().size()]);\n    Arrays.sort(languages, new Comparator<Language>() {\n      public int compare(final Language o1, final Language o2) {\n        return o1.getDisplayName().compareTo(o2.getDisplayName());\n      }\n    });\n\n    for (Language language : languages) {\n      final CommonCodeStyleSettings commonSettings = myCommonSettingsMap.get(language);\n      Element commonSettingsElement = new Element(COMMON_SETTINGS_TAG);\n      commonSettings.writeExternal(commonSettingsElement);\n      commonSettingsElement.setAttribute(LANGUAGE_ATTR, language.getID());\n      if (!element.getContent().isEmpty()) {\n        element.addContent(commonSettingsElement);\n      }\n    }\n  }","id":1326,"modified_method":"@Override\n  public void writeExternal(Element element) throws WriteExternalException {\n    if (myCommonSettingsMap == null) return;\n    final Language[] languages = myCommonSettingsMap.keySet().toArray(new Language[myCommonSettingsMap.keySet().size()]);\n    Arrays.sort(languages, new Comparator<Language>() {\n      public int compare(final Language o1, final Language o2) {\n        return o1.getDisplayName().compareTo(o2.getDisplayName());\n      }\n    });\n\n    for (Language language : languages) {\n      final CommonCodeStyleSettings commonSettings = myCommonSettingsMap.get(language);\n      Element commonSettingsElement = new Element(COMMON_SETTINGS_TAG);\n      commonSettings.writeExternal(commonSettingsElement);\n      if (!commonSettingsElement.getContent().isEmpty()) {\n        commonSettingsElement.setAttribute(LANGUAGE_ATTR, language.getID());\n        element.addContent(commonSettingsElement);\n      }\n    }\n  }","commit_id":"822bde828f5562ff7e9c31d35381f7cacfdd7671","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@DataProvider(name = \"referenceConfidenceMergeData\")\n    public Object[][] makeReferenceConfidenceMergeData() {\n        final List<Object[]> tests = new ArrayList<>();\n\n        final int start = 10;\n        final GenomeLoc loc = new UnvalidatingGenomeLoc(\"20\", 0, start, start);\n        final VariantContext VCbase = new VariantContextBuilder(\"test\", \"20\", start, start, Arrays.asList(Aref)).make();\n        final VariantContext VCprevBase = new VariantContextBuilder(\"test\", \"20\", start-1, start-1, Arrays.asList(Aref)).make();\n\n        final int[] standardPLs = new int[]{30, 20, 10, 71, 72, 73};\n        final int[] reorderedSecondAllelePLs = new int[]{30, 71, 73, 20, 72, 10};\n\n        final List<Allele> A_ALT = Arrays.asList(Aref, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gA_ALT = new GenotypeBuilder(\"A\").PL(new int[]{0, 100, 1000}).make();\n        final VariantContext vcA_ALT = new VariantContextBuilder(VCbase).alleles(A_ALT).genotypes(gA_ALT).make();\n        final Allele AAref = Allele.create(\"AA\", true);\n        final List<Allele> AA_ALT = Arrays.asList(AAref, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gAA_ALT = new GenotypeBuilder(\"AA\").PL(new int[]{0, 80, 800}).make();\n        final VariantContext vcAA_ALT = new VariantContextBuilder(VCprevBase).alleles(AA_ALT).genotypes(gAA_ALT).make();\n        final List<Allele> A_C = Arrays.asList(Aref, C);\n        final Genotype gA_C = new GenotypeBuilder(\"A_C\").PL(new int[]{30, 20, 10}).make();\n        final List<Allele> A_C_ALT = Arrays.asList(Aref, C, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gA_C_ALT = new GenotypeBuilder(\"A_C\").PL(standardPLs).make();\n        final VariantContext vcA_C_ALT = new VariantContextBuilder(VCbase).alleles(A_C_ALT).genotypes(gA_C_ALT).make();\n        final List<Allele> A_G_ALT = Arrays.asList(Aref, G, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gA_G_ALT = new GenotypeBuilder(\"A_G\").PL(standardPLs).make();\n        final VariantContext vcA_G_ALT = new VariantContextBuilder(VCbase).alleles(A_G_ALT).genotypes(gA_G_ALT).make();\n        final List<Allele> A_C_G = Arrays.asList(Aref, C, G);\n        final Genotype gA_C_G = new GenotypeBuilder(\"A_C_G\").PL(new int[]{40, 20, 30, 20, 10, 30}).make();\n        final List<Allele> A_C_G_ALT = Arrays.asList(Aref, C, G, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gA_C_G_ALT = new GenotypeBuilder(\"A_C_G\").PL(new int[]{40, 20, 30, 20, 10, 30, 71, 72, 73, 74}).make();\n        final VariantContext vcA_C_G_ALT = new VariantContextBuilder(VCbase).alleles(A_C_G_ALT).genotypes(gA_C_G_ALT).make();\n        final List<Allele> A_ATC_ALT = Arrays.asList(Aref, ATC, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gA_ATC_ALT = new GenotypeBuilder(\"A_ATC\").PL(standardPLs).make();\n        final VariantContext vcA_ATC_ALT = new VariantContextBuilder(VCbase).alleles(A_ATC_ALT).genotypes(gA_ATC_ALT).make();\n        final Allele A = Allele.create(\"A\", false);\n        final List<Allele> AA_A_ALT = Arrays.asList(AAref, A, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gAA_A_ALT = new GenotypeBuilder(\"AA_A\").PL(standardPLs).make();\n        final VariantContext vcAA_A_ALT = new VariantContextBuilder(VCprevBase).alleles(AA_A_ALT).genotypes(gAA_A_ALT).make();\n\n        // first test the case of a single record\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(A_C).genotypes(gA_C).make()});\n\n        // now, test pairs:\n        // a SNP with another SNP\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcA_G_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(A_C_G).genotypes(gA_C_ALT, new GenotypeBuilder(\"A_G\").PL(reorderedSecondAllelePLs).make()).make()});\n        // a SNP with an indel\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcA_ATC_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(Arrays.asList(Aref, C, ATC)).genotypes(gA_C_ALT, new GenotypeBuilder(\"A_ATC\").PL(reorderedSecondAllelePLs).make()).make()});\n        // a SNP with 2 SNPs\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcA_C_G_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(A_C_G).genotypes(gA_C_ALT, gA_C_G).make()});\n        // a SNP with a ref record\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcA_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(A_C).genotypes(gA_C, gA_ALT).make()});\n\n        // spanning records:\n        // a SNP with a spanning ref record\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcAA_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(A_C).genotypes(gA_C, gAA_ALT).make()});\n        // a SNP with a spanning deletion\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcAA_A_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(A_C).genotypes(gA_C, new GenotypeBuilder(\"AA_A\").PL(new int[]{30, 71, 73}).make()).make()});\n\n        // combination of all\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcA_G_ALT, vcA_ATC_ALT, vcA_C_G_ALT, vcA_ALT, vcAA_ALT, vcAA_A_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(Arrays.asList(Aref, C, ATC, G)).genotypes(new GenotypeBuilder(\"A_C\").PL(new int[]{30, 20, 10, 71, 72, 73, 71, 72, 73, 73}).make(),\n                        new GenotypeBuilder(\"A_G\").PL(new int[]{30, 71, 73, 71, 73, 73, 20, 72, 72, 10}).make(),\n                        new GenotypeBuilder(\"A_ATC\").PL(new int[]{30, 71, 73, 20, 72, 10, 71, 73, 72, 73}).make(),\n                        new GenotypeBuilder(\"A_C_G\").PL(new int[]{40, 20, 30, 71, 72, 74, 20, 10, 73, 30}).make(),\n                        new GenotypeBuilder(\"A\").PL(new int[]{0, 100, 1000, 100, 1000, 1000, 100, 1000, 1000, 1000}).make(),\n                        new GenotypeBuilder(\"AA\").PL(new int[]{0, 80, 800, 80, 800, 800, 80, 800, 800, 800}).make(),\n                        new GenotypeBuilder(\"AA_A\").PL(new int[]{30, 71, 73, 71, 73, 73, 71, 73, 73, 73}).make()).make()});\n\n        // just spanning ref contexts, trying both instances where we want/do not want ref-only contexts\n        tests.add(new Object[]{Arrays.asList(vcAA_ALT),\n                loc, false,\n                null});\n        tests.add(new Object[]{Arrays.asList(vcAA_ALT),\n                loc, true,\n                new VariantContextBuilder(VCbase).alleles(Arrays.asList(Allele.create(\"A\", true))).genotypes(new GenotypeBuilder(\"AA\").PL(new int[]{0}).make()).make()});\n\n        return tests.toArray(new Object[][]{});\n    }","id":1327,"modified_method":"@DataProvider(name = \"referenceConfidenceMergeData\")\n    public Object[][] makeReferenceConfidenceMergeData() {\n        final List<Object[]> tests = new ArrayList<>();\n\n        final int start = 10;\n        final GenomeLoc loc = new UnvalidatingGenomeLoc(\"20\", 0, start, start);\n        final VariantContext VCbase = new VariantContextBuilder(\"test\", \"20\", start, start, Arrays.asList(Aref)).make();\n        final VariantContext VCprevBase = new VariantContextBuilder(\"test\", \"20\", start-1, start-1, Arrays.asList(Aref)).make();\n\n        final int[] standardPLs = new int[]{30, 20, 10, 71, 72, 73};\n        final int[] reorderedSecondAllelePLs = new int[]{30, 71, 73, 20, 72, 10};\n\n        final List<Allele> noCalls = new ArrayList<>(2);\n        noCalls.add(Allele.NO_CALL);\n        noCalls.add(Allele.NO_CALL);\n\n        final List<Allele> A_ALT = Arrays.asList(Aref, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gA_ALT = new GenotypeBuilder(\"A\").PL(new int[]{0, 100, 1000}).alleles(noCalls).make();\n        final VariantContext vcA_ALT = new VariantContextBuilder(VCbase).alleles(A_ALT).genotypes(gA_ALT).make();\n        final Allele AAref = Allele.create(\"AA\", true);\n        final List<Allele> AA_ALT = Arrays.asList(AAref, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gAA_ALT = new GenotypeBuilder(\"AA\").PL(new int[]{0, 80, 800}).alleles(noCalls).make();\n        final VariantContext vcAA_ALT = new VariantContextBuilder(VCprevBase).alleles(AA_ALT).genotypes(gAA_ALT).make();\n        final List<Allele> A_C = Arrays.asList(Aref, C);\n        final Genotype gA_C = new GenotypeBuilder(\"A_C\").PL(new int[]{30, 20, 10}).alleles(noCalls).make();\n        final List<Allele> A_C_ALT = Arrays.asList(Aref, C, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gA_C_ALT = new GenotypeBuilder(\"A_C\").PL(standardPLs).alleles(noCalls).make();\n        final VariantContext vcA_C_ALT = new VariantContextBuilder(VCbase).alleles(A_C_ALT).genotypes(gA_C_ALT).make();\n        final List<Allele> A_G_ALT = Arrays.asList(Aref, G, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gA_G_ALT = new GenotypeBuilder(\"A_G\").PL(standardPLs).alleles(noCalls).make();\n        final VariantContext vcA_G_ALT = new VariantContextBuilder(VCbase).alleles(A_G_ALT).genotypes(gA_G_ALT).make();\n        final List<Allele> A_C_G = Arrays.asList(Aref, C, G);\n        final Genotype gA_C_G = new GenotypeBuilder(\"A_C_G\").PL(new int[]{40, 20, 30, 20, 10, 30}).alleles(noCalls).make();\n        final List<Allele> A_C_G_ALT = Arrays.asList(Aref, C, G, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gA_C_G_ALT = new GenotypeBuilder(\"A_C_G\").PL(new int[]{40, 20, 30, 20, 10, 30, 71, 72, 73, 74}).alleles(noCalls).make();\n        final VariantContext vcA_C_G_ALT = new VariantContextBuilder(VCbase).alleles(A_C_G_ALT).genotypes(gA_C_G_ALT).make();\n        final List<Allele> A_ATC_ALT = Arrays.asList(Aref, ATC, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gA_ATC_ALT = new GenotypeBuilder(\"A_ATC\").PL(standardPLs).alleles(noCalls).make();\n        final VariantContext vcA_ATC_ALT = new VariantContextBuilder(VCbase).alleles(A_ATC_ALT).genotypes(gA_ATC_ALT).make();\n        final Allele A = Allele.create(\"A\", false);\n        final List<Allele> AA_A_ALT = Arrays.asList(AAref, A, GATKVariantContextUtils.NON_REF_SYMBOLIC_ALLELE);\n        final Genotype gAA_A_ALT = new GenotypeBuilder(\"AA_A\").PL(standardPLs).alleles(noCalls).make();\n        final VariantContext vcAA_A_ALT = new VariantContextBuilder(VCprevBase).alleles(AA_A_ALT).genotypes(gAA_A_ALT).make();\n\n        // first test the case of a single record\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(A_C).genotypes(gA_C).alleles(noCalls).make()});\n\n        // now, test pairs:\n        // a SNP with another SNP\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcA_G_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(A_C_G).genotypes(gA_C_ALT, new GenotypeBuilder(\"A_G\").PL(reorderedSecondAllelePLs).alleles(noCalls).make()).make()});\n        // a SNP with an indel\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcA_ATC_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(Arrays.asList(Aref, C, ATC)).genotypes(gA_C_ALT, new GenotypeBuilder(\"A_ATC\").PL(reorderedSecondAllelePLs).alleles(noCalls).make()).make()});\n        // a SNP with 2 SNPs\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcA_C_G_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(A_C_G).genotypes(gA_C_ALT, gA_C_G).make()});\n        // a SNP with a ref record\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcA_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(A_C).genotypes(gA_C, gA_ALT).make()});\n\n        // spanning records:\n        // a SNP with a spanning ref record\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcAA_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(A_C).genotypes(gA_C, gAA_ALT).make()});\n        // a SNP with a spanning deletion\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcAA_A_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(A_C).genotypes(gA_C, new GenotypeBuilder(\"AA_A\").PL(new int[]{30, 71, 73}).alleles(noCalls).make()).make()});\n\n        // combination of all\n        tests.add(new Object[]{Arrays.asList(vcA_C_ALT, vcA_G_ALT, vcA_ATC_ALT, vcA_C_G_ALT, vcA_ALT, vcAA_ALT, vcAA_A_ALT),\n                loc, false,\n                new VariantContextBuilder(VCbase).alleles(Arrays.asList(Aref, C, ATC, G)).genotypes(new GenotypeBuilder(\"A_C\").PL(new int[]{30, 20, 10, 71, 72, 73, 71, 72, 73, 73}).make(),\n                        new GenotypeBuilder(\"A_G\").PL(new int[]{30, 71, 73, 71, 73, 73, 20, 72, 72, 10}).make(),\n                        new GenotypeBuilder(\"A_ATC\").PL(new int[]{30, 71, 73, 20, 72, 10, 71, 73, 72, 73}).make(),\n                        new GenotypeBuilder(\"A_C_G\").PL(new int[]{40, 20, 30, 71, 72, 74, 20, 10, 73, 30}).make(),\n                        new GenotypeBuilder(\"A\").PL(new int[]{0, 100, 1000, 100, 1000, 1000, 100, 1000, 1000, 1000}).make(),\n                        new GenotypeBuilder(\"AA\").PL(new int[]{0, 80, 800, 80, 800, 800, 80, 800, 800, 800}).make(),\n                        new GenotypeBuilder(\"AA_A\").PL(new int[]{30, 71, 73, 71, 73, 73, 71, 73, 73, 73}).make()).make()});\n\n        // just spanning ref contexts, trying both instances where we want/do not want ref-only contexts\n        tests.add(new Object[]{Arrays.asList(vcAA_ALT),\n                loc, false,\n                null});\n        tests.add(new Object[]{Arrays.asList(vcAA_ALT),\n                loc, true,\n                new VariantContextBuilder(VCbase).alleles(Arrays.asList(Allele.create(\"A\", true))).genotypes(new GenotypeBuilder(\"AA\").PL(new int[]{0}).make()).make()});\n\n        return tests.toArray(new Object[][]{});\n    }","commit_id":"53c6a2ed035ac29eb1ff1fa20740cde9bdf9581e","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Serialize a given column to the JSON format\n     * @param column column presentation\n     * @param out output stream\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     */\n    private static void serializeColumn(IColumn column, PrintStream out, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        ByteBuffer name = ByteBufferUtil.clone(column.name());\n        ByteBuffer value = ByteBufferUtil.clone(column.value());\n        AbstractType validator = cfMetaData.getValueValidator(name);\n\n        out.print(\"[\");\n        out.print(quote(comparator.getString(name)));\n        out.print(\", \");\n        out.print(quote(validator.getString(value)));\n        out.print(\", \");\n        out.print(column.timestamp());\n\n        if (column instanceof DeletedColumn)\n        {\n            out.print(\", \");\n            out.print(\"\\\"d\\\"\");\n        }\n        else if (column instanceof ExpiringColumn)\n        {\n            out.print(\", \");\n            out.print(\"\\\"e\\\"\");\n            out.print(\", \");\n            out.print(((ExpiringColumn) column).getTimeToLive());\n            out.print(\", \");\n            out.print(column.getLocalDeletionTime());\n        }\n        else if (column instanceof CounterColumn)\n        {\n            out.print(\", \");\n            out.print(\"\\\"c\\\"\");\n            out.print(\", \");\n            out.print(((CounterColumn) column).timestampOfLastDelete());\n        }\n\n        out.print(\"]\");\n    }","id":1328,"modified_method":"/**\n     * Serialize a given column to the JSON format\n     *\n     * @param column column presentation\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     *\n     * @return column as serialized list\n     */\n    private static List<Object> serializeColumn(IColumn column, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        ArrayList<Object> serializedColumn = new ArrayList<Object>();\n\n        ByteBuffer name = ByteBufferUtil.clone(column.name());\n        ByteBuffer value = ByteBufferUtil.clone(column.value());\n        AbstractType validator = cfMetaData.getValueValidator(name);\n\n        serializedColumn.add(comparator.getString(name));\n        serializedColumn.add(validator.getString(value));\n        serializedColumn.add(column.timestamp());\n\n        if (column instanceof DeletedColumn)\n        {\n            serializedColumn.add(\"d\");\n        }\n        else if (column instanceof ExpiringColumn)\n        {\n            serializedColumn.add(\"e\");\n            serializedColumn.add(((ExpiringColumn) column).getTimeToLive());\n            serializedColumn.add(column.getLocalDeletionTime());\n        }\n        else if (column instanceof CounterColumn)\n        {\n            serializedColumn.add(\"c\");\n            serializedColumn.add(((CounterColumn) column).timestampOfLastDelete());\n        }\n\n        return serializedColumn;\n    }","commit_id":"82ca7c54452b83bd1c069e98e91831517425ed47","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Get portion of the columns and serialize in loop while not more columns left in the row\n     * @param row SSTableIdentityIterator row representation with Column Family\n     * @param key Decorated Key for the required row\n     * @param out output stream\n     */\n    private static void serializeRow(SSTableIdentityIterator row, DecoratedKey key, PrintStream out)\n    {\n        ColumnFamily columnFamily = row.getColumnFamily();\n        boolean isSuperCF = columnFamily.isSuper();\n        CFMetaData cfMetaData = columnFamily.metadata();\n        AbstractType comparator = columnFamily.getComparator();\n\n        out.print(asKey(bytesToHex(key.key)));\n        out.print(isSuperCF ? \"{\" : \"[\");\n\n        if (isSuperCF)\n        {\n            while (row.hasNext())\n            {\n                IColumn column = row.next();\n\n                out.print(asKey(comparator.getString(column.name())));\n                out.print(\"{\");\n                out.print(asKey(\"deletedAt\"));\n                out.print(column.getMarkedForDeleteAt());\n                out.print(\", \");\n                out.print(asKey(\"subColumns\"));\n                out.print(\"[\");\n                serializeColumns(column.getSubColumns().iterator(), out, columnFamily.getSubComparator(), cfMetaData);\n                out.print(\"]\");\n                out.print(\"}\");\n\n                if (row.hasNext())\n                    out.print(\", \");\n            }\n        }\n        else\n        {\n            serializeColumns(row, out, comparator, cfMetaData);\n        }\n\n        out.print(isSuperCF ? \"}\" : \"]\");\n    }","id":1329,"modified_method":"/**\n     * Get portion of the columns and serialize in loop while not more columns left in the row\n     * @param row SSTableIdentityIterator row representation with Column Family\n     * @param key Decorated Key for the required row\n     * @param out output stream\n     */\n    private static void serializeRow(SSTableIdentityIterator row, DecoratedKey key, PrintStream out)\n    {\n        ColumnFamily columnFamily = row.getColumnFamily();\n        boolean isSuperCF = columnFamily.isSuper();\n        CFMetaData cfMetaData = columnFamily.metadata();\n        AbstractType comparator = columnFamily.getComparator();\n\n        writeKey(out, bytesToHex(key.key));\n        out.print(isSuperCF ? \"{\" : \"[\");\n\n        if (isSuperCF)\n        {\n            while (row.hasNext())\n            {\n                IColumn column = row.next();\n\n                writeKey(out, comparator.getString(column.name()));\n                out.print(\"{\");\n                writeKey(out, \"deletedAt\");\n                out.print(column.getMarkedForDeleteAt());\n                out.print(\", \");\n                writeKey(out, \"subColumns\");\n                out.print(\"[\");\n                serializeColumns(column.getSubColumns().iterator(), out, columnFamily.getSubComparator(), cfMetaData);\n                out.print(\"]\");\n                out.print(\"}\");\n\n                if (row.hasNext())\n                    out.print(\", \");\n            }\n        }\n        else\n        {\n            serializeColumns(row, out, comparator, cfMetaData);\n        }\n\n        out.print(isSuperCF ? \"}\" : \"]\");\n\n    }","commit_id":"82ca7c54452b83bd1c069e98e91831517425ed47","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Serialize columns using given column iterator\n     * @param columns column iterator\n     * @param out output stream\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     * @return pair of (number of columns serialized, last column serialized)\n     */\n    private static void serializeColumns(Iterator<IColumn> columns, PrintStream out, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        while (columns.hasNext())\n        {\n            IColumn column = columns.next();\n            serializeColumn(column, out, comparator, cfMetaData);\n\n            if (columns.hasNext())\n                out.print(\", \");\n        }\n    }","id":1330,"modified_method":"/**\n     * Serialize columns using given column iterator\n     *\n     * @param columns column iterator\n     * @param out output stream\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     */\n    private static void serializeColumns(Iterator<IColumn> columns, PrintStream out, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        while (columns.hasNext())\n        {\n            writeJSON(out, serializeColumn(columns.next(), comparator, cfMetaData));\n\n            if (columns.hasNext())\n                out.print(\", \");\n        }\n    }","commit_id":"82ca7c54452b83bd1c069e98e91831517425ed47","url":"https://github.com/apache/cassandra"},{"original_method":"@Override\n    public void start() throws MuleException\n    {\n        try\n        {\n            if (quartzScheduler.isStarted())\n            {\n                if (quartzScheduler.getTrigger(getName(), groupName) == null)\n                {\n                    CronTrigger cronTrigger = new CronTrigger(getName(), groupName, jobName, groupName, cronExpression);\n                    quartzScheduler.scheduleJob(cronTrigger);\n                }\n                else\n                {\n                    quartzScheduler.resumeAll();\n                }\n            }\n\n        }\n        catch (SchedulerException e)\n        {\n            throw new DefaultMuleException(couldNotScheduleJob(), e);\n        }\n        catch (ParseException e)\n        {\n            throw new DefaultMuleException(invalidCronExpression(), e);\n        }\n    }","id":1331,"modified_method":"@Override\n    public void start() throws MuleException\n    {\n        try\n        {\n            if (quartzScheduler.isStarted())\n            {\n                if (quartzScheduler.getTrigger(TriggerKey.triggerKey(getName(), groupName)) == null)\n                {\n                    CronTrigger cronTrigger = newTrigger()\n                        .withIdentity(getName(), groupName)\n                        .forJob(jobName, groupName)\n                        .withSchedule(cronSchedule(cronExpression))\n                        .build();\n                    quartzScheduler.scheduleJob(cronTrigger);\n                }\n                else\n                {\n                    quartzScheduler.resumeAll();\n                }\n            }\n\n        }\n        catch (SchedulerException e)\n        {\n            throw new DefaultMuleException(couldNotScheduleJob(), e);\n        }\n    }","commit_id":"89f3b2b1db0f45eb24fdcc28195d9d96eec2c73d","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public void schedule() throws Exception\n    {\n        quartzScheduler.triggerJob(jobName, groupName);\n    }","id":1332,"modified_method":"@Override\n    public void schedule() throws Exception\n    {\n        quartzScheduler.triggerJob(JobKey.jobKey(jobName, groupName));\n    }","commit_id":"89f3b2b1db0f45eb24fdcc28195d9d96eec2c73d","url":"https://github.com/mulesoft/mule"},{"original_method":"private JobDetail jobDetail(String jobName, String groupName, PollingReceiverWorker job)\n    {\n        JobDetail jobDetail = new JobDetail(jobName, groupName, CronJob.class);\n        JobDataMap jobDataMap = new JobDataMap();\n        jobDataMap.put(POLL_CRON_SCHEDULER_JOB, job);\n        jobDetail.setJobDataMap(jobDataMap);\n        return jobDetail;\n    }","id":1333,"modified_method":"private JobDetail jobDetail(String jobName, String groupName, PollingReceiverWorker job)\n    {\n        JobDataMap jobDataMap = new JobDataMap();\n        jobDataMap.put(POLL_CRON_SCHEDULER_JOB, job);\n        return newJob(CronJob.class)\n                .storeDurably()\n                .withIdentity(jobName, groupName)\n                .usingJobData(jobDataMap)\n                .build();\n    }","commit_id":"89f3b2b1db0f45eb24fdcc28195d9d96eec2c73d","url":"https://github.com/mulesoft/mule"},{"original_method":"public void execute(JobExecutionContext context) throws JobExecutionException\n        {\n            assertTrue(context.getJobDetail().isStateful());\n            latch.countDown();\n        }","id":1334,"modified_method":"public void execute(JobExecutionContext context) throws JobExecutionException\n        {\n            assertTrue(context.getJobInstance() instanceof StatefulJob );\n            latch.countDown();\n        }","commit_id":"89f3b2b1db0f45eb24fdcc28195d9d96eec2c73d","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testCustomStatefulJob() throws Exception\n    {\n        CountDownLatch eventLatch = (CountDownLatch) muleContext.getRegistry().lookupObject(\"latch\");\n\n        // we wait up to 60 seconds here which is WAY too long for one tick but it seems that \n        // \"sometimes\" it takes a very long time for Quartz go kick in. Once it starts \n        // ticking everything is fine.\n        assertTrue(eventLatch.await(60000, TimeUnit.MILLISECONDS));\n    }","id":1335,"modified_method":"@Test\n    public void testCustomStatefulJob() throws Exception\n    {\n        CountDownLatch eventLatch = muleContext.getRegistry().lookupObject(\"latch\");\n\n        // we wait up to 60 seconds here which is WAY too long for one tick but it seems that \n        // \"sometimes\" it takes a very long time for Quartz go kick in. Once it starts \n        // ticking everything is fine.\n        assertTrue(eventLatch.await(60000, TimeUnit.MILLISECONDS));\n    }","commit_id":"89f3b2b1db0f45eb24fdcc28195d9d96eec2c73d","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    protected void doDispatch(MuleEvent event) throws Exception\n    {\n        JobConfig jobConfig = (JobConfig) endpoint.getProperty(QuartzConnector.PROPERTY_JOB_CONFIG);\n        if (jobConfig == null)\n        {\n            throw new IllegalArgumentException(CoreMessages.objectIsNull(QuartzConnector.PROPERTY_JOB_CONFIG).getMessage());\n        }\n\n        JobDetail jobDetail = new JobDetail();\n        // make the job name unique per endpoint (MULE-753)\n        jobDetail.setName(endpoint.getEndpointURI().getAddress() + \"-\" + event.getId());\n\n        JobDataMap jobDataMap = new JobDataMap();\n        jobDataMap.put(QuartzConnector.PROPERTY_JOB_DYNAMIC, Boolean.TRUE);\n        MuleMessage msg = event.getMessage();\n        // populate from invocation and outbound scopes only\n        for (String key : msg.getInvocationPropertyNames())\n        {\n            jobDataMap.put(key, msg.getInvocationProperty(key));\n        }\n        for (String key : msg.getOutboundPropertyNames())\n        {\n            jobDataMap.put(key, msg.getOutboundProperty(key));\n        }\n\n        if (jobConfig instanceof ScheduledDispatchJobConfig) \n        {\n            ScheduledDispatchJobConfig scheduledDispatchJobConfig = (ScheduledDispatchJobConfig) jobConfig;\n            String endpointRef = event.getMuleContext()\n                .getExpressionManager()\n                .parse(scheduledDispatchJobConfig.getEndpointRef(), event);\n\n            jobDataMap.put(\"endpointRef\", endpointRef);\n        }\n        jobDetail.setJobDataMap(jobDataMap);\n\n        Job job = null;\n        // work out what we're actually calling\n        Object payload = event.getMessage().getPayload();\n\n        if(jobConfig instanceof CustomJobConfig)\n        {\n            job = ((CustomJobConfig) jobConfig).getJob();\n        }\n        else if(jobConfig instanceof CustomJobFromMessageConfig)\n        {\n            job = ((CustomJobFromMessageConfig) jobConfig).getJob(msg);\n            //rewrite the jobConfig to the real Jobconfig on the message\n            jobConfig = ((CustomJobFromMessageConfig) jobConfig).getJobConfig(msg);\n        }\n\n        jobDataMap.put(QuartzConnector.PROPERTY_JOB_CONFIG, jobConfig);        \n        jobDetail.setJobClass(jobConfig.getJobClass());\n        // If there has been a job created or found then we default to a customJob configuration\n        if (job != null)\n        {\n            jobDataMap.put(QuartzConnector.PROPERTY_JOB_OBJECT, job);\n            jobDetail.setJobClass(CustomJob.class);\n        }\n       \n        // The payload will be ignored by the CustomJob - don't know why we need it here\n        //RM: The custom job may want the message and the Job type may not be delegating job\n        jobDataMap.put(QuartzConnector.PROPERTY_PAYLOAD, payload);\n\n        Trigger trigger;\n        String cronExpression = jobDataMap.getString(QuartzConnector.PROPERTY_CRON_EXPRESSION);\n        String repeatInterval = jobDataMap.getString(QuartzConnector.PROPERTY_REPEAT_INTERVAL);\n        String repeatCount = jobDataMap.getString(QuartzConnector.PROPERTY_REPEAT_COUNT);\n        String startDelay = jobDataMap.getString(QuartzConnector.PROPERTY_START_DELAY);\n        String groupName = jobConfig.getGroupName();\n        String jobGroupName = jobConfig.getJobGroupName();\n\n        if (groupName == null)\n        {\n            groupName = QuartzConnector.DEFAULT_GROUP_NAME;\n        }\n        if (jobGroupName == null)\n        {\n            jobGroupName = groupName;\n        }\n\n        jobDetail.setGroup(groupName);\n\n        if (cronExpression != null)\n        {\n            CronTrigger ctrigger = new CronTrigger();\n            ctrigger.setCronExpression(cronExpression);\n            trigger = ctrigger;\n        }\n        else if (repeatInterval != null)\n        {\n            SimpleTrigger strigger = new SimpleTrigger();\n            strigger.setRepeatInterval(Long.parseLong(repeatInterval));\n            if (repeatCount != null)\n            {\n                strigger.setRepeatCount(Integer.parseInt(repeatCount));\n            }\n            else\n            {\n                strigger.setRepeatCount(-1);\n            }\n            trigger = strigger;\n        }\n        else\n        {\n            throw new IllegalArgumentException(\n                QuartzMessages.cronExpressionOrIntervalMustBeSet().getMessage());\n        }\n        trigger.setName(endpoint.getEndpointURI().toString() + \"-\" + event.getId());\n        trigger.setGroup(groupName);\n        trigger.setJobName(jobDetail.getName());\n        trigger.setJobGroup(jobGroupName);\n\n        Scheduler scheduler = ((QuartzConnector) this.getConnector()).getQuartzScheduler();\n\n        // Minimize the the time window capturing the start time and scheduling the job.\n        long start = System.currentTimeMillis();\n        if (startDelay != null)\n        {\n            start += Long.parseLong(startDelay);\n        }\n        trigger.setStartTime(new Date(start));\n\n        scheduler.scheduleJob(jobDetail, trigger);\n    }","id":1336,"modified_method":"@Override\n    protected void doDispatch(MuleEvent event) throws Exception\n    {\n        JobConfig jobConfig = (JobConfig) endpoint.getProperty(QuartzConnector.PROPERTY_JOB_CONFIG);\n        if (jobConfig == null)\n        {\n            throw new IllegalArgumentException(CoreMessages.objectIsNull(QuartzConnector.PROPERTY_JOB_CONFIG).getMessage());\n        }\n\n\n        JobDataMap jobDataMap = new JobDataMap();\n        jobDataMap.put(QuartzConnector.PROPERTY_JOB_DYNAMIC, Boolean.TRUE);\n        MuleMessage msg = event.getMessage();\n        // populate from invocation and outbound scopes only\n        for (String key : msg.getInvocationPropertyNames())\n        {\n            jobDataMap.put(key, msg.getInvocationProperty(key));\n        }\n        for (String key : msg.getOutboundPropertyNames())\n        {\n            jobDataMap.put(key, msg.getOutboundProperty(key));\n        }\n\n        if (jobConfig instanceof ScheduledDispatchJobConfig) \n        {\n            ScheduledDispatchJobConfig scheduledDispatchJobConfig = (ScheduledDispatchJobConfig) jobConfig;\n            String endpointRef = event.getMuleContext()\n                .getExpressionManager()\n                .parse(scheduledDispatchJobConfig.getEndpointRef(), event);\n\n            jobDataMap.put(\"endpointRef\", endpointRef);\n        }\n\n        Job job = null;\n        // work out what we're actually calling\n        Object payload = event.getMessage().getPayload();\n\n        if(jobConfig instanceof CustomJobConfig)\n        {\n            job = ((CustomJobConfig) jobConfig).getJob();\n        }\n        else if(jobConfig instanceof CustomJobFromMessageConfig)\n        {\n            job = ((CustomJobFromMessageConfig) jobConfig).getJob(msg);\n            //rewrite the jobConfig to the real Jobconfig on the message\n            jobConfig = ((CustomJobFromMessageConfig) jobConfig).getJobConfig(msg);\n        }\n\n        jobDataMap.put(QuartzConnector.PROPERTY_JOB_CONFIG, jobConfig);\n        Class<? extends Job> jobClass = jobConfig.getJobClass();\n        // If there has been a job created or found then we default to a customJob configuration\n        if (job != null)\n        {\n            jobDataMap.put(QuartzConnector.PROPERTY_JOB_OBJECT, job);\n            jobClass = CustomJob.class;\n        }\n       \n        // The payload will be ignored by the CustomJob - don't know why we need it here\n        //RM: The custom job may want the message and the Job type may not be delegating job\n        jobDataMap.put(QuartzConnector.PROPERTY_PAYLOAD, payload);\n\n        String cronExpression = jobDataMap.getString(QuartzConnector.PROPERTY_CRON_EXPRESSION);\n        String repeatInterval = jobDataMap.getString(QuartzConnector.PROPERTY_REPEAT_INTERVAL);\n        String repeatCount = jobDataMap.getString(QuartzConnector.PROPERTY_REPEAT_COUNT);\n        String startDelay = jobDataMap.getString(QuartzConnector.PROPERTY_START_DELAY);\n        String groupName = jobConfig.getGroupName();\n        String jobGroupName = jobConfig.getJobGroupName();\n\n        if (groupName == null)\n        {\n            groupName = QuartzConnector.DEFAULT_GROUP_NAME;\n        }\n        if (jobGroupName == null)\n        {\n            jobGroupName = groupName;\n        }\n\n        JobDetail jobDetail = newJob(jobClass)\n            // make the job name unique per endpoint (MULE-753)\n            .withIdentity(endpoint.getEndpointURI().getAddress() + \"-\" + event.getId(), groupName)\n            .usingJobData(jobDataMap)\n                .build();\n\n        TriggerBuilder triggerBuilder = newTrigger()\n            .withIdentity(endpoint.getEndpointURI().toString() + \"-\" + event.getId(), groupName)\n            .forJob(jobDetail.getKey().getName(), jobGroupName);\n\n        if (cronExpression != null)\n        {\n            triggerBuilder.withSchedule(cronSchedule(cronExpression));\n        }\n        else if (repeatInterval != null)\n        {\n            triggerBuilder.withSchedule(simpleSchedule()\n                .withIntervalInMilliseconds(Long.parseLong(repeatInterval))\n                .withRepeatCount(repeatCount != null ? Integer.parseInt(repeatCount) : SimpleTrigger.REPEAT_INDEFINITELY));\n        }\n        else\n        {\n            throw new IllegalArgumentException(\n                QuartzMessages.cronExpressionOrIntervalMustBeSet().getMessage());\n        }\n\n        Scheduler scheduler = ((QuartzConnector) this.getConnector()).getQuartzScheduler();\n\n        // Minimize the the time window capturing the start time and scheduling the job.\n        long start = System.currentTimeMillis();\n        if (startDelay != null)\n        {\n            start += Long.parseLong(startDelay);\n        }\n        triggerBuilder.startAt(new Date(start));\n\n        scheduler.scheduleJob(jobDetail, triggerBuilder.build());\n    }","commit_id":"89f3b2b1db0f45eb24fdcc28195d9d96eec2c73d","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    protected void doStart() throws MuleException\n    {\n        try\n        {\n            Scheduler scheduler = connector.getQuartzScheduler();\n\n            JobConfig jobConfig = (JobConfig) endpoint.getProperty(QuartzConnector.PROPERTY_JOB_CONFIG);\n            if (jobConfig == null)\n            {\n                throw new IllegalArgumentException(CoreMessages.objectIsNull(QuartzConnector.PROPERTY_JOB_CONFIG).getMessage());\n            }\n\n            JobDetail jobDetail = new JobDetail();\n            jobDetail.setName(endpoint.getEndpointURI().getAddress());\n            Class<? extends Job> jobClass = jobConfig.getJobClass();\n            jobDetail.setJobClass(jobClass);\n            isStateful = StatefulJob.class.isAssignableFrom(jobClass);\n            JobDataMap jobDataMap = new JobDataMap();\n            jobDataMap.put(QUARTZ_RECEIVER_PROPERTY, this.getReceiverKey());\n            jobDataMap.put(QUARTZ_CONNECTOR_PROPERTY, this.connector.getName());\n            jobDataMap.putAll(endpoint.getProperties());\n\n            if (jobConfig instanceof EventGeneratorJobConfig)\n            {\n                jobDataMap.put(QuartzConnector.PROPERTY_PAYLOAD, ((EventGeneratorJobConfig) jobConfig).getPayload());\n            }\n            jobDataMap.put(QuartzConnector.PROPERTY_JOB_CONFIG, jobConfig);\n\n            Job job = null;\n            if (jobConfig instanceof CustomJobConfig)\n            {\n                job = ((CustomJobConfig) jobConfig).getJob();\n            }\n            // If there has been a job created or found then we default to a custom Job configuration\n            if (job != null)\n            {\n                jobDataMap.put(QuartzConnector.PROPERTY_JOB_OBJECT, job);\n                jobDetail.setJobClass(jobClass);\n            }\n\n            jobDetail.setJobDataMap(jobDataMap);\n\n            Trigger trigger;\n            String cronExpression = (String)endpoint.getProperty(QuartzConnector.PROPERTY_CRON_EXPRESSION);\n            String repeatInterval = (String)endpoint.getProperty(QuartzConnector.PROPERTY_REPEAT_INTERVAL);\n            String repeatCount = (String)endpoint.getProperty(QuartzConnector.PROPERTY_REPEAT_COUNT);\n            String startDelay = (String)endpoint.getProperty(QuartzConnector.PROPERTY_START_DELAY);\n            String groupName = jobConfig.getGroupName();\n            String jobGroupName = jobConfig.getJobGroupName();\n\n            if (groupName == null)\n            {\n                groupName = QuartzConnector.DEFAULT_GROUP_NAME;\n            }\n            if (jobGroupName == null)\n            {\n                jobGroupName = groupName;\n            }\n\n            jobDetail.setGroup(groupName);\n\n            if (cronExpression != null)\n            {\n                CronTrigger ctrigger = new CronTrigger();\n                ctrigger.setCronExpression(cronExpression);\n                trigger = ctrigger;\n            }\n            else if (repeatInterval != null)\n            {\n                SimpleTrigger strigger = new SimpleTrigger();\n                strigger.setRepeatInterval(Long.parseLong(repeatInterval));\n                if (repeatCount != null)\n                {\n                    strigger.setRepeatCount(Integer.parseInt(repeatCount));\n                }\n                else\n                {\n                    strigger.setRepeatCount(-1);\n                }\n                trigger = strigger;\n            }\n            else\n            {\n                throw new IllegalArgumentException(\n                        QuartzMessages.cronExpressionOrIntervalMustBeSet().getMessage());\n            }\n\n            trigger.setName(endpoint.getEndpointURI().getAddress());\n            trigger.setGroup(groupName);\n            trigger.setJobName(endpoint.getEndpointURI().getAddress());\n            trigger.setJobGroup(jobGroupName);\n\n            // Minimize the the time window capturing the start time and scheduling the job.\n            long start = System.currentTimeMillis();\n            if (startDelay != null)\n            {\n                start += Long.parseLong(startDelay);\n            }\n            trigger.setStartTime(new Date(start));\n\n            // We need to handle cases when the job has already been persisted\n            try\n            {\n                scheduler.scheduleJob(jobDetail, trigger);\n            }\n            catch (ObjectAlreadyExistsException oaee)\n            {\n                logger.warn(\"A quartz Job with name: \" + endpoint.getEndpointURI().getAddress() +\n                        \" has already been registered. Cannot register again\");\n            }\n        }\n        catch (Exception e)\n        {\n            throw new EndpointException(CoreMessages.failedToStart(\"Quartz receiver\"), e);\n        }\n    }","id":1337,"modified_method":"@Override\n    protected void doStart() throws MuleException\n    {\n        try\n        {\n            Scheduler scheduler = connector.getQuartzScheduler();\n\n            JobConfig jobConfig = (JobConfig) endpoint.getProperty(QuartzConnector.PROPERTY_JOB_CONFIG);\n            if (jobConfig == null)\n            {\n                throw new IllegalArgumentException(CoreMessages.objectIsNull(QuartzConnector.PROPERTY_JOB_CONFIG).getMessage());\n            }\n\n            Class<? extends Job> jobClass = jobConfig.getJobClass();\n            JobBuilder jobBuilder = newJob(jobClass);\n            isStateful = StatefulJob.class.isAssignableFrom(jobClass);\n            JobDataMap jobDataMap = new JobDataMap();\n            jobDataMap.put(QUARTZ_RECEIVER_PROPERTY, this.getReceiverKey());\n            jobDataMap.put(QUARTZ_CONNECTOR_PROPERTY, this.connector.getName());\n            jobDataMap.putAll(endpoint.getProperties());\n\n            if (jobConfig instanceof EventGeneratorJobConfig)\n            {\n                jobDataMap.put(QuartzConnector.PROPERTY_PAYLOAD, ((EventGeneratorJobConfig) jobConfig).getPayload());\n            }\n            jobDataMap.put(QuartzConnector.PROPERTY_JOB_CONFIG, jobConfig);\n\n            Job job = null;\n            if (jobConfig instanceof CustomJobConfig)\n            {\n                job = ((CustomJobConfig) jobConfig).getJob();\n            }\n            // If there has been a job created or found then we default to a custom Job configuration\n            if (job != null)\n            {\n                jobDataMap.put(QuartzConnector.PROPERTY_JOB_OBJECT, job);\n            }\n\n            jobBuilder.usingJobData(jobDataMap);\n\n            String cronExpression = (String)endpoint.getProperty(QuartzConnector.PROPERTY_CRON_EXPRESSION);\n            String repeatInterval = (String)endpoint.getProperty(QuartzConnector.PROPERTY_REPEAT_INTERVAL);\n            String repeatCount = (String)endpoint.getProperty(QuartzConnector.PROPERTY_REPEAT_COUNT);\n            String startDelay = (String)endpoint.getProperty(QuartzConnector.PROPERTY_START_DELAY);\n            String groupName = jobConfig.getGroupName();\n            String jobGroupName = jobConfig.getJobGroupName();\n\n            if (groupName == null)\n            {\n                groupName = QuartzConnector.DEFAULT_GROUP_NAME;\n            }\n            if (jobGroupName == null)\n            {\n                jobGroupName = groupName;\n            }\n\n            jobBuilder.withIdentity(endpoint.getEndpointURI().getAddress(), groupName);\n\n            TriggerBuilder triggerBuilder = newTrigger()\n                    .withIdentity(endpoint.getEndpointURI().getAddress(), groupName)\n                    .forJob(endpoint.getEndpointURI().getAddress(), jobGroupName);\n\n            if (cronExpression != null)\n            {\n                triggerBuilder.withSchedule(cronSchedule(cronExpression));\n            }\n            else if (repeatInterval != null)\n            {\n                triggerBuilder.withSchedule(simpleSchedule()\n                    .withIntervalInMilliseconds(Long.parseLong(repeatInterval))\n                    .withRepeatCount(repeatCount != null ? Integer.parseInt(repeatCount) : SimpleTrigger.REPEAT_INDEFINITELY));\n            }\n            else\n            {\n                throw new IllegalArgumentException(\n                        QuartzMessages.cronExpressionOrIntervalMustBeSet().getMessage());\n            }\n\n\n            // Minimize the the time window capturing the start time and scheduling the job.\n            long start = System.currentTimeMillis();\n            if (startDelay != null)\n            {\n                start += Long.parseLong(startDelay);\n            }\n            triggerBuilder.startAt(new Date(start));\n\n            // We need to handle cases when the job has already been persisted\n            try\n            {\n                scheduler.scheduleJob(jobBuilder.build(), triggerBuilder.build());\n            }\n            catch (ObjectAlreadyExistsException oaee)\n            {\n                logger.warn(\"A quartz Job with name: \" + endpoint.getEndpointURI().getAddress() +\n                        \" has already been registered. Cannot register again\");\n            }\n        }\n        catch (Exception e)\n        {\n            throw new EndpointException(CoreMessages.failedToStart(\"Quartz receiver\"), e);\n        }\n    }","commit_id":"89f3b2b1db0f45eb24fdcc28195d9d96eec2c73d","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override public Query getFieldQuery(String field, String queryText) throws ParseException {\n        if (mapperService != null) {\n            MapperService.SmartNameFieldMappers fieldMappers = mapperService.smartName(field);\n            if (fieldMappers != null) {\n                FieldMapper mapper = fieldMappers.fieldMappers().mapper();\n                if (mapper != null) {\n                    Query query;\n                    if (mapper.useFieldQueryWithQueryString()) {\n                        query = fieldMappers.fieldMappers().mapper().fieldQuery(queryText);\n                    } else {\n                        query = super.getFieldQuery(mapper.names().indexName(), queryText);\n                    }\n                    return wrapSmartNameQuery(query, fieldMappers, filterCache);\n                }\n            }\n        }\n        return super.getFieldQuery(field, queryText);\n    }","id":1338,"modified_method":"@Override public Query getFieldQuery(String field, String queryText) throws ParseException {\n        currentMapper = null;\n        if (mapperService != null) {\n            MapperService.SmartNameFieldMappers fieldMappers = mapperService.smartName(field);\n            if (fieldMappers != null) {\n                currentMapper = fieldMappers.fieldMappers().mapper();\n                if (currentMapper != null) {\n                    Query query;\n                    if (currentMapper.useFieldQueryWithQueryString()) {\n                        query = currentMapper.fieldQuery(queryText);\n                    } else {\n                        query = super.getFieldQuery(currentMapper.names().indexName(), queryText);\n                    }\n                    return wrapSmartNameQuery(query, fieldMappers, filterCache);\n                }\n            }\n        }\n        return super.getFieldQuery(field, queryText);\n    }","commit_id":"1107df9ab68702816ab016974ba2dd7b7f44cca1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n        String indexedNameField = field;\n        if (mapperService != null) {\n            MapperService.SmartNameFieldMappers fieldMappers = mapperService.smartName(field);\n            if (fieldMappers != null) {\n                if (fieldMappers.fieldMappers().mapper() != null) {\n                    indexedNameField = fieldMappers.fieldMappers().mapper().names().indexName();\n                }\n                return wrapSmartNameQuery(super.getPrefixQuery(indexedNameField, termStr), fieldMappers, filterCache);\n            }\n        }\n        return super.getPrefixQuery(indexedNameField, termStr);\n    }","id":1339,"modified_method":"@Override protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n        String indexedNameField = field;\n        currentMapper = null;\n        if (mapperService != null) {\n            MapperService.SmartNameFieldMappers fieldMappers = mapperService.smartName(field);\n            if (fieldMappers != null) {\n                currentMapper = fieldMappers.fieldMappers().mapper();\n                if (currentMapper != null) {\n                    indexedNameField = currentMapper.names().indexName();\n                }\n                return wrapSmartNameQuery(super.getPrefixQuery(indexedNameField, termStr), fieldMappers, filterCache);\n            }\n        }\n        return super.getPrefixQuery(indexedNameField, termStr);\n    }","commit_id":"1107df9ab68702816ab016974ba2dd7b7f44cca1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected Query getWildcardQuery(String field, String termStr) throws ParseException {\n        String indexedNameField = field;\n        if (mapperService != null) {\n            MapperService.SmartNameFieldMappers fieldMappers = mapperService.smartName(field);\n            if (fieldMappers != null) {\n                if (fieldMappers.fieldMappers().mapper() != null) {\n                    indexedNameField = fieldMappers.fieldMappers().mapper().names().indexName();\n                }\n                return wrapSmartNameQuery(super.getWildcardQuery(indexedNameField, termStr), fieldMappers, filterCache);\n            }\n        }\n        return super.getWildcardQuery(indexedNameField, termStr);\n    }","id":1340,"modified_method":"@Override protected Query getWildcardQuery(String field, String termStr) throws ParseException {\n        String indexedNameField = field;\n        currentMapper = null;\n        if (mapperService != null) {\n            MapperService.SmartNameFieldMappers fieldMappers = mapperService.smartName(field);\n            if (fieldMappers != null) {\n                currentMapper = fieldMappers.fieldMappers().mapper();\n                if (currentMapper != null) {\n                    indexedNameField = currentMapper.names().indexName();\n                }\n                return wrapSmartNameQuery(super.getWildcardQuery(indexedNameField, termStr), fieldMappers, filterCache);\n            }\n        }\n        return super.getWildcardQuery(indexedNameField, termStr);\n    }","commit_id":"1107df9ab68702816ab016974ba2dd7b7f44cca1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected Query getFuzzyQuery(String field, String termStr, float minSimilarity) throws ParseException {\n        String indexedNameField = field;\n        if (mapperService != null) {\n            MapperService.SmartNameFieldMappers fieldMappers = mapperService.smartName(field);\n            if (fieldMappers != null) {\n                if (fieldMappers.fieldMappers().mapper() != null) {\n                    indexedNameField = fieldMappers.fieldMappers().mapper().names().indexName();\n                }\n                return wrapSmartNameQuery(super.getFuzzyQuery(indexedNameField, termStr, minSimilarity), fieldMappers, filterCache);\n            }\n        }\n        return super.getFuzzyQuery(indexedNameField, termStr, minSimilarity);\n    }","id":1341,"modified_method":"@Override protected Query getFuzzyQuery(String field, String termStr, float minSimilarity) throws ParseException {\n        String indexedNameField = field;\n        currentMapper = null;\n        if (mapperService != null) {\n            MapperService.SmartNameFieldMappers fieldMappers = mapperService.smartName(field);\n            if (fieldMappers != null) {\n                currentMapper = fieldMappers.fieldMappers().mapper();\n                if (currentMapper != null) {\n                    indexedNameField = currentMapper.names().indexName();\n                }\n                return wrapSmartNameQuery(super.getFuzzyQuery(indexedNameField, termStr, minSimilarity), fieldMappers, filterCache);\n            }\n        }\n        return super.getFuzzyQuery(indexedNameField, termStr, minSimilarity);\n    }","commit_id":"1107df9ab68702816ab016974ba2dd7b7f44cca1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected Query getRangeQuery(String field, String part1, String part2, boolean inclusive) throws ParseException {\n        if (\"*\".equals(part1)) {\n            part1 = null;\n        }\n        if (\"*\".equals(part2)) {\n            part2 = null;\n        }\n        if (mapperService != null) {\n            MapperService.SmartNameFieldMappers fieldMappers = mapperService.smartName(field);\n            if (fieldMappers != null) {\n                if (fieldMappers.fieldMappers().mapper() != null) {\n                    Query rangeQuery = fieldMappers.fieldMappers().mapper().rangeQuery(part1, part2, inclusive, inclusive);\n                    return wrapSmartNameQuery(rangeQuery, fieldMappers, filterCache);\n                }\n            }\n        }\n        return newRangeQuery(field, part1, part2, inclusive);\n    }","id":1342,"modified_method":"@Override protected Query getRangeQuery(String field, String part1, String part2, boolean inclusive) throws ParseException {\n        if (\"*\".equals(part1)) {\n            part1 = null;\n        }\n        if (\"*\".equals(part2)) {\n            part2 = null;\n        }\n        currentMapper = null;\n        if (mapperService != null) {\n            MapperService.SmartNameFieldMappers fieldMappers = mapperService.smartName(field);\n            if (fieldMappers != null) {\n                currentMapper = fieldMappers.fieldMappers().mapper();\n                if (currentMapper != null) {\n                    Query rangeQuery = currentMapper.rangeQuery(part1, part2, inclusive, inclusive);\n                    return wrapSmartNameQuery(rangeQuery, fieldMappers, filterCache);\n                }\n            }\n        }\n        return newRangeQuery(field, part1, part2, inclusive);\n    }","commit_id":"1107df9ab68702816ab016974ba2dd7b7f44cca1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void checkText(String text) throws IOException, ParserConfigurationException, SAXException, UnknownPropertyException, WrappedTargetException {\n      // TODO: show splash screen, as init takes some time?\n      Configuration config = new Configuration();\n      Language docLanguage = getLanguage();\n      JLanguageTool langTool = new JLanguageTool(docLanguage);\n      langTool.activateDefaultPatternRules();\n      for (Iterator iter = config.getDisabledRuleIds().iterator(); iter.hasNext();) {\n        String id = (String) iter.next();\n        langTool.disableRule(id);\n      }\n      List ruleMatches = langTool.check(text);\n      if (ruleMatches.size() == 0) {\n        JOptionPane.showMessageDialog(null, \"No errors and warnings found (document language: \" +\n            docLanguage.getName() + \")\");\n        // TODO: display number of active rules etc?\n      } else {\n        OOoDialog dialog = new OOoDialog(config, langTool.getAllRules(), xTextDoc, ruleMatches, text);\n        dialog.show();\n      }\n    }","id":1343,"modified_method":"private void checkText(String text) throws IOException, ParserConfigurationException, SAXException, UnknownPropertyException, WrappedTargetException {\n      // TODO: show splash screen / progress bar, as init takes some time?\n      Configuration config = new Configuration();\n      Language docLanguage = getLanguage();\n      JLanguageTool langTool = new JLanguageTool(docLanguage);\n      langTool.activateDefaultPatternRules();\n      for (Iterator iter = config.getDisabledRuleIds().iterator(); iter.hasNext();) {\n        String id = (String) iter.next();\n        langTool.disableRule(id);\n      }\n      List ruleMatches = langTool.check(text);\n      if (ruleMatches.size() == 0) {\n        JOptionPane.showMessageDialog(null, \"No errors and warnings found (document language: \" +\n            docLanguage.getName() + \")\");\n        // TODO: display number of active rules etc?\n      } else {\n        OOoDialog dialog = new OOoDialog(config, langTool.getAllRules(), xTextDoc, ruleMatches, text, xViewCursor);\n        dialog.show();\n      }\n    }","commit_id":"158ed8579c470a9f1ec46301180dc1d6fa9337e8","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"private String getText() {\n      XText text = xTextDoc.getText();\n      return text.getString();\n    }","id":1344,"modified_method":"private String getText() {\n      XModel xModel = (XModel)UnoRuntime.queryInterface(XModel.class, xTextDoc); \n      XController xController = xModel.getCurrentController(); \n      XTextViewCursorSupplier xViewCursorSupplier = \n        (XTextViewCursorSupplier)UnoRuntime.queryInterface(XTextViewCursorSupplier.class, xController); \n      //XTextViewCursor xViewCursor = xViewCursorSupplier.getViewCursor();\n      xViewCursor = xViewCursorSupplier.getViewCursor();\n      String textToCheck = xViewCursor.getString();     // user's current selection\n      if (textToCheck.equals(\"\")) {     // no selection = check complete text\n        XText text = xTextDoc.getText();\n        textToCheck = text.getString();\n        xViewCursor = null;\n      }\n      return textToCheck;\n    }","commit_id":"158ed8579c470a9f1ec46301180dc1d6fa9337e8","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"/** Testing only.\n   */\n  public static void main(String[] args) throws IOException, ParserConfigurationException, SAXException {\n    JLanguageTool lt = new JLanguageTool(Language.ENGLISH);\n    lt.activateDefaultPatternRules();\n    Configuration config = new Configuration();\n    for (Iterator iter = config.getDisabledRuleIds().iterator(); iter.hasNext();) {\n      String id = (String) iter.next();\n      lt.disableRule(id);\n    }\n    //String text = \"and a hour ago. this is a test, I thing that's a good idea.\";\n    //String text = \"i thing that's a good idea. This is an test.\";\n    String text = \"There was to much snow.\";\n    List ruleMatches = lt.check(text);\n    OOoDialog prg = new OOoDialog(config, lt.getAllRules(), null, ruleMatches, text);\n    prg.show();\n  }","id":1345,"modified_method":"/** Testing only.\n   */\n  public static void main(String[] args) throws IOException, ParserConfigurationException, SAXException {\n    JLanguageTool lt = new JLanguageTool(Language.ENGLISH);\n    lt.activateDefaultPatternRules();\n    Configuration config = new Configuration();\n    for (Iterator iter = config.getDisabledRuleIds().iterator(); iter.hasNext();) {\n      String id = (String) iter.next();\n      lt.disableRule(id);\n    }\n    //String text = \"and a hour ago. this is a test, I thing that's a good idea.\";\n    //String text = \"i thing that's a good idea. This is an test.\";\n    String text = \"There was to much snow.\";\n    List ruleMatches = lt.check(text);\n    OOoDialog prg = new OOoDialog(config, lt.getAllRules(), null, ruleMatches, text, null);\n    prg.show();\n  }","commit_id":"158ed8579c470a9f1ec46301180dc1d6fa9337e8","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"private void changeText() {\n    String replacement = (String)suggestionList.getSelectedValue();\n    XText text = xTextDoc.getText();\n    XTextCursor cursor = text.createTextCursor();\n    cursor.gotoStart(false);\n    cursor.goRight((short)(currentRuleMatch.getFromPos()-replacementCorrection), false);\n    // FIXME: what if cast fails?\n    short errorLength = (short)(currentRuleMatch.getToPos()-currentRuleMatch.getFromPos());\n    //System.err.println(text.getString().replaceAll(\"\\n\", \"#\\n\"));\n    //System.err.println(currentRuleMatch.getFromPos() + \", len=\"+errorLength);\n    cursor.goRight(errorLength, true);\n    cursor.setString(replacement);\n    replacementCorrection += errorLength - replacement.length();\n    gotoNextMatch();\n  }","id":1346,"modified_method":"private void changeText() {\n    String replacement = (String)suggestionList.getSelectedValue();\n    XText text = xTextDoc.getText();\n    // FIXME: what if cast fails?\n    short errorLength = (short)(currentRuleMatch.getToPos()-currentRuleMatch.getFromPos());\n    if (xViewCursor == null) {\n      // working on complete text:\n      XTextCursor cursor = text.createTextCursor();\n      cursor.gotoStart(false);\n      cursor.goRight((short)(currentRuleMatch.getFromPos()-replacementCorrection), false);\n      cursor.goRight(errorLength, true);\n      cursor.setString(replacement);\n    } else {\n      // working on selected text only:\n      if (startTextRange == null) {\n        startTextRange = xViewCursor.getStart();\n      }\n      xViewCursor.gotoRange(startTextRange, false);\n      xViewCursor.goRight((short)(currentRuleMatch.getFromPos()-replacementCorrection), false);\n      xViewCursor.goRight((short)errorLength, true);\n      xViewCursor.setString(replacement);\n    }\n    replacementCorrection += errorLength - replacement.length();\n    gotoNextMatch();\n  }","commit_id":"158ed8579c470a9f1ec46301180dc1d6fa9337e8","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"OOoDialog(Configuration configuration, List rules, XTextDocument xTextDoc, List ruleMatches, String text) {\n    this.rules = rules;\n    this.xTextDoc = xTextDoc;\n    this.ruleMatches = ruleMatches;\n    this.text = text;\n    this.configuration = configuration;\n  }","id":1347,"modified_method":"OOoDialog(Configuration configuration, List rules, XTextDocument xTextDoc, List ruleMatches, String text,\n      XTextViewCursor xViewCursor) {\n    this.rules = rules;\n    this.xTextDoc = xTextDoc;\n    this.ruleMatches = ruleMatches;\n    this.text = text;\n    this.configuration = configuration;\n    this.xViewCursor = xViewCursor; \n  }","commit_id":"158ed8579c470a9f1ec46301180dc1d6fa9337e8","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"private void showError(int i) {\n    RuleMatch match = (RuleMatch) ruleMatches.get(i);\n    currentRuleMatch = match;\n    currentRuleMatchPos = i;\n    String msg = match.getMessage();\n    StringBuffer sb = new StringBuffer();\n    if (ruleMatches.size() == 1)\n      sb.append(ruleMatches.size() + \" match in total\");\n    else\n      sb.append(ruleMatches.size() + \" matches in total\");\n    sb.append(\"<br>\\n<br>\\n<b>\" +(i+1)+ \".<\/b> \");\n    sb.append(\"<b>Match:<\/b> \");\n    sb.append(msg);\n    sb.append(\"<br>\\n\");\n    contextArea.setText(Tools.getContext(match.getFromPos(), match.getToPos(), text));\n    messageArea.setText(sb.toString());\n    setSuggestions();\n    // Place visible cursor on the error:\n    if (xTextDoc != null) {\n      XModel xModel = (XModel)UnoRuntime.queryInterface(XModel.class, xTextDoc); \n      XController xController = xModel.getCurrentController(); \n      XTextViewCursorSupplier xViewCursorSupplier = (XTextViewCursorSupplier)UnoRuntime.queryInterface(XTextViewCursorSupplier.class, xController); \n      XTextViewCursor xViewCursor = xViewCursorSupplier.getViewCursor();\n      xViewCursor.gotoStart(false);\n      int errorLength = currentRuleMatch.getToPos() - currentRuleMatch.getFromPos();\n      xViewCursor.goRight((short)(currentRuleMatch.getFromPos()-replacementCorrection), false);\n      xViewCursor.goRight((short)errorLength, true);\n    }\n  }","id":1348,"modified_method":"private void showError(int i) {\n    RuleMatch match = (RuleMatch) ruleMatches.get(i);\n    currentRuleMatch = match;\n    currentRuleMatchPos = i;\n    String msg = match.getMessage();\n    StringBuffer sb = new StringBuffer();\n    if (ruleMatches.size() == 1)\n      sb.append(ruleMatches.size() + \" match in total\");\n    else\n      sb.append(ruleMatches.size() + \" matches in total\");\n    sb.append(\"<br>\\n<br>\\n<b>\" +(i+1)+ \".<\/b> \");\n    sb.append(\"<b>Match:<\/b> \");\n    sb.append(msg);\n    sb.append(\"<br>\\n\");\n    contextArea.setText(Tools.getContext(match.getFromPos(), match.getToPos(), text));\n    messageArea.setText(sb.toString());\n    setSuggestions();\n    // Place visible cursor on the error:\n    if (xTextDoc != null) {\n      XModel xModel = (XModel)UnoRuntime.queryInterface(XModel.class, xTextDoc); \n      XController xController = xModel.getCurrentController(); \n      XTextViewCursorSupplier xViewCursorSupplier = \n        (XTextViewCursorSupplier)UnoRuntime.queryInterface(XTextViewCursorSupplier.class, xController); \n      int errorLength = currentRuleMatch.getToPos() - currentRuleMatch.getFromPos();\n      if (xViewCursor == null) {\n        // working on complete text:\n        XTextViewCursor tmpxViewCursor = xViewCursorSupplier.getViewCursor();\n        tmpxViewCursor.gotoStart(false);\n        tmpxViewCursor.goRight((short)(currentRuleMatch.getFromPos()-replacementCorrection), false);\n        tmpxViewCursor.goRight((short)errorLength, true);\n      } else {\n        // working on selected text only:\n        if (startTextRange == null) {\n          startTextRange = xViewCursor.getStart();\n        }\n        xViewCursor.gotoRange(startTextRange, false);\n        xViewCursor.goRight((short)(currentRuleMatch.getFromPos()-replacementCorrection), false);\n        xViewCursor.goRight((short)errorLength, true);\n      }\n    }\n  }","commit_id":"158ed8579c470a9f1ec46301180dc1d6fa9337e8","url":"https://github.com/languagetool-org/languagetool"},{"original_method":"/** Extracts the LWJGL native libraries from the classpath and sets the \"org.lwjgl.librarypath\" system property. */\r\n\tstatic public void load () {\r\n\t\tGdxNativesLoader.load();\r\n\t\tif (GdxNativesLoader.disableNativesLoading) return;\r\n\t\tif (!load) return;\r\n\r\n\t\tSharedLibraryLoader loader = new SharedLibraryLoader();\r\n\t\tFile nativesDir = null;\r\n\t\ttry {\r\n\t\t\tif (isWindows) {\r\n\t\t\t\tnativesDir = loader.extractFile(is64Bit ? \"lwjgl64.dll\" : \"lwjgl.dll\", null).getParentFile();\r\n\t\t\t\tloader.extractFile(is64Bit ? \"OpenAL64.dll\" : \"OpenAL32.dll\", nativesDir.getName());\r\n\t\t\t} else if (isMac) {\r\n\t\t\t\tnativesDir = loader.extractFile(\"liblwjgl.jnilib\", null).getParentFile();\r\n\t\t\t\tloader.extractFile(\"openal.dylib\", nativesDir.getName());\r\n\t\t\t} else if (isLinux) {\r\n\t\t\t\tnativesDir = loader.extractFile(is64Bit ? \"liblwjgl64.so\" : \"liblwjgl.so\", null).getParentFile();\r\n\t\t\t\tloader.extractFile(is64Bit ? \"libopenal64.so\" : \"libopenal.so\", nativesDir.getName());\r\n\t\t\t}\r\n\t\t} catch (Throwable ex) {\r\n\t\t\tthrow new GdxRuntimeException(\"Unable to extract LWJGL natives.\", ex);\r\n\t\t}\r\n\t\tSystem.setProperty(\"org.lwjgl.librarypath\", nativesDir.getAbsolutePath());\r\n\t\tload = false;\r\n\t}","id":1349,"modified_method":"/** Extracts the LWJGL native libraries from the classpath and sets the \"org.lwjgl.librarypath\" system property. */\r\n\tstatic public void load () {\r\n\t\tGdxNativesLoader.load();\r\n\t\tif (GdxNativesLoader.disableNativesLoading) return;\r\n\t\tif (!load) return;\r\n\r\n\t\tSharedLibraryLoader loader = new SharedLibraryLoader();\r\n\t\tFile nativesDir = null;\r\n\t\ttry {\r\n\t\t\tif (isWindows) {\r\n\t\t\t\tnativesDir = loader.extractFile(is64Bit ? \"lwjgl64.dll\" : \"lwjgl.dll\", null).getParentFile();\r\n\t\t\t\tif (!LwjglApplicationConfiguration.disableAudio)\r\n\t\t\t\t\tloader.extractFile(is64Bit ? \"OpenAL64.dll\" : \"OpenAL32.dll\", nativesDir.getName());\r\n\t\t\t} else if (isMac) {\r\n\t\t\t\tnativesDir = loader.extractFile(\"liblwjgl.jnilib\", null).getParentFile();\r\n\t\t\t\tif (!LwjglApplicationConfiguration.disableAudio) loader.extractFile(\"openal.dylib\", nativesDir.getName());\r\n\t\t\t} else if (isLinux) {\r\n\t\t\t\tnativesDir = loader.extractFile(is64Bit ? \"liblwjgl64.so\" : \"liblwjgl.so\", null).getParentFile();\r\n\t\t\t\tif (!LwjglApplicationConfiguration.disableAudio)\r\n\t\t\t\t\tloader.extractFile(is64Bit ? \"libopenal64.so\" : \"libopenal.so\", nativesDir.getName());\r\n\t\t\t}\r\n\t\t} catch (Throwable ex) {\r\n\t\t\tthrow new GdxRuntimeException(\"Unable to extract LWJGL natives.\", ex);\r\n\t\t}\r\n\t\tSystem.setProperty(\"org.lwjgl.librarypath\", nativesDir.getAbsolutePath());\r\n\t\tload = false;\r\n\t}","commit_id":"597fff64cb13278a32ab947c06a97d5f799b7fc7","url":"https://github.com/libgdx/libgdx"},{"original_method":"/**\n   * @return the commit date\n   */\n  @CheckForNull\n  public Date date() {\n    if (date != null) {\n      return (Date) date.clone();\n    }\n    return null;\n  }","id":1350,"modified_method":"/**\n   * @return the commit date\n   */\n  @CheckForNull\n  public Date date() {\n    return date;\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public int hashCode() {\n    return new HashCodeBuilder(27, 45).\n      append(date)\n      .append(revision)\n      .append(author)\n      .append(committer)\n      .toHashCode();\n  }","id":1351,"modified_method":"@Override\n  public int hashCode() {\n    return new HashCodeBuilder(27, 45).\n      append(date)\n      .append(revision)\n      .append(author)\n      .toHashCode();\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public boolean equals(Object obj) {\n    if (obj == null) {\n      return false;\n    }\n    if (obj == this) {\n      return true;\n    }\n    if (obj.getClass() != getClass()) {\n      return false;\n    }\n    BlameLine rhs = (BlameLine) obj;\n    return new EqualsBuilder()\n      .append(date, rhs.date)\n      .append(revision, rhs.revision)\n      .append(author, rhs.author)\n      .append(committer, rhs.committer)\n      .isEquals();\n  }","id":1352,"modified_method":"@Override\n  public boolean equals(Object obj) {\n    if (obj == null) {\n      return false;\n    }\n    if (obj == this) {\n      return true;\n    }\n    if (obj.getClass() != getClass()) {\n      return false;\n    }\n    BlameLine rhs = (BlameLine) obj;\n    return new EqualsBuilder()\n      .append(date, rhs.date)\n      .append(revision, rhs.revision)\n      .append(author, rhs.author)\n      .isEquals();\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testBlameLine() {\n    Date date = new Date();\n    BlameLine line1 = new BlameLine(date, \"1\", \"foo\");\n    BlameLine line1b = new BlameLine(date, \"1\", \"foo\");\n    BlameLine line2 = new BlameLine(null, \"2\", \"foo2\");\n\n    assertThat(line1.author()).isEqualTo(\"foo\");\n    assertThat(line1.date()).isEqualTo(date);\n    assertThat(line1.revision()).isEqualTo(\"1\");\n    assertThat(line1.committer()).isEqualTo(\"foo\");\n\n    assertThat(line1).isEqualTo(line1);\n    assertThat(line1).isNotEqualTo(null);\n    assertThat(line1).isEqualTo(line1b);\n    assertThat(line1.hashCode()).isEqualTo(line1b.hashCode());\n    assertThat(line1).isNotEqualTo(line2);\n    assertThat(line1).isNotEqualTo(\"foo\");\n\n    assertThat(line1.toString()).contains(\"revision=1,author=foo,committer=foo\");\n  }","id":1353,"modified_method":"@Test\n  public void testBlameLine() {\n    Date date = new Date();\n    BlameLine line1 = new BlameLine().date(date).revision(\"1\").author(\"foo\");\n    BlameLine line1b = new BlameLine().date(date).revision(\"1\").author(\"foo\");\n    BlameLine line2 = new BlameLine().date(null).revision(\"2\").author(\"foo2\");\n\n    assertThat(line1.author()).isEqualTo(\"foo\");\n    assertThat(line1.date()).isEqualTo(date);\n    assertThat(line1.revision()).isEqualTo(\"1\");\n\n    assertThat(line1).isEqualTo(line1);\n    assertThat(line1).isNotEqualTo(null);\n    assertThat(line1).isEqualTo(line1b);\n    assertThat(line1.hashCode()).isEqualTo(line1b.hashCode());\n    assertThat(line1).isNotEqualTo(line2);\n    assertThat(line1).isNotEqualTo(\"foo\");\n\n    assertThat(line1.toString()).contains(\"revision=1,author=foo\");\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testExecutionError() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameResult result = mock(BlameResult.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer errConsumer = (StreamConsumer) invocation.getArguments()[2];\n        errConsumer.consumeLine(\"My error\");\n        return 1;\n      }\n    });\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"The git blame command [git blame --porcelain src/foo.xoo -w] failed: My error\");\n\n    new GitBlameCommand(commandExecutor).blame(fs, Arrays.<InputFile>asList(inputFile), result);\n  }","id":1354,"modified_method":"@Test\n  public void testExecutionError() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameOutput result = mock(BlameOutput.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer errConsumer = (StreamConsumer) invocation.getArguments()[2];\n        errConsumer.consumeLine(\"My error\");\n        return 1;\n      }\n    });\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"The git blame command [git blame --porcelain src/foo.xoo -w] failed: My error\");\n\n    when(input.filesToBlame()).thenReturn(Arrays.<InputFile>asList(inputFile));\n    new GitBlameCommand(commandExecutor).blame(input, result);\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testParsingOfOutput() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameResult result = mock(BlameResult.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer outConsumer = (StreamConsumer) invocation.getArguments()[1];\n        outConsumer.consumeLine(\"2c68c473da7fc293e12ca50f19380c5118be7ead 68 54 1\");\n        outConsumer.consumeLine(\"author Simon Brandhof\");\n        outConsumer.consumeLine(\"author-mail <simon.brandhof@gmail.com>\");\n        outConsumer.consumeLine(\"author-time 1312534171\");\n        outConsumer.consumeLine(\"author-tz +0200\");\n        outConsumer.consumeLine(\"committer Simon Brandhof\");\n        outConsumer.consumeLine(\"committer-mail <simon.brandhof@gmail.com>\");\n        outConsumer.consumeLine(\"committer-time 1312534171\");\n        outConsumer.consumeLine(\"committer-tz +0200\");\n        outConsumer.consumeLine(\"summary Move to nexus.codehaus.org + configuration of maven release plugin is back\");\n        outConsumer.consumeLine(\"previous 1bec1c3a77f6957175be13e4433110f7fc8e387e pom.xml\");\n        outConsumer.consumeLine(\"filename pom.xml\");\n        outConsumer.consumeLine(\"\\t<id>codehaus-nexus-staging<\/id>\");\n        outConsumer.consumeLine(\"2c68c473da7fc293e12ca50f19380c5118be7ead 72 60 1\");\n        outConsumer.consumeLine(\"\\t<url>${sonar.snapshotRepository.url}<\/url>\");\n        return 0;\n      }\n    });\n\n    new GitBlameCommand(commandExecutor).blame(fs, Arrays.<InputFile>asList(inputFile), result);\n    verify(result).add(inputFile,\n      Arrays.asList(new BlameLine(DateUtils.parseDateTime(\"2011-08-05T10:49:31+0200\"), \"2c68c473da7fc293e12ca50f19380c5118be7ead\", \"simon.brandhof@gmail.com\"),\n        new BlameLine(DateUtils.parseDateTime(\"2011-08-05T10:49:31+0200\"), \"2c68c473da7fc293e12ca50f19380c5118be7ead\", \"simon.brandhof@gmail.com\")));\n  }","id":1355,"modified_method":"@Test\n  public void testParsingOfOutput() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameOutput result = mock(BlameOutput.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer outConsumer = (StreamConsumer) invocation.getArguments()[1];\n        outConsumer.consumeLine(\"2c68c473da7fc293e12ca50f19380c5118be7ead 68 54 1\");\n        outConsumer.consumeLine(\"author Simon Brandhof\");\n        outConsumer.consumeLine(\"author-mail <simon.brandhof@gmail.com>\");\n        outConsumer.consumeLine(\"author-time 1312534171\");\n        outConsumer.consumeLine(\"author-tz +0200\");\n        outConsumer.consumeLine(\"committer Simon Brandhof\");\n        outConsumer.consumeLine(\"committer-mail <simon.brandhof@gmail.com>\");\n        outConsumer.consumeLine(\"committer-time 1312534171\");\n        outConsumer.consumeLine(\"committer-tz +0200\");\n        outConsumer.consumeLine(\"summary Move to nexus.codehaus.org + configuration of maven release plugin is back\");\n        outConsumer.consumeLine(\"previous 1bec1c3a77f6957175be13e4433110f7fc8e387e pom.xml\");\n        outConsumer.consumeLine(\"filename pom.xml\");\n        outConsumer.consumeLine(\"\\t<id>codehaus-nexus-staging<\/id>\");\n        outConsumer.consumeLine(\"2c68c473da7fc293e12ca50f19380c5118be7ead 72 60 1\");\n        outConsumer.consumeLine(\"\\t<url>${sonar.snapshotRepository.url}<\/url>\");\n        return 0;\n      }\n    });\n    when(input.filesToBlame()).thenReturn(Arrays.<InputFile>asList(inputFile));\n    new GitBlameCommand(commandExecutor).blame(input, result);\n    verify(result).blameResult(\n      inputFile,\n      Arrays.asList(\n        new BlameLine().date(DateUtils.parseDateTime(\"2011-08-05T10:49:31+0200\")).revision(\"2c68c473da7fc293e12ca50f19380c5118be7ead\").author(\"simon.brandhof@gmail.com\"),\n        new BlameLine().date(DateUtils.parseDateTime(\"2011-08-05T10:49:31+0200\")).revision(\"2c68c473da7fc293e12ca50f19380c5118be7ead\").author(\"simon.brandhof@gmail.com\")));\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void prepare() throws IOException {\n    baseDir = temp.newFolder();\n    fs = new DefaultFileSystem();\n    fs.setBaseDir(baseDir);\n  }","id":1356,"modified_method":"@Before\n  public void prepare() throws IOException {\n    baseDir = temp.newFolder();\n    fs = new DefaultFileSystem();\n    fs.setBaseDir(baseDir);\n    input = mock(BlameInput.class);\n    when(input.fileSystem()).thenReturn(fs);\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldFailOnFileWithLocalModification() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameResult result = mock(BlameResult.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer outConsumer = (StreamConsumer) invocation.getArguments()[1];\n        outConsumer.consumeLine(\"000000000000000000000000000000000000000 68 54 1\");\n        outConsumer.consumeLine(\"author Not Committed Yet\");\n        outConsumer.consumeLine(\"author-mail <not.committed.yet>\");\n        outConsumer.consumeLine(\"author-time 1312534171\");\n        outConsumer.consumeLine(\"author-tz +0200\");\n        outConsumer.consumeLine(\"committer Not Committed Yet\");\n        outConsumer.consumeLine(\"committer-mail <not.committed.yet>\");\n        outConsumer.consumeLine(\"committer-time 1312534171\");\n        outConsumer.consumeLine(\"committer-tz +0200\");\n        outConsumer.consumeLine(\"summary Move to nexus.codehaus.org + configuration of maven release plugin is back\");\n        outConsumer.consumeLine(\"previous 1bec1c3a77f6957175be13e4433110f7fc8e387e pom.xml\");\n        outConsumer.consumeLine(\"filename pom.xml\");\n        outConsumer.consumeLine(\"\\t<id>codehaus-nexus-staging<\/id>\");\n        outConsumer.consumeLine(\"2c68c473da7fc293e12ca50f19380c5118be7ead 72 60 1\");\n        outConsumer.consumeLine(\"\\t<url>${sonar.snapshotRepository.url}<\/url>\");\n        return 0;\n      }\n    });\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Unable to blame file src/foo.xoo. No blame info at line 1. Is file commited?\");\n    new GitBlameCommand(commandExecutor).blame(fs, Arrays.<InputFile>asList(inputFile), result);\n  }","id":1357,"modified_method":"@Test\n  public void shouldFailOnFileWithLocalModification() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameOutput result = mock(BlameOutput.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer outConsumer = (StreamConsumer) invocation.getArguments()[1];\n        outConsumer.consumeLine(\"000000000000000000000000000000000000000 68 54 1\");\n        outConsumer.consumeLine(\"author Not Committed Yet\");\n        outConsumer.consumeLine(\"author-mail <not.committed.yet>\");\n        outConsumer.consumeLine(\"author-time 1312534171\");\n        outConsumer.consumeLine(\"author-tz +0200\");\n        outConsumer.consumeLine(\"committer Not Committed Yet\");\n        outConsumer.consumeLine(\"committer-mail <not.committed.yet>\");\n        outConsumer.consumeLine(\"committer-time 1312534171\");\n        outConsumer.consumeLine(\"committer-tz +0200\");\n        outConsumer.consumeLine(\"summary Move to nexus.codehaus.org + configuration of maven release plugin is back\");\n        outConsumer.consumeLine(\"previous 1bec1c3a77f6957175be13e4433110f7fc8e387e pom.xml\");\n        outConsumer.consumeLine(\"filename pom.xml\");\n        outConsumer.consumeLine(\"\\t<id>codehaus-nexus-staging<\/id>\");\n        outConsumer.consumeLine(\"2c68c473da7fc293e12ca50f19380c5118be7ead 72 60 1\");\n        outConsumer.consumeLine(\"\\t<url>${sonar.snapshotRepository.url}<\/url>\");\n        return 0;\n      }\n    });\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Unable to blame file src/foo.xoo. No blame info at line 1. Is file commited?\");\n    when(input.filesToBlame()).thenReturn(Arrays.<InputFile>asList(inputFile));\n    new GitBlameCommand(commandExecutor).blame(input, result);\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void consumeContentLine() {\n    BlameLine blameLine = new BlameLine(time, revision, author, committer);\n    getLines().add(blameLine);\n\n    // keep commitinfo for this sha-1\n    commitInfo.put(revision, blameLine);\n\n    expectRevisionLine = true;\n  }","id":1358,"modified_method":"private void consumeContentLine() {\n    BlameLine blameLine = new BlameLine().date(time).revision(revision).author(author);\n    getLines().add(blameLine);\n\n    // keep commitinfo for this sha-1\n    commitInfo.put(revision, blameLine);\n\n    expectRevisionLine = true;\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@VisibleForTesting\n  protected boolean extractCommitInfoFromLine(String line) {\n    if (line.startsWith(GIT_AUTHOR_EMAIL)) {\n      author = extractEmail(line);\n      return true;\n    }\n\n    if (line.startsWith(GIT_COMMITTER_EMAIL)) {\n      committer = extractEmail(line);\n      return true;\n    }\n\n    if (line.startsWith(GIT_COMMITTER_TIME)) {\n      String timeStr = line.substring(GIT_COMMITTER_TIME.length());\n      time = new Date(Long.parseLong(timeStr) * 1000L);\n      return true;\n    }\n    return false;\n  }","id":1359,"modified_method":"@VisibleForTesting\n  protected boolean extractCommitInfoFromLine(String line) {\n    if (line.startsWith(GIT_AUTHOR_EMAIL)) {\n      author = extractEmail(line);\n      return true;\n    }\n\n    if (line.startsWith(GIT_COMMITTER_TIME)) {\n      String timeStr = line.substring(GIT_COMMITTER_TIME.length());\n      time = new Date(Long.parseLong(timeStr) * 1000L);\n      return true;\n    }\n    return false;\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void consumeRevisionLine(String line) {\n    String[] parts = line.split(\"\\\\s\", 4);\n\n    if (parts.length >= 1) {\n      revision = parts[0];\n\n      if (StringUtils.containsOnly(revision, \"0\")) {\n        throw new IllegalStateException(\"Unable to blame file \" + filename + \". No blame info at line \" + (getLines().size() + 1) + \". Is file commited?\");\n      }\n\n      BlameLine oldLine = commitInfo.get(revision);\n\n      if (oldLine != null) {\n        // restore the commit info\n        author = oldLine.author();\n        committer = oldLine.committer();\n        time = oldLine.date();\n      }\n\n      expectRevisionLine = false;\n    }\n  }","id":1360,"modified_method":"private void consumeRevisionLine(String line) {\n    String[] parts = line.split(\"\\\\s\", 4);\n\n    if (parts.length >= 1) {\n      revision = parts[0];\n\n      if (StringUtils.containsOnly(revision, \"0\")) {\n        throw new IllegalStateException(\"Unable to blame file \" + filename + \". No blame info at line \" + (getLines().size() + 1) + \". Is file commited?\");\n      }\n\n      BlameLine oldLine = commitInfo.get(revision);\n\n      if (oldLine != null) {\n        // restore the commit info\n        author = oldLine.author();\n        time = oldLine.date();\n      }\n\n      expectRevisionLine = false;\n    }\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void blame(BlameResult result, Git git, File gitBaseDir, InputFile inputFile) throws GitAPIException {\n    String filename = pathResolver.relativePath(gitBaseDir, inputFile.file());\n    org.eclipse.jgit.blame.BlameResult blameResult = git.blame()\n      // Equivalent to -w command line option\n      .setTextComparator(RawTextComparator.WS_IGNORE_ALL)\n      .setFilePath(filename).call();\n    List<BlameLine> lines = new ArrayList<BlameLine>();\n    for (int i = 0; i < blameResult.getResultContents().size(); i++) {\n      if (blameResult.getSourceAuthor(i) == null || blameResult.getSourceCommit(i) == null || blameResult.getSourceCommitter(i) == null) {\n        LOG.info(\"Author: \" + blameResult.getSourceAuthor(i));\n        LOG.info(\"Committer: \" + blameResult.getSourceCommitter(i));\n        LOG.info(\"Source commit: \" + blameResult.getSourceCommit(i));\n        throw new IllegalStateException(\"Unable to blame file \" + inputFile.relativePath() + \". No blame info at line \" + (i + 1) + \". Is file commited?\");\n      }\n      lines.add(new org.sonar.api.batch.scm.BlameLine(blameResult.getSourceAuthor(i).getWhen(),\n        blameResult.getSourceCommit(i).getName(),\n        blameResult.getSourceAuthor(i).getEmailAddress(),\n        blameResult.getSourceCommitter(i).getEmailAddress()));\n    }\n    if (lines.size() == inputFile.lines() - 1) {\n      // SONARPLUGINS-3097 Git do not report blame on last empty line\n      lines.add(lines.get(lines.size() - 1));\n    }\n    result.add(inputFile, lines);\n  }","id":1361,"modified_method":"private void blame(BlameOutput output, Git git, File gitBaseDir, InputFile inputFile) throws GitAPIException {\n    String filename = pathResolver.relativePath(gitBaseDir, inputFile.file());\n    org.eclipse.jgit.blame.BlameResult blameResult = git.blame()\n      // Equivalent to -w command line option\n      .setTextComparator(RawTextComparator.WS_IGNORE_ALL)\n      .setFilePath(filename).call();\n    List<BlameLine> lines = new ArrayList<BlameLine>();\n    for (int i = 0; i < blameResult.getResultContents().size(); i++) {\n      if (blameResult.getSourceAuthor(i) == null || blameResult.getSourceCommit(i) == null) {\n        LOG.info(\"Author: \" + blameResult.getSourceAuthor(i));\n        LOG.info(\"Source commit: \" + blameResult.getSourceCommit(i));\n        throw new IllegalStateException(\"Unable to blame file \" + inputFile.relativePath() + \". No blame info at line \" + (i + 1) + \". Is file commited?\");\n      }\n      lines.add(new org.sonar.api.batch.scm.BlameLine().date(blameResult.getSourceAuthor(i).getWhen()).revision(blameResult.getSourceCommit(i).getName())\n        .author(blameResult.getSourceAuthor(i).getEmailAddress()));\n    }\n    if (lines.size() == inputFile.lines() - 1) {\n      // SONARPLUGINS-3097 Git do not report blame on last empty line\n      lines.add(lines.get(lines.size() - 1));\n    }\n    output.blameResult(inputFile, lines);\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testBlameOnNewFile() throws IOException {\n    File projectDir = temp.newFolder();\n    javaUnzip(new File(\"test-repos/dummy-git.zip\"), projectDir);\n\n    JGitBlameCommand jGitBlameCommand = new JGitBlameCommand(new PathResolver());\n\n    DefaultFileSystem fs = new DefaultFileSystem();\n    File baseDir = new File(projectDir, \"dummy-git\");\n    fs.setBaseDir(baseDir);\n    String relativePath = DUMMY_JAVA;\n    String relativePath2 = \"src/main/java/org/dummy/Dummy2.java\";\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", relativePath)\n      .setFile(new File(baseDir, relativePath));\n    fs.add(inputFile);\n    DefaultInputFile inputFile2 = new DefaultInputFile(\"foo\", relativePath2)\n      .setFile(new File(baseDir, relativePath2));\n    fs.add(inputFile2);\n\n    // Emulate a new file\n    FileUtils.copyFile(new File(baseDir, relativePath), new File(baseDir, relativePath2));\n\n    BlameResult blameResult = mock(BlameResult.class);\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Unable to blame file \" + relativePath2 + \". No blame info at line 1. Is file commited?\");\n    jGitBlameCommand.blame(fs, Arrays.<InputFile>asList(inputFile, inputFile2), blameResult);\n  }","id":1362,"modified_method":"@Test\n  public void testBlameOnNewFile() throws IOException {\n    File projectDir = temp.newFolder();\n    javaUnzip(new File(\"test-repos/dummy-git.zip\"), projectDir);\n\n    JGitBlameCommand jGitBlameCommand = new JGitBlameCommand(new PathResolver());\n\n    File baseDir = new File(projectDir, \"dummy-git\");\n    fs.setBaseDir(baseDir);\n    String relativePath = DUMMY_JAVA;\n    String relativePath2 = \"src/main/java/org/dummy/Dummy2.java\";\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", relativePath)\n      .setFile(new File(baseDir, relativePath));\n    fs.add(inputFile);\n    DefaultInputFile inputFile2 = new DefaultInputFile(\"foo\", relativePath2)\n      .setFile(new File(baseDir, relativePath2));\n    fs.add(inputFile2);\n\n    // Emulate a new file\n    FileUtils.copyFile(new File(baseDir, relativePath), new File(baseDir, relativePath2));\n\n    BlameOutput blameResult = mock(BlameOutput.class);\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Unable to blame file \" + relativePath2 + \". No blame info at line 1. Is file commited?\");\n    when(input.filesToBlame()).thenReturn(Arrays.<InputFile>asList(inputFile, inputFile2));\n    jGitBlameCommand.blame(input, blameResult);\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testBlameOnNestedModule() throws IOException {\n    File projectDir = temp.newFolder();\n    javaUnzip(new File(\"test-repos/dummy-git-nested.zip\"), projectDir);\n\n    JGitBlameCommand jGitBlameCommand = new JGitBlameCommand(new PathResolver());\n\n    DefaultFileSystem fs = new DefaultFileSystem();\n    File baseDir = new File(projectDir, \"dummy-git-nested/dummy-project\");\n    fs.setBaseDir(baseDir);\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", DUMMY_JAVA)\n      .setFile(new File(baseDir, DUMMY_JAVA));\n    fs.add(inputFile);\n\n    BlameResult blameResult = mock(BlameResult.class);\n    jGitBlameCommand.blame(fs, Arrays.<InputFile>asList(inputFile), blameResult);\n\n    Date revisionDate = DateUtils.parseDateTime(\"2012-07-17T16:12:48+0200\");\n    String revision = \"6b3aab35a3ea32c1636fee56f996e677653c48ea\";\n    String author = \"david@gageot.net\";\n    verify(blameResult).add(inputFile,\n      Arrays.asList(\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author)));\n  }","id":1363,"modified_method":"@Test\n  public void testBlameOnNestedModule() throws IOException {\n    File projectDir = temp.newFolder();\n    javaUnzip(new File(\"test-repos/dummy-git-nested.zip\"), projectDir);\n\n    JGitBlameCommand jGitBlameCommand = new JGitBlameCommand(new PathResolver());\n\n    File baseDir = new File(projectDir, \"dummy-git-nested/dummy-project\");\n    fs.setBaseDir(baseDir);\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", DUMMY_JAVA)\n      .setFile(new File(baseDir, DUMMY_JAVA));\n    fs.add(inputFile);\n\n    BlameOutput blameResult = mock(BlameOutput.class);\n    when(input.filesToBlame()).thenReturn(Arrays.<InputFile>asList(inputFile));\n    jGitBlameCommand.blame(input, blameResult);\n\n    Date revisionDate = DateUtils.parseDateTime(\"2012-07-17T16:12:48+0200\");\n    String revision = \"6b3aab35a3ea32c1636fee56f996e677653c48ea\";\n    String author = \"david@gageot.net\";\n    verify(blameResult).blameResult(inputFile,\n      Arrays.asList(\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author)));\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testBlame() throws IOException {\n    File projectDir = temp.newFolder();\n    javaUnzip(new File(\"test-repos/dummy-git.zip\"), projectDir);\n\n    JGitBlameCommand jGitBlameCommand = new JGitBlameCommand(new PathResolver());\n\n    DefaultFileSystem fs = new DefaultFileSystem();\n    File baseDir = new File(projectDir, \"dummy-git\");\n    fs.setBaseDir(baseDir);\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", DUMMY_JAVA)\n      .setFile(new File(baseDir, DUMMY_JAVA));\n    fs.add(inputFile);\n\n    BlameResult blameResult = mock(BlameResult.class);\n    jGitBlameCommand.blame(fs, Arrays.<InputFile>asList(inputFile), blameResult);\n\n    Date revisionDate = DateUtils.parseDateTime(\"2012-07-17T16:12:48+0200\");\n    String revision = \"6b3aab35a3ea32c1636fee56f996e677653c48ea\";\n    String author = \"david@gageot.net\";\n    verify(blameResult).add(inputFile,\n      Arrays.asList(\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author),\n        new BlameLine(revisionDate, revision, author)));\n  }","id":1364,"modified_method":"@Test\n  public void testBlame() throws IOException {\n    File projectDir = temp.newFolder();\n    javaUnzip(new File(\"test-repos/dummy-git.zip\"), projectDir);\n\n    JGitBlameCommand jGitBlameCommand = new JGitBlameCommand(new PathResolver());\n\n    File baseDir = new File(projectDir, \"dummy-git\");\n    fs.setBaseDir(baseDir);\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", DUMMY_JAVA)\n      .setFile(new File(baseDir, DUMMY_JAVA));\n    fs.add(inputFile);\n\n    BlameOutput blameResult = mock(BlameOutput.class);\n    when(input.filesToBlame()).thenReturn(Arrays.<InputFile>asList(inputFile));\n    jGitBlameCommand.blame(input, blameResult);\n\n    Date revisionDate = DateUtils.parseDateTime(\"2012-07-17T16:12:48+0200\");\n    String revision = \"6b3aab35a3ea32c1636fee56f996e677653c48ea\";\n    String author = \"david@gageot.net\";\n    verify(blameResult).blameResult(inputFile,\n      Arrays.asList(\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author),\n        new BlameLine().revision(revision).date(revisionDate).author(author)));\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testBlameOnModifiedFile() throws IOException {\n    File projectDir = temp.newFolder();\n    javaUnzip(new File(\"test-repos/dummy-git.zip\"), projectDir);\n\n    JGitBlameCommand jGitBlameCommand = new JGitBlameCommand(new PathResolver());\n\n    DefaultFileSystem fs = new DefaultFileSystem();\n    File baseDir = new File(projectDir, \"dummy-git\");\n    fs.setBaseDir(baseDir);\n    String relativePath = DUMMY_JAVA;\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", relativePath)\n      .setFile(new File(baseDir, relativePath));\n    fs.add(inputFile);\n\n    // Emulate a modification\n    FileUtils.write(new File(baseDir, relativePath), \"modification and \\n some new line\", true);\n\n    BlameResult blameResult = mock(BlameResult.class);\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Unable to blame file \" + relativePath + \". No blame info at line 27. Is file commited?\");\n    jGitBlameCommand.blame(fs, Arrays.<InputFile>asList(inputFile), blameResult);\n  }","id":1365,"modified_method":"@Test\n  public void testBlameOnModifiedFile() throws IOException {\n    File projectDir = temp.newFolder();\n    javaUnzip(new File(\"test-repos/dummy-git.zip\"), projectDir);\n\n    JGitBlameCommand jGitBlameCommand = new JGitBlameCommand(new PathResolver());\n\n    File baseDir = new File(projectDir, \"dummy-git\");\n    fs.setBaseDir(baseDir);\n    String relativePath = DUMMY_JAVA;\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", relativePath)\n      .setFile(new File(baseDir, relativePath));\n    fs.add(inputFile);\n\n    // Emulate a modification\n    FileUtils.write(new File(baseDir, relativePath), \"modification and \\n some new line\", true);\n\n    BlameOutput blameResult = mock(BlameOutput.class);\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Unable to blame file \" + relativePath + \". No blame info at line 27. Is file commited?\");\n    when(input.filesToBlame()).thenReturn(Arrays.<InputFile>asList(inputFile));\n    jGitBlameCommand.blame(input, blameResult);\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Unique identifier of the provider. Can be used in SCM URL to define the provider to use.\n   */\n  public abstract String key();","id":1366,"modified_method":"/**\n   * Unique identifier of the provider. Can be passed to {@link CoreProperties#SCM_PROVIDER_KEY}\n   * Can be used in SCM URL to define the provider to use.\n   */\n  public abstract String key();","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void execute(final SensorContext context) {\n    if (configuration.isDisabled()) {\n      LOG.info(\"SCM Sensor is disabled\");\n      return;\n    }\n    if (configuration.provider() == null) {\n      LOG.info(\"No SCM system was detected. You can use the '\" + CoreProperties.SCM_PROVIDER_KEY + \"' property to explicitly specify it.\");\n      return;\n    }\n\n    List<InputFile> filesToBlame = new LinkedList<InputFile>();\n    for (InputFile f : fs.inputFiles(fs.predicates().all())) {\n      copyPreviousMeasuresForUnmodifiedFiles(context, filesToBlame, f);\n    }\n    if (!filesToBlame.isEmpty()) {\n      LOG.info(\"SCM provider for this project is: \" + configuration.provider().key());\n      TimeProfiler profiler = new TimeProfiler().start(\"Retrieve SCM blame information\");\n      configuration.provider().blameCommand().blame(fs, filesToBlame, new DefaultBlameResult(context));\n      profiler.stop();\n    }\n  }","id":1367,"modified_method":"@Override\n  public void execute(final SensorContext context) {\n    if (configuration.isDisabled()) {\n      LOG.info(\"SCM Sensor is disabled\");\n      return;\n    }\n    if (configuration.provider() == null) {\n      LOG.info(\"No SCM system was detected. You can use the '\" + CoreProperties.SCM_PROVIDER_KEY + \"' property to explicitly specify it.\");\n      return;\n    }\n\n    List<InputFile> filesToBlame = new LinkedList<InputFile>();\n    for (InputFile f : fs.inputFiles(fs.predicates().all())) {\n      copyPreviousMeasuresForUnmodifiedFiles(context, filesToBlame, f);\n    }\n    if (!filesToBlame.isEmpty()) {\n      LOG.info(\"SCM provider for this project is: \" + configuration.provider().key());\n      TimeProfiler profiler = new TimeProfiler().start(\"Retrieve SCM blame information\");\n      DefaultBlameOutput output = new DefaultBlameOutput(context, filesToBlame);\n      configuration.provider().blameCommand().blame(new DefaultBlameInput(fs, filesToBlame), output);\n      if (!output.remainingFiles().isEmpty()) {\n        throw new IllegalStateException(\"Some files were not blamed\");\n      }\n      profiler.stop();\n    }\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private Future<Void> submitTask(final FileSystem fs, final BlameResult result, ExecutorService executorService, final InputFile inputFile) {\n    return executorService.submit(new Callable<Void>() {\n      @Override\n      public Void call() {\n        blame(fs, inputFile, result);\n        return null;\n      }\n    });\n  }","id":1368,"modified_method":"private Future<Void> submitTask(final FileSystem fs, final BlameOutput result, ExecutorService executorService, final InputFile inputFile) {\n    return executorService.submit(new Callable<Void>() {\n      @Override\n      public Void call() {\n        blame(fs, inputFile, result);\n        return null;\n      }\n    });\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void blame(final FileSystem fs, final InputFile inputFile, final BlameResult result) {\n    String filename = inputFile.relativePath();\n    Command cl = createCommandLine(fs.baseDir(), filename);\n    SvnBlameConsumer consumer = new SvnBlameConsumer(filename);\n    StringStreamConsumer stderr = new StringStreamConsumer();\n    int exitCode;\n    try {\n      exitCode = execute(cl, consumer, stderr);\n    } catch (CommandException e) {\n      // Unwrap CommandException\n      throw e.getCause() instanceof RuntimeException ? (RuntimeException) e.getCause() : new IllegalStateException(e.getCause());\n    }\n    if (exitCode != 0) {\n      throw new IllegalStateException(\"The svn blame command [\" + cl.toString() + \"] failed: \" + stderr.getOutput());\n    }\n    List<BlameLine> lines = consumer.getLines();\n    if (lines.size() == inputFile.lines() - 1) {\n      // SONARPLUGINS-3097 SVN do not report blame on last empty line\n      lines.add(lines.get(lines.size() - 1));\n    }\n    result.add(inputFile, lines);\n  }","id":1369,"modified_method":"private void blame(final FileSystem fs, final InputFile inputFile, final BlameOutput output) {\n    String filename = inputFile.relativePath();\n    Command cl = createCommandLine(fs.baseDir(), filename);\n    SvnBlameConsumer consumer = new SvnBlameConsumer(filename);\n    StringStreamConsumer stderr = new StringStreamConsumer();\n    int exitCode;\n    try {\n      exitCode = execute(cl, consumer, stderr);\n    } catch (CommandException e) {\n      // Unwrap CommandException\n      throw e.getCause() instanceof RuntimeException ? (RuntimeException) e.getCause() : new IllegalStateException(e.getCause());\n    }\n    if (exitCode != 0) {\n      throw new IllegalStateException(\"The svn blame command [\" + cl.toString() + \"] failed: \" + stderr.getOutput());\n    }\n    List<BlameLine> lines = consumer.getLines();\n    if (lines.size() == inputFile.lines() - 1) {\n      // SONARPLUGINS-3097 SVN do not report blame on last empty line\n      lines.add(lines.get(lines.size() - 1));\n    }\n    output.blameResult(inputFile, lines);\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldFailIfFileContainsLocalModification() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameResult result = mock(BlameResult.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer outConsumer = (StreamConsumer) invocation.getArguments()[1];\n        List<String> lines = IOUtils.readLines(getClass().getResourceAsStream(\"/blame-with-uncomitted-changes.xml\"), \"UTF-8\");\n        for (String line : lines) {\n          outConsumer.consumeLine(line);\n        }\n        return 0;\n      }\n    });\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Unable to blame file src/foo.xoo. No blame info at line 2. Is file commited?\");\n\n    new SvnBlameCommand(commandExecutor, mock(SvnConfiguration.class)).blame(fs, Arrays.<InputFile>asList(inputFile), result);\n  }","id":1370,"modified_method":"@Test\n  public void shouldFailIfFileContainsLocalModification() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameOutput result = mock(BlameOutput.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer outConsumer = (StreamConsumer) invocation.getArguments()[1];\n        List<String> lines = IOUtils.readLines(getClass().getResourceAsStream(\"/blame-with-uncomitted-changes.xml\"), \"UTF-8\");\n        for (String line : lines) {\n          outConsumer.consumeLine(line);\n        }\n        return 0;\n      }\n    });\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"Unable to blame file src/foo.xoo. No blame info at line 2. Is file commited?\");\n\n    when(input.filesToBlame()).thenReturn(Arrays.<InputFile>asList(inputFile));\n    new SvnBlameCommand(commandExecutor, mock(SvnConfiguration.class)).blame(input, result);\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testParsingOfOutputWithAnonymousCommit() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameResult result = mock(BlameResult.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer outConsumer = (StreamConsumer) invocation.getArguments()[1];\n        List<String> lines = IOUtils.readLines(getClass().getResourceAsStream(\"/blame-with-anonymous-commit.xml\"), \"UTF-8\");\n        for (String line : lines) {\n          outConsumer.consumeLine(line);\n        }\n        return 0;\n      }\n    });\n\n    new SvnBlameCommand(commandExecutor, mock(SvnConfiguration.class)).blame(fs, Arrays.<InputFile>asList(inputFile), result);\n    verify(result).add(inputFile,\n      Arrays.asList(\n        new BlameLine(DateUtils.parseDateTime(\"2009-04-18T10:29:59+0000\"), \"9491\", \"simon.brandhof\"),\n        new BlameLine(DateUtils.parseDateTime(\"2009-04-01T10:29:59+0000\"), \"1\", null),\n        new BlameLine(DateUtils.parseDateTime(\"2009-08-31T22:32:17+0000\"), \"10558\", \"david\")));\n  }","id":1371,"modified_method":"@Test\n  public void testParsingOfOutputWithAnonymousCommit() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameOutput result = mock(BlameOutput.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer outConsumer = (StreamConsumer) invocation.getArguments()[1];\n        List<String> lines = IOUtils.readLines(getClass().getResourceAsStream(\"/blame-with-anonymous-commit.xml\"), \"UTF-8\");\n        for (String line : lines) {\n          outConsumer.consumeLine(line);\n        }\n        return 0;\n      }\n    });\n\n    when(input.filesToBlame()).thenReturn(Arrays.<InputFile>asList(inputFile));\n\n    new SvnBlameCommand(commandExecutor, mock(SvnConfiguration.class)).blame(input, result);\n    verify(result).blameResult(inputFile,\n      Arrays.asList(\n        new BlameLine().date(DateUtils.parseDateTime(\"2009-04-18T10:29:59+0000\")).revision(\"9491\").author(\"simon.brandhof\"),\n        new BlameLine().date(DateUtils.parseDateTime(\"2009-04-01T10:29:59+0000\")).revision(\"1\"),\n        new BlameLine().date(DateUtils.parseDateTime(\"2009-08-31T22:32:17+0000\")).revision(\"10558\").author(\"david\")));\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testParsingOfOutput() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameResult result = mock(BlameResult.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer outConsumer = (StreamConsumer) invocation.getArguments()[1];\n        List<String> lines = IOUtils.readLines(getClass().getResourceAsStream(\"/blame.xml\"), \"UTF-8\");\n        for (String line : lines) {\n          outConsumer.consumeLine(line);\n        }\n        return 0;\n      }\n    });\n\n    new SvnBlameCommand(commandExecutor, mock(SvnConfiguration.class)).blame(fs, Arrays.<InputFile>asList(inputFile), result);\n    verify(result).add(inputFile,\n      Arrays.asList(\n        new BlameLine(DateUtils.parseDateTime(\"2009-04-18T10:29:59+0000\"), \"9491\", \"simon.brandhof\"),\n        new BlameLine(DateUtils.parseDateTime(\"2009-04-18T10:29:59+0000\"), \"9491\", \"simon.brandhof\"),\n        new BlameLine(DateUtils.parseDateTime(\"2009-08-31T22:32:17+0000\"), \"10558\", \"david\")));\n  }","id":1372,"modified_method":"@Test\n  public void testParsingOfOutput() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameOutput result = mock(BlameOutput.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer outConsumer = (StreamConsumer) invocation.getArguments()[1];\n        List<String> lines = IOUtils.readLines(getClass().getResourceAsStream(\"/blame.xml\"), \"UTF-8\");\n        for (String line : lines) {\n          outConsumer.consumeLine(line);\n        }\n        return 0;\n      }\n    });\n\n    when(input.filesToBlame()).thenReturn(Arrays.<InputFile>asList(inputFile));\n\n    new SvnBlameCommand(commandExecutor, mock(SvnConfiguration.class)).blame(input, result);\n    verify(result).blameResult(inputFile,\n      Arrays.asList(\n        new BlameLine().date(DateUtils.parseDateTime(\"2009-04-18T10:29:59+0000\")).revision(\"9491\").author(\"simon.brandhof\"),\n        new BlameLine().date(DateUtils.parseDateTime(\"2009-04-18T10:29:59+0000\")).revision(\"9491\").author(\"simon.brandhof\"),\n        new BlameLine().date(DateUtils.parseDateTime(\"2009-08-31T22:32:17+0000\")).revision(\"10558\").author(\"david\")));\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void prepare() throws IOException {\n    baseDir = temp.newFolder();\n    fs = new DefaultFileSystem();\n    fs.setBaseDir(baseDir);\n  }","id":1373,"modified_method":"@Before\n  public void prepare() throws IOException {\n    baseDir = temp.newFolder();\n    fs = new DefaultFileSystem();\n    fs.setBaseDir(baseDir);\n    input = mock(BlameInput.class);\n    when(input.fileSystem()).thenReturn(fs);\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testExecutionError() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameResult result = mock(BlameResult.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer errConsumer = (StreamConsumer) invocation.getArguments()[2];\n        errConsumer.consumeLine(\"My error\");\n        return 1;\n      }\n    });\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"The svn blame command [svn blame --xml src/foo.xoo --non-interactive] failed: My error\");\n\n    new SvnBlameCommand(commandExecutor, mock(SvnConfiguration.class)).blame(fs, Arrays.<InputFile>asList(inputFile), result);\n  }","id":1374,"modified_method":"@Test\n  public void testExecutionError() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath());\n    fs.add(inputFile);\n\n    BlameOutput result = mock(BlameOutput.class);\n    CommandExecutor commandExecutor = mock(CommandExecutor.class);\n\n    when(commandExecutor.execute(any(Command.class), any(StreamConsumer.class), any(StreamConsumer.class), anyLong())).thenAnswer(new Answer<Integer>() {\n\n      @Override\n      public Integer answer(InvocationOnMock invocation) throws Throwable {\n        StreamConsumer errConsumer = (StreamConsumer) invocation.getArguments()[2];\n        errConsumer.consumeLine(\"My error\");\n        return 1;\n      }\n    });\n\n    thrown.expect(IllegalStateException.class);\n    thrown.expectMessage(\"The svn blame command [svn blame --xml src/foo.xoo --non-interactive] failed: My error\");\n\n    when(input.filesToBlame()).thenReturn(Arrays.<InputFile>asList(inputFile));\n    new SvnBlameCommand(commandExecutor, mock(SvnConfiguration.class)).blame(input, result);\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void consumeLine(String line) {\n    Matcher matcher;\n    if ((matcher = LINE_PATTERN.matcher(line)).find()) {\n      if (lineNumber != 0) {\n        throw new IllegalStateException(\"Unable to blame file \" + filename + \". No blame info at line \" + lineNumber + \". Is file commited?\");\n      }\n      String lineNumberStr = matcher.group(1);\n      lineNumber = Integer.parseInt(lineNumberStr);\n    } else if ((matcher = REVISION_PATTERN.matcher(line)).find()) {\n      revision = matcher.group(1);\n    } else if ((matcher = AUTHOR_PATTERN.matcher(line)).find()) {\n      author = matcher.group(1);\n    } else if ((matcher = DATE_PATTERN.matcher(line)).find()) {\n      String date = matcher.group(1);\n      String time = matcher.group(2);\n      Date dateTime = parseDateTime(date + \" \" + time);\n      lines.add(new BlameLine(dateTime, revision, author));\n      lineNumber = 0;\n      revision = null;\n      author = null;\n    }\n  }","id":1375,"modified_method":"@Override\n  public void consumeLine(String line) {\n    Matcher matcher;\n    if ((matcher = LINE_PATTERN.matcher(line)).find()) {\n      if (lineNumber != 0) {\n        throw new IllegalStateException(\"Unable to blame file \" + filename + \". No blame info at line \" + lineNumber + \". Is file commited?\");\n      }\n      String lineNumberStr = matcher.group(1);\n      lineNumber = Integer.parseInt(lineNumberStr);\n    } else if ((matcher = REVISION_PATTERN.matcher(line)).find()) {\n      revision = matcher.group(1);\n    } else if ((matcher = AUTHOR_PATTERN.matcher(line)).find()) {\n      author = matcher.group(1);\n    } else if ((matcher = DATE_PATTERN.matcher(line)).find()) {\n      String date = matcher.group(1);\n      String time = matcher.group(2);\n      Date dateTime = parseDateTime(date + \" \" + time);\n      lines.add(new BlameLine().revision(revision).author(author).date(dateTime));\n      lineNumber = 0;\n      revision = null;\n      author = null;\n    }\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@VisibleForTesting\n  protected void processFile(InputFile inputFile, BlameResult result) {\n    File ioFile = inputFile.file();\n    File scmDataFile = new java.io.File(ioFile.getParentFile(), ioFile.getName() + SCM_EXTENSION);\n    if (!scmDataFile.exists()) {\n      throw new IllegalStateException(\"Missing file \" + scmDataFile);\n    }\n\n    try {\n      List<String> lines = FileUtils.readLines(scmDataFile, Charsets.UTF_8.name());\n      List<BlameLine> blame = new ArrayList<BlameLine>(lines.size());\n      int lineNumber = 0;\n      for (String line : lines) {\n        lineNumber++;\n        if (StringUtils.isNotBlank(line)) {\n          // revision,author,dateTime\n          String[] fields = StringUtils.splitPreserveAllTokens(line, ',');\n          if (fields.length < 3) {\n            throw new IllegalStateException(\"Not enough fields on line \" + lineNumber);\n          }\n          String revision = StringUtils.trimToNull(fields[0]);\n          String author = StringUtils.trimToNull(fields[1]);\n          String dateStr = StringUtils.trimToNull(fields[2]);\n          // Will throw an exception, when date is not in format \"yyyy-MM-dd\"\n          Date date = dateStr != null ? DateUtils.parseDate(dateStr) : null;\n          blame.add(new BlameLine(date, revision, author));\n        }\n      }\n      result.add(inputFile, blame);\n    } catch (IOException e) {\n      throw new IllegalStateException(e);\n    }\n  }","id":1376,"modified_method":"@VisibleForTesting\n  protected void processFile(InputFile inputFile, BlameOutput result) {\n    File ioFile = inputFile.file();\n    File scmDataFile = new java.io.File(ioFile.getParentFile(), ioFile.getName() + SCM_EXTENSION);\n    if (!scmDataFile.exists()) {\n      return;\n    }\n\n    try {\n      List<String> lines = FileUtils.readLines(scmDataFile, Charsets.UTF_8.name());\n      List<BlameLine> blame = new ArrayList<BlameLine>(lines.size());\n      int lineNumber = 0;\n      for (String line : lines) {\n        lineNumber++;\n        if (StringUtils.isNotBlank(line)) {\n          // revision,author,dateTime\n          String[] fields = StringUtils.splitPreserveAllTokens(line, ',');\n          if (fields.length < 3) {\n            throw new IllegalStateException(\"Not enough fields on line \" + lineNumber);\n          }\n          String revision = StringUtils.trimToNull(fields[0]);\n          String author = StringUtils.trimToNull(fields[1]);\n          BlameLine blameLine = new BlameLine().revision(revision).author(author);\n          String dateStr = StringUtils.trimToNull(fields[2]);\n          // Will throw an exception, when date is not in format \"yyyy-MM-dd\"\n          if (dateStr != null) {\n            blameLine.date(DateUtils.parseDate(dateStr));\n          }\n          blame.add(blameLine);\n        }\n      }\n      result.blameResult(inputFile, blame);\n    } catch (IOException e) {\n      throw new IllegalStateException(e);\n    }\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void prepare() throws IOException {\n    baseDir = temp.newFolder();\n    fs = new DefaultFileSystem();\n  }","id":1377,"modified_method":"@Before\n  public void prepare() throws IOException {\n    baseDir = temp.newFolder();\n    fs = new DefaultFileSystem();\n    input = mock(BlameInput.class);\n    when(input.fileSystem()).thenReturn(fs);\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testBlame() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    File scm = new File(baseDir, \"src/foo.xoo.scm\");\n    FileUtils.write(scm, \"123,julien,2014-12-12\\n234,julien,2014-12-24\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath()).setLanguage(Xoo.KEY);\n    fs.add(inputFile);\n\n    BlameResult result = mock(BlameResult.class);\n    new XooBlameCommand().blame(fs, Arrays.<InputFile>asList(inputFile), result);\n    verify(result).add(inputFile, Arrays.asList(new BlameLine(DateUtils.parseDate(\"2014-12-12\"), \"123\", \"julien\"),\n      new BlameLine(DateUtils.parseDate(\"2014-12-24\"), \"234\", \"julien\")));\n  }","id":1378,"modified_method":"@Test\n  public void testBlame() throws IOException {\n    File source = new File(baseDir, \"src/foo.xoo\");\n    FileUtils.write(source, \"sample content\");\n    File scm = new File(baseDir, \"src/foo.xoo.scm\");\n    FileUtils.write(scm, \"123,julien,2014-12-12\\n234,julien,2014-12-24\");\n    DefaultInputFile inputFile = new DefaultInputFile(\"foo\", \"src/foo.xoo\").setAbsolutePath(new File(baseDir, \"src/foo.xoo\").getAbsolutePath()).setLanguage(Xoo.KEY);\n    fs.add(inputFile);\n\n    BlameOutput result = mock(BlameOutput.class);\n    when(input.filesToBlame()).thenReturn(Arrays.<InputFile>asList(inputFile));\n    new XooBlameCommand().blame(input, result);\n    verify(result).blameResult(inputFile, Arrays.asList(\n      new BlameLine().revision(\"123\").author(\"julien\").date(DateUtils.parseDate(\"2014-12-12\")),\n      new BlameLine().revision(\"234\").author(\"julien\").date(DateUtils.parseDate(\"2014-12-24\"))));\n  }","commit_id":"229555a2030f9ea672654adf5087611ff2e60654","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n     * Gets the service giving access to all application resources.\n     * \n     * @return the service giving access to all application resources.\n     */\n    static ResourceManagementService getResources()\n    {\n        if (resourceService == null)\n        {\n            // retrieve a reference to the resource access service.\n            ServiceReference resourceServiceRefs = bundleContext\n                .getServiceReference(ResourceManagementService.class.getName());\n\n            resourceService = (ResourceManagementService) bundleContext\n                .getService(resourceServiceRefs);\n        }\n\n        return resourceService;\n    }","id":1379,"modified_method":"/**\n     * Gets the service giving access to all application resources.\n     * \n     * @return the service giving access to all application resources.\n     */\n    static ResourceManagementService getResources()\n    {\n        if (resourceService == null)\n            resourceService\n                = ResourceManagementServiceUtils.getService(bundleContext);\n        return resourceService;\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"static void stopThread()\n    {\n        if (runner != null)\n        {\n            runner.stop();\n            runner = null;\n        }\n        if (thread != null)\n        {\n            thread.interrupt();\n            thread = null;\n        }\n    }","id":1380,"modified_method":"private static void stopThread()\n    {\n        if (runner != null)\n        {\n            runner.stop();\n            runner = null;\n        }\n        if (thread != null)\n        {\n            thread.interrupt();\n            thread = null;\n        }\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"static void startThread()\n    {\n        ConfigurationService configService = getConfigService();\n        String e = (String) configService.getProperty(Preferences.ENABLE);\n        if (e == null)\n        {\n            return;\n        }\n        try\n        {\n            boolean enabled = Boolean.parseBoolean(e);\n            if (!enabled)\n            {\n                return;\n            }\n        } catch (NumberFormatException ex)\n        {\n            return;\n        }\n\n        if (runner == null)\n        {\n            runner = new StatusUpdateThread();\n        }\n        if (thread == null || !runner.isRunning())\n        {\n            thread = new Thread(runner);\n            thread.setName(AutoAwayActivator.class.getName());\n            thread.setPriority(Thread.MIN_PRIORITY);\n            thread.setDaemon(true);\n            thread.start();\n        } else\n        {\n            thread.interrupt();\n        }\n    }","id":1381,"modified_method":"private static void startThread()\n    {\n\n        /*\n         * FIXME Even if auto away is disabled at this point, it doesn't mean\n         * that it will not get enabled later on so this method likely has to\n         * also be called when the configuration property gets changed.\n         */\n        if (!getConfigService().getBoolean(Preferences.ENABLE, false))\n            return;\n\n        if (runner == null)\n            runner = new StatusUpdateThread();\n        if ((thread == null) || !runner.isRunning())\n        {\n            thread = new Thread(runner);\n            thread.setName(AutoAwayActivator.class.getName());\n            thread.setPriority(Thread.MIN_PRIORITY);\n            thread.setDaemon(true);\n            thread.start();\n        } else\n        {\n            thread.interrupt();\n        }\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Starts this bundle\n     * \n     * @param bc BundleContext\n     * @throws Exception\n     */\n    public void start(BundleContext bc) throws Exception\n    {\n        bundleContext = bc;\n\n        // Set config form\n        bundleContext\n            .registerService(\n                ConfigurationForm.class.getName(),\n                new LazyConfigurationForm(\n                    \"net.java.sip.communicator.plugin.autoaway.AutoAwayConfigurationPanel\",\n                    getClass().getClassLoader(),\n                    \"plugin.autoaway.PLUGIN_ICON\",\n                    \"plugin.autoaway.AUTO_STATUS\",\n                    20),\n                null);\n\n        new Thread(new Runnable()\n        {\n\n            public void run()\n            {\n                try\n                {\n                    Thread.sleep(5000);\n                } catch (InterruptedException e)\n                {\n                }\n                // wait a few seconds\n                startThread();\n            }\n        }).start();\n    }","id":1382,"modified_method":"/**\n     * Starts this bundle\n     * \n     * @param bc BundleContext\n     * @throws Exception\n     */\n    public void start(BundleContext bc) throws Exception\n    {\n        bundleContext = bc;\n\n        // Set config form\n        bundleContext\n            .registerService(\n                ConfigurationForm.class.getName(),\n                new LazyConfigurationForm(\n                    \"net.java.sip.communicator.plugin.autoaway.AutoAwayConfigurationPanel\",\n                    getClass().getClassLoader(),\n                    \"plugin.autoaway.PLUGIN_ICON\",\n                    \"plugin.autoaway.AUTO_STATUS\",\n                    20),\n                null);\n\n        /*\n         * Wait for the first ProtocolProviderService to register in order to\n         * start the auto-away functionality i.e. to call #startThread().\n         */\n        bundleContext.addServiceListener(this);\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Save data in the configuration file\n     */\n    private void saveData()\n    {\n        ConfigurationService configService \n            = AutoAwayActivator.getConfigService();\n\n        configService.setProperty(Preferences.ENABLE, \n                                  Boolean.toString(enable.isSelected()));\n        Integer interval = (Integer) timer.getValue();\n        configService.setProperty(Preferences.TIMER, interval);\n    }","id":1383,"modified_method":"/**\n     * Save data in the configuration file\n     */\n    private void saveData()\n    {\n        ConfigurationService configService \n            = AutoAwayActivator.getConfigService();\n\n        configService.setProperty(Preferences.ENABLE, \n                                  Boolean.toString(enable.isSelected()));\n        configService.setProperty(Preferences.TIMER,\n                                  timer.getValue().toString());\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Init the widgets\n     */\n    private Component init()\n    {\n        JPanel fieldsPanel = new TransparentPanel(new BorderLayout(5, 5));\n        fieldsPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));\n\n        enable = new SIPCommCheckBox(AutoAwayActivator.getResources()\n                .getI18NString(\"plugin.autoaway.ENABLE_CHANGE_STATUS\"));\n\n        fieldsPanel.add(enable, BorderLayout.NORTH);\n        enable.addActionListener(new ActionListener()\n        {\n\n            public void actionPerformed(ActionEvent e)\n            {\n                timer.setEnabled(enable.isSelected());\n                saveData();\n            }\n        });\n\n        JPanel timerPanel =\n            new TransparentPanel(new FlowLayout(FlowLayout.LEFT));\n        // Text\n        timerPanel.add(new JLabel(\n                AutoAwayActivator.getResources()\n                    .getI18NString(\"plugin.autoaway.AWAY_MINUTES\")));\n        // Spinner\n        timer = new JSpinner(new SpinnerNumberModel(15, 1, 180, 1));\n        timerPanel.add(timer);\n        timer.addChangeListener(new ChangeListener()\n        {\n\n            public void stateChanged(ChangeEvent e)\n            {\n                saveData();\n            }\n        });\n\n        fieldsPanel.add(timerPanel, BorderLayout.WEST);\n\n        Container mainPanel = new TransparentPanel(new BorderLayout());\n        mainPanel.add(fieldsPanel, BorderLayout.NORTH);\n        return mainPanel;\n    }","id":1384,"modified_method":"/**\n     * Init the widgets\n     */\n    private Component init()\n    {\n        JPanel fieldsPanel = new TransparentPanel(new BorderLayout(5, 5));\n        fieldsPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));\n\n        enable = new SIPCommCheckBox(AutoAwayActivator.getResources()\n                .getI18NString(\"plugin.autoaway.ENABLE_CHANGE_STATUS\"));\n\n        fieldsPanel.add(enable, BorderLayout.NORTH);\n        enable.addActionListener(new ActionListener()\n        {\n\n            public void actionPerformed(ActionEvent e)\n            {\n                timer.setEnabled(enable.isSelected());\n                saveData();\n            }\n        });\n\n        JPanel timerPanel =\n            new TransparentPanel(new FlowLayout(FlowLayout.LEFT));\n        // Text\n        timerPanel.add(new JLabel(\n                AutoAwayActivator.getResources()\n                    .getI18NString(\"plugin.autoaway.AWAY_MINUTES\")));\n        // Spinner\n        timer = new JSpinner(new SpinnerNumberModel(DEFAULT_TIMER, 1, 180, 1));\n        timerPanel.add(timer);\n        timer.addChangeListener(new ChangeListener()\n        {\n\n            public void stateChanged(ChangeEvent e)\n            {\n                saveData();\n            }\n        });\n\n        fieldsPanel.add(timerPanel, BorderLayout.WEST);\n\n        Container mainPanel = new TransparentPanel(new BorderLayout());\n        mainPanel.add(fieldsPanel, BorderLayout.NORTH);\n        return mainPanel;\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Init the values of the widgets\n     */\n    private void initValues()\n    {\n        ConfigurationService configService \n            = AutoAwayActivator.getConfigService();\n\n        String e = (String) configService.getProperty(Preferences.ENABLE);\n        if (e != null)\n        {\n            try\n            {\n                this.enable.setSelected(Boolean.parseBoolean(e));\n                this.timer.setEnabled(Boolean.parseBoolean(e));\n            } catch (NumberFormatException ex)\n            {\n                this.enable.setSelected(false);\n                this.timer.setEnabled(false);\n            }\n        } else\n        {\n            this.enable.setSelected(false);\n            this.timer.setEnabled(false);\n        }\n\n        String t = configService.getString(Preferences.TIMER);\n        if (t != null)\n        {\n            try\n            {\n                this.timer.setValue(Integer.parseInt(t));\n            } catch (NumberFormatException ex)\n            {\n            }\n        }\n    }","id":1385,"modified_method":"/**\n     * Init the values of the widgets\n     */\n    private void initValues()\n    {\n        ConfigurationService configService \n            = AutoAwayActivator.getConfigService();\n\n        boolean e = configService.getBoolean(Preferences.ENABLE, false);\n        this.enable.setSelected(e);\n        this.timer.setEnabled(e);\n\n        int t = configService.getInt(Preferences.TIMER, DEFAULT_TIMER);\n        this.timer.setValue(t);\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"protected ProtocolProviderService createService(String userID,\n        AccountID accountID)\n    {\n        ProtocolProviderServiceRssImpl service =\n            new ProtocolProviderServiceRssImpl();\n\n        service.initialize(userID, accountID);\n        return service;\n    }","id":1386,"modified_method":"protected ProtocolProviderService createService(String userID,\n        AccountID accountID)\n    {\n        synchronized (ProtocolProviderFactoryRssImpl.class)\n        {\n            if (!customSSLTrustManagerIsInstalled)\n            {\n                System.setProperty(\n                    \"http.agent\",\n                    System.getProperty(\"sip-communicator.application.name\")\n                        + \"/\"\n                        + System.getProperty(\"sip-communicator.version\"));\n                logger\n                    .debug(\n                        \"User-Agent set to \"\n                            + System.getProperty(\"http.agent\"));\n\n                try\n                {\n                    installCustomSSLTrustManager();\n                    customSSLTrustManagerIsInstalled = true;\n                }\n                catch (java.security.GeneralSecurityException gsex)\n                {\n                    logger.error(gsex);\n                }\n            }\n        }\n\n        ProtocolProviderServiceRssImpl service =\n            new ProtocolProviderServiceRssImpl();\n\n        service.initialize(userID, accountID);\n        return service;\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>ResourceManagementService<\/tt>.\n     * @return the <tt>ResourceManagementService<\/tt>.\n     */\n    public static ResourceManagementService getResources()\n    {\n        if (resourcesService == null)\n        {\n            ServiceReference serviceReference = bundleContext\n                .getServiceReference(ResourceManagementService.class.getName());\n\n            if(serviceReference == null)\n                return null;\n\n            resourcesService = (ResourceManagementService) bundleContext\n                .getService(serviceReference);\n        }\n\n        return resourcesService;\n    }","id":1387,"modified_method":"/**\n     * Returns the <tt>ResourceManagementService<\/tt>.\n     * @return the <tt>ResourceManagementService<\/tt>.\n     */\n    public static ResourceManagementService getResources()\n    {\n        if (resourcesService == null)\n            resourcesService\n                = ResourceManagementServiceUtils.getService(bundleContext);\n        return resourcesService;\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Called when this bundle is started. In here we'll export the\n     * rss ProtocolProviderFactory implementation so that it could be\n     * possible to register accounts with it in SIP Communicator.\n     *\n     * @param context The execution context of the bundle being started.\n     * @throws Exception If this method throws an exception, this bundle is\n     *   marked as stopped and the Framework will remove this bundle's\n     *   listeners, unregister all services registered by this bundle, and\n     *   release all services used by this bundle.\n     */\n    public void start(BundleContext context)\n        throws Exception\n    {\n        this.bundleContext = context;\n\n        Hashtable<String, String> hashtable = new Hashtable<String, String>();\n        hashtable.put(ProtocolProviderFactory.PROTOCOL, \"RSS\");\n\n        rssProviderFactory = new ProtocolProviderFactoryRssImpl();\n\n        //reg the rss provider factory.\n        rssPpFactoryServReg =  context.registerService(\n                    ProtocolProviderFactory.class.getName(),\n                    rssProviderFactory,\n                    hashtable);\n\n        logger.info(\"RSS protocol implementation [STARTED].\");\n\n        System.setProperty(\n            \"http.agent\",\n            System.getProperty(\"sip-communicator.application.name\")\n            + \"/\"\n            + System.getProperty(\"sip-communicator.version\"));\n        logger.debug(\"User-Agent set to \" + System.getProperty(\"http.agent\"));\n\n        installCustomSSLTrustManager();\n\n        uriHandler = new UriHandlerRssImpl();\n        bundleContext.addServiceListener(uriHandler);\n        uriHandler.registerHandlerService();\n    }","id":1388,"modified_method":"/**\n     * Called when this bundle is started. In here we'll export the\n     * rss ProtocolProviderFactory implementation so that it could be\n     * possible to register accounts with it in SIP Communicator.\n     *\n     * @param context The execution context of the bundle being started.\n     * @throws Exception If this method throws an exception, this bundle is\n     *   marked as stopped and the Framework will remove this bundle's\n     *   listeners, unregister all services registered by this bundle, and\n     *   release all services used by this bundle.\n     */\n    public void start(BundleContext context)\n        throws Exception\n    {\n        RssActivator.bundleContext = context;\n\n        Hashtable<String, String> hashtable = new Hashtable<String, String>();\n        hashtable.put(ProtocolProviderFactory.PROTOCOL, \"RSS\");\n\n        rssProviderFactory = new ProtocolProviderFactoryRssImpl();\n\n        //reg the rss provider factory.\n        rssPpFactoryServReg =  context.registerService(\n                    ProtocolProviderFactory.class.getName(),\n                    rssProviderFactory,\n                    hashtable);\n\n        logger.info(\"RSS protocol implementation [STARTED].\");\n\n        uriHandler = new UriHandlerRssImpl();\n        bundleContext.addServiceListener(uriHandler);\n        uriHandler.registerHandlerService();\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Called when this bundle is stopped so the Framework can perform the\n     * bundle-specific activities necessary to stop the bundle.\n     *\n     * @param context The execution context of the bundle being stopped.\n     * @throws Exception If this method throws an exception, the bundle is\n     *   still marked as stopped, and the Framework will remove the bundle's\n     *   listeners, unregister all services registered by the bundle, and\n     *   release all services used by the bundle.\n     */\n    public void stop(BundleContext context)\n        throws Exception\n    {\n        this.rssProviderFactory.stop();\n        rssPpFactoryServReg.unregister();\n\n        context.removeServiceListener(uriHandler);\n\n        logger.info(\"RSS protocol implementation [STOPPED].\");\n    }","id":1389,"modified_method":"/**\n     * Called when this bundle is stopped so the Framework can perform the\n     * bundle-specific activities necessary to stop the bundle.\n     *\n     * @param context The execution context of the bundle being stopped.\n     * @throws Exception If this method throws an exception, the bundle is\n     *   still marked as stopped, and the Framework will remove the bundle's\n     *   listeners, unregister all services registered by the bundle, and\n     *   release all services used by the bundle.\n     */\n    public void stop(BundleContext context)\n        throws Exception\n    {\n        RssActivator.rssProviderFactory.stop();\n        rssPpFactoryServReg.unregister();\n\n        context.removeServiceListener(uriHandler);\n\n        logger.info(\"RSS protocol implementation [STOPPED].\");\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns a reference to the <tt>UIService<\/tt> instance that is currently\n     * in use.\n     * @return a reference to the currently valid <tt>UIService<\/tt>.\n     */\n    public static UIService getUIService()\n    {\n        if (uiService == null)\n        {\n            ServiceReference serviceReference = bundleContext\n                .getServiceReference(UIService.class.getName());\n\n            if(serviceReference == null)\n                return null;\n\n            uiService = (UIService) bundleContext\n                .getService(serviceReference);\n        }\n\n        return uiService;\n    }","id":1390,"modified_method":"/**\n     * Returns a reference to the <tt>UIService<\/tt> instance that is currently\n     * in use.\n     * @return a reference to the currently valid <tt>UIService<\/tt>.\n     */\n    public static UIService getUIService()\n    {\n        if (uiService == null)\n        {\n            ServiceReference serviceReference\n                = bundleContext.getServiceReference(UIService.class.getName());\n\n            if (serviceReference != null)\n                uiService\n                    = (UIService) bundleContext.getService(serviceReference);\n        }\n        return uiService;\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"private int getTimer()\r\n    {\r\n        ConfigurationService configService = AutoAwayActivator\r\n                .getConfigService();\r\n\r\n        String e = (String) configService.getProperty(Preferences.ENABLE);\r\n        if (e == null)\r\n        {\r\n            return 0;\r\n        }\r\n        try\r\n        {\r\n            boolean enabled = Boolean.parseBoolean(e);\r\n            if (!enabled)\r\n            {\r\n                return 0;\r\n            }\r\n        } catch (NumberFormatException ex)\r\n        {\r\n            return 0;\r\n        }\r\n\r\n        String t = configService.getString(Preferences.TIMER);\r\n        int timer = 0;\r\n        try\r\n        {\r\n            timer = Integer.parseInt(t);\r\n        } catch (NumberFormatException ex)\r\n        {\r\n            return 0;\r\n        }\r\n        return timer;\r\n    }","id":1391,"modified_method":"private int getTimer()\r\n    {\r\n        ConfigurationService configService\r\n            = AutoAwayActivator.getConfigService();\r\n\r\n        return\r\n            configService.getBoolean(Preferences.ENABLE, false)\r\n                ? configService.getInt(Preferences.TIMER, 0)\r\n                : 0;\r\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Finds the Away-Status of the protocols\r\n     * \r\n     * @param presence\r\n     * @return\r\n     */\r\n    private PresenceStatus findAwayStatus(OperationSetPresence presence)\r\n    {\r\n        Iterator<PresenceStatus> statusSet = presence.getSupportedStatusSet();\r\n\r\n        PresenceStatus status = null;\r\n\r\n        while (statusSet.hasNext())\r\n        {\r\n            PresenceStatus possibleState = statusSet.next();\r\n\r\n            if (possibleState.getStatus() < PresenceStatus.AVAILABLE_THRESHOLD\r\n                    && possibleState.getStatus() >= PresenceStatus.ONLINE_THRESHOLD)\r\n            {\r\n                if (status == null\r\n                        || (Math.abs(possibleState.getStatus()\r\n                                - AWAY_DEFAULT_STATUS) < Math.abs(status\r\n                                .getStatus()\r\n                                - AWAY_DEFAULT_STATUS)))\r\n                {\r\n                    status = possibleState;\r\n                }\r\n            }\r\n        }\r\n        return status;\r\n    }","id":1392,"modified_method":"/**\r\n     * Finds the Away-Status of the protocols\r\n     * \r\n     * @param presence\r\n     * @return\r\n     */\r\n    private PresenceStatus findAwayStatus(OperationSetPresence presence)\r\n    {\r\n        Iterator<PresenceStatus> statusSet = presence.getSupportedStatusSet();\r\n        PresenceStatus status = null;\r\n\r\n        while (statusSet.hasNext())\r\n        {\r\n            PresenceStatus possibleState = statusSet.next();\r\n            int possibleStatus = possibleState.getStatus();\r\n\r\n            if ((possibleStatus < PresenceStatus.AVAILABLE_THRESHOLD)\r\n                    && (possibleStatus >= PresenceStatus.ONLINE_THRESHOLD))\r\n            {\r\n                if (status == null\r\n                        || (Math.abs(possibleStatus - AWAY_DEFAULT_STATUS)\r\n                                < Math.abs(\r\n                                        status.getStatus()\r\n                                            - AWAY_DEFAULT_STATUS)))\r\n                {\r\n                    status = possibleState;\r\n                }\r\n            }\r\n        }\r\n        return status;\r\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void run()\r\n    {\r\n        run = true;\r\n        int timer = 0;\r\n        do\r\n        {\r\n            try\r\n            {\r\n                if (MouseInfo.getPointerInfo() != null)\r\n                {\r\n                    PointerInfo info = MouseInfo.getPointerInfo();\r\n                    Point currentPosition = null;\r\n\r\n                    if (info != null)\r\n                    {\r\n                        currentPosition = info.getLocation();\r\n                    } else\r\n                    {\r\n                        // mouse cannot be determined\r\n                        currentPosition = new Point(0, 0);\r\n                    }\r\n                    if (!isNear(lastPosition, currentPosition))\r\n                    {\r\n                        // position has changed\r\n                        // check, if a minor state has been automatically set\r\n                        // and\r\n                        // reset this state to the former state.\r\n                        ProtocolProviderService[] pps = AutoAwayActivator\r\n                                .getProtocolProviders();\r\n\r\n                        for (ProtocolProviderService protocolProviderService : pps)\r\n                        {\r\n                            if (lastStates.get(protocolProviderService) != null)\r\n                            {\r\n                                PresenceStatus lastState = lastStates\r\n                                        .get(protocolProviderService);\r\n                                OperationSetPresence presence = (OperationSetPresence) protocolProviderService\r\n                                        .getOperationSet(OperationSetPresence.class);\r\n                                try\r\n                                {\r\n                                    presence.publishPresenceStatus(lastState,\r\n                                            \"\");\r\n                                } catch (IllegalArgumentException e)\r\n                                {\r\n                                } catch (IllegalStateException e)\r\n                                {\r\n                                } catch (OperationFailedException e)\r\n                                {\r\n                                }\r\n                                lastStates.remove(protocolProviderService);\r\n                            }\r\n                        }\r\n                        timer = getTimer() * 1000 * 60;\r\n                    } else\r\n                    {\r\n                        // position has not changed!\r\n                        // get all protocols and set them to away\r\n\r\n                        ProtocolProviderService[] pps = AutoAwayActivator\r\n                                .getProtocolProviders();\r\n\r\n                        for (ProtocolProviderService protocolProviderService : pps)\r\n                        {\r\n                            OperationSetPresence presence = (OperationSetPresence) protocolProviderService\r\n                                    .getOperationSet(OperationSetPresence.class);\r\n\r\n                            PresenceStatus status = presence\r\n                                    .getPresenceStatus();\r\n\r\n                            if (status.getStatus() < PresenceStatus.AVAILABLE_THRESHOLD)\r\n                            {\r\n                                // already (manually) set to away or lower\r\n                                continue;\r\n                            }\r\n\r\n                            lastStates.put(protocolProviderService, presence\r\n                                    .getPresenceStatus());\r\n\r\n                            PresenceStatus newStatus = findAwayStatus(presence);\r\n\r\n                            try\r\n                            {\r\n                                if (newStatus != null)\r\n                                {\r\n                                    presence.publishPresenceStatus(newStatus,\r\n                                            newStatus.getStatusName());\r\n                                }\r\n                            } catch (IllegalArgumentException e)\r\n                            {\r\n                            } catch (IllegalStateException e)\r\n                            {\r\n                            } catch (OperationFailedException e)\r\n                            {\r\n                            }\r\n                        }\r\n\r\n                        timer = IDLE_TIMER;\r\n                    }\r\n                    lastPosition = currentPosition;\r\n                }\r\n                Thread.sleep(timer);\r\n            } catch (InterruptedException e)\r\n            {\r\n            }\r\n        } while (run && timer > 0);\r\n    }","id":1393,"modified_method":"public void run()\r\n    {\r\n        run = true;\r\n        int timer = 0;\r\n        do\r\n        {\r\n            try\r\n            {\r\n                if (MouseInfo.getPointerInfo() != null)\r\n                {\r\n                    PointerInfo info = MouseInfo.getPointerInfo();\r\n                    Point currentPosition\r\n                        = (info != null) ? info.getLocation() : new Point(0, 0);\r\n\r\n                    if (!isNear(lastPosition, currentPosition))\r\n                    {\r\n                        // position has changed\r\n                        // check, if a minor state has been automatically set\r\n                        // and\r\n                        // reset this state to the former state.\r\n                        for (ProtocolProviderService protocolProviderService\r\n                                : AutoAwayActivator.getProtocolProviders())\r\n                        {\r\n                            if (lastStates.get(protocolProviderService) != null)\r\n                            {\r\n                                PresenceStatus lastState\r\n                                    = lastStates.get(protocolProviderService);\r\n                                OperationSetPresence presence\r\n                                    = (OperationSetPresence)\r\n                                        protocolProviderService\r\n                                            .getOperationSet(\r\n                                                OperationSetPresence.class);\r\n                                try\r\n                                {\r\n                                    presence\r\n                                        .publishPresenceStatus(lastState, \"\");\r\n                                } catch (IllegalArgumentException e)\r\n                                {\r\n                                } catch (IllegalStateException e)\r\n                                {\r\n                                } catch (OperationFailedException e)\r\n                                {\r\n                                }\r\n                                lastStates.remove(protocolProviderService);\r\n                            }\r\n                        }\r\n                        timer = getTimer() * 1000 * 60;\r\n                    } else\r\n                    {\r\n                        // position has not changed!\r\n                        // get all protocols and set them to away\r\n                        for (ProtocolProviderService protocolProviderService\r\n                                : AutoAwayActivator.getProtocolProviders())\r\n                        {\r\n                            OperationSetPresence presence\r\n                                = (OperationSetPresence)\r\n                                    protocolProviderService\r\n                                        .getOperationSet(\r\n                                            OperationSetPresence.class);\r\n\r\n                            PresenceStatus status = presence\r\n                                    .getPresenceStatus();\r\n\r\n                            if (status.getStatus()\r\n                                    < PresenceStatus.AVAILABLE_THRESHOLD)\r\n                            {\r\n                                // already (manually) set to away or lower\r\n                                continue;\r\n                            }\r\n\r\n                            lastStates.put(protocolProviderService, status);\r\n\r\n                            PresenceStatus newStatus = findAwayStatus(presence);\r\n\r\n                            try\r\n                            {\r\n                                if (newStatus != null)\r\n                                    presence\r\n                                        .publishPresenceStatus(\r\n                                            newStatus,\r\n                                            newStatus.getStatusName());\r\n                            } catch (IllegalArgumentException e)\r\n                            {\r\n                            } catch (IllegalStateException e)\r\n                            {\r\n                            } catch (OperationFailedException e)\r\n                            {\r\n                            }\r\n                        }\r\n\r\n                        timer = IDLE_TIMER;\r\n                    }\r\n                    lastPosition = currentPosition;\r\n                }\r\n                Thread.sleep(timer);\r\n            } catch (InterruptedException e)\r\n            {\r\n            }\r\n        } while (run && timer > 0);\r\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"private boolean isNear(Point p1, Point p2)\r\n    {\r\n        if (p1 == null)\r\n        {\r\n            return false;\r\n        }\r\n        if (p2 == null)\r\n        {\r\n            return false;\r\n        }\r\n        if (Math.abs(p1.x - p2.x) > 10)\r\n        {\r\n            return false;\r\n        }\r\n        if (Math.abs(p1.y - p2.y) > 10)\r\n        {\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }","id":1394,"modified_method":"private boolean isNear(Point p1, Point p2)\r\n    {\r\n        return\r\n            (p1 != null)\r\n                && (p2 != null)\r\n                && (Math.abs(p1.x - p2.x) <= 10)\r\n                && (Math.abs(p1.y - p2.y) <= 10);\r\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * The point of implementing a service listener here is so that we would\n     * only register our own uri handling service and thus only handle URIs\n     * while the factory is available as an OSGi service. We remove ourselves\n     * when our factory unregisters its service reference.\n     *\n     * @param event the OSGi <tt>ServiceEvent<\/tt>\n     */\n    public void serviceChanged(ServiceEvent event)\n    {\n        Object sourceService = RssActivator.bundleContext\n            .getService(event.getServiceReference());\n\n        //ignore anything but our protocol factory.\n        if( ! (sourceService instanceof ProtocolProviderFactoryRssImpl)\n            || (sourceService != protoFactory))\n        {\n            return;\n        }\n\n        if(event.getType() == ServiceEvent.REGISTERED)\n        {\n            //our factory has just been registered as a service ...\n            registerHandlerService();\n        }\n        else if(event.getType() == ServiceEvent.UNREGISTERING)\n        {\n            //our factory just died - seppuku.\n            unregisterHandlerService();\n        }\n        else if(event.getType() == ServiceEvent.MODIFIED)\n        {\n            //we don't care.\n        }\n    }","id":1395,"modified_method":"/**\n     * The point of implementing a service listener here is so that we would\n     * only register our own uri handling service and thus only handle URIs\n     * while the factory is available as an OSGi service. We remove ourselves\n     * when our factory unregisters its service reference.\n     *\n     * @param event the OSGi <tt>ServiceEvent<\/tt>\n     */\n    public void serviceChanged(ServiceEvent event)\n    {\n        Object sourceService\n            = RssActivator\n                .bundleContext.getService(event.getServiceReference());\n\n        //ignore anything but our protocol factory.\n        if (!(sourceService instanceof ProtocolProviderFactoryRssImpl))\n            return;\n\n        switch (event.getType())\n        {\n        case ServiceEvent.REGISTERED:\n            //our factory has just been registered as a service ...\n            registerHandlerService();\n            break;\n\n        case ServiceEvent.UNREGISTERING:\n            //our factory just died - seppuku.\n            unregisterHandlerService();\n            break;\n\n        case ServiceEvent.MODIFIED:\n        default:\n            //we don't care.\n            break;\n        }\n    }","commit_id":"5dec195848b0caca6422b50ac850673ef492483e","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void putResult(\n\t\tboolean entityCacheEnabled, Class<?> classObj,\n\t\tSerializable primaryKeyObj, Object result) {\n\n\t\tif (!PropsValues.VALUE_OBJECT_ENTITY_CACHE_ENABLED ||\n\t\t\t!entityCacheEnabled || !CacheRegistry.isActive() ||\n\t\t\t(result == null)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tString localCacheKey = _encodeLocalCacheKey(classObj, primaryKeyObj);\n\n\t\tresult = _objectToResult(result);\n\n\t\tlocalCache.put(localCacheKey, result);\n\n\t\tPortalCache portalCache = _getPortalCache(classObj.getName());\n\n\t\tString cacheKey = _encodeCacheKey(primaryKeyObj);\n\n\t\t_multiVMPool.put(portalCache, cacheKey, result);\n\t}","id":1396,"modified_method":"public void putResult(\n\t\tboolean entityCacheEnabled, Class<?> classObj,\n\t\tSerializable primaryKeyObj, Object result) {\n\n\t\tif (!PropsValues.VALUE_OBJECT_ENTITY_CACHE_ENABLED ||\n\t\t\t!entityCacheEnabled || !CacheRegistry.isActive() ||\n\t\t\t(result == null)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tresult = _objectToResult(result);\n\n\t\tif (_localCacheEnabled) {\n\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\tString localCacheKey = _encodeLocalCacheKey(\n\t\t\t\tclassObj, primaryKeyObj);\n\n\t\t\tlocalCache.put(localCacheKey, result);\n\t\t}\n\n\t\tPortalCache portalCache = _getPortalCache(classObj.getName());\n\n\t\tString cacheKey = _encodeCacheKey(primaryKeyObj);\n\n\t\t_multiVMPool.put(portalCache, cacheKey, result);\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void clearCache() {\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tlocalCache.clear();\n\n\t\tPortalCache[] portalCaches = _portalCaches.values().toArray(\n\t\t\tnew PortalCache[_portalCaches.size()]);\n\n\t\tfor (PortalCache portalCache : portalCaches) {\n\t\t\tportalCache.removeAll();\n\t\t}\n\t}","id":1397,"modified_method":"public void clearCache() {\n\t\tclearLocalCache();\n\n\t\tPortalCache[] portalCaches = _portalCaches.values().toArray(\n\t\t\tnew PortalCache[_portalCaches.size()]);\n\n\t\tfor (PortalCache portalCache : portalCaches) {\n\t\t\tportalCache.removeAll();\n\t\t}\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void clearCache(String className) {\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tlocalCache.clear();\n\n\t\tPortalCache portalCache = _getPortalCache(className);\n\n\t\tportalCache.removeAll();\n\t}","id":1398,"modified_method":"public void clearCache(String className) {\n\t\tclearLocalCache();\n\n\t\tPortalCache portalCache = _getPortalCache(className);\n\n\t\tportalCache.removeAll();\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Object loadResult(\n\t\tboolean entityCacheEnabled, Class<?> classObj,\n\t\tSerializable primaryKeyObj, SessionFactory sessionFactory) {\n\n\t\tif (!PropsValues.VALUE_OBJECT_ENTITY_CACHE_ENABLED ||\n\t\t\t!entityCacheEnabled || !CacheRegistry.isActive()) {\n\n\t\t\tSession session = null;\n\n\t\t\ttry {\n\t\t\t\tsession = sessionFactory.openSession();\n\n\t\t\t\treturn session.load(classObj, primaryKeyObj);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tsessionFactory.closeSession(session);\n\t\t\t}\n\t\t}\n\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tString localCacheKey = _encodeLocalCacheKey(classObj, primaryKeyObj);\n\n\t\tObject result = localCache.get(localCacheKey);\n\n\t\tif (result == null) {\n\t\t\tPortalCache portalCache = _getPortalCache(classObj.getName());\n\n\t\t\tString cacheKey = _encodeCacheKey(primaryKeyObj);\n\n\t\t\tresult = _multiVMPool.get(portalCache, cacheKey);\n\n\t\t\tif (result == null) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(\n\t\t\t\t\t\t\"Load \" + classObj + \" \" + primaryKeyObj +\n\t\t\t\t\t\t\t\" from session\");\n\t\t\t\t}\n\n\t\t\t\tSession session = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tsession = sessionFactory.openSession();\n\n\t\t\t\t\tresult = session.load(classObj, primaryKeyObj);\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\tif (result == null) {\n\t\t\t\t\t\tresult = StringPool.BLANK;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = _objectToResult(result);\n\n\t\t\t\t\t_multiVMPool.put(portalCache, cacheKey, result);\n\n\t\t\t\t\tsessionFactory.closeSession(session);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlocalCache.put(localCacheKey, result);\n\t\t}\n\n\t\tresult = _objectToResult(result);\n\n\t\treturn result;\n\t}","id":1399,"modified_method":"public Object loadResult(\n\t\tboolean entityCacheEnabled, Class<?> classObj,\n\t\tSerializable primaryKeyObj, SessionFactory sessionFactory) {\n\n\t\tif (!PropsValues.VALUE_OBJECT_ENTITY_CACHE_ENABLED ||\n\t\t\t!entityCacheEnabled || !CacheRegistry.isActive()) {\n\n\t\t\tSession session = null;\n\n\t\t\ttry {\n\t\t\t\tsession = sessionFactory.openSession();\n\n\t\t\t\treturn session.load(classObj, primaryKeyObj);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tsessionFactory.closeSession(session);\n\t\t\t}\n\t\t}\n\n\t\tObject result = null;\n\n\t\tMap<String, Object> localCache = null;\n\n\t\tString localCacheKey = null;\n\n\t\tif (_localCacheEnabled) {\n\t\t\tlocalCache = _localCache.get();\n\n\t\t\tlocalCacheKey = _encodeLocalCacheKey(classObj, primaryKeyObj);\n\n\t\t\tresult = localCache.get(localCacheKey);\n\t\t}\n\n\t\tif (result == null) {\n\t\t\tPortalCache portalCache = _getPortalCache(classObj.getName());\n\n\t\t\tString cacheKey = _encodeCacheKey(primaryKeyObj);\n\n\t\t\tresult = _multiVMPool.get(portalCache, cacheKey);\n\n\t\t\tif (result == null) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(\n\t\t\t\t\t\t\"Load \" + classObj + \" \" + primaryKeyObj +\n\t\t\t\t\t\t\t\" from session\");\n\t\t\t\t}\n\n\t\t\t\tSession session = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tsession = sessionFactory.openSession();\n\n\t\t\t\t\tresult = session.load(classObj, primaryKeyObj);\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\tif (result == null) {\n\t\t\t\t\t\tresult = StringPool.BLANK;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = _objectToResult(result);\n\n\t\t\t\t\t_multiVMPool.put(portalCache, cacheKey, result);\n\n\t\t\t\t\tsessionFactory.closeSession(session);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_localCacheEnabled) {\n\t\t\t\tlocalCache.put(localCacheKey, result);\n\t\t\t}\n\t\t}\n\n\t\tresult = _objectToResult(result);\n\n\t\treturn result;\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void removeResult(\n\t\tboolean entityCacheEnabled, Class<?> classObj,\n\t\tSerializable primaryKeyObj) {\n\n\t\tif (!PropsValues.VALUE_OBJECT_ENTITY_CACHE_ENABLED ||\n\t\t\t!entityCacheEnabled || !CacheRegistry.isActive()) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tString localCacheKey = _encodeLocalCacheKey(classObj, primaryKeyObj);\n\n\t\tlocalCache.remove(localCacheKey);\n\n\t\tPortalCache portalCache = _getPortalCache(classObj.getName());\n\n\t\tString cacheKey = _encodeCacheKey(primaryKeyObj);\n\n\t\t_multiVMPool.remove(portalCache, cacheKey);\n\t}","id":1400,"modified_method":"public void removeResult(\n\t\tboolean entityCacheEnabled, Class<?> classObj,\n\t\tSerializable primaryKeyObj) {\n\n\t\tif (!PropsValues.VALUE_OBJECT_ENTITY_CACHE_ENABLED ||\n\t\t\t!entityCacheEnabled || !CacheRegistry.isActive()) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (_localCacheEnabled) {\n\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\tString localCacheKey = _encodeLocalCacheKey(\n\t\t\t\tclassObj, primaryKeyObj);\n\n\t\t\tlocalCache.remove(localCacheKey);\n\t\t}\n\n\t\tPortalCache portalCache = _getPortalCache(classObj.getName());\n\n\t\tString cacheKey = _encodeCacheKey(primaryKeyObj);\n\n\t\t_multiVMPool.remove(portalCache, cacheKey);\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void clearLocalCache() {\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tlocalCache.clear();\n\t}","id":1401,"modified_method":"public void clearLocalCache() {\n\t\tif (_localCacheEnabled) {\n\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\tlocalCache.clear();\n\t\t}\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Object getResult(\n\t\tboolean entityCacheEnabled, Class<?> classObj,\n\t\tSerializable primaryKeyObj, SessionFactory sessionFactory) {\n\n\t\tif (!PropsValues.VALUE_OBJECT_ENTITY_CACHE_ENABLED ||\n\t\t\t!entityCacheEnabled || !CacheRegistry.isActive()) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tString localCacheKey = _encodeLocalCacheKey(classObj, primaryKeyObj);\n\n\t\tObject result = localCache.get(localCacheKey);\n\n\t\tif (result == null) {\n\t\t\tPortalCache portalCache = _getPortalCache(classObj.getName());\n\n\t\t\tString cacheKey = _encodeCacheKey(primaryKeyObj);\n\n\t\t\tresult = _multiVMPool.get(portalCache, cacheKey);\n\n\t\t\tif (result == null) {\n\t\t\t\tresult = StringPool.BLANK;\n\n\t\t\t\t_multiVMPool.put(portalCache, cacheKey, result);\n\t\t\t}\n\n\t\t\tlocalCache.put(localCacheKey, result);\n\t\t}\n\n\t\tif (result != null) {\n\t\t\tresult = _objectToResult(result);\n\t\t}\n\n\t\treturn result;\n\t}","id":1402,"modified_method":"public Object getResult(\n\t\tboolean entityCacheEnabled, Class<?> classObj,\n\t\tSerializable primaryKeyObj, SessionFactory sessionFactory) {\n\n\t\tif (!PropsValues.VALUE_OBJECT_ENTITY_CACHE_ENABLED ||\n\t\t\t!entityCacheEnabled || !CacheRegistry.isActive()) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tObject result = null;\n\n\t\tMap<String, Object> localCache = null;\n\n\t\tString localCacheKey = null;\n\n\t\tif (_localCacheEnabled) {\n\t\t\tlocalCache = _localCache.get();\n\n\t\t\tlocalCacheKey = _encodeLocalCacheKey(classObj, primaryKeyObj);\n\n\t\t\tresult = localCache.get(localCacheKey);\n\t\t}\n\n\t\tif (result == null) {\n\t\t\tPortalCache portalCache = _getPortalCache(classObj.getName());\n\n\t\t\tString cacheKey = _encodeCacheKey(primaryKeyObj);\n\n\t\t\tresult = _multiVMPool.get(portalCache, cacheKey);\n\n\t\t\tif (result == null) {\n\t\t\t\tresult = StringPool.BLANK;\n\n\t\t\t\t_multiVMPool.put(portalCache, cacheKey, result);\n\t\t\t}\n\n\t\t\tif (_localCacheEnabled) {\n\t\t\t\tlocalCache.put(localCacheKey, result);\n\t\t\t}\n\t\t}\n\n\t\tif (result != null) {\n\t\t\tresult = _objectToResult(result);\n\t\t}\n\n\t\treturn result;\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void clearLocalCache() {\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tlocalCache.clear();\n\t}","id":1403,"modified_method":"public void clearLocalCache() {\n\t\tif (_localCacheEnabled) {\n\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\tlocalCache.clear();\n\t\t}\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void putResult(FinderPath finderPath, Object[] args, Object result) {\n\t\tif (!PropsValues.VALUE_OBJECT_FINDER_CACHE_ENABLED ||\n\t\t\t!finderPath.isFinderCacheEnabled() || !CacheRegistry.isActive() ||\n\t\t\t(result == null)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tString localCacheKey = _encodeLocalCacheKey(\n\t\t\tfinderPath.getClassName(), finderPath.getMethodName(),\n\t\t\tfinderPath.getParams(), args);\n\n\t\tObject primaryKey = _resultToPrimaryKey(result);\n\n\t\tlocalCache.put(localCacheKey, primaryKey);\n\n\t\tPortalCache portalCache = _getPortalCache(finderPath.getClassName());\n\n\t\tString cacheKey = _encodeCacheKey(\n\t\t\tfinderPath.getMethodName(), finderPath.getParams(), args);\n\n\t\t_multiVMPool.put(portalCache, cacheKey, primaryKey);\n\t}","id":1404,"modified_method":"public void putResult(FinderPath finderPath, Object[] args, Object result) {\n\t\tif (!PropsValues.VALUE_OBJECT_FINDER_CACHE_ENABLED ||\n\t\t\t!finderPath.isFinderCacheEnabled() || !CacheRegistry.isActive() ||\n\t\t\t(result == null)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tObject primaryKey = _resultToPrimaryKey(result);\n\n\t\tif (_localCacheEnabled) {\n\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\tString localCacheKey = _encodeLocalCacheKey(\n\t\t\t\tfinderPath.getClassName(), finderPath.getMethodName(),\n\t\t\t\tfinderPath.getParams(), args);\n\n\t\t\tlocalCache.put(localCacheKey, primaryKey);\n\t\t}\n\n\t\tPortalCache portalCache = _getPortalCache(finderPath.getClassName());\n\n\t\tString cacheKey = _encodeCacheKey(\n\t\t\tfinderPath.getMethodName(), finderPath.getParams(), args);\n\n\t\t_multiVMPool.put(portalCache, cacheKey, primaryKey);\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void clearCache() {\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tlocalCache.clear();\n\n\t\tPortalCache[] portalCaches = _portalCaches.values().toArray(\n\t\t\tnew PortalCache[_portalCaches.size()]);\n\n\t\tfor (PortalCache portalCache : portalCaches) {\n\t\t\tportalCache.removeAll();\n\t\t}\n\t}","id":1405,"modified_method":"public void clearCache() {\n\t\tclearLocalCache();\n\n\t\tPortalCache[] portalCaches = _portalCaches.values().toArray(\n\t\t\tnew PortalCache[_portalCaches.size()]);\n\n\t\tfor (PortalCache portalCache : portalCaches) {\n\t\t\tportalCache.removeAll();\n\t\t}\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void clearCache(String className) {\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tlocalCache.clear();\n\n\t\tPortalCache portalCache = _getPortalCache(className);\n\n\t\tportalCache.removeAll();\n\t}","id":1406,"modified_method":"public void clearCache(String className) {\n\t\tclearLocalCache();\n\n\t\tPortalCache portalCache = _getPortalCache(className);\n\n\t\tportalCache.removeAll();\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void removeResult(FinderPath finderPath, Object[] args) {\n\t\tif (!PropsValues.VALUE_OBJECT_FINDER_CACHE_ENABLED ||\n\t\t\t!finderPath.isFinderCacheEnabled() || !CacheRegistry.isActive()) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tString localCacheKey = _encodeLocalCacheKey(\n\t\t\tfinderPath.getClassName(), finderPath.getMethodName(),\n\t\t\tfinderPath.getParams(), args);\n\n\t\tlocalCache.remove(localCacheKey);\n\n\t\tPortalCache portalCache = _getPortalCache(finderPath.getClassName());\n\n\t\tString cacheKey = _encodeCacheKey(\n\t\t\tfinderPath.getMethodName(), finderPath.getParams(), args);\n\n\t\t_multiVMPool.remove(portalCache, cacheKey);\n\t}","id":1407,"modified_method":"public void removeResult(FinderPath finderPath, Object[] args) {\n\t\tif (!PropsValues.VALUE_OBJECT_FINDER_CACHE_ENABLED ||\n\t\t\t!finderPath.isFinderCacheEnabled() || !CacheRegistry.isActive()) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (_localCacheEnabled) {\n\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\tString localCacheKey = _encodeLocalCacheKey(\n\t\t\t\tfinderPath.getClassName(), finderPath.getMethodName(),\n\t\t\t\tfinderPath.getParams(), args);\n\n\t\t\tlocalCache.remove(localCacheKey);\n\t\t}\n\n\t\tPortalCache portalCache = _getPortalCache(finderPath.getClassName());\n\n\t\tString cacheKey = _encodeCacheKey(\n\t\t\tfinderPath.getMethodName(), finderPath.getParams(), args);\n\n\t\t_multiVMPool.remove(portalCache, cacheKey);\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Object getResult(\n\t\tFinderPath finderPath, Object[] args, SessionFactory sessionFactory) {\n\n\t\tif (!PropsValues.VALUE_OBJECT_FINDER_CACHE_ENABLED ||\n\t\t\t!finderPath.isFinderCacheEnabled() || !CacheRegistry.isActive()) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tString localCacheKey = _encodeLocalCacheKey(\n\t\t\tfinderPath.getClassName(), finderPath.getMethodName(),\n\t\t\tfinderPath.getParams(), args);\n\n\t\tObject primaryKey = localCache.get(localCacheKey);\n\n\t\tif (primaryKey == null) {\n\t\t\tPortalCache portalCache = _getPortalCache(\n\t\t\t\tfinderPath.getClassName());\n\n\t\t\tString cacheKey = _encodeCacheKey(\n\t\t\t\tfinderPath.getMethodName(), finderPath.getParams(), args);\n\n\t\t\tprimaryKey = _multiVMPool.get(portalCache, cacheKey);\n\n\t\t\tif (primaryKey != null) {\n\t\t\t\tlocalCache.put(localCacheKey, primaryKey);\n\t\t\t}\n\t\t}\n\n\t\tif (primaryKey != null) {\n\t\t\treturn _primaryKeyToResult(finderPath, sessionFactory, primaryKey);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","id":1408,"modified_method":"public Object getResult(\n\t\tFinderPath finderPath, Object[] args, SessionFactory sessionFactory) {\n\n\t\tif (!PropsValues.VALUE_OBJECT_FINDER_CACHE_ENABLED ||\n\t\t\t!finderPath.isFinderCacheEnabled() || !CacheRegistry.isActive()) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tObject primaryKey = null;\n\n\t\tMap<String, Object> localCache = null;\n\n\t\tString localCacheKey = null;\n\n\t\tif (_localCacheEnabled) {\n\t\t\tlocalCache = _localCache.get();\n\n\t\t\tlocalCacheKey = _encodeLocalCacheKey(\n\t\t\t\tfinderPath.getClassName(), finderPath.getMethodName(),\n\t\t\t\tfinderPath.getParams(), args);\n\n\t\t\tprimaryKey = localCache.get(localCacheKey);\n\t\t}\n\n\t\tif (primaryKey == null) {\n\t\t\tPortalCache portalCache = _getPortalCache(\n\t\t\t\tfinderPath.getClassName());\n\n\t\t\tString cacheKey = _encodeCacheKey(\n\t\t\t\tfinderPath.getMethodName(), finderPath.getParams(), args);\n\n\t\t\tprimaryKey = _multiVMPool.get(portalCache, cacheKey);\n\n\t\t\tif (primaryKey != null) {\n\t\t\t\tif (_localCacheEnabled) {\n\t\t\t\t\tlocalCache.put(localCacheKey, primaryKey);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (primaryKey != null) {\n\t\t\treturn _primaryKeyToResult(finderPath, sessionFactory, primaryKey);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static PermissionCheckerBag getBag(long userId, long groupId) {\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tString key = _encodeKey(userId, groupId);\n\n\t\tPermissionCheckerBag bag = (PermissionCheckerBag)localCache.get(key);\n\n\t\tif (bag == null) {\n\t\t\tbag = (PermissionCheckerBag)MultiVMPoolUtil.get(_cache, key);\n\t\t}\n\n\t\treturn bag;\n\t}","id":1409,"modified_method":"public static PermissionCheckerBag getBag(long userId, long groupId) {\n\t\tPermissionCheckerBag bag = null;\n\n\t\tString key = _encodeKey(userId, groupId);\n\n\t\tif (_localCacheEnabled) {\n\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\tbag = (PermissionCheckerBag)localCache.get(key);\n\t\t}\n\n\t\tif (bag == null) {\n\t\t\tbag = (PermissionCheckerBag)MultiVMPoolUtil.get(_cache, key);\n\t\t}\n\n\t\treturn bag;\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void clearLocalCache() {\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tlocalCache.clear();\n\t}","id":1410,"modified_method":"public static void clearLocalCache() {\n\t\tif (_localCacheEnabled) {\n\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\tlocalCache.clear();\n\t\t}\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Boolean putPermission(\n\t\tlong userId, long groupId, String name, String primKey, String actionId,\n\t\tBoolean value) {\n\n\t\tif (value != null) {\n\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\tString key = _encodeKey(userId, groupId, name, primKey, actionId);\n\n\t\t\tlocalCache.put(key, value);\n\n\t\t\tMultiVMPoolUtil.put(_cache, key, value);\n\t\t}\n\n\t\treturn value;\n\t}","id":1411,"modified_method":"public static Boolean putPermission(\n\t\tlong userId, long groupId, String name, String primKey, String actionId,\n\t\tBoolean value) {\n\n\t\tif (value != null) {\n\t\t\tString key = _encodeKey(userId, groupId, name, primKey, actionId);\n\n\t\t\tif (_localCacheEnabled) {\n\t\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\t\tlocalCache.put(key, value);\n\t\t\t}\n\n\t\t\tMultiVMPoolUtil.put(_cache, key, value);\n\t\t}\n\n\t\treturn value;\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Boolean getPermission(\n\t\tlong userId, long groupId, String name, String primKey,\n\t\tString actionId) {\n\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tString key = _encodeKey(userId, groupId, name, primKey, actionId);\n\n\t\tBoolean value = (Boolean)localCache.get(key);\n\n\t\tif (value == null) {\n\t\t\tvalue = (Boolean)MultiVMPoolUtil.get(_cache, key);\n\t\t}\n\n\t\treturn value;\n\t}","id":1412,"modified_method":"public static Boolean getPermission(\n\t\tlong userId, long groupId, String name, String primKey,\n\t\tString actionId) {\n\n\t\tBoolean value = null;\n\n\t\tString key = _encodeKey(userId, groupId, name, primKey, actionId);\n\n\t\tif (_localCacheEnabled) {\n\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\tvalue = (Boolean)localCache.get(key);\n\t\t}\n\n\t\tif (value == null) {\n\t\t\tvalue = (Boolean)MultiVMPoolUtil.get(_cache, key);\n\t\t}\n\n\t\treturn value;\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void clearCache() {\n\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\tlocalCache.clear();\n\n\t\t_cache.removeAll();\n\t}","id":1413,"modified_method":"public static void clearCache() {\n\t\tclearLocalCache();\n\n\t\t_cache.removeAll();\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static PermissionCheckerBag putBag(\n\t\tlong userId, long groupId, PermissionCheckerBag bag) {\n\n\t\tif (bag != null) {\n\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\tString key = _encodeKey(userId, groupId);\n\n\t\t\tlocalCache.put(key, bag);\n\n\t\t\tMultiVMPoolUtil.put(_cache, key, bag);\n\t\t}\n\n\t\treturn bag;\n\t}","id":1414,"modified_method":"public static PermissionCheckerBag putBag(\n\t\tlong userId, long groupId, PermissionCheckerBag bag) {\n\n\t\tif (bag != null) {\n\t\t\tString key = _encodeKey(userId, groupId);\n\n\t\t\tif (_localCacheEnabled) {\n\t\t\t\tMap<String, Object> localCache = _localCache.get();\n\n\t\t\t\tlocalCache.put(key, bag);\n\t\t\t}\n\n\t\t\tMultiVMPoolUtil.put(_cache, key, bag);\n\t\t}\n\n\t\treturn bag;\n\t}","commit_id":"625f722980f6eb48f6eda0cd1d172a833890140a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private boolean isPredicateEmpty(SlicePredicate predicate)\n    {\n        if (predicate != null)\n            if (predicate.isSetSlice_range())\n            {\n                if (predicate.getSlice_range().getStart() != null || predicate.getSlice_range().getFinish() != null)\n                return false;\n            }\n            else if (predicate.isSetColumn_names())\n                return false;\n\n        return true;\n    }","id":1415,"modified_method":"private boolean isPredicateEmpty(SlicePredicate predicate)\n    {\n        if (predicate != null)\n            if (predicate.isSetSlice_range())\n                if (predicate.getSlice_range().getStart() != null && predicate.getSlice_range().getFinish() != null)\n                return false;\n            else if (predicate.isSetColumn_names())\n                return false;\n\n        return true;\n    }","commit_id":"3f6c50a1d161c189329e6801a2ac006a47d5acda","url":"https://github.com/apache/cassandra"},{"original_method":"private void maybeInit()\n        {\n            // check if we need another batch \n            if (rows != null && i >= rows.size())\n                rows = null;\n            \n            if (rows != null)\n                return;\n\n            if (startToken == null)\n            {\n                startToken = split.getStartToken();\n            } \n\n            // The removal of empty CF rows could result in an empty List<KeySlice> rows.\n            // Keep trying until we return on reaching the end of the range or rows is nonEmpty.\n            while (rows == null || rows.isEmpty()) {\n                if (startToken.equals(split.getEndToken()))\n                {\n                    rows = null;\n                    return;\n                }\n\n                KeyRange keyRange = new KeyRange(batchRowCount)\n                                    .setStart_token(startToken)\n                                    .setEnd_token(split.getEndToken());\n                try\n                {\n                    rows = client.get_range_slices(new ColumnParent(cfName),\n                                                   predicate,\n                                                   keyRange,\n                                                   consistencyLevel);\n\n                    // nothing new? reached the end\n                    if (rows.isEmpty())\n                    {\n                        rows = null;\n                        return;\n                    }\n\n                    // Pre-compute the last row key, before removing empty rows\n                    ByteBuffer lastRowKey = rows.get(rows.size() - 1).key;\n\n                    // only remove empty rows if the slice predicate is empty\n                    if (isPredicateEmpty(predicate))\n                    {\n                        Iterator<KeySlice> rowsIterator = rows.iterator();\n                        while (rowsIterator.hasNext())\n                            if (rowsIterator.next().columns.isEmpty())\n                                rowsIterator.remove();\n                    }\n\n                    // reset to iterate through the new batch\n                    i = 0;\n\n                    // prepare for the next slice to be read\n                    startToken = partitioner.getTokenFactory().toString(partitioner.getToken(lastRowKey));\n                }\n                catch (Exception e)\n                {\n                    throw new RuntimeException(e);\n                }\n            }\n        }","id":1416,"modified_method":"private void maybeInit()\n        {\n            // check if we need another batch \n            if (rows != null && i >= rows.size())\n                rows = null;\n            \n            if (rows != null)\n                return;\n\n            if (startToken == null)\n            {\n                startToken = split.getStartToken();\n            } \n            else if (startToken.equals(split.getEndToken()))\n            {\n                rows = null;\n                return;\n            }\n            \n            KeyRange keyRange = new KeyRange(batchRowCount)\n                                .setStart_token(startToken)\n                                .setEnd_token(split.getEndToken());\n            try\n            {\n                rows = client.get_range_slices(new ColumnParent(cfName),\n                                               predicate,\n                                               keyRange,\n                                               consistencyLevel);\n                  \n                // nothing new? reached the end\n                if (rows.isEmpty())\n                {\n                    rows = null;\n                    return;\n                }\n\n                // Pre-compute the last row key, before removing empty rows\n                ByteBuffer lastRowKey = rows.get(rows.size() - 1).key;\n\n                // only remove empty rows if the slice predicate is empty\n                if (isPredicateEmpty(predicate))\n                {\n                    Iterator<KeySlice> rowsIterator = rows.iterator();\n                    while (rowsIterator.hasNext())\n                        if (rowsIterator.next().columns.isEmpty())\n                            rowsIterator.remove();\n                }\n                \n                // reset to iterate through the new batch\n                i = 0;\n\n                // prepare for the next slice to be read\n                startToken = partitioner.getTokenFactory().toString(partitioner.getToken(lastRowKey));\n            }\n            catch (Exception e)\n            {\n                throw new RuntimeException(e);\n            }\n        }","commit_id":"3f6c50a1d161c189329e6801a2ac006a47d5acda","url":"https://github.com/apache/cassandra"},{"original_method":"private boolean isPredicateEmpty(SlicePredicate predicate)\n    {\n        if (predicate != null)\n            if (predicate.isSetSlice_range())\n                if (predicate.getSlice_range().getStart() != null && predicate.getSlice_range().getFinish() != null)\n                return false;\n            else if (predicate.isSetColumn_names())\n                return false;\n\n        return true;\n    }","id":1417,"modified_method":"private boolean isPredicateEmpty(SlicePredicate predicate)\n    {\n        if (predicate != null)\n            if (predicate.isSetSlice_range())\n            {\n                if (predicate.getSlice_range().getStart() != null || predicate.getSlice_range().getFinish() != null)\n                return false;\n            }\n            else if (predicate.isSetColumn_names())\n                return false;\n\n        return true;\n    }","commit_id":"9d7d2685d4331b0fef33eb85c097cf6ea1a9887e","url":"https://github.com/apache/cassandra"},{"original_method":"private void maybeInit()\n        {\n            // check if we need another batch \n            if (rows != null && i >= rows.size())\n                rows = null;\n            \n            if (rows != null)\n                return;\n\n            if (startToken == null)\n            {\n                startToken = split.getStartToken();\n            } \n            else if (startToken.equals(split.getEndToken()))\n            {\n                rows = null;\n                return;\n            }\n            \n            KeyRange keyRange = new KeyRange(batchRowCount)\n                                .setStart_token(startToken)\n                                .setEnd_token(split.getEndToken());\n            try\n            {\n                rows = client.get_range_slices(new ColumnParent(cfName),\n                                               predicate,\n                                               keyRange,\n                                               consistencyLevel);\n                  \n                // nothing new? reached the end\n                if (rows.isEmpty())\n                {\n                    rows = null;\n                    return;\n                }\n\n                // Pre-compute the last row key, before removing empty rows\n                ByteBuffer lastRowKey = rows.get(rows.size() - 1).key;\n\n                // only remove empty rows if the slice predicate is empty\n                if (isPredicateEmpty(predicate))\n                {\n                    Iterator<KeySlice> rowsIterator = rows.iterator();\n                    while (rowsIterator.hasNext())\n                        if (rowsIterator.next().columns.isEmpty())\n                            rowsIterator.remove();\n                }\n                \n                // reset to iterate through the new batch\n                i = 0;\n\n                // prepare for the next slice to be read\n                startToken = partitioner.getTokenFactory().toString(partitioner.getToken(lastRowKey));\n            }\n            catch (Exception e)\n            {\n                throw new RuntimeException(e);\n            }\n        }","id":1418,"modified_method":"private void maybeInit()\n        {\n            // check if we need another batch \n            if (rows != null && i >= rows.size())\n                rows = null;\n            \n            if (rows != null)\n                return;\n\n            if (startToken == null)\n            {\n                startToken = split.getStartToken();\n            } \n\n            // The removal of empty CF rows could result in an empty List<KeySlice> rows.\n            // Keep trying until we return on reaching the end of the range or rows is nonEmpty.\n            while (rows == null || rows.isEmpty()) {\n                if (startToken.equals(split.getEndToken()))\n                {\n                    rows = null;\n                    return;\n                }\n\n                KeyRange keyRange = new KeyRange(batchRowCount)\n                                    .setStart_token(startToken)\n                                    .setEnd_token(split.getEndToken());\n                try\n                {\n                    rows = client.get_range_slices(new ColumnParent(cfName),\n                                                   predicate,\n                                                   keyRange,\n                                                   consistencyLevel);\n\n                    // nothing new? reached the end\n                    if (rows.isEmpty())\n                    {\n                        rows = null;\n                        return;\n                    }\n\n                    // Pre-compute the last row key, before removing empty rows\n                    ByteBuffer lastRowKey = rows.get(rows.size() - 1).key;\n\n                    // only remove empty rows if the slice predicate is empty\n                    if (isPredicateEmpty(predicate))\n                    {\n                        Iterator<KeySlice> rowsIterator = rows.iterator();\n                        while (rowsIterator.hasNext())\n                            if (rowsIterator.next().columns.isEmpty())\n                                rowsIterator.remove();\n                    }\n\n                    // reset to iterate through the new batch\n                    i = 0;\n\n                    // prepare for the next slice to be read\n                    startToken = partitioner.getTokenFactory().toString(partitioner.getToken(lastRowKey));\n                }\n                catch (Exception e)\n                {\n                    throw new RuntimeException(e);\n                }\n            }\n        }","commit_id":"9d7d2685d4331b0fef33eb85c097cf6ea1a9887e","url":"https://github.com/apache/cassandra"},{"original_method":"private boolean isPredicateEmpty(SlicePredicate predicate)\n    {\n        if (predicate != null)\n            if (predicate.isSetSlice_range())\n                if (predicate.getSlice_range().getStart() != null && predicate.getSlice_range().getFinish() != null)\n                return false;\n            else if (predicate.isSetColumn_names())\n                return false;\n\n        return true;\n    }","id":1419,"modified_method":"private boolean isPredicateEmpty(SlicePredicate predicate)\n    {\n        if (predicate != null)\n            if (predicate.isSetSlice_range())\n            {\n                if (predicate.getSlice_range().getStart() != null || predicate.getSlice_range().getFinish() != null)\n                return false;\n            }\n            else if (predicate.isSetColumn_names())\n                return false;\n\n        return true;\n    }","commit_id":"cc0ad2a0c81be678202f48ab13341d167608adfc","url":"https://github.com/apache/cassandra"},{"original_method":"private void maybeInit()\n        {\n            // check if we need another batch \n            if (rows != null && i >= rows.size())\n                rows = null;\n            \n            if (rows != null)\n                return;\n\n            if (startToken == null)\n            {\n                startToken = split.getStartToken();\n            } \n            else if (startToken.equals(split.getEndToken()))\n            {\n                rows = null;\n                return;\n            }\n            \n            KeyRange keyRange = new KeyRange(batchRowCount)\n                                .setStart_token(startToken)\n                                .setEnd_token(split.getEndToken());\n            try\n            {\n                rows = client.get_range_slices(new ColumnParent(cfName),\n                                               predicate,\n                                               keyRange,\n                                               consistencyLevel);\n                  \n                // nothing new? reached the end\n                if (rows.isEmpty())\n                {\n                    rows = null;\n                    return;\n                }\n\n                // Pre-compute the last row key, before removing empty rows\n                ByteBuffer lastRowKey = rows.get(rows.size() - 1).key;\n\n                // only remove empty rows if the slice predicate is empty\n                if (isPredicateEmpty(predicate))\n                {\n                    Iterator<KeySlice> rowsIterator = rows.iterator();\n                    while (rowsIterator.hasNext())\n                        if (rowsIterator.next().columns.isEmpty())\n                            rowsIterator.remove();\n                }\n                \n                // reset to iterate through the new batch\n                i = 0;\n\n                // prepare for the next slice to be read\n                startToken = partitioner.getTokenFactory().toString(partitioner.getToken(lastRowKey));\n            }\n            catch (Exception e)\n            {\n                throw new RuntimeException(e);\n            }\n        }","id":1420,"modified_method":"private void maybeInit()\n        {\n            // check if we need another batch \n            if (rows != null && i >= rows.size())\n                rows = null;\n            \n            if (rows != null)\n                return;\n\n            if (startToken == null)\n            {\n                startToken = split.getStartToken();\n            } \n\n            // The removal of empty CF rows could result in an empty List<KeySlice> rows.\n            // Keep trying until we return on reaching the end of the range or rows is nonEmpty.\n            while (rows == null || rows.isEmpty()) {\n                if (startToken.equals(split.getEndToken()))\n                {\n                    rows = null;\n                    return;\n                }\n\n                KeyRange keyRange = new KeyRange(batchRowCount)\n                                    .setStart_token(startToken)\n                                    .setEnd_token(split.getEndToken());\n                try\n                {\n                    rows = client.get_range_slices(new ColumnParent(cfName),\n                                                   predicate,\n                                                   keyRange,\n                                                   consistencyLevel);\n\n                    // nothing new? reached the end\n                    if (rows.isEmpty())\n                    {\n                        rows = null;\n                        return;\n                    }\n\n                    // Pre-compute the last row key, before removing empty rows\n                    ByteBuffer lastRowKey = rows.get(rows.size() - 1).key;\n\n                    // only remove empty rows if the slice predicate is empty\n                    if (isPredicateEmpty(predicate))\n                    {\n                        Iterator<KeySlice> rowsIterator = rows.iterator();\n                        while (rowsIterator.hasNext())\n                            if (rowsIterator.next().columns.isEmpty())\n                                rowsIterator.remove();\n                    }\n\n                    // reset to iterate through the new batch\n                    i = 0;\n\n                    // prepare for the next slice to be read\n                    startToken = partitioner.getTokenFactory().toString(partitioner.getToken(lastRowKey));\n                }\n                catch (Exception e)\n                {\n                    throw new RuntimeException(e);\n                }\n            }\n        }","commit_id":"cc0ad2a0c81be678202f48ab13341d167608adfc","url":"https://github.com/apache/cassandra"},{"original_method":"@Override\n    protected JComponent getTopComponent() {\n      if (myModule instanceof Language || myModule instanceof Solution) {\n\n        boolean hasVersion = getVersion() != null;\n        JPanel panel = new JPanel();\n        //TODO: replace new JBInsets(0,0,0,0) with JBUI.emptyInsets()\n        panel.setLayout(new GridLayoutManager(hasVersion ? 2 : 1, 2, new JBInsets(0, 0, 0, 0), -1, -1));\n\n        int row=0;\n\n        JBLabel label = new JBLabel(PropertiesBundle.message(\"mps.properties.configurable.module.javatab.genoutlabel\"));\n        panel.add(label, new GridConstraints(row, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,\n            GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));\n\n        myGenOut = new JTextField();\n        final FileChooserDescriptor outputPathsChooserDescriptor = FileChooserDescriptorFactory.createSingleFolderDescriptor();\n        InsertPathAction.addTo(myGenOut, outputPathsChooserDescriptor);\n        outputPathsChooserDescriptor.setHideIgnored(false);\n        BrowseFilesListener listener = new BrowseFilesListener(myGenOut, \"\", \"\", outputPathsChooserDescriptor);\n        FieldPanel genOutPath = new FieldPanel(myGenOut, null, null, listener, EmptyRunnable.getInstance());\n        FileChooserFactory.getInstance().installFileCompletion(genOutPath.getTextField(), outputPathsChooserDescriptor, true, null);\n\n        genOutPath.setText(getGenOutPath());\n        genOutPath.setPreferredSize(new Dimension(300, 20));\n        panel.add(genOutPath,\n            new GridConstraints(row++, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW,\n                GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));\n\n        if (hasVersion) {\n          JLabel verLabel = new JBLabel(PropertiesBundle.message(\"mps.properties.configurable.module.version\"));\n          panel.add(verLabel,\n              new GridConstraints(row, 0, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,\n                  GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));\n\n          JTextField textField = new JTextField();\n          textField.setText(\"\" + getVersion());\n          panel.add(textField,\n              new GridConstraints(row++, 1, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW,\n                  GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(30, -1), null, 0, false));\n        }\n\n        return panel;\n      }\n      return null;\n    }","id":1421,"modified_method":"@Override\n    protected JComponent getTopComponent() {\n      if (myModule instanceof Language || myModule instanceof Solution) {\n\n        boolean hasVersion = getVersion() != null;\n        JPanel panel = new JPanel();\n        //TODO: replace new JBInsets(0,0,0,0) with JBUI.emptyInsets()\n        panel.setLayout(new GridLayoutManager(hasVersion ? 2 : 1, 2, new JBInsets(0, 0, 0, 0), -1, -1));\n\n        int row = 0;\n\n        JBLabel label = new JBLabel(PropertiesBundle.message(\"mps.properties.configurable.module.javatab.genoutlabel\"));\n        panel.add(label, new GridConstraints(row, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,\n            GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));\n\n        myGenOut = new JTextField();\n        final FileChooserDescriptor outputPathsChooserDescriptor = FileChooserDescriptorFactory.createSingleFolderDescriptor();\n        InsertPathAction.addTo(myGenOut, outputPathsChooserDescriptor);\n        outputPathsChooserDescriptor.setHideIgnored(false);\n        BrowseFilesListener listener = new BrowseFilesListener(myGenOut, \"\", \"\", outputPathsChooserDescriptor);\n        FieldPanel genOutPath = new FieldPanel(myGenOut, null, null, listener, EmptyRunnable.getInstance());\n        FileChooserFactory.getInstance().installFileCompletion(genOutPath.getTextField(), outputPathsChooserDescriptor, true, null);\n\n        genOutPath.setText(getGenOutPath());\n        genOutPath.setPreferredSize(new Dimension(300, 20));\n        panel.add(genOutPath,\n            new GridConstraints(row++, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW,\n                GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));\n\n        if (hasVersion) {\n          JLabel verLabel = new JBLabel(PropertiesBundle.message(\"mps.properties.configurable.module.version\"));\n          panel.add(verLabel,\n              new GridConstraints(row, 0, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,\n                  GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));\n\n          myVersion = new JTextField();\n          myVersion.setText(\"\" + getVersion());\n          panel.add(myVersion,\n              new GridConstraints(row++, 1, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW,\n                  GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(30, -1), null, 0, false));\n        }\n\n        return panel;\n      }\n      return null;\n    }","commit_id":"cf6bdfa33f5354c5536b3539656e8728c300ad10","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public boolean isModified() {\n      return super.isModified()\n          || (\n          myModule instanceof DevKit\n              ? myModuleDependenciesTab.isModified()\n              : myEntriesEditor.isModified())\n          || (\n          myGenOut != null && !(myGenOut.getText().equals(getGenOutPath()))\n      );\n    }","id":1422,"modified_method":"@Override\n    public boolean isModified() {\n      if (super.isModified()) return true;\n      if (myModule instanceof DevKit && myModuleDependenciesTab.isModified()) return true;\n      if (!(myModule instanceof DevKit) && myEntriesEditor.isModified()) return true;\n      if (myGenOut != null && !(myGenOut.getText().equals(getGenOutPath()))) return true;\n\n      if (myVersion != null) {\n        try {\n          int newVersion = Integer.parseInt(myVersion.getText());\n          if (!EqualUtil.equals(newVersion,getVersion())) return false;\n        } catch (NumberFormatException e) {\n          //just continue omitting this field\n        }\n      }\n\n      return false;\n    }","commit_id":"cf6bdfa33f5354c5536b3539656e8728c300ad10","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override public void visitAssignmentExpression(@NotNull PsiAssignmentExpression assignment) {\n      if (myExpr.equals(assignment.getRExpression())) {\n        PsiExpression lExpr = assignment.getLExpression();\n        PsiType type = lExpr.getType();\n        if (type != null) {\n          TailType tailType = getAssignmentRValueTailType(assignment);\n          NullableComputable<String> expectedName = ExpectedTypeInfoImpl.NULL;\n          if (lExpr instanceof PsiReferenceExpression) {\n            PsiElement refElement = ((PsiReferenceExpression)lExpr).resolve();\n            if (refElement instanceof PsiVariable) {\n              expectedName = getPropertyName((PsiVariable)refElement);\n            }\n          }\n          ExpectedTypeInfoImpl info = createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type, tailType, null, expectedName);\n          myResult = new ExpectedTypeInfo[]{info};\n        }\n        else {\n          myResult = ExpectedTypeInfo.EMPTY_ARRAY;\n        }\n      }\n      else {\n        if (myForCompletion) {\n          myExpr = (PsiExpression)myExpr.getParent();\n          assignment.getParent().accept(this);\n          return;\n        }\n\n        PsiExpression rExpr = assignment.getRExpression();\n        if (rExpr != null) {\n          PsiType type = rExpr.getType();\n          if (type != null) {\n            if (type instanceof PsiClassType) {\n              final PsiClass resolved = ((PsiClassType)type).resolve();\n              if (resolved instanceof PsiAnonymousClass) {\n                type = ((PsiAnonymousClass)resolved).getBaseClassType();\n              }\n            }\n            final int kind = assignment.getOperationTokenType() != JavaTokenType.EQ\n                             ? ExpectedTypeInfo.TYPE_STRICTLY\n                             : ExpectedTypeInfo.TYPE_OR_SUPERTYPE;\n            ExpectedTypeInfoImpl info = createInfoImpl(type, kind, type, TailType.NONE);\n            myResult = new ExpectedTypeInfo[]{info};\n            return;\n          }\n        }\n        myResult = ExpectedTypeInfo.EMPTY_ARRAY;\n      }\n    }","id":1423,"modified_method":"@Override public void visitAssignmentExpression(@NotNull PsiAssignmentExpression assignment) {\n      if (myExpr.equals(assignment.getRExpression())) {\n        PsiExpression lExpr = assignment.getLExpression();\n        PsiType type = lExpr.getType();\n        if (type != null) {\n          TailType tailType = getAssignmentRValueTailType(assignment);\n          NullableComputable<String> expectedName = ExpectedTypeInfoImpl.NULL;\n          if (lExpr instanceof PsiReferenceExpression) {\n            PsiElement refElement = ((PsiReferenceExpression)lExpr).resolve();\n            if (refElement instanceof PsiVariable) {\n              expectedName = getPropertyName((PsiVariable)refElement);\n            }\n          }\n          myResult.add(createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type, tailType, null, expectedName));\n        }\n      }\n      else {\n        if (myForCompletion) {\n          myExpr = (PsiExpression)myExpr.getParent();\n          assignment.getParent().accept(this);\n          return;\n        }\n\n        PsiExpression rExpr = assignment.getRExpression();\n        if (rExpr != null) {\n          PsiType type = rExpr.getType();\n          if (type != null) {\n            if (type instanceof PsiClassType) {\n              final PsiClass resolved = ((PsiClassType)type).resolve();\n              if (resolved instanceof PsiAnonymousClass) {\n                type = ((PsiAnonymousClass)resolved).getBaseClassType();\n              }\n            }\n            final int kind = assignment.getOperationTokenType() != JavaTokenType.EQ\n                             ? ExpectedTypeInfo.TYPE_STRICTLY\n                             : ExpectedTypeInfo.TYPE_OR_SUPERTYPE;\n            myResult.add(createInfoImpl(type, kind, type, TailType.NONE));\n          }\n        }\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitArrayAccessExpression(@NotNull PsiArrayAccessExpression expr) {\n      if (myExpr.equals(expr.getIndexExpression())) {\n        ExpectedTypeInfoImpl info = createInfoImpl(PsiType.INT, ExpectedTypeInfo.TYPE_OR_SUBTYPE, PsiType.INT, TailType.NONE)\n            ; //todo: special tail type\n        myResult = new ExpectedTypeInfo[]{info};\n      }\n      else if (myExpr.equals(expr.getArrayExpression())) {\n        if (myForCompletion) {\n          myExpr = (PsiExpression)myExpr.getParent();\n          expr.getParent().accept(this);\n          return;\n        }\n\n        PsiElement parent = expr.getParent();\n        MyParentVisitor visitor = new MyParentVisitor(expr, myForCompletion, myClassProvider, myVoidable, myUsedAfter);\n        myExpr = (PsiExpression)myExpr.getParent();\n        parent.accept(visitor);\n        ExpectedTypeInfo[] componentTypeInfo = visitor.getResult();\n        if (componentTypeInfo.length == 0) {\n          myResult = anyArrayType();\n        }\n        else {\n          myResult = new ExpectedTypeInfoImpl[componentTypeInfo.length];\n          for (int i = 0; i < componentTypeInfo.length; i++) {\n            ExpectedTypeInfo compInfo = componentTypeInfo[i];\n            PsiType expectedArrayType = compInfo.getType().createArrayType();\n            myResult[i] = createInfoImpl(expectedArrayType, ExpectedTypeInfo.TYPE_OR_SUBTYPE, expectedArrayType, TailType.NONE);\n          }\n        }\n      }\n    }","id":1424,"modified_method":"@Override public void visitArrayAccessExpression(@NotNull PsiArrayAccessExpression expr) {\n      if (myExpr.equals(expr.getIndexExpression())) {\n        myResult.add(createInfoImpl(PsiType.INT, PsiType.INT));\n      }\n      else if (myExpr.equals(expr.getArrayExpression())) {\n        if (myForCompletion) {\n          myExpr = (PsiExpression)myExpr.getParent();\n          expr.getParent().accept(this);\n          return;\n        }\n\n        PsiElement parent = expr.getParent();\n        MyParentVisitor visitor = new MyParentVisitor(expr, myForCompletion, myClassProvider, myVoidable, myUsedAfter);\n        myExpr = (PsiExpression)myExpr.getParent();\n        parent.accept(visitor);\n        ExpectedTypeInfo[] componentTypeInfo = visitor.getResult();\n        if (componentTypeInfo.length == 0) {\n          myResult.addAll(anyArrayType());\n        }\n        else {\n          for (int i = 0; i < componentTypeInfo.length; i++) {\n            ExpectedTypeInfo compInfo = componentTypeInfo[i];\n            PsiType expectedArrayType = compInfo.getType().createArrayType();\n            myResult.add(createInfoImpl(expectedArrayType, expectedArrayType));\n          }\n        }\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitWhileStatement(PsiWhileStatement statement) {\n      ExpectedTypeInfoImpl info = createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY,\n                                                 PsiType.BOOLEAN, TailTypes.WHILE_RPARENTH);\n      myResult = new ExpectedTypeInfo[]{info};\n    }","id":1425,"modified_method":"@Override public void visitWhileStatement(PsiWhileStatement statement) {\n      myResult.add(createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY, PsiType.BOOLEAN, TailTypes.WHILE_RPARENTH));\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitVariable(@NotNull PsiVariable variable) {\n      PsiType type = variable.getType();\n      ExpectedTypeInfoImpl info = createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type,\n                                                 variable instanceof PsiResourceVariable ? TailType.NONE : TailType.SEMICOLON, null, getPropertyName(variable));\n      myResult = new ExpectedTypeInfo[]{info};\n    }","id":1426,"modified_method":"@Override public void visitVariable(@NotNull PsiVariable variable) {\n      PsiType type = variable.getType();\n      myResult.add(createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type,\n                                                 variable instanceof PsiResourceVariable ? TailType.NONE : TailType.SEMICOLON, null, getPropertyName(variable)));\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitThrowStatement(@NotNull PsiThrowStatement statement) {\n      if (statement.getException() == myExpr) {\n        PsiManager manager = statement.getManager();\n        PsiType throwableType = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory().createTypeByFQClassName(\"java.lang.Throwable\", myExpr.getResolveScope());\n        PsiMember container = PsiTreeUtil.getParentOfType(statement, PsiMethod.class, PsiClass.class);\n        PsiType[] throwsTypes = PsiType.EMPTY_ARRAY;\n        if (container instanceof PsiMethod) {\n          throwsTypes = ((PsiMethod)container).getThrowsList().getReferencedTypes();\n        }\n\n        if (throwsTypes.length == 0) {\n          final PsiClassType exceptionType = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory().createTypeByFQClassName(\"java.lang.Exception\", myExpr.getResolveScope());\n          throwsTypes = new PsiClassType[]{exceptionType};\n        }\n\n        ExpectedTypeInfo[] infos = new ExpectedTypeInfo[throwsTypes.length];\n        for (int i = 0; i < infos.length; i++) {\n          infos[i] = createInfoImpl(\n            myExpr instanceof PsiTypeCastExpression && myForCompletion ?\n            throwsTypes[i] :\n            throwableType,\n            ExpectedTypeInfo.TYPE_OR_SUBTYPE,\n            throwsTypes[i],\n            TailType.SEMICOLON\n          );\n        }\n        myResult = infos;\n      }\n    }","id":1427,"modified_method":"@Override public void visitThrowStatement(@NotNull PsiThrowStatement statement) {\n      if (statement.getException() == myExpr) {\n        PsiManager manager = statement.getManager();\n        PsiType throwableType = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory().createTypeByFQClassName(\"java.lang.Throwable\", myExpr.getResolveScope());\n        PsiMember container = PsiTreeUtil.getParentOfType(statement, PsiMethod.class, PsiClass.class);\n        PsiType[] throwsTypes = PsiType.EMPTY_ARRAY;\n        if (container instanceof PsiMethod) {\n          throwsTypes = ((PsiMethod)container).getThrowsList().getReferencedTypes();\n        }\n\n        if (throwsTypes.length == 0) {\n          final PsiClassType exceptionType = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory().createTypeByFQClassName(\"java.lang.Exception\", myExpr.getResolveScope());\n          throwsTypes = new PsiClassType[]{exceptionType};\n        }\n\n        for (int i = 0; i < throwsTypes.length; i++) {\n          myResult.add(createInfoImpl(\n            myExpr instanceof PsiTypeCastExpression && myForCompletion ?\n            throwsTypes[i] :\n            throwableType,\n            ExpectedTypeInfo.TYPE_OR_SUBTYPE,\n            throwsTypes[i],\n            TailType.SEMICOLON\n          ));\n        }\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitAnnotationArrayInitializer(@NotNull PsiArrayInitializerMemberValue initializer) {\n      PsiElement parent = initializer.getParent();\n      while (parent instanceof PsiArrayInitializerMemberValue) {\n        parent = parent.getParent();\n      }\n      final PsiType type;\n      if (parent instanceof PsiNameValuePair) {\n        type = getAnnotationMethodType((PsiNameValuePair)parent);\n      }\n      else {\n        type = ((PsiAnnotationMethod)parent).getReturnType();\n      }\n      if (type instanceof PsiArrayType) {\n        myResult = new ExpectedTypeInfo[]{createInfoImpl(((PsiArrayType)type).getComponentType(), ExpectedTypeInfo.TYPE_OR_SUBTYPE, type, TailType.UNKNOWN)};\n      }\n    }","id":1428,"modified_method":"@Override public void visitAnnotationArrayInitializer(@NotNull PsiArrayInitializerMemberValue initializer) {\n      PsiElement parent = initializer.getParent();\n      while (parent instanceof PsiArrayInitializerMemberValue) {\n        parent = parent.getParent();\n      }\n      final PsiType type;\n      if (parent instanceof PsiNameValuePair) {\n        type = getAnnotationMethodType((PsiNameValuePair)parent);\n      }\n      else {\n        type = ((PsiAnnotationMethod)parent).getReturnType();\n      }\n      if (type instanceof PsiArrayType) {\n        myResult.add(createInfoImpl(((PsiArrayType)type).getComponentType(), type));\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitSwitchStatement(@NotNull PsiSwitchStatement statement) {\n      ExpectedTypeInfoImpl info = createInfoImpl(PsiType.LONG, ExpectedTypeInfo.TYPE_OR_SUBTYPE, PsiType.INT,\n                                                 TailType.NONE);\n      if (!PsiUtil.isLanguageLevel5OrHigher(statement)) {\n        myResult = new ExpectedTypeInfo[]{info};\n        return;\n      }\n\n      PsiManager manager = statement.getManager();\n      PsiClassType enumType = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory().createTypeByFQClassName(\"java.lang.Enum\", statement.getResolveScope());\n      ExpectedTypeInfoImpl enumInfo = createInfoImpl(enumType, ExpectedTypeInfo.TYPE_OR_SUBTYPE, enumType, TailType.NONE);\n      myResult = new ExpectedTypeInfo[] {info, enumInfo};\n    }","id":1429,"modified_method":"@Override public void visitSwitchStatement(@NotNull PsiSwitchStatement statement) {\n      myResult.add(createInfoImpl(PsiType.LONG, PsiType.INT));\n      if (!PsiUtil.isLanguageLevel5OrHigher(statement)) {\n        return;\n      }\n\n      PsiManager manager = statement.getManager();\n      PsiClassType enumType = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory().createTypeByFQClassName(\"java.lang.Enum\", statement.getResolveScope());\n      myResult.add(createInfoImpl(enumType, enumType));\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitCodeFragment(@NotNull JavaCodeFragment codeFragment) {\n      if (codeFragment instanceof PsiExpressionCodeFragment) {\n        final PsiType type = ((PsiExpressionCodeFragment)codeFragment).getExpectedType();\n        if (type != null) {\n          myResult = new ExpectedTypeInfo[] {createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type, TailType.NONE)};\n        }\n      }\n    }","id":1430,"modified_method":"@Override public void visitCodeFragment(@NotNull JavaCodeFragment codeFragment) {\n      if (codeFragment instanceof PsiExpressionCodeFragment) {\n        final PsiType type = ((PsiExpressionCodeFragment)codeFragment).getExpectedType();\n        if (type != null) {\n          myResult.add(createInfoImpl(type, type));\n        }\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitNewExpression(@NotNull PsiNewExpression expression) {\n      PsiExpression[] arrayDimensions = expression.getArrayDimensions();\n      for (PsiExpression dimension : arrayDimensions) {\n        if (myExpr.equals(dimension)) {\n          ExpectedTypeInfoImpl info = createInfoImpl(PsiType.INT, ExpectedTypeInfo.TYPE_OR_SUBTYPE,\n                                                     PsiType.INT, TailType.NONE);\n          myResult = new ExpectedTypeInfo[]{info};\n          return;\n        }\n      }\n    }","id":1431,"modified_method":"@Override public void visitNewExpression(@NotNull PsiNewExpression expression) {\n      PsiExpression[] arrayDimensions = expression.getArrayDimensions();\n      for (PsiExpression dimension : arrayDimensions) {\n        if (myExpr.equals(dimension)) {\n          myResult.add(createInfoImpl(PsiType.INT, PsiType.INT));\n          return;\n        }\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitReferenceExpression(@NotNull PsiReferenceExpression expression) {\n      if (myForCompletion) {\n        final MyParentVisitor visitor = new MyParentVisitor(expression, myForCompletion, myClassProvider, myVoidable, myUsedAfter);\n        expression.getParent().accept(visitor);\n        myResult = visitor.getResult();\n        return;\n      }\n\n      String referenceName = expression.getReferenceName();\n      if (referenceName != null) {\n        final PsiElement parent = expression.getParent();\n        if (parent instanceof PsiMethodCallExpression) {\n          myResult = findClassesWithDeclaredMethod((PsiMethodCallExpression)parent, myForCompletion);\n        }\n        else if (parent instanceof PsiReferenceExpression || parent instanceof PsiVariable ||\n                 parent instanceof PsiExpression) {\n          if (LENGTH_SYNTHETIC_ARRAY_FIELD.equals(referenceName)) {\n            myResult = anyArrayType();\n          }\n          else {\n            myResult = findClassesWithDeclaredField(expression);\n          }\n        }\n      }\n    }","id":1432,"modified_method":"@Override\n    public void visitReferenceExpression(@NotNull PsiReferenceExpression expression) {\n      if (myForCompletion) {\n        final MyParentVisitor visitor = new MyParentVisitor(expression, myForCompletion, myClassProvider, myVoidable, myUsedAfter);\n        expression.getParent().accept(visitor);\n        myResult.addAll(visitor.myResult);\n        return;\n      }\n\n      String referenceName = expression.getReferenceName();\n      if (referenceName != null) {\n        final PsiElement parent = expression.getParent();\n        if (parent instanceof PsiMethodCallExpression) {\n          Collections.addAll(myResult, findClassesWithDeclaredMethod((PsiMethodCallExpression)parent, false));\n        }\n        else if (parent instanceof PsiReferenceExpression || parent instanceof PsiVariable ||\n                 parent instanceof PsiExpression) {\n          if (LENGTH_SYNTHETIC_ARRAY_FIELD.equals(referenceName)) {\n            myResult.addAll(anyArrayType());\n          }\n          else {\n            Collections.addAll(myResult, findClassesWithDeclaredField(expression));\n          }\n        }\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitPostfixExpression(@NotNull PsiPostfixExpression expr) {\n      if (myForCompletion) return;\n      PsiType type = expr.getType();\n      ExpectedTypeInfoImpl info;\n      if (myUsedAfter && type != null) {\n        info = createInfoImpl(type, ExpectedTypeInfo.TYPE_STRICTLY, type, TailType.NONE);\n      }\n      else {\n        if (type != null) {\n          info = createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUPERTYPE, PsiType.INT, TailType.NONE);\n        }\n        else {\n          info = createInfoImpl(PsiType.LONG, ExpectedTypeInfo.TYPE_OR_SUBTYPE, PsiType.INT, TailType.NONE);\n        }\n      }\n      myResult = new ExpectedTypeInfo[]{info};\n    }","id":1433,"modified_method":"@Override\n    public void visitPostfixExpression(@NotNull PsiPostfixExpression expr) {\n      if (myForCompletion) return;\n      PsiType type = expr.getType();\n      ExpectedTypeInfoImpl info;\n      if (myUsedAfter && type != null) {\n        info = createInfoImpl(type, ExpectedTypeInfo.TYPE_STRICTLY, type, TailType.NONE);\n      }\n      else {\n        if (type != null) {\n          info = createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUPERTYPE, PsiType.INT, TailType.NONE);\n        }\n        else {\n          info = createInfoImpl(PsiType.LONG, PsiType.INT);\n        }\n      }\n      myResult.add(info);\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void getExpectedTypesForConstructorCall(@NotNull final PsiClass referencedClass,\n                                                    @NotNull final PsiExpressionList argumentList,\n                                                    final PsiSubstitutor substitutor) {\n      List<CandidateInfo> array = new ArrayList<CandidateInfo>();\n      for (PsiMethod constructor : referencedClass.getConstructors()) {\n        array.add(new MethodCandidateInfo(constructor, substitutor, false, false, argumentList, null, argumentList.getExpressionTypes(), null));\n      }\n      CandidateInfo[] candidates = array.toArray(new CandidateInfo[array.size()]);\n      myResult = getExpectedArgumentTypesForMethodCall(candidates, argumentList, myExpr, myForCompletion);\n    }","id":1434,"modified_method":"private void getExpectedTypesForConstructorCall(@NotNull final PsiClass referencedClass,\n                                                    @NotNull final PsiExpressionList argumentList,\n                                                    final PsiSubstitutor substitutor) {\n      List<CandidateInfo> array = new ArrayList<CandidateInfo>();\n      for (PsiMethod constructor : referencedClass.getConstructors()) {\n        array.add(new MethodCandidateInfo(constructor, substitutor, false, false, argumentList, null, argumentList.getExpressionTypes(), null));\n      }\n      CandidateInfo[] candidates = array.toArray(new CandidateInfo[array.size()]);\n      Collections.addAll(myResult, getExpectedArgumentTypesForMethodCall(candidates, argumentList, myExpr, myForCompletion));\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void visitMethodReturnType(final PsiMethod scopeMethod, PsiType type, boolean tailTypeSemicolon) {\n      if (type != null) {\n        NullableComputable<String> expectedName;\n        if (PropertyUtil.isSimplePropertyAccessor(scopeMethod)) {\n          expectedName = new NullableComputable<String>() {\n            @Override\n            public String compute() {\n              return PropertyUtil.getPropertyName(scopeMethod);\n            }\n          };\n        }\n        else {\n          expectedName = ExpectedTypeInfoImpl.NULL;\n        }\n        ExpectedTypeInfoImpl info = createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type,\n                                                   tailTypeSemicolon ? TailType.SEMICOLON : TailType.NONE, null, expectedName);\n\n        myResult = new ExpectedTypeInfo[]{info};\n      }\n      else {\n        myResult = ExpectedTypeInfo.EMPTY_ARRAY;\n      }\n    }","id":1435,"modified_method":"private void visitMethodReturnType(final PsiMethod scopeMethod, PsiType type, boolean tailTypeSemicolon) {\n      if (type != null) {\n        NullableComputable<String> expectedName;\n        if (PropertyUtil.isSimplePropertyAccessor(scopeMethod)) {\n          expectedName = new NullableComputable<String>() {\n            @Override\n            public String compute() {\n              return PropertyUtil.getPropertyName(scopeMethod);\n            }\n          };\n        }\n        else {\n          expectedName = ExpectedTypeInfoImpl.NULL;\n        }\n\n        myResult.add(createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type,\n                                                   tailTypeSemicolon ? TailType.SEMICOLON : TailType.NONE, null, expectedName));\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitSwitchLabelStatement(@NotNull final PsiSwitchLabelStatement statement) {\n      final PsiSwitchStatement switchStatement = statement.getEnclosingSwitchStatement();\n      if (switchStatement != null) {\n        final PsiExpression expression = switchStatement.getExpression();\n        if (expression != null) {\n          final PsiType type = expression.getType();\n          if (type != null) {\n            myResult = new ExpectedTypeInfo[]{createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type, TailType.CASE_COLON)};\n          }\n        }\n      }\n    }","id":1436,"modified_method":"@Override\n    public void visitSwitchLabelStatement(@NotNull final PsiSwitchLabelStatement statement) {\n      final PsiSwitchStatement switchStatement = statement.getEnclosingSwitchStatement();\n      if (switchStatement != null) {\n        final PsiExpression expression = switchStatement.getExpression();\n        if (expression != null) {\n          final PsiType type = expression.getType();\n          if (type != null) {\n            myResult.add(createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type, TailType.CASE_COLON));\n          }\n        }\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitForStatement(@NotNull PsiForStatement statement) {\n      if (myExpr.equals(statement.getCondition())) {\n        ExpectedTypeInfoImpl info = createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY,\n                                                   PsiType.BOOLEAN, TailType.SEMICOLON);\n        myResult = new ExpectedTypeInfo[]{info};\n      }\n    }","id":1437,"modified_method":"@Override public void visitForStatement(@NotNull PsiForStatement statement) {\n      if (myExpr.equals(statement.getCondition())) {\n        myResult.add(createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY, PsiType.BOOLEAN, TailType.SEMICOLON));\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitArrayInitializerExpression(@NotNull PsiArrayInitializerExpression expr) {\n      PsiElement pParent = expr.getParent();\n      PsiType arrayType = null;\n      if (pParent instanceof PsiVariable) {\n        arrayType = ((PsiVariable)pParent).getType();\n      }\n      else if (pParent instanceof PsiNewExpression) {\n        arrayType = ((PsiNewExpression)pParent).getType();\n      }\n      else if (pParent instanceof PsiArrayInitializerExpression) {\n        PsiType type = ((PsiArrayInitializerExpression)pParent).getType();\n        if (type instanceof PsiArrayType) {\n          arrayType = ((PsiArrayType)type).getComponentType();\n        }\n      }\n\n      if (arrayType instanceof PsiArrayType) {\n        PsiType componentType = ((PsiArrayType)arrayType).getComponentType();\n        ExpectedTypeInfoImpl info = createInfoImpl(componentType, ExpectedTypeInfo.TYPE_OR_SUBTYPE,\n                                                   componentType, TailType.NONE);\n        myResult = new ExpectedTypeInfo[]{info};\n      }\n    }","id":1438,"modified_method":"@Override\n    public void visitArrayInitializerExpression(@NotNull PsiArrayInitializerExpression expr) {\n      PsiElement pParent = expr.getParent();\n      PsiType arrayType = null;\n      if (pParent instanceof PsiVariable) {\n        arrayType = ((PsiVariable)pParent).getType();\n      }\n      else if (pParent instanceof PsiNewExpression) {\n        arrayType = ((PsiNewExpression)pParent).getType();\n      }\n      else if (pParent instanceof PsiArrayInitializerExpression) {\n        PsiType type = ((PsiArrayInitializerExpression)pParent).getType();\n        if (type instanceof PsiArrayType) {\n          arrayType = ((PsiArrayType)type).getComponentType();\n        }\n      }\n\n      if (arrayType instanceof PsiArrayType) {\n        PsiType componentType = ((PsiArrayType)arrayType).getComponentType();\n        myResult.add(createInfoImpl(componentType, componentType));\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitPolyadicExpression(@NotNull PsiPolyadicExpression expr) {\n      PsiExpression[] operands = expr.getOperands();\n      final int index = Arrays.asList(operands).indexOf(myExpr);\n      assert index >= 0;\n\n      if (myForCompletion && index == 0) {\n        final MyParentVisitor visitor = new MyParentVisitor(expr, myForCompletion, myClassProvider, myVoidable, myUsedAfter);\n        myExpr = (PsiExpression)myExpr.getParent();\n        expr.getParent().accept(visitor);\n        myResult = visitor.getResult();\n        if (!(expr.getParent() instanceof PsiExpressionList)) {\n          for (int i = 0; i < myResult.length; i++) {\n            final ExpectedTypeInfo info = myResult[i];\n            myResult[i] = createInfoImpl(info.getType(), info.getKind(), info.getDefaultType(), TailType.NONE, info.getCalledMethod(),\n                                         new NullableComputable<String>() {\n                                           @Nullable\n                                           @Override\n                                           public String compute() {\n                                             return ((ExpectedTypeInfoImpl)info).getExpectedName();\n                                           }\n                                         });\n          }\n        }\n        return;\n      }\n      PsiExpression anotherExpr = index > 0 ? operands[0] : 1 < operands.length ? operands[1] : null;\n      PsiType anotherType = anotherExpr != null ? anotherExpr.getType() : null;\n      IElementType i = expr.getOperationTokenType();\n      if (i == JavaTokenType.MINUS ||\n          i == JavaTokenType.ASTERISK ||\n          i == JavaTokenType.DIV ||\n          i == JavaTokenType.PERC ||\n          i == JavaTokenType.LT ||\n          i == JavaTokenType.GT ||\n          i == JavaTokenType.LE ||\n          i == JavaTokenType.GE) {\n        if (anotherType == null) {\n          myResult = ExpectedTypeInfo.EMPTY_ARRAY;\n        }\n        else {\n          ExpectedTypeInfoImpl info = createInfoImpl(PsiType.DOUBLE, ExpectedTypeInfo.TYPE_OR_SUBTYPE,\n                                                     anotherType, TailType.NONE);\n          myResult = new ExpectedTypeInfo[]{info};\n        }\n      }\n      else if (i == JavaTokenType.PLUS) {\n        if (anotherType == null || anotherType.equalsToText(CommonClassNames.JAVA_LANG_STRING)) {\n          myResult = new ExpectedTypeInfo[]{createInfoImpl(PsiType.getJavaLangObject(expr.getManager(), expr.getResolveScope()), ExpectedTypeInfo.TYPE_OR_SUBTYPE, anotherType, TailType.NONE)};\n        }\n        else if (PsiType.DOUBLE.isAssignableFrom(anotherType)) {\n          myResult = new ExpectedTypeInfo[]{createInfoImpl(PsiType.DOUBLE, ExpectedTypeInfo.TYPE_OR_SUBTYPE, anotherType, TailType.NONE)};\n        }\n      }\n      else if (i == JavaTokenType.EQEQ || i == JavaTokenType.NE) {\n        ExpectedTypeInfo info = getEqualsType(anotherExpr);\n        myResult = info == null ? ExpectedTypeInfo.EMPTY_ARRAY : new ExpectedTypeInfo[]{info};\n      }\n      else if (i == JavaTokenType.LTLT || i == JavaTokenType.GTGT || i == JavaTokenType.GTGTGT) {\n        if (anotherType == null) {\n          myResult = ExpectedTypeInfo.EMPTY_ARRAY;\n        }\n        else {\n          myResult = new ExpectedTypeInfo[]{createInfoImpl(PsiType.LONG, ExpectedTypeInfo.TYPE_BETWEEN, PsiType.SHORT, TailType.NONE)};\n        }\n      }\n      else if (i == JavaTokenType.OROR || i == JavaTokenType.ANDAND) {\n        ExpectedTypeInfoImpl info = createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY,\n                                                   PsiType.BOOLEAN, TailType.NONE);\n        myResult = new ExpectedTypeInfo[]{info};\n      }\n      else if (i == JavaTokenType.OR || i == JavaTokenType.XOR || i == JavaTokenType.AND) {\n        if (anotherType == null) {\n          myResult = ExpectedTypeInfo.EMPTY_ARRAY;\n        }\n        else {\n          ExpectedTypeInfoImpl info;\n          if (PsiType.BOOLEAN.equals(anotherType)) {\n            info = createInfoImpl(anotherType, ExpectedTypeInfo.TYPE_STRICTLY, anotherType, TailType.NONE);\n          }\n          else {\n            info = createInfoImpl(PsiType.LONG, ExpectedTypeInfo.TYPE_OR_SUBTYPE, anotherType, TailType.NONE);\n          }\n          myResult = new ExpectedTypeInfo[]{info};\n        }\n      }\n    }","id":1439,"modified_method":"@Override\n    public void visitPolyadicExpression(@NotNull PsiPolyadicExpression expr) {\n      PsiExpression[] operands = expr.getOperands();\n      final int index = Arrays.asList(operands).indexOf(myExpr);\n      assert index >= 0;\n\n      if (myForCompletion && index == 0) {\n        final MyParentVisitor visitor = new MyParentVisitor(expr, myForCompletion, myClassProvider, myVoidable, myUsedAfter);\n        myExpr = (PsiExpression)myExpr.getParent();\n        expr.getParent().accept(visitor);\n        myResult.addAll(visitor.myResult);\n        if (!(expr.getParent() instanceof PsiExpressionList)) {\n          for (int i = 0; i < myResult.size(); i++) {\n            final ExpectedTypeInfo info = myResult.get(i);\n            myResult.set(i, createInfoImpl(info.getType(), info.getKind(), info.getDefaultType(), TailType.NONE, info.getCalledMethod(),\n                                           new NullableComputable<String>() {\n                                             @Nullable\n                                             @Override\n                                             public String compute() {\n                                               return ((ExpectedTypeInfoImpl)info).getExpectedName();\n                                             }\n                                           }\n            ));\n          }\n        }\n        return;\n      }\n      PsiExpression anotherExpr = index > 0 ? operands[0] : 1 < operands.length ? operands[1] : null;\n      PsiType anotherType = anotherExpr != null ? anotherExpr.getType() : null;\n      IElementType i = expr.getOperationTokenType();\n      if (i == JavaTokenType.MINUS ||\n          i == JavaTokenType.ASTERISK ||\n          i == JavaTokenType.DIV ||\n          i == JavaTokenType.PERC ||\n          i == JavaTokenType.LT ||\n          i == JavaTokenType.GT ||\n          i == JavaTokenType.LE ||\n          i == JavaTokenType.GE) {\n        if (anotherType != null) {\n          myResult.add(createInfoImpl(PsiType.DOUBLE, anotherType));\n        }\n      }\n      else if (i == JavaTokenType.PLUS) {\n        if (anotherType == null || anotherType.equalsToText(CommonClassNames.JAVA_LANG_STRING)) {\n          myResult.add(createInfoImpl(PsiType.getJavaLangObject(expr.getManager(), expr.getResolveScope()), anotherType));\n        }\n        else if (PsiType.DOUBLE.isAssignableFrom(anotherType)) {\n          myResult.add(createInfoImpl(PsiType.DOUBLE, anotherType));\n        }\n      }\n      else if (i == JavaTokenType.EQEQ || i == JavaTokenType.NE) {\n        ContainerUtil.addIfNotNull(myResult, getEqualsType(anotherExpr));\n      }\n      else if (i == JavaTokenType.LTLT || i == JavaTokenType.GTGT || i == JavaTokenType.GTGTGT) {\n        if (anotherType != null) {\n          myResult.add(createInfoImpl(PsiType.LONG, ExpectedTypeInfo.TYPE_BETWEEN, PsiType.SHORT, TailType.NONE));\n        }\n      }\n      else if (i == JavaTokenType.OROR || i == JavaTokenType.ANDAND) {\n        myResult.add(createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY, PsiType.BOOLEAN, TailType.NONE));\n      }\n      else if (i == JavaTokenType.OR || i == JavaTokenType.XOR || i == JavaTokenType.AND) {\n        if (anotherType != null) {\n          ExpectedTypeInfoImpl info;\n          if (PsiType.BOOLEAN.equals(anotherType)) {\n            info = createInfoImpl(anotherType, ExpectedTypeInfo.TYPE_STRICTLY, anotherType, TailType.NONE);\n          }\n          else {\n            info = createInfoImpl(PsiType.LONG, anotherType);\n          }\n          myResult.add(info);\n        }\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitAssertStatement(@NotNull PsiAssertStatement statement) {\n      if (statement.getAssertDescription() == myExpr) {\n        final PsiClassType stringType = PsiType.getJavaLangString(myExpr.getManager(), myExpr.getResolveScope());\n        ExpectedTypeInfoImpl info = createInfoImpl(stringType, ExpectedTypeInfo.TYPE_STRICTLY,\n                                                   stringType, TailType.SEMICOLON);\n        myResult = new ExpectedTypeInfo[]{info};\n      }\n      else {\n        ExpectedTypeInfoImpl info = createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY,\n                                                   PsiType.BOOLEAN, TailType.SEMICOLON);\n        myResult = new ExpectedTypeInfo[]{info};\n      }\n    }","id":1440,"modified_method":"@Override\n    public void visitAssertStatement(@NotNull PsiAssertStatement statement) {\n      if (statement.getAssertDescription() == myExpr) {\n        final PsiClassType stringType = PsiType.getJavaLangString(myExpr.getManager(), myExpr.getResolveScope());\n        myResult.add(createInfoImpl(stringType, ExpectedTypeInfo.TYPE_STRICTLY, stringType, TailType.SEMICOLON));\n      }\n      else {\n        myResult.add(createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY, PsiType.BOOLEAN, TailType.SEMICOLON));\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n    private ExpectedTypeInfo[] anyArrayType() {\n      PsiType objType = PsiType.getJavaLangObject(myExpr.getManager(), myExpr.getResolveScope()).createArrayType();\n      ExpectedTypeInfo info = createInfoImpl(objType, ExpectedTypeInfo.TYPE_OR_SUBTYPE, objType,\n                                             TailType.NONE);\n      ExpectedTypeInfo info1 = createInfoImpl(PsiType.DOUBLE.createArrayType(), ExpectedTypeInfo.TYPE_OR_SUBTYPE,\n                                              PsiType.INT.createArrayType(), TailType.NONE);\n      PsiType booleanType = PsiType.BOOLEAN.createArrayType();\n      ExpectedTypeInfo info2 = createInfoImpl(booleanType, ExpectedTypeInfo.TYPE_STRICTLY, booleanType,\n                                              TailType.NONE);\n      return new ExpectedTypeInfo[]{info, info1, info2};\n    }","id":1441,"modified_method":"@NotNull\n    private List<ExpectedTypeInfo> anyArrayType() {\n      PsiType objType = PsiType.getJavaLangObject(myExpr.getManager(), myExpr.getResolveScope()).createArrayType();\n      ExpectedTypeInfo info = createInfoImpl(objType, objType);\n      ExpectedTypeInfo info1 = createInfoImpl(PsiType.DOUBLE.createArrayType(), PsiType.INT.createArrayType());\n      PsiType booleanType = PsiType.BOOLEAN.createArrayType();\n      ExpectedTypeInfo info2 = createInfoImpl(booleanType, ExpectedTypeInfo.TYPE_STRICTLY, booleanType, TailType.NONE);\n      return Arrays.asList(info, info1, info2);\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitForeachStatement(@NotNull PsiForeachStatement statement) {\n      if (myExpr.equals(statement.getIteratedValue())) {\n        PsiType type = statement.getIterationParameter().getType();\n\n        PsiType arrayType = type.createArrayType();\n        ExpectedTypeInfoImpl info1 = createInfoImpl(arrayType, ExpectedTypeInfo.TYPE_OR_SUBTYPE,\n                                                    arrayType, TailType.NONE);\n\n        PsiManager manager = statement.getManager();\n        PsiElementFactory factory = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();\n        PsiClass iterableClass =\n          JavaPsiFacade.getInstance(manager.getProject()).findClass(\"java.lang.Iterable\", statement.getResolveScope());\n        if (iterableClass == null || iterableClass.getTypeParameters().length != 1) {\n          myResult = new ExpectedTypeInfo[]{info1};\n        }\n        else {\n          Map<PsiTypeParameter, PsiType> map = new HashMap<PsiTypeParameter, PsiType>();\n          map.put(iterableClass.getTypeParameters()[0], PsiWildcardType.createExtends(manager, type));\n          PsiSubstitutor substitutor = factory.createSubstitutor(map);\n          PsiType iterableType = factory.createType(iterableClass, substitutor);\n          ExpectedTypeInfoImpl info2 = createInfoImpl(iterableType, ExpectedTypeInfo.TYPE_OR_SUBTYPE,\n                                                      iterableType, TailType.NONE);\n\n          myResult = new ExpectedTypeInfo[]{info1, info2};\n        }\n      }\n    }","id":1442,"modified_method":"@Override public void visitForeachStatement(@NotNull PsiForeachStatement statement) {\n      if (myExpr.equals(statement.getIteratedValue())) {\n        PsiType type = statement.getIterationParameter().getType();\n\n        PsiType arrayType = type.createArrayType();\n        myResult.add(createInfoImpl(arrayType, arrayType));\n\n        PsiManager manager = statement.getManager();\n        PsiElementFactory factory = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();\n        PsiClass iterableClass =\n          JavaPsiFacade.getInstance(manager.getProject()).findClass(\"java.lang.Iterable\", statement.getResolveScope());\n        if (iterableClass != null && iterableClass.getTypeParameters().length == 1) {\n          Map<PsiTypeParameter, PsiType> map = new HashMap<PsiTypeParameter, PsiType>();\n          map.put(iterableClass.getTypeParameters()[0], PsiWildcardType.createExtends(manager, type));\n          PsiType iterableType = factory.createType(iterableClass, factory.createSubstitutor(map));\n          myResult.add(createInfoImpl(iterableType, iterableType));\n        }\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitAnnotationMethod(@NotNull final PsiAnnotationMethod method) {\n      if (myExpr == method.getDefaultValue()) {\n        final PsiType type = method.getReturnType();\n        if (type != null) {\n          myResult = new ExpectedTypeInfo[]{createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type, TailType.SEMICOLON)};\n        }\n      }\n    }","id":1443,"modified_method":"@Override\n    public void visitAnnotationMethod(@NotNull final PsiAnnotationMethod method) {\n      if (myExpr == method.getDefaultValue()) {\n        final PsiType type = method.getReturnType();\n        if (type != null) {\n          myResult.add(createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type, TailType.SEMICOLON));\n        }\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitExpressionList(@NotNull PsiExpressionList list) {\n      PsiResolveHelper helper = JavaPsiFacade.getInstance(list.getProject()).getResolveHelper();\n      if (list.getParent() instanceof PsiMethodCallExpression) {\n        PsiMethodCallExpression methodCall = (PsiMethodCallExpression)list.getParent();\n        CandidateInfo[] candidates = helper.getReferencedMethodCandidates(methodCall, false);\n        myResult = getExpectedArgumentTypesForMethodCall(candidates, list, myExpr, myForCompletion);\n      }\n      else if (list.getParent() instanceof PsiEnumConstant) {\n        getExpectedArgumentsTypesForEnumConstant((PsiEnumConstant)list.getParent(), list);\n      }\n      else if (list.getParent() instanceof PsiNewExpression) {\n        getExpectedArgumentsTypesForNewExpression((PsiNewExpression)list.getParent(), list);\n      }\n      else if (list.getParent() instanceof PsiAnonymousClass) {\n        getExpectedArgumentsTypesForNewExpression((PsiNewExpression)list.getParent().getParent(), list);\n      }\n    }","id":1444,"modified_method":"@Override public void visitExpressionList(@NotNull PsiExpressionList list) {\n      PsiResolveHelper helper = JavaPsiFacade.getInstance(list.getProject()).getResolveHelper();\n      if (list.getParent() instanceof PsiMethodCallExpression) {\n        PsiMethodCallExpression methodCall = (PsiMethodCallExpression)list.getParent();\n        CandidateInfo[] candidates = helper.getReferencedMethodCandidates(methodCall, false);\n        Collections.addAll(myResult, getExpectedArgumentTypesForMethodCall(candidates, list, myExpr, myForCompletion));\n      }\n      else if (list.getParent() instanceof PsiEnumConstant) {\n        getExpectedArgumentsTypesForEnumConstant((PsiEnumConstant)list.getParent(), list);\n      }\n      else if (list.getParent() instanceof PsiNewExpression) {\n        getExpectedArgumentsTypesForNewExpression((PsiNewExpression)list.getParent(), list);\n      }\n      else if (list.getParent() instanceof PsiAnonymousClass) {\n        getExpectedArgumentsTypesForNewExpression((PsiNewExpression)list.getParent().getParent(), list);\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n    public ExpectedTypeInfo[] getResult() {\n      return myResult;\n    }","id":1445,"modified_method":"@NotNull\n    public ExpectedTypeInfo[] getResult() {\n      return myResult.toArray(new ExpectedTypeInfo[myResult.size()]);\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitConditionalExpression(@NotNull PsiConditionalExpression expr) {\n      if (myExpr.equals(expr.getCondition())) {\n        if (myForCompletion) {\n          myExpr = expr;\n          myExpr.getParent().accept(this);\n          return;\n        }\n\n        ExpectedTypeInfo info = createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY,\n                                               PsiType.BOOLEAN, TailType.NONE);\n        myResult = new ExpectedTypeInfo[]{info};\n      }\n      else if (myExpr.equals(expr.getThenExpression())) {\n        ExpectedTypeInfo[] types = getExpectedTypes(expr, myForCompletion);\n        for (int i = 0; i < types.length; i++) {\n          final ExpectedTypeInfo info = types[i];\n          types[i] = createInfoImpl(info.getType(), info.getKind(), info.getDefaultType(), TailType.COND_EXPR_COLON, info.getCalledMethod(),\n                                    new NullableComputable<String>() {\n                                      @Nullable\n                                      @Override\n                                      public String compute() {\n                                        return ((ExpectedTypeInfoImpl)info).getExpectedName();\n                                      }\n                                    });\n        }\n        myResult = types;\n      }\n      else {\n        if (!myExpr.equals(expr.getElseExpression())) {\n          LOG.error(Arrays.asList(expr.getChildren()) + \"; \" + myExpr);\n        }\n        myResult = getExpectedTypes(expr, myForCompletion);\n      }\n    }","id":1446,"modified_method":"@Override public void visitConditionalExpression(@NotNull PsiConditionalExpression expr) {\n      if (myExpr.equals(expr.getCondition())) {\n        if (myForCompletion) {\n          myExpr = expr;\n          myExpr.getParent().accept(this);\n          return;\n        }\n\n        myResult.add(createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY, PsiType.BOOLEAN, TailType.NONE));\n      }\n      else if (myExpr.equals(expr.getThenExpression())) {\n        ExpectedTypeInfo[] types = getExpectedTypes(expr, myForCompletion);\n        for (int i = 0; i < types.length; i++) {\n          final ExpectedTypeInfo info = types[i];\n          types[i] = createInfoImpl(info.getType(), info.getKind(), info.getDefaultType(), TailType.COND_EXPR_COLON, info.getCalledMethod(),\n                                    new NullableComputable<String>() {\n                                      @Nullable\n                                      @Override\n                                      public String compute() {\n                                        return ((ExpectedTypeInfoImpl)info).getExpectedName();\n                                      }\n                                    });\n        }\n        Collections.addAll(myResult, types);\n      }\n      else {\n        if (!myExpr.equals(expr.getElseExpression())) {\n          LOG.error(Arrays.asList(expr.getChildren()) + \"; \" + myExpr);\n        }\n        Collections.addAll(myResult, getExpectedTypes(expr, myForCompletion));\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitNameValuePair(@NotNull PsiNameValuePair pair) {\n      final PsiType type = getAnnotationMethodType(pair);\n      if (type == null) return;\n      final ExpectedTypeInfoImpl info = createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type, TailType.UNKNOWN);\n      if (type instanceof PsiArrayType) {\n        PsiType componentType = ((PsiArrayType)type).getComponentType();\n        myResult = new ExpectedTypeInfo[]{info, createInfoImpl(componentType, ExpectedTypeInfo.TYPE_OR_SUBTYPE, componentType, TailType.UNKNOWN)};\n      }\n      else {\n        myResult = new ExpectedTypeInfo[] {info};\n      }\n    }","id":1447,"modified_method":"@Override public void visitNameValuePair(@NotNull PsiNameValuePair pair) {\n      final PsiType type = getAnnotationMethodType(pair);\n      if (type == null) return;\n      myResult.add(createInfoImpl(type, type));\n      if (type instanceof PsiArrayType) {\n        PsiType componentType = ((PsiArrayType)type).getComponentType();\n        myResult.add(createInfoImpl(componentType, componentType));\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitSynchronizedStatement(@NotNull PsiSynchronizedStatement statement) {\n      PsiElementFactory factory = JavaPsiFacade.getInstance(statement.getProject()).getElementFactory();\n      PsiType objectType = factory.createTypeByFQClassName(CommonClassNames.JAVA_LANG_OBJECT, myExpr.getResolveScope());\n      myResult = new ExpectedTypeInfo[]{createInfoImpl(objectType, ExpectedTypeInfo.TYPE_OR_SUBTYPE, objectType, TailType.NONE)};\n    }","id":1448,"modified_method":"@Override public void visitSynchronizedStatement(@NotNull PsiSynchronizedStatement statement) {\n      PsiElementFactory factory = JavaPsiFacade.getInstance(statement.getProject()).getElementFactory();\n      PsiType objectType = factory.createTypeByFQClassName(CommonClassNames.JAVA_LANG_OBJECT, myExpr.getResolveScope());\n      myResult.add(createInfoImpl(objectType, objectType));\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitExpressionStatement(PsiExpressionStatement statement) {\n      if (myVoidable) {\n        myResult = new ExpectedTypeInfo[]{VOID_EXPECTED};\n      }\n    }","id":1449,"modified_method":"@Override\n    public void visitExpressionStatement(PsiExpressionStatement statement) {\n      if (myVoidable) {\n        myResult.add(VOID_EXPECTED);\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitDoWhileStatement(PsiDoWhileStatement statement) {\n      ExpectedTypeInfoImpl info = createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY,\n                                                 PsiType.BOOLEAN, TailTypes.WHILE_RPARENTH);\n      myResult = new ExpectedTypeInfo[]{info};\n    }","id":1450,"modified_method":"@Override public void visitDoWhileStatement(PsiDoWhileStatement statement) {\n      myResult.add(createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY, PsiType.BOOLEAN, TailTypes.WHILE_RPARENTH));\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitIfStatement(PsiIfStatement statement) {\n      ExpectedTypeInfoImpl info = createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY,\n                                                 PsiType.BOOLEAN, TailTypes.IF_RPARENTH);\n      myResult = new ExpectedTypeInfo[]{info};\n    }","id":1451,"modified_method":"@Override public void visitIfStatement(PsiIfStatement statement) {\n      myResult.add(createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY, PsiType.BOOLEAN, TailTypes.IF_RPARENTH));\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitPrefixExpression(@NotNull PsiPrefixExpression expr) {\n      IElementType i = expr.getOperationTokenType();\n      final PsiType type = expr.getType();\n      final TailType tailType = expr.getParent() instanceof PsiAssignmentExpression && ((PsiAssignmentExpression) expr.getParent()).getRExpression() == expr ?\n                                getAssignmentRValueTailType((PsiAssignmentExpression) expr.getParent()) :\n                                TailType.NONE;\n      if (i == JavaTokenType.PLUSPLUS || i == JavaTokenType.MINUSMINUS || i == JavaTokenType.TILDE) {\n        ExpectedTypeInfoImpl info;\n        if (myUsedAfter && type != null) {\n          info = createInfoImpl(type, ExpectedTypeInfo.TYPE_STRICTLY, type, tailType);\n        }\n        else {\n          if (type != null) {\n            info = createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUPERTYPE, PsiType.INT, tailType);\n          }\n          else {\n            info = createInfoImpl(PsiType.LONG, ExpectedTypeInfo.TYPE_OR_SUBTYPE, PsiType.INT, tailType);\n          }\n        }\n        myResult = new ExpectedTypeInfo[]{info};\n      }\n      else if (i == JavaTokenType.PLUS || i == JavaTokenType.MINUS) {\n        ExpectedTypeInfoImpl info = createInfoImpl(PsiType.DOUBLE, ExpectedTypeInfo.TYPE_OR_SUBTYPE,\n                                                   PsiType.INT, tailType);\n        myResult = new ExpectedTypeInfo[]{info};\n      }\n      else if (i == JavaTokenType.EXCL) {\n        ExpectedTypeInfoImpl info = createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY,\n                                                   PsiType.BOOLEAN, tailType);\n        myResult = new ExpectedTypeInfo[]{info};\n      }\n    }","id":1452,"modified_method":"@Override\n    public void visitPrefixExpression(@NotNull PsiPrefixExpression expr) {\n      IElementType i = expr.getOperationTokenType();\n      final PsiType type = expr.getType();\n      final TailType tailType = expr.getParent() instanceof PsiAssignmentExpression && ((PsiAssignmentExpression) expr.getParent()).getRExpression() == expr ?\n                                getAssignmentRValueTailType((PsiAssignmentExpression) expr.getParent()) :\n                                TailType.NONE;\n      if (i == JavaTokenType.PLUSPLUS || i == JavaTokenType.MINUSMINUS || i == JavaTokenType.TILDE) {\n        ExpectedTypeInfoImpl info;\n        if (myUsedAfter && type != null) {\n          info = createInfoImpl(type, ExpectedTypeInfo.TYPE_STRICTLY, type, tailType);\n        }\n        else {\n          if (type != null) {\n            info = createInfoImpl(type, ExpectedTypeInfo.TYPE_OR_SUPERTYPE, PsiType.INT, tailType);\n          }\n          else {\n            info = createInfoImpl(PsiType.LONG, ExpectedTypeInfo.TYPE_OR_SUBTYPE, PsiType.INT, tailType);\n          }\n        }\n        myResult.add(info);\n      }\n      else if (i == JavaTokenType.PLUS || i == JavaTokenType.MINUS) {\n        myResult.add(createInfoImpl(PsiType.DOUBLE, ExpectedTypeInfo.TYPE_OR_SUBTYPE, PsiType.INT, tailType));\n      }\n      else if (i == JavaTokenType.EXCL) {\n        myResult.add(createInfoImpl(PsiType.BOOLEAN, ExpectedTypeInfo.TYPE_STRICTLY, PsiType.BOOLEAN, tailType));\n      }\n    }","commit_id":"2203503e1eaed4102dd30f8ad1485017fe79b16f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Process pipelined HTTP requests using the specified input and output\n     * streams.\n     *\n     * @param socketWrapper Socket from which the HTTP requests will be read\n     *               and the HTTP responses will be written.\n     *  \n     * @throws IOException error during an I/O operation\n     */\n    @Override\n    public SocketState process(SocketWrapper<Long> socketWrapper)\n        throws IOException {\n        RequestInfo rp = request.getRequestProcessor();\n        rp.setStage(org.apache.coyote.Constants.STAGE_PARSE);\n\n        // Setting up the socket\n        this.socket = socketWrapper;\n        inputBuffer.init(socketWrapper, endpoint);\n        outputBuffer.init(socketWrapper, endpoint);\n\n        // Flags\n        error = false;\n        keepAlive = true;\n        comet = false;\n        openSocket = false;\n        sendfileInProgress = false;\n        readComplete = true;\n        if (endpoint.getUsePolling()) {\n            keptAlive = false;\n        } else {\n            keptAlive = socketWrapper.isKeptAlive();\n        }\n\n        if (disableKeepAlive()) {\n            socketWrapper.setKeepAliveLeft(0);\n        }\n\n        long socketRef = socketWrapper.getSocket().longValue();\n\n        while (!error && keepAlive && !comet && !isAsync() &&\n                !endpoint.isPaused()) {\n\n            // Parsing the request header\n            try {\n                setRequestLineReadTimeout();\n                \n                if (!inputBuffer.parseRequestLine(keptAlive)) {\n                    if (handleIncompleteRequestLineRead()) {\n                        break;\n                    }\n                }\n                if (!endpoint.isPaused()) {\n                    request.setStartTime(System.currentTimeMillis());\n                    keptAlive = true;\n                    inputBuffer.parseHeaders();\n                    if (!disableUploadTimeout) {\n                        Socket.timeoutSet(socketRef,\n                                connectionUploadTimeout * 1000);\n                    }\n                }\n            } catch (IOException e) {\n                if (log.isDebugEnabled()) {\n                    log.debug(sm.getString(\"http11processor.header.parse\"), e);\n                }\n                error = true;\n                break;\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                if (log.isDebugEnabled()) {\n                    log.debug(sm.getString(\"http11processor.header.parse\"), t);\n                }\n                // 400 - Bad Request\n                response.setStatus(400);\n                adapter.log(request, response, 0);\n                error = true;\n            }\n\n            if (!error) {\n                // Setting up filters, and parse some request headers\n                rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE);\n                try {\n                    prepareRequest();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    if (log.isDebugEnabled()) {\n                        log.debug(sm.getString(\"http11processor.request.prepare\"), t);\n                    }\n                    // 400 - Internal Server Error\n                    response.setStatus(400);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            if (maxKeepAliveRequests == 1) {\n                keepAlive = false;\n            } else if (maxKeepAliveRequests > 0 &&\n                    socketWrapper.decrementKeepAlive() <= 0) {\n                keepAlive = false;\n            }\n\n            // Process the request in the adapter\n            if (!error) {\n                try {\n                    rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);\n                    adapter.service(request, response);\n                    // Handle when the response was committed before a serious\n                    // error occurred.  Throwing a ServletException should both\n                    // set the status to 500 and set the errorException.\n                    // If we fail here, then the response is likely already\n                    // committed, so we can't try and set headers.\n                    if(keepAlive && !error) { // Avoid checking twice.\n                        error = response.getErrorException() != null ||\n                                (!isAsync() &&\n                                statusDropsConnection(response.getStatus()));\n                    }\n                    setCometTimeouts(socketWrapper);\n                } catch (InterruptedIOException e) {\n                    error = true;\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    log.error(sm.getString(\"http11processor.request.process\"), t);\n                    // 500 - Internal Server Error\n                    response.setStatus(500);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            // Finish the handling of the request\n            rp.setStage(org.apache.coyote.Constants.STAGE_ENDINPUT);\n\n            if (!isAsync() && !comet) {\n                if (error) {\n                    // If we know we are closing the connection, don't drain\n                    // input. This way uploading a 100GB file doesn't tie up the\n                    // thread if the servlet has rejected it.\n                    inputBuffer.setSwallowInput(false);\n                }\n                endRequest();\n            }\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_ENDOUTPUT);\n\n            // If there was an error, make sure the request is counted as\n            // and error, and update the statistics counter\n            if (error) {\n                response.setStatus(500);\n            }\n            request.updateCounters();\n\n            if (!comet && !isAsync()) {\n                // Next request\n                inputBuffer.nextRequest();\n                outputBuffer.nextRequest();\n            }\n\n            if (!disableUploadTimeout) {\n                Socket.timeoutSet(socketRef, endpoint.getSoTimeout() * 1000);\n            }\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);\n\n            if (breakKeepAliveLoop(socketWrapper)) {\n                break;\n            }\n        }\n\n        rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);\n\n        if (error || endpoint.isPaused()) {\n            return SocketState.CLOSED;\n        } else if (comet  || isAsync()) {\n            return SocketState.LONG;\n        } else {\n            if (sendfileInProgress) {\n                return SocketState.SENDFILE;\n            } else {\n                if (openSocket) {\n                    if (readComplete) {\n                        return SocketState.OPEN;\n                    } else {\n                        return SocketState.LONG;\n                    }\n                } else {\n                    return SocketState.CLOSED;\n                }\n            }\n        }\n    }","id":1453,"modified_method":"/**\n     * Process pipelined HTTP requests using the specified input and output\n     * streams.\n     *\n     * @param socketWrapper Socket from which the HTTP requests will be read\n     *               and the HTTP responses will be written.\n     *  \n     * @throws IOException error during an I/O operation\n     */\n    @Override\n    public SocketState process(SocketWrapper<Long> socketWrapper)\n        throws IOException {\n        RequestInfo rp = request.getRequestProcessor();\n        rp.setStage(org.apache.coyote.Constants.STAGE_PARSE);\n\n        // Setting up the socket\n        this.socket = socketWrapper;\n        inputBuffer.init(socketWrapper, endpoint);\n        outputBuffer.init(socketWrapper, endpoint);\n\n        // Flags\n        error = false;\n        keepAlive = true;\n        comet = false;\n        openSocket = false;\n        sendfileInProgress = false;\n        readComplete = true;\n        if (endpoint.getUsePolling()) {\n            keptAlive = false;\n        } else {\n            keptAlive = socketWrapper.isKeptAlive();\n        }\n\n        if (disableKeepAlive()) {\n            socketWrapper.setKeepAliveLeft(0);\n        }\n\n        long socketRef = socketWrapper.getSocket().longValue();\n\n        while (!error && keepAlive && !comet && !isAsync() &&\n                !endpoint.isPaused()) {\n\n            // Parsing the request header\n            try {\n                setRequestLineReadTimeout();\n                \n                if (!inputBuffer.parseRequestLine(keptAlive)) {\n                    if (handleIncompleteRequestLineRead()) {\n                        break;\n                    }\n                }\n                \n                if (endpoint.isPaused()) {\n                    // 503 - Service unavailable\n                    response.setStatus(503);\n                    adapter.log(request, response, 0);\n                    error = true;\n                } else {\n                    request.setStartTime(System.currentTimeMillis());\n                    keptAlive = true;\n                    inputBuffer.parseHeaders();\n                    if (!disableUploadTimeout) {\n                        Socket.timeoutSet(socketRef,\n                                connectionUploadTimeout * 1000);\n                    }\n                }\n            } catch (IOException e) {\n                if (log.isDebugEnabled()) {\n                    log.debug(sm.getString(\"http11processor.header.parse\"), e);\n                }\n                error = true;\n                break;\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                if (log.isDebugEnabled()) {\n                    log.debug(sm.getString(\"http11processor.header.parse\"), t);\n                }\n                // 400 - Bad Request\n                response.setStatus(400);\n                adapter.log(request, response, 0);\n                error = true;\n            }\n\n            if (!error) {\n                // Setting up filters, and parse some request headers\n                rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE);\n                try {\n                    prepareRequest();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    if (log.isDebugEnabled()) {\n                        log.debug(sm.getString(\"http11processor.request.prepare\"), t);\n                    }\n                    // 400 - Internal Server Error\n                    response.setStatus(400);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            if (maxKeepAliveRequests == 1) {\n                keepAlive = false;\n            } else if (maxKeepAliveRequests > 0 &&\n                    socketWrapper.decrementKeepAlive() <= 0) {\n                keepAlive = false;\n            }\n\n            // Process the request in the adapter\n            if (!error) {\n                try {\n                    rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);\n                    adapter.service(request, response);\n                    // Handle when the response was committed before a serious\n                    // error occurred.  Throwing a ServletException should both\n                    // set the status to 500 and set the errorException.\n                    // If we fail here, then the response is likely already\n                    // committed, so we can't try and set headers.\n                    if(keepAlive && !error) { // Avoid checking twice.\n                        error = response.getErrorException() != null ||\n                                (!isAsync() &&\n                                statusDropsConnection(response.getStatus()));\n                    }\n                    setCometTimeouts(socketWrapper);\n                } catch (InterruptedIOException e) {\n                    error = true;\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    log.error(sm.getString(\"http11processor.request.process\"), t);\n                    // 500 - Internal Server Error\n                    response.setStatus(500);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            // Finish the handling of the request\n            rp.setStage(org.apache.coyote.Constants.STAGE_ENDINPUT);\n\n            if (!isAsync() && !comet) {\n                if (error) {\n                    // If we know we are closing the connection, don't drain\n                    // input. This way uploading a 100GB file doesn't tie up the\n                    // thread if the servlet has rejected it.\n                    inputBuffer.setSwallowInput(false);\n                }\n                endRequest();\n            }\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_ENDOUTPUT);\n\n            // If there was an error, make sure the request is counted as\n            // and error, and update the statistics counter\n            if (error) {\n                response.setStatus(500);\n            }\n            request.updateCounters();\n\n            if (!comet && !isAsync()) {\n                // Next request\n                inputBuffer.nextRequest();\n                outputBuffer.nextRequest();\n            }\n\n            if (!disableUploadTimeout) {\n                Socket.timeoutSet(socketRef, endpoint.getSoTimeout() * 1000);\n            }\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);\n\n            if (breakKeepAliveLoop(socketWrapper)) {\n                break;\n            }\n        }\n\n        rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);\n\n        if (error || endpoint.isPaused()) {\n            return SocketState.CLOSED;\n        } else if (comet  || isAsync()) {\n            return SocketState.LONG;\n        } else {\n            if (sendfileInProgress) {\n                return SocketState.SENDFILE;\n            } else {\n                if (openSocket) {\n                    if (readComplete) {\n                        return SocketState.OPEN;\n                    } else {\n                        return SocketState.LONG;\n                    }\n                } else {\n                    return SocketState.CLOSED;\n                }\n            }\n        }\n    }","commit_id":"cc8d09db52c3c1bdf5b79ab746ccdfc34465e78b","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Process pipelined HTTP requests using the specified input and output\n     * streams.\n     *\n     * @param socketWrapper Socket from which the HTTP requests will be read\n     *               and the HTTP responses will be written.\n     *  \n     * @throws IOException error during an I/O operation\n     */\n    @Override\n    public SocketState process(SocketWrapper<NioChannel> socketWrapper)\n        throws IOException {\n        RequestInfo rp = request.getRequestProcessor();\n        rp.setStage(org.apache.coyote.Constants.STAGE_PARSE);\n\n        // Setting up the socket\n        this.socket = socketWrapper;\n        inputBuffer.init(socketWrapper, endpoint);\n        outputBuffer.init(socketWrapper, endpoint);\n\n        // Flags\n        error = false;\n        keepAlive = true;\n        comet = false;\n        openSocket = false;\n        sendfileInProgress = false;\n        readComplete = true;\n        if (endpoint.getUsePolling()) {\n            keptAlive = false;\n        } else {\n            keptAlive = socketWrapper.isKeptAlive();\n        }\n        \n        if (disableKeepAlive()) {\n            socketWrapper.setKeepAliveLeft(0);\n        }\n\n        while (!error && keepAlive && !comet && !isAsync() &&\n                !endpoint.isPaused()) {\n\n            // Parsing the request header\n            try {\n                setRequestLineReadTimeout();\n                \n                if (!inputBuffer.parseRequestLine(keptAlive)) {\n                    if (handleIncompleteRequestLineRead()) {\n                        break;\n                    }\n                }\n                if (!endpoint.isPaused()) {\n                    request.setStartTime(System.currentTimeMillis());\n                    keptAlive = true;\n                    if ( !inputBuffer.parseHeaders() ) {\n                        //we've read part of the request, don't recycle it\n                        //instead associate it with the socket\n                        openSocket = true;\n                        readComplete = false;\n                        break;\n                    }\n                    if (!disableUploadTimeout) { //only for body, not for request headers\n                        socketWrapper.getSocket().getIOChannel().socket().setSoTimeout(\n                                connectionUploadTimeout);\n                    }\n                }\n            } catch (IOException e) {\n                if (log.isDebugEnabled()) {\n                    log.debug(sm.getString(\"http11processor.header.parse\"), e);\n                }\n                error = true;\n                break;\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                if (log.isDebugEnabled()) {\n                    log.debug(sm.getString(\"http11processor.header.parse\"), t);\n                }\n                // 400 - Bad Request\n                response.setStatus(400);\n                adapter.log(request, response, 0);\n                error = true;\n            }\n\n            if (!error) {\n                // Setting up filters, and parse some request headers\n                rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE);\n                try {\n                    prepareRequest();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    if (log.isDebugEnabled()) {\n                        log.debug(sm.getString(\"http11processor.request.prepare\"), t);\n                    }\n                    // 400 - Internal Server Error\n                    response.setStatus(400);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n            \n            if (maxKeepAliveRequests == 1) {\n                keepAlive = false;\n            } else if (maxKeepAliveRequests > 0 &&\n                    socketWrapper.decrementKeepAlive() <= 0) {\n                keepAlive = false;\n            }\n\n            // Process the request in the adapter\n            if (!error) {\n                try {\n                    rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);\n                    adapter.service(request, response);\n                    // Handle when the response was committed before a serious\n                    // error occurred.  Throwing a ServletException should both\n                    // set the status to 500 and set the errorException.\n                    // If we fail here, then the response is likely already\n                    // committed, so we can't try and set headers.\n                    if(keepAlive && !error) { // Avoid checking twice.\n                        error = response.getErrorException() != null ||\n                                (!isAsync() &&\n                                statusDropsConnection(response.getStatus()));\n                    }\n                    setCometTimeouts(socketWrapper);\n                } catch (InterruptedIOException e) {\n                    error = true;\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    log.error(sm.getString(\"http11processor.request.process\"), t);\n                    // 500 - Internal Server Error\n                    response.setStatus(500);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            // Finish the handling of the request\n            rp.setStage(org.apache.coyote.Constants.STAGE_ENDINPUT);\n\n            if (!isAsync() && !comet) {\n                if(error) {\n                    // If we know we are closing the connection, don't drain\n                    // input. This way uploading a 100GB file doesn't tie up the\n                    // thread if the servlet has rejected it.\n                    inputBuffer.setSwallowInput(false);\n                }\n                endRequest();\n            }\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_ENDOUTPUT);\n\n            // If there was an error, make sure the request is counted as\n            // and error, and update the statistics counter\n            if (error) {\n                response.setStatus(500);\n            }\n            request.updateCounters();\n\n            if (!comet && !isAsync()) {\n                // Next request\n                inputBuffer.nextRequest();\n                outputBuffer.nextRequest();\n            }\n\n            if (!disableUploadTimeout) { //only for body, not for request headers\n                socketWrapper.getSocket().getIOChannel().socket().setSoTimeout(\n                        endpoint.getSoTimeout());\n            }\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);\n\n            if (breakKeepAliveLoop(socketWrapper)) {\n                break;\n            }\n        }\n\n        rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);\n\n        if (error || endpoint.isPaused()) {\n            return SocketState.CLOSED;\n        } else if (comet || isAsync()) {\n            return SocketState.LONG;\n        } else {\n            if (sendfileInProgress) {\n                return SocketState.SENDFILE;\n            } else {\n                if (openSocket) {\n                    if (readComplete) {\n                        return SocketState.OPEN;\n                    } else {\n                        return SocketState.LONG;\n                    }\n                } else {\n                    return SocketState.CLOSED;\n                }\n            }\n        }\n    }","id":1454,"modified_method":"/**\n     * Process pipelined HTTP requests using the specified input and output\n     * streams.\n     *\n     * @param socketWrapper Socket from which the HTTP requests will be read\n     *               and the HTTP responses will be written.\n     *  \n     * @throws IOException error during an I/O operation\n     */\n    @Override\n    public SocketState process(SocketWrapper<NioChannel> socketWrapper)\n        throws IOException {\n        RequestInfo rp = request.getRequestProcessor();\n        rp.setStage(org.apache.coyote.Constants.STAGE_PARSE);\n\n        // Setting up the socket\n        this.socket = socketWrapper;\n        inputBuffer.init(socketWrapper, endpoint);\n        outputBuffer.init(socketWrapper, endpoint);\n\n        // Flags\n        error = false;\n        keepAlive = true;\n        comet = false;\n        openSocket = false;\n        sendfileInProgress = false;\n        readComplete = true;\n        if (endpoint.getUsePolling()) {\n            keptAlive = false;\n        } else {\n            keptAlive = socketWrapper.isKeptAlive();\n        }\n        \n        if (disableKeepAlive()) {\n            socketWrapper.setKeepAliveLeft(0);\n        }\n\n        while (!error && keepAlive && !comet && !isAsync() &&\n                !endpoint.isPaused()) {\n\n            // Parsing the request header\n            try {\n                setRequestLineReadTimeout();\n                \n                if (!inputBuffer.parseRequestLine(keptAlive)) {\n                    if (handleIncompleteRequestLineRead()) {\n                        break;\n                    }\n                }\n                \n                if (endpoint.isPaused()) {\n                    // 503 - Service unavailable\n                    response.setStatus(503);\n                    adapter.log(request, response, 0);\n                    error = true;\n                } else {\n                    request.setStartTime(System.currentTimeMillis());\n                    keptAlive = true;\n                    if ( !inputBuffer.parseHeaders() ) {\n                        //we've read part of the request, don't recycle it\n                        //instead associate it with the socket\n                        openSocket = true;\n                        readComplete = false;\n                        break;\n                    }\n                    if (!disableUploadTimeout) { //only for body, not for request headers\n                        socketWrapper.getSocket().getIOChannel().socket().setSoTimeout(\n                                connectionUploadTimeout);\n                    }\n                }\n            } catch (IOException e) {\n                if (log.isDebugEnabled()) {\n                    log.debug(sm.getString(\"http11processor.header.parse\"), e);\n                }\n                error = true;\n                break;\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                if (log.isDebugEnabled()) {\n                    log.debug(sm.getString(\"http11processor.header.parse\"), t);\n                }\n                // 400 - Bad Request\n                response.setStatus(400);\n                adapter.log(request, response, 0);\n                error = true;\n            }\n\n            if (!error) {\n                // Setting up filters, and parse some request headers\n                rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE);\n                try {\n                    prepareRequest();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    if (log.isDebugEnabled()) {\n                        log.debug(sm.getString(\"http11processor.request.prepare\"), t);\n                    }\n                    // 400 - Internal Server Error\n                    response.setStatus(400);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n            \n            if (maxKeepAliveRequests == 1) {\n                keepAlive = false;\n            } else if (maxKeepAliveRequests > 0 &&\n                    socketWrapper.decrementKeepAlive() <= 0) {\n                keepAlive = false;\n            }\n\n            // Process the request in the adapter\n            if (!error) {\n                try {\n                    rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);\n                    adapter.service(request, response);\n                    // Handle when the response was committed before a serious\n                    // error occurred.  Throwing a ServletException should both\n                    // set the status to 500 and set the errorException.\n                    // If we fail here, then the response is likely already\n                    // committed, so we can't try and set headers.\n                    if(keepAlive && !error) { // Avoid checking twice.\n                        error = response.getErrorException() != null ||\n                                (!isAsync() &&\n                                statusDropsConnection(response.getStatus()));\n                    }\n                    setCometTimeouts(socketWrapper);\n                } catch (InterruptedIOException e) {\n                    error = true;\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    log.error(sm.getString(\"http11processor.request.process\"), t);\n                    // 500 - Internal Server Error\n                    response.setStatus(500);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            // Finish the handling of the request\n            rp.setStage(org.apache.coyote.Constants.STAGE_ENDINPUT);\n\n            if (!isAsync() && !comet) {\n                if(error) {\n                    // If we know we are closing the connection, don't drain\n                    // input. This way uploading a 100GB file doesn't tie up the\n                    // thread if the servlet has rejected it.\n                    inputBuffer.setSwallowInput(false);\n                }\n                endRequest();\n            }\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_ENDOUTPUT);\n\n            // If there was an error, make sure the request is counted as\n            // and error, and update the statistics counter\n            if (error) {\n                response.setStatus(500);\n            }\n            request.updateCounters();\n\n            if (!comet && !isAsync()) {\n                // Next request\n                inputBuffer.nextRequest();\n                outputBuffer.nextRequest();\n            }\n\n            if (!disableUploadTimeout) { //only for body, not for request headers\n                socketWrapper.getSocket().getIOChannel().socket().setSoTimeout(\n                        endpoint.getSoTimeout());\n            }\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);\n\n            if (breakKeepAliveLoop(socketWrapper)) {\n                break;\n            }\n        }\n\n        rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);\n\n        if (error || endpoint.isPaused()) {\n            return SocketState.CLOSED;\n        } else if (comet || isAsync()) {\n            return SocketState.LONG;\n        } else {\n            if (sendfileInProgress) {\n                return SocketState.SENDFILE;\n            } else {\n                if (openSocket) {\n                    if (readComplete) {\n                        return SocketState.OPEN;\n                    } else {\n                        return SocketState.LONG;\n                    }\n                } else {\n                    return SocketState.CLOSED;\n                }\n            }\n        }\n    }","commit_id":"cc8d09db52c3c1bdf5b79ab746ccdfc34465e78b","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Process pipelined HTTP requests using the specified input and output\n     * streams.\n     *\n     * @param socketWrapper Socket from which the HTTP requests will be read\n     *               and the HTTP responses will be written.\n     *  \n     * @throws IOException error during an I/O operation\n     */\n    @Override\n    public SocketState process(SocketWrapper<Socket> socketWrapper)\n        throws IOException {\n        RequestInfo rp = request.getRequestProcessor();\n        rp.setStage(org.apache.coyote.Constants.STAGE_PARSE);\n\n        // Setting up the I/O\n        this.socket = socketWrapper;\n        inputBuffer.init(socketWrapper, endpoint);\n        outputBuffer.init(socketWrapper, endpoint);\n\n        // Flags\n        error = false;\n        keepAlive = true;\n        comet = false;\n        openSocket = false;\n        sendfileInProgress = false;\n        readComplete = true;\n        if (endpoint.getUsePolling()) {\n            keptAlive = false;\n        } else {\n            keptAlive = socketWrapper.isKeptAlive();\n        }\n\n        if (disableKeepAlive()) {\n            socketWrapper.setKeepAliveLeft(0);\n        }\n\n        while (!error && keepAlive && !comet && !isAsync() &&\n                !endpoint.isPaused()) {\n\n            // Parsing the request header\n            try {\n                setRequestLineReadTimeout();\n                \n                if (!inputBuffer.parseRequestLine(false)) {\n                    if (handleIncompleteRequestLineRead()) {\n                        break;\n                    }\n                }\n\n                if (endpoint.isPaused()) {\n                    // 503 - Service unavailable\n                    response.setStatus(503);\n                    adapter.log(request, response, 0);\n                    error = true;\n                } else {\n                    request.setStartTime(System.currentTimeMillis());\n                    keptAlive = true;\n                    // Reset timeout for reading headers\n                    socket.getSocket().setSoTimeout(endpoint.getSoTimeout());\n                    inputBuffer.parseHeaders();\n                    if (!disableUploadTimeout) {\n                        socket.getSocket().setSoTimeout(connectionUploadTimeout);\n                    }\n                }\n            } catch (IOException e) {\n                if (log.isDebugEnabled()) {\n                    log.debug(sm.getString(\"http11processor.header.parse\"), e);\n                }\n                error = true;\n                break;\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                if (log.isDebugEnabled()) {\n                    log.debug(sm.getString(\"http11processor.header.parse\"), t);\n                }\n                // 400 - Bad Request\n                response.setStatus(400);\n                adapter.log(request, response, 0);\n                error = true;\n            }\n\n            if (!error) {\n                // Setting up filters, and parse some request headers\n                rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE);\n                try {\n                    prepareRequest();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    if (log.isDebugEnabled()) {\n                        log.debug(sm.getString(\"http11processor.request.prepare\"), t);\n                    }\n                    // 400 - Internal Server Error\n                    response.setStatus(400);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            if (maxKeepAliveRequests == 1) {\n                keepAlive = false;\n            } else if (maxKeepAliveRequests > 0 &&\n                    socketWrapper.decrementKeepAlive() <= 0) {\n                keepAlive = false;\n            }\n\n            // Process the request in the adapter\n            if (!error) {\n                try {\n                    rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);\n                    adapter.service(request, response);\n                    // Handle when the response was committed before a serious\n                    // error occurred.  Throwing a ServletException should both\n                    // set the status to 500 and set the errorException.\n                    // If we fail here, then the response is likely already\n                    // committed, so we can't try and set headers.\n                    if(keepAlive && !error) { // Avoid checking twice.\n                        error = response.getErrorException() != null ||\n                                (!isAsync() &&\n                                statusDropsConnection(response.getStatus()));\n                    }\n                    setCometTimeouts(socketWrapper);\n                } catch (InterruptedIOException e) {\n                    error = true;\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    log.error(sm.getString(\"http11processor.request.process\"), t);\n                    // 500 - Internal Server Error\n                    response.setStatus(500);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            // Finish the handling of the request\n            rp.setStage(org.apache.coyote.Constants.STAGE_ENDINPUT);\n\n            if(!isAsync() && !comet) {\n                if (error) {\n                    // If we know we are closing the connection, don't drain\n                    // input. This way uploading a 100GB file doesn't tie up the\n                    // thread if the servlet has rejected it.\n                    inputBuffer.setSwallowInput(false);\n                }\n                endRequest();\n            }\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_ENDOUTPUT);\n\n            // If there was an error, make sure the request is counted as\n            // and error, and update the statistics counter\n            if (error) {\n                response.setStatus(500);\n            }\n            request.updateCounters();\n\n            // Next request\n            if (!isAsync() || error) {\n                inputBuffer.nextRequest();\n                outputBuffer.nextRequest();\n            }\n\n            if (!disableUploadTimeout) {\n                socket.getSocket().setSoTimeout(endpoint.getSoTimeout());\n            }\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);\n\n            if (breakKeepAliveLoop(socketWrapper)) {\n                break;\n            }\n        }\n\n        rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);\n\n        if (error || endpoint.isPaused()) {\n            return SocketState.CLOSED;\n        } else if (comet || isAsync()) {\n            return SocketState.LONG;\n        } else {\n            if (sendfileInProgress) {\n                return SocketState.SENDFILE;\n            } else {\n                if (openSocket) {\n                    if (readComplete) {\n                        return SocketState.OPEN;\n                    } else {\n                        return SocketState.LONG;\n                    }\n                } else {\n                    return SocketState.CLOSED;\n                }\n            }\n        }\n    }","id":1455,"modified_method":"/**\n     * Process pipelined HTTP requests using the specified input and output\n     * streams.\n     *\n     * @param socketWrapper Socket from which the HTTP requests will be read\n     *               and the HTTP responses will be written.\n     *  \n     * @throws IOException error during an I/O operation\n     */\n    @Override\n    public SocketState process(SocketWrapper<Socket> socketWrapper)\n        throws IOException {\n        RequestInfo rp = request.getRequestProcessor();\n        rp.setStage(org.apache.coyote.Constants.STAGE_PARSE);\n\n        // Setting up the I/O\n        this.socket = socketWrapper;\n        inputBuffer.init(socketWrapper, endpoint);\n        outputBuffer.init(socketWrapper, endpoint);\n\n        // Flags\n        error = false;\n        keepAlive = true;\n        comet = false;\n        openSocket = false;\n        sendfileInProgress = false;\n        readComplete = true;\n        if (endpoint.getUsePolling()) {\n            keptAlive = false;\n        } else {\n            keptAlive = socketWrapper.isKeptAlive();\n        }\n\n        if (disableKeepAlive()) {\n            socketWrapper.setKeepAliveLeft(0);\n        }\n\n        while (!error && keepAlive && !comet && !isAsync() &&\n                !endpoint.isPaused()) {\n\n            // Parsing the request header\n            try {\n                setRequestLineReadTimeout();\n                \n                if (!inputBuffer.parseRequestLine(keptAlive)) {\n                    if (handleIncompleteRequestLineRead()) {\n                        break;\n                    }\n                }\n\n                if (endpoint.isPaused()) {\n                    // 503 - Service unavailable\n                    response.setStatus(503);\n                    adapter.log(request, response, 0);\n                    error = true;\n                } else {\n                    request.setStartTime(System.currentTimeMillis());\n                    keptAlive = true;\n                    // Reset timeout for reading headers\n                    socket.getSocket().setSoTimeout(endpoint.getSoTimeout());\n                    inputBuffer.parseHeaders();\n                    if (!disableUploadTimeout) {\n                        socket.getSocket().setSoTimeout(connectionUploadTimeout);\n                    }\n                }\n            } catch (IOException e) {\n                if (log.isDebugEnabled()) {\n                    log.debug(sm.getString(\"http11processor.header.parse\"), e);\n                }\n                error = true;\n                break;\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                if (log.isDebugEnabled()) {\n                    log.debug(sm.getString(\"http11processor.header.parse\"), t);\n                }\n                // 400 - Bad Request\n                response.setStatus(400);\n                adapter.log(request, response, 0);\n                error = true;\n            }\n\n            if (!error) {\n                // Setting up filters, and parse some request headers\n                rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE);\n                try {\n                    prepareRequest();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    if (log.isDebugEnabled()) {\n                        log.debug(sm.getString(\"http11processor.request.prepare\"), t);\n                    }\n                    // 400 - Internal Server Error\n                    response.setStatus(400);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            if (maxKeepAliveRequests == 1) {\n                keepAlive = false;\n            } else if (maxKeepAliveRequests > 0 &&\n                    socketWrapper.decrementKeepAlive() <= 0) {\n                keepAlive = false;\n            }\n\n            // Process the request in the adapter\n            if (!error) {\n                try {\n                    rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);\n                    adapter.service(request, response);\n                    // Handle when the response was committed before a serious\n                    // error occurred.  Throwing a ServletException should both\n                    // set the status to 500 and set the errorException.\n                    // If we fail here, then the response is likely already\n                    // committed, so we can't try and set headers.\n                    if(keepAlive && !error) { // Avoid checking twice.\n                        error = response.getErrorException() != null ||\n                                (!isAsync() &&\n                                statusDropsConnection(response.getStatus()));\n                    }\n                    setCometTimeouts(socketWrapper);\n                } catch (InterruptedIOException e) {\n                    error = true;\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    log.error(sm.getString(\"http11processor.request.process\"), t);\n                    // 500 - Internal Server Error\n                    response.setStatus(500);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            // Finish the handling of the request\n            rp.setStage(org.apache.coyote.Constants.STAGE_ENDINPUT);\n\n            if(!isAsync() && !comet) {\n                if (error) {\n                    // If we know we are closing the connection, don't drain\n                    // input. This way uploading a 100GB file doesn't tie up the\n                    // thread if the servlet has rejected it.\n                    inputBuffer.setSwallowInput(false);\n                }\n                endRequest();\n            }\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_ENDOUTPUT);\n\n            // If there was an error, make sure the request is counted as\n            // and error, and update the statistics counter\n            if (error) {\n                response.setStatus(500);\n            }\n            request.updateCounters();\n\n            // Next request\n            if (!isAsync() || error) {\n                inputBuffer.nextRequest();\n                outputBuffer.nextRequest();\n            }\n\n            if (!disableUploadTimeout) {\n                socket.getSocket().setSoTimeout(endpoint.getSoTimeout());\n            }\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);\n\n            if (breakKeepAliveLoop(socketWrapper)) {\n                break;\n            }\n        }\n\n        rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);\n\n        if (error || endpoint.isPaused()) {\n            return SocketState.CLOSED;\n        } else if (comet || isAsync()) {\n            return SocketState.LONG;\n        } else {\n            if (sendfileInProgress) {\n                return SocketState.SENDFILE;\n            } else {\n                if (openSocket) {\n                    if (readComplete) {\n                        return SocketState.OPEN;\n                    } else {\n                        return SocketState.LONG;\n                    }\n                } else {\n                    return SocketState.CLOSED;\n                }\n            }\n        }\n    }","commit_id":"cc8d09db52c3c1bdf5b79ab746ccdfc34465e78b","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Process pipelined HTTP requests using the specified input and output\n     * streams.\n     *\n     * @throws IOException error during an I/O operation\n     */\n    @Override\n    public SocketState process(SocketWrapper<Long> socket)\n        throws IOException {\n        RequestInfo rp = request.getRequestProcessor();\n        rp.setStage(org.apache.coyote.Constants.STAGE_PARSE);\n\n        // Setting up the socket\n        this.socket = socket;\n        long socketRef = socket.getSocket().longValue();\n        Socket.setrbb(socketRef, inputBuffer);\n        Socket.setsbb(socketRef, outputBuffer);\n\n        // Error flag\n        error = false;\n\n        boolean keptAlive = false;\n\n        while (!error && !endpoint.isPaused()) {\n\n            // Parsing the request header\n            try {\n                // Get first message of the request\n                if (!readMessage(requestHeaderMessage, true, keptAlive)) {\n                    // This means that no data is available right now\n                    // (long keepalive), so that the processor should be recycled\n                    // and the method should return true\n                    break;\n                }\n                // Check message type, process right away and break if\n                // not regular request processing\n                int type = requestHeaderMessage.getByte();\n                if (type == Constants.JK_AJP13_CPING_REQUEST) {\n                    if (endpoint.isPaused()) {\n                        recycle(true);\n                        break;\n                    }\n                    if (Socket.send(socketRef, pongMessageArray, 0,\n                            pongMessageArray.length) < 0) {\n                        error = true;\n                    }\n                    continue;\n                } else if(type != Constants.JK_AJP13_FORWARD_REQUEST) {\n                    // Unexpected packet type. Unread body packets should have\n                    // been swallowed in finish().\n                    if (log.isDebugEnabled()) {\n                        log.debug(\"Unexpected message: \" + type);\n                    }\n                    error = true;\n                    break;\n                }\n\n                keptAlive = true;\n                request.setStartTime(System.currentTimeMillis());\n            } catch (IOException e) {\n                error = true;\n                break;\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                log.debug(sm.getString(\"ajpprocessor.header.error\"), t);\n                // 400 - Bad Request\n                response.setStatus(400);\n                adapter.log(request, response, 0);\n                error = true;\n            }\n\n            if (!error) {\n                // Setting up filters, and parse some request headers\n                rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE);\n                try {\n                    prepareRequest();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    log.debug(sm.getString(\"ajpprocessor.request.prepare\"), t);\n                    // 400 - Internal Server Error\n                    response.setStatus(400);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            // Process the request in the adapter\n            if (!error) {\n                try {\n                    rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);\n                    adapter.service(request, response);\n                } catch (InterruptedIOException e) {\n                    error = true;\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    log.error(sm.getString(\"ajpprocessor.request.process\"), t);\n                    // 500 - Internal Server Error\n                    response.setStatus(500);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            if (isAsync() && !error) {\n                break;\n            }\n\n            // Finish the response if not done yet\n            if (!finished) {\n                try {\n                    finish();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    error = true;\n                }\n            }\n\n            // If there was an error, make sure the request is counted as\n            // and error, and update the statistics counter\n            if (error) {\n                response.setStatus(500);\n            }\n            request.updateCounters();\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);\n            recycle(false);\n        }\n\n        rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);\n        \n        if (error || endpoint.isPaused()) {\n            return SocketState.CLOSED;\n        } else if (isAsync()) {\n            return SocketState.LONG;\n        } else {\n            return SocketState.OPEN;\n        }\n    }","id":1456,"modified_method":"/**\n     * Process pipelined HTTP requests using the specified input and output\n     * streams.\n     *\n     * @throws IOException error during an I/O operation\n     */\n    @Override\n    public SocketState process(SocketWrapper<Long> socket)\n        throws IOException {\n        RequestInfo rp = request.getRequestProcessor();\n        rp.setStage(org.apache.coyote.Constants.STAGE_PARSE);\n\n        // Setting up the socket\n        this.socket = socket;\n        long socketRef = socket.getSocket().longValue();\n        Socket.setrbb(socketRef, inputBuffer);\n        Socket.setsbb(socketRef, outputBuffer);\n\n        // Error flag\n        error = false;\n\n        boolean keptAlive = false;\n\n        while (!error && !endpoint.isPaused()) {\n            // Parsing the request header\n            try {\n                // Get first message of the request\n                if (!readMessage(requestHeaderMessage, true, keptAlive)) {\n                    // This means that no data is available right now\n                    // (long keepalive), so that the processor should be recycled\n                    // and the method should return true\n                    break;\n                }\n                // Check message type, process right away and break if\n                // not regular request processing\n                int type = requestHeaderMessage.getByte();\n                if (type == Constants.JK_AJP13_CPING_REQUEST) {\n                    if (endpoint.isPaused()) {\n                        recycle(true);\n                        break;\n                    }\n                    if (Socket.send(socketRef, pongMessageArray, 0,\n                            pongMessageArray.length) < 0) {\n                        error = true;\n                    }\n                    continue;\n                } else if(type != Constants.JK_AJP13_FORWARD_REQUEST) {\n                    // Unexpected packet type. Unread body packets should have\n                    // been swallowed in finish().\n                    if (log.isDebugEnabled()) {\n                        log.debug(\"Unexpected message: \" + type);\n                    }\n                    error = true;\n                    break;\n                }\n                keptAlive = true;\n                request.setStartTime(System.currentTimeMillis());\n            } catch (IOException e) {\n                error = true;\n                break;\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                log.debug(sm.getString(\"ajpprocessor.header.error\"), t);\n                // 400 - Bad Request\n                response.setStatus(400);\n                adapter.log(request, response, 0);\n                error = true;\n            }\n\n            if (!error) {\n                // Setting up filters, and parse some request headers\n                rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE);\n                try {\n                    prepareRequest();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    log.debug(sm.getString(\"ajpprocessor.request.prepare\"), t);\n                    // 400 - Internal Server Error\n                    response.setStatus(400);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            if (endpoint.isPaused()) {\n                // 503 - Service unavailable\n                response.setStatus(503);\n                adapter.log(request, response, 0);\n                error = true;\n            }\n\n            // Process the request in the adapter\n            if (!error) {\n                try {\n                    rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);\n                    adapter.service(request, response);\n                } catch (InterruptedIOException e) {\n                    error = true;\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    log.error(sm.getString(\"ajpprocessor.request.process\"), t);\n                    // 500 - Internal Server Error\n                    response.setStatus(500);\n                    adapter.log(request, response, 0);\n                    error = true;\n                }\n            }\n\n            if (isAsync() && !error) {\n                break;\n            }\n\n            // Finish the response if not done yet\n            if (!finished) {\n                try {\n                    finish();\n                } catch (Throwable t) {\n                    ExceptionUtils.handleThrowable(t);\n                    error = true;\n                }\n            }\n\n            // If there was an error, make sure the request is counted as\n            // and error, and update the statistics counter\n            if (error) {\n                response.setStatus(500);\n            }\n            request.updateCounters();\n\n            rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);\n            recycle(false);\n        }\n\n        rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);\n\n        if (!error && !endpoint.isPaused()) {\n            if (isAsync()) {\n                return SocketState.LONG;\n            } else {\n                return SocketState.OPEN;\n            }\n        } else {\n            return SocketState.CLOSED;\n        }\n    }","commit_id":"de04cd3123c2ec64d0cd038a87551742f86a814a","url":"https://github.com/apache/tomcat"},{"original_method":"/** Read and send messages in range [read-index .. read-index+available_msgs-1] */\n    public void sendBundledMessages(final Message[] buf, final int read_index, final int available_msgs) {\n        int       max_bundle_size=transport.getMaxBundleSize();\n        byte[]    cluster_name=transport.cluster_name.chars();\n        int       start=read_index;\n        final int end=index(start + available_msgs-1); // index of the last message to be read\n\n        for(;;) {\n            Message msg=buf[start];\n            if(msg == null) {\n                if(start == end)\n                    break;\n                start=advance(start);\n                continue;\n            }\n\n            Address dest=msg.dest();\n            try {\n                output.position(0);\n                Util.writeMessageListHeader(dest, msg.src(), cluster_name, 1, output, dest == null);\n\n                // remember the position at which the number of messages (an int) was written, so we can later set the\n                // correct value (when we know the correct number of messages)\n                int size_pos=output.position() - Global.INT_SIZE;\n                int num_msgs=marshalMessagesToSameDestination(dest, buf, start, end, max_bundle_size);\n                int current_pos=output.position();\n                output.position(size_pos);\n                output.writeInt(num_msgs);\n                output.position(current_pos);\n                transport.doSend(output.buffer(), 0, output.position(), dest);\n                if(transport.statsEnabled())\n                    transport.incrBatchesSent(num_msgs);\n            }\n            catch(Exception ex) {\n                log.error(\"failed to send message(s)\", ex);\n            }\n\n            if(start == end)\n                break;\n            start=advance(start);\n        }\n    }","id":1457,"modified_method":"/** Read and send messages in range [read-index .. read-index+available_msgs-1] */\n    public void sendBundledMessages(final Message[] buf, final int read_index, final int available_msgs) {\n        int       max_bundle_size=transport.getMaxBundleSize();\n        byte[]    cluster_name=transport.cluster_name.chars();\n        int       start=read_index;\n        final int end=index(start + available_msgs-1); // index of the last message to be read\n\n        for(;;) {\n            Message msg=buf[start];\n            if(msg == null) {\n                if(start == end)\n                    break;\n                start=advance(start);\n                continue;\n            }\n\n            Address dest=msg.dest();\n            try {\n                output.position(0);\n                Util.writeMessageListHeader(dest, msg.src(), cluster_name, 1, output, dest == null);\n\n                // remember the position at which the number of messages (an int) was written, so we can later set the\n                // correct value (when we know the correct number of messages)\n                int size_pos=output.position() - Global.INT_SIZE;\n                int num_msgs=marshalMessagesToSameDestination(dest, buf, start, end, max_bundle_size);\n                if(num_msgs > 1) {\n                    int current_pos=output.position();\n                    output.position(size_pos);\n                    output.writeInt(num_msgs);\n                    output.position(current_pos);\n                }\n                transport.doSend(output.buffer(), 0, output.position(), dest);\n                if(transport.statsEnabled())\n                    transport.incrBatchesSent(num_msgs);\n            }\n            catch(Exception ex) {\n                log.error(\"failed to send message(s)\", ex);\n            }\n\n            if(start == end)\n                break;\n            start=advance(start);\n        }\n    }","commit_id":"0f234319344be7751af5c44094c7c8915a4727c6","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Read and send messages in range [read-index .. read-index+available_msgs-1] */\n    protected int sendBundledMessages(final Message[] buf, final int read_index, int available_msgs) {\n        int       max_bundle_size=transport.getMaxBundleSize();\n        byte[]    cluster_name=transport.cluster_name.chars();\n        int       start=read_index;\n        int       sent_msgs=0;\n\n        while(available_msgs > 0) {\n            Message msg=buf[start];\n            if(msg == null) {\n                start=increment(start);\n                available_msgs--;\n                continue;\n            }\n\n            Address dest=msg.dest();\n            try {\n                output.position(0);\n                Util.writeMessageListHeader(dest, msg.src(), cluster_name, 1, output, dest == null);\n\n                // remember the position at which the number of messages (an int) was written, so we can later set the\n                // correct value (when we know the correct number of messages)\n                int size_pos=output.position() - Global.INT_SIZE;\n                int num_msgs=marshalMessagesToSameDestination(dest, buf, start, available_msgs, max_bundle_size);\n                sent_msgs+=num_msgs;\n                int current_pos=output.position();\n                output.position(size_pos);\n                output.writeInt(num_msgs);\n                output.position(current_pos);\n                transport.doSend(output.buffer(), 0, output.position(), dest);\n                if(transport.statsEnabled())\n                    transport.incrBatchesSent(num_msgs);\n            }\n            catch(Exception ex) {\n                log.error(\"failed to send message(s)\", ex);\n            }\n\n            available_msgs--;\n            start=increment(start);\n        }\n        return sent_msgs;\n    }","id":1458,"modified_method":"/** Read and send messages in range [read-index .. read-index+available_msgs-1] */\n    protected int sendBundledMessages(final Message[] buf, final int read_index, int available_msgs) {\n        int       max_bundle_size=transport.getMaxBundleSize();\n        byte[]    cluster_name=transport.cluster_name.chars();\n        int       start=read_index;\n        int       sent_msgs=0;\n\n        while(available_msgs > 0) {\n            Message msg=buf[start];\n            if(msg == null) {\n                start=increment(start);\n                available_msgs--;\n                continue;\n            }\n\n            Address dest=msg.dest();\n            try {\n                output.position(0);\n                Util.writeMessageListHeader(dest, msg.src(), cluster_name, 1, output, dest == null);\n\n                // remember the position at which the number of messages (an int) was written, so we can later set the\n                // correct value (when we know the correct number of messages)\n                int size_pos=output.position() - Global.INT_SIZE;\n                int num_msgs=marshalMessagesToSameDestination(dest, buf, start, available_msgs, max_bundle_size);\n                sent_msgs+=num_msgs;\n                if(num_msgs > 1) {\n                    int current_pos=output.position();\n                    output.position(size_pos);\n                    output.writeInt(num_msgs);\n                    output.position(current_pos);\n                }\n                transport.doSend(output.buffer(), 0, output.position(), dest);\n                if(transport.statsEnabled())\n                    transport.incrBatchesSent(num_msgs);\n            }\n            catch(Exception ex) {\n                log.error(\"failed to send message(s)\", ex);\n            }\n\n            available_msgs--;\n            start=increment(start);\n        }\n        return sent_msgs;\n    }","commit_id":"0f234319344be7751af5c44094c7c8915a4727c6","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Read and send messages in range [read-index+1 .. write_index-1] */\n    protected int sendBundledMessages(final Message[] buf, final int read_index, final int write_index) {\n        int       max_bundle_size=transport.getMaxBundleSize();\n        byte[]    cluster_name=transport.cluster_name.chars();\n        int       sent_msgs=0;\n\n        for(int i=increment(read_index); i != write_index; i=increment(i)) {\n            Message msg=buf[i];\n            if(msg == NULL_MSG)\n                continue;\n            if(msg == null)\n                break;\n\n            Address dest=msg.dest();\n            try {\n                output.position(0);\n                Util.writeMessageListHeader(dest, msg.src(), cluster_name, 1, output, dest == null);\n\n                // remember the position at which the number of messages (an int) was written, so we can later set the\n                // correct value (when we know the correct number of messages)\n                int size_pos=output.position() - Global.INT_SIZE;\n                int num_msgs=marshalMessagesToSameDestination(dest, buf, i, write_index, max_bundle_size);\n                sent_msgs+=num_msgs;\n                int current_pos=output.position();\n                output.position(size_pos);\n                output.writeInt(num_msgs);\n                output.position(current_pos);\n                transport.doSend(output.buffer(), 0, output.position(), dest);\n                if(transport.statsEnabled())\n                    transport.incrBatchesSent(num_msgs);\n            }\n            catch(Exception ex) {\n                log.error(\"failed to send message(s)\", ex);\n            }\n        }\n        return sent_msgs;\n    }","id":1459,"modified_method":"/** Read and send messages in range [read-index+1 .. write_index-1] */\n    protected int sendBundledMessages(final Message[] buf, final int read_index, final int write_index) {\n        int       max_bundle_size=transport.getMaxBundleSize();\n        byte[]    cluster_name=transport.cluster_name.chars();\n        int       sent_msgs=0;\n\n        for(int i=increment(read_index); i != write_index; i=increment(i)) {\n            Message msg=buf[i];\n            if(msg == NULL_MSG)\n                continue;\n            if(msg == null)\n                break;\n\n            Address dest=msg.dest();\n            try {\n                output.position(0);\n                Util.writeMessageListHeader(dest, msg.src(), cluster_name, 1, output, dest == null);\n\n                // remember the position at which the number of messages (an int) was written, so we can later set the\n                // correct value (when we know the correct number of messages)\n                int size_pos=output.position() - Global.INT_SIZE;\n                int num_msgs=marshalMessagesToSameDestination(dest, buf, i, write_index, max_bundle_size);\n                sent_msgs+=num_msgs;\n                if(num_msgs > 1) {\n                    int current_pos=output.position();\n                    output.position(size_pos);\n                    output.writeInt(num_msgs);\n                    output.position(current_pos);\n                }\n                transport.doSend(output.buffer(), 0, output.position(), dest);\n                if(transport.statsEnabled())\n                    transport.incrBatchesSent(num_msgs);\n            }\n            catch(Exception ex) {\n                log.error(\"failed to send message(s)\", ex);\n            }\n        }\n        return sent_msgs;\n    }","commit_id":"0f234319344be7751af5c44094c7c8915a4727c6","url":"https://github.com/belaban/JGroups"},{"original_method":"public void writeXML(XMLOutput xmlOutput, @CheckForNull File destination) throws IOException {\n\t\tXMLAttributeList attributeList = new XMLAttributeList();\n\t\tif (getProjectName() != null) {\n\t        attributeList = attributeList.addAttribute(PROJECTNAME_ATTRIBUTE_NAME, getProjectName());\n        }\n\t\txmlOutput.openTag(\n\t\t\t\tBugCollection.PROJECT_ELEMENT_NAME,\n\t\t\t\tattributeList\n\t\t\t\t);\n\n\t\tString base = destination.getParent();\n\t\twriteElementList(xmlOutput, JAR_ELEMENT_NAME, convertToRelative(analysisTargets, base));\n\t\twriteElementList(xmlOutput, AUX_CLASSPATH_ENTRY_ELEMENT_NAME, convertToRelative(auxClasspathEntryList, base));\n\t\twriteElementList(xmlOutput, SRC_DIR_ELEMENT_NAME, convertToRelative(srcDirList, base));\n\n\t\tList<String> cwdStrings = new ArrayList<String>();\n\t\tfor (File file : currentWorkingDirectoryList)\n\t\t\tcwdStrings.add(file.getPath());\n\t\tXMLOutputUtil.writeElementList(xmlOutput, WRK_DIR_ELEMENT_NAME, convertToRelative(cwdStrings, base));\n\t\tif (suppressionFilter != null && !suppressionFilter.isEmpty()) {\n\t\t\txmlOutput.openTag(\"SuppressionFilter\");\n\t\t\tsuppressionFilter.writeBodyAsXML(xmlOutput);\n\t\t\txmlOutput.closeTag(\"SuppressionFilter\");\n\t\t}\n\t\t\n\t\tif (cloudId != null) {\n\t\t\txmlOutput.startTag(CLOUD_ELEMENT_NAME);\n\t\t\txmlOutput.addAttribute(CLOUD_ID_ATTRIBUTE_NAME, cloudId);\n\t\t\txmlOutput.stopTag(false);\n\t\t\tfor(Map.Entry e : cloudProperties.entrySet()) {\n\t\t\t\txmlOutput.startTag(CLOUD_PROPERTY_ELEMENT_NAME);\n\t\t\t\txmlOutput.addAttribute(\"key\", e.getKey().toString());\n\t\t\t\txmlOutput.stopTag(false);\n\t\t\t\tObject value = e.getValue();\n\t\t\t\txmlOutput.writeText(value.toString());\n\t\t\t\txmlOutput.closeTag(CLOUD_PROPERTY_ELEMENT_NAME);\n\t\t\t}\n\t\t\txmlOutput.closeTag(CLOUD_ELEMENT_NAME);\t\n\t\t\t\n\t\t}\n\t\t\t\n\t\txmlOutput.closeTag(BugCollection.PROJECT_ELEMENT_NAME);\n\t}","id":1460,"modified_method":"public void writeXML(XMLOutput xmlOutput, @CheckForNull File destination) throws IOException {\n\t\tXMLAttributeList attributeList = new XMLAttributeList();\n\t\tif (getProjectName() != null) {\n\t        attributeList = attributeList.addAttribute(PROJECTNAME_ATTRIBUTE_NAME, getProjectName());\n        }\n\t\txmlOutput.openTag(\n\t\t\t\tBugCollection.PROJECT_ELEMENT_NAME,\n\t\t\t\tattributeList\n\t\t\t\t);\n\n\t\tif(destination != null) {\n\t\t\tString base = destination.getParent();\n\t\t\twriteElementList(xmlOutput, JAR_ELEMENT_NAME, convertToRelative(analysisTargets, base));\n\t\t\twriteElementList(xmlOutput, AUX_CLASSPATH_ENTRY_ELEMENT_NAME, convertToRelative(auxClasspathEntryList, base));\n\t\t\twriteElementList(xmlOutput, SRC_DIR_ELEMENT_NAME, convertToRelative(srcDirList, base));\n\t\t\tList<String> cwdStrings = new ArrayList<String>();\n\t\t\tfor (File file : currentWorkingDirectoryList)\n\t\t\t\tcwdStrings.add(file.getPath());\n\t\t\tXMLOutputUtil.writeElementList(xmlOutput, WRK_DIR_ELEMENT_NAME, convertToRelative(cwdStrings, base));\n\t\t} else {\n\t\t\t// TODO to allow relative paths: refactor the code which uses null file arguments\n\t\t\twriteElementList(xmlOutput, JAR_ELEMENT_NAME, analysisTargets);\n\t\t\twriteElementList(xmlOutput, AUX_CLASSPATH_ENTRY_ELEMENT_NAME, auxClasspathEntryList);\n\t\t\twriteElementList(xmlOutput, SRC_DIR_ELEMENT_NAME, srcDirList);\n\t\t\tXMLOutputUtil.writeFileList(xmlOutput, WRK_DIR_ELEMENT_NAME, currentWorkingDirectoryList);\n\t\t}\n\t\t\n\t\tif (suppressionFilter != null && !suppressionFilter.isEmpty()) {\n\t\t\txmlOutput.openTag(\"SuppressionFilter\");\n\t\t\tsuppressionFilter.writeBodyAsXML(xmlOutput);\n\t\t\txmlOutput.closeTag(\"SuppressionFilter\");\n\t\t}\n\t\t\n\t\tif (cloudId != null) {\n\t\t\txmlOutput.startTag(CLOUD_ELEMENT_NAME);\n\t\t\txmlOutput.addAttribute(CLOUD_ID_ATTRIBUTE_NAME, cloudId);\n\t\t\txmlOutput.stopTag(false);\n\t\t\tfor(Map.Entry e : cloudProperties.entrySet()) {\n\t\t\t\txmlOutput.startTag(CLOUD_PROPERTY_ELEMENT_NAME);\n\t\t\t\txmlOutput.addAttribute(\"key\", e.getKey().toString());\n\t\t\t\txmlOutput.stopTag(false);\n\t\t\t\tObject value = e.getValue();\n\t\t\t\txmlOutput.writeText(value.toString());\n\t\t\t\txmlOutput.closeTag(CLOUD_PROPERTY_ELEMENT_NAME);\n\t\t\t}\n\t\t\txmlOutput.closeTag(CLOUD_ELEMENT_NAME);\t\n\t\t\t\n\t\t}\n\t\t\t\n\t\txmlOutput.closeTag(BugCollection.PROJECT_ELEMENT_NAME);\n\t}","commit_id":"b0bf4673d2fce0a0c7af248091ea72a618627146","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private void endReached()\n    {\n        if ( this.searcherOrNull != null )\n        {\n            this.searcherOrNull.closeStrict();\n        }\n    }","id":1461,"modified_method":"protected void endReached()\n    {\n        if ( this.searcherOrNull != null )\n        {\n            this.searcherOrNull.closeStrict();\n        }\n    }","commit_id":"50f951ad31188e63dffcccf2dd17ba52d5d9de4a","url":"https://github.com/neo4j/neo4j"},{"original_method":"LuceneBatchInserterIndex( LuceneBatchInserterIndexProvider provider,\n            BatchInserter inserter, IndexIdentifier identifier, Map<String, String> config )\n    {\n        String dbStoreDir = ((BatchInserterImpl) inserter).getStore();\n        this.storeDir = LuceneDataSource.getStoreDir( dbStoreDir );\n        this.identifier = identifier;\n        this.type = IndexType.getIndexType( identifier, config );\n    }","id":1462,"modified_method":"LuceneBatchInserterIndex( LuceneBatchInserterIndexProvider provider,\n            BatchInserter inserter, IndexIdentifier identifier, Map<String, String> config )\n    {\n        String dbStoreDir = ((BatchInserterImpl) inserter).getStore();\n        Pair<String, Boolean> storeDir = LuceneDataSource.getStoreDir( dbStoreDir );\n        this.createdNow = storeDir.other();\n        this.identifier = identifier;\n        this.type = IndexType.getIndexType( identifier, config );\n        this.writer = instantiateWriter( storeDir.first() );\n    }","commit_id":"50f951ad31188e63dffcccf2dd17ba52d5d9de4a","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IndexHits<Long> query( Object queryOrQueryObject )\n    {\n        return query( type.query( null, queryOrQueryObject, null ) );\n    }","id":1463,"modified_method":"public IndexHits<Long> query( Object queryOrQueryObject )\n    {\n        return query( type.query( null, queryOrQueryObject, null ), null, null );\n    }","commit_id":"50f951ad31188e63dffcccf2dd17ba52d5d9de4a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private IndexSearcher searcher()\n    {\n        IndexSearcher result = this.searcher;\n        try\n        {\n            if ( result == null || writerModified )\n            {\n                if ( result != null )\n                {\n                    result.getIndexReader().close();\n                    result.close();\n                }\n                IndexReader newReader = writer().getReader();\n                result = new IndexSearcher( newReader );\n                writerModified = false;\n            }\n            return result;\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            this.searcher = result;\n        }\n    }","id":1464,"modified_method":"private IndexSearcher searcher()\n    {\n        IndexSearcher result = this.searcher;\n        try\n        {\n            if ( result == null || writerModified )\n            {\n                if ( result != null )\n                {\n                    result.getIndexReader().close();\n                    result.close();\n                }\n                IndexReader newReader = writer.getReader();\n                result = new IndexSearcher( newReader );\n                writerModified = false;\n            }\n            return result;\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            this.searcher = result;\n        }\n    }","commit_id":"50f951ad31188e63dffcccf2dd17ba52d5d9de4a","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void updateOrAdd( long entityId, Map<String, Object> properties )\n    {\n        try\n        {\n            writer().deleteDocuments( type.idTermQuery( entityId ) );\n            add( entityId, properties );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","id":1465,"modified_method":"public void updateOrAdd( long entityId, Map<String, Object> properties )\n    {\n        try\n        {\n            removeFromCache( entityId );\n            writer.deleteDocuments( type.idTermQuery( entityId ) );\n            add( entityId, properties );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"50f951ad31188e63dffcccf2dd17ba52d5d9de4a","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IndexHits<Long> query( String key, Object queryOrQueryObject )\n    {\n        return query( type.query( key, queryOrQueryObject, null ) );\n    }","id":1466,"modified_method":"public IndexHits<Long> query( String key, Object queryOrQueryObject )\n    {\n        return query( type.query( key, queryOrQueryObject, null ), null, null );\n    }","commit_id":"50f951ad31188e63dffcccf2dd17ba52d5d9de4a","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IndexHits<Long> get( String key, Object value )\n    {\n        return query( type.get( key, value ) );\n    }","id":1467,"modified_method":"public IndexHits<Long> get( String key, Object value )\n    {\n        IndexHits<Long> cached = getFromCache( key, value );\n        return cached != null ? cached : query( type.get( key, value ), key, value );\n    }","commit_id":"50f951ad31188e63dffcccf2dd17ba52d5d9de4a","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void add( long entityId, Map<String, Object> properties )\n    {\n        try\n        {\n            Document document = identifier.entityType.newDocument( entityId );\n            for ( Map.Entry<String, Object> entry : properties.entrySet() )\n            {\n                String key = entry.getKey();\n                for ( Object value : IoPrimitiveUtils.asArray( entry.getValue() ) )\n                {\n                    type.addToDocument( document, key, value );\n                }\n            }\n            writer().addDocument( document );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","id":1468,"modified_method":"public void add( long entityId, Map<String, Object> properties )\n    {\n        try\n        {\n            Document document = identifier.entityType.newDocument( entityId );\n            for ( Map.Entry<String, Object> entry : properties.entrySet() )\n            {\n                String key = entry.getKey();\n                for ( Object value : IoPrimitiveUtils.asArray( entry.getValue() ) )\n                {\n                    type.addToDocument( document, key, value );\n                    if ( createdNow )\n                    {\n                        // If we know that the index was created this session\n                        // then we can go ahead and add stuff to the cache directly\n                        // when adding to the index.\n                        addToCache( entityId, key, value );\n                    }\n                }\n            }\n            writer.addDocument( document );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"50f951ad31188e63dffcccf2dd17ba52d5d9de4a","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Constructs this data source.\n     * \n     * @param params XA parameters.\n     * @throws InstantiationException if the data source couldn't be\n     * instantiated\n     */\n    public LuceneDataSource( Map<Object,Object> params ) \n        throws InstantiationException\n    {\n        super( params );\n        caching = new Cache();\n        String storeDir = (String) params.get( \"store_dir\" );\n        this.baseStorePath = getStoreDir( storeDir );\n        cleanWriteLocks( baseStorePath );\n        this.indexStore = (IndexStore) params.get( IndexStore.class );\n        this.providerStore = newIndexStore( storeDir );\n        this.typeCache = new IndexTypeCache( indexStore );\n        boolean isReadOnly = false;\n        if ( params.containsKey( \"read_only\" ) )\n        {\n            Object readOnly = params.get( \"read_only\" );\n            if ( readOnly instanceof Boolean )\n            {\n                isReadOnly = (Boolean) readOnly;\n            }\n            else\n            {\n                isReadOnly = Boolean.parseBoolean( (String) readOnly );\n            }\n        }\n                \n        nodeEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                return IndexType.newBaseDocument( (Long) entityId );\n            }\n            \n            public Class<? extends PropertyContainer> getType()\n            {\n                return Node.class;\n            }\n        };\n        relationshipEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                RelationshipId relId = (RelationshipId) entityId;\n                Document doc = IndexType.newBaseDocument( relId.id );\n                doc.add( new Field( LuceneIndex.KEY_START_NODE_ID, \"\" + relId.startNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                doc.add( new Field( LuceneIndex.KEY_END_NODE_ID, \"\" + relId.endNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                return doc;\n            }\n\n            public Class<? extends PropertyContainer> getType()\n            {\n                return Relationship.class;\n            }\n        };\n\n        XaCommandFactory cf = new LuceneCommandFactory();\n        XaTransactionFactory tf = new LuceneTransactionFactory();\n        xaContainer = XaContainer.create( this, this.baseStorePath + \"/lucene.log\", cf, tf, params );\n\n        if ( !isReadOnly )\n        {\n            try\n            {\n                xaContainer.openLogicalLog();\n            }\n            catch ( IOException e )\n            {\n                throw new RuntimeException( \"Unable to open lucene log in \" +\n                        this.baseStorePath, e );\n            }\n            \n            xaContainer.getLogicalLog().setKeepLogs(\n                    shouldKeepLog( (String) params.get( Config.KEEP_LOGICAL_LOGS ), DEFAULT_NAME ) );\n            setLogicalLogAtCreationTime( xaContainer.getLogicalLog() );\n        }\n    }","id":1469,"modified_method":"/**\n     * Constructs this data source.\n     * \n     * @param params XA parameters.\n     * @throws InstantiationException if the data source couldn't be\n     * instantiated\n     */\n    public LuceneDataSource( Map<Object,Object> params ) \n        throws InstantiationException\n    {\n        super( params );\n        caching = new Cache();\n        String storeDir = (String) params.get( \"store_dir\" );\n        this.baseStorePath = getStoreDir( storeDir ).first();\n        cleanWriteLocks( baseStorePath );\n        this.indexStore = (IndexStore) params.get( IndexStore.class );\n        this.providerStore = newIndexStore( storeDir );\n        this.typeCache = new IndexTypeCache( indexStore );\n        boolean isReadOnly = false;\n        if ( params.containsKey( \"read_only\" ) )\n        {\n            Object readOnly = params.get( \"read_only\" );\n            if ( readOnly instanceof Boolean )\n            {\n                isReadOnly = (Boolean) readOnly;\n            }\n            else\n            {\n                isReadOnly = Boolean.parseBoolean( (String) readOnly );\n            }\n        }\n                \n        nodeEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                return IndexType.newBaseDocument( (Long) entityId );\n            }\n            \n            public Class<? extends PropertyContainer> getType()\n            {\n                return Node.class;\n            }\n        };\n        relationshipEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                RelationshipId relId = (RelationshipId) entityId;\n                Document doc = IndexType.newBaseDocument( relId.id );\n                doc.add( new Field( LuceneIndex.KEY_START_NODE_ID, \"\" + relId.startNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                doc.add( new Field( LuceneIndex.KEY_END_NODE_ID, \"\" + relId.endNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                return doc;\n            }\n\n            public Class<? extends PropertyContainer> getType()\n            {\n                return Relationship.class;\n            }\n        };\n\n        XaCommandFactory cf = new LuceneCommandFactory();\n        XaTransactionFactory tf = new LuceneTransactionFactory();\n        xaContainer = XaContainer.create( this, this.baseStorePath + \"/lucene.log\", cf, tf, params );\n\n        if ( !isReadOnly )\n        {\n            try\n            {\n                xaContainer.openLogicalLog();\n            }\n            catch ( IOException e )\n            {\n                throw new RuntimeException( \"Unable to open lucene log in \" +\n                        this.baseStorePath, e );\n            }\n            \n            xaContainer.getLogicalLog().setKeepLogs(\n                    shouldKeepLog( (String) params.get( Config.KEEP_LOGICAL_LOGS ), DEFAULT_NAME ) );\n            setLogicalLogAtCreationTime( xaContainer.getLogicalLog() );\n        }\n    }","commit_id":"50f951ad31188e63dffcccf2dd17ba52d5d9de4a","url":"https://github.com/neo4j/neo4j"},{"original_method":"static String getStoreDir( String dbStoreDir )\n    {\n        File dir = new File( new File( dbStoreDir ), \"index\" );\n        if ( !dir.exists() )\n        {\n            if ( !dir.mkdirs() )\n            {\n                throw new RuntimeException( \"Unable to create directory path[\"\n                    + dir.getAbsolutePath() + \"] for Neo4j store.\" );\n            }\n        }\n        return dir.getAbsolutePath();\n    }","id":1470,"modified_method":"static Pair<String, Boolean> getStoreDir( String dbStoreDir )\n    {\n        File dir = new File( new File( dbStoreDir ), \"index\" );\n        boolean created = false;\n        if ( !dir.exists() )\n        {\n            if ( !dir.mkdirs() )\n            {\n                throw new RuntimeException( \"Unable to create directory path[\"\n                    + dir.getAbsolutePath() + \"] for Neo4j store.\" );\n            }\n            created = true;\n        }\n        return Pair.of( dir.getAbsolutePath(), created );\n    }","commit_id":"50f951ad31188e63dffcccf2dd17ba52d5d9de4a","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Ignore\n    @Test\n    public void testInsertionSpeed()\n    {\n        BatchInserter inserter = new BatchInserterImpl( PATH );\n        BatchInserterIndexProvider provider = new LuceneBatchInserterIndexProvider(\n                inserter );\n        BatchInserterIndex index = provider.nodeIndex( \"yeah\",\n                LuceneIndexProvider.EXACT_CONFIG );\n        long t = System.currentTimeMillis();\n        for ( int i = 0; i < 100000; i++ )\n        {\n            long id = inserter.createNode( null );\n            index.add( id, MapUtil.map( \"key\", \"value\" + i ) );\n        }\n        System.out.println( \"insert:\" + ( System.currentTimeMillis() - t ) );\n        index.flush();\n\n        t = System.currentTimeMillis();\n        for ( int i = 0; i < 10000; i++ )\n        {\n            for ( long n : index.get( \"key\", \"value\" + i ) )\n            {\n            }\n        }\n        System.out.println( \"get:\" + ( System.currentTimeMillis() - t ) );\n    }","id":1471,"modified_method":"@Ignore\n    @Test\n    public void testInsertionSpeed()\n    {\n        BatchInserter inserter = new BatchInserterImpl( PATH );\n        BatchInserterIndexProvider provider = new LuceneBatchInserterIndexProvider( inserter );\n        BatchInserterIndex index = provider.nodeIndex( \"yeah\", LuceneIndexProvider.EXACT_CONFIG );\n        index.setCacheCapacity( \"key\", 1000000 );\n        long t = System.currentTimeMillis();\n        for ( int i = 0; i < 1000000; i++ )\n        {\n            Map<String, Object> properties = MapUtil.map( \"key\", \"value\" + i );\n            long id = inserter.createNode( properties );\n            index.add( id, properties );\n        }\n        System.out.println( \"insert:\" + ( System.currentTimeMillis() - t ) );\n        index.flush();\n\n        t = System.currentTimeMillis();\n        for ( int i = 0; i < 1000000; i++ )\n        {\n            IteratorUtil.count( (Iterator<Long>) index.get( \"key\", \"value\" + i ) );\n        }\n        System.out.println( \"get:\" + ( System.currentTimeMillis() - t ) );\n    }","commit_id":"50f951ad31188e63dffcccf2dd17ba52d5d9de4a","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void testCanIndexRelatoinships()\n    {\n        BatchInserter inserter = new BatchInserterImpl( PATH );\n        BatchInserterIndexProvider indexProvider = new LuceneBatchInserterIndexProvider(\n                inserter );\n        BatchInserterIndex edgesIndex = indexProvider.relationshipIndex(\n                \"edgeIndex\",\n                MapUtil.stringMap( \"provider\", \"lucene\", \"type\", \"exact\" ) );\n\n        long nodeId1 = inserter.createNode( MapUtil.map( \"ID\", \"1\" ) );\n        long nodeId2 = inserter.createNode( MapUtil.map( \"ID\", \"2\" ) );\n        long relationshipId = inserter.createRelationship( nodeId1, nodeId2,\n                EdgeType.KNOWS, null );\n\n        edgesIndex.add( relationshipId,\n                MapUtil.map( \"EDGE_TYPE\", EdgeType.KNOWS.name() ) );\n        edgesIndex.flush();\n\n        assertEquals(\n                String.format( \"Should return relationship id\" ),\n                new Long( relationshipId ),\n                edgesIndex.query( \"EDGE_TYPE\", EdgeType.KNOWS.name() ).getSingle() );\n\n        indexProvider.shutdown();\n        inserter.shutdown();\n    }","id":1472,"modified_method":"@Test\n    public void testCanIndexRelationships()\n    {\n        BatchInserter inserter = new BatchInserterImpl( PATH );\n        BatchInserterIndexProvider indexProvider = new LuceneBatchInserterIndexProvider(\n                inserter );\n        BatchInserterIndex edgesIndex = indexProvider.relationshipIndex(\n                \"edgeIndex\",\n                MapUtil.stringMap( \"provider\", \"lucene\", \"type\", \"exact\" ) );\n\n        long nodeId1 = inserter.createNode( MapUtil.map( \"ID\", \"1\" ) );\n        long nodeId2 = inserter.createNode( MapUtil.map( \"ID\", \"2\" ) );\n        long relationshipId = inserter.createRelationship( nodeId1, nodeId2,\n                EdgeType.KNOWS, null );\n\n        edgesIndex.add( relationshipId,\n                MapUtil.map( \"EDGE_TYPE\", EdgeType.KNOWS.name() ) );\n        edgesIndex.flush();\n\n        assertEquals(\n                String.format( \"Should return relationship id\" ),\n                new Long( relationshipId ),\n                edgesIndex.query( \"EDGE_TYPE\", EdgeType.KNOWS.name() ).getSingle() );\n\n        indexProvider.shutdown();\n        inserter.shutdown();\n    }","commit_id":"50f951ad31188e63dffcccf2dd17ba52d5d9de4a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void endReached()\n    {\n        if ( this.searcherOrNull != null )\n        {\n            this.searcherOrNull.closeStrict();\n        }\n    }","id":1473,"modified_method":"protected void endReached()\n    {\n        if ( this.searcherOrNull != null )\n        {\n            this.searcherOrNull.closeStrict();\n        }\n    }","commit_id":"56c0e26cafce3aae6b98d4723c988fd23af41d17","url":"https://github.com/neo4j/neo4j"},{"original_method":"private IndexSearcher searcher()\n    {\n        IndexSearcher result = this.searcher;\n        try\n        {\n            if ( result == null || writerModified )\n            {\n                if ( result != null )\n                {\n                    result.getIndexReader().close();\n                    result.close();\n                }\n                IndexReader newReader = writer().getReader();\n                result = new IndexSearcher( newReader );\n                writerModified = false;\n            }\n            return result;\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            this.searcher = result;\n        }\n    }","id":1474,"modified_method":"private IndexSearcher searcher()\n    {\n        IndexSearcher result = this.searcher;\n        try\n        {\n            if ( result == null || writerModified )\n            {\n                if ( result != null )\n                {\n                    result.getIndexReader().close();\n                    result.close();\n                }\n                IndexReader newReader = writer.getReader();\n                result = new IndexSearcher( newReader );\n                writerModified = false;\n            }\n            return result;\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            this.searcher = result;\n        }\n    }","commit_id":"56c0e26cafce3aae6b98d4723c988fd23af41d17","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void updateOrAdd( long entityId, Map<String, Object> properties )\n    {\n        try\n        {\n            writer().deleteDocuments( type.idTermQuery( entityId ) );\n            add( entityId, properties );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","id":1475,"modified_method":"public void updateOrAdd( long entityId, Map<String, Object> properties )\n    {\n        try\n        {\n            removeFromCache( entityId );\n            writer.deleteDocuments( type.idTermQuery( entityId ) );\n            add( entityId, properties );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"56c0e26cafce3aae6b98d4723c988fd23af41d17","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IndexHits<Long> query( String key, Object queryOrQueryObject )\n    {\n        return query( type.query( key, queryOrQueryObject, null ) );\n    }","id":1476,"modified_method":"public IndexHits<Long> query( String key, Object queryOrQueryObject )\n    {\n        return query( type.query( key, queryOrQueryObject, null ), null, null );\n    }","commit_id":"56c0e26cafce3aae6b98d4723c988fd23af41d17","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IndexHits<Long> query( Object queryOrQueryObject )\n    {\n        return query( type.query( null, queryOrQueryObject, null ) );\n    }","id":1477,"modified_method":"public IndexHits<Long> query( Object queryOrQueryObject )\n    {\n        return query( type.query( null, queryOrQueryObject, null ), null, null );\n    }","commit_id":"56c0e26cafce3aae6b98d4723c988fd23af41d17","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IndexHits<Long> get( String key, Object value )\n    {\n        return query( type.get( key, value ) );\n    }","id":1478,"modified_method":"public IndexHits<Long> get( String key, Object value )\n    {\n        IndexHits<Long> cached = getFromCache( key, value );\n        return cached != null ? cached : query( type.get( key, value ), key, value );\n    }","commit_id":"56c0e26cafce3aae6b98d4723c988fd23af41d17","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void add( long entityId, Map<String, Object> properties )\n    {\n        try\n        {\n            Document document = identifier.entityType.newDocument( entityId );\n            for ( Map.Entry<String, Object> entry : properties.entrySet() )\n            {\n                String key = entry.getKey();\n                for ( Object value : IoPrimitiveUtils.asArray( entry.getValue() ) )\n                {\n                    type.addToDocument( document, key, value );\n                }\n            }\n            writer().addDocument( document );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","id":1479,"modified_method":"public void add( long entityId, Map<String, Object> properties )\n    {\n        try\n        {\n            Document document = identifier.entityType.newDocument( entityId );\n            for ( Map.Entry<String, Object> entry : properties.entrySet() )\n            {\n                String key = entry.getKey();\n                for ( Object value : IoPrimitiveUtils.asArray( entry.getValue() ) )\n                {\n                    type.addToDocument( document, key, value );\n                    if ( createdNow )\n                    {\n                        // If we know that the index was created this session\n                        // then we can go ahead and add stuff to the cache directly\n                        // when adding to the index.\n                        addToCache( entityId, key, value );\n                    }\n                }\n            }\n            writer.addDocument( document );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"56c0e26cafce3aae6b98d4723c988fd23af41d17","url":"https://github.com/neo4j/neo4j"},{"original_method":"LuceneBatchInserterIndex( LuceneBatchInserterIndexProvider provider,\n            BatchInserter inserter, IndexIdentifier identifier, Map<String, String> config )\n    {\n        String dbStoreDir = ((BatchInserterImpl) inserter).getStore();\n        this.storeDir = LuceneDataSource.getStoreDir( dbStoreDir );\n        this.identifier = identifier;\n        this.type = IndexType.getIndexType( identifier, config );\n    }","id":1480,"modified_method":"LuceneBatchInserterIndex( LuceneBatchInserterIndexProvider provider,\n            BatchInserter inserter, IndexIdentifier identifier, Map<String, String> config )\n    {\n        String dbStoreDir = ((BatchInserterImpl) inserter).getStore();\n        Pair<String, Boolean> storeDir = LuceneDataSource.getStoreDir( dbStoreDir );\n        this.createdNow = storeDir.other();\n        this.identifier = identifier;\n        this.type = IndexType.getIndexType( identifier, config );\n        this.writer = instantiateWriter( storeDir.first() );\n    }","commit_id":"56c0e26cafce3aae6b98d4723c988fd23af41d17","url":"https://github.com/neo4j/neo4j"},{"original_method":"static String getStoreDir( String dbStoreDir )\n    {\n        File dir = new File( new File( dbStoreDir ), \"index\" );\n        if ( !dir.exists() )\n        {\n            if ( !dir.mkdirs() )\n            {\n                throw new RuntimeException( \"Unable to create directory path[\"\n                    + dir.getAbsolutePath() + \"] for Neo4j store.\" );\n            }\n        }\n        return dir.getAbsolutePath();\n    }","id":1481,"modified_method":"static Pair<String, Boolean> getStoreDir( String dbStoreDir )\n    {\n        File dir = new File( new File( dbStoreDir ), \"index\" );\n        boolean created = false;\n        if ( !dir.exists() )\n        {\n            if ( !dir.mkdirs() )\n            {\n                throw new RuntimeException( \"Unable to create directory path[\"\n                    + dir.getAbsolutePath() + \"] for Neo4j store.\" );\n            }\n            created = true;\n        }\n        return Pair.of( dir.getAbsolutePath(), created );\n    }","commit_id":"56c0e26cafce3aae6b98d4723c988fd23af41d17","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Constructs this data source.\n     * \n     * @param params XA parameters.\n     * @throws InstantiationException if the data source couldn't be\n     * instantiated\n     */\n    public LuceneDataSource( Map<Object,Object> params ) \n        throws InstantiationException\n    {\n        super( params );\n        caching = new Cache();\n        String storeDir = (String) params.get( \"store_dir\" );\n        this.baseStorePath = getStoreDir( storeDir );\n        cleanWriteLocks( baseStorePath );\n        this.indexStore = (IndexStore) params.get( IndexStore.class );\n        this.providerStore = newIndexStore( storeDir );\n        this.typeCache = new IndexTypeCache( indexStore );\n        boolean isReadOnly = false;\n        if ( params.containsKey( \"read_only\" ) )\n        {\n            Object readOnly = params.get( \"read_only\" );\n            if ( readOnly instanceof Boolean )\n            {\n                isReadOnly = (Boolean) readOnly;\n            }\n            else\n            {\n                isReadOnly = Boolean.parseBoolean( (String) readOnly );\n            }\n        }\n                \n        nodeEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                return IndexType.newBaseDocument( (Long) entityId );\n            }\n            \n            public Class<? extends PropertyContainer> getType()\n            {\n                return Node.class;\n            }\n        };\n        relationshipEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                RelationshipId relId = (RelationshipId) entityId;\n                Document doc = IndexType.newBaseDocument( relId.id );\n                doc.add( new Field( LuceneIndex.KEY_START_NODE_ID, \"\" + relId.startNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                doc.add( new Field( LuceneIndex.KEY_END_NODE_ID, \"\" + relId.endNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                return doc;\n            }\n\n            public Class<? extends PropertyContainer> getType()\n            {\n                return Relationship.class;\n            }\n        };\n\n        XaCommandFactory cf = new LuceneCommandFactory();\n        XaTransactionFactory tf = new LuceneTransactionFactory();\n        xaContainer = XaContainer.create( this, this.baseStorePath + \"/lucene.log\", cf, tf, params );\n\n        if ( !isReadOnly )\n        {\n            try\n            {\n                xaContainer.openLogicalLog();\n            }\n            catch ( IOException e )\n            {\n                throw new RuntimeException( \"Unable to open lucene log in \" +\n                        this.baseStorePath, e );\n            }\n            \n            xaContainer.getLogicalLog().setKeepLogs(\n                    shouldKeepLog( (String) params.get( Config.KEEP_LOGICAL_LOGS ), DEFAULT_NAME ) );\n            setLogicalLogAtCreationTime( xaContainer.getLogicalLog() );\n        }\n    }","id":1482,"modified_method":"/**\n     * Constructs this data source.\n     * \n     * @param params XA parameters.\n     * @throws InstantiationException if the data source couldn't be\n     * instantiated\n     */\n    public LuceneDataSource( Map<Object,Object> params ) \n        throws InstantiationException\n    {\n        super( params );\n        caching = new Cache();\n        String storeDir = (String) params.get( \"store_dir\" );\n        this.baseStorePath = getStoreDir( storeDir ).first();\n        cleanWriteLocks( baseStorePath );\n        this.indexStore = (IndexStore) params.get( IndexStore.class );\n        this.providerStore = newIndexStore( storeDir );\n        this.typeCache = new IndexTypeCache( indexStore );\n        boolean isReadOnly = false;\n        if ( params.containsKey( \"read_only\" ) )\n        {\n            Object readOnly = params.get( \"read_only\" );\n            if ( readOnly instanceof Boolean )\n            {\n                isReadOnly = (Boolean) readOnly;\n            }\n            else\n            {\n                isReadOnly = Boolean.parseBoolean( (String) readOnly );\n            }\n        }\n                \n        nodeEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                return IndexType.newBaseDocument( (Long) entityId );\n            }\n            \n            public Class<? extends PropertyContainer> getType()\n            {\n                return Node.class;\n            }\n        };\n        relationshipEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                RelationshipId relId = (RelationshipId) entityId;\n                Document doc = IndexType.newBaseDocument( relId.id );\n                doc.add( new Field( LuceneIndex.KEY_START_NODE_ID, \"\" + relId.startNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                doc.add( new Field( LuceneIndex.KEY_END_NODE_ID, \"\" + relId.endNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                return doc;\n            }\n\n            public Class<? extends PropertyContainer> getType()\n            {\n                return Relationship.class;\n            }\n        };\n\n        XaCommandFactory cf = new LuceneCommandFactory();\n        XaTransactionFactory tf = new LuceneTransactionFactory();\n        xaContainer = XaContainer.create( this, this.baseStorePath + \"/lucene.log\", cf, tf, params );\n\n        if ( !isReadOnly )\n        {\n            try\n            {\n                xaContainer.openLogicalLog();\n            }\n            catch ( IOException e )\n            {\n                throw new RuntimeException( \"Unable to open lucene log in \" +\n                        this.baseStorePath, e );\n            }\n            \n            xaContainer.getLogicalLog().setKeepLogs(\n                    shouldKeepLog( (String) params.get( Config.KEEP_LOGICAL_LOGS ), DEFAULT_NAME ) );\n            setLogicalLogAtCreationTime( xaContainer.getLogicalLog() );\n        }\n    }","commit_id":"56c0e26cafce3aae6b98d4723c988fd23af41d17","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void testCanIndexRelatoinships()\n    {\n        BatchInserter inserter = new BatchInserterImpl( PATH );\n        BatchInserterIndexProvider indexProvider = new LuceneBatchInserterIndexProvider(\n                inserter );\n        BatchInserterIndex edgesIndex = indexProvider.relationshipIndex(\n                \"edgeIndex\",\n                MapUtil.stringMap( \"provider\", \"lucene\", \"type\", \"exact\" ) );\n\n        long nodeId1 = inserter.createNode( MapUtil.map( \"ID\", \"1\" ) );\n        long nodeId2 = inserter.createNode( MapUtil.map( \"ID\", \"2\" ) );\n        long relationshipId = inserter.createRelationship( nodeId1, nodeId2,\n                EdgeType.KNOWS, null );\n\n        edgesIndex.add( relationshipId,\n                MapUtil.map( \"EDGE_TYPE\", EdgeType.KNOWS.name() ) );\n        edgesIndex.flush();\n\n        assertEquals(\n                String.format( \"Should return relationship id\" ),\n                new Long( relationshipId ),\n                edgesIndex.query( \"EDGE_TYPE\", EdgeType.KNOWS.name() ).getSingle() );\n\n        indexProvider.shutdown();\n        inserter.shutdown();\n    }","id":1483,"modified_method":"@Test\n    public void testCanIndexRelationships()\n    {\n        BatchInserter inserter = new BatchInserterImpl( PATH );\n        BatchInserterIndexProvider indexProvider = new LuceneBatchInserterIndexProvider(\n                inserter );\n        BatchInserterIndex edgesIndex = indexProvider.relationshipIndex(\n                \"edgeIndex\",\n                MapUtil.stringMap( \"provider\", \"lucene\", \"type\", \"exact\" ) );\n\n        long nodeId1 = inserter.createNode( MapUtil.map( \"ID\", \"1\" ) );\n        long nodeId2 = inserter.createNode( MapUtil.map( \"ID\", \"2\" ) );\n        long relationshipId = inserter.createRelationship( nodeId1, nodeId2,\n                EdgeType.KNOWS, null );\n\n        edgesIndex.add( relationshipId,\n                MapUtil.map( \"EDGE_TYPE\", EdgeType.KNOWS.name() ) );\n        edgesIndex.flush();\n\n        assertEquals(\n                String.format( \"Should return relationship id\" ),\n                new Long( relationshipId ),\n                edgesIndex.query( \"EDGE_TYPE\", EdgeType.KNOWS.name() ).getSingle() );\n\n        indexProvider.shutdown();\n        inserter.shutdown();\n    }","commit_id":"56c0e26cafce3aae6b98d4723c988fd23af41d17","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Ignore\n    @Test\n    public void testInsertionSpeed()\n    {\n        BatchInserter inserter = new BatchInserterImpl( PATH );\n        BatchInserterIndexProvider provider = new LuceneBatchInserterIndexProvider(\n                inserter );\n        BatchInserterIndex index = provider.nodeIndex( \"yeah\",\n                LuceneIndexProvider.EXACT_CONFIG );\n        long t = System.currentTimeMillis();\n        for ( int i = 0; i < 100000; i++ )\n        {\n            long id = inserter.createNode( null );\n            index.add( id, MapUtil.map( \"key\", \"value\" + i ) );\n        }\n        System.out.println( \"insert:\" + ( System.currentTimeMillis() - t ) );\n        index.flush();\n\n        t = System.currentTimeMillis();\n        for ( int i = 0; i < 10000; i++ )\n        {\n            for ( long n : index.get( \"key\", \"value\" + i ) )\n            {\n            }\n        }\n        System.out.println( \"get:\" + ( System.currentTimeMillis() - t ) );\n    }","id":1484,"modified_method":"@Ignore\n    @Test\n    public void testInsertionSpeed()\n    {\n        BatchInserter inserter = new BatchInserterImpl( PATH );\n        BatchInserterIndexProvider provider = new LuceneBatchInserterIndexProvider( inserter );\n        BatchInserterIndex index = provider.nodeIndex( \"yeah\", LuceneIndexProvider.EXACT_CONFIG );\n        index.setCacheCapacity( \"key\", 1000000 );\n        long t = System.currentTimeMillis();\n        for ( int i = 0; i < 1000000; i++ )\n        {\n            Map<String, Object> properties = MapUtil.map( \"key\", \"value\" + i );\n            long id = inserter.createNode( properties );\n            index.add( id, properties );\n        }\n        System.out.println( \"insert:\" + ( System.currentTimeMillis() - t ) );\n        index.flush();\n\n        t = System.currentTimeMillis();\n        for ( int i = 0; i < 1000000; i++ )\n        {\n            IteratorUtil.count( (Iterator<Long>) index.get( \"key\", \"value\" + i ) );\n        }\n        System.out.println( \"get:\" + ( System.currentTimeMillis() - t ) );\n    }","commit_id":"56c0e26cafce3aae6b98d4723c988fd23af41d17","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void endReached()\n    {\n        if ( this.searcherOrNull != null )\n        {\n            this.searcherOrNull.closeStrict();\n        }\n    }","id":1485,"modified_method":"protected void endReached()\n    {\n        if ( this.searcherOrNull != null )\n        {\n            this.searcherOrNull.closeStrict();\n        }\n    }","commit_id":"283d655a6fa8ae648ef5c1cc3cb22bf65cea0eba","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void add( long entityId, Map<String, Object> properties )\n    {\n        try\n        {\n            Document document = identifier.entityType.newDocument( entityId );\n            for ( Map.Entry<String, Object> entry : properties.entrySet() )\n            {\n                String key = entry.getKey();\n                for ( Object value : IoPrimitiveUtils.asArray( entry.getValue() ) )\n                {\n                    type.addToDocument( document, key, value );\n                }\n            }\n            writer().addDocument( document );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","id":1486,"modified_method":"public void add( long entityId, Map<String, Object> properties )\n    {\n        try\n        {\n            Document document = identifier.entityType.newDocument( entityId );\n            for ( Map.Entry<String, Object> entry : properties.entrySet() )\n            {\n                String key = entry.getKey();\n                for ( Object value : IoPrimitiveUtils.asArray( entry.getValue() ) )\n                {\n                    type.addToDocument( document, key, value );\n                    if ( createdNow )\n                    {\n                        // If we know that the index was created this session\n                        // then we can go ahead and add stuff to the cache directly\n                        // when adding to the index.\n                        addToCache( entityId, key, value );\n                    }\n                }\n            }\n            writer.addDocument( document );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"283d655a6fa8ae648ef5c1cc3cb22bf65cea0eba","url":"https://github.com/neo4j/neo4j"},{"original_method":"private IndexSearcher searcher()\n    {\n        IndexSearcher result = this.searcher;\n        try\n        {\n            if ( result == null || writerModified )\n            {\n                if ( result != null )\n                {\n                    result.getIndexReader().close();\n                    result.close();\n                }\n                IndexReader newReader = writer().getReader();\n                result = new IndexSearcher( newReader );\n                writerModified = false;\n            }\n            return result;\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            this.searcher = result;\n        }\n    }","id":1487,"modified_method":"private IndexSearcher searcher()\n    {\n        IndexSearcher result = this.searcher;\n        try\n        {\n            if ( result == null || writerModified )\n            {\n                if ( result != null )\n                {\n                    result.getIndexReader().close();\n                    result.close();\n                }\n                IndexReader newReader = writer.getReader();\n                result = new IndexSearcher( newReader );\n                writerModified = false;\n            }\n            return result;\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            this.searcher = result;\n        }\n    }","commit_id":"283d655a6fa8ae648ef5c1cc3cb22bf65cea0eba","url":"https://github.com/neo4j/neo4j"},{"original_method":"LuceneBatchInserterIndex( LuceneBatchInserterIndexProvider provider,\n            BatchInserter inserter, IndexIdentifier identifier, Map<String, String> config )\n    {\n        String dbStoreDir = ((BatchInserterImpl) inserter).getStore();\n        this.storeDir = LuceneDataSource.getStoreDir( dbStoreDir );\n        this.identifier = identifier;\n        this.type = IndexType.getIndexType( identifier, config );\n    }","id":1488,"modified_method":"LuceneBatchInserterIndex( LuceneBatchInserterIndexProvider provider,\n            BatchInserter inserter, IndexIdentifier identifier, Map<String, String> config )\n    {\n        String dbStoreDir = ((BatchInserterImpl) inserter).getStore();\n        Pair<String, Boolean> storeDir = LuceneDataSource.getStoreDir( dbStoreDir );\n        this.createdNow = storeDir.other();\n        this.identifier = identifier;\n        this.type = IndexType.getIndexType( identifier, config );\n        this.writer = instantiateWriter( storeDir.first() );\n    }","commit_id":"283d655a6fa8ae648ef5c1cc3cb22bf65cea0eba","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IndexHits<Long> get( String key, Object value )\n    {\n        return query( type.get( key, value ) );\n    }","id":1489,"modified_method":"public IndexHits<Long> get( String key, Object value )\n    {\n        IndexHits<Long> cached = getFromCache( key, value );\n        return cached != null ? cached : query( type.get( key, value ), key, value );\n    }","commit_id":"283d655a6fa8ae648ef5c1cc3cb22bf65cea0eba","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void updateOrAdd( long entityId, Map<String, Object> properties )\n    {\n        try\n        {\n            writer().deleteDocuments( type.idTermQuery( entityId ) );\n            add( entityId, properties );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","id":1490,"modified_method":"public void updateOrAdd( long entityId, Map<String, Object> properties )\n    {\n        try\n        {\n            removeFromCache( entityId );\n            writer.deleteDocuments( type.idTermQuery( entityId ) );\n            add( entityId, properties );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"283d655a6fa8ae648ef5c1cc3cb22bf65cea0eba","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IndexHits<Long> query( String key, Object queryOrQueryObject )\n    {\n        return query( type.query( key, queryOrQueryObject, null ) );\n    }","id":1491,"modified_method":"public IndexHits<Long> query( String key, Object queryOrQueryObject )\n    {\n        return query( type.query( key, queryOrQueryObject, null ), null, null );\n    }","commit_id":"283d655a6fa8ae648ef5c1cc3cb22bf65cea0eba","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IndexHits<Long> query( Object queryOrQueryObject )\n    {\n        return query( type.query( null, queryOrQueryObject, null ) );\n    }","id":1492,"modified_method":"public IndexHits<Long> query( Object queryOrQueryObject )\n    {\n        return query( type.query( null, queryOrQueryObject, null ), null, null );\n    }","commit_id":"283d655a6fa8ae648ef5c1cc3cb22bf65cea0eba","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Constructs this data source.\n     * \n     * @param params XA parameters.\n     * @throws InstantiationException if the data source couldn't be\n     * instantiated\n     */\n    public LuceneDataSource( Map<Object,Object> params ) \n        throws InstantiationException\n    {\n        super( params );\n        caching = new Cache();\n        String storeDir = (String) params.get( \"store_dir\" );\n        this.baseStorePath = getStoreDir( storeDir );\n        cleanWriteLocks( baseStorePath );\n        this.indexStore = (IndexStore) params.get( IndexStore.class );\n        this.providerStore = newIndexStore( storeDir );\n        this.typeCache = new IndexTypeCache( indexStore );\n        boolean isReadOnly = false;\n        if ( params.containsKey( \"read_only\" ) )\n        {\n            Object readOnly = params.get( \"read_only\" );\n            if ( readOnly instanceof Boolean )\n            {\n                isReadOnly = (Boolean) readOnly;\n            }\n            else\n            {\n                isReadOnly = Boolean.parseBoolean( (String) readOnly );\n            }\n        }\n                \n        nodeEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                return IndexType.newBaseDocument( (Long) entityId );\n            }\n            \n            public Class<? extends PropertyContainer> getType()\n            {\n                return Node.class;\n            }\n        };\n        relationshipEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                RelationshipId relId = (RelationshipId) entityId;\n                Document doc = IndexType.newBaseDocument( relId.id );\n                doc.add( new Field( LuceneIndex.KEY_START_NODE_ID, \"\" + relId.startNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                doc.add( new Field( LuceneIndex.KEY_END_NODE_ID, \"\" + relId.endNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                return doc;\n            }\n\n            public Class<? extends PropertyContainer> getType()\n            {\n                return Relationship.class;\n            }\n        };\n\n        XaCommandFactory cf = new LuceneCommandFactory();\n        XaTransactionFactory tf = new LuceneTransactionFactory();\n        xaContainer = XaContainer.create( this, this.baseStorePath + \"/lucene.log\", cf, tf, params );\n\n        if ( !isReadOnly )\n        {\n            try\n            {\n                xaContainer.openLogicalLog();\n            }\n            catch ( IOException e )\n            {\n                throw new RuntimeException( \"Unable to open lucene log in \" +\n                        this.baseStorePath, e );\n            }\n            \n            xaContainer.getLogicalLog().setKeepLogs(\n                    shouldKeepLog( (String) params.get( Config.KEEP_LOGICAL_LOGS ), DEFAULT_NAME ) );\n            setLogicalLogAtCreationTime( xaContainer.getLogicalLog() );\n        }\n    }","id":1493,"modified_method":"/**\n     * Constructs this data source.\n     * \n     * @param params XA parameters.\n     * @throws InstantiationException if the data source couldn't be\n     * instantiated\n     */\n    public LuceneDataSource( Map<Object,Object> params ) \n        throws InstantiationException\n    {\n        super( params );\n        caching = new Cache();\n        String storeDir = (String) params.get( \"store_dir\" );\n        this.baseStorePath = getStoreDir( storeDir ).first();\n        cleanWriteLocks( baseStorePath );\n        this.indexStore = (IndexStore) params.get( IndexStore.class );\n        this.providerStore = newIndexStore( storeDir );\n        this.typeCache = new IndexTypeCache( indexStore );\n        boolean isReadOnly = false;\n        if ( params.containsKey( \"read_only\" ) )\n        {\n            Object readOnly = params.get( \"read_only\" );\n            if ( readOnly instanceof Boolean )\n            {\n                isReadOnly = (Boolean) readOnly;\n            }\n            else\n            {\n                isReadOnly = Boolean.parseBoolean( (String) readOnly );\n            }\n        }\n                \n        nodeEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                return IndexType.newBaseDocument( (Long) entityId );\n            }\n            \n            public Class<? extends PropertyContainer> getType()\n            {\n                return Node.class;\n            }\n        };\n        relationshipEntityType = new EntityType()\n        {\n            public Document newDocument( Object entityId )\n            {\n                RelationshipId relId = (RelationshipId) entityId;\n                Document doc = IndexType.newBaseDocument( relId.id );\n                doc.add( new Field( LuceneIndex.KEY_START_NODE_ID, \"\" + relId.startNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                doc.add( new Field( LuceneIndex.KEY_END_NODE_ID, \"\" + relId.endNode,\n                        Store.YES, org.apache.lucene.document.Field.Index.NOT_ANALYZED ) );\n                return doc;\n            }\n\n            public Class<? extends PropertyContainer> getType()\n            {\n                return Relationship.class;\n            }\n        };\n\n        XaCommandFactory cf = new LuceneCommandFactory();\n        XaTransactionFactory tf = new LuceneTransactionFactory();\n        xaContainer = XaContainer.create( this, this.baseStorePath + \"/lucene.log\", cf, tf, params );\n\n        if ( !isReadOnly )\n        {\n            try\n            {\n                xaContainer.openLogicalLog();\n            }\n            catch ( IOException e )\n            {\n                throw new RuntimeException( \"Unable to open lucene log in \" +\n                        this.baseStorePath, e );\n            }\n            \n            xaContainer.getLogicalLog().setKeepLogs(\n                    shouldKeepLog( (String) params.get( Config.KEEP_LOGICAL_LOGS ), DEFAULT_NAME ) );\n            setLogicalLogAtCreationTime( xaContainer.getLogicalLog() );\n        }\n    }","commit_id":"283d655a6fa8ae648ef5c1cc3cb22bf65cea0eba","url":"https://github.com/neo4j/neo4j"},{"original_method":"static String getStoreDir( String dbStoreDir )\n    {\n        File dir = new File( new File( dbStoreDir ), \"index\" );\n        if ( !dir.exists() )\n        {\n            if ( !dir.mkdirs() )\n            {\n                throw new RuntimeException( \"Unable to create directory path[\"\n                    + dir.getAbsolutePath() + \"] for Neo4j store.\" );\n            }\n        }\n        return dir.getAbsolutePath();\n    }","id":1494,"modified_method":"static Pair<String, Boolean> getStoreDir( String dbStoreDir )\n    {\n        File dir = new File( new File( dbStoreDir ), \"index\" );\n        boolean created = false;\n        if ( !dir.exists() )\n        {\n            if ( !dir.mkdirs() )\n            {\n                throw new RuntimeException( \"Unable to create directory path[\"\n                    + dir.getAbsolutePath() + \"] for Neo4j store.\" );\n            }\n            created = true;\n        }\n        return Pair.of( dir.getAbsolutePath(), created );\n    }","commit_id":"283d655a6fa8ae648ef5c1cc3cb22bf65cea0eba","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void testCanIndexRelatoinships()\n    {\n        BatchInserter inserter = new BatchInserterImpl( PATH );\n        BatchInserterIndexProvider indexProvider = new LuceneBatchInserterIndexProvider(\n                inserter );\n        BatchInserterIndex edgesIndex = indexProvider.relationshipIndex(\n                \"edgeIndex\",\n                MapUtil.stringMap( \"provider\", \"lucene\", \"type\", \"exact\" ) );\n\n        long nodeId1 = inserter.createNode( MapUtil.map( \"ID\", \"1\" ) );\n        long nodeId2 = inserter.createNode( MapUtil.map( \"ID\", \"2\" ) );\n        long relationshipId = inserter.createRelationship( nodeId1, nodeId2,\n                EdgeType.KNOWS, null );\n\n        edgesIndex.add( relationshipId,\n                MapUtil.map( \"EDGE_TYPE\", EdgeType.KNOWS.name() ) );\n        edgesIndex.flush();\n\n        assertEquals(\n                String.format( \"Should return relationship id\" ),\n                new Long( relationshipId ),\n                edgesIndex.query( \"EDGE_TYPE\", EdgeType.KNOWS.name() ).getSingle() );\n\n        indexProvider.shutdown();\n        inserter.shutdown();\n    }","id":1495,"modified_method":"@Test\n    public void testCanIndexRelationships()\n    {\n        BatchInserter inserter = new BatchInserterImpl( PATH );\n        BatchInserterIndexProvider indexProvider = new LuceneBatchInserterIndexProvider(\n                inserter );\n        BatchInserterIndex edgesIndex = indexProvider.relationshipIndex(\n                \"edgeIndex\",\n                MapUtil.stringMap( \"provider\", \"lucene\", \"type\", \"exact\" ) );\n\n        long nodeId1 = inserter.createNode( MapUtil.map( \"ID\", \"1\" ) );\n        long nodeId2 = inserter.createNode( MapUtil.map( \"ID\", \"2\" ) );\n        long relationshipId = inserter.createRelationship( nodeId1, nodeId2,\n                EdgeType.KNOWS, null );\n\n        edgesIndex.add( relationshipId,\n                MapUtil.map( \"EDGE_TYPE\", EdgeType.KNOWS.name() ) );\n        edgesIndex.flush();\n\n        assertEquals(\n                String.format( \"Should return relationship id\" ),\n                new Long( relationshipId ),\n                edgesIndex.query( \"EDGE_TYPE\", EdgeType.KNOWS.name() ).getSingle() );\n\n        indexProvider.shutdown();\n        inserter.shutdown();\n    }","commit_id":"283d655a6fa8ae648ef5c1cc3cb22bf65cea0eba","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Ignore\n    @Test\n    public void testInsertionSpeed()\n    {\n        BatchInserter inserter = new BatchInserterImpl( PATH );\n        BatchInserterIndexProvider provider = new LuceneBatchInserterIndexProvider(\n                inserter );\n        BatchInserterIndex index = provider.nodeIndex( \"yeah\",\n                LuceneIndexProvider.EXACT_CONFIG );\n        long t = System.currentTimeMillis();\n        for ( int i = 0; i < 100000; i++ )\n        {\n            long id = inserter.createNode( null );\n            index.add( id, MapUtil.map( \"key\", \"value\" + i ) );\n        }\n        System.out.println( \"insert:\" + ( System.currentTimeMillis() - t ) );\n        index.flush();\n\n        t = System.currentTimeMillis();\n        for ( int i = 0; i < 10000; i++ )\n        {\n            for ( long n : index.get( \"key\", \"value\" + i ) )\n            {\n            }\n        }\n        System.out.println( \"get:\" + ( System.currentTimeMillis() - t ) );\n    }","id":1496,"modified_method":"@Ignore\n    @Test\n    public void testInsertionSpeed()\n    {\n        BatchInserter inserter = new BatchInserterImpl( PATH );\n        BatchInserterIndexProvider provider = new LuceneBatchInserterIndexProvider( inserter );\n        BatchInserterIndex index = provider.nodeIndex( \"yeah\", LuceneIndexProvider.EXACT_CONFIG );\n        index.setCacheCapacity( \"key\", 1000000 );\n        long t = System.currentTimeMillis();\n        for ( int i = 0; i < 1000000; i++ )\n        {\n            Map<String, Object> properties = MapUtil.map( \"key\", \"value\" + i );\n            long id = inserter.createNode( properties );\n            index.add( id, properties );\n        }\n        System.out.println( \"insert:\" + ( System.currentTimeMillis() - t ) );\n        index.flush();\n\n        t = System.currentTimeMillis();\n        for ( int i = 0; i < 1000000; i++ )\n        {\n            IteratorUtil.count( (Iterator<Long>) index.get( \"key\", \"value\" + i ) );\n        }\n        System.out.println( \"get:\" + ( System.currentTimeMillis() - t ) );\n    }","commit_id":"283d655a6fa8ae648ef5c1cc3cb22bf65cea0eba","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void visit(CopyNodeInstruction instruction) {\n        String srcPath = instruction.getSourcePath();\n        checkAbsolutePath(srcPath);\n\n        String destPath = instruction.getDestPath();\n        if (!PathUtils.isAbsolute(destPath)) {\n            destPath = PathUtils.concat(instruction.getPath(), destPath);\n            checkAbsolutePath(destPath);\n        }\n\n        String srcParentPath = PathUtils.getParentPath(srcPath);\n        String srcNodeName = PathUtils.getName(srcPath);\n\n        String destParentPath = PathUtils.getParentPath(destPath);\n        String destNodeName = PathUtils.getName(destPath);\n\n        MongoNode srcParent = getStoredNode(srcParentPath);\n        if (!srcParent.childExists(srcNodeName)) {\n            throw new NotFoundException(srcPath);\n        }\n        MongoNode destParent = getStoredNode(destParentPath);\n        if (destParent.childExists(destNodeName)) {\n            throw new RuntimeException(\"Node already exists at copy destination path: \" + destPath);\n        }\n\n        // First, copy the existing nodes.\n        Map<String, MongoNode> nodesToCopy = new FetchNodesAction(nodeStore,\n                srcPath, headRevisionId).execute();\n        for (MongoNode nodeMongo : nodesToCopy.values()) {\n            String oldPath = nodeMongo.getPath();\n            String oldPathRel = PathUtils.relativize(srcPath, oldPath);\n            String newPath = PathUtils.concat(destPath, oldPathRel);\n\n            nodeMongo.setPath(newPath);\n            nodeMongo.removeField(\"_id\");\n            pathNodeMap.put(newPath, nodeMongo);\n        }\n\n        // Then, copy any staged changes.\n        MongoNode srcNode = getStoredNode(srcPath);\n        MongoNode destNode = getStagedNode(destPath);\n        copyStagedChanges(srcNode, destNode);\n\n        // Finally, add to destParent.\n        pathNodeMap.put(destPath, destNode);\n        destParent.addChild(destNodeName);\n    }","id":1497,"modified_method":"@Override\n    public void visit(CopyNodeInstruction instruction) {\n        String srcPath = instruction.getSourcePath();\n        checkAbsolutePath(srcPath);\n\n        String destPath = instruction.getDestPath();\n        if (!PathUtils.isAbsolute(destPath)) {\n            destPath = PathUtils.concat(instruction.getPath(), destPath);\n            checkAbsolutePath(destPath);\n        }\n\n        String srcParentPath = PathUtils.getParentPath(srcPath);\n        String srcNodeName = PathUtils.getName(srcPath);\n\n        String destParentPath = PathUtils.getParentPath(destPath);\n        String destNodeName = PathUtils.getName(destPath);\n\n        MongoNode srcParent = getStoredNode(srcParentPath);\n        if (!srcParent.childExists(srcNodeName)) {\n            throw new NotFoundException(srcPath);\n        }\n        MongoNode destParent = getStoredNode(destParentPath);\n        if (destParent.childExists(destNodeName)) {\n            throw new RuntimeException(\"Node already exists at copy destination path: \" + destPath);\n        }\n\n        // First, copy the existing nodes.\n        Map<String, MongoNode> nodesToCopy = new FetchNodesActionNew(nodeStore,\n                srcPath, headRevisionId).execute();\n        for (MongoNode nodeMongo : nodesToCopy.values()) {\n            String oldPath = nodeMongo.getPath();\n            String oldPathRel = PathUtils.relativize(srcPath, oldPath);\n            String newPath = PathUtils.concat(destPath, oldPathRel);\n\n            nodeMongo.setPath(newPath);\n            nodeMongo.removeField(\"_id\");\n            pathNodeMap.put(newPath, nodeMongo);\n        }\n\n        // Then, copy any staged changes.\n        MongoNode srcNode = getStoredNode(srcPath);\n        MongoNode destNode = getStagedNode(destPath);\n        copyStagedChanges(srcNode, destNode);\n\n        // Finally, add to destParent.\n        pathNodeMap.put(destPath, destNode);\n        destParent.addChild(destNodeName);\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public void visit(MoveNodeInstruction instruction) {\n        String srcPath = instruction.getSourcePath();\n        String destPath = instruction.getDestPath();\n        if (PathUtils.isAncestor(srcPath, destPath)) {\n            throw new RuntimeException(\"Target path cannot be descendant of source path: \"\n                    + destPath);\n        }\n\n        String srcParentPath = PathUtils.getParentPath(srcPath);\n        String srcNodeName = PathUtils.getName(srcPath);\n\n        String destParentPath = PathUtils.getParentPath(destPath);\n        String destNodeName = PathUtils.getName(destPath);\n\n        MongoNode srcParent = getStoredNode(srcParentPath);\n        if (!srcParent.childExists(srcNodeName)) {\n            throw new NotFoundException(srcPath);\n        }\n\n        MongoNode destParent = getStoredNode(destParentPath);\n        if (destParent.childExists(destNodeName)) {\n            throw new RuntimeException(\"Node already exists at move destination path: \" + destPath);\n        }\n\n        // First, copy the existing nodes.\n        Map<String, MongoNode> nodesToCopy = new FetchNodesAction(nodeStore,\n                srcPath, headRevisionId).execute();\n        for (MongoNode nodeMongo : nodesToCopy.values()) {\n            String oldPath = nodeMongo.getPath();\n            String oldPathRel = PathUtils.relativize(srcPath, oldPath);\n            String newPath = PathUtils.concat(destPath, oldPathRel);\n\n            nodeMongo.setPath(newPath);\n            nodeMongo.removeField(\"_id\");\n            pathNodeMap.put(newPath, nodeMongo);\n        }\n\n        // Then, copy any staged changes.\n        MongoNode srcNode = getStoredNode(srcPath);\n        MongoNode destNode = getStagedNode(destPath);\n        copyStagedChanges(srcNode, destNode);\n\n        // Finally, add to destParent and remove from srcParent.\n        getStagedNode(destPath);\n        destParent.addChild(destNodeName);\n        srcParent.removeChild(srcNodeName);\n    }","id":1498,"modified_method":"@Override\n    public void visit(MoveNodeInstruction instruction) {\n        String srcPath = instruction.getSourcePath();\n        String destPath = instruction.getDestPath();\n        if (PathUtils.isAncestor(srcPath, destPath)) {\n            throw new RuntimeException(\"Target path cannot be descendant of source path: \"\n                    + destPath);\n        }\n\n        String srcParentPath = PathUtils.getParentPath(srcPath);\n        String srcNodeName = PathUtils.getName(srcPath);\n\n        String destParentPath = PathUtils.getParentPath(destPath);\n        String destNodeName = PathUtils.getName(destPath);\n\n        MongoNode srcParent = getStoredNode(srcParentPath);\n        if (!srcParent.childExists(srcNodeName)) {\n            throw new NotFoundException(srcPath);\n        }\n\n        MongoNode destParent = getStoredNode(destParentPath);\n        if (destParent.childExists(destNodeName)) {\n            throw new RuntimeException(\"Node already exists at move destination path: \" + destPath);\n        }\n\n        // First, copy the existing nodes.\n        Map<String, MongoNode> nodesToCopy = new FetchNodesActionNew(nodeStore,\n                srcPath, headRevisionId).execute();\n        for (MongoNode nodeMongo : nodesToCopy.values()) {\n            String oldPath = nodeMongo.getPath();\n            String oldPathRel = PathUtils.relativize(srcPath, oldPath);\n            String newPath = PathUtils.concat(destPath, oldPathRel);\n\n            nodeMongo.setPath(newPath);\n            nodeMongo.removeField(\"_id\");\n            pathNodeMap.put(newPath, nodeMongo);\n        }\n\n        // Then, copy any staged changes.\n        MongoNode srcNode = getStoredNode(srcPath);\n        MongoNode destNode = getStagedNode(destPath);\n        copyStagedChanges(srcNode, destNode);\n\n        // Finally, add to destParent and remove from srcParent.\n        getStagedNode(destPath);\n        destParent.addChild(destNodeName);\n        srcParent.removeChild(srcNodeName);\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void initialCommit() throws Exception {\n        Commit commit = CommitBuilder.build(\"/\", \"+\\\"a\\\" : { \\\"b\\\" : {} , \\\"c\\\" : {} }\", null);\n        CommitCommand command = new CommitCommand(getNodeStore(), commit);\n        Long revisionId = command.execute();\n\n        Assert.assertNotNull(revisionId);\n        MongoAssert.assertNodesExist(NodeBuilder.build(String.format(\n                \"{ \\\"/#%1$s\\\" : { \\\"a#%1$s\\\" : { \\\"b#%1$s\\\" : {} , \\\"c#%1$s\\\" : {} } } }\", revisionId)));\n\n        MongoAssert.assertCommitExists(commit);\n        MongoAssert.assertCommitContainsAffectedPaths(MongoUtil.fromMongoRepresentation(commit.getRevisionId()),\n                \"/\", \"/a\", \"/a/b\", \"/a/c\");\n        MongoAssert.assertHeadRevision(1);\n        MongoAssert.assertNextRevision(2);\n    }","id":1499,"modified_method":"@Test\n    public void initialCommit() throws Exception {\n        Commit commit = CommitBuilder.build(\"/\", \"+\\\"a\\\" : { \\\"b\\\" : {} , \\\"c\\\" : {} }\", null);\n        CommitCommandNew command = new CommitCommandNew(getNodeStore(), commit);\n        Long revisionId = command.execute();\n\n        Assert.assertNotNull(revisionId);\n        MongoAssert.assertNodesExist(NodeBuilder.build(String.format(\n                \"{ \\\"/#%1$s\\\" : { \\\"a#%1$s\\\" : { \\\"b#%1$s\\\" : {} , \\\"c#%1$s\\\" : {} } } }\", revisionId)));\n\n        MongoAssert.assertCommitExists(commit);\n        MongoAssert.assertCommitContainsAffectedPaths(MongoUtil.fromMongoRepresentation(commit.getRevisionId()),\n                \"/\", \"/a\", \"/a/b\", \"/a/c\");\n        MongoAssert.assertHeadRevision(1);\n        MongoAssert.assertNextRevision(2);\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void testConflictingConcurrentUpdate() throws Exception {\n        int numOfConcurrentThreads = 5;\n        final Object waitLock = new Object();\n\n        // create the commands\n        List<CommitCommand> commands = new ArrayList<CommitCommand>(numOfConcurrentThreads);\n        for (int i = 0; i < numOfConcurrentThreads; ++i) {\n            Commit commit = CommitBuilder.build(\"/\", \"+\\\"\" + i + \"\\\" : {}\",\n                    \"This is a concurrent commit\");\n            CommitCommand command = new CommitCommand(getNodeStore(), commit) {\n                @Override\n                protected boolean saveAndSetHeadRevision() throws Exception {\n                    try {\n                        synchronized (waitLock) {\n                            waitLock.wait();\n                        }\n\n                        return super.saveAndSetHeadRevision();\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                        return false;\n                    }\n                };\n            };\n            commands.add(command);\n        }\n\n        // execute the commands\n        final CommandExecutor commandExecutor = new DefaultCommandExecutor();\n        ExecutorService executorService = Executors.newFixedThreadPool(numOfConcurrentThreads);\n        final List<Long> revisionIds = new LinkedList<Long>();\n        for (int i = 0; i < numOfConcurrentThreads; ++i) {\n            final CommitCommand command = commands.get(i);\n            Runnable runnable = new Runnable() {\n\n                @Override\n                public void run() {\n                    try {\n                        Long revisionId = commandExecutor.execute(command);\n                        revisionIds.add(revisionId);\n                    } catch (Exception e) {\n                        e.printStackTrace();\n                        revisionIds.add(null);\n                    }\n                }\n            };\n            executorService.execute(runnable);\n        }\n\n        // notify the wait lock to execute the command concurrently\n        do {\n            Thread.sleep(1500);\n            synchronized (waitLock) {\n                waitLock.notifyAll();\n            }\n        } while (revisionIds.size() < numOfConcurrentThreads);\n\n        // Verify the result by sorting the revision ids and verifying that all\n        // children are contained in the next revision\n        Collections.sort(revisionIds, new Comparator<Long>() {\n            @Override\n            public int compare(Long o1, Long o2) {\n                return o1.compareTo(o2);\n            }\n        });\n        List<String> lastChildren = new LinkedList<String>();\n        for (int i = 0; i < numOfConcurrentThreads; ++i) {\n            Long revisionId = revisionIds.get(i);\n            GetNodesCommand command2 = new GetNodesCommand(getNodeStore(),\n                    \"/\", revisionId);\n            Node root = command2.execute();\n\n            for (String lastChild : lastChildren) {\n                boolean contained = false;\n                for (Iterator<Node> it = root.getChildNodeEntries(0, -1); it.hasNext(); ) {\n                    Node childNode = it.next();\n                    String childName = PathUtils.getName(childNode.getPath());\n                    if (childName.equals(lastChild)) {\n                        contained = true;\n                        break;\n                    }\n                }\n                assertTrue(contained);\n            }\n            lastChildren.clear();\n            for (Iterator<Node> it = root.getChildNodeEntries(0, -1); it.hasNext(); ) {\n                Node childNode = it.next();\n                String childName = PathUtils.getName(childNode.getPath());\n                lastChildren.add(childName);\n            }\n        }\n\n        // Assert number of successful commits.\n        List<MongoCommit> commits = new FetchCommitsAction(getNodeStore()).execute();\n        assertEquals(numOfConcurrentThreads + 1, commits.size());\n    }","id":1500,"modified_method":"@Test\n    public void testConflictingConcurrentUpdate() throws Exception {\n        int numOfConcurrentThreads = 5;\n        final Object waitLock = new Object();\n\n        // create the commands\n        List<CommitCommandNew> commands = new ArrayList<CommitCommandNew>(numOfConcurrentThreads);\n        for (int i = 0; i < numOfConcurrentThreads; ++i) {\n            Commit commit = CommitBuilder.build(\"/\", \"+\\\"\" + i + \"\\\" : {}\",\n                    \"This is a concurrent commit\");\n            CommitCommandNew command = new CommitCommandNew(getNodeStore(), commit) {\n                @Override\n                protected boolean saveAndSetHeadRevision() throws Exception {\n                    try {\n                        synchronized (waitLock) {\n                            waitLock.wait();\n                        }\n\n                        return super.saveAndSetHeadRevision();\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                        return false;\n                    }\n                };\n            };\n            commands.add(command);\n        }\n\n        // execute the commands\n        final CommandExecutor commandExecutor = new DefaultCommandExecutor();\n        ExecutorService executorService = Executors.newFixedThreadPool(numOfConcurrentThreads);\n        final List<Long> revisionIds = new LinkedList<Long>();\n        for (int i = 0; i < numOfConcurrentThreads; ++i) {\n            final CommitCommandNew command = commands.get(i);\n            Runnable runnable = new Runnable() {\n\n                @Override\n                public void run() {\n                    try {\n                        Long revisionId = commandExecutor.execute(command);\n                        revisionIds.add(revisionId);\n                    } catch (Exception e) {\n                        e.printStackTrace();\n                        revisionIds.add(null);\n                    }\n                }\n            };\n            executorService.execute(runnable);\n        }\n\n        // notify the wait lock to execute the command concurrently\n        do {\n            Thread.sleep(1500);\n            synchronized (waitLock) {\n                waitLock.notifyAll();\n            }\n        } while (revisionIds.size() < numOfConcurrentThreads);\n\n        // Verify the result by sorting the revision ids and verifying that all\n        // children are contained in the next revision\n        Collections.sort(revisionIds, new Comparator<Long>() {\n            @Override\n            public int compare(Long o1, Long o2) {\n                return o1.compareTo(o2);\n            }\n        });\n        List<String> lastChildren = new LinkedList<String>();\n        for (int i = 0; i < numOfConcurrentThreads; ++i) {\n            Long revisionId = revisionIds.get(i);\n            GetNodesCommandNew command2 = new GetNodesCommandNew(getNodeStore(),\n                    \"/\", revisionId);\n            Node root = command2.execute();\n\n            for (String lastChild : lastChildren) {\n                boolean contained = false;\n                for (Iterator<Node> it = root.getChildNodeEntries(0, -1); it.hasNext(); ) {\n                    Node childNode = it.next();\n                    String childName = PathUtils.getName(childNode.getPath());\n                    if (childName.equals(lastChild)) {\n                        contained = true;\n                        break;\n                    }\n                }\n                assertTrue(contained);\n            }\n            lastChildren.clear();\n            for (Iterator<Node> it = root.getChildNodeEntries(0, -1); it.hasNext(); ) {\n                Node childNode = it.next();\n                String childName = PathUtils.getName(childNode.getPath());\n                lastChildren.add(childName);\n            }\n        }\n\n        // Assert number of successful commits.\n        List<MongoCommit> commits = new FetchCommitsAction(getNodeStore()).execute();\n        assertEquals(numOfConcurrentThreads + 1, commits.size());\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public CommitCallable(CommitCommand  command) {\n            this.command = command;\n        }","id":1501,"modified_method":"public CommitCallable(CommitCommandNew  command) {\n            this.command = command;\n        }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     * Test that a commit ends up with a conflict exception when there are two\n     * concurrent commits with one disjoint but other overlapping affected path.\n     */\n    @Test\n    public void subPathUpdate3() throws Exception {\n        mk.commit(\"/\", \"+\\\"a1\\\" : {}\", null, null);\n        mk.commit(\"/\", \"+\\\"a2\\\" : {}\", null, null);\n\n        int n = 3;\n        CountDownLatch latch = new CountDownLatch(n - 1);\n        CommitCommand cmd1 = new WaitingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a1/b1\\\" : {}\", null), latch);\n        CommitCommand cmd2 = new NotifyingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a2/b1\\\" : {}\", null), latch);\n        CommitCommand cmd3 = new NotifyingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a1/b2\\\" : {}\", null), latch);\n\n\n        ExecutorService executorService = Executors.newFixedThreadPool(n);\n        Future<Long> future1 = executorService.submit(new CommitCallable(cmd1));\n        Thread.sleep(1000);\n        Future<Long> future2 = executorService.submit(new CommitCallable(cmd2));\n        Future<Long> future3 = executorService.submit(new CommitCallable(cmd3));\n        try {\n            future1.get();\n            future2.get();\n            future3.get();\n        } catch (Exception expected) {\n            // cmd1 and cmd3 update the same root, so this is expected.\n        }\n    }","id":1502,"modified_method":"/**\n     * Test that a commit ends up with a conflict exception when there are two\n     * concurrent commits with one disjoint but other overlapping affected path.\n     */\n    @Test\n    public void subPathUpdate3() throws Exception {\n        mk.commit(\"/\", \"+\\\"a1\\\" : {}\", null, null);\n        mk.commit(\"/\", \"+\\\"a2\\\" : {}\", null, null);\n\n        int n = 3;\n        CountDownLatch latch = new CountDownLatch(n - 1);\n        CommitCommandNew cmd1 = new WaitingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a1/b1\\\" : {}\", null), latch);\n        CommitCommandNew cmd2 = new NotifyingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a2/b1\\\" : {}\", null), latch);\n        CommitCommandNew cmd3 = new NotifyingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a1/b2\\\" : {}\", null), latch);\n\n\n        ExecutorService executorService = Executors.newFixedThreadPool(n);\n        Future<Long> future1 = executorService.submit(new CommitCallable(cmd1));\n        Thread.sleep(1000);\n        Future<Long> future2 = executorService.submit(new CommitCallable(cmd2));\n        Future<Long> future3 = executorService.submit(new CommitCallable(cmd3));\n        try {\n            future1.get();\n            future2.get();\n            future3.get();\n        } catch (Exception expected) {\n            // cmd1 and cmd3 update the same root, so this is expected.\n        }\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     * Test that a commit does not end up with a conflict exception when there\n     * is another concurrent commit with a disjoint affected path.\n     */\n    @Test\n    public void subPathUpdate1() throws Exception {\n        mk.commit(\"/\", \"+\\\"a1\\\" : {}\", null, null);\n        mk.commit(\"/\", \"+\\\"a2\\\" : {}\", null, null);\n\n        int n = 2;\n        CountDownLatch latch = new CountDownLatch(n - 1);\n        CommitCommand cmd1 = new WaitingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a1/b1\\\" : {}\", null), latch);\n        CommitCommand cmd2 = new NotifyingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a2/b1\\\" : {}\", null), latch);\n\n        ExecutorService executorService = Executors.newFixedThreadPool(n);\n        Future<Long> future1 = executorService.submit(new CommitCallable(cmd1));\n        Thread.sleep(1000);\n        Future<Long> future2 = executorService.submit(new CommitCallable(cmd2));\n        try {\n            future1.get();\n            future2.get();\n        } catch (Exception e) {\n            fail(\"Not expected: \" + e);\n        }\n    }","id":1503,"modified_method":"/**\n     * Test that a commit does not end up with a conflict exception when there\n     * is another concurrent commit with a disjoint affected path.\n     */\n    @Test\n    public void subPathUpdate1() throws Exception {\n        mk.commit(\"/\", \"+\\\"a1\\\" : {}\", null, null);\n        mk.commit(\"/\", \"+\\\"a2\\\" : {}\", null, null);\n\n        int n = 2;\n        CountDownLatch latch = new CountDownLatch(n - 1);\n        CommitCommandNew cmd1 = new WaitingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a1/b1\\\" : {}\", null), latch);\n        CommitCommandNew cmd2 = new NotifyingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a2/b1\\\" : {}\", null), latch);\n\n        ExecutorService executorService = Executors.newFixedThreadPool(n);\n        Future<Long> future1 = executorService.submit(new CommitCallable(cmd1));\n        Thread.sleep(1000);\n        Future<Long> future2 = executorService.submit(new CommitCallable(cmd2));\n        try {\n            future1.get();\n            future2.get();\n        } catch (Exception e) {\n            fail(\"Not expected: \" + e);\n        }\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     * Test that a commit does not end up with a conflict exception when there\n     * are two concurrent commits with disjoint affected paths.\n     */\n    @Test\n    public void subPathUpdate2() throws Exception {\n        mk.commit(\"/\", \"+\\\"a1\\\" : {}\", null, null);\n        mk.commit(\"/\", \"+\\\"a2\\\" : {}\", null, null);\n        mk.commit(\"/\", \"+\\\"a3\\\" : {}\", null, null);\n\n        int n = 3;\n        CountDownLatch latch = new CountDownLatch(n - 1);\n        CommitCommand cmd1 = new WaitingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a1/b1\\\" : {}\", null), latch);\n        CommitCommand cmd2 = new NotifyingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a2/b1\\\" : {}\", null), latch);\n        CommitCommand cmd3 = new NotifyingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a3/b1\\\" : {}\", null), latch);\n\n\n        ExecutorService executorService = Executors.newFixedThreadPool(n);\n        Future<Long> future1 = executorService.submit(new CommitCallable(cmd1));\n        Thread.sleep(1000);\n        Future<Long> future2 = executorService.submit(new CommitCallable(cmd2));\n        Future<Long> future3 = executorService.submit(new CommitCallable(cmd3));\n        try {\n            future1.get();\n            future2.get();\n            future3.get();\n        } catch (Exception e) {\n            fail(\"Not expected: \" + e);\n        }\n    }","id":1504,"modified_method":"/**\n     * Test that a commit does not end up with a conflict exception when there\n     * are two concurrent commits with disjoint affected paths.\n     */\n    @Test\n    public void subPathUpdate2() throws Exception {\n        mk.commit(\"/\", \"+\\\"a1\\\" : {}\", null, null);\n        mk.commit(\"/\", \"+\\\"a2\\\" : {}\", null, null);\n        mk.commit(\"/\", \"+\\\"a3\\\" : {}\", null, null);\n\n        int n = 3;\n        CountDownLatch latch = new CountDownLatch(n - 1);\n        CommitCommandNew cmd1 = new WaitingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a1/b1\\\" : {}\", null), latch);\n        CommitCommandNew cmd2 = new NotifyingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a2/b1\\\" : {}\", null), latch);\n        CommitCommandNew cmd3 = new NotifyingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a3/b1\\\" : {}\", null), latch);\n\n\n        ExecutorService executorService = Executors.newFixedThreadPool(n);\n        Future<Long> future1 = executorService.submit(new CommitCallable(cmd1));\n        Thread.sleep(1000);\n        Future<Long> future2 = executorService.submit(new CommitCallable(cmd2));\n        Future<Long> future3 = executorService.submit(new CommitCallable(cmd3));\n        try {\n            future1.get();\n            future2.get();\n            future3.get();\n        } catch (Exception e) {\n            fail(\"Not expected: \" + e);\n        }\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     * Test that concurrent update to root ends up with a conflict exception.\n     */\n    @Test\n    public void rootUpdate() throws Exception {\n        int n = 2;\n        CountDownLatch latch = new CountDownLatch(n - 1);\n        CommitCommand cmd1 = new WaitingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a1\\\" : {}\", null), latch);\n        CommitCommand cmd2 = new NotifyingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a2\\\" : {}\", null), latch);\n\n        ExecutorService executorService = Executors.newFixedThreadPool(n);\n        Future<Long> future1 = executorService.submit(new CommitCallable(cmd1));\n        Thread.sleep(1000);\n        Future<Long> future2 = executorService.submit(new CommitCallable(cmd2));\n        try {\n            future1.get();\n            future2.get();\n        } catch (Exception expected) {\n            // cmd2 updated root by adding /a2, so this is expected.\n        }\n    }","id":1505,"modified_method":"/**\n     * Test that concurrent update to root ends up with a conflict exception.\n     */\n    @Test\n    public void rootUpdate() throws Exception {\n        int n = 2;\n        CountDownLatch latch = new CountDownLatch(n - 1);\n        CommitCommandNew cmd1 = new WaitingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a1\\\" : {}\", null), latch);\n        CommitCommandNew cmd2 = new NotifyingCommitCommand(getNodeStore(),\n                CommitBuilder.build(\"/\", \"+\\\"a2\\\" : {}\", null), latch);\n\n        ExecutorService executorService = Executors.newFixedThreadPool(n);\n        Future<Long> future1 = executorService.submit(new CommitCallable(cmd1));\n        Thread.sleep(1000);\n        Future<Long> future2 = executorService.submit(new CommitCallable(cmd2));\n        try {\n            future1.get();\n            future2.get();\n        } catch (Exception expected) {\n            // cmd2 updated root by adding /a2, so this is expected.\n        }\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private Node getNode(String path, long revisionId) throws Exception {\n        GetNodesCommand command = new GetNodesCommand(nodeStore, path, revisionId);\n        return command.execute();\n    }","id":1506,"modified_method":"private Node getNode(String path, long revisionId) throws Exception {\n        GetNodesCommandNew command = new GetNodesCommandNew(nodeStore, path, revisionId);\n        return command.execute();\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private DBCursor performQuery() {\n        QueryBuilder queryBuilder = QueryBuilder.start(MongoNode.KEY_PATH);\n        if (paths.size() > 1) {\n            queryBuilder = queryBuilder.in(paths);\n        } else {\n            String path = paths.toArray(new String[0])[0];\n            Pattern pattern = createPrefixRegExp(path);\n            queryBuilder = queryBuilder.regex(pattern);\n        }\n\n        if (revisionId > 0) {\n            queryBuilder = queryBuilder.and(MongoNode.KEY_REVISION_ID).lessThanEquals(revisionId);\n        }\n\n        if (branchId == null) {\n            DBObject query = new BasicDBObject(MongoNode.KEY_BRANCH_ID, new BasicDBObject(\"$exists\", false));\n            queryBuilder = queryBuilder.and(query);\n        } else {\n            // Not only return nodes in the branch but also nodes in the trunk\n            // before the branch was created.\n            long headBranchRevisionId = Long.parseLong(branchId.substring(0, branchId.indexOf(\"-\")));\n\n            DBObject branchQuery = QueryBuilder.start().or(\n                    QueryBuilder.start(MongoNode.KEY_BRANCH_ID).is(branchId).get(),\n                    QueryBuilder.start(MongoNode.KEY_REVISION_ID).lessThanEquals(headBranchRevisionId).get()\n            ).get();\n            queryBuilder = queryBuilder.and(branchQuery);\n        }\n\n        DBObject orderBy = new BasicDBObject(MongoCommit.KEY_REVISION_ID, -1);\n        DBObject query = queryBuilder.get();\n        LOG.debug(\"Executing query: {}\", query);\n\n        return nodeStore.getNodeCollection().find(query).sort(orderBy);\n    }","id":1507,"modified_method":"private DBCursor performQuery() {\n        QueryBuilder queryBuilder = QueryBuilder.start(MongoNode.KEY_PATH);\n        if (paths.size() > 1) {\n            queryBuilder = queryBuilder.in(paths);\n        } else {\n            String path = paths.toArray(new String[0])[0];\n            Pattern pattern = createPrefixRegExp(path);\n            queryBuilder = queryBuilder.regex(pattern);\n        }\n\n        if (revisionId > -1) {\n            queryBuilder = queryBuilder.and(MongoNode.KEY_REVISION_ID).lessThanEquals(revisionId);\n        }\n\n        if (branchId == null) {\n            DBObject query = new BasicDBObject(MongoNode.KEY_BRANCH_ID, new BasicDBObject(\"$exists\", false));\n            queryBuilder = queryBuilder.and(query);\n        } else {\n            // Not only return nodes in the branch but also nodes in the trunk\n            // before the branch was created.\n            long headBranchRevisionId = Long.parseLong(branchId.substring(0, branchId.indexOf(\"-\")));\n\n            DBObject branchQuery = QueryBuilder.start().or(\n                    QueryBuilder.start(MongoNode.KEY_BRANCH_ID).is(branchId).get(),\n                    QueryBuilder.start(MongoNode.KEY_REVISION_ID).lessThanEquals(headBranchRevisionId).get()\n            ).get();\n            queryBuilder = queryBuilder.and(branchQuery);\n        }\n\n        DBObject orderBy = new BasicDBObject(MongoCommit.KEY_REVISION_ID, -1);\n        DBObject query = queryBuilder.get();\n        LOG.debug(\"Executing query: {}\", query);\n\n        return nodeStore.getNodeCollection().find(query).sort(orderBy);\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void invalidFirstRevision() throws Exception {\n        Long revisionId1 = addNode(\"a\");\n        Long revisionId2 = addNode(\"b\");\n        Long revisionId3 = addNode(\"c\");\n\n        invalidateCommit(revisionId1);\n        updateBaseRevisionId(revisionId2, 0L);\n\n        FetchNodesAction query = new FetchNodesAction(getNodeStore(), \"/\", revisionId3);\n        List<Node> actuals = toNode(query.execute());\n\n        String json = String.format(\"{\\\"/#%2$s\\\" : { \\\"b#%1$s\\\" : {}, \\\"c#%2$s\\\" : {} }}\",\n                revisionId2, revisionId3);\n        Iterator<Node> expecteds = NodeBuilder.build(json).getChildNodeEntries(0, -1);\n        NodeAssert.assertEquals(expecteds, actuals);\n    }","id":1508,"modified_method":"@Test\n    public void invalidFirstRevision() throws Exception {\n        Long revisionId1 = addNode(\"a\");\n        Long revisionId2 = addNode(\"b\");\n        Long revisionId3 = addNode(\"c\");\n\n        invalidateCommit(revisionId1);\n        updateBaseRevisionId(revisionId2, 0L);\n\n        List<Node> actuals = createAndExecuteQuery(revisionId3);\n\n        String json = String.format(\"{\\\"/#%2$s\\\" : { \\\"b#%1$s\\\" : {}, \\\"c#%2$s\\\" : {} }}\",\n                revisionId2, revisionId3);\n        Iterator<Node> expecteds = NodeBuilder.build(json).getChildNodeEntries(0, -1);\n        NodeAssert.assertEquals(expecteds, actuals);\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void fetchWithCertainPathsTwoRevisions() throws Exception {\n        SimpleNodeScenario scenario = new SimpleNodeScenario(getNodeStore());\n        Long firstRevisionId = scenario.create();\n        Long secondRevisionId = scenario.update_A_and_add_D_and_E();\n\n        FetchNodesAction query = new FetchNodesAction(getNodeStore(),\n                getPathSet(\"/a\", \"/a/b\", \"/a/c\", \"/a/d\", \"/a/b/e\", \"not_existing\"),\n                firstRevisionId);\n        List<Node> actuals = toNode(query.execute());\n        String json = String.format(\"{ \\\"/#%1$s\\\" : { \\\"a#%1$s\\\" : { \\\"int\\\" : 1 , \\\"b#%1$s\\\" : { \\\"string\\\" : \\\"foo\\\" } , \\\"c#%1$s\\\" : { \\\"bool\\\" : true } } } }\",\n                firstRevisionId);\n        Node expected = NodeBuilder.build(json);\n        Iterator<Node> expecteds = expected.getChildNodeEntries(0, -1);\n        NodeAssert.assertEquals(expecteds, actuals);\n\n        query = new FetchNodesAction(getNodeStore(),\n                getPathSet(\"/a\", \"/a/b\", \"/a/c\", \"/a/d\", \"/a/b/e\", \"not_existing\"),\n                secondRevisionId);\n        actuals = toNode(query.execute());\n        json = String.format(\"{ \\\"/#%1$s\\\" : { \\\"a#%2$s\\\" : { \\\"int\\\" : 1 , \\\"double\\\" : 0.123 , \\\"b#%2$s\\\" : { \\\"string\\\" : \\\"foo\\\" , \\\"e#%2$s\\\" : { \\\"array\\\" : [ 123, null, 123.456, \\\"for:bar\\\", true ] } } , \\\"c#%1$s\\\" : { \\\"bool\\\" : true }, \\\"d#%2$s\\\" : { \\\"null\\\" : null } } } }\",\n                firstRevisionId, secondRevisionId);\n        expected = NodeBuilder.build(json);\n        expecteds = expected.getChildNodeEntries(0, -1);\n        NodeAssert.assertEquals(expecteds, actuals);\n    }","id":1509,"modified_method":"@Test\n    public void fetchWithCertainPathsTwoRevisions() throws Exception {\n        SimpleNodeScenario scenario = new SimpleNodeScenario(getNodeStore());\n        Long firstRevisionId = scenario.create();\n        Long secondRevisionId = scenario.update_A_and_add_D_and_E();\n\n        List<Node> actuals = createAndExecuteQuery(firstRevisionId, getPathSet(\"/a\", \"/a/b\", \"/a/c\", \"/a/d\", \"/a/b/e\", \"not_existing\"));\n        String json = String.format(\"{ \\\"/#%1$s\\\" : { \\\"a#%1$s\\\" : { \\\"int\\\" : 1 , \\\"b#%1$s\\\" : { \\\"string\\\" : \\\"foo\\\" } , \\\"c#%1$s\\\" : { \\\"bool\\\" : true } } } }\",\n                firstRevisionId);\n        Node expected = NodeBuilder.build(json);\n        Iterator<Node> expecteds = expected.getChildNodeEntries(0, -1);\n        NodeAssert.assertEquals(expecteds, actuals);\n\n        actuals = createAndExecuteQuery(secondRevisionId, getPathSet(\"/a\", \"/a/b\", \"/a/c\", \"/a/d\", \"/a/b/e\", \"not_existing\"));\n        json = String.format(\"{ \\\"/#%1$s\\\" : { \\\"a#%2$s\\\" : { \\\"int\\\" : 1 , \\\"double\\\" : 0.123 , \\\"b#%2$s\\\" : { \\\"string\\\" : \\\"foo\\\" , \\\"e#%2$s\\\" : { \\\"array\\\" : [ 123, null, 123.456, \\\"for:bar\\\", true ] } } , \\\"c#%1$s\\\" : { \\\"bool\\\" : true }, \\\"d#%2$s\\\" : { \\\"null\\\" : null } } } }\",\n                firstRevisionId, secondRevisionId);\n        expected = NodeBuilder.build(json);\n        expecteds = expected.getChildNodeEntries(0, -1);\n        NodeAssert.assertEquals(expecteds, actuals);\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void fetchWithCertainPathsOneRevision() throws Exception {\n        SimpleNodeScenario scenario = new SimpleNodeScenario(getNodeStore());\n        Long revisionId = scenario.create();\n\n        FetchNodesAction query = new FetchNodesAction(getNodeStore(),\n                getPathSet(\"/a\", \"/a/b\", \"/a/c\", \"not_existing\"), revisionId);\n        List<Node> actuals = toNode(query.execute());\n        String json = String.format(\"{ \\\"/#%1$s\\\" : { \\\"a#%1$s\\\" : { \\\"int\\\" : 1 , \\\"b#%1$s\\\" : { \\\"string\\\" : \\\"foo\\\" } , \\\"c#%1$s\\\" : { \\\"bool\\\" : true } } } }\",\n                revisionId);\n        Node expected = NodeBuilder.build(json);\n        Iterator<Node> expecteds = expected.getChildNodeEntries(0, -1);\n        NodeAssert.assertEquals(expecteds, actuals);\n\n        query = new FetchNodesAction(getNodeStore(),\n                getPathSet(\"/a\", \"not_existing\"), revisionId);\n        actuals = toNode(query.execute());\n        json = String.format(\"{ \\\"/#%1$s\\\" : { \\\"a#%1$s\\\" : { \\\"int\\\" : 1 } } }\",\n                revisionId);\n        expected = NodeBuilder.build(json);\n        expecteds = expected.getChildNodeEntries(0, -1);\n        NodeAssert.assertEquals(expecteds, actuals);\n    }","id":1510,"modified_method":"@Test\n    public void fetchWithCertainPathsOneRevision() throws Exception {\n        SimpleNodeScenario scenario = new SimpleNodeScenario(getNodeStore());\n        Long revisionId = scenario.create();\n\n        List<Node> actuals = createAndExecuteQuery(revisionId, getPathSet(\"/a\", \"/a/b\", \"/a/c\", \"not_existing\"));\n        String json = String.format(\"{ \\\"/#%1$s\\\" : { \\\"a#%1$s\\\" : { \\\"int\\\" : 1 , \\\"b#%1$s\\\" : { \\\"string\\\" : \\\"foo\\\" } , \\\"c#%1$s\\\" : { \\\"bool\\\" : true } } } }\",\n                revisionId);\n        Node expected = NodeBuilder.build(json);\n        Iterator<Node> expecteds = expected.getChildNodeEntries(0, -1);\n        NodeAssert.assertEquals(expecteds, actuals);\n\n        actuals = createAndExecuteQuery(revisionId, getPathSet(\"/a\", \"not_existing\"));\n        json = String.format(\"{ \\\"/#%1$s\\\" : { \\\"a#%1$s\\\" : { \\\"int\\\" : 1 } } }\",\n                revisionId);\n        expected = NodeBuilder.build(json);\n        expecteds = expected.getChildNodeEntries(0, -1);\n        NodeAssert.assertEquals(expecteds, actuals);\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private List<Node> createAndExecuteQuery(Long revisionId) {\n        return createAndExecuteQuery(revisionId, -1);\n    }","id":1511,"modified_method":"private List<Node> createAndExecuteQuery(long revisionId) {\n        return createAndExecuteQuery(revisionId, -1);\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private List<Node> createAndExecuteQuery(Long revisionId, int depth) {\n        FetchNodesAction query = new FetchNodesAction(getNodeStore(), \"/\", revisionId);\n        if (depth > -1) {\n            query.setDepth(depth);\n        }\n        return toNode(query.execute());\n    }","id":1512,"modified_method":"private List<Node> createAndExecuteQuery(long revisionId, int depth) {\n        Set<String> paths = new HashSet<String>();\n        paths.add(\"/\");\n        return createAndExecuteQuery(revisionId, paths, depth);\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private Node getNode(String path, long revisionId) throws Exception {\n        return new GetNodesCommand(nodeStore, path, revisionId).execute();\n    }","id":1513,"modified_method":"private Node getNode(String path, long revisionId) throws Exception {\n        return new GetNodesCommandNew(nodeStore, path, revisionId).execute();\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private Node getNode(String path, long revisionId) throws Exception {\n        return new GetNodesCommand(nodeStore, path, revisionId).execute();\n    }","id":1514,"modified_method":"private Node getNode(String path, long revisionId) throws Exception {\n        return new GetNodesCommandNew(nodeStore, path, revisionId).execute();\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public String execute() throws Exception {\n        MongoCommit commit = new FetchCommitAction(nodeStore,\n                MongoUtil.toMongoRepresentation(branchRevisionId)).execute();\n        String branchId = commit.getBranchId();\n        if (branchId == null) {\n            throw new Exception(\"Can only merge a private branch commit\");\n        }\n\n        long rootNodeId = commit.getRevisionId();\n\n        FetchHeadRevisionIdAction query2 = new FetchHeadRevisionIdAction(nodeStore);\n        query2.includeBranchCommits(false);\n        long currentHead = query2.execute();\n\n        Node ourRoot = getNode(\"/\", rootNodeId, branchId);\n\n        long branchRootId = Long.parseLong(branchId.substring(0, branchId.indexOf(\"-\")));\n\n        // Merge nodes from head to branch.\n        ourRoot = mergeNodes(ourRoot, currentHead, branchRootId);\n\n        Node currentHeadNode = getNode(\"/\", currentHead);\n\n        String diff = new DiffBuilder(MongoUtil.wrap(currentHeadNode),\n                MongoUtil.wrap(ourRoot), \"/\", -1,\n                new SimpleMongoNodeStore(), \"\").build();\n\n        if (diff.isEmpty()) {\n            LOG.debug(\"Merge of empty branch {} with differing content hashes encountered, \" +\n                    \"ignore and keep current head {}\", branchRevisionId, currentHead);\n            return MongoUtil.fromMongoRepresentation(currentHead);\n        }\n\n        Commit newCommit = CommitBuilder.build(\"\", diff,\n                MongoUtil.fromMongoRepresentation(currentHead), message);\n\n        Command<Long> command = new CommitCommand(nodeStore, newCommit);\n        long revision = command.execute();\n        return MongoUtil.fromMongoRepresentation(revision);\n    }","id":1515,"modified_method":"@Override\n    public String execute() throws Exception {\n        MongoCommit commit = new FetchCommitAction(nodeStore,\n                MongoUtil.toMongoRepresentation(branchRevisionId)).execute();\n        String branchId = commit.getBranchId();\n        if (branchId == null) {\n            throw new Exception(\"Can only merge a private branch commit\");\n        }\n\n        long rootNodeId = commit.getRevisionId();\n\n        FetchHeadRevisionIdAction query2 = new FetchHeadRevisionIdAction(nodeStore);\n        query2.includeBranchCommits(false);\n        long currentHead = query2.execute();\n\n        Node ourRoot = getNode(\"/\", rootNodeId, branchId);\n\n        long branchRootId = Long.parseLong(branchId.substring(0, branchId.indexOf(\"-\")));\n\n        // Merge nodes from head to branch.\n        ourRoot = mergeNodes(ourRoot, currentHead, branchRootId);\n\n        Node currentHeadNode = getNode(\"/\", currentHead);\n\n        String diff = new DiffBuilder(MongoUtil.wrap(currentHeadNode),\n                MongoUtil.wrap(ourRoot), \"/\", -1,\n                new SimpleMongoNodeStore(), \"\").build();\n\n        if (diff.isEmpty()) {\n            LOG.debug(\"Merge of empty branch {} with differing content hashes encountered, \" +\n                    \"ignore and keep current head {}\", branchRevisionId, currentHead);\n            return MongoUtil.fromMongoRepresentation(currentHead);\n        }\n\n        Commit newCommit = CommitBuilder.build(\"\", diff,\n                MongoUtil.fromMongoRepresentation(currentHead), message);\n\n        Command<Long> command = new CommitCommandNew(nodeStore, newCommit);\n        long revision = command.execute();\n        return MongoUtil.fromMongoRepresentation(revision);\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private Node getNode(String path, long revisionId, String branchId) throws Exception {\n        GetNodesCommand command = new GetNodesCommand(nodeStore, path, revisionId);\n        command.setBranchId(branchId);\n        return command.execute();\n    }","id":1516,"modified_method":"private Node getNode(String path, long revisionId, String branchId) throws Exception {\n        GetNodesCommandNew command = new GetNodesCommandNew(nodeStore, path, revisionId);\n        command.setBranchId(branchId);\n        return command.execute();\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public Node getNodes(String path, String revisionId, int depth, long offset,\n            int maxChildNodes, String filter) throws Exception {\n        GetNodesCommand command = new GetNodesCommand(this, path,\n                MongoUtil.toMongoRepresentation(revisionId));\n        command.setBranchId(getBranchId(revisionId));\n        command.setDepth(depth);\n        return commandExecutor.execute(command);\n    }","id":1517,"modified_method":"@Override\n    public Node getNodes(String path, String revisionId, int depth, long offset,\n            int maxChildNodes, String filter) throws Exception {\n        GetNodesCommandNew command = new GetNodesCommandNew(this, path,\n                MongoUtil.toMongoRepresentation(revisionId));\n        command.setBranchId(getBranchId(revisionId));\n        command.setDepth(depth);\n        return commandExecutor.execute(command);\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public String commit(Commit commit) throws Exception {\n        Command<Long> command = new CommitCommand(this, commit);\n        Long revisionId = commandExecutor.execute(command);\n        return MongoUtil.fromMongoRepresentation(revisionId);\n    }","id":1518,"modified_method":"@Override\n    public String commit(Commit commit) throws Exception {\n        Command<Long> command = new CommitCommandNew(this, commit);\n        Long revisionId = commandExecutor.execute(command);\n        return MongoUtil.fromMongoRepresentation(revisionId);\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public Boolean execute() throws Exception {\n        // To check a path really exists, all the paths from root need to be checked.\n        Set<String> paths = new HashSet<String>();\n        char[] path = this.path.toCharArray();\n        StringBuilder current = new StringBuilder();\n        for (int i = 0; i < path.length; i++) {\n            if (i == 0) {\n                paths.add(\"/\");\n            } else if (path[i] == '/') {\n                paths.add(current.toString());\n            }\n            current.append(path[i]);\n        }\n        paths.add(current.toString());\n\n        if (revisionId == null) {\n            revisionId = new GetHeadRevisionCommand(nodeStore).execute();\n        }\n\n        FetchNodesAction action = new FetchNodesAction(nodeStore, paths, revisionId);\n        action.setBranchId(branchId);\n        action.setValidCommits(validCommits);\n\n        Map<String, MongoNode> pathAndNodeMap = action.execute();\n        String currentPath = this.path;\n        while (!PathUtils.denotesRoot(currentPath)) {\n            String childName = PathUtils.getName(currentPath);\n            String parentPath = PathUtils.getParentPath(currentPath);\n            MongoNode parentNode = pathAndNodeMap.get(parentPath);\n            if (parentNode == null || !parentNode.childExists(childName)) {\n                node = null;\n                return false;\n            }\n            currentPath = PathUtils.getParentPath(currentPath);\n        }\n        node = pathAndNodeMap.get(this.path);\n        return true;\n    }","id":1519,"modified_method":"@Override\n    public Boolean execute() throws Exception {\n        // To check a path really exists, all the paths from root need to be checked.\n        Set<String> paths = new HashSet<String>();\n        char[] path = this.path.toCharArray();\n        StringBuilder current = new StringBuilder();\n        for (int i = 0; i < path.length; i++) {\n            if (i == 0) {\n                paths.add(\"/\");\n            } else if (path[i] == '/') {\n                paths.add(current.toString());\n            }\n            current.append(path[i]);\n        }\n        paths.add(current.toString());\n\n        if (revisionId == null) {\n            revisionId = new GetHeadRevisionCommand(nodeStore).execute();\n        }\n\n        FetchNodesActionNew action = new FetchNodesActionNew(nodeStore, paths, revisionId);\n        action.setBranchId(branchId);\n        //action.setValidCommits(validCommits);\n\n        Map<String, MongoNode> pathAndNodeMap = action.execute();\n        String currentPath = this.path;\n        while (!PathUtils.denotesRoot(currentPath)) {\n            String childName = PathUtils.getName(currentPath);\n            String parentPath = PathUtils.getParentPath(currentPath);\n            MongoNode parentNode = pathAndNodeMap.get(parentPath);\n            if (parentNode == null || !parentNode.childExists(childName)) {\n                node = null;\n                return false;\n            }\n            currentPath = PathUtils.getParentPath(currentPath);\n        }\n        node = pathAndNodeMap.get(this.path);\n        return true;\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     * Creates the following nodes:\n     *\n     * <pre>\n     * &quot;+a : { \\&quot;int\\&quot; : 1 , \\&quot;b\\&quot; : { \\&quot;string\\&quot; : \\&quot;foo\\&quot; } , \\&quot;c\\&quot; : { \\&quot;bool\\&quot; : true } } }&quot;\n     * <\/pre>\n     *\n     * @return The {@link RevisionId}.\n     * @throws Exception If an error occurred.\n     */\n    public Long create() throws Exception {\n        Commit commit = CommitBuilder.build(\"/\",\n                \"+\\\"a\\\" : { \\\"int\\\" : 1 , \\\"b\\\" : { \\\"string\\\" : \\\"foo\\\" } , \\\"c\\\" : { \\\"bool\\\" : true } }\",\n                \"This is the simple node scenario with nodes /, /a, /a/b, /a/c\");\n        return new CommitCommand(nodeStore, commit).execute();\n    }","id":1520,"modified_method":"/**\n     * Creates the following nodes:\n     *\n     * <pre>\n     * &quot;+a : { \\&quot;int\\&quot; : 1 , \\&quot;b\\&quot; : { \\&quot;string\\&quot; : \\&quot;foo\\&quot; } , \\&quot;c\\&quot; : { \\&quot;bool\\&quot; : true } } }&quot;\n     * <\/pre>\n     *\n     * @return The {@link RevisionId}.\n     * @throws Exception If an error occurred.\n     */\n    public Long create() throws Exception {\n        Commit commit = CommitBuilder.build(\"/\",\n                \"+\\\"a\\\" : { \\\"int\\\" : 1 , \\\"b\\\" : { \\\"string\\\" : \\\"foo\\\" } , \\\"c\\\" : { \\\"bool\\\" : true } }\",\n                \"This is the simple node scenario with nodes /, /a, /a/b, /a/c\");\n        return new CommitCommandNew(nodeStore, commit).execute();\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public Long addChildrenToA(int count) throws Exception {\n        Long revisionId = null;\n        for (int i = 1; i <= count; i++) {\n            Commit commit = CommitBuilder.build(\"/a\", \"+\\\"child\" + i + \"\\\" : {}\", \"Add child\" + i);\n            revisionId = new CommitCommand(nodeStore, commit).execute();\n        }\n        return revisionId;\n    }","id":1521,"modified_method":"public Long addChildrenToA(int count) throws Exception {\n        Long revisionId = null;\n        for (int i = 1; i <= count; i++) {\n            Commit commit = CommitBuilder.build(\"/a\", \"+\\\"child\" + i + \"\\\" : {}\", \"Add child\" + i);\n            revisionId = new CommitCommandNew(nodeStore, commit).execute();\n        }\n        return revisionId;\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public Long delete_B() throws Exception {\n        Commit commit = CommitBuilder.build(\"/a\", \"-\\\"b\\\"\", \"This is a commit with deleted /a/b\");\n        return new CommitCommand(nodeStore, commit).execute();\n    }","id":1522,"modified_method":"public Long delete_B() throws Exception {\n        Commit commit = CommitBuilder.build(\"/a\", \"-\\\"b\\\"\", \"This is a commit with deleted /a/b\");\n        return new CommitCommandNew(nodeStore, commit).execute();\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public Long update_A_and_add_D_and_E() throws Exception {\n        StringBuilder diff = new StringBuilder();\n        diff.append(\"+\\\"a/d\\\" : {}\");\n        diff.append(\"+\\\"a/b/e\\\" : {}\");\n        diff.append(\"^\\\"a/double\\\" : 0.123\");\n        diff.append(\"^\\\"a/d/int\\\" :  2\");\n        diff.append(\"^\\\"a/b/e/array\\\" : [ 123, null, 123.456, \\\"for:bar\\\", true ]\");\n        Commit commit = CommitBuilder.build(\"/\", diff.toString(),\n                \"This is a commit with updated /a and added /a/d and /a/b/e\");\n        return new CommitCommand(nodeStore, commit).execute();\n    }","id":1523,"modified_method":"public Long update_A_and_add_D_and_E() throws Exception {\n        StringBuilder diff = new StringBuilder();\n        diff.append(\"+\\\"a/d\\\" : {}\");\n        diff.append(\"+\\\"a/b/e\\\" : {}\");\n        diff.append(\"^\\\"a/double\\\" : 0.123\");\n        diff.append(\"^\\\"a/d/int\\\" :  2\");\n        diff.append(\"^\\\"a/b/e/array\\\" : [ 123, null, 123.456, \\\"for:bar\\\", true ]\");\n        Commit commit = CommitBuilder.build(\"/\", diff.toString(),\n                \"This is a commit with updated /a and added /a/d and /a/b/e\");\n        return new CommitCommandNew(nodeStore, commit).execute();\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public Long delete_A() throws Exception {\n        Commit commit = CommitBuilder.build(\"/\", \"-\\\"a\\\"\", \"This is a commit with deleted /a\");\n        return new CommitCommand(nodeStore, commit).execute();\n    }","id":1524,"modified_method":"public Long delete_A() throws Exception {\n        Commit commit = CommitBuilder.build(\"/\", \"-\\\"a\\\"\", \"This is a commit with deleted /a\");\n        return new CommitCommandNew(nodeStore, commit).execute();\n    }","commit_id":"bafb9217709ab06ed7ee143f49a0d641dcb1973f","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public void dropCaches() {\n    myCachedFiles.clear();\n    myCachedExportedFiles.clear();\n  }","id":1525,"modified_method":"public void dropCaches() {\n    VirtualFilePointerManager manager = VirtualFilePointerManager.getInstance();\n    killPointers(manager, myCachedFiles);\n    killPointers(manager, myCachedExportedFiles);\n    myCachedFiles.clear();\n    myCachedExportedFiles.clear();\n  }","commit_id":"7d215c1a8107cf1bf6ad52984ef1c13e98047ce8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private VirtualFile[] getFiles(OrderRootType type, Set<Module> processed) {\n    VirtualFile[] cachedFiles = myCachedFiles.get(type);\n    if (cachedFiles == null) {\n      final LinkedHashSet<VirtualFile> result = new LinkedHashSet<VirtualFile>();\n      final Iterator orderIterator = myRootModel.getOrderIterator();\n      while (orderIterator.hasNext()) {\n        OrderEntry entry = (OrderEntry)orderIterator.next();\n        final VirtualFile[] files;\n        if (entry instanceof ModuleOrderEntry) {\n          files = ((ModuleOrderEntryImpl)entry).getFiles(type, processed);\n        }\n        else {\n          files = entry.getFiles(type);\n        }\n        for (VirtualFile file : files) {\n          if (file != null) {\n            result.add(file);\n          }\n        }\n      }\n      cachedFiles = result.toArray(new VirtualFile[result.size()]);\n      myCachedFiles.put(type, cachedFiles);\n    }\n    return cachedFiles;\n  }","id":1526,"modified_method":"@NotNull\n  private VirtualFile[] getFiles(OrderRootType type, Set<Module> processed) {\n    Set<VirtualFilePointer> cachedFiles = myCachedFiles.get(type);\n    if (cachedFiles == null) {\n      cachedFiles = new THashSet<VirtualFilePointer>();\n      final Iterator orderIterator = myRootModel.getOrderIterator();\n      while (orderIterator.hasNext()) {\n        OrderEntry entry = (OrderEntry)orderIterator.next();\n        final String [] urls;\n        if (entry instanceof ModuleOrderEntry) {\n          urls = ((ModuleOrderEntryImpl)entry).getUrls(type, processed);\n        }\n        else {\n          urls = entry.getUrls(type);\n        }\n        final VirtualFilePointerManager virtualFilePointerManager = VirtualFilePointerManager.getInstance();\n        for (String url : urls) {\n          if (url != null) {\n            cachedFiles.add(virtualFilePointerManager.create(url, null));\n          }\n        }\n      }\n      myCachedFiles.put(type, cachedFiles);\n    }\n    return convertPointers(cachedFiles);\n  }","commit_id":"7d215c1a8107cf1bf6ad52984ef1c13e98047ce8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  VirtualFile[] getFilesForOtherModules(OrderRootType rootType, Set<Module> processed) {\n    VirtualFile[] files = myCachedExportedFiles.get(rootType);\n    if (files == null) {\n      List<VirtualFile> result = new ArrayList<VirtualFile>();\n      if (OrderRootType.SOURCES.equals(rootType) || OrderRootType.COMPILATION_CLASSES.equals(rootType)) {\n        myRootModel.addExportedFiles(rootType, result, processed);\n        files = result.toArray(new VirtualFile[result.size()]);\n      }\n      else if (OrderRootType.JAVADOC.equals(rootType)) {\n        files = VirtualFile.EMPTY_ARRAY;\n      }\n      else if (OrderRootType.CLASSES.equals(rootType)) {\n        myRootModel.addExportedFiles(rootType, result, processed);\n        files = result.toArray(new VirtualFile[result.size()]);\n      }\n      else if (OrderRootType.CLASSES_AND_OUTPUT.equals(rootType)) {\n        files = getFiles(OrderRootType.CLASSES_AND_OUTPUT, processed);\n      }\n      else {\n        LOG.error(\"Unknown root type: \" + rootType);\n        return null;\n      }\n      myCachedExportedFiles.put(rootType, files);\n    }\n    return files;\n  }","id":1527,"modified_method":"@NotNull\n  VirtualFile[] getFilesForOtherModules(OrderRootType rootType, Set<Module> processed) {\n    Set<VirtualFilePointer> files = myCachedExportedFiles.get(rootType);\n    if (files == null) {\n      files = new THashSet<VirtualFilePointer>();\n      List<String> result = new ArrayList<String>();\n      if (OrderRootType.SOURCES.equals(rootType) || OrderRootType.COMPILATION_CLASSES.equals(rootType)) {\n        myRootModel.addExportedUrs(rootType, result, processed);\n      }\n      else if (OrderRootType.CLASSES.equals(rootType)) {\n        myRootModel.addExportedUrs(rootType, result, processed);\n      }\n      else if (OrderRootType.CLASSES_AND_OUTPUT.equals(rootType)) {\n        return getFiles(OrderRootType.CLASSES_AND_OUTPUT, processed);\n      }\n      else if (OrderRootType.JAVADOC.equals(rootType)) {\n        return getFiles(OrderRootType.JAVADOC, processed);\n      }\n      else {\n        LOG.error(\"Unknown root type: \" + rootType);\n        return null;\n      }\n      final VirtualFilePointerManager pointerManager = VirtualFilePointerManager.getInstance();\n      for (String url : result) {\n        if (url != null) {\n          files.add(pointerManager.create(url, null));\n        }\n      }\n      myCachedExportedFiles.put(rootType, files);\n    }\n\n    return convertPointers(files);\n  }","commit_id":"7d215c1a8107cf1bf6ad52984ef1c13e98047ce8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ModuleRootManagerImpl(Module module,\n                               DirectoryIndex directoryIndex,\n                               ProjectRootManagerImpl projectRootManager,\n                               VirtualFilePointerManager filePointerManager) {\n    myModule = module;\n    myProjectRootManager = projectRootManager;\n    myFilePointerManager = filePointerManager;\n\n    myFileIndex = new ModuleFileIndexImpl(myModule, directoryIndex);\n    myCachedFiles = new THashMap<OrderRootType, VirtualFile[]>();\n    myCachedExportedFiles = new THashMap<OrderRootType, VirtualFile[]>();\n    myRootModel = new RootModelImpl(this, myProjectRootManager, myFilePointerManager);\n  }","id":1528,"modified_method":"public ModuleRootManagerImpl(Module module,\n                               DirectoryIndex directoryIndex,\n                               ProjectRootManagerImpl projectRootManager,\n                               VirtualFilePointerManager filePointerManager) {\n    myModule = module;\n    myProjectRootManager = projectRootManager;\n    myFilePointerManager = filePointerManager;\n\n    myFileIndex = new ModuleFileIndexImpl(myModule, directoryIndex);\n    myCachedFiles = new THashMap<OrderRootType, Set<VirtualFilePointer>>();\n    myCachedExportedFiles = new THashMap<OrderRootType, Set<VirtualFilePointer>>();\n    myRootModel = new RootModelImpl(this, myProjectRootManager, myFilePointerManager);\n  }","commit_id":"7d215c1a8107cf1bf6ad52984ef1c13e98047ce8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ModuleRootManagerImpl(Module module,\n                               DirectoryIndex directoryIndex,\n                               ProjectRootManagerImpl projectRootManager,\n                               VirtualFilePointerManager filePointerManager) {\n    myModule = module;\n    myProjectRootManager = projectRootManager;\n    myFilePointerManager = filePointerManager;\n\n    myFileIndex = new ModuleFileIndexImpl(myModule, directoryIndex);\n    myCachedFiles = new THashMap<OrderRootType, VirtualFile[]>();\n    myCachedExportedFiles = new THashMap<OrderRootType, VirtualFile[]>();\n    myRootModel = new RootModelImpl(this, myProjectRootManager, myFilePointerManager);\n  }","id":1529,"modified_method":"public ModuleRootManagerImpl(Module module,\n                               DirectoryIndex directoryIndex,\n                               ProjectRootManagerImpl projectRootManager,\n                               VirtualFilePointerManager filePointerManager) {\n    myModule = module;\n    myProjectRootManager = projectRootManager;\n    myFilePointerManager = filePointerManager;\n\n    myFileIndex = new ModuleFileIndexImpl(myModule, directoryIndex);\n    myCachedFiles = new THashMap<OrderRootType, Set<VirtualFilePointer>>();\n    myCachedExportedFiles = new THashMap<OrderRootType, Set<VirtualFilePointer>>();\n    myRootModel = new RootModelImpl(this, myProjectRootManager, myFilePointerManager);\n  }","commit_id":"51c3df1e7d9a182ba70ca96cf651daa99c5656ba","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private VirtualFile[] getFiles(OrderRootType type, Set<Module> processed) {\n    VirtualFile[] cachedFiles = myCachedFiles.get(type);\n    if (cachedFiles == null) {\n      final LinkedHashSet<VirtualFile> result = new LinkedHashSet<VirtualFile>();\n      final Iterator orderIterator = myRootModel.getOrderIterator();\n      while (orderIterator.hasNext()) {\n        OrderEntry entry = (OrderEntry)orderIterator.next();\n        final VirtualFile[] files;\n        if (entry instanceof ModuleOrderEntry) {\n          files = ((ModuleOrderEntryImpl)entry).getFiles(type, processed);\n        }\n        else {\n          files = entry.getFiles(type);\n        }\n        for (VirtualFile file : files) {\n          if (file != null) {\n            result.add(file);\n          }\n        }\n      }\n      cachedFiles = result.toArray(new VirtualFile[result.size()]);\n      myCachedFiles.put(type, cachedFiles);\n    }\n    return cachedFiles;\n  }","id":1530,"modified_method":"@NotNull\n  private VirtualFile[] getFiles(OrderRootType type, Set<Module> processed) {\n    Set<VirtualFilePointer> cachedFiles = myCachedFiles.get(type);\n    if (cachedFiles == null) {\n      cachedFiles = new THashSet<VirtualFilePointer>();\n      final Iterator orderIterator = myRootModel.getOrderIterator();\n      while (orderIterator.hasNext()) {\n        OrderEntry entry = (OrderEntry)orderIterator.next();\n        final String [] urls;\n        if (entry instanceof ModuleOrderEntry) {\n          urls = ((ModuleOrderEntryImpl)entry).getUrls(type, processed);\n        }\n        else {\n          urls = entry.getUrls(type);\n        }\n        final VirtualFilePointerManager virtualFilePointerManager = VirtualFilePointerManager.getInstance();\n        for (String url : urls) {\n          if (url != null) {\n            cachedFiles.add(virtualFilePointerManager.create(url, null));\n          }\n        }\n      }\n      myCachedFiles.put(type, cachedFiles);\n    }\n    return convertPointers(cachedFiles);\n  }","commit_id":"51c3df1e7d9a182ba70ca96cf651daa99c5656ba","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  VirtualFile[] getFilesForOtherModules(OrderRootType rootType, Set<Module> processed) {\n    VirtualFile[] files = myCachedExportedFiles.get(rootType);\n    if (files == null) {\n      List<VirtualFile> result = new ArrayList<VirtualFile>();\n      if (OrderRootType.SOURCES.equals(rootType) || OrderRootType.COMPILATION_CLASSES.equals(rootType)) {\n        myRootModel.addExportedFiles(rootType, result, processed);\n        files = result.toArray(new VirtualFile[result.size()]);\n      }\n      else if (OrderRootType.JAVADOC.equals(rootType)) {\n        files = VirtualFile.EMPTY_ARRAY;\n      }\n      else if (OrderRootType.CLASSES.equals(rootType)) {\n        myRootModel.addExportedFiles(rootType, result, processed);\n        files = result.toArray(new VirtualFile[result.size()]);\n      }\n      else if (OrderRootType.CLASSES_AND_OUTPUT.equals(rootType)) {\n        files = getFiles(OrderRootType.CLASSES_AND_OUTPUT, processed);\n      }\n      else {\n        LOG.error(\"Unknown root type: \" + rootType);\n        return null;\n      }\n      myCachedExportedFiles.put(rootType, files);\n    }\n    return files;\n  }","id":1531,"modified_method":"@NotNull\n  VirtualFile[] getFilesForOtherModules(OrderRootType rootType, Set<Module> processed) {\n    Set<VirtualFilePointer> files = myCachedExportedFiles.get(rootType);\n    if (files == null) {\n      files = new THashSet<VirtualFilePointer>();\n      List<String> result = new ArrayList<String>();\n      if (OrderRootType.SOURCES.equals(rootType) || OrderRootType.COMPILATION_CLASSES.equals(rootType)) {\n        myRootModel.addExportedUrs(rootType, result, processed);\n      }\n      else if (OrderRootType.CLASSES.equals(rootType)) {\n        myRootModel.addExportedUrs(rootType, result, processed);\n      }\n      else if (OrderRootType.CLASSES_AND_OUTPUT.equals(rootType)) {\n        return getFiles(OrderRootType.CLASSES_AND_OUTPUT, processed);\n      }\n      else if (OrderRootType.JAVADOC.equals(rootType)) {\n        return getFiles(OrderRootType.JAVADOC, processed);\n      }\n      else {\n        LOG.error(\"Unknown root type: \" + rootType);\n        return null;\n      }\n      final VirtualFilePointerManager pointerManager = VirtualFilePointerManager.getInstance();\n      for (String url : result) {\n        if (url != null) {\n          files.add(pointerManager.create(url, null));\n        }\n      }\n      myCachedExportedFiles.put(rootType, files);\n    }\n\n    return convertPointers(files);\n  }","commit_id":"51c3df1e7d9a182ba70ca96cf651daa99c5656ba","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void dropCaches() {\n    myCachedFiles.clear();\n    myCachedExportedFiles.clear();\n  }","id":1532,"modified_method":"public void dropCaches() {\n    VirtualFilePointerManager manager = VirtualFilePointerManager.getInstance();\n    killPointers(manager, myCachedFiles);\n    killPointers(manager, myCachedExportedFiles);\n    myCachedFiles.clear();\n    myCachedExportedFiles.clear();\n  }","commit_id":"51c3df1e7d9a182ba70ca96cf651daa99c5656ba","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Transforms a file system path into a URI with the file:// scheme.\n   * @param ctx query context\n   * @return result\n   * @throws QueryException query context\n   */\n  private Uri pathToUri(final QueryContext ctx) throws QueryException {\n    final String path = string(checkEStr(expr[0].atomic(ctx, input)));\n    try {\n      final URI uri = new URI(\"file\", path, null);\n      return Uri.uri(uri.toString().getBytes());\n    } catch(URISyntaxException e) {\n      Err.or(input, QueryText.URIINV, path);\n      return null;\n    }\n  }","id":1533,"modified_method":"/**\n   * Transforms a file system path into a URI with the file:// scheme.\n   * @param ctx query context\n   * @return result\n   * @throws QueryException query context\n   */\n  private Uri pathToUri(final QueryContext ctx) throws QueryException {\n\n    final String path = string(checkEStr(expr[0].atomic(ctx, input)));\n\n    final URI uri = new File(path).toURI();\n    return Uri.uri(Token.token(uri.toString()));\n\n  }","commit_id":"8031013c32eeee6c4f5abe5b37e60d01599104f7","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Moves a file or directory.\n   * @param file file/dir to be moved\n   * @param ctx query context\n   * @return result\n   * @throws QueryException query exception\n   */\n  private Bln move(final File file, final QueryContext ctx)\n      throws QueryException {\n\n    final String dest = string(checkStr(expr[1], ctx));\n\n    final String destFile = dest.endsWith(Prop.SEP) ? dest + file.getName()\n        : dest + Prop.SEP + file.getName();\n\n    // Raise an exception if the target file already exists\n    if(new File(destFile).exists()) {\n      Err.or(input, QueryText.TARGETEXISTS, file.getPath());\n      return Bln.FALSE;\n    }\n\n    // Raise an exception if the user has no access\n    // to the destination\n    if(!new File(dest).canWrite()) {\n      Err.or(input, QueryText.FILEMOVE, file.getPath(), dest);\n      return Bln.FALSE;\n    }\n\n    // Raise an exception if a directory is to be moved\n    if(file.isDirectory()) {\n      Err.or(input, QueryText.DIRMOVE);\n      return Bln.FALSE;\n    }\n\n    return Bln.get(file.renameTo(new File(dest, file.getName())));\n\n  }","id":1534,"modified_method":"/**\n   * Moves a file or directory.\n   * @param file file/dir to be moved\n   * @param ctx query context\n   * @return result\n   * @throws QueryException query exception\n   */\n  private Item move(final File file, final QueryContext ctx)\n      throws QueryException {\n\n    final String dest = string(checkStr(expr[1], ctx));\n\n    final String destFile = dest.endsWith(Prop.SEP) ? dest + file.getName()\n        : dest + Prop.SEP + file.getName();\n\n    // Raise an exception if the target file already exists\n    if(new File(destFile).exists()) {\n      Err.or(input, QueryText.TARGETEXISTS, file.getPath());\n    }\n\n    // Raise an exception if the user has no access\n    // to the destination\n    if(!new File(dest).canWrite()) {\n      Err.or(input, QueryText.FILEMOVE, file.getPath(), dest);\n    }\n\n    // Raise an exception if a directory is to be moved\n    if(file.isDirectory()) {\n      Err.or(input, QueryText.DIRMOVE);\n    }\n\n    if(!file.renameTo(new File(dest, file.getName()))) {\n      Err.or(input, QueryText.CANNOTMOVE, file.getPath());\n    }\n    return null;\n\n  }","commit_id":"8031013c32eeee6c4f5abe5b37e60d01599104f7","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Creates a directory.\n   * @param file directory to be created\n   * @param includeParents indicator for including nonexistent parent\n   *          directories by the creation\n   * @return result\n   * @throws QueryException query exception\n   */\n  private Bln makeDir(final File file, final boolean includeParents)\n      throws QueryException {\n\n    // Raise an exception if the directory cannot be created because\n    // a file with the same name already exists\n    if(file.exists() && file.isFile()) {\n      Err.or(input, QueryText.FILEEXISTS, file.getName());\n      return Bln.FALSE;\n    } else if(file.exists() && file.isDirectory()) {\n      return Bln.TRUE;\n    }\n\n    if(includeParents) {\n\n      // Raise an exception if the existent directory, in which\n      // the dirs are to be created, is write-protected\n      final File existingParent = getExistingParent(file);\n      if(!existingParent.canWrite()) {\n       Err.or(input, QueryText.MKDIR, file.getPath(), existingParent.getPath());\n       return Bln.FALSE;\n      }\n      return Bln.get(file.mkdirs());\n\n    }\n\n    return Bln.get(file.mkdir());\n\n  }","id":1535,"modified_method":"/**\n   * Creates a directory.\n   * @param file directory to be created\n   * @param includeParents indicator for including nonexistent parent\n   *          directories by the creation\n   * @return result\n   * @throws QueryException query exception\n   */\n  private Item makeDir(final File file, final boolean includeParents)\n      throws QueryException {\n\n    // Raise an exception if the directory cannot be created because\n    // a file with the same name already exists\n    if(file.exists()) if(!file.isDirectory()) \n      Err.or(input, QueryText.FILEEXISTS, file.getName());\n\n    if(includeParents) {\n\n      // Raise an exception if the existent directory, in which\n      // the dirs are to be created, is write-protected\n      final File parent = getExistingParent(file);\n      if(!parent.canWrite())\n        Err.or(input, QueryText.MKDIR, file.getPath(), parent.getPath());\n\n      if(!file.mkdirs())\n        Err.or(input, QueryText.CANNOTMKDIR, file.getPath());\n    }\n\n      if(!file.mkdir())\n        Err.or(input, QueryText.CANNOTMKDIR, file.getPath());\n\n    return null;\n  }","commit_id":"8031013c32eeee6c4f5abe5b37e60d01599104f7","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Deletes a file.\n   * @param file file to be deleted\n   * @return result\n   * @throws QueryException query exception\n   */\n  private Bln delete(final File file) throws QueryException {\n\n    if(!file.exists()) {\n      Err.or(input, QueryText.FILENOTEXISTS, file.getPath());\n      return Bln.FALSE;\n    }\n\n    if(!file.canWrite()) {\n      Err.or(input, QueryText.FILEDEL, file.getPath());\n      return Bln.FALSE;\n    }\n\n    if(file.isDirectory() && file.listFiles().length != 0) {\n      Err.or(input, QueryText.FILEDELDIR, file.getPath());\n      return Bln.FALSE;\n    }\n\n    return Bln.get(file.delete());\n\n  }","id":1536,"modified_method":"/**\n   * Deletes a file.\n   * @param file file to be deleted\n   * @return result\n   * @throws QueryException query exception\n   */\n  private Item delete(final File file) throws QueryException {\n\n    if(!file.exists())\n      Err.or(input, QueryText.FILENOTEXISTS, file.getPath());\n\n    if(!file.canWrite())\n      Err.or(input, QueryText.FILEDEL, file.getPath());\n\n    if(file.isDirectory() && file.listFiles().length != 0) \n      Err.or(input, QueryText.FILEDELDIR, file.getPath());\n\n    if(!file.delete())\n      Err.or(input, QueryText.CANNOTDEL, file.getPath());\n\n    return null;\n  }","commit_id":"8031013c32eeee6c4f5abe5b37e60d01599104f7","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Returns the lowest existing parent of the directory to be created.\n   * @param file directory to be created\n   * @return existing parent\n   */\n  private File getExistingParent(final File file) {\n\n    File parent = file.getParentFile();\n\n    while(parent.getParent() != null) {\n      if(parent.exists()) {\n        return parent;\n      }\n      parent = parent.getParentFile();\n\n    }\n\n    return parent;\n  }","id":1537,"modified_method":"/**\n   * Returns the lowest existing parent of the directory to be created.\n   * @param file directory to be created\n   * @return existing parent\n   * @throws QueryException query exception\n   */\n  private File getExistingParent(final File file) throws QueryException {\n\n    try {\n      File f = file.getCanonicalFile();\n\n      do {\n\n        f = f.getParentFile();\n        if(f == null) Err.or(input, QueryText.DIRINV, file);\n\n      } while(!f.exists());\n      return f;\n    } catch(IOException ex) {\n      Err.or(input, QueryText.DIRINV, file);\n      return null;\n    }\n\n  }","commit_id":"8031013c32eeee6c4f5abe5b37e60d01599104f7","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Copies a file given a source and a destination.\n   * @param ctx query context\n   * @return result\n   * @throws QueryException query exception\n   */\n  private Item copy(final QueryContext ctx) throws QueryException {\n    final String src = string(checkStr(expr[0], ctx));\n    final String dest = string(checkStr(expr[1], ctx));\n\n    try {\n      final FileChannel srcc = new FileInputStream(new File(src)).getChannel();\n      final FileChannel dc = new FileOutputStream(new File(dest)).getChannel();\n      try {\n        dc.transferFrom(srcc, 0, srcc.size());\n      } finally {\n        srcc.close();\n        dc.close();\n      }\n    } catch(final IOException ex) {\n      Err.or(input, ex.getMessage(), src, dest);\n    }\n    return null;\n  }","id":1538,"modified_method":"/**\n   * Copies a file given a source and a destination.\n   * @param ctx query context\n   * @return result\n   * @throws QueryException query exception\n   */\n  private Item copy(final QueryContext ctx) throws QueryException {\n    final String src = string(checkStr(expr[0], ctx));\n    final String dest = string(checkStr(expr[1], ctx));\n\n    try {\n      final FileChannel srcc = new FileInputStream(new File(src)).getChannel();\n      final FileChannel dc = new FileOutputStream(new File(dest)).getChannel();\n      try {\n        dc.transferFrom(srcc, 0, srcc.size());\n      } finally {\n        try {\n          srcc.close();\n        } catch(final IOException ex) { }\n        try {\n          dc.close();\n        } catch(final IOException ex) { }\n      }\n    } catch(final IOException ex) {\n      Err.or(input, ex.getMessage(), src, dest);\n    }\n    return null;\n  }","commit_id":"8031013c32eeee6c4f5abe5b37e60d01599104f7","url":"https://github.com/BaseXdb/basex"},{"original_method":"protected void deactivate(ComponentContext componentContext) {\n\n        // first of all, we have to unregister\n        httpService.unregister(this.slingRoot);\n\n        destroyFilters(innerFilterChain);\n        destroyFilters(requestFilterChain);\n\n        if (slingAuthenticator != null) {\n            slingAuthenticator.dispose();\n            slingAuthenticator = null;\n        }\n\n        this.slingServletContext = null;\n        this.osgiComponentContext = null;\n\n        activated = false;\n        log.info(this.getServerInfo() + \" shut down\");\n    }","id":1539,"modified_method":"protected void deactivate(ComponentContext componentContext) {\n\n        // first of all, we have to unregister\n        httpService.unregister(this.slingRoot);\n\n        destroyFilters(innerFilterChain);\n        destroyFilters(requestFilterChain);\n\n        if (slingAuthenticator != null) {\n            slingAuthenticator.dispose();\n            slingAuthenticator = null;\n        }\n\n        if (slingServletContext != null) {\n            slingServletContext.dispose();\n            slingServletContext = null;\n        }\n\n        this.osgiComponentContext = null;\n\n        activated = false;\n        log.info(this.getServerInfo() + \" shut down\");\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns the init-param of the servlet context in which Sling is\n     * configured. This method calls on the <code>ServletContext<\/code> in\n     * which the {@link SlingMainServlet} is running.\n     */\n    public String getInitParameter(String name) {\n        return getServletContext().getInitParameter(name);\n    }","id":1540,"modified_method":"/**\n     * Returns the init-param of the servlet context in which Sling is\n     * configured. This method calls on the <code>ServletContext<\/code> in\n     * which the {@link SlingMainServlet} is running.\n     */\n    public String getInitParameter(String name) {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getInitParameter(name);\n        }\n        \n        return null;\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns the name of the servlet context in which Sling is configured.\n     * This method calls on the <code>ServletContext<\/code> in which the\n     * {@link SlingMainServlet} is running.\n     */\n    public String getServletContextName() {\n        return getServletContext().getServletContextName();\n    }","id":1541,"modified_method":"/**\n     * Returns the name of the servlet context in which Sling is configured.\n     * This method calls on the <code>ServletContext<\/code> in which the\n     * {@link SlingMainServlet} is running.\n     */\n    public String getServletContextName() {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getServletContextName();\n        }\n        \n        return null;\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns a servlet container request dispatcher for the named servlet.\n     * This method calls on the <code>ServletContext<\/code> in which the\n     * {@link SlingMainServlet} is running.\n     */\n    public RequestDispatcher getNamedDispatcher(String name) {\n        return getServletContext().getNamedDispatcher(name);\n    }","id":1542,"modified_method":"/**\n     * Returns a servlet container request dispatcher for the named servlet.\n     * This method calls on the <code>ServletContext<\/code> in which the\n     * {@link SlingMainServlet} is running.\n     */\n    public RequestDispatcher getNamedDispatcher(String name) {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getNamedDispatcher(name);\n        }\n        \n        return null;\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns a MIME type for the extension of the given file name. This method\n     * calls on the <code>ServletContext<\/code> in which the\n     * {@link SlingMainServlet} is running.\n     */\n    public String getMimeType(String file) {\n        return getServletContext().getMimeType(file);\n    }","id":1543,"modified_method":"/**\n     * Returns a MIME type for the extension of the given file name. This method\n     * calls on the <code>ServletContext<\/code> in which the\n     * {@link SlingMainServlet} is running.\n     */\n    public String getMimeType(String file) {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getMimeType(file);\n        }\n        \n        return null;\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns the real file inside the web application to which the given path\n     * maps or <code>null<\/code> if no such file exists. This method calls on\n     * the <code>ServletContext<\/code> in which the {@link SlingMainServlet}\n     * is running.\n     */\n    public String getRealPath(String path) {\n        return getServletContext().getRealPath(path);\n    }","id":1544,"modified_method":"/**\n     * Returns the real file inside the web application to which the given path\n     * maps or <code>null<\/code> if no such file exists. This method calls on\n     * the <code>ServletContext<\/code> in which the {@link SlingMainServlet}\n     * is running.\n     */\n    public String getRealPath(String path) {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getRealPath(path);\n        }\n        \n        return null;\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Removes the named servlet context attribute. This method calls on the\n     * <code>ServletContext<\/code> in which the {@link SlingMainServlet} is\n     * running.\n     */\n    public void removeAttribute(String name) {\n        getServletContext().removeAttribute(name);\n    }","id":1545,"modified_method":"/**\n     * Removes the named servlet context attribute. This method calls on the\n     * <code>ServletContext<\/code> in which the {@link SlingMainServlet} is\n     * running.\n     */\n    public void removeAttribute(String name) {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            delegatee.removeAttribute(name);\n        }\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns the names of all servlet context attributes. This method calls on\n     * the <code>ServletContext<\/code> in which the {@link SlingMainServlet}\n     * is running.\n     */\n    @SuppressWarnings(\"unchecked\")\n    public Enumeration<String> getAttributeNames() {\n        return getServletContext().getAttributeNames();\n    }","id":1546,"modified_method":"/**\n     * Returns the names of all servlet context attributes. This method calls on\n     * the <code>ServletContext<\/code> in which the {@link SlingMainServlet}\n     * is running.\n     */\n    @SuppressWarnings(\"unchecked\")\n    public Enumeration<String> getAttributeNames() {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getAttributeNames();\n        }\n        \n        return Collections.enumeration(Collections.<String>emptyList());\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns the major version number of the Servlet API supported by the\n     * servlet container in which Sling is running. This method calls on the\n     * <code>ServletContext<\/code> in which the {@link SlingMainServlet} is\n     * running.\n     */\n    public int getMajorVersion() {\n        return getServletContext().getMajorVersion();\n    }","id":1547,"modified_method":"/**\n     * Returns the major version number of the Servlet API supported by the\n     * servlet container in which Sling is running. This method calls on the\n     * <code>ServletContext<\/code> in which the {@link SlingMainServlet} is\n     * running.\n     */\n    public int getMajorVersion() {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getMajorVersion();\n        }\n        \n        return 2; // hard coded major version as fall back\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns a set of names for path entries considered children of the given\n     * path. This method calls on the <code>ServletContext<\/code> in which the\n     * {@link SlingMainServlet} is running.\n     */\n    @SuppressWarnings(\"unchecked\")\n    public Set<String> getResourcePaths(String parentPath) {\n        return getServletContext().getResourcePaths(parentPath);\n    }","id":1548,"modified_method":"/**\n     * Returns a set of names for path entries considered children of the given\n     * path. This method calls on the <code>ServletContext<\/code> in which the\n     * {@link SlingMainServlet} is running.\n     */\n    @SuppressWarnings(\"unchecked\")\n    public Set<String> getResourcePaths(String parentPath) {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getResourcePaths(parentPath);\n        }\n        \n        return null;\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Sets the name servlet context attribute to the requested value. This\n     * method calls on the <code>ServletContext<\/code> in which the\n     * {@link SlingMainServlet} is running.\n     */\n    public void setAttribute(String name, Object object) {\n        getServletContext().setAttribute(name, object);\n    }","id":1549,"modified_method":"/**\n     * Sets the name servlet context attribute to the requested value. This\n     * method calls on the <code>ServletContext<\/code> in which the\n     * {@link SlingMainServlet} is running.\n     */\n    public void setAttribute(String name, Object object) {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            delegatee.setAttribute(name, object);\n        }\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns the names of the init-params of the servlet context in which\n     * Sling is configured. This method calls on the <code>ServletContext<\/code>\n     * in which the {@link SlingMainServlet} is running.\n     */\n    @SuppressWarnings(\"unchecked\")\n    public Enumeration<String> getInitParameterNames() {\n        return getServletContext().getInitParameterNames();\n    }","id":1550,"modified_method":"/**\n     * Returns the names of the init-params of the servlet context in which\n     * Sling is configured. This method calls on the <code>ServletContext<\/code>\n     * in which the {@link SlingMainServlet} is running.\n     */\n    @SuppressWarnings(\"unchecked\")\n    public Enumeration<String> getInitParameterNames() {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getInitParameterNames();\n        }\n        \n        return null;\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns an input stream to the given path. This method calls on the\n     * <code>ServletContext<\/code> in which the {@link SlingMainServlet} is\n     * running.\n     */\n    public InputStream getResourceAsStream(String path) {\n        return getServletContext().getResourceAsStream(path);\n    }","id":1551,"modified_method":"/**\n     * Returns an input stream to the given path. This method calls on the\n     * <code>ServletContext<\/code> in which the {@link SlingMainServlet} is\n     * running.\n     */\n    public InputStream getResourceAsStream(String path) {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getResourceAsStream(path);\n        }\n        \n        return null;\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns the servlet context from the servlet container in which sling is\n     * running. This method calls on the <code>ServletContext<\/code> in which\n     * the {@link SlingMainServlet} is running.\n     */\n    public ServletContext getContext(String uripath) {\n        return getServletContext().getContext(uripath);\n    }","id":1552,"modified_method":"/**\n     * Returns the servlet context from the servlet container in which sling is\n     * running. This method calls on the <code>ServletContext<\/code> in which\n     * the {@link SlingMainServlet} is running.\n     */\n    public ServletContext getContext(String uripath) {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getContext(uripath);\n        }\n        \n        return null;\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns the named servlet context attribute. This method calls on the\n     * <code>ServletContext<\/code> in which the {@link SlingMainServlet} is\n     * running.\n     */\n    public Object getAttribute(String name) {\n        return getServletContext().getAttribute(name);\n    }","id":1553,"modified_method":"/**\n     * Returns the named servlet context attribute. This method calls on the\n     * <code>ServletContext<\/code> in which the {@link SlingMainServlet} is\n     * running.\n     */\n    public Object getAttribute(String name) {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getAttribute(name);\n        }\n        \n        return null;\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/** Returns the context path of the web application. (Servlet API 2.5) */\n    public String getContextPath() {\n        try {\n            return (String) getServletContext().getClass().getMethod(\"getContextPath\", (Class<?>[]) null).invoke(getServletContext(), (Object[]) null);\n        } catch (Exception ignore) {\n            return null;\n        }\n    }","id":1554,"modified_method":"/** Returns the context path of the web application. (Servlet API 2.5) */\n    public String getContextPath() {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            try {\n                return (String) delegatee.getClass().getMethod(\n                    \"getContextPath\", (Class<?>[]) null).invoke(\n                    getServletContext(), (Object[]) null);\n            } catch (Throwable ignore) {\n            }\n        }\n\n        return null;\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns the minor version number of the Servlet API supported by the\n     * servlet container in which Sling is running. This method calls on the\n     * <code>ServletContext<\/code> in which the {@link SlingMainServlet} is\n     * running.\n     */\n    public int getMinorVersion() {\n        return getServletContext().getMinorVersion();\n    }","id":1555,"modified_method":"/**\n     * Returns the minor version number of the Servlet API supported by the\n     * servlet container in which Sling is running. This method calls on the\n     * <code>ServletContext<\/code> in which the {@link SlingMainServlet} is\n     * running.\n     */\n    public int getMinorVersion() {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getMinorVersion();\n        }\n        \n        return 4; // hard coded minor version as fall back\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Returns the URI for the given path. This method calls on the\n     * <code>ServletContext<\/code> in which the {@link SlingMainServlet} is\n     * running.\n     */\n    public URL getResource(String path) throws MalformedURLException {\n        return getServletContext().getResource(path);\n    }","id":1556,"modified_method":"/**\n     * Returns the URI for the given path. This method calls on the\n     * <code>ServletContext<\/code> in which the {@link SlingMainServlet} is\n     * running.\n     */\n    public URL getResource(String path) throws MalformedURLException {\n        ServletContext delegatee = getServletContext();\n        if (delegatee != null) {\n            return delegatee.getResource(path);\n        }\n        \n        return null;\n    }","commit_id":"c6dc44da762f2777573f01e773bf6b8ae44e8568","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Copies the Artifact after building the destination file name if\n     * overridden. This method also checks if the classifier is set and adds it\n     * to the destination file name if needed.\n     *\n     * @param artifact       representing the object to be copied.\n     * @param removeVersion  specifies if the version should be removed from the file name\n     *                       when copying.\n     * @param prependGroupId specifies if the groupId should be prepend to the file while copying.\n     * @throws MojoExecutionException with a message if an error occurs.\n     * @see DependencyUtil#copyFile(File, File, Log)\n     * @see DependencyUtil#getFormattedFileName(Artifact, boolean)\n     */\n    protected void copyArtifact( Artifact artifact, boolean removeVersion, boolean prependGroupId )\n        throws MojoExecutionException\n    {\n\n        String destFileName = DependencyUtil.getFormattedFileName( artifact, removeVersion, prependGroupId );\n\n        File destDir;\n        destDir = DependencyUtil.getFormattedOutputDirectory( useSubDirectoryPerScope, useSubDirectoryPerType,\n                                                              useSubDirectoryPerArtifact, useRepositoryLayout,\n                                                              stripVersion, outputDirectory, artifact );\n        File destFile = new File( destDir, destFileName );\n\n        copyFile( artifact.getFile(), destFile );\n    }","id":1557,"modified_method":"/**\n     * Copies the Artifact after building the destination file name if\n     * overridden. This method also checks if the classifier is set and adds it\n     * to the destination file name if needed.\n     *\n     * @param artifact       representing the object to be copied.\n     * @param removeVersion  specifies if the version should be removed from the file name\n     *                       when copying.\n     * @param prependGroupId specifies if the groupId should be prepend to the file while copying.\n     * @param useBaseVersion specifies if the baseVersion of the artifact should be used instead of the version.\n     * @throws MojoExecutionException with a message if an error occurs.\n     * @see DependencyUtil#copyFile(File, File, Log)\n     * @see DependencyUtil#getFormattedFileName(Artifact, boolean)\n     */\n    protected void copyArtifact( Artifact artifact, boolean removeVersion, boolean prependGroupId, \n    \t\tboolean useBaseVersion ) throws MojoExecutionException\n    {\n\n        String destFileName = DependencyUtil.getFormattedFileName( artifact, removeVersion, prependGroupId, \n        \t\tuseBaseVersion );\n\n        File destDir;\n        destDir = DependencyUtil.getFormattedOutputDirectory( useSubDirectoryPerScope, useSubDirectoryPerType,\n                                                              useSubDirectoryPerArtifact, useRepositoryLayout,\n                                                              stripVersion, outputDirectory, artifact );\n        File destFile = new File( destDir, destFileName );\n\n        copyFile( artifact.getFile(), destFile );\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Main entry into mojo. Gets the list of dependencies and iterates through\n     * calling copyArtifact.\n     *\n     * @throws MojoExecutionException with a message if an error occurs.\n     * @see #getDependencies\n     * @see #copyArtifact(Artifact, boolean)\n     */\n    public void execute()\n        throws MojoExecutionException\n    {\n        DependencyStatusSets dss = getDependencySets( this.failOnMissingClassifierArtifact );\n        Set<Artifact> artifacts = dss.getResolvedDependencies();\n\n        if ( !useRepositoryLayout )\n        {\n            for ( Artifact artifact : artifacts )\n            {\n                copyArtifact( artifact, this.stripVersion, this.prependGroupId );\n            }\n        }\n        else\n        {\n            try\n            {\n                ArtifactRepository targetRepository =\n                    repositoryFactory.createDeploymentArtifactRepository( \"local\",\n                                                                          outputDirectory.toURL().toExternalForm(),\n                                                                          (ArtifactRepositoryLayout) repositoryLayouts.get( \"default\" ),\n                                                                          false /* uniqueVersion */);\n                for ( Artifact artifact : artifacts )\n                {\n                    installArtifact( artifact, targetRepository );\n                }\n            }\n            catch ( MalformedURLException e )\n            {\n                throw new MojoExecutionException( \"Could not create outputDirectory repository\", e );\n            }\n        }\n\n        Set<Artifact> skippedArtifacts = dss.getSkippedDependencies();\n        for ( Artifact artifact : skippedArtifacts )\n        {\n            getLog().info( artifact.getFile().getName() + \" already exists in destination.\" );\n        }\n\n        if ( isCopyPom() )\n        {\n            copyPoms( getOutputDirectory(), artifacts, this.stripVersion );\n            copyPoms( getOutputDirectory(), skippedArtifacts,\n                      this.stripVersion );  // Artifacts that already exist may not already have poms.\n        }\n    }","id":1558,"modified_method":"/**\n     * Main entry into mojo. Gets the list of dependencies and iterates through\n     * calling copyArtifact.\n     *\n     * @throws MojoExecutionException with a message if an error occurs.\n     * @see #getDependencies\n     * @see #copyArtifact(Artifact, boolean)\n     */\n    public void execute()\n        throws MojoExecutionException\n    {\n        DependencyStatusSets dss = getDependencySets( this.failOnMissingClassifierArtifact );\n        Set<Artifact> artifacts = dss.getResolvedDependencies();\n\n        if ( !useRepositoryLayout )\n        {\n            for ( Artifact artifact : artifacts )\n            {\n                copyArtifact( artifact, isStripVersion(), this.prependGroupId, this.useBaseVersion );\n            }\n        }\n        else\n        {\n            try\n            {\n                ArtifactRepository targetRepository =\n                    repositoryFactory.createDeploymentArtifactRepository( \"local\",\n                                                                          outputDirectory.toURL().toExternalForm(),\n                                                                          (ArtifactRepositoryLayout) repositoryLayouts.get( \"default\" ),\n                                                                          false /* uniqueVersion */);\n                for ( Artifact artifact : artifacts )\n                {\n                    installArtifact( artifact, targetRepository );\n                }\n            }\n            catch ( MalformedURLException e )\n            {\n                throw new MojoExecutionException( \"Could not create outputDirectory repository\", e );\n            }\n        }\n\n        Set<Artifact> skippedArtifacts = dss.getSkippedDependencies();\n        for ( Artifact artifact : skippedArtifacts )\n        {\n            getLog().info( artifact.getFile().getName() + \" already exists in destination.\" );\n        }\n\n        if ( isCopyPom() )\n        {\n            copyPoms( getOutputDirectory(), artifacts, this.stripVersion );\n            copyPoms( getOutputDirectory(), skippedArtifacts,\n                      this.stripVersion );  // Artifacts that already exist may not already have poms.\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Builds the file name. If removeVersion is set, then the file name must be\n     * reconstructed from the groupId (if <b>prependGroupId<\/b> is true) artifactId,\n     * Classifier (if used) and Type.\n     * Otherwise, this method returns the artifact file name.\n     * \n     * @param artifact\n     *            File to be formatted.\n     * @param removeVersion\n     *            Specifies if the version should be removed from the file name.\n     * @param prependGroupId\n     *            Specifies if the groupId should be prepended to the file name.\n     * @return Formatted file name in the format\n     *         [groupId].artifactId-[version]-[classifier].[type]\n     */\n    public static String getFormattedFileName( Artifact artifact, boolean removeVersion, boolean prependGroupId )\n    {\n        StringBuilder destFileName = new StringBuilder();\n        \n        if ( prependGroupId )\n        {\n            destFileName.append( artifact.getGroupId() ).append( \".\" );\n        }\n        \n        String versionString = null;\n        if ( !removeVersion )\n        {\n            versionString = \"-\" + artifact.getVersion();\n        }\n        else\n        {\n            versionString = \"\";\n        }\n\n        String classifierString = \"\";\n\n        if ( StringUtils.isNotEmpty( artifact.getClassifier() ) )\n        {\n            classifierString = \"-\" + artifact.getClassifier();\n        }\n        destFileName.append( artifact.getArtifactId() ).append( versionString );\n        destFileName.append( classifierString ).append( \".\" );\n        destFileName.append( artifact.getArtifactHandler().getExtension() );\n        \n        return destFileName.toString();\n    }","id":1559,"modified_method":"/**\n     * Builds the file name. If removeVersion is set, then the file name must be\n     * reconstructed from the groupId (if <b>prependGroupId<\/b> is true) artifactId,\n     * Classifier (if used) and Type.\n     * Otherwise, this method returns the artifact file name.\n     * \n     * @param artifact\n     *            File to be formatted.\n     * @param removeVersion\n     *            Specifies if the version should be removed from the file name.\n     * @param prependGroupId\n     *            Specifies if the groupId should be prepended to the file name.\n     * @return Formatted file name in the format\n     *         [groupId].artifactId-[version]-[classifier].[type]\n     */\n    public static String getFormattedFileName( Artifact artifact, boolean removeVersion, boolean prependGroupId )\n    {   \n    \treturn getFormattedFileName(artifact, removeVersion, prependGroupId, false);\n    \t\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void dotestClassifierType( String testClassifier, String testType )\n        throws Exception\n    {\n        mojo.classifier = testClassifier;\n        mojo.type = testType;\n\n        // init classifier things\n        mojo.setFactory( DependencyTestUtils.getArtifactFactory() );\n        mojo.setResolver( new StubArtifactResolver( stubFactory, false, false ) );\n        mojo.setLocal( new StubArtifactRepository( this.testDir.getAbsolutePath() ) );\n\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n\n            String useClassifier = artifact.getClassifier();\n            String useType = artifact.getType();\n\n            if ( StringUtils.isNotEmpty( testClassifier ) )\n            {\n                useClassifier = \"-\" + testClassifier;\n                // type is only used if classifier is used.\n                if ( StringUtils.isNotEmpty( testType ) )\n                {\n                    useType = testType;\n                }\n            }\n            String fileName = artifact.getArtifactId() + \"-\" + artifact.getVersion() + useClassifier + \".\" + useType;\n            File file = new File( mojo.outputDirectory, fileName );\n\n            if ( !file.exists() )\n            {\n                fail( \"Can't find:\" + file.getAbsolutePath() );\n            }\n\n            // there should be no markers for the copy mojo\n            assertNoMarkerFile( artifact );\n        }\n    }","id":1560,"modified_method":"public void dotestClassifierType( String testClassifier, String testType )\n        throws Exception\n    {\n        mojo.classifier = testClassifier;\n        mojo.type = testType;\n\n        // init classifier things\n        mojo.setFactory( DependencyTestUtils.getArtifactFactory() );\n        mojo.setResolver( new StubArtifactResolver( stubFactory, false, false ) );\n        mojo.setLocal( new StubArtifactRepository( this.testDir.getAbsolutePath() ) );\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String useClassifier = artifact.getClassifier();\n            String useType = artifact.getType();\n\n            if ( StringUtils.isNotEmpty( testClassifier ) )\n            {\n                useClassifier = \"-\" + testClassifier;\n                // type is only used if classifier is used.\n                if ( StringUtils.isNotEmpty( testType ) )\n                {\n                    useType = testType;\n                }\n            }\n            String fileName = artifact.getArtifactId() + \"-\" + artifact.getVersion() + useClassifier + \".\" + useType;\n            File file = new File( mojo.outputDirectory, fileName );\n\n            if ( !file.exists() )\n            {\n                fail( \"Can't find:\" + file.getAbsolutePath() );\n            }\n\n            // there should be no markers for the copy mojo\n            assertNoMarkerFile( artifact );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testCopyPom()\n        throws Exception\n    {\n        mojo.setCopyPom( true );\n        mojo.setResolver( new StubArtifactResolver( stubFactory, false, false ) );\n        mojo.setLocal( new StubArtifactRepository( this.testDir.getAbsolutePath() ) );\n\n        Set<Artifact> set = new HashSet<Artifact>();\n        set.add( stubFactory.createArtifact( \"org.apache.maven\", \"maven-artifact\", \"2.0.7\", Artifact.SCOPE_COMPILE ) );\n        mojo.project.setArtifacts( set );\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName.substring( 0, fileName.length() - 4 ) + \".pom\" );\n            assertTrue( file.exists() );\n        }\n    }","id":1561,"modified_method":"public void testCopyPom()\n        throws Exception\n    {\n        mojo.setCopyPom( true );\n        mojo.setResolver( new StubArtifactResolver( stubFactory, false, false ) );\n        mojo.setLocal( new StubArtifactRepository( this.testDir.getAbsolutePath() ) );\n\n        Set<Artifact> set = new HashSet<Artifact>();\n        set.add( stubFactory.createArtifact( \"org.apache.maven\", \"maven-artifact\", \"2.0.7\", Artifact.SCOPE_COMPILE ) );\n        mojo.project.setArtifacts( set );\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName.substring( 0, fileName.length() - 4 ) + \".pom\" );\n            assertTrue( file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testSubPerType()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getTypedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.useSubDirectoryPerType = true;\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File folder = DependencyUtil.getFormattedOutputDirectory( false, true, false, false, false, mojo.outputDirectory,\n                                                                      artifact );\n            File file = new File( folder, fileName );\n            assertTrue( file.exists() );\n        }\n    }","id":1562,"modified_method":"public void testSubPerType()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getTypedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.useSubDirectoryPerType = true;\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File folder = DependencyUtil.getFormattedOutputDirectory( false, true, false, false, false, mojo.outputDirectory,\n                                                                      artifact );\n            File file = new File( folder, fileName );\n            assertTrue( file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testExcludeGroupId()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getGroupIdArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeGroupIds = \"one\";\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( artifact.getGroupId().equals( \"one\" ), !file.exists() );\n        }\n    }","id":1563,"modified_method":"public void testExcludeGroupId()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getGroupIdArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeGroupIds = \"one\";\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( artifact.getGroupId().equals( \"one\" ), !file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testExcludeType()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getTypedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeTypes = \"jar\";\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getType().equalsIgnoreCase( \"jar\" ), !file.exists() );\n        }\n    }","id":1564,"modified_method":"public void testExcludeType()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getTypedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeTypes = \"jar\";\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getType().equalsIgnoreCase( \"jar\" ), !file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testIncludeArtifactId()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getArtifactArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n\n        mojo.includeArtifactIds = \"one\";\n        mojo.excludeArtifactIds = \"one\";\n        //shouldn't get anything\n\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertFalse( file.exists() );\n        }\n\n        mojo.excludeArtifactIds = \"\";\n        mojo.execute();\n\n        iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getArtifactId().equals( \"one\" ), file.exists() );\n        }\n    }","id":1565,"modified_method":"public void testIncludeArtifactId()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getArtifactArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n\n        mojo.includeArtifactIds = \"one\";\n        mojo.excludeArtifactIds = \"one\";\n        //shouldn't get anything\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertFalse( file.exists() );\n        }\n\n        mojo.excludeArtifactIds = \"\";\n        mojo.execute();\n\n        artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getArtifactId().equals( \"one\" ), file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testExcludeRuntimeScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeScope = \"runtime\";\n        mojo.execute();\n        ScopeArtifactFilter saf = new ScopeArtifactFilter( mojo.excludeScope );\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( !saf.include( artifact ), file.exists() );\n        }\n    }","id":1566,"modified_method":"public void testExcludeRuntimeScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeScope = \"runtime\";\n        mojo.execute();\n        ScopeArtifactFilter saf = new ScopeArtifactFilter( mojo.excludeScope );\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( !saf.include( artifact ), file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testExcludeArtifactId()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getArtifactArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeArtifactIds = \"one\";\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getArtifactId().equals( \"one\" ), !file.exists() );\n        }\n    }","id":1567,"modified_method":"public void testExcludeArtifactId()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getArtifactArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeArtifactIds = \"one\";\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getArtifactId().equals( \"one\" ), !file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testExcludeSystemScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeScope = \"system\";\n        // mojo.silent = false;\n\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getScope().equals( \"system\" ), !file.exists() );\n            file.delete();\n            assertFalse( file.exists() );\n        }\n\n    }","id":1568,"modified_method":"public void testExcludeSystemScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeScope = \"system\";\n        // mojo.silent = false;\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getScope().equals( \"system\" ), !file.exists() );\n            file.delete();\n            assertFalse( file.exists() );\n        }\n\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * tests the proper discovery and configuration of the mojo\n     *\n     * @throws Exception\n     */\n    public void testMojo()\n        throws Exception\n    {\n        mojo.execute();\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertTrue( file.exists() );\n\n            // there should be no markers for the copy mojo\n            assertNoMarkerFile( artifact );\n        }\n    }","id":1569,"modified_method":"/**\n     * tests the proper discovery and configuration of the mojo\n     *\n     * @throws Exception\n     */\n    public void testMojo()\n        throws Exception\n    {\n        mojo.execute();\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertTrue( file.exists() );\n\n            // there should be no markers for the copy mojo\n            assertNoMarkerFile( artifact );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testExcludeProvidedScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeScope = \"provided\";\n        // mojo.silent = false;\n\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getScope().equals( \"provided\" ), !file.exists() );\n            file.delete();\n            assertFalse( file.exists() );\n        }\n\n    }","id":1570,"modified_method":"public void testExcludeProvidedScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeScope = \"provided\";\n        // mojo.silent = false;\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getScope().equals( \"provided\" ), !file.exists() );\n            file.delete();\n            assertFalse( file.exists() );\n        }\n\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testIncludeType()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getTypedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n\n        mojo.includeTypes = \"jar\";\n        mojo.excludeTypes = \"jar\";\n        //shouldn't get anything.\n\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertFalse( file.exists() );\n        }\n\n        mojo.excludeTypes = \"\";\n        mojo.execute();\n\n        iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getType().equalsIgnoreCase( \"jar\" ), file.exists() );\n        }\n    }","id":1571,"modified_method":"public void testIncludeType()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getTypedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n\n        mojo.includeTypes = \"jar\";\n        mojo.excludeTypes = \"jar\";\n        //shouldn't get anything.\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertFalse( file.exists() );\n        }\n\n        mojo.excludeTypes = \"\";\n        mojo.execute();\n\n        artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getType().equalsIgnoreCase( \"jar\" ), file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testNoTransitive()\n        throws Exception\n    {\n        mojo.excludeTransitive = true;\n        mojo.execute();\n        Iterator<Artifact> iter = mojo.project.getDependencyArtifacts().iterator();\n\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertTrue( file.exists() );\n        }\n    }","id":1572,"modified_method":"public void testNoTransitive()\n        throws Exception\n    {\n        mojo.excludeTransitive = true;\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getDependencyArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertTrue( file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testPrependGroupId() \n        throws Exception\n    {\n        mojo.prependGroupId = true;\n        mojo.execute();\n    \n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false, true );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertTrue( file.exists() );\n        }\n    }","id":1573,"modified_method":"public void testPrependGroupId() \n        throws Exception\n    {\n        mojo.prependGroupId = true;\n        mojo.execute();\n    \n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false, true );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertTrue( file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testIncludeGroupId()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getGroupIdArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.includeGroupIds = \"one\";\n        mojo.excludeGroupIds = \"one\";\n        //shouldn't get anything\n\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertFalse( file.exists() );\n        }\n\n        mojo.excludeGroupIds = \"\";\n        mojo.execute();\n\n        iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getGroupId().equals( \"one\" ), file.exists() );\n        }\n\n    }","id":1574,"modified_method":"public void testIncludeGroupId()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getGroupIdArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.includeGroupIds = \"one\";\n        mojo.excludeGroupIds = \"one\";\n        //shouldn't get anything\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertFalse( file.exists() );\n        }\n\n        mojo.excludeGroupIds = \"\";\n        mojo.execute();\n\n        artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getGroupId().equals( \"one\" ), file.exists() );\n        }\n\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testExcludeMultipleGroupIds()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getGroupIdArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeGroupIds = \"one,two\";\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( artifact.getGroupId().equals( \"one\" ) || artifact.getGroupId().equals( \"two\" ), !file.exists() );\n        }\n    }","id":1575,"modified_method":"public void testExcludeMultipleGroupIds()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getGroupIdArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeGroupIds = \"one,two\";\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( artifact.getGroupId().equals( \"one\" ) || artifact.getGroupId().equals( \"two\" ), !file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testExcludeCompileScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeScope = \"compile\";\n        mojo.execute();\n        ScopeArtifactFilter saf = new ScopeArtifactFilter( mojo.excludeScope );\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( !saf.include( artifact ), file.exists() );\n        }\n    }","id":1576,"modified_method":"public void testExcludeCompileScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeScope = \"compile\";\n        mojo.execute();\n        ScopeArtifactFilter saf = new ScopeArtifactFilter( mojo.excludeScope );\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( !saf.include( artifact ), file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testExcludeClassifier()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getClassifiedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeClassifiers = \"one\";\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getClassifier().equals( \"one\" ), !file.exists() );\n        }\n    }","id":1577,"modified_method":"public void testExcludeClassifier()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getClassifiedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.excludeClassifiers = \"one\";\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getClassifier().equals( \"one\" ), !file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testIncludeClassifier()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getClassifiedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n\n        mojo.includeClassifiers = \"one\";\n        mojo.excludeClassifiers = \"one\";\n        //shouldn't get anything\n\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertFalse( file.exists() );\n        }\n\n        mojo.excludeClassifiers = \"\";\n        mojo.execute();\n\n        iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getClassifier().equals( \"one\" ), file.exists() );\n        }\n\n    }","id":1578,"modified_method":"public void testIncludeClassifier()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getClassifiedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n\n        mojo.includeClassifiers = \"one\";\n        mojo.excludeClassifiers = \"one\";\n        //shouldn't get anything\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertFalse( file.exists() );\n        }\n\n        mojo.excludeClassifiers = \"\";\n        mojo.execute();\n\n        artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( artifact.getClassifier().equals( \"one\" ), file.exists() );\n        }\n\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testStripVersion()\n        throws Exception\n    {\n        mojo.stripVersion = true;\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, true );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertTrue( file.exists() );\n        }\n    }","id":1579,"modified_method":"public void testStripVersion()\n        throws Exception\n    {\n        mojo.stripVersion = true;\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, true );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertTrue( file.exists() );\n        }\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"protected void setUp()\n        throws Exception\n    {\n        super.setUp();\n\n        ArtifactHandler ah = new DefaultArtifactHandlerStub( \"jar\", null );\n        VersionRange vr = VersionRange.createFromVersion( \"1.1\" );\n        release = new DefaultArtifact( \"test\", \"one\", vr, Artifact.SCOPE_COMPILE, \"jar\", \"sources\", ah, false );\n        artifacts.add( release );\n\n        ah = new DefaultArtifactHandlerStub( \"war\", null );\n        vr = VersionRange.createFromVersion( \"1.1-SNAPSHOT\" );\n        snap = new DefaultArtifact( \"test\", \"two\", vr, Artifact.SCOPE_PROVIDED, \"war\", null, ah, false );\n        artifacts.add( snap );\n\n        ah = new DefaultArtifactHandlerStub( \"war\", null );\n        vr = VersionRange.createFromVersion( \"1.1-SNAPSHOT\" );\n        sources = new DefaultArtifact( \"test\", \"two\", vr, Artifact.SCOPE_PROVIDED, \"sources\", \"sources\", ah, false );\n\n        // pick random output location\n        Random a = new Random();\n        outputFolder = new File( \"target/copy\" + a.nextLong() + \"/\" );\n        outputFolder.delete();\n        assertFalse( outputFolder.exists() );\n    }","id":1580,"modified_method":"protected void setUp()\n        throws Exception\n    {\n        super.setUp();\n\n        ArtifactHandler ah = new DefaultArtifactHandlerStub( \"jar\", null );\n        VersionRange vr = VersionRange.createFromVersion( \"1.1\" );\n        release = new DefaultArtifact( \"test\", \"one\", vr, Artifact.SCOPE_COMPILE, \"jar\", \"sources\", ah, false );\n        artifacts.add( release );\n\n        ah = new DefaultArtifactHandlerStub( \"war\", null );\n        vr = VersionRange.createFromVersion( \"1.1-SNAPSHOT\" );\n        snap = new DefaultArtifact( \"test\", \"two\", vr, Artifact.SCOPE_PROVIDED, \"war\", null, ah, false );\n        artifacts.add( snap );\n\n        ah = new DefaultArtifactHandlerStub( \"war\", null );\n        vr = VersionRange.createFromVersion( \"1.1-SNAPSHOT\" );\n        snapResolvedVersion = new DefaultArtifact( \"test\", \"three\", vr, Artifact.SCOPE_PROVIDED, \"war\", null, ah, false );\n        snapResolvedVersion.setResolvedVersion(\"1.1-20121003.035531-117\");\n        artifacts.add( snapResolvedVersion );\n\n        ah = new DefaultArtifactHandlerStub( \"war\", null );\n        vr = VersionRange.createFromVersion( \"1.1-SNAPSHOT\" );\n        sources = new DefaultArtifact( \"test\", \"two\", vr, Artifact.SCOPE_PROVIDED, \"sources\", \"sources\", ah, false );\n\n        // pick random output location\n        Random a = new Random();\n        outputFolder = new File( \"target/copy\" + a.nextLong() + \"/\" );\n        outputFolder.delete();\n        assertFalse( outputFolder.exists() );\n    }","commit_id":"4b7e3102ebc365eca38ab5b798cf98774e51248d","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testSubPerArtifactAndScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getTypedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.useSubDirectoryPerArtifact = true;\n        mojo.useSubDirectoryPerScope = true;\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File folder = DependencyUtil.getFormattedOutputDirectory( true, false, true, false, false, mojo.outputDirectory,\n                                                                      artifact );\n            File file = new File( folder, fileName );\n            assertTrue( file.exists() );\n        }\n    }","id":1581,"modified_method":"public void testSubPerArtifactAndScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getTypedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.useSubDirectoryPerArtifact = true;\n        mojo.useSubDirectoryPerScope = true;\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File folder = DependencyUtil.getFormattedOutputDirectory( true, false, true, false, false, mojo.outputDirectory,\n                                                                      artifact );\n            File file = new File( folder, fileName );\n            assertTrue( file.exists() );\n        }\n    }","commit_id":"58d92691442e8730f6883a525f85afc7e6a024a8","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testCopyDependenciesMojoIncludeCompileScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.includeScope = \"compile\";\n        mojo.execute();\n        ScopeArtifactFilter saf = new ScopeArtifactFilter( mojo.includeScope );\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( saf.include( artifact ), file.exists() );\n        }\n    }","id":1582,"modified_method":"public void testCopyDependenciesMojoIncludeCompileScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.includeScope = \"compile\";\n\n        mojo.execute();\n\n        ScopeArtifactFilter saf = new ScopeArtifactFilter( mojo.includeScope );\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( saf.include( artifact ), file.exists() );\n        }\n    }","commit_id":"58d92691442e8730f6883a525f85afc7e6a024a8","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testCopyDependenciesMojoIncludesystemScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.includeScope = \"system\";\n\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ), file.exists() );\n        }\n    }","id":1583,"modified_method":"public void testCopyDependenciesMojoIncludesystemScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.includeScope = \"system\";\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ), file.exists() );\n        }\n    }","commit_id":"58d92691442e8730f6883a525f85afc7e6a024a8","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testSubPerArtifactAndTypeRemoveVersion()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getTypedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.useSubDirectoryPerArtifact = true;\n        mojo.useSubDirectoryPerType = true;\n        mojo.stripVersion = true;\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, true );\n            File folder = DependencyUtil.getFormattedOutputDirectory( false, true, true, false, true, mojo.outputDirectory,\n                                                                      artifact );\n            File file = new File( folder, fileName );\n            assertTrue( file.exists() );\n        }\n    }","id":1584,"modified_method":"public void testSubPerArtifactAndTypeRemoveVersion()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getTypedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.useSubDirectoryPerArtifact = true;\n        mojo.useSubDirectoryPerType = true;\n        mojo.stripVersion = true;\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, true );\n            File folder = DependencyUtil.getFormattedOutputDirectory( false, true, true, false, true, mojo.outputDirectory,\n                                                                      artifact );\n            File file = new File( folder, fileName );\n            assertTrue( file.exists() );\n        }\n    }","commit_id":"58d92691442e8730f6883a525f85afc7e6a024a8","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testSubPerArtifact()\n        throws Exception\n    {\n        mojo.useSubDirectoryPerArtifact = true;\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File folder = DependencyUtil.getFormattedOutputDirectory( false, false, true, false, false, mojo.outputDirectory,\n                                                                      artifact );\n            File file = new File( folder, fileName );\n            assertTrue( file.exists() );\n        }\n    }","id":1585,"modified_method":"public void testSubPerArtifact()\n        throws Exception\n    {\n        mojo.useSubDirectoryPerArtifact = true;\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File folder = DependencyUtil.getFormattedOutputDirectory( false, false, true, false, false, mojo.outputDirectory,\n                                                                      artifact );\n            File file = new File( folder, fileName );\n            assertTrue( file.exists() );\n        }\n    }","commit_id":"58d92691442e8730f6883a525f85afc7e6a024a8","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testCopyDependenciesMojoIncludeRuntimeScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.includeScope = \"runtime\";\n        mojo.execute();\n        ScopeArtifactFilter saf = new ScopeArtifactFilter( mojo.includeScope );\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( saf.include( artifact ), file.exists() );\n        }\n    }","id":1586,"modified_method":"public void testCopyDependenciesMojoIncludeRuntimeScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.includeScope = \"runtime\";\n\n        mojo.execute();\n\n        ScopeArtifactFilter saf = new ScopeArtifactFilter( mojo.includeScope );\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( saf.include( artifact ), file.exists() );\n        }\n    }","commit_id":"58d92691442e8730f6883a525f85afc7e6a024a8","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testSubPerArtifactAndType()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getTypedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.useSubDirectoryPerArtifact = true;\n        mojo.useSubDirectoryPerType = true;\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File folder = DependencyUtil.getFormattedOutputDirectory( false, true, true, false, false, mojo.outputDirectory,\n                                                                      artifact );\n            File file = new File( folder, fileName );\n            assertTrue( file.exists() );\n        }\n    }","id":1587,"modified_method":"public void testSubPerArtifactAndType()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getTypedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.useSubDirectoryPerArtifact = true;\n        mojo.useSubDirectoryPerType = true;\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File folder = DependencyUtil.getFormattedOutputDirectory( false, true, true, false, false, mojo.outputDirectory,\n                                                                      artifact );\n            File file = new File( folder, fileName );\n            assertTrue( file.exists() );\n        }\n    }","commit_id":"58d92691442e8730f6883a525f85afc7e6a024a8","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testCopyDependenciesMojoIncludeprovidedScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.includeScope = \"provided\";\n\n        mojo.execute();\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n            assertEquals( Artifact.SCOPE_PROVIDED.equals( artifact.getScope() ), file.exists() );\n        }\n    }","id":1588,"modified_method":"public void testCopyDependenciesMojoIncludeprovidedScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.includeScope = \"provided\";\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( Artifact.SCOPE_PROVIDED.equals( artifact.getScope() ), file.exists() );\n        }\n    }","commit_id":"58d92691442e8730f6883a525f85afc7e6a024a8","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testCopyDependenciesMojoIncludeTestScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.includeScope = \"test\";\n\n        mojo.execute();\n        ScopeArtifactFilter saf = new ScopeArtifactFilter( mojo.includeScope );\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( saf.include( artifact ), file.exists() );\n        }\n    }","id":1589,"modified_method":"public void testCopyDependenciesMojoIncludeTestScope()\n        throws Exception\n    {\n        mojo.project.setArtifacts( stubFactory.getScopedArtifacts() );\n        mojo.project.setDependencyArtifacts( new HashSet<Artifact>() );\n        mojo.includeScope = \"test\";\n\n        mojo.execute();\n\n        ScopeArtifactFilter saf = new ScopeArtifactFilter( mojo.includeScope );\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, false );\n            File file = new File( mojo.outputDirectory, fileName );\n\n            assertEquals( saf.include( artifact ), file.exists() );\n        }\n    }","commit_id":"58d92691442e8730f6883a525f85afc7e6a024a8","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void assertArtifactExists( Artifact artifact, ArtifactRepository targetRepository ) {\n\t\tFile file = new File( targetRepository.getBasedir(), \n\t\t\t\t\t\t\t  targetRepository.getLayout().pathOf( artifact ) );\n\t\tassertTrue( file.exists() );\n\n\t\tIterator metaIter = artifact.getMetadataList().iterator();\n        while ( metaIter.hasNext() )\n        {\n        \tArtifactMetadata meta = (ArtifactMetadata) metaIter.next();\n\t\t\tFile metaFile = new File( targetRepository.getBasedir(), \n\t\t\t\t\t\t\t\t\t  targetRepository.getLayout().pathOfLocalRepositoryMetadata( meta, targetRepository) );\n\t\t\tassertTrue( metaFile.exists() );\n        }\n\t}","id":1590,"modified_method":"private void assertArtifactExists( Artifact artifact, ArtifactRepository targetRepository ) {\n\t\tFile file = new File( targetRepository.getBasedir(), \n\t\t\t\t\t\t\t  targetRepository.getLayout().pathOf( artifact ) );\n\t\tassertTrue( file.exists() );\n\n\t\tCollection<ArtifactMetadata> metas = artifact.getMetadataList();\n\t\tfor ( ArtifactMetadata meta : metas )\n        {\n\t\t\tFile metaFile = new File( targetRepository.getBasedir(), \n\t\t\t\t\t\t\t\t\t  targetRepository.getLayout().pathOfLocalRepositoryMetadata( meta, targetRepository) );\n\t\t\tassertTrue( metaFile.exists() );\n        }\n\t}","commit_id":"58d92691442e8730f6883a525f85afc7e6a024a8","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testSubPerArtifactRemoveVersion()\n        throws Exception\n    {\n        mojo.useSubDirectoryPerArtifact = true;\n        mojo.stripVersion = true;\n        mojo.execute();\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n            String fileName = DependencyUtil.getFormattedFileName( artifact, true );\n            File folder = DependencyUtil.getFormattedOutputDirectory( false, false, true, false, true, mojo.outputDirectory,\n                                                                      artifact );\n            File file = new File( folder, fileName );\n            assertTrue( file.exists() );\n        }\n    }","id":1591,"modified_method":"public void testSubPerArtifactRemoveVersion()\n        throws Exception\n    {\n        mojo.useSubDirectoryPerArtifact = true;\n        mojo.stripVersion = true;\n\n        mojo.execute();\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n            String fileName = DependencyUtil.getFormattedFileName( artifact, true );\n            File folder = DependencyUtil.getFormattedOutputDirectory( false, false, true, false, true, mojo.outputDirectory,\n                                                                      artifact );\n            File file = new File( folder, fileName );\n            assertTrue( file.exists() );\n        }\n    }","commit_id":"58d92691442e8730f6883a525f85afc7e6a024a8","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testRepositoryLayout()\n        throws Exception\n    {\n    \tString baseVersion = \"2.0-SNAPSHOT\";\n\t\tString groupId = \"testGroupId\";\n\t\tString artifactId = \"expanded-snapshot\";\n\n\t\tArtifact expandedSnapshot = createExpandedVersionArtifact( baseVersion,\n\t\t\t\t                                                   groupId, \n\t\t\t\t                                                   artifactId,\n\t\t\t\t                                                   \"compile\",\n\t\t\t\t                                                   \"jar\",\n\t\t\t\t                                                   null);\n\n        mojo.project.getArtifacts().add( expandedSnapshot );\n        mojo.project.getDependencyArtifacts().add( expandedSnapshot );\n\n\t\tArtifact pomExpandedSnapshot = createExpandedVersionArtifact( baseVersion,\n\t\t\t\t\t\t\t\t\t\t\t\t\t                  groupId, \n\t\t\t\t\t\t\t\t\t\t\t\t\t                  artifactId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t                  \"compile\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t                  \"pom\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t                  null);\n        mojo.project.getArtifacts().add( pomExpandedSnapshot );\n        mojo.project.getDependencyArtifacts().add( pomExpandedSnapshot );\n\n        mojo.useRepositoryLayout = true;\n        mojo.execute();\n        \n        File outputDirectory = mojo.outputDirectory;\n\t\tArtifactRepository targetRepository = mojo.repositoryFactory.createDeploymentArtifactRepository( \n        \t\t\"local\", \n        \t\toutputDirectory.toURL().toExternalForm(), \n                new DefaultRepositoryLayout(),\n                false );\n\n        Iterator<Artifact> iter = mojo.project.getArtifacts().iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = iter.next();\n\t\t\tassertArtifactExists( artifact, targetRepository );\n            \n            if ( ! artifact.getBaseVersion().equals( artifact.getVersion() ) )\n            {\n            \tArtifact baseArtifact = mojo.factory.createArtifact( artifact.getGroupId(), \n\t\t\t\t\t\t            \t\t\t                     artifact.getArtifactId(),\n\t\t\t\t\t\t            \t\t\t                     artifact.getBaseVersion(),\n\t\t\t\t\t\t            \t\t\t                     artifact.getScope(),\n\t\t\t\t\t\t            \t\t\t                     artifact.getType() );\n    \t\t\tassertArtifactExists( baseArtifact, targetRepository );\n            }\n\n        }\n    }","id":1592,"modified_method":"public void testRepositoryLayout()\n        throws Exception\n    {\n    \tString baseVersion = \"2.0-SNAPSHOT\";\n\t\tString groupId = \"testGroupId\";\n\t\tString artifactId = \"expanded-snapshot\";\n\n\t\tArtifact expandedSnapshot = createExpandedVersionArtifact( baseVersion,\n\t\t\t\t                                                   groupId, \n\t\t\t\t                                                   artifactId,\n\t\t\t\t                                                   \"compile\",\n\t\t\t\t                                                   \"jar\",\n\t\t\t\t                                                   null);\n\n        mojo.project.getArtifacts().add( expandedSnapshot );\n        mojo.project.getDependencyArtifacts().add( expandedSnapshot );\n\n\t\tArtifact pomExpandedSnapshot = createExpandedVersionArtifact( baseVersion,\n\t\t\t\t\t\t\t\t\t\t\t\t\t                  groupId, \n\t\t\t\t\t\t\t\t\t\t\t\t\t                  artifactId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t                  \"compile\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t                  \"pom\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t                  null);\n        mojo.project.getArtifacts().add( pomExpandedSnapshot );\n        mojo.project.getDependencyArtifacts().add( pomExpandedSnapshot );\n\n        mojo.useRepositoryLayout = true;\n        mojo.execute();\n        \n        File outputDirectory = mojo.outputDirectory;\n\t\tArtifactRepository targetRepository = mojo.repositoryFactory.createDeploymentArtifactRepository( \n        \t\t\"local\", \n        \t\toutputDirectory.toURL().toExternalForm(), \n                new DefaultRepositoryLayout(),\n                false );\n\n        Set<Artifact> artifacts = mojo.project.getArtifacts();\n        for ( Artifact artifact : artifacts )\n        {\n\t\t\tassertArtifactExists( artifact, targetRepository );\n            \n            if ( ! artifact.getBaseVersion().equals( artifact.getVersion() ) )\n            {\n            \tArtifact baseArtifact = mojo.factory.createArtifact( artifact.getGroupId(), \n\t\t\t\t\t\t            \t\t\t                     artifact.getArtifactId(),\n\t\t\t\t\t\t            \t\t\t                     artifact.getBaseVersion(),\n\t\t\t\t\t\t            \t\t\t                     artifact.getScope(),\n\t\t\t\t\t\t            \t\t\t                     artifact.getType() );\n    \t\t\tassertArtifactExists( baseArtifact, targetRepository );\n            }\n\n        }\n    }","commit_id":"58d92691442e8730f6883a525f85afc7e6a024a8","url":"https://github.com/apache/maven-plugins"},{"original_method":"public SProperty getProperty(final String name) {\n    return new SPropertyNodeAdapter(ListSequence.fromList(SLinkOperations.getTargets(myConcept, \"propertyDeclaration\", true)).findFirst(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return eq_12aglo_a0a0a0a0a0a0a0g(SPropertyOperations.getString(it, \"name\"), name);\n      }\n    }));\n  }","id":1593,"modified_method":"public SProperty getProperty(final String name) {\n    SNode property = ListSequence.fromList(SLinkOperations.getTargets(myConcept, \"propertyDeclaration\", true)).findFirst(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return eq_12aglo_a0a0a0a0a0a0a6(SPropertyOperations.getString(it, \"name\"), name);\n      }\n    });\n    return (property == null ?\n      null :\n      new SPropertyNodeAdapter(property)\n    );\n  }","commit_id":"46b7c159696c9e57b0d69d16faf978b39b6a0a8a","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static boolean eq_12aglo_a0a0a0a0a0a0a0g(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","id":1594,"modified_method":"private static boolean eq_12aglo_a0a0a0a0a0a0a4(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","commit_id":"46b7c159696c9e57b0d69d16faf978b39b6a0a8a","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static boolean eq_12aglo_a0a0a0a0a0a0a0e(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","id":1595,"modified_method":"private static boolean eq_12aglo_a0a0a0a0a0a0a6(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","commit_id":"46b7c159696c9e57b0d69d16faf978b39b6a0a8a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SLink getLink(final String role) {\n    return new SLinkNodeAdapter(ListSequence.fromList(SLinkOperations.getTargets(myConcept, \"linkDeclaration\", true)).findFirst(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return eq_12aglo_a0a0a0a0a0a0a0e(SPropertyOperations.getString(SModelUtil.getGenuineLinkDeclaration(it), \"role\"), role);\n      }\n    }));\n  }","id":1596,"modified_method":"public SLink getLink(final String role) {\n    SNode link = ListSequence.fromList(SLinkOperations.getTargets(myConcept, \"linkDeclaration\", true)).findFirst(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return eq_12aglo_a0a0a0a0a0a0a4(SPropertyOperations.getString(SModelUtil.getGenuineLinkDeclaration(it), \"role\"), role);\n      }\n    });\n    return (link == null ?\n      null :\n      new SLinkNodeAdapter(link)\n    );\n  }","commit_id":"46b7c159696c9e57b0d69d16faf978b39b6a0a8a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void suggestRemoveIncompatibleFramework(\n            @NotNull ModifiableRootModel rootModel,\n            @NotNull CustomLibraryDescription libraryDescription,\n            @NotNull FrameworkType frameworkType\n    ) {\n        List<OrderEntry> existingEntries = new ArrayList<OrderEntry>();\n        Set<? extends LibraryKind> kinds = libraryDescription.getSuitableLibraryKinds();\n\n        for (OrderEntry entry : rootModel.getOrderEntries()) {\n            if (!(entry instanceof LibraryOrderEntry)) continue;\n            Library library = ((LibraryOrderEntry)entry).getLibrary();\n            if (library == null) continue;\n\n            for (LibraryKind kind : kinds) {\n                if (LibraryPresentationManager.getInstance().isLibraryOfKind(Arrays.asList(library.getFiles(OrderRootType.CLASSES)), kind)) {\n                    existingEntries.add(entry);\n                }\n            }\n        }\n\n        removeWithConfirm(rootModel, existingEntries,\n                          String.format(\"Current module is already configured with '%s' framework.\\nDo you want to remove it?\",\n                                        frameworkType.getPresentableName()),\n                          \"Framework Conflict\");\n    }","id":1597,"modified_method":"public static void suggestRemoveIncompatibleFramework(\n            @NotNull ModifiableRootModel rootModel,\n            @NotNull Set<? extends LibraryKind> frameworkLibraryKinds,\n            @NotNull FrameworkType frameworkType\n    ) {\n        List<OrderEntry> existingEntries = new ArrayList<OrderEntry>();\n\n        for (OrderEntry entry : rootModel.getOrderEntries()) {\n            if (!(entry instanceof LibraryOrderEntry)) continue;\n            Library library = ((LibraryOrderEntry)entry).getLibrary();\n            if (library == null) continue;\n\n            for (LibraryKind kind : frameworkLibraryKinds) {\n                if (LibraryPresentationManager.getInstance().isLibraryOfKind(Arrays.asList(library.getFiles(OrderRootType.CLASSES)), kind)) {\n                    existingEntries.add(entry);\n                }\n            }\n        }\n\n        removeWithConfirm(rootModel, existingEntries,\n                          String.format(\"Current module is already configured with '%s' framework.\\nDo you want to remove it?\",\n                                        frameworkType.getPresentableName()),\n                          \"Framework Conflict\");\n    }","commit_id":"8ddbdab8c8851f25f28263ca33eafb920b75222f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    @Override\n    public FrameworkSupportInModuleConfigurable createConfigurable(@NotNull FrameworkSupportModel model) {\n        return new FrameworkSupportInModuleConfigurable() {\n            @Nullable\n            @Override\n            public CustomLibraryDescription createLibraryDescription() {\n                return new JSLibraryStdDescription();\n            }\n\n            @Nullable\n            @Override\n            public JComponent createComponent() {\n                return null;\n            }\n\n            @Override\n            public boolean isOnlyLibraryAdded() {\n                return true;\n            }\n\n            @Override\n            public void addSupport(\n                    @NotNull Module module,\n                    @NotNull ModifiableRootModel rootModel,\n                    @NotNull ModifiableModelsProvider modifiableModelsProvider) {\n                FrameworksCompatibilityUtils.suggestRemoveIncompatibleFramework(\n                        rootModel,\n                        new JavaRuntimeLibraryDescription(),\n                        JavaFrameworkType.getInstance());\n\n                FrameworksCompatibilityUtils.suggestRemoveOldJsLibrary(rootModel);\n            }\n        };\n    }","id":1598,"modified_method":"@NotNull\n    @Override\n    public FrameworkSupportInModuleConfigurable createConfigurable(@NotNull final FrameworkSupportModel model) {\n        return new FrameworkSupportInModuleConfigurable() {\n            public JSLibraryStdDescription description;\n\n            @Nullable\n            @Override\n            public CustomLibraryDescription createLibraryDescription() {\n                description = new JSLibraryStdDescription(model.getProject());\n                return description;\n            }\n\n            @Nullable\n            @Override\n            public JComponent createComponent() {\n                return null;\n            }\n\n            @Override\n            public boolean isOnlyLibraryAdded() {\n                return true;\n            }\n\n            @Override\n            public void addSupport(\n                    @NotNull Module module,\n                    @NotNull ModifiableRootModel rootModel,\n                    @NotNull ModifiableModelsProvider modifiableModelsProvider) {\n                FrameworksCompatibilityUtils.suggestRemoveIncompatibleFramework(\n                        rootModel,\n                        JavaRuntimeLibraryDescription.SUITABLE_LIBRARY_KINDS,\n                        JavaFrameworkType.getInstance());\n\n                FrameworksCompatibilityUtils.suggestRemoveOldJsLibrary(rootModel);\n\n                description.finishLibConfiguration(module, rootModel);\n            }\n        };\n    }","commit_id":"8ddbdab8c8851f25f28263ca33eafb920b75222f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    @Override\n    public Set<? extends LibraryKind> getSuitableLibraryKinds() {\n        return libraryKinds;\n    }","id":1599,"modified_method":"@NotNull\n    @Override\n    public Set<? extends LibraryKind> getSuitableLibraryKinds() {\n        return SUITABLE_LIBRARY_KINDS;\n    }","commit_id":"8ddbdab8c8851f25f28263ca33eafb920b75222f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Nullable\n    @Override\n    public NewLibraryConfiguration createNewLibrary(@NotNull JComponent parentComponent, @Nullable VirtualFile contextDirectory) {\n        KotlinJsModuleConfigurator configurator = (KotlinJsModuleConfigurator) getConfiguratorByName(NAME);\n        assert configurator != null : \"Cannot find configurator with name \" + NAME;\n\n        String defaultPathToJsFileDir = createRelativePath(null, contextDirectory, \"script\");\n        String defaultPathToJarFileDir = createRelativePath(null, contextDirectory, \"lib\");\n\n        boolean jsFilePresent = isJsFilePresent(defaultPathToJsFileDir);\n        boolean jarFilePresent = getFileInDir(configurator.getJarName(), defaultPathToJarFileDir).exists();\n\n        if (jarFilePresent && jsFilePresent) {\n            return createConfiguration(getFileInDir(configurator.getJarName(), defaultPathToJarFileDir));\n        }\n\n        CreateJavaScriptLibraryDialog dialog =\n                new CreateJavaScriptLibraryDialog(defaultPathToJarFileDir, defaultPathToJsFileDir, !jarFilePresent, !jsFilePresent);\n        dialog.show();\n\n        if (!dialog.isOK()) return null;\n\n        String copyJsFileIntoPath = dialog.getCopyJsIntoPath();\n        if (!jsFilePresent && copyJsFileIntoPath != null) {\n            configurator.copyFileToDir(configurator.getJsFile(), copyJsFileIntoPath);\n        }\n\n        if (jarFilePresent) {\n            return createConfiguration(getFileInDir(configurator.getJarName(), defaultPathToJarFileDir));\n        }\n        else {\n            String copyIntoPath = dialog.getCopyLibraryIntoPath();\n            File existedJarFile = configurator.getExistedJarFile();\n            if (copyIntoPath != null) {\n                return createConfiguration(configurator.copyFileToDir(existedJarFile, copyIntoPath));\n            }\n            else {\n                return createConfiguration(existedJarFile);\n            }\n        }\n    }","id":1600,"modified_method":"@Nullable\n    @Override\n    public NewLibraryConfiguration createNewLibrary(@NotNull JComponent parentComponent, @Nullable VirtualFile contextDirectory) {\n        KotlinJsModuleConfigurator jsConfigurator = (KotlinJsModuleConfigurator) getConfiguratorByName(NAME);\n        assert jsConfigurator != null : \"Cannot find configurator with name \" + NAME;\n\n        deferredCopyFileRequests = new DeferredCopyFileRequests(jsConfigurator);\n\n        String defaultPathToJsFileDir =\n                useRelativePaths ? DEFAULT_SCRIPT_DIR_NAME : createRelativePath(null, contextDirectory, DEFAULT_SCRIPT_DIR_NAME);\n        String defaultPathToJarFileDir =\n                useRelativePaths ? DEFAULT_LIB_DIR_NAME : createRelativePath(null, contextDirectory, DEFAULT_LIB_DIR_NAME);\n\n        boolean jsFilePresent = isJsFilePresent(defaultPathToJsFileDir);\n        boolean jarFilePresent = getFileInDir(jsConfigurator.getJarName(), defaultPathToJarFileDir).exists();\n\n        if (jarFilePresent && jsFilePresent) {\n            return createConfiguration(getFileInDir(jsConfigurator.getJarName(), defaultPathToJarFileDir));\n        }\n\n        CreateJavaScriptLibraryDialog dialog =\n                new CreateJavaScriptLibraryDialog(defaultPathToJarFileDir, defaultPathToJsFileDir, !jarFilePresent, !jsFilePresent);\n        dialog.show();\n\n        if (!dialog.isOK()) return null;\n\n        String copyJsFileIntoPath = dialog.getCopyJsIntoPath();\n        if (!jsFilePresent && copyJsFileIntoPath != null) {\n            deferredCopyFileRequests.addCopyRequest(jsConfigurator.getJsFile(), copyJsFileIntoPath);\n        }\n\n        if (jarFilePresent) {\n            return createConfiguration(getFileInDir(jsConfigurator.getJarName(), defaultPathToJarFileDir));\n        }\n        else {\n            String copyIntoPath = dialog.getCopyLibraryIntoPath();\n            File existedJarFile = jsConfigurator.getExistedJarFile();\n\n            if (copyIntoPath != null) {\n                deferredCopyFileRequests.addCopyWithReplaceRequest(existedJarFile, copyIntoPath);\n            }\n\n            return createConfiguration(existedJarFile);\n        }\n    }","commit_id":"8ddbdab8c8851f25f28263ca33eafb920b75222f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    @Override\n    public FrameworkSupportInModuleConfigurable createConfigurable(@NotNull FrameworkSupportModel model) {\n        return new FrameworkSupportInModuleConfigurable() {\n            @Nullable\n            @Override\n            public CustomLibraryDescription createLibraryDescription() {\n                return new JavaRuntimeLibraryDescription();\n            }\n\n            @Nullable\n            @Override\n            public JComponent createComponent() {\n                return null;\n            }\n\n            @Override\n            public boolean isOnlyLibraryAdded() {\n                return true;\n            }\n\n            @Override\n            public void addSupport(\n                    @NotNull Module module,\n                    @NotNull ModifiableRootModel rootModel,\n                    @NotNull ModifiableModelsProvider modifiableModelsProvider) {\n                FrameworksCompatibilityUtils.suggestRemoveIncompatibleFramework(\n                        rootModel,\n                        new JSLibraryStdDescription(),\n                        JSFrameworkType.getInstance());\n            }\n        };\n    }","id":1601,"modified_method":"@NotNull\n    @Override\n    public FrameworkSupportInModuleConfigurable createConfigurable(@NotNull final FrameworkSupportModel model) {\n        return new FrameworkSupportInModuleConfigurable() {\n            JavaRuntimeLibraryDescription description = null;\n\n            @Nullable\n            @Override\n            public CustomLibraryDescription createLibraryDescription() {\n                description = new JavaRuntimeLibraryDescription(model.getProject());\n                return description;\n            }\n\n            @Nullable\n            @Override\n            public JComponent createComponent() {\n                return null;\n            }\n\n            @Override\n            public boolean isOnlyLibraryAdded() {\n                return true;\n            }\n\n            @Override\n            public void addSupport(\n                    @NotNull Module module,\n                    @NotNull ModifiableRootModel rootModel,\n                    @NotNull ModifiableModelsProvider modifiableModelsProvider) {\n                FrameworksCompatibilityUtils.suggestRemoveIncompatibleFramework(\n                        rootModel,\n                        JSLibraryStdDescription.SUITABLE_LIBRARY_KINDS,\n                        JSFrameworkType.getInstance());\n\n                description.finishLibConfiguration(module, rootModel);\n            }\n        };\n    }","commit_id":"8ddbdab8c8851f25f28263ca33eafb920b75222f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    @Override\n    public Set<? extends LibraryKind> getSuitableLibraryKinds() {\n        return libraryKinds;\n    }","id":1602,"modified_method":"@NotNull\n    @Override\n    public Set<? extends LibraryKind> getSuitableLibraryKinds() {\n        return SUITABLE_LIBRARY_KINDS;\n    }","commit_id":"8ddbdab8c8851f25f28263ca33eafb920b75222f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Nullable\n    @Override\n    public NewLibraryConfiguration createNewLibrary(@NotNull JComponent parentComponent, @Nullable VirtualFile contextDirectory) {\n        KotlinJavaModuleConfigurator configurator = (KotlinJavaModuleConfigurator) ConfigureKotlinInProjectUtils\n                .getConfiguratorByName(KotlinJavaModuleConfigurator.NAME);\n        assert configurator != null : \"Configurator with name \" + KotlinJavaModuleConfigurator.NAME + \" should exists\";\n\n        String defaultPathToJarFile = FileUIUtils.createRelativePath(null, contextDirectory, \"lib\");\n\n        boolean jarFilePresent = getFileInDir(configurator.getJarName(), defaultPathToJarFile).exists();\n\n        File libraryFile;\n        File librarySrcFile;\n        if (jarFilePresent) {\n            libraryFile = getFileInDir(configurator.getJarName(), defaultPathToJarFile);\n            File sourcesJar = getFileInDir(configurator.getSourcesJarName(), defaultPathToJarFile);\n            librarySrcFile = sourcesJar.exists() ? sourcesJar\n                                                 : configurator.copyFileToDir(configurator.getExistedSourcesJarFile(), libraryFile.getParent());\n        }\n        else {\n            CreateJavaLibraryDialog dialog = new CreateJavaLibraryDialog(defaultPathToJarFile);\n            dialog.show();\n\n            if (!dialog.isOK()) return null;\n\n            String copyIntoPath = dialog.getCopyIntoPath();\n\n            File existedJarFile = configurator.getExistedJarFile();\n            libraryFile = copyIntoPath != null ? configurator.copyFileToDir(existedJarFile, copyIntoPath) : existedJarFile;\n\n            File existedSourcesJarFile = configurator.getExistedSourcesJarFile();\n            librarySrcFile = copyIntoPath != null ? configurator.copyFileToDir(existedSourcesJarFile, copyIntoPath) : existedSourcesJarFile;\n        }\n\n        final String libraryFileUrl = VfsUtil.getUrlForLibraryRoot(libraryFile);\n        final String libraryFileSrcUrl = VfsUtil.getUrlForLibraryRoot(librarySrcFile);\n\n        return new NewLibraryConfiguration(LIBRARY_NAME, getDownloadableLibraryType(), new LibraryVersionProperties()) {\n            @Override\n            public void addRoots(@NotNull LibraryEditor editor) {\n                editor.addRoot(libraryFileUrl, OrderRootType.CLASSES);\n                editor.addRoot(libraryFileSrcUrl, OrderRootType.SOURCES);\n            }\n        };\n    }","id":1603,"modified_method":"@Nullable\n    @Override\n    public NewLibraryConfiguration createNewLibrary(@NotNull JComponent parentComponent, @Nullable VirtualFile contextDirectory) {\n        KotlinJavaModuleConfigurator jvmConfigurator =\n                (KotlinJavaModuleConfigurator) ConfigureKotlinInProjectUtils.getConfiguratorByName(KotlinJavaModuleConfigurator.NAME);\n        assert jvmConfigurator != null : \"Configurator with name \" + KotlinJavaModuleConfigurator.NAME + \" should exists\";\n\n        deferredCopyFileRequests = new DeferredCopyFileRequests(jvmConfigurator);\n\n        String defaultPathToJarFile = useRelativePaths ? DEFAULT_LIB_DIR_NAME\n                                                       : FileUIUtils.createRelativePath(null, contextDirectory, DEFAULT_LIB_DIR_NAME);\n\n        File bundledLibJarFile = jvmConfigurator.getExistedJarFile();\n        File bundledLibSourcesJarFile = jvmConfigurator.getExistedSourcesJarFile();\n\n        File libraryFile;\n        File librarySrcFile;\n\n        File stdJarInDefaultPath = getFileInDir(jvmConfigurator.getJarName(), defaultPathToJarFile);\n        if (stdJarInDefaultPath.exists()) {\n            libraryFile = stdJarInDefaultPath;\n\n            File sourcesJar = getFileInDir(jvmConfigurator.getSourcesJarName(), defaultPathToJarFile);\n            if (sourcesJar.exists()) {\n                librarySrcFile = sourcesJar;\n            }\n            else {\n                deferredCopyFileRequests.addCopyWithReplaceRequest(bundledLibSourcesJarFile, libraryFile.getParent());\n                librarySrcFile = bundledLibSourcesJarFile;\n            }\n        }\n        else {\n            CreateJavaLibraryDialog dialog = new CreateJavaLibraryDialog(defaultPathToJarFile);\n            dialog.show();\n\n            if (!dialog.isOK()) return null;\n\n            String copyIntoPath = dialog.getCopyIntoPath();\n            if (copyIntoPath != null) {\n                deferredCopyFileRequests.addCopyWithReplaceRequest(bundledLibJarFile, copyIntoPath);\n                deferredCopyFileRequests.addCopyWithReplaceRequest(bundledLibSourcesJarFile, copyIntoPath);\n            }\n\n            libraryFile = bundledLibJarFile;\n            librarySrcFile = bundledLibSourcesJarFile;\n        }\n\n        final String libraryFileUrl = VfsUtil.getUrlForLibraryRoot(libraryFile);\n        final String libraryFileSrcUrl = VfsUtil.getUrlForLibraryRoot(librarySrcFile);\n\n        return new NewLibraryConfiguration(LIBRARY_NAME, null, new LibraryVersionProperties()) {\n            @Override\n            public void addRoots(@NotNull LibraryEditor editor) {\n                editor.addRoot(libraryFileUrl, OrderRootType.CLASSES);\n                editor.addRoot(libraryFileSrcUrl, OrderRootType.SOURCES);\n            }\n        };\n    }","commit_id":"8ddbdab8c8851f25f28263ca33eafb920b75222f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public void configureModule(@NotNull Module module, @NotNull ModifiableRootModel model, ContentEntry contentEntry) {\n        NewLibraryConfiguration configuration = new JSLibraryStdDescription().createNewLibraryForTests();\n\n        assert configuration != null : \"Configuration should exist\";\n\n        NewLibraryEditor editor = new NewLibraryEditor(configuration.getLibraryType(), configuration.getProperties());\n        configuration.addRoots(editor);\n\n        ConfigLibraryUtil.addLibrary(editor, model);\n    }","id":1604,"modified_method":"@Override\n    public void configureModule(@NotNull Module module, @NotNull ModifiableRootModel model, ContentEntry contentEntry) {\n        NewLibraryConfiguration configuration = new JSLibraryStdDescription(module.getProject()).createNewLibraryForTests();\n\n        assert configuration != null : \"Configuration should exist\";\n\n        NewLibraryEditor editor = new NewLibraryEditor(configuration.getLibraryType(), configuration.getProperties());\n        configuration.addRoots(editor);\n\n        ConfigLibraryUtil.addLibrary(editor, model);\n    }","commit_id":"8ddbdab8c8851f25f28263ca33eafb920b75222f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"/**\n     * Extracts and returns the list of <tt>MediaFormat<\/tt>s advertised in\n     * <tt>mediaDesc<\/tt> preserving their oder and registering dynamic payload\n     * type numbers in the specified <tt>ptRegistry<\/tt>.\n     *\n     * @param mediaDesc the <tt>MediaDescription<\/tt> that we'd like to probe\n     * for a list of <tt>MediaFormat<\/tt>s\n     * @param ptRegistry a reference to the <tt>DynamycPayloadTypeRegistry<\/tt>\n     * where we should be registering newly added payloat type number to format\n     * mappings.\n     *\n     * @return an ordered list of <tt>MediaFormat<\/tt>s as advertised in the\n     * <tt>mediaDesc<\/tt> description.\n     */\n    @SuppressWarnings(\"unchecked\")//legacy code from jain-sdp\n    public static List<MediaFormat> extractFormats(\n                                         MediaDescription mediaDesc,\n                                         DynamicPayloadTypeRegistry ptRegistry)\n    {\n        Vector<String> formatStrings = null;\n        try\n        {\n            formatStrings\n                = (Vector<String>)mediaDesc.getMedia().getMediaFormats(true);\n        }\n        catch (SdpParseException exc)\n        {\n            //this is never thrown by the implementation because it doesn't\n            //do lazy parsing ... and whose idea was it to have an exception\n            //here anyway ?!?\n            logger.trace(\"A funny thing just happened ...\", exc);\n        }\n\n\n        return null;\n    }","id":1605,"modified_method":"/**\n     * Extracts and returns the list of <tt>MediaFormat<\/tt>s advertised in\n     * <tt>mediaDesc<\/tt> preserving their oder and registering dynamic payload\n     * type numbers in the specified <tt>ptRegistry<\/tt>.\n     *\n     * @param mediaDesc the <tt>MediaDescription<\/tt> that we'd like to probe\n     * for a list of <tt>MediaFormat<\/tt>s\n     * @param ptRegistry a reference to the <tt>DynamycPayloadTypeRegistry<\/tt>\n     * where we should be registering newly added payloat type number to format\n     * mappings.\n     *\n     * @return an ordered list of <tt>MediaFormat<\/tt>s as advertised in the\n     * <tt>mediaDesc<\/tt> description.\n     */\n    @SuppressWarnings(\"unchecked\")//legacy code from jain-sdp\n    public static List<MediaFormat> extractFormats(\n                                         MediaDescription mediaDesc,\n                                         DynamicPayloadTypeRegistry ptRegistry)\n    {\n        List<MediaFormat> mediaFmts = new ArrayList();\n\n        Vector<String> formatStrings = null;\n        try\n        {\n            formatStrings\n                = (Vector<String>)mediaDesc.getMedia().getMediaFormats(true);\n        }\n        catch (SdpParseException exc)\n        {\n            //this is never thrown by the implementation because it doesn't\n            //do lazy parsing ... and whose idea was it to have an exception\n            //here anyway ?!?\n            logger.debug(\"A funny thing just happened ...\", exc);\n            return mediaFmts;\n        }\n\n        Iterator<String> fmtStringsIter = formatStrings.iterator();\n\n        while( fmtStringsIter.hasNext() )\n        {\n            String ptStr = fmtStringsIter.next();\n            byte pt = -1;\n\n            try\n            {\n                pt = Byte.parseByte(ptStr);\n            }\n            catch (NumberFormatException e)\n            {\n                //weird payload type. contact is sending rubbish. try to ignore\n                logger.debug(ptStr + \" is not a valid payload type\", e);\n                continue;\n            }\n\n            Attribute rtpmap = null;\n            try\n            {\n                rtpmap = findPayloadTypeSpecificAttribute(\n                    mediaDesc.getAttributes(false), SdpConstants.RTPMAP, pt);\n            }\n            catch (SdpException e)\n            {\n                //there was a problem parsing the rtpmap. try to ignore.\n                logger.debug(\n                   rtpmap + \" does not seem like a valid rtpmap: attribute\", e);\n            }\n\n            Attribute fmtp = null;\n            try\n            {\n                fmtp = findPayloadTypeSpecificAttribute(\n                    mediaDesc.getAttributes(false), SdpConstants.FMTP, pt);\n            }\n            catch (SdpException exc)\n            {\n                //there was a problem parsing the fmtp: try to ignore.\n                logger.debug(\n                   fmtp + \" does not seem like a valid fmtp: attribute\", exc);\n            }\n\n            MediaFormat mediaFormat = null;\n            try\n            {\n                mediaFormat = createFormat(pt, rtpmap, fmtp);\n            }\n            catch (SdpException e)\n            {\n                //this is never thrown by the implementation because it doesn't\n                //do lazy parsing ... and whose idea was it to have an exception\n                //here anyway ?!?\n                logger.debug(\"A funny thing just happened ...\");\n                continue;\n            }\n\n            mediaFmts.add(mediaFormat);\n\n        }\n\n        return mediaFmts;\n    }","commit_id":"44c220b54b5c69fe3fd7ebdcd288076ea459d683","url":"https://github.com/jitsi/jitsi"},{"original_method":"public static MediaStreamTarget extractTarget(\n                                         MediaDescription mediaDesc,\n                                         SessionDescription sessDesc)\n    {\n        return null;\n    }","id":1606,"modified_method":"/**\n     * Returns a <tt>MediaStreamTarget<\/tt> instance reflecting the target\n     * @param mediaDesc\n     * @param sessDesc\n     * @return\n     */\n    public static MediaStreamTarget extractTarget(\n                                         MediaDescription mediaDesc,\n                                         SessionDescription sessDesc)\n    {\n        return null;\n    }","commit_id":"44c220b54b5c69fe3fd7ebdcd288076ea459d683","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Tries to find an attribute with the specified <tt>attibuteName<\/tt>\n     * pertaining to the specified  <tt>payloadType<\/tt> in the\n     * <tt>mediaAttributes<\/tt> list  and returns it if it exists.\n     *\n     * @param mediaAttributes the list of <tt>Attribute<\/tt> fields where we\n     * are to look for the attribute.\n     * @param payloadType the payloadType that we are trying to find.\n     * @param attributeName the name of the attribute we are looking for.\n     *\n     * @return the first Attribute whose name matches <tt>attributeName<\/tt>\n     * and whose value pertains to <tt>payloadType<\/tt> or <tt>null<\/tt> if no\n     * such attribute was found.\n     *\n     * @throws SdpException when ... well never really, it's there just for ...\n     * fun?\n     */\n    private static Attribute findRtpmapForPayloadType(\n                                    Vector<Attribute> mediaAttributes,\n                                    String            attributeName,\n                                    byte              payloadType)\n        throws SdpException\n    {\n        if( mediaAttributes == null || mediaAttributes.size() == 0)\n            return null;\n\n        Iterator<Attribute> attIter = mediaAttributes.iterator();\n        String ptStr = Byte.toString(payloadType);\n\n        while(attIter.hasNext())\n        {\n            Attribute attr = attIter.next();\n\n            if(!attributeName.equals(attr.getName()))\n                continue;\n\n            String attrValue = attr.getValue();\n\n            if(attrValue == null)\n                continue;\n\n            attrValue = attrValue.trim();\n\n            if(!attrValue.startsWith(ptStr + \" \"))\n                continue;\n\n            //that's it! we have the attribute we are looking for.\n            return attr;\n        }\n\n        return null;\n    }","id":1607,"modified_method":"/**\n     * Tries to find an attribute with the specified <tt>attibuteName<\/tt>\n     * pertaining to the specified  <tt>payloadType<\/tt> in the\n     * <tt>mediaAttributes<\/tt> list  and returns it if it exists.\n     *\n     * @param mediaAttributes the list of <tt>Attribute<\/tt> fields where we\n     * are to look for the attribute.\n     * @param payloadType the payloadType that we are trying to find.\n     * @param attributeName the name of the attribute we are looking for.\n     *\n     * @return the first Attribute whose name matches <tt>attributeName<\/tt>\n     * and whose value pertains to <tt>payloadType<\/tt> or <tt>null<\/tt> if no\n     * such attribute was found.\n     *\n     * @throws SdpException when ... well never really, it's there just for ...\n     * fun?\n     */\n    private static Attribute findPayloadTypeSpecificAttribute(\n                                    Vector<Attribute> mediaAttributes,\n                                    String            attributeName,\n                                    byte              payloadType)\n        throws SdpException\n    {\n        if( mediaAttributes == null || mediaAttributes.size() == 0)\n            return null;\n\n        Iterator<Attribute> attIter = mediaAttributes.iterator();\n        String ptStr = Byte.toString(payloadType);\n\n        while(attIter.hasNext())\n        {\n            Attribute attr = attIter.next();\n\n            if(!attributeName.equals(attr.getName()))\n                continue;\n\n            String attrValue = attr.getValue();\n\n            if(attrValue == null)\n                continue;\n\n            attrValue = attrValue.trim();\n\n            if(!attrValue.startsWith(ptStr + \" \"))\n                continue;\n\n            //that's it! we have the attribute we are looking for.\n            return attr;\n        }\n\n        return null;\n    }","commit_id":"44c220b54b5c69fe3fd7ebdcd288076ea459d683","url":"https://github.com/jitsi/jitsi"},{"original_method":"private static MediaFormat createFormat(String    payloadType,\n                                            Attribute rtpmap,\n                                            Attribute fmtp)\n        throws SdpException\n    {\n        String rtpmapValue = rtpmap.getValue();\n\n        //rtpmapValue looks sth like this: \"98 H264/90000\" or \"97 speex/16000/2\"\n        //we need to extract the encoding name, the clock rate and the number\n        //of channels if any\n\n        //first strip the payload type\n        StringTokenizer tokenizer\n            = new StringTokenizer(rtpmapValue, \" /\", false);\n\n        //skip payload type number (mandatory)\n        if(! tokenizer.hasMoreTokens())\n            return null;\n        tokenizer.nextToken();\n\n        //encoding name (mandatory)\n        if(! tokenizer.hasMoreTokens())\n            return null;\n        String encoding = tokenizer.nextToken();\n\n        //clock rate (mandatory)\n        if(! tokenizer.hasMoreTokens())\n            return null;\n        int clockRate = Integer.parseInt(tokenizer.nextToken());\n\n        //number of channels (optional)\n        int nChans = 1;\n        if(tokenizer.hasMoreTokens())\n        {\n            String nChansStr = tokenizer.nextToken();\n\n            try\n            {\n                nChans = Integer.parseInt(nChansStr);\n            }\n            catch(NumberFormatException exc)\n            {\n                logger.debug(nChansStr + \" is not a valid number of channels.\");\n            }\n        }\n\n        //Format parameters\n        Map<String, String> fmtParamsMap = parseFmtpAttribute(fmtp);\n\n        SipActivator.getMediaService().getMediaFactory().createAudioMediaFormat(\n                        encoding, clockRate, nChans);\n\n\n        return null;\n    }","id":1608,"modified_method":"/**\n     * Creates and returns <tt>MediaFormat<\/tt> instance corresponding to the\n     * specified <tt>payloadType<\/tt> and the parameters in the <tt>rtpmap<\/tt>\n     * and <tt>fmtp<\/tt> <tt>Attribute<\/tt>s. The method would only return\n     * <tt>MediaFormat<\/tt> instances for formats known to our media service\n     * implementation and returns <tt>null<\/tt> otherwise.\n     *\n     * @param payloadType a static or dynamic payload type number that\n     * determines the encoding of the format we'd like to create.\n     * @param rtpmap an SDP <tt>Attribute<\/tt> mapping the <tt>payloadType<\/tt>\n     * to an encoding name.\n     * @param fmtp a list of format specific parameters\n     *\n     * @return a <tt>MediaForamt<\/tt> instance corresponding to the specified\n     * <tt>payloadType<\/tt> and <tt>rtpmap<\/tt>, and <tt>fmtp<\/tt> attributes\n     * or <tt>null<\/tt> if such a format is not currently supported by our\n     * media service implementation.\n     *\n     * @throws SdpException never, the exception is only there because the\n     * jain-sdp API declares exceptions in case of impls using lazy parsing but\n     * the one in the jain-sip-ri isn't doing it.\n     */\n    private static MediaFormat createFormat(byte      payloadType,\n                                            Attribute rtpmap,\n                                            Attribute fmtp)\n        throws SdpException\n    {\n        //default values in case rtpmap is null.\n        String encoding = null;\n        int clockRate = -1;\n        int numChannels = 1;\n\n        if (rtpmap != null)\n        {\n            String rtpmapValue = rtpmap.getValue();\n\n            //rtpmapValue looks sth like this: \"98 H264/90000\" or\n            //\"97 speex/16000/2\" we need to extract the encoding name, the clock\n            // rate and the number of channels if any\n            // if at any point we determine there's something wrong with the\n            // rtpmap we bail out and try to create a format based on the\n            // payloadType only.\n\n            //first strip the payload type\n            StringTokenizer tokenizer\n                = new StringTokenizer(rtpmapValue, \" /\", false);\n\n            //skip payload type number (mandatory)\n            if(tokenizer.hasMoreTokens())\n            {\n                tokenizer.nextToken();\n            }\n\n            //encoding name (mandatory)\n            if(tokenizer.hasMoreTokens())\n            {\n                encoding = tokenizer.nextToken();\n            }\n\n            //clock rate (mandatory)\n            if(tokenizer.hasMoreTokens())\n            {\n                clockRate = Integer.parseInt(tokenizer.nextToken());\n            }\n\n            //number of channels (optional)\n            if(tokenizer.hasMoreTokens())\n            {\n                String nChansStr = tokenizer.nextToken();\n\n                try\n                {\n                    numChannels = Integer.parseInt(nChansStr);\n                }\n                catch(NumberFormatException exc)\n                {\n                    logger.debug(nChansStr\n                                    + \" is not a valid number of channels.\");\n                }\n            }\n        }\n\n        //Format parameters\n        Map<String, String> fmtParamsMap = parseFmtpAttribute(fmtp);\n\n        //now create the format.\n        MediaFormat format = SipActivator.getMediaService().getFormatFactory()\n            .createMediaFormat(payloadType, encoding, clockRate,\n                               numChannels, fmtParamsMap);\n\n        return format;\n    }","commit_id":"44c220b54b5c69fe3fd7ebdcd288076ea459d683","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Parses the value of the <tt>fmtpAttr<\/tt> attribute into a format\n     * parameters <tt>Map<\/tt> and returns it.\n     *\n     * @param fmtpAttr the SDP attribute containing the format params that we'd\n     * like to parse.\n     *\n     * @return a (possibly empty) <tt>Map<\/tt> containing the format parameters\n     * resulting from parsing <tt>fmtpAttr<\/tt>'s value.\n     */\n    private static Map<String, String> parseFmtpAttribute(Attribute fmtpAttr)\n        throws SdpException\n    {\n        Map<String, String> fmtParamsMap = new Hashtable<String, String>();\n        String fmtpValue = fmtpAttr.getValue();\n\n        StringTokenizer tokenizer\n            = new StringTokenizer(fmtpValue, \" ;\", false);\n\n        //skip payload type number (mandatory)\n        if(! tokenizer.hasMoreTokens())\n            return null;\n\n        while (tokenizer.hasMoreTokens())\n        {\n            //every token looks sth like \"name=value\". nb: value may contain\n            //other equation signs\n            String token = tokenizer.nextToken();\n            int indexOfEq = token.indexOf(\"=\");\n\n            if (indexOfEq == -1 || indexOfEq == token.length() -1)\n                continue; // there's something wrong with this param - move on.\n\n            String paramName = token.substring(0, indexOfEq );\n            String paramValue = token.substring(indexOfEq + 1, token.length());\n\n\n            fmtParamsMap.put(paramName, paramValue);\n        }\n\n        return fmtParamsMap;\n    }","id":1609,"modified_method":"/**\n     * Parses the value of the <tt>fmtpAttr<\/tt> attribute into a format\n     * parameters <tt>Map<\/tt> and returns it.\n     *\n     * @param fmtpAttr the SDP attribute containing the format params that we'd\n     * like to parse.\n     *\n     * @return a (possibly empty) <tt>Map<\/tt> containing the format parameters\n     * resulting from parsing <tt>fmtpAttr<\/tt>'s value.\n     *\n     * @throws SdpException never, the exception is only there because the\n     * jain-sdp API declares exceptions in case of impls using lazy parsing but\n     * the one in the jain-sip-ri isn't doing it.\n     */\n    private static Map<String, String> parseFmtpAttribute(Attribute fmtpAttr)\n        throws SdpException\n    {\n        /* a few examples of what format params may look like:\n         *\n         * //ilbc\n         * a=fmtp:97 mode=20\n         *\n         * //H264\n         * a=fmtp:98 profile-level-id=42A01E;\n         *       sprop-parameter-sets=Z0IACpZTBYmI,aMljiA==\n         *\n         * a=fmtp:100 profile-level-id=42A01E; packetization-mode=2;\n         *       sprop-parameter-sets=Z0IACpZTBYmI,aMljiA==;\n         *       sprop-interleaving-depth=45; sprop-deint-buf-req=64000;\n         *       sprop-init-buf-time=102478; deint-buf-cap=128000\n         *\n         * //speex\n         * a=fmtp:97 mode=\"1,any\";vbr=on\n         *\n         * //yes ... it's funny how sometimes there are spaces after the colons\n         * //and sometimes not\n         */\n\n        Map<String, String> fmtParamsMap = new Hashtable<String, String>();\n        String fmtpValue = fmtpAttr.getValue();\n\n        StringTokenizer tokenizer\n            = new StringTokenizer(fmtpValue, \" ;\", false);\n\n        //skip payload type number (mandatory)\n        if(! tokenizer.hasMoreTokens())\n            return null;\n\n        while (tokenizer.hasMoreTokens())\n        {\n            //every token looks sth like \"name=value\". nb: value may contain\n            //other \"=\" signs so only tokenize by semicolons and use the 1st one\n            String token = tokenizer.nextToken();\n            int indexOfEq = token.indexOf(\"=\");\n\n            if (indexOfEq == -1 || indexOfEq == token.length() -1)\n                continue; // there's something wrong with this param - move on.\n\n            String paramName = token.substring(0, indexOfEq );\n            String paramValue = token.substring(indexOfEq + 1, token.length());\n\n\n            fmtParamsMap.put(paramName, paramValue);\n        }\n\n        return fmtParamsMap;\n    }","commit_id":"44c220b54b5c69fe3fd7ebdcd288076ea459d683","url":"https://github.com/jitsi/jitsi"},{"original_method":"private void runGoals()\n        throws MojoExecutionException\n    {\n        // TODO: we need to get a reference to the maven component and use that so this\n        // will work purely in an embedded mode. Not sure how to pass the release setting to the plugin in that\n        // instance though - still via -D, or is there a better way?\n\n        Commandline cl = new Commandline();\n\n        cl.setExecutable( \"m2\" );\n\n        cl.setWorkingDirectory( workingDirectory );\n\n        cl.createArgument().setLine( goals );\n\n        cl.createArgument().setLine( \"-DperformRelease=true\" );\n\n        cl.createArgument().setLine( \"--no-plugin-updates\" );\n\n        cl.createArgument().setLine( \"--batch-mode\" );\n\n        StreamConsumer consumer = new DefaultConsumer();\n\n        try\n        {\n            CommandLineUtils.executeCommandLine( cl, consumer, consumer );\n        }\n        catch ( CommandLineException e )\n        {\n            throw new MojoExecutionException( \"Can't run goal \" + goals, e );\n        }\n    }","id":1610,"modified_method":"private void runGoals()\n        throws MojoExecutionException\n    {\n        // TODO: we need to get a reference to the maven component and use that so this\n        // will work purely in an embedded mode. Not sure how to pass the release setting to the plugin in that\n        // instance though - still via -D, or is there a better way?\n\n        Commandline cl = new Commandline();\n\n        cl.setExecutable( \"m2\" );\n\n        cl.setWorkingDirectory( workingDirectory );\n\n        cl.createArgument().setLine( goals );\n\n        cl.createArgument().setLine( \"-DperformRelease=true\" );\n\n        cl.createArgument().setLine( \"--no-plugin-updates\" );\n\n        cl.createArgument().setLine( \"--batch-mode\" );\n        \n        StreamConsumer consumer = new DefaultConsumer();\n\n        try\n        {\n            int result = CommandLineUtils.executeCommandLine( cl, consumer, consumer );\n            \n            if ( result != 0 )\n            {\n                throw new MojoExecutionException(\"Result of m2 execution is: \\'\" + result + \"\\'. Release failed.\" );\n            }\n        }\n        catch ( CommandLineException e )\n        {\n            throw new MojoExecutionException( \"Can't run goal \" + goals, e );\n        }\n    }","commit_id":"e7b8e16dfab722e407a88e9123023eb41679615d","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\r\n     * Return path of javadoc tool.\r\n     * \r\n     * @return path of javadoc tool\r\n     */\r\n    private String getJavadocPath()\r\n    {\r\n        String osName = System.getProperty( \"os.name\" );\r\n        String jdkPath;\r\n        if ( osName.startsWith( \"Windows\" ) )\r\n        {\r\n            jdkPath = \"%JAVA_HOME%\";\r\n        }\r\n        else\r\n        {\r\n            jdkPath = \"$JAVA_HOME\";\r\n        }\r\n\r\n        String fileSeparator = System.getProperty( \"file.separator\" );\r\n        return jdkPath + fileSeparator + \"bin\" + fileSeparator + \"javadoc\";\r\n    }","id":1611,"modified_method":"/**\r\n     * Return path of javadoc tool.\r\n     * \r\n     * @return path of javadoc tool\r\n     */\r\n    private String getJavadocPath()\r\n    {\r\n        // TODO: this could probably be improved/configured\r\n        // TODO: doesn't work with spaces in java.home\r\n        String fileSeparator = System.getProperty( \"file.separator\" );\r\n        File f = new File( System.getProperty( \"java.home\" ), \"bin/javadoc\" );\r\n        return f.getAbsolutePath();\r\n    }","commit_id":"84bde74bf49d0cf4334d5347b0f1564797366aae","url":"https://github.com/apache/maven"},{"original_method":"/**\r\n     * @see org.apache.maven.reporting.AbstractMavenReport#execute()\r\n     */\r\n    protected void execute()\r\n        throws MavenReportException\r\n    {\r\n        try\r\n        {\r\n            File outputDir = new File( getConfiguration().getReportOutputDirectory().getAbsolutePath() + \"/apidocs\" );\r\n            outputDir.mkdirs();\r\n\r\n            int actualYear = Calendar.getInstance().get( Calendar.YEAR );\r\n            String year;\r\n            if ( getConfiguration().getModel().getInceptionYear() != null\r\n                 && Integer.valueOf( getConfiguration().getModel().getInceptionYear() ).intValue() == actualYear )\r\n            {\r\n                year = getConfiguration().getModel().getInceptionYear();\r\n            }\r\n            else\r\n            {\r\n                year = getConfiguration().getModel().getInceptionYear() + \"-\" + String.valueOf( actualYear );\r\n            }\r\n\r\n            StringBuffer classpath = new StringBuffer();\r\n            for ( Iterator i = getConfiguration().getProject().getCompileClasspathElements().iterator(); i.hasNext(); )\r\n            {\r\n                classpath.append( (String) i.next() );\r\n                if ( i.hasNext() )\r\n                {\r\n                    classpath.append( \";\" );\r\n                }\r\n            }\r\n\r\n            StringBuffer sourcePath = new StringBuffer();\r\n            String[] fileList = new String[1];\r\n            for ( Iterator i = getConfiguration().getCompileSourceRoots().iterator(); i.hasNext(); )\r\n            {\r\n                String sourceDirectory = (String) i.next();\r\n                fileList = FileUtils.getFilesFromExtension( sourceDirectory, new String[] { \"java\" } );\r\n                sourcePath.append( sourceDirectory );\r\n            }\r\n\r\n            File javadocDirectory = new File( getConfiguration().getProject().getBuild().getDirectory() + \"/javadoc\" );\r\n            if ( fileList != null && fileList.length != 0 )\r\n            {\r\n                StringBuffer files = new StringBuffer();\r\n                for ( int i = 0; i < fileList.length; i++ )\r\n                {\r\n                    files.append( fileList[i] );\r\n                    files.append( \"\\n\" );\r\n                }\r\n                javadocDirectory.mkdirs();\r\n                FileUtils.fileWrite( new File( javadocDirectory, \"files\" ).getAbsolutePath(), files.toString() );\r\n            }\r\n            else\r\n            {\r\n                return;\r\n            }\r\n\r\n            Commandline cl = new Commandline();\r\n            cl.setWorkingDirectory( javadocDirectory.getAbsolutePath() );\r\n            cl.setExecutable( getJavadocPath() );\r\n            cl.createArgument().setValue( \"-use\" );\r\n            cl.createArgument().setValue( \"-version\" );\r\n            cl.createArgument().setValue( \"-author\" );\r\n            cl.createArgument().setValue( \"-windowtitle\" );\r\n            cl.createArgument().setValue(\r\n                                          getConfiguration().getModel().getName() + \" \"\r\n                                              + getConfiguration().getModel().getVersion() );\r\n            cl.createArgument().setValue( \"-bottom\" );\r\n            cl.createArgument().setValue( \"Copyright &copy; \" + year + \" \"\r\n                                          + getConfiguration().getModel().getOrganization().getName()\r\n                                          + \". All Rights Reserved.\" );\r\n            cl.createArgument().setValue( \"-sourcePath\" );\r\n            cl.createArgument().setValue( sourcePath.toString() );\r\n            cl.createArgument().setValue( \"-d\" );\r\n            cl.createArgument().setValue( outputDir.getAbsolutePath() );\r\n            cl.createArgument().setValue( \"-classpath\" );\r\n            cl.createArgument().setValue( classpath.toString() );\r\n            cl.createArgument().setValue( \"@files\" );\r\n            System.out.println( Commandline.toString( cl.getCommandline() ) );\r\n            System.out.println( cl.getWorkingDirectory() );\r\n            CommandLineUtils.executeCommandLine( cl, new DefaultConsumer(), new DefaultConsumer() );\r\n        }\r\n        catch ( Exception e )\r\n        {\r\n            throw new MavenReportException( \"An error is occurred in javadoc report generation.\", e );\r\n        }\r\n    }","id":1612,"modified_method":"/**\r\n     * @see org.apache.maven.reporting.AbstractMavenReport#execute()\r\n     */\r\n    protected void execute()\r\n        throws MavenReportException\r\n    {\r\n        try\r\n        {\r\n            File outputDir = new File( getConfiguration().getReportOutputDirectory().getAbsolutePath() + \"/apidocs\" );\r\n            outputDir.mkdirs();\r\n\r\n            int actualYear = Calendar.getInstance().get( Calendar.YEAR );\r\n            String year;\r\n            if ( getConfiguration().getModel().getInceptionYear() != null\r\n                 && Integer.valueOf( getConfiguration().getModel().getInceptionYear() ).intValue() == actualYear )\r\n            {\r\n                year = getConfiguration().getModel().getInceptionYear();\r\n            }\r\n            else\r\n            {\r\n                year = getConfiguration().getModel().getInceptionYear() + \"-\" + String.valueOf( actualYear );\r\n            }\r\n\r\n            StringBuffer classpath = new StringBuffer();\r\n            for ( Iterator i = getConfiguration().getProject().getCompileClasspathElements().iterator(); i.hasNext(); )\r\n            {\r\n                classpath.append( (String) i.next() );\r\n                if ( i.hasNext() )\r\n                {\r\n                    classpath.append( \";\" );\r\n                }\r\n            }\r\n\r\n            StringBuffer sourcePath = new StringBuffer();\r\n            String[] fileList = new String[1];\r\n            for ( Iterator i = getConfiguration().getCompileSourceRoots().iterator(); i.hasNext(); )\r\n            {\r\n                String sourceDirectory = (String) i.next();\r\n                fileList = FileUtils.getFilesFromExtension( sourceDirectory, new String[] { \"java\" } );\r\n                sourcePath.append( sourceDirectory );\r\n            }\r\n\r\n            File javadocDirectory = new File( getConfiguration().getProject().getBuild().getDirectory() + \"/javadoc\" );\r\n            if ( fileList != null && fileList.length != 0 )\r\n            {\r\n                StringBuffer files = new StringBuffer();\r\n                for ( int i = 0; i < fileList.length; i++ )\r\n                {\r\n                    files.append( fileList[i] );\r\n                    files.append( \"\\n\" );\r\n                }\r\n                javadocDirectory.mkdirs();\r\n                FileUtils.fileWrite( new File( javadocDirectory, \"files\" ).getAbsolutePath(), files.toString() );\r\n            }\r\n            else\r\n            {\r\n                return;\r\n            }\r\n\r\n            Commandline cl = new Commandline();\r\n            cl.setWorkingDirectory( javadocDirectory.getAbsolutePath() );\r\n            cl.setExecutable( getJavadocPath() );\r\n            cl.createArgument().setValue( \"-use\" );\r\n            cl.createArgument().setValue( \"-version\" );\r\n            cl.createArgument().setValue( \"-author\" );\r\n            cl.createArgument().setValue( \"-windowtitle\" );\r\n            cl.createArgument().setValue(\r\n                                          getConfiguration().getModel().getName() + \" \"\r\n                                              + getConfiguration().getModel().getVersion() );\r\n            cl.createArgument().setValue( \"-bottom\" );\r\n            cl.createArgument().setValue( \"Copyright &copy; \" + year + \" \"\r\n                                          + getConfiguration().getModel().getOrganization().getName()\r\n                                          + \". All Rights Reserved.\" );\r\n            cl.createArgument().setValue( \"-sourcePath\" );\r\n            cl.createArgument().setValue( sourcePath.toString() );\r\n            cl.createArgument().setValue( \"-d\" );\r\n            cl.createArgument().setValue( outputDir.getAbsolutePath() );\r\n            cl.createArgument().setValue( \"-classpath\" );\r\n            cl.createArgument().setValue( classpath.toString() );\r\n            cl.createArgument().setValue( \"@files\" );\r\n            System.out.println( getJavadocPath() );\r\n            System.out.println( Commandline.toString( cl.getCommandline() ) );\r\n            System.out.println( cl.getWorkingDirectory() );\r\n            int exitCode = CommandLineUtils.executeCommandLine( cl, new DefaultConsumer(), new DefaultConsumer() );\r\n            if ( exitCode != 0 )\r\n            {\r\n                throw new MavenReportException( \"exit code: \" + exitCode );\r\n            }\r\n        }\r\n        catch ( Exception e )\r\n        {\r\n            throw new MavenReportException( \"An error is occurred in javadoc report generation.\", e );\r\n        }\r\n    }","commit_id":"84bde74bf49d0cf4334d5347b0f1564797366aae","url":"https://github.com/apache/maven"},{"original_method":"private void injectBuild( Profile profile, Model model )\n    {\n        BuildBase profileBuild = profile.getBuild();\n        Build modelBuild = model.getBuild();\n        \n        // if the parent build is null, obviously we cannot inherit from it...\n        if ( profileBuild != null )\n        {\n            if ( modelBuild == null )\n            {\n                modelBuild = new Build();\n                model.setBuild( modelBuild );\n            }\n            \n            if ( profileBuild.getDirectory() != null )\n            {\n                modelBuild.setDirectory( profileBuild.getDirectory() );\n            }\n\n            if ( profileBuild.getDefaultGoal() != null )\n            {\n                modelBuild.setDefaultGoal( profileBuild.getDefaultGoal() );\n            }\n\n            if ( profileBuild.getFinalName() != null )\n            {\n                modelBuild.setFinalName( profileBuild.getFinalName() );\n            }\n\n            List profileResources = profileBuild.getResources();\n            \n            if ( profileResources != null )\n            {\n                modelBuild.setResources( profileResources );\n            }\n\n            List profileTestResources = profileBuild.getTestResources();\n            \n            if ( profileTestResources != null )\n            {\n                modelBuild.setTestResources( profileTestResources );\n            }\n            \n            injectPlugins( profileBuild, modelBuild );\n\n            // Plugin management :: aggregate\n            PluginManagement profilePM = profileBuild.getPluginManagement();\n            PluginManagement modelPM = modelBuild.getPluginManagement();\n\n            if ( modelPM == null )\n            {\n                modelBuild.setPluginManagement( profilePM );\n            }\n            else\n            {\n                injectPlugins( profilePM, modelPM );\n            }\n        }\n    }","id":1613,"modified_method":"private void injectBuild( Profile profile, Model model )\n    {\n        BuildBase profileBuild = profile.getBuild();\n        Build modelBuild = model.getBuild();\n        \n        // if the parent build is null, obviously we cannot inherit from it...\n        if ( profileBuild != null )\n        {\n            if ( modelBuild == null )\n            {\n                modelBuild = new Build();\n                model.setBuild( modelBuild );\n            }\n            \n            if ( profileBuild.getDirectory() != null )\n            {\n                modelBuild.setDirectory( profileBuild.getDirectory() );\n            }\n\n            if ( profileBuild.getDefaultGoal() != null )\n            {\n                modelBuild.setDefaultGoal( profileBuild.getDefaultGoal() );\n            }\n\n            if ( profileBuild.getFinalName() != null )\n            {\n                modelBuild.setFinalName( profileBuild.getFinalName() );\n            }\n\n            List profileResources = profileBuild.getResources();\n            \n            if ( profileResources != null && !profileResources.isEmpty() )\n            {\n                modelBuild.setResources( profileResources );\n            }\n\n            List profileTestResources = profileBuild.getTestResources();\n            \n            if ( profileTestResources != null )\n            {\n                modelBuild.setTestResources( profileTestResources );\n            }\n            \n            injectPlugins( profileBuild, modelBuild );\n\n            // Plugin management :: aggregate\n            PluginManagement profilePM = profileBuild.getPluginManagement();\n            PluginManagement modelPM = modelBuild.getPluginManagement();\n\n            if ( modelPM == null )\n            {\n                modelBuild.setPluginManagement( profilePM );\n            }\n            else\n            {\n                injectPlugins( profilePM, modelPM );\n            }\n        }\n    }","commit_id":"66dddfc944763a6455f5e9b77c168a3148870a70","url":"https://github.com/apache/maven"},{"original_method":"private void runGoals()\n        throws MojoExecutionException\n    {\n        // TODO: we need to get a reference to the maven component and use that so this\n        // will work purely in an embedded mode. Not sure how to pass the release setting to the plugin in that\n        // instance though - still via -D, or is there a better way?\n\n        Commandline cl = new Commandline();\n\n        cl.setExecutable( \"m2\" );\n\n        cl.setWorkingDirectory( workingDirectory );\n\n        cl.createArgument().setLine( goals );\n\n        cl.createArgument().setLine( \"-DperformRelease=true\" );\n\n        cl.createArgument().setLine( \"--no-plugin-updates\" );\n\n        cl.createArgument().setLine( \"--batch-mode\" );\n\n        StreamConsumer consumer = new DefaultConsumer();\n\n        try\n        {\n            CommandLineUtils.executeCommandLine( cl, consumer, consumer );\n        }\n        catch ( CommandLineException e )\n        {\n            throw new MojoExecutionException( \"Can't run goal \" + goals, e );\n        }\n    }","id":1614,"modified_method":"private void runGoals()\n        throws MojoExecutionException\n    {\n        // TODO: we need to get a reference to the maven component and use that so this\n        // will work purely in an embedded mode. Not sure how to pass the release setting to the plugin in that\n        // instance though - still via -D, or is there a better way?\n\n        Commandline cl = new Commandline();\n\n        cl.setExecutable( \"m2\" );\n\n        cl.setWorkingDirectory( workingDirectory );\n\n        cl.createArgument().setLine( goals );\n\n        cl.createArgument().setLine( \"-DperformRelease=true\" );\n\n        cl.createArgument().setLine( \"--no-plugin-updates\" );\n\n        cl.createArgument().setLine( \"--batch-mode\" );\n        \n        StreamConsumer consumer = new DefaultConsumer();\n\n        try\n        {\n            int result = CommandLineUtils.executeCommandLine( cl, consumer, consumer );\n            \n            if ( result != 0 )\n            {\n                throw new MojoExecutionException(\"Result of m2 execution is: \\'\" + result + \"\\'. Release failed.\" );\n            }\n        }\n        catch ( CommandLineException e )\n        {\n            throw new MojoExecutionException( \"Can't run goal \" + goals, e );\n        }\n    }","commit_id":"66dddfc944763a6455f5e9b77c168a3148870a70","url":"https://github.com/apache/maven"},{"original_method":"public void addSources(String[] paths) {\n        for (int i = 0; i < paths.length; i++) {\n            File file = new File(paths[i]);\n            if (file.getName().endsWith(\".java\"))\n                addJavaSource(file);\n            else\n                addSource(file);\n        }\n    }","id":1615,"modified_method":"public void addSources(String[] paths) {\n        for (String path : paths) {\n            File file = new File(path);\n            if (file.getName().endsWith(\".java\"))\n                addJavaSource(file);\n            else\n                addSource(file);\n        }\n    }","commit_id":"62b7a9d2175ca22702db5b8ed02918451d14106a","url":"https://github.com/apache/groovy"},{"original_method":"public void gotoPhase(int phase) throws CompilationFailedException {\n        super.gotoPhase(phase);\n        // compile Java and clean up\n        if (phase==Phases.SEMANTIC_ANALYSIS && javaSources.size()>0) {\n            Iterator modules = getAST().getModules().iterator();\n            while (modules.hasNext()) {\n                ModuleNode module = (ModuleNode) modules.next();\n                module.setImportsResolved(false);\n            }\n            try {\n                JavaCompiler compiler = compilerFactory.createCompiler(getConfiguration());\n                compiler.compile(javaSources, this);\n            } finally {\n                if (!keepStubs) stubGenerator.clean(); \n                javaSources.clear();\n            }\n        }\n    }","id":1616,"modified_method":"public void gotoPhase(int phase) throws CompilationFailedException {\n        super.gotoPhase(phase);\n        // compile Java and clean up\n        if (phase == Phases.SEMANTIC_ANALYSIS && javaSources.size() > 0) {\n            for (ModuleNode module : getAST().getModules()) {\n                module.setImportsResolved(false);\n            }\n            try {\n                JavaCompiler compiler = compilerFactory.createCompiler(getConfiguration());\n                compiler.compile(javaSources, this);\n            } finally {\n                if (!keepStubs) stubGenerator.clean(); \n                javaSources.clear();\n            }\n        }\n    }","commit_id":"62b7a9d2175ca22702db5b8ed02918451d14106a","url":"https://github.com/apache/groovy"},{"original_method":"private void addJavaSource(File file) {\n        String path = file.getAbsolutePath();\n        for (Iterator iter = javaSources.iterator(); iter.hasNext();) {\n            String su = (String) iter.next();\n            if (path.equals(su))\n                return;\n        }\n        javaSources.add(path);\n    }","id":1617,"modified_method":"private void addJavaSource(File file) {\n        String path = file.getAbsolutePath();\n        for (String source : javaSources) {\n            if (path.equals(source))\n                return;\n        }\n        javaSources.add(path);\n    }","commit_id":"62b7a9d2175ca22702db5b8ed02918451d14106a","url":"https://github.com/apache/groovy"},{"original_method":"public void addSources(File[] files) {\n        for (int i = 0; i < files.length; i++) {\n            if (files[i].getName().endsWith(\".java\"))\n                addJavaSource(files[i]);\n            else\n                addSource(files[i]);\n        }\n    }","id":1618,"modified_method":"public void addSources(File[] files) {\n        for (File file : files) {\n            if (file.getName().endsWith(\".java\"))\n                addJavaSource(file);\n            else\n                addSource(file);\n        }\n    }","commit_id":"62b7a9d2175ca22702db5b8ed02918451d14106a","url":"https://github.com/apache/groovy"},{"original_method":"public JavaAwareCompilationUnit(CompilerConfiguration configuration, GroovyClassLoader groovyClassLoader) {\n        super(configuration,null,groovyClassLoader);\n        javaSources = new LinkedList();\n        Map options = configuration.getJointCompilationOptions();\n        generationGoal = (File) options.get(\"stubDir\");\n        boolean useJava5 = configuration.getTargetBytecode().equals(CompilerConfiguration.POST_JDK5);\n        stubGenerator = new JavaStubGenerator(generationGoal,false,useJava5);\n        keepStubs = Boolean.TRUE.equals(options.get(\"keepStubs\"));\n        \n        addPhaseOperation(new PrimaryClassNodeOperation() {\n            public void call(SourceUnit source, GeneratorContext context, ClassNode node) throws CompilationFailedException {\n                if (javaSources.size() != 0) new JavaAwareResolveVisitor(JavaAwareCompilationUnit.this).startResolving(node,source);\n            }\n        },Phases.CONVERSION);\n\n        addPhaseOperation(new PrimaryClassNodeOperation() {\n            public void call(SourceUnit source, GeneratorContext context, ClassNode classNode) throws CompilationFailedException {\n                try {\n                    if (javaSources.size() != 0) stubGenerator.generateClass(classNode);\n                } catch (FileNotFoundException fnfe) {\n                    source.addException(fnfe);\n                }\n            }\n        },Phases.CONVERSION);\n    }","id":1619,"modified_method":"public JavaAwareCompilationUnit(CompilerConfiguration configuration, GroovyClassLoader groovyClassLoader) {\n        super(configuration,null,groovyClassLoader);\n        javaSources = new LinkedList<String>();\n        Map options = configuration.getJointCompilationOptions();\n        generationGoal = (File) options.get(\"stubDir\");\n        boolean useJava5 = configuration.getTargetBytecode().equals(CompilerConfiguration.POST_JDK5);\n        stubGenerator = new JavaStubGenerator(generationGoal,false,useJava5);\n        keepStubs = Boolean.TRUE.equals(options.get(\"keepStubs\"));\n        \n        addPhaseOperation(new PrimaryClassNodeOperation() {\n            public void call(SourceUnit source, GeneratorContext context, ClassNode node) throws CompilationFailedException {\n                if (javaSources.size() != 0) new JavaAwareResolveVisitor(JavaAwareCompilationUnit.this).startResolving(node,source);\n            }\n        },Phases.CONVERSION);\n\n        addPhaseOperation(new PrimaryClassNodeOperation() {\n            public void call(SourceUnit source, GeneratorContext context, ClassNode classNode) throws CompilationFailedException {\n                try {\n                    if (javaSources.size() != 0) stubGenerator.generateClass(classNode);\n                } catch (FileNotFoundException fnfe) {\n                    source.addException(fnfe);\n                }\n            }\n        },Phases.CONVERSION);\n    }","commit_id":"62b7a9d2175ca22702db5b8ed02918451d14106a","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Adds a set of source files to the unit.\n     */\n    public void addSources(File[] files) {\n        for (int i = 0; i < files.length; i++) {\n            addSource(files[i]);\n        }\n    }","id":1620,"modified_method":"/**\n     * Adds a set of source files to the unit.\n     */\n    public void addSources(File[] files) {\n        for (File file : files) {\n            addSource(file);\n        }\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Adds a set of file paths to the unit.\n     */\n    public void addSources(String[] paths) {\n        for (int i = 0; i < paths.length; i++) {\n            File file = new File(paths[i]);\n            addSource(file);\n        }\n    }","id":1621,"modified_method":"/**\n     * Adds a set of file paths to the unit.\n     */\n    public void addSources(String[] paths) {\n        for (String path : paths) {\n            addSource(new File(path));\n        }\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"private int getSuperInterfaceCount(ClassNode element) {\n        int count = 1;\n        ClassNode[] interfaces = element.getInterfaces();\n        for (int i=0; i<interfaces.length; i++) {\n            count = Math.max(count, getSuperInterfaceCount(interfaces[i])+1);\n        }\n        return count;\n    }","id":1622,"modified_method":"private int getSuperInterfaceCount(ClassNode element) {\n        int count = 1;\n        ClassNode[] interfaces = element.getInterfaces();\n        for (ClassNode anInterface : interfaces) {\n            count = Math.max(count, getSuperInterfaceCount(anInterface) + 1);\n        }\n        return count;\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Convenience routine to get the first ClassNode, for\n     * when you are sure there is only one.\n     */\n    public ClassNode getFirstClassNode() {\n        return (ClassNode) ((ModuleNode) this.ast.getModules().get(0)).getClasses().get(0);\n    }","id":1623,"modified_method":"/**\n     * Convenience routine to get the first ClassNode, for\n     * when you are sure there is only one.\n     */\n    public ClassNode getFirstClassNode() {\n        return this.ast.getModules().get(0).getClasses().get(0);\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Initializes the CompilationUnit with a CodeSource for controlling\n     * security stuff, a class loader for loading classes, and a class\n     * loader for loading AST transformations. \n     * <b>Note<\/b> The transform loader must be\n     * able to load compiler classes. That means CompilationUnit.class.classLoader\n     * must be at last a parent to transformLoader. The other loader has no such constraint.\n     * \n     * @param transformLoader - the loader for transforms\n     * @param loader - loader used to resolve classes against during compilation\n     * @param security - security setting for the compilation\n     * @param configuration - compilation configuration\n     * \n     */\n    public CompilationUnit(CompilerConfiguration configuration, CodeSource security, \n                           GroovyClassLoader loader, GroovyClassLoader transformLoader) \n    {\n        super(configuration, loader, null);\n        this.transformLoader = transformLoader;\n        this.names = new ArrayList();\n        this.queuedSources = new LinkedList();\n        this.sources = new HashMap();\n        this.summariesBySourceName = new HashMap();\n        this.summariesByPublicClassName = new HashMap();\n        this.classSourcesByPublicClassName = new HashMap();\n\n        this.ast = new CompileUnit(this.classLoader, security, this.configuration);\n        this.generatedClasses = new ArrayList();\n\n\n        this.verifier = new Verifier();\n        this.resolveVisitor = new ResolveVisitor(this);\n        this.staticImportVisitor = new StaticImportVisitor(this);\n        this.optimizer = new OptimizerVisitor(this);\n\n        phaseOperations = new LinkedList[Phases.ALL + 1];\n        newPhaseOperations = new LinkedList[Phases.ALL + 1];\n        for (int i = 0; i < phaseOperations.length; i++) {\n            phaseOperations[i] = new LinkedList();\n            newPhaseOperations[i] = new LinkedList();\n        }\n        addPhaseOperation(new SourceUnitOperation() {\n            public void call(SourceUnit source) throws CompilationFailedException {\n                source.parse();\n            }\n        }, Phases.PARSING);\n        addPhaseOperation(convert, Phases.CONVERSION);\n        addPhaseOperation(new PrimaryClassNodeOperation() {\n            public void call(SourceUnit source, GeneratorContext context,\n                             ClassNode classNode) throws CompilationFailedException {\n                EnumVisitor ev = new EnumVisitor(CompilationUnit.this, source);\n                ev.visitClass(classNode);\n            }\n        }, Phases.CONVERSION);\n        addPhaseOperation(resolve, Phases.SEMANTIC_ANALYSIS);\n        addPhaseOperation(staticImport, Phases.SEMANTIC_ANALYSIS);\n        addPhaseOperation(new PrimaryClassNodeOperation() {\n            @Override\n            public void call(SourceUnit source, GeneratorContext context,\n                             ClassNode classNode) throws CompilationFailedException {\n                InnerClassVisitor iv = new InnerClassVisitor(CompilationUnit.this,source);\n                iv.visitClass(classNode);\n            }\n        }, Phases.SEMANTIC_ANALYSIS);\n        addPhaseOperation(compileCompleteCheck, Phases.CANONICALIZATION);\n        addPhaseOperation(classgen, Phases.CLASS_GENERATION);\n        addPhaseOperation(output);\n\n        ASTTransformationVisitor.addPhaseOperations(this);\n\n        this.classgenCallback = null;\n    }","id":1624,"modified_method":"/**\n     * Initializes the CompilationUnit with a CodeSource for controlling\n     * security stuff, a class loader for loading classes, and a class\n     * loader for loading AST transformations. \n     * <b>Note<\/b> The transform loader must be\n     * able to load compiler classes. That means CompilationUnit.class.classLoader\n     * must be at last a parent to transformLoader. The other loader has no such constraint.\n     * \n     * @param transformLoader - the loader for transforms\n     * @param loader - loader used to resolve classes against during compilation\n     * @param security - security setting for the compilation\n     * @param configuration - compilation configuration\n     * \n     */\n    public CompilationUnit(CompilerConfiguration configuration, CodeSource security, \n                           GroovyClassLoader loader, GroovyClassLoader transformLoader) \n    {\n        super(configuration, loader, null);\n        this.transformLoader = transformLoader;\n        this.names = new ArrayList<String>();\n        this.queuedSources = new LinkedList<SourceUnit>();\n        this.sources = new HashMap<String, SourceUnit>();\n        this.summariesBySourceName = new HashMap();\n        this.summariesByPublicClassName = new HashMap();\n        this.classSourcesByPublicClassName = new HashMap();\n\n        this.ast = new CompileUnit(this.classLoader, security, this.configuration);\n        this.generatedClasses = new ArrayList<GroovyClass>();\n\n\n        this.verifier = new Verifier();\n        this.resolveVisitor = new ResolveVisitor(this);\n        this.staticImportVisitor = new StaticImportVisitor(this);\n        this.optimizer = new OptimizerVisitor(this);\n\n        phaseOperations = new LinkedList[Phases.ALL + 1];\n        newPhaseOperations = new LinkedList[Phases.ALL + 1];\n        for (int i = 0; i < phaseOperations.length; i++) {\n            phaseOperations[i] = new LinkedList();\n            newPhaseOperations[i] = new LinkedList();\n        }\n        addPhaseOperation(new SourceUnitOperation() {\n            public void call(SourceUnit source) throws CompilationFailedException {\n                source.parse();\n            }\n        }, Phases.PARSING);\n        addPhaseOperation(convert, Phases.CONVERSION);\n        addPhaseOperation(new PrimaryClassNodeOperation() {\n            public void call(SourceUnit source, GeneratorContext context,\n                             ClassNode classNode) throws CompilationFailedException {\n                EnumVisitor ev = new EnumVisitor(CompilationUnit.this, source);\n                ev.visitClass(classNode);\n            }\n        }, Phases.CONVERSION);\n        addPhaseOperation(resolve, Phases.SEMANTIC_ANALYSIS);\n        addPhaseOperation(staticImport, Phases.SEMANTIC_ANALYSIS);\n        addPhaseOperation(new PrimaryClassNodeOperation() {\n            @Override\n            public void call(SourceUnit source, GeneratorContext context,\n                             ClassNode classNode) throws CompilationFailedException {\n                InnerClassVisitor iv = new InnerClassVisitor(CompilationUnit.this,source);\n                iv.visitClass(classNode);\n            }\n        }, Phases.SEMANTIC_ANALYSIS);\n        addPhaseOperation(compileCompleteCheck, Phases.CANONICALIZATION);\n        addPhaseOperation(classgen, Phases.CLASS_GENERATION);\n        addPhaseOperation(output);\n\n        ASTTransformationVisitor.addPhaseOperations(this);\n\n        this.classgenCallback = null;\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"private List getSorted(int[] index, List unsorted) {\n        List sorted = new ArrayList(unsorted.size());\n        int start = 0;\n        for (int i = 0; i < unsorted.size(); i++) {\n            int min = -1;\n            for (int j = 0; j < unsorted.size(); j++) {\n                if (index[j] == -1) continue;\n                if (min == -1) {\n                    min = j;\n                } else if (index[j] < index[min]) {\n                    min = j;\n                }\n            }\n            if (min == -1) break;\n            sorted.add(unsorted.get(min));\n            index[min] = -1;\n        }\n        return sorted;\n    }","id":1625,"modified_method":"private List<ClassNode> getSorted(int[] index, List<ClassNode> unsorted) {\n        List<ClassNode> sorted = new ArrayList<ClassNode>(unsorted.size());\n        for (int i = 0; i < unsorted.size(); i++) {\n            int min = -1;\n            for (int j = 0; j < unsorted.size(); j++) {\n                if (index[j] == -1) continue;\n                if (min == -1) {\n                    min = j;\n                } else if (index[j] < index[min]) {\n                    min = j;\n                }\n            }\n            if (min == -1) break;\n            sorted.add(unsorted.get(min));\n            index[min] = -1;\n        }\n        return sorted;\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Dequeues any source units add through addSource and resets the compiler phase\n     * to initialization.\n     * <p/>\n     * Note: this does not mean a file is recompiled. If a SoucreUnit has already passed\n     * a phase it is skipped until a higher phase is reached.\n     *\n     * @return true if there was a queued source\n     * @throws CompilationFailedException\n     */\n    protected boolean dequeued() throws CompilationFailedException {\n        boolean dequeue = !queuedSources.isEmpty();\n        while (!queuedSources.isEmpty()) {\n            SourceUnit su = (SourceUnit) queuedSources.removeFirst();\n            String name = su.getName();\n            names.add(name);\n            sources.put(name, su);\n        }\n        if (dequeue) {\n            gotoPhase(Phases.INITIALIZATION);\n        }\n        return dequeue;\n    }","id":1626,"modified_method":"/**\n     * Dequeues any source units add through addSource and resets the compiler phase\n     * to initialization.\n     * <p/>\n     * Note: this does not mean a file is recompiled. If a SoucreUnit has already passed\n     * a phase it is skipped until a higher phase is reached.\n     *\n     * @return true if there was a queued source\n     * @throws CompilationFailedException\n     */\n    protected boolean dequeued() throws CompilationFailedException {\n        boolean dequeue = !queuedSources.isEmpty();\n        while (!queuedSources.isEmpty()) {\n            SourceUnit su = queuedSources.removeFirst();\n            String name = su.getName();\n            names.add(name);\n            sources.put(name, su);\n        }\n        if (dequeue) {\n            gotoPhase(Phases.INITIALIZATION);\n        }\n        return dequeue;\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"private List getPrimaryClassNodes(boolean sort) {\n        List unsorted = new ArrayList();\n        Iterator modules = this.ast.getModules().iterator();\n        while (modules.hasNext()) {\n            ModuleNode module = (ModuleNode) modules.next();\n\n            Iterator classNodes = module.getClasses().iterator();\n            while (classNodes.hasNext()) {\n                ClassNode classNode = (ClassNode) classNodes.next();\n                unsorted.add(classNode);\n            }\n        }\n\n        if (sort == false) return unsorted;\n\n        int[] indexClass = new int[unsorted.size()];\n        int[] indexInterface = new int[unsorted.size()];\n        {\n            int i = 0;\n            for (Iterator iter = unsorted.iterator(); iter.hasNext(); i++) {\n                ClassNode node = (ClassNode) iter.next();\n                ClassNode element = node;\n                if (node.isInterface()) {\n                    indexInterface[i] = getSuperInterfaceCount(element);\n                    indexClass[i] = -1;\n                } else {\n                    indexClass[i] = getSuperClassCount(element);\n                    indexInterface[i] = -1;\n                }\n            }\n        }\n\n        List sorted = getSorted(indexInterface, unsorted);\n        sorted.addAll(getSorted(indexClass, unsorted));\n\n        return sorted;\n    }","id":1627,"modified_method":"private List getPrimaryClassNodes(boolean sort) {\n        List<ClassNode> unsorted = new ArrayList<ClassNode>();\n        for (ModuleNode module : this.ast.getModules()) {\n            for (ClassNode classNode : module.getClasses()) {\n                unsorted.add(classNode);\n            }\n        }\n\n        if (!sort) return unsorted;\n\n        int[] indexClass = new int[unsorted.size()];\n        int[] indexInterface = new int[unsorted.size()];\n        {\n            int i = 0;\n            for (Iterator<ClassNode> iter = unsorted.iterator(); iter.hasNext(); i++) {\n                ClassNode element = iter.next();\n                if (element.isInterface()) {\n                    indexInterface[i] = getSuperInterfaceCount(element);\n                    indexClass[i] = -1;\n                } else {\n                    indexClass[i] = getSuperClassCount(element);\n                    indexInterface[i] = -1;\n                }\n            }\n        }\n\n        List<ClassNode> sorted = getSorted(indexInterface, unsorted);\n        sorted.addAll(getSorted(indexClass, unsorted));\n        return sorted;\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"public void applyToGeneratedGroovyClasses(GroovyClassOperation body) throws CompilationFailedException {\n        if (this.phase != Phases.OUTPUT && !(this.phase == Phases.CLASS_GENERATION && this.phaseComplete)) {\n            throw new GroovyBugError(\"CompilationUnit not ready for output(). Current phase=\" + getPhaseDescription());\n        }\n\n        boolean failures = false;\n\n        Iterator iterator = this.generatedClasses.iterator();\n        while (iterator.hasNext()) {\n            //\n            // Get the class and calculate its filesystem name\n            //\n            GroovyClass gclass = (GroovyClass) iterator.next();\n            try {\n                body.call(gclass);\n            } catch (CompilationFailedException e) {\n                // fall thorugh, getErrorREporter().failIfErrors() will triger\n            } catch (NullPointerException npe) {\n                throw npe;\n            } catch (GroovyBugError e) {\n                changeBugText(e, null);\n                throw e;\n            } catch (Exception e) {\n                GroovyBugError gbe = new GroovyBugError(e);\n                throw gbe;\n            }\n        }\n\n        getErrorCollector().failIfErrors();\n    }","id":1628,"modified_method":"public void applyToGeneratedGroovyClasses(GroovyClassOperation body) throws CompilationFailedException {\n        if (this.phase != Phases.OUTPUT && !(this.phase == Phases.CLASS_GENERATION && this.phaseComplete)) {\n            throw new GroovyBugError(\"CompilationUnit not ready for output(). Current phase=\" + getPhaseDescription());\n        }\n\n        for (GroovyClass gclass : this.generatedClasses) {\n            //\n            // Get the class and calculate its filesystem name\n            //\n            try {\n                body.call(gclass);\n            } catch (CompilationFailedException e) {\n                // fall through, getErrorReporter().failIfErrors() will trigger\n            } catch (NullPointerException npe) {\n                throw npe;\n            } catch (GroovyBugError e) {\n                changeBugText(e, null);\n                throw e;\n            } catch (Exception e) {\n                throw new GroovyBugError(e);\n            }\n        }\n\n        getErrorCollector().failIfErrors();\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * A loop driver for applying operations to all SourceUnits.\n     * Automatically skips units that have already been processed\n     * through the current phase.\n     */\n    public void applyToSourceUnits(SourceUnitOperation body) throws CompilationFailedException {\n        Iterator keys = names.iterator();\n        while (keys.hasNext()) {\n            String name = (String) keys.next();\n            SourceUnit source = (SourceUnit) sources.get(name);\n            if ((source.phase < phase) || (source.phase == phase && !source.phaseComplete)) {\n                try {\n                    body.call(source);\n                } catch (CompilationFailedException e) {\n                    throw e;\n                } catch (Exception e) {\n                    GroovyBugError gbe = new GroovyBugError(e);\n                    changeBugText(gbe, source);\n                    throw gbe;\n                } catch (GroovyBugError e) {\n                    changeBugText(e, source);\n                    throw e;\n                }\n            }\n        }\n\n\n        getErrorCollector().failIfErrors();\n    }","id":1629,"modified_method":"/**\n     * A loop driver for applying operations to all SourceUnits.\n     * Automatically skips units that have already been processed\n     * through the current phase.\n     */\n    public void applyToSourceUnits(SourceUnitOperation body) throws CompilationFailedException {\n        for (String name : names) {\n            SourceUnit source = sources.get(name);\n            if ((source.phase < phase) || (source.phase == phase && !source.phaseComplete)) {\n                try {\n                    body.call(source);\n                } catch (CompilationFailedException e) {\n                    throw e;\n                } catch (Exception e) {\n                    GroovyBugError gbe = new GroovyBugError(e);\n                    changeBugText(gbe, source);\n                    throw gbe;\n                } catch (GroovyBugError e) {\n                    changeBugText(e, source);\n                    throw e;\n                }\n            }\n        }\n\n\n        getErrorCollector().failIfErrors();\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"private void sortClasses() throws CompilationFailedException {\n        Iterator modules = this.ast.getModules().iterator();\n        while (modules.hasNext()) {\n            ModuleNode module = (ModuleNode) modules.next();\n            module.sortClasses();\n        }\n    }","id":1630,"modified_method":"private void sortClasses() throws CompilationFailedException {\n        for (ModuleNode module : this.ast.getModules()) {\n            module.sortClasses();\n        }\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Returns an iterator on the unit's SourceUnits.\n     */\n    public Iterator iterator() {\n        return new Iterator() {\n            Iterator nameIterator = names.iterator();\n\n\n            public boolean hasNext() {\n                return nameIterator.hasNext();\n            }\n\n\n            public Object next() {\n                String name = (String) nameIterator.next();\n                return sources.get(name);\n            }\n\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n        };\n    }","id":1631,"modified_method":"/**\n     * Returns an iterator on the unit's SourceUnits.\n     */\n    public Iterator<SourceUnit> iterator() {\n        return new Iterator<SourceUnit>() {\n            Iterator<String> nameIterator = names.iterator();\n\n            public boolean hasNext() {\n                return nameIterator.hasNext();\n            }\n\n            public SourceUnit next() {\n                String name = nameIterator.next();\n                return sources.get(name);\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n        };\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Adds a SourceUnit to the unit.\n     */\n    public SourceUnit addSource(SourceUnit source) {\n        String name = source.getName();\n        source.setClassLoader(this.classLoader);\n        for (Iterator iter = queuedSources.iterator(); iter.hasNext();) {\n            SourceUnit su = (SourceUnit) iter.next();\n            if (name.equals(su.getName())) return su;\n        }\n        queuedSources.add(source);\n        return source;\n    }","id":1632,"modified_method":"/**\n     * Adds a SourceUnit to the unit.\n     */\n    public SourceUnit addSource(SourceUnit source) {\n        String name = source.getName();\n        source.setClassLoader(this.classLoader);\n        for (SourceUnit su : queuedSources) {\n            if (name.equals(su.getName())) return su;\n        }\n        queuedSources.add(source);\n        return source;\n    }","commit_id":"45eeb1a3bcc32c77bf23c22fffc3b5fbc079c8a4","url":"https://github.com/apache/groovy"},{"original_method":"public void testAddAnswerThread() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a/b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Waiting for an Answer\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"I like green because it is so natural.&nbsp;&nbsp;Obviousl.\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"I like green because it is so natural.&nbsp;&nbsp;Obviously.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\n\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a[2]\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Waiting for an Answer\"));\n\t}","id":1633,"modified_method":"public void testAddAnswerThread() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a/b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Waiting for an Answer\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"I like green because it is so natural.&nbsp;&nbsp;Obviousl.\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"I like green because it is so natural.&nbsp;&nbsp;Obviously.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\n\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a[2]\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Resolved\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Waiting for an Answer\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Category']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Category']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gor\"));\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.typeKeys(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st cat\\u00e9gor!\"));\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st cat\\u00e9gory!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":1634,"modified_method":"public void testAddCategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Category']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gor\"));\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st cat\\u00e9gory!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDeletableMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Post New Thread']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.type(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","id":1635,"modified_method":"public void testAddDeletableMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.type(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Post New Thread']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.type(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t}","id":1636,"modified_method":"public void testAddMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.type(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMoveCategory() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Category']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_name\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t}","id":1637,"modified_method":"public void testAddMoveCategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Category']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_name\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.type(\"_19_name\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Post New Thread']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"Null Test Entr\"));\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Null Test Entry\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid message.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Cancel']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Cancel']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Null Test Entry\"));\n\t}","id":1638,"modified_method":"public void testAddNullEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"Null Test Entr\"));\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Null Test Entry\"));\n\t\tselenium.type(\"_19_textArea\", RuntimeVariables.replace(\"\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid message.\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullTitle() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Post New Thread']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_textArea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a Null Test Entr\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a Null Test Entry!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid subject.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Cancel']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Cancel']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"This is a Null Test Entry!\"));\n\t}","id":1639,"modified_method":"public void testAddNullTitle() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a Null Test Entr\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a Null Test Entry!\"));\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid subject.\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Add Application\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Collaboration-MessageBoards\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"Collaboration-MessageBoards\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Category']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":1640,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Add Application\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Collaboration-MessageBoards\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"Collaboration-MessageBoards\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Category']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddReplyMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[text()='Reply']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//a[text()='Reply']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_textArea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9pl m\\u00e9ssag\\u00e9!\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t}","id":1641,"modified_method":"public void testAddReplyMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//a[text()='Reply']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9pl m\\u00e9ssag\\u00e9!\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondReplyMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_textArea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a second repl message.\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a second reply message.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a second reply message.\"));\n\t}","id":1642,"modified_method":"public void testAddSecondReplyMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a second repl message.\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a second reply message.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a second reply message.\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondSubcategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=T\\u00e9st Cat\\u00e9gory\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Subcategory']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Subcategory']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gor\"));\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.typeKeys(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a s\\u00e9cond t\\u00e9st subcat\\u00e9gor!\"));\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a s\\u00e9cond t\\u00e9st subcat\\u00e9gory!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":1643,"modified_method":"public void testAddSecondSubcategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Subcategory']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gor\"));\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a s\\u00e9cond t\\u00e9st subcat\\u00e9gory!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSubcategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Subcategory']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Subcategory']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gor\"));\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.typeKeys(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st subcat\\u00e9gor!\"));\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st subcat\\u00e9gory!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":1644,"modified_method":"public void testAddSubcategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Subcategory']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gor\"));\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st subcat\\u00e9gory!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddThirdReplyMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[6]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[6]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_textArea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a third repl message.\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a third reply message.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a third reply message.\"));\n\t}","id":1645,"modified_method":"public void testAddThirdReplyMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[6]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a third repl message.\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is a third reply message.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a third reply message.\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteAll() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean FolderAPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tif (!FolderAPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean FolderBPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tif (!FolderBPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 3:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":1646,"modified_method":"public void testDeleteAll() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean CategoryAPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tif (!CategoryAPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean CategoryBPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tif (!CategoryBPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 3:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteMessage() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Moved to Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Trust and paths will be straightened.\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","id":1647,"modified_method":"public void testDeleteMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Moved to Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Trust and paths will be straightened.\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditCategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[1]/div/span[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//td[1]/div/span[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gor Edit\\u00e9d\"));\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.typeKeys(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st cat\\u00e9gor edited!\"));\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\t}","id":1648,"modified_method":"public void testEditCategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gor Edit\\u00e9d\"));\n\t\tselenium.type(\"_19_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.type(\"_19_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tselenium.type(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tselenium.typeKeys(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is edited test M\\u00e9ssag\\u00e9\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is edited test M\\u00e9ssag\\u00e9!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is edited test M\\u00e9ssag\\u00e9!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":1649,"modified_method":"public void testEditMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tselenium.type(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is edited test M\\u00e9ssag\\u00e9!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is edited test M\\u00e9ssag\\u00e9!\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Import\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\messageboards\\\\Message_Boards-Selenium.portlet.lar\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":1650,"modified_method":"public void testImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_86_DELETE_PORTLET_DATA\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\messageboards\\\\Message_Boards-Selenium.portlet.lar\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveThread() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d! \"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Move Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_19_addExplanationPost\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Moved to Sujr\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"Trust and paths will be straightened.\"));\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"category\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Categories\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Move Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d! \"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Trust and paths will be straightened. \"));\n\t\tassertFalse(selenium.isElementPresent(\"link=T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=T\\u00e9st Cat\\u00e9gory\"));\n\t}","id":1651,"modified_method":"public void testMoveThread() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a[1]/b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Move Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_19_addExplanationPost\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"Moved to Sujr\"));\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Moved to Sujr\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"Trust and paths will be straightened.\"));\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"category\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Categories\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Move Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Trust and paths will be straightened.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=T\\u00e9st Cat\\u00e9gory\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRecentPosts() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Recent Posts\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Recent Posts\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","id":1652,"modified_method":"public void testRecentPosts() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Recent Posts\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearch() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=T\\u00e9st Cat\\u00e9gory\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_keywords1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_keywords1\", RuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.type(\"_19_keywords1\", RuntimeVariables.replace(\"T\\u00e9st\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Search Messages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Messages']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t}","id":1653,"modified_method":"public void testSearch() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_keywords1\", RuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.type(\"_19_keywords1\", RuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Messages']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSplitThread() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"_19_tabs1TabsBack\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Split Thread\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Split Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Click OK to create a new thread with the following messages.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='OK']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='OK']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a second reply message.\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a third reply message.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=T\\u00e9st Subcat\\u00e9gory\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t}","id":1654,"modified_method":"public void testSplitThread() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Split Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Click OK to create a new thread with the following messages.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='OK']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a second reply message.\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a third reply message.\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean FolderAPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tif (!FolderAPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean FolderBPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tif (!FolderBPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[2]/ul/li[1]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li/ul/li[3]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Return to Full Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":1655,"modified_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean CategoryAPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tif (!CategoryAPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean CategoryBPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tif (!CategoryBPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[2]/ul/li[1]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li/ul/li[3]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"1ca7d64825404d54d36c99ba436577d61dca1206","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullChoicePoll() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_title_en_US\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_description_en_US\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptiona_en_US\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Choice A\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptionb_en_US\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Choice B\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptionc_en_US\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Your request failed to complete.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter valid choices.\"));\n\t}","id":1656,"modified_method":"public void testAddNullChoicePoll() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Choice A\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Choice B\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Your request failed to complete.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"xPath=(//div[@class='portlet-msg-error'])[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter valid choices.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullDescriptionPoll() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_title_en_US\",\n\t\t\tRuntimeVariables.replace(\"Null Description Poll Test Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_description_en_US\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptiona_en_US\",\n\t\t\tRuntimeVariables.replace(\"Null Description Poll Test Choice A\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptionb_en_US\",\n\t\t\tRuntimeVariables.replace(\"Null Description Poll Test Choice B\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Your request failed to complete.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid description.\"));\n\t}","id":1657,"modified_method":"public void testAddNullDescriptionPoll() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Description Poll Test Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Description Poll Test Choice A\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Description Poll Test Choice B\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"This field is required.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//label/div\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\"//label/div\"));\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullTitlePoll() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_description_en_US\",\n\t\t\tRuntimeVariables.replace(\"Null Title Poll Test Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_title_en_US\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptiona_en_US\",\n\t\t\tRuntimeVariables.replace(\"Null Title Poll Test Choice A\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptionb_en_US\",\n\t\t\tRuntimeVariables.replace(\"Null Title Poll Test Choice B\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Your request failed to complete.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid title.\"));\n\t}","id":1658,"modified_method":"public void testAddNullTitlePoll() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Title Poll Test Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Title Poll Test Choice A\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Title Poll Test Choice B\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"This field is required.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//label/div\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\"//label/div\"));\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuestion2() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_title_en_US\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question 2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_description_en_US\",\n\t\t\tRuntimeVariables.replace(\"This is a test poll 2 description.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptiona_en_US\",\n\t\t\tRuntimeVariables.replace(\"Test Choice A\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptionb_en_US\",\n\t\t\tRuntimeVariables.replace(\"Test Choice B\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_25_choiceDescriptionc_en_US\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptionc_en_US\",\n\t\t\tRuntimeVariables.replace(\"Test Choice C\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question 2\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","id":1659,"modified_method":"public void testAddQuestion2() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question 2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"This is a test poll 2 description.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice A\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice B\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_25_choiceDescriptionc_en_US']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice C\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question 2\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuestion() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_title_en_US\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_description_en_US\",\n\t\t\tRuntimeVariables.replace(\"This is a test poll description.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptiona_en_US\",\n\t\t\tRuntimeVariables.replace(\"Test Choice A\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptionb_en_US\",\n\t\t\tRuntimeVariables.replace(\"Test Choice B\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_25_choiceDescriptionc_en_US\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptionc_en_US\",\n\t\t\tRuntimeVariables.replace(\"Test Choice C\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","id":1660,"modified_method":"public void testAddQuestion() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"This is a test poll description.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice A\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice B\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_25_choiceDescriptionc_en_US']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice C\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddVote() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Poll Question\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_25_choiceId\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Vote']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question\"),\n\t\t\tselenium.getText(\"//div[1]/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a test poll description.\"),\n\t\t\tselenium.getText(\"//fieldset/div/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"100%\"),\n\t\t\tselenium.getText(\"//tr[2]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a.\"),\n\t\t\tselenium.getText(\"//td[6]/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Choice A\"),\n\t\t\tselenium.getText(\"//td[7]\"));\n\t}","id":1661,"modified_method":"public void testAddVote() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_25_choiceId']\",\n\t\t\tRuntimeVariables.replace(\"Choice A\"));\n\t\tselenium.clickAt(\"//input[@value='Vote']\",\n\t\t\tRuntimeVariables.replace(\"Vote\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question\"),\n\t\t\tselenium.getText(\"//div[1]/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a test poll description.\"),\n\t\t\tselenium.getText(\"//fieldset/div/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"100%\"),\n\t\t\tselenium.getText(\"//tr[2]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a.\"),\n\t\t\tselenium.getText(\"//td[6]/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Choice A\"),\n\t\t\tselenium.getText(\"//td[7]\"));\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertDeleteChoice() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_title_en_US\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice Title Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_description_en_US\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice Description Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptiona_en_US\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice A\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptionb_en_US\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice B\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptionc_en_US\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice C\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptiond_en_US\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice D\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptione_en_US\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice E\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"Delete Choice C\",\n\t\t\tselenium.getValue(\"_25_choiceDescriptionc_en_US\"));\n\t\tassertEquals(\"Delete Choice D\",\n\t\t\tselenium.getValue(\"_25_choiceDescriptiond_en_US\"));\n\t\tassertEquals(\"Delete Choice E\",\n\t\t\tselenium.getValue(\"_25_choiceDescriptione_en_US\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"Delete Choice C\",\n\t\t\tselenium.getValue(\"_25_choiceDescriptionc_en_US\"));\n\t\tassertEquals(\"Delete Choice D\",\n\t\t\tselenium.getValue(\"_25_choiceDescriptiond_en_US\"));\n\t\tassertFalse(selenium.isElementPresent(\"_25_choiceDescriptione_en_US\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"Delete Choice C\",\n\t\t\tselenium.getValue(\"_25_choiceDescriptionc_en_US\"));\n\t\tassertFalse(selenium.isElementPresent(\"_25_choiceDescriptiond_en_US\"));\n\t\tassertFalse(selenium.isElementPresent(\"_25_choiceDescriptione_en_US\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"_25_choiceDescriptionc_en_US\"));\n\t\tassertFalse(selenium.isElementPresent(\"_25_choiceDescriptiond_en_US\"));\n\t\tassertFalse(selenium.isElementPresent(\"_25_choiceDescriptione_en_US\"));\n\t}","id":1662,"modified_method":"public void testAssertDeleteChoice() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice Title Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice Description Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice A\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice B\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice C\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiond_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice D\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptione_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice E\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"Delete Choice C\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptionc_en_US']\"));\n\t\tassertEquals(\"Delete Choice D\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptiond_en_US']\"));\n\t\tassertEquals(\"Delete Choice E\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptione_en_US']\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"Delete Choice C\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptionc_en_US']\"));\n\t\tassertEquals(\"Delete Choice D\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptiond_en_US']\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptione_en_US']\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"Delete Choice C\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptionc_en_US']\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptiond_en_US']\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptione_en_US']\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptionc_en_US']\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptiond_en_US']\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptione_en_US']\"));\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertExpiredQuestion() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Edited Test Question 2\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//span[1]/span/span/input\"));\n\t\tassertFalse(selenium.isElementPresent(\"//span[2]/span/span/input\"));\n\t\tassertFalse(selenium.isElementPresent(\"//span[3]/span/span/input\"));\n\t\tassertFalse(selenium.isElementPresent(\"//span[4]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Voting is disabled because this poll expired on 1/1/08 12:00 AM.\"),\n\t\t\tselenium.getText(\"//div[6]\"));\n\t}","id":1663,"modified_method":"public void testAssertExpiredQuestion() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Edited Test Question 2\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[2]/div/span[1]/span/span/input\"));\n\t\tassertFalse(selenium.isElementPresent(\"//span[2]/span/span/input\"));\n\t\tassertFalse(selenium.isElementPresent(\"//span[3]/span/span/input\"));\n\t\tassertFalse(selenium.isElementPresent(\"//span[4]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Voting is disabled because this poll expired on 1/1/08 12:00 AM.\"),\n\t\t\tselenium.getText(\"//div[6]\"));\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditQuestion() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_title_en_US\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_description_en_US\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is an edited test poll 2 description.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_25_choiceDescriptiond_en_US\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_25_choiceDescriptiond_en_US\",\n\t\t\tRuntimeVariables.replace(\"NEW Test Choice D\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tselenium.clickAt(\"link=Edited Test Question 2\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"d. NEW Test Choice D\"),\n\t\t\tselenium.getText(\"//span[4]/span/label\"));\n\t}","id":1664,"modified_method":"public void testEditQuestion() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is an edited test poll 2 description.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_25_choiceDescriptiond_en_US']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiond_en_US']\",\n\t\t\tRuntimeVariables.replace(\"NEW Test Choice D\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Edited Test Question 2\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"d. NEW Test Choice D\"),\n\t\t\tselenium.getText(\"//span[4]/span/label\"));\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testExpireQuestion() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Edited Test Question 2\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//span[3]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//span[4]/span/span/input\"));\n\t\tselenium.clickAt(\"//input[@value='Cancel']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_25_expirationDateMonth\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_25_neverExpireCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tassertFalse(selenium.isChecked(\"_25_neverExpireCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.keyPress(\"_25_expirationDateMonth\",\n\t\t\tRuntimeVariables.replace(\"\\\\38\"));\n\t\tselenium.keyPress(\"_25_expirationDateMinute\",\n\t\t\tRuntimeVariables.replace(\"\\\\39\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tThread.sleep(60000);\n\t}","id":1665,"modified_method":"public void testExpireQuestion() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Edited Test Question 2\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[2]/div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//span[3]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//span[4]/span/span/input\"));\n\t\tselenium.clickAt(\"//input[@value='Cancel']\",\n\t\t\tRuntimeVariables.replace(\"Cancel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_25_neverExpireCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_25_neverExpireCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Never Expire\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_25_neverExpireCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//select[@id='_25_expirationDateMonth']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_25_expirationDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2008\"));\n\t\tselenium.select(\"//select[@id='_25_expirationDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_25_expirationDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@name='_25_expirationDateHour']\",\n\t\t\tRuntimeVariables.replace(\"label=12\"));\n\t\tselenium.select(\"//select[@name='_25_expirationDateMinute']\",\n\t\t\tRuntimeVariables.replace(\"label=:00\"));\n\t\tselenium.select(\"//select[@name='_25_expirationDateAmPm']\",\n\t\t\tRuntimeVariables.replace(\"label=AM\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please enter a valid expiration date.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddQuestionTest.class);\n\t\ttestSuite.addTestSuite(AddVoteTest.class);\n\t\t//testSuite.addTestSuite(ViewQuestionGraphsTest.class);\n\t\ttestSuite.addTestSuite(AddQuestion2Test.class);\n\t\ttestSuite.addTestSuite(EditQuestionTest.class);\n\t\ttestSuite.addTestSuite(ExpireQuestionTest.class);\n\t\ttestSuite.addTestSuite(AssertExpiredQuestionTest.class);\n\t\ttestSuite.addTestSuite(AssertDeleteChoiceTest.class);\n\t\ttestSuite.addTestSuite(AddNullTitlePollTest.class);\n\t\ttestSuite.addTestSuite(AddNullDescriptionPollTest.class);\n\t\ttestSuite.addTestSuite(AddNullChoicePollTest.class);\n\t\ttestSuite.addTestSuite(TearDownQuestionTest.class);\n\n\t\treturn testSuite;\n\t}","id":1666,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddQuestionTest.class);\n\t\ttestSuite.addTestSuite(AddVoteTest.class);\n\t\ttestSuite.addTestSuite(ViewQuestionGraphsTest.class);\n\t\ttestSuite.addTestSuite(AddQuestion2Test.class);\n\t\ttestSuite.addTestSuite(EditQuestionTest.class);\n\t\ttestSuite.addTestSuite(ExpireQuestionTest.class);\n\t\ttestSuite.addTestSuite(AssertExpiredQuestionTest.class);\n\t\ttestSuite.addTestSuite(AssertDeleteChoiceTest.class);\n\t\ttestSuite.addTestSuite(AddNullTitlePollTest.class);\n\t\ttestSuite.addTestSuite(AddNullDescriptionPollTest.class);\n\t\ttestSuite.addTestSuite(AddNullChoicePollTest.class);\n\t\ttestSuite.addTestSuite(TearDownQuestionTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownQuestion() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean question1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean question2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean question3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean question4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean question5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":1667,"modified_method":"public void testTearDownQuestion() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean question1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean question2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean question3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean question4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean question5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewQuestionGraphs() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Poll Question\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Area\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Horizontal Bar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Horizontal Bar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Line\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Line\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Pie\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Pie\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Vertical Bar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Vertical Bar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":1668,"modified_method":"public void testViewQuestionGraphs() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Poll Question\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Area\", RuntimeVariables.replace(\"Area\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Horizontal Bar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Horizontal Bar\",\n\t\t\tRuntimeVariables.replace(\"Horizontal Bar\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Line\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Line\", RuntimeVariables.replace(\"Line\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Pie\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Pie\", RuntimeVariables.replace(\"Pie\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Vertical Bar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Vertical Bar\",\n\t\t\tRuntimeVariables.replace(\"Vertical Bar\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"e1adb3b3475a50cc812e455a6b1e3dd8bbf9ad55","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolder() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Folder']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_31_name\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.typeKeys(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test folder!\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test folder!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":1669,"modified_method":"public void testAddFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Folder']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_31_name\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.typeKeys(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test folder!\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test folder!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test folder!\"));\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddImage() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Image']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Use the classic uploader.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Use the classic uploader.\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_file\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_31_file\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\test_image.jpg\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"test_image\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Liferay logo!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t}","id":1670,"modified_method":"public void testAddImage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Image']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Use the classic uploader.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Use the classic uploader.\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_file\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_31_file\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\test_image.jpg\"));\n\t\tselenium.typeKeys(\"_31_name\", RuntimeVariables.replace(\"test_image\"));\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"test_image\"));\n\t\tselenium.typeKeys(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Lifera logo!\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Liferay logo!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t\tassertTrue(selenium.isTextPresent(\"test_image\"));\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='ContentManagement-ImageGallery']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='ContentManagement-ImageGallery']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Folder']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":1671,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Add Application\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='ContentManagement-ImageGallery']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='ContentManagement-ImageGallery']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Folder']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondTestFolders() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Folder']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"Test Folder 2\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a second test folder.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//tr[4]/td[1]/a/b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a/b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Subfolder']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"Test Subfolder 2\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a second test subfolder.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":1672,"modified_method":"public void testAddSecondTestFolders() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Folder']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_31_name\", RuntimeVariables.replace(\"Test Folder 2\"));\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"Test Folder 2\"));\n\t\tselenium.typeKeys(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a second test folder.\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a second test folder.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Folder 2\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a second test folder.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//tr[4]/td[1]/a/b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a/b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Subfolder']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_31_name\",\n\t\t\tRuntimeVariables.replace(\"Test Subfolder 2\"));\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"Test Subfolder 2\"));\n\t\tselenium.typeKeys(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a second test subfolder.\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a second test subfolder.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Subfolder 2\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a second test subfolder.\"));\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSubfolder() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Subfolder']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.typeKeys(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test subfolder!\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test subfolder!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":1673,"modified_method":"public void testAddSubfolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Subfolder']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_31_name\", RuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.typeKeys(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test subfolder!\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test subfolder!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test subfolder!\"));\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertLARImport() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":1674,"modified_method":"public void testAssertLARImport() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a test folder!\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a second test folder.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a test subfolder!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//span[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a[1]/b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a second test subfolder.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testBrowseImageTabs() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Recent Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":1675,"modified_method":"public void testBrowseImageTabs() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Recent Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteFolders() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tThread.sleep(1000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Test Folder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tThread.sleep(1000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Test Folder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Folder 2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Subfolder 2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Folder\"));\n\t}","id":1676,"modified_method":"public void testDeleteFolders() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean TestFolderAPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!TestFolderAPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean TestFolderBPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!TestFolderBPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 3:\n\t\t\t\tassertFalse(selenium.isTextPresent(\"This is a test folder!\"));\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"This is a second test folder.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImageEditting() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class=\\\"ui-dialog-titlebar\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(2000);\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.click(\"link=X\");\n\t\tThread.sleep(2000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class=\\\"ui-dialog-titlebar\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(2000);\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.click(\"link=X\");\n\t\tThread.sleep(2000);\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":1677,"modified_method":"public void testImageEditting() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a[1]/b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class=\\\"ui-dialog-titlebar\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.click(\"link=X\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class=\\\"ui-dialog-titlebar\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(2000);\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.click(\"link=X\");\n\t\tThread.sleep(2000);\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ImageGalleryTests() {\n\t\taddTestSuite(AddPageTest.class);\n\t\taddTestSuite(AddPortletTest.class);\n\t\taddTestSuite(AddFolderTest.class);\n\t\taddTestSuite(AddSubfolderTest.class);\n\t\taddTestSuite(AddImageTest.class);\n\t\taddTestSuite(ViewSlideshowTest.class);\n\t\taddTestSuite(BrowseImageTabsTest.class);\n\t\taddTestSuite(SearchPortletTest.class);\n\t\taddTestSuite(AddSecondTestFoldersTest.class);\n\t\taddTestSuite(MoveImageTest.class);\n\t\taddTestSuite(DeleteFoldersTest.class);\n\t\taddTestSuite(UploadLARFileTest.class);\n\t\taddTestSuite(AssertLARImportTest.class);\n\t\taddTestSuite(ImageEdittingTest.class);\n\t\taddTestSuite(DeletePageTest.class);\n\t}","id":1678,"modified_method":"public ImageGalleryTests() {\n\t\taddTestSuite(AddPageTest.class);\n\t\taddTestSuite(AddPortletTest.class);\n\t\taddTestSuite(AddFolderTest.class);\n\t\taddTestSuite(AddSubfolderTest.class);\n\t\taddTestSuite(AddImageTest.class);\n\t\taddTestSuite(ViewSlideshowTest.class);\n\t\taddTestSuite(BrowseImageTabsTest.class);\n\t\taddTestSuite(SearchPortletTest.class);\n\t\taddTestSuite(AddSecondTestFoldersTest.class);\n\t\taddTestSuite(MoveImageTest.class);\n\t\taddTestSuite(DeleteFoldersTest.class);\n\t\taddTestSuite(UploadLARFileTest.class);\n\t\taddTestSuite(AssertLARImportTest.class);\n\t\taddTestSuite(ImageEdittingTest.class);\n\t\taddTestSuite(TearDownTest.class);\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveImage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Edit\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//img[@alt='This is the Liferay logo!']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Select']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"folder\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Folders\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Folder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Folder 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_folderName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//img[@alt='This is the Liferay logo!']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":1679,"modified_method":"public void testMoveImage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//img[@alt='This is the Liferay logo!']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Select']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"folder\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Folders\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Folder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Folder 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_folderName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//img[@alt='This is the Liferay logo!']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_keywords1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_31_keywords1\", RuntimeVariables.replace(\"liferay\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Images']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t}","id":1680,"modified_method":"public void testSearchPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_keywords1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_31_keywords1\", RuntimeVariables.replace(\"liferay\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Images']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_keywords\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_31_keywords\", RuntimeVariables.replace(\"liferay1\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Images']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUploadLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\ImageGallery-Selenium.portlet.lar\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":1681,"modified_method":"public void testUploadLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_86_DELETE_PORTLET_DATA\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\ImageGallery-Selenium.portlet.lar\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewSlideshow() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='View Slide Show']\");\n\t\tselenium.waitForPopUp(\"slideShow\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=slideShow\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_slideShow\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":1682,"modified_method":"public void testViewSlideshow() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='View Slide Show']\");\n\t\tselenium.waitForPopUp(\"slideShow\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=slideShow\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_slideShow\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"8f08f4f7d493a3fae6489558ba0e03da7648522a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doServeResource(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tActionUtil.getFileEntries(resourceRequest);\n\t\tActionUtil.getFileShortcuts(resourceRequest);\n\t\tActionUtil.getFolders(resourceRequest);\n\n\t\tPortletRequestDispatcher portletRequestDispatcher =\n\t\t\tgetPortletRequestDispatcher(\n\t\t\t\tresourceRequest, \"/document_library/info_panel.jsp\");\n\n\t\tportletRequestDispatcher.include(resourceRequest, resourceResponse);\n\t}","id":1683,"modified_method":"@Override\n\tprotected void doServeResource(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tresourceRequest.setAttribute(\n\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_ENTRIES,\n\t\t\tActionUtil.getFileEntries(resourceRequest));\n\t\tresourceRequest.setAttribute(\n\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_SHORTCUTS,\n\t\t\tActionUtil.getFileShortcuts(resourceRequest));\n\t\tresourceRequest.setAttribute(\n\t\t\tWebKeys.DOCUMENT_LIBRARY_FOLDERS,\n\t\t\tActionUtil.getFolders(resourceRequest));\n\n\t\tPortletRequestDispatcher portletRequestDispatcher =\n\t\t\tgetPortletRequestDispatcher(\n\t\t\t\tresourceRequest, \"/document_library/info_panel.jsp\");\n\n\t\tportletRequestDispatcher.include(resourceRequest, resourceResponse);\n\t}","commit_id":"fe13214ec3f4c9ab9add15c47646236e72bb56af","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getFolder(HttpServletRequest request) throws Exception {\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong folderId = ParamUtil.getLong(request, \"folderId\");\n\n\t\tBookmarksFolder folder = null;\n\n\t\tif ((folderId > 0) &&\n\t\t\t(folderId != BookmarksFolderConstants.DEFAULT_PARENT_FOLDER_ID)) {\n\n\t\t\tfolder = BookmarksFolderServiceUtil.getFolder(folderId);\n\n\t\t\tif (folder.isInTrash()) {\n\t\t\t\tthrow new NoSuchFolderException(\"{folderId=\" + folderId + \"}\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tBookmarksResourcePermissionChecker.check(\n\t\t\t\tthemeDisplay.getPermissionChecker(),\n\t\t\t\tthemeDisplay.getScopeGroupId(), ActionKeys.VIEW);\n\t\t}\n\n\t\trequest.setAttribute(BookmarksWebKeys.BOOKMARKS_FOLDER, folder);\n\t}","id":1684,"modified_method":"public static BookmarksFolder getFolder(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong folderId = ParamUtil.getLong(request, \"folderId\");\n\n\t\tBookmarksFolder folder = null;\n\n\t\tif ((folderId > 0) &&\n\t\t\t(folderId != BookmarksFolderConstants.DEFAULT_PARENT_FOLDER_ID)) {\n\n\t\t\tfolder = BookmarksFolderServiceUtil.getFolder(folderId);\n\n\t\t\tif (folder.isInTrash()) {\n\t\t\t\tthrow new NoSuchFolderException(\"{folderId=\" + folderId + \"}\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tBookmarksResourcePermissionChecker.check(\n\t\t\t\tthemeDisplay.getPermissionChecker(),\n\t\t\t\tthemeDisplay.getScopeGroupId(), ActionKeys.VIEW);\n\t\t}\n\n\t\treturn folder;\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getFolders(PortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\tgetFolders(request);\n\t}","id":1685,"modified_method":"public static List<BookmarksFolder> getFolders(\n\t\t\tPortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\treturn getFolders(request);\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getEntry(HttpServletRequest request) throws Exception {\n\t\tlong entryId = ParamUtil.getLong(request, \"entryId\");\n\n\t\tBookmarksEntry entry = null;\n\n\t\tif (entryId > 0) {\n\t\t\tentry = BookmarksEntryServiceUtil.getEntry(entryId);\n\n\t\t\tif (entry.isInTrash()) {\n\t\t\t\tthrow new NoSuchEntryException(\"{entryId=\" + entryId + \"}\");\n\t\t\t}\n\t\t}\n\n\t\trequest.setAttribute(BookmarksWebKeys.BOOKMARKS_ENTRY, entry);\n\t}","id":1686,"modified_method":"public static BookmarksEntry getEntry(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tlong entryId = ParamUtil.getLong(request, \"entryId\");\n\n\t\tBookmarksEntry entry = null;\n\n\t\tif (entryId > 0) {\n\t\t\tentry = BookmarksEntryServiceUtil.getEntry(entryId);\n\n\t\t\tif (entry.isInTrash()) {\n\t\t\t\tthrow new NoSuchEntryException(\"{entryId=\" + entryId + \"}\");\n\t\t\t}\n\t\t}\n\n\t\treturn entry;\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getFolder(PortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\tgetFolder(request);\n\t}","id":1687,"modified_method":"public static BookmarksFolder getFolder(PortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\treturn getFolder(request);\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getEntries(PortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\tgetEntries(request);\n\t}","id":1688,"modified_method":"public static List<BookmarksEntry> getEntries(PortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\treturn getEntries(request);\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getEntries(HttpServletRequest request) throws Exception {\n\t\tlong[] entryIds = ParamUtil.getLongValues(\n\t\t\trequest, \"rowIdsBookmarksEntry\");\n\n\t\tList<BookmarksEntry> entries = new ArrayList<>();\n\n\t\tfor (long entryId : entryIds) {\n\t\t\tBookmarksEntry entry = BookmarksEntryServiceUtil.getEntry(entryId);\n\n\t\t\tentries.add(entry);\n\t\t}\n\n\t\trequest.setAttribute(BookmarksWebKeys.BOOKMARKS_ENTRIES, entries);\n\t}","id":1689,"modified_method":"public static List<BookmarksEntry> getEntries(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tlong[] entryIds = ParamUtil.getLongValues(\n\t\t\trequest, \"rowIdsBookmarksEntry\");\n\n\t\tList<BookmarksEntry> entries = new ArrayList<>();\n\n\t\tfor (long entryId : entryIds) {\n\t\t\tBookmarksEntry entry = BookmarksEntryServiceUtil.getEntry(entryId);\n\n\t\t\tentries.add(entry);\n\t\t}\n\n\t\treturn entries;\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getFolders(HttpServletRequest request) throws Exception {\n\t\tlong[] folderIds = ParamUtil.getLongValues(\n\t\t\trequest, \"rowIdsBookmarksFolder\");\n\n\t\tList<BookmarksFolder> folders = new ArrayList<>();\n\n\t\tfor (long folderId : folderIds) {\n\t\t\tif ((folderId > 0) &&\n\t\t\t\t(folderId !=\n\t\t\t\t\tBookmarksFolderConstants.DEFAULT_PARENT_FOLDER_ID)) {\n\n\t\t\t\tBookmarksFolder folder = BookmarksFolderServiceUtil.getFolder(\n\t\t\t\t\tfolderId);\n\n\t\t\t\tfolders.add(folder);\n\t\t\t}\n\t\t}\n\n\t\trequest.setAttribute(BookmarksWebKeys.BOOKMARKS_FOLDERS, folders);\n\t}","id":1690,"modified_method":"public static List<BookmarksFolder> getFolders(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tlong[] folderIds = ParamUtil.getLongValues(\n\t\t\trequest, \"rowIdsBookmarksFolder\");\n\n\t\tList<BookmarksFolder> folders = new ArrayList<>();\n\n\t\tfor (long folderId : folderIds) {\n\t\t\tif ((folderId > 0) &&\n\t\t\t\t(folderId !=\n\t\t\t\t\tBookmarksFolderConstants.DEFAULT_PARENT_FOLDER_ID)) {\n\n\t\t\t\tBookmarksFolder folder = BookmarksFolderServiceUtil.getFolder(\n\t\t\t\t\tfolderId);\n\n\t\t\t\tfolders.add(folder);\n\t\t\t}\n\t\t}\n\n\t\treturn folders;\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getEntry(PortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\tgetEntry(request);\n\t}","id":1691,"modified_method":"public static BookmarksEntry getEntry(PortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\treturn getEntry(request);\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tActionUtil.getEntry(renderRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/bookmarks/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn getPath();\n\t}","id":1692,"modified_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tBookmarksEntry entry = ActionUtil.getEntry(renderRequest);\n\n\t\t\trenderRequest.setAttribute(BookmarksWebKeys.BOOKMARKS_ENTRY, entry);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/bookmarks/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn getPath();\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tActionUtil.getFolder(renderRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchFolderException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/bookmarks/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn getPath();\n\t}","id":1693,"modified_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tBookmarksFolder folder = ActionUtil.getFolder(renderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tBookmarksWebKeys.BOOKMARKS_FOLDER, folder);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchFolderException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/bookmarks/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn getPath();\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doServeResource(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tActionUtil.getEntries(resourceRequest);\n\t\tActionUtil.getFolders(resourceRequest);\n\n\t\tPortletRequestDispatcher portletRequestDispatcher =\n\t\t\tgetPortletRequestDispatcher(\n\t\t\t\tresourceRequest, \"/bookmarks/info_panel.jsp\");\n\n\t\tportletRequestDispatcher.include(resourceRequest, resourceResponse);\n\t}","id":1694,"modified_method":"@Override\n\tprotected void doServeResource(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tList<BookmarksEntry> entries = ActionUtil.getEntries(resourceRequest);\n\n\t\tresourceRequest.setAttribute(\n\t\t\tBookmarksWebKeys.BOOKMARKS_ENTRIES, entries);\n\n\t\tList<BookmarksFolder> folders = ActionUtil.getFolders(resourceRequest);\n\n\t\tresourceRequest.setAttribute(\n\t\t\tBookmarksWebKeys.BOOKMARKS_FOLDERS, folders);\n\n\t\tActionUtil.getFolders(resourceRequest);\n\n\t\tPortletRequestDispatcher portletRequestDispatcher =\n\t\t\tgetPortletRequestDispatcher(\n\t\t\t\tresourceRequest, \"/bookmarks/info_panel.jsp\");\n\n\t\tportletRequestDispatcher.include(resourceRequest, resourceResponse);\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tActionUtil.getEntries(renderRequest);\n\t\t\tActionUtil.getEntry(renderRequest);\n\t\t\tActionUtil.getFolders(renderRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/bookmarks/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn \"/bookmarks/move_entries.jsp\";\n\t}","id":1695,"modified_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tList<BookmarksEntry> entries = ActionUtil.getEntries(renderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tBookmarksWebKeys.BOOKMARKS_ENTRIES, entries);\n\n\t\t\tBookmarksEntry entry = ActionUtil.getEntry(renderRequest);\n\n\t\t\trenderRequest.setAttribute(BookmarksWebKeys.BOOKMARKS_ENTRY, entry);\n\n\t\t\tList<BookmarksFolder> folders = ActionUtil.getFolders(\n\t\t\t\trenderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tBookmarksWebKeys.BOOKMARKS_FOLDERS, folders);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/bookmarks/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn \"/bookmarks/move_entries.jsp\";\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tActionUtil.getFolder(renderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tBookmarksWebKeys.BOOKMARKS_PORTLET_TOOLBAR_CONTRIBUTOR,\n\t\t\t\t_bookmarksPortletToolbarContributor);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchFolderException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/bookmarks/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn \"/bookmarks/view.jsp\";\n\t}","id":1696,"modified_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tBookmarksFolder folder = ActionUtil.getFolder(renderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tBookmarksWebKeys.BOOKMARKS_FOLDER, folder);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tBookmarksWebKeys.BOOKMARKS_PORTLET_TOOLBAR_CONTRIBUTOR,\n\t\t\t\t_bookmarksPortletToolbarContributor);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchFolderException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/bookmarks/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn \"/bookmarks/view.jsp\";\n\t}","commit_id":"69c39653c4c0b9041d6f15cf19f6afd9de2aaf70","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getFileEntries(PortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\tgetFileEntries(request);\n\t}","id":1697,"modified_method":"public static List<FileEntry> getFileEntries(PortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\treturn getFileEntries(request);\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Repository getRepository(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong repositoryId = ParamUtil.getLong(request, \"repositoryId\");\n\n\t\tRepository repository = null;\n\n\t\tif (repositoryId > 0) {\n\t\t\trepository = RepositoryServiceUtil.getRepository(repositoryId);\n\t\t}\n\t\telse {\n\t\t\tDLPermission.check(\n\t\t\t\tthemeDisplay.getPermissionChecker(),\n\t\t\t\tthemeDisplay.getScopeGroupId(), ActionKeys.VIEW);\n\t\t}\n\n\t\trequest.setAttribute(WebKeys.DOCUMENT_LIBRARY_REPOSITORY, repository);\n\n\t\treturn repository;\n\t}","id":1698,"modified_method":"public static Repository getRepository(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong repositoryId = ParamUtil.getLong(request, \"repositoryId\");\n\n\t\tRepository repository = null;\n\n\t\tif (repositoryId > 0) {\n\t\t\trepository = RepositoryServiceUtil.getRepository(repositoryId);\n\t\t}\n\t\telse {\n\t\t\tDLPermission.check(\n\t\t\t\tthemeDisplay.getPermissionChecker(),\n\t\t\t\tthemeDisplay.getScopeGroupId(), ActionKeys.VIEW);\n\t\t}\n\n\t\treturn repository;\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getFolders(PortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\tgetFolders(request);\n\t}","id":1699,"modified_method":"public static List<Folder> getFolders(PortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\treturn getFolders(request);\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static FileShortcut getFileShortcut(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tlong fileShortcutId = ParamUtil.getLong(request, \"fileShortcutId\");\n\n\t\tFileShortcut fileShortcut = null;\n\n\t\tif (fileShortcutId > 0) {\n\t\t\tfileShortcut = DLAppServiceUtil.getFileShortcut(fileShortcutId);\n\t\t}\n\n\t\trequest.setAttribute(\n\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_SHORTCUT, fileShortcut);\n\n\t\treturn fileShortcut;\n\t}","id":1700,"modified_method":"public static FileShortcut getFileShortcut(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tlong fileShortcutId = ParamUtil.getLong(request, \"fileShortcutId\");\n\n\t\tFileShortcut fileShortcut = null;\n\n\t\tif (fileShortcutId > 0) {\n\t\t\tfileShortcut = DLAppServiceUtil.getFileShortcut(fileShortcutId);\n\t\t}\n\n\t\treturn fileShortcut;\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getFileShortcuts(PortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\tgetFileShortcuts(request);\n\t}","id":1701,"modified_method":"public static List<FileShortcut> getFileShortcuts(\n\t\t\tPortletRequest portletRequest)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\treturn getFileShortcuts(request);\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getFileEntries(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tList<FileEntry> fileEntries = new ArrayList<>();\n\n\t\tlong[] fileEntryIds = ParamUtil.getLongValues(\n\t\t\trequest, \"rowIdsFileEntry\");\n\n\t\tfor (long fileEntryId : fileEntryIds) {\n\t\t\ttry {\n\t\t\t\tFileEntry fileEntry = DLAppServiceUtil.getFileEntry(\n\t\t\t\t\tfileEntryId);\n\n\t\t\t\tfileEntries.add(fileEntry);\n\t\t\t}\n\t\t\tcatch (NoSuchFileEntryException nsfee) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(nsfee, nsfee);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trequest.setAttribute(\n\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_ENTRIES, fileEntries);\n\t}","id":1702,"modified_method":"public static List<FileEntry> getFileEntries(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tList<FileEntry> fileEntries = new ArrayList<>();\n\n\t\tlong[] fileEntryIds = ParamUtil.getLongValues(\n\t\t\trequest, \"rowIdsFileEntry\");\n\n\t\tfor (long fileEntryId : fileEntryIds) {\n\t\t\ttry {\n\t\t\t\tFileEntry fileEntry = DLAppServiceUtil.getFileEntry(\n\t\t\t\t\tfileEntryId);\n\n\t\t\t\tfileEntries.add(fileEntry);\n\t\t\t}\n\t\t\tcatch (NoSuchFileEntryException nsfee) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(nsfee, nsfee);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fileEntries;\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static FileEntry getFileEntry(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tlong fileEntryId = ParamUtil.getLong(request, \"fileEntryId\");\n\n\t\tFileEntry fileEntry = null;\n\n\t\tif (fileEntryId > 0) {\n\t\t\tfileEntry = DLAppServiceUtil.getFileEntry(fileEntryId);\n\t\t}\n\n\t\trequest.setAttribute(WebKeys.DOCUMENT_LIBRARY_FILE_ENTRY, fileEntry);\n\n\t\tString version = ParamUtil.getString(request, \"version\");\n\n\t\tif (fileEntry == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tFileVersion fileVersion = null;\n\n\t\tif (Validator.isNotNull(version)) {\n\t\t\tfileVersion = fileEntry.getFileVersion(version);\n\n\t\t\trequest.setAttribute(\n\t\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_VERSION, fileVersion);\n\t\t}\n\t\telse {\n\t\t\tfileVersion = fileEntry.getFileVersion();\n\t\t}\n\n\t\tif (RawMetadataProcessorUtil.isSupported(fileVersion)) {\n\t\t\tRawMetadataProcessorUtil.generateMetadata(fileVersion);\n\t\t}\n\n\t\tString cmd = ParamUtil.getString(request, Constants.CMD);\n\n\t\tif (fileEntry.isInTrash() && !cmd.equals(Constants.MOVE_FROM_TRASH)) {\n\t\t\tthrow new NoSuchFileEntryException(\n\t\t\t\t\"{fileEntryId=\" + fileEntryId + \"}\");\n\t\t}\n\n\t\treturn fileEntry;\n\t}","id":1703,"modified_method":"public static FileEntry getFileEntry(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tlong fileEntryId = ParamUtil.getLong(request, \"fileEntryId\");\n\n\t\tFileEntry fileEntry = null;\n\n\t\tif (fileEntryId > 0) {\n\t\t\tfileEntry = DLAppServiceUtil.getFileEntry(fileEntryId);\n\t\t}\n\n\t\tif (fileEntry == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tString cmd = ParamUtil.getString(request, Constants.CMD);\n\n\t\tif (fileEntry.isInTrash() && !cmd.equals(Constants.MOVE_FROM_TRASH)) {\n\t\t\tthrow new NoSuchFileEntryException(\n\t\t\t\t\"{fileEntryId=\" + fileEntryId + \"}\");\n\t\t}\n\n\t\treturn fileEntry;\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getFileShortcuts(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tlong[] fileShortcutIds = ParamUtil.getLongValues(\n\t\t\trequest, \"rowIdsDLFileShortcut\");\n\n\t\tList<FileShortcut> fileShortcuts = new ArrayList<>();\n\n\t\tfor (long fileShortcutId : fileShortcutIds) {\n\t\t\tif (fileShortcutId > 0) {\n\t\t\t\tfileShortcuts.add(\n\t\t\t\t\tDLAppServiceUtil.getFileShortcut(fileShortcutId));\n\t\t\t}\n\t\t}\n\n\t\trequest.setAttribute(\n\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_SHORTCUTS, fileShortcuts);\n\t}","id":1704,"modified_method":"public static List<FileShortcut> getFileShortcuts(\n\t\t\tHttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tlong[] fileShortcutIds = ParamUtil.getLongValues(\n\t\t\trequest, \"rowIdsDLFileShortcut\");\n\n\t\tList<FileShortcut> fileShortcuts = new ArrayList<>();\n\n\t\tfor (long fileShortcutId : fileShortcutIds) {\n\t\t\tif (fileShortcutId > 0) {\n\t\t\t\tfileShortcuts.add(\n\t\t\t\t\tDLAppServiceUtil.getFileShortcut(fileShortcutId));\n\t\t\t}\n\t\t}\n\n\t\treturn fileShortcuts;\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Folder getFolder(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong folderId = ParamUtil.getLong(request, \"folderId\");\n\n\t\tboolean ignoreRootFolder = ParamUtil.getBoolean(\n\t\t\trequest, \"ignoreRootFolder\");\n\n\t\tif ((folderId <= 0) && !ignoreRootFolder) {\n\t\t\tPortletDisplay portletDisplay = themeDisplay.getPortletDisplay();\n\n\t\t\tString portletId = portletDisplay.getId();\n\n\t\t\tPortletPreferences portletPreferences =\n\t\t\t\tPortletPreferencesFactoryUtil.getPortletPreferences(\n\t\t\t\t\trequest, portletId);\n\n\t\t\tfolderId = GetterUtil.getLong(\n\t\t\t\tportletPreferences.getValue(\"rootFolderId\", null));\n\t\t}\n\n\t\tFolder folder = null;\n\n\t\tif (folderId > 0) {\n\t\t\tfolder = DLAppServiceUtil.getFolder(folderId);\n\n\t\t\tif (folder.getModel() instanceof DLFolder) {\n\t\t\t\tDLFolder dlFolder = (DLFolder)folder.getModel();\n\n\t\t\t\tif (dlFolder.isInTrash()) {\n\t\t\t\t\tthrow new NoSuchFolderException(\n\t\t\t\t\t\t\"{folderId=\" + folderId + \"}\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tDLPermission.check(\n\t\t\t\tthemeDisplay.getPermissionChecker(),\n\t\t\t\tthemeDisplay.getScopeGroupId(), ActionKeys.VIEW);\n\t\t}\n\n\t\trequest.setAttribute(WebKeys.DOCUMENT_LIBRARY_FOLDER, folder);\n\n\t\treturn folder;\n\t}","id":1705,"modified_method":"public static Folder getFolder(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong folderId = ParamUtil.getLong(request, \"folderId\");\n\n\t\tboolean ignoreRootFolder = ParamUtil.getBoolean(\n\t\t\trequest, \"ignoreRootFolder\");\n\n\t\tif ((folderId <= 0) && !ignoreRootFolder) {\n\t\t\tPortletDisplay portletDisplay = themeDisplay.getPortletDisplay();\n\n\t\t\tString portletId = portletDisplay.getId();\n\n\t\t\tPortletPreferences portletPreferences =\n\t\t\t\tPortletPreferencesFactoryUtil.getPortletPreferences(\n\t\t\t\t\trequest, portletId);\n\n\t\t\tfolderId = GetterUtil.getLong(\n\t\t\t\tportletPreferences.getValue(\"rootFolderId\", null));\n\t\t}\n\n\t\tFolder folder = null;\n\n\t\tif (folderId > 0) {\n\t\t\tfolder = DLAppServiceUtil.getFolder(folderId);\n\n\t\t\tif (folder.getModel() instanceof DLFolder) {\n\t\t\t\tDLFolder dlFolder = (DLFolder)folder.getModel();\n\n\t\t\t\tif (dlFolder.isInTrash()) {\n\t\t\t\t\tthrow new NoSuchFolderException(\n\t\t\t\t\t\t\"{folderId=\" + folderId + \"}\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tDLPermission.check(\n\t\t\t\tthemeDisplay.getPermissionChecker(),\n\t\t\t\tthemeDisplay.getScopeGroupId(), ActionKeys.VIEW);\n\t\t}\n\n\t\treturn folder;\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void getFolders(HttpServletRequest request) throws Exception {\n\t\tlong[] folderIds = ParamUtil.getLongValues(request, \"rowIdsFolder\");\n\n\t\tList<Folder> folders = new ArrayList<>();\n\n\t\tfor (long folderId : folderIds) {\n\t\t\ttry {\n\t\t\t\tFolder folder = DLAppServiceUtil.getFolder(folderId);\n\n\t\t\t\tfolders.add(folder);\n\t\t\t}\n\t\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(nsfe, nsfe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trequest.setAttribute(WebKeys.DOCUMENT_LIBRARY_FOLDERS, folders);\n\t}","id":1706,"modified_method":"public static List<Folder> getFolders(HttpServletRequest request)\n\t\tthrows Exception {\n\n\t\tlong[] folderIds = ParamUtil.getLongValues(request, \"rowIdsFolder\");\n\n\t\tList<Folder> folders = new ArrayList<>();\n\n\t\tfor (long folderId : folderIds) {\n\t\t\ttry {\n\t\t\t\tFolder folder = DLAppServiceUtil.getFolder(folderId);\n\n\t\t\t\tfolders.add(folder);\n\t\t\t}\n\t\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(nsfe, nsfe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn folders;\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tActionUtil.getFileShortcut(renderRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchFileShortcutException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/document_library/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn \"/document_library/edit_file_shortcut.jsp\";\n\t}","id":1707,"modified_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tFileShortcut fileShortcut = ActionUtil.getFileShortcut(\n\t\t\t\trenderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_SHORTCUT, fileShortcut);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchFileShortcutException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/document_library/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn \"/document_library/edit_file_shortcut.jsp\";\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tActionUtil.getRepository(renderRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchRepositoryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/document_library/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn \"/document_library/edit_repository.jsp\";\n\t}","id":1708,"modified_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tRepository repository = ActionUtil.getRepository(renderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tWebKeys.DOCUMENT_LIBRARY_REPOSITORY, repository);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchRepositoryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/document_library/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn \"/document_library/edit_repository.jsp\";\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tActionUtil.getFileEntry(renderRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchFileEntryException ||\n\t\t\t\te instanceof NoSuchFileVersionException ||\n\t\t\t\te instanceof NoSuchRepositoryEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/document_library/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn getPath();\n\t}","id":1709,"modified_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tFileEntry fileEntry = ActionUtil.getFileEntry(renderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_ENTRY, fileEntry);\n\n\t\t\tFileVersion fileVersion = ActionUtil.getFileVersion(\n\t\t\t\tfileEntry, renderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_VERSION, fileVersion);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchFileEntryException ||\n\t\t\t\te instanceof NoSuchFileVersionException ||\n\t\t\t\te instanceof NoSuchRepositoryEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/document_library/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn getPath();\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tActionUtil.getFolder(renderRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchFolderException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/document_library/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn getPath();\n\t}","id":1710,"modified_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tFolder folder = ActionUtil.getFolder(renderRequest);\n\n\t\t\trenderRequest.setAttribute(WebKeys.DOCUMENT_LIBRARY_FOLDER, folder);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchFolderException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/document_library/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn getPath();\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tActionUtil.getFileEntries(renderRequest);\n\t\t\tActionUtil.getFileEntry(renderRequest);\n\t\t\tActionUtil.getFileShortcuts(renderRequest);\n\t\t\tActionUtil.getFolders(renderRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchFileEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/document_library/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn \"/document_library/move_entries.jsp\";\n\t}","id":1711,"modified_method":"@Override\n\tpublic String render(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tList<FileEntry> fileEntries = ActionUtil.getFileEntries(\n\t\t\t\trenderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_ENTRIES, fileEntries);\n\n\t\t\tFileEntry fileEntry = ActionUtil.getFileEntry(renderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_ENTRY, fileEntry);\n\n\t\t\tFileVersion fileVersion = ActionUtil.getFileVersion(\n\t\t\t\tfileEntry, renderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_VERSION, fileVersion);\n\n\t\t\tList<FileShortcut> fileShortcuts = ActionUtil.getFileShortcuts(\n\t\t\t\trenderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tWebKeys.DOCUMENT_LIBRARY_FILE_ENTRIES, fileShortcuts);\n\n\t\t\tList<Folder> folders = ActionUtil.getFolders(renderRequest);\n\n\t\t\trenderRequest.setAttribute(\n\t\t\t\tWebKeys.DOCUMENT_LIBRARY_FOLDERS, folders);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchFileEntryException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(renderRequest, e.getClass());\n\n\t\t\t\treturn \"/document_library/error.jsp\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PortletException(e);\n\t\t\t}\n\t\t}\n\n\t\treturn \"/document_library/move_entries.jsp\";\n\t}","commit_id":"2416ec2786bcc9f93deb7ea1d95cd00f724cf7c4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private String href() {\n\t\treturn ERXWOContext.ajaxActionUrl(context());\n\t}","id":1712,"modified_method":"private String href() {\n\t\treturn context().componentActionURL(WOApplication.application().componentRequestHandlerKey());\n\t}","commit_id":"2d87556c30539dd91d4f34654e52d690eca9c580","url":"https://github.com/wocommunity/wonder"},{"original_method":"public String ref() {\n    \treturn isAjax() ? ERXWOContext.ajaxActionUrl(context()) : null;\n    }","id":1713,"modified_method":"public String ref() {\n    \treturn isAjax() ? context().componentActionURL(WOApplication.application().componentRequestHandlerKey()) : null;\n    }","commit_id":"2d87556c30539dd91d4f34654e52d690eca9c580","url":"https://github.com/wocommunity/wonder"},{"original_method":"public String href() {\n    \tif (hasBinding(Bindings.action)) {\n    \t\treturn ERXWOContext.ajaxActionUrl(context());\n    \t} else if (hasBinding(Bindings.directActionName)) {\n    \t\tNSDictionary queryDictionary = hasBinding(Bindings.queryDictionary) ? queryDictionary() : null;\n    \t\treturn context().directActionURLForActionNamed(directActionName(), queryDictionary);\n    \t} else return \"#\";\n    }","id":1714,"modified_method":"public String href() {\n    \tif (hasBinding(Bindings.action)) {\n    \t\treturn context().componentActionURL(WOApplication.application().componentRequestHandlerKey());\n    \t} else if (hasBinding(Bindings.directActionName)) {\n    \t\tNSDictionary queryDictionary = hasBinding(Bindings.queryDictionary) ? queryDictionary() : null;\n    \t\treturn context().directActionURLForActionNamed(directActionName(), queryDictionary);\n    \t} else return \"#\";\n    }","commit_id":"2d87556c30539dd91d4f34654e52d690eca9c580","url":"https://github.com/wocommunity/wonder"},{"original_method":"public String href() {\n\t\tif (hasBinding(Bindings.action)) {\n\t\t\treturn ERXWOContext.ajaxActionUrl(context());\n\t\t} else if (hasBinding(Bindings.directActionName)) {\n\t\t\tNSDictionary queryDictionary = hasBinding(Bindings.queryDictionary) ? queryDictionary() : null;\n\t\t\treturn context().directActionURLForActionNamed(directActionName(), queryDictionary);\n\t\t} else return \"#\";\n\t}","id":1715,"modified_method":"public String href() {\n\t\tif (hasBinding(Bindings.action)) {\n    \t\treturn context().componentActionURL(WOApplication.application().componentRequestHandlerKey());\n\t\t} else if (hasBinding(Bindings.directActionName)) {\n\t\t\tNSDictionary queryDictionary = hasBinding(Bindings.queryDictionary) ? queryDictionary() : null;\n\t\t\treturn context().directActionURLForActionNamed(directActionName(), queryDictionary);\n\t\t} else return \"#\";\n\t}","commit_id":"2d87556c30539dd91d4f34654e52d690eca9c580","url":"https://github.com/wocommunity/wonder"},{"original_method":"public DeleteSnapshotResponseType delete( DeleteSnapshotType request ) throws EucalyptusCloudException {\n    DeleteSnapshotResponseType reply = ( DeleteSnapshotResponseType ) request.getReply( );\n    reply.set_return( false );\n    Context ctx = Contexts.lookup( );\n    EntityWrapper<Snapshot> db = EntityWrapper.get( Snapshot.class );\n    try {\n      Snapshot snap = db.getUnique( Snapshot.named( ctx.getUserFullName( ) , request.getSnapshotId( ) ) );\n      if ( !State.EXTANT.equals( snap.getState( ) ) ) {\n        db.rollback( );\n        reply.set_return( false );\n        return reply;\n      }\n      if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_SNAPSHOT, request.getSnapshotId( ), snap.getOwner( ) ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to delete snapshot \" + request.getSnapshotId( ) + \" by \" + ctx.getUser( ).getName( ) );\n      }\n      db.delete( snap );\n//      db.getSession( ).flush( );\n      DeleteStorageSnapshotResponseType scReply = StorageUtil.send( snap.getCluster( ), new DeleteStorageSnapshotType( snap.getDisplayName( ) ) );\n      if ( scReply.get_return( ) ) {\n        StorageUtil.dispatchAll( new DeleteStorageSnapshotType( snap.getDisplayName( ) ) );\n        db.commit( );\n        EventRecord.here( SnapshotManager.class, EventClass.SNAPSHOT, EventType.SNAPSHOT_DELETE, \"user=\" + snap.getOwner( ),\n                          \"snapshot=\" + snap.getDisplayName( ) ).info( );\n      } else {\n        db.rollback( );\n        throw new EucalyptusCloudException( \"Unable to delete snapshot.\" );\n      }\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Error deleting storage volume:\" + e.getMessage( ), e );\n    }\n    reply.set_return( true );\n    return reply;\n  }","id":1716,"modified_method":"public DeleteSnapshotResponseType delete( DeleteSnapshotType request ) throws EucalyptusCloudException {\n    DeleteSnapshotResponseType reply = ( DeleteSnapshotResponseType ) request.getReply( );\n    reply.set_return( false );\n    Context ctx = Contexts.lookup( );\n    EntityWrapper<Snapshot> db = EntityWrapper.get( Snapshot.class );\n    try {\n      Snapshot snap = db.getUnique( Snapshot.named( ctx.getUserFullName( ) , request.getSnapshotId( ) ) );\n      if ( !State.EXTANT.equals( snap.getState( ) ) ) {\n        db.rollback( );\n        reply.set_return( false );\n        return reply;\n      }\n      if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_SNAPSHOT, request.getSnapshotId( ), snap.getOwner( ) ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to delete snapshot \" + request.getSnapshotId( ) + \" by \" + ctx.getUser( ).getName( ) );\n      }\n      db.delete( snap );\n//      db.getSession( ).flush( );\n      Service sc = null;\n      try {\n        sc = StorageUtil.getActiveSc( snap.getCluster( ) );\n      } catch ( NoSuchElementException e ) {\n        throw new EucalyptusCloudException( \"Failed to find the storage controller information for volume: \"\n                                            + snap.getDisplayName( ) + \" at \" + snap.getCluster( ), e );\n      }\n\n      DeleteStorageSnapshotResponseType scReply = sc.getDispatcher( ).send( new DeleteStorageSnapshotType( snap.getDisplayName( ) ) );\n      if ( scReply.get_return( ) ) {\n        StorageUtil.dispatchAll( new DeleteStorageSnapshotType( snap.getDisplayName( ) ) );\n        db.commit( );\n        EventRecord.here( SnapshotManager.class, EventClass.SNAPSHOT, EventType.SNAPSHOT_DELETE, \"user=\" + snap.getOwner( ),\n                          \"snapshot=\" + snap.getDisplayName( ) ).info( );\n      } else {\n        db.rollback( );\n        throw new EucalyptusCloudException( \"Unable to delete snapshot.\" );\n      }\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Error deleting storage volume:\" + e.getMessage( ), e );\n    }\n    reply.set_return( true );\n    return reply;\n  }","commit_id":"2d40c8b21caa1270971e98cd0d179fe634688222","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public CreateSnapshotResponseType create( CreateSnapshotType request ) throws EucalyptusCloudException {    \n    Context ctx = Contexts.lookup( );\n    String action = PolicySpec.requestToAction( request );\n    if ( !ctx.hasAdministrativePrivileges( ) ) {\n      if ( !Permissions.isAuthorized( PolicySpec.EC2_RESOURCE_SNAPSHOT, \"\", ctx.getAccount( ), action, ctx.getUser( ) ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to create snapshot by \" + ctx.getUser( ).getName( ) );\n      }\n      if ( !Permissions.canAllocate( PolicySpec.EC2_RESOURCE_SNAPSHOT, \"\", action, ctx.getUser( ), 1L ) ) {\n        throw new EucalyptusCloudException( \"Quota exceeded in creating snapshot by \" + ctx.getUser( ).getName( ) );\n      }\n    }\n    EntityWrapper<Snapshot> db = EntityWrapper.get( Snapshot.class );\n    Volume vol = db.recast( Volume.class ).getUnique( Volume.named( ctx.getUserFullName( ), request.getVolumeId( ) ) );\n    Service sc = null;\n    try {\n      sc = StorageUtil.getActiveSc( vol.getCluster( ) );\n    } catch ( NoSuchElementException e ) {\n      throw new EucalyptusCloudException( \"Failed to find the storage controller information for volume: \"\n                                          + vol.getDisplayName( ) + \" at \" + vol.getCluster( ), e );\n    }\n    \n    if ( !vol.isReady( ) ) {\n      //temporary workaround to update the volume state.\n      DescribeStorageVolumesType descVols = new DescribeStorageVolumesType( Lists.newArrayList( vol.getDisplayName( ) ) );\n      try {\n        DescribeStorageVolumesResponseType volState = ServiceDispatcher.lookup( sc.getServiceConfiguration( ) )\n                                                                       .send( descVols );\n        if ( !volState.getVolumeSet( ).isEmpty( ) ) {\n          vol.setMappedState( volState.getVolumeSet( ).get( 0 ).getStatus( ) );\n        } else {\n          throw new EucalyptusCloudException( \"Failed to update the volume state \" + request.getVolumeId( ) + \" not yet ready\" );\n        }\n      } catch ( Exception e1 ) {\n        LOG.debug( e1, e1 );\n        db.rollback( );\n        throw new EucalyptusCloudException( \"Failed to update the volume state \" + request.getVolumeId( ) + \" not yet ready\" );\n      }\n      if ( !vol.isReady( ) ) {\n        db.rollback( );\n        throw new EucalyptusCloudException( \"Volume \" + request.getVolumeId( ) + \" not yet ready\" );\n      }\n    }\n    \n    String newId = null;\n    Snapshot snap = null;\n    while ( true ) {\n      newId = Crypto.generateId( ctx.getUserFullName( ).getUniqueId( ), ID_PREFIX );\n      try {\n        db.getUnique( Snapshot.named( newId ) );\n      } catch ( EucalyptusCloudException e ) {\n        snap = new Snapshot( ctx.getUserFullName( ), newId, vol.getDisplayName( ) );\n        db.add( snap );\n        break;\n      }\n    }\n    \n    CreateStorageSnapshotType scRequest = new CreateStorageSnapshotType( vol.getDisplayName( ), newId );\n    CreateStorageSnapshotResponseType scReply = null;\n    try {\n      scReply = StorageUtil.send( sc.getServiceConfiguration().getName(), scRequest );\n      snap.setCluster( sc.getServiceConfiguration().getName( ) );\n      snap.setMappedState( scReply.getStatus( ) );\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Error calling CreateStorageSnapshot:\" + e.getMessage( ), e );\n    }\n    db.commit( );\n    EventRecord.here( SnapshotManager.class, EventClass.SNAPSHOT, EventType.SNAPSHOT_CREATE, \"user=\" + snap.getOwner( ),\n                      \"snapshot=\" + snap.getDisplayName( ),\n                      \"volume=\" + snap.getParentVolume( ) ).info( );\n    \n    CreateSnapshotResponseType reply = ( CreateSnapshotResponseType ) request.getReply( );\n    edu.ucsb.eucalyptus.msgs.Snapshot snapMsg = snap.morph( new edu.ucsb.eucalyptus.msgs.Snapshot( ) );\n    snapMsg.setProgress( \"0%\" );\n    snapMsg.setOwnerId( snap.getOwnerAccountId( ) );\n    snapMsg.setVolumeSize( vol.getSize( ).toString( ) );\n    reply.setSnapshot( snapMsg );\n    return reply;\n  }","id":1717,"modified_method":"public CreateSnapshotResponseType create( CreateSnapshotType request ) throws EucalyptusCloudException {    \n    Context ctx = Contexts.lookup( );\n    String action = PolicySpec.requestToAction( request );\n    if ( !ctx.hasAdministrativePrivileges( ) ) {\n      if ( !Permissions.isAuthorized( PolicySpec.EC2_RESOURCE_SNAPSHOT, \"\", ctx.getAccount( ), action, ctx.getUser( ) ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to create snapshot by \" + ctx.getUser( ).getName( ) );\n      }\n      if ( !Permissions.canAllocate( PolicySpec.EC2_RESOURCE_SNAPSHOT, \"\", action, ctx.getUser( ), 1L ) ) {\n        throw new EucalyptusCloudException( \"Quota exceeded in creating snapshot by \" + ctx.getUser( ).getName( ) );\n      }\n    }\n    EntityWrapper<Snapshot> db = EntityWrapper.get( Snapshot.class );\n    Volume vol = db.recast( Volume.class ).getUnique( Volume.named( ctx.getUserFullName( ), request.getVolumeId( ) ) );\n    Service sc = null;\n    try {\n      sc = StorageUtil.getActiveSc( vol.getCluster( ) );\n    } catch ( NoSuchElementException e ) {\n      throw new EucalyptusCloudException( \"Failed to find the storage controller information for volume: \"\n                                          + vol.getDisplayName( ) + \" at \" + vol.getCluster( ), e );\n    }\n    \n    if ( !vol.isReady( ) ) {\n      //temporary workaround to update the volume state.\n      DescribeStorageVolumesType descVols = new DescribeStorageVolumesType( Lists.newArrayList( vol.getDisplayName( ) ) );\n      try {\n        DescribeStorageVolumesResponseType volState = ServiceDispatcher.lookup( sc.getServiceConfiguration( ) )\n                                                                       .send( descVols );\n        if ( !volState.getVolumeSet( ).isEmpty( ) ) {\n          vol.setMappedState( volState.getVolumeSet( ).get( 0 ).getStatus( ) );\n        } else {\n          throw new EucalyptusCloudException( \"Failed to update the volume state \" + request.getVolumeId( ) + \" not yet ready\" );\n        }\n      } catch ( Exception e1 ) {\n        LOG.debug( e1, e1 );\n        db.rollback( );\n        throw new EucalyptusCloudException( \"Failed to update the volume state \" + request.getVolumeId( ) + \" not yet ready\" );\n      }\n      if ( !vol.isReady( ) ) {\n        db.rollback( );\n        throw new EucalyptusCloudException( \"Volume \" + request.getVolumeId( ) + \" not yet ready\" );\n      }\n    }\n    \n    String newId = null;\n    Snapshot snap = null;\n    while ( true ) {\n      newId = Crypto.generateId( ctx.getUserFullName( ).getUniqueId( ), ID_PREFIX );\n      try {\n        db.getUnique( Snapshot.named( newId ) );\n      } catch ( EucalyptusCloudException e ) {\n        snap = new Snapshot( ctx.getUserFullName( ), newId, vol.getDisplayName( ) );\n        db.add( snap );\n        break;\n      }\n    }\n    \n    CreateStorageSnapshotType scRequest = new CreateStorageSnapshotType( vol.getDisplayName( ), newId );\n    CreateStorageSnapshotResponseType scReply = null;\n    try {\n      scReply = sc.getDispatcher( ).send( scRequest );\n      snap.setCluster( sc.getServiceConfiguration().getName( ) );\n      snap.setMappedState( scReply.getStatus( ) );\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Error calling CreateStorageSnapshot:\" + e.getMessage( ), e );\n    }\n    db.commit( );\n    EventRecord.here( SnapshotManager.class, EventClass.SNAPSHOT, EventType.SNAPSHOT_CREATE, \"user=\" + snap.getOwner( ),\n                      \"snapshot=\" + snap.getDisplayName( ),\n                      \"volume=\" + snap.getParentVolume( ) ).info( );\n    \n    CreateSnapshotResponseType reply = ( CreateSnapshotResponseType ) request.getReply( );\n    edu.ucsb.eucalyptus.msgs.Snapshot snapMsg = snap.morph( new edu.ucsb.eucalyptus.msgs.Snapshot( ) );\n    snapMsg.setProgress( \"0%\" );\n    snapMsg.setOwnerId( snap.getOwnerAccountId( ) );\n    snapMsg.setVolumeSize( vol.getSize( ).toString( ) );\n    reply.setSnapshot( snapMsg );\n    return reply;\n  }","commit_id":"2d40c8b21caa1270971e98cd0d179fe634688222","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DescribeSnapshotsResponseType describe( DescribeSnapshotsType request ) throws EucalyptusCloudException {\n    DescribeSnapshotsResponseType reply = ( DescribeSnapshotsResponseType ) request.getReply( );\n    Context ctx = Contexts.lookup( );\n    \n    EntityWrapper<Snapshot> db = EntityWrapper.get( Snapshot.class );\n    try {\n      List<Snapshot> snapshots = db.query( Snapshot.ownedBy( ctx.getUserFullName( ) ) );\n      \n      for ( Snapshot v : snapshots ) {\n        if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_SNAPSHOT, v.getDisplayName( ), v.getOwner( ) ) ) {\n          LOG.debug( \"Skip snapshot \" + v.getDisplayName( ) + \" due to access right\" );\n          continue;\n        }\n        DescribeStorageSnapshotsType scRequest = new DescribeStorageSnapshotsType( Lists.newArrayList( v.getDisplayName( ) ) );\n        if ( request.getSnapshotSet( ).isEmpty( ) || request.getSnapshotSet( ).contains( v.getDisplayName( ) ) ) {\n          try {\n            ServiceConfiguration sc = StorageUtil.getActiveSc( v.getCluster( ) ).getServiceConfiguration( );\n            DescribeStorageSnapshotsResponseType snapshotInfo = StorageUtil.send( sc.getName( ), scRequest );\n            for ( StorageSnapshot storageSnapshot : snapshotInfo.getSnapshotSet( ) ) {\n              v.setMappedState( storageSnapshot.getStatus( ) );\n              edu.ucsb.eucalyptus.msgs.Snapshot snapReply = v.morph( new edu.ucsb.eucalyptus.msgs.Snapshot( ) );\n              if ( storageSnapshot.getProgress( ) != null ) snapReply.setProgress( storageSnapshot.getProgress( ) );\n              snapReply.setVolumeId( storageSnapshot.getVolumeId( ) );\n              snapReply.setOwnerId( v.getOwnerAccountId( ) );\n              reply.getSnapshotSet( ).add( snapReply );\n            }\n          } catch ( NoSuchElementException e ) {\n            LOG.warn( \"Error getting snapshot information from the Storage Controller: \" + e );\n            LOG.debug( e, e );\n          } catch ( EucalyptusCloudException e ) {\n            LOG.warn( \"Error getting snapshot information from the Storage Controller: \" + e );\n            LOG.debug( e, e );\n          }\n        }\n      }\n      db.commit( );\n    } catch ( Throwable e ) {\n      db.rollback( );\n    }\n    return reply;\n  }","id":1718,"modified_method":"public DescribeSnapshotsResponseType describe( DescribeSnapshotsType request ) throws EucalyptusCloudException {\n    DescribeSnapshotsResponseType reply = ( DescribeSnapshotsResponseType ) request.getReply( );\n    Context ctx = Contexts.lookup( );\n    \n    EntityWrapper<Snapshot> db = EntityWrapper.get( Snapshot.class );\n    try {\n      List<Snapshot> snapshots = db.query( Snapshot.ownedBy( ctx.getUserFullName( ) ) );\n      \n      for ( Snapshot v : snapshots ) {\n        if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_SNAPSHOT, v.getDisplayName( ), v.getOwner( ) ) ) {\n          LOG.debug( \"Skip snapshot \" + v.getDisplayName( ) + \" due to access right\" );\n          continue;\n        }\n        DescribeStorageSnapshotsType scRequest = new DescribeStorageSnapshotsType( Lists.newArrayList( v.getDisplayName( ) ) );\n        if ( request.getSnapshotSet( ).isEmpty( ) || request.getSnapshotSet( ).contains( v.getDisplayName( ) ) ) {\n          try {\n            Service sc = StorageUtil.getActiveSc( v.getCluster( ) );\n            DescribeStorageSnapshotsResponseType snapshotInfo = sc.getDispatcher( ).send( scRequest );\n            for ( StorageSnapshot storageSnapshot : snapshotInfo.getSnapshotSet( ) ) {\n              v.setMappedState( storageSnapshot.getStatus( ) );\n              edu.ucsb.eucalyptus.msgs.Snapshot snapReply = v.morph( new edu.ucsb.eucalyptus.msgs.Snapshot( ) );\n              if ( storageSnapshot.getProgress( ) != null ) snapReply.setProgress( storageSnapshot.getProgress( ) );\n              snapReply.setVolumeId( storageSnapshot.getVolumeId( ) );\n              snapReply.setOwnerId( v.getOwnerAccountId( ) );\n              reply.getSnapshotSet( ).add( snapReply );\n            }\n          } catch ( NoSuchElementException e ) {\n            LOG.warn( \"Error getting snapshot information from the Storage Controller: \" + e );\n            LOG.debug( e, e );\n          } catch ( EucalyptusCloudException e ) {\n            LOG.warn( \"Error getting snapshot information from the Storage Controller: \" + e );\n            LOG.debug( e, e );\n          }\n        }\n      }\n      db.commit( );\n    } catch ( Throwable e ) {\n      db.rollback( );\n    }\n    return reply;\n  }","commit_id":"2d40c8b21caa1270971e98cd0d179fe634688222","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DeleteVolumeResponseType DeleteVolume( DeleteVolumeType request ) throws EucalyptusCloudException {\n    DeleteVolumeResponseType reply = ( DeleteVolumeResponseType ) request.getReply( );\n    Context ctx = Contexts.lookup( );\n    reply.set_return( false );\n    \n    EntityWrapper<Volume> db = EntityWrapper.get( Volume.class );\n    boolean reallyFailed = false;\n    try {\n      Volume vol = db.getUnique( Volume.named( ctx.getUserFullName( ), request.getVolumeId( ) ) );\n      if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_VOLUME, request.getVolumeId( ), vol.getOwner( ) ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to delete volume by \" + ctx.getUser( ).getName( ) );\n      }\n      for ( VmInstance vm : VmInstances.getInstance( ).listValues( ) ) {\n        try {\n          vm.lookupVolumeAttachment( request.getVolumeId( ) );\n          db.rollback( );\n          return reply;\n        } catch ( NoSuchElementException ex ) {\n          /** no such volume attached, move along... **/\n        }\n      }\n      if ( State.FAIL.equals( vol.getState( ) ) ) {\n        db.delete( vol );\n        db.commit( );\n        return reply;\n      }\n      DeleteStorageVolumeResponseType scReply = StorageUtil.send( vol.getCluster( ), new DeleteStorageVolumeType( vol.getDisplayName( ) ) );\n      if ( scReply.get_return( ) ) {\n        vol.setState( State.ANNIHILATING );\n        db.commit( );\n        EventRecord.here( VolumeManager.class, EventClass.VOLUME, EventType.VOLUME_DELETE ).withDetails( vol.getOwner( ).toString( ), vol.getDisplayName( ) , \"size\", vol.getSize( ).toString( ) )\n                          .withDetails( \"cluster\", vol.getCluster( ) ).withDetails( \"snapshot\", vol.getParentSnapshot( ) ).info( );\n      } else {\n        reallyFailed = true;\n        throw new EucalyptusCloudException( \"Storage Controller returned false:  Contact the administrator to report the problem.\" );\n      }\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      if ( reallyFailed ) {\n        throw e;\n      } else {\n        return reply;\n      }\n    }\n    reply.set_return( true );\n    return reply;\n  }","id":1719,"modified_method":"public DeleteVolumeResponseType DeleteVolume( DeleteVolumeType request ) throws EucalyptusCloudException {\n    DeleteVolumeResponseType reply = ( DeleteVolumeResponseType ) request.getReply( );\n    Context ctx = Contexts.lookup( );\n    reply.set_return( false );\n    \n    EntityWrapper<Volume> db = EntityWrapper.get( Volume.class );\n    boolean reallyFailed = false;\n    try {\n      Volume vol = db.getUnique( Volume.named( ctx.getUserFullName( ), request.getVolumeId( ) ) );\n      if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_VOLUME, request.getVolumeId( ), vol.getOwner( ) ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to delete volume by \" + ctx.getUser( ).getName( ) );\n      }\n      for ( VmInstance vm : VmInstances.getInstance( ).listValues( ) ) {\n        try {\n          vm.lookupVolumeAttachment( request.getVolumeId( ) );\n          db.rollback( );\n          return reply;\n        } catch ( NoSuchElementException ex ) {\n          /** no such volume attached, move along... **/\n        }\n      }\n      if ( State.FAIL.equals( vol.getState( ) ) ) {\n        db.delete( vol );\n        db.commit( );\n        return reply;\n      }\n      Service sc;\n      try {\n        sc = StorageUtil.getActiveSc( vol.getCluster( ) );\n      } catch ( NoSuchElementException ex ) {\n        LOG.error( ex, ex );\n        throw new EucalyptusCloudException( \"Failed to lookup SC for volume: \" + vol, ex );\n      }\n      DeleteStorageVolumeResponseType scReply = sc.getDispatcher( ).send( new DeleteStorageVolumeType( vol.getDisplayName( ) ) );\n      if ( scReply.get_return( ) ) {\n        vol.setState( State.ANNIHILATING );\n        db.commit( );\n        EventRecord.here( VolumeManager.class, EventClass.VOLUME, EventType.VOLUME_DELETE ).withDetails( vol.getOwner( ).toString( ), vol.getDisplayName( ),\n                                                                                                         \"size\", vol.getSize( ).toString( ) )\n                          .withDetails( \"cluster\", vol.getCluster( ) ).withDetails( \"snapshot\", vol.getParentSnapshot( ) ).info( );\n      } else {\n        reallyFailed = true;\n        throw new EucalyptusCloudException( \"Storage Controller returned false:  Contact the administrator to report the problem.\" );\n      }\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      if ( reallyFailed ) {\n        throw e;\n      } else {\n        return reply;\n      }\n    }\n    reply.set_return( true );\n    return reply;\n  }","commit_id":"2d40c8b21caa1270971e98cd0d179fe634688222","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public AttachVolumeResponseType AttachVolume( AttachVolumeType request ) throws EucalyptusCloudException {\n    AttachVolumeResponseType reply = ( AttachVolumeResponseType ) request.getReply( );\n    Context ctx = Contexts.lookup( );\n    \n    if ( request.getDevice( ) == null || request.getDevice( ).endsWith( \"sda\" ) ) {\n      throw new EucalyptusCloudException( \"Invalid device name specified: \" + request.getDevice( ) );\n    }\n    VmInstance vm = null;\n    try {\n      vm = VmInstances.getInstance( ).lookup( request.getInstanceId( ) );\n    } catch ( NoSuchElementException e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( \"Instance does not exist: \" + request.getInstanceId( ) );\n    }\n    if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_INSTANCE, request.getInstanceId( ), vm.getOwner( ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to attach volume to instance \" + request.getInstanceId( ) + \" by \" + ctx.getUser( ).getName( ) );\n    }\n    Cluster cluster = null;\n    try {\n      cluster = Clusters.getInstance( ).lookup( vm.getPlacement( ) );\n    } catch ( NoSuchElementException e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( \"Cluster does not exist: \" + vm.getPlacement( ) );\n    }\n    final String deviceName = request.getDevice( );\n    final String volumeId = request.getVolumeId( );\n    try {\n      vm.lookupVolumeAttachment( new Predicate<AttachedVolume>( ) {\n        @Override\n        public boolean apply( AttachedVolume arg0 ) {\n          return arg0.getDevice( ).replaceAll( \"unknown,requested:\", \"\" ).equals( deviceName );\n        }} );\n      throw new EucalyptusCloudException( \"Already have a device attached to: \" + request.getDevice( ) );\n    } catch ( NoSuchElementException ex1 ) {\n      /** no attachment **/\n    }\n    for ( VmInstance iter : VmInstances.getInstance( ).listValues( ) ) {\n      try {\n        iter.lookupVolumeAttachment( volumeId );\n        throw new EucalyptusCloudException( \"Volume already attached: \" + request.getVolumeId( ) );\n      } catch ( NoSuchElementException ex ) {\n        /** no attachment **/\n      }\n    }\n    \n    EntityWrapper<Volume> db = EntityWrapper.get( Volume.class );\n    Volume volume = null;\n    try {\n      volume = db.getUnique( Volume.named( ctx.getUserFullName( ), request.getVolumeId( ) ) );\n      if ( volume.getRemoteDevice( ) == null ) {\n        StorageUtil.getVolumeReply( new HashMap<String,AttachedVolume>(), Lists.newArrayList( volume ) );\n      }\n      db.commit( );\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Volume does not exist: \" + request.getVolumeId( ) );\n    }\n    if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_VOLUME, request.getVolumeId( ), volume.getOwner( ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to attach volume \" + request.getVolumeId( ) + \" by \" + ctx.getUser( ).getName( ) );\n    }\n    ServiceConfiguration sc;\n    try {\n      sc = StorageUtil.getActiveSc( volume.getCluster( ) ).getServiceConfiguration( );\n    } catch ( NoSuchElementException ex ) {\n      LOG.error( ex , ex );\n      throw new EucalyptusCloudException( \"Failed to lookup SC for volume: \" + volume, ex );\n    }\n    ServiceConfiguration scVm;\n    try {\n      scVm = StorageUtil.getActiveSc( cluster.getName( ) ).getServiceConfiguration( );\n    } catch ( Exception ex ) {\n      LOG.error( ex , ex );\n      throw new EucalyptusCloudException( \"Failed to lookup SC for cluster: \" + cluster, ex );\n    }\n    if ( !sc.equals( scVm ) ) {\n      throw new EucalyptusCloudException( \"Can only attach volumes in the same cluster: \" + request.getVolumeId( ) );\n    } else if ( \"invalid\".equals( volume.getRemoteDevice( ) ) ) {\n      throw new EucalyptusCloudException( \"Volume is not yet available: \" + request.getVolumeId( ) );\n    }\n\n    AttachStorageVolumeResponseType scAttachResponse;\n    try {\n      scAttachResponse = StorageUtil.send( sc.getName( ), new AttachStorageVolumeType( cluster.getNode( vm.getServiceTag( ) ).getIqn( ), volume.getDisplayName( ) ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e.getMessage( ) );\n    }\n    request.setRemoteDevice( scAttachResponse.getRemoteDeviceString( ) );\n    AttachedVolume attachVol = new AttachedVolume( volume.getDisplayName( ), vm.getInstanceId( ), request.getDevice( ), request.getRemoteDevice( ) );\n    attachVol.setStatus( \"attaching\" );\n    Callbacks.newRequest( new VolumeAttachCallback( request, attachVol ) ).dispatch( cluster.getServiceEndpoint( ) );\n    \n    vm.addVolumeAttachment( attachVol );\n    EventRecord.here( VolumeManager.class, EventClass.VOLUME, EventType.VOLUME_ATTACH )\n               .withDetails( volume.getOwner( ).toString( ), volume.getDisplayName( ), \"instance\", vm.getInstanceId( ) )\n               .withDetails( \"cluster\", vm.getPlacement( ) ).info( );\n    volume.setState( State.BUSY );\n    reply.setAttachedVolume( attachVol );\n    return reply;\n  }","id":1720,"modified_method":"public AttachVolumeResponseType AttachVolume( AttachVolumeType request ) throws EucalyptusCloudException {\n    AttachVolumeResponseType reply = ( AttachVolumeResponseType ) request.getReply( );\n    Context ctx = Contexts.lookup( );\n    \n    if ( request.getDevice( ) == null || request.getDevice( ).endsWith( \"sda\" ) ) {\n      throw new EucalyptusCloudException( \"Invalid device name specified: \" + request.getDevice( ) );\n    }\n    VmInstance vm = null;\n    try {\n      vm = VmInstances.getInstance( ).lookup( request.getInstanceId( ) );\n    } catch ( NoSuchElementException e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( \"Instance does not exist: \" + request.getInstanceId( ) );\n    }\n    if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_INSTANCE, request.getInstanceId( ), vm.getOwner( ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to attach volume to instance \" + request.getInstanceId( ) + \" by \" + ctx.getUser( ).getName( ) );\n    }\n    Cluster cluster = null;\n    try {\n      cluster = Clusters.getInstance( ).lookup( vm.getPlacement( ) );\n    } catch ( NoSuchElementException e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( \"Cluster does not exist: \" + vm.getPlacement( ) );\n    }\n    final String deviceName = request.getDevice( );\n    final String volumeId = request.getVolumeId( );\n    try {\n      vm.lookupVolumeAttachment( new Predicate<AttachedVolume>( ) {\n        @Override\n        public boolean apply( AttachedVolume arg0 ) {\n          return arg0.getDevice( ).replaceAll( \"unknown,requested:\", \"\" ).equals( deviceName );\n        }\n      } );\n      throw new EucalyptusCloudException( \"Already have a device attached to: \" + request.getDevice( ) );\n    } catch ( NoSuchElementException ex1 ) {\n      /** no attachment **/\n    }\n    for ( VmInstance iter : VmInstances.getInstance( ).listValues( ) ) {\n      try {\n        iter.lookupVolumeAttachment( volumeId );\n        throw new EucalyptusCloudException( \"Volume already attached: \" + request.getVolumeId( ) );\n      } catch ( NoSuchElementException ex ) {\n        /** no attachment **/\n      }\n    }\n    \n    EntityWrapper<Volume> db = EntityWrapper.get( Volume.class );\n    Volume volume = null;\n    try {\n      volume = db.getUnique( Volume.named( ctx.getUserFullName( ), request.getVolumeId( ) ) );\n      if ( volume.getRemoteDevice( ) == null ) {\n        StorageUtil.getVolumeReply( new HashMap<String, AttachedVolume>( ), Lists.newArrayList( volume ) );\n      }\n      db.commit( );\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Volume does not exist: \" + request.getVolumeId( ) );\n    }\n    if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_VOLUME, request.getVolumeId( ), volume.getOwner( ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to attach volume \" + request.getVolumeId( ) + \" by \" + ctx.getUser( ).getName( ) );\n    }\n    Service sc;\n    try {\n      sc = StorageUtil.getActiveSc( volume.getCluster( ) );\n    } catch ( NoSuchElementException ex ) {\n      LOG.error( ex, ex );\n      throw new EucalyptusCloudException( \"Failed to lookup SC for volume: \" + volume, ex );\n    }\n    Service scVm;\n    try {\n      scVm = StorageUtil.getActiveSc( cluster.getName( ) );\n    } catch ( Exception ex ) {\n      LOG.error( ex, ex );\n      throw new EucalyptusCloudException( \"Failed to lookup SC for cluster: \" + cluster, ex );\n    }\n    if ( !sc.equals( scVm ) ) {\n      throw new EucalyptusCloudException( \"Can only attach volumes in the same cluster: \" + request.getVolumeId( ) );\n    } else if ( \"invalid\".equals( volume.getRemoteDevice( ) ) ) {\n      throw new EucalyptusCloudException( \"Volume is not yet available: \" + request.getVolumeId( ) );\n    }\n    \n    AttachStorageVolumeResponseType scAttachResponse;\n    try {\n      scAttachResponse = sc.getDispatcher( ).send( new AttachStorageVolumeType( cluster.getNode( vm.getServiceTag( ) ).getIqn( ), volume.getDisplayName( ) ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e.getMessage( ) );\n    }\n    request.setRemoteDevice( scAttachResponse.getRemoteDeviceString( ) );\n    AttachedVolume attachVol = new AttachedVolume( volume.getDisplayName( ), vm.getInstanceId( ), request.getDevice( ), request.getRemoteDevice( ) );\n    attachVol.setStatus( \"attaching\" );\n    Callbacks.newRequest( new VolumeAttachCallback( request, attachVol ) ).dispatch( cluster.getServiceEndpoint( ) );\n    \n    vm.addVolumeAttachment( attachVol );\n    EventRecord.here( VolumeManager.class, EventClass.VOLUME, EventType.VOLUME_ATTACH )\n               .withDetails( volume.getOwner( ).toString( ), volume.getDisplayName( ), \"instance\", vm.getInstanceId( ) )\n               .withDetails( \"cluster\", vm.getPlacement( ) ).info( );\n    volume.setState( State.BUSY );\n    reply.setAttachedVolume( attachVol );\n    return reply;\n  }","commit_id":"2d40c8b21caa1270971e98cd0d179fe634688222","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DetachVolumeResponseType detach( DetachVolumeType request ) throws EucalyptusCloudException {\n    DetachVolumeResponseType reply = ( DetachVolumeResponseType ) request.getReply( );\n    Context ctx = Contexts.lookup( );\n\n    Volume vol = null;\n    EntityWrapper<Volume> db = EntityWrapper.get( Volume.class );\n    try {\n      vol = db.getUnique( Volume.named( ctx.getUserFullName( ), request.getVolumeId( ) ) );\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Volume does not exist: \" + request.getVolumeId( ) );\n    }\n    db.commit( );\n    if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_VOLUME, request.getVolumeId( ), vol.getOwner( ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to detach volume \" + request.getVolumeId( ) + \" by \" + ctx.getUser( ).getName( ) );\n    }\n    \n    VmInstance vm = null;\n    AttachedVolume volume = null;\n    for ( VmInstance iter : VmInstances.getInstance( ).listValues( ) ) {\n      try {\n        volume = iter.lookupVolumeAttachment( request.getVolumeId( ) );\n        vm = iter;\n      } catch ( NoSuchElementException ex ) {\n        /** no such attachment **/\n      }\n    }\n    if ( volume == null ) {\n      throw new EucalyptusCloudException( \"Volume is not attached: \" + request.getVolumeId( ) );\n    }\n    if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_INSTANCE, request.getInstanceId( ), vm.getOwner( ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to detach volume from instance \" + request.getInstanceId( ) + \" by \" + ctx.getUser( ).getName( ) );\n    }\n    if ( !vm.getInstanceId( ).equals( request.getInstanceId( ) ) && request.getInstanceId( ) != null && !request.getInstanceId( ).equals( \"\" ) ) {\n      throw new EucalyptusCloudException( \"Volume is not attached to instance: \" + request.getInstanceId( ) );\n    }\n    if ( request.getDevice( ) != null && !request.getDevice( ).equals( \"\" ) && !volume.getDevice( ).equals( request.getDevice( ) ) ) {\n      throw new EucalyptusCloudException( \"Volume is not attached to device: \" + request.getDevice( ) );\n    }\n    \n    Cluster cluster = null;\n    try {\n      cluster = Clusters.getInstance( ).lookup( vm.getPlacement( ) );\n    } catch ( NoSuchElementException e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( \"Cluster does not exist: \" + vm.getPlacement( ) );\n    }\n    ServiceConfiguration scVm;\n    try {\n      scVm = StorageUtil.getActiveSc( cluster.getName( ) ).getServiceConfiguration( );\n    } catch ( Exception ex ) {\n      LOG.error( ex , ex );\n      throw new EucalyptusCloudException( \"Failed to lookup SC for cluster: \" + cluster, ex );\n    }\n    try {\n      StorageUtil.send( scVm.getName( ), new DetachStorageVolumeType( cluster.getNode( vm.getServiceTag( ) ).getIqn( ), volume.getVolumeId( ) ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e.getMessage( ) );\n    }\n    request.setVolumeId( volume.getVolumeId( ) );\n    request.setRemoteDevice( volume.getRemoteDevice( ) );\n    request.setDevice( volume.getDevice( ).replaceAll( \"unknown,requested:\", \"\" ) );\n    request.setInstanceId( vm.getInstanceId( ) );\n    Callbacks.newRequest( new VolumeDetachCallback( request ) ).dispatch( cluster.getServiceEndpoint( ) );\n    EventRecord.here( VolumeManager.class, EventClass.VOLUME, EventType.VOLUME_DETACH )\n               .withDetails( vm.getOwner( ).toString( ), volume.getVolumeId( ), \"instance\", vm.getInstanceId( ) ).withDetails( \"cluster\", vm.getPlacement( ) ).info( );\n    volume.setStatus( \"detaching\" );\n    reply.setDetachedVolume( volume );\n    return reply;\n  }","id":1721,"modified_method":"public DetachVolumeResponseType detach( DetachVolumeType request ) throws EucalyptusCloudException {\n    DetachVolumeResponseType reply = ( DetachVolumeResponseType ) request.getReply( );\n    Context ctx = Contexts.lookup( );\n    \n    Volume vol = null;\n    EntityWrapper<Volume> db = EntityWrapper.get( Volume.class );\n    try {\n      vol = db.getUnique( Volume.named( ctx.getUserFullName( ), request.getVolumeId( ) ) );\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Volume does not exist: \" + request.getVolumeId( ) );\n    }\n    db.commit( );\n    if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_VOLUME, request.getVolumeId( ), vol.getOwner( ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to detach volume \" + request.getVolumeId( ) + \" by \" + ctx.getUser( ).getName( ) );\n    }\n    \n    VmInstance vm = null;\n    AttachedVolume volume = null;\n    for ( VmInstance iter : VmInstances.getInstance( ).listValues( ) ) {\n      try {\n        volume = iter.lookupVolumeAttachment( request.getVolumeId( ) );\n        vm = iter;\n      } catch ( NoSuchElementException ex ) {\n        /** no such attachment **/\n      }\n    }\n    if ( volume == null ) {\n      throw new EucalyptusCloudException( \"Volume is not attached: \" + request.getVolumeId( ) );\n    }\n    if ( !Lookups.checkPrivilege( request, PolicySpec.EC2_RESOURCE_INSTANCE, request.getInstanceId( ), vm.getOwner( ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to detach volume from instance \" + request.getInstanceId( ) + \" by \" + ctx.getUser( ).getName( ) );\n    }\n    if ( !vm.getInstanceId( ).equals( request.getInstanceId( ) ) && request.getInstanceId( ) != null && !request.getInstanceId( ).equals( \"\" ) ) {\n      throw new EucalyptusCloudException( \"Volume is not attached to instance: \" + request.getInstanceId( ) );\n    }\n    if ( request.getDevice( ) != null && !request.getDevice( ).equals( \"\" ) && !volume.getDevice( ).equals( request.getDevice( ) ) ) {\n      throw new EucalyptusCloudException( \"Volume is not attached to device: \" + request.getDevice( ) );\n    }\n    \n    Cluster cluster = null;\n    try {\n      cluster = Clusters.getInstance( ).lookup( vm.getPlacement( ) );\n    } catch ( NoSuchElementException e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( \"Cluster does not exist: \" + vm.getPlacement( ) );\n    }\n    Service scVm;\n    try {\n      scVm = StorageUtil.getActiveSc( cluster.getName( ) );\n    } catch ( Exception ex ) {\n      LOG.error( ex, ex );\n      throw new EucalyptusCloudException( \"Failed to lookup SC for cluster: \" + cluster, ex );\n    }\n    try {\n      scVm.getDispatcher( ).send( new DetachStorageVolumeType( cluster.getNode( vm.getServiceTag( ) ).getIqn( ), volume.getVolumeId( ) ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e.getMessage( ) );\n    }\n    request.setVolumeId( volume.getVolumeId( ) );\n    request.setRemoteDevice( volume.getRemoteDevice( ) );\n    request.setDevice( volume.getDevice( ).replaceAll( \"unknown,requested:\", \"\" ) );\n    request.setInstanceId( vm.getInstanceId( ) );\n    Callbacks.newRequest( new VolumeDetachCallback( request ) ).dispatch( cluster.getServiceEndpoint( ) );\n    EventRecord.here( VolumeManager.class, EventClass.VOLUME, EventType.VOLUME_DETACH )\n               .withDetails( vm.getOwner( ).toString( ), volume.getVolumeId( ), \"instance\", vm.getInstanceId( ) ).withDetails( \"cluster\", vm.getPlacement( ) ).info( );\n    volume.setStatus( \"detaching\" );\n    reply.setDetachedVolume( volume );\n    return reply;\n  }","commit_id":"2d40c8b21caa1270971e98cd0d179fe634688222","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public CreateVolumeResponseType CreateVolume( final CreateVolumeType request ) throws EucalyptusCloudException {\n    Context ctx = Contexts.lookup( );\n    String action = PolicySpec.requestToAction( request );\n    if ( !ctx.hasAdministrativePrivileges( ) ) {\n      if ( !Permissions.isAuthorized( PolicySpec.EC2_RESOURCE_VOLUME, \"\", ctx.getAccount( ), action, ctx.getUser( ) ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to create volume by \" + ctx.getUser( ).getName( ) );\n      }\n      long volSize = 0;\n      try {\n        volSize = Long.valueOf( request.getSize( ) );\n      } catch ( NumberFormatException e ) {\n        LOG.error( \"Invalid volume size \" + request.getSize( ), e );\n        throw new EucalyptusCloudException( e );\n      }\n      if ( !Permissions.canAllocate( PolicySpec.EC2_RESOURCE_VOLUME, \"\", action, ctx.getUser( ), volSize ) ) {\n        throw new EucalyptusCloudException( \"Exceeded quota of volume creation by \" + ctx.getUser( ).getName( ) );\n      }\n    }\n    if ( ( request.getSnapshotId( ) == null && request.getSize( ) == null ) ) {\n      throw new EucalyptusCloudException( \"One of size or snapshotId is required as a parameter.\" );\n    }\n    ServiceConfiguration sc;\n    try {\n      sc = StorageUtil.getActiveSc( request.getAvailabilityZone( ) ).getServiceConfiguration( );\n    } catch ( NoSuchElementException ex ) {\n      throw new EucalyptusCloudException( ex.getMessage( ), ex );\n    }\n    EntityWrapper<Volume> db = EntityWrapper.get( Volume.class );\n    if ( request.getSnapshotId( ) != null ) {\n      try {\n        db.recast( Snapshot.class ).getUnique( Snapshot.named( ctx.getUserFullName( ), request.getSnapshotId( ) ) );\n      } catch ( EucalyptusCloudException e ) {\n        LOG.debug( e, e );\n        db.rollback( );\n        throw new EucalyptusCloudException( \"Snapshot does not exist: \" + request.getSnapshotId( ) );\n      }\n    }\n    String newId = null;\n    Volume newVol = null;\n    while ( true ) {\n      newId = Crypto.generateId( ctx.getUserFullName( ).getAccountId( ), ID_PREFIX );\n      try {\n        db.getUnique( Volume.named( null, newId ) );\n      } catch ( EucalyptusCloudException e ) {\n        try {\n          newVol = new Volume( ctx.getUserFullName( ), newId, new Integer( request.getSize( ) != null ? request.getSize( ) : \"-1\" ),\n                               request.getAvailabilityZone( ), request.getSnapshotId( ) );\n          db.add( newVol );\n          db.commit( );\n          break;\n        } catch ( Throwable e1 ) {\n          db.rollback( );\n          db = EntityWrapper.get( Volume.class );\n        }\n      }\n    }\n    newVol.setState( State.GENERATING );\n    try {\n      CreateStorageVolumeType req = new CreateStorageVolumeType( newId, request.getSize( ), request.getSnapshotId( ) );\n      req.regardingUserRequest( request );\n      StorageUtil.send( sc.getName( ), req );\n      EventRecord.here( VolumeManager.class, EventClass.VOLUME, EventType.VOLUME_CREATE )\n                 .withDetails( newVol.getOwner( ).toString( ), newVol.getDisplayName( ), \"size\", newVol.getSize( ).toString( ) )\n                 .withDetails( \"cluster\", newVol.getCluster( ) ).withDetails( \"snapshot\", newVol.getParentSnapshot( ) ).info( );\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      try {\n        db = EntityWrapper.get( Volume.class );\n        Volume d = db.getUnique( Volume.named( (UserFullName) newVol.getOwner( ), newVol.getDisplayName( ) ) );\n        db.delete( d );\n        db.commit( );\n      } catch ( Throwable e1 ) {\n        db.rollback( );\n        LOG.debug( e1, e1 );\n      }\n      throw new EucalyptusCloudException( \"Error while communicating with Storage Controller: CreateStorageVolume:\" + e.getMessage( ) );\n    }\n    CreateVolumeResponseType reply = ( CreateVolumeResponseType ) request.getReply( );\n    reply.setVolume( newVol.morph( new edu.ucsb.eucalyptus.msgs.Volume( ) ) );\n    return reply;\n  }","id":1722,"modified_method":"public CreateVolumeResponseType CreateVolume( final CreateVolumeType request ) throws EucalyptusCloudException {\n    Context ctx = Contexts.lookup( );\n    String action = PolicySpec.requestToAction( request );\n    if ( !ctx.hasAdministrativePrivileges( ) ) {\n      if ( !Permissions.isAuthorized( PolicySpec.EC2_RESOURCE_VOLUME, \"\", ctx.getAccount( ), action, ctx.getUser( ) ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to create volume by \" + ctx.getUser( ).getName( ) );\n      }\n      long volSize = 0;\n      try {\n        volSize = Long.valueOf( request.getSize( ) );\n      } catch ( NumberFormatException e ) {\n        LOG.error( \"Invalid volume size \" + request.getSize( ), e );\n        throw new EucalyptusCloudException( e );\n      }\n      if ( !Permissions.canAllocate( PolicySpec.EC2_RESOURCE_VOLUME, \"\", action, ctx.getUser( ), volSize ) ) {\n        throw new EucalyptusCloudException( \"Exceeded quota of volume creation by \" + ctx.getUser( ).getName( ) );\n      }\n    }\n    if ( ( request.getSnapshotId( ) == null && request.getSize( ) == null ) ) {\n      throw new EucalyptusCloudException( \"One of size or snapshotId is required as a parameter.\" );\n    }\n    Service sc;\n    try {\n      sc = StorageUtil.getActiveSc( request.getAvailabilityZone( ) );\n    } catch ( NoSuchElementException ex ) {\n      throw new EucalyptusCloudException( ex.getMessage( ), ex );\n    }\n    EntityWrapper<Volume> db = EntityWrapper.get( Volume.class );\n    if ( request.getSnapshotId( ) != null ) {\n      try {\n        db.recast( Snapshot.class ).getUnique( Snapshot.named( ctx.getUserFullName( ), request.getSnapshotId( ) ) );\n      } catch ( EucalyptusCloudException e ) {\n        LOG.debug( e, e );\n        db.rollback( );\n        throw new EucalyptusCloudException( \"Snapshot does not exist: \" + request.getSnapshotId( ) );\n      }\n    }\n    String newId = null;\n    Volume newVol = null;\n    while ( true ) {\n      newId = Crypto.generateId( ctx.getUserFullName( ).getAccountId( ), ID_PREFIX );\n      try {\n        db.getUnique( Volume.named( null, newId ) );\n      } catch ( EucalyptusCloudException e ) {\n        try {\n          newVol = new Volume( ctx.getUserFullName( ), newId, new Integer( request.getSize( ) != null\n            ? request.getSize( )\n            : \"-1\" ),\n                               request.getAvailabilityZone( ), request.getSnapshotId( ) );\n          db.add( newVol );\n          db.commit( );\n          break;\n        } catch ( Throwable e1 ) {\n          db.rollback( );\n          db = EntityWrapper.get( Volume.class );\n        }\n      }\n    }\n    newVol.setState( State.GENERATING );\n    try {\n      CreateStorageVolumeType req = new CreateStorageVolumeType( newId, request.getSize( ), request.getSnapshotId( ) );\n      req.regardingUserRequest( request );\n      sc.getDispatcher( ).send( req );\n      EventRecord.here( VolumeManager.class, EventClass.VOLUME, EventType.VOLUME_CREATE )\n                 .withDetails( newVol.getOwner( ).toString( ), newVol.getDisplayName( ), \"size\", newVol.getSize( ).toString( ) )\n                 .withDetails( \"cluster\", newVol.getCluster( ) ).withDetails( \"snapshot\", newVol.getParentSnapshot( ) ).info( );\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      try {\n        db = EntityWrapper.get( Volume.class );\n        Volume d = db.getUnique( Volume.named( ( UserFullName ) newVol.getOwner( ), newVol.getDisplayName( ) ) );\n        db.delete( d );\n        db.commit( );\n      } catch ( Throwable e1 ) {\n        db.rollback( );\n        LOG.debug( e1, e1 );\n      }\n      throw new EucalyptusCloudException( \"Error while communicating with Storage Controller: CreateStorageVolume:\" + e.getMessage( ) );\n    }\n    CreateVolumeResponseType reply = ( CreateVolumeResponseType ) request.getReply( );\n    reply.setVolume( newVol.morph( new edu.ucsb.eucalyptus.msgs.Volume( ) ) );\n    return reply;\n  }","commit_id":"2d40c8b21caa1270971e98cd0d179fe634688222","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Nullable\n  protected Library doCopy(LibraryEx library) {\n    final VirtualFile baseDir = getBaseDir();\n    final String libPath = baseDir != null ? baseDir.getPath() + \"/lib\" : \"\";\n    final VirtualFile[] classesRoots = library.getFiles(OrderRootType.CLASSES);\n    boolean allowEmptyName = isConvertingToModuleLibrary() && classesRoots.length == 1;\n    final String libraryName = allowEmptyName ? \"\" : StringUtil.notNullize(library.getName(), LibraryTypeServiceImpl.suggestLibraryName(classesRoots));\n    final LibraryTableModifiableModelProvider provider = getModifiableTableModelProvider();\n    final ChangeLibraryLevelDialog dialog = new ChangeLibraryLevelDialog(getParentComponent(), myProject, myCopy,\n                                                                         libraryName, libPath, allowEmptyName, provider);\n    dialog.show();\n    if (!dialog.isOK()) {\n      return null;\n    }\n\n    final Set<File> fileToCopy = new LinkedHashSet<File>();\n    final Map<String, String> copiedFiles = new HashMap<String, String>();\n    final String targetDirectoryPath = dialog.getDirectoryForFilesPath();\n    if (targetDirectoryPath != null) {\n      for (OrderRootType type : OrderRootType.getAllTypes()) {\n        for (VirtualFile root : library.getFiles(type)) {\n          fileToCopy.add(VfsUtil.virtualToIoFile(PathUtil.getLocalFile(root)));\n        }\n      }\n      if (!copyOrMoveFiles(fileToCopy, targetDirectoryPath, copiedFiles)) {\n        return null;\n      }\n    }\n\n    final Library copied = ((LibraryTableBase.ModifiableModelEx)provider.getModifiableModel()).createLibrary(dialog.getLibraryName(), library.getKind());\n    final LibraryEx.ModifiableModelEx model = (LibraryEx.ModifiableModelEx)copied.getModifiableModel();\n    LibraryEditingUtil.copyLibrary(library, copiedFiles, model);\n\n    AccessToken token = WriteAction.start();\n    try {\n      model.commit();\n    }\n    finally {\n      token.finish();\n    }\n    return copied;\n  }","id":1723,"modified_method":"@Nullable\n  protected Library doCopy(LibraryEx library) {\n    final VirtualFile baseDir = getBaseDir();\n    final String libPath = baseDir != null ? baseDir.getPath() + \"/lib\" : \"\";\n    final VirtualFile[] classesRoots = library.getFiles(OrderRootType.CLASSES);\n    boolean allowEmptyName = isConvertingToModuleLibrary() && classesRoots.length == 1;\n    final String libraryName = allowEmptyName ? \"\" : StringUtil.notNullize(library.getName(), LibraryTypeServiceImpl.suggestLibraryName(classesRoots));\n    final LibraryTableModifiableModelProvider provider = getModifiableTableModelProvider();\n    final ChangeLibraryLevelDialog dialog = new ChangeLibraryLevelDialog(getParentComponent(), myProject, myCopy,\n                                                                         libraryName, libPath, allowEmptyName, provider);\n    dialog.show();\n    if (!dialog.isOK()) {\n      return null;\n    }\n\n    final Set<File> fileToCopy = new LinkedHashSet<File>();\n    final Map<String, String> copiedFiles = new HashMap<String, String>();\n    final String targetDirectoryPath = dialog.getDirectoryForFilesPath();\n    if (targetDirectoryPath != null) {\n      for (OrderRootType type : OrderRootType.getAllTypes()) {\n        for (VirtualFile root : library.getFiles(type)) {\n          fileToCopy.add(VfsUtil.virtualToIoFile(PathUtil.getLocalFile(root)));\n        }\n      }\n      if (!copyOrMoveFiles(fileToCopy, targetDirectoryPath, copiedFiles)) {\n        return null;\n      }\n    }\n\n    final Library copied = ((LibraryTableBase.ModifiableModelEx)provider.getModifiableModel()).createLibrary(StringUtil.nullize(dialog.getLibraryName()), library.getKind());\n    final LibraryEx.ModifiableModelEx model = (LibraryEx.ModifiableModelEx)copied.getModifiableModel();\n    LibraryEditingUtil.copyLibrary(library, copiedFiles, model);\n\n    AccessToken token = WriteAction.start();\n    try {\n      model.commit();\n    }\n    finally {\n      token.finish();\n    }\n    return copied;\n  }","commit_id":"8cbfea6b51cf68ed1b6da709a0ad022a7a095c2a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void actionPerformed(AnActionEvent event) {\n    final OrderEntry entry = myPanel.getSelectedEntry();\n    if (!(entry instanceof LibraryOrderEntry)) return;\n    final LibraryEx library = (LibraryEx)((LibraryOrderEntry)entry).getLibrary();\n    if (library == null) return;\n\n    final Library copied = doCopy(library);\n    if (copied == null) return;\n\n    myPanel.getRootModel().removeOrderEntry(entry);\n    if (!isConvertingToModuleLibrary()) {\n      myPanel.getRootModel().addLibraryEntry(copied);\n    }\n  }","id":1724,"modified_method":"@Override\n  public void actionPerformed(AnActionEvent event) {\n    final OrderEntry entry = myPanel.getSelectedEntry();\n    if (!(entry instanceof LibraryOrderEntry)) return;\n    LibraryOrderEntry libraryEntry = (LibraryOrderEntry)entry;\n    final LibraryEx library = (LibraryEx)libraryEntry.getLibrary();\n    if (library == null) return;\n\n    final Library copied = doCopy(library);\n    if (copied == null) return;\n\n    if (!isConvertingToModuleLibrary()) {\n      OrderEntryUtil.replaceLibrary(myPanel.getRootModel(), library, copied);\n    }\n    else {\n      OrderEntryUtil.replaceLibraryEntryByAdded(myPanel.getRootModel(), libraryEntry);\n    }\n  }","commit_id":"8cbfea6b51cf68ed1b6da709a0ad022a7a095c2a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void replaceLibrary(@NotNull ModifiableRootModel model, @NotNull Library oldLibrary, @NotNull Library newLibrary) {\n    OrderEntry[] entries = model.getOrderEntries();\n    for (int i = 0; i < entries.length; i++) {\n      OrderEntry orderEntry = entries[i];\n      if (orderEntry instanceof LibraryOrderEntry && oldLibrary.equals(((LibraryOrderEntry)orderEntry).getLibrary())) {\n        model.removeOrderEntry(orderEntry);\n        final LibraryOrderEntry newEntry = model.addLibraryEntry(newLibrary);\n        final OrderEntry[] newEntries = new OrderEntry[entries.length];\n        System.arraycopy(entries, 0, newEntries, 0, i);\n        newEntries[i] = newEntry;\n        System.arraycopy(entries, i, newEntries, i+1, entries.length - i - 1);\n        model.rearrangeOrderEntries(newEntries);\n        return;\n      }\n    }\n  }","id":1725,"modified_method":"public static void replaceLibrary(@NotNull ModifiableRootModel model, @NotNull Library oldLibrary, @NotNull Library newLibrary) {\n    int i = findLibraryOrderEntry(model.getOrderEntries(), oldLibrary);\n    if (i == -1) return;\n\n    model.addLibraryEntry(newLibrary);\n    replaceLibraryByAdded(model, i);\n  }","commit_id":"8cbfea6b51cf68ed1b6da709a0ad022a7a095c2a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static OrderEntry[] getSortedOrderEntries(Module module) {\n    //return ModuleRootManager.getInstance(module).getOrderEntries();\n    // TODO: this is a patch for SCR 36800, After J2EE Compiler copying mechanizm is fixed,\n    // TODO: remove all the code below and uncomment the line above\n    final OrderEntry[] orderEntries = ModuleRootManager.getInstance(module).getOrderEntries();\n    final List<OrderEntry> result = new ArrayList<OrderEntry>();\n    final List<OrderEntry> moduleOrderEntries = new ArrayList<OrderEntry>();\n    int insertIndex = 0;\n    for (int idx = 0; idx < orderEntries.length; idx++) {\n      OrderEntry orderEntry = orderEntries[idx];\n      if (orderEntry instanceof ModuleOrderEntry) {\n        moduleOrderEntries.add(orderEntry);\n      }\n      else {\n        result.add(orderEntry);\n        if (orderEntry instanceof ModuleSourceOrderEntry) {\n          insertIndex = result.size() - 1;\n        }\n      }\n    }\n    if (moduleOrderEntries.size() > 0) {\n      result.addAll(insertIndex, moduleOrderEntries);\n    }\n    return result.toArray(new OrderEntry[result.size()]);\n  }","id":1726,"modified_method":"private static OrderEntry[] getSortedOrderEntries(Module module) {\n    return ModuleRootManager.getInstance(module).getOrderEntries();\n    // TODO: this is a patch for SCR 36800, After J2EE Compiler copying mechanizm is fixed,\n    // TODO: remove all the code below and uncomment the line above\n    /*\n    final OrderEntry[] orderEntries = ModuleRootManager.getInstance(module).getOrderEntries();\n    final List<OrderEntry> result = new ArrayList<OrderEntry>();\n    final List<OrderEntry> moduleOrderEntries = new ArrayList<OrderEntry>();\n    int insertIndex = 0;\n    for (int idx = 0; idx < orderEntries.length; idx++) {\n      OrderEntry orderEntry = orderEntries[idx];\n      if (orderEntry instanceof ModuleOrderEntry) {\n        moduleOrderEntries.add(orderEntry);\n      }\n      else {\n        result.add(orderEntry);\n        if (orderEntry instanceof ModuleSourceOrderEntry) {\n          insertIndex = result.size() - 1;\n        }\n      }\n    }\n    if (moduleOrderEntries.size() > 0) {\n      result.addAll(insertIndex, moduleOrderEntries);\n    }\n    return result.toArray(new OrderEntry[result.size()]);\n    */\n  }","commit_id":"d68a757c232e99aacaec49664aebb0ca26b09b9e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public Integer getBacklog() {\n        final Object rawParameter = getParameters().get(\"backlog\");\n        if (rawParameter != null && rawParameter instanceof Number) {\n            return (Integer) rawParameter;\n        } else {\n            return 0;\n        }\n    }","id":1727,"modified_method":"@Override\n    public Integer getBacklog() {\n        return getNumber(getParameters().get(\"backlog\")).orElse(0).intValue();\n    }","commit_id":"ea4aa95fb609b56dcde4adc56cf311edf4ff3c0e","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"protected AbstractAlertCondition(Stream stream, String id, Type type, DateTime createdAt, String creatorUserId, Map<String, Object> parameters) {\n        if (id == null) {\n            this.id = UUID.randomUUID().toString();\n        } else {\n            this.id = id;\n        }\n\n        this.stream = stream;\n        this.type = type;\n        this.createdAt = createdAt;\n        this.creatorUserId = creatorUserId;\n        this.parameters = parameters;\n\n        if (this.parameters.containsKey(\"grace\")) {\n            this.grace = (Integer) this.parameters.get(\"grace\");\n        } else {\n            this.grace = 0;\n        }\n\n    }","id":1728,"modified_method":"protected AbstractAlertCondition(Stream stream, String id, Type type, DateTime createdAt, String creatorUserId, Map<String, Object> parameters) {\n        if (id == null) {\n            this.id = UUID.randomUUID().toString();\n        } else {\n            this.id = id;\n        }\n\n        this.stream = stream;\n        this.type = type;\n        this.createdAt = createdAt;\n        this.creatorUserId = creatorUserId;\n        this.parameters = parameters;\n\n        this.grace = getNumber(this.parameters.get(\"grace\")).orElse(0).intValue();\n    }","commit_id":"ea4aa95fb609b56dcde4adc56cf311edf4ff3c0e","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@Override\n    public void visitField(@NotNull PsiField field) {\n      if (!PsiUtil.isLanguageLevel5OrHigher(field)) {\n        return;\n      }\n      if (!hasDeprecatedComment(field) || hasDeprecatedAnnotation(field)) {\n        return;\n      }\n      registerFieldError(field);\n    }","id":1729,"modified_method":"@Override\n    public void visitField(@NotNull PsiField field) {\n      if (!PsiUtil.isLanguageLevel5OrHigher(field)) {\n        return;\n      }\n      if (hasDeprecatedAnnotation(field)) {\n        if (warnOnMissingJavadoc && !hasDeprecatedComment(field, true)) {\n          registerFieldError(field, Boolean.FALSE);\n        }\n      }\n      else if (hasDeprecatedComment(field, false)) {\n        registerFieldError(field, Boolean.TRUE);\n      }\n    }","commit_id":"ff0a2db4435345ec32fc9221bc367855d4197b33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitMethod(@NotNull PsiMethod method) {\n      if (!PsiUtil.isLanguageLevel5OrHigher(method)) {\n        return;\n      }\n      if (method.getNameIdentifier() == null) {\n        return;\n      }\n      if (!hasDeprecatedComment(method) || hasDeprecatedAnnotation(method)) {\n        return;\n      }\n      registerMethodError(method);\n    }","id":1730,"modified_method":"@Override\n    public void visitMethod(@NotNull PsiMethod method) {\n      if (!PsiUtil.isLanguageLevel5OrHigher(method)) {\n        return;\n      }\n      if (method.getNameIdentifier() == null) {\n        return;\n      }\n      if (hasDeprecatedAnnotation(method)) {\n        if (warnOnMissingJavadoc && !hasDeprecatedComment(method, true)) {\n          registerMethodError(method, Boolean.FALSE);\n        }\n      }\n      else if (hasDeprecatedComment(method, false)) {\n        registerMethodError(method, Boolean.TRUE);\n      }\n    }","commit_id":"ff0a2db4435345ec32fc9221bc367855d4197b33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  @NotNull\n  protected String buildErrorString(Object... infos) {\n    return InspectionGadgetsBundle.message(\"missing.deprecated.annotation.problem.descriptor\");\n  }","id":1731,"modified_method":"@Override\n  @NotNull\n  protected String buildErrorString(Object... infos) {\n    final boolean annotationWarning = ((Boolean)infos[0]).booleanValue();\n    return annotationWarning\n           ? InspectionGadgetsBundle.message(\"missing.deprecated.annotation.problem.descriptor\")\n           : InspectionGadgetsBundle.message(\"missing.deprecated.tag.problem.descriptor\");\n  }","commit_id":"ff0a2db4435345ec32fc9221bc367855d4197b33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitClass(@NotNull PsiClass aClass) {\n      super.visitClass(aClass);\n      if (!PsiUtil.isLanguageLevel5OrHigher(aClass)) {\n        return;\n      }\n      if (!hasDeprecatedComment(aClass) || hasDeprecatedAnnotation(aClass)) {\n        return;\n      }\n      registerClassError(aClass);\n    }","id":1732,"modified_method":"@Override\n    public void visitClass(@NotNull PsiClass aClass) {\n      super.visitClass(aClass);\n      if (!PsiUtil.isLanguageLevel5OrHigher(aClass)) {\n        return;\n      }\n      if (hasDeprecatedAnnotation(aClass)) {\n        if (warnOnMissingJavadoc && !hasDeprecatedComment(aClass, true)) {\n          registerClassError(aClass, Boolean.FALSE);\n        }\n      }\n      else if (hasDeprecatedComment(aClass, false)) {\n        registerClassError(aClass, Boolean.TRUE);\n      }\n    }","commit_id":"ff0a2db4435345ec32fc9221bc367855d4197b33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean hasDeprecatedComment(PsiDocCommentOwner element) {\n      final PsiDocComment comment = element.getDocComment();\n      if (comment == null) {\n        return false;\n      }\n      final PsiDocTag deprecatedTag = comment.findTagByName(\"deprecated\");\n      return deprecatedTag != null;\n    }","id":1733,"modified_method":"private boolean hasDeprecatedComment(PsiDocCommentOwner element, boolean checkContent) {\n      final PsiDocComment comment = element.getDocComment();\n      if (comment == null) {\n        return false;\n      }\n      final PsiDocTag deprecatedTag = comment.findTagByName(\"deprecated\");\n      if (deprecatedTag == null) {\n        return false;\n      }\n      return !checkContent || deprecatedTag.getValueElement() != null;\n    }","commit_id":"ff0a2db4435345ec32fc9221bc367855d4197b33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean hasDeprecatedAnnotation(PsiModifierListOwner element) {\n      final PsiModifierList modifierList = element.getModifierList();\n      if (modifierList == null) {\n        return false;\n      }\n      final PsiAnnotation annotation = modifierList.findAnnotation(CommonClassNames.JAVA_LANG_DEPRECATED);\n      return annotation != null;\n    }","id":1734,"modified_method":"private boolean hasDeprecatedAnnotation(PsiModifierListOwner element) {\n      final PsiModifierList modifierList = element.getModifierList();\n      return modifierList != null && modifierList.findAnnotation(CommonClassNames.JAVA_LANG_DEPRECATED) != null;\n    }","commit_id":"ff0a2db4435345ec32fc9221bc367855d4197b33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected InspectionGadgetsFix buildFix(Object... infos) {\n    return new MissingDeprecatedAnnotationFix();\n  }","id":1735,"modified_method":"@Override\n  protected InspectionGadgetsFix buildFix(Object... infos) {\n    final boolean annotationWarning = ((Boolean)infos[0]).booleanValue();\n    if (!annotationWarning) {\n      return null;\n    }\n    return new MissingDeprecatedAnnotationFix();\n  }","commit_id":"ff0a2db4435345ec32fc9221bc367855d4197b33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static ElementFilter getReferenceFilter(PsiElement position) {\n    // Completion after extends in interface, type parameter and implements in class\n    final PsiClass containingClass = PsiTreeUtil.getParentOfType(position, PsiClass.class, false, PsiCodeBlock.class, PsiMethod.class, PsiExpressionList.class, PsiVariable.class);\n    if (containingClass != null && psiElement().afterLeaf(PsiKeyword.EXTENDS, PsiKeyword.IMPLEMENTS, \",\", \"&\").accepts(position)) {\n      return new AndFilter(ElementClassFilter.CLASS, new NotFilter(new AssignableFromContextFilter()));\n    }\n\n    if (JavaCompletionData.DECLARATION_START.isAcceptable(position, position) ||\n        JavaCompletionData.INSIDE_PARAMETER_LIST.accepts(position)) {\n      return new OrFilter(ElementClassFilter.CLASS, ElementClassFilter.PACKAGE_FILTER);\n    }\n\n    if (INSIDE_METHOD_THROWS_CLAUSE.accepts(position)) {\n      return new AssignableFromFilter(CommonClassNames.JAVA_LANG_THROWABLE);\n    }\n\n    if (psiElement().afterLeaf(PsiKeyword.INSTANCEOF).accepts(position)) {\n      return new ElementExtractorFilter(ElementClassFilter.CLASS);\n    }\n\n    if (JavaCompletionData.VARIABLE_AFTER_FINAL.accepts(position)) {\n      return ElementClassFilter.CLASS;\n    }\n\n    if (JavaCompletionData.AFTER_TRY_BLOCK.isAcceptable(position, position) ||\n        JavaCompletionData.START_SWITCH.isAcceptable(position, position) ||\n        JavaCompletionData.INSTANCEOF_PLACE.isAcceptable(position, position) ||\n        JavaCompletionData.isAfterPrimitiveOrArrayType(position)) {\n      return null;\n    }\n\n    if (JavaCompletionData.START_FOR.accepts(position)) {\n      return ElementClassFilter.VARIABLE;\n    }\n\n    if (IN_CATCH_TYPE.accepts(position) || IN_MULTI_CATCH_TYPE.accepts(position)) {\n      return new AssignableFromFilter(CommonClassNames.JAVA_LANG_THROWABLE);\n    }\n\n    if (IN_RESOURCE_TYPE.accepts(position)) {\n      return new AssignableFromFilter(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE);\n    }\n\n    if (JavaSmartCompletionContributor.AFTER_THROW_NEW.accepts(position)) {\n      return new AssignableFromFilter(CommonClassNames.JAVA_LANG_THROWABLE);\n    }\n\n    if (JavaSmartCompletionContributor.AFTER_NEW.accepts(position)) {\n      return ElementClassFilter.CLASS;\n    }\n\n    if (psiElement().inside(PsiReferenceParameterList.class).accepts(position)) {\n      return ElementClassFilter.CLASS;\n    }\n\n    if (psiElement().inside(PsiAnnotationParameterList.class).accepts(position)) {\n      return new OrFilter(new ClassFilter(PsiAnnotationMethod.class),\n                          ElementClassFilter.CLASS,\n                          ElementClassFilter.PACKAGE_FILTER,\n                          new AndFilter(new ClassFilter(PsiField.class), new ModifierFilter(PsiModifier.STATIC, PsiModifier.FINAL)));\n    }\n\n    if (psiElement().afterLeaf(\"=\").inside(PsiVariable.class).accepts(position)) {\n      return new OrFilter(\n        new ClassFilter(PsiVariable.class, false),\n        new ExcludeDeclaredFilter(new ClassFilter(PsiVariable.class)));\n    }\n\n    if (SWITCH_LABEL.accepts(position)) {\n      return new ClassFilter(PsiField.class) {\n        @Override\n        public boolean isAcceptable(Object element, PsiElement context) {\n          return element instanceof PsiEnumConstant;\n        }\n      };\n    }\n\n    return TrueFilter.INSTANCE;\n  }","id":1736,"modified_method":"@Nullable\n  private static ElementFilter getReferenceFilter(PsiElement position) {\n    // Completion after extends in interface, type parameter and implements in class\n    final PsiClass containingClass = PsiTreeUtil.getParentOfType(position, PsiClass.class, false, PsiCodeBlock.class, PsiMethod.class, PsiExpressionList.class, PsiVariable.class);\n    if (containingClass != null && psiElement().afterLeaf(PsiKeyword.EXTENDS, PsiKeyword.IMPLEMENTS, \",\", \"&\").accepts(position)) {\n      return new AndFilter(ElementClassFilter.CLASS, new NotFilter(new AssignableFromContextFilter()));\n    }\n\n    if (JavaCompletionData.DECLARATION_START.isAcceptable(position, position) ||\n        JavaCompletionData.INSIDE_PARAMETER_LIST.accepts(position)) {\n      return new OrFilter(ElementClassFilter.CLASS, ElementClassFilter.PACKAGE_FILTER);\n    }\n\n    if (INSIDE_METHOD_THROWS_CLAUSE.accepts(position)) {\n      return new AssignableFromFilter(CommonClassNames.JAVA_LANG_THROWABLE);\n    }\n\n    if (psiElement().afterLeaf(PsiKeyword.INSTANCEOF).accepts(position)) {\n      return new ElementExtractorFilter(ElementClassFilter.CLASS);\n    }\n\n    if (JavaCompletionData.VARIABLE_AFTER_FINAL.accepts(position)) {\n      return ElementClassFilter.CLASS;\n    }\n\n    if (JavaCompletionData.AFTER_TRY_BLOCK.isAcceptable(position, position) ||\n        JavaCompletionData.START_SWITCH.isAcceptable(position, position) ||\n        JavaCompletionData.INSTANCEOF_PLACE.isAcceptable(position, position) ||\n        JavaCompletionData.isAfterPrimitiveOrArrayType(position)) {\n      return null;\n    }\n\n    if (JavaCompletionData.START_FOR.accepts(position)) {\n      return new OrFilter(ElementClassFilter.CLASS, ElementClassFilter.VARIABLE);\n    }\n\n    if (IN_CATCH_TYPE.accepts(position) || IN_MULTI_CATCH_TYPE.accepts(position)) {\n      return new AssignableFromFilter(CommonClassNames.JAVA_LANG_THROWABLE);\n    }\n\n    if (IN_RESOURCE_TYPE.accepts(position)) {\n      return new AssignableFromFilter(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE);\n    }\n\n    if (JavaSmartCompletionContributor.AFTER_THROW_NEW.accepts(position)) {\n      return new AssignableFromFilter(CommonClassNames.JAVA_LANG_THROWABLE);\n    }\n\n    if (JavaSmartCompletionContributor.AFTER_NEW.accepts(position)) {\n      return ElementClassFilter.CLASS;\n    }\n\n    if (psiElement().inside(PsiReferenceParameterList.class).accepts(position)) {\n      return ElementClassFilter.CLASS;\n    }\n\n    if (psiElement().inside(PsiAnnotationParameterList.class).accepts(position)) {\n      return new OrFilter(new ClassFilter(PsiAnnotationMethod.class),\n                          ElementClassFilter.CLASS,\n                          ElementClassFilter.PACKAGE_FILTER,\n                          new AndFilter(new ClassFilter(PsiField.class), new ModifierFilter(PsiModifier.STATIC, PsiModifier.FINAL)));\n    }\n\n    if (psiElement().afterLeaf(\"=\").inside(PsiVariable.class).accepts(position)) {\n      return new OrFilter(\n        new ClassFilter(PsiVariable.class, false),\n        new ExcludeDeclaredFilter(new ClassFilter(PsiVariable.class)));\n    }\n\n    if (SWITCH_LABEL.accepts(position)) {\n      return new ClassFilter(PsiField.class) {\n        @Override\n        public boolean isAcceptable(Object element, PsiElement context) {\n          return element instanceof PsiEnumConstant;\n        }\n      };\n    }\n\n    return TrueFilter.INSTANCE;\n  }","commit_id":"744cc3c5ed2571bcd8057ba04ef89ef4a48f500b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void completeVariableNameForRefactoring(Project project,\n                                                        Set<LookupElement> set,\n                                                        PrefixMatcher matcher,\n                                                        PsiType varType,\n                                                        VariableKind varKind, final boolean includeOverlapped, final boolean methodPrefix) {\n    JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(project);\n    SuggestedNameInfo suggestedNameInfo = codeStyleManager.suggestVariableName(varKind, null, null, varType);\n    final String[] strings = completeVariableNameForRefactoring(codeStyleManager, matcher, varType, varKind, suggestedNameInfo,\n                                                                includeOverlapped, methodPrefix);\n    tunePreferencePolicy(LookupItemUtil.addLookupItems(set, strings, matcher), suggestedNameInfo);\n  }","id":1737,"modified_method":"public static void completeVariableNameForRefactoring(Project project,\n                                                        Set<LookupElement> set,\n                                                        PrefixMatcher matcher,\n                                                        PsiType varType,\n                                                        VariableKind varKind, final boolean includeOverlapped, final boolean methodPrefix) {\n    JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(project);\n    SuggestedNameInfo suggestedNameInfo = codeStyleManager.suggestVariableName(varKind, null, null, varType);\n    final String[] strings = completeVariableNameForRefactoring(codeStyleManager, matcher, varType, varKind, suggestedNameInfo,\n                                                                includeOverlapped, methodPrefix);\n    addLookupItems(set, suggestedNameInfo, matcher, strings);\n  }","commit_id":"744cc3c5ed2571bcd8057ba04ef89ef4a48f500b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void completeLocalVariableName(Set<LookupElement> set, PrefixMatcher matcher, PsiVariable var, boolean includeOverlapped) {\n    FeatureUsageTracker.getInstance().triggerFeatureUsed(\"editing.completion.variable.name\");\n    final JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(var.getProject());\n    final VariableKind variableKind = codeStyleManager.getVariableKind(var);\n\n    String propertyName = null;\n    if (variableKind == VariableKind.PARAMETER) {\n      final PsiMethod method = PsiTreeUtil.getParentOfType(var, PsiMethod.class);\n      propertyName = PropertyUtil.getPropertyName(method);\n    }\n\n    final PsiType type = var.getType();\n    SuggestedNameInfo suggestedNameInfo = codeStyleManager.suggestVariableName(variableKind, propertyName, null, type, StringUtil.isEmpty(matcher.getPrefix()));\n    final String[] suggestedNames = suggestedNameInfo.names;\n    tunePreferencePolicy(LookupItemUtil.addLookupItems(set, suggestedNames, matcher), suggestedNameInfo);\n    if (set.isEmpty()) {\n      if (type.equalsToText(CommonClassNames.JAVA_LANG_OBJECT) && matcher.prefixMatches(\"object\")) {\n        set.add(LookupElementBuilder.create(\"object\"));\n      }\n      if (type.equalsToText(CommonClassNames.JAVA_LANG_STRING) && matcher.prefixMatches(\"string\")) {\n        set.add(LookupElementBuilder.create(\"string\"));\n      }\n    }\n\n    if (set.isEmpty() && includeOverlapped) {\n      suggestedNameInfo = new SuggestedNameInfo(getOverlappedNameVersions(matcher.getPrefix(), suggestedNames, \"\")) {\n        public void nameChoosen(String name) {\n        }\n      };\n\n      tunePreferencePolicy(LookupItemUtil.addLookupItems(set, suggestedNameInfo.names, matcher), suggestedNameInfo);\n    }\n    PsiElement parent = PsiTreeUtil.getParentOfType(var, PsiCodeBlock.class);\n    if(parent == null) parent = PsiTreeUtil.getParentOfType(var, PsiMethod.class);\n    tunePreferencePolicy(LookupItemUtil.addLookupItems(set, getUnresolvedReferences(parent, false), matcher), suggestedNameInfo);\n\n    PsiExpression initializer = var.getInitializer();\n    if (initializer != null) {\n      SuggestedNameInfo initializerSuggestions = IntroduceVariableBase.getSuggestedName(type, initializer);\n      tunePreferencePolicy(LookupItemUtil.addLookupItems(set, initializerSuggestions.names, matcher), initializerSuggestions);\n    }\n  }","id":1738,"modified_method":"private static void completeLocalVariableName(Set<LookupElement> set, PrefixMatcher matcher, PsiVariable var, boolean includeOverlapped) {\n    FeatureUsageTracker.getInstance().triggerFeatureUsed(\"editing.completion.variable.name\");\n    final JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(var.getProject());\n    final VariableKind variableKind = codeStyleManager.getVariableKind(var);\n\n    String propertyName = null;\n    if (variableKind == VariableKind.PARAMETER) {\n      final PsiMethod method = PsiTreeUtil.getParentOfType(var, PsiMethod.class);\n      propertyName = PropertyUtil.getPropertyName(method);\n    }\n\n    final PsiType type = var.getType();\n    SuggestedNameInfo suggestedNameInfo = codeStyleManager.suggestVariableName(variableKind, propertyName, null, type, StringUtil.isEmpty(matcher.getPrefix()));\n    suggestedNameInfo = codeStyleManager.suggestUniqueVariableName(suggestedNameInfo, var, false);\n    final String[] suggestedNames = suggestedNameInfo.names;\n    addLookupItems(set, suggestedNameInfo, matcher, suggestedNames);\n    if (set.isEmpty()) {\n      if (type.equalsToText(CommonClassNames.JAVA_LANG_OBJECT) && matcher.prefixMatches(\"object\")) {\n        set.add(LookupElementBuilder.create(\"object\"));\n      }\n      if (type.equalsToText(CommonClassNames.JAVA_LANG_STRING) && matcher.prefixMatches(\"string\")) {\n        set.add(LookupElementBuilder.create(\"string\"));\n      }\n    }\n\n    if (set.isEmpty() && includeOverlapped) {\n      addLookupItems(set, null, matcher, getOverlappedNameVersions(matcher.getPrefix(), suggestedNames, \"\"));\n    }\n    PsiElement parent = PsiTreeUtil.getParentOfType(var, PsiCodeBlock.class);\n    if(parent == null) parent = PsiTreeUtil.getParentOfType(var, PsiMethod.class);\n    addLookupItems(set, suggestedNameInfo, matcher, getUnresolvedReferences(parent, false));\n\n    PsiExpression initializer = var.getInitializer();\n    if (initializer != null) {\n      SuggestedNameInfo initializerSuggestions = IntroduceVariableBase.getSuggestedName(type, initializer);\n      addLookupItems(set, initializerSuggestions, matcher, initializerSuggestions.names);\n    }\n  }","commit_id":"744cc3c5ed2571bcd8057ba04ef89ef4a48f500b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void tunePreferencePolicy(final List<LookupElement> list, final SuggestedNameInfo suggestedNameInfo) {\n    final InsertHandler<LookupElement> insertHandler = new InsertHandler<LookupElement>() {\n      public void handleInsert(final InsertionContext context, final LookupElement item) {\n        suggestedNameInfo.nameChoosen(item.getLookupString());\n      }\n    };\n\n    for (int i = 0; i < list.size(); i++) {\n      LookupElement item = list.get(i);\n      if (item instanceof LookupItem) {\n        ((LookupItem)item).setPriority(list.size() - i).setInsertHandler(insertHandler);\n      }\n    }\n  }","id":1739,"modified_method":"private static void addLookupItems(Set<LookupElement> lookupElements, @Nullable final SuggestedNameInfo callback, PrefixMatcher matcher, String[] strings) {\n    for (int i = 0; i < strings.length; i++) {\n      String name = strings[i];\n      if (!matcher.prefixMatches(name)) {\n        continue;\n      }\n      \n      LookupElement element = PrioritizedLookupElement.withPriority(LookupElementBuilder.create(name).withAutoCompletionPolicy(AutoCompletionPolicy.GIVE_CHANCE_TO_OVERWRITE), -i);\n      if (callback != null) {\n        element = LookupElementDecorator.withInsertHandler(element, new InsertHandler<LookupElementDecorator<LookupElement>>() {\n          @Override\n          public void handleInsert(InsertionContext context, LookupElementDecorator<LookupElement> item) {\n            callback.nameChoosen(item.getLookupString());\n          }\n        });\n      }\n      lookupElements.add(element);\n    }\n  }","commit_id":"744cc3c5ed2571bcd8057ba04ef89ef4a48f500b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void completeMethodName(Set<LookupElement> set, PsiElement element, final PrefixMatcher matcher){\n    if(element instanceof PsiMethod) {\n      final PsiMethod method = (PsiMethod)element;\n      if (method.isConstructor()) {\n        final PsiClass containingClass = method.getContainingClass();\n        if (containingClass != null) {\n          final String name = containingClass.getName();\n          if (StringUtil.isNotEmpty(name)) {\n            LookupItemUtil.addLookupItem(set, name, matcher);\n          }\n        }\n        return;\n      }\n    }\n\n    PsiClass ourClassParent = PsiTreeUtil.getParentOfType(element, PsiClass.class);\n    if (ourClassParent == null) return;\n    LookupItemUtil.addLookupItems(set, getUnresolvedReferences(ourClassParent, true), matcher);\n\n    LookupItemUtil.addLookupItems(set, getPropertiesHandlersNames(\n      ourClassParent,\n      ((PsiModifierListOwner)element).hasModifierProperty(PsiModifier.STATIC),\n      PsiUtil.getTypeByPsiElement(element), element), matcher);\n  }","id":1740,"modified_method":"private static void completeMethodName(Set<LookupElement> set, PsiElement element, final PrefixMatcher matcher){\n    if(element instanceof PsiMethod) {\n      final PsiMethod method = (PsiMethod)element;\n      if (method.isConstructor()) {\n        final PsiClass containingClass = method.getContainingClass();\n        if (containingClass != null) {\n          final String name = containingClass.getName();\n          if (StringUtil.isNotEmpty(name)) {\n            LookupItemUtil.addLookupItem(set, name, matcher);\n          }\n        }\n        return;\n      }\n    }\n\n    PsiClass ourClassParent = PsiTreeUtil.getParentOfType(element, PsiClass.class);\n    if (ourClassParent == null) return;\n    addLookupItems(set, null, matcher, getUnresolvedReferences(ourClassParent, true));\n\n    addLookupItems(set, null, matcher, getPropertiesHandlersNames(\n      ourClassParent,\n      ((PsiModifierListOwner)element).hasModifierProperty(PsiModifier.STATIC),\n      PsiUtil.getTypeByPsiElement(element), element));\n  }","commit_id":"744cc3c5ed2571bcd8057ba04ef89ef4a48f500b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void completeFieldName(Set<LookupElement> set, PsiField var, final PrefixMatcher matcher, boolean includeOverlapped) {\n    FeatureUsageTracker.getInstance().triggerFeatureUsed(\"editing.completion.variable.name\");\n\n    JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(var.getProject());\n    final VariableKind variableKind = JavaCodeStyleManager.getInstance(var.getProject()).getVariableKind(var);\n\n    final String prefix = matcher.getPrefix();\n    if (PsiType.VOID.equals(var.getType()) || psiField().inClass(psiClass().isInterface()).accepts(var)) {\n      completeVariableNameForRefactoring(var.getProject(), set, matcher, var.getType(), variableKind, includeOverlapped, true);\n      return;\n    }\n\n    SuggestedNameInfo suggestedNameInfo = codeStyleManager.suggestVariableName(variableKind, null, null, var.getType());\n    final String[] suggestedNames = suggestedNameInfo.names;\n    tunePreferencePolicy(LookupItemUtil.addLookupItems(set, suggestedNames, matcher), suggestedNameInfo);\n\n    if (set.isEmpty() && includeOverlapped) {\n      // use suggested names as suffixes\n      final String requiredSuffix = codeStyleManager.getSuffixByVariableKind(variableKind);\n      if(variableKind != VariableKind.STATIC_FINAL_FIELD){\n        for (int i = 0; i < suggestedNames.length; i++)\n          suggestedNames[i] = codeStyleManager.variableNameToPropertyName(suggestedNames[i], variableKind);\n      }\n\n\n      suggestedNameInfo = new SuggestedNameInfo(getOverlappedNameVersions(prefix, suggestedNames, requiredSuffix)) {\n        public void nameChoosen(String name) {\n        }\n      };\n\n      tunePreferencePolicy(LookupItemUtil.addLookupItems(set, suggestedNameInfo.names, matcher), suggestedNameInfo);\n    }\n\n    tunePreferencePolicy(LookupItemUtil.addLookupItems(set, getUnresolvedReferences(var.getParent(), false), matcher), suggestedNameInfo);\n\n    PsiExpression initializer = var.getInitializer();\n    PsiClass containingClass = var.getContainingClass();\n    if (initializer != null && containingClass != null) {\n      SuggestedNameInfo initializerSuggestions = InplaceIntroduceFieldPopup.\n        suggestFieldName(var.getType(), null, initializer, var.hasModifierProperty(PsiModifier.STATIC), containingClass);\n      tunePreferencePolicy(LookupItemUtil.addLookupItems(set, initializerSuggestions.names, matcher), initializerSuggestions);\n    }\n  }","id":1741,"modified_method":"private static void completeFieldName(Set<LookupElement> set, PsiField var, final PrefixMatcher matcher, boolean includeOverlapped) {\n    FeatureUsageTracker.getInstance().triggerFeatureUsed(\"editing.completion.variable.name\");\n\n    JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(var.getProject());\n    final VariableKind variableKind = JavaCodeStyleManager.getInstance(var.getProject()).getVariableKind(var);\n\n    final String prefix = matcher.getPrefix();\n    if (PsiType.VOID.equals(var.getType()) || psiField().inClass(psiClass().isInterface()).accepts(var)) {\n      completeVariableNameForRefactoring(var.getProject(), set, matcher, var.getType(), variableKind, includeOverlapped, true);\n      return;\n    }\n\n    SuggestedNameInfo suggestedNameInfo = codeStyleManager.suggestVariableName(variableKind, null, null, var.getType());\n    final String[] suggestedNames = suggestedNameInfo.names;\n    addLookupItems(set, suggestedNameInfo, matcher, suggestedNames);\n\n    if (set.isEmpty() && includeOverlapped) {\n      // use suggested names as suffixes\n      final String requiredSuffix = codeStyleManager.getSuffixByVariableKind(variableKind);\n      if(variableKind != VariableKind.STATIC_FINAL_FIELD){\n        for (int i = 0; i < suggestedNames.length; i++)\n          suggestedNames[i] = codeStyleManager.variableNameToPropertyName(suggestedNames[i], variableKind);\n      }\n\n\n      addLookupItems(set, null, matcher, getOverlappedNameVersions(prefix, suggestedNames, requiredSuffix));\n    }\n\n    addLookupItems(set, suggestedNameInfo, matcher, getUnresolvedReferences(var.getParent(), false));\n\n    PsiExpression initializer = var.getInitializer();\n    PsiClass containingClass = var.getContainingClass();\n    if (initializer != null && containingClass != null) {\n      SuggestedNameInfo initializerSuggestions = InplaceIntroduceFieldPopup.\n        suggestFieldName(var.getType(), null, initializer, var.hasModifierProperty(PsiModifier.STATIC), containingClass);\n      addLookupItems(set, initializerSuggestions, matcher, initializerSuggestions.names);\n    }\n  }","commit_id":"744cc3c5ed2571bcd8057ba04ef89ef4a48f500b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n\t\tpublic View getView(int position, View convertView, ViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif (row == null) {\n\t\t\t\tLayoutInflater inflater = getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.searchpoi_list, parent, false);\n\t\t\t}\n\t\t\tfloat[] mes = null;\n\t\t\tTextView label = (TextView) row.findViewById(R.id.poi_label);\n\t\t\tImageView direction = (ImageView) row.findViewById(R.id.poi_direction);\n\t\t\tImageView icon = (ImageView) row.findViewById(R.id.poi_icon);\n\t\t\tAmenity amenity = getItem(position);\n\t\t\tnet.osmand.Location loc = location;\n\t\t\tif(loc != null){\n\t\t\t\tmes = new float[2];\n\t\t\t\tLatLon l = amenity.getLocation();\n\t\t\t\tnet.osmand.Location.distanceBetween(l.getLatitude(), l.getLongitude(), loc.getLatitude(), loc.getLongitude(), mes);\n\t\t\t}\n\t\t\tint opened = -1;\n\t\t\tif (amenity.getOpeningHours() != null) {\n\t\t\t\tOpeningHours rs = OpeningHoursParser.parseOpenedHours(amenity.getOpeningHours());\n\t\t\t\tif (rs != null) {\n\t\t\t\t\tCalendar inst = Calendar.getInstance();\n\t\t\t\t\tinst.setTimeInMillis(System.currentTimeMillis());\n\t\t\t\t\tboolean work = false;\n\t\t\t\t\twork = rs.isOpenedForTime(inst);\n\t\t\t\t\tif (work) {\n\t\t\t\t\t\topened = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\topened = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(loc != null){\n\t\t\t\tDirectionDrawable draw = new DirectionDrawable();\n\t\t\t\tFloat h = heading;\n\t\t\t\tfloat a = h != null ? h : 0;\n\t\t\t\tdraw.setAngle(mes[1] - a + 180);\n\t\t\t\tdraw.setOpenedColor(opened);\n\t\t\t\tdirection.setImageDrawable(draw);\n\t\t\t} else {\n\t\t\t\tif(opened == -1){\n\t\t\t\t\tdirection.setImageResource(R.drawable.poi);\n\t\t\t\t} else if(opened == 0){\n\t\t\t\t\tdirection.setImageResource(R.drawable.opened_poi);\n\t\t\t\t} else {\n\t\t\t\t\tdirection.setImageResource(R.drawable.closed_poi);\n\t\t\t\t}\n\t\t\t}\n\t\t\tString i = amenity.getType().getDefaultTag().toLowerCase() + \"_\" + amenity.getSubType().toLowerCase();\n\t\t\tif(RenderingIcons.containsBigIcon(i)) {\n\t\t\t\ticon.setImageResource(RenderingIcons.getBigIconResourceId(i));\n\t\t\t} else {\n\t\t\t\ticon.setImageDrawable(null);\n\t\t\t}\n\n\t\t\tString distance = \"  \";\n\t\t\tif(mes != null){\n\t\t\t\tdistance = \" \" + OsmAndFormatter.getFormattedDistance((int) mes[0], getMyApplication()) + \"  \"; //$NON-NLS-1$\n\t\t\t}\n\t\t\tString poiType = OsmAndFormatter.getPoiStringWithoutType(amenity, settings.usingEnglishNames());\n\t\t\tlabel.setText(distance + poiType, TextView.BufferType.SPANNABLE);\n\t\t\t((Spannable) label.getText()).setSpan(new ForegroundColorSpan(getResources().getColor(R.color.color_distance)), 0, distance.length() - 1, 0);\n\t\t\treturn (row);\n\t\t}","id":1742,"modified_method":"@Override\n\t\tpublic View getView(int position, View convertView, ViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif (row == null) {\n\t\t\t\tLayoutInflater inflater = getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.searchpoi_list, parent, false);\n\t\t\t}\n\t\t\tfloat[] mes = null;\n\t\t\tTextView label = (TextView) row.findViewById(R.id.poi_label);\n\t\t\tImageView direction = (ImageView) row.findViewById(R.id.poi_direction);\n\t\t\tImageView icon = (ImageView) row.findViewById(R.id.poi_icon);\n\t\t\tAmenity amenity = getItem(position);\n\t\t\tnet.osmand.Location loc = location;\n\t\t\tif(loc != null){\n\t\t\t\tmes = new float[2];\n\t\t\t\tLatLon l = amenity.getLocation();\n\t\t\t\tnet.osmand.Location.distanceBetween(l.getLatitude(), l.getLongitude(), loc.getLatitude(), loc.getLongitude(), mes);\n\t\t\t}\n\t\t\tint opened = -1;\n\t\t\tif (amenity.getOpeningHours() != null) {\n\t\t\t\tOpeningHours rs = OpeningHoursParser.parseOpenedHours(amenity.getOpeningHours());\n\t\t\t\tif (rs != null) {\n\t\t\t\t\tCalendar inst = Calendar.getInstance();\n\t\t\t\t\tinst.setTimeInMillis(System.currentTimeMillis());\n\t\t\t\t\tboolean work = false;\n\t\t\t\t\twork = rs.isOpenedForTime(inst);\n\t\t\t\t\tif (work) {\n\t\t\t\t\t\topened = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\topened = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(loc != null){\n\t\t\t\tDirectionDrawable draw = new DirectionDrawable();\n\t\t\t\tFloat h = heading;\n\t\t\t\tfloat a = h != null ? h : 0;\n\t\t\t\tdraw.setAngle(mes[1] - a + 180);\n\t\t\t\tdraw.setOpenedColor(opened);\n\t\t\t\tdirection.setImageDrawable(draw);\n\t\t\t} else {\n\t\t\t\tif(opened == -1){\n\t\t\t\t\tdirection.setImageResource(R.drawable.poi);\n\t\t\t\t} else if(opened == 0){\n\t\t\t\t\tdirection.setImageResource(R.drawable.opened_poi);\n\t\t\t\t} else {\n\t\t\t\t\tdirection.setImageResource(R.drawable.closed_poi);\n\t\t\t\t}\n\t\t\t}\n\t\t\tStringBuilder tag = new StringBuilder();\n\t\t\tStringBuilder value = new StringBuilder();\n\t\t\tMapRenderingTypes.getDefault().getAmenityTagValue(amenity.getType(), amenity.getSubType(),\n\t\t\t\t\ttag, value);\n\t\t\tif(RenderingIcons.containsBigIcon(tag.toString() + \"_\" + value.toString())) {\n\t\t\t\ticon.setImageResource(RenderingIcons.getBigIconResourceId(tag.toString() + \"_\" + value.toString()));\n\t\t\t} else if(RenderingIcons.containsBigIcon(value.toString())) {\n\t\t\t\ticon.setImageResource(RenderingIcons.getBigIconResourceId(value.toString()));\n\t\t\t} else {\n\t\t\t\ticon.setImageDrawable(null);\n\t\t\t}\n\n\t\t\tString distance = \"  \";\n\t\t\tif(mes != null){\n\t\t\t\tdistance = \" \" + OsmAndFormatter.getFormattedDistance((int) mes[0], getMyApplication()) + \"  \"; //$NON-NLS-1$\n\t\t\t}\n\t\t\tString poiType = OsmAndFormatter.getPoiStringWithoutType(amenity, settings.usingEnglishNames());\n\t\t\tlabel.setText(distance + poiType, TextView.BufferType.SPANNABLE);\n\t\t\t((Spannable) label.getText()).setSpan(new ForegroundColorSpan(getResources().getColor(R.color.color_distance)), 0, distance.length() - 1, 0);\n\t\t\treturn (row);\n\t\t}","commit_id":"303638b2aa57ab1185fad1c3f3a74ab0a2f5d782","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic View getView(int position, View convertView, ViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif(row == null) {\n\t\t\t\tLayoutInflater inflater = getSherlockActivity().getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.searchpoifolder_list, parent, false);\n\t\t\t}\n\t\t\tTextView label = (TextView) row.findViewById(R.id.folder_label);\n\t\t\tImageView icon = (ImageView) row.findViewById(R.id.folder_icon);\n\t\t\tfinal PoiFilter model = getItem(position);\n\t\t\tlabel.setText(model.getName());\n\t\t\tif(model.getFilterId().equals(PoiFilter.CUSTOM_FILTER_ID)) {\n\t\t\t\ticon.setImageResource(android.R.drawable.ic_input_get);\n\t\t\t} else if (model.getFilterId().equals(PoiFilter.BY_NAME_FILTER_ID)) {\n\t\t\t\t//label.setTypeface(Typeface.DEFAULT, Typeface.ITALIC);\n\t\t\t\ticon.setImageResource(android.R.drawable.ic_search_category_default);\n\t\t\t} else {\n//\t\t\t\tlabel.setTypeface(Typeface.DEFAULT);\n\t\t\t\tif(RenderingIcons.containsBigIcon(model.getSimplifiedId())) {\n\t\t\t\t\ticon.setImageDrawable(RenderingIcons.getBigIcon(getActivity(), model.getSimplifiedId()));\n\t\t\t\t} else {\n\t\t\t\t\ticon.setImageResource(model.isStandardFilter() ? R.drawable.folder : R.drawable.list_favorite);\n\t\t\t\t}\n\t\t\t}\n\t\t\tImageView editIcon = (ImageView) row.findViewById(R.id.folder_edit_icon);\n\t\t\tif (model.isStandardFilter()) {\n\t\t\t\teditIcon.setVisibility(View.GONE);\n\t\t\t} else {\n\t\t\t\teditIcon.setVisibility(View.VISIBLE);\n\t\t\t}\n\t\t\teditIcon.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\tshowEditActivity(model);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\treturn (row);\n\t\t}","id":1743,"modified_method":"@Override\n\t\tpublic View getView(int position, View convertView, ViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif(row == null) {\n\t\t\t\tLayoutInflater inflater = getSherlockActivity().getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.searchpoifolder_list, parent, false);\n\t\t\t}\n\t\t\tTextView label = (TextView) row.findViewById(R.id.folder_label);\n\t\t\tImageView icon = (ImageView) row.findViewById(R.id.folder_icon);\n\t\t\tfinal PoiFilter model = getItem(position);\n\t\t\tlabel.setText(model.getName());\n\t\t\tif(model.getFilterId().equals(PoiFilter.CUSTOM_FILTER_ID)) {\n\t\t\t\ticon.setImageResource(android.R.drawable.ic_input_get);\n\t\t\t} else if (model.getFilterId().equals(PoiFilter.BY_NAME_FILTER_ID)) {\n\t\t\t\ticon.setImageResource(android.R.drawable.ic_search_category_default);\n\t\t\t} else {\n\t\t\t\tif(RenderingIcons.containsBigIcon(model.getSimplifiedId())) {\n\t\t\t\t\ticon.setImageDrawable(RenderingIcons.getBigIcon(getActivity(), model.getSimplifiedId()));\n\t\t\t\t} else {\n\t\t\t\t\ticon.setImageResource(R.drawable.mx_user_defined);\n\t\t\t\t}\n\t\t\t}\n\t\t\tImageView editIcon = (ImageView) row.findViewById(R.id.folder_edit_icon);\n\t\t\tif (model.isStandardFilter()) {\n\t\t\t\teditIcon.setVisibility(View.GONE);\n\t\t\t} else {\n\t\t\t\teditIcon.setVisibility(View.VISIBLE);\n\t\t\t}\n\t\t\teditIcon.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\tshowEditActivity(model);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\treturn (row);\n\t\t}","commit_id":"303638b2aa57ab1185fad1c3f3a74ab0a2f5d782","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void attachListeners(final int dialogID, final Dialog dlg, final Amenity a, final Node n) {\n\t\t// DO NOT show on focus with empty text predefined list of subcategories - problems when rotating\n\t\ttypeText.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tshowSubCategory(a);\n\t\t\t}\n\t\t});\n\t\ttypeText.setOnLongClickListener(new View.OnLongClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onLongClick(View v) {\n\t\t\t\tshowSubCategory(a);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\topenHoursButton.setOnClickListener(new View.OnClickListener(){\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tctx.showDialog(DIALOG_OPENING_HOURS);\n\t\t\t}\n\t\t});\n\t\ttypeText.addTextChangedListener(new TextWatcher(){\n\n\t\t\t@Override\n\t\t\tpublic void afterTextChanged(Editable s) {\n\t\t\t\tString str = s.toString();\n\t\t\t\ta.setSubType(str);\n\t\t\t\tAmenityType t = MapRenderingTypes.getDefault().getAmenityNameToType().get(str);\n\t\t\t\tif(t != null && a.getType() != t){\n\t\t\t\t\ta.setType(t);\n\t\t\t\t\ttypeButton.setText(OsmAndFormatter.toPublicString(t, ctx.getMyApplication()));\n\t\t\t\t\tupdateSubTypesAdapter(t);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onTextChanged(CharSequence s, int start, int before, int count) {\n\t\t\t}\n\t\t});\n\n\t\ttypeButton.setOnClickListener(new View.OnClickListener(){\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tctx.showDialog(DIALOG_POI_TYPES);\n\t\t\t}\n\t\t});\n\t\t\n\t\tfinal Button advancedModeButton = ((Button)dlg.findViewById(R.id.advancedMode));\n\t\tadvancedModeButton.setOnClickListener(new View.OnClickListener() {\t\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tfinal TableLayout layout = ((TableLayout) dlg.findViewById(R.id.advancedModeTable));\n\t\t\t\tTableLayout.LayoutParams tlParams = new TableLayout.LayoutParams(TableLayout.LayoutParams.FILL_PARENT,\n\t\t\t\t\t\tTableLayout.LayoutParams.WRAP_CONTENT);\n\t\t\t\tlayout.setLayoutParams(tlParams);\n\t\t\t\tlayout.setColumnStretchable(1, true);\n\t\t\t\tlayout.setVisibility((layout.getVisibility() == View.VISIBLE) ? View.GONE : View.VISIBLE);\n\t\t\t\tButton addTag = (Button) dlg.findViewById(R.id.addTag);\n\t\t\t\taddTag.setVisibility((layout.getVisibility() == View.VISIBLE) ? View.VISIBLE : View.GONE);\n\t\t\t\tif (layout.getVisibility() == View.VISIBLE) {\n\t\t\t\t\taddTag.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\t\t\taddTagValueRow(n, layout, null, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\twhile (layout.getChildCount() > 0) {\n\t\t\t\t\tlayout.removeViewAt(0);\n\t\t\t\t}\n\t\t\t\tlayout.requestLayout();\n\t\t\t\tfor (String tg : n.getTagKeySet()) {\n\t\t\t\t\tif (!tg.equals(OSMTagKey.NAME.getValue()) && !tg.equals(OSMTagKey.OPENING_HOURS.getValue())\n\t\t\t\t\t\t\t&& !tg.equals(OSMTagKey.PHONE.getValue()) && !tg.equals(OSMTagKey.WEBSITE.getValue())) {\n\t\t\t\t\t\tif(a == null || a.getType() == null || !a.getType().getDefaultTag().equals(tg)) {\n\t\t\t\t\t\t\taddTagValueRow(n, layout, tg, n.getTag(tg));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\t((Button)dlg.findViewById(R.id.Cancel)).setOnClickListener(new View.OnClickListener(){\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\t//we must do remove, because there are two dialogs EDIT,CREATE using same variables!!\n\t\t\t\tctx.removeDialog(dialogID);\n\t\t\t}\n\t\t});\n\t\t((Button)dlg.findViewById(R.id.Commit)).setOnClickListener(new View.OnClickListener(){\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tResources resources = v.getResources();\n\t\t\t\tfinal String msg = n.getId() == -1 ? resources.getString(R.string.poi_action_add) : resources\n\t\t\t\t\t\t.getString(R.string.poi_action_change);\n\t\t\t\tOsmPoint.Action action = n.getId() == -1 ? OsmPoint.Action.CREATE : OsmPoint.Action.MODIFY;\n\t\t\t\tMap<AmenityType, Map<String, String>> typeNameToTagVal = MapRenderingTypes.getDefault().getAmenityTypeNameToTagVal();\n\t\t\t\tAmenityType type = a.getType();\n\t\t\t\tString tag = type.getDefaultTag();\n\t\t\t\tString subType = typeText.getText().toString();\n\t\t\t\tString val = subType;\n\t\t\t\tif (typeNameToTagVal.containsKey(type)) {\n\t\t\t\t\tMap<String, String> map = typeNameToTagVal.get(type);\n\t\t\t\t\tif (map.containsKey(subType)) {\n\t\t\t\t\t\tString res = map.get(subType);\n\t\t\t\t\t\tif (res != null) {\n\t\t\t\t\t\t\tint i = res.indexOf(' ');\n\t\t\t\t\t\t\tif (i != -1) {\n\t\t\t\t\t\t\t\ttag = res.substring(0, i);\n\t\t\t\t\t\t\t\tval = res.substring(i + 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttag = res;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tn.putTag(tag, val);\n\t\t\t\tString name = nameText.getText().toString();\n\t\t\t\tif(name.length() > 0) {\n\t\t\t\t\tn.putTag(OSMTagKey.NAME.getValue(), name);\n\t\t\t\t}\n\t\t\t\tif (openingHours.getText().toString().length() == 0) {\n\t\t\t\t\tn.removeTag(OSMTagKey.OPENING_HOURS.getValue());\n\t\t\t\t} else {\n\t\t\t\t\tn.putTag(OSMTagKey.OPENING_HOURS.getValue(), openingHours.getText().toString());\n\t\t\t\t}\n\t\t\t\tString website = websiteText.getText().toString();\n\t\t\t\tif (website.length() > 0 ){\n\t\t\t\t\tn.putTag(OSMTagKey.WEBSITE.getValue(),website);\n\t\t\t\t}\n\t\t\t\tString phone = phoneText.getText().toString();\n\t\t\t\tif (phone.length() > 0 ){\n\t\t\t\t\tn.putTag(OSMTagKey.PHONE.getValue(),phone);\n\t\t\t\t}\n\t\t\t\tString str = streetNameText.getText().toString();\n\t\t\t\tif (str .length() > 0 ){\n\t\t\t\t\tn.putTag(OSMTagKey.ADDR_STREET.getValue(),str);\n\t\t\t\t}\n\t\t\t\tString hno = hnoText.getText().toString();\n\t\t\t\tif (hno .length() > 0 ){\n\t\t\t\t\tn.putTag(OSMTagKey.ADDR_HOUSE_NUMBER.getValue(),hno);\n\t\t\t\t}\n\t\t\t\tcommitNode(action, n, openstreetmapUtil.getEntityInfo(), commentText.getText().toString(), closeChange.isSelected(), \n\t\t\t\t\t\tnew Runnable() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\tAccessibleToast.makeText(ctx, MessageFormat.format(ctx.getResources().getString(R.string.poi_action_succeded_template), msg),\n\t\t\t\t\t\t\t\tToast.LENGTH_LONG).show();\n\t\t\t\t\t\tif (ctx.getMapView() != null) {\n\t\t\t\t\t\t\tctx.getMapView().refreshMap(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.removeDialog(dialogID);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}","id":1744,"modified_method":"private void attachListeners(final int dialogID, final Dialog dlg, final Amenity a, final Node n) {\n\t\t// DO NOT show on focus with empty text predefined list of subcategories - problems when rotating\n\t\ttypeText.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tshowSubCategory(a);\n\t\t\t}\n\t\t});\n\t\ttypeText.setOnLongClickListener(new View.OnLongClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onLongClick(View v) {\n\t\t\t\tshowSubCategory(a);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\topenHoursButton.setOnClickListener(new View.OnClickListener(){\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tctx.showDialog(DIALOG_OPENING_HOURS);\n\t\t\t}\n\t\t});\n\t\ttypeText.addTextChangedListener(new TextWatcher(){\n\n\t\t\t@Override\n\t\t\tpublic void afterTextChanged(Editable s) {\n\t\t\t\tString str = s.toString();\n\t\t\t\ta.setSubType(str);\n\t\t\t\tAmenityType t = MapRenderingTypes.getDefault().getAmenityNameToType().get(str);\n\t\t\t\tif(t != null && a.getType() != t){\n\t\t\t\t\ta.setType(t);\n\t\t\t\t\ttypeButton.setText(OsmAndFormatter.toPublicString(t, ctx.getMyApplication()));\n\t\t\t\t\tupdateSubTypesAdapter(t);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onTextChanged(CharSequence s, int start, int before, int count) {\n\t\t\t}\n\t\t});\n\n\t\ttypeButton.setOnClickListener(new View.OnClickListener(){\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tctx.showDialog(DIALOG_POI_TYPES);\n\t\t\t}\n\t\t});\n\t\t\n\t\tfinal Button advancedModeButton = ((Button)dlg.findViewById(R.id.advancedMode));\n\t\tadvancedModeButton.setOnClickListener(new View.OnClickListener() {\t\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tfinal TableLayout layout = ((TableLayout) dlg.findViewById(R.id.advancedModeTable));\n\t\t\t\tTableLayout.LayoutParams tlParams = new TableLayout.LayoutParams(TableLayout.LayoutParams.FILL_PARENT,\n\t\t\t\t\t\tTableLayout.LayoutParams.WRAP_CONTENT);\n\t\t\t\tlayout.setLayoutParams(tlParams);\n\t\t\t\tlayout.setColumnStretchable(1, true);\n\t\t\t\tlayout.setVisibility((layout.getVisibility() == View.VISIBLE) ? View.GONE : View.VISIBLE);\n\t\t\t\tButton addTag = (Button) dlg.findViewById(R.id.addTag);\n\t\t\t\taddTag.setVisibility((layout.getVisibility() == View.VISIBLE) ? View.VISIBLE : View.GONE);\n\t\t\t\tif (layout.getVisibility() == View.VISIBLE) {\n\t\t\t\t\taddTag.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\t\t\taddTagValueRow(n, layout, null, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\twhile (layout.getChildCount() > 0) {\n\t\t\t\t\tlayout.removeViewAt(0);\n\t\t\t\t}\n\t\t\t\tlayout.requestLayout();\n\t\t\t\tfor (String tg : n.getTagKeySet()) {\n\t\t\t\t\tif (!tg.equals(OSMTagKey.NAME.getValue()) && !tg.equals(OSMTagKey.OPENING_HOURS.getValue())\n\t\t\t\t\t\t\t&& !tg.equals(OSMTagKey.PHONE.getValue()) && !tg.equals(OSMTagKey.WEBSITE.getValue())) {\n\t\t\t\t\t\tif(a == null || a.getType() == null || !a.getType().getDefaultTag().equals(tg)) {\n\t\t\t\t\t\t\taddTagValueRow(n, layout, tg, n.getTag(tg));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\t((Button)dlg.findViewById(R.id.Cancel)).setOnClickListener(new View.OnClickListener(){\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\t//we must do remove, because there are two dialogs EDIT,CREATE using same variables!!\n\t\t\t\tctx.removeDialog(dialogID);\n\t\t\t}\n\t\t});\n\t\t((Button)dlg.findViewById(R.id.Commit)).setOnClickListener(new View.OnClickListener(){\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tResources resources = v.getResources();\n\t\t\t\tfinal String msg = n.getId() == -1 ? resources.getString(R.string.poi_action_add) : resources\n\t\t\t\t\t\t.getString(R.string.poi_action_change);\n\t\t\t\tOsmPoint.Action action = n.getId() == -1 ? OsmPoint.Action.CREATE : OsmPoint.Action.MODIFY;\n\t\t\t\tStringBuilder tag = new StringBuilder();\n\t\t\t\tStringBuilder value = new StringBuilder();\n\t\t\t\tString subType = typeText.getText().toString();\n\t\t\t\tMapRenderingTypes.getDefault().getAmenityTagValue(a.getType(), subType, tag, value);\n\t\t\t\tn.putTag(tag.toString(), value.toString());\n\t\t\t\tString name = nameText.getText().toString();\n\t\t\t\tif(name.length() > 0) {\n\t\t\t\t\tn.putTag(OSMTagKey.NAME.getValue(), name);\n\t\t\t\t}\n\t\t\t\tif (openingHours.getText().toString().length() == 0) {\n\t\t\t\t\tn.removeTag(OSMTagKey.OPENING_HOURS.getValue());\n\t\t\t\t} else {\n\t\t\t\t\tn.putTag(OSMTagKey.OPENING_HOURS.getValue(), openingHours.getText().toString());\n\t\t\t\t}\n\t\t\t\tString website = websiteText.getText().toString();\n\t\t\t\tif (website.length() > 0 ){\n\t\t\t\t\tn.putTag(OSMTagKey.WEBSITE.getValue(),website);\n\t\t\t\t}\n\t\t\t\tString phone = phoneText.getText().toString();\n\t\t\t\tif (phone.length() > 0 ){\n\t\t\t\t\tn.putTag(OSMTagKey.PHONE.getValue(),phone);\n\t\t\t\t}\n\t\t\t\tString str = streetNameText.getText().toString();\n\t\t\t\tif (str .length() > 0 ){\n\t\t\t\t\tn.putTag(OSMTagKey.ADDR_STREET.getValue(),str);\n\t\t\t\t}\n\t\t\t\tString hno = hnoText.getText().toString();\n\t\t\t\tif (hno .length() > 0 ){\n\t\t\t\t\tn.putTag(OSMTagKey.ADDR_HOUSE_NUMBER.getValue(),hno);\n\t\t\t\t}\n\t\t\t\tcommitNode(action, n, openstreetmapUtil.getEntityInfo(), commentText.getText().toString(), closeChange.isSelected(), \n\t\t\t\t\t\tnew Runnable() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\tAccessibleToast.makeText(ctx, MessageFormat.format(ctx.getResources().getString(R.string.poi_action_succeded_template), msg),\n\t\t\t\t\t\t\t\tToast.LENGTH_LONG).show();\n\t\t\t\t\t\tif (ctx.getMapView() != null) {\n\t\t\t\t\t\t\tctx.getMapView().refreshMap(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.removeDialog(dialogID);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}","commit_id":"d99c5a9dca60d9ed16afdcba88ebd3e28455365e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public Map<AmenityType, Map<String, String>> getAmenityTypeNameToTagVal() {\n\t\tif (amenityTypeNameToTagVal == null) {\n\t\t\tMap<String, AmenityRuleType> types = getAmenityEncodingRuleTypes();\n\t\t\tamenityTypeNameToTagVal = new LinkedHashMap<AmenityType, Map<String, String>>();\n\t\t\tfor(AmenityRuleType type : types.values()){\n\t\t\t\tif(type.poiCategory != null && type.targetTagValue == null) {\n\t\t\t\t\tif(!amenityTypeNameToTagVal.containsKey(type.poiCategory)) {\n\t\t\t\t\t\tamenityTypeNameToTagVal.put(type.poiCategory, new TreeMap<String, String>());\n\t\t\t\t\t}\n\t\t\t\t\tString name = type.value;\n\t\t\t\t\tif (name != null) {\n\t\t\t\t\t\tif (type.poiPrefix != null) {\n\t\t\t\t\t\t\tname = type.poiPrefix + name;\n\t\t\t\t\t\t\tamenityTypeNameToTagVal.get(type.poiCategory).put(name, type.tag + \" \" + type.value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tamenityTypeNameToTagVal.get(type.poiCategory).put(name, type.tag);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn amenityTypeNameToTagVal;\n\t}","id":1745,"modified_method":"private Map<AmenityType, Map<String, String>> getAmenityTypeNameToTagVal() {\n\t\tif (amenityTypeNameToTagVal == null) {\n\t\t\tMap<String, AmenityRuleType> types = getAmenityEncodingRuleTypes();\n\t\t\tamenityTypeNameToTagVal = new LinkedHashMap<AmenityType, Map<String, String>>();\n\t\t\tfor(AmenityRuleType type : types.values()){\n\t\t\t\tif(type.poiCategory != null && type.targetTagValue == null) {\n\t\t\t\t\tif(!amenityTypeNameToTagVal.containsKey(type.poiCategory)) {\n\t\t\t\t\t\tamenityTypeNameToTagVal.put(type.poiCategory, new TreeMap<String, String>());\n\t\t\t\t\t}\n\t\t\t\t\tString name = type.value;\n\t\t\t\t\tif (name != null) {\n\t\t\t\t\t\tif (type.poiPrefix != null) {\n\t\t\t\t\t\t\tname = type.poiPrefix + name;\n\t\t\t\t\t\t\tamenityTypeNameToTagVal.get(type.poiCategory).put(name, type.tag + \" \" + type.value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tamenityTypeNameToTagVal.get(type.poiCategory).put(name, type.tag);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn amenityTypeNameToTagVal;\n\t}","commit_id":"d99c5a9dca60d9ed16afdcba88ebd3e28455365e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic Node loadNode(Amenity n) {\n\t\tif(n.getId() % 2 == 1){\n\t\t\t// that's way id\n\t\t\treturn null;\n\t\t}\n\t\tlong nodeId = n.getId() >> 1;\n\n//\t\tEntityId id = new Entity.EntityId(EntityType.NODE, nodeId);\n\t\tNode entity = new Node(n.getLocation().getLatitude(),\n\t\t\t\t\t\t\t   n.getLocation().getLongitude(),\n\t\t\t\t\t\t\t   nodeId);\n\n\t\tMap<AmenityType, Map<String, String>> typeNameToTagVal = MapRenderingTypes.getDefault().getAmenityTypeNameToTagVal();\n\t\tAmenityType type = n.getType();\n\t\tString tag = type.getDefaultTag();\n\t\tString subType = n.getSubType();\n\t\tString val = subType;\n\t\tif (typeNameToTagVal.containsKey(type)) {\n\t\t\tMap<String, String> map = typeNameToTagVal.get(type);\n\t\t\tif (map.containsKey(subType)) {\n\t\t\t\tString res = map.get(subType);\n\t\t\t\tif (res != null) {\n\t\t\t\t\tint i = res.indexOf(' ');\n\t\t\t\t\tif (i != -1) {\n\t\t\t\t\t\ttag = res.substring(0, i);\n\t\t\t\t\t\tval = res.substring(i + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttag = res;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tentity.putTag(tag, val);\n\t\tentity.putTag(OSMTagKey.NAME.getValue(), n.getName());\n\t\tentity.putTag(OSMTagKey.OPENING_HOURS.getValue(), n.getOpeningHours());\n \n\t\t// check whether this is node (because id of node could be the same as relation) \n\t\tif(entity != null && MapUtils.getDistance(entity.getLatLon(), n.getLocation()) < 50){\n\t\t\treturn entity;\n\t\t}\n\t\treturn null;\n\t}","id":1746,"modified_method":"@Override\n\tpublic Node loadNode(Amenity n) {\n\t\tif(n.getId() % 2 == 1){\n\t\t\t// that's way id\n\t\t\treturn null;\n\t\t}\n\t\tlong nodeId = n.getId() >> 1;\n\n//\t\tEntityId id = new Entity.EntityId(EntityType.NODE, nodeId);\n\t\tNode entity = new Node(n.getLocation().getLatitude(),\n\t\t\t\t\t\t\t   n.getLocation().getLongitude(),\n\t\t\t\t\t\t\t   nodeId);\n\t\tStringBuilder tag = new StringBuilder();\n\t\tStringBuilder value = new StringBuilder();\n\t\tMapRenderingTypes.getDefault().getAmenityTagValue(n.getType(), n.getSubType(), tag, value);\n\t\tentity.putTag(tag.toString(), value.toString());\n\t\tentity.putTag(OSMTagKey.NAME.getValue(), n.getName());\n\t\tentity.putTag(OSMTagKey.OPENING_HOURS.getValue(), n.getOpeningHours());\n \n\t\t// check whether this is node (because id of node could be the same as relation) \n\t\tif(entity != null && MapUtils.getDistance(entity.getLatLon(), n.getLocation()) < 50){\n\t\t\treturn entity;\n\t\t}\n\t\treturn null;\n\t}","commit_id":"d99c5a9dca60d9ed16afdcba88ebd3e28455365e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onDraw(Canvas canvas, RectF latLonBounds, RectF tilesRect, DrawSettings nightMode) {\n\t\t\n\t\tif (view.getZoom() >= startZoom) {\n\t\t\tobjects.clear();\n\t\t\tresourceManager.searchAmenitiesAsync(latLonBounds.top, latLonBounds.left, latLonBounds.bottom, latLonBounds.right, view.getZoom(), filter, objects);\n\t\t\tint r = getRadiusPoi(view.getZoom());\n\t\t\tfor (Amenity o : objects) {\n\t\t\t\tint x = view.getRotatedMapXForPoint(o.getLocation().getLatitude(), o.getLocation().getLongitude());\n\t\t\t\tint y = view.getRotatedMapYForPoint(o.getLocation().getLatitude(), o.getLocation().getLongitude());\n\t\t\t\tcanvas.drawCircle(x, y, r, pointAltUI);\n\t\t\t\tcanvas.drawCircle(x, y, r, point);\n\t\t\t\tString id = null;\n\t\t\t\tif (RenderingIcons.containsIcon(o.getType().getDefaultTag() + \"_\" + o.getSubType())) {\n\t\t\t\t\tid = o.getType().getDefaultTag() + \"_\" + o.getSubType();\n\t\t\t\t} else if(RenderingIcons.containsIcon(o.getSubType())){\n\t\t\t\t\tid = o.getSubType();\n\t\t\t\t} \n\t\t\t\tif(id != null){\n\t\t\t\t\tBitmap bmp = RenderingIcons.getIcon(view.getContext(), id);\n\t\t\t\t\tif(bmp != null){\n\t\t\t\t\t\tcanvas.drawBitmap(bmp, x - bmp.getWidth() / 2, y - bmp.getHeight() / 2, paintIcon);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (view.getSettings().SHOW_POI_LABEL.get()) {\n\t\t\t\tTIntHashSet set = new TIntHashSet();\n\t\t\t\tfor (Amenity o : objects) {\n\t\t\t\t\tint x = view.getRotatedMapXForPoint(o.getLocation().getLatitude(), o.getLocation().getLongitude());\n\t\t\t\t\tint y = view.getRotatedMapYForPoint(o.getLocation().getLatitude(), o.getLocation().getLongitude());\n\t\t\t\t\tint tx = view.getMapXForPoint(o.getLocation().getLongitude());\n\t\t\t\t\tint ty = view.getMapYForPoint(o.getLocation().getLatitude());\n\t\t\t\t\tString name = o.getName(view.getSettings().USE_ENGLISH_NAMES.get());\n\t\t\t\t\tif (name != null && name.length() > 0) {\n\t\t\t\t\t\tint lines = 0;\n\t\t\t\t\t\twhile (lines < TEXT_LINES) {\n\t\t\t\t\t\t\tif (set.contains(division(tx, ty, 0, lines)) ||\n\t\t\t\t\t\t\t\t\tset.contains(division(tx, ty, -1, lines)) || set.contains(division(tx, ty, +1, lines))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlines++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (lines == 0) {\n\t\t\t\t\t\t\t// drawWrappedText(canvas, \"...\", paintTextIcon.getTextSize(), x, y + r + 2 + paintTextIcon.getTextSize() / 2, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdrawWrappedText(canvas, name, paintTextIcon.getTextSize(), x, y + r + 2 + paintTextIcon.getTextSize() / 2,\n\t\t\t\t\t\t\t\t\tlines);\n\t\t\t\t\t\t\twhile (lines > 0) {\n\t\t\t\t\t\t\t\tset.add(division(tx, ty, 1, lines - 1));\n\t\t\t\t\t\t\t\tset.add(division(tx, ty, -1, lines - 1));\n\t\t\t\t\t\t\t\tset.add(division(tx, ty, 0, lines - 1));\n\t\t\t\t\t\t\t\tlines--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":1747,"modified_method":"@Override\n\tpublic void onDraw(Canvas canvas, RectF latLonBounds, RectF tilesRect, DrawSettings nightMode) {\n\t\t\n\t\tif (view.getZoom() >= startZoom) {\n\t\t\tobjects.clear();\n\t\t\tresourceManager.searchAmenitiesAsync(latLonBounds.top, latLonBounds.left, latLonBounds.bottom, latLonBounds.right, view.getZoom(), filter, objects);\n\t\t\tint r = getRadiusPoi(view.getZoom());\n\t\t\tfor (Amenity o : objects) {\n\t\t\t\tint x = view.getRotatedMapXForPoint(o.getLocation().getLatitude(), o.getLocation().getLongitude());\n\t\t\t\tint y = view.getRotatedMapYForPoint(o.getLocation().getLatitude(), o.getLocation().getLongitude());\n\t\t\t\tcanvas.drawCircle(x, y, r, pointAltUI);\n\t\t\t\tcanvas.drawCircle(x, y, r, point);\n\t\t\t\tString id = null;\n\t\t\t\tStringBuilder tag = new StringBuilder();\n\t\t\t\tStringBuilder value = new StringBuilder();\n\t\t\t\tMapRenderingTypes.getDefault().getAmenityTagValue(o.getType(), o.getSubType(), tag, value);\n\t\t\t\tif (RenderingIcons.containsIcon(tag + \"_\" + value)) {\n\t\t\t\t\tid = tag + \"_\" + value;\n\t\t\t\t} else if(RenderingIcons.containsIcon(tag.toString())){\n\t\t\t\t\tid = tag.toString();\n\t\t\t\t} \n\t\t\t\tif(id != null){\n\t\t\t\t\tBitmap bmp = RenderingIcons.getIcon(view.getContext(), id);\n\t\t\t\t\tif(bmp != null){\n\t\t\t\t\t\tcanvas.drawBitmap(bmp, x - bmp.getWidth() / 2, y - bmp.getHeight() / 2, paintIcon);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (view.getSettings().SHOW_POI_LABEL.get()) {\n\t\t\t\tTIntHashSet set = new TIntHashSet();\n\t\t\t\tfor (Amenity o : objects) {\n\t\t\t\t\tint x = view.getRotatedMapXForPoint(o.getLocation().getLatitude(), o.getLocation().getLongitude());\n\t\t\t\t\tint y = view.getRotatedMapYForPoint(o.getLocation().getLatitude(), o.getLocation().getLongitude());\n\t\t\t\t\tint tx = view.getMapXForPoint(o.getLocation().getLongitude());\n\t\t\t\t\tint ty = view.getMapYForPoint(o.getLocation().getLatitude());\n\t\t\t\t\tString name = o.getName(view.getSettings().USE_ENGLISH_NAMES.get());\n\t\t\t\t\tif (name != null && name.length() > 0) {\n\t\t\t\t\t\tint lines = 0;\n\t\t\t\t\t\twhile (lines < TEXT_LINES) {\n\t\t\t\t\t\t\tif (set.contains(division(tx, ty, 0, lines)) ||\n\t\t\t\t\t\t\t\t\tset.contains(division(tx, ty, -1, lines)) || set.contains(division(tx, ty, +1, lines))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlines++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (lines == 0) {\n\t\t\t\t\t\t\t// drawWrappedText(canvas, \"...\", paintTextIcon.getTextSize(), x, y + r + 2 + paintTextIcon.getTextSize() / 2, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdrawWrappedText(canvas, name, paintTextIcon.getTextSize(), x, y + r + 2 + paintTextIcon.getTextSize() / 2,\n\t\t\t\t\t\t\t\t\tlines);\n\t\t\t\t\t\t\twhile (lines > 0) {\n\t\t\t\t\t\t\t\tset.add(division(tx, ty, 1, lines - 1));\n\t\t\t\t\t\t\t\tset.add(division(tx, ty, -1, lines - 1));\n\t\t\t\t\t\t\t\tset.add(division(tx, ty, 0, lines - 1));\n\t\t\t\t\t\t\t\tlines--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"d99c5a9dca60d9ed16afdcba88ebd3e28455365e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"/**\n   * Compact a table or an individual region.\n   * Asynchronous operation.\n   *\n   * @param tableNameOrRegionName table or region to compact\n   * @param major True if we are to do a major compaction.\n   * @throws IOException if a remote or network exception occurs\n   * @throws InterruptedException\n   */\n  private void compact(final byte [] tableNameOrRegionName, final boolean major)\n  throws IOException, InterruptedException {\n    CatalogTracker ct = getCatalogTracker();\n    try {\n      Pair<HRegionInfo, ServerName> regionServerPair\n        = getRegion(tableNameOrRegionName, ct);\n      if (regionServerPair != null) {\n        if (regionServerPair.getSecond() == null) {\n          LOG.info(\"No server in .META. for \" +\n            Bytes.toStringBinary(tableNameOrRegionName) + \"; pair=\" + regionServerPair);\n        } else {\n          compact(regionServerPair.getSecond(), regionServerPair.getFirst(), major);\n        }\n      } else {\n        final String tableName = tableNameString(tableNameOrRegionName, ct);\n        List<Pair<HRegionInfo, ServerName>> pairs =\n          MetaReader.getTableRegionsAndLocations(ct,\n              tableName);\n        for (Pair<HRegionInfo, ServerName> pair: pairs) {\n          if (pair.getFirst().isOffline()) continue;\n          if (pair.getSecond() == null) continue;\n          try {\n            compact(pair.getSecond(), pair.getFirst(), major);\n          } catch (NotServingRegionException e) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Trying to\" + (major ? \" major\" : \"\") + \" compact \" +\n                pair.getFirst() + \": \" +\n                StringUtils.stringifyException(e));\n            }\n          }\n        }\n      }\n    } finally {\n      cleanupCatalogTracker(ct);\n    }\n  }","id":1748,"modified_method":"/**\n   * Compact a table or an individual region.\n   * Asynchronous operation.\n   *\n   * @param tableNameOrRegionName table or region to compact\n   * @param major True if we are to do a major compaction.\n   * @throws IOException if a remote or network exception occurs\n   * @throws InterruptedException\n   */\n  private void compact(final byte [] tableNameOrRegionName, final boolean major)\n  throws IOException, InterruptedException {\n    CatalogTracker ct = getCatalogTracker();\n    try {\n      Pair<HRegionInfo, ServerName> regionServerPair\n        = getRegion(tableNameOrRegionName, ct);\n      if (regionServerPair != null) {\n        if (regionServerPair.getSecond() == null) {\n          throw new NoServerForRegionException(Bytes.toStringBinary(tableNameOrRegionName));\n        } else {\n          compact(regionServerPair.getSecond(), regionServerPair.getFirst(), major);\n        }\n      } else {\n        final String tableName = tableNameString(tableNameOrRegionName, ct);\n        List<Pair<HRegionInfo, ServerName>> pairs =\n          MetaReader.getTableRegionsAndLocations(ct,\n              tableName);\n        for (Pair<HRegionInfo, ServerName> pair: pairs) {\n          if (pair.getFirst().isOffline()) continue;\n          if (pair.getSecond() == null) continue;\n          try {\n            compact(pair.getSecond(), pair.getFirst(), major);\n          } catch (NotServingRegionException e) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Trying to\" + (major ? \" major\" : \"\") + \" compact \" +\n                pair.getFirst() + \": \" +\n                StringUtils.stringifyException(e));\n            }\n          }\n        }\n      }\n    } finally {\n      cleanupCatalogTracker(ct);\n    }\n  }","commit_id":"e898f6de21e274982f72fc35e88dba00f3875e9b","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Split a table or an individual region.\n   * Asynchronous operation.\n   *\n   * @param tableNameOrRegionName table to region to split\n   * @param splitPoint the explicit position to split on\n   * @throws IOException if a remote or network exception occurs\n   * @throws InterruptedException interrupt exception occurred\n   */\n  public void split(final byte [] tableNameOrRegionName,\n      final byte [] splitPoint) throws IOException, InterruptedException {\n    CatalogTracker ct = getCatalogTracker();\n    try {\n      Pair<HRegionInfo, ServerName> regionServerPair\n        = getRegion(tableNameOrRegionName, ct);\n      if (regionServerPair != null) {\n        if (regionServerPair.getSecond() == null) {\n          LOG.info(\"No server in .META. for \" +\n            Bytes.toStringBinary(tableNameOrRegionName) + \"; pair=\" + regionServerPair);\n        } else {\n          split(regionServerPair.getSecond(), regionServerPair.getFirst(), splitPoint);\n        }\n      } else {\n        final String tableName = tableNameString(tableNameOrRegionName, ct);\n        List<Pair<HRegionInfo, ServerName>> pairs =\n          MetaReader.getTableRegionsAndLocations(ct,\n              tableName);\n        for (Pair<HRegionInfo, ServerName> pair: pairs) {\n          // May not be a server for a particular row\n          if (pair.getSecond() == null) continue;\n          HRegionInfo r = pair.getFirst();\n          // check for parents\n          if (r.isSplitParent()) continue;\n          // if a split point given, only split that particular region\n          if (splitPoint != null && !r.containsRow(splitPoint)) continue;\n          // call out to region server to do split now\n          split(pair.getSecond(), pair.getFirst(), splitPoint);\n        }\n      }\n    } finally {\n      cleanupCatalogTracker(ct);\n    }\n  }","id":1749,"modified_method":"/**\n   * Split a table or an individual region.\n   * Asynchronous operation.\n   *\n   * @param tableNameOrRegionName table to region to split\n   * @param splitPoint the explicit position to split on\n   * @throws IOException if a remote or network exception occurs\n   * @throws InterruptedException interrupt exception occurred\n   */\n  public void split(final byte [] tableNameOrRegionName,\n      final byte [] splitPoint) throws IOException, InterruptedException {\n    CatalogTracker ct = getCatalogTracker();\n    try {\n      Pair<HRegionInfo, ServerName> regionServerPair\n        = getRegion(tableNameOrRegionName, ct);\n      if (regionServerPair != null) {\n        if (regionServerPair.getSecond() == null) {\n            throw new NoServerForRegionException(Bytes.toStringBinary(tableNameOrRegionName));\n        } else {\n          split(regionServerPair.getSecond(), regionServerPair.getFirst(), splitPoint);\n        }\n      } else {\n        final String tableName = tableNameString(tableNameOrRegionName, ct);\n        List<Pair<HRegionInfo, ServerName>> pairs =\n          MetaReader.getTableRegionsAndLocations(ct,\n              tableName);\n        for (Pair<HRegionInfo, ServerName> pair: pairs) {\n          // May not be a server for a particular row\n          if (pair.getSecond() == null) continue;\n          HRegionInfo r = pair.getFirst();\n          // check for parents\n          if (r.isSplitParent()) continue;\n          // if a split point given, only split that particular region\n          if (splitPoint != null && !r.containsRow(splitPoint)) continue;\n          // call out to region server to do split now\n          split(pair.getSecond(), pair.getFirst(), splitPoint);\n        }\n      }\n    } finally {\n      cleanupCatalogTracker(ct);\n    }\n  }","commit_id":"e898f6de21e274982f72fc35e88dba00f3875e9b","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Flush a table or an individual region.\n   * Synchronous operation.\n   *\n   * @param tableNameOrRegionName table or region to flush\n   * @throws IOException if a remote or network exception occurs\n   * @throws InterruptedException\n   */\n  public void flush(final byte [] tableNameOrRegionName)\n  throws IOException, InterruptedException {\n    CatalogTracker ct = getCatalogTracker();\n    try {\n      Pair<HRegionInfo, ServerName> regionServerPair\n        = getRegion(tableNameOrRegionName, ct);\n      if (regionServerPair != null) {\n        if (regionServerPair.getSecond() == null) {\n          LOG.info(\"No server in .META. for \" +\n            Bytes.toStringBinary(tableNameOrRegionName) + \"; pair=\" + regionServerPair);\n        } else {\n          flush(regionServerPair.getSecond(), regionServerPair.getFirst());\n        }\n      } else {\n        final String tableName = tableNameString(tableNameOrRegionName, ct);\n        List<Pair<HRegionInfo, ServerName>> pairs =\n          MetaReader.getTableRegionsAndLocations(ct,\n              tableName);\n        for (Pair<HRegionInfo, ServerName> pair: pairs) {\n          if (pair.getFirst().isOffline()) continue;\n          if (pair.getSecond() == null) continue;\n          try {\n            flush(pair.getSecond(), pair.getFirst());\n          } catch (NotServingRegionException e) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Trying to flush \" + pair.getFirst() + \": \" +\n                StringUtils.stringifyException(e));\n            }\n          }\n        }\n      }\n    } finally {\n      cleanupCatalogTracker(ct);\n    }\n  }","id":1750,"modified_method":"/**\n   * Flush a table or an individual region.\n   * Synchronous operation.\n   *\n   * @param tableNameOrRegionName table or region to flush\n   * @throws IOException if a remote or network exception occurs\n   * @throws InterruptedException\n   */\n  public void flush(final byte [] tableNameOrRegionName)\n  throws IOException, InterruptedException {\n    CatalogTracker ct = getCatalogTracker();\n    try {\n      Pair<HRegionInfo, ServerName> regionServerPair\n        = getRegion(tableNameOrRegionName, ct);\n      if (regionServerPair != null) {\n        if (regionServerPair.getSecond() == null) {\n          throw new NoServerForRegionException(Bytes.toStringBinary(tableNameOrRegionName));\n        } else {\n          flush(regionServerPair.getSecond(), regionServerPair.getFirst());\n        }\n      } else {\n        final String tableName = tableNameString(tableNameOrRegionName, ct);\n        List<Pair<HRegionInfo, ServerName>> pairs =\n          MetaReader.getTableRegionsAndLocations(ct,\n              tableName);\n        for (Pair<HRegionInfo, ServerName> pair: pairs) {\n          if (pair.getFirst().isOffline()) continue;\n          if (pair.getSecond() == null) continue;\n          try {\n            flush(pair.getSecond(), pair.getFirst());\n          } catch (NotServingRegionException e) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Trying to flush \" + pair.getFirst() + \": \" +\n                StringUtils.stringifyException(e));\n            }\n          }\n        }\n      }\n    } finally {\n      cleanupCatalogTracker(ct);\n    }\n  }","commit_id":"e898f6de21e274982f72fc35e88dba00f3875e9b","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Get the current compaction state of a table or region.\n   * It could be in a major compaction, a minor compaction, both, or none.\n   *\n   * @param tableNameOrRegionName table or region to major compact\n   * @throws IOException if a remote or network exception occurs\n   * @throws InterruptedException\n   * @return the current compaction state\n   */\n  public CompactionState getCompactionState(final byte [] tableNameOrRegionName)\n      throws IOException, InterruptedException {\n    CompactionState state = CompactionState.NONE;\n    CatalogTracker ct = getCatalogTracker();\n    try {\n      Pair<HRegionInfo, ServerName> regionServerPair\n        = getRegion(tableNameOrRegionName, ct);\n      if (regionServerPair != null) {\n        if (regionServerPair.getSecond() == null) {\n          LOG.info(\"No server in .META. for \" +\n            Bytes.toStringBinary(tableNameOrRegionName) + \"; pair=\" + regionServerPair);\n        } else {\n          ServerName sn = regionServerPair.getSecond();\n          AdminProtocol admin =\n            this.connection.getAdmin(sn.getHostname(), sn.getPort());\n          GetRegionInfoRequest request = RequestConverter.buildGetRegionInfoRequest(\n            regionServerPair.getFirst().getRegionName(), true);\n          GetRegionInfoResponse response = admin.getRegionInfo(null, request);\n          return response.getCompactionState();\n        }\n      } else {\n        final String tableName = tableNameString(tableNameOrRegionName, ct);\n        List<Pair<HRegionInfo, ServerName>> pairs =\n          MetaReader.getTableRegionsAndLocations(ct, tableName);\n        for (Pair<HRegionInfo, ServerName> pair: pairs) {\n          if (pair.getFirst().isOffline()) continue;\n          if (pair.getSecond() == null) continue;\n          try {\n            ServerName sn = pair.getSecond();\n            AdminProtocol admin =\n              this.connection.getAdmin(sn.getHostname(), sn.getPort());\n            GetRegionInfoRequest request = RequestConverter.buildGetRegionInfoRequest(\n              pair.getFirst().getRegionName(), true);\n            GetRegionInfoResponse response = admin.getRegionInfo(null, request);\n            switch (response.getCompactionState()) {\n            case MAJOR_AND_MINOR:\n              return CompactionState.MAJOR_AND_MINOR;\n            case MAJOR:\n              if (state == CompactionState.MINOR) {\n                return CompactionState.MAJOR_AND_MINOR;\n              }\n              state = CompactionState.MAJOR;\n              break;\n            case MINOR:\n              if (state == CompactionState.MAJOR) {\n                return CompactionState.MAJOR_AND_MINOR;\n              }\n              state = CompactionState.MINOR;\n              break;\n            case NONE:\n              default: // nothing, continue\n            }\n          } catch (NotServingRegionException e) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Trying to get compaction state of \" +\n                pair.getFirst() + \": \" +\n                StringUtils.stringifyException(e));\n            }\n          }\n        }\n      }\n    } catch (ServiceException se) {\n      throw ProtobufUtil.getRemoteException(se);\n    } finally {\n      cleanupCatalogTracker(ct);\n    }\n    return state;\n  }","id":1751,"modified_method":"/**\n   * Get the current compaction state of a table or region.\n   * It could be in a major compaction, a minor compaction, both, or none.\n   *\n   * @param tableNameOrRegionName table or region to major compact\n   * @throws IOException if a remote or network exception occurs\n   * @throws InterruptedException\n   * @return the current compaction state\n   */\n  public CompactionState getCompactionState(final byte [] tableNameOrRegionName)\n      throws IOException, InterruptedException {\n    CompactionState state = CompactionState.NONE;\n    CatalogTracker ct = getCatalogTracker();\n    try {\n      Pair<HRegionInfo, ServerName> regionServerPair\n        = getRegion(tableNameOrRegionName, ct);\n      if (regionServerPair != null) {\n        if (regionServerPair.getSecond() == null) {\n          throw new NoServerForRegionException(Bytes.toStringBinary(tableNameOrRegionName));\n        } else {\n          ServerName sn = regionServerPair.getSecond();\n          AdminProtocol admin =\n            this.connection.getAdmin(sn.getHostname(), sn.getPort());\n          GetRegionInfoRequest request = RequestConverter.buildGetRegionInfoRequest(\n            regionServerPair.getFirst().getRegionName(), true);\n          GetRegionInfoResponse response = admin.getRegionInfo(null, request);\n          return response.getCompactionState();\n        }\n      } else {\n        final String tableName = tableNameString(tableNameOrRegionName, ct);\n        List<Pair<HRegionInfo, ServerName>> pairs =\n          MetaReader.getTableRegionsAndLocations(ct, tableName);\n        for (Pair<HRegionInfo, ServerName> pair: pairs) {\n          if (pair.getFirst().isOffline()) continue;\n          if (pair.getSecond() == null) continue;\n          try {\n            ServerName sn = pair.getSecond();\n            AdminProtocol admin =\n              this.connection.getAdmin(sn.getHostname(), sn.getPort());\n            GetRegionInfoRequest request = RequestConverter.buildGetRegionInfoRequest(\n              pair.getFirst().getRegionName(), true);\n            GetRegionInfoResponse response = admin.getRegionInfo(null, request);\n            switch (response.getCompactionState()) {\n            case MAJOR_AND_MINOR:\n              return CompactionState.MAJOR_AND_MINOR;\n            case MAJOR:\n              if (state == CompactionState.MINOR) {\n                return CompactionState.MAJOR_AND_MINOR;\n              }\n              state = CompactionState.MAJOR;\n              break;\n            case MINOR:\n              if (state == CompactionState.MAJOR) {\n                return CompactionState.MAJOR_AND_MINOR;\n              }\n              state = CompactionState.MINOR;\n              break;\n            case NONE:\n              default: // nothing, continue\n            }\n          } catch (NotServingRegionException e) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Trying to get compaction state of \" +\n                pair.getFirst() + \": \" +\n                StringUtils.stringifyException(e));\n            }\n          }\n        }\n      }\n    } catch (ServiceException se) {\n      throw ProtobufUtil.getRemoteException(se);\n    } finally {\n      cleanupCatalogTracker(ct);\n    }\n    return state;\n  }","commit_id":"e898f6de21e274982f72fc35e88dba00f3875e9b","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Close a region.  For expert-admins  Runs close on the regionserver.  The\n   * master will not be informed of the close.\n   * @param regionname region name to close\n   * @param serverName The servername of the regionserver.  If passed null we\n   * will use servername found in the .META. table. A server name\n   * is made of host, port and startcode.  Here is an example:\n   * <code> host187.example.com,60020,1289493121758<\/code>\n   * @throws IOException if a remote or network exception occurs\n   */\n  public void closeRegion(final byte [] regionname, final String serverName)\n  throws IOException {\n    CatalogTracker ct = getCatalogTracker();\n    try {\n      if (serverName != null) {\n        Pair<HRegionInfo, ServerName> pair = MetaReader.getRegion(ct, regionname);\n        if (pair == null || pair.getFirst() == null) {\n          LOG.info(\"No region in .META. for \" +\n            Bytes.toStringBinary(regionname) + \"; pair=\" + pair);\n        } else {\n          closeRegion(new ServerName(serverName), pair.getFirst());\n        }\n      } else {\n        Pair<HRegionInfo, ServerName> pair = MetaReader.getRegion(ct, regionname);\n        if (pair == null || pair.getSecond() == null) {\n          LOG.info(\"No server in .META. for \" +\n            Bytes.toStringBinary(regionname) + \"; pair=\" + pair);\n        } else {\n          closeRegion(pair.getSecond(), pair.getFirst());\n        }\n      }\n    } finally {\n      cleanupCatalogTracker(ct);\n    }\n  }","id":1752,"modified_method":"/**\n   * Close a region.  For expert-admins  Runs close on the regionserver.  The\n   * master will not be informed of the close.\n   * @param regionname region name to close\n   * @param serverName The servername of the regionserver.  If passed null we\n   * will use servername found in the .META. table. A server name\n   * is made of host, port and startcode.  Here is an example:\n   * <code> host187.example.com,60020,1289493121758<\/code>\n   * @throws IOException if a remote or network exception occurs\n   */\n  public void closeRegion(final byte [] regionname, final String serverName)\n  throws IOException {\n    CatalogTracker ct = getCatalogTracker();\n    try {\n      if (serverName != null) {\n        Pair<HRegionInfo, ServerName> pair = MetaReader.getRegion(ct, regionname);\n        if (pair == null || pair.getFirst() == null) {\n          throw new UnknownRegionException(Bytes.toStringBinary(regionname));\n        } else {\n          closeRegion(new ServerName(serverName), pair.getFirst());\n        }\n      } else {\n        Pair<HRegionInfo, ServerName> pair = MetaReader.getRegion(ct, regionname);\n        if (pair == null) {\n          throw new UnknownRegionException(Bytes.toStringBinary(regionname));\n        } else if (pair.getSecond() == null) {\n          throw new NoServerForRegionException(Bytes.toStringBinary(regionname));\n        } else {\n          closeRegion(pair.getSecond(), pair.getFirst());\n        }\n      }\n    } finally {\n      cleanupCatalogTracker(ct);\n    }\n  }","commit_id":"e898f6de21e274982f72fc35e88dba00f3875e9b","url":"https://github.com/apache/hbase"},{"original_method":"List<ConfigPage> getConfigPages(ComponentDto component, UserSession userSession) {\n    boolean isAdmin = userSession.hasProjectPermissionByUuid(UserRole.ADMIN, component.projectUuid());\n    boolean isProject = Qualifiers.PROJECT.equals(component.qualifier());\n    Locale locale = userSession.locale();\n    String componentKey = encodeComponentKey(component);\n\n    List<ConfigPage> configPages = Lists.newArrayList();\n\n    configPages.add(new ConfigPage(\n      isAdmin && componentTypeHasProperty(component, PROPERTY_CONFIGURABLE),\n      String.format(\"/project/settings?id=%s\", componentKey),\n      i18n.message(locale, \"project_settings.page\", null)));\n\n    configPages.add(new ConfigPage(\n      isProject,\n      String.format(\"/project/profile?id=%s\", componentKey),\n      i18n.message(locale, \"project_quality_profiles.page\", null)));\n\n    configPages.add(new ConfigPage(\n      isProject,\n      String.format(\"/project/qualitygate?id=%s\", componentKey),\n      i18n.message(locale, \"project_quality_gate.page\", null)));\n\n    configPages.add(new ConfigPage(\n      isAdmin,\n      String.format(\"/manual_measures/index?id=%s\", componentKey),\n      i18n.message(locale, \"manual_measures.page\", null)));\n\n    configPages.add(new ConfigPage(\n      isAdmin && isProject,\n      String.format(\"/action_plans/index?id=%s\", componentKey),\n      i18n.message(locale, \"action_plans.page\", null)));\n\n    configPages.add(new ConfigPage(\n      isAdmin && isProject,\n      String.format(\"/project/links?id=%s\", componentKey),\n      i18n.message(locale, \"action_plans.page\", null)));\n\n    configPages.add(new ConfigPage(\n      componentTypeHasProperty(component, PROPERTY_HAS_ROLE_POLICY),\n      String.format(\"/project_roles/index?id=%s\", componentKey),\n      i18n.message(locale, \"permissions.page\", null)));\n\n    configPages.add(new ConfigPage(\n      componentTypeHasProperty(component, PROPERTY_MODIFIABLE_HISTORY),\n      String.format(\"/project/history?id=%s\", componentKey),\n      i18n.message(locale, \"project_history.page\", null)));\n\n    configPages.add(new ConfigPage(\n      componentTypeHasProperty(component, PROPERTY_UPDATABLE_KEY),\n      String.format(\"/project/key?id=%s\", componentKey),\n      i18n.message(locale, \"update_key.page\", null)));\n\n    configPages.add(new ConfigPage(\n      componentTypeHasProperty(component, PROPERTY_DELETABLE),\n      String.format(\"/project/deletion?id=%s\", componentKey),\n      i18n.message(locale, \"deletion.page\", null)));\n\n    return configPages;\n  }","id":1753,"modified_method":"Collection<ConfigPage> getConfigPages(ComponentDto component, UserSession userSession) {\n    boolean isAdmin = userSession.hasProjectPermissionByUuid(UserRole.ADMIN, component.projectUuid());\n    boolean isProject = Qualifiers.PROJECT.equals(component.qualifier());\n    Locale locale = userSession.locale();\n    String componentKey = encodeComponentKey(component);\n\n    List<ConfigPage> configPages = Lists.newArrayList();\n\n    configPages.add(new ConfigPage(\n      isAdmin && componentTypeHasProperty(component, PROPERTY_CONFIGURABLE),\n      String.format(\"/project/settings?id=%s\", componentKey),\n      i18n.message(locale, \"project_settings.page\", null)));\n\n    configPages.add(new ConfigPage(\n      isProject,\n      String.format(\"/project/profile?id=%s\", componentKey),\n      i18n.message(locale, \"project_quality_profiles.page\", null)));\n\n    configPages.add(new ConfigPage(\n      isProject,\n      String.format(\"/project/qualitygate?id=%s\", componentKey),\n      i18n.message(locale, \"project_quality_gate.page\", null)));\n\n    configPages.add(new ConfigPage(\n      isAdmin,\n      String.format(\"/manual_measures/index?id=%s\", componentKey),\n      i18n.message(locale, \"manual_measures.page\", null)));\n\n    configPages.add(new ConfigPage(\n      isAdmin && isProject,\n      String.format(\"/action_plans/index?id=%s\", componentKey),\n      i18n.message(locale, \"action_plans.page\", null)));\n\n    configPages.add(new ConfigPage(\n      isAdmin && isProject,\n      String.format(\"/project/links?id=%s\", componentKey),\n      i18n.message(locale, \"project_links.page\", null)));\n\n    configPages.add(new ConfigPage(\n      componentTypeHasProperty(component, PROPERTY_HAS_ROLE_POLICY),\n      String.format(\"/project_roles/index?id=%s\", componentKey),\n      i18n.message(locale, \"permissions.page\", null)));\n\n    configPages.add(new ConfigPage(\n      componentTypeHasProperty(component, PROPERTY_MODIFIABLE_HISTORY),\n      String.format(\"/project/history?id=%s\", componentKey),\n      i18n.message(locale, \"project_history.page\", null)));\n\n    configPages.add(new ConfigPage(\n      componentTypeHasProperty(component, PROPERTY_UPDATABLE_KEY),\n      String.format(\"/project/key?id=%s\", componentKey),\n      i18n.message(locale, \"update_key.page\", null)));\n\n    configPages.add(new ConfigPage(\n      componentTypeHasProperty(component, PROPERTY_DELETABLE),\n      String.format(\"/project/deletion?id=%s\", componentKey),\n      i18n.message(locale, \"deletion.page\", null)));\n\n    return Collections2.filter(configPages, new Predicate<ConfigPage>() {\n      @Override\n      public boolean apply(ConfigPage input) {\n        return input.visible;\n      }\n    });\n  }","commit_id":"a4a612e42fb8ed12b0a7c4f3f60294bbb233a5c8","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void pages_for_module() throws Exception {\n    String uuid = \"abcd\";\n    ComponentDto project = ComponentTesting.newProjectDto(uuid);\n    ComponentDto module = ComponentTesting.newModuleDto(project);\n    UserSession userSession = MockUserSession.set().setLogin(\"obiwan\").addProjectUuidPermissions(UserRole.ADMIN, uuid);\n\n    List<ConfigPage> pages = new ComponentConfigurationPages(i18n, resourceTypes).getConfigPages(module, userSession);\n    assertThat(pages).extracting(\"visible\").containsExactly(\n      false, false, false, true, false, false, false, false, false, false);\n  }","id":1754,"modified_method":"@Test\n  public void pages_for_module() throws Exception {\n    String uuid = \"abcd\";\n    ComponentDto project = ComponentTesting.newProjectDto(uuid);\n    ComponentDto module = ComponentTesting.newModuleDto(project);\n    UserSession userSession = MockUserSession.set().setLogin(\"obiwan\").addProjectUuidPermissions(UserRole.ADMIN, uuid);\n\n    Collection<ConfigPage> pages = new ComponentConfigurationPages(i18n, resourceTypes).getConfigPages(module, userSession);\n    assertThat(pages).extracting(\"name\").containsExactly(\"manual_measures.page\");\n  }","commit_id":"a4a612e42fb8ed12b0a7c4f3f60294bbb233a5c8","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void pages_for_project() throws Exception {\n    String uuid = \"abcd\";\n    ComponentDto component = ComponentTesting.newProjectDto(uuid).setKey(\"org.codehaus.sonar:sonar\");\n    UserSession userSession = MockUserSession.set().setLogin(\"obiwan\").addProjectUuidPermissions(UserRole.ADMIN, uuid);\n\n    List<ConfigPage> pages = new ComponentConfigurationPages(i18n, resourceTypes).getConfigPages(component, userSession);\n    assertThat(pages).extracting(\"visible\").containsExactly(\n      false, true, true, true, true, true, false, false, false, false);\n    assertThat(pages).extracting(\"url\").containsExactly(\n        \"/project/settings?id=org.codehaus.sonar%3Asonar\",\n        \"/project/profile?id=org.codehaus.sonar%3Asonar\",\n        \"/project/qualitygate?id=org.codehaus.sonar%3Asonar\",\n        \"/manual_measures/index?id=org.codehaus.sonar%3Asonar\",\n        \"/action_plans/index?id=org.codehaus.sonar%3Asonar\",\n        \"/project/links?id=org.codehaus.sonar%3Asonar\",\n        \"/project_roles/index?id=org.codehaus.sonar%3Asonar\",\n        \"/project/history?id=org.codehaus.sonar%3Asonar\",\n        \"/project/key?id=org.codehaus.sonar%3Asonar\",\n        \"/project/deletion?id=org.codehaus.sonar%3Asonar\"\n      );\n  }","id":1755,"modified_method":"@Test\n  public void pages_for_project() throws Exception {\n    String uuid = \"abcd\";\n    ComponentDto component = ComponentTesting.newProjectDto(uuid).setKey(\"org.codehaus.sonar:sonar\");\n    UserSession userSession = MockUserSession.set().setLogin(\"obiwan\").addProjectUuidPermissions(UserRole.ADMIN, uuid);\n\n    Collection<ConfigPage> pages = new ComponentConfigurationPages(i18n, resourceTypes).getConfigPages(component, userSession);\n    assertThat(pages).extracting(\"name\").containsExactly(\n      \"project_quality_profiles.page\",\n      \"project_quality_gate.page\",\n      \"manual_measures.page\",\n      \"action_plans.page\",\n      \"project_links.page\"\n      );\n    assertThat(pages).extracting(\"url\").containsExactly(\n        \"/project/profile?id=org.codehaus.sonar%3Asonar\",\n        \"/project/qualitygate?id=org.codehaus.sonar%3Asonar\",\n        \"/manual_measures/index?id=org.codehaus.sonar%3Asonar\",\n        \"/action_plans/index?id=org.codehaus.sonar%3Asonar\",\n        \"/project/links?id=org.codehaus.sonar%3Asonar\"\n      );\n  }","commit_id":"a4a612e42fb8ed12b0a7c4f3f60294bbb233a5c8","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void pages_for_non_admin() throws Exception {\n    String uuid = \"abcd\";\n    ComponentDto project = ComponentTesting.newProjectDto(uuid);\n    UserSession userSession = MockUserSession.set().setLogin(\"obiwan\").addProjectUuidPermissions(UserRole.USER, uuid);\n\n    List<ConfigPage> pages = new ComponentConfigurationPages(i18n, resourceTypes).getConfigPages(project, userSession);\n    assertThat(pages).extracting(\"visible\").containsExactly(\n      false, true, true, false, false, false, false, false, false, false);\n  }","id":1756,"modified_method":"@Test\n  public void pages_for_non_admin() throws Exception {\n    String uuid = \"abcd\";\n    ComponentDto project = ComponentTesting.newProjectDto(uuid);\n    UserSession userSession = MockUserSession.set().setLogin(\"obiwan\").addProjectUuidPermissions(UserRole.USER, uuid);\n\n    Collection<ConfigPage> pages = new ComponentConfigurationPages(i18n, resourceTypes).getConfigPages(project, userSession);\n    assertThat(pages).extracting(\"name\").containsExactly(\n      \"project_quality_profiles.page\",\n      \"project_quality_gate.page\"\n      );\n  }","commit_id":"a4a612e42fb8ed12b0a7c4f3f60294bbb233a5c8","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void pages_for_project_with_resource_type_property() throws Exception {\n    String uuid = \"abcd\";\n    ComponentDto component = ComponentTesting.newProjectDto(uuid);\n    UserSession userSession = MockUserSession.set().setLogin(\"obiwan\").addProjectUuidPermissions(UserRole.ADMIN, uuid);\n    when(resourceTypes.get(component.qualifier())).thenReturn(\n      ResourceType.builder(component.qualifier()).setProperty(\"configurable\", true).build());\n\n    List<ConfigPage> pages = new ComponentConfigurationPages(i18n, resourceTypes).getConfigPages(component, userSession);\n    assertThat(pages).extracting(\"visible\").containsExactly(\n      true, true, true, true, true, true, false, false, false, false);\n  }","id":1757,"modified_method":"@Test\n  public void pages_for_project_with_resource_type_property() throws Exception {\n    String uuid = \"abcd\";\n    ComponentDto component = ComponentTesting.newProjectDto(uuid);\n    UserSession userSession = MockUserSession.set().setLogin(\"obiwan\").addProjectUuidPermissions(UserRole.ADMIN, uuid);\n    when(resourceTypes.get(component.qualifier())).thenReturn(\n      ResourceType.builder(component.qualifier()).setProperty(\"configurable\", true).build());\n\n    Collection<ConfigPage> pages = new ComponentConfigurationPages(i18n, resourceTypes).getConfigPages(component, userSession);\n    assertThat(pages).extracting(\"name\").containsExactly(\n      \"project_settings.page\",\n      \"project_quality_profiles.page\",\n      \"project_quality_gate.page\",\n      \"manual_measures.page\",\n      \"action_plans.page\",\n      \"project_links.page\"\n      );\n  }","commit_id":"a4a612e42fb8ed12b0a7c4f3f60294bbb233a5c8","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeConfiguration(JsonWriter json, ComponentDto component, UserSession userSession) {\n    boolean isAdmin = userSession.hasProjectPermissionByUuid(UserRole.ADMIN, component.projectUuid());\n    Locale locale = userSession.locale();\n\n    json.name(\"configuration\").beginArray();\n    for (ConfigPage page : projectConfiguration.getConfigPages(component, userSession)) {\n      page.write(json);\n    }\n\n    if (isAdmin) {\n      List<ViewProxy<Page>> configPages = views.getPages(NavigationSection.RESOURCE_CONFIGURATION, component.scope(), component.qualifier(), component.language(), null);\n      for (ViewProxy<Page> page : configPages) {\n        writePage(json, getPageUrl(page, component), i18n.message(locale, page.getId() + \".page\", page.getTitle()));\n      }\n    }\n    json.endArray();\n  }","id":1758,"modified_method":"private void writeConfiguration(JsonWriter json, ComponentDto component, UserSession userSession) {\n    boolean isAdmin = userSession.hasProjectPermissionByUuid(UserRole.ADMIN, component.projectUuid());\n    Locale locale = userSession.locale();\n\n    json.name(\"configuration\").beginArray();\n    for (ConfigPage page : projectConfiguration.getConfigPages(component, userSession)) {\n      json.beginObject()\n        .prop(\"url\", page.url())\n        .prop(\"name\", page.name())\n        .endObject();\n    }\n\n    if (isAdmin) {\n      List<ViewProxy<Page>> configPages = views.getPages(NavigationSection.RESOURCE_CONFIGURATION, component.scope(), component.qualifier(), component.language(), null);\n      for (ViewProxy<Page> page : configPages) {\n        writePage(json, getPageUrl(page, component), i18n.message(locale, page.getId() + \".page\", page.getTitle()));\n      }\n    }\n    json.endArray();\n  }","commit_id":"a4a612e42fb8ed12b0a7c4f3f60294bbb233a5c8","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n    List<ConfigPage> getConfigPages(ComponentDto component, UserSession userSession) {\n      return Arrays.asList(\n        new ConfigPage(true, \"/visible/page\", \"Visible Config Page\"),\n        new ConfigPage(false, \"/invisible/page\", \"Invisible Config Page\"));\n    }","id":1759,"modified_method":"@Override\n    List<ConfigPage> getConfigPages(ComponentDto component, UserSession userSession) {\n      return Arrays.asList(\n        new ConfigPage(true, \"/visible/page\", \"Visible Config Page\"));\n    }","commit_id":"a4a612e42fb8ed12b0a7c4f3f60294bbb233a5c8","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public List<String> selectMetricKeysForSnapshot(DbSession session, Long snapshotId) {\n    return mapper(session).selectMetricKeysForSnapshot(snapshotId);\n  }","id":1760,"modified_method":"public List<String> selectMetricKeysForSnapshot(DbSession session, long snapshotId) {\n    return mapper(session).selectMetricKeysForSnapshot(snapshotId);\n  }","commit_id":"a4a612e42fb8ed12b0a7c4f3f60294bbb233a5c8","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public PutIntoGraveFromBattlefieldAllTriggeredAbility(Effect effect, boolean optional, FilterPermanent filter, boolean setTargetPointer) {\r\n        super(Zone.BATTLEFIELD, effect, optional);\r\n        this.filter = filter;\r\n    }","id":1761,"modified_method":"public PutIntoGraveFromBattlefieldAllTriggeredAbility(Effect effect, boolean optional, FilterPermanent filter, boolean setTargetPointer) {\r\n        this(effect, optional, filter, setTargetPointer, false);\r\n    }","commit_id":"7d2883560c6bb6b4ef6b6264ad3a9e2f47ef256a","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public String getRule() {\r\n        return new StringBuilder(\"Whenever \").append(filter.getMessage()).append(\" is put into a graveyard from the battlefield, \").append(super.getRule()).toString();\r\n    }","id":1762,"modified_method":"@Override\r\n    public String getRule() {\r\n        return \"Whenever \" + filter.getMessage() + \" is put into \" + (onlyToControllerGraveyard ? \"your\":\"a\") +\r\n                \" graveyard from the battlefield, \" + super.getRule();\r\n    }","commit_id":"7d2883560c6bb6b4ef6b6264ad3a9e2f47ef256a","url":"https://github.com/magefree/mage"},{"original_method":"public PutIntoGraveFromBattlefieldAllTriggeredAbility(final PutIntoGraveFromBattlefieldAllTriggeredAbility ability) {\r\n        super(ability);\r\n        this.filter = ability.filter;\r\n    }","id":1763,"modified_method":"public PutIntoGraveFromBattlefieldAllTriggeredAbility(final PutIntoGraveFromBattlefieldAllTriggeredAbility ability) {\r\n        super(ability);\r\n        this.filter = ability.filter;\r\n        this.onlyToControllerGraveyard = ability.onlyToControllerGraveyard;        \r\n    }","commit_id":"7d2883560c6bb6b4ef6b6264ad3a9e2f47ef256a","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public String getRule() {\r\n        return new StringBuilder(\"Whenever \").append(filter.getMessage()).append(\" is put into a graveyard from the battlefield, \").append(super.getRule()).toString();\r\n    }","id":1764,"modified_method":"@Override\r\n    public String getRule() {\r\n        return \"Whenever \" + filter.getMessage() + \" is put into \" + (onlyToControllerGraveyard ? \"your\":\"a\") +\r\n                \" graveyard from the battlefield, \" + super.getRule();\r\n    }","commit_id":"d42901d0523d72820c3c2d69dfaf83c19b7d8ca9","url":"https://github.com/magefree/mage"},{"original_method":"public PutIntoGraveFromBattlefieldAllTriggeredAbility(Effect effect, boolean optional, FilterPermanent filter, boolean setTargetPointer) {\r\n        super(Zone.BATTLEFIELD, effect, optional);\r\n        this.filter = filter;\r\n    }","id":1765,"modified_method":"public PutIntoGraveFromBattlefieldAllTriggeredAbility(Effect effect, boolean optional, FilterPermanent filter, boolean setTargetPointer) {\r\n        this(effect, optional, filter, setTargetPointer, false);\r\n    }","commit_id":"d42901d0523d72820c3c2d69dfaf83c19b7d8ca9","url":"https://github.com/magefree/mage"},{"original_method":"public PutIntoGraveFromBattlefieldAllTriggeredAbility(final PutIntoGraveFromBattlefieldAllTriggeredAbility ability) {\r\n        super(ability);\r\n        this.filter = ability.filter;\r\n    }","id":1766,"modified_method":"public PutIntoGraveFromBattlefieldAllTriggeredAbility(final PutIntoGraveFromBattlefieldAllTriggeredAbility ability) {\r\n        super(ability);\r\n        this.filter = ability.filter;\r\n        this.onlyToControllerGraveyard = ability.onlyToControllerGraveyard;        \r\n    }","commit_id":"d42901d0523d72820c3c2d69dfaf83c19b7d8ca9","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public void addOptionalAdditionalCosts(Ability ability, Game game) {\r\n        if (ability instanceof SpellAbility) {\r\n            Player player = game.getPlayer(controllerId);\r\n            if (player != null) {\r\n                this.resetBuyback();\r\n                if (buybackCost != null) {\r\n                    if (player.chooseUse(Outcome.Benefit, new StringBuilder(\"Pay \").append(buybackCost.getText(false)).append(\" ?\").toString(), ability, game)) {\r\n                        buybackCost.activate();\r\n                        for (Iterator it = ((Costs) buybackCost).iterator(); it.hasNext();) {\r\n                            Cost cost = (Cost) it.next();\r\n                            if (cost instanceof ManaCostsImpl) {\r\n                                ability.getManaCostsToPay().add((ManaCostsImpl) cost.copy());\r\n                            } else {\r\n                                ability.getCosts().add(cost.copy());\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }","id":1767,"modified_method":"@Override\r\n    public void addOptionalAdditionalCosts(Ability ability, Game game) {\r\n        if (ability instanceof SpellAbility) {\r\n            Player player = game.getPlayer(ability.getControllerId());\r\n            if (player != null) {\r\n                this.resetBuyback();\r\n                if (buybackCost != null) {\r\n                    if (player.chooseUse(Outcome.Benefit, \"Pay \" + buybackCost.getText(false) + \" ?\", ability, game)) {\r\n                        buybackCost.activate();\r\n                        for (Iterator it = ((Costs) buybackCost).iterator(); it.hasNext();) {\r\n                            Cost cost = (Cost) it.next();\r\n                            if (cost instanceof ManaCostsImpl) {\r\n                                ability.getManaCostsToPay().add((ManaCostsImpl) cost.copy());\r\n                            } else {\r\n                                ability.getCosts().add(cost.copy());\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }","commit_id":"1a93d3a96d249381f0553b72f0ee30ab623201a7","url":"https://github.com/magefree/mage"},{"original_method":"public void checkTriggers(GameEvent event, Game game) {\n        for (Iterator<TriggeredAbility> it = this.values().iterator(); it.hasNext();) {\n            TriggeredAbility ability = it.next();\n            if (!ability.checkEventType(event, game)) {\n                continue;\n            }\n            // for effects like when leaves battlefield or destroyed use ShortLKI to check if permanent was in the correct zone before (e.g. Oblivion Ring or Karmic Justice)\n            MageObject object = game.getObject(ability.getSourceId());\n            if (ability.isInUseableZone(game, object, event)) {\n                if (!game.getContinuousEffects().preventedByRuleModification(event, ability, game, false)) {\n                    if (object != null) {\n                        boolean controllerSet = false;\n                        if (!ability.getZone().equals(Zone.COMMAND) && event.getTargetId() != null && event.getTargetId().equals(ability.getSourceId())\n                                && (event.getType().equals(EventType.ZONE_CHANGE) || event.getType().equals(EventType.DESTROYED_PERMANENT))) {\n                            // need to check if object was face down for dies and destroy events because the ability triggers in the new zone, zone counter -1 is used\n                            Permanent permanent = (Permanent) game.getLastKnownInformation(ability.getSourceId(), Zone.BATTLEFIELD, ability.getSourceObjectZoneChangeCounter() - 1);\n                            if (permanent != null) {\n                                if (!ability.getWorksFaceDown() && permanent.isFaceDown(game)) {\n                                    continue;\n                                }\n                                controllerSet = true;\n                                ability.setControllerId(permanent.getControllerId());\n                            }\n                        }\n                        if (!controllerSet) {\n                            if (object instanceof Permanent) {\n                                ability.setControllerId(((Permanent) object).getControllerId());\n                            } else if (object instanceof Card) {\n                                ability.setControllerId(((Card) object).getOwnerId());\n                            }\n                        }\n                    }\n\n                    if (ability.checkTrigger(event, game)) {\n                        ability.trigger(game, ability.getControllerId());\n                    }\n                }\n            }\n        }\n    }","id":1768,"modified_method":"public void checkTriggers(GameEvent event, Game game) {\n        for (Iterator<TriggeredAbility> it = this.values().iterator(); it.hasNext();) {\n            TriggeredAbility ability = it.next();\n            if (!ability.checkEventType(event, game)) {\n                continue;\n            }\n            // for effects like when leaves battlefield or destroyed use ShortLKI to check if permanent was in the correct zone before (e.g. Oblivion Ring or Karmic Justice)\n            MageObject object = game.getObject(ability.getSourceId());\n            if (ability.isInUseableZone(game, object, event)) {\n                if (!game.getContinuousEffects().preventedByRuleModification(event, ability, game, false)) {\n                    if (object != null) {\n                        boolean controllerSet = false;\n                        if (!ability.getZone().equals(Zone.COMMAND) && event.getTargetId() != null && event.getTargetId().equals(ability.getSourceId())\n                                && (event.getType().equals(EventType.ZONE_CHANGE) || event.getType().equals(EventType.DESTROYED_PERMANENT))) {\n                            // need to check if object was face down for dies and destroy events because the ability triggers in the new zone, zone counter -1 is used\n                            Permanent permanent = (Permanent) game.getLastKnownInformation(ability.getSourceId(), Zone.BATTLEFIELD, ability.getSourceObjectZoneChangeCounter() - 1);\n                            if (permanent != null) {\n                                if (!ability.getWorksFaceDown() && permanent.isFaceDown(game)) {\n                                    continue;\n                                }\n                                controllerSet = true;\n                                ability.setControllerId(permanent.getControllerId());\n                            }\n                        }\n                        if (!controllerSet) {\n                            if (object instanceof Permanent) {\n                                ability.setControllerId(((Permanent) object).getControllerId());\n                            } else if (object instanceof Spell) {\n                                // needed so that cast triggered abilities have to correct controller (e.g. Ulamog, the Infinite Gyre).\n                                ability.setControllerId(((Spell) object).getControllerId());\n                            } else if (object instanceof Card) {\n                                ability.setControllerId(((Card) object).getOwnerId());\n                            }\n                        }\n                    }\n\n                    if (ability.checkTrigger(event, game)) {\n                        ability.trigger(game, ability.getControllerId());\n                    }\n                }\n            }\n        }\n    }","commit_id":"1a93d3a96d249381f0553b72f0ee30ab623201a7","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public String getRule() {\r\n        return new StringBuilder(\"When you cast {this}, \").append(super.getRule()).toString();\r\n    }","id":1769,"modified_method":"@Override\r\n    public String getRule() {\r\n        return \"When you cast {this}, \" + super.getRule();\r\n    }","commit_id":"1a93d3a96d249381f0553b72f0ee30ab623201a7","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player controller = game.getPlayer(source.getControllerId());\r\n        MageObject mageObject = game.getObject(source.getSourceId());\r\n        if (controller != null) {\r\n            Player player = game.getPlayer(targetPointer.getFirst(game, source));\r\n            FilterCard filter = new FilterNonlandCard();\r\n            filter.add(new ConvertedManaCostPredicate(Filter.ComparisonType.LessThan, source.getManaCostsToPay().getX() + 1));\r\n            UUID exileId = CardUtil.getCardExileZoneId(game, source);\r\n            if (player != null) {\r\n\r\n                // putting cards to exile shouldn't end the game, so getting minimun available\r\n                int cardsCount = Math.min(source.getManaCostsToPay().getX(), player.getLibrary().size());\r\n                for (int i = 0; i < cardsCount; i++) {\r\n                    Card card = player.getLibrary().getFromTop(game);\r\n                    if (card != null) {\r\n                        controller.moveCardToExileWithInfo(card, exileId, mageObject.getIdName(), source.getSourceId(), game, Zone.LIBRARY, true);\r\n                    }\r\n                }\r\n            }\r\n            ExileZone exileZone = game.getExile().getExileZone(exileId);\r\n            while (exileZone != null && exileZone.count(filter, game) > 0\r\n                    && controller.chooseUse(Outcome.PlayForFree, \"Cast cards exiled with \" + mageObject.getLogName() +\"  without paying its mana cost?\", source, game)) {\r\n                TargetCardInExile target = new TargetCardInExile(0,1, filter, exileId, false);\r\n                while (exileZone.count(filter, game) > 0 && controller.choose(Outcome.PlayForFree, exileZone, target, game)) {\r\n                    Card card = game.getCard(target.getFirstTarget());\r\n                    if (card != null) {                            \r\n                        controller.cast(card.getSpellAbility(), game, true);\r\n                    } else {\r\n                        break;\r\n                    }\r\n                    target.clearChosen();\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }","id":1770,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player controller = game.getPlayer(source.getControllerId());\r\n        MageObject mageObject = game.getObject(source.getSourceId());\r\n        if (controller != null) {\r\n            Player player = game.getPlayer(targetPointer.getFirst(game, source));\r\n            FilterCard filter = new FilterNonlandCard();\r\n            filter.add(new ConvertedManaCostPredicate(Filter.ComparisonType.LessThan, source.getManaCostsToPay().getX() + 1));\r\n            UUID exileId = CardUtil.getCardExileZoneId(game, source);\r\n            if (player != null) {\r\n                Cards cardsToExile = new CardsImpl();\r\n                cardsToExile.addAll(player.getLibrary().getTopCards(game, source.getManaCostsToPay().getX()));\r\n                controller.moveCards(cardsToExile, null, Zone.EXILED, source, game, true);\r\n                if (controller.chooseUse(Outcome.PlayForFree, \"Cast cards exiled with \" + mageObject.getLogName() + \"  without paying its mana cost?\", source, game)) {\r\n                    OuterLoop:\r\n                    while (cardsToExile.count(filter, game) > 0) {\r\n                        TargetCardInExile target = new TargetCardInExile(0, 1, filter, exileId, false);\r\n                        while (cardsToExile.count(filter, game) > 0 && controller.choose(Outcome.PlayForFree, cardsToExile, target, game)) {\r\n                            Card card = game.getCard(target.getFirstTarget());\r\n                            if (card != null) {\r\n                                controller.cast(card.getSpellAbility(), game, true);\r\n                                cardsToExile.remove(card);\r\n                            } else {\r\n                                break OuterLoop;\r\n                            }\r\n                            target.clearChosen();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }","commit_id":"1a93d3a96d249381f0553b72f0ee30ab623201a7","url":"https://github.com/magefree/mage"},{"original_method":"/**\n\t * Returns the user's display URL based on the theme display.\n\t *\n\t * <p>\n\t * The logic for the display URL to return is as follows:\n\t * <\/p>\n\t *\n\t * <ol>\n\t * <li>\n\t * If the user is the guest user, return an empty string.\n\t * <\/li>\n\t * <li>\n\t * Else, if a friendly URL is available for the user's profile, return that\n\t * friendly URL.\n\t * <\/li>\n\t * <li>\n\t * Else, if <code>privateLayout<\/code> is <code>true<\/code>, return the URL\n\t * of the user's default intranet site home page.\n\t * <\/li>\n\t * <li>\n\t * Otherwise, return the URL of the user's default extranet site home page.\n\t * <\/li>\n\t * <\/ol>\n\t *\n\t * @param  themeDisplay the theme display\n\t * @param  privateLayout whether to use the URL of the user's default\n\t *         intranet (versus extranet) site home page, if no friendly URL is\n\t *         available for the user's profile\n\t * @return the user's display URL\n\t * @throws PortalException if a portal exception occurred\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic String getDisplayURL(\n\t\t\tThemeDisplay themeDisplay, boolean privateLayout)\n\t\tthrows PortalException, SystemException {\n\n\t\treturn getDisplayURL(\n\t\t\tthemeDisplay.getPortalURL(), themeDisplay.getPathMain(),\n\t\t\tprivateLayout);\n\t}","id":1771,"modified_method":"/**\n\t * Returns the user's display URL based on the theme display.\n\t *\n\t * <p>\n\t * The logic for the display URL to return is as follows:\n\t * <\/p>\n\t *\n\t * <ol>\n\t * <li>\n\t * If the user is the guest user, return an empty string.\n\t * <\/li>\n\t * <li>\n\t * Else, if a friendly URL is available for the user's profile, return that\n\t * friendly URL.\n\t * <\/li>\n\t * <li>\n\t * Else, if <code>privateLayout<\/code> is <code>true<\/code>, return the URL\n\t * of the user's default intranet site home page.\n\t * <\/li>\n\t * <li>\n\t * Otherwise, return the URL of the user's default extranet site home page.\n\t * <\/li>\n\t * <\/ol>\n\t *\n\t * @param  themeDisplay the theme display\n\t * @param  privateLayout whether to use the URL of the user's default\n\t *         intranet (versus extranet) site home page, if no friendly URL is\n\t *         available for the user's profile\n\t * @return the user's display URL\n\t * @throws PortalException if a portal exception occurred\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic String getDisplayURL(\n\t\t\tThemeDisplay themeDisplay, boolean privateLayout)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (isDefaultUser()) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tString portalURL = themeDisplay.getPortalURL();\n\n\t\tString profileFriendlyURL = getProfileFriendlyURL();\n\n\t\tif (Validator.isNotNull(profileFriendlyURL)) {\n\t\t\treturn portalURL.concat(PortalUtil.getPathContext()).concat(\n\t\t\t\tprofileFriendlyURL);\n\t\t}\n\n\t\tGroup group = getGroup();\n\n\t\tint publicLayoutsPageCount = group.getPublicLayoutsPageCount();\n\n\t\tif (publicLayoutsPageCount > 0) {\n\t\t\tStringBundler sb = new StringBundler(5);\n\n\t\t\tsb.append(portalURL);\n\t\t\tsb.append(themeDisplay.getPathMain());\n\t\t\tsb.append(\"/my_sites/view?groupId=\");\n\t\t\tsb.append(group.getGroupId());\n\n\t\t\tif (privateLayout) {\n\t\t\t\tsb.append(\"&privateLayout=1\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsb.append(\"&privateLayout=0\");\n\t\t\t}\n\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\treturn StringPool.BLANK;\n\t}","commit_id":"d7dfbd99bdca4a8fb5d0018100256fd6a230c1ef","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tFileEntry fileEntry = DLAppLocalServiceUtil.getFileEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tif (!DLFileEntryPermission.contains(\n\t\t\t\tpermissionChecker, fileEntry.getFileEntryId(),\n\t\t\t\tActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/document_library/find_file_entry?fileEntryId=\" +\n\t\t\t\tfileEntry.getFileEntryId();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == DLActivityKeys.ADD_FILE_ENTRY) {\n\t\t\tif (Validator.isNull(groupName)) {\n\t\t\t\ttitlePattern = \"activity-document-library-add-file\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttitlePattern = \"activity-document-library-add-file-in\";\n\t\t\t}\n\t\t}\n\t\telse if (activityType == DLActivityKeys.UPDATE_FILE_ENTRY) {\n\t\t\tif (Validator.isNull(groupName)) {\n\t\t\t\ttitlePattern = \"activity-document-library-update-file\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttitlePattern = \"activity-document-library-update-file-in\";\n\t\t\t}\n\t\t}\n\n\t\tString fileTitle = getValue(\n\t\t\tactivity.getExtraData(), \"title\", fileEntry.getTitle());\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, wrapLink(link, fileTitle)\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tStringBundler sb = new StringBundler(3);\n\n\t\tAssetRendererFactory assetRendererFactory =\n\t\t\tAssetRendererFactoryRegistryUtil.getAssetRendererFactoryByType(\n\t\t\t\t\"document\");\n\n\t\tAssetRenderer assetRenderer = assetRendererFactory.getAssetRenderer(\n\t\t\tfileEntry.getFileEntryId());\n\n\t\tString fileEntryLink = assetRenderer.getURLDownload(themeDisplay);\n\n\t\tsb.append(wrapLink(fileEntryLink, \"download-file\", themeDisplay));\n\t\tsb.append(StringPool.DOUBLE_SPACE);\n\n\t\tString folderLink =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/document_library/find_folder?groupId=\" +\n\t\t\t\t\tfileEntry.getRepositoryId() + \"&folderId=\" +\n\t\t\t\t\t\tfileEntry.getFolderId();\n\n\t\tsb.append(wrapLink(folderLink, \"go-to-folder\", themeDisplay));\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":1772,"modified_method":"@Override\n\tprotected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tFileEntry fileEntry = DLAppLocalServiceUtil.getFileEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tif (!DLFileEntryPermission.contains(\n\t\t\t\tpermissionChecker, fileEntry.getFileEntryId(),\n\t\t\t\tActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tStringBundler sb = new StringBundler(4);\n\n\t\tsb.append(themeDisplay.getPortalURL());\n\t\tsb.append(themeDisplay.getPathMain());\n\t\tsb.append(\"/document_library/find_file_entry?fileEntryId=\");\n\t\tsb.append(fileEntry.getFileEntryId());\n\n\t\tString link =sb.toString();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == DLActivityKeys.ADD_FILE_ENTRY) {\n\t\t\tif (Validator.isNull(groupName)) {\n\t\t\t\ttitlePattern = \"activity-document-library-add-file\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttitlePattern = \"activity-document-library-add-file-in\";\n\t\t\t}\n\t\t}\n\t\telse if (activityType == DLActivityKeys.UPDATE_FILE_ENTRY) {\n\t\t\tif (Validator.isNull(groupName)) {\n\t\t\t\ttitlePattern = \"activity-document-library-update-file\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttitlePattern = \"activity-document-library-update-file-in\";\n\t\t\t}\n\t\t}\n\n\t\tString fileTitle = getValue(\n\t\t\tactivity.getExtraData(), \"title\", fileEntry.getTitle());\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, wrapLink(link, fileTitle)\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tsb = new StringBundler(3);\n\n\t\tAssetRendererFactory assetRendererFactory =\n\t\t\tAssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(\n\t\t\t\tDLFileEntry.class.getName());\n\n\t\tAssetRenderer assetRenderer = assetRendererFactory.getAssetRenderer(\n\t\t\tfileEntry.getFileEntryId());\n\n\t\tString fileEntryLink = assetRenderer.getURLDownload(themeDisplay);\n\n\t\tsb.append(wrapLink(fileEntryLink, \"download-file\", themeDisplay));\n\t\tsb.append(StringPool.SPACE);\n\n\t\tsb.append(\n\t\t\twrapLink(\n\t\t\t\t_getFolderLink(themeDisplay, fileEntry), \"go-to-folder\",\n\t\t\t\tthemeDisplay));\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"de078ba6bc4a09eddfb8a347ad8a1c9a184a4e7f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tif (!MBMessagePermission.contains(\n\t\t\t\tpermissionChecker, activity.getClassPK(), ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\t\tString receiverUserName = getUserName(\n\t\t\tactivity.getReceiverUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tMBMessage message = MBMessageLocalServiceUtil.getMessage(\n\t\t\tactivity.getClassPK());\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/message_boards/find_message?messageId=\" +\n\t\t\t\t\tmessage.getMessageId();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == MBActivityKeys.ADD_MESSAGE) {\n\t\t\ttitlePattern = \"activity-message-boards-add-message\";\n\t\t}\n\t\telse if (activityType == MBActivityKeys.REPLY_MESSAGE) {\n\t\t\ttitlePattern = \"activity-message-boards-reply-message\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString messageSubject = wrapLink(\n\t\t\tlink, HtmlUtil.escape(cleanContent(message.getSubject())));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, receiverUserName, messageSubject\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tString categoryLink =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/message_boards/find_category?mbCategoryId=\" +\n\t\t\t\t\tmessage.getCategoryId();\n\n\t\tString body = wrapLink(categoryLink, \"go-to-category\", themeDisplay);\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":1773,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tif (!MBMessagePermission.contains(\n\t\t\t\tpermissionChecker, activity.getClassPK(), ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\t\tString receiverUserName = getUserName(\n\t\t\tactivity.getReceiverUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tMBMessage message = MBMessageLocalServiceUtil.getMessage(\n\t\t\tactivity.getClassPK());\n\n\t\tStringBuilder sb = new StringBuilder(4);\n\n\t\tsb.append(themeDisplay.getPortalURL());\n\t\tsb.append(themeDisplay.getPathMain());\n\t\tsb.append(\"/message_boards/find_message?messageId=\");\n\t\tsb.append(message.getMessageId());\n\n\t\tString link = sb.toString();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == MBActivityKeys.ADD_MESSAGE) {\n\t\t\ttitlePattern = \"activity-message-boards-add-message\";\n\t\t}\n\t\telse if (activityType == MBActivityKeys.REPLY_MESSAGE) {\n\t\t\ttitlePattern = \"activity-message-boards-reply-message\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString messageSubject = wrapLink(\n\t\t\tlink, HtmlUtil.escape(cleanContent(message.getSubject())));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, receiverUserName, messageSubject\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tString body = StringPool.BLANK;\n\n\t\tif (message.getCategoryId() > 0) {\n\t\t\tsb = new StringBuilder(4);\n\n\t\t\tsb.append(themeDisplay.getPortalURL());\n\t\t\tsb.append(themeDisplay.getPathMain());\n\t\t\tsb.append(\"/message_boards/find_category?mbCategoryId=\");\n\t\t\tsb.append(message.getCategoryId());\n\n\t\t\tString categoryLink = sb.toString();\n\n\t\t\tbody = wrapLink(categoryLink, \"go-to-category\", themeDisplay);\n\t\t}\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"dfdf5953e924f657136c95ebb5b84d840dd2a2f0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void calculate() throws AvailabilityCalculationException {\n\n        log.debug(\"Calculation Started\");\n        log.debug(\"periodEndDate: \" + m_periodEndDate);\n\n        m_report.setLogo(m_logoURL);\n        ViewInfo viewInfo = new ViewInfo();\n        m_report.setViewInfo(viewInfo);\n        org.opennms.report.availability.Categories categories = new org.opennms.report.availability.Categories();\n        m_report.setCategories(categories);\n        try {\n            log.debug(\"Populating datastructures and calculating availabilty\");\n            log.debug(\"category:     \" + m_categoryName);\n            log.debug(\"monthFormat:  \" + m_monthFormat);\n            log.debug(\"reportFormat: \" + m_reportFormat);\n            AvailabilityData availData = new AvailabilityData(m_categoryName,\n                                                              m_report,\n                                                              m_reportFormat,\n                                                              m_monthFormat,\n                                                              m_calendar,\n                                                              m_periodEndDate);\n\n        } catch (MarshalException me) {\n            log.fatal(\"MarshalException \", me);\n            throw new AvailabilityCalculationException(me);\n        } catch (ValidationException ve) {\n            log.fatal(\"Validation Exception \", ve);\n            throw new AvailabilityCalculationException(ve);\n        } catch (IOException ioe) {\n            log.fatal(\"Validation Exception \", ioe);\n            throw new AvailabilityCalculationException(ioe);\n        } catch (Exception e) {\n            log.fatal(\"Exception \", e);\n            throw new AvailabilityCalculationException(e);\n        }\n\n    }","id":1774,"modified_method":"public void calculate() throws AvailabilityCalculationException {\n\n        log.debug(\"Calculation Started\");\n        log.debug(\"periodEndDate: \" + m_periodEndDate);\n\n        m_report.setLogo(m_logoURL);\n        ViewInfo viewInfo = new ViewInfo();\n        m_report.setViewInfo(viewInfo);\n        org.opennms.report.availability.Categories categories = new org.opennms.report.availability.Categories();\n        m_report.setCategories(categories);\n        try {\n            log.debug(\"Populating datastructures and calculating availability\");\n            log.debug(\"category:     \" + m_categoryName);\n            log.debug(\"monthFormat:  \" + m_monthFormat);\n            log.debug(\"reportFormat: \" + m_reportFormat);\n            AvailabilityData availData = new AvailabilityData(m_categoryName,\n                                                              m_report,\n                                                              m_reportFormat,\n                                                              m_monthFormat,\n                                                              m_calendar,\n                                                              m_periodEndDate);\n\n        } catch (MarshalException me) {\n            log.fatal(\"MarshalException \", me);\n            throw new AvailabilityCalculationException(me);\n        } catch (ValidationException ve) {\n            log.fatal(\"Validation Exception \", ve);\n            throw new AvailabilityCalculationException(ve);\n        } catch (IOException ioe) {\n            log.fatal(\"Validation Exception \", ioe);\n            throw new AvailabilityCalculationException(ioe);\n        } catch (Exception e) {\n            log.fatal(\"Exception \", e);\n            throw new AvailabilityCalculationException(e);\n        }\n\n    }","commit_id":"566d665edec1c32b76a9cb00cec8844f55dffccd","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * <P>\n     * Poll the specified address for ICMP service availability.\n     * <\/P>\n     * \n     * <P>\n     * The ICMP service monitor relies on Discovery for the actual generation of\n     * IMCP 'ping' requests. A JSDT session with two channels (send/recv) is\n     * utilized for passing poll requests and receiving poll replies from\n     * discovery. All exchanges are SOAP/XML compliant.\n     * <\/P>\n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availibility of the interface and if a transition event\n     *         should be supressed.\n     * \n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4)\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n\n        Category log = ThreadCategory.getInstance(this.getClass());\n        PollStatus serviceStatus = PollStatus.unavailable();\n        Double rtt = null;\n        InetAddress host = (InetAddress) iface.getAddress();\n\n        try {\n            \n            // get parameters\n            //\n            int retries = ParameterMap.getKeyedInteger(parameters, \"retry\", Pinger.DEFAULT_RETRIES);\n            long timeout = ParameterMap.getKeyedLong(parameters, \"timeout\", Pinger.DEFAULT_TIMEOUT);\n            \n            rtt = (double)Pinger.ping(host, timeout, retries);\n        } catch (Exception e) {\n            log.debug(\"failed to ping \" + host, e);\n        }\n        \n        if (rtt != null) {\n            return PollStatus.available(rtt);\n        } else {\n            // TODO add a reason code for unavailability\n            return PollStatus.unavailable();\n        }\n\n    }","id":1775,"modified_method":"/**\n     * <P>\n     * Poll the specified address for ICMP service availability.\n     * <\/P>\n     * \n     * <P>\n     * The ICMP service monitor relies on Discovery for the actual generation of\n     * IMCP 'ping' requests. A JSDT session with two channels (send/recv) is\n     * utilized for passing poll requests and receiving poll replies from\n     * discovery. All exchanges are SOAP/XML compliant.\n     * <\/P>\n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availability of the interface and if a transition event\n     *         should be suppressed.\n     * \n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4)\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n\n        Category log = ThreadCategory.getInstance(this.getClass());\n        Long rtt = null;\n        InetAddress host = (InetAddress) iface.getAddress();\n\n        try {\n            \n            // get parameters\n            //\n            int retries = ParameterMap.getKeyedInteger(parameters, \"retry\", Pinger.DEFAULT_RETRIES);\n            long timeout = ParameterMap.getKeyedLong(parameters, \"timeout\", Pinger.DEFAULT_TIMEOUT);\n            \n            rtt = Pinger.ping(host, timeout, retries);\n        } catch (Exception e) {\n            log.debug(\"failed to ping \" + host, e);\n        }\n        \n        if (rtt != null) {\n            return PollStatus.available(rtt.doubleValue());\n        } else {\n            // TODO add a reason code for unavailability\n            return PollStatus.unavailable();\n        }\n\n    }","commit_id":"566d665edec1c32b76a9cb00cec8844f55dffccd","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void installWebApp() throws Exception {\n        m_out.println(\"- Install OpenNMS webapp... \");\n\n        installLink(m_install_servletdir + File.separator + \"META-INF\"\n                + File.separator + \"context.xml\", m_webappdir\n                + File.separator + \"opennms.xml\", \"web application context\",\n                    false);\n\n        m_out.println(\"- Installing OpenNMS webapp... DONE\");\n    }","id":1776,"modified_method":"public void installWebApp() throws Exception {\n        m_out.println(\"- Install OpenNMS webapp... \");\n\n        copyFile(m_install_servletdir + File.separator + \"META-INF\"\n                + File.separator + \"context.xml\", m_webappdir\n                + File.separator + \"opennms.xml\", \"web application context\",\n                    false);\n\n        m_out.println(\"- Installing OpenNMS webapp... DONE\");\n    }","commit_id":"566d665edec1c32b76a9cb00cec8844f55dffccd","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void calculate() throws AvailabilityCalculationException {\n\n        log.debug(\"Calculation Started\");\n        log.debug(\"periodEndDate: \" + m_periodEndDate);\n\n        m_report.setLogo(m_logoURL);\n        ViewInfo viewInfo = new ViewInfo();\n        m_report.setViewInfo(viewInfo);\n        org.opennms.report.availability.Categories categories = new org.opennms.report.availability.Categories();\n        m_report.setCategories(categories);\n        try {\n            log.debug(\"Populating datastructures and calculating availabilty\");\n            log.debug(\"category:     \" + m_categoryName);\n            log.debug(\"monthFormat:  \" + m_monthFormat);\n            log.debug(\"reportFormat: \" + m_reportFormat);\n            AvailabilityData availData = new AvailabilityData(m_categoryName,\n                                                              m_report,\n                                                              m_reportFormat,\n                                                              m_monthFormat,\n                                                              m_calendar,\n                                                              m_periodEndDate);\n\n        } catch (MarshalException me) {\n            log.fatal(\"MarshalException \", me);\n            throw new AvailabilityCalculationException(me);\n        } catch (ValidationException ve) {\n            log.fatal(\"Validation Exception \", ve);\n            throw new AvailabilityCalculationException(ve);\n        } catch (IOException ioe) {\n            log.fatal(\"Validation Exception \", ioe);\n            throw new AvailabilityCalculationException(ioe);\n        } catch (Exception e) {\n            log.fatal(\"Exception \", e);\n            throw new AvailabilityCalculationException(e);\n        }\n\n    }","id":1777,"modified_method":"public void calculate() throws AvailabilityCalculationException {\n\n        log.debug(\"Calculation Started\");\n        log.debug(\"periodEndDate: \" + m_periodEndDate);\n\n        m_report.setLogo(m_logoURL);\n        ViewInfo viewInfo = new ViewInfo();\n        m_report.setViewInfo(viewInfo);\n        org.opennms.report.availability.Categories categories = new org.opennms.report.availability.Categories();\n        m_report.setCategories(categories);\n        try {\n            log.debug(\"Populating datastructures and calculating availability\");\n            log.debug(\"category:     \" + m_categoryName);\n            log.debug(\"monthFormat:  \" + m_monthFormat);\n            log.debug(\"reportFormat: \" + m_reportFormat);\n            AvailabilityData availData = new AvailabilityData(m_categoryName,\n                                                              m_report,\n                                                              m_reportFormat,\n                                                              m_monthFormat,\n                                                              m_calendar,\n                                                              m_periodEndDate);\n\n        } catch (MarshalException me) {\n            log.fatal(\"MarshalException \", me);\n            throw new AvailabilityCalculationException(me);\n        } catch (ValidationException ve) {\n            log.fatal(\"Validation Exception \", ve);\n            throw new AvailabilityCalculationException(ve);\n        } catch (IOException ioe) {\n            log.fatal(\"Validation Exception \", ioe);\n            throw new AvailabilityCalculationException(ioe);\n        } catch (Exception e) {\n            log.fatal(\"Exception \", e);\n            throw new AvailabilityCalculationException(e);\n        }\n\n    }","commit_id":"4826f4ee4b3d53eda88a1236d0252372f4b25a1f","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * <P>\n     * Poll the specified address for ICMP service availability.\n     * <\/P>\n     * \n     * <P>\n     * The ICMP service monitor relies on Discovery for the actual generation of\n     * IMCP 'ping' requests. A JSDT session with two channels (send/recv) is\n     * utilized for passing poll requests and receiving poll replies from\n     * discovery. All exchanges are SOAP/XML compliant.\n     * <\/P>\n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availibility of the interface and if a transition event\n     *         should be supressed.\n     * \n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4)\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n\n        Category log = ThreadCategory.getInstance(this.getClass());\n        PollStatus serviceStatus = PollStatus.unavailable();\n        Double rtt = null;\n        InetAddress host = (InetAddress) iface.getAddress();\n\n        try {\n            \n            // get parameters\n            //\n            int retries = ParameterMap.getKeyedInteger(parameters, \"retry\", Pinger.DEFAULT_RETRIES);\n            long timeout = ParameterMap.getKeyedLong(parameters, \"timeout\", Pinger.DEFAULT_TIMEOUT);\n            \n            rtt = (double)Pinger.ping(host, timeout, retries);\n        } catch (Exception e) {\n            log.debug(\"failed to ping \" + host, e);\n        }\n        \n        if (rtt != null) {\n            return PollStatus.available(rtt);\n        } else {\n            // TODO add a reason code for unavailability\n            return PollStatus.unavailable();\n        }\n\n    }","id":1778,"modified_method":"/**\n     * <P>\n     * Poll the specified address for ICMP service availability.\n     * <\/P>\n     * \n     * <P>\n     * The ICMP service monitor relies on Discovery for the actual generation of\n     * IMCP 'ping' requests. A JSDT session with two channels (send/recv) is\n     * utilized for passing poll requests and receiving poll replies from\n     * discovery. All exchanges are SOAP/XML compliant.\n     * <\/P>\n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availability of the interface and if a transition event\n     *         should be suppressed.\n     * \n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4)\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n\n        Category log = ThreadCategory.getInstance(this.getClass());\n        Long rtt = null;\n        InetAddress host = (InetAddress) iface.getAddress();\n\n        try {\n            \n            // get parameters\n            //\n            int retries = ParameterMap.getKeyedInteger(parameters, \"retry\", Pinger.DEFAULT_RETRIES);\n            long timeout = ParameterMap.getKeyedLong(parameters, \"timeout\", Pinger.DEFAULT_TIMEOUT);\n            \n            rtt = Pinger.ping(host, timeout, retries);\n        } catch (Exception e) {\n            log.debug(\"failed to ping \" + host, e);\n        }\n        \n        if (rtt != null) {\n            return PollStatus.available(rtt.doubleValue());\n        } else {\n            // TODO add a reason code for unavailability\n            return PollStatus.unavailable();\n        }\n\n    }","commit_id":"4826f4ee4b3d53eda88a1236d0252372f4b25a1f","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void installWebApp() throws Exception {\n        m_out.println(\"- Install OpenNMS webapp... \");\n\n        installLink(m_install_servletdir + File.separator + \"META-INF\"\n                + File.separator + \"context.xml\", m_webappdir\n                + File.separator + \"opennms.xml\", \"web application context\",\n                    false);\n\n        m_out.println(\"- Installing OpenNMS webapp... DONE\");\n    }","id":1779,"modified_method":"public void installWebApp() throws Exception {\n        m_out.println(\"- Install OpenNMS webapp... \");\n\n        copyFile(m_install_servletdir + File.separator + \"META-INF\"\n                + File.separator + \"context.xml\", m_webappdir\n                + File.separator + \"opennms.xml\", \"web application context\",\n                    false);\n\n        m_out.println(\"- Installing OpenNMS webapp... DONE\");\n    }","commit_id":"4826f4ee4b3d53eda88a1236d0252372f4b25a1f","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void calculate() throws AvailabilityCalculationException {\n\n        log.debug(\"Calculation Started\");\n        log.debug(\"periodEndDate: \" + m_periodEndDate);\n\n        m_report.setLogo(m_logoURL);\n        ViewInfo viewInfo = new ViewInfo();\n        m_report.setViewInfo(viewInfo);\n        org.opennms.report.availability.Categories categories = new org.opennms.report.availability.Categories();\n        m_report.setCategories(categories);\n        try {\n            log.debug(\"Populating datastructures and calculating availabilty\");\n            log.debug(\"category:     \" + m_categoryName);\n            log.debug(\"monthFormat:  \" + m_monthFormat);\n            log.debug(\"reportFormat: \" + m_reportFormat);\n            AvailabilityData availData = new AvailabilityData(m_categoryName,\n                                                              m_report,\n                                                              m_reportFormat,\n                                                              m_monthFormat,\n                                                              m_calendar,\n                                                              m_periodEndDate);\n\n        } catch (MarshalException me) {\n            log.fatal(\"MarshalException \", me);\n            throw new AvailabilityCalculationException(me);\n        } catch (ValidationException ve) {\n            log.fatal(\"Validation Exception \", ve);\n            throw new AvailabilityCalculationException(ve);\n        } catch (IOException ioe) {\n            log.fatal(\"Validation Exception \", ioe);\n            throw new AvailabilityCalculationException(ioe);\n        } catch (Exception e) {\n            log.fatal(\"Exception \", e);\n            throw new AvailabilityCalculationException(e);\n        }\n\n    }","id":1780,"modified_method":"public void calculate() throws AvailabilityCalculationException {\n\n        log.debug(\"Calculation Started\");\n        log.debug(\"periodEndDate: \" + m_periodEndDate);\n\n        m_report.setLogo(m_logoURL);\n        ViewInfo viewInfo = new ViewInfo();\n        m_report.setViewInfo(viewInfo);\n        org.opennms.report.availability.Categories categories = new org.opennms.report.availability.Categories();\n        m_report.setCategories(categories);\n        try {\n            log.debug(\"Populating datastructures and calculating availability\");\n            log.debug(\"category:     \" + m_categoryName);\n            log.debug(\"monthFormat:  \" + m_monthFormat);\n            log.debug(\"reportFormat: \" + m_reportFormat);\n            AvailabilityData availData = new AvailabilityData(m_categoryName,\n                                                              m_report,\n                                                              m_reportFormat,\n                                                              m_monthFormat,\n                                                              m_calendar,\n                                                              m_periodEndDate);\n\n        } catch (MarshalException me) {\n            log.fatal(\"MarshalException \", me);\n            throw new AvailabilityCalculationException(me);\n        } catch (ValidationException ve) {\n            log.fatal(\"Validation Exception \", ve);\n            throw new AvailabilityCalculationException(ve);\n        } catch (IOException ioe) {\n            log.fatal(\"Validation Exception \", ioe);\n            throw new AvailabilityCalculationException(ioe);\n        } catch (Exception e) {\n            log.fatal(\"Exception \", e);\n            throw new AvailabilityCalculationException(e);\n        }\n\n    }","commit_id":"0af15d7a2531d224bddf5b9f8ad0ba478be1cb6e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * <P>\n     * Poll the specified address for ICMP service availability.\n     * <\/P>\n     * \n     * <P>\n     * The ICMP service monitor relies on Discovery for the actual generation of\n     * IMCP 'ping' requests. A JSDT session with two channels (send/recv) is\n     * utilized for passing poll requests and receiving poll replies from\n     * discovery. All exchanges are SOAP/XML compliant.\n     * <\/P>\n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availibility of the interface and if a transition event\n     *         should be supressed.\n     * \n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4)\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n\n        Category log = ThreadCategory.getInstance(this.getClass());\n        PollStatus serviceStatus = PollStatus.unavailable();\n        Double rtt = null;\n        InetAddress host = (InetAddress) iface.getAddress();\n\n        try {\n            \n            // get parameters\n            //\n            int retries = ParameterMap.getKeyedInteger(parameters, \"retry\", Pinger.DEFAULT_RETRIES);\n            long timeout = ParameterMap.getKeyedLong(parameters, \"timeout\", Pinger.DEFAULT_TIMEOUT);\n            \n            rtt = (double)Pinger.ping(host, timeout, retries);\n        } catch (Exception e) {\n            log.debug(\"failed to ping \" + host, e);\n        }\n        \n        if (rtt != null) {\n            return PollStatus.available(rtt);\n        } else {\n            // TODO add a reason code for unavailability\n            return PollStatus.unavailable();\n        }\n\n    }","id":1781,"modified_method":"/**\n     * <P>\n     * Poll the specified address for ICMP service availability.\n     * <\/P>\n     * \n     * <P>\n     * The ICMP service monitor relies on Discovery for the actual generation of\n     * IMCP 'ping' requests. A JSDT session with two channels (send/recv) is\n     * utilized for passing poll requests and receiving poll replies from\n     * discovery. All exchanges are SOAP/XML compliant.\n     * <\/P>\n     * @param parameters\n     *            The package parameters (timeout, retry, etc...) to be used for\n     *            this poll.\n     * @param iface\n     *            The network interface to test the service on.\n     * @return The availability of the interface and if a transition event\n     *         should be suppressed.\n     * \n     */\n    public PollStatus poll(MonitoredService svc, Map parameters) {\n        NetworkInterface iface = svc.getNetInterface();\n\n        // Get interface address from NetworkInterface\n        //\n        if (iface.getType() != NetworkInterface.TYPE_IPV4)\n            throw new NetworkInterfaceNotSupportedException(\"Unsupported interface type, only TYPE_IPV4 currently supported\");\n\n        Category log = ThreadCategory.getInstance(this.getClass());\n        Long rtt = null;\n        InetAddress host = (InetAddress) iface.getAddress();\n\n        try {\n            \n            // get parameters\n            //\n            int retries = ParameterMap.getKeyedInteger(parameters, \"retry\", Pinger.DEFAULT_RETRIES);\n            long timeout = ParameterMap.getKeyedLong(parameters, \"timeout\", Pinger.DEFAULT_TIMEOUT);\n            \n            rtt = Pinger.ping(host, timeout, retries);\n        } catch (Exception e) {\n            log.debug(\"failed to ping \" + host, e);\n        }\n        \n        if (rtt != null) {\n            return PollStatus.available(rtt.doubleValue());\n        } else {\n            // TODO add a reason code for unavailability\n            return PollStatus.unavailable();\n        }\n\n    }","commit_id":"0af15d7a2531d224bddf5b9f8ad0ba478be1cb6e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void installWebApp() throws Exception {\n        m_out.println(\"- Install OpenNMS webapp... \");\n\n        installLink(m_install_servletdir + File.separator + \"META-INF\"\n                + File.separator + \"context.xml\", m_webappdir\n                + File.separator + \"opennms.xml\", \"web application context\",\n                    false);\n\n        m_out.println(\"- Installing OpenNMS webapp... DONE\");\n    }","id":1782,"modified_method":"public void installWebApp() throws Exception {\n        m_out.println(\"- Install OpenNMS webapp... \");\n\n        copyFile(m_install_servletdir + File.separator + \"META-INF\"\n                + File.separator + \"context.xml\", m_webappdir\n                + File.separator + \"opennms.xml\", \"web application context\",\n                    false);\n\n        m_out.println(\"- Installing OpenNMS webapp... DONE\");\n    }","commit_id":"0af15d7a2531d224bddf5b9f8ad0ba478be1cb6e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n         public void sawOpcode(int seen) {\n\t\t\n\t\tif (DEBUG) System.out.println(\"Saw opcode \" + seen);\n\t\n\t\tif ((prevOpCode  == I2D || prevOpCode == L2D)\n                        && seen == INVOKESTATIC\n                                && getClassConstantOperand().equals(\"java/lang/Math\")\n                                && getNameConstantOperand().equals(\"ceil\"))\n\t\t\tbugReporter.reportBug(new BugInstance(this, \n\t\t\t\t\"ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL\", \n\t\t\t\tHIGH_PRIORITY)\n\t\t\t\t\t.addClassAndMethod(this)\n\t\t\t\t\t.addSourceLine(this));\n\n\t\tif (prevOpCode  == IDIV && (seen == I2D|| seen == I2F)\n\t\t\t|| prevOpCode  == LDIV && (seen == L2D || seen==L2F))\n\t\t\tbugReporter.reportBug(new BugInstance(this, \"ICAST_IDIV_CAST_TO_DOUBLE\", NORMAL_PRIORITY)\n\t\t\t\t\t.addClassAndMethod(this)\n\t\t\t\t\t.addSourceLine(this));\n\n\t\tprevOpCode = seen;\n\t\t}","id":1783,"modified_method":"@Override\n         public void sawOpcode(int seen) {\n\t\t\n\t\tif (DEBUG) System.out.println(\"Saw opcode \" + OPCODE_NAMES[seen] + \" \" + pendingBug);\n\t\n\t\tif ((prevOpCode  == I2D || prevOpCode == L2D)\n                        && seen == INVOKESTATIC\n                                && getClassConstantOperand().equals(\"java/lang/Math\")\n                                && getNameConstantOperand().equals(\"ceil\")) {\n\t\t\tbugReporter.reportBug(new BugInstance(this, \n\t\t\t\t\"ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL\", \n\t\t\t\tHIGH_PRIORITY)\n\t\t\t\t\t.addClassAndMethod(this)\n\t\t\t\t\t.addSourceLine(this));\n\t\t\tpendingBug = null;\n\t\t}\n\t\telse if ((prevOpCode  == I2F || prevOpCode == L2F)\n                && seen == INVOKESTATIC\n                        && getClassConstantOperand().equals(\"java/lang/Math\")\n                        && getNameConstantOperand().equals(\"round\")) {\n\t\t\tbugReporter.reportBug(new BugInstance(this, \n\t\t\t\t\t\"ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND\", \n\t\t\t\t\tHIGH_PRIORITY)\n\t\t\t.addClassAndMethod(this)\n\t\t\t.addSourceLine(this));\n\t\t\tpendingBug = null;\n\t\t}\n\t\telse if (pendingBug != null) {\n\t\t\tbugReporter.reportBug(pendingBug);\n\t\t\tpendingBug = null;\n\t\t}\n\t\t\n\t\tif (prevOpCode  == IDIV && (seen == I2D|| seen == I2F)\n\t\t\t|| prevOpCode  == LDIV && (seen == L2D || seen==L2F))\n\t\t\tpendingBug = new BugInstance(this, \"ICAST_IDIV_CAST_TO_DOUBLE\", NORMAL_PRIORITY)\n\t\t\t\t\t.addClassAndMethod(this)\n\t\t\t\t\t.addSourceLine(this);\n\n\t\tprevOpCode = seen;\n\t\t}","commit_id":"5426e9da6235b824d02aa7d7b1853fd604a723b4","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n     * \n     */\n    private void checkForComparingClasses() {\n\t    if (stack.getStackDepth() >= 2) {\n\t    \tItem left = stack.getStackItem(1);\n\t    \tXMethod leftM = left.getReturnValueOf();\n\t    \tItem right = stack.getStackItem(0);\n\t    \tXMethod rightM = right.getReturnValueOf();\n\t    \tif (left.getSignature().equals(\"Ljava/lang/Class;\") && right.getSignature().equals(\"Ljava/lang/Class;\") ) {\n\t    \tboolean leftMatch = leftM != null && leftM.getName().equals(\"getClass\");\n\t\t\tboolean rightMatch = rightM != null && rightM.getName().equals(\"getClass\");\n\t\t\tif (leftMatch && rightMatch) {\n\t    \t\tsawGoodEqualsClass = true;\n\t    \t} else {\n\t    \t\tif (left.getConstant() != null  && rightMatch || leftMatch && right.getConstant() != null) {\n\t    \t\t\tsawBadEqualsClass = true;\n\t    \t\t\tif (!getThisClass().isFinal()) {\n\t\t\t\t\t\tint priority = Priorities.NORMAL_PRIORITY;\n\t\t\t\t\t\ttry {\n\t                        if (AnalysisContext.currentAnalysisContext().getSubtypes2().hasSubtypes(getClassDescriptor()))\n\t                        \tpriority--;\n                        } catch (ClassNotFoundException e) {\n\t                        bugReporter.reportMissingClass(e);\n                        }\n\t\t\t\t\t\tbugReporter.reportBug(new BugInstance(this,\"TESTING\", priority).addClassAndMethod(this).addSourceLine(this).addString(\"doesn't work for subtypes\"));\n\t\t\t\t\t}\n\t    \t\t}\n\t    \t}\n\t    \t}\n\t    \t\n\t    }\n    }","id":1784,"modified_method":"/**\n     * \n     */\n    private void checkForComparingClasses() {\n\t    if (stack.getStackDepth() >= 2) {\n\t    \tItem left = stack.getStackItem(1);\n\t    \tXMethod leftM = left.getReturnValueOf();\n\t    \tItem right = stack.getStackItem(0);\n\t    \tXMethod rightM = right.getReturnValueOf();\n\t    \tif (left.getSignature().equals(\"Ljava/lang/Class;\") && right.getSignature().equals(\"Ljava/lang/Class;\") ) {\n\t    \tboolean leftMatch = leftM != null && leftM.getName().equals(\"getClass\");\n\t\t\tboolean rightMatch = rightM != null && rightM.getName().equals(\"getClass\");\n\t\t\tif (leftMatch && rightMatch) {\n\t    \t\tsawGoodEqualsClass = true;\n\t    \t} else {\n\t    \t\tif (left.getConstant() != null  && rightMatch || leftMatch && right.getConstant() != null) {\n\t    \t\t\tsawBadEqualsClass = true;\n\t    \t\t\tif (!getThisClass().isFinal()) {\n\t\t\t\t\t\tint priority = Priorities.NORMAL_PRIORITY;\n\t\t\t\t\t\ttry {\n\t                        if (AnalysisContext.currentAnalysisContext().getSubtypes2().hasSubtypes(getClassDescriptor()))\n\t                        \tpriority--;\n                        } catch (ClassNotFoundException e) {\n\t                        bugReporter.reportMissingClass(e);\n                        }\n\t\t\t\t\t\tbugReporter.reportBug(new BugInstance(this,\"EQ_GETCLASS_AND_CLASS_CONSTANT\", priority).addClassAndMethod(this).addSourceLine(this).addString(\"doesn't work for subtypes\"));\n\t\t\t\t\t}\n\t    \t\t}\n\t    \t}\n\t    \t}\n\t    \t\n\t    }\n    }","commit_id":"03f7a42e17ad3779751f8040b4fbefd545429db0","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n\tpublic void sawOpcode(int seen) {\n\t\tif (getPC() == 2 && seen != IF_ACMPEQ && seen != IF_ACMPNE) {\n\t\t\t// System.out.println(OPCODE_NAMES[seen]);\n\t\t\tsawInitialIdentityCheck = false;\n\t\t}\n\n\t\tif (seen == IF_ACMPEQ || seen == IF_ACMPNE) {\n\t\t\tcheckForComparingClasses();\n\t\t}\n\t\tif (seen == INVOKEVIRTUAL && getNameConstantOperand().equals(EQUALS_NAME)\n\t\t        && getSigConstantOperand().equals(EQUALS_SIGNATURE)) {\n\t\t\tequalsCalls++;\n\t\t\tcheckForComparingClasses();\n\t\t}\n\t\t\n\t\tif (dangerDanger && seen == INVOKEVIRTUAL && getNameConstantOperand().equals(EQUALS_NAME)\n\t\t        && getSigConstantOperand().equals(EQUALS_SIGNATURE)) {\n\t\t\tbugReporter.reportBug(new BugInstance(this, \"TESTING\", Priorities.NORMAL_PRIORITY).addClassAndMethod(this).addSourceLine(this).addString(\"Testing class names\"));\n\t\t\t\n\t\t}\n\t\tdangerDanger = false;\n\t\tif (seen == INVOKEVIRTUAL && getClassConstantOperand().equals(\"java/lang/Class\") && getNameConstantOperand().equals(\"getName\")\n\t\t        && getSigConstantOperand().equals(\"()Ljava/lang/String;\") && stack.getStackDepth() >= 2) {\n\t\t\tItem left = stack.getStackItem(1);\n\t    \tXMethod leftM = left.getReturnValueOf();\n\t    \tItem right = stack.getStackItem(0);\n\t    \tXMethod rightM = right.getReturnValueOf();\n\t    \tif (leftM != null && rightM != null && leftM.getName().equals(\"getName\") && rightM.getName().equals(\"getClass\")) {\n\t    \t\tdangerDanger = true;\n\t    \t}\n\t    \t \n\t\t}\n\t\tif (seen == INVOKESPECIAL && getNameConstantOperand().equals(EQUALS_NAME)\n\t\t        && getSigConstantOperand().equals(EQUALS_SIGNATURE)) {\n\t\t\tsawSuperEquals = prevWasSuperEquals = true;\n\t\t} else {\n\t\t\tif (seen == IRETURN) {\n\t\t\t\tif (prevWasSuperEquals)\n\t\t\t\t\tsawReturnSuper = true;\n\t\t\t\telse\n\t\t\t\t\tsawReturnNonSuper = true;\n\t\t\t}\n\t\t\tprevWasSuperEquals = false;\n\t\t}\n\n\t\tif (seen == INSTANCEOF && stack.getStackDepth() > 0 && stack.getStackItem(0).getRegisterNumber() == 1) {\n\t\t\tClassDescriptor instanceOfCheck = getClassDescriptorOperand();\n\t\t\tif (instanceOfCheck.equals(getClassDescriptor()))\n\t\t\t\tsawInstanceOf = true;\n            else\n\t            try {\n\t                if (AnalysisContext.currentAnalysisContext().getSubtypes2().isSubtype(getClassDescriptor(), instanceOfCheck))\n\t                \tsawInstanceOfSupertype = true;\n                } catch (ClassNotFoundException e) {\n                \tsawInstanceOfSupertype = true;\n                }\n\t\t}\n\t\t\n\n\t\tif (seen == CHECKCAST && stack.getStackDepth() > 0 && stack.getStackItem(0).getRegisterNumber() == 1) {\n\t\t\tClassDescriptor castTo = getClassDescriptorOperand();\n\t\t\tif (castTo.equals(getClassDescriptor()))\n\t\t\t\tsawCheckedCast = true;\n\t\t\ttry {\n                if (AnalysisContext.currentAnalysisContext().getSubtypes2().isSubtype(getClassDescriptor(), castTo))\n                \tsawCheckedCast = true;\n            } catch (ClassNotFoundException e) {\n            \tsawCheckedCast = true;\n            }\n\t\t}\n\t\tif (seen == INVOKEVIRTUAL && getNameConstantOperand().equals(\"getClass\")\n\t\t        && getSigConstantOperand().equals(\"()Ljava/lang/Class;\")) {\n\t\t\tsawGetClass = true;\n\t\t}\n\n\t}","id":1785,"modified_method":"@Override\n\tpublic void sawOpcode(int seen) {\n\t\tif (getPC() == 2 && seen != IF_ACMPEQ && seen != IF_ACMPNE) {\n\t\t\t// System.out.println(OPCODE_NAMES[seen]);\n\t\t\tsawInitialIdentityCheck = false;\n\t\t}\n\t\tif (seen == IRETURN && getPC() == 1 && getPrevOpcode(1) == ICONST_0 ) {\n\t\t\talwaysFalse = true;\n\t\t\tbugReporter.reportBug(new BugInstance(this, \"EQ_ALWAYS_FALSE\", Priorities.HIGH_PRIORITY).addClassAndMethod(this).addSourceLine(this));\n\n\t\t}\n\t\tif (seen == IRETURN && getPC() == 1 && getPrevOpcode(1) == ICONST_1 ) {\n\t\t\talwaysTrue = true;\n\t\t\tbugReporter.reportBug(new BugInstance(this, \"EQ_ALWAYS_TRUE\", Priorities.NORMAL_PRIORITY).addClassAndMethod(this).addSourceLine(this));\n\n\t\t}\n\t\tif (seen == IF_ACMPEQ || seen == IF_ACMPNE) {\n\t\t\tcheckForComparingClasses();\n\t\t}\n\t\tif (seen == INVOKEVIRTUAL && getNameConstantOperand().equals(EQUALS_NAME)\n\t\t        && getSigConstantOperand().equals(EQUALS_SIGNATURE)) {\n\t\t\tequalsCalls++;\n\t\t\tcheckForComparingClasses();\n\t\t}\n\t\t\n\t\tif (dangerDanger && seen == INVOKEVIRTUAL && getNameConstantOperand().equals(EQUALS_NAME)\n\t\t        && getSigConstantOperand().equals(EQUALS_SIGNATURE)) {\n\t\t\tbugReporter.reportBug(new BugInstance(this, \"EQ_COMPARING_CLASS_NAMES\", Priorities.NORMAL_PRIORITY).addClassAndMethod(this).addSourceLine(this));\n\t\t\t\n\t\t}\n\t\tdangerDanger = false;\n\t\tif (seen == INVOKEVIRTUAL && getClassConstantOperand().equals(\"java/lang/Class\") && getNameConstantOperand().equals(\"getName\")\n\t\t        && getSigConstantOperand().equals(\"()Ljava/lang/String;\") && stack.getStackDepth() >= 2) {\n\t\t\tItem left = stack.getStackItem(1);\n\t    \tXMethod leftM = left.getReturnValueOf();\n\t    \tItem right = stack.getStackItem(0);\n\t    \tXMethod rightM = right.getReturnValueOf();\n\t    \tif (leftM != null && rightM != null && leftM.getName().equals(\"getName\") && rightM.getName().equals(\"getClass\")) {\n\t    \t\tdangerDanger = true;\n\t    \t}\n\t    \t \n\t\t}\n\t\tif (seen == INVOKESPECIAL && getNameConstantOperand().equals(EQUALS_NAME)\n\t\t        && getSigConstantOperand().equals(EQUALS_SIGNATURE)) {\n\t\t\tsawSuperEquals = prevWasSuperEquals = true;\n\t\t} else {\n\t\t\tif (seen == IRETURN) {\n\t\t\t\tif (prevWasSuperEquals)\n\t\t\t\t\tsawReturnSuper = true;\n\t\t\t\telse\n\t\t\t\t\tsawReturnNonSuper = true;\n\t\t\t}\n\t\t\tprevWasSuperEquals = false;\n\t\t}\n\n\t\tif (seen == INSTANCEOF && stack.getStackDepth() > 0 && stack.getStackItem(0).getRegisterNumber() == 1) {\n\t\t\tClassDescriptor instanceOfCheck = getClassDescriptorOperand();\n\t\t\tif (instanceOfCheck.equals(getClassDescriptor()))\n\t\t\t\tsawInstanceOf = true;\n            else\n\t            try {\n\t                if (AnalysisContext.currentAnalysisContext().getSubtypes2().isSubtype(getClassDescriptor(), instanceOfCheck))\n\t                \tsawInstanceOfSupertype = true;\n                } catch (ClassNotFoundException e) {\n                \tsawInstanceOfSupertype = true;\n                }\n\t\t}\n\t\t\n\n\t\tif (seen == CHECKCAST && stack.getStackDepth() > 0 && stack.getStackItem(0).getRegisterNumber() == 1) {\n\t\t\tClassDescriptor castTo = getClassDescriptorOperand();\n\t\t\tif (castTo.equals(getClassDescriptor()))\n\t\t\t\tsawCheckedCast = true;\n\t\t\ttry {\n                if (AnalysisContext.currentAnalysisContext().getSubtypes2().isSubtype(getClassDescriptor(), castTo))\n                \tsawCheckedCast = true;\n            } catch (ClassNotFoundException e) {\n            \tsawCheckedCast = true;\n            }\n\t\t}\n\t\tif (seen == INVOKEVIRTUAL && getNameConstantOperand().equals(\"getClass\")\n\t\t        && getSigConstantOperand().equals(\"()Ljava/lang/Class;\")) {\n\t\t\tsawGetClass = true;\n\t\t}\n\n\t}","commit_id":"03f7a42e17ad3779751f8040b4fbefd545429db0","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n\tpublic void visit(Code obj) {\n\t\tif (getMethodName().equals(EQUALS_NAME) && !getMethod().isStatic() && getMethod().isPublic()\n\t\t        && getMethodSig().equals(EQUALS_SIGNATURE)) {\n\t\t\tsawCheckedCast = sawSuperEquals = sawInstanceOf = sawGetClass = sawReturnSuper = sawReturnNonSuper = prevWasSuperEquals = sawGoodEqualsClass = sawBadEqualsClass = dangerDanger = sawInstanceOfSupertype = false;\n\t\t\tsawInitialIdentityCheck = obj.getCode().length == 11 || obj.getCode().length == 9;\n\t\t\tequalsCalls = 0;\n\t\t\tsuper.visit(obj);\n\t\t\tKindOfEquals kind = KindOfEquals.UNKNOWN;\n\t\t\tif (sawReturnSuper && !sawReturnNonSuper)\n\t\t\t\tkind = KindOfEquals.RETURNS_SUPER;\n\t\t\telse if (sawSuperEquals)\n\t\t\t\tkind = KindOfEquals.INVOKES_SUPER;\n\t\t\telse if (sawInstanceOf || sawInstanceOfSupertype)\n\t\t\t\tkind = getThisClass().isAbstract() ? KindOfEquals.ABSTRACT_INSTANCE_OF : KindOfEquals.INSTANCE_OF_EQUALS;\n\t\t\telse if (sawGetClass && sawGoodEqualsClass)\n\t\t\t\tkind = KindOfEquals.GETCLASS_GOOD_EQUALS;\n\t\t\telse if (sawGetClass && sawBadEqualsClass) \n\t\t\t\t\tkind = KindOfEquals.GETCLASS_BAD_EQUALS;\n\t\t\telse if (equalsCalls == 1)\n\t\t\t\tkind = KindOfEquals.DELEGATE_EQUALS;\n\t\t\telse if (sawInitialIdentityCheck)\n\t\t\t\tkind = KindOfEquals.TRIVIAL_EQUALS;\n\t\t\telse if (sawCheckedCast)\n\t\t\t\tkind = KindOfEquals.CHECKED_CAST_EQUALS;\n\t\t\telse {\n\t\t\t\tbugReporter.reportBug(new BugInstance(this, \"TESTING\", Priorities.NORMAL_PRIORITY).addClassAndMethod(this).addString(\"Strange equals method\"));\n\t\t\t}\n\n\t\t\tif (kind == KindOfEquals.GETCLASS_GOOD_EQUALS || kind == KindOfEquals.GETCLASS_BAD_EQUALS) {\n\t\t\t\t\n\t\t\t\tClassDescriptor classDescriptor = getClassDescriptor();\n\t\t\t\ttry {\n\t                Set<ClassDescriptor> subtypes = AnalysisContext.currentAnalysisContext().getSubtypes2().getSubtypes(classDescriptor);\n\t                if (subtypes.size() > 1) {\n\t                \tclassesWithGetClassBasedEquals.put(classDescriptor,subtypes);\n\t                }\n                } catch (ClassNotFoundException e) {\n\t               assert true;\n                }\n\t\t\t\t\n\t\t\t}\n\t\t\tClassAnnotation classAnnotation = new ClassAnnotation(getDottedClassName());\n\t\t\tkindMap.put(classAnnotation, kind);\n\t\t\tString superClassName = getSuperclassName().replace('/', '.');\n\t\t\tif (!superClassName.equals(\"java.lang.Object\"))\n\t\t\t\tparentMap.put(classAnnotation, new ClassAnnotation(superClassName));\n\t\t\tequalsMethod.put(classAnnotation, MethodAnnotation.fromVisitedMethod(this));\n\t\t\t\n\t\t}\n\t}","id":1786,"modified_method":"@Override\n\tpublic void visit(Code obj) {\n\t\tif (getMethodName().equals(EQUALS_NAME) && !getMethod().isStatic() && getMethod().isPublic()\n\t\t        && getMethodSig().equals(EQUALS_SIGNATURE)) {\n\t\t\tsawCheckedCast = sawSuperEquals = sawInstanceOf = sawGetClass = sawReturnSuper = sawReturnNonSuper = prevWasSuperEquals = sawGoodEqualsClass = sawBadEqualsClass = dangerDanger \n\t\t\t= sawInstanceOfSupertype\n\t\t\t\t= alwaysTrue = alwaysFalse = false;\n\t\t\tsawInitialIdentityCheck = obj.getCode().length == 11 || obj.getCode().length == 9;\n\t\t\tequalsCalls = 0;\n\t\t\tsuper.visit(obj);\n\t\t\tKindOfEquals kind = KindOfEquals.UNKNOWN;\n\t\t\tif (alwaysTrue)  \n\t\t\t\tkind = KindOfEquals.ALWAYS_TRUE;\n\t\t\telse if (alwaysFalse) \n\t\t\t\tkind = KindOfEquals.ALWAYS_FALSE;\n\t\t\telse if (sawReturnSuper && !sawReturnNonSuper)\n\t\t\t\tkind = KindOfEquals.RETURNS_SUPER;\n\t\t\telse if (sawSuperEquals)\n\t\t\t\tkind = KindOfEquals.INVOKES_SUPER;\n\t\t\telse if (sawInstanceOf || sawInstanceOfSupertype)\n\t\t\t\tkind = getThisClass().isAbstract() ? KindOfEquals.ABSTRACT_INSTANCE_OF : KindOfEquals.INSTANCE_OF_EQUALS;\n\t\t\telse if (sawGetClass && sawGoodEqualsClass)\n\t\t\t\tkind = KindOfEquals.GETCLASS_GOOD_EQUALS;\n\t\t\telse if (sawGetClass && sawBadEqualsClass) \n\t\t\t\t\tkind = KindOfEquals.GETCLASS_BAD_EQUALS;\n\t\t\telse if (equalsCalls == 1)\n\t\t\t\tkind = KindOfEquals.DELEGATE_EQUALS;\n\t\t\telse if (sawInitialIdentityCheck)\n\t\t\t\tkind = KindOfEquals.TRIVIAL_EQUALS;\n\t\t\telse if (sawCheckedCast)\n\t\t\t\tkind = KindOfEquals.CHECKED_CAST_EQUALS;\n\t\t\telse {\n\t\t\t\tbugReporter.reportBug(new BugInstance(this, \"EQ_UNUSUAL\", Priorities.NORMAL_PRIORITY).addClassAndMethod(this).addString(\"Strange equals method\"));\n\t\t\t}\n\n\t\t\tif (kind == KindOfEquals.GETCLASS_GOOD_EQUALS || kind == KindOfEquals.GETCLASS_BAD_EQUALS) {\n\t\t\t\t\n\t\t\t\tClassDescriptor classDescriptor = getClassDescriptor();\n\t\t\t\ttry {\n\t                Set<ClassDescriptor> subtypes = AnalysisContext.currentAnalysisContext().getSubtypes2().getSubtypes(classDescriptor);\n\t                if (subtypes.size() > 1) {\n\t                \tclassesWithGetClassBasedEquals.put(classDescriptor,subtypes);\n\t                }\n                } catch (ClassNotFoundException e) {\n\t               assert true;\n                }\n\t\t\t\t\n\t\t\t}\n\t\t\tClassAnnotation classAnnotation = new ClassAnnotation(getDottedClassName());\n\t\t\tkindMap.put(classAnnotation, kind);\n\t\t\tString superClassName = getSuperclassName().replace('/', '.');\n\t\t\tif (!superClassName.equals(\"java.lang.Object\"))\n\t\t\t\tparentMap.put(classAnnotation, new ClassAnnotation(superClassName));\n\t\t\tequalsMethod.put(classAnnotation, MethodAnnotation.fromVisitedMethod(this));\n\t\t\t\n\t\t}\n\t}","commit_id":"03f7a42e17ad3779751f8040b4fbefd545429db0","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private void checkEqualsComparison(Location location, JavaClass jclass, MethodGen methodGen,\n\t\tTypeDataflow typeDataflow) throws DataflowAnalysisException {\n\n\t\tInstructionHandle handle = location.getHandle();\n\n\t\tTypeFrame frame = typeDataflow.getFactAtLocation(location);\n\t\tif (frame.getStackDepth() < 2)\n\t\t\tthrow new DataflowAnalysisException(\"Stack underflow\", methodGen, handle);\n\n\t\tint numSlots = frame.getNumSlots();\n\t\tType lhsType_ = frame.getValue(numSlots - 2);\n\t\tType rhsType_ = frame.getValue(numSlots - 1);\n\n\t\tif (lhsType_.equals(rhsType_))\n\t\t\treturn;\n\n\t\tif (!(lhsType_ instanceof ReferenceType) || !(rhsType_ instanceof ReferenceType)) {\n\t\t\tbugReporter.logError(\"equals() used to compare non-object type(s) in \" +\n\t\t\t\tSignatureConverter.convertMethodSignature(methodGen) +\n\t\t\t\t\" at \" + location.getHandle());\n\t\t\treturn;\n\t\t}\n\n\t\t// For now, ignore the case where either reference is not\n\t\t// of an object type.  (It could be either an array or null.)\n\t\tif (!(lhsType_ instanceof ObjectType) || !(rhsType_ instanceof ObjectType))\n\t\t\treturn;\n\n\t\tObjectType lhsType = (ObjectType) lhsType_;\n\t\tObjectType rhsType = (ObjectType) rhsType_;\n\n\t\tint priority = LOW_PRIORITY;\n\n\t\t// If neither object is a subtype of the other,\n\t\t// make it medium priority\n\t\ttry {\n\t\t\tif (!Hierarchy.isSubtype(lhsType, rhsType) &&\n\t\t\t\t!Hierarchy.isSubtype(rhsType, lhsType))\n\t\t\t\tpriority = NORMAL_PRIORITY;\n\t\t} catch (ClassNotFoundException e) {\n\t\t\tbugReporter.reportMissingClass(e);\n\t\t\treturn;\n\t\t}\n\n\t\tString sourceFile = jclass.getSourceFileName();\n\t\tbugReporter.reportBug(new BugInstance(\"RC_SUSPCIOUS_EQUALS\", priority)\n\t\t\t.addClassAndMethod(methodGen, sourceFile)\n\t\t\t.addSourceLine(methodGen, sourceFile, location.getHandle())\n\t\t\t.addClass(lhsType.getClassName()).describe(\"CLASS_REFTYPE\")\n\t\t\t.addClass(rhsType.getClassName()).describe(\"CLASS_REFTYPE\")\n\t\t\t);\n\t}","id":1787,"modified_method":"private void checkEqualsComparison(Location location, JavaClass jclass, MethodGen methodGen,\n\t\tTypeDataflow typeDataflow) throws DataflowAnalysisException {\n\n\t\tInstructionHandle handle = location.getHandle();\n\t\tString sourceFile = jclass.getSourceFileName();\n\n\t\tTypeFrame frame = typeDataflow.getFactAtLocation(location);\n\t\tif (frame.getStackDepth() < 2)\n\t\t\tthrow new DataflowAnalysisException(\"Stack underflow\", methodGen, handle);\n\n\t\tint numSlots = frame.getNumSlots();\n\t\tType lhsType_ = frame.getValue(numSlots - 2);\n\t\tType rhsType_ = frame.getValue(numSlots - 1);\n\n\t\tif (lhsType_.equals(rhsType_))\n\t\t\treturn;\n\n\t\tif (!(lhsType_ instanceof ReferenceType) || !(rhsType_ instanceof ReferenceType)) {\n\t\t\tif (rhsType_.getType() == T_NULL) {\n\t\t\t\t// A literal null value was passed directly to equals().\n\t\t\t\tbugReporter.reportBug(new BugInstance(\"EC_NULL_ARG\", NORMAL_PRIORITY)\n\t\t\t\t\t.addClassAndMethod(methodGen, sourceFile)\n\t\t\t\t\t.addSourceLine(methodGen, sourceFile, location.getHandle())\n\t\t\t\t);\n\t\t\t} else if (lhsType_.getType() == T_NULL) {\n\t\t\t\t// Hmm...in this case, equals() is being invoked on\n\t\t\t\t// a literal null value.  This is really the\n\t\t\t\t// purview of FindNullDeref.  So, we'll just do nothing.\n\t\t\t} else {\n\t\t\t\tbugReporter.logError(\"equals() used to compare non-object type(s) in \" +\n\t\t\t\t\tSignatureConverter.convertMethodSignature(methodGen) +\n\t\t\t\t\t\" at \" + location.getHandle());\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// For now, ignore the case where either reference is not\n\t\t// of an object type.  (It could be either an array or null.)\n\t\tif (!(lhsType_ instanceof ObjectType) || !(rhsType_ instanceof ObjectType))\n\t\t\treturn;\n\n\t\tObjectType lhsType = (ObjectType) lhsType_;\n\t\tObjectType rhsType = (ObjectType) rhsType_;\n\n\t\tint priority = LOW_PRIORITY + 1;\n\n\t\t// If neither object is a subtype of the other,\n\t\t// make it medium priority\n\t\ttry {\n\t\t\tif (!Hierarchy.isSubtype(lhsType, rhsType) && !Hierarchy.isSubtype(rhsType, lhsType))\n\t\t\t\tpriority = NORMAL_PRIORITY;\n\t\t} catch (ClassNotFoundException e) {\n\t\t\tbugReporter.reportMissingClass(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (priority <= LOW_PRIORITY) {\n\t\t\tbugReporter.reportBug(new BugInstance(\"EC_UNRELATED_TYPES\", priority)\n\t\t\t\t.addClassAndMethod(methodGen, sourceFile)\n\t\t\t\t.addSourceLine(methodGen, sourceFile, location.getHandle())\n\t\t\t\t.addClass(lhsType.getClassName()).describe(\"CLASS_REFTYPE\")\n\t\t\t\t.addClass(rhsType.getClassName()).describe(\"CLASS_REFTYPE\")\n\t\t\t);\n\t\t}\n\t}","commit_id":"1272c0e34bbc03a964a317c8649cd7ba82d1e7bd","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n     * Fill collection set.\n     *\n     * @param agent the agent\n     * @param collectionSet the collection set\n     * @param source the source\n     * @param document the JSoup document\n     * @throws ParseException the parse exception\n     */\n    protected void fillCollectionSet(CollectionAgent agent, XmlCollectionSet collectionSet, XmlSource source, Document doc) throws ParseException {\n        for (XmlGroup group : source.getXmlGroups()) {\n            log().debug(\"fillCollectionSet: getting resources for XML group \" + group.getName() + \" using selector \" + group.getResourceXpath());\n            Date timestamp = getTimeStamp(doc, group);\n            Elements elements = doc.select(group.getResourceXpath());\n            log().debug(\"fillCollectionSet: \" + group.getResourceXpath() + \" => \" + elements);\n            String resourceName = getResourceName(elements, group);\n            log().debug(\"fillCollectionSet: processing XML resource \" + resourceName);\n            XmlCollectionResource collectionResource = getCollectionResource(agent, resourceName, group.getResourceType(), timestamp);\n            AttributeGroupType attribGroupType = new AttributeGroupType(group.getName(), group.getIfType());\n            for (XmlObject object : group.getXmlObjects()) {\n                Elements el = elements.select(object.getXpath());\n                XmlCollectionAttributeType attribType = new XmlCollectionAttributeType(object, attribGroupType);\n                collectionResource.setAttributeValue(attribType, el == null ? null : el.html());\n            }\n            processXmlResource(collectionResource, attribGroupType);\n            collectionSet.getCollectionResources().add(collectionResource);\n        }\n    }","id":1788,"modified_method":"/**\n     * Fill collection set.\n     *\n     * @param agent the agent\n     * @param collectionSet the collection set\n     * @param source the source\n     * @param document the JSoup document\n     * @throws ParseException the parse exception\n     */\n    protected void fillCollectionSet(CollectionAgent agent, XmlCollectionSet collectionSet, XmlSource source, Document doc) throws ParseException {\n        for (XmlGroup group : source.getXmlGroups()) {\n            LOG.debug(\"fillCollectionSet: getting resources for XML group {} using selector {}\", group.getName(), group.getResourceXpath());\n            Date timestamp = getTimeStamp(doc, group);\n            Elements elements = doc.select(group.getResourceXpath());\n            LOG.debug(\"fillCollectionSet: {} => {}\", group.getResourceXpath(), elements);\n            String resourceName = getResourceName(elements, group);\n            LOG.debug(\"fillCollectionSet: processing XML resource {}\", resourceName);\n            XmlCollectionResource collectionResource = getCollectionResource(agent, resourceName, group.getResourceType(), timestamp);\n            AttributeGroupType attribGroupType = new AttributeGroupType(group.getName(), group.getIfType());\n            for (XmlObject object : group.getXmlObjects()) {\n                Elements el = elements.select(object.getXpath());\n                XmlCollectionAttributeType attribType = new XmlCollectionAttributeType(object, attribGroupType);\n                collectionResource.setAttributeValue(attribType, el == null ? null : el.html());\n            }\n            processXmlResource(collectionResource, attribGroupType);\n            collectionSet.getCollectionResources().add(collectionResource);\n        }\n    }","commit_id":"a4ce21b68c907ae333282b88ca9cdeb02af30943","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Gets the resource name.\n     *\n     * @param elements the JSoup elements\n     * @param group the group\n     * @return the resource name\n     */\n    private String getResourceName(Elements elements, XmlGroup group) {\n        // Processing multiple-key resource name.\n        if (group.hasMultipleResourceKey()) {\n            List<String> keys = new ArrayList<String>();\n            for (String key : group.getXmlResourceKey().getKeyXpathList()) {\n                log().debug(\"getResourceName: getting key for resource's name using selector \" + key);\n                Elements el = elements.select(key);\n                if (el != null) {\n                    keys.add(el.html());\n                }\n            }\n            return StringUtils.join(keys, \"_\");\n        }\n        // If key-xpath doesn't exist or not found, a node resource will be assumed.\n        if (group.getKeyXpath() == null) {\n            return \"node\";\n        }\n        // Processing single-key resource name.\n        log().debug(\"getResourceName: getting key for resource's name using selector \" + group.getKeyXpath());\n        Elements el = elements.select(group.getKeyXpath());\n        return el == null ? null : el.html();\n    }","id":1789,"modified_method":"/**\n     * Gets the resource name.\n     *\n     * @param elements the JSoup elements\n     * @param group the group\n     * @return the resource name\n     */\n    private String getResourceName(Elements elements, XmlGroup group) {\n        // Processing multiple-key resource name.\n        if (group.hasMultipleResourceKey()) {\n            List<String> keys = new ArrayList<String>();\n            for (String key : group.getXmlResourceKey().getKeyXpathList()) {\n                LOG.debug(\"getResourceName: getting key for resource's name using selector {}\", key);\n                Elements el = elements.select(key);\n                if (el != null) {\n                    keys.add(el.html());\n                }\n            }\n            return StringUtils.join(keys, \"_\");\n        }\n        // If key-xpath doesn't exist or not found, a node resource will be assumed.\n        if (group.getKeyXpath() == null) {\n            return \"node\";\n        }\n        // Processing single-key resource name.\n        LOG.debug(\"getResourceName: getting key for resource's name using selector {}\", group.getKeyXpath());\n        Elements el = elements.select(group.getKeyXpath());\n        return el == null ? null : el.html();\n    }","commit_id":"a4ce21b68c907ae333282b88ca9cdeb02af30943","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Gets the time stamp.\n     * \n     * @param document the JSoup document\n     * @param group the group\n     * @return the time stamp\n     */\n    protected Date getTimeStamp(Document doc, XmlGroup group) {\n        if (group.getTimestampXpath() == null) {\n            return null;\n        }\n        String pattern = group.getTimestampFormat() == null ? \"yyyy-MM-dd HH:mm:ss\" : group.getTimestampFormat();\n        log().debug(\"getTimeStamp: retrieving custom timestamp to be used when updating RRDs using selector \" + group.getTimestampXpath() + \" and pattern \" + pattern);\n        Elements el = doc.select(group.getTimestampXpath());\n        if (el == null) {\n            return null;\n        }\n        String value = el.html();\n        Date date = null;\n        try {\n            DateTimeFormatter dtf = DateTimeFormat.forPattern(pattern);\n            DateTime dateTime = dtf.parseDateTime(value);\n            date = dateTime.toDate();\n        } catch (Exception e) {\n            log().warn(\"getTimeStamp: can't convert custom timetime \" + value + \" using pattern \" + pattern);\n        }\n        return date;\n    }","id":1790,"modified_method":"/**\n     * Gets the time stamp.\n     * \n     * @param document the JSoup document\n     * @param group the group\n     * @return the time stamp\n     */\n    protected Date getTimeStamp(Document doc, XmlGroup group) {\n        if (group.getTimestampXpath() == null) {\n            return null;\n        }\n        String pattern = group.getTimestampFormat() == null ? \"yyyy-MM-dd HH:mm:ss\" : group.getTimestampFormat();\n        LOG.debug(\"getTimeStamp: retrieving custom timestamp to be used when updating RRDs using selector {} and pattern {}\", group.getTimestampXpath(), pattern);\n        Elements el = doc.select(group.getTimestampXpath());\n        if (el == null) {\n            return null;\n        }\n        String value = el.html();\n        Date date = null;\n        try {\n            DateTimeFormatter dtf = DateTimeFormat.forPattern(pattern);\n            DateTime dateTime = dtf.parseDateTime(value);\n            date = dateTime.toDate();\n        } catch (Exception e) {\n            LOG.warn(\"getTimeStamp: can't convert custom timetime {} using pattern {}\", value, pattern);\n        }\n        return date;\n    }","commit_id":"a4ce21b68c907ae333282b88ca9cdeb02af30943","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Gets the resource name.\n     *\n     * @param context the JXpath context\n     * @param group the group\n     * @return the resource name\n     */\n    private String getResourceName(JXPathContext context, XmlGroup group) {\n        // Processing multiple-key resource name.\n        if (group.hasMultipleResourceKey()) {\n            List<String> keys = new ArrayList<String>();\n            for (String key : group.getXmlResourceKey().getKeyXpathList()) {\n                log().debug(\"getResourceName: getting key for resource's name using \" + key);\n                String keyName = (String)context.getValue(key);\n                keys.add(keyName);\n            }\n            return StringUtils.join(keys, \"_\");\n        }\n        // If key-xpath doesn't exist or not found, a node resource will be assumed.\n        if (group.getKeyXpath() == null) {\n            return \"node\";\n        }\n        // Processing single-key resource name.\n        log().debug(\"getResourceName: getting key for resource's name using \" + group.getKeyXpath());\n        String keyName = (String)context.getValue(group.getKeyXpath());\n        return keyName;\n    }","id":1791,"modified_method":"/**\n     * Gets the resource name.\n     *\n     * @param context the JXpath context\n     * @param group the group\n     * @return the resource name\n     */\n    private String getResourceName(JXPathContext context, XmlGroup group) {\n        // Processing multiple-key resource name.\n        if (group.hasMultipleResourceKey()) {\n            List<String> keys = new ArrayList<String>();\n            for (String key : group.getXmlResourceKey().getKeyXpathList()) {\n                LOG.debug(\"getResourceName: getting key for resource's name using {}\", key);\n                String keyName = (String)context.getValue(key);\n                keys.add(keyName);\n            }\n            return StringUtils.join(keys, \"_\");\n        }\n        // If key-xpath doesn't exist or not found, a node resource will be assumed.\n        if (group.getKeyXpath() == null) {\n            return \"node\";\n        }\n        // Processing single-key resource name.\n        LOG.debug(\"getResourceName: getting key for resource's name using {}\", group.getKeyXpath());\n        String keyName = (String)context.getValue(group.getKeyXpath());\n        return keyName;\n    }","commit_id":"dc253f02eb2520ef242ba4fd10867fcd87fd51f5","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Fill collection set.\n     *\n     * @param agent the agent\n     * @param collectionSet the collection set\n     * @param source the source\n     * @param json the JSON Object\n     * @throws ParseException the parse exception\n     */\n    @SuppressWarnings(\"unchecked\")\n    protected void fillCollectionSet(CollectionAgent agent, XmlCollectionSet collectionSet, XmlSource source, JSONObject json) throws ParseException {\n        JXPathContext context = JXPathContext.newContext(json);\n        for (XmlGroup group : source.getXmlGroups()) {\n            log().debug(\"fillCollectionSet: getting resources for XML group \" + group.getName() + \" using XPATH \" + group.getResourceXpath());\n            Date timestamp = getTimeStamp(context, group);\n            Iterator<Pointer> itr = context.iteratePointers(group.getResourceXpath());\n            while (itr.hasNext()) {\n                JXPathContext relativeContext = context.getRelativeContext(itr.next());\n                String resourceName = getResourceName(relativeContext, group);\n                log().debug(\"fillCollectionSet: processing XML resource \" + resourceName);\n                XmlCollectionResource collectionResource = getCollectionResource(agent, resourceName, group.getResourceType(), timestamp);\n                AttributeGroupType attribGroupType = new AttributeGroupType(group.getName(), group.getIfType());\n                for (XmlObject object : group.getXmlObjects()) {\n                    String value = (String) relativeContext.getValue(object.getXpath());\n                    XmlCollectionAttributeType attribType = new XmlCollectionAttributeType(object, attribGroupType);\n                    collectionResource.setAttributeValue(attribType, value);\n                }\n                processXmlResource(collectionResource, attribGroupType);\n                collectionSet.getCollectionResources().add(collectionResource);\n            }\n        }\n    }","id":1792,"modified_method":"/**\n     * Fill collection set.\n     *\n     * @param agent the agent\n     * @param collectionSet the collection set\n     * @param source the source\n     * @param json the JSON Object\n     * @throws ParseException the parse exception\n     */\n    @SuppressWarnings(\"unchecked\")\n    protected void fillCollectionSet(CollectionAgent agent, XmlCollectionSet collectionSet, XmlSource source, JSONObject json) throws ParseException {\n        JXPathContext context = JXPathContext.newContext(json);\n        for (XmlGroup group : source.getXmlGroups()) {\n            LOG.debug(\"fillCollectionSet: getting resources for XML group {} using XPATH {}\", group.getName(), group.getResourceXpath());\n            Date timestamp = getTimeStamp(context, group);\n            Iterator<Pointer> itr = context.iteratePointers(group.getResourceXpath());\n            while (itr.hasNext()) {\n                JXPathContext relativeContext = context.getRelativeContext(itr.next());\n                String resourceName = getResourceName(relativeContext, group);\n                LOG.debug(\"fillCollectionSet: processing XML resource {}\", resourceName);\n                XmlCollectionResource collectionResource = getCollectionResource(agent, resourceName, group.getResourceType(), timestamp);\n                AttributeGroupType attribGroupType = new AttributeGroupType(group.getName(), group.getIfType());\n                for (XmlObject object : group.getXmlObjects()) {\n                    String value = (String) relativeContext.getValue(object.getXpath());\n                    XmlCollectionAttributeType attribType = new XmlCollectionAttributeType(object, attribGroupType);\n                    collectionResource.setAttributeValue(attribType, value);\n                }\n                processXmlResource(collectionResource, attribGroupType);\n                collectionSet.getCollectionResources().add(collectionResource);\n            }\n        }\n    }","commit_id":"dc253f02eb2520ef242ba4fd10867fcd87fd51f5","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Gets the time stamp.\n     * \n     * @param context the JXPath context\n     * @param group the group\n     * @return the time stamp\n     */\n    protected Date getTimeStamp(JXPathContext context, XmlGroup group) {\n        if (group.getTimestampXpath() == null) {\n            return null;\n        }\n        String pattern = group.getTimestampFormat() == null ? \"yyyy-MM-dd HH:mm:ss\" : group.getTimestampFormat();\n        log().debug(\"getTimeStamp: retrieving custom timestamp to be used when updating RRDs using XPATH \" + group.getTimestampXpath() + \" and pattern \" + pattern);\n        Date date = null;\n        String value = (String)context.getValue(group.getTimestampXpath());\n        try {\n            DateTimeFormatter dtf = DateTimeFormat.forPattern(pattern);\n            DateTime dateTime = dtf.parseDateTime(value);\n            date = dateTime.toDate();\n        } catch (Exception e) {\n            log().warn(\"getTimeStamp: can't convert custom timetime \" + value + \" using pattern \" + pattern);\n        }\n        return date;\n    }","id":1793,"modified_method":"/**\n     * Gets the time stamp.\n     * \n     * @param context the JXPath context\n     * @param group the group\n     * @return the time stamp\n     */\n    protected Date getTimeStamp(JXPathContext context, XmlGroup group) {\n        if (group.getTimestampXpath() == null) {\n            return null;\n        }\n        String pattern = group.getTimestampFormat() == null ? \"yyyy-MM-dd HH:mm:ss\" : group.getTimestampFormat();\n        LOG.debug(\"getTimeStamp: retrieving custom timestamp to be used when updating RRDs using XPATH {} and pattern {}\", group.getTimestampXpath(), pattern);\n        Date date = null;\n        String value = (String)context.getValue(group.getTimestampXpath());\n        try {\n            DateTimeFormatter dtf = DateTimeFormat.forPattern(pattern);\n            DateTime dateTime = dtf.parseDateTime(value);\n            date = dateTime.toDate();\n        } catch (Exception e) {\n            LOG.warn(\"getTimeStamp: can't convert custom timestamp {} using pattern {}\", value, pattern);\n        }\n        return date;\n    }","commit_id":"dc253f02eb2520ef242ba4fd10867fcd87fd51f5","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private JCExpression transformMemberExpression(Tree.StaticMemberOrTypeExpression expr, JCExpression primaryExpr) {\n        JCExpression result = null;\n\n        // do not throw, an error will already have been reported\n        Declaration decl = expr.getDeclaration();\n        if (decl == null) {\n            return make().Erroneous(List.<JCTree>nil());\n        }\n        \n        if (decl instanceof Getter) {\n            // invoke the getter\n            if (decl.isToplevel()) {\n                result = makeGetter(makeFQIdent(decl.getContainer().getQualifiedNameString()), Util.quoteIfJavaKeyword(decl.getName()), Util.getGetterName(decl.getName()));\n            } else if (decl.isClassMember()) {\n                result =  makeGetter(primaryExpr, Util.getGetterName(decl.getName()));\n            } else {\n                // method local attr\n                if (isRecursiveReference(expr)) {\n                    result = makeGetter(primaryExpr, Util.getGetterName(decl.getName()));\n                } else {\n                    result = makeGetter(primaryExpr, decl.getName() + \"$getter\", Util.getGetterName(decl.getName()));\n                }\n            }\n        } else if (decl instanceof Value) {\n            if (decl.isToplevel()) {\n                // ERASURE\n                if (\"null\".equals(decl.getName())) {\n                    // FIXME this is a pretty brain-dead way to go about erase I think\n                    result = makeNull();\n                } else if (isBooleanTrue(decl)) {\n                    result = makeBoolean(true);\n                } else if (isBooleanFalse(decl)) {\n                    result = makeBoolean(false);\n                } else {\n                    // it's a toplevel attribute\n                    result = makeGetter(makeFQIdent(decl.getContainer().getQualifiedNameString()), Util.quoteIfJavaKeyword(decl.getName()), Util.getGetterName(decl.getName()));\n                }\n            } else if (Decl.isClassAttribute(decl)) {\n                // invoke the getter\n                result = makeGetter(primaryExpr, Util.getGetterName(decl.getName()));\n             } else if (decl.isCaptured() || decl.isShared()) {\n                 // invoke the qualified getter\n                 result = makeGetter(primaryExpr, decl.getName(), Util.getGetterName(decl.getName()));\n            }\n        } else if (decl instanceof Method) {\n            if (Decl.withinMethod(decl)) {\n                java.util.List<String> path = new LinkedList<String>();\n                if (!isRecursiveReference(expr)) {\n                    path.add(decl.getName());\n                }\n                path.add(Util.quoteMethodName(decl.getName()));\n                result = makeIdent(path);\n            } else if (decl.isToplevel()) {\n                java.util.List<String> path = new LinkedList<String>();\n                // FQN must start with empty ident (see https://github.com/ceylon/ceylon-compiler/issues/148)\n                if (!decl.getContainer().getQualifiedNameString().isEmpty()) {\n                    path.add(\"\");\n                \tpath.addAll(Arrays.asList(decl.getContainer().getQualifiedNameString().split(\"\\\\.\")));\n                } else {\n                    path.add(\"\");\n                }\n                // class\n                path.add(Util.quoteIfJavaKeyword(decl.getName()));\n                // method\n                path.add(Util.quoteMethodName(decl.getName()));\n                result = makeIdent(path);\n            } else {\n                result = makeIdentOrSelect(primaryExpr, Util.quoteMethodName(decl.getName()));\n            }\n        }\n        if (result == null) {\n            if (Util.isErasedAttribute(decl.getName())) {\n                result = makeGetter(primaryExpr, Util.quoteMethodName(decl.getName()));\n            } else {\n                result = makeIdentOrSelect(primaryExpr, substitute(decl.getName()));\n            }\n        }\n        \n        return result;\n    }","id":1794,"modified_method":"private JCExpression transformMemberExpression(Tree.StaticMemberOrTypeExpression expr, JCExpression primaryExpr) {\n        JCExpression result = null;\n\n        // do not throw, an error will already have been reported\n        Declaration decl = expr.getDeclaration();\n        if (decl == null) {\n            return make().Erroneous(List.<JCTree>nil());\n        }\n        \n        String selector = null;\n        if (decl instanceof Getter) {\n            // invoke the getter\n            if (decl.isToplevel()) {\n                primaryExpr = makeIdentOrSelect(makeFQIdent(decl.getContainer().getQualifiedNameString()), Util.quoteIfJavaKeyword(decl.getName()));\n                selector = Util.getGetterName(decl.getName());\n            } else if (decl.isClassMember()) {\n                selector = Util.getGetterName(decl.getName());\n            } else {\n                // method local attr\n                if (!isRecursiveReference(expr)) {\n                    primaryExpr = makeIdentOrSelect(primaryExpr, decl.getName() + \"$getter\");\n                }\n                selector = Util.getGetterName(decl.getName());\n            }\n        } else if (decl instanceof Value) {\n            if (decl.isToplevel()) {\n                // ERASURE\n                if (\"null\".equals(decl.getName())) {\n                    // FIXME this is a pretty brain-dead way to go about erase I think\n                    result = makeNull();\n                } else if (isBooleanTrue(decl)) {\n                    result = makeBoolean(true);\n                } else if (isBooleanFalse(decl)) {\n                    result = makeBoolean(false);\n                } else {\n                    // it's a toplevel attribute\n                    primaryExpr = makeIdentOrSelect(makeFQIdent(decl.getContainer().getQualifiedNameString()), Util.quoteIfJavaKeyword(decl.getName()));\n                    selector = Util.getGetterName(decl.getName());\n                }\n            } else if (Decl.isClassAttribute(decl)) {\n                // invoke the getter\n                selector = Util.getGetterName(decl.getName());\n             } else if (decl.isCaptured() || decl.isShared()) {\n                 // invoke the qualified getter\n                 primaryExpr = makeIdentOrSelect(primaryExpr, decl.getName());\n                 selector = Util.getGetterName(decl.getName());\n            }\n        } else if (decl instanceof Method) {\n            if (Decl.withinMethod(decl)) {\n                java.util.List<String> path = new LinkedList<String>();\n                if (!isRecursiveReference(expr)) {\n                    path.add(decl.getName());\n                }\n                primaryExpr = makeIdent(path);\n                selector = Util.quoteMethodName(decl.getName());\n            } else if (decl.isToplevel()) {\n                java.util.List<String> path = new LinkedList<String>();\n                // FQN must start with empty ident (see https://github.com/ceylon/ceylon-compiler/issues/148)\n                if (!decl.getContainer().getQualifiedNameString().isEmpty()) {\n                    path.add(\"\");\n                \tpath.addAll(Arrays.asList(decl.getContainer().getQualifiedNameString().split(\"\\\\.\")));\n                } else {\n                    path.add(\"\");\n                }\n                // class\n                path.add(Util.quoteIfJavaKeyword(decl.getName()));\n                primaryExpr = makeIdent(path);\n                // method\n                selector = Util.quoteMethodName(decl.getName());\n            } else {\n                selector = Util.quoteMethodName(decl.getName());\n            }\n        }\n        if (result == null) {\n            boolean useGetter = !(decl instanceof Method);\n            if (selector == null) {\n                useGetter = Util.isErasedAttribute(decl.getName());\n                if (useGetter) {\n                    selector = Util.quoteMethodName(decl.getName());\n                } else {\n                    selector = substitute(decl.getName());\n                }\n            }\n            \n            result = makeIdentOrSelect(primaryExpr, selector);\n            if (useGetter) {\n                result = make().Apply(List.<JCTree.JCExpression>nil(),\n                        result,\n                        List.<JCTree.JCExpression>nil());\n            }\n        }\n        \n        return result;\n    }","commit_id":"54e908edcd929a79560f4f41a00a06389f202a9f","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private JCExpression transformAssignment(Node op, Term leftTerm, JCExpression expr, JCExpression rhs) {\n        JCExpression result = null;\n\n        // FIXME: can this be anything else than a Primary?\n        TypedDeclaration decl = (TypedDeclaration) ((Tree.Primary)leftTerm).getDeclaration();\n\n        boolean variable = decl.isVariable();\n        \n        at(op);\n        if (decl.isToplevel()) {\n            // must use top level setter\n            result = makeSetter(rhs, makeFQIdent(decl.getContainer().getQualifiedNameString()), Util.quoteIfJavaKeyword(decl.getName()), Util.getSetterName(decl.getName()));\n        } else if ((decl instanceof Getter)) {\n            // must use the setter\n            if (Decl.withinMethod(decl)) {\n                result = makeSetter(rhs, expr, decl.getName() + \"$setter\", Util.getSetterName(decl.getName()));\n            } else {\n                result = makeSetter(rhs, expr, Util.getSetterName(decl.getName()));            \n            }\n        } else if (variable && (Decl.isClassAttribute(decl))) {\n            // must use the setter\n            result = makeSetter(rhs, expr, Util.getSetterName(decl.getName()));\n        } else if (variable && (decl.isCaptured() || decl.isShared())) {\n            // must use the qualified setter\n            result = makeSetter(rhs, expr, decl.getName(), Util.getSetterName(decl.getName()));\n        } else {\n            result = at(op).Assign(makeIdentOrSelect(expr, decl.getName()), rhs);\n        }\n        \n        return result;\n    }","id":1795,"modified_method":"private JCExpression transformAssignment(Node op, Term leftTerm, JCExpression expr, JCExpression rhs) {\n        JCExpression result = null;\n\n        // FIXME: can this be anything else than a Primary?\n        TypedDeclaration decl = (TypedDeclaration) ((Tree.Primary)leftTerm).getDeclaration();\n\n        boolean variable = decl.isVariable();\n        \n        at(op);\n        String selector = Util.getSetterName(decl.getName());\n        if (decl.isToplevel()) {\n            // must use top level setter\n            expr = makeIdentOrSelect(makeFQIdent(decl.getContainer().getQualifiedNameString()), Util.quoteIfJavaKeyword(decl.getName()));\n        } else if ((decl instanceof Getter)) {\n            // must use the setter\n            if (Decl.withinMethod(decl)) {\n                expr = makeIdentOrSelect(expr, decl.getName() + \"$setter\");\n            }\n        } else if (variable && (Decl.isClassAttribute(decl))) {\n            // must use the setter, nothing to do\n        } else if (variable && (decl.isCaptured() || decl.isShared())) {\n            // must use the qualified setter\n            expr = makeIdentOrSelect(expr, decl.getName());\n        } else {\n            result = at(op).Assign(makeIdentOrSelect(expr, decl.getName()), rhs);\n        }\n        \n        if (result == null) {\n            result = make().Apply(List.<JCTree.JCExpression>nil(),\n                    makeIdentOrSelect(expr, selector),\n                    List.<JCTree.JCExpression>of(rhs));\n        }\n        \n        return result;\n    }","commit_id":"54e908edcd929a79560f4f41a00a06389f202a9f","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"/**\n     * @see java.lang.Thread#run()\n     */\n    public void run() {\n\n        try {\n\n            m_starttime = System.currentTimeMillis();\n\n            // calculate size of the list\n            m_list.refreshList();\n\n            // create the list\n            CmsHtmlList list = m_list.getList();\n            list.setBoxed(false);\n\n            StringBuffer result = new StringBuffer();\n\n            result.append(\"<input type='hidden' name='result' value='\");\n            result.append(list.getTotalSize()).append(\"'>\\n\");\n            result.append(CmsListExplorerColumn.getExplorerStyleDef());\n            result.append(\"<div style='height:200px; overflow: auto;'>\\n\");\n            result.append(list.listHtml());\n            result.append(\"<\/div>\\n\");\n\n            m_result = result.toString();\n        } catch (Throwable t) {\n            m_error = t;\n\n            if (LOG.isErrorEnabled()) {\n                LOG.error(Messages.get().getBundle().key(Messages.LOG_ERROR_EXECUTING_THREAD_0), t);\n            }\n        } finally {\n            m_finishtime = System.currentTimeMillis();\n        }\n\n    }","id":1796,"modified_method":"/**\n     * @see java.lang.Thread#run()\n     */\n    public void run() {\n\n        try {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(Messages.get().getBundle().key(Messages.LOG_PROGRESS_START_THREAD_1, getKey()));\n            }\n            m_starttime = System.currentTimeMillis();\n\n            // calculate size of the list\n            m_list.refreshList();\n\n            // create the list\n            CmsHtmlList list = m_list.getList();\n            list.setBoxed(false);\n\n            StringBuffer result = new StringBuffer();\n\n            result.append(\"<input type='hidden' name='result' value='\");\n            result.append(list.getTotalSize()).append(\"'>\\n\");\n            result.append(CmsListExplorerColumn.getExplorerStyleDef());\n            result.append(\"<div style='height:200px; overflow: auto;'>\\n\");\n            result.append(list.listHtml());\n            result.append(\"<\/div>\\n\");\n\n            m_result = result.toString();\n        } catch (Throwable t) {\n            m_error = t;\n\n            if (LOG.isErrorEnabled()) {\n                LOG.error(Messages.get().getBundle().key(Messages.LOG_ERROR_EXECUTING_THREAD_0), t);\n            }\n        } finally {\n            m_finishtime = System.currentTimeMillis();\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(Messages.get().getBundle().key(Messages.LOG_PROGRESS_FINISHED_THREAD_1, getKey()));\n            }\n        }\n\n    }","commit_id":"66b125269e2c14e8c94cbaf65aafad2e21c87333","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Starts a thread for the progress on the given list.<p>\n     * \n     * @param list the list to use for the progress bar\n     * @param abortExisting if true then an already existing thread will be killed\n     */\n    public void startProgress(A_CmsListDialog list, boolean abortExisting) {\n\n        // check the list\n        if (list == null) {\n\n            throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_PROGRESS_START_INVALID_LIST_0));\n        }\n\n        // check if created key already exists\n        if (m_threads.get(getKey()) != null) {\n\n            if (abortExisting) {\n\n                Thread thread = (Thread)m_threads.get(getKey());\n                thread.interrupt();\n            } else {\n\n                throw new CmsIllegalStateException(\n                    Messages.get().container(Messages.ERR_PROGRESS_START_THREAD_EXISTS_0));\n            }\n        }\n\n        // start the thread\n        Thread thread = new CmsProgressThread(list, getKey(), list.getLocale());\n        m_threads.put(getKey(), thread);\n        thread.start();\n\n        // clean up abonded threads\n        Iterator iter = m_threads.entrySet().iterator();\n        while (iter.hasNext()) {\n\n            Map.Entry entry = (Map.Entry)iter.next();\n\n            CmsProgressThread value = (CmsProgressThread)entry.getValue();\n            if ((!thread.isAlive()) && (System.currentTimeMillis() - value.getFinishTime() > CLEANUP_PERIOD)) {\n                m_threads.remove(entry.getKey());\n            }\n        }\n    }","id":1797,"modified_method":"/**\n     * Starts a thread for the progress on the given list.<p>\n     * \n     * @param list the list to use for the progress bar\n     * @param abortExisting if true then an already existing thread will be killed\n     */\n    public void startProgress(A_CmsListDialog list, boolean abortExisting) {\n\n        // check the list\n        if (list == null) {\n            throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_PROGRESS_START_INVALID_LIST_0));\n        }\n\n        // check if created key already exists\n        if (m_threads.get(getKey()) != null) {\n            if (abortExisting) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().getBundle().key(Messages.LOG_PROGRESS_INTERRUPT_THREAD_1, getKey()));\n                }\n                Thread thread = (Thread)m_threads.get(getKey());\n                thread.interrupt();\n            } else {\n                throw new CmsIllegalStateException(\n                    Messages.get().container(Messages.ERR_PROGRESS_START_THREAD_EXISTS_0));\n            }\n        }\n\n        // start the thread\n        Thread thread = new CmsProgressThread(list, getKey(), list.getLocale());\n        m_threads.put(getKey(), thread);\n        thread.start();\n\n        // clean up abonded threads\n        Iterator iter = m_threads.entrySet().iterator();\n        while (iter.hasNext()) {\n            Map.Entry entry = (Map.Entry)iter.next();\n\n            CmsProgressThread value = (CmsProgressThread)entry.getValue();\n            if ((!thread.isAlive()) && (System.currentTimeMillis() - value.getFinishTime() > CLEANUP_PERIOD)) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().getBundle().key(Messages.LOG_PROGRESS_CLEAN_UP_THREAD_1, getKey()));\n                }\n                m_threads.remove(entry.getKey());\n            }\n        }\n    }","commit_id":"66b125269e2c14e8c94cbaf65aafad2e21c87333","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Generates the necessary JavaScript inclusion code for this widget.<p>\n     * \n     * @return the JavaScript inclusion code\n     */\n    public String getJsIncludes() {\n\n        StringBuffer result = new StringBuffer();\n\n        result.append(\"<script type=\\\"text/javascript\\\" src=\\\"\");\n        result.append(CmsWorkplace.getSkinUri());\n        result.append(\"commons/ajax.js\\\"><\/script>\\n\");\n\n        result.append(\"<script type=\\\"text/javascript\\\">\\n\");\n\n        // initialize global variables\n        result.append(\"\\tvar progressState = 0;\\n\");\n        result.append(\"\\tvar progressResult = '';\\n\");\n\n        // function update progress bar\n        result.append(\"\\tfunction updateProgressBar(msg, state) {\\n\");\n\n        // check state of progress\n        result.append(\"\\t\\tif (progressState != 1) {\\n\");\n        result.append(\"\\t\\t\\tprogressState = 0;\\n\");\n        result.append(\"\\t\\t\\treturn;\\n\");\n        result.append(\"\\t\\t}\\n\");\n\n        result.append(\"\\t\\tif (state == 'ok') {\\n\");\n\n        // get all elements to use\n        result.append(\"\\t\\t\\tvar bar = document.getElementById(\\\"progressbar_bar\\\");\\n\");\n        result.append(\"\\t\\t\\tvar percent = document.getElementById(\\\"progressbar_percent\\\");\\n\");\n        result.append(\"\\t\\t\\tvar wait = document.getElementById(\\\"progressbar_wait\\\");\\n\");\n        result.append(\"\\t\\t\\tvar desc = document.getElementById(\\\"progressbar_desc\\\");\\n\");\n\n        result.append(\"\\t\\t\\tif (msg != \\\"\\\") {\\n\");\n\n        result.append(\"\\t\\t\\t\\tbar.parentNode.style.display = \\\"block\\\";\\n\");\n        result.append(\"\\t\\t\\t\\tpercent.style.display = \\\"inline\\\";\\n\");\n        result.append(\"\\t\\t\\t\\twait.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\t\\t\\tdesc.style.display = \\\"block\\\";\\n\");\n\n        // update progress\n        result.append(\"\\t\\t\\t\\tif (msg.substring(0,3) == \\\"PRO\\\") {\\n\");\n        result.append(\"\\t\\t\\t\\t\\tvar splitted = msg.split(\\\"|\\\");\\n\");\n        result.append(\"\\t\\t\\t\\t\\tbar.style.width = splitted[0].substr(3);\\n\");\n        result.append(\"\\t\\t\\t\\t\\tpercent.innerHTML = splitted[0].substr(3);\\n\");\n        result.append(\"\\t\\t\\t\\t\\tdesc.innerHTML = splitted[1];\\n\");\n        result.append(\"\\t\\t\\t\\t\\tmakeRequest('\");\n        result.append(getJsp().link(\"/system/workplace/commons/report-progress.jsp\"));\n        result.append(\"', '\");\n        result.append(PARAMETER_KEY);\n        result.append(\"=\");\n        result.append(getKey());\n        result.append(\"&\");\n        result.append(PARAMETER_SHOWWAITTIME);\n        result.append(\"=\");\n        result.append(m_showWaitTime);\n        result.append(\"&\");\n        result.append(PARAMETER_REFRESHRATE);\n        result.append(\"=\");\n        result.append(getRefreshRate());\n        result.append(\"', 'updateProgressBar');\\n\");\n\n        // set error message\n        result.append(\"\\t\\t\\t\\t} else if (msg.substring(0,3) == \\\"ERR\\\") {\\n\");\n        result.append(\"\\t\\t\\t\\t\\tsetProgressBarError(msg.substr(3));\\n\");\n\n        // set result\n        result.append(\"\\t\\t\\t\\t} else {\\n\");\n        result.append(\"\\t\\t\\t\\t\\tprogressState = 0;\\n\");\n        result.append(\"\\t\\t\\t\\t\\tbar.style.width = \\\"100%\\\";\\n\");\n        result.append(\"\\t\\t\\t\\t\\tpercent.innerHTML = \\\"100%\\\";\\n\");\n        result.append(\"\\t\\t\\t\\t\\tprogressResult = msg;\\n\");\n\n        result.append(\"\\t\\t\\t\\t\\tbar.parentNode.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\t\\t\\t\\tpercent.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\t\\t\\t\\tdesc.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\t\\t\\t\\twait.style.display = \\\"block\\\";\\n\");\n\n        result.append(\"\\t\\t\\t\\t\\twindow.setTimeout(\\\"\");\n        result.append(getJsFinishMethod());\n        result.append(\"()\\\",100);\\n\");\n        result.append(\"\\t\\t\\t\\t}\\n\");\n        result.append(\"\\t\\t\\t} else {\\n\");\n        result.append(\"\\t\\t\\t\\tbar.style.width = \\\"100%\\\";\\n\");\n        result.append(\"\\t\\t\\t}\\n\");\n\n        // fatal error returned by ajax\n        result.append(\"\\t\\t} else if (state == 'fatal') {\\n\");\n        result.append(\"\\t\\t\\tprogressState = 0;\\n\");\n        result.append(\"\\t\\t\\tsetProgressBarError(\\\"\");\n        result.append(org.opencms.workplace.Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n            org.opencms.workplace.Messages.GUI_AJAX_REPORT_GIVEUP_0));\n        result.append(\"\\\");\\n\");\n\n        // error returned by ajax\n        result.append(\"\\t\\t} else if (state == 'error') {\\n\");\n        result.append(\"\\t\\t\\tprogressState = 0;\\n\");\n        result.append(\"\\t\\t\\tsetProgressBarError(\\\"\");\n        result.append(org.opencms.workplace.Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n            org.opencms.workplace.Messages.GUI_AJAX_REPORT_ERROR_0));\n        result.append(\" \\\" + msg);\\n\");\n\n        // wait returned by ajax -> display wait symbol\n        result.append(\"\\t\\t} else if (state == 'wait') {\\n\");\n        result.append(\"\\t\\t\\tbar.parentNode.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\t\\tpercent.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\t\\twait.style.display = \\\"block\\\";\\n\");\n        result.append(\"\\t\\t}\\n\");\n        result.append(\"\\t}\\n\");\n\n        // function set error\n        result.append(\"\\tfunction setProgressBarError(msg) {\\n\");\n        result.append(\"\\t\\tvar error = document.getElementById(\\\"progressbar_error\\\");\\n\");\n        result.append(\"\\t\\tvar bar = document.getElementById(\\\"progressbar_bar\\\");\\n\");\n        result.append(\"\\t\\tvar percent = document.getElementById(\\\"progressbar_percent\\\");\\n\");\n        result.append(\"\\t\\tvar desc = document.getElementById(\\\"progressbar_desc\\\");\\n\");\n\n        result.append(\"\\t\\terror.innerHTML = msg;\\n\");\n        result.append(\"\\t\\terror.style.display = \\\"block\\\";\\n\");\n\n        result.append(\"\\t\\tbar.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\tpercent.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\tdesc.style.display = \\\"none\\\";\\n\");\n\n        result.append(\"\\t}\\n\");\n\n        // function reset progress bar\n        result.append(\"\\tfunction resetProgressBar() {\\n\");\n        result.append(\"\\t\\tvar bar = document.getElementById(\\\"progressbar_bar\\\");\\n\");\n        result.append(\"\\t\\tbar.parentNode.style.display = \\\"inline\\\";\\n\");\n        result.append(\"\\t\\tbar.style.width = \\\"0%\\\";\\n\");\n        result.append(\"\\t\\tbar.style.display = \\\"block\\\";\\n\");\n\n        result.append(\"\\t\\tvar percent = document.getElementById(\\\"progressbar_percent\\\");\\n\");\n        result.append(\"\\t\\tpercent.innerHTML = \\\"0%\\\";\\n\");\n        result.append(\"\\t\\tpercent.style.display = \\\"inline\\\";\\n\");\n\n        result.append(\"\\t\\tvar error = document.getElementById(\\\"progressbar_error\\\");\\n\");\n        result.append(\"\\t\\terror.innerHTML = \\\"\\\";\\n\");\n        result.append(\"\\t\\terror.style.display = \\\"none\\\";\\n\");\n\n        result.append(\"\\t\\tvar wait = document.getElementById(\\\"progressbar_wait\\\");\\n\");\n        result.append(\"\\t\\twait.style.display = \\\"none\\\";\\n\");\n\n        result.append(\"\\t\\tvar desc = document.getElementById(\\\"progressbar_desc\\\");\\n\");\n        result.append(\"\\t\\tdesc.style.display = \\\"block\\\";\\n\");\n        result.append(\"\\t\\tdesc.innerHTML = \\\"\\\";\\n\");\n\n        result.append(\"\\t\\t\\t\\t\\tprogressResult = \\\"\\\";\\n\");\n\n        result.append(\"\\t}\\n\");\n\n        // function start progress bar\n        result.append(\"\\tfunction startProgressBar() {\\n\");\n        result.append(\"\\t\\tif (progressState > 0) {\\n\");\n        result.append(\"\\t\\t\\tprogressState = 2;\\n\");\n        result.append(\"\\t\\t\\twindow.setTimeout(\\\"startProgressBar()\\\",\");\n        result.append(getRefreshRate());\n        result.append(\");\\n\");\n        result.append(\"\\t\\t\\treturn;\\n\");\n        result.append(\"\\t\\t}\\n\");\n        result.append(\"\\t\\tprogressState = 1;\\n\");\n        result.append(\"\\t\\tmakeRequest('\");\n        result.append(getJsp().link(\"/system/workplace/commons/report-progress.jsp\"));\n        result.append(\"', '\");\n        result.append(PARAMETER_KEY);\n        result.append(\"=\");\n        result.append(getKey());\n        result.append(\"&\");\n        result.append(PARAMETER_SHOWWAITTIME);\n        result.append(\"=\");\n        result.append(m_showWaitTime);\n        result.append(\"&\");\n        result.append(PARAMETER_REFRESHRATE);\n        result.append(\"=\");\n        result.append(getRefreshRate());        result.append(\"', 'updateProgressBar');\\n\");\n        result.append(\"\\t}\\n\");\n\n        result.append(\"<\/script>\\n\");\n\n        return result.toString();\n    }","id":1798,"modified_method":"/**\n     * Generates the necessary JavaScript inclusion code for this widget.<p>\n     * \n     * @return the JavaScript inclusion code\n     */\n    public String getJsIncludes() {\n\n        StringBuffer result = new StringBuffer();\n\n        result.append(\"<script type=\\\"text/javascript\\\" src=\\\"\");\n        result.append(CmsWorkplace.getSkinUri());\n        result.append(\"commons/ajax.js\\\"><\/script>\\n\");\n\n        result.append(\"<script type=\\\"text/javascript\\\">\\n\");\n\n        // initialize global variables\n        result.append(\"\\tvar progressState = 0;\\n\");\n        result.append(\"\\tvar progressResult = '';\\n\");\n\n        // function update progress bar\n        result.append(\"\\tfunction updateProgressBar(msg, state) {\\n\");\n\n        // check state of progress\n        result.append(\"\\t\\tif (progressState != 1) {\\n\");\n        result.append(\"\\t\\t\\tprogressState = 0;\\n\");\n        result.append(\"\\t\\t\\treturn;\\n\");\n        result.append(\"\\t\\t}\\n\");\n\n        result.append(\"\\t\\tif (state == 'ok') {\\n\");\n\n        // get all elements to use\n        result.append(\"\\t\\t\\tvar bar = document.getElementById(\\\"progressbar_bar\\\");\\n\");\n        result.append(\"\\t\\t\\tvar percent = document.getElementById(\\\"progressbar_percent\\\");\\n\");\n        result.append(\"\\t\\t\\tvar wait = document.getElementById(\\\"progressbar_wait\\\");\\n\");\n        result.append(\"\\t\\t\\tvar desc = document.getElementById(\\\"progressbar_desc\\\");\\n\");\n\n        result.append(\"\\t\\t\\tif (msg != \\\"\\\") {\\n\");\n\n        result.append(\"\\t\\t\\t\\tbar.parentNode.style.display = \\\"block\\\";\\n\");\n        result.append(\"\\t\\t\\t\\tpercent.style.display = \\\"inline\\\";\\n\");\n        result.append(\"\\t\\t\\t\\twait.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\t\\t\\tdesc.style.display = \\\"block\\\";\\n\");\n\n        // update progress\n        result.append(\"\\t\\t\\t\\tif (msg.substring(0,3) == \\\"PRO\\\") {\\n\");\n        result.append(\"\\t\\t\\t\\t\\tvar splitted = msg.split(\\\"|\\\");\\n\");\n        result.append(\"\\t\\t\\t\\t\\tbar.style.width = splitted[0].substr(3);\\n\");\n        result.append(\"\\t\\t\\t\\t\\tpercent.innerHTML = splitted[0].substr(3);\\n\");\n        result.append(\"\\t\\t\\t\\t\\tdesc.innerHTML = splitted[1];\\n\");\n        result.append(\"\\t\\t\\t\\t\\tmakeRequest('\");\n        result.append(getJsp().link(\"/system/workplace/commons/report-progress.jsp\"));\n        result.append(\"', '\");\n        result.append(PARAMETER_KEY);\n        result.append(\"=\");\n        result.append(getKey());\n        result.append(\"&\");\n        result.append(PARAMETER_SHOWWAITTIME);\n        result.append(\"=\");\n        result.append(getShowWaitTime());\n        result.append(\"&\");\n        result.append(PARAMETER_REFRESHRATE);\n        result.append(\"=\");\n        result.append(getRefreshRate());\n        result.append(\"', 'updateProgressBar');\\n\");\n\n        // set error message\n        result.append(\"\\t\\t\\t\\t} else if (msg.substring(0,3) == \\\"ERR\\\") {\\n\");\n        result.append(\"\\t\\t\\t\\t\\tsetProgressBarError(msg.substr(3));\\n\");\n\n        // set result\n        result.append(\"\\t\\t\\t\\t} else {\\n\");\n        result.append(\"\\t\\t\\t\\t\\tprogressState = 0;\\n\");\n        result.append(\"\\t\\t\\t\\t\\tbar.style.width = \\\"100%\\\";\\n\");\n        result.append(\"\\t\\t\\t\\t\\tpercent.innerHTML = \\\"100%\\\";\\n\");\n        result.append(\"\\t\\t\\t\\t\\tprogressResult = msg;\\n\");\n\n        result.append(\"\\t\\t\\t\\t\\tbar.parentNode.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\t\\t\\t\\tpercent.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\t\\t\\t\\tdesc.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\t\\t\\t\\twait.style.display = \\\"block\\\";\\n\");\n\n        result.append(\"\\t\\t\\t\\t\\twindow.setTimeout(\\\"\");\n        result.append(getJsFinishMethod());\n        result.append(\"()\\\",100);\\n\");\n        result.append(\"\\t\\t\\t\\t}\\n\");\n        result.append(\"\\t\\t\\t} else {\\n\");\n        result.append(\"\\t\\t\\t\\tbar.style.width = \\\"100%\\\";\\n\");\n        result.append(\"\\t\\t\\t}\\n\");\n\n        // fatal error returned by ajax\n        result.append(\"\\t\\t} else if (state == 'fatal') {\\n\");\n        result.append(\"\\t\\t\\tprogressState = 0;\\n\");\n        result.append(\"\\t\\t\\tsetProgressBarError(\\\"\");\n        result.append(org.opencms.workplace.Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n            org.opencms.workplace.Messages.GUI_AJAX_REPORT_GIVEUP_0));\n        result.append(\"\\\");\\n\");\n\n        // error returned by ajax\n        result.append(\"\\t\\t} else if (state == 'error') {\\n\");\n        result.append(\"\\t\\t\\tprogressState = 0;\\n\");\n        result.append(\"\\t\\t\\tsetProgressBarError(\\\"\");\n        result.append(org.opencms.workplace.Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n            org.opencms.workplace.Messages.GUI_AJAX_REPORT_ERROR_0));\n        result.append(\" \\\" + msg);\\n\");\n\n        // wait returned by ajax -> display wait symbol\n        result.append(\"\\t\\t} else if (state == 'wait') {\\n\");\n        result.append(\"\\t\\t\\tbar.parentNode.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\t\\tpercent.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\t\\twait.style.display = \\\"block\\\";\\n\");\n        result.append(\"\\t\\t}\\n\");\n        result.append(\"\\t}\\n\");\n\n        // function set error\n        result.append(\"\\tfunction setProgressBarError(msg) {\\n\");\n        result.append(\"\\t\\tvar error = document.getElementById(\\\"progressbar_error\\\");\\n\");\n        result.append(\"\\t\\tvar bar = document.getElementById(\\\"progressbar_bar\\\");\\n\");\n        result.append(\"\\t\\tvar percent = document.getElementById(\\\"progressbar_percent\\\");\\n\");\n        result.append(\"\\t\\tvar desc = document.getElementById(\\\"progressbar_desc\\\");\\n\");\n\n        result.append(\"\\t\\terror.innerHTML = msg;\\n\");\n        result.append(\"\\t\\terror.style.display = \\\"block\\\";\\n\");\n\n        result.append(\"\\t\\tbar.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\tpercent.style.display = \\\"none\\\";\\n\");\n        result.append(\"\\t\\tdesc.style.display = \\\"none\\\";\\n\");\n\n        result.append(\"\\t}\\n\");\n\n        // function reset progress bar\n        result.append(\"\\tfunction resetProgressBar() {\\n\");\n        result.append(\"\\t\\tvar bar = document.getElementById(\\\"progressbar_bar\\\");\\n\");\n        result.append(\"\\t\\tbar.parentNode.style.display = \\\"inline\\\";\\n\");\n        result.append(\"\\t\\tbar.style.width = \\\"0%\\\";\\n\");\n        result.append(\"\\t\\tbar.style.display = \\\"block\\\";\\n\");\n\n        result.append(\"\\t\\tvar percent = document.getElementById(\\\"progressbar_percent\\\");\\n\");\n        result.append(\"\\t\\tpercent.innerHTML = \\\"0%\\\";\\n\");\n        result.append(\"\\t\\tpercent.style.display = \\\"inline\\\";\\n\");\n\n        result.append(\"\\t\\tvar error = document.getElementById(\\\"progressbar_error\\\");\\n\");\n        result.append(\"\\t\\terror.innerHTML = \\\"\\\";\\n\");\n        result.append(\"\\t\\terror.style.display = \\\"none\\\";\\n\");\n\n        result.append(\"\\t\\tvar wait = document.getElementById(\\\"progressbar_wait\\\");\\n\");\n        result.append(\"\\t\\twait.style.display = \\\"none\\\";\\n\");\n\n        result.append(\"\\t\\tvar desc = document.getElementById(\\\"progressbar_desc\\\");\\n\");\n        result.append(\"\\t\\tdesc.style.display = \\\"block\\\";\\n\");\n        result.append(\"\\t\\tdesc.innerHTML = \\\"\\\";\\n\");\n\n        result.append(\"\\t\\t\\t\\t\\tprogressResult = \\\"\\\";\\n\");\n\n        result.append(\"\\t}\\n\");\n\n        // function start progress bar\n        result.append(\"\\tfunction startProgressBar() {\\n\");\n        result.append(\"\\t\\tif (progressState > 0) {\\n\");\n        result.append(\"\\t\\t\\tprogressState = 2;\\n\");\n        result.append(\"\\t\\t\\twindow.setTimeout(\\\"startProgressBar()\\\",\");\n        result.append(getRefreshRate());\n        result.append(\");\\n\");\n        result.append(\"\\t\\t\\treturn;\\n\");\n        result.append(\"\\t\\t}\\n\");\n        result.append(\"\\t\\tprogressState = 1;\\n\");\n        result.append(\"\\t\\tmakeRequest('\");\n        result.append(getJsp().link(\"/system/workplace/commons/report-progress.jsp\"));\n        result.append(\"', '\");\n        result.append(PARAMETER_KEY);\n        result.append(\"=\");\n        result.append(getKey());\n        result.append(\"&\");\n        result.append(PARAMETER_SHOWWAITTIME);\n        result.append(\"=\");\n        result.append(getShowWaitTime());\n        result.append(\"&\");\n        result.append(PARAMETER_REFRESHRATE);\n        result.append(\"=\");\n        result.append(getRefreshRate());\n        result.append(\"', 'updateProgressBar');\\n\");\n        result.append(\"\\t}\\n\");\n\n        result.append(\"<\/script>\\n\");\n\n        return result.toString();\n    }","commit_id":"66b125269e2c14e8c94cbaf65aafad2e21c87333","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Generates the widget HTML for the progress bar.<p>\n     * \n     * @return the widget HTML for the progress bar\n     */\n    public String getWidget() {\n\n        StringBuffer result = new StringBuffer();\n\n        CmsProgressThread thread = getProgressThread(getKey());\n        if ((thread != null) && (!thread.isAlive())) {\n            result.append(\"<script type=\\\"text/javascript\\\">\\n\");\n            result.append(\"\\tprogressState = 0;\\n\");\n            result.append(\"\\tprogressResult = '\");\n            result.append(CmsStringUtil.escapeJavaScript(getActualProgress()));\n            result.append(\"';\\n\");\n            result.append(\"\\t\");\n            result.append(getJsFinishMethod());\n            result.append(\"();\\n\");\n            result.append(\"<\/script>\\n\");\n        } else {\n\n            // check if to show the wait symbol\n            boolean showWait = false;\n            if (m_showWaitTime > 0) {\n                if ((thread != null) && (thread.isAlive()) && (thread.getRuntime() < m_showWaitTime)) {\n                    showWait = true;\n                } else if (thread == null) {\n                    showWait = true;\n                }\n            }\n\n            result.append(\"<div id=\\\"progressbar_desc\\\" style=\\\"margin-bottom:5px;display:\");\n            result.append(showWait ? \"none\" : \"block\");\n            result.append(\"\\\"><\/div>\");\n\n            result.append(\"<div style=\\\"width:\");\n            result.append(getWidth());\n            result.append(\";border-width:1px;border-style:solid;padding:0px;margin:0px;float:left;display:\");\n            result.append(showWait ? \"none\" : \"inline\");\n            result.append(\";\\\">\\n\");\n            result.append(\"\\t<div id=\\\"progressbar_bar\\\" style=\\\"width:0%;background-color:\");\n            result.append(getColor());\n            result.append(\";\\\">&nbsp;<\/div>\\n\");\n            result.append(\"<\/div>\\n\");\n            result.append(\"&nbsp;\");\n            result.append(\"<div id=\\\"progressbar_percent\\\" style=\\\"display:\");\n            result.append(showWait ? \"none\" : \"inline\");\n            result.append(\";\\\" >0%<\/div>\\n\");\n\n            result.append(\"<div id=\\\"progressbar_error\\\" style=\\\"display:none;color:#B40000;font-weight:bold;\\\"><\/div>\\n\");\n\n            result.append(\"<div id=\\\"progressbar_wait\\\" style=\\\"display:\");\n            result.append(showWait ? \"block\" : \"none\");\n            result.append(\";color:#000099;font-weight:bold;\\\"><img src=\\\"\");\n            result.append(CmsWorkplace.getSkinUri());\n            result.append(\"commons/wait.gif\\\" width='32' height='32' alt='' align='absmiddle' />\");\n            result.append(org.opencms.workplace.Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n                org.opencms.workplace.Messages.GUI_AJAX_REPORT_WAIT_0));\n            result.append(\"<\/div>\\n\");\n\n            result.append(\"<script type=\\\"text/javascript\\\">\\n\");\n            result.append(\"\\tstartProgressBar();\\n\");\n            result.append(\"<\/script>\\n\");\n        }\n\n        return result.toString();\n    }","id":1799,"modified_method":"/**\n     * Generates the widget HTML for the progress bar.<p>\n     * \n     * @return the widget HTML for the progress bar\n     */\n    public String getWidget() {\n\n        StringBuffer result = new StringBuffer();\n\n        CmsProgressThread thread = getProgressThread(getKey());\n\n        // if the thread is finished before the widget is rendered\n        // show directly the result\n        if ((thread != null) && (!thread.isAlive())) {\n            result.append(\"<script type=\\\"text/javascript\\\">\\n\");\n            result.append(\"\\tprogressState = 0;\\n\");\n            result.append(\"\\tprogressResult = '\");\n            result.append(CmsStringUtil.escapeJavaScript(getActualProgress()));\n            result.append(\"';\\n\");\n            result.append(\"\\t\");\n            result.append(getJsFinishMethod());\n            result.append(\"();\\n\");\n            result.append(\"<\/script>\\n\");\n        } else {\n            // check if to show the wait symbol\n            boolean showWait = false;\n            if (getShowWaitTime() > 0) {\n                // show if the thread is running and the time running is smaller than the configured\n                if ((thread != null) && (thread.isAlive()) && (thread.getRuntime() < getShowWaitTime())) {\n                    showWait = true;\n                } else if ((thread == null) && (getShowWaitTime() > 0)) {\n                    // show if there is no thread\n                    showWait = true;\n                }\n            }\n\n            result.append(\"<div id=\\\"progressbar_desc\\\" style=\\\"margin-bottom:5px;display:\");\n            result.append(showWait ? \"none\" : \"block\");\n            result.append(\"\\\"><\/div>\");\n\n            result.append(\"<div style=\\\"width:\");\n            result.append(getWidth());\n            result.append(\";border-width:1px;border-style:solid;padding:0px;margin:0px;float:left;display:\");\n            result.append(showWait ? \"none\" : \"inline\");\n            result.append(\";\\\">\\n\");\n            result.append(\"\\t<div id=\\\"progressbar_bar\\\" style=\\\"width:0%;background-color:\");\n            result.append(getColor());\n            result.append(\";\\\">&nbsp;<\/div>\\n\");\n            result.append(\"<\/div>\\n\");\n            result.append(\"&nbsp;\");\n            result.append(\"<div id=\\\"progressbar_percent\\\" style=\\\"display:\");\n            result.append(showWait ? \"none\" : \"inline\");\n            result.append(\";\\\" >0%<\/div>\\n\");\n\n            result.append(\"<div id=\\\"progressbar_error\\\" style=\\\"display:none;color:#B40000;font-weight:bold;\\\"><\/div>\\n\");\n\n            result.append(\"<div id=\\\"progressbar_wait\\\" style=\\\"display:\");\n            result.append(showWait ? \"block\" : \"none\");\n            result.append(\";color:#000099;font-weight:bold;\\\"><img src=\\\"\");\n            result.append(CmsWorkplace.getSkinUri());\n            result.append(\"commons/wait.gif\\\" width='32' height='32' alt='' align='absmiddle' />\");\n            result.append(org.opencms.workplace.Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n                org.opencms.workplace.Messages.GUI_AJAX_REPORT_WAIT_0));\n            result.append(\"<\/div>\\n\");\n\n            result.append(\"<script type=\\\"text/javascript\\\">\\n\");\n            result.append(\"\\tstartProgressBar();\\n\");\n            result.append(\"<\/script>\\n\");\n        }\n\n        return result.toString();\n    }","commit_id":"66b125269e2c14e8c94cbaf65aafad2e21c87333","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the actual progress in percent.<p>\n     * \n     * @return the actual progress in percent\n     */\n    public String getActualProgress() {\n\n        StringBuffer result = new StringBuffer();\n\n        // check if a key was found\n        if (getKey() == null) {\n\n            result.append(createError(Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n                Messages.GUI_PROGRESS_KEY_NOT_SET_0)));\n            return result.toString();\n        }\n\n        try {\n            CmsProgressThread thread;\n            if (getProgressThread(getKey()) != null) {\n                thread = (CmsProgressThread)m_threads.get(getKey());\n\n                if (thread.isAlive()) {\n                    if (thread.getRuntime() < m_showWaitTime) {\n                        while ((thread.getRuntime() < m_showWaitTime) && (thread.isAlive())) {\n                            synchronized (this) {\n                                wait(500);\n                            }\n                        }\n                    } else {\n\n                        synchronized (this) {\n                            wait(getRefreshRate());\n                        }\n                    }\n                }\n\n                if (!thread.isAlive()) {\n\n                    // is an error occured in the execution of the thread?\n                    if (thread.getError() != null) {\n\n                        result.append(createError(\n                            Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n                                Messages.GUI_PROGRESS_ERROR_IN_THREAD_0),\n                            thread.getError()));\n                        return result.toString();\n                    }\n\n                    // return the result of the list created in the progress\n                    return thread.getResult();\n                }\n\n                result.append(\"PRO\");\n                result.append(thread.getProgress());\n                result.append(\"%\");\n                result.append(\"|\");\n                result.append(thread.getDescription());\n            } else {\n\n                result.append(createError(Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n                    Messages.GUI_PROGRESS_THREAD_NOT_FOUND_1,\n                    getKey())));\n                return result.toString();\n            }\n\n        } catch (Throwable t) {\n\n            result.append(createError(Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n                Messages.GUI_PROGRESS_ERROR_CALCULATING_0), t));\n            return result.toString();\n        }\n\n        return result.toString();\n    }","id":1800,"modified_method":"/**\n     * Returns the actual progress in percent.<p>\n     * \n     * The return value depends on the state of the progress/thread. This can be\n     * <ul>\n     * <li>the actual progress in percent with an optional description.<\/li>\n     * <li>the result as the html code for the list.<\/li>\n     * <li>an error message.<\/li>\n     * <\/ul><p>\n     * \n     * The result will be interpreted by the JavaScript method \"updateProgressbar()\".<p>\n     * \n     * @return the actual progress as a String\n     */\n    public String getActualProgress() {\n\n        try {\n            CmsProgressThread thread;\n            if (getProgressThread(getKey()) != null) {\n                thread = (CmsProgressThread)m_threads.get(getKey());\n\n                if (thread.isAlive()) {\n                    // wait the configured time until to update the progress the first time\n                    if (thread.getRuntime() < getShowWaitTime()) {\n                        while ((thread.getRuntime() < getShowWaitTime()) && (thread.isAlive())) {\n                            synchronized (this) {\n                                wait(500);\n                            }\n                        }\n                    } else {\n                        // wait the configured resfresh reate before returning\n                        synchronized (this) {\n                            wait(getRefreshRate());\n                        }\n                    }\n                }\n\n                if (!thread.isAlive()) {\n                    // is an error occured in the execution of the thread?\n                    if (thread.getError() != null) {\n                        return createError(Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n                            Messages.GUI_PROGRESS_ERROR_IN_THREAD_0), thread.getError());\n                    }\n\n                    // return the result of the list created in the progress\n                    return thread.getResult();\n                }\n\n                // create and return the actual progress in percent with the description to be shown\n                StringBuffer result = new StringBuffer();\n\n                result.append(\"PRO\");\n                result.append(thread.getProgress());\n                result.append(\"%\");\n                result.append(\"|\");\n                result.append(thread.getDescription());\n\n                return result.toString();\n            } else {\n                if (LOG.isErrorEnabled()) {\n                    LOG.error(Messages.get().getBundle().key(Messages.LOG_PROGRESS_THREAD_NOT_FOUND_1, getKey()));\n                }\n                return createError(Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n                    Messages.GUI_PROGRESS_THREAD_NOT_FOUND_1,\n                    getKey()));\n            }\n\n        } catch (Throwable t) {\n            if (LOG.isErrorEnabled()) {\n                LOG.error(Messages.get().getBundle().key(Messages.LOG_PROGRESS_ERROR_CALC_PROGRESS_0), t);\n            }\n            return createError(Messages.get().getBundle(getJsp().getRequestContext().getLocale()).key(\n                Messages.GUI_PROGRESS_ERROR_CALCULATING_0), t);\n        }\n    }","commit_id":"66b125269e2c14e8c94cbaf65aafad2e21c87333","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\t// Events\n\n\t\t\tList<Element> events = root.elements(\"event\");\n\n\t\t\tfor (Element el : events) {\n\t\t\t\tString path = el.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tCalEvent event =\n\t\t\t\t\t\t(CalEvent)context.getZipEntryAsObject(path);\n\n\t\t\t\t\timportEvent(context, event);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":1801,"modified_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tList<Element> eventsEl = root.elements(\"event\");\n\n\t\t\tfor (Element eventEl : eventsEl) {\n\t\t\t\tString path = eventEl.attributeValue(\"path\");\n\n\t\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\t\tCalEvent event = (CalEvent)context.getZipEntryAsObject(\n\t\t\t\t\t\tpath);\n\n\t\t\t\t\timportEvent(context, event);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"afddcd030eca26b394cec2188ed1bb93713ca2d0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getEventPath(\n\t\t\tPortletDataContext context, CalEvent event) {\n\t\treturn context.getPortletPath(PortletKeys.CALENDAR) + \"/events/\" +\n\t\t\tevent.getEventId() + \".xml\";\n\t}","id":1802,"modified_method":"protected String getEventPath(PortletDataContext context, CalEvent event) {\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.CALENDAR));\n\t\tsm.append(\"/events/\");\n\t\tsm.append(event.getEventId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"afddcd030eca26b394cec2188ed1bb93713ca2d0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportEvent(\n\t\t\tPortletDataContext context, Element el, CalEvent event)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(event.getModifiedDate())) {\n\t\t\tString path = getEventPath(context, event);\n\n\t\t\tel.addElement(\"event\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tevent.setUserUuid(event.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, event);\n\t\t\t}\n\t\t}\n\t}","id":1803,"modified_method":"protected void exportEvent(\n\t\t\tPortletDataContext context, Element root, CalEvent event)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(event.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getEventPath(context, event);\n\n\t\tElement eventEl = root.addElement(\"event\");\n\n\t\teventEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tevent.setUserUuid(event.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, event);\n\t\t}\n\t}","commit_id":"afddcd030eca26b394cec2188ed1bb93713ca2d0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String exportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tString articleId = prefs.getValue(\"article-id\", null);\n\n\t\t\tif (articleId == null) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"No article id found in preferences of portlet \" +\n\t\t\t\t\t\t\tportletId);\n\t\t\t\t}\n\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tlong articleGroupId = GetterUtil.getLong(\n\t\t\t\tprefs.getValue(\"group-id\", StringPool.BLANK));\n\n\t\t\tif (articleGroupId <= 0) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"No group id found in preferences of portlet \" +\n\t\t\t\t\t\t\tportletId);\n\t\t\t\t}\n\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tJournalArticle article = null;\n\n\t\t\ttry {\n\t\t\t\tarticle = JournalArticleLocalServiceUtil.getLatestArticle(\n\t\t\t\t\tarticleGroupId, articleId);\n\t\t\t}\n\t\t\tcatch (NoSuchArticleException nsae) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(nsae);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (article == null) {\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\t\tElement root = doc.addElement(\"journal-content\");\n\n\t\t\tJournalPortletDataHandlerImpl.exportArticle(context, root, article);\n\n\t\t\tString structureId = article.getStructureId();\n\n\t\t\tif (Validator.isNotNull(structureId)) {\n\t\t\t\tJournalStructure structure = JournalStructureUtil.findByG_S(\n\t\t\t\t\tarticle.getGroupId(), structureId);\n\n\t\t\t\tJournalPortletDataHandlerImpl.exportStructure(\n\t\t\t\t\tcontext, root, structure);\n\t\t\t}\n\n\t\t\tString templateId = article.getTemplateId();\n\n\t\t\tif (Validator.isNotNull(templateId)) {\n\t\t\t\tJournalTemplate template = JournalTemplateUtil.findByG_T(\n\t\t\t\t\tarticle.getGroupId(), templateId);\n\n\t\t\t\tJournalPortletDataHandlerImpl.exportTemplate(\n\t\t\t\t\tcontext, root, template);\n\t\t\t}\n\n\t\t\treturn XMLFormatter.toString(doc);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":1804,"modified_method":"public String exportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tString articleId = prefs.getValue(\"article-id\", null);\n\n\t\t\tif (articleId == null) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"No article id found in preferences of portlet \" +\n\t\t\t\t\t\t\tportletId);\n\t\t\t\t}\n\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tlong articleGroupId = GetterUtil.getLong(\n\t\t\t\tprefs.getValue(\"group-id\", StringPool.BLANK));\n\n\t\t\tif (articleGroupId <= 0) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"No group id found in preferences of portlet \" +\n\t\t\t\t\t\t\tportletId);\n\t\t\t\t}\n\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tJournalArticle article = null;\n\n\t\t\ttry {\n\t\t\t\tarticle = JournalArticleLocalServiceUtil.getLatestArticle(\n\t\t\t\t\tarticleGroupId, articleId);\n\t\t\t}\n\t\t\tcatch (NoSuchArticleException nsae) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(nsae);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (article == null) {\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\t\tElement root = doc.addElement(\"journal-content-data\");\n\n\t\t\tJournalPortletDataHandlerImpl.exportArticle(context, root, article);\n\n\t\t\tString structureId = article.getStructureId();\n\n\t\t\tif (Validator.isNotNull(structureId)) {\n\t\t\t\tJournalStructure structure = JournalStructureUtil.findByG_S(\n\t\t\t\t\tarticle.getGroupId(), structureId);\n\n\t\t\t\tJournalPortletDataHandlerImpl.exportStructure(\n\t\t\t\t\tcontext, root, structure);\n\t\t\t}\n\n\t\t\tString templateId = article.getTemplateId();\n\n\t\t\tif (Validator.isNotNull(templateId)) {\n\t\t\t\tJournalTemplate template = JournalTemplateUtil.findByG_T(\n\t\t\t\t\tarticle.getGroupId(), templateId);\n\n\t\t\t\tJournalPortletDataHandlerImpl.exportTemplate(\n\t\t\t\t\tcontext, root, template);\n\t\t\t}\n\n\t\t\treturn XMLFormatter.toString(doc);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tif (Validator.isNull(data)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tElement el = root.element(\"structure\");\n\n\t\t\tMap<String, String> structureIds = context.getNewPrimaryKeysMap(\n\t\t\t\tJournalStructure.class);\n\n\t\t\tif (el != null) {\n\t\t\t\tJournalPortletDataHandlerImpl.importStructure(\n\t\t\t\t\tcontext, structureIds, el);\n\t\t\t}\n\n\t\t\tel = root.element(\"template\");\n\n\t\t\tMap<String, String> templateIds = context.getNewPrimaryKeysMap(\n\t\t\t\tJournalTemplate.class);\n\n\t\t\tif (el != null) {\n\t\t\t\tJournalPortletDataHandlerImpl.importTemplate(\n\t\t\t\t\tcontext, structureIds, templateIds, el);\n\t\t\t}\n\n\t\t\tel = root.element(\"article\");\n\n\t\t\tMap<String, String> articleIds = context.getNewPrimaryKeysMap(\n\t\t\t\tJournalArticle.class);\n\n\t\t\tif (el != null) {\n\t\t\t\tJournalPortletDataHandlerImpl.importArticle(\n\t\t\t\t\tcontext, structureIds, templateIds, articleIds, el);\n\t\t\t}\n\n\t\t\tString articleId = prefs.getValue(\"article-id\", StringPool.BLANK);\n\n\t\t\tif (Validator.isNotNull(articleId)) {\n\t\t\t\tarticleId = MapUtil.getString(articleIds, articleId, articleId);\n\n\t\t\t\tprefs.setValue(\n\t\t\t\t\t\"group-id\", String.valueOf(context.getGroupId()));\n\t\t\t\tprefs.setValue(\"article-id\", articleId);\n\t\t\t}\n\n\t\t\treturn prefs;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":1805,"modified_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tif (Validator.isNull(data)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tElement structureEl = root.element(\"structure\");\n\n\t\t\tMap<String, String> structureIds = context.getNewPrimaryKeysMap(\n\t\t\t\tJournalStructure.class);\n\n\t\t\tif (structureEl != null) {\n\t\t\t\tJournalPortletDataHandlerImpl.importStructure(\n\t\t\t\t\tcontext, structureIds, structureEl);\n\t\t\t}\n\n\t\t\tElement templateEl = root.element(\"template\");\n\n\t\t\tMap<String, String> templateIds = context.getNewPrimaryKeysMap(\n\t\t\t\tJournalTemplate.class);\n\n\t\t\tif (templateEl != null) {\n\t\t\t\tJournalPortletDataHandlerImpl.importTemplate(\n\t\t\t\t\tcontext, structureIds, templateIds, templateEl);\n\t\t\t}\n\n\t\t\tElement articleEl = root.element(\"article\");\n\n\t\t\tMap<String, String> articleIds = context.getNewPrimaryKeysMap(\n\t\t\t\tJournalArticle.class);\n\n\t\t\tif (articleEl != null) {\n\t\t\t\tJournalPortletDataHandlerImpl.importArticle(\n\t\t\t\t\tcontext, structureIds, templateIds, articleIds, articleEl);\n\t\t\t}\n\n\t\t\tString articleId = prefs.getValue(\"article-id\", StringPool.BLANK);\n\n\t\t\tif (Validator.isNotNull(articleId)) {\n\t\t\t\tarticleId = MapUtil.getString(articleIds, articleId, articleId);\n\n\t\t\t\tprefs.setValue(\n\t\t\t\t\t\"group-id\", String.valueOf(context.getGroupId()));\n\t\t\t\tprefs.setValue(\"article-id\", articleId);\n\t\t\t}\n\n\t\t\treturn prefs;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void exportTemplate(\n\t\t\tPortletDataContext context, Element el, JournalTemplate template)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(template.getModifiedDate())) {\n\t\t\tString path = getTemplatePath(context, template);\n\n\t\t\tel.addElement(\"template\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tif (template.isSmallImage()) {\n\t\t\t\t\tImage smallImage = ImageUtil.fetchByPrimaryKey(\n\t\t\t\t\t\ttemplate.getSmallImageId());\n\n\t\t\t\t\ttemplate.setSmallImageType(smallImage.getType());\n\n\t\t\t\t\tcontext.addZipEntry(\n\t\t\t\t\t\tgetSmallImagePath(context, template),\n\t\t\t\t\t\tsmallImage.getTextObj());\n\t\t\t\t}\n\n\t\t\t\ttemplate.setUserUuid(template.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, template);\n\t\t\t}\n\t\t}\n\t}","id":1806,"modified_method":"public static void exportTemplate(\n\t\t\tPortletDataContext context, Element templatesEl,\n\t\t\tJournalTemplate template)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(template.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getTemplatePath(context, template);\n\n\t\tElement templateEl = templatesEl.addElement(\"template\");\n\n\t\ttemplateEl.addAttribute(\"path\", path);\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (template.isSmallImage()) {\n\t\t\tImage smallImage = ImageUtil.fetchByPrimaryKey(\n\t\t\t\ttemplate.getSmallImageId());\n\n\t\t\ttemplate.setSmallImageType(smallImage.getType());\n\n\t\t\tcontext.addZipEntry(\n\t\t\t\tgetTemplateSmallImagePath(context, template),\n\t\t\t\tsmallImage.getTextObj());\n\t\t}\n\n\t\ttemplate.setUserUuid(template.getUserUuid());\n\n\t\tcontext.addZipEntry(path, template);\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static String getArticlePath(\n\t\t\tPortletDataContext context, JournalArticle article) {\n\n\t\tStringMaker sm = new StringMaker();\n\t\tsm.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsm.append(_ARTICLE_FOLDER);\n\t\tsm.append(article.getArticleId());\n\t\tsm.append(CharPool.FORWARD_SLASH);\n\t\tsm.append(article.getVersion());\n\t\tsm.append(CharPool.FORWARD_SLASH);\n\t\tsm.append(article.getArticleId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","id":1807,"modified_method":"protected static String getArticlePath(\n\t\tPortletDataContext context, JournalArticle article) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsm.append(\"/articles/\");\n\t\tsm.append(article.getArticleId());\n\t\tsm.append(StringPool.SLASH);\n\t\tsm.append(article.getVersion());\n\t\tsm.append(StringPool.SLASH);\n\t\tsm.append(article.getArticleId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void exportStructure(\n\t\t\tPortletDataContext context, Element el, JournalStructure structure)\n\t\tthrows SystemException {\n\n\t\tif (context.isWithinDateRange(structure.getModifiedDate())) {\n\t\t\tString path = getStructurePath(context, structure);\n\n\t\t\tel.addElement(\"structure\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tstructure.setUserUuid(structure.getUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, structure);\n\t\t\t}\n\t\t}\n\t}","id":1808,"modified_method":"public static void exportStructure(\n\t\t\tPortletDataContext context, Element structuresEl,\n\t\t\tJournalStructure structure)\n\t\tthrows SystemException {\n\n\t\tif (!context.isWithinDateRange(structure.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getStructurePath(context, structure);\n\n\t\tElement structureEl = structuresEl.addElement(\"structure\");\n\n\t\tstructureEl.addAttribute(\"path\", path);\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tstructure.setUserUuid(structure.getUserUuid());\n\n\t\t\tcontext.addZipEntry(path, structure);\n\t\t}\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String exportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\t\tElement root = doc.addElement(\"journal-data\");\n\n\t\t\troot.addAttribute(\"group-id\", String.valueOf(context.getGroupId()));\n\n\t\t\t// Structures\n\n\t\t\tElement el = root.addElement(\"journal-structures\");\n\n\t\t\tList<JournalStructure> structures =\n\t\t\t\tJournalStructureUtil.findByGroupId(\n\t\t\t\t\tcontext.getGroupId());\n\n\t\t\tfor (JournalStructure structure : structures) {\n\t\t\t\texportStructure(context, el, structure);\n\t\t\t}\n\n\t\t\t// Templates\n\n\t\t\tel = root.addElement(\"journal-templates\");\n\n\t\t\tList<JournalTemplate> templates =\n\t\t\t\tJournalTemplateUtil.findByGroupId(context.getGroupId());\n\n\t\t\tfor (JournalTemplate template : templates) {\n\t\t\t\texportTemplate(context, el, template);\n\t\t\t}\n\n\t\t\t// Articles\n\n\t\t\tel = root.addElement(\"journal-articles\");\n\n\t\t\tList<JournalArticle> articles = JournalArticleUtil.findByGroupId(\n\t\t\t\tcontext.getGroupId());\n\n\t\t\tfor (JournalArticle article : articles) {\n\t\t\t\tif (context.isWithinDateRange(article.getModifiedDate())) {\n\t\t\t\t\texportArticle(context, el, article);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn XMLFormatter.toString(doc);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":1809,"modified_method":"public String exportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\t\tElement root = doc.addElement(\"journal-data\");\n\n\t\t\troot.addAttribute(\"group-id\", String.valueOf(context.getGroupId()));\n\n\t\t\tElement structuresEl = root.addElement(\"structures\");\n\n\t\t\tList<JournalStructure> structures =\n\t\t\t\tJournalStructureUtil.findByGroupId(context.getGroupId());\n\n\t\t\tfor (JournalStructure structure : structures) {\n\t\t\t\texportStructure(context, structuresEl, structure);\n\t\t\t}\n\n\t\t\tElement templatesEl = root.addElement(\"templates\");\n\n\t\t\tList<JournalTemplate> templates = JournalTemplateUtil.findByGroupId(\n\t\t\t\tcontext.getGroupId());\n\n\t\t\tfor (JournalTemplate template : templates) {\n\t\t\t\texportTemplate(context, templatesEl, template);\n\t\t\t}\n\n\t\t\tElement articlesEl = root.addElement(\"articles\");\n\n\t\t\tList<JournalArticle> articles = JournalArticleUtil.findByGroupId(\n\t\t\t\tcontext.getGroupId());\n\n\t\t\tfor (JournalArticle article : articles) {\n\t\t\t\tif (context.isWithinDateRange(article.getModifiedDate())) {\n\t\t\t\t\texportArticle(context, articlesEl, article);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn XMLFormatter.toString(doc);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void importArticle(\n\t\t\tPortletDataContext context, Map<String, String> structureIds,\n\t\t\tMap<String, String> templateIds, Map<String, String> articleIds,\n\t\t\tElement el)\n\t\tthrows Exception {\n\n\t\tString path = el.attributeValue(\"path\");\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tJournalArticle article =\n\t\t\t\t(JournalArticle)context.getZipEntryAsObject(path);\n\n\t\t\tlong userId = context.getUserId(article.getUserUuid());\n\t\t\tlong plid = context.getPlid();\n\n\t\t\tString articleId = article.getArticleId();\n\t\t\tboolean autoArticleId = false;\n\n\t\t\tif ((Validator.isNumber(articleId)) ||\n\t\t\t\t(JournalArticleUtil.fetchByG_A_V(\n\t\t\t\t\tcontext.getGroupId(), articleId,\n\t\t\t\t\t\tJournalArticleImpl.DEFAULT_VERSION) != null)) {\n\n\t\t\t\tautoArticleId = true;\n\t\t\t}\n\n\t\t\tString newArticleId = articleIds.get(articleId);\n\n\t\t\tif (Validator.isNotNull(newArticleId)) {\n\t\t\t\t// This means a sibling of a different version already was\n\t\t\t\t// assigned a new articleId, we need to use it.\n\n\t\t\t\tarticleId = newArticleId;\n\t\t\t\tautoArticleId = false;\n\t\t\t}\n\n\t\t\tboolean incrementVersion = false;\n\n\t\t\tString parentStructureId = MapUtil.getString(\n\t\t\t\tstructureIds, article.getStructureId(),\n\t\t\t\tarticle.getStructureId());\n\t\t\tString parentTemplateId = MapUtil.getString(\n\t\t\t\ttemplateIds, article.getTemplateId(),\n\t\t\t\tarticle.getTemplateId());\n\n\t\t\tDate displayDate = article.getDisplayDate();\n\n\t\t\tint displayDateMonth = 0;\n\t\t\tint displayDateDay = 0;\n\t\t\tint displayDateYear = 0;\n\t\t\tint displayDateHour = 0;\n\t\t\tint displayDateMinute = 0;\n\n\t\t\tif (displayDate != null) {\n\t\t\t\tCalendar displayCal = CalendarFactoryUtil.getCalendar();\n\n\t\t\t\tdisplayCal.setTime(displayDate);\n\n\t\t\t\tdisplayDateMonth = displayCal.get(Calendar.MONTH);\n\t\t\t\tdisplayDateDay = displayCal.get(Calendar.DATE);\n\t\t\t\tdisplayDateYear = displayCal.get(Calendar.YEAR);\n\t\t\t\tdisplayDateHour = displayCal.get(Calendar.HOUR);\n\t\t\t\tdisplayDateMinute = displayCal.get(Calendar.MINUTE);\n\n\t\t\t\tif (displayCal.get(Calendar.AM_PM) == Calendar.PM) {\n\t\t\t\t\tdisplayDateHour += 12;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tDate expirationDate = article.getExpirationDate();\n\n\t\t\tint expirationDateMonth = 0;\n\t\t\tint expirationDateDay = 0;\n\t\t\tint expirationDateYear = 0;\n\t\t\tint expirationDateHour = 0;\n\t\t\tint expirationDateMinute = 0;\n\t\t\tboolean neverExpire = true;\n\n\t\t\tif (expirationDate != null) {\n\t\t\t\tCalendar expirationCal = CalendarFactoryUtil.getCalendar();\n\n\t\t\t\texpirationCal.setTime(expirationDate);\n\n\t\t\t\texpirationDateMonth = expirationCal.get(Calendar.MONTH);\n\t\t\t\texpirationDateDay = expirationCal.get(Calendar.DATE);\n\t\t\t\texpirationDateYear = expirationCal.get(Calendar.YEAR);\n\t\t\t\texpirationDateHour = expirationCal.get(Calendar.HOUR);\n\t\t\t\texpirationDateMinute = expirationCal.get(Calendar.MINUTE);\n\t\t\t\tneverExpire = false;\n\n\t\t\t\tif (expirationCal.get(Calendar.AM_PM) == Calendar.PM) {\n\t\t\t\t\texpirationDateHour += 12;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tDate reviewDate = article.getReviewDate();\n\n\t\t\tint reviewDateMonth = 0;\n\t\t\tint reviewDateDay = 0;\n\t\t\tint reviewDateYear = 0;\n\t\t\tint reviewDateHour = 0;\n\t\t\tint reviewDateMinute = 0;\n\t\t\tboolean neverReview = true;\n\n\t\t\tif (reviewDate != null) {\n\t\t\t\tCalendar reviewCal = CalendarFactoryUtil.getCalendar();\n\n\t\t\t\treviewCal.setTime(reviewDate);\n\n\t\t\t\treviewDateMonth = reviewCal.get(Calendar.MONTH);\n\t\t\t\treviewDateDay = reviewCal.get(Calendar.DATE);\n\t\t\t\treviewDateYear = reviewCal.get(Calendar.YEAR);\n\t\t\t\treviewDateHour = reviewCal.get(Calendar.HOUR);\n\t\t\t\treviewDateMinute = reviewCal.get(Calendar.MINUTE);\n\t\t\t\tneverReview = false;\n\n\t\t\t\tif (reviewCal.get(Calendar.AM_PM) == Calendar.PM) {\n\t\t\t\t\treviewDateHour += 12;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tFile smallFile = null;\n\n\t\t\tif (article.isSmallImage()) {\n\t\t\t\tbyte[] byteArray = context.getZipEntryAsByteArray(\n\t\t\t\t\tgetSmallImagePath(context, article));\n\n\t\t\t\tsmallFile = File.createTempFile(\n\t\t\t\t\tString.valueOf(article.getSmallImageId()),\n\t\t\t\t\tStringPool.PERIOD + article.getSmallImageType());\n\n\t\t\t\tFileUtil.write(smallFile, byteArray);\n\t\t\t}\n\n\t\t\tMap<String, byte[]> images = new HashMap<String, byte[]>();\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"images\")) {\n\t\t\t\tList<ObjectValuePair<String, byte[]>> imageFiles =\n\t\t\t\t\tcontext.getZipFolderEntries(\n\t\t\t\t\t\tgetArticleImagePath(context, article));\n\n\t\t\t\tif (imageFiles != null) {\n\t\t\t\t\tfor (ObjectValuePair<String, byte[]> imageFile :\n\t\t\t\t\t\t\timageFiles) {\n\t\t\t\t\t\tString fileName = imageFile.getKey();\n\n\t\t\t\t\t\tif (!fileName.endsWith(\".xml\")) {\n\t\t\t\t\t\t\tint pos = fileName.lastIndexOf(\".\");\n\n\t\t\t\t\t\t\tif (pos != -1) {\n\t\t\t\t\t\t\t\tfileName = fileName.substring(0, pos);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\timages.put(fileName, imageFile.getValue());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tString articleURL = null;\n\n\t\t\tPortletPreferences prefs = null;\n\n\t\t\tString[] tagsEntries = null;\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\t\ttagsEntries = context.getTagsEntries(\n\t\t\t\t\tJournalArticle.class,\n\t\t\t\t\tnew Long(article.getResourcePrimKey()));\n\t\t\t}\n\n\t\t\tJournalCreationStrategy creationStrategy =\n\t\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\t\tlong authorId = creationStrategy.getAuthorUserId(context, article);\n\n\t\t\tif (authorId !=\n\t\t\t\t\tJournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\t\tuserId = authorId;\n\t\t\t}\n\n\t\t\tString newContent = creationStrategy.getTransformedContent(\n\t\t\t\tcontext, article);\n\n\t\t\tif (newContent !=\n\t\t\t\t\tJournalCreationStrategy.ARTICLE_CONTENT_UNCHANGED) {\n\t\t\t\tarticle.setContent(newContent);\n\t\t\t}\n\n\t\t\tboolean addCommunityPermissions =\n\t\t\t\tcreationStrategy.addCommunityPermissions(context, article);\n\t\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\t\tcontext, article);\n\n\t\t\tJournalArticle existingArticle = null;\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\texistingArticle = JournalArticleUtil.fetchByUUID_G(\n\t\t\t\t\tarticle.getUuid(), context.getGroupId());\n\n\t\t\t\tif (existingArticle == null) {\n\t\t\t\t\texistingArticle =  JournalArticleLocalServiceUtil.addArticle(\n\t\t\t\t\t\tarticle.getUuid(), userId, articleId, autoArticleId,\n\t\t\t\t\t\tplid, article.getVersion(), article.getTitle(),\n\t\t\t\t\t\tarticle.getDescription(), article.getContent(),\n\t\t\t\t\t\tarticle.getType(), parentStructureId, parentTemplateId,\n\t\t\t\t\t\tdisplayDateMonth, displayDateDay, displayDateYear,\n\t\t\t\t\t\tdisplayDateHour, displayDateMinute, expirationDateMonth,\n\t\t\t\t\t\texpirationDateDay, expirationDateYear,\n\t\t\t\t\t\texpirationDateHour, expirationDateMinute, neverExpire,\n\t\t\t\t\t\treviewDateMonth, reviewDateDay, reviewDateYear,\n\t\t\t\t\t\treviewDateHour, reviewDateMinute, neverReview,\n\t\t\t\t\t\tarticle.getIndexable(), article.getSmallImage(),\n\t\t\t\t\t\tarticle.getSmallImageURL(), smallFile, images,\n\t\t\t\t\t\tarticleURL, prefs, tagsEntries, addCommunityPermissions,\n\t\t\t\t\t\taddGuestPermissions);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texistingArticle =  JournalArticleLocalServiceUtil.updateArticle(\n\t\t\t\t\t\tuserId, existingArticle.getGroupId(),\n\t\t\t\t\t\texistingArticle.getArticleId(),\n\t\t\t\t\t\texistingArticle.getVersion(), incrementVersion,\n\t\t\t\t\t\tarticle.getTitle(), article.getDescription(),\n\t\t\t\t\t\tarticle.getContent(), article.getType(),\n\t\t\t\t\t\texistingArticle.getStructureId(),\n\t\t\t\t\t\texistingArticle.getTemplateId(), displayDateMonth,\n\t\t\t\t\t\tdisplayDateDay, displayDateYear, displayDateHour,\n\t\t\t\t\t\tdisplayDateMinute, expirationDateMonth,\n\t\t\t\t\t\texpirationDateDay, expirationDateYear,\n\t\t\t\t\t\texpirationDateHour, expirationDateMinute, neverExpire,\n\t\t\t\t\t\treviewDateMonth, reviewDateDay, reviewDateYear,\n\t\t\t\t\t\treviewDateHour, reviewDateMinute, neverReview,\n\t\t\t\t\t\tarticle.getIndexable(), article.getSmallImage(),\n\t\t\t\t\t\tarticle.getSmallImageURL(), smallFile, images,\n\t\t\t\t\t\tarticleURL, prefs, tagsEntries);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingArticle = JournalArticleLocalServiceUtil.addArticle(\n\t\t\t\t\tuserId, articleId, autoArticleId, plid,\n\t\t\t\t\tarticle.getVersion(), article.getTitle(),\n\t\t\t\t\tarticle.getDescription(), article.getContent(),\n\t\t\t\t\tarticle.getType(), parentStructureId, parentTemplateId,\n\t\t\t\t\tdisplayDateMonth, displayDateDay, displayDateYear,\n\t\t\t\t\tdisplayDateHour, displayDateMinute, expirationDateMonth,\n\t\t\t\t\texpirationDateDay, expirationDateYear, expirationDateHour,\n\t\t\t\t\texpirationDateMinute, neverExpire, reviewDateMonth,\n\t\t\t\t\treviewDateDay, reviewDateYear, reviewDateHour,\n\t\t\t\t\treviewDateMinute, neverReview, article.getIndexable(),\n\t\t\t\t\tarticle.getSmallImage(), article.getSmallImageURL(),\n\t\t\t\t\tsmallFile, images, articleURL, prefs, tagsEntries,\n\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\n\t\t\tlong strategyApprovalUserId = creationStrategy.getApprovalUserId(\n\t\t\t\tcontext, article);\n\n\t\t\tif ((strategyApprovalUserId !=\n\t\t\t\t\tJournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) ||\n\t\t\t\t(article.isApproved() && !existingArticle.isApproved())) {\n\n\t\t\t\tlong approvedByUserId = strategyApprovalUserId;\n\n\t\t\t\tif (approvedByUserId == 0) {\n\t\t\t\t\tapprovedByUserId = context.getUserId(\n\t\t\t\t\t\tarticle.getApprovedByUserUuid());\n\t\t\t\t}\n\n\t\t\t\tJournalArticleLocalServiceUtil.approveArticle(\n\t\t\t\t\tapprovedByUserId, context.getGroupId(),\n\t\t\t\t\texistingArticle.getArticleId(),\n\t\t\t\t\texistingArticle.getVersion(), articleURL, prefs);\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"comments\")) {\n\t\t\t\tcontext.importComments(\n\t\t\t\t\tJournalArticle.class, new Long(article.getResourcePrimKey()),\n\t\t\t\t\tnew Long(existingArticle.getResourcePrimKey()),\n\t\t\t\t\tcontext.getGroupId());\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\t\tcontext.importRatingsEntries(\n\t\t\t\t\tJournalArticle.class, new Long(article.getResourcePrimKey()),\n\t\t\t\t\tnew Long(existingArticle.getResourcePrimKey()));\n\t\t\t}\n\n\t\t\tarticleIds.put(articleId, existingArticle.getArticleId());\n\n\t\t\tif (!articleId.equals(existingArticle.getArticleId())) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"An article with the ID \" + articleId + \" already \" +\n\t\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\t\texistingArticle.getArticleId());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":1810,"modified_method":"public static void importArticle(\n\t\t\tPortletDataContext context, Map<String, String> structureIds,\n\t\t\tMap<String, String> templateIds, Map<String, String> articleIds,\n\t\t\tElement articleEl)\n\t\tthrows Exception {\n\n\t\tString path = articleEl.attributeValue(\"path\");\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJournalArticle article = (JournalArticle)context.getZipEntryAsObject(\n\t\t\tpath);\n\n\t\tlong userId = context.getUserId(article.getUserUuid());\n\t\tlong plid = context.getPlid();\n\n\t\tString articleId = article.getArticleId();\n\t\tboolean autoArticleId = false;\n\n\t\tif ((Validator.isNumber(articleId)) ||\n\t\t\t(JournalArticleUtil.fetchByG_A_V(\n\t\t\t\tcontext.getGroupId(), articleId,\n\t\t\t\t\tJournalArticleImpl.DEFAULT_VERSION) != null)) {\n\n\t\t\tautoArticleId = true;\n\t\t}\n\n\t\tString newArticleId = articleIds.get(articleId);\n\n\t\tif (Validator.isNotNull(newArticleId)) {\n\n\t\t\t// A sibling of a different version was already assigned a new\n\t\t\t// article id\n\n\t\t\tarticleId = newArticleId;\n\t\t\tautoArticleId = false;\n\t\t}\n\n\t\tboolean incrementVersion = false;\n\n\t\tString parentStructureId = MapUtil.getString(\n\t\t\tstructureIds, article.getStructureId(), article.getStructureId());\n\t\tString parentTemplateId = MapUtil.getString(\n\t\t\ttemplateIds, article.getTemplateId(), article.getTemplateId());\n\n\t\tDate displayDate = article.getDisplayDate();\n\n\t\tint displayDateMonth = 0;\n\t\tint displayDateDay = 0;\n\t\tint displayDateYear = 0;\n\t\tint displayDateHour = 0;\n\t\tint displayDateMinute = 0;\n\n\t\tif (displayDate != null) {\n\t\t\tCalendar displayCal = CalendarFactoryUtil.getCalendar();\n\n\t\t\tdisplayCal.setTime(displayDate);\n\n\t\t\tdisplayDateMonth = displayCal.get(Calendar.MONTH);\n\t\t\tdisplayDateDay = displayCal.get(Calendar.DATE);\n\t\t\tdisplayDateYear = displayCal.get(Calendar.YEAR);\n\t\t\tdisplayDateHour = displayCal.get(Calendar.HOUR);\n\t\t\tdisplayDateMinute = displayCal.get(Calendar.MINUTE);\n\n\t\t\tif (displayCal.get(Calendar.AM_PM) == Calendar.PM) {\n\t\t\t\tdisplayDateHour += 12;\n\t\t\t}\n\t\t}\n\n\t\tDate expirationDate = article.getExpirationDate();\n\n\t\tint expirationDateMonth = 0;\n\t\tint expirationDateDay = 0;\n\t\tint expirationDateYear = 0;\n\t\tint expirationDateHour = 0;\n\t\tint expirationDateMinute = 0;\n\t\tboolean neverExpire = true;\n\n\t\tif (expirationDate != null) {\n\t\t\tCalendar expirationCal = CalendarFactoryUtil.getCalendar();\n\n\t\t\texpirationCal.setTime(expirationDate);\n\n\t\t\texpirationDateMonth = expirationCal.get(Calendar.MONTH);\n\t\t\texpirationDateDay = expirationCal.get(Calendar.DATE);\n\t\t\texpirationDateYear = expirationCal.get(Calendar.YEAR);\n\t\t\texpirationDateHour = expirationCal.get(Calendar.HOUR);\n\t\t\texpirationDateMinute = expirationCal.get(Calendar.MINUTE);\n\t\t\tneverExpire = false;\n\n\t\t\tif (expirationCal.get(Calendar.AM_PM) == Calendar.PM) {\n\t\t\t\texpirationDateHour += 12;\n\t\t\t}\n\t\t}\n\n\t\tDate reviewDate = article.getReviewDate();\n\n\t\tint reviewDateMonth = 0;\n\t\tint reviewDateDay = 0;\n\t\tint reviewDateYear = 0;\n\t\tint reviewDateHour = 0;\n\t\tint reviewDateMinute = 0;\n\t\tboolean neverReview = true;\n\n\t\tif (reviewDate != null) {\n\t\t\tCalendar reviewCal = CalendarFactoryUtil.getCalendar();\n\n\t\t\treviewCal.setTime(reviewDate);\n\n\t\t\treviewDateMonth = reviewCal.get(Calendar.MONTH);\n\t\t\treviewDateDay = reviewCal.get(Calendar.DATE);\n\t\t\treviewDateYear = reviewCal.get(Calendar.YEAR);\n\t\t\treviewDateHour = reviewCal.get(Calendar.HOUR);\n\t\t\treviewDateMinute = reviewCal.get(Calendar.MINUTE);\n\t\t\tneverReview = false;\n\n\t\t\tif (reviewCal.get(Calendar.AM_PM) == Calendar.PM) {\n\t\t\t\treviewDateHour += 12;\n\t\t\t}\n\t\t}\n\n\t\tFile smallFile = null;\n\n\t\tif (article.isSmallImage()) {\n\t\t\tbyte[] bytes = context.getZipEntryAsByteArray(\n\t\t\t\tgetArticleSmallImagePath(context, article));\n\n\t\t\tsmallFile = File.createTempFile(\n\t\t\t\tString.valueOf(article.getSmallImageId()),\n\t\t\t\tStringPool.PERIOD + article.getSmallImageType());\n\n\t\t\tFileUtil.write(smallFile, bytes);\n\t\t}\n\n\t\tMap<String, byte[]> images = new HashMap<String, byte[]>();\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"images\")) {\n\t\t\tList<ObjectValuePair<String, byte[]>> imageFiles =\n\t\t\t\tcontext.getZipFolderEntries(\n\t\t\t\t\tgetArticleImagePath(context, article));\n\n\t\t\tif (imageFiles != null) {\n\t\t\t\tfor (ObjectValuePair<String, byte[]> imageFile : imageFiles) {\n\t\t\t\t\tString fileName = imageFile.getKey();\n\n\t\t\t\t\tif (!fileName.endsWith(\".xml\")) {\n\t\t\t\t\t\tint pos = fileName.lastIndexOf(StringPool.PERIOD);\n\n\t\t\t\t\t\tif (pos != -1) {\n\t\t\t\t\t\t\tfileName = fileName.substring(0, pos);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timages.put(fileName, imageFile.getValue());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tString articleURL = null;\n\n\t\tPortletPreferences prefs = null;\n\n\t\tString[] tagsEntries = null;\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\ttagsEntries = context.getTagsEntries(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tJournalCreationStrategy creationStrategy =\n\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\tlong authorId = creationStrategy.getAuthorUserId(context, article);\n\n\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\tuserId = authorId;\n\t\t}\n\n\t\tString newContent = creationStrategy.getTransformedContent(\n\t\t\tcontext, article);\n\n\t\tif (newContent != JournalCreationStrategy.ARTICLE_CONTENT_UNCHANGED) {\n\t\t\tarticle.setContent(newContent);\n\t\t}\n\n\t\tboolean addCommunityPermissions =\n\t\t\tcreationStrategy.addCommunityPermissions(context, article);\n\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\tcontext, article);\n\n\t\tJournalArticle existingArticle = null;\n\n\t\tif (context.getDataStrategy().equals(\n\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\texistingArticle = JournalArticleUtil.fetchByUUID_G(\n\t\t\t\tarticle.getUuid(), context.getGroupId());\n\n\t\t\tif (existingArticle == null) {\n\t\t\t\texistingArticle = JournalArticleLocalServiceUtil.addArticle(\n\t\t\t\t\tarticle.getUuid(), userId, articleId, autoArticleId,\n\t\t\t\t\tplid, article.getVersion(), article.getTitle(),\n\t\t\t\t\tarticle.getDescription(), article.getContent(),\n\t\t\t\t\tarticle.getType(), parentStructureId, parentTemplateId,\n\t\t\t\t\tdisplayDateMonth, displayDateDay, displayDateYear,\n\t\t\t\t\tdisplayDateHour, displayDateMinute, expirationDateMonth,\n\t\t\t\t\texpirationDateDay, expirationDateYear, expirationDateHour,\n\t\t\t\t\texpirationDateMinute, neverExpire, reviewDateMonth,\n\t\t\t\t\treviewDateDay, reviewDateYear, reviewDateHour,\n\t\t\t\t\treviewDateMinute, neverReview, article.getIndexable(),\n\t\t\t\t\tarticle.getSmallImage(), article.getSmallImageURL(),\n\t\t\t\t\tsmallFile, images, articleURL, prefs, tagsEntries,\n\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingArticle = JournalArticleLocalServiceUtil.updateArticle(\n\t\t\t\t\tuserId, existingArticle.getGroupId(),\n\t\t\t\t\texistingArticle.getArticleId(),\n\t\t\t\t\texistingArticle.getVersion(), incrementVersion,\n\t\t\t\t\tarticle.getTitle(), article.getDescription(),\n\t\t\t\t\tarticle.getContent(), article.getType(),\n\t\t\t\t\texistingArticle.getStructureId(),\n\t\t\t\t\texistingArticle.getTemplateId(), displayDateMonth,\n\t\t\t\t\tdisplayDateDay, displayDateYear, displayDateHour,\n\t\t\t\t\tdisplayDateMinute, expirationDateMonth, expirationDateDay,\n\t\t\t\t\texpirationDateYear, expirationDateHour,\n\t\t\t\t\texpirationDateMinute, neverExpire, reviewDateMonth,\n\t\t\t\t\treviewDateDay, reviewDateYear, reviewDateHour,\n\t\t\t\t\treviewDateMinute, neverReview, article.getIndexable(),\n\t\t\t\t\tarticle.getSmallImage(), article.getSmallImageURL(),\n\t\t\t\t\tsmallFile, images, articleURL, prefs, tagsEntries);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\texistingArticle = JournalArticleLocalServiceUtil.addArticle(\n\t\t\t\tuserId, articleId, autoArticleId, plid, article.getVersion(),\n\t\t\t\tarticle.getTitle(), article.getDescription(),\n\t\t\t\tarticle.getContent(), article.getType(), parentStructureId,\n\t\t\t\tparentTemplateId, displayDateMonth, displayDateDay,\n\t\t\t\tdisplayDateYear, displayDateHour, displayDateMinute,\n\t\t\t\texpirationDateMonth, expirationDateDay, expirationDateYear,\n\t\t\t\texpirationDateHour, expirationDateMinute, neverExpire,\n\t\t\t\treviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour,\n\t\t\t\treviewDateMinute, neverReview, article.getIndexable(),\n\t\t\t\tarticle.getSmallImage(), article.getSmallImageURL(), smallFile,\n\t\t\t\timages, articleURL, prefs, tagsEntries, addCommunityPermissions,\n\t\t\t\taddGuestPermissions);\n\t\t}\n\n\t\tlong strategyApprovalUserId = creationStrategy.getApprovalUserId(\n\t\t\tcontext, article);\n\n\t\tif ((strategyApprovalUserId !=\n\t\t\t\tJournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) ||\n\t\t\t(article.isApproved() && !existingArticle.isApproved())) {\n\n\t\t\tlong approvedByUserId = strategyApprovalUserId;\n\n\t\t\tif (approvedByUserId == 0) {\n\t\t\t\tapprovedByUserId = context.getUserId(\n\t\t\t\t\tarticle.getApprovedByUserUuid());\n\t\t\t}\n\n\t\t\tJournalArticleLocalServiceUtil.approveArticle(\n\t\t\t\tapprovedByUserId, context.getGroupId(),\n\t\t\t\texistingArticle.getArticleId(), existingArticle.getVersion(),\n\t\t\t\tarticleURL, prefs);\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"comments\")) {\n\t\t\tcontext.importComments(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey(),\n\t\t\t\texistingArticle.getResourcePrimKey(), context.getGroupId());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\tcontext.importRatingsEntries(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey(),\n\t\t\t\texistingArticle.getResourcePrimKey());\n\t\t}\n\n\t\tarticleIds.put(articleId, existingArticle.getArticleId());\n\n\t\tif (!articleId.equals(existingArticle.getArticleId())) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"An article with the ID \" + articleId + \" already \" +\n\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\texistingArticle.getArticleId());\n\t\t\t}\n\t\t}\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static String getSmallImagePath(\n\t\t\tPortletDataContext context, JournalTemplate template)\n\t\tthrows PortalException, SystemException {\n\n\t\treturn context.getPortletPath(PortletKeys.JOURNAL) +\n\t\t\t_TEMPLATE_FOLDER + \"thumbnail\" + CharPool.PERIOD +\n\t\t\t\ttemplate.getSmallImageType();\n\t}","id":1811,"modified_method":"protected static String getTemplateSmallImagePath(\n\t\t\tPortletDataContext context, JournalTemplate template)\n\t\tthrows PortalException, SystemException {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsm.append(\"/templates/thumbnail.\");\n\t\tsm.append(template.getSmallImageType());\n\n\t\treturn sm.toString();\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static String getTemplatePath(\n\t\t\tPortletDataContext context, JournalTemplate template) {\n\t\treturn context.getPortletPath(PortletKeys.JOURNAL) + _TEMPLATE_FOLDER +\n\t\t\ttemplate.getTemplateId() + \".xml\";\n\t}","id":1812,"modified_method":"protected static String getTemplatePath(\n\t\tPortletDataContext context, JournalTemplate template) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsm.append(\"/templates/\");\n\t\tsm.append(template.getTemplateId());\n\t\tsm.append(\".xml\");\n\n\t\treturn sm.toString();\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static String getStructurePath(\n\t\t\tPortletDataContext context, JournalStructure structure) {\n\n\t\treturn context.getPortletPath(PortletKeys.JOURNAL) + _STRUCTURE_FOLDER +\n\t\t\tstructure.getStructureId() + \".xml\";\n\t}","id":1813,"modified_method":"protected static String getStructurePath(\n\t\tPortletDataContext context, JournalStructure structure) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsm.append(\"/structures/\");\n\t\tsm.append(structure.getStructureId());\n\n\t\treturn sm.toString();\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void importStructure(\n\t\t\tPortletDataContext context, Map<String, String> structureIds,\n\t\t\tElement el)\n\t\tthrows Exception {\n\n\t\tString path = el.attributeValue(\"path\");\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tJournalStructure structure =\n\t\t\t\t(JournalStructure)context.getZipEntryAsObject(path);\n\n\t\t\tlong userId = context.getUserId(structure.getUserUuid());\n\t\t\tlong plid = context.getPlid();\n\n\t\t\tString structureId = structure.getStructureId();\n\t\t\tboolean autoStructureId = false;\n\n\t\t\tif ((Validator.isNumber(structureId)) ||\n\t\t\t\t(JournalStructureUtil.fetchByG_S(\n\t\t\t\t\tcontext.getGroupId(), structureId) != null)) {\n\n\t\t\t\tautoStructureId = true;\n\t\t\t}\n\n\t\t\tJournalCreationStrategy creationStrategy =\n\t\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\t\tlong authorId = creationStrategy.getAuthorUserId(context, structure);\n\n\t\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\t\tuserId = authorId;\n\t\t\t}\n\n\t\t\tboolean addCommunityPermissions =\n\t\t\t\tcreationStrategy.addCommunityPermissions(context, structure);\n\t\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\t\tcontext, structure);\n\n\t\t\tJournalStructure existingStructure = null;\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\texistingStructure = JournalStructureUtil.fetchByUUID_G(\n\t\t\t\t\tstructure.getUuid(), context.getGroupId());\n\n\t\t\t\tif (existingStructure == null) {\n\t\t\t\t\texistingStructure =\n\t\t\t\t\t\tJournalStructureLocalServiceUtil.addStructure(\n\t\t\t\t\t\t\tstructure.getUuid(), userId, structureId,\n\t\t\t\t\t\t\tautoStructureId, plid, structure.getName(),\n\t\t\t\t\t\t\tstructure.getDescription(), structure.getXsd(),\n\t\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texistingStructure =\n\t\t\t\t\t\tJournalStructureLocalServiceUtil.updateStructure(\n\t\t\t\t\t\t\texistingStructure.getGroupId(),\n\t\t\t\t\t\t\texistingStructure.getStructureId(), structure.getName(),\n\t\t\t\t\t\t\tstructure.getDescription(), structure.getXsd());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingStructure =\n\t\t\t\t\tJournalStructureLocalServiceUtil.addStructure(\n\t\t\t\t\t\tuserId, structureId, autoStructureId, plid,\n\t\t\t\t\t\tstructure.getName(), structure.getDescription(),\n\t\t\t\t\t\tstructure.getXsd(), addCommunityPermissions,\n\t\t\t\t\t\taddGuestPermissions);\n\t\t\t}\n\n\t\t\tstructureIds.put(structureId, existingStructure.getStructureId());\n\n\t\t\tif (!structureId.equals(existingStructure.getStructureId())) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"A structure with the ID \" + structureId + \" already \" +\n\t\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\t\texistingStructure.getStructureId());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":1814,"modified_method":"public static void importStructure(\n\t\t\tPortletDataContext context, Map<String, String> structureIds,\n\t\t\tElement structureEl)\n\t\tthrows Exception {\n\n\t\tString path = structureEl.attributeValue(\"path\");\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJournalStructure structure =\n\t\t\t(JournalStructure)context.getZipEntryAsObject(path);\n\n\t\tlong userId = context.getUserId(structure.getUserUuid());\n\t\tlong plid = context.getPlid();\n\n\t\tString structureId = structure.getStructureId();\n\t\tboolean autoStructureId = false;\n\n\t\tif ((Validator.isNumber(structureId)) ||\n\t\t\t(JournalStructureUtil.fetchByG_S(\n\t\t\t\tcontext.getGroupId(), structureId) != null)) {\n\n\t\t\tautoStructureId = true;\n\t\t}\n\n\t\tJournalCreationStrategy creationStrategy =\n\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\tlong authorId = creationStrategy.getAuthorUserId(context, structure);\n\n\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\tuserId = authorId;\n\t\t}\n\n\t\tboolean addCommunityPermissions =\n\t\t\tcreationStrategy.addCommunityPermissions(context, structure);\n\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\tcontext, structure);\n\n\t\tJournalStructure existingStructure = null;\n\n\t\tif (context.getDataStrategy().equals(\n\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\texistingStructure = JournalStructureUtil.fetchByUUID_G(\n\t\t\t\tstructure.getUuid(), context.getGroupId());\n\n\t\t\tif (existingStructure == null) {\n\t\t\t\texistingStructure =\n\t\t\t\t\tJournalStructureLocalServiceUtil.addStructure(\n\t\t\t\t\t\tstructure.getUuid(), userId, structureId,\n\t\t\t\t\t\tautoStructureId, plid, structure.getName(),\n\t\t\t\t\t\tstructure.getDescription(), structure.getXsd(),\n\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingStructure =\n\t\t\t\t\tJournalStructureLocalServiceUtil.updateStructure(\n\t\t\t\t\t\texistingStructure.getGroupId(),\n\t\t\t\t\t\texistingStructure.getStructureId(), structure.getName(),\n\t\t\t\t\t\tstructure.getDescription(), structure.getXsd());\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\texistingStructure = JournalStructureLocalServiceUtil.addStructure(\n\t\t\t\tuserId, structureId, autoStructureId, plid, structure.getName(),\n\t\t\t\tstructure.getDescription(), structure.getXsd(),\n\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t}\n\n\t\tstructureIds.put(structureId, existingStructure.getStructureId());\n\n\t\tif (!structureId.equals(existingStructure.getStructureId())) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"A structure with the ID \" + structureId + \" already \" +\n\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\texistingStructure.getStructureId());\n\t\t\t}\n\t\t}\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\t// Structures\n\n\t\t\tList<Element> structures =\n\t\t\t\troot.element(\"journal-structures\").elements(\"structure\");\n\n\t\t\tMap<String, String> structureIds = context.getNewPrimaryKeysMap(\n\t\t\t\tJournalStructure.class);\n\n\t\t\tfor (Element el : structures) {\n\t\t\t\timportStructure(context, structureIds, el);\n\t\t\t}\n\n\t\t\t// Templates\n\n\t\t\tList<Element> templates =\n\t\t\t\troot.element(\"journal-templates\").elements(\"template\");\n\n\t\t\tMap<String, String> templateIds = context.getNewPrimaryKeysMap(\n\t\t\t\tJournalTemplate.class);\n\n\t\t\tfor (Element el : templates) {\n\t\t\t\timportTemplate(context, structureIds, templateIds, el);\n\t\t\t}\n\n\t\t\t// Articles\n\n\t\t\tList<Element> articles =\n\t\t\t\troot.element(\"journal-articles\").elements(\"article\");\n\n\t\t\tMap<String, String> articleIds = context.getNewPrimaryKeysMap(\n\t\t\t\tJournalArticle.class);\n\n\t\t\tfor (Element el : articles) {\n\t\t\t\timportArticle(\n\t\t\t\t\tcontext, structureIds, templateIds, articleIds, el);\n\t\t\t}\n\n\t\t\treturn prefs;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":1815,"modified_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences prefs, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tDocument doc = DocumentUtil.readDocumentFromXML(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tList<Element> structureEls = root.element(\"structures\").elements(\n\t\t\t\t\"structure\");\n\n\t\t\tMap<String, String> structureIds = context.getNewPrimaryKeysMap(\n\t\t\t\tJournalStructure.class);\n\n\t\t\tfor (Element structureEl : structureEls) {\n\t\t\t\timportStructure(context, structureIds, structureEl);\n\t\t\t}\n\n\t\t\tList<Element> templateEls = root.element(\"templates\").elements(\n\t\t\t\t\"template\");\n\n\t\t\tMap<String, String> templateIds = context.getNewPrimaryKeysMap(\n\t\t\t\tJournalTemplate.class);\n\n\t\t\tfor (Element templateEl : templateEls) {\n\t\t\t\timportTemplate(context, structureIds, templateIds, templateEl);\n\t\t\t}\n\n\t\t\tList<Element> articleEls = root.element(\"articles\").elements(\n\t\t\t\t\"article\");\n\n\t\t\tMap<String, String> articleIds = context.getNewPrimaryKeysMap(\n\t\t\t\tJournalArticle.class);\n\n\t\t\tfor (Element articleEl : articleEls) {\n\t\t\t\timportArticle(\n\t\t\t\t\tcontext, structureIds, templateIds, articleIds, articleEl);\n\t\t\t}\n\n\t\t\treturn prefs;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static String getSmallImagePath(\n\t\t\tPortletDataContext context, JournalArticle article)\n\t\tthrows PortalException, SystemException {\n\n\t\treturn context.getPortletPath(PortletKeys.JOURNAL) +\n\t\t\t_ARTICLE_FOLDER + \"thumbnail\" + CharPool.PERIOD +\n\t\t\t\tarticle.getSmallImageType();\n\t}","id":1816,"modified_method":"protected static String getArticleSmallImagePath(\n\t\t\tPortletDataContext context, JournalArticle article)\n\t\tthrows PortalException, SystemException {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsm.append(\"/articles/thumbnail.\");\n\t\tsm.append(article.getSmallImageType());\n\n\t\treturn sm.toString();\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static String getArticleImagePath(\n\t\t\tPortletDataContext context, JournalArticle article) {\n\n\t\tStringMaker sm = new StringMaker();\n\t\tsm.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsm.append(_ARTICLE_FOLDER);\n\t\tsm.append(article.getArticleId());\n\t\tsm.append(CharPool.FORWARD_SLASH);\n\t\tsm.append(article.getVersion());\n\t\tsm.append(CharPool.FORWARD_SLASH);\n\n\t\treturn sm.toString();\n\t}","id":1817,"modified_method":"protected static String getArticleImagePath(\n\t\tPortletDataContext context, JournalArticle article) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsm.append(\"/articles/\");\n\t\tsm.append(article.getArticleId());\n\t\tsm.append(StringPool.SLASH);\n\t\tsm.append(article.getVersion());\n\t\tsm.append(StringPool.SLASH);\n\n\t\treturn sm.toString();\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void exportArticle(\n\t\t\tPortletDataContext context, Element el, JournalArticle article)\n\t\tthrows IOException, PortalException, SystemException {\n\n\t\tif (context.isWithinDateRange(article.getModifiedDate())) {\n\t\t\tString path = getArticlePath(context, article);\n\n\t\t\tel.addElement(\"article\").addAttribute(\"path\", path);\n\n\t\t\tif (context.isPathNotProcessed(path)) {\n\t\t\t\tif (article.isSmallImage()) {\n\t\t\t\t\tImage smallImage = ImageUtil.fetchByPrimaryKey(\n\t\t\t\t\t\tarticle.getSmallImageId());\n\n\t\t\t\t\tarticle.setSmallImageType(smallImage.getType());\n\n\t\t\t\t\tcontext.addZipEntry(\n\t\t\t\t\t\tgetSmallImagePath(context, article),\n\t\t\t\t\t\tsmallImage.getTextObj());\n\t\t\t\t}\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"images\")) {\n\t\t\t\t\tList<JournalArticleImage> articleImages =\n\t\t\t\t\t\tJournalArticleImageUtil.findByG_A_V(\n\t\t\t\t\t\t\tcontext.getGroupId(), article.getArticleId(),\n\t\t\t\t\t\t\tarticle.getVersion());\n\n\t\t\t\t\tfor (JournalArticleImage articleImage : articleImages) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tImage image = ImageUtil.findByPrimaryKey(\n\t\t\t\t\t\t\t\tarticleImage.getArticleImageId());\n\n\t\t\t\t\t\t\tString imagePath = getArticleImagePath(\n\t\t\t\t\t\t\t\tcontext, article, articleImage, image);\n\n\t\t\t\t\t\t\tcontext.addZipEntry(\n\t\t\t\t\t\t\t\timagePath, image.getTextObj());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (NoSuchImageException nsie) {\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"comments\")) {\n\t\t\t\t\tcontext.addComments(\n\t\t\t\t\t\tJournalArticle.class,\n\t\t\t\t\t\tnew Long(article.getResourcePrimKey()));\n\t\t\t\t}\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\t\t\tcontext.addRatingsEntries(\n\t\t\t\t\t\tJournalArticle.class,\n\t\t\t\t\t\tnew Long(article.getResourcePrimKey()));\n\t\t\t\t}\n\n\t\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\t\t\tcontext.addTagsEntries(\n\t\t\t\t\t\tJournalArticle.class,\n\t\t\t\t\t\tnew Long(article.getResourcePrimKey()));\n\t\t\t\t}\n\n\t\t\t\tarticle.setUserUuid(article.getUserUuid());\n\t\t\t\tarticle.setApprovedByUserUuid(article.getApprovedByUserUuid());\n\n\t\t\t\tcontext.addZipEntry(path, article);\n\t\t\t}\n\t\t}\n\t}","id":1818,"modified_method":"public static void exportArticle(\n\t\t\tPortletDataContext context, Element articlesEl,\n\t\t\tJournalArticle article)\n\t\tthrows IOException, PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(article.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getArticlePath(context, article);\n\n\t\tElement articleEl = articlesEl.addElement(\"article\");\n\n\t\tarticleEl.addAttribute(\"path\", path);\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (article.isSmallImage()) {\n\t\t\tImage smallImage = ImageUtil.fetchByPrimaryKey(\n\t\t\t\tarticle.getSmallImageId());\n\n\t\t\tarticle.setSmallImageType(smallImage.getType());\n\n\t\t\tcontext.addZipEntry(\n\t\t\t\tgetArticleSmallImagePath(context, article),\n\t\t\t\tsmallImage.getTextObj());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"images\")) {\n\t\t\tList<JournalArticleImage> articleImages =\n\t\t\t\tJournalArticleImageUtil.findByG_A_V(\n\t\t\t\t\tcontext.getGroupId(), article.getArticleId(),\n\t\t\t\t\tarticle.getVersion());\n\n\t\t\tfor (JournalArticleImage articleImage : articleImages) {\n\t\t\t\ttry {\n\t\t\t\t\tImage image = ImageUtil.findByPrimaryKey(\n\t\t\t\t\t\tarticleImage.getArticleImageId());\n\n\t\t\t\t\tString imagePath = getArticleImagePath(\n\t\t\t\t\t\tcontext, article, articleImage, image);\n\n\t\t\t\t\tcontext.addZipEntry(imagePath, image.getTextObj());\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchImageException nsie) {\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"comments\")) {\n\t\t\tcontext.addComments(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\tcontext.addRatingsEntries(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\tcontext.addTagsEntries(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tarticle.setUserUuid(article.getUserUuid());\n\t\tarticle.setApprovedByUserUuid(article.getApprovedByUserUuid());\n\n\t\tcontext.addZipEntry(path, article);\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void importTemplate(\n\t\t\tPortletDataContext context, Map<String, String> structureIds,\n\t\t\tMap<String, String> templateIds, Element el)\n\t\tthrows Exception {\n\n\t\tString path = el.attributeValue(\"path\");\n\n\t\tif (context.isPathNotProcessed(path)) {\n\t\t\tJournalTemplate template =\n\t\t\t\t(JournalTemplate)context.getZipEntryAsObject(path);\n\n\t\t\tlong userId = context.getUserId(template.getUserUuid());\n\t\t\tlong plid = context.getPlid();\n\n\t\t\tString templateId = template.getTemplateId();\n\t\t\tboolean autoTemplateId = false;\n\n\t\t\tif ((Validator.isNumber(templateId)) ||\n\t\t\t\t(JournalTemplateUtil.fetchByG_T(\n\t\t\t\t\tcontext.getGroupId(), templateId) != null)) {\n\n\t\t\t\tautoTemplateId = true;\n\t\t\t}\n\n\t\t\tString parentStructureId = MapUtil.getString(\n\t\t\t\tstructureIds, template.getStructureId(), template.getStructureId());\n\n\t\t\tboolean formatXsl = false;\n\n\t\t\tJournalCreationStrategy creationStrategy =\n\t\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\t\tlong authorId = creationStrategy.getAuthorUserId(context, template);\n\n\t\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\t\tuserId = authorId;\n\t\t\t}\n\n\t\t\tboolean addCommunityPermissions =\n\t\t\t\tcreationStrategy.addCommunityPermissions(context, template);\n\t\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\t\tcontext, template);\n\n\t\t\tFile smallFile = null;\n\n\t\t\tif (template.isSmallImage()) {\n\t\t\t\tbyte[] byteArray = context.getZipEntryAsByteArray(\n\t\t\t\t\tgetSmallImagePath(context, template));\n\n\t\t\t\tsmallFile = File.createTempFile(\n\t\t\t\t\tString.valueOf(template.getSmallImageId()),\n\t\t\t\t\tStringPool.PERIOD + template.getSmallImageType());\n\n\t\t\t\tFileUtil.write(smallFile, byteArray);\n\t\t\t}\n\n\t\t\tJournalTemplate existingTemplate = null;\n\n\t\t\tif (context.getDataStrategy().equals(\n\t\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\t\texistingTemplate = JournalTemplateUtil.fetchByUUID_G(\n\t\t\t\t\ttemplate.getUuid(), context.getGroupId());\n\n\t\t\t\tif (existingTemplate == null) {\n\t\t\t\t\texistingTemplate =\n\t\t\t\t\t\tJournalTemplateLocalServiceUtil.addTemplate(\n\t\t\t\t\t\t\ttemplate.getUuid(), userId, templateId, autoTemplateId,\n\t\t\t\t\t\t\tplid, parentStructureId, template.getName(),\n\t\t\t\t\t\t\ttemplate.getDescription(), template.getXsl(), formatXsl,\n\t\t\t\t\t\t\ttemplate.getLangType(), template.getCacheable(),\n\t\t\t\t\t\t\ttemplate.isSmallImage(), template.getSmallImageURL(),\n\t\t\t\t\t\t\tsmallFile, addCommunityPermissions,\n\t\t\t\t\t\t\taddGuestPermissions);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texistingTemplate =\n\t\t\t\t\t\tJournalTemplateLocalServiceUtil.updateTemplate(\n\t\t\t\t\t\t\texistingTemplate.getGroupId(),\n\t\t\t\t\t\t\texistingTemplate.getTemplateId(),\n\t\t\t\t\t\t\texistingTemplate.getStructureId(), template.getName(),\n\t\t\t\t\t\t\ttemplate.getDescription(), template.getXsl(), formatXsl,\n\t\t\t\t\t\t\ttemplate.getLangType(), template.getCacheable(),\n\t\t\t\t\t\t\ttemplate.isSmallImage(), template.getSmallImageURL(),\n\t\t\t\t\t\t\tsmallFile);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingTemplate =\n\t\t\t\t\tJournalTemplateLocalServiceUtil.addTemplate(\n\t\t\t\t\t\tuserId, templateId, autoTemplateId, plid, parentStructureId,\n\t\t\t\t\t\ttemplate.getName(), template.getDescription(),\n\t\t\t\t\t\ttemplate.getXsl(), formatXsl, template.getLangType(),\n\t\t\t\t\t\ttemplate.getCacheable(), template.isSmallImage(),\n\t\t\t\t\t\ttemplate.getSmallImageURL(), smallFile,\n\t\t\t\t\t\taddCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\n\t\t\ttemplateIds.put(templateId, existingTemplate.getTemplateId());\n\n\t\t\tif (!templateId.equals(existingTemplate.getTemplateId())) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"A template with the ID \" + templateId + \" already \" +\n\t\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\t\texistingTemplate.getTemplateId());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":1819,"modified_method":"public static void importTemplate(\n\t\t\tPortletDataContext context, Map<String, String> structureIds,\n\t\t\tMap<String, String> templateIds, Element templateEl)\n\t\tthrows Exception {\n\n\t\tString path = templateEl.attributeValue(\"path\");\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJournalTemplate template = (JournalTemplate)context.getZipEntryAsObject(\n\t\t\tpath);\n\n\t\tlong userId = context.getUserId(template.getUserUuid());\n\t\tlong plid = context.getPlid();\n\n\t\tString templateId = template.getTemplateId();\n\t\tboolean autoTemplateId = false;\n\n\t\tif ((Validator.isNumber(templateId)) ||\n\t\t\t(JournalTemplateUtil.fetchByG_T(\n\t\t\t\tcontext.getGroupId(), templateId) != null)) {\n\n\t\t\tautoTemplateId = true;\n\t\t}\n\n\t\tString parentStructureId = MapUtil.getString(\n\t\t\tstructureIds, template.getStructureId(), template.getStructureId());\n\n\t\tboolean formatXsl = false;\n\n\t\tJournalCreationStrategy creationStrategy =\n\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\tlong authorId = creationStrategy.getAuthorUserId(context, template);\n\n\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\tuserId = authorId;\n\t\t}\n\n\t\tboolean addCommunityPermissions =\n\t\t\tcreationStrategy.addCommunityPermissions(context, template);\n\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\tcontext, template);\n\n\t\tFile smallFile = null;\n\n\t\tif (template.isSmallImage()) {\n\t\t\tbyte[] bytes = context.getZipEntryAsByteArray(\n\t\t\t\tgetTemplateSmallImagePath(context, template));\n\n\t\t\tsmallFile = File.createTempFile(\n\t\t\t\tString.valueOf(template.getSmallImageId()),\n\t\t\t\tStringPool.PERIOD + template.getSmallImageType());\n\n\t\t\tFileUtil.write(smallFile, bytes);\n\t\t}\n\n\t\tJournalTemplate existingTemplate = null;\n\n\t\tif (context.getDataStrategy().equals(\n\t\t\t\tPortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {\n\n\t\t\texistingTemplate = JournalTemplateUtil.fetchByUUID_G(\n\t\t\t\ttemplate.getUuid(), context.getGroupId());\n\n\t\t\tif (existingTemplate == null) {\n\t\t\t\texistingTemplate = JournalTemplateLocalServiceUtil.addTemplate(\n\t\t\t\t\ttemplate.getUuid(), userId, templateId, autoTemplateId,\n\t\t\t\t\tplid, parentStructureId, template.getName(),\n\t\t\t\t\ttemplate.getDescription(), template.getXsl(), formatXsl,\n\t\t\t\t\ttemplate.getLangType(), template.getCacheable(),\n\t\t\t\t\ttemplate.isSmallImage(), template.getSmallImageURL(),\n\t\t\t\t\tsmallFile, addCommunityPermissions, addGuestPermissions);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingTemplate =\n\t\t\t\t\tJournalTemplateLocalServiceUtil.updateTemplate(\n\t\t\t\t\t\texistingTemplate.getGroupId(),\n\t\t\t\t\t\texistingTemplate.getTemplateId(),\n\t\t\t\t\t\texistingTemplate.getStructureId(), template.getName(),\n\t\t\t\t\t\ttemplate.getDescription(), template.getXsl(), formatXsl,\n\t\t\t\t\t\ttemplate.getLangType(), template.getCacheable(),\n\t\t\t\t\t\ttemplate.isSmallImage(), template.getSmallImageURL(),\n\t\t\t\t\t\tsmallFile);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\texistingTemplate = JournalTemplateLocalServiceUtil.addTemplate(\n\t\t\t\tuserId, templateId, autoTemplateId, plid, parentStructureId,\n\t\t\t\ttemplate.getName(), template.getDescription(),\n\t\t\t\ttemplate.getXsl(), formatXsl, template.getLangType(),\n\t\t\t\ttemplate.getCacheable(), template.isSmallImage(),\n\t\t\t\ttemplate.getSmallImageURL(), smallFile, addCommunityPermissions,\n\t\t\t\taddGuestPermissions);\n\t\t}\n\n\t\ttemplateIds.put(templateId, existingTemplate.getTemplateId());\n\n\t\tif (!templateId.equals(existingTemplate.getTemplateId())) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"A template with the ID \" + templateId + \" already \" +\n\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\texistingTemplate.getTemplateId());\n\t\t\t}\n\t\t}\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static String getArticleImagePath(\n\t\t\tPortletDataContext context, JournalArticle article,\n\t\t\tJournalArticleImage articleImage, Image image) {\n\n\t\tStringMaker sm = new StringMaker();\n\t\tsm.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsm.append(_ARTICLE_FOLDER);\n\t\tsm.append(article.getArticleId());\n\t\tsm.append(CharPool.FORWARD_SLASH);\n\t\tsm.append(article.getVersion());\n\t\tsm.append(CharPool.FORWARD_SLASH);\n\t\tsm.append(articleImage.getElName());\n\t\tsm.append(articleImage.getLanguageId());\n\t\tsm.append(CharPool.PERIOD);\n\t\tsm.append(image.getType());\n\n\t\treturn sm.toString();\n\t}","id":1820,"modified_method":"protected static String getArticleImagePath(\n\t\tPortletDataContext context, JournalArticle article,\n\t\tJournalArticleImage articleImage, Image image) {\n\n\t\tStringMaker sm = new StringMaker();\n\n\t\tsm.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsm.append(\"/articles/\");\n\t\tsm.append(article.getArticleId());\n\t\tsm.append(StringPool.SLASH);\n\t\tsm.append(article.getVersion());\n\t\tsm.append(StringPool.SLASH);\n\t\tsm.append(articleImage.getElName());\n\t\tsm.append(articleImage.getLanguageId());\n\t\tsm.append(StringPool.PERIOD);\n\t\tsm.append(image.getType());\n\n\t\treturn sm.toString();\n\t}","commit_id":"c9b9c2457eca988a43c763643e3d1c622787aaaa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public boolean connected()\n    {\n        if ( !channel.isBlocking() && !channel.isConnected() && \n            channel.isConnectionPending() )\n        {\n            try\n            {\n                channel.finishConnect();\n            }\n            catch ( IOException e )\n            {\n                connectionRefused = true;\n                // System.out.println( toString() + \" connection refused\" );\n            }\n        }\n        return channel.isConnected();\n    }","id":1821,"modified_method":"public boolean connected()\n    {\n        if ( !channel.isBlocking() && !channel.isConnected() && \n            channel.isConnectionPending() )\n        {\n            try\n            {\n                return channel.finishConnect();\n            }\n            catch ( IOException e )\n            {\n                connectionRefused = true;\n                // System.out.println( toString() + \" connection refused\" );\n            }\n        }\n        return channel.isConnected();\n    }","commit_id":"12f003c4c82fa01756e3a877c79fcf079595a934","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean getLog()\n    {\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        log( \"Get log\" );\n        try\n        {\n            int read = connection.read();\n            if ( read > 0 )\n            {\n                buffer.flip();\n                if ( logToWrite.position() + read <= logLength )\n                {\n                    logToWrite.write( buffer );\n                }\n                else\n                {\n                    int readLimit = buffer.limit();\n                    int logLimit = (int) (logLength - logToWrite.position()); \n                    buffer.limit( logLimit );\n                    logToWrite.write( buffer );\n                    buffer.limit( readLimit );\n                    byte[] pushData = new byte[readLimit - logLimit];\n                    buffer.get( pushData );\n                    connection.pushBackReadData( pushData );\n                }\n                if ( logToWrite.position() >= logLength )\n                {\n                    log( \"Log transfer complete\" );\n                    if ( slave.getVersion() < (masterVersion - 1) )\n                    {\n                        setStatus( Status.SETUP_REQUEST );\n                    }\n                    else\n                    {\n                        setStatus( Status.GET_MESSAGE );\n                    }\n                    logToWrite.close();\n                    tempFile.renameTo( \n                        new File( slave.getLogName( logVersionWriting ) ) );\n                    logVersionWriting = -1;\n                    tempFile = null;\n                    logToWrite = null;\n                    slave.tryApplyNewLog();\n                }\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        catch ( IOException e )\n        {\n            close();\n            log( \"Error getting log.\", e );\n            return true;\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","id":1822,"modified_method":"private boolean getLog()\n    {\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        log( \"Get log\" );\n        try\n        {\n            int read = connection.read();\n            if ( read > 0 )\n            {\n                buffer.flip();\n                if ( logToWrite.position() + read <= logLength )\n                {\n                    logToWrite.write( buffer );\n                }\n                else\n                {\n                    int readLimit = buffer.limit();\n                    int logLimit = (int) (logLength - logToWrite.position()); \n                    buffer.limit( logLimit );\n                    logToWrite.write( buffer );\n                    buffer.limit( readLimit );\n                    byte[] pushData = new byte[readLimit - logLimit];\n                    buffer.get( pushData );\n                    connection.pushBackReadData( pushData );\n                }\n                if ( logToWrite.position() >= logLength )\n                {\n                    log( \"Log transfer complete\" );\n                    if ( slave.getVersion() < (masterVersion - 1) )\n                    {\n                        setStatus( Status.SETUP_REQUEST );\n                    }\n                    else\n                    {\n                        setStatus( Status.GET_MESSAGE );\n                    }\n                    logToWrite.close();\n                    String newName = slave.getLogName( logVersionWriting );\n                    File newLog = new File( newName );\n                    if ( newLog.exists() )\n                    {\n                        log( \"Error new log file[\" + newName + \n                                \"] already exist\" );\n                        close();\n                    }\n                    if ( !tempFile.renameTo( new File( newName ) ) )\n                    {\n                        log( \"Unable to move log to \" + newName );\n                        close();\n                    }\n                    logVersionWriting = -1;\n                    tempFile = null;\n                    logToWrite = null;\n                    // slave.tryApplyNewLog();\n                }\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        catch ( IOException e )\n        {\n            close();\n            log( \"Error getting log.\", e );\n            return true;\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","commit_id":"12f003c4c82fa01756e3a877c79fcf079595a934","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean setupRequest()\n    {\n        long version = slave.getVersion() + 1;\n        while ( version < masterVersion )\n        {\n            if ( slave.hasLog( version ) )\n            {\n                version++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        if ( version == masterVersion )\n        {\n            setStatus( Status.GET_MESSAGE );\n            return true;\n        }\n        if ( retries > 20 )\n        {\n            close();\n        }\n        if ( !acquireWriteBuffer() )\n        {\n            retries++;\n            return false;\n        }\n        buffer.put( HeaderConstants.REQUEST_LOG );\n        buffer.putLong( version );\n        buffer.flip();\n        log( \"Setup request: \" + version );\n        setStatus( Status.SEND_REQUEST );\n        retries = 0;\n        return true;\n    }","id":1823,"modified_method":"private boolean setupRequest()\n    {\n        long version = slave.getVersion();\n        while ( version < masterVersion )\n        {\n            if ( slave.hasLog( version ) )\n            {\n                version++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        if ( version == masterVersion )\n        {\n            setStatus( Status.GET_MESSAGE );\n            return true;\n        }\n        if ( retries > 20 )\n        {\n            close();\n        }\n        if ( !acquireWriteBuffer() )\n        {\n            retries++;\n            return false;\n        }\n        buffer.put( HeaderConstants.REQUEST_LOG );\n        buffer.putLong( version );\n        buffer.flip();\n        log( \"Setup request: \" + version );\n        setStatus( Status.SEND_REQUEST );\n        retries = 0;\n        return true;\n    }","commit_id":"12f003c4c82fa01756e3a877c79fcf079595a934","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean getMessage()\n    {\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        try\n        {\n            // HEADER(1) + VERSION(8) + LOG_LENGTH(8)\n            buffer.limit( 17 );\n            int read = connection.read();\n            if ( read == 17 )\n            {\n                buffer.flip();\n                byte request = buffer.get();\n                if ( request != HeaderConstants.OFFER_LOG )\n                {\n                    log( \"Unkown request: \" + request );\n                    close();\n                    return true;\n                }\n                long version = buffer.getLong();\n                if ( version < slave.getVersion() )\n                {\n                    log( \"Got wrong version [\" + version + \"]\" );\n                    setStatus( Status.SETUP_NOT_OK );\n                    return true;\n                }\n                logLength = buffer.getLong();\n                log( \"Got offer: \" + version + \",\" + logLength );\n                if ( !slave.hasLog( version ) )\n                {\n                    try\n                    {\n                        logVersionWriting = version;\n                        tempFile = File.createTempFile( \"logical-log\", \n                            Long.toString( version ) );\n                        logToWrite = new RandomAccessFile( tempFile, \n                            \"rw\").getChannel();\n                    }\n                    catch ( IOException e )\n                    {\n                        close();\n                        throw new SocketException( \n                            \"Unable to setup logical log[\" + version + \n                            \"] for writing\", e );\n                    }\n                    setStatus( Status.SETUP_OK );\n                }\n                else\n                {\n                    log( \"We already have log version[\" + version + \"]\" );\n                    setStatus( Status.SETUP_NOT_OK );\n                }\n                retries = 0;\n                return true;\n            }\n            else\n            {\n                if ( read > 0 )\n                {\n                    connection.pushBackAllReadData();\n                }\n                return false;\n            }\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","id":1824,"modified_method":"private boolean getMessage()\n    {\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        try\n        {\n            // HEADER(1) + VERSION(8) + LOG_LENGTH(8)\n            buffer.limit( 17 );\n            int read = connection.read();\n            if ( read == 17 )\n            {\n                buffer.flip();\n                byte request = buffer.get();\n                if ( request != HeaderConstants.OFFER_LOG )\n                {\n                    log( \"Unkown request: \" + request );\n                    close();\n                    return true;\n                }\n                long version = buffer.getLong();\n                if ( version < slave.getVersion() )\n                {\n                    log( \"Got wrong version [\" + version + \"]\" );\n                    setStatus( Status.SETUP_NOT_OK );\n                    return true;\n                }\n                logLength = buffer.getLong();\n                log( \"Got offer: \" + version + \",\" + logLength );\n                if ( !slave.hasLog( version ) )\n                {\n                    try\n                    {\n                        logVersionWriting = version;\n                        tempFile = new File( \"logical-transfer.v\" + \n                                Long.toString( version ) );\n                        logToWrite = new RandomAccessFile( tempFile, \n                            \"rw\").getChannel();\n                        logToWrite.truncate( 0 );\n                    }\n                    catch ( IOException e )\n                    {\n                        close();\n                        throw new SocketException( \n                            \"Unable to setup logical log[\" + version + \n                            \"] for writing\", e );\n                    }\n                    setStatus( Status.SETUP_OK );\n                }\n                else\n                {\n                    log( \"We already have log version[\" + version + \"]\" );\n                    setStatus( Status.SETUP_NOT_OK );\n                }\n                retries = 0;\n                return true;\n            }\n            else\n            {\n                if ( read > 0 )\n                {\n                    connection.pushBackAllReadData();\n                }\n                return false;\n            }\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","commit_id":"12f003c4c82fa01756e3a877c79fcf079595a934","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean sendLog()\n    {\n        if ( retries > 20 )\n        {\n            close();\n        }\n        connection.write();\n        log( \"Send log: \" + logVersionToSend );\n        if ( !buffer.hasRemaining() )\n        {\n            buffer.clear();\n            try\n            {\n                if ( logToSend.read( buffer ) <= 0 )\n                {\n                    releaseWriteBuffer();\n                    setStatus( Status.GET_MESSAGE );\n                    if ( master.hasLog( logVersionToSend + 1 ) )\n                    {\n                        logVersionToSend = logVersionToSend++;\n                        logLength = master.getLogLength( logVersionToSend );\n                        logToSend = master.getLog( logVersionToSend );\n                    }\n                    else\n                    {\n                        logLength = -1;\n                        logVersionToSend = -1;\n                        logToSend = null;\n                    }\n                    return true;\n                }\n                buffer.flip();\n            }\n            catch ( IOException e )\n            {\n                log( \"Error reading log\", e );\n                close();\n                return true;\n            }\n        }\n        retries++;\n        return false;\n    }","id":1825,"modified_method":"private boolean sendLog()\n    {\n        if ( retries > 20 )\n        {\n            close();\n        }\n        connection.write();\n        log( \"Send log: \" + logVersionToSend );\n        if ( !buffer.hasRemaining() )\n        {\n            buffer.clear();\n            try\n            {\n                if ( logToSend.read( buffer ) <= 0 )\n                {\n                    releaseWriteBuffer();\n                    setStatus( Status.GET_MESSAGE );\n//                    if ( master.hasLog( logVersionToSend + 1 ) )\n//                    {\n//                        logVersionToSend = logVersionToSend++;\n//                        logLength = master.getLogLength( logVersionToSend );\n//                        logToSend = master.getLog( logVersionToSend );\n//                    }\n//                    else\n//                    {\n                        logLength = -1;\n                        logVersionToSend = -1;\n                        logToSend = null;\n//                    }\n                    return true;\n                }\n                buffer.flip();\n            }\n            catch ( IOException e )\n            {\n                log( \"Error reading log\", e );\n                close();\n                return true;\n            }\n        }\n        retries++;\n        return false;\n    }","commit_id":"12f003c4c82fa01756e3a877c79fcf079595a934","url":"https://github.com/neo4j/neo4j"},{"original_method":"public HandleSlaveConnection( Connection connection, Master master, \n        long slaveVersion )\n    {\n        super( connection, master );\n        this.master = master;\n        if ( master.hasLog( slaveVersion ) )\n        {\n            logVersionToSend = slaveVersion;\n            logLength = master.getLogLength( slaveVersion );\n            \n            try\n            {\n                logToSend = master.getLog( slaveVersion );\n            }\n            catch ( IOException e )\n            {\n                throw new SocketException( \"Error getting next log\", e );\n            }\n        }\n        setStatus( Status.GET_MESSAGE );\n    }","id":1826,"modified_method":"public HandleSlaveConnection( Connection connection, Master master, \n        long slaveVersion )\n    {\n        super( connection, master );\n        this.master = master;\n/*        if ( master.hasLog( slaveVersion ) )\n        {\n            logVersionToSend = slaveVersion;\n            logLength = master.getLogLength( slaveVersion );\n            \n            try\n            {\n                logToSend = master.getLog( slaveVersion );\n            }\n            catch ( IOException e )\n            {\n                throw new SocketException( \"Error getting next log\", e );\n            }\n        }*/\n        setStatus( Status.GET_MESSAGE );\n    }","commit_id":"12f003c4c82fa01756e3a877c79fcf079595a934","url":"https://github.com/neo4j/neo4j"},{"original_method":"private synchronized boolean getMessage()\n    {\n        if ( logVersionToSend > -1 && logLength > -1 && logToSend != null )\n        {\n            setStatus( Status.SETUP_OFFER_LOG );\n            return true;\n        }\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        try\n        {\n            buffer.limit( 9 );\n            int read = connection.read();\n            if ( read == 9 )\n            {\n                buffer.flip();\n                byte request = buffer.get();\n                if ( request != HeaderConstants.REQUEST_LOG )\n                {\n                    log( \"Unkown request: \" + request );\n                    close();\n                    return true;\n                }\n                logVersionToSend = buffer.getLong();\n                if ( logVersionToSend > master.getVersion() )\n                {\n                    log( \"Got wrong version [\" + logVersionToSend + \"]\" );\n                    return true;\n                }\n                log( \"Slave request: \" + logVersionToSend );\n                if ( master.hasLog( logVersionToSend ) )\n                {\n                    try\n                    {\n                        logToSend = master.getLog( logVersionToSend );\n                        logLength = master.getLogLength( logVersionToSend );\n                    }\n                    catch ( IOException e )\n                    {\n                        close();\n                        throw new SocketException( \n                            \"Unable to get logical log[\" + logVersionToSend + \n                            \"]\", e );\n                    }\n                    setStatus( Status.SETUP_OFFER_LOG );\n                }\n                else\n                {\n                    log( \"No such log version[\" + logVersionToSend + \"]\" );\n                    return true;\n                }\n                retries = 0;\n                return true;\n            }\n            else\n            {\n                if ( read > 0 )\n                {\n                    connection.pushBackAllReadData();\n                }\n                return false;\n            }\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","id":1827,"modified_method":"private synchronized boolean getMessage()\n    {\n//        if ( logVersionToSend > -1 && logLength > -1 && logToSend != null )\n//        {\n//            setStatus( Status.SETUP_OFFER_LOG );\n//            return true;\n//        }\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        try\n        {\n            buffer.limit( 9 );\n            int read = connection.read();\n            if ( read == 9 )\n            {\n                buffer.flip();\n                byte request = buffer.get();\n                if ( request != HeaderConstants.REQUEST_LOG )\n                {\n                    log( \"Unkown request: \" + request );\n                    close();\n                    return true;\n                }\n                logVersionToSend = buffer.getLong();\n                if ( logVersionToSend > master.getVersion() )\n                {\n                    log( \"Got wrong version [\" + logVersionToSend + \"]\" );\n                    return true;\n                }\n                log( \"Slave request: \" + logVersionToSend );\n                if ( master.hasLog( logVersionToSend ) )\n                {\n                    try\n                    {\n                        logToSend = master.getLog( logVersionToSend );\n                        logLength = master.getLogLength( logVersionToSend );\n                    }\n                    catch ( IOException e )\n                    {\n                        close();\n                        throw new SocketException( \n                            \"Unable to get logical log[\" + logVersionToSend + \n                            \"]\", e );\n                    }\n                    setStatus( Status.SETUP_OFFER_LOG );\n                }\n                else\n                {\n                    log( \"No such log version[\" + logVersionToSend + \"]\" );\n                    return true;\n                }\n                retries = 0;\n                return true;\n            }\n            else\n            {\n                if ( read > 0 )\n                {\n                    connection.pushBackAllReadData();\n                }\n                return false;\n            }\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","commit_id":"12f003c4c82fa01756e3a877c79fcf079595a934","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized boolean offerLogToSlave( long version )\n    {\n        if ( logLength != -1 || logVersionToSend != -1 || logToSend != null )\n        {\n            return false;\n        }\n        try\n        {\n            logToSend = master.getLog( version );\n            logLength = master.getLogLength( version );\n            logVersionToSend = version;\n            return true;\n        }\n        catch ( IOException e )\n        {\n            throw new SocketException( \n                \"Unable to get logical log[\" + logVersionToSend + \n                \"]\", e );\n        }\n    }","id":1828,"modified_method":"public synchronized boolean offerLogToSlave( long version )\n    {\n        if ( !getConnection().connected() )\n        {\n            System.out.println( \"Not connected\" );\n            return false;\n        }\n        if ( logLength != -1 || logVersionToSend != -1 || logToSend != null )\n        {\n            // we already sending a version\n            return true;\n        }\n        try\n        {\n            if ( getStatus() == Status.GET_MESSAGE )\n            {\n                logToSend = master.getLog( version );\n                logLength = master.getLogLength( version );\n                logVersionToSend = version;\n                setStatus( Status.SETUP_OFFER_LOG );\n            }\n            return true;\n        }\n        catch ( IOException e )\n        {\n            throw new SocketException( \n                \"Unable to get logical log[\" + logVersionToSend + \n                \"]\", e );\n        }\n    }","commit_id":"12f003c4c82fa01756e3a877c79fcf079595a934","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected void log( String message )\n    {\n        // System.out.println( getStatus() + \" \" + this + \": \" + message );\n    }","id":1829,"modified_method":"protected void log( String message )\n    {\n        System.out.println( getStatus() + \" \" + this + \": \" + message );\n    }","commit_id":"12f003c4c82fa01756e3a877c79fcf079595a934","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void run()\n    {\n        try\n        {\n            while ( run )\n            {\n                Long logVersion = queue.poll();\n                if ( logVersion != null )\n                {\n                    if ( logVersion == xaDs.getCurrentLogVersion() )\n                    {\n                        ReadableByteChannel logChannel = \n                            xaDs.getLogicalLog( logVersion );\n                        xaDs.applyLog( logChannel );\n                    }\n                }\n                else\n                {\n                    synchronized ( this )\n                    {\n                        try\n                        {\n                            this.wait( 250 );\n                        }\n                        catch ( InterruptedException e )\n                        {\n                            interrupted();\n                        }\n                    }\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            System.err.println( \"Failed to apply log: \" + e );\n            e.printStackTrace();\n        }\n        finally\n        {\n            run = false;\n        }\n    }","id":1830,"modified_method":"public void run()\n    {\n        try\n        {\n            while ( run )\n            {\n//                Long logVersion = queue.poll();\n//                if ( logVersion != null )\n//                {\n                long logVersion = xaDs.getCurrentLogVersion();\n                if ( xaDs.hasLogicalLog( logVersion ) )\n                {\n                    ReadableByteChannel logChannel = \n                        xaDs.getLogicalLog( logVersion );\n                    xaDs.applyLog( logChannel );\n                }\n                else\n                {\n                    synchronized ( this )\n                    {\n                        try\n                        {\n                            this.wait( 250 );\n                        }\n                        catch ( InterruptedException e )\n                        {\n                            interrupted();\n                        }\n                    }\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            System.err.println( \"Failed to apply log: \" + e );\n            e.printStackTrace();\n        }\n        finally\n        {\n            run = false;\n        }\n    }","commit_id":"12f003c4c82fa01756e3a877c79fcf079595a934","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void rotateLogAndPushToSlaves() throws IOException\n    {\n        long version = getVersion();\n        xaDs.rotateLogicalLog();\n        for ( HandleSlaveConnection slave : slaveList )\n        {\n            if ( !slave.offerLogToSlave( version ) )\n            {\n                System.out.println( \"Failed to offer log to slave: \" + slave );\n            }\n        }\n    }","id":1831,"modified_method":"public void rotateLogAndPushToSlaves() throws IOException\n    {\n        if ( slaveList.size() == 0 )\n        {\n            return;\n        }\n        long version = getVersion();\n        xaDs.rotateLogicalLog();\n        ArrayList<HandleSlaveConnection> newList = \n            new ArrayList<HandleSlaveConnection>();\n        for ( HandleSlaveConnection slave : slaveList )\n        {\n            if ( !slave.offerLogToSlave( version ) )\n            {\n                System.out.println( \"Failed to offer log to slave: \" + slave );\n            }\n            else\n            {\n                newList.add( slave );\n            }\n        }\n        slaveList = newList;\n    }","commit_id":"12f003c4c82fa01756e3a877c79fcf079595a934","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ReadOnlySlave( String path, Map<String,String> params, \n        String masterIp, int masterPort )\n    {\n        this.graphDb = new EmbeddedReadOnlyGraphDatabase( path, params );\n        this.xaDs = (NeoStoreXaDataSource) graphDb.getConfig().getTxModule()\n            .getXaDataSourceManager().getXaDataSource( \"nioneodb\" );\n        this.xaDs.makeBackupSlave();\n        recover();\n\n        jobEater = new JobEater();\n        logApplier = new LogApplier( xaDs );\n        jobEater.start();\n        logApplier.start();\n        \n        this.masterIp = masterIp;\n        this.masterPort = masterPort;\n        masterConnection = new Connection( masterIp, masterPort );\n        if ( !masterConnection.connected() )\n        {\n            if ( masterConnection.connectionRefused() )\n            {\n                throw new SocketException( \"Connection to master[\" + masterIp + \n                    \":\" + masterPort + \"] refused\" );\n            }\n        }\n        jobEater.addJob( new ConnectToMasterJob( masterConnection, this ) );\n    }","id":1832,"modified_method":"public ReadOnlySlave( String path, Map<String,String> params, \n        String masterIp, int masterPort )\n    {\n        this.graphDb = new EmbeddedGraphDatabase( path, params );\n        this.xaDs = (NeoStoreXaDataSource) graphDb.getConfig().getTxModule()\n            .getXaDataSourceManager().getXaDataSource( \"nioneodb\" );\n        this.xaDs.makeBackupSlave();\n        recover();\n\n        jobEater = new JobEater();\n        logApplier = new LogApplier( xaDs );\n        jobEater.start();\n        logApplier.start();\n        \n        this.masterIp = masterIp;\n        this.masterPort = masterPort;\n        masterConnection = new Connection( masterIp, masterPort );\n        while ( !masterConnection.connected() )\n        {\n            if ( masterConnection.connectionRefused() )\n            {\n                throw new SocketException( \"Connection to master[\" + masterIp + \n                    \":\" + masterPort + \"] refused\" );\n            }\n        }\n        jobEater.addJob( new ConnectToMasterJob( masterConnection, this ) );\n    }","commit_id":"12f003c4c82fa01756e3a877c79fcf079595a934","url":"https://github.com/neo4j/neo4j"},{"original_method":"public boolean connected()\n    {\n        if ( !channel.isBlocking() && !channel.isConnected() && \n            channel.isConnectionPending() )\n        {\n            try\n            {\n                channel.finishConnect();\n            }\n            catch ( IOException e )\n            {\n                connectionRefused = true;\n                // System.out.println( toString() + \" connection refused\" );\n            }\n        }\n        return channel.isConnected();\n    }","id":1833,"modified_method":"public boolean connected()\n    {\n        if ( !channel.isBlocking() && !channel.isConnected() && \n            channel.isConnectionPending() )\n        {\n            try\n            {\n                return channel.finishConnect();\n            }\n            catch ( IOException e )\n            {\n                connectionRefused = true;\n                // System.out.println( toString() + \" connection refused\" );\n            }\n        }\n        return channel.isConnected();\n    }","commit_id":"bb6f48ae9424014df9a423f9a395c2b731cb48a0","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean getMessage()\n    {\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        try\n        {\n            // HEADER(1) + VERSION(8) + LOG_LENGTH(8)\n            buffer.limit( 17 );\n            int read = connection.read();\n            if ( read == 17 )\n            {\n                buffer.flip();\n                byte request = buffer.get();\n                if ( request != HeaderConstants.OFFER_LOG )\n                {\n                    log( \"Unkown request: \" + request );\n                    close();\n                    return true;\n                }\n                long version = buffer.getLong();\n                if ( version < slave.getVersion() )\n                {\n                    log( \"Got wrong version [\" + version + \"]\" );\n                    setStatus( Status.SETUP_NOT_OK );\n                    return true;\n                }\n                logLength = buffer.getLong();\n                log( \"Got offer: \" + version + \",\" + logLength );\n                if ( !slave.hasLog( version ) )\n                {\n                    try\n                    {\n                        logVersionWriting = version;\n                        tempFile = File.createTempFile( \"logical-log\", \n                            Long.toString( version ) );\n                        logToWrite = new RandomAccessFile( tempFile, \n                            \"rw\").getChannel();\n                    }\n                    catch ( IOException e )\n                    {\n                        close();\n                        throw new SocketException( \n                            \"Unable to setup logical log[\" + version + \n                            \"] for writing\", e );\n                    }\n                    setStatus( Status.SETUP_OK );\n                }\n                else\n                {\n                    log( \"We already have log version[\" + version + \"]\" );\n                    setStatus( Status.SETUP_NOT_OK );\n                }\n                retries = 0;\n                return true;\n            }\n            else\n            {\n                if ( read > 0 )\n                {\n                    connection.pushBackAllReadData();\n                }\n                return false;\n            }\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","id":1834,"modified_method":"private boolean getMessage()\n    {\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        try\n        {\n            // HEADER(1) + VERSION(8) + LOG_LENGTH(8)\n            buffer.limit( 17 );\n            int read = connection.read();\n            if ( read == 17 )\n            {\n                buffer.flip();\n                byte request = buffer.get();\n                if ( request != HeaderConstants.OFFER_LOG )\n                {\n                    log( \"Unkown request: \" + request );\n                    close();\n                    return true;\n                }\n                long version = buffer.getLong();\n                if ( version < slave.getVersion() )\n                {\n                    log( \"Got wrong version [\" + version + \"]\" );\n                    setStatus( Status.SETUP_NOT_OK );\n                    return true;\n                }\n                logLength = buffer.getLong();\n                log( \"Got offer: \" + version + \",\" + logLength );\n                if ( !slave.hasLog( version ) )\n                {\n                    try\n                    {\n                        logVersionWriting = version;\n                        tempFile = new File( \"logical-transfer.v\" + \n                                Long.toString( version ) );\n                        logToWrite = new RandomAccessFile( tempFile, \n                            \"rw\").getChannel();\n                        logToWrite.truncate( 0 );\n                    }\n                    catch ( IOException e )\n                    {\n                        close();\n                        throw new SocketException( \n                            \"Unable to setup logical log[\" + version + \n                            \"] for writing\", e );\n                    }\n                    setStatus( Status.SETUP_OK );\n                }\n                else\n                {\n                    log( \"We already have log version[\" + version + \"]\" );\n                    setStatus( Status.SETUP_NOT_OK );\n                }\n                retries = 0;\n                return true;\n            }\n            else\n            {\n                if ( read > 0 )\n                {\n                    connection.pushBackAllReadData();\n                }\n                return false;\n            }\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","commit_id":"bb6f48ae9424014df9a423f9a395c2b731cb48a0","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean getLog()\n    {\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        log( \"Get log\" );\n        try\n        {\n            int read = connection.read();\n            if ( read > 0 )\n            {\n                buffer.flip();\n                if ( logToWrite.position() + read <= logLength )\n                {\n                    logToWrite.write( buffer );\n                }\n                else\n                {\n                    int readLimit = buffer.limit();\n                    int logLimit = (int) (logLength - logToWrite.position()); \n                    buffer.limit( logLimit );\n                    logToWrite.write( buffer );\n                    buffer.limit( readLimit );\n                    byte[] pushData = new byte[readLimit - logLimit];\n                    buffer.get( pushData );\n                    connection.pushBackReadData( pushData );\n                }\n                if ( logToWrite.position() >= logLength )\n                {\n                    log( \"Log transfer complete\" );\n                    if ( slave.getVersion() < (masterVersion - 1) )\n                    {\n                        setStatus( Status.SETUP_REQUEST );\n                    }\n                    else\n                    {\n                        setStatus( Status.GET_MESSAGE );\n                    }\n                    logToWrite.close();\n                    tempFile.renameTo( \n                        new File( slave.getLogName( logVersionWriting ) ) );\n                    logVersionWriting = -1;\n                    tempFile = null;\n                    logToWrite = null;\n                    slave.tryApplyNewLog();\n                }\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        catch ( IOException e )\n        {\n            close();\n            log( \"Error getting log.\", e );\n            return true;\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","id":1835,"modified_method":"private boolean getLog()\n    {\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        log( \"Get log\" );\n        try\n        {\n            int read = connection.read();\n            if ( read > 0 )\n            {\n                buffer.flip();\n                if ( logToWrite.position() + read <= logLength )\n                {\n                    logToWrite.write( buffer );\n                }\n                else\n                {\n                    int readLimit = buffer.limit();\n                    int logLimit = (int) (logLength - logToWrite.position()); \n                    buffer.limit( logLimit );\n                    logToWrite.write( buffer );\n                    buffer.limit( readLimit );\n                    byte[] pushData = new byte[readLimit - logLimit];\n                    buffer.get( pushData );\n                    connection.pushBackReadData( pushData );\n                }\n                if ( logToWrite.position() >= logLength )\n                {\n                    log( \"Log transfer complete\" );\n                    if ( slave.getVersion() < (masterVersion - 1) )\n                    {\n                        setStatus( Status.SETUP_REQUEST );\n                    }\n                    else\n                    {\n                        setStatus( Status.GET_MESSAGE );\n                    }\n                    logToWrite.close();\n                    String newName = slave.getLogName( logVersionWriting );\n                    File newLog = new File( newName );\n                    if ( newLog.exists() )\n                    {\n                        log( \"Error new log file[\" + newName + \n                                \"] already exist\" );\n                        close();\n                    }\n                    if ( !tempFile.renameTo( new File( newName ) ) )\n                    {\n                        log( \"Unable to move log to \" + newName );\n                        close();\n                    }\n                    logVersionWriting = -1;\n                    tempFile = null;\n                    logToWrite = null;\n                    // slave.tryApplyNewLog();\n                }\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        catch ( IOException e )\n        {\n            close();\n            log( \"Error getting log.\", e );\n            return true;\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","commit_id":"bb6f48ae9424014df9a423f9a395c2b731cb48a0","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean setupRequest()\n    {\n        long version = slave.getVersion() + 1;\n        while ( version < masterVersion )\n        {\n            if ( slave.hasLog( version ) )\n            {\n                version++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        if ( version == masterVersion )\n        {\n            setStatus( Status.GET_MESSAGE );\n            return true;\n        }\n        if ( retries > 20 )\n        {\n            close();\n        }\n        if ( !acquireWriteBuffer() )\n        {\n            retries++;\n            return false;\n        }\n        buffer.put( HeaderConstants.REQUEST_LOG );\n        buffer.putLong( version );\n        buffer.flip();\n        log( \"Setup request: \" + version );\n        setStatus( Status.SEND_REQUEST );\n        retries = 0;\n        return true;\n    }","id":1836,"modified_method":"private boolean setupRequest()\n    {\n        long version = slave.getVersion();\n        while ( version < masterVersion )\n        {\n            if ( slave.hasLog( version ) )\n            {\n                version++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        if ( version == masterVersion )\n        {\n            setStatus( Status.GET_MESSAGE );\n            return true;\n        }\n        if ( retries > 20 )\n        {\n            close();\n        }\n        if ( !acquireWriteBuffer() )\n        {\n            retries++;\n            return false;\n        }\n        buffer.put( HeaderConstants.REQUEST_LOG );\n        buffer.putLong( version );\n        buffer.flip();\n        log( \"Setup request: \" + version );\n        setStatus( Status.SEND_REQUEST );\n        retries = 0;\n        return true;\n    }","commit_id":"bb6f48ae9424014df9a423f9a395c2b731cb48a0","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean sendLog()\n    {\n        if ( retries > 20 )\n        {\n            close();\n        }\n        connection.write();\n        log( \"Send log: \" + logVersionToSend );\n        if ( !buffer.hasRemaining() )\n        {\n            buffer.clear();\n            try\n            {\n                if ( logToSend.read( buffer ) <= 0 )\n                {\n                    releaseWriteBuffer();\n                    setStatus( Status.GET_MESSAGE );\n                    if ( master.hasLog( logVersionToSend + 1 ) )\n                    {\n                        logVersionToSend = logVersionToSend++;\n                        logLength = master.getLogLength( logVersionToSend );\n                        logToSend = master.getLog( logVersionToSend );\n                    }\n                    else\n                    {\n                        logLength = -1;\n                        logVersionToSend = -1;\n                        logToSend = null;\n                    }\n                    return true;\n                }\n                buffer.flip();\n            }\n            catch ( IOException e )\n            {\n                log( \"Error reading log\", e );\n                close();\n                return true;\n            }\n        }\n        retries++;\n        return false;\n    }","id":1837,"modified_method":"private boolean sendLog()\n    {\n        if ( retries > 20 )\n        {\n            close();\n        }\n        connection.write();\n        log( \"Send log: \" + logVersionToSend );\n        if ( !buffer.hasRemaining() )\n        {\n            buffer.clear();\n            try\n            {\n                if ( logToSend.read( buffer ) <= 0 )\n                {\n                    releaseWriteBuffer();\n                    setStatus( Status.GET_MESSAGE );\n//                    if ( master.hasLog( logVersionToSend + 1 ) )\n//                    {\n//                        logVersionToSend = logVersionToSend++;\n//                        logLength = master.getLogLength( logVersionToSend );\n//                        logToSend = master.getLog( logVersionToSend );\n//                    }\n//                    else\n//                    {\n                        logLength = -1;\n                        logVersionToSend = -1;\n                        logToSend = null;\n//                    }\n                    return true;\n                }\n                buffer.flip();\n            }\n            catch ( IOException e )\n            {\n                log( \"Error reading log\", e );\n                close();\n                return true;\n            }\n        }\n        retries++;\n        return false;\n    }","commit_id":"bb6f48ae9424014df9a423f9a395c2b731cb48a0","url":"https://github.com/neo4j/neo4j"},{"original_method":"private synchronized boolean getMessage()\n    {\n        if ( logVersionToSend > -1 && logLength > -1 && logToSend != null )\n        {\n            setStatus( Status.SETUP_OFFER_LOG );\n            return true;\n        }\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        try\n        {\n            buffer.limit( 9 );\n            int read = connection.read();\n            if ( read == 9 )\n            {\n                buffer.flip();\n                byte request = buffer.get();\n                if ( request != HeaderConstants.REQUEST_LOG )\n                {\n                    log( \"Unkown request: \" + request );\n                    close();\n                    return true;\n                }\n                logVersionToSend = buffer.getLong();\n                if ( logVersionToSend > master.getVersion() )\n                {\n                    log( \"Got wrong version [\" + logVersionToSend + \"]\" );\n                    return true;\n                }\n                log( \"Slave request: \" + logVersionToSend );\n                if ( master.hasLog( logVersionToSend ) )\n                {\n                    try\n                    {\n                        logToSend = master.getLog( logVersionToSend );\n                        logLength = master.getLogLength( logVersionToSend );\n                    }\n                    catch ( IOException e )\n                    {\n                        close();\n                        throw new SocketException( \n                            \"Unable to get logical log[\" + logVersionToSend + \n                            \"]\", e );\n                    }\n                    setStatus( Status.SETUP_OFFER_LOG );\n                }\n                else\n                {\n                    log( \"No such log version[\" + logVersionToSend + \"]\" );\n                    return true;\n                }\n                retries = 0;\n                return true;\n            }\n            else\n            {\n                if ( read > 0 )\n                {\n                    connection.pushBackAllReadData();\n                }\n                return false;\n            }\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","id":1838,"modified_method":"private synchronized boolean getMessage()\n    {\n//        if ( logVersionToSend > -1 && logLength > -1 && logToSend != null )\n//        {\n//            setStatus( Status.SETUP_OFFER_LOG );\n//            return true;\n//        }\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        try\n        {\n            buffer.limit( 9 );\n            int read = connection.read();\n            if ( read == 9 )\n            {\n                buffer.flip();\n                byte request = buffer.get();\n                if ( request != HeaderConstants.REQUEST_LOG )\n                {\n                    log( \"Unkown request: \" + request );\n                    close();\n                    return true;\n                }\n                logVersionToSend = buffer.getLong();\n                if ( logVersionToSend > master.getVersion() )\n                {\n                    log( \"Got wrong version [\" + logVersionToSend + \"]\" );\n                    return true;\n                }\n                log( \"Slave request: \" + logVersionToSend );\n                if ( master.hasLog( logVersionToSend ) )\n                {\n                    try\n                    {\n                        logToSend = master.getLog( logVersionToSend );\n                        logLength = master.getLogLength( logVersionToSend );\n                    }\n                    catch ( IOException e )\n                    {\n                        close();\n                        throw new SocketException( \n                            \"Unable to get logical log[\" + logVersionToSend + \n                            \"]\", e );\n                    }\n                    setStatus( Status.SETUP_OFFER_LOG );\n                }\n                else\n                {\n                    log( \"No such log version[\" + logVersionToSend + \"]\" );\n                    return true;\n                }\n                retries = 0;\n                return true;\n            }\n            else\n            {\n                if ( read > 0 )\n                {\n                    connection.pushBackAllReadData();\n                }\n                return false;\n            }\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","commit_id":"bb6f48ae9424014df9a423f9a395c2b731cb48a0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized boolean offerLogToSlave( long version )\n    {\n        if ( logLength != -1 || logVersionToSend != -1 || logToSend != null )\n        {\n            return false;\n        }\n        try\n        {\n            logToSend = master.getLog( version );\n            logLength = master.getLogLength( version );\n            logVersionToSend = version;\n            return true;\n        }\n        catch ( IOException e )\n        {\n            throw new SocketException( \n                \"Unable to get logical log[\" + logVersionToSend + \n                \"]\", e );\n        }\n    }","id":1839,"modified_method":"public synchronized boolean offerLogToSlave( long version )\n    {\n        if ( !getConnection().connected() )\n        {\n            System.out.println( \"Not connected\" );\n            return false;\n        }\n        if ( logLength != -1 || logVersionToSend != -1 || logToSend != null )\n        {\n            // we already sending a version\n            return true;\n        }\n        try\n        {\n            if ( getStatus() == Status.GET_MESSAGE )\n            {\n                logToSend = master.getLog( version );\n                logLength = master.getLogLength( version );\n                logVersionToSend = version;\n                setStatus( Status.SETUP_OFFER_LOG );\n            }\n            return true;\n        }\n        catch ( IOException e )\n        {\n            throw new SocketException( \n                \"Unable to get logical log[\" + logVersionToSend + \n                \"]\", e );\n        }\n    }","commit_id":"bb6f48ae9424014df9a423f9a395c2b731cb48a0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public HandleSlaveConnection( Connection connection, Master master, \n        long slaveVersion )\n    {\n        super( connection, master );\n        this.master = master;\n        if ( master.hasLog( slaveVersion ) )\n        {\n            logVersionToSend = slaveVersion;\n            logLength = master.getLogLength( slaveVersion );\n            \n            try\n            {\n                logToSend = master.getLog( slaveVersion );\n            }\n            catch ( IOException e )\n            {\n                throw new SocketException( \"Error getting next log\", e );\n            }\n        }\n        setStatus( Status.GET_MESSAGE );\n    }","id":1840,"modified_method":"public HandleSlaveConnection( Connection connection, Master master, \n        long slaveVersion )\n    {\n        super( connection, master );\n        this.master = master;\n/*        if ( master.hasLog( slaveVersion ) )\n        {\n            logVersionToSend = slaveVersion;\n            logLength = master.getLogLength( slaveVersion );\n            \n            try\n            {\n                logToSend = master.getLog( slaveVersion );\n            }\n            catch ( IOException e )\n            {\n                throw new SocketException( \"Error getting next log\", e );\n            }\n        }*/\n        setStatus( Status.GET_MESSAGE );\n    }","commit_id":"bb6f48ae9424014df9a423f9a395c2b731cb48a0","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected void log( String message )\n    {\n        // System.out.println( getStatus() + \" \" + this + \": \" + message );\n    }","id":1841,"modified_method":"protected void log( String message )\n    {\n        System.out.println( getStatus() + \" \" + this + \": \" + message );\n    }","commit_id":"bb6f48ae9424014df9a423f9a395c2b731cb48a0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void run()\n    {\n        try\n        {\n            while ( run )\n            {\n                Long logVersion = queue.poll();\n                if ( logVersion != null )\n                {\n                    if ( logVersion == xaDs.getCurrentLogVersion() )\n                    {\n                        ReadableByteChannel logChannel = \n                            xaDs.getLogicalLog( logVersion );\n                        xaDs.applyLog( logChannel );\n                    }\n                }\n                else\n                {\n                    synchronized ( this )\n                    {\n                        try\n                        {\n                            this.wait( 250 );\n                        }\n                        catch ( InterruptedException e )\n                        {\n                            interrupted();\n                        }\n                    }\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            System.err.println( \"Failed to apply log: \" + e );\n            e.printStackTrace();\n        }\n        finally\n        {\n            run = false;\n        }\n    }","id":1842,"modified_method":"public void run()\n    {\n        try\n        {\n            while ( run )\n            {\n//                Long logVersion = queue.poll();\n//                if ( logVersion != null )\n//                {\n                long logVersion = xaDs.getCurrentLogVersion();\n                if ( xaDs.hasLogicalLog( logVersion ) )\n                {\n                    ReadableByteChannel logChannel = \n                        xaDs.getLogicalLog( logVersion );\n                    xaDs.applyLog( logChannel );\n                }\n                else\n                {\n                    synchronized ( this )\n                    {\n                        try\n                        {\n                            this.wait( 250 );\n                        }\n                        catch ( InterruptedException e )\n                        {\n                            interrupted();\n                        }\n                    }\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            System.err.println( \"Failed to apply log: \" + e );\n            e.printStackTrace();\n        }\n        finally\n        {\n            run = false;\n        }\n    }","commit_id":"bb6f48ae9424014df9a423f9a395c2b731cb48a0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void rotateLogAndPushToSlaves() throws IOException\n    {\n        long version = getVersion();\n        xaDs.rotateLogicalLog();\n        for ( HandleSlaveConnection slave : slaveList )\n        {\n            if ( !slave.offerLogToSlave( version ) )\n            {\n                System.out.println( \"Failed to offer log to slave: \" + slave );\n            }\n        }\n    }","id":1843,"modified_method":"public void rotateLogAndPushToSlaves() throws IOException\n    {\n        if ( slaveList.size() == 0 )\n        {\n            return;\n        }\n        long version = getVersion();\n        xaDs.rotateLogicalLog();\n        ArrayList<HandleSlaveConnection> newList = \n            new ArrayList<HandleSlaveConnection>();\n        for ( HandleSlaveConnection slave : slaveList )\n        {\n            if ( !slave.offerLogToSlave( version ) )\n            {\n                System.out.println( \"Failed to offer log to slave: \" + slave );\n            }\n            else\n            {\n                newList.add( slave );\n            }\n        }\n        slaveList = newList;\n    }","commit_id":"bb6f48ae9424014df9a423f9a395c2b731cb48a0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ReadOnlySlave( String path, Map<String,String> params, \n        String masterIp, int masterPort )\n    {\n        this.graphDb = new EmbeddedReadOnlyGraphDatabase( path, params );\n        this.xaDs = (NeoStoreXaDataSource) graphDb.getConfig().getTxModule()\n            .getXaDataSourceManager().getXaDataSource( \"nioneodb\" );\n        this.xaDs.makeBackupSlave();\n        recover();\n\n        jobEater = new JobEater();\n        logApplier = new LogApplier( xaDs );\n        jobEater.start();\n        logApplier.start();\n        \n        this.masterIp = masterIp;\n        this.masterPort = masterPort;\n        masterConnection = new Connection( masterIp, masterPort );\n        if ( !masterConnection.connected() )\n        {\n            if ( masterConnection.connectionRefused() )\n            {\n                throw new SocketException( \"Connection to master[\" + masterIp + \n                    \":\" + masterPort + \"] refused\" );\n            }\n        }\n        jobEater.addJob( new ConnectToMasterJob( masterConnection, this ) );\n    }","id":1844,"modified_method":"public ReadOnlySlave( String path, Map<String,String> params, \n        String masterIp, int masterPort )\n    {\n        this.graphDb = new EmbeddedGraphDatabase( path, params );\n        this.xaDs = (NeoStoreXaDataSource) graphDb.getConfig().getTxModule()\n            .getXaDataSourceManager().getXaDataSource( \"nioneodb\" );\n        this.xaDs.makeBackupSlave();\n        recover();\n\n        jobEater = new JobEater();\n        logApplier = new LogApplier( xaDs );\n        jobEater.start();\n        logApplier.start();\n        \n        this.masterIp = masterIp;\n        this.masterPort = masterPort;\n        masterConnection = new Connection( masterIp, masterPort );\n        while ( !masterConnection.connected() )\n        {\n            if ( masterConnection.connectionRefused() )\n            {\n                throw new SocketException( \"Connection to master[\" + masterIp + \n                    \":\" + masterPort + \"] refused\" );\n            }\n        }\n        jobEater.addJob( new ConnectToMasterJob( masterConnection, this ) );\n    }","commit_id":"bb6f48ae9424014df9a423f9a395c2b731cb48a0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public boolean connected()\n    {\n        if ( !channel.isBlocking() && !channel.isConnected() && \n            channel.isConnectionPending() )\n        {\n            try\n            {\n                channel.finishConnect();\n            }\n            catch ( IOException e )\n            {\n                connectionRefused = true;\n                // System.out.println( toString() + \" connection refused\" );\n            }\n        }\n        return channel.isConnected();\n    }","id":1845,"modified_method":"public boolean connected()\n    {\n        if ( !channel.isBlocking() && !channel.isConnected() && \n            channel.isConnectionPending() )\n        {\n            try\n            {\n                return channel.finishConnect();\n            }\n            catch ( IOException e )\n            {\n                connectionRefused = true;\n                // System.out.println( toString() + \" connection refused\" );\n            }\n        }\n        return channel.isConnected();\n    }","commit_id":"315e5d2a37221dba5dff1f89d503991832de1817","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean getMessage()\n    {\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        try\n        {\n            // HEADER(1) + VERSION(8) + LOG_LENGTH(8)\n            buffer.limit( 17 );\n            int read = connection.read();\n            if ( read == 17 )\n            {\n                buffer.flip();\n                byte request = buffer.get();\n                if ( request != HeaderConstants.OFFER_LOG )\n                {\n                    log( \"Unkown request: \" + request );\n                    close();\n                    return true;\n                }\n                long version = buffer.getLong();\n                if ( version < slave.getVersion() )\n                {\n                    log( \"Got wrong version [\" + version + \"]\" );\n                    setStatus( Status.SETUP_NOT_OK );\n                    return true;\n                }\n                logLength = buffer.getLong();\n                log( \"Got offer: \" + version + \",\" + logLength );\n                if ( !slave.hasLog( version ) )\n                {\n                    try\n                    {\n                        logVersionWriting = version;\n                        tempFile = File.createTempFile( \"logical-log\", \n                            Long.toString( version ) );\n                        logToWrite = new RandomAccessFile( tempFile, \n                            \"rw\").getChannel();\n                    }\n                    catch ( IOException e )\n                    {\n                        close();\n                        throw new SocketException( \n                            \"Unable to setup logical log[\" + version + \n                            \"] for writing\", e );\n                    }\n                    setStatus( Status.SETUP_OK );\n                }\n                else\n                {\n                    log( \"We already have log version[\" + version + \"]\" );\n                    setStatus( Status.SETUP_NOT_OK );\n                }\n                retries = 0;\n                return true;\n            }\n            else\n            {\n                if ( read > 0 )\n                {\n                    connection.pushBackAllReadData();\n                }\n                return false;\n            }\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","id":1846,"modified_method":"private boolean getMessage()\n    {\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        try\n        {\n            // HEADER(1) + VERSION(8) + LOG_LENGTH(8)\n            buffer.limit( 17 );\n            int read = connection.read();\n            if ( read == 17 )\n            {\n                buffer.flip();\n                byte request = buffer.get();\n                if ( request != HeaderConstants.OFFER_LOG )\n                {\n                    log( \"Unkown request: \" + request );\n                    close();\n                    return true;\n                }\n                long version = buffer.getLong();\n                if ( version < slave.getVersion() )\n                {\n                    log( \"Got wrong version [\" + version + \"]\" );\n                    setStatus( Status.SETUP_NOT_OK );\n                    return true;\n                }\n                logLength = buffer.getLong();\n                log( \"Got offer: \" + version + \",\" + logLength );\n                if ( !slave.hasLog( version ) )\n                {\n                    try\n                    {\n                        logVersionWriting = version;\n                        tempFile = new File( \"logical-transfer.v\" + \n                                Long.toString( version ) );\n                        logToWrite = new RandomAccessFile( tempFile, \n                            \"rw\").getChannel();\n                        logToWrite.truncate( 0 );\n                    }\n                    catch ( IOException e )\n                    {\n                        close();\n                        throw new SocketException( \n                            \"Unable to setup logical log[\" + version + \n                            \"] for writing\", e );\n                    }\n                    setStatus( Status.SETUP_OK );\n                }\n                else\n                {\n                    log( \"We already have log version[\" + version + \"]\" );\n                    setStatus( Status.SETUP_NOT_OK );\n                }\n                retries = 0;\n                return true;\n            }\n            else\n            {\n                if ( read > 0 )\n                {\n                    connection.pushBackAllReadData();\n                }\n                return false;\n            }\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","commit_id":"315e5d2a37221dba5dff1f89d503991832de1817","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean getLog()\n    {\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        log( \"Get log\" );\n        try\n        {\n            int read = connection.read();\n            if ( read > 0 )\n            {\n                buffer.flip();\n                if ( logToWrite.position() + read <= logLength )\n                {\n                    logToWrite.write( buffer );\n                }\n                else\n                {\n                    int readLimit = buffer.limit();\n                    int logLimit = (int) (logLength - logToWrite.position()); \n                    buffer.limit( logLimit );\n                    logToWrite.write( buffer );\n                    buffer.limit( readLimit );\n                    byte[] pushData = new byte[readLimit - logLimit];\n                    buffer.get( pushData );\n                    connection.pushBackReadData( pushData );\n                }\n                if ( logToWrite.position() >= logLength )\n                {\n                    log( \"Log transfer complete\" );\n                    if ( slave.getVersion() < (masterVersion - 1) )\n                    {\n                        setStatus( Status.SETUP_REQUEST );\n                    }\n                    else\n                    {\n                        setStatus( Status.GET_MESSAGE );\n                    }\n                    logToWrite.close();\n                    tempFile.renameTo( \n                        new File( slave.getLogName( logVersionWriting ) ) );\n                    logVersionWriting = -1;\n                    tempFile = null;\n                    logToWrite = null;\n                    slave.tryApplyNewLog();\n                }\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        catch ( IOException e )\n        {\n            close();\n            log( \"Error getting log.\", e );\n            return true;\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","id":1847,"modified_method":"private boolean getLog()\n    {\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        log( \"Get log\" );\n        try\n        {\n            int read = connection.read();\n            if ( read > 0 )\n            {\n                buffer.flip();\n                if ( logToWrite.position() + read <= logLength )\n                {\n                    logToWrite.write( buffer );\n                }\n                else\n                {\n                    int readLimit = buffer.limit();\n                    int logLimit = (int) (logLength - logToWrite.position()); \n                    buffer.limit( logLimit );\n                    logToWrite.write( buffer );\n                    buffer.limit( readLimit );\n                    byte[] pushData = new byte[readLimit - logLimit];\n                    buffer.get( pushData );\n                    connection.pushBackReadData( pushData );\n                }\n                if ( logToWrite.position() >= logLength )\n                {\n                    log( \"Log transfer complete\" );\n                    if ( slave.getVersion() < (masterVersion - 1) )\n                    {\n                        setStatus( Status.SETUP_REQUEST );\n                    }\n                    else\n                    {\n                        setStatus( Status.GET_MESSAGE );\n                    }\n                    logToWrite.close();\n                    String newName = slave.getLogName( logVersionWriting );\n                    File newLog = new File( newName );\n                    if ( newLog.exists() )\n                    {\n                        log( \"Error new log file[\" + newName + \n                                \"] already exist\" );\n                        close();\n                    }\n                    if ( !tempFile.renameTo( new File( newName ) ) )\n                    {\n                        log( \"Unable to move log to \" + newName );\n                        close();\n                    }\n                    logVersionWriting = -1;\n                    tempFile = null;\n                    logToWrite = null;\n                    // slave.tryApplyNewLog();\n                }\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        catch ( IOException e )\n        {\n            close();\n            log( \"Error getting log.\", e );\n            return true;\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","commit_id":"315e5d2a37221dba5dff1f89d503991832de1817","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean setupRequest()\n    {\n        long version = slave.getVersion() + 1;\n        while ( version < masterVersion )\n        {\n            if ( slave.hasLog( version ) )\n            {\n                version++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        if ( version == masterVersion )\n        {\n            setStatus( Status.GET_MESSAGE );\n            return true;\n        }\n        if ( retries > 20 )\n        {\n            close();\n        }\n        if ( !acquireWriteBuffer() )\n        {\n            retries++;\n            return false;\n        }\n        buffer.put( HeaderConstants.REQUEST_LOG );\n        buffer.putLong( version );\n        buffer.flip();\n        log( \"Setup request: \" + version );\n        setStatus( Status.SEND_REQUEST );\n        retries = 0;\n        return true;\n    }","id":1848,"modified_method":"private boolean setupRequest()\n    {\n        long version = slave.getVersion();\n        while ( version < masterVersion )\n        {\n            if ( slave.hasLog( version ) )\n            {\n                version++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        if ( version == masterVersion )\n        {\n            setStatus( Status.GET_MESSAGE );\n            return true;\n        }\n        if ( retries > 20 )\n        {\n            close();\n        }\n        if ( !acquireWriteBuffer() )\n        {\n            retries++;\n            return false;\n        }\n        buffer.put( HeaderConstants.REQUEST_LOG );\n        buffer.putLong( version );\n        buffer.flip();\n        log( \"Setup request: \" + version );\n        setStatus( Status.SEND_REQUEST );\n        retries = 0;\n        return true;\n    }","commit_id":"315e5d2a37221dba5dff1f89d503991832de1817","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean sendLog()\n    {\n        if ( retries > 20 )\n        {\n            close();\n        }\n        connection.write();\n        log( \"Send log: \" + logVersionToSend );\n        if ( !buffer.hasRemaining() )\n        {\n            buffer.clear();\n            try\n            {\n                if ( logToSend.read( buffer ) <= 0 )\n                {\n                    releaseWriteBuffer();\n                    setStatus( Status.GET_MESSAGE );\n                    if ( master.hasLog( logVersionToSend + 1 ) )\n                    {\n                        logVersionToSend = logVersionToSend++;\n                        logLength = master.getLogLength( logVersionToSend );\n                        logToSend = master.getLog( logVersionToSend );\n                    }\n                    else\n                    {\n                        logLength = -1;\n                        logVersionToSend = -1;\n                        logToSend = null;\n                    }\n                    return true;\n                }\n                buffer.flip();\n            }\n            catch ( IOException e )\n            {\n                log( \"Error reading log\", e );\n                close();\n                return true;\n            }\n        }\n        retries++;\n        return false;\n    }","id":1849,"modified_method":"private boolean sendLog()\n    {\n        if ( retries > 20 )\n        {\n            close();\n        }\n        connection.write();\n        log( \"Send log: \" + logVersionToSend );\n        if ( !buffer.hasRemaining() )\n        {\n            buffer.clear();\n            try\n            {\n                if ( logToSend.read( buffer ) <= 0 )\n                {\n                    releaseWriteBuffer();\n                    setStatus( Status.GET_MESSAGE );\n//                    if ( master.hasLog( logVersionToSend + 1 ) )\n//                    {\n//                        logVersionToSend = logVersionToSend++;\n//                        logLength = master.getLogLength( logVersionToSend );\n//                        logToSend = master.getLog( logVersionToSend );\n//                    }\n//                    else\n//                    {\n                        logLength = -1;\n                        logVersionToSend = -1;\n                        logToSend = null;\n//                    }\n                    return true;\n                }\n                buffer.flip();\n            }\n            catch ( IOException e )\n            {\n                log( \"Error reading log\", e );\n                close();\n                return true;\n            }\n        }\n        retries++;\n        return false;\n    }","commit_id":"315e5d2a37221dba5dff1f89d503991832de1817","url":"https://github.com/neo4j/neo4j"},{"original_method":"public HandleSlaveConnection( Connection connection, Master master, \n        long slaveVersion )\n    {\n        super( connection, master );\n        this.master = master;\n        if ( master.hasLog( slaveVersion ) )\n        {\n            logVersionToSend = slaveVersion;\n            logLength = master.getLogLength( slaveVersion );\n            \n            try\n            {\n                logToSend = master.getLog( slaveVersion );\n            }\n            catch ( IOException e )\n            {\n                throw new SocketException( \"Error getting next log\", e );\n            }\n        }\n        setStatus( Status.GET_MESSAGE );\n    }","id":1850,"modified_method":"public HandleSlaveConnection( Connection connection, Master master, \n        long slaveVersion )\n    {\n        super( connection, master );\n        this.master = master;\n/*        if ( master.hasLog( slaveVersion ) )\n        {\n            logVersionToSend = slaveVersion;\n            logLength = master.getLogLength( slaveVersion );\n            \n            try\n            {\n                logToSend = master.getLog( slaveVersion );\n            }\n            catch ( IOException e )\n            {\n                throw new SocketException( \"Error getting next log\", e );\n            }\n        }*/\n        setStatus( Status.GET_MESSAGE );\n    }","commit_id":"315e5d2a37221dba5dff1f89d503991832de1817","url":"https://github.com/neo4j/neo4j"},{"original_method":"private synchronized boolean getMessage()\n    {\n        if ( logVersionToSend > -1 && logLength > -1 && logToSend != null )\n        {\n            setStatus( Status.SETUP_OFFER_LOG );\n            return true;\n        }\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        try\n        {\n            buffer.limit( 9 );\n            int read = connection.read();\n            if ( read == 9 )\n            {\n                buffer.flip();\n                byte request = buffer.get();\n                if ( request != HeaderConstants.REQUEST_LOG )\n                {\n                    log( \"Unkown request: \" + request );\n                    close();\n                    return true;\n                }\n                logVersionToSend = buffer.getLong();\n                if ( logVersionToSend > master.getVersion() )\n                {\n                    log( \"Got wrong version [\" + logVersionToSend + \"]\" );\n                    return true;\n                }\n                log( \"Slave request: \" + logVersionToSend );\n                if ( master.hasLog( logVersionToSend ) )\n                {\n                    try\n                    {\n                        logToSend = master.getLog( logVersionToSend );\n                        logLength = master.getLogLength( logVersionToSend );\n                    }\n                    catch ( IOException e )\n                    {\n                        close();\n                        throw new SocketException( \n                            \"Unable to get logical log[\" + logVersionToSend + \n                            \"]\", e );\n                    }\n                    setStatus( Status.SETUP_OFFER_LOG );\n                }\n                else\n                {\n                    log( \"No such log version[\" + logVersionToSend + \"]\" );\n                    return true;\n                }\n                retries = 0;\n                return true;\n            }\n            else\n            {\n                if ( read > 0 )\n                {\n                    connection.pushBackAllReadData();\n                }\n                return false;\n            }\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","id":1851,"modified_method":"private synchronized boolean getMessage()\n    {\n//        if ( logVersionToSend > -1 && logLength > -1 && logToSend != null )\n//        {\n//            setStatus( Status.SETUP_OFFER_LOG );\n//            return true;\n//        }\n        if ( !acquireReadBuffer() )\n        {\n            return false;\n        }\n        try\n        {\n            buffer.limit( 9 );\n            int read = connection.read();\n            if ( read == 9 )\n            {\n                buffer.flip();\n                byte request = buffer.get();\n                if ( request != HeaderConstants.REQUEST_LOG )\n                {\n                    log( \"Unkown request: \" + request );\n                    close();\n                    return true;\n                }\n                logVersionToSend = buffer.getLong();\n                if ( logVersionToSend > master.getVersion() )\n                {\n                    log( \"Got wrong version [\" + logVersionToSend + \"]\" );\n                    return true;\n                }\n                log( \"Slave request: \" + logVersionToSend );\n                if ( master.hasLog( logVersionToSend ) )\n                {\n                    try\n                    {\n                        logToSend = master.getLog( logVersionToSend );\n                        logLength = master.getLogLength( logVersionToSend );\n                    }\n                    catch ( IOException e )\n                    {\n                        close();\n                        throw new SocketException( \n                            \"Unable to get logical log[\" + logVersionToSend + \n                            \"]\", e );\n                    }\n                    setStatus( Status.SETUP_OFFER_LOG );\n                }\n                else\n                {\n                    log( \"No such log version[\" + logVersionToSend + \"]\" );\n                    return true;\n                }\n                retries = 0;\n                return true;\n            }\n            else\n            {\n                if ( read > 0 )\n                {\n                    connection.pushBackAllReadData();\n                }\n                return false;\n            }\n        }\n        finally\n        {\n            releaseReadBuffer();\n        }\n    }","commit_id":"315e5d2a37221dba5dff1f89d503991832de1817","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized boolean offerLogToSlave( long version )\n    {\n        if ( logLength != -1 || logVersionToSend != -1 || logToSend != null )\n        {\n            return false;\n        }\n        try\n        {\n            logToSend = master.getLog( version );\n            logLength = master.getLogLength( version );\n            logVersionToSend = version;\n            return true;\n        }\n        catch ( IOException e )\n        {\n            throw new SocketException( \n                \"Unable to get logical log[\" + logVersionToSend + \n                \"]\", e );\n        }\n    }","id":1852,"modified_method":"public synchronized boolean offerLogToSlave( long version )\n    {\n        if ( !getConnection().connected() )\n        {\n            System.out.println( \"Not connected\" );\n            return false;\n        }\n        if ( logLength != -1 || logVersionToSend != -1 || logToSend != null )\n        {\n            // we already sending a version\n            return true;\n        }\n        try\n        {\n            if ( getStatus() == Status.GET_MESSAGE )\n            {\n                logToSend = master.getLog( version );\n                logLength = master.getLogLength( version );\n                logVersionToSend = version;\n                setStatus( Status.SETUP_OFFER_LOG );\n            }\n            return true;\n        }\n        catch ( IOException e )\n        {\n            throw new SocketException( \n                \"Unable to get logical log[\" + logVersionToSend + \n                \"]\", e );\n        }\n    }","commit_id":"315e5d2a37221dba5dff1f89d503991832de1817","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected void log( String message )\n    {\n        // System.out.println( getStatus() + \" \" + this + \": \" + message );\n    }","id":1853,"modified_method":"protected void log( String message )\n    {\n        System.out.println( getStatus() + \" \" + this + \": \" + message );\n    }","commit_id":"315e5d2a37221dba5dff1f89d503991832de1817","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void run()\n    {\n        try\n        {\n            while ( run )\n            {\n                Long logVersion = queue.poll();\n                if ( logVersion != null )\n                {\n                    if ( logVersion == xaDs.getCurrentLogVersion() )\n                    {\n                        ReadableByteChannel logChannel = \n                            xaDs.getLogicalLog( logVersion );\n                        xaDs.applyLog( logChannel );\n                    }\n                }\n                else\n                {\n                    synchronized ( this )\n                    {\n                        try\n                        {\n                            this.wait( 250 );\n                        }\n                        catch ( InterruptedException e )\n                        {\n                            interrupted();\n                        }\n                    }\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            System.err.println( \"Failed to apply log: \" + e );\n            e.printStackTrace();\n        }\n        finally\n        {\n            run = false;\n        }\n    }","id":1854,"modified_method":"public void run()\n    {\n        try\n        {\n            while ( run )\n            {\n//                Long logVersion = queue.poll();\n//                if ( logVersion != null )\n//                {\n                long logVersion = xaDs.getCurrentLogVersion();\n                if ( xaDs.hasLogicalLog( logVersion ) )\n                {\n                    ReadableByteChannel logChannel = \n                        xaDs.getLogicalLog( logVersion );\n                    xaDs.applyLog( logChannel );\n                }\n                else\n                {\n                    synchronized ( this )\n                    {\n                        try\n                        {\n                            this.wait( 250 );\n                        }\n                        catch ( InterruptedException e )\n                        {\n                            interrupted();\n                        }\n                    }\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            System.err.println( \"Failed to apply log: \" + e );\n            e.printStackTrace();\n        }\n        finally\n        {\n            run = false;\n        }\n    }","commit_id":"315e5d2a37221dba5dff1f89d503991832de1817","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void rotateLogAndPushToSlaves() throws IOException\n    {\n        long version = getVersion();\n        xaDs.rotateLogicalLog();\n        for ( HandleSlaveConnection slave : slaveList )\n        {\n            if ( !slave.offerLogToSlave( version ) )\n            {\n                System.out.println( \"Failed to offer log to slave: \" + slave );\n            }\n        }\n    }","id":1855,"modified_method":"public void rotateLogAndPushToSlaves() throws IOException\n    {\n        if ( slaveList.size() == 0 )\n        {\n            return;\n        }\n        long version = getVersion();\n        xaDs.rotateLogicalLog();\n        ArrayList<HandleSlaveConnection> newList = \n            new ArrayList<HandleSlaveConnection>();\n        for ( HandleSlaveConnection slave : slaveList )\n        {\n            if ( !slave.offerLogToSlave( version ) )\n            {\n                System.out.println( \"Failed to offer log to slave: \" + slave );\n            }\n            else\n            {\n                newList.add( slave );\n            }\n        }\n        slaveList = newList;\n    }","commit_id":"315e5d2a37221dba5dff1f89d503991832de1817","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ReadOnlySlave( String path, Map<String,String> params, \n        String masterIp, int masterPort )\n    {\n        this.graphDb = new EmbeddedReadOnlyGraphDatabase( path, params );\n        this.xaDs = (NeoStoreXaDataSource) graphDb.getConfig().getTxModule()\n            .getXaDataSourceManager().getXaDataSource( \"nioneodb\" );\n        this.xaDs.makeBackupSlave();\n        recover();\n\n        jobEater = new JobEater();\n        logApplier = new LogApplier( xaDs );\n        jobEater.start();\n        logApplier.start();\n        \n        this.masterIp = masterIp;\n        this.masterPort = masterPort;\n        masterConnection = new Connection( masterIp, masterPort );\n        if ( !masterConnection.connected() )\n        {\n            if ( masterConnection.connectionRefused() )\n            {\n                throw new SocketException( \"Connection to master[\" + masterIp + \n                    \":\" + masterPort + \"] refused\" );\n            }\n        }\n        jobEater.addJob( new ConnectToMasterJob( masterConnection, this ) );\n    }","id":1856,"modified_method":"public ReadOnlySlave( String path, Map<String,String> params, \n        String masterIp, int masterPort )\n    {\n        this.graphDb = new EmbeddedGraphDatabase( path, params );\n        this.xaDs = (NeoStoreXaDataSource) graphDb.getConfig().getTxModule()\n            .getXaDataSourceManager().getXaDataSource( \"nioneodb\" );\n        this.xaDs.makeBackupSlave();\n        recover();\n\n        jobEater = new JobEater();\n        logApplier = new LogApplier( xaDs );\n        jobEater.start();\n        logApplier.start();\n        \n        this.masterIp = masterIp;\n        this.masterPort = masterPort;\n        masterConnection = new Connection( masterIp, masterPort );\n        while ( !masterConnection.connected() )\n        {\n            if ( masterConnection.connectionRefused() )\n            {\n                throw new SocketException( \"Connection to master[\" + masterIp + \n                    \":\" + masterPort + \"] refused\" );\n            }\n        }\n        jobEater.addJob( new ConnectToMasterJob( masterConnection, this ) );\n    }","commit_id":"315e5d2a37221dba5dff1f89d503991832de1817","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected void startClusterMerge(final Address targetAddress) {\n        ClusterServiceImpl clusterService = node.clusterService;\n\n        if (!prepareClusterState(clusterService)) {\n            return;\n        }\n\n        OperationService operationService = node.nodeEngine.getOperationService();\n        Collection<Member> memberList = clusterService.getMembers();\n        for (Member member : memberList) {\n            if (!member.localMember()) {\n                Operation op = new MergeClustersOperation(targetAddress);\n                operationService.invokeOnTarget(ClusterServiceImpl.SERVICE_NAME, op, member.getAddress());\n            }\n        }\n\n        Operation mergeClustersOperation = new MergeClustersOperation(targetAddress);\n        mergeClustersOperation.setNodeEngine(node.nodeEngine).setService(clusterService)\n                .setOperationResponseHandler(createEmptyResponseHandler());\n        operationService.runOperationOnCallingThread(mergeClustersOperation);\n    }","id":1857,"modified_method":"protected void startClusterMerge(final Address targetAddress) {\n        ClusterServiceImpl clusterService = node.clusterService;\n\n        if (!prepareClusterState(clusterService)) {\n            return;\n        }\n\n        OperationService operationService = node.nodeEngine.getOperationService();\n        Collection<Member> memberList = clusterService.getMembers();\n        Collection<Future> futures = new ArrayList<Future>(memberList.size());\n        for (Member member : memberList) {\n            if (!member.localMember()) {\n                Operation op = new MergeClustersOperation(targetAddress);\n                Future<Object> future =\n                        operationService.invokeOnTarget(ClusterServiceImpl.SERVICE_NAME, op, member.getAddress());\n                futures.add(future);\n            }\n        }\n\n        waitWithDeadline(futures, SPLIT_BRAIN_MERGE_TIMEOUT_SECONDS, TimeUnit.SECONDS, splitBrainMergeExceptionHandler);\n\n        Operation mergeClustersOperation = new MergeClustersOperation(targetAddress);\n        mergeClustersOperation.setNodeEngine(node.nodeEngine).setService(clusterService)\n                .setOperationResponseHandler(createEmptyResponseHandler());\n        operationService.runOperationOnCallingThread(mergeClustersOperation);\n    }","commit_id":"bd2187e6c505b3a80dae4c73952a340f5925b67d","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void readData(ObjectDataInput in)\n            throws IOException {\n        name = in.readUTF();\n        managerPrefix = in.readUTF();\n        uriString = in.readUTF();\n        backupCount = in.readInt();\n        asyncBackupCount = in.readInt();\n\n        final int resultInMemoryFormat = in.readInt();\n        inMemoryFormat = InMemoryFormat.values()[resultInMemoryFormat];\n\n        final int resultEvictionPolicy = in.readInt();\n        evictionPolicy = EvictionPolicy.values()[resultEvictionPolicy];\n\n        nearCacheConfig = in.readObject();\n\n        //SUPER\n        keyType = in.readObject();\n        valueType = in.readObject();\n        cacheLoaderFactory = in.readObject();\n        cacheWriterFactory = in.readObject();\n        expiryPolicyFactory = in.readObject();\n\n        isReadThrough = in.readBoolean();\n        isWriteThrough = in.readBoolean();\n        isStoreByValue = in.readBoolean();\n        isManagementEnabled = in.readBoolean();\n\n        final boolean listNotEmpty = in.readBoolean();\n        if (listNotEmpty) {\n            final int size = in.readInt();\n            listenerConfigurations = new HashSet<CacheEntryListenerConfiguration<K, V>>(size);\n            for (int i = 0; i < size; i++) {\n                listenerConfigurations.add((CacheEntryListenerConfiguration<K, V>) in.readObject());\n            }\n        }\n\n    }","id":1858,"modified_method":"@Override\n    public void readData(ObjectDataInput in)\n            throws IOException {\n        name = in.readUTF();\n        managerPrefix = in.readUTF();\n        uriString = in.readUTF();\n        backupCount = in.readInt();\n        asyncBackupCount = in.readInt();\n\n        final int resultInMemoryFormat = in.readInt();\n        inMemoryFormat = InMemoryFormat.values()[resultInMemoryFormat];\n\n        final int resultEvictionPolicy = in.readInt();\n        evictionPolicy = EvictionPolicy.values()[resultEvictionPolicy];\n\n        nearCacheConfig = in.readObject();\n\n        //SUPER\n        keyType = in.readObject();\n        valueType = in.readObject();\n        cacheLoaderFactory = in.readObject();\n        cacheWriterFactory = in.readObject();\n        expiryPolicyFactory = in.readObject();\n\n        isReadThrough = in.readBoolean();\n        isWriteThrough = in.readBoolean();\n        isStoreByValue = in.readBoolean();\n        isManagementEnabled = in.readBoolean();\n        isStatisticsEnabled = in.readBoolean();\n\n        final boolean listNotEmpty = in.readBoolean();\n        if (listNotEmpty) {\n            final int size = in.readInt();\n            listenerConfigurations = new HashSet<CacheEntryListenerConfiguration<K, V>>(size);\n            for (int i = 0; i < size; i++) {\n                listenerConfigurations.add((CacheEntryListenerConfiguration<K, V>) in.readObject());\n            }\n        }\n\n    }","commit_id":"7fb3ffefb14d5d54822561284bf7768e4d6b344a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void writeData(ObjectDataOutput out)\n            throws IOException {\n        out.writeUTF(name);\n        out.writeUTF(managerPrefix);\n        out.writeUTF(uriString);\n        out.writeInt(backupCount);\n        out.writeInt(asyncBackupCount);\n\n        out.writeInt(inMemoryFormat.ordinal());\n        out.writeInt(evictionPolicy.ordinal());\n\n        out.writeObject(nearCacheConfig);\n\n        //SUPER\n        out.writeObject(keyType);\n        out.writeObject(valueType);\n        out.writeObject(cacheLoaderFactory);\n        out.writeObject(cacheWriterFactory);\n        out.writeObject(expiryPolicyFactory);\n\n        out.writeBoolean(isReadThrough);\n        out.writeBoolean(isWriteThrough);\n        out.writeBoolean(isStoreByValue);\n        out.writeBoolean(isManagementEnabled);\n\n        final boolean listNotEmpty = listenerConfigurations != null && !listenerConfigurations.isEmpty();\n        out.writeBoolean(listNotEmpty);\n        if (listNotEmpty) {\n            out.writeInt(listenerConfigurations.size());\n            for (CacheEntryListenerConfiguration<K, V> cc : listenerConfigurations) {\n                out.writeObject(cc);\n            }\n        }\n\n    }","id":1859,"modified_method":"@Override\n    public void writeData(ObjectDataOutput out)\n            throws IOException {\n        out.writeUTF(name);\n        out.writeUTF(managerPrefix);\n        out.writeUTF(uriString);\n        out.writeInt(backupCount);\n        out.writeInt(asyncBackupCount);\n\n        out.writeInt(inMemoryFormat.ordinal());\n        out.writeInt(evictionPolicy.ordinal());\n\n        out.writeObject(nearCacheConfig);\n\n        //SUPER\n        out.writeObject(keyType);\n        out.writeObject(valueType);\n        out.writeObject(cacheLoaderFactory);\n        out.writeObject(cacheWriterFactory);\n        out.writeObject(expiryPolicyFactory);\n\n        out.writeBoolean(isReadThrough);\n        out.writeBoolean(isWriteThrough);\n        out.writeBoolean(isStoreByValue);\n        out.writeBoolean(isManagementEnabled);\n        out.writeBoolean(isStatisticsEnabled);\n\n        final boolean listNotEmpty = listenerConfigurations != null && !listenerConfigurations.isEmpty();\n        out.writeBoolean(listNotEmpty);\n        if (listNotEmpty) {\n            out.writeInt(listenerConfigurations.size());\n            for (CacheEntryListenerConfiguration<K, V> cc : listenerConfigurations) {\n                out.writeObject(cc);\n            }\n        }\n\n    }","commit_id":"7fb3ffefb14d5d54822561284bf7768e4d6b344a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void enableStatistics(String cacheName, boolean enabled) {\n        if (isClosed()) {\n            throw new IllegalStateException();\n        }\n        if (cacheName == null) {\n            throw new NullPointerException();\n        }\n        final ClientInvocationService invocationService = clientContext.getInvocationService();\n        final Collection<MemberImpl> members = clientContext.getClusterService().getMemberList();\n        final Collection<Future> futures = new ArrayList<Future>();\n        for (MemberImpl member : members) {\n            try {\n                CacheManagementConfigRequest request = new CacheManagementConfigRequest(getCacheNameWithPrefix(cacheName), true,\n                        enabled, member.getAddress());\n                final Future future = invocationService.invokeOnTarget(request, member.getAddress());\n                futures.add(future);\n            } catch (Exception e) {\n                ExceptionUtil.sneakyThrow(e);\n            }\n        }\n        //make sure all configs are created\n        try {\n            FutureUtil.waitWithDeadline(futures, CacheProxyUtil.AWAIT_COMPLETION_TIMEOUT_SECONDS, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            logger.warning(e);\n        }\n    }","id":1860,"modified_method":"@Override\n    public void enableStatistics(String cacheName, boolean enabled) {\n        enableStatisticManagementOnNodes(cacheName, true, enabled);\n    }","commit_id":"7fb3ffefb14d5d54822561284bf7768e4d6b344a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void enableManagement(String cacheName, boolean enabled) {\n        if (isClosed()) {\n            throw new IllegalStateException();\n        }\n        if (cacheName == null) {\n            throw new NullPointerException();\n        }\n        final ClientInvocationService invocationService = clientContext.getInvocationService();\n        final Collection<MemberImpl> members = clientContext.getClusterService().getMemberList();\n        final Collection<Future> futures = new ArrayList<Future>();\n        for (MemberImpl member : members) {\n            try {\n                CacheManagementConfigRequest request = new CacheManagementConfigRequest(getCacheNameWithPrefix(cacheName), false,\n                        enabled, member.getAddress());\n                final Future future = invocationService.invokeOnTarget(request, member.getAddress());\n                futures.add(future);\n            } catch (Exception e) {\n                ExceptionUtil.sneakyThrow(e);\n            }\n        }\n        //make sure all configs are created\n        try {\n            FutureUtil.waitWithDeadline(futures, CacheProxyUtil.AWAIT_COMPLETION_TIMEOUT_SECONDS, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            logger.warning(e);\n        }\n    }","id":1861,"modified_method":"@Override\n    public void enableManagement(String cacheName, boolean enabled) {\n        enableStatisticManagementOnNodes(cacheName, false, enabled);\n    }","commit_id":"7fb3ffefb14d5d54822561284bf7768e4d6b344a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private void enableStatisticManagementOnOtherNodes(String cacheName, boolean statOrMan, boolean enabled) {\n        final String cacheNameWithPrefix = getCacheNameWithPrefix(cacheName);\n        final Collection<MemberImpl> members = nodeEngine.getClusterService().getMemberList();\n        for (MemberImpl member : members) {\n            if (!member.localMember()) {\n                final CacheManagementConfigOperation op = new CacheManagementConfigOperation(cacheNameWithPrefix, statOrMan,\n                        enabled);\n                nodeEngine.getOperationService().invokeOnTarget(CacheService.SERVICE_NAME, op, member.getAddress());\n            }\n        }\n    }","id":1862,"modified_method":"private void enableStatisticManagementOnOtherNodes(String cacheName, boolean statOrMan, boolean enabled) {\n        final String cacheNameWithPrefix = getCacheNameWithPrefix(cacheName);\n        final Collection<MemberImpl> members = nodeEngine.getClusterService().getMemberList();\n        final Collection<Future> futures = new ArrayList<Future>();\n        for (MemberImpl member : members) {\n            if (!member.localMember()) {\n                final CacheManagementConfigOperation op = new CacheManagementConfigOperation(cacheNameWithPrefix, statOrMan,\n                        enabled);\n                final Future future = nodeEngine.getOperationService()\n                                                .invokeOnTarget(CacheService.SERVICE_NAME, op, member.getAddress());\n                futures.add(future);\n            }\n        }\n        try {\n            FutureUtil.waitWithDeadline(futures, CacheProxyUtil.AWAIT_COMPLETION_TIMEOUT_SECONDS, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            logger.warning(e);\n        }\n\n    }","commit_id":"7fb3ffefb14d5d54822561284bf7768e4d6b344a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void readData(ObjectDataInput in)\n            throws IOException {\n        name = in.readUTF();\n        managerPrefix = in.readUTF();\n        uriString = in.readUTF();\n        backupCount = in.readInt();\n        asyncBackupCount = in.readInt();\n\n        final int resultInMemoryFormat = in.readInt();\n        inMemoryFormat = InMemoryFormat.values()[resultInMemoryFormat];\n\n        final int resultEvictionPolicy = in.readInt();\n        evictionPolicy = EvictionPolicy.values()[resultEvictionPolicy];\n\n        nearCacheConfig = in.readObject();\n\n        //SUPER\n        keyType = in.readObject();\n        valueType = in.readObject();\n        cacheLoaderFactory = in.readObject();\n        cacheWriterFactory = in.readObject();\n        expiryPolicyFactory = in.readObject();\n\n        isReadThrough = in.readBoolean();\n        isWriteThrough = in.readBoolean();\n        isStoreByValue = in.readBoolean();\n        isManagementEnabled = in.readBoolean();\n\n        final boolean listNotEmpty = in.readBoolean();\n        if (listNotEmpty) {\n            final int size = in.readInt();\n            listenerConfigurations = new HashSet<CacheEntryListenerConfiguration<K, V>>(size);\n            for (int i = 0; i < size; i++) {\n                listenerConfigurations.add((CacheEntryListenerConfiguration<K, V>) in.readObject());\n            }\n        }\n\n    }","id":1863,"modified_method":"@Override\n    public void readData(ObjectDataInput in)\n            throws IOException {\n        name = in.readUTF();\n        managerPrefix = in.readUTF();\n        uriString = in.readUTF();\n        backupCount = in.readInt();\n        asyncBackupCount = in.readInt();\n\n        final int resultInMemoryFormat = in.readInt();\n        inMemoryFormat = InMemoryFormat.values()[resultInMemoryFormat];\n\n        final int resultEvictionPolicy = in.readInt();\n        evictionPolicy = EvictionPolicy.values()[resultEvictionPolicy];\n\n        nearCacheConfig = in.readObject();\n\n        //SUPER\n        keyType = in.readObject();\n        valueType = in.readObject();\n        cacheLoaderFactory = in.readObject();\n        cacheWriterFactory = in.readObject();\n        expiryPolicyFactory = in.readObject();\n\n        isReadThrough = in.readBoolean();\n        isWriteThrough = in.readBoolean();\n        isStoreByValue = in.readBoolean();\n        isManagementEnabled = in.readBoolean();\n        isStatisticsEnabled = in.readBoolean();\n\n        final boolean listNotEmpty = in.readBoolean();\n        if (listNotEmpty) {\n            final int size = in.readInt();\n            listenerConfigurations = new HashSet<CacheEntryListenerConfiguration<K, V>>(size);\n            for (int i = 0; i < size; i++) {\n                listenerConfigurations.add((CacheEntryListenerConfiguration<K, V>) in.readObject());\n            }\n        }\n\n    }","commit_id":"27820c4d9e08b5e8398de5fdb08d738011cdcd46","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void writeData(ObjectDataOutput out)\n            throws IOException {\n        out.writeUTF(name);\n        out.writeUTF(managerPrefix);\n        out.writeUTF(uriString);\n        out.writeInt(backupCount);\n        out.writeInt(asyncBackupCount);\n\n        out.writeInt(inMemoryFormat.ordinal());\n        out.writeInt(evictionPolicy.ordinal());\n\n        out.writeObject(nearCacheConfig);\n\n        //SUPER\n        out.writeObject(keyType);\n        out.writeObject(valueType);\n        out.writeObject(cacheLoaderFactory);\n        out.writeObject(cacheWriterFactory);\n        out.writeObject(expiryPolicyFactory);\n\n        out.writeBoolean(isReadThrough);\n        out.writeBoolean(isWriteThrough);\n        out.writeBoolean(isStoreByValue);\n        out.writeBoolean(isManagementEnabled);\n\n        final boolean listNotEmpty = listenerConfigurations != null && !listenerConfigurations.isEmpty();\n        out.writeBoolean(listNotEmpty);\n        if (listNotEmpty) {\n            out.writeInt(listenerConfigurations.size());\n            for (CacheEntryListenerConfiguration<K, V> cc : listenerConfigurations) {\n                out.writeObject(cc);\n            }\n        }\n\n    }","id":1864,"modified_method":"@Override\n    public void writeData(ObjectDataOutput out)\n            throws IOException {\n        out.writeUTF(name);\n        out.writeUTF(managerPrefix);\n        out.writeUTF(uriString);\n        out.writeInt(backupCount);\n        out.writeInt(asyncBackupCount);\n\n        out.writeInt(inMemoryFormat.ordinal());\n        out.writeInt(evictionPolicy.ordinal());\n\n        out.writeObject(nearCacheConfig);\n\n        //SUPER\n        out.writeObject(keyType);\n        out.writeObject(valueType);\n        out.writeObject(cacheLoaderFactory);\n        out.writeObject(cacheWriterFactory);\n        out.writeObject(expiryPolicyFactory);\n\n        out.writeBoolean(isReadThrough);\n        out.writeBoolean(isWriteThrough);\n        out.writeBoolean(isStoreByValue);\n        out.writeBoolean(isManagementEnabled);\n        out.writeBoolean(isStatisticsEnabled);\n\n        final boolean listNotEmpty = listenerConfigurations != null && !listenerConfigurations.isEmpty();\n        out.writeBoolean(listNotEmpty);\n        if (listNotEmpty) {\n            out.writeInt(listenerConfigurations.size());\n            for (CacheEntryListenerConfiguration<K, V> cc : listenerConfigurations) {\n                out.writeObject(cc);\n            }\n        }\n\n    }","commit_id":"27820c4d9e08b5e8398de5fdb08d738011cdcd46","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void enableManagement(String cacheName, boolean enabled) {\n        if (isClosed()) {\n            throw new IllegalStateException();\n        }\n        if (cacheName == null) {\n            throw new NullPointerException();\n        }\n        final ClientInvocationService invocationService = clientContext.getInvocationService();\n        final Collection<MemberImpl> members = clientContext.getClusterService().getMemberList();\n        final Collection<Future> futures = new ArrayList<Future>();\n        for (MemberImpl member : members) {\n            try {\n                CacheManagementConfigRequest request = new CacheManagementConfigRequest(getCacheNameWithPrefix(cacheName), false,\n                        enabled, member.getAddress());\n                final Future future = invocationService.invokeOnTarget(request, member.getAddress());\n                futures.add(future);\n            } catch (Exception e) {\n                ExceptionUtil.sneakyThrow(e);\n            }\n        }\n        //make sure all configs are created\n        try {\n            FutureUtil.waitWithDeadline(futures, CacheProxyUtil.AWAIT_COMPLETION_TIMEOUT_SECONDS, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            logger.warning(e);\n        }\n    }","id":1865,"modified_method":"@Override\n    public void enableManagement(String cacheName, boolean enabled) {\n        enableStatisticManagementOnNodes(cacheName, false, enabled);\n    }","commit_id":"27820c4d9e08b5e8398de5fdb08d738011cdcd46","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void enableStatistics(String cacheName, boolean enabled) {\n        if (isClosed()) {\n            throw new IllegalStateException();\n        }\n        if (cacheName == null) {\n            throw new NullPointerException();\n        }\n        final ClientInvocationService invocationService = clientContext.getInvocationService();\n        final Collection<MemberImpl> members = clientContext.getClusterService().getMemberList();\n        final Collection<Future> futures = new ArrayList<Future>();\n        for (MemberImpl member : members) {\n            try {\n                CacheManagementConfigRequest request = new CacheManagementConfigRequest(getCacheNameWithPrefix(cacheName), true,\n                        enabled, member.getAddress());\n                final Future future = invocationService.invokeOnTarget(request, member.getAddress());\n                futures.add(future);\n            } catch (Exception e) {\n                ExceptionUtil.sneakyThrow(e);\n            }\n        }\n        //make sure all configs are created\n        try {\n            FutureUtil.waitWithDeadline(futures, CacheProxyUtil.AWAIT_COMPLETION_TIMEOUT_SECONDS, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            logger.warning(e);\n        }\n    }","id":1866,"modified_method":"@Override\n    public void enableStatistics(String cacheName, boolean enabled) {\n        enableStatisticManagementOnNodes(cacheName, true, enabled);\n    }","commit_id":"27820c4d9e08b5e8398de5fdb08d738011cdcd46","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private void enableStatisticManagementOnOtherNodes(String cacheName, boolean statOrMan, boolean enabled) {\n        final String cacheNameWithPrefix = getCacheNameWithPrefix(cacheName);\n        final Collection<MemberImpl> members = nodeEngine.getClusterService().getMemberList();\n        for (MemberImpl member : members) {\n            if (!member.localMember()) {\n                final CacheManagementConfigOperation op = new CacheManagementConfigOperation(cacheNameWithPrefix, statOrMan,\n                        enabled);\n                nodeEngine.getOperationService().invokeOnTarget(CacheService.SERVICE_NAME, op, member.getAddress());\n            }\n        }\n    }","id":1867,"modified_method":"private void enableStatisticManagementOnOtherNodes(String cacheName, boolean statOrMan, boolean enabled) {\n        final String cacheNameWithPrefix = getCacheNameWithPrefix(cacheName);\n        final Collection<MemberImpl> members = nodeEngine.getClusterService().getMemberList();\n        final Collection<Future> futures = new ArrayList<Future>();\n        for (MemberImpl member : members) {\n            if (!member.localMember()) {\n                final CacheManagementConfigOperation op = new CacheManagementConfigOperation(cacheNameWithPrefix, statOrMan,\n                        enabled);\n                final Future future = nodeEngine.getOperationService()\n                                                .invokeOnTarget(CacheService.SERVICE_NAME, op, member.getAddress());\n                futures.add(future);\n            }\n        }\n        try {\n            FutureUtil.waitWithDeadline(futures, CacheProxyUtil.AWAIT_COMPLETION_TIMEOUT_SECONDS, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            logger.warning(e);\n        }\n\n    }","commit_id":"27820c4d9e08b5e8398de5fdb08d738011cdcd46","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public Tree moveRB(Tree t) {\n    if (t == null) {\n      return null;\n    }\n    return Tsurgeon.processPattern(moveRBTregex, moveRBTsurgeon, t);\n  }","id":1868,"modified_method":"public Tree moveRB(Tree t) {\n    if (t == null) {\n      return null;\n    }\n    for (TregexPattern pattern : moveRBTregex) {\n      t = Tsurgeon.processPattern(pattern, moveRBTsurgeon, t);\n    }\n    return t;\n  }","commit_id":"5f1ec57a90bf3a863c350191a0a5c0df16db8cd6","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public Tree moveRB(Tree t) {\n    if (t == null) {\n      return null;\n    }\n    return Tsurgeon.processPattern(moveRBTregex, moveRBTsurgeon, t);\n  }","id":1869,"modified_method":"public Tree moveRB(Tree t) {\n    if (t == null) {\n      return null;\n    }\n    for (TregexPattern pattern : moveRBTregex) {\n      t = Tsurgeon.processPattern(pattern, moveRBTsurgeon, t);\n    }\n    return t;\n  }","commit_id":"5d27780f8cd2cebc2e49a614539019118e057565","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public Tree moveRB(Tree t) {\n    if (t == null) {\n      return null;\n    }\n    return Tsurgeon.processPattern(moveRBTregex, moveRBTsurgeon, t);\n  }","id":1870,"modified_method":"public Tree moveRB(Tree t) {\n    if (t == null) {\n      return null;\n    }\n    for (TregexPattern pattern : moveRBTregex) {\n      t = Tsurgeon.processPattern(pattern, moveRBTsurgeon, t);\n    }\n    return t;\n  }","commit_id":"fdc6ede47092680e4d1deb768af611cb3bcce2cc","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public Tree moveRB(Tree t) {\n    if (t == null) {\n      return null;\n    }\n    return Tsurgeon.processPattern(moveRBTregex, moveRBTsurgeon, t);\n  }","id":1871,"modified_method":"public Tree moveRB(Tree t) {\n    if (t == null) {\n      return null;\n    }\n    for (TregexPattern pattern : moveRBTregex) {\n      t = Tsurgeon.processPattern(pattern, moveRBTsurgeon, t);\n    }\n    return t;\n  }","commit_id":"d0238d9376f7d59d9664f14300fb6db14fac6223","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public Tree moveRB(Tree t) {\n    if (t == null) {\n      return null;\n    }\n    return Tsurgeon.processPattern(moveRBTregex, moveRBTsurgeon, t);\n  }","id":1872,"modified_method":"public Tree moveRB(Tree t) {\n    if (t == null) {\n      return null;\n    }\n    for (TregexPattern pattern : moveRBTregex) {\n      t = Tsurgeon.processPattern(pattern, moveRBTsurgeon, t);\n    }\n    return t;\n  }","commit_id":"6430082c7e5712d26a8b88bf8b86d975056170eb","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  protected void doContextResponse(Request request, QueryContext context, Result<Issue> result, JsonWriter json) {\n    List<String> issueKeys = newArrayList();\n    Set<RuleKey> ruleKeys = newHashSet();\n    Set<String> projectUuids = newHashSet();\n    Set<String> componentUuids = newHashSet();\n    Set<String> actionPlanKeys = newHashSet();\n    List<String> userLogins = newArrayList();\n    Map<String, User> usersByLogin = newHashMap();\n    Map<String, ComponentDto> componentsByUuid = newHashMap();\n    Multimap<String, DefaultIssueComment> commentsByIssues = ArrayListMultimap.create();\n    Collection<ComponentDto> componentDtos = newHashSet();\n    List<ComponentDto> projectDtos = newArrayList();\n    Map<String, ComponentDto> projectsByComponentUuid = newHashMap();\n\n    for (Issue issue : result.getHits()) {\n      IssueDoc issueDoc = (IssueDoc) issue;\n      issueKeys.add(issue.key());\n      ruleKeys.add(issue.ruleKey());\n      projectUuids.add(issueDoc.projectUuid());\n      componentUuids.add(issueDoc.componentUuid());\n      actionPlanKeys.add(issue.actionPlanKey());\n      if (issue.reporter() != null) {\n        userLogins.add(issue.reporter());\n      }\n      if (issue.assignee() != null) {\n        userLogins.add(issue.assignee());\n      }\n    }\n\n    for (FacetValue rule: result.getFacetValues(IssueFilterParameters.RULES)) {\n      ruleKeys.add(RuleKey.parse(rule.getKey()));\n    }\n    for (FacetValue project: result.getFacetValues(IssueFilterParameters.COMPONENT_ROOTS)) {\n      projectUuids.add(project.getKey());\n    }\n    for (FacetValue component: result.getFacetValues(IssueFilterParameters.COMPONENTS)) {\n      componentUuids.add(component.getKey());\n    }\n    for (FacetValue user: result.getFacetValues(IssueFilterParameters.ASSIGNEES)) {\n      userLogins.add(user.getKey());\n    }\n\n    DbSession session = dbClient.openSession(false);\n    try {\n      List<DefaultIssueComment> comments = issueChangeDao.selectCommentsByIssues(session, issueKeys);\n      for (DefaultIssueComment issueComment : comments) {\n        userLogins.add(issueComment.userLogin());\n        commentsByIssues.put(issueComment.issueKey(), issueComment);\n      }\n      usersByLogin = getUsersByLogin(userLogins);\n\n      List<ComponentDto> fileDtos = dbClient.componentDao().getByUuids(session, componentUuids);\n      List<ComponentDto> subProjectDtos = dbClient.componentDao().findSubProjectsByComponentUuids(session, componentUuids);\n      projectDtos = dbClient.componentDao().getByUuids(session, projectUuids);\n      componentDtos.addAll(fileDtos);\n      componentDtos.addAll(subProjectDtos);\n      componentDtos.addAll(projectDtos);\n\n      for (ComponentDto componentDto : componentDtos) {\n        componentsByUuid.put(componentDto.uuid(), componentDto);\n      }\n\n      projectsByComponentUuid = getProjectsByComponentUuid(componentDtos, projectDtos);\n\n      writeProjects(json, projectDtos);\n      writeComponents(json, componentDtos, projectsByComponentUuid);\n    } finally {\n      session.close();\n    }\n\n    Map<String, ActionPlan> actionPlanByKeys = getActionPlanByKeys(actionPlanKeys);\n\n    writeIssues(result, commentsByIssues, usersByLogin, actionPlanByKeys, componentsByUuid, projectsByComponentUuid,\n      request.paramAsStrings(EXTRA_FIELDS_PARAM), json);\n    writeRules(json, !request.mandatoryParamAsBoolean(IssueFilterParameters.HIDE_RULES) ? ruleService.getByKeys(ruleKeys) : Collections.<Rule>emptyList());\n    writeUsers(json, usersByLogin);\n    writeActionPlans(json, actionPlanByKeys.values());\n\n    // TODO remove legacy paging. Handled by the SearchRequestHandler\n    writeLegacyPaging(context, json, result);\n  }","id":1873,"modified_method":"@Override\n  protected void doContextResponse(Request request, QueryContext context, Result<Issue> result, JsonWriter json) {\n    List<String> issueKeys = newArrayList();\n    Set<RuleKey> ruleKeys = newHashSet();\n    Set<String> projectUuids = newHashSet();\n    Set<String> componentUuids = newHashSet();\n    Set<String> actionPlanKeys = newHashSet();\n    List<String> userLogins = newArrayList();\n    Map<String, User> usersByLogin = newHashMap();\n    Map<String, ComponentDto> componentsByUuid = newHashMap();\n    Multimap<String, DefaultIssueComment> commentsByIssues = ArrayListMultimap.create();\n    Collection<ComponentDto> componentDtos = newHashSet();\n    List<ComponentDto> projectDtos = newArrayList();\n    Map<String, ComponentDto> projectsByComponentUuid = newHashMap();\n\n    for (Issue issue : result.getHits()) {\n      IssueDoc issueDoc = (IssueDoc) issue;\n      issueKeys.add(issue.key());\n      ruleKeys.add(issue.ruleKey());\n      projectUuids.add(issueDoc.projectUuid());\n      componentUuids.add(issueDoc.componentUuid());\n      actionPlanKeys.add(issue.actionPlanKey());\n      if (issue.reporter() != null) {\n        userLogins.add(issue.reporter());\n      }\n      if (issue.assignee() != null) {\n        userLogins.add(issue.assignee());\n      }\n    }\n\n    Collection<FacetValue> facetRules = result.getFacetValues(IssueFilterParameters.RULES);\n    if (facetRules != null) {\n      for (FacetValue rule: facetRules) {\n        ruleKeys.add(RuleKey.parse(rule.getKey()));\n      }\n    }\n\n    collectFacetKeys(result, IssueFilterParameters.COMPONENT_ROOTS, projectUuids);\n    collectFacetKeys(result, IssueFilterParameters.COMPONENTS, componentUuids);\n    collectFacetKeys(result, IssueFilterParameters.ASSIGNEES, userLogins);\n\n    DbSession session = dbClient.openSession(false);\n    try {\n      List<DefaultIssueComment> comments = issueChangeDao.selectCommentsByIssues(session, issueKeys);\n      for (DefaultIssueComment issueComment : comments) {\n        userLogins.add(issueComment.userLogin());\n        commentsByIssues.put(issueComment.issueKey(), issueComment);\n      }\n      usersByLogin = getUsersByLogin(userLogins);\n\n      List<ComponentDto> fileDtos = dbClient.componentDao().getByUuids(session, componentUuids);\n      List<ComponentDto> subProjectDtos = dbClient.componentDao().findSubProjectsByComponentUuids(session, componentUuids);\n      projectDtos = dbClient.componentDao().getByUuids(session, projectUuids);\n      componentDtos.addAll(fileDtos);\n      componentDtos.addAll(subProjectDtos);\n      componentDtos.addAll(projectDtos);\n\n      for (ComponentDto componentDto : componentDtos) {\n        componentsByUuid.put(componentDto.uuid(), componentDto);\n      }\n\n      projectsByComponentUuid = getProjectsByComponentUuid(componentDtos, projectDtos);\n\n      writeProjects(json, projectDtos);\n      writeComponents(json, componentDtos, projectsByComponentUuid);\n    } finally {\n      session.close();\n    }\n\n    Map<String, ActionPlan> actionPlanByKeys = getActionPlanByKeys(actionPlanKeys);\n\n    writeIssues(result, commentsByIssues, usersByLogin, actionPlanByKeys, componentsByUuid, projectsByComponentUuid,\n      request.paramAsStrings(EXTRA_FIELDS_PARAM), json);\n    writeRules(json, !request.mandatoryParamAsBoolean(IssueFilterParameters.HIDE_RULES) ? ruleService.getByKeys(ruleKeys) : Collections.<Rule>emptyList());\n    writeUsers(json, usersByLogin);\n    writeActionPlans(json, actionPlanByKeys.values());\n\n    // TODO remove legacy paging. Handled by the SearchRequestHandler\n    writeLegacyPaging(context, json, result);\n  }","commit_id":"8dd85509938421f9be97a895c8f907fd6d7cedb3","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public GrokProcessor(String tag, Grok grok, String matchField) {\n        super(tag);\n        this.matchField = matchField;\n        this.grok = grok;\n    }","id":1874,"modified_method":"public GrokProcessor(String tag, Map<String, String> patternBank, List<String> matchPatterns, String matchField) {\n        this(tag, patternBank, matchPatterns, matchField, false);\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public GrokProcessor doCreate(String processorTag, Map<String, Object> config) throws Exception {\n            String matchField = ConfigurationUtils.readStringProperty(TYPE, processorTag, config, \"field\");\n            String matchPattern = ConfigurationUtils.readStringProperty(TYPE, processorTag, config, \"pattern\");\n            Map<String, String> customPatternBank = ConfigurationUtils.readOptionalMap(TYPE, processorTag, config, \"pattern_definitions\");\n            Map<String, String> patternBank = new HashMap<>(builtinPatterns);\n            if (customPatternBank != null) {\n                patternBank.putAll(customPatternBank);\n            }\n\n            Grok grok;\n            try {\n                grok = new Grok(patternBank, matchPattern);\n            } catch (Exception e) {\n                throw newConfigurationException(TYPE, processorTag, \"pattern\", \"Invalid regex pattern. \" + e.getMessage());\n            }\n            return new GrokProcessor(processorTag, grok, matchField);\n        }","id":1875,"modified_method":"@Override\n        public GrokProcessor doCreate(String processorTag, Map<String, Object> config) throws Exception {\n            String matchField = ConfigurationUtils.readStringProperty(TYPE, processorTag, config, \"field\");\n            List<String> matchPatterns = ConfigurationUtils.readList(TYPE, processorTag, config, \"patterns\");\n            boolean traceMatch = ConfigurationUtils.readBooleanProperty(TYPE, processorTag, config, \"trace_match\", false);\n\n            if (matchPatterns.isEmpty()) {\n                throw newConfigurationException(TYPE, processorTag, \"patterns\", \"List of patterns must not be empty\");\n            }\n            Map<String, String> customPatternBank = ConfigurationUtils.readOptionalMap(TYPE, processorTag, config, \"pattern_definitions\");\n            Map<String, String> patternBank = new HashMap<>(builtinPatterns);\n            if (customPatternBank != null) {\n                patternBank.putAll(customPatternBank);\n            }\n\n            try {\n                return new GrokProcessor(processorTag, patternBank, matchPatterns, matchField, traceMatch);\n            } catch (Exception e) {\n                throw newConfigurationException(TYPE, processorTag, \"patterns\",\n                    \"Invalid regex pattern found in: \" + matchPatterns + \". \" + e.getMessage());\n            }\n\n        }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"Grok getGrok() {\n        return grok;\n    }","id":1876,"modified_method":"public Grok getGrok() {\n        return grok;\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public void execute(IngestDocument ingestDocument) throws Exception {\n        String fieldValue = ingestDocument.getFieldValue(matchField, String.class);\n        Map<String, Object> matches = grok.captures(fieldValue);\n        if (matches != null) {\n            matches.forEach((k, v) -> ingestDocument.setFieldValue(k, v));\n        } else {\n            throw new IllegalArgumentException(\"Grok expression does not match field value: [\" + fieldValue + \"]\");\n        }\n    }","id":1877,"modified_method":"@Override\n    public void execute(IngestDocument ingestDocument) throws Exception {\n        String fieldValue = ingestDocument.getFieldValue(matchField, String.class);\n        Map<String, Object> matches = grok.captures(fieldValue);\n        if (matches == null) {\n            throw new IllegalArgumentException(\"Provided Grok expressions do not match field value: [\" + fieldValue + \"]\");\n        }\n\n        matches.entrySet().stream()\n            .filter((e) -> Objects.nonNull(e.getValue()))\n            .forEach((e) -> ingestDocument.setFieldValue(e.getKey(), e.getValue()));\n\n        if (traceMatch) {\n            @SuppressWarnings(\"unchecked\")\n            HashMap<String, String> matchMap = (HashMap<String, String>) ingestDocument.getFieldValue(PATTERN_MATCH_KEY, Object.class);\n            matchMap.keySet().stream().findFirst().ifPresent((index) -> {\n                ingestDocument.setFieldValue(PATTERN_MATCH_KEY, index);\n            });\n        }\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testBuild() throws Exception {\n        GrokProcessor.Factory factory = new GrokProcessor.Factory(Collections.emptyMap());\n\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"pattern\", \"(?<foo>\\\\w+)\");\n        String processorTag = randomAsciiOfLength(10);\n        config.put(AbstractProcessorFactory.TAG_KEY, processorTag);\n        GrokProcessor processor = factory.create(config);\n        assertThat(processor.getTag(), equalTo(processorTag));\n        assertThat(processor.getMatchField(), equalTo(\"_field\"));\n        assertThat(processor.getGrok(), notNullValue());\n    }","id":1878,"modified_method":"public void testBuild() throws Exception {\n        GrokProcessor.Factory factory = new GrokProcessor.Factory(Collections.emptyMap());\n\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"patterns\", Collections.singletonList(\"(?<foo>\\\\w+)\"));\n        String processorTag = randomAsciiOfLength(10);\n        config.put(AbstractProcessorFactory.TAG_KEY, processorTag);\n        GrokProcessor processor = factory.create(config);\n        assertThat(processor.getTag(), equalTo(processorTag));\n        assertThat(processor.getMatchField(), equalTo(\"_field\"));\n        assertThat(processor.getGrok(), notNullValue());\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testBuildMissingField() throws Exception {\n        GrokProcessor.Factory factory = new GrokProcessor.Factory(Collections.emptyMap());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"pattern\", \"(?<foo>\\\\w+)\");\n        try {\n            factory.create(config);\n            fail(\"should fail\");\n        } catch (ElasticsearchParseException e) {\n            assertThat(e.getMessage(), equalTo(\"[field] required property is missing\"));\n\n        }\n    }","id":1879,"modified_method":"public void testBuildMissingField() throws Exception {\n        GrokProcessor.Factory factory = new GrokProcessor.Factory(Collections.emptyMap());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"patterns\", Collections.singletonList(\"(?<foo>\\\\w+)\"));\n        ElasticsearchParseException e = expectThrows(ElasticsearchParseException.class, () -> factory.create(config));\n        assertThat(e.getMessage(), equalTo(\"[field] required property is missing\"));\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testCreateWithInvalidPatternDefinition() throws Exception {\n        GrokProcessor.Factory factory = new GrokProcessor.Factory(Collections.emptyMap());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"pattern\", \"%{MY_PATTERN:name}!\");\n        config.put(\"pattern_definitions\", Collections.singletonMap(\"MY_PATTERN\", \"[\"));\n        try {\n            factory.create(config);\n            fail(\"should fail\");\n        } catch (ElasticsearchParseException e) {\n            assertThat(e.getMessage(), equalTo(\"[pattern] Invalid regex pattern. premature end of char-class\"));\n        }\n\n    }","id":1880,"modified_method":"public void testCreateWithInvalidPatternDefinition() throws Exception {\n        GrokProcessor.Factory factory = new GrokProcessor.Factory(Collections.emptyMap());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"patterns\", Collections.singletonList(\"%{MY_PATTERN:name}!\"));\n        config.put(\"pattern_definitions\", Collections.singletonMap(\"MY_PATTERN\", \"[\"));\n        ElasticsearchParseException e = expectThrows(ElasticsearchParseException.class, () -> factory.create(config));\n        assertThat(e.getMessage(),\n            equalTo(\"[patterns] Invalid regex pattern found in: [%{MY_PATTERN:name}!]. premature end of char-class\"));\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testBuildMissingPattern() throws Exception {\n        GrokProcessor.Factory factory = new GrokProcessor.Factory(Collections.emptyMap());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"foo\");\n        try {\n            factory.create(config);\n            fail(\"should fail\");\n        } catch (ElasticsearchParseException e) {\n            assertThat(e.getMessage(), equalTo(\"[pattern] required property is missing\"));\n        }\n\n    }","id":1881,"modified_method":"public void testBuildMissingPatterns() throws Exception {\n        GrokProcessor.Factory factory = new GrokProcessor.Factory(Collections.emptyMap());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"foo\");\n        ElasticsearchParseException e = expectThrows(ElasticsearchParseException.class, () -> factory.create(config));\n        assertThat(e.getMessage(), equalTo(\"[patterns] required property is missing\"));\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testCreateWithCustomPatterns() throws Exception {\n        GrokProcessor.Factory factory = new GrokProcessor.Factory(Collections.emptyMap());\n\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"pattern\", \"%{MY_PATTERN:name}!\");\n        config.put(\"pattern_definitions\", Collections.singletonMap(\"MY_PATTERN\", \"foo\"));\n        GrokProcessor processor = factory.create(config);\n        assertThat(processor.getMatchField(), equalTo(\"_field\"));\n        assertThat(processor.getGrok(), notNullValue());\n        assertThat(processor.getGrok().match(\"foo!\"), equalTo(true));\n    }","id":1882,"modified_method":"public void testCreateWithCustomPatterns() throws Exception {\n        GrokProcessor.Factory factory = new GrokProcessor.Factory(Collections.emptyMap());\n\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"patterns\", Collections.singletonList(\"%{MY_PATTERN:name}!\"));\n        config.put(\"pattern_definitions\", Collections.singletonMap(\"MY_PATTERN\", \"foo\"));\n        GrokProcessor processor = factory.create(config);\n        assertThat(processor.getMatchField(), equalTo(\"_field\"));\n        assertThat(processor.getGrok(), notNullValue());\n        assertThat(processor.getGrok().match(\"foo!\"), equalTo(true));\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testCreateWithInvalidPattern() throws Exception {\n        GrokProcessor.Factory factory = new GrokProcessor.Factory(Collections.emptyMap());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"pattern\", \"[\");\n        try {\n            factory.create(config);\n            fail(\"should fail\");\n        } catch (ElasticsearchParseException e) {\n            assertThat(e.getMessage(), equalTo(\"[pattern] Invalid regex pattern. premature end of char-class\"));\n        }\n\n    }","id":1883,"modified_method":"public void testCreateWithInvalidPattern() throws Exception {\n        GrokProcessor.Factory factory = new GrokProcessor.Factory(Collections.emptyMap());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"patterns\", Collections.singletonList(\"[\"));\n        ElasticsearchParseException e = expectThrows(ElasticsearchParseException.class, () -> factory.create(config));\n        assertThat(e.getMessage(), equalTo(\"[patterns] Invalid regex pattern found in: [[]. premature end of char-class\"));\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testMissingField() {\n        String fieldName = \"foo.bar\";\n        IngestDocument doc = RandomDocumentPicks.randomIngestDocument(random(), new HashMap<>());\n        Grok grok = new Grok(Collections.singletonMap(\"ONE\", \"1\"), \"%{ONE:one}\");\n        GrokProcessor processor = new GrokProcessor(randomAsciiOfLength(10), grok, fieldName);\n        try {\n            processor.execute(doc);\n            fail();\n        } catch (Exception e) {\n            assertThat(e.getMessage(), equalTo(\"field [foo] not present as part of path [foo.bar]\"));\n        }\n    }","id":1884,"modified_method":"public void testMissingField() {\n        String fieldName = \"foo.bar\";\n        IngestDocument doc = RandomDocumentPicks.randomIngestDocument(random(), new HashMap<>());\n        GrokProcessor processor = new GrokProcessor(randomAsciiOfLength(10), Collections.singletonMap(\"ONE\", \"1\"),\n            Collections.singletonList(\"%{ONE:one}\"), fieldName);\n        Exception e = expectThrows(Exception.class, () -> processor.execute(doc));\n        assertThat(e.getMessage(), equalTo(\"field [foo] not present as part of path [foo.bar]\"));\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testMatch() throws Exception {\n        String fieldName = RandomDocumentPicks.randomFieldName(random());\n        IngestDocument doc = RandomDocumentPicks.randomIngestDocument(random(), new HashMap<>());\n        doc.setFieldValue(fieldName, \"1\");\n        Grok grok = new Grok(Collections.singletonMap(\"ONE\", \"1\"), \"%{ONE:one}\");\n        GrokProcessor processor = new GrokProcessor(randomAsciiOfLength(10), grok, fieldName);\n        processor.execute(doc);\n        assertThat(doc.getFieldValue(\"one\", String.class), equalTo(\"1\"));\n    }","id":1885,"modified_method":"public void testMatch() throws Exception {\n        String fieldName = RandomDocumentPicks.randomFieldName(random());\n        IngestDocument doc = RandomDocumentPicks.randomIngestDocument(random(), new HashMap<>());\n        doc.setFieldValue(fieldName, \"1\");\n        GrokProcessor processor = new GrokProcessor(randomAsciiOfLength(10), Collections.singletonMap(\"ONE\", \"1\"),\n            Collections.singletonList(\"%{ONE:one}\"), fieldName);\n        processor.execute(doc);\n        assertThat(doc.getFieldValue(\"one\", String.class), equalTo(\"1\"));\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testNotStringField() {\n        String fieldName = RandomDocumentPicks.randomFieldName(random());\n        IngestDocument doc = RandomDocumentPicks.randomIngestDocument(random(), new HashMap<>());\n        doc.setFieldValue(fieldName, 1);\n        Grok grok = new Grok(Collections.singletonMap(\"ONE\", \"1\"), \"%{ONE:one}\");\n        GrokProcessor processor = new GrokProcessor(randomAsciiOfLength(10), grok, fieldName);\n        try {\n            processor.execute(doc);\n            fail();\n        } catch (Exception e) {\n            assertThat(e.getMessage(), equalTo(\"field [\" + fieldName + \"] of type [java.lang.Integer] cannot be cast to [java.lang.String]\"));\n        }\n    }","id":1886,"modified_method":"public void testNotStringField() {\n        String fieldName = RandomDocumentPicks.randomFieldName(random());\n        IngestDocument doc = RandomDocumentPicks.randomIngestDocument(random(), new HashMap<>());\n        doc.setFieldValue(fieldName, 1);\n        GrokProcessor processor = new GrokProcessor(randomAsciiOfLength(10), Collections.singletonMap(\"ONE\", \"1\"),\n            Collections.singletonList(\"%{ONE:one}\"), fieldName);\n        Exception e = expectThrows(Exception.class, () -> processor.execute(doc));\n        assertThat(e.getMessage(), equalTo(\"field [\" + fieldName + \"] of type [java.lang.Integer] cannot be cast to [java.lang.String]\"));\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testNoMatch() {\n        String fieldName = RandomDocumentPicks.randomFieldName(random());\n        IngestDocument doc = RandomDocumentPicks.randomIngestDocument(random(), new HashMap<>());\n        doc.setFieldValue(fieldName, \"23\");\n        Grok grok = new Grok(Collections.singletonMap(\"ONE\", \"1\"), \"%{ONE:one}\");\n        GrokProcessor processor = new GrokProcessor(randomAsciiOfLength(10), grok, fieldName);\n        try {\n            processor.execute(doc);\n            fail();\n        } catch (Exception e) {\n            assertThat(e.getMessage(), equalTo(\"Grok expression does not match field value: [23]\"));\n        }\n    }","id":1887,"modified_method":"public void testNoMatch() {\n        String fieldName = RandomDocumentPicks.randomFieldName(random());\n        IngestDocument doc = RandomDocumentPicks.randomIngestDocument(random(), new HashMap<>());\n        doc.setFieldValue(fieldName, \"23\");\n        GrokProcessor processor = new GrokProcessor(randomAsciiOfLength(10), Collections.singletonMap(\"ONE\", \"1\"),\n            Collections.singletonList(\"%{ONE:one}\"), fieldName);\n        Exception e = expectThrows(Exception.class, () -> processor.execute(doc));\n        assertThat(e.getMessage(), equalTo(\"Provided Grok expressions do not match field value: [23]\"));\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testMatchWithoutCaptures() throws Exception {\n        String fieldName = \"value\";\n        IngestDocument originalDoc = new IngestDocument(new HashMap<>(), new HashMap<>());\n        originalDoc.setFieldValue(fieldName, fieldName);\n        IngestDocument doc = new IngestDocument(originalDoc);\n        Grok grok = new Grok(Collections.emptyMap(), fieldName);\n        GrokProcessor processor = new GrokProcessor(randomAsciiOfLength(10), grok, fieldName);\n        processor.execute(doc);\n        assertThat(doc, equalTo(originalDoc));\n    }","id":1888,"modified_method":"public void testMatchWithoutCaptures() throws Exception {\n        String fieldName = \"value\";\n        IngestDocument originalDoc = new IngestDocument(new HashMap<>(), new HashMap<>());\n        originalDoc.setFieldValue(fieldName, fieldName);\n        IngestDocument doc = new IngestDocument(originalDoc);\n        GrokProcessor processor = new GrokProcessor(randomAsciiOfLength(10), Collections.emptyMap(),\n            Collections.singletonList(fieldName), fieldName);\n        processor.execute(doc);\n        assertThat(doc, equalTo(originalDoc));\n    }","commit_id":"edfbdf2748f7abe0bcccd00893c37bb007dfc036","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public RepositorySystemSession newRepositorySession( MavenExecutionRequest request )\n    {\n        DefaultRepositorySystemSession session = new DefaultRepositorySystemSession();\n\n        session.setCache( request.getRepositoryCache() );\n\n        session.setArtifactDescriptorPolicy( new SimpleArtifactDescriptorPolicy( true, true ) );\n\n        Map<Object, Object> configProps = new LinkedHashMap<Object, Object>();\n        configProps.put( ConfigurationProperties.USER_AGENT, getUserAgent() );\n        configProps.put( ConfigurationProperties.INTERACTIVE, Boolean.valueOf( request.isInteractiveMode() ) );\n        configProps.putAll( request.getSystemProperties() );\n        configProps.putAll( request.getUserProperties() );\n\n        session.setOffline( request.isOffline() );\n        session.setChecksumPolicy( request.getGlobalChecksumPolicy() );\n        if ( request.isNoSnapshotUpdates() )\n        {\n            session.setUpdatePolicy( RepositoryPolicy.UPDATE_POLICY_NEVER );\n        }\n        else if ( request.isUpdateSnapshots() )\n        {\n            session.setUpdatePolicy( RepositoryPolicy.UPDATE_POLICY_ALWAYS );\n        }\n        else\n        {\n            session.setUpdatePolicy( null );\n        }\n\n        int errorPolicy = 0;\n        errorPolicy |= request.isCacheNotFound() ? ResolutionErrorPolicy.CACHE_NOT_FOUND : 0;\n        errorPolicy |= request.isCacheTransferError() ? ResolutionErrorPolicy.CACHE_TRANSFER_ERROR : 0;\n        session.setResolutionErrorPolicy( new SimpleResolutionErrorPolicy( errorPolicy, errorPolicy\n            | ResolutionErrorPolicy.CACHE_NOT_FOUND ) );\n\n        session.setArtifactTypeRegistry( RepositoryUtils.newArtifactTypeRegistry( artifactHandlerManager ) );\n\n        LocalRepository localRepo = new LocalRepository( request.getLocalRepository().getBasedir() );\n        session.setLocalRepositoryManager( repoSystem.newLocalRepositoryManager( localRepo ) );\n\n        if ( request.getWorkspaceReader() != null )\n        {\n            session.setWorkspaceReader( request.getWorkspaceReader() );\n        }\n        else\n        {\n            session.setWorkspaceReader( workspaceRepository );\n        }\n\n        DefaultSettingsDecryptionRequest decrypt = new DefaultSettingsDecryptionRequest();\n        decrypt.setProxies( request.getProxies() );\n        decrypt.setServers( request.getServers() );\n        SettingsDecryptionResult decrypted = settingsDecrypter.decrypt( decrypt );\n\n        if ( logger.isDebugEnabled() )\n        {\n            for ( SettingsProblem problem : decrypted.getProblems() )\n            {\n                logger.debug( problem.getMessage(), problem.getException() );\n            }\n        }\n\n        DefaultMirrorSelector mirrorSelector = new DefaultMirrorSelector();\n        for ( Mirror mirror : request.getMirrors() )\n        {\n            mirrorSelector.add( mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(),\n                                mirror.getMirrorOfLayouts() );\n        }\n        session.setMirrorSelector( mirrorSelector );\n\n        DefaultProxySelector proxySelector = new DefaultProxySelector();\n        for ( Proxy proxy : decrypted.getProxies() )\n        {\n            Authentication proxyAuth = new Authentication( proxy.getUsername(), proxy.getPassword() );\n            proxySelector.add( new org.eclipse.aether.repository.Proxy( proxy.getProtocol(), proxy.getHost(), proxy.getPort(),\n                                                                proxyAuth ), proxy.getNonProxyHosts() );\n        }\n        session.setProxySelector( proxySelector );\n\n        DefaultAuthenticationSelector authSelector = new DefaultAuthenticationSelector();\n        for ( Server server : decrypted.getServers() )\n        {\n            Authentication auth =\n                new Authentication( server.getUsername(), server.getPassword(), server.getPrivateKey(),\n                                    server.getPassphrase() );\n            authSelector.add( server.getId(), auth );\n\n            if ( server.getConfiguration() != null )\n            {\n                Xpp3Dom dom = (Xpp3Dom) server.getConfiguration();\n                for ( int i = dom.getChildCount() - 1; i >= 0; i-- )\n                {\n                    Xpp3Dom child = dom.getChild( i );\n                    if ( \"wagonProvider\".equals( child.getName() ) )\n                    {\n                        dom.removeChild( i );\n                    }\n                }\n\n                XmlPlexusConfiguration config = new XmlPlexusConfiguration( dom );\n                configProps.put( \"aether.connector.wagon.config.\" + server.getId(), config );\n            }\n\n            configProps.put( \"aether.connector.perms.fileMode.\" + server.getId(), server.getFilePermissions() );\n            configProps.put( \"aether.connector.perms.dirMode.\" + server.getId(), server.getDirectoryPermissions() );\n        }\n        session.setAuthenticationSelector( authSelector );\n\n        DependencyTraverser depTraverser = new FatArtifactTraverser();\n        session.setDependencyTraverser( depTraverser );\n\n        DependencyManager depManager = new ClassicDependencyManager();\n        session.setDependencyManager( depManager );\n\n        DependencySelector depFilter =\n            new AndDependencySelector( new ScopeDependencySelector( \"test\", \"provided\" ), new OptionalDependencySelector(),\n                                     new ExclusionDependencySelector() );\n        session.setDependencySelector( depFilter );\n\n        DependencyGraphTransformer transformer =\n            new ChainedDependencyGraphTransformer( new ConflictMarker(), new JavaEffectiveScopeCalculator(),\n                                                   new NearestVersionConflictResolver(),\n                                                   new JavaDependencyContextRefiner() );\n        session.setDependencyGraphTransformer( transformer );\n\n        session.setTransferListener( request.getTransferListener() );\n\n        session.setRepositoryListener( eventSpyDispatcher.chainListener( new LoggingRepositoryListener( logger ) ) );\n\n        session.setUserProperties( request.getUserProperties() );\n        session.setSystemProperties( request.getSystemProperties() );\n        session.setConfigProperties( configProps );\n\n        return session;\n    }","id":1889,"modified_method":"public RepositorySystemSession newRepositorySession( MavenExecutionRequest request )\n    {\n        DefaultRepositorySystemSession session = new DefaultRepositorySystemSession();\n\n        session.setCache( request.getRepositoryCache() );\n\n        session.setArtifactDescriptorPolicy( new SimpleArtifactDescriptorPolicy( true, true ) );\n\n        Map<Object, Object> configProps = new LinkedHashMap<Object, Object>();\n        configProps.put( ConfigurationProperties.USER_AGENT, getUserAgent() );\n        configProps.put( ConfigurationProperties.INTERACTIVE, Boolean.valueOf( request.isInteractiveMode() ) );\n        configProps.putAll( request.getSystemProperties() );\n        configProps.putAll( request.getUserProperties() );\n\n        session.setOffline( request.isOffline() );\n        session.setChecksumPolicy( request.getGlobalChecksumPolicy() );\n        if ( request.isNoSnapshotUpdates() )\n        {\n            session.setUpdatePolicy( RepositoryPolicy.UPDATE_POLICY_NEVER );\n        }\n        else if ( request.isUpdateSnapshots() )\n        {\n            session.setUpdatePolicy( RepositoryPolicy.UPDATE_POLICY_ALWAYS );\n        }\n        else\n        {\n            session.setUpdatePolicy( null );\n        }\n\n        int errorPolicy = 0;\n        errorPolicy |= request.isCacheNotFound() ? ResolutionErrorPolicy.CACHE_NOT_FOUND : 0;\n        errorPolicy |= request.isCacheTransferError() ? ResolutionErrorPolicy.CACHE_TRANSFER_ERROR : 0;\n        session.setResolutionErrorPolicy( new SimpleResolutionErrorPolicy( errorPolicy, errorPolicy\n            | ResolutionErrorPolicy.CACHE_NOT_FOUND ) );\n\n        session.setArtifactTypeRegistry( RepositoryUtils.newArtifactTypeRegistry( artifactHandlerManager ) );\n\n        LocalRepository localRepo = new LocalRepository( request.getLocalRepository().getBasedir() );\n        session.setLocalRepositoryManager( repoSystem.newLocalRepositoryManager( localRepo ) );\n\n        if ( request.getWorkspaceReader() != null )\n        {\n            session.setWorkspaceReader( request.getWorkspaceReader() );\n        }\n        else\n        {\n            session.setWorkspaceReader( workspaceRepository );\n        }\n\n        DefaultSettingsDecryptionRequest decrypt = new DefaultSettingsDecryptionRequest();\n        decrypt.setProxies( request.getProxies() );\n        decrypt.setServers( request.getServers() );\n        SettingsDecryptionResult decrypted = settingsDecrypter.decrypt( decrypt );\n\n        if ( logger.isDebugEnabled() )\n        {\n            for ( SettingsProblem problem : decrypted.getProblems() )\n            {\n                logger.debug( problem.getMessage(), problem.getException() );\n            }\n        }\n\n        DefaultMirrorSelector mirrorSelector = new DefaultMirrorSelector();\n        for ( Mirror mirror : request.getMirrors() )\n        {\n            mirrorSelector.add( mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(),\n                                mirror.getMirrorOfLayouts() );\n        }\n        session.setMirrorSelector( mirrorSelector );\n\n        DefaultProxySelector proxySelector = new DefaultProxySelector();\n        for ( Proxy proxy : decrypted.getProxies() )\n        {\n            AuthenticationBuilder authBuilder = new AuthenticationBuilder();\n            authBuilder.username( proxy.getUsername() ).password( proxy.getPassword() );\n            proxySelector.add( new org.eclipse.aether.repository.Proxy( proxy.getProtocol(), proxy.getHost(),\n                                                                        proxy.getPort(), authBuilder.build() ),\n                               proxy.getNonProxyHosts() );\n        }\n        session.setProxySelector( proxySelector );\n\n        DefaultAuthenticationSelector authSelector = new DefaultAuthenticationSelector();\n        for ( Server server : decrypted.getServers() )\n        {\n            AuthenticationBuilder authBuilder = new AuthenticationBuilder();\n            authBuilder.username( server.getUsername() ).password( server.getPassword() );\n            authBuilder.privateKey( server.getPrivateKey(), server.getPassphrase() );\n            authSelector.add( server.getId(), authBuilder.build() );\n\n            if ( server.getConfiguration() != null )\n            {\n                Xpp3Dom dom = (Xpp3Dom) server.getConfiguration();\n                for ( int i = dom.getChildCount() - 1; i >= 0; i-- )\n                {\n                    Xpp3Dom child = dom.getChild( i );\n                    if ( \"wagonProvider\".equals( child.getName() ) )\n                    {\n                        dom.removeChild( i );\n                    }\n                }\n\n                XmlPlexusConfiguration config = new XmlPlexusConfiguration( dom );\n                configProps.put( \"aether.connector.wagon.config.\" + server.getId(), config );\n            }\n\n            configProps.put( \"aether.connector.perms.fileMode.\" + server.getId(), server.getFilePermissions() );\n            configProps.put( \"aether.connector.perms.dirMode.\" + server.getId(), server.getDirectoryPermissions() );\n        }\n        session.setAuthenticationSelector( authSelector );\n\n        DependencyTraverser depTraverser = new FatArtifactTraverser();\n        session.setDependencyTraverser( depTraverser );\n\n        DependencyManager depManager = new ClassicDependencyManager();\n        session.setDependencyManager( depManager );\n\n        DependencySelector depFilter =\n            new AndDependencySelector( new ScopeDependencySelector( \"test\", \"provided\" ), new OptionalDependencySelector(),\n                                     new ExclusionDependencySelector() );\n        session.setDependencySelector( depFilter );\n\n        DependencyGraphTransformer transformer =\n            new ChainedDependencyGraphTransformer( new ConflictMarker(), new JavaEffectiveScopeCalculator(),\n                                                   new NearestVersionConflictResolver(),\n                                                   new JavaDependencyContextRefiner() );\n        session.setDependencyGraphTransformer( transformer );\n\n        session.setTransferListener( request.getTransferListener() );\n\n        session.setRepositoryListener( eventSpyDispatcher.chainListener( new LoggingRepositoryListener( logger ) ) );\n\n        session.setUserProperties( request.getUserProperties() );\n        session.setSystemProperties( request.getSystemProperties() );\n        session.setConfigProperties( configProps );\n\n        return session;\n    }","commit_id":"28387451563d45dbc166df3d4b029b63a858c6ac","url":"https://github.com/apache/maven"},{"original_method":"private Authentication getAuthentication( RepositorySystemSession session, ArtifactRepository repository )\n    {\n        if ( session != null )\n        {\n            AuthenticationSelector selector = session.getAuthenticationSelector();\n            if ( selector != null )\n            {\n                org.eclipse.aether.repository.Authentication auth =\n                    selector.getAuthentication( RepositoryUtils.toRepo( repository ) );\n                if ( auth != null )\n                {\n                    Authentication result = new Authentication( auth.getUsername(), auth.getPassword() );\n                    result.setPrivateKey( auth.getPrivateKeyFile() );\n                    result.setPassphrase( auth.getPassphrase() );\n                    return result;\n                }\n            }\n        }\n        return null;\n    }","id":1890,"modified_method":"private Authentication getAuthentication( RepositorySystemSession session, ArtifactRepository repository )\n    {\n        if ( session != null )\n        {\n            AuthenticationSelector selector = session.getAuthenticationSelector();\n            if ( selector != null )\n            {\n                RemoteRepository repo = RepositoryUtils.toRepo( repository );\n                org.eclipse.aether.repository.Authentication auth = selector.getAuthentication( repo );\n                if ( auth != null )\n                {\n                    AuthenticationContext authCtx = AuthenticationContext.forRepository( session, repo );\n                    Authentication result =\n                        new Authentication( authCtx.get( AuthenticationContext.USERNAME ),\n                                            authCtx.get( AuthenticationContext.PASSWORD ) );\n                    result.setPrivateKey( authCtx.get( AuthenticationContext.PRIVATE_KEY_PATH ) );\n                    result.setPassphrase( authCtx.get( AuthenticationContext.PRIVATE_KEY_PASSPHRASE ) );\n                    authCtx.close();\n                    return result;\n                }\n            }\n        }\n        return null;\n    }","commit_id":"28387451563d45dbc166df3d4b029b63a858c6ac","url":"https://github.com/apache/maven"},{"original_method":"private Proxy getProxy( RepositorySystemSession session, ArtifactRepository repository )\n    {\n        if ( session != null )\n        {\n            ProxySelector selector = session.getProxySelector();\n            if ( selector != null )\n            {\n                org.eclipse.aether.repository.Proxy proxy = selector.getProxy( RepositoryUtils.toRepo( repository ) );\n                if ( proxy != null )\n                {\n                    Proxy p = new Proxy();\n                    p.setHost( proxy.getHost() );\n                    p.setProtocol( proxy.getType() );\n                    p.setPort( proxy.getPort() );\n                    if ( proxy.getAuthentication() != null )\n                    {\n                        p.setUserName( proxy.getAuthentication().getUsername() );\n                        p.setPassword( proxy.getAuthentication().getPassword() );\n                    }\n                    return p;\n                }\n            }\n        }\n        return null;\n    }","id":1891,"modified_method":"private Proxy getProxy( RepositorySystemSession session, ArtifactRepository repository )\n    {\n        if ( session != null )\n        {\n            ProxySelector selector = session.getProxySelector();\n            if ( selector != null )\n            {\n                RemoteRepository repo = RepositoryUtils.toRepo( repository );\n                org.eclipse.aether.repository.Proxy proxy = selector.getProxy( repo );\n                if ( proxy != null )\n                {\n                    Proxy p = new Proxy();\n                    p.setHost( proxy.getHost() );\n                    p.setProtocol( proxy.getType() );\n                    p.setPort( proxy.getPort() );\n                    if ( proxy.getAuthentication() != null )\n                    {\n                        AuthenticationContext authCtx = AuthenticationContext.forProxy( session, repo );\n                        p.setUserName( authCtx.get( AuthenticationContext.USERNAME ) );\n                        p.setPassword( authCtx.get( AuthenticationContext.PASSWORD ) );\n                        p.setNtlmDomain( authCtx.get( AuthenticationContext.NTLM_DOMAIN ) );\n                        p.setNtlmHost( authCtx.get( AuthenticationContext.NTLM_WORKSTATION ) );\n                        authCtx.close();\n                    }\n                    return p;\n                }\n            }\n        }\n        return null;\n    }","commit_id":"28387451563d45dbc166df3d4b029b63a858c6ac","url":"https://github.com/apache/maven"},{"original_method":"private static Proxy toProxy( org.apache.maven.repository.Proxy proxy )\n    {\n        Proxy result = null;\n        if ( proxy != null )\n        {\n            Authentication auth = new Authentication( proxy.getUserName(), proxy.getPassword() );\n            result = new Proxy( proxy.getProtocol(), proxy.getHost(), proxy.getPort(), auth );\n        }\n        return result;\n    }","id":1892,"modified_method":"private static Proxy toProxy( org.apache.maven.repository.Proxy proxy )\n    {\n        Proxy result = null;\n        if ( proxy != null )\n        {\n            AuthenticationBuilder authBuilder = new AuthenticationBuilder();\n            authBuilder.username( proxy.getUserName() ).password( proxy.getPassword() );\n            result = new Proxy( proxy.getProtocol(), proxy.getHost(), proxy.getPort(), authBuilder.build() );\n        }\n        return result;\n    }","commit_id":"28387451563d45dbc166df3d4b029b63a858c6ac","url":"https://github.com/apache/maven"},{"original_method":"private static Authentication toAuthentication( org.apache.maven.artifact.repository.Authentication auth )\n    {\n        Authentication result = null;\n        if ( auth != null )\n        {\n            result =\n                new Authentication( auth.getUsername(), auth.getPassword(), auth.getPrivateKey(), auth.getPassphrase() );\n        }\n        return result;\n    }","id":1893,"modified_method":"private static Authentication toAuthentication( org.apache.maven.artifact.repository.Authentication auth )\n    {\n        Authentication result = null;\n        if ( auth != null )\n        {\n            AuthenticationBuilder authBuilder = new AuthenticationBuilder();\n            authBuilder.username( auth.getUsername() ).password( auth.getPassword() );\n            authBuilder.privateKey( auth.getPrivateKey(), auth.getPassphrase() );\n            result = authBuilder.build();\n        }\n        return result;\n    }","commit_id":"28387451563d45dbc166df3d4b029b63a858c6ac","url":"https://github.com/apache/maven"},{"original_method":"public void init(BundleContext context, DependencyManager manager) throws Exception {\n    \tDictionary properties = new Properties();\n        properties.put(Constants.SERVICE_PID, \"org.osgi.deployment.rp.autoconf\");\n        properties.put(EventConstants.EVENT_TOPIC, org.apache.felix.deploymentadmin.Constants.EVENTTOPIC_COMPLETE);\n        \n        manager.add(createComponent()\n            .setInterface(new String[] { ResourceProcessor.class.getName(), EventHandler.class.getName() }, properties)\n            .setImplementation(AutoConfResourceProcessor.class)\n            .add(createServiceDependency()\n                .setService(MetaTypeService.class)\n                .setRequired(false))\n            .add(createServiceDependency()\n                .setService(LogService.class)\n                .setRequired(false)));\n    }","id":1894,"modified_method":"public void init(BundleContext context, DependencyManager manager) throws Exception {\n    \tDictionary properties = new Properties();\n        properties.put(Constants.SERVICE_PID, \"org.osgi.deployment.rp.autoconf\");\n        \n        AutoConfResourceProcessor processor = new AutoConfResourceProcessor();\n        manager.add(createComponent()\n            .setInterface(ResourceProcessor.class.getName(), properties)\n            .setAutoConfig(Component.class, false)\n            .setImplementation(processor)\n            .add(createServiceDependency()\n                .setService(MetaTypeService.class)\n                .setRequired(false))\n            .add(createServiceDependency()\n                .setService(LogService.class)\n                .setRequired(false)));\n    }","commit_id":"37fa77355a5b69c66bf568a9f80a8fc7d1996543","url":"https://github.com/apache/felix"},{"original_method":"private void endSession() {\n        m_toBeInstalled.clear();\n        m_toBeDeleted.clear();\n        m_postCommitTasks.clear();\n        m_configurationAdminTasks.clear();\n        m_session = null;\n    }","id":1895,"modified_method":"private void endSession() {\n        if (m_component != null) {\n        \tm_dm.remove(m_component);\n            m_component = null;\n        }\n        m_toBeInstalled.clear();\n        m_toBeDeleted.clear();\n        m_postCommitTasks.clear();\n        m_configurationAdminTasks.clear();\n        m_session = null;\n    }","commit_id":"37fa77355a5b69c66bf568a9f80a8fc7d1996543","url":"https://github.com/apache/felix"},{"original_method":"public void postcommit() {\n        m_log.log(LogService.LOG_DEBUG, \"post commit\");\n        m_component.remove(m_configurationAdminDependency);\n        Iterator iterator = m_postCommitTasks.iterator();\n        while (iterator.hasNext()) {\n            PostCommitTask task = (PostCommitTask) iterator.next();\n            try {\n                task.run(m_persistencyManager);\n            }\n            catch (Exception e) {\n                m_log.log(LogService.LOG_ERROR, \"Exception during post commit wrap-up. Trying to continue.\", e);\n            }\n        }\n        endSession();\n        m_log.log(LogService.LOG_DEBUG, \"post commit done\");\n    }","id":1896,"modified_method":"public void postcommit() {\n        m_log.log(LogService.LOG_DEBUG, \"post commit\");\n        Iterator iterator = m_postCommitTasks.iterator();\n        while (iterator.hasNext()) {\n            PostCommitTask task = (PostCommitTask) iterator.next();\n            try {\n                task.run(m_persistencyManager);\n            }\n            catch (Exception e) {\n                m_log.log(LogService.LOG_ERROR, \"Exception during post commit wrap-up. Trying to continue.\", e);\n            }\n        }\n        endSession();\n        m_log.log(LogService.LOG_DEBUG, \"post commit done\");\n    }","commit_id":"37fa77355a5b69c66bf568a9f80a8fc7d1996543","url":"https://github.com/apache/felix"},{"original_method":"public void handleEvent(Event event) {\n        Boolean result = (Boolean) event.getProperty(Constants.EVENTPROPERTY_SUCCESSFUL);\n        // check if successful\n        if (result.booleanValue()) {\n            postcommit();\n        }\n        else {\n            postcommit();\n        }\n    }","id":1897,"modified_method":"public void handleEvent(Event event) {\n    \t// regardless of the outcome, we simply invoke postcommit\n    \tpostcommit();\n    }","commit_id":"37fa77355a5b69c66bf568a9f80a8fc7d1996543","url":"https://github.com/apache/felix"},{"original_method":"public void begin(DeploymentSession session) {\n        m_log.log(LogService.LOG_DEBUG, \"beginning session \" + session);\n        synchronized (LOCK) {\n            if (m_session != null) {\n                throw new IllegalArgumentException(\"Trying to begin new deployment session while already in one.\");\n            }\n            if (session == null) {\n                throw new IllegalArgumentException(\"Trying to begin new deployment session with a null session.\");\n            }\n            if (m_toBeInstalled.size() > 0 || m_toBeDeleted.size() > 0 || m_configurationAdminTasks.size() > 0 || m_postCommitTasks.size() > 0) {\n                throw new IllegalStateException(\"State not reset correctly at start of session.\");\n            }\n            m_session = session;\n        }\n    }","id":1898,"modified_method":"public void begin(DeploymentSession session) {\n        m_log.log(LogService.LOG_DEBUG, \"beginning session \" + session);\n        synchronized (LOCK) {\n            if (m_session != null) {\n                throw new IllegalArgumentException(\"Trying to begin new deployment session while already in one.\");\n            }\n            if (session == null) {\n                throw new IllegalArgumentException(\"Trying to begin new deployment session with a null session.\");\n            }\n            if (m_toBeInstalled.size() > 0 || m_toBeDeleted.size() > 0 || m_configurationAdminTasks.size() > 0 || m_postCommitTasks.size() > 0 || m_component != null) {\n                throw new IllegalStateException(\"State not reset correctly at start of session.\");\n            }\n            m_session = session;\n        }\n    }","commit_id":"37fa77355a5b69c66bf568a9f80a8fc7d1996543","url":"https://github.com/apache/felix"},{"original_method":"public synchronized void commit() {\n        m_log.log(LogService.LOG_DEBUG, \"commit\");\n        DependencyManager dm = m_component.getDependencyManager();\n        m_configurationAdminDependency = dm.createServiceDependency()\n            .setService(ConfigurationAdmin.class)\n            .setCallbacks(\"addConfigurationAdmin\", null)\n            .setRequired(false);\n        m_component.add(m_configurationAdminDependency);\n        m_log.log(LogService.LOG_DEBUG, \"commit done\");\n    }","id":1899,"modified_method":"public synchronized void commit() {\n        m_log.log(LogService.LOG_DEBUG, \"commit\");\n\n        Dictionary properties = new Properties();\n        properties.put(EventConstants.EVENT_TOPIC, org.apache.felix.deploymentadmin.Constants.EVENTTOPIC_COMPLETE);\n        m_component = m_dm.createComponent()\n            .setInterface(EventHandler.class.getName(), properties)\n            .setImplementation(this)\n            .setCallbacks(null, null, null, null)\n            .setAutoConfig(Component.class, false)\n            .add(m_dm.createServiceDependency()\n                .setService(ConfigurationAdmin.class)\n                .setCallbacks(\"addConfigurationAdmin\", null)\n                .setRequired(false));\n        m_dm.add(m_component);\n\n        m_log.log(LogService.LOG_DEBUG, \"commit done\");\n    }","commit_id":"37fa77355a5b69c66bf568a9f80a8fc7d1996543","url":"https://github.com/apache/felix"},{"original_method":"/** Go through a simple session, containing two empty configurations. */\n    public void testSimpleInstallAndUninstallSession() throws Throwable {\n        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n        Utils.configureObject(p, LogService.class);\n        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n            public DependencyManager getDependencyManager() {\n                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n            }\n        }));\n        Logger logger = new Logger();\n        Utils.configureObject(p, LogService.class, logger);\n        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n        tempDir.delete();\n        tempDir.mkdirs();\n        \n        System.out.println(\"Temporary dir: \" + tempDir);\n        \n        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n        Session s = new Session();\n        p.begin(s);\n        p.process(\"a\", new ByteArrayInputStream(\"<MetaData />\".getBytes()));\n        p.prepare();\n        p.commit();\n        p.postcommit();\n        logger.failOnException();\n        s = new Session();\n        p.begin(s);\n        p.dropped(\"a\");\n        p.prepare();\n        p.commit();\n        p.postcommit();\n        logger.failOnException();\n        Utils.removeDirectoryWithContent(tempDir);\n    }","id":1900,"modified_method":"/** Go through a simple session, containing two empty configurations. */\n    public void testSimpleInstallAndUninstallSession() throws Throwable {\n        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n        Utils.configureObject(p, LogService.class);\n        Utils.configureObject(p, DependencyManager.class, new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class)) {\n        \tpublic void remove(Component service) {\n        \t}\n        });\n        Logger logger = new Logger();\n        Utils.configureObject(p, LogService.class, logger);\n        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n        tempDir.delete();\n        tempDir.mkdirs();\n        \n        System.out.println(\"Temporary dir: \" + tempDir);\n        \n        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n        Session s = new Session();\n        p.begin(s);\n        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n            public DependencyManager getDependencyManager() {\n                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n            }\n        }));\n        p.process(\"a\", new ByteArrayInputStream(\"<MetaData />\".getBytes()));\n        p.prepare();\n        p.commit();\n        p.postcommit();\n        logger.failOnException();\n        s = new Session();\n        p.begin(s);\n        p.dropped(\"a\");\n        p.prepare();\n        p.commit();\n        p.postcommit();\n        logger.failOnException();\n        Utils.removeDirectoryWithContent(tempDir);\n    }","commit_id":"37fa77355a5b69c66bf568a9f80a8fc7d1996543","url":"https://github.com/apache/felix"},{"original_method":"/** Go through a simple session, containing two empty configurations. */\n    public void testBasicConfigurationSession() throws Throwable {\n        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n        Logger logger = new Logger();\n        Utils.configureObject(p, LogService.class, logger);\n        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n            public DependencyManager getDependencyManager() {\n                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n            }\n        }));\n        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n        tempDir.delete();\n        tempDir.mkdirs();\n        \n        System.out.println(\"Temporary dir: \" + tempDir);\n        \n        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n        Session s = new Session();\n        p.begin(s);\n        String config =\n            \"<MetaData xmlns:metatype='http://www.osgi.org/xmlns/metatype/v1.0.0'>\\n\" + \n            \"  <OCD name='ocd' id='ocd'>\\n\" + \n            \"    <AD id='name' type='STRING' cardinality='0' />\\n\" + \n            \"  <\/OCD>\\n\" + \n            \"  <Designate pid='simple' bundle='osgi-dp:location'>\\n\" + \n            \"    <Object ocdref='ocd'>\\n\" + \n            \"      <Attribute adref='name'>\\n\" + \n            \"        <Value><![CDATA[test]]><\/Value>\\n\" + \n            \"      <\/Attribute>\\n\" + \n            \"    <\/Object>\\n\" + \n            \"  <\/Designate>\\n\" + \n            \"<\/MetaData>\\n\";\n        p.process(\"basic\", new ByteArrayInputStream(config.getBytes()));\n        p.prepare();\n        p.commit();\n        p.addConfigurationAdmin(null, new ConfigurationAdmin() {\n            public Configuration[] listConfigurations(String filter) throws IOException, InvalidSyntaxException {\n                return null;\n            }\n            \n            public Configuration getConfiguration(String pid, String location) throws IOException {\n                return new ConfigurationImpl();\n            }\n            \n            public Configuration getConfiguration(String pid) throws IOException {\n                return null;\n            }\n            \n            public Configuration createFactoryConfiguration(String factoryPid, String location) throws IOException {\n                return null;\n            }\n            \n            public Configuration createFactoryConfiguration(String factoryPid) throws IOException {\n                return null;\n            }\n        });\n        p.postcommit();\n        logger.failOnException();\n        Utils.removeDirectoryWithContent(tempDir);\n    }","id":1901,"modified_method":"/** Go through a simple session, containing two empty configurations. */\n    public void testBasicConfigurationSession() throws Throwable {\n        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n        Logger logger = new Logger();\n        Utils.configureObject(p, LogService.class, logger);\n        Utils.configureObject(p, DependencyManager.class, new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class)) {\n        \tpublic void remove(Component service) {\n        \t}\n        });\n        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n        tempDir.delete();\n        tempDir.mkdirs();\n        \n        System.out.println(\"Temporary dir: \" + tempDir);\n        \n        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n        Session s = new Session();\n        p.begin(s);\n        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n            public DependencyManager getDependencyManager() {\n                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n            }\n        }));\n        String config =\n            \"<MetaData xmlns:metatype='http://www.osgi.org/xmlns/metatype/v1.0.0'>\\n\" + \n            \"  <OCD name='ocd' id='ocd'>\\n\" + \n            \"    <AD id='name' type='STRING' cardinality='0' />\\n\" + \n            \"  <\/OCD>\\n\" + \n            \"  <Designate pid='simple' bundle='osgi-dp:location'>\\n\" + \n            \"    <Object ocdref='ocd'>\\n\" + \n            \"      <Attribute adref='name'>\\n\" + \n            \"        <Value><![CDATA[test]]><\/Value>\\n\" + \n            \"      <\/Attribute>\\n\" + \n            \"    <\/Object>\\n\" + \n            \"  <\/Designate>\\n\" + \n            \"<\/MetaData>\\n\";\n        p.process(\"basic\", new ByteArrayInputStream(config.getBytes()));\n        p.prepare();\n        p.commit();\n        p.addConfigurationAdmin(null, new ConfigurationAdmin() {\n            public Configuration[] listConfigurations(String filter) throws IOException, InvalidSyntaxException {\n                return null;\n            }\n            \n            public Configuration getConfiguration(String pid, String location) throws IOException {\n                return new ConfigurationImpl();\n            }\n            \n            public Configuration getConfiguration(String pid) throws IOException {\n                return null;\n            }\n            \n            public Configuration createFactoryConfiguration(String factoryPid, String location) throws IOException {\n                return null;\n            }\n            \n            public Configuration createFactoryConfiguration(String factoryPid) throws IOException {\n                return null;\n            }\n        });\n        p.postcommit();\n        logger.failOnException();\n        Utils.removeDirectoryWithContent(tempDir);\n    }","commit_id":"37fa77355a5b69c66bf568a9f80a8fc7d1996543","url":"https://github.com/apache/felix"},{"original_method":"/** Go through a simple session, containing two empty configurations. */\n    public void testFilteredConfigurationSession() throws Throwable {\n        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n        Logger logger = new Logger();\n        Utils.configureObject(p, LogService.class, logger);\n        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n            public DependencyManager getDependencyManager() {\n                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n            }\n        }));\n        Utils.configureObject(p, BundleContext.class, Utils.createMockObjectAdapter(BundleContext.class, new Object() {\n            public Filter createFilter(String condition) {\n                return (Filter) Utils.createMockObjectAdapter(Filter.class, new Object() {\n                    public boolean match(ServiceReference ref) {\n                        Object id = ref.getProperty(\"id\");\n                        if (id != null && id.equals(Integer.valueOf(42))) {\n                            return true;\n                        }\n                        return false;\n                    }\n                });\n            }\n        }));\n        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n        tempDir.delete();\n        tempDir.mkdirs();\n        \n        System.out.println(\"Temporary dir: \" + tempDir);\n        \n        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n        Session s = new Session();\n        p.begin(s);\n        String config =\n            \"<MetaData xmlns:metatype='http://www.osgi.org/xmlns/metatype/v1.0.0' filter='(id=42)'>\\n\" + \n            \"  <OCD name='ocd' id='ocd'>\\n\" + \n            \"    <AD id='name' type='STRING' cardinality='0' />\\n\" + \n            \"  <\/OCD>\\n\" + \n            \"  <Designate pid='simple' bundle='osgi-dp:location'>\\n\" + \n            \"    <Object ocdref='ocd'>\\n\" + \n            \"      <Attribute adref='name'>\\n\" + \n            \"        <Value><![CDATA[test]]><\/Value>\\n\" + \n            \"      <\/Attribute>\\n\" + \n            \"    <\/Object>\\n\" + \n            \"  <\/Designate>\\n\" + \n            \"<\/MetaData>\\n\";\n        p.process(\"basic\", new ByteArrayInputStream(config.getBytes()));\n        p.prepare();\n        p.commit();\n        Properties props = new Properties();\n        props.put(\"id\", Integer.valueOf(42));\n        final Configuration configuration = new ConfigurationImpl();\n        p.addConfigurationAdmin(new Reference(props), new ConfigurationAdmin() {\n            public Configuration[] listConfigurations(String filter) throws IOException, InvalidSyntaxException {\n                return null;\n            }\n            \n            public Configuration getConfiguration(String pid, String location) throws IOException {\n                return configuration;\n            }\n            \n            public Configuration getConfiguration(String pid) throws IOException {\n                return null;\n            }\n            \n            public Configuration createFactoryConfiguration(String factoryPid, String location) throws IOException {\n                return null;\n            }\n            \n            public Configuration createFactoryConfiguration(String factoryPid) throws IOException {\n                return null;\n            }\n        });\n        \n        final Configuration emptyConfiguration = new ConfigurationImpl();\n        p.addConfigurationAdmin(new Reference(new Properties()), new ConfigurationAdmin() {\n            public Configuration[] listConfigurations(String filter) throws IOException, InvalidSyntaxException {\n                return null;\n            }\n            \n            public Configuration getConfiguration(String pid, String location) throws IOException {\n                return emptyConfiguration;\n            }\n            \n            public Configuration getConfiguration(String pid) throws IOException {\n                return null;\n            }\n            \n            public Configuration createFactoryConfiguration(String factoryPid, String location) throws IOException {\n                return null;\n            }\n            \n            public Configuration createFactoryConfiguration(String factoryPid) throws IOException {\n                return null;\n            }\n        });        \n        p.postcommit();\n        logger.failOnException();\n        assertEquals(\"test\", configuration.getProperties().get(\"name\"));\n        assertNull(emptyConfiguration.getProperties());\n        Utils.removeDirectoryWithContent(tempDir);\n    }","id":1902,"modified_method":"/** Go through a simple session, containing two empty configurations. */\n    public void testFilteredConfigurationSession() throws Throwable {\n        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n        Logger logger = new Logger();\n        Utils.configureObject(p, LogService.class, logger);\n        BundleContext mockBC = (BundleContext) Utils.createMockObjectAdapter(BundleContext.class, new Object() {\n            public Filter createFilter(String condition) {\n                return (Filter) Utils.createMockObjectAdapter(Filter.class, new Object() {\n                    public boolean match(ServiceReference ref) {\n                        Object id = ref.getProperty(\"id\");\n                        if (id != null && id.equals(Integer.valueOf(42))) {\n                            return true;\n                        }\n                        return false;\n                    }\n                    public void remove(Component service) {\n                    }\n                });\n            }\n        });\n\t\tUtils.configureObject(p, BundleContext.class, mockBC);\n        Utils.configureObject(p, DependencyManager.class, new DependencyManager(mockBC) {\n        \tpublic void remove(Component service) {\n        \t}\n        });\n        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n        tempDir.delete();\n        tempDir.mkdirs();\n        \n        System.out.println(\"Temporary dir: \" + tempDir);\n        \n        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n        Session s = new Session();\n        p.begin(s);\n        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n            public DependencyManager getDependencyManager() {\n                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n            }\n        }));\n        String config =\n            \"<MetaData xmlns:metatype='http://www.osgi.org/xmlns/metatype/v1.0.0' filter='(id=42)'>\\n\" + \n            \"  <OCD name='ocd' id='ocd'>\\n\" + \n            \"    <AD id='name' type='STRING' cardinality='0' />\\n\" + \n            \"  <\/OCD>\\n\" + \n            \"  <Designate pid='simple' bundle='osgi-dp:location'>\\n\" + \n            \"    <Object ocdref='ocd'>\\n\" + \n            \"      <Attribute adref='name'>\\n\" + \n            \"        <Value><![CDATA[test]]><\/Value>\\n\" + \n            \"      <\/Attribute>\\n\" + \n            \"    <\/Object>\\n\" + \n            \"  <\/Designate>\\n\" + \n            \"<\/MetaData>\\n\";\n        p.process(\"basic\", new ByteArrayInputStream(config.getBytes()));\n        p.prepare();\n        p.commit();\n        Properties props = new Properties();\n        props.put(\"id\", Integer.valueOf(42));\n        final Configuration configuration = new ConfigurationImpl();\n        p.addConfigurationAdmin(new Reference(props), new ConfigurationAdmin() {\n            public Configuration[] listConfigurations(String filter) throws IOException, InvalidSyntaxException {\n                return null;\n            }\n            \n            public Configuration getConfiguration(String pid, String location) throws IOException {\n                return configuration;\n            }\n            \n            public Configuration getConfiguration(String pid) throws IOException {\n                return null;\n            }\n            \n            public Configuration createFactoryConfiguration(String factoryPid, String location) throws IOException {\n                return null;\n            }\n            \n            public Configuration createFactoryConfiguration(String factoryPid) throws IOException {\n                return null;\n            }\n        });\n        \n        final Configuration emptyConfiguration = new ConfigurationImpl();\n        p.addConfigurationAdmin(new Reference(new Properties()), new ConfigurationAdmin() {\n            public Configuration[] listConfigurations(String filter) throws IOException, InvalidSyntaxException {\n                return null;\n            }\n            \n            public Configuration getConfiguration(String pid, String location) throws IOException {\n                return emptyConfiguration;\n            }\n            \n            public Configuration getConfiguration(String pid) throws IOException {\n                return null;\n            }\n            \n            public Configuration createFactoryConfiguration(String factoryPid, String location) throws IOException {\n                return null;\n            }\n            \n            public Configuration createFactoryConfiguration(String factoryPid) throws IOException {\n                return null;\n            }\n        });        \n        p.postcommit();\n        logger.failOnException();\n        assertEquals(\"test\", configuration.getProperties().get(\"name\"));\n        assertNull(emptyConfiguration.getProperties());\n        Utils.removeDirectoryWithContent(tempDir);\n    }","commit_id":"37fa77355a5b69c66bf568a9f80a8fc7d1996543","url":"https://github.com/apache/felix"},{"original_method":"/** Go through a simple session, containing two empty configurations. */\n    public void testSimpleSession() throws Exception {\n        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n        Utils.configureObject(p, LogService.class);\n        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n            public DependencyManager getDependencyManager() {\n                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n            }\n        }));\n        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n        tempDir.delete();\n        tempDir.mkdirs();\n        \n        System.out.println(\"Temporary dir: \" + tempDir);\n        \n        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n        Session s = new Session();\n        p.begin(s);\n        p.process(\"a\", new ByteArrayInputStream(\"<MetaData />\".getBytes()));\n        p.process(\"b\", new ByteArrayInputStream(\"<MetaData />\".getBytes()));\n        p.prepare();\n        p.commit();\n        p.postcommit();\n        Utils.removeDirectoryWithContent(tempDir);\n    }","id":1903,"modified_method":"/** Go through a simple session, containing two empty configurations. */\n    public void testSimpleSession() throws Exception {\n        AutoConfResourceProcessor p = new AutoConfResourceProcessor();\n        Utils.configureObject(p, LogService.class);\n        Utils.configureObject(p, DependencyManager.class, new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class)) {\n        \tpublic void remove(Component service) {\n        \t}\n        });\n        File tempDir = File.createTempFile(\"persistence\", \"dir\");\n        tempDir.delete();\n        tempDir.mkdirs();\n        \n        System.out.println(\"Temporary dir: \" + tempDir);\n        \n        Utils.configureObject(p, PersistencyManager.class, new PersistencyManager(tempDir));\n        Session s = new Session();\n        p.begin(s);\n        Utils.configureObject(p, Component.class, Utils.createMockObjectAdapter(Component.class, new Object() {\n            public DependencyManager getDependencyManager() {\n                return new DependencyManager((BundleContext) Utils.createNullObject(BundleContext.class));\n            }\n        }));\n        p.process(\"a\", new ByteArrayInputStream(\"<MetaData />\".getBytes()));\n        p.process(\"b\", new ByteArrayInputStream(\"<MetaData />\".getBytes()));\n        p.prepare();\n        p.commit();\n        p.postcommit();\n        Utils.removeDirectoryWithContent(tempDir);\n    }","commit_id":"37fa77355a5b69c66bf568a9f80a8fc7d1996543","url":"https://github.com/apache/felix"},{"original_method":"@Override\n  public boolean isApplicable(PsiExpression expr) {\n    if (!super.isApplicable(expr)) return false;\n    if (!expr.isPhysical()) return false;\n    PsiElement parent = expr.getParent();\n    if (!(parent instanceof PsiExpressionStatement)) return false;\n    final PsiElement element = parent.getParent();\n    if (!(element instanceof PsiCodeBlock) && !(FileTypeUtils.isInServerPageFile(element)  && element instanceof PsiFile)) return false;\n    return true;\n  }","id":1904,"modified_method":"@Override\n  public boolean isApplicable(PsiExpression expr) {\n    if (!super.isApplicable(expr)) return false;\n    if (!expr.isPhysical()) return false;\n    PsiElement expressionStatement = expr.getParent();\n    if (!(expressionStatement instanceof PsiExpressionStatement)) return false;\n\n    PsiElement statementParent = expressionStatement.getParent();\n    if (!isElseBranch(expr, statementParent) &&\n        !(statementParent instanceof PsiCodeBlock) &&\n        !(FileTypeUtils.isInServerPageFile(statementParent) && statementParent instanceof PsiFile)) {\n      return false;\n    }\n    return true;\n  }","commit_id":"2f3d180fbd06368092f0a2f4987939af85b9afa1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public TextRange surroundExpression(Project project, Editor editor, PsiExpression expr) throws IncorrectOperationException {\n    PsiManager manager = expr.getManager();\n    PsiElementFactory factory = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();\n    CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(project);\n\n    @NonNls String text = \"if(a){\\nst;\\n}\";\n    PsiIfStatement ifStatement = (PsiIfStatement)factory.createStatementFromText(text, null);\n    ifStatement = (PsiIfStatement)codeStyleManager.reformat(ifStatement);\n\n    ifStatement.getCondition().replace(expr);\n\n    PsiExpressionStatement statement = (PsiExpressionStatement)expr.getParent();\n    ifStatement = (PsiIfStatement)statement.replace(ifStatement);\n\n    PsiCodeBlock block = ((PsiBlockStatement)ifStatement.getThenBranch()).getCodeBlock();\n    block = CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(block);\n    TextRange range = block.getStatements()[0].getTextRange();\n    editor.getDocument().deleteString(range.getStartOffset(), range.getEndOffset());\n    return new TextRange(range.getStartOffset(), range.getStartOffset());\n  }","id":1905,"modified_method":"@Override\n  public TextRange surroundExpression(Project project, Editor editor, PsiExpression expr) throws IncorrectOperationException {\n    PsiManager manager = expr.getManager();\n    PsiElementFactory factory = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();\n    CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(project);\n\n    @NonNls String text = \"if(a){\\nst;\\n}\";\n    PsiIfStatement ifStatement = (PsiIfStatement)factory.createStatementFromText(text, null);\n    ifStatement = (PsiIfStatement)codeStyleManager.reformat(ifStatement);\n\n    PsiExpression condition = ifStatement.getCondition();\n    if (condition != null) {\n      condition.replace(expr);\n    }\n\n    PsiExpressionStatement statement = (PsiExpressionStatement)expr.getParent();\n    ifStatement = (PsiIfStatement)statement.replace(ifStatement);\n\n    PsiStatement thenBranch = ifStatement.getThenBranch();\n    if (thenBranch != null && thenBranch instanceof PsiBlockStatement) {\n      PsiCodeBlock block = ((PsiBlockStatement)thenBranch).getCodeBlock();\n      block = CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(block);\n      TextRange range = block.getStatements()[0].getTextRange();\n      editor.getDocument().deleteString(range.getStartOffset(), range.getEndOffset());\n      return TextRange.from(range.getStartOffset(), 0);\n    }\n    return TextRange.from(editor.getCaretModel().getOffset(), 0);\n  }","commit_id":"2f3d180fbd06368092f0a2f4987939af85b9afa1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void doBackSpaceAtCaret(Editor editor) {\n    if(editor.getSelectionModel().hasSelection()) {\n      int newOffset = editor.getSelectionModel().getSelectionStart();\n      editor.getCaretModel().moveToOffset(newOffset);\n      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n      EditorModificationUtil.deleteSelectedText(editor);\n      return;\n    }\n\n    int lineNumber = editor.getCaretModel().getLogicalPosition().line;\n    int colNumber = editor.getCaretModel().getLogicalPosition().column;\n    Document document = editor.getDocument();\n    if(colNumber > 0) {\n      if(EditorModificationUtil.calcAfterLineEnd(editor) > 0) {\n        int columnShift = -1;\n        editor.getCaretModel().moveCaretRelatively(columnShift, 0, false, false, true);\n      }\n      else {\n        int offset = editor.getCaretModel().getOffset();\n        editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n        editor.getSelectionModel().removeSelection();\n        document.deleteString(offset-1, offset);\n        editor.getCaretModel().moveToOffset(offset - 1, true);\n      }\n    }\n    else if(lineNumber > 0) {\n      int separatorLength = document.getLineSeparatorLength(lineNumber - 1);\n      int lineEnd = document.getLineEndOffset(lineNumber - 1) + separatorLength;\n      editor.getCaretModel().moveToOffset(lineEnd - separatorLength);\n      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n      editor.getSelectionModel().removeSelection();\n      document.deleteString(lineEnd - separatorLength, lineEnd);\n      // Do not group delete newline and other deletions.\n      CommandProcessor commandProcessor = CommandProcessor.getInstance();\n      commandProcessor.setCurrentCommandGroupId(null);\n    }\n  }","id":1906,"modified_method":"public static void doBackSpaceAtCaret(Editor editor) {\n    if(editor.getSelectionModel().hasSelection()) {\n      int newOffset = editor.getSelectionModel().getSelectionStart();\n      editor.getCaretModel().moveToOffset(newOffset);\n      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n      EditorModificationUtil.deleteSelectedText(editor);\n      return;\n    }\n\n    int lineNumber = editor.getCaretModel().getLogicalPosition().line;\n    int colNumber = editor.getCaretModel().getLogicalPosition().column;\n    Document document = editor.getDocument();\n    if(colNumber > 0) {\n      if(EditorModificationUtil.calcAfterLineEnd(editor) > 0) {\n        int columnShift = -1;\n        editor.getCaretModel().moveCaretRelatively(columnShift, 0, false, false, true);\n      }\n      else {\n        int offset = editor.getCaretModel().getOffset();\n        editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n        editor.getSelectionModel().removeSelection();\n\n        FoldRegion region = editor.getFoldingModel().getCollapsedRegionAtOffset(offset - 1);\n        if (region != null && region.shouldNeverExpand()) {\n          document.deleteString(region.getStartOffset(), region.getEndOffset());\n          editor.getCaretModel().moveToOffset(region.getStartOffset());\n        }\n        else {\n          document.deleteString(offset - 1, offset);\n          editor.getCaretModel().moveToOffset(offset - 1, true);\n        }\n      }\n    }\n    else if(lineNumber > 0) {\n      int separatorLength = document.getLineSeparatorLength(lineNumber - 1);\n      int lineEnd = document.getLineEndOffset(lineNumber - 1) + separatorLength;\n      editor.getCaretModel().moveToOffset(lineEnd - separatorLength);\n      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n      editor.getSelectionModel().removeSelection();\n      document.deleteString(lineEnd - separatorLength, lineEnd);\n      // Do not group delete newline and other deletions.\n      CommandProcessor commandProcessor = CommandProcessor.getInstance();\n      commandProcessor.setCurrentCommandGroupId(null);\n    }\n  }","commit_id":"8d8e603e0616e7f3936abbf99dd74ab9d7e7e942","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void deleteCharAtCaret(Editor editor) {\n    int lineNumber = editor.getCaretModel().getLogicalPosition().line;\n    int afterLineEnd = EditorModificationUtil.calcAfterLineEnd(editor);\n    Document document = editor.getDocument();\n    if(afterLineEnd < 0) {\n      int offset = editor.getCaretModel().getOffset();\n      document.deleteString(offset, offset + 1);\n      editor.getCaretModel().moveToOffset(offset);\n      return;\n    }\n    if(lineNumber + 1 >= document.getLineCount())\n      return;\n\n    // Do not group delete newline and other deletions.\n    CommandProcessor commandProcessor = CommandProcessor.getInstance();\n    commandProcessor.setCurrentCommandGroupId(null);\n\n    int nextLineStart = document.getLineStartOffset(lineNumber + 1);\n    int nextLineEnd = document.getLineEndOffset(lineNumber + 1);\n    if(nextLineEnd - nextLineStart > 0) {\n      StringBuilder buf = new StringBuilder();\n      StringUtil.repeatSymbol(buf, ' ', afterLineEnd);\n      document.insertString(getCaretLineStart(editor) + getCaretLineLength(editor), buf.toString());\n      nextLineStart = document.getLineStartOffset(lineNumber + 1);\n    }\n    int thisLineEnd = document.getLineEndOffset(lineNumber);\n    document.deleteString(thisLineEnd, nextLineStart);\n  }","id":1907,"modified_method":"public static void deleteCharAtCaret(Editor editor) {\n    int lineNumber = editor.getCaretModel().getLogicalPosition().line;\n    int afterLineEnd = EditorModificationUtil.calcAfterLineEnd(editor);\n    Document document = editor.getDocument();\n    if(afterLineEnd < 0) {\n      int offset = editor.getCaretModel().getOffset();\n      FoldRegion region = editor.getFoldingModel().getCollapsedRegionAtOffset(offset);\n      if (region != null && region.shouldNeverExpand()) {\n        document.deleteString(region.getStartOffset(), region.getEndOffset());\n        editor.getCaretModel().moveToOffset(region.getStartOffset());\n      }\n      else {\n        document.deleteString(offset, offset + 1);\n        editor.getCaretModel().moveToOffset(offset);\n      }\n      return;\n    }\n\n    if(lineNumber + 1 >= document.getLineCount()) return;\n\n    // Do not group delete newline and other deletions.\n    CommandProcessor commandProcessor = CommandProcessor.getInstance();\n    commandProcessor.setCurrentCommandGroupId(null);\n\n    int nextLineStart = document.getLineStartOffset(lineNumber + 1);\n    int nextLineEnd = document.getLineEndOffset(lineNumber + 1);\n    if(nextLineEnd - nextLineStart > 0) {\n      StringBuilder buf = new StringBuilder();\n      StringUtil.repeatSymbol(buf, ' ', afterLineEnd);\n      document.insertString(getCaretLineStart(editor) + getCaretLineLength(editor), buf.toString());\n      nextLineStart = document.getLineStartOffset(lineNumber + 1);\n    }\n    int thisLineEnd = document.getLineEndOffset(lineNumber);\n    document.deleteString(thisLineEnd, nextLineStart);\n  }","commit_id":"8d8e603e0616e7f3936abbf99dd74ab9d7e7e942","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n    private static Annotation markRedeclaration(@NotNull Set<PsiElement> redeclarations,\n                                                @NotNull Diagnostic redeclarationDiagnostic,\n                                                @NotNull AnnotationHolder holder) {\n        if (!redeclarations.add(redeclarationDiagnostic.getPsiElement())) return null;\n        List<TextRange> textRanges = redeclarationDiagnostic.getTextRanges();\n        if (textRanges.isEmpty()) return null;\n        return holder.createErrorAnnotation(textRanges.get(0), getMessage(redeclarationDiagnostic));\n    }","id":1908,"modified_method":"@Nullable\n    private static Annotation markRedeclaration(@NotNull Set<PsiElement> redeclarations,\n                                                @NotNull Diagnostic redeclarationDiagnostic,\n                                                @NotNull AnnotationHolder holder) {\n        if (!redeclarations.add(redeclarationDiagnostic.getPsiElement())) return null;\n        List<TextRange> textRanges = redeclarationDiagnostic.getTextRanges();\n        if (textRanges.isEmpty()) return null;\n        Annotation annotation = holder.createErrorAnnotation(textRanges.get(0), \"\");\n        annotation.setTooltip(getMessage(redeclarationDiagnostic));\n        return annotation;\n    }","commit_id":"6fb0f79de988189d884dcac5f887273fa5e03da5","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    private static String getMessage(@NotNull Diagnostic diagnostic) {\n        String message = IdeErrorMessages.RENDERER.render(diagnostic);\n        if (ApplicationManager.getApplication().isInternal() || ApplicationManager.getApplication().isUnitTestMode()) {\n            return \"[\" + diagnostic.getFactory().getName() + \"] \" + message;\n        }\n        return message;\n    }","id":1909,"modified_method":"@NotNull\n    private static String getMessage(@NotNull Diagnostic diagnostic) {\n        String message = IdeErrorMessages.RENDERER.render(diagnostic);\n        if (ApplicationManager.getApplication().isInternal() || ApplicationManager.getApplication().isUnitTestMode()) {\n            String factoryName = diagnostic.getFactory().getName();\n            if (message.startsWith(\"<html>\")) {\n                message = String.format(\"<html>[%s] %s\", factoryName, message.substring(\"<html>\".length()));\n            } else {\n                message = String.format(\"[%s] %s\", factoryName, message);\n            }\n        }\n        if (!message.startsWith(\"<html>\")) {\n            message = \"<html><body>\" + XmlStringUtil.escapeString(message) + \"<\/body><\/html>\";\n        }\n        return message;\n    }","commit_id":"6fb0f79de988189d884dcac5f887273fa5e03da5","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static void registerDiagnosticAnnotations(@NotNull Diagnostic diagnostic,\n                                                      @NotNull Set<PsiElement> redeclarations,\n                                                      @NotNull final AnnotationHolder holder) {\n        List<TextRange> textRanges = diagnostic.getTextRanges();\n        if (diagnostic.getSeverity() == Severity.ERROR) {\n            if (diagnostic.getFactory() == Errors.UNRESOLVED_IDE_TEMPLATE) {\n                return;\n            }\n            if (diagnostic.getFactory() instanceof UnresolvedReferenceDiagnosticFactory) {\n                JetReferenceExpression referenceExpression = (JetReferenceExpression)diagnostic.getPsiElement();\n                PsiReference reference = referenceExpression.getReference();\n                if (reference instanceof MultiRangeReference) {\n                    MultiRangeReference mrr = (MultiRangeReference)reference;\n                    for (TextRange range : mrr.getRanges()) {\n                        Annotation annotation = holder.createErrorAnnotation(\n                            range.shiftRight(referenceExpression.getTextOffset()),\n                            getMessage(diagnostic));\n\n                        registerQuickFix(annotation, diagnostic);\n\n                        annotation.setHighlightType(ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);\n                    }\n                }\n                else {\n                    for (TextRange textRange : textRanges) {\n                        Annotation annotation = holder.createErrorAnnotation(textRange, getMessage(diagnostic));\n                        registerQuickFix(annotation, diagnostic);\n                        annotation.setHighlightType(ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);\n                    }\n                }\n\n                return;\n            }\n\n            if (diagnostic.getFactory() == Errors.ILLEGAL_ESCAPE_SEQUENCE) {\n                for (TextRange textRange : diagnostic.getTextRanges()) {\n                    Annotation annotation = holder.createErrorAnnotation(textRange, getMessage(diagnostic));\n                    annotation.setTextAttributes(JetHighlightingColors.INVALID_STRING_ESCAPE);\n                    //annotation.setEnforcedTextAttributes(TextAttributes.merge(JetHighlightingColors.INVALID_STRING_ESCAPE.getDefaultAttributes(), annotation.getTextAttributes().getDefaultAttributes()));\n                }\n                return;\n            }\n\n            if (diagnostic.getFactory() instanceof RedeclarationDiagnosticFactory) {\n                registerQuickFix(markRedeclaration(redeclarations, diagnostic, holder), diagnostic);\n                return;\n            }\n\n            // Generic annotation\n            for (TextRange textRange : textRanges) {\n                Annotation errorAnnotation = holder.createErrorAnnotation(textRange, getMessage(diagnostic));\n                registerQuickFix(errorAnnotation, diagnostic);\n\n                if (diagnostic.getFactory() == Errors.INVISIBLE_REFERENCE) {\n                    errorAnnotation.setHighlightType(ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);\n                }\n            }\n        }\n        else if (diagnostic.getSeverity() == Severity.WARNING) {\n            for (TextRange textRange : textRanges) {\n                Annotation annotation = holder.createWarningAnnotation(textRange, getMessage(diagnostic));\n                registerQuickFix(annotation, diagnostic);\n\n                if (diagnostic.getFactory() instanceof UnusedElementDiagnosticFactory) {\n                    annotation.setHighlightType(ProblemHighlightType.LIKE_UNUSED_SYMBOL);\n                }\n            }\n        }\n    }","id":1910,"modified_method":"private static void registerDiagnosticAnnotations(@NotNull Diagnostic diagnostic,\n                                                      @NotNull Set<PsiElement> redeclarations,\n                                                      @NotNull final AnnotationHolder holder) {\n        List<TextRange> textRanges = diagnostic.getTextRanges();\n        if (diagnostic.getSeverity() == Severity.ERROR) {\n            if (diagnostic.getFactory() == Errors.UNRESOLVED_IDE_TEMPLATE) {\n                return;\n            }\n            if (diagnostic.getFactory() instanceof UnresolvedReferenceDiagnosticFactory) {\n                JetReferenceExpression referenceExpression = (JetReferenceExpression)diagnostic.getPsiElement();\n                PsiReference reference = referenceExpression.getReference();\n                if (reference instanceof MultiRangeReference) {\n                    MultiRangeReference mrr = (MultiRangeReference)reference;\n                    for (TextRange range : mrr.getRanges()) {\n                        Annotation annotation = holder.createErrorAnnotation(range.shiftRight(referenceExpression.getTextOffset()), getDefaultMessage(diagnostic));\n                        annotation.setTooltip(getMessage(diagnostic));\n\n                        registerQuickFix(annotation, diagnostic);\n\n                        annotation.setHighlightType(ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);\n                    }\n                }\n                else {\n                    for (TextRange textRange : textRanges) {\n                        Annotation annotation = holder.createErrorAnnotation(textRange, getDefaultMessage(diagnostic));\n                        annotation.setTooltip(getMessage(diagnostic));\n                        registerQuickFix(annotation, diagnostic);\n                        annotation.setHighlightType(ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);\n                    }\n                }\n\n                return;\n            }\n\n            if (diagnostic.getFactory() == Errors.ILLEGAL_ESCAPE_SEQUENCE) {\n                for (TextRange textRange : diagnostic.getTextRanges()) {\n                    Annotation annotation = holder.createErrorAnnotation(textRange, getDefaultMessage(diagnostic));\n                    annotation.setTooltip(getMessage(diagnostic));\n                    annotation.setTextAttributes(JetHighlightingColors.INVALID_STRING_ESCAPE);\n                }\n                return;\n            }\n\n            if (diagnostic.getFactory() instanceof RedeclarationDiagnosticFactory) {\n                registerQuickFix(markRedeclaration(redeclarations, diagnostic, holder), diagnostic);\n                return;\n            }\n\n            // Generic annotation\n            for (TextRange textRange : textRanges) {\n                Annotation errorAnnotation = holder.createErrorAnnotation(textRange, getDefaultMessage(diagnostic));\n                errorAnnotation.setTooltip(getMessage(diagnostic));\n                registerQuickFix(errorAnnotation, diagnostic);\n\n                if (diagnostic.getFactory() == Errors.INVISIBLE_REFERENCE) {\n                    errorAnnotation.setHighlightType(ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);\n                }\n            }\n        }\n        else if (diagnostic.getSeverity() == Severity.WARNING) {\n            for (TextRange textRange : textRanges) {\n                Annotation annotation = holder.createWarningAnnotation(textRange, getDefaultMessage(diagnostic));\n                annotation.setTooltip(getMessage(diagnostic));\n                registerQuickFix(annotation, diagnostic);\n\n                if (diagnostic.getFactory() instanceof UnusedElementDiagnosticFactory) {\n                    annotation.setHighlightType(ProblemHighlightType.LIKE_UNUSED_SYMBOL);\n                }\n            }\n        }\n    }","commit_id":"6fb0f79de988189d884dcac5f887273fa5e03da5","url":"https://github.com/JetBrains/kotlin"},{"original_method":"protected CompilationUnit createWorkingCopy(ICompilationUnit unit) throws JavaModelException {\n        assert unit != null;\n\n        unit.becomeWorkingCopy(null, monitor);\n        ASTParser parser = ASTParser.newParser(AST.JLS3);\n        parser.setSource(unit);\n        parser.setResolveBindings(resolveBindings());\n        return (CompilationUnit) parser.createAST(monitor);\n    }","id":1911,"modified_method":"private CompilationUnit createWorkingCopy(ICompilationUnit unit) throws JavaModelException {\n        unit.becomeWorkingCopy(null, monitor);\n        ASTParser parser = ASTParser.newParser(AST.JLS3);\n        parser.setSource(unit);\n        parser.setResolveBindings(resolveBindings());\n        return (CompilationUnit) parser.createAST(monitor);\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"protected void rewriteCompilationUnit(ASTRewrite rewrite, IDocument doc, ICompilationUnit originalUnit) throws JavaModelException, BadLocationException {\n        TextEdit edits = rewrite.rewriteAST(doc, originalUnit.getJavaProject().getOptions(true));\n        edits.apply(doc);\n\n        originalUnit.getBuffer().setContents(doc.get());\n        originalUnit.commitWorkingCopy(false, monitor);\n    }","id":1912,"modified_method":"private void rewriteCompilationUnit(ASTRewrite rewrite, IDocument doc, ICompilationUnit originalUnit) throws JavaModelException, BadLocationException {\n        TextEdit edits = rewrite.rewriteAST(doc, originalUnit.getJavaProject().getOptions(true));\n        edits.apply(doc);\n\n        originalUnit.getBuffer().setContents(doc.get());\n        originalUnit.commitWorkingCopy(false, monitor);\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void run(IMarker marker) {\n        checkForNull(marker, \"marker\");\n        try {\n            BugInstance bug = MarkerUtil.findBugInstanceForMarker(marker);\n            if (bug == null) {\n                MessageDialog.openError(FindbugsPlugin.getShell(), \"Missing Bug\", MISSING_BUG_INSTANCE);\n                return;\n            }\n\n            IProject project = marker.getResource().getProject();\n            ICompilationUnit originalUnit = getCompilationUnit(marker);\n            if (originalUnit == null) {\n                MessageDialog.openError(FindbugsPlugin.getShell(), \"Can't find compilation unit\", MISSING_BUG_INSTANCE);\n                return;\n            }\n            Document doc = new Document(originalUnit.getBuffer().getContents());\n            CompilationUnit workingUnit = createWorkingCopy(originalUnit);\n\n            ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());\n\n            try {\n                repairBug(rewrite, workingUnit, bug);\n                rewriteCompilationUnit(rewrite, doc, originalUnit);\n\n                FindbugsPlugin.getBugCollection(project, monitor).remove(bug);\n\n                marker.delete();\n                MarkerUtil.redisplayMarkers(project, FindbugsPlugin.getShell());\n            } finally {\n                originalUnit.discardWorkingCopy();\n            }\n\n        } catch (BugResolutionException e) {\n            FindbugsPlugin.getDefault().logException(e, e.getMessage());\n        } catch (JavaModelException e) {\n            FindbugsPlugin.getDefault().logException(e, e.getMessage());\n        } catch (BadLocationException e) {\n            FindbugsPlugin.getDefault().logException(e, e.getMessage());\n        } catch (CoreException e) {\n            FindbugsPlugin.getDefault().logException(e, e.getMessage());\n        }\n    }","id":1913,"modified_method":"/**\n     * Runs the <CODE>BugResolution<\/CODE> on the given <CODE>IMarker<\/CODE>.\n     * The <CODE>IMarker<\/CODE> has to be a FindBugs marker. The <CODE>BugInstance<\/CODE>\n     * associated to the <CODE>IMarker<\/CODE> will be repaired. All exceptions\n     * are reported to the ErrorLog.\n     * \n     * @param marker\n     *            The <CODE>IMarker<\/CODE> that specifies the bug.\n     */\n    public void run(IMarker marker) {\n        checkForNull(marker, \"marker\");\n        try {\n            // do NOT inline this method invocation\n            runInternal(marker);\n        } catch (BugResolutionException e) {\n            reportException(e);\n        } catch (JavaModelException e) {\n            reportException(e);\n        } catch (BadLocationException e) {\n            reportException(e);\n        } catch (CoreException e) {\n            reportException(e);\n        }\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@CheckForNull\n    private Class<? extends IMarkerResolution> parseBugResolutionClass(Element resolutionElement) {\n        String className = resolutionElement.getAttribute(RESOLUTION_CLASS);\n        if (className == null) {\n            FindbugsPlugin.getDefault().logWarning(\"Missing a classname in the resolution element.\");\n            return null;\n        }\n        try {\n            Class<?> resolutionClass = Class.forName(className);\n            if (IMarkerResolution.class.isAssignableFrom(resolutionClass)) {\n                return TigerSubstitutes.asSubclass(resolutionClass, IMarkerResolution.class);\n            }\n\n            FindbugsPlugin.getDefault().logError(\"Fixer '\" + className + \"' not a IMarkerResolution\");\n        } catch (ClassNotFoundException e) {\n            FindbugsPlugin.getDefault().logException(e, \"Fixer '\" + className + \"' not found.\");\n        }\n        return null;\n    }","id":1914,"modified_method":"@CheckForNull\n    private Class<? extends IMarkerResolution> parseBugResolutionClass(Element resolutionElement) {\n        String className = resolutionElement.getAttribute(RESOLUTION_CLASS);\n        if (className == null) {\n            FindbugsPlugin.getDefault().logWarning(\"Missing a classname in the resolution element.\");\n            return null;\n        }\n        try {\n            Class<?> resolutionClass = Class.forName(className);\n            if (IMarkerResolution.class.isAssignableFrom(resolutionClass)) {\n                return TigerSubstitutes.asSubclass(resolutionClass, IMarkerResolution.class);\n            }\n\n            FindbugsPlugin.getDefault().logError(\"BugResolution '\" + className + \"' not a IMarkerResolution\");\n        } catch (ClassNotFoundException e) {\n            FindbugsPlugin.getDefault().logException(e, \"BugResolution '\" + className + \"' not found.\");\n        }\n        return null;\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@CheckForNull\n    private IMarkerResolution instantiateBugResolution(Class<? extends IMarkerResolution> resolutionClass, Map<String, String> attributes) {\n        try {\n            IMarkerResolution resolution = resolutionClass.newInstance();\n            loadAttributes(resolution, attributes);\n            return resolution;\n        } catch (InstantiationException e) {\n            FindbugsPlugin.getDefault().logException(e, \"Failed to instaniate Fixer '\" + \n                    TigerSubstitutes.getSimpleName(resolutionClass)+ \"'.\");\n            return null;\n        } catch (IllegalAccessException e) {\n            throw new IllegalStateException(e);\n        }\n    }","id":1915,"modified_method":"@CheckForNull\n    private IMarkerResolution instantiateBugResolution(Class<? extends IMarkerResolution> resolutionClass, Map<String, String> attributes) {\n        try {\n            IMarkerResolution resolution = resolutionClass.newInstance();\n            loadAttributes(resolution, attributes);\n            return resolution;\n        } catch (InstantiationException e) {\n            FindbugsPlugin.getDefault().logException(e, \"Failed to instaniate BugResolution '\" + \n                    TigerSubstitutes.getSimpleName(resolutionClass)+ \"'.\");\n            return null;\n        } catch (IllegalAccessException e) {\n            throw new IllegalStateException(e);\n        }\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private Map<String, String> parseAttributes(Element resolutionElement) {\n        Map<String, String> attributes = new Hashtable<String, String>();\n        try {\n        NodeList attrList = resolutionElement.getElementsByTagName(ATTR);\n        int length = attrList.getLength();\n        for (int i = 0; i < length; i++) {\n            Element attrElement = (Element) attrList.item(i);\n            String name = attrElement.getAttribute(ATTR_NAME);\n            String value = TigerSubstitutes.getTextContent(attrElement);\n            if (false && SystemProperties.ASSERTIONS_ENABLED)\n                if (value.equals(attrElement.getTextContent())) {\n                    System.out.println(\"Expected \" + attrElement.getTextContent() + \", got \" + value);\n                }\n            if (name != null && value != null) attributes.put(name, value);\n        }\n        } catch (RuntimeException e) {\n            AnalysisContext.logError(\"Error parsing attributes\", e);\n        }\n        return attributes;\n    }","id":1916,"modified_method":"private Map<String, String> parseAttributes(Element resolutionElement) {\n        Map<String, String> attributes = new Hashtable<String, String>();\n        try {\n            NodeList attrList = resolutionElement.getElementsByTagName(ATTR);\n            int length = attrList.getLength();\n            for (int i = 0; i < length; i++) {\n                Element attrElement = (Element) attrList.item(i);\n                String name = attrElement.getAttribute(ATTR_NAME);\n                String value = TigerSubstitutes.getTextContent(attrElement);\n                if (SystemProperties.ASSERTIONS_ENABLED) {\n                    if (value.equals(attrElement.getTextContent())) {\n                        System.out.println(\"Expected \" + attrElement.getTextContent() + \", got \" + value);\n                    }\n                }\n                if (name != null && value != null) {\n                    attributes.put(name, value);\n                }\n            }\n        } catch (RuntimeException e) {\n            AnalysisContext.logError(\"Error parsing attributes\", e);\n        }\n        return attributes;\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n     * Loades the <CODE>BugResolutions<\/CODE> from the given XML-Document into\n     * the specified <CODE>BugResolutionAssociations<\/CODE>.\n     * \n     * @param fixesDoc\n     *            the XML-Document that contains the quick-fixes.\n     * @param associations\n     *            the <CODE>BugResolutionAssociations<\/CODE> to load the\n     *            <CODE>BugResolutions<\/CODE> in.\n     * @return the <CODE>associations<\/CODE> or a new instance.\n     * @throws IllegalArgumentException\n     *             if the <CODE>fixesDoc<\/CODE> is <CODE>null<\/CODE>.\n     */\n    public BugResolutionAssociations loadBugResolutions(Document fixesDoc, BugResolutionAssociations associations) {\n        checkForNull(fixesDoc, \"xml document with quick-fixes\");\n\n        if (associations == null) {\n            associations = new BugResolutionAssociations();\n        }\n        NodeList bugFixList = fixesDoc.getElementsByTagName(BUG);\n        int length = bugFixList.getLength();\n        for (int i = 0; i < length; i++) {\n            loadBugResolution((Element) bugFixList.item(i), associations);\n        }\n        return associations;\n    }","id":1917,"modified_method":"/**\n     * Loades the <CODE>BugResolutions<\/CODE> from the given XML-Document into\n     * the specified <CODE>BugResolutionAssociations<\/CODE>.\n     * \n     * @param fixesDoc\n     *            the XML-Document that contains the quick-fixes.\n     * @param associations\n     *            the <CODE>BugResolutionAssociations<\/CODE> to load the\n     *            <CODE>BugResolutions<\/CODE> in.\n     * @return the <CODE>associations<\/CODE> or a new instance.\n     * @throws IllegalArgumentException\n     *             if the <CODE>fixesDoc<\/CODE> is <CODE>null<\/CODE>.\n     */\n    public BugResolutionAssociations loadBugResolutions(Document fixesDoc, BugResolutionAssociations associations) {\n        checkForNull(fixesDoc, \"xml document with bug-resolutions\");\n\n        if (associations == null) {\n            associations = new BugResolutionAssociations();\n        }\n        NodeList bugFixList = fixesDoc.getElementsByTagName(BUG);\n        int length = bugFixList.getLength();\n        for (int i = 0; i < length; i++) {\n            loadBugResolution((Element) bugFixList.item(i), associations);\n        }\n        return associations;\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n    protected boolean resolveBindings() {\n        return true;\n    }","id":1918,"modified_method":"@Override\n    protected boolean resolveBindings() {\n        return false;\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n    protected void repairBug(ASTRewrite rewrite, CompilationUnit workingUnit, BugInstance bug) throws BugResolutionException {\n        assert rewrite != null;\n        assert workingUnit != null;\n        assert bug != null;\n\n        TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());\n        MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());\n        Statement statement = getStatement(workingUnit, method, bug.getPrimarySourceLineAnnotation());\n        String originalFieldName = null;\n        if (statement instanceof IfStatement) {\n            originalFieldName = getOriginalFieldName((IfStatement) statement);\n        } else {\n            throw new BugResolutionException(\"Statement is not of type IfStatement\");\n        }\n\n        AST ast = workingUnit.getAST();\n        SimpleName replaceField = ast.newSimpleName(originalFieldName);\n\n        InfixExpression replaceExpression = createReplaceExpression(ast, replaceField);\n\n        rewrite.set(statement, IfStatement.EXPRESSION_PROPERTY, replaceExpression, null);\n    }","id":1919,"modified_method":"@Override\n    protected void repairBug(ASTRewrite rewrite, CompilationUnit workingUnit, BugInstance bug) throws BugResolutionException {\n        assert rewrite != null;\n        assert workingUnit != null;\n        assert bug != null;\n\n        InfixExpression oddnessCheck = findOddnessCheck(getASTNode(workingUnit, bug.getPrimarySourceLineAnnotation()));\n        if (oddnessCheck == null) {\n            throw new BugResolutionException(\"No matching oddness check found at the specified source line.\");\n        }\n        Expression numberExpression = findNumberExpression(oddnessCheck);\n        if (numberExpression == null) {\n            throw new BugResolutionException();\n        }\n        InfixExpression correctOddnessCheck = createCorrectOddnessCheck(rewrite, numberExpression);\n        rewrite.replace(oddnessCheck, correctOddnessCheck, null);\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"protected void updateImportDeclarations(ASTRewrite rewrite, CompilationUnit compilationUnit) {\n        assert rewrite != null;\n        assert compilationUnit != null;\n\n        ListRewrite importRewrite = rewrite.getListRewrite(compilationUnit, CompilationUnit.IMPORTS_PROPERTY);\n        updateImportDeclaration(importRewrite, AccessController.class);\n        updateImportDeclaration(importRewrite, PrivilegedAction.class);\n    }","id":1920,"modified_method":"protected void updateImportDeclarations(ASTRewrite rewrite, CompilationUnit compilationUnit) {\n        assert rewrite != null;\n        assert compilationUnit != null;\n\n        if (isUpdateImports()) {\n            final AST ast = rewrite.getAST();\n            SortedSet<ImportDeclaration> imports = new TreeSet<ImportDeclaration>(importComparator);\n            imports.add(createImportDeclaration(ast, PrivilegedAction.class));\n            if (!isStaticImport()) {\n                imports.add(createImportDeclaration(ast, AccessController.class));\n            } else {\n                imports.add(createImportDeclaration(ast, AccessController.class, DO_PRIVILEGED_METHOD_NAME));\n            }\n            addImports(rewrite, compilationUnit, imports);\n        }\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"protected ImportDeclaration createImportDeclaration(AST ast, Class<?> importType) {\n        ImportDeclaration importDeclaration = ast.newImportDeclaration();\n\n        importDeclaration.setName(ast.newName(importType.getName()));\n\n        return importDeclaration;\n    }","id":1921,"modified_method":"protected ImportDeclaration createImportDeclaration(AST ast, Class<?> importClass) {\n        assert ast != null;\n        assert importClass != null;\n        return createImportDeclaration(ast, importClass.getName(), false);\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"protected void updateImportDeclaration(ListRewrite importRewrite, final Class<?> importType) {\n        assert importRewrite != null;\n        assert importType != null;\n\n        AST ast = importRewrite.getASTRewrite().getAST();\n        ImportDeclaration importDeclaration = createImportDeclaration(ast, importType);\n        List<ImportDeclaration> imports = importRewrite.getRewrittenList();\n        int index = searchImportPosition(imports, importDeclaration);\n        if (index >= 0 && index <= imports.size()) {\n            importRewrite.insertAt(importDeclaration, index, null);\n        }\n    }","id":1922,"modified_method":"protected ImportDeclaration createImportDeclaration(AST ast, Class<?> importClass, String javaElementName) {\n        assert ast != null;\n        assert importClass != null;\n        assert javaElementName != null;\n        return createImportDeclaration(ast, importClass.getName() + \".\" + javaElementName, true);\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n    protected void repairBug(ASTRewrite rewrite, CompilationUnit workingUnit, BugInstance bug) throws BugResolutionException {\n        assert rewrite != null;\n        assert workingUnit != null;\n        assert bug != null;\n\n        TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());\n        MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());\n        Statement statement = getStatement(workingUnit, method, bug.getPrimarySourceLineAnnotation());\n        ClassInstanceCreation classLoaderCreation = findClassLoaderCreation(statement);\n\n        if (classLoaderCreation == null) {\n            throw new BugResolutionException(\"No matching class loader creation found at the specified source line.\");\n        }\n\n        MethodInvocation doPrivilegedInvocation = createDoPrivilegedInvocation(rewrite, classLoaderCreation);\n        rewrite.replace(classLoaderCreation, doPrivilegedInvocation, null);\n\n        if (isUpdateImports()) {\n            updateImportDeclarations(rewrite, workingUnit);\n        }\n    }","id":1923,"modified_method":"@Override\n    protected void repairBug(ASTRewrite rewrite, CompilationUnit workingUnit, BugInstance bug) throws BugResolutionException {\n        assert rewrite != null;\n        assert workingUnit != null;\n        assert bug != null;\n\n        ClassInstanceCreation classLoaderCreation = findClassLoaderCreation(getASTNode(workingUnit, bug.getPrimarySourceLineAnnotation()));\n        if (classLoaderCreation == null) {\n            throw new BugResolutionException(\"No matching class loader creation found at the specified source line.\");\n        }\n        updateVariableReferences(rewrite, classLoaderCreation);\n        rewrite.replace(classLoaderCreation, createDoPrivilegedInvocation(rewrite, classLoaderCreation), null);\n        updateImportDeclarations(rewrite, workingUnit);\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@CheckForNull\n    private ClassInstanceCreation findClassLoaderCreation(Expression expression) {\n        switch (expression.getNodeType()) {\n            case ASTNode.ASSIGNMENT:\n                return findClassLoaderCreation(((Assignment) expression).getRightHandSide());\n            case ASTNode.CLASS_INSTANCE_CREATION:\n                if (isClassLoaderCreation((ClassInstanceCreation) expression)) {\n                    return (ClassInstanceCreation) expression;\n                }\n            default:\n                return null;\n        }\n    }","id":1924,"modified_method":"@CheckForNull\n    private ClassInstanceCreation findClassLoaderCreation(ASTNode node) {\n        ClassLoaderCreationFinder finder = new ClassLoaderCreationFinder();\n        node.accept(finder);\n        return finder.getClassLoaderCreation();\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"protected MethodInvocation createDoPrivilegedInvocation(ASTRewrite rewrite, ClassInstanceCreation classLoaderCreation) {\n        AST ast = rewrite.getAST();\n\n        MethodInvocation doPrivilegedInvocation = ast.newMethodInvocation();\n        ClassInstanceCreation privilegedActionCreation = createPrivilegedActionCreation(rewrite, classLoaderCreation);\n        List<Expression> arguments = doPrivilegedInvocation.arguments();\n\n        Name accessControllerName;\n        if (isUpdateImports()) {\n            accessControllerName = ast.newSimpleName(TigerSubstitutes.getSimpleName(AccessController.class));\n        } else {\n            accessControllerName = ast.newName(AccessController.class.getName());\n        }\n        doPrivilegedInvocation.setExpression(accessControllerName);\n        doPrivilegedInvocation.setName(ast.newSimpleName(\"doPrivileged\")); //$NON-NLS-1$\n        arguments.add(privilegedActionCreation);\n\n        return doPrivilegedInvocation;\n    }","id":1925,"modified_method":"protected MethodInvocation createDoPrivilegedInvocation(ASTRewrite rewrite, ClassInstanceCreation classLoaderCreation) {\n        AST ast = rewrite.getAST();\n\n        MethodInvocation doPrivilegedInvocation = ast.newMethodInvocation();\n        ClassInstanceCreation privilegedActionCreation = createPrivilegedActionCreation(rewrite, classLoaderCreation);\n        List<Expression> arguments = doPrivilegedInvocation.arguments();\n\n        if (!isStaticImport()) {\n            Name accessControllerName;\n            if (isUpdateImports()) {\n                accessControllerName = ast.newSimpleName(TigerSubstitutes.getSimpleName(AccessController.class));\n            } else {\n                accessControllerName = ast.newName(AccessController.class.getName());\n            }\n            doPrivilegedInvocation.setExpression(accessControllerName);\n        }\n        doPrivilegedInvocation.setName(ast.newSimpleName(DO_PRIVILEGED_METHOD_NAME));\n        arguments.add(privilegedActionCreation);\n\n        return doPrivilegedInvocation;\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public FieldDeclarationNotFoundException(TypeDeclaration typeDeclaration, String fieldName) {\n        super(\"Field declaration '\" + fieldName + \"' not found in type declaration '\" + typeDeclaration.getName() + \"'.\");\n        this.typeDeclaration = typeDeclaration;\n        this.fieldName = fieldName;\n    }","id":1926,"modified_method":"public FieldDeclarationNotFoundException(TypeDeclaration typeDeclaration, String fieldName) {\n        this(\"Field declaration '\" + fieldName + \"' not found in type declaration '\" + typeDeclaration.getName() + \"'.\");\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n    protected void repairBug(ASTRewrite rewrite, CompilationUnit workingUnit, BugInstance bug) throws BugResolutionException {\n        assert rewrite != null;\n        assert workingUnit != null;\n        assert bug != null;\n\n        TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());\n        MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());\n        Statement statement = getStatement(workingUnit, method, bug.getPrimarySourceLineAnnotation());\n\n        rewrite.remove(statement, null);\n    }","id":1927,"modified_method":"@Override\n    protected void repairBug(ASTRewrite rewrite, CompilationUnit workingUnit, BugInstance bug) throws BugResolutionException {\n        assert rewrite != null;\n        assert workingUnit != null;\n        assert bug != null;\n\n        Statement statement = findUselessStatement(getASTNode(workingUnit, bug.getPrimarySourceLineAnnotation()));\n        rewrite.remove(statement, null);\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n    protected boolean resolveBindings() {\n        return true;\n    }","id":1928,"modified_method":"@Override\n    protected boolean resolveBindings() {\n        return false;\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@CheckForNull\n    protected ClassInstanceCreation findPrimitiveTypeCreation(Statement statement) {\n        switch (statement.getNodeType()) {\n            case VARIABLE_DECLARATION_STATEMENT:\n                return findPrimitiveTypeCreation(((VariableDeclarationStatement) statement).fragments());\n            default:\n                return null;\n        }\n    }","id":1929,"modified_method":"@CheckForNull\n    protected ClassInstanceCreation findPrimitiveTypeCreation(ASTNode node) {\n        PrimitiveTypeCreationFinder visitor = new PrimitiveTypeCreationFinder();\n        node.accept(visitor);\n        return visitor.getPrimitiveTypeCreation();\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n    protected void repairBug(ASTRewrite rewrite, CompilationUnit workingUnit, BugInstance bug) throws BugResolutionException {\n        assert rewrite != null;\n        assert workingUnit != null;\n\n        TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());\n        MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());\n        Statement statement = getStatement(workingUnit, method, bug.getPrimarySourceLineAnnotation());\n\n        ClassInstanceCreation primitiveTypeCreation = findPrimitiveTypeCreation(statement);\n        if (primitiveTypeCreation == null) {\n            throw new BugResolutionException(\"Primitive type creation not found.\");\n        }\n\n        MethodInvocation valueOfInvocation = createValueOfInvocation(rewrite, primitiveTypeCreation);\n\n        rewrite.replace(primitiveTypeCreation, valueOfInvocation, null);\n    }","id":1930,"modified_method":"@Override\n    protected void repairBug(ASTRewrite rewrite, CompilationUnit workingUnit, BugInstance bug) throws BugResolutionException {\n        assert rewrite != null;\n        assert workingUnit != null;\n\n        ClassInstanceCreation primitiveTypeCreation = findPrimitiveTypeCreation(getASTNode(workingUnit, bug.getPrimarySourceLineAnnotation()));\n        if (primitiveTypeCreation == null) {\n            throw new BugResolutionException(\"Primitive type creation not found.\");\n        }\n        MethodInvocation valueOfInvocation = createValueOfInvocation(rewrite, workingUnit, primitiveTypeCreation);\n        rewrite.replace(primitiveTypeCreation, valueOfInvocation, null);\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"protected MethodInvocation createValueOfInvocation(ASTRewrite rewrite, ClassInstanceCreation primitiveTypeCreation) {\n        AST ast = rewrite.getAST();\n\n        MethodInvocation valueOfInvocation = ast.newMethodInvocation();\n        List<Expression> arguments = primitiveTypeCreation.arguments();\n        SimpleName primitiveTypeName = ast.newSimpleName(primitiveTypeCreation.getType().resolveBinding().getName());\n\n        valueOfInvocation.setExpression(primitiveTypeName);\n        valueOfInvocation.setName(ast.newSimpleName(\"valueOf\"));\n        List<Expression> newArguments = valueOfInvocation.arguments();\n        for (Expression argument : arguments) {\n            Expression expression = (Expression) rewrite.createCopyTarget(argument);\n            newArguments.add(expression);\n        }\n\n        return valueOfInvocation;\n    }","id":1931,"modified_method":"protected MethodInvocation createValueOfInvocation(ASTRewrite rewrite, CompilationUnit compilationUnit, ClassInstanceCreation primitiveTypeCreation) {\n        assert rewrite != null;\n        assert primitiveTypeCreation != null;\n\n        final AST ast = rewrite.getAST();\n        MethodInvocation valueOfInvocation = ast.newMethodInvocation();\n        valueOfInvocation.setName(ast.newSimpleName(VALUE_OF_METHOD_NAME));\n\n        ITypeBinding binding = primitiveTypeCreation.getType().resolveBinding();\n        if (isStaticImport()) {\n            addStaticImports(rewrite, compilationUnit, binding.getQualifiedName() + \".\" + VALUE_OF_METHOD_NAME);\n        } else {\n            valueOfInvocation.setExpression(ast.newSimpleName(binding.getName()));\n        }\n\n        List<Expression> arguments = primitiveTypeCreation.arguments();\n        List<Expression> newArguments = valueOfInvocation.arguments();\n        for (Expression argument : arguments) {\n            Expression expression = (Expression) rewrite.createCopyTarget(argument);\n            newArguments.add(expression);\n        }\n\n        return valueOfInvocation;\n    }","commit_id":"e395551a1f2300d35358f4c6503ed33c3d2ed93f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private void pushByDoubleMath(int seen, Item it, Item it2) {\n\t\tItem result;\n\t\tint specialKind = Item.FLOAT_MATH;\n\t\tif ((it.getConstant() != null) && it2.getConstant() != null) {\n\t\t\tif (seen == DADD)\n\t\t\t\tresult = new Item(\"D\", ((Double) it2.getConstant()) + ((Double) it.getConstant()));\n\t\t\telse if (seen == DSUB)\n\t\t\t\tresult = new Item(\"D\", ((Double) it2.getConstant()) - ((Double) it.getConstant()));\n\t\t\telse if (seen == DMUL)\n\t\t\t\tresult = new Item(\"D\", ((Double) it2.getConstant()) * ((Double) it.getConstant()));\n\t\t\telse if (seen == DDIV)\n\t\t\t\tresult = new Item(\"D\", ((Double) it2.getConstant()) / ((Double) it.getConstant()));\n\t\t\telse \n\t\t\t\tresult = new Item(\"D\");\t//?\t\n\t\t\t} else {\n\t\t\tresult = new Item(\"D\");\n\t\t\tif (seen == DDIV)\n\t\t\t\tspecialKind = Item.NASTY_FLOAT_MATH;\n\t\t}\n\t\tresult.setSpecialKind(specialKind);\n\t\tpush(result);\n\t}","id":1932,"modified_method":"private void pushByDoubleMath(int seen, Item it, Item it2) {\n\t\tItem result;\n\t\tint specialKind = Item.FLOAT_MATH;\n\t\tif ((it.getConstant() instanceof Double) && it2.getConstant() instanceof Double) {\n\t\t\tif (seen == DADD)\n\t\t\t\tresult = new Item(\"D\", ((Double) it2.getConstant()) + ((Double) it.getConstant()));\n\t\t\telse if (seen == DSUB)\n\t\t\t\tresult = new Item(\"D\", ((Double) it2.getConstant()) - ((Double) it.getConstant()));\n\t\t\telse if (seen == DMUL)\n\t\t\t\tresult = new Item(\"D\", ((Double) it2.getConstant()) * ((Double) it.getConstant()));\n\t\t\telse if (seen == DDIV)\n\t\t\t\tresult = new Item(\"D\", ((Double) it2.getConstant()) / ((Double) it.getConstant()));\n\t\t\telse if (seen == DREM)\n\t\t\t\tresult = new Item(\"D\", ((Double) it2.getConstant()) % ((Double) it.getConstant()));\n\t\t\telse \n\t\t\t\tresult = new Item(\"D\");\t//?\t\n\t\t\t} else {\n\t\t\tresult = new Item(\"D\");\n\t\t\tif (seen == DDIV)\n\t\t\t\tspecialKind = Item.NASTY_FLOAT_MATH;\n\t\t}\n\t\tresult.setSpecialKind(specialKind);\n\t\tpush(result);\n\t}","commit_id":"4d28dbf5a1bfa5d8f4e1d49cf46240abac892f84","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public Item getStackItem(int stackOffset) {\n\t\tif (stackOffset < 0 || stackOffset >= stack.size()) {\n\t\t    assert false : \"Can't get stack offset \" + stackOffset + \" from \" + stack.toString();\n\t\t\treturn new Item(\"Lfindbugs/OpcodeStackError;\");\n\n\t\t}\n\t\t int tos = stack.size() - 1;\n\t\t int pos = tos - stackOffset;\n\t\t try {\n\t\t return stack.get(pos);\n\t\t } catch (ArrayIndexOutOfBoundsException e) {\n\t\t\t throw new ArrayIndexOutOfBoundsException(\n\t\t\t\t \"Requested item at offset \" + stackOffset + \" in a stack of size \" + stack.size()\n\t\t\t\t +\", made request for position \" + pos);\n\t\t }\n\t }","id":1933,"modified_method":"public Item getStackItem(int stackOffset) {\n\t\tif (stackOffset < 0 || stackOffset >= stack.size()) {\n\t\t    assert false : \"Can't get stack offset \" + stackOffset + \" from \" + stack.toString() + \" at \" + v.getPC() + \" in \" + v.getFullyQualifiedMethodName();\n\t\t\treturn new Item(\"Lfindbugs/OpcodeStackError;\");\n\n\t\t}\n\t\t int tos = stack.size() - 1;\n\t\t int pos = tos - stackOffset;\n\t\t try {\n\t\t return stack.get(pos);\n\t\t } catch (ArrayIndexOutOfBoundsException e) {\n\t\t\t throw new ArrayIndexOutOfBoundsException(\n\t\t\t\t \"Requested item at offset \" + stackOffset + \" in a stack of size \" + stack.size()\n\t\t\t\t +\", made request for position \" + pos);\n\t\t }\n\t }","commit_id":"4d28dbf5a1bfa5d8f4e1d49cf46240abac892f84","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public int resetForMethodEntry(final DismantleBytecode v) {\n\t\t methodName = v.getMethodName();\n\t\tjumpEntries.clear();\n\t\tjumpStackEntries.clear();\n\t\tjumpEntryLocations.clear();\n\t\tlastUpdate.clear();\n\t\tconvertJumpToOneZeroState = convertJumpToZeroOneState = 0;\n\t\treachOnlyByBranch = false;\n\t\t int result= resetForMethodEntry0(v);\n\t\t Code code = v.getMethod().getCode();\n\t\tif (code == null) return result;\n\n\t\tif (useIterativeAnalysis) {\n\t\t\t// FIXME: Be clever\n\t\t\tif (DEBUG) \n\t\t\t\tSystem.out.println(\" --- Iterative analysis\");\n\t\t\tDismantleBytecode branchAnalysis = new DismantleBytecode() {\n\t\t\t\t@Override\n\t\t\t\tpublic void sawOpcode(int seen) {\n\t\t\t\t\tOpcodeStack.this.sawOpcode(this, seen);\n\t\t\t\t}\n\n\t\t\t\t// perhaps we don't need this\n//\t\t\t\t@Override\n//\t\t\t\tpublic void sawBranchTo(int pc) {\n//\t\t\t\t\taddJumpValue(pc);\n//\t\t\t\t}\n\t\t\t};\n\t\t\tbranchAnalysis.setupVisitorForClass(v.getThisClass());\n\t\t\tbranchAnalysis.doVisitMethod(v.getMethod());\n\t\t\tif (!jumpEntries.isEmpty()) \n\t\t\t\tbranchAnalysis.doVisitMethod(v.getMethod());\n\t\t\tif (DEBUG && !jumpEntries.isEmpty()) {\n\t\t\t\tSystem.out.println(\"Found dataflow for jumps in \" + v.getMethodName());\n\t\t\t\tfor (Integer pc : jumpEntries.keySet()) {\n\t\t\t\t\tList<Item> list = jumpEntries.get(pc);\n\t\t\t\t\tSystem.out.println(pc + \" -> \" + Integer.toString(System.identityHashCode(list),16) + \" \" + list);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresetForMethodEntry0(v);\n\t\t\tif (DEBUG) \n\t\t\t\tSystem.out.println(\" --- End of Iterative analysis\");\n\n\t\t}\n\n\t\t return result;\n\n\t\t}","id":1934,"modified_method":"public int resetForMethodEntry(final DismantleBytecode v) {\n\t\t this.v = v;\n\t\t methodName = v.getMethodName();\n\t\tjumpEntries.clear();\n\t\tjumpStackEntries.clear();\n\t\tjumpEntryLocations.clear();\n\t\tlastUpdate.clear();\n\t\tconvertJumpToOneZeroState = convertJumpToZeroOneState = 0;\n\t\treachOnlyByBranch = false;\n\t\t int result= resetForMethodEntry0(v);\n\t\t Code code = v.getMethod().getCode();\n\t\tif (code == null) return result;\n\n\t\tif (useIterativeAnalysis) {\n\t\t\t// FIXME: Be clever\n\t\t\tif (DEBUG) \n\t\t\t\tSystem.out.println(\" --- Iterative analysis\");\n\t\t\tDismantleBytecode branchAnalysis = new DismantleBytecode() {\n\t\t\t\t@Override\n\t\t\t\tpublic void sawOpcode(int seen) {\n\t\t\t\t\tOpcodeStack.this.sawOpcode(this, seen);\n\t\t\t\t}\n\n\t\t\t\t// perhaps we don't need this\n//\t\t\t\t@Override\n//\t\t\t\tpublic void sawBranchTo(int pc) {\n//\t\t\t\t\taddJumpValue(pc);\n//\t\t\t\t}\n\t\t\t};\n\t\t\tbranchAnalysis.setupVisitorForClass(v.getThisClass());\n\t\t\tbranchAnalysis.doVisitMethod(v.getMethod());\n\t\t\tif (!jumpEntries.isEmpty()) \n\t\t\t\tbranchAnalysis.doVisitMethod(v.getMethod());\n\t\t\tif (DEBUG && !jumpEntries.isEmpty()) {\n\t\t\t\tSystem.out.println(\"Found dataflow for jumps in \" + v.getMethodName());\n\t\t\t\tfor (Integer pc : jumpEntries.keySet()) {\n\t\t\t\t\tList<Item> list = jumpEntries.get(pc);\n\t\t\t\t\tSystem.out.println(pc + \" -> \" + Integer.toString(System.identityHashCode(list),16) + \" \" + list);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresetForMethodEntry0(v);\n\t\t\tif (DEBUG) \n\t\t\t\tSystem.out.println(\" --- End of Iterative analysis\");\n\n\t\t}\n\n\t\t return result;\n\n\t\t}","commit_id":"4d28dbf5a1bfa5d8f4e1d49cf46240abac892f84","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void sawOpcode(DismantleBytecode dbc, int seen) {\n\t\t int register;\n\t\t String signature;\n\t\t Item it, it2, it3;\n\t\t Constant cons;\n\t\t if (dbc.isRegisterStore()) \n\t\t\t setLastUpdate(dbc.getRegisterOperand(), dbc.getPC());\n\t\t mergeJumps(dbc);\n\t\t needToMerge = true;\n\t\t switch (seen) {\n\t\t case ICONST_1:\n\t\t\t convertJumpToOneZeroState = 1;\n\t\t\t break;\n\t\t case GOTO:\n\t\t\t if (convertJumpToOneZeroState == 1 && dbc.getBranchOffset() == 4) \n\t\t\t\t convertJumpToOneZeroState = 2;\n\t\t\t else \n\t\t\t\t convertJumpToOneZeroState = 0;\n\t\t\t break;\n\t\t case ICONST_0:\n\t\t\t if (convertJumpToOneZeroState == 2)\n\t\t\t\t convertJumpToOneZeroState = 3;\n\t\t\t else convertJumpToOneZeroState = 0;\n\t\t\t break;\n\t\t\t default:convertJumpToOneZeroState = 0;\n\n\t\t }\n\t\t switch (seen) {\n\t\t case ICONST_0:\n\t\t\t convertJumpToZeroOneState = 1;\n\t\t\t break;\n\t\t case GOTO:\n\t\t\t if (convertJumpToZeroOneState == 1 && dbc.getBranchOffset() == 4) \n\t\t\t\t convertJumpToZeroOneState = 2;\n\t\t\t else \n\t\t\t\t convertJumpToZeroOneState = 0;\n\t\t\t break;\n\t\t case ICONST_1:\n\t\t\t if (convertJumpToZeroOneState == 2)\n\t\t\t\t convertJumpToZeroOneState = 3;\n\t\t\t else convertJumpToZeroOneState = 0;\n\t\t\t break;\n\t\t default:convertJumpToZeroOneState = 0;\n\t\t }\n\n\t\t try\n\t\t {\n\t\t\t switch (seen) {\n\t\t\t\t case ALOAD:\n\t\t\t\t\t pushByLocalObjectLoad(dbc, dbc.getRegisterOperand());\n\t\t\t\t break;\n\n\t\t\t\t case ALOAD_0:\n\t\t\t\t case ALOAD_1:\n\t\t\t\t case ALOAD_2:\n\t\t\t\t case ALOAD_3:\n\t\t\t\t\t pushByLocalObjectLoad(dbc, seen - ALOAD_0);\n\t\t\t\t break;\n\n\t\t\t\t case DLOAD:\n\t\t\t\t\t pushByLocalLoad(\"D\", dbc.getRegisterOperand());\n\t\t\t\t break;\n\n\t\t\t\t case DLOAD_0:\n\t\t\t\t case DLOAD_1:\n\t\t\t\t case DLOAD_2:\n\t\t\t\t case DLOAD_3:\n\t\t\t\t\t pushByLocalLoad(\"D\", seen - DLOAD_0);\n\t\t\t\t break;\n\n\t\t\t\t case FLOAD:\n\t\t\t\t\t pushByLocalLoad(\"F\", dbc.getRegisterOperand());\n\t\t\t\t break;\n\n\t\t\t\t case FLOAD_0:\n\t\t\t\t case FLOAD_1:\n\t\t\t\t case FLOAD_2:\n\t\t\t\t case FLOAD_3:\n\t\t\t\t\t pushByLocalLoad(\"F\", seen - FLOAD_0);\n\t\t\t\t break;\n\n\t\t\t\t case ILOAD:\n\t\t\t\t\t pushByLocalLoad(\"I\", dbc.getRegisterOperand());\n\t\t\t\t break;\n\n\t\t\t\t case ILOAD_0:\n\t\t\t\t case ILOAD_1:\n\t\t\t\t case ILOAD_2:\n\t\t\t\t case ILOAD_3:\n\t\t\t\t\t pushByLocalLoad(\"I\", seen - ILOAD_0);\n\t\t\t\t break;\n\n\t\t\t\t case LLOAD:\n\t\t\t\t\t pushByLocalLoad(\"J\", dbc.getRegisterOperand());\n\t\t\t\t break;\n\n\t\t\t\t case LLOAD_0:\n\t\t\t\t case LLOAD_1:\n\t\t\t\t case LLOAD_2:\n\t\t\t\t case LLOAD_3:\n\t\t\t\t\t pushByLocalLoad(\"J\", seen - LLOAD_0);\n\t\t\t\t break;\n\n\n\t\t\t\t case GETSTATIC:\n\t\t\t\t\t{\n\t\t\t\t\tFieldAnnotation field = FieldAnnotation.fromReferencedField(dbc);\n\t\t\t\t\t Item i = new Item(dbc.getSigConstantOperand(), field, Integer.MAX_VALUE);\n\t\t\t\t\t if (field.getFieldName().equals(\"separator\") && field.getClassName().equals(\"java.io.File\")) {\n\t\t\t\t\t\t i.setSpecialKind(Item.FILE_SEPARATOR_STRING);\n\t\t\t\t\t }\n\n\t\t\t\t\t push(i);\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t case LDC:\n\t\t\t\t case LDC_W:\n\t\t\t\tcase LDC2_W:\n\t\t\t\t\t cons = dbc.getConstantRefOperand();\n\t\t\t\t\t pushByConstant(dbc, cons);\n\t\t\t\tbreak;\n\n\t\t\t\tcase INSTANCEOF:\n\t\t\t\t\tpop();\n\t\t\t\t\tpush(new Item(\"I\"));\n\t\t\t\tbreak;\n\t\t\t\tcase IFEQ:\n\t\t\t\t case IFNE:\n\t\t\t\t case IFLT:\n\t\t\t\t case IFLE:\n\t\t\t\t case IFGT:\n\t\t\t\t case IFGE:\n\t\t\t\t case IFNONNULL:\n\t\t\t\t case IFNULL:\n\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t {\n\t\t\t\t\t Item top = pop();\n\n\t\t\t\t\t // if we see a test comparing a special negative value with 0,\n\t\t\t\t\t // reset all other such values on the opcode stack\n\t\t\t\t\tif (top.valueCouldBeNegative() \n\t\t\t\t\t\t\t&& (seen == IFLT || seen == IFLE || seen == IFGT || seen == IFGE)) {\n\t\t\t\t\t\tint specialKind = top.getSpecialKind();\n\t\t\t\t\t\tfor(Item item : stack) if (item != null && item.getSpecialKind() == specialKind) item.setSpecialKind(0);\n\t\t\t\t\t\tfor(Item item : lvValues) if (item != null && item.getSpecialKind() == specialKind) item.setSpecialKind(0);\n\n\t\t\t\t\t}\n\t\t\t\t }\n\t\t\t\t addJumpValue(dbc.getBranchTarget());\n\n\t\t\t break;\n\t\t\t\t case LOOKUPSWITCH:\n\n\t\t\t\t case TABLESWITCH:\n\t\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t\t pop();\n\t\t\t\t\t addJumpValue(dbc.getBranchTarget());\n\t\t\t\t\t int pc = dbc.getBranchTarget() - dbc.getBranchOffset();\n\t\t\t\t\t for(int offset : dbc.getSwitchOffsets())\n\t\t\t\t\t\t addJumpValue(offset+pc);\n\n\t\t\t\t break;\n\t\t\t\t case ARETURN:\n\t\t\t\t case DRETURN:\n\t\t\t\t case FRETURN:\n\n\t\t\t\t case IRETURN:\n\t\t\t\t case LRETURN:\n\n\t\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t\treachOnlyByBranch = true;\n\t\t\t\t\t pop();\n\t\t\t\t break;\n\t\t\t\t case MONITORENTER:\n\t\t\t\t case MONITOREXIT:\n\t\t\t\t case POP:\n\t\t\t\t case PUTSTATIC:\n\t\t\t\t\t pop();\n\t\t\t\t break;\n\n\t\t\t\t case IF_ACMPEQ:\n\t\t\t\t case IF_ACMPNE:\n\t\t\t\t case IF_ICMPEQ:\n\t\t\t\t case IF_ICMPNE:\n\t\t\t\t case IF_ICMPLT:\n\t\t\t\t case IF_ICMPLE:\n\t\t\t\t case IF_ICMPGT:\n\t\t\t\t case IF_ICMPGE:\n\n\t\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t\t pop(2);\n\t\t\t\t\t addJumpValue(dbc.getBranchTarget());\n\t\t\t\t\tbreak;\n\n\n\t\t\t\t case POP2:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getSize() == 1) pop();\n\t\t\t\t\t break;\n\t\t\t\t case PUTFIELD:\n\t\t\t\t\t pop(2);\n\t\t\t\t break;\n\n\t\t\t\t case IALOAD:\n\t\t\t\t case SALOAD:\n\t\t\t\t\t pop(2);\n\t\t\t\t\t push(new Item(\"I\"));\n\t\t\t\t break;\n\n\t\t\t\t case DUP: \n\t\t\t\t\t handleDup();\n\t\t\t\t break;\n\n\t\t\t\t case DUP2:\n\t\t\t\t\t handleDup2();\n\t\t\t\t break;\n\n\t\t\t\t case DUP_X1:\n\t\t\t\t handleDupX1();\n\t\t\t\t break;\n\n\t\t\t\t case DUP_X2:\n\n\t\t\t\t\t handleDupX2();\n\t\t\t\t break;\n\n\t\t\t\t case DUP2_X1:\n\t\t\t\t\t\t handleDup2X1();\n\t\t\t\t break;\n\n\t\t\t\t case DUP2_X2:\n\t\t\t\t\t handleDup2X2();\n\t\t\t\t\t break;\n\n\t\t\t\t case IINC:\n\t\t\t\t\t register = dbc.getRegisterOperand();\n\t\t\t\t\t it = getLVValue( register );\n\t\t\t\t\t it2 = new Item(\"I\", dbc.getIntConstant());\n\t\t\t\t\t pushByIntMath( IADD, it2, it);\n\t\t\t\t\t pushByLocalStore(register);\n\t\t\t\t break;\n\n\t\t\t\t case ATHROW:\n\t\t\t\t\tpop();\n\t\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t\treachOnlyByBranch = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t case CHECKCAST:\n\t\t\t\t {\n\t\t\t\t\t String castTo = dbc.getClassConstantOperand();\n\n\t\t\t\t\t if (castTo.charAt(0) != '[') castTo = \"L\" + castTo + \";\";\n\t\t\t\t\t it = new Item(pop());\n\t\t\t\t\t it.signature = castTo;\n\t\t\t\t\t push(it);\n\n\t\t\t\t\t break;\n\n\n\t\t\t\t }\n\t\t\t\t case NOP:\n\t\t\t\t\tbreak;\n\t\t\t\t case RET:\n\t\t\t\t case RETURN:\n\t\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t\treachOnlyByBranch = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t case GOTO:\n\t\t\t\t case GOTO_W:\t\t\t\t\t//It is assumed that no stack items are present when\n\t\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t\treachOnlyByBranch = true;\n\t\t\t\t\taddJumpValue(dbc.getBranchTarget());\n\t\t\t\t\tstack.clear();\n\n\t\t\t\t break;\n\n\n\t\t\t\t case SWAP:\n\t\t\t\t\t handleSwap();\n\t\t\t\t break;\n\n\t\t\t\t case ICONST_M1:\n\t\t\t\t case ICONST_0:\n\t\t\t\t case ICONST_1:\n\t\t\t\t case ICONST_2:\n\t\t\t\t case ICONST_3:\n\t\t\t\t case ICONST_4:\n\t\t\t\t case ICONST_5:\n\t\t\t\t\t push(new Item(\"I\", (seen-ICONST_0)));\n\t\t\t\t break;\n\n\t\t\t\t case LCONST_0:\n\t\t\t\t case LCONST_1:\n\t\t\t\t\t push(new Item(\"J\", (long)(seen-LCONST_0)));\n\t\t\t\t break;\n\n\t\t\t\t case DCONST_0:\n\t\t\t\t case DCONST_1:\n\t\t\t\t\t push(new Item(\"D\", (double)(seen-DCONST_0)));\n\t\t\t\t break;\n\n\t\t\t\t case FCONST_0:\n\t\t\t\t case FCONST_1:\n\t\t\t\t case FCONST_2:\n\t\t\t\t\t push(new Item(\"F\", (float)(seen-FCONST_0)));\n\t\t\t\t break;\n\n\t\t\t\t case ACONST_NULL:\n\t\t\t\t\t push(new Item());\n\t\t\t\t break;\n\n\t\t\t\t case ASTORE:\n\t\t\t\t case DSTORE:\n\t\t\t\t case FSTORE:\n\t\t\t\t case ISTORE:\n\t\t\t\t case LSTORE:\n\t\t\t\t\t pushByLocalStore(dbc.getRegisterOperand());\n\t\t\t\t break;\n\n\t\t\t\t case ASTORE_0:\n\t\t\t\t case ASTORE_1:\n\t\t\t\t case ASTORE_2:\n\t\t\t\t case ASTORE_3:\n\t\t\t\t\t pushByLocalStore(seen - ASTORE_0);\n\t\t\t\t break;\n\n\t\t\t\t case DSTORE_0:\n\t\t\t\t case DSTORE_1:\n\t\t\t\t case DSTORE_2:\n\t\t\t\t case DSTORE_3:\n\t\t\t\t\t pushByLocalStore(seen - DSTORE_0);\n\t\t\t\t break;\n\n\n\t\t\t\t case FSTORE_0:\n\t\t\t\t case FSTORE_1:\n\t\t\t\t case FSTORE_2:\n\t\t\t\t case FSTORE_3:\n\t\t\t\t\t pushByLocalStore(seen - FSTORE_0);\n\t\t\t\t break;\n\n\t\t\t\t case ISTORE_0:\n\t\t\t\t case ISTORE_1:\n\t\t\t\t case ISTORE_2:\n\t\t\t\t case ISTORE_3:\n\t\t\t\t\t pushByLocalStore(seen - ISTORE_0);\n\t\t\t\t break;\n\n\t\t\t\t case LSTORE_0:\n\t\t\t\t case LSTORE_1:\n\t\t\t\t case LSTORE_2:\n\t\t\t\t case LSTORE_3:\n\t\t\t\t\t pushByLocalStore(seen - LSTORE_0);\n\t\t\t\t break;\n\n\t\t\t\t case GETFIELD:\n\t\t\t\t\t {\n\t\t\t\t\t\t Item item = pop();\n\t\t\t\t\t\t int reg = item.getRegisterNumber();\n\t\t\t\t\t push(new Item(dbc.getSigConstantOperand(), \n\t\t\t\t\t\tFieldAnnotation.fromReferencedField(dbc), reg));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case ARRAYLENGTH:\n\t\t\t\t\t pop();\n\t\t\t\t\t push(new Item(\"I\"));\n\t\t\t\t break;\n\n\t\t\t\t case BALOAD:\n\t\t\t\t {\n\t\t\t\t\t pop(2);\n\t\t\t\t\t Item v =  new Item(\"I\");\n\t\t\t\t\t v.setSpecialKind(Item.SIGNED_BYTE);\n\t\t\t\t\t push(v);\n\t\t\t\t\t break;\n\t\t\t\t }\n\t\t\t\t case CALOAD:\n\t\t\t\t\t pop(2);\n\t\t\t\t\t push(new Item(\"I\"));\n\t\t\t\t break;\n\n\t\t\t\t case DALOAD:\n\t\t\t\t\t pop(2);\n\t\t\t\t\t push(new Item(\"D\"));\n\t\t\t\t break;\n\n\t\t\t\t case FALOAD:\n\t\t\t\t\t pop(2);\n\t\t\t\t\t push(new Item(\"F\"));\n\t\t\t\t break;\n\n\t\t\t\t case LALOAD:\n\t\t\t\t\t pop(2);\n\t\t\t\t\t push(new Item(\"J\"));\n\t\t\t\t break;\n\n\t\t\t\t case AASTORE:\n\t\t\t\t case BASTORE:\n\t\t\t\t case CASTORE:\n\t\t\t\t case DASTORE:\n\t\t\t\t case FASTORE:\n\t\t\t\t case IASTORE:\n\t\t\t\t case LASTORE:\n\t\t\t\t case SASTORE:\n\t\t\t\t\t pop(3);\n\t\t\t\t break;\n\n\t\t\t\t case BIPUSH:\n\t\t\t\t case SIPUSH:\n\t\t\t\t\t push(new Item(\"I\", (Integer)dbc.getIntConstant()));\n\t\t\t\t break;\n\n\t\t\t\t case IADD:\n\t\t\t\t case ISUB:\n\t\t\t\t case IMUL:\n\t\t\t\t case IDIV:\n\t\t\t\t case IAND:\n\t\t\t\t case IOR:\n\t\t\t\t case IXOR:\n\t\t\t\t case ISHL:\n\t\t\t\t case ISHR:\n\t\t\t\t case IREM:\n\t\t\t\t case IUSHR:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t it2 = pop();\n\t\t\t\t\t pushByIntMath(seen, it2, it);\n\t\t\t\t break;\n\n\t\t\t\t case INEG:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() instanceof Integer) {\n\t\t\t\t\t\t push(new Item(\"I\", ( Integer)(-(Integer) it.getConstant())));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"I\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case LNEG:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() instanceof Long) {\n\t\t\t\t\t\t push(new Item(\"J\", ( Long)(-(Long) it.getConstant())));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"J\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\t\t\t\t case FNEG:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() instanceof Float) {\n\t\t\t\t\t\t push(new Item(\"F\", ( Float)(-(Float) it.getConstant())));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"F\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\t\t\t\t case DNEG:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() instanceof Double) {\n\t\t\t\t\t\t push(new Item(\"D\", ( Double)(-(Double) it.getConstant())));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"D\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case LADD:\n\t\t\t\t case LSUB:\n\t\t\t\t case LMUL:\n\t\t\t\t case LDIV:\n\t\t\t\t case LAND:\n\t\t\t\t case LOR:\n\t\t\t\t case LXOR:\n\t\t\t\t case LSHL:\n\t\t\t\t case LSHR:\n\t\t\t\t case LREM:\n\t\t\t\t case LUSHR:\n\n\t\t\t\t\t it = pop();\n\t\t\t\t\t it2 = pop();\n\t\t\t\t\t pushByLongMath(seen, it2, it);\t \t\t\t\t\n\t\t\t\t break;\n\n\t\t\t\t case LCMP:\n\t\t\t\t handleLcmp();\n\t\t\t\t break;\n\n\t\t\t\t case FCMPG:\n\t\t\t\t case FCMPL: handleFcmp(seen);\n\t\t\t\t break;\n\n\t\t\t\t case DCMPG:\n\t\t\t\t case DCMPL:\n\t\t\t\t\t handleDcmp(seen);\n\t\t\t\t break;\n\n\t\t\t\t case FADD:\n\t\t\t\t case FSUB:\n\t\t\t\t case FMUL:\n\t\t\t\t case FDIV:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t it2 = pop();\n\t\t\t\t\t pushByFloatMath(seen, it, it2);\n\t\t\t\t break;\n\n\t\t\t\t case DADD:\n\t\t\t\t case DSUB:\n\t\t\t\t case DMUL:\n\t\t\t\t case DDIV:\n\t\t\t\t case DREM:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t it2 = pop();\n\t\t\t\t\t pushByDoubleMath(seen, it, it2);\n\t\t\t\t break;\n\n\t\t\t\t case I2B:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\t it =new Item(\"I\", (byte)constantToInt(it));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t it = new Item(\"I\");\n\t\t\t\t\t }\n\t\t\t\t\t it.setSpecialKind(Item.SIGNED_BYTE);\n\t\t\t\t\t push(it);\n\t\t\t\t break;\n\n\t\t\t\t case I2C:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\tit = new Item(\"I\", (char)constantToInt(it));\n\t\t\t\t\t } else {\n\t\t\t\t\t\tit = new Item(\"I\");\n\t\t\t\t\t }\n\t\t\t\t\tit.setSpecialKind(Item.MASKED_NON_NEGATIVE);\n\t\t\t\t\tpush(it);\n\t\t\t\t break;\n\n\t\t\t\t case I2L:\n\t\t\t\t case D2L:\n\t\t\t\t case F2L:{\n\t\t\t\t\t it = pop();\n\t\t\t\t\t Item newValue;\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\t newValue = new Item(\"J\", constantToLong(it));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t newValue = new Item(\"J\");\n\t\t\t\t\t }\n\t\t\t\t\t newValue.setSpecialKind(it.getSpecialKind());\n\t\t\t\t\t push(newValue);\n\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case I2S:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\t push(new Item(\"I\", (short)constantToInt(it)));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"I\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case L2I:\n\t\t\t\t case D2I:\n\t\t\t\t case F2I:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\t push(new Item(\"I\",constantToInt(it)));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"I\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case L2F:\n\t\t\t\t case D2F:\n\t\t\t\t case I2F:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\t push(new Item(\"F\", (Float)(constantToFloat(it))));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"F\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case F2D:\n\t\t\t\t case I2D:\n\t\t\t\t case L2D:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\t push(new Item(\"D\", constantToDouble(it)));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"D\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case NEW:\n\t\t\t\t\t pushBySignature(\"L\" + dbc.getClassConstantOperand() + \";\");\n\t\t\t\t break;\n\n\t\t\t\t case NEWARRAY:\n\t\t\t\t\t pop();\n\t\t\t\t\t signature = \"[\" + BasicType.getType((byte)dbc.getIntConstant()).getSignature();\n\t\t\t\t\t pushBySignature(signature);\n\t\t\t\t break;\n\n\t\t\t\t// According to the VM Spec 4.4.1, anewarray and multianewarray\n\t\t\t\t// can refer to normal class/interface types (encoded in\n\t\t\t\t// \"internal form\"), or array classes (encoded as signatures\n\t\t\t\t// beginning with \"[\").\n\t\t\t\t  \n\t\t\t\t case ANEWARRAY:\n\t\t\t\t\t pop();\n\t\t\t\t\tsignature = dbc.getClassConstantOperand();\n\t\t\t\t\tif (!signature.startsWith(\"[\")) {\n\t\t\t\t\t\tsignature = \"[L\" + signature + \";\";\n\t\t\t\t\t}\n\t\t\t\t\t pushBySignature(signature);\n\t\t\t\t break;\n\n\t\t\t\t case MULTIANEWARRAY:\n\t\t\t\t\t int dims = dbc.getIntConstant();\n\t\t\t\t\t while ((dims--) > 0) {\n\t\t\t\t\t\t pop();\n\t\t\t\t\t }\n\t\t\t\t\tsignature = dbc.getClassConstantOperand();\n\t\t\t\t\tif (!signature.startsWith(\"[\")) {\n\t\t\t\t\t\tdims = dbc.getIntConstant();\n\t\t\t\t\t\tsignature = \"\";\n\t\t\t\t\t\twhile ((dims--) > 0)\n\t\t\t\t\t\t\tsignature += \"[\";\n\t\t\t\t\t\tsignature += \"L\" + signature + \";\";\n\t\t\t\t\t}\n\t\t\t\t\tpushBySignature(signature);\n\t\t\t\t break;\n\n\t\t\t\t case AALOAD:\n\t\t\t\t\t pop();\n\t\t\t\t\t it = pop();\n\t\t\t\t\t pushBySignature(it.getElementSignature());\n\t\t\t\t break;\n\n\t\t\t\t case JSR:\n\t\t\t\t\t push(new Item(\"\")); //?\n\t\t\t\t break;\n\n\t\t\t\tcase INVOKEINTERFACE:\n\t\t\t\t case INVOKESPECIAL:\n\t\t\t\t case INVOKESTATIC:\n\t\t\t\t case INVOKEVIRTUAL:\n\t\t\t\t\t processMethodCall(dbc, seen);\n\t\t\t\t break;\n\n\t\t\t\t default:\n\t\t\t\t\t throw new UnsupportedOperationException(\"OpCode \" + OPCODE_NAMES[seen] + \" not supported \" );\n\t\t\t }\n\t\t }\n\n\t\t catch (RuntimeException e) {\n\t\t\t //If an error occurs, we clear the stack and locals. one of two things will occur. \n\t\t\t //Either the client will expect more stack items than really exist, and so they're condition check will fail, \n\t\t\t //or the stack will resync with the code. But hopefully not false positives\n\t\t\t \n\t\t\t AnalysisContext.logError(\"Error procssing opcode \" + OPCODE_NAMES[seen], e);\n\t\t\t if (DEBUG) \n\t\t\t\t e.printStackTrace();\n\t\t\t clear();\n\t\t }\n\t\t finally {\n\t\t\t if (exceptionHandlers.get(dbc.getNextPC()))\n\t\t\t\t push(new Item());\n\t\t\t if (DEBUG) {\n\t\t\t\t System.out.println(dbc.getNextPC() + \"pc : \" + OPCODE_NAMES[seen] + \"  stack depth: \" + getStackDepth());\n\t\t\t\t System.out.println(this);\n\t\t\t }\n\t\t }\n\t }","id":1935,"modified_method":"public void sawOpcode(DismantleBytecode dbc, int seen) {\n\t\t int register;\n\t\t String signature;\n\t\t Item it, it2, it3;\n\t\t Constant cons;\n\t\t if (dbc.isRegisterStore()) \n\t\t\t setLastUpdate(dbc.getRegisterOperand(), dbc.getPC());\n\t\t mergeJumps(dbc);\n\t\t needToMerge = true;\n\t\t switch (seen) {\n\t\t case ICONST_1:\n\t\t\t convertJumpToOneZeroState = 1;\n\t\t\t break;\n\t\t case GOTO:\n\t\t\t if (convertJumpToOneZeroState == 1 && dbc.getBranchOffset() == 4) \n\t\t\t\t convertJumpToOneZeroState = 2;\n\t\t\t else \n\t\t\t\t convertJumpToOneZeroState = 0;\n\t\t\t break;\n\t\t case ICONST_0:\n\t\t\t if (convertJumpToOneZeroState == 2)\n\t\t\t\t convertJumpToOneZeroState = 3;\n\t\t\t else convertJumpToOneZeroState = 0;\n\t\t\t break;\n\t\t\t default:convertJumpToOneZeroState = 0;\n\n\t\t }\n\t\t switch (seen) {\n\t\t case ICONST_0:\n\t\t\t convertJumpToZeroOneState = 1;\n\t\t\t break;\n\t\t case GOTO:\n\t\t\t if (convertJumpToZeroOneState == 1 && dbc.getBranchOffset() == 4) \n\t\t\t\t convertJumpToZeroOneState = 2;\n\t\t\t else \n\t\t\t\t convertJumpToZeroOneState = 0;\n\t\t\t break;\n\t\t case ICONST_1:\n\t\t\t if (convertJumpToZeroOneState == 2)\n\t\t\t\t convertJumpToZeroOneState = 3;\n\t\t\t else convertJumpToZeroOneState = 0;\n\t\t\t break;\n\t\t default:convertJumpToZeroOneState = 0;\n\t\t }\n\n\t\t try\n\t\t {\n\t\t\t switch (seen) {\n\t\t\t\t case ALOAD:\n\t\t\t\t\t pushByLocalObjectLoad(dbc, dbc.getRegisterOperand());\n\t\t\t\t break;\n\n\t\t\t\t case ALOAD_0:\n\t\t\t\t case ALOAD_1:\n\t\t\t\t case ALOAD_2:\n\t\t\t\t case ALOAD_3:\n\t\t\t\t\t pushByLocalObjectLoad(dbc, seen - ALOAD_0);\n\t\t\t\t break;\n\n\t\t\t\t case DLOAD:\n\t\t\t\t\t pushByLocalLoad(\"D\", dbc.getRegisterOperand());\n\t\t\t\t break;\n\n\t\t\t\t case DLOAD_0:\n\t\t\t\t case DLOAD_1:\n\t\t\t\t case DLOAD_2:\n\t\t\t\t case DLOAD_3:\n\t\t\t\t\t pushByLocalLoad(\"D\", seen - DLOAD_0);\n\t\t\t\t break;\n\n\t\t\t\t case FLOAD:\n\t\t\t\t\t pushByLocalLoad(\"F\", dbc.getRegisterOperand());\n\t\t\t\t break;\n\n\t\t\t\t case FLOAD_0:\n\t\t\t\t case FLOAD_1:\n\t\t\t\t case FLOAD_2:\n\t\t\t\t case FLOAD_3:\n\t\t\t\t\t pushByLocalLoad(\"F\", seen - FLOAD_0);\n\t\t\t\t break;\n\n\t\t\t\t case ILOAD:\n\t\t\t\t\t pushByLocalLoad(\"I\", dbc.getRegisterOperand());\n\t\t\t\t break;\n\n\t\t\t\t case ILOAD_0:\n\t\t\t\t case ILOAD_1:\n\t\t\t\t case ILOAD_2:\n\t\t\t\t case ILOAD_3:\n\t\t\t\t\t pushByLocalLoad(\"I\", seen - ILOAD_0);\n\t\t\t\t break;\n\n\t\t\t\t case LLOAD:\n\t\t\t\t\t pushByLocalLoad(\"J\", dbc.getRegisterOperand());\n\t\t\t\t break;\n\n\t\t\t\t case LLOAD_0:\n\t\t\t\t case LLOAD_1:\n\t\t\t\t case LLOAD_2:\n\t\t\t\t case LLOAD_3:\n\t\t\t\t\t pushByLocalLoad(\"J\", seen - LLOAD_0);\n\t\t\t\t break;\n\n\n\t\t\t\t case GETSTATIC:\n\t\t\t\t\t{\n\t\t\t\t\tFieldAnnotation field = FieldAnnotation.fromReferencedField(dbc);\n\t\t\t\t\t Item i = new Item(dbc.getSigConstantOperand(), field, Integer.MAX_VALUE);\n\t\t\t\t\t if (field.getFieldName().equals(\"separator\") && field.getClassName().equals(\"java.io.File\")) {\n\t\t\t\t\t\t i.setSpecialKind(Item.FILE_SEPARATOR_STRING);\n\t\t\t\t\t }\n\n\t\t\t\t\t push(i);\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t case LDC:\n\t\t\t\t case LDC_W:\n\t\t\t\tcase LDC2_W:\n\t\t\t\t\t cons = dbc.getConstantRefOperand();\n\t\t\t\t\t pushByConstant(dbc, cons);\n\t\t\t\tbreak;\n\n\t\t\t\tcase INSTANCEOF:\n\t\t\t\t\tpop();\n\t\t\t\t\tpush(new Item(\"I\"));\n\t\t\t\tbreak;\n\t\t\t\tcase IFEQ:\n\t\t\t\t case IFNE:\n\t\t\t\t case IFLT:\n\t\t\t\t case IFLE:\n\t\t\t\t case IFGT:\n\t\t\t\t case IFGE:\n\t\t\t\t case IFNONNULL:\n\t\t\t\t case IFNULL:\n\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t {\n\t\t\t\t\t Item top = pop();\n\n\t\t\t\t\t // if we see a test comparing a special negative value with 0,\n\t\t\t\t\t // reset all other such values on the opcode stack\n\t\t\t\t\tif (top.valueCouldBeNegative() \n\t\t\t\t\t\t\t&& (seen == IFLT || seen == IFLE || seen == IFGT || seen == IFGE)) {\n\t\t\t\t\t\tint specialKind = top.getSpecialKind();\n\t\t\t\t\t\tfor(Item item : stack) if (item != null && item.getSpecialKind() == specialKind) item.setSpecialKind(0);\n\t\t\t\t\t\tfor(Item item : lvValues) if (item != null && item.getSpecialKind() == specialKind) item.setSpecialKind(0);\n\n\t\t\t\t\t}\n\t\t\t\t }\n\t\t\t\t addJumpValue(dbc.getBranchTarget());\n\n\t\t\t break;\n\t\t\t\t case LOOKUPSWITCH:\n\n\t\t\t\t case TABLESWITCH:\n\t\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t\t pop();\n\t\t\t\t\t addJumpValue(dbc.getBranchTarget());\n\t\t\t\t\t int pc = dbc.getBranchTarget() - dbc.getBranchOffset();\n\t\t\t\t\t for(int offset : dbc.getSwitchOffsets())\n\t\t\t\t\t\t addJumpValue(offset+pc);\n\n\t\t\t\t break;\n\t\t\t\t case ARETURN:\n\t\t\t\t case DRETURN:\n\t\t\t\t case FRETURN:\n\n\t\t\t\t case IRETURN:\n\t\t\t\t case LRETURN:\n\n\t\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t\treachOnlyByBranch = true;\n\t\t\t\t\t pop();\n\t\t\t\t break;\n\t\t\t\t case MONITORENTER:\n\t\t\t\t case MONITOREXIT:\n\t\t\t\t case POP:\n\t\t\t\t case PUTSTATIC:\n\t\t\t\t\t pop();\n\t\t\t\t break;\n\n\t\t\t\t case IF_ACMPEQ:\n\t\t\t\t case IF_ACMPNE:\n\t\t\t\t case IF_ICMPEQ:\n\t\t\t\t case IF_ICMPNE:\n\t\t\t\t case IF_ICMPLT:\n\t\t\t\t case IF_ICMPLE:\n\t\t\t\t case IF_ICMPGT:\n\t\t\t\t case IF_ICMPGE:\n\n\t\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t\t pop(2);\n\t\t\t\t\t addJumpValue(dbc.getBranchTarget());\n\t\t\t\t\tbreak;\n\n\n\t\t\t\t case POP2:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getSize() == 1) pop();\n\t\t\t\t\t break;\n\t\t\t\t case PUTFIELD:\n\t\t\t\t\t pop(2);\n\t\t\t\t break;\n\n\t\t\t\t case IALOAD:\n\t\t\t\t case SALOAD:\n\t\t\t\t\t pop(2);\n\t\t\t\t\t push(new Item(\"I\"));\n\t\t\t\t break;\n\n\t\t\t\t case DUP: \n\t\t\t\t\t handleDup();\n\t\t\t\t break;\n\n\t\t\t\t case DUP2:\n\t\t\t\t\t handleDup2();\n\t\t\t\t break;\n\n\t\t\t\t case DUP_X1:\n\t\t\t\t handleDupX1();\n\t\t\t\t break;\n\n\t\t\t\t case DUP_X2:\n\n\t\t\t\t\t handleDupX2();\n\t\t\t\t break;\n\n\t\t\t\t case DUP2_X1:\n\t\t\t\t\t\t handleDup2X1();\n\t\t\t\t break;\n\n\t\t\t\t case DUP2_X2:\n\t\t\t\t\t handleDup2X2();\n\t\t\t\t\t break;\n\n\t\t\t\t case IINC:\n\t\t\t\t\t register = dbc.getRegisterOperand();\n\t\t\t\t\t it = getLVValue( register );\n\t\t\t\t\t it2 = new Item(\"I\", dbc.getIntConstant());\n\t\t\t\t\t pushByIntMath( IADD, it2, it);\n\t\t\t\t\t pushByLocalStore(register);\n\t\t\t\t break;\n\n\t\t\t\t case ATHROW:\n\t\t\t\t\tpop();\n\t\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t\treachOnlyByBranch = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t case CHECKCAST:\n\t\t\t\t {\n\t\t\t\t\t String castTo = dbc.getClassConstantOperand();\n\n\t\t\t\t\t if (castTo.charAt(0) != '[') castTo = \"L\" + castTo + \";\";\n\t\t\t\t\t it = new Item(pop());\n\t\t\t\t\t it.signature = castTo;\n\t\t\t\t\t push(it);\n\n\t\t\t\t\t break;\n\n\n\t\t\t\t }\n\t\t\t\t case NOP:\n\t\t\t\t\tbreak;\n\t\t\t\t case RET:\n\t\t\t\t case RETURN:\n\t\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t\treachOnlyByBranch = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t case GOTO:\n\t\t\t\t case GOTO_W:\t\t\t\t\t//It is assumed that no stack items are present when\n\t\t\t\t\tseenTransferOfControl = true;\n\t\t\t\t\treachOnlyByBranch = true;\n\t\t\t\t\taddJumpValue(dbc.getBranchTarget());\n\t\t\t\t\tstack.clear();\n\n\t\t\t\t break;\n\n\n\t\t\t\t case SWAP:\n\t\t\t\t\t handleSwap();\n\t\t\t\t break;\n\n\t\t\t\t case ICONST_M1:\n\t\t\t\t case ICONST_0:\n\t\t\t\t case ICONST_1:\n\t\t\t\t case ICONST_2:\n\t\t\t\t case ICONST_3:\n\t\t\t\t case ICONST_4:\n\t\t\t\t case ICONST_5:\n\t\t\t\t\t push(new Item(\"I\", (seen-ICONST_0)));\n\t\t\t\t break;\n\n\t\t\t\t case LCONST_0:\n\t\t\t\t case LCONST_1:\n\t\t\t\t\t push(new Item(\"J\", (long)(seen-LCONST_0)));\n\t\t\t\t break;\n\n\t\t\t\t case DCONST_0:\n\t\t\t\t case DCONST_1:\n\t\t\t\t\t push(new Item(\"D\", (double)(seen-DCONST_0)));\n\t\t\t\t break;\n\n\t\t\t\t case FCONST_0:\n\t\t\t\t case FCONST_1:\n\t\t\t\t case FCONST_2:\n\t\t\t\t\t push(new Item(\"F\", (float)(seen-FCONST_0)));\n\t\t\t\t break;\n\n\t\t\t\t case ACONST_NULL:\n\t\t\t\t\t push(new Item());\n\t\t\t\t break;\n\n\t\t\t\t case ASTORE:\n\t\t\t\t case DSTORE:\n\t\t\t\t case FSTORE:\n\t\t\t\t case ISTORE:\n\t\t\t\t case LSTORE:\n\t\t\t\t\t pushByLocalStore(dbc.getRegisterOperand());\n\t\t\t\t break;\n\n\t\t\t\t case ASTORE_0:\n\t\t\t\t case ASTORE_1:\n\t\t\t\t case ASTORE_2:\n\t\t\t\t case ASTORE_3:\n\t\t\t\t\t pushByLocalStore(seen - ASTORE_0);\n\t\t\t\t break;\n\n\t\t\t\t case DSTORE_0:\n\t\t\t\t case DSTORE_1:\n\t\t\t\t case DSTORE_2:\n\t\t\t\t case DSTORE_3:\n\t\t\t\t\t pushByLocalStore(seen - DSTORE_0);\n\t\t\t\t break;\n\n\n\t\t\t\t case FSTORE_0:\n\t\t\t\t case FSTORE_1:\n\t\t\t\t case FSTORE_2:\n\t\t\t\t case FSTORE_3:\n\t\t\t\t\t pushByLocalStore(seen - FSTORE_0);\n\t\t\t\t break;\n\n\t\t\t\t case ISTORE_0:\n\t\t\t\t case ISTORE_1:\n\t\t\t\t case ISTORE_2:\n\t\t\t\t case ISTORE_3:\n\t\t\t\t\t pushByLocalStore(seen - ISTORE_0);\n\t\t\t\t break;\n\n\t\t\t\t case LSTORE_0:\n\t\t\t\t case LSTORE_1:\n\t\t\t\t case LSTORE_2:\n\t\t\t\t case LSTORE_3:\n\t\t\t\t\t pushByLocalStore(seen - LSTORE_0);\n\t\t\t\t break;\n\n\t\t\t\t case GETFIELD:\n\t\t\t\t\t {\n\t\t\t\t\t\t Item item = pop();\n\t\t\t\t\t\t int reg = item.getRegisterNumber();\n\t\t\t\t\t push(new Item(dbc.getSigConstantOperand(), \n\t\t\t\t\t\tFieldAnnotation.fromReferencedField(dbc), reg));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case ARRAYLENGTH:\n\t\t\t\t\t pop();\n\t\t\t\t\t push(new Item(\"I\"));\n\t\t\t\t break;\n\n\t\t\t\t case BALOAD:\n\t\t\t\t {\n\t\t\t\t\t pop(2);\n\t\t\t\t\t Item v =  new Item(\"I\");\n\t\t\t\t\t v.setSpecialKind(Item.SIGNED_BYTE);\n\t\t\t\t\t push(v);\n\t\t\t\t\t break;\n\t\t\t\t }\n\t\t\t\t case CALOAD:\n\t\t\t\t\t pop(2);\n\t\t\t\t\t push(new Item(\"I\"));\n\t\t\t\t break;\n\n\t\t\t\t case DALOAD:\n\t\t\t\t\t pop(2);\n\t\t\t\t\t push(new Item(\"D\"));\n\t\t\t\t break;\n\n\t\t\t\t case FALOAD:\n\t\t\t\t\t pop(2);\n\t\t\t\t\t push(new Item(\"F\"));\n\t\t\t\t break;\n\n\t\t\t\t case LALOAD:\n\t\t\t\t\t pop(2);\n\t\t\t\t\t push(new Item(\"J\"));\n\t\t\t\t break;\n\n\t\t\t\t case AASTORE:\n\t\t\t\t case BASTORE:\n\t\t\t\t case CASTORE:\n\t\t\t\t case DASTORE:\n\t\t\t\t case FASTORE:\n\t\t\t\t case IASTORE:\n\t\t\t\t case LASTORE:\n\t\t\t\t case SASTORE:\n\t\t\t\t\t pop(3);\n\t\t\t\t break;\n\n\t\t\t\t case BIPUSH:\n\t\t\t\t case SIPUSH:\n\t\t\t\t\t push(new Item(\"I\", (Integer)dbc.getIntConstant()));\n\t\t\t\t break;\n\n\t\t\t\t case IADD:\n\t\t\t\t case ISUB:\n\t\t\t\t case IMUL:\n\t\t\t\t case IDIV:\n\t\t\t\t case IAND:\n\t\t\t\t case IOR:\n\t\t\t\t case IXOR:\n\t\t\t\t case ISHL:\n\t\t\t\t case ISHR:\n\t\t\t\t case IREM:\n\t\t\t\t case IUSHR:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t it2 = pop();\n\t\t\t\t\t pushByIntMath(seen, it2, it);\n\t\t\t\t break;\n\n\t\t\t\t case INEG:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() instanceof Integer) {\n\t\t\t\t\t\t push(new Item(\"I\", ( Integer)(-(Integer) it.getConstant())));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"I\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case LNEG:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() instanceof Long) {\n\t\t\t\t\t\t push(new Item(\"J\", ( Long)(-(Long) it.getConstant())));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"J\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\t\t\t\t case FNEG:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() instanceof Float) {\n\t\t\t\t\t\t push(new Item(\"F\", ( Float)(-(Float) it.getConstant())));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"F\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\t\t\t\t case DNEG:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() instanceof Double) {\n\t\t\t\t\t\t push(new Item(\"D\", ( Double)(-(Double) it.getConstant())));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"D\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case LADD:\n\t\t\t\t case LSUB:\n\t\t\t\t case LMUL:\n\t\t\t\t case LDIV:\n\t\t\t\t case LAND:\n\t\t\t\t case LOR:\n\t\t\t\t case LXOR:\n\t\t\t\t case LSHL:\n\t\t\t\t case LSHR:\n\t\t\t\t case LREM:\n\t\t\t\t case LUSHR:\n\n\t\t\t\t\t it = pop();\n\t\t\t\t\t it2 = pop();\n\t\t\t\t\t pushByLongMath(seen, it2, it);\t \t\t\t\t\n\t\t\t\t break;\n\n\t\t\t\t case LCMP:\n\t\t\t\t handleLcmp();\n\t\t\t\t break;\n\n\t\t\t\t case FCMPG:\n\t\t\t\t case FCMPL: handleFcmp(seen);\n\t\t\t\t break;\n\n\t\t\t\t case DCMPG:\n\t\t\t\t case DCMPL:\n\t\t\t\t\t handleDcmp(seen);\n\t\t\t\t break;\n\n\t\t\t\t case FADD:\n\t\t\t\t case FSUB:\n\t\t\t\t case FMUL:\n\t\t\t\t case FDIV:\n\t\t\t\t case FREM:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t it2 = pop();\n\t\t\t\t\t pushByFloatMath(seen, it, it2);\n\t\t\t\t break;\n\n\t\t\t\t case DADD:\n\t\t\t\t case DSUB:\n\t\t\t\t case DMUL:\n\t\t\t\t case DDIV:\n\t\t\t\t case DREM:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t it2 = pop();\n\t\t\t\t\t pushByDoubleMath(seen, it, it2);\n\t\t\t\t break;\n\n\t\t\t\t case I2B:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\t it =new Item(\"I\", (byte)constantToInt(it));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t it = new Item(\"I\");\n\t\t\t\t\t }\n\t\t\t\t\t it.setSpecialKind(Item.SIGNED_BYTE);\n\t\t\t\t\t push(it);\n\t\t\t\t break;\n\n\t\t\t\t case I2C:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\tit = new Item(\"I\", (char)constantToInt(it));\n\t\t\t\t\t } else {\n\t\t\t\t\t\tit = new Item(\"I\");\n\t\t\t\t\t }\n\t\t\t\t\tit.setSpecialKind(Item.MASKED_NON_NEGATIVE);\n\t\t\t\t\tpush(it);\n\t\t\t\t break;\n\n\t\t\t\t case I2L:\n\t\t\t\t case D2L:\n\t\t\t\t case F2L:{\n\t\t\t\t\t it = pop();\n\t\t\t\t\t Item newValue;\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\t newValue = new Item(\"J\", constantToLong(it));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t newValue = new Item(\"J\");\n\t\t\t\t\t }\n\t\t\t\t\t newValue.setSpecialKind(it.getSpecialKind());\n\t\t\t\t\t push(newValue);\n\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case I2S:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\t push(new Item(\"I\", (short)constantToInt(it)));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"I\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case L2I:\n\t\t\t\t case D2I:\n\t\t\t\t case F2I:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\t push(new Item(\"I\",constantToInt(it)));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"I\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case L2F:\n\t\t\t\t case D2F:\n\t\t\t\t case I2F:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\t push(new Item(\"F\", (Float)(constantToFloat(it))));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"F\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case F2D:\n\t\t\t\t case I2D:\n\t\t\t\t case L2D:\n\t\t\t\t\t it = pop();\n\t\t\t\t\t if (it.getConstant() != null) {\n\t\t\t\t\t\t push(new Item(\"D\", constantToDouble(it)));\n\t\t\t\t\t } else {\n\t\t\t\t\t\t push(new Item(\"D\"));\n\t\t\t\t\t }\n\t\t\t\t break;\n\n\t\t\t\t case NEW:\n\t\t\t\t\t pushBySignature(\"L\" + dbc.getClassConstantOperand() + \";\");\n\t\t\t\t break;\n\n\t\t\t\t case NEWARRAY:\n\t\t\t\t\t pop();\n\t\t\t\t\t signature = \"[\" + BasicType.getType((byte)dbc.getIntConstant()).getSignature();\n\t\t\t\t\t pushBySignature(signature);\n\t\t\t\t break;\n\n\t\t\t\t// According to the VM Spec 4.4.1, anewarray and multianewarray\n\t\t\t\t// can refer to normal class/interface types (encoded in\n\t\t\t\t// \"internal form\"), or array classes (encoded as signatures\n\t\t\t\t// beginning with \"[\").\n\t\t\t\t  \n\t\t\t\t case ANEWARRAY:\n\t\t\t\t\t pop();\n\t\t\t\t\tsignature = dbc.getClassConstantOperand();\n\t\t\t\t\tif (!signature.startsWith(\"[\")) {\n\t\t\t\t\t\tsignature = \"[L\" + signature + \";\";\n\t\t\t\t\t}\n\t\t\t\t\t pushBySignature(signature);\n\t\t\t\t break;\n\n\t\t\t\t case MULTIANEWARRAY:\n\t\t\t\t\t int dims = dbc.getIntConstant();\n\t\t\t\t\t while ((dims--) > 0) {\n\t\t\t\t\t\t pop();\n\t\t\t\t\t }\n\t\t\t\t\tsignature = dbc.getClassConstantOperand();\n\t\t\t\t\tif (!signature.startsWith(\"[\")) {\n\t\t\t\t\t\tdims = dbc.getIntConstant();\n\t\t\t\t\t\tsignature = \"\";\n\t\t\t\t\t\twhile ((dims--) > 0)\n\t\t\t\t\t\t\tsignature += \"[\";\n\t\t\t\t\t\tsignature += \"L\" + signature + \";\";\n\t\t\t\t\t}\n\t\t\t\t\tpushBySignature(signature);\n\t\t\t\t break;\n\n\t\t\t\t case AALOAD:\n\t\t\t\t\t pop();\n\t\t\t\t\t it = pop();\n\t\t\t\t\t pushBySignature(it.getElementSignature());\n\t\t\t\t break;\n\n\t\t\t\t case JSR:\n\t\t\t\t\t push(new Item(\"\")); //?\n\t\t\t\t break;\n\n\t\t\t\tcase INVOKEINTERFACE:\n\t\t\t\t case INVOKESPECIAL:\n\t\t\t\t case INVOKESTATIC:\n\t\t\t\t case INVOKEVIRTUAL:\n\t\t\t\t\t processMethodCall(dbc, seen);\n\t\t\t\t break;\n\n\t\t\t\t default:\n\t\t\t\t\t throw new UnsupportedOperationException(\"OpCode \" + OPCODE_NAMES[seen] + \" not supported \" );\n\t\t\t }\n\t\t }\n\n\t\t catch (RuntimeException e) {\n\t\t\t //If an error occurs, we clear the stack and locals. one of two things will occur. \n\t\t\t //Either the client will expect more stack items than really exist, and so they're condition check will fail, \n\t\t\t //or the stack will resync with the code. But hopefully not false positives\n\t\t\t \n\t\t\t AnalysisContext.logError(\"Error procssing opcode \" + OPCODE_NAMES[seen], e);\n\t\t\t if (DEBUG) \n\t\t\t\t e.printStackTrace();\n\t\t\t clear();\n\t\t }\n\t\t finally {\n\t\t\t if (exceptionHandlers.get(dbc.getNextPC()))\n\t\t\t\t push(new Item());\n\t\t\t if (DEBUG) {\n\t\t\t\t System.out.println(dbc.getNextPC() + \"pc : \" + OPCODE_NAMES[seen] + \"  stack depth: \" + getStackDepth());\n\t\t\t\t System.out.println(this);\n\t\t\t }\n\t\t }\n\t }","commit_id":"4d28dbf5a1bfa5d8f4e1d49cf46240abac892f84","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private void pushByFloatMath(int seen, Item it, Item it2) {\n\t\tItem result;\n\t\tint specialKind = Item.FLOAT_MATH;\n\t\tif ((it.getConstant() != null) && it2.getConstant() != null) {\n\t\t\tif (seen == FADD)\n\t\t\t\tresult =new Item(\"F\", ((Float) it2.getConstant()) + ((Float) it.getConstant()));\n\t\t\telse if (seen == FSUB)\n\t\t\t\tresult =new Item(\"F\", ((Float) it2.getConstant()) - ((Float) it.getConstant()));\n\t\t\telse if (seen == FMUL)\n\t\t\t\tresult =new Item(\"F\", ((Float) it2.getConstant()) * ((Float) it.getConstant()));\n\t\t\telse if (seen == FDIV)\n\t\t\t\tresult =new Item(\"F\", ((Float) it2.getConstant()) / ((Float) it.getConstant()));\n\t\t\t\telse result =new Item(\"F\");\n\t\t} else {\n\t\t\tresult =new Item(\"F\");\n\t\t\tif (seen == DDIV)\n\t\t\t\tspecialKind = Item.NASTY_FLOAT_MATH;\n\t\t}\n\t\tresult.setSpecialKind(specialKind);\n\t\tpush(result);\n\t}","id":1936,"modified_method":"private void pushByFloatMath(int seen, Item it, Item it2) {\n\t\tItem result;\n\t\tint specialKind = Item.FLOAT_MATH;\n\t\tif ((it.getConstant() instanceof Float) && it2.getConstant() instanceof Float) {\n\t\t\tif (seen == FADD)\n\t\t\t\tresult =new Item(\"F\", ((Float) it2.getConstant()) + ((Float) it.getConstant()));\n\t\t\telse if (seen == FSUB)\n\t\t\t\tresult =new Item(\"F\", ((Float) it2.getConstant()) - ((Float) it.getConstant()));\n\t\t\telse if (seen == FMUL)\n\t\t\t\tresult =new Item(\"F\", ((Float) it2.getConstant()) * ((Float) it.getConstant()));\n\t\t\telse if (seen == FDIV)\n\t\t\t\tresult =new Item(\"F\", ((Float) it2.getConstant()) / ((Float) it.getConstant()));\n\t\t\telse if (seen == FREM)\n\t\t\t\tresult =new Item(\"F\", ((Float) it2.getConstant()) % ((Float) it.getConstant()));\n\t\t\telse result =new Item(\"F\");\n\t\t} else {\n\t\t\tresult =new Item(\"F\");\n\t\t\tif (seen == DDIV)\n\t\t\t\tspecialKind = Item.NASTY_FLOAT_MATH;\n\t\t}\n\t\tresult.setSpecialKind(specialKind);\n\t\tpush(result);\n\t}","commit_id":"4d28dbf5a1bfa5d8f4e1d49cf46240abac892f84","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public static Tuples._3<Boolean, String, SNode> isNullableDotExpression(@NotNull SNode parent, @NotNull SNode source, @NotNull NullableState state) {\n    if (!(NullableState.canBeNull(state))) {\n      return MultiTuple.<Boolean,String,SNode>from(false, ((String) null), ((SNode) null));\n    }\n    if (SNodeOperations.isInstanceOf(parent, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, \"jetbrains.mps.baseLanguage.structure.DotExpression\")) && !(BehaviorReflection.invokeVirtual(Boolean.TYPE, SNodeOperations.cast(parent, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, \"jetbrains.mps.baseLanguage.structure.DotExpression\")), \"virtual_allowsNullOperand_4585239809762176541\", new Object[]{}))) {\n      SNode dot = SNodeOperations.cast(parent, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, \"jetbrains.mps.baseLanguage.structure.DotExpression\"));\n      if (SLinkOperations.getTarget(dot, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46a4416L, \"operand\")) == source && !(BehaviorReflection.invokeVirtual(Boolean.TYPE, SLinkOperations.getTarget(dot, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46b36c4L, \"operation\")), \"virtual_operandCanBeNull_323410281720656291\", new Object[]{})) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(dot, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46b36c4L, \"operation\")), MetaAdapterFactory.getConcept(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10ec4627e6fL, \"jetbrains.mps.baseLanguage.collections.structure.GetSizeOperation\")))) {\n        return MultiTuple.<Boolean,String,SNode>from(true, \"This operation can produce 'java.lang.NullPointerException'\", dot);\n      }\n    }\n    return MultiTuple.<Boolean,String,SNode>from(false, ((String) null), ((SNode) null));\n  }","id":1937,"modified_method":"public static Tuples._2<String, SNode> isNullableDotExpression(@NotNull SNode parent, @NotNull SNode source, @NotNull NullableState state) {\n    if (!(NullableState.canBeNull(state))) {\n      return null;\n    }\n    if (SNodeOperations.isInstanceOf(parent, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, \"jetbrains.mps.baseLanguage.structure.DotExpression\")) && !(BehaviorReflection.invokeVirtual(Boolean.TYPE, SNodeOperations.cast(parent, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, \"jetbrains.mps.baseLanguage.structure.DotExpression\")), \"virtual_allowsNullOperand_4585239809762176541\", new Object[]{}))) {\n      SNode dot = SNodeOperations.cast(parent, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, \"jetbrains.mps.baseLanguage.structure.DotExpression\"));\n      if (SLinkOperations.getTarget(dot, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46a4416L, \"operand\")) == source && !(BehaviorReflection.invokeVirtual(Boolean.TYPE, SLinkOperations.getTarget(dot, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46b36c4L, \"operation\")), \"virtual_operandCanBeNull_323410281720656291\", new Object[]{})) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(dot, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46b36c4L, \"operation\")), MetaAdapterFactory.getConcept(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10ec4627e6fL, \"jetbrains.mps.baseLanguage.collections.structure.GetSizeOperation\")))) {\n        return MultiTuple.<String,SNode>from(\"This operation can produce 'java.lang.NullPointerException'\", dot);\n      }\n    }\n    return null;\n  }","commit_id":"e6541c1b7576a160c656ab187901a9695ff9f47d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Tuples._3<Boolean, String, SNode> isNullableMethodCall(@NotNull SNode parent, @NotNull SNode source, @NotNull NullableState state) {\n    if (SNodeOperations.isInstanceOf(parent, MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, \"jetbrains.mps.baseLanguage.structure.IMethodCall\")) && SNodeOperations.isInstanceOf(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL, \"jetbrains.mps.baseLanguage.structure.Expression\")) && ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(parent, MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, \"jetbrains.mps.baseLanguage.structure.IMethodCall\")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301aeL, \"actualArgument\"))).contains(SNodeOperations.cast(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL, \"jetbrains.mps.baseLanguage.structure.Expression\")))) {\n      SNode methodCall = SNodeOperations.cast(parent, MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, \"jetbrains.mps.baseLanguage.structure.IMethodCall\"));\n      SNode methodDeclaration = SLinkOperations.getTarget(methodCall, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301adL, \"baseMethodDeclaration\"));\n      if (methodDeclaration != null) {\n        {\n          Iterator<SNode> arg_it = ListSequence.fromList(SLinkOperations.getChildren(methodCall, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301aeL, \"actualArgument\"))).iterator();\n          Iterator<SNode> param_it = ListSequence.fromList(SLinkOperations.getChildren(methodDeclaration, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, \"parameter\"))).iterator();\n          SNode arg_var;\n          SNode param_var;\n          while (arg_it.hasNext() && param_it.hasNext()) {\n            arg_var = arg_it.next();\n            param_var = param_it.next();\n            if (eq_cmc61d_a0c0e0a0c0a0h(arg_var, source)) {\n              if (ListSequence.fromList(SLinkOperations.getChildren(param_var, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"))).where(new IWhereFilter<SNode>() {\n                public boolean accept(SNode it) {\n                  return (SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, \"annotation\")) != null);\n                }\n              }).select(new ISelector<SNode, SNode>() {\n                public SNode select(SNode it) {\n                  return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, \"annotation\"));\n                }\n              }).contains(SNodeOperations.getNode(\"3f233e7f-b8a6-46d2-a57f-795d56775243/f:java_stub#3f233e7f-b8a6-46d2-a57f-795d56775243#org.jetbrains.annotations(Annotations/org.jetbrains.annotations@java_stub)\", \"~NotNull\")) && NullableState.canBeNull(state)) {\n                String warning;\n                if (SNodeOperations.isInstanceOf(source, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\"))) {\n                  warning = \"Argument \" + SPropertyOperations.getString(SNodeOperations.cast(source, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")) + \" might be null\";\n                } else {\n                  warning = \"Argument might be null\";\n                }\n                return MultiTuple.<Boolean,String,SNode>from(true, warning, source);\n              }\n            }\n          }\n        }\n      }\n    }\n    return MultiTuple.<Boolean,String,SNode>from(false, ((String) null), ((SNode) null));\n  }","id":1938,"modified_method":"public static Tuples._2<String, SNode> isNullableMethodCall(@NotNull SNode parent, @NotNull SNode source, @NotNull NullableState state) {\n    if (SNodeOperations.isInstanceOf(parent, MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, \"jetbrains.mps.baseLanguage.structure.IMethodCall\")) && SNodeOperations.isInstanceOf(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL, \"jetbrains.mps.baseLanguage.structure.Expression\")) && ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(parent, MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, \"jetbrains.mps.baseLanguage.structure.IMethodCall\")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301aeL, \"actualArgument\"))).contains(SNodeOperations.cast(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL, \"jetbrains.mps.baseLanguage.structure.Expression\")))) {\n      SNode methodCall = SNodeOperations.cast(parent, MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, \"jetbrains.mps.baseLanguage.structure.IMethodCall\"));\n      SNode methodDeclaration = SLinkOperations.getTarget(methodCall, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301adL, \"baseMethodDeclaration\"));\n      if (methodDeclaration != null) {\n        {\n          Iterator<SNode> arg_it = ListSequence.fromList(SLinkOperations.getChildren(methodCall, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301aeL, \"actualArgument\"))).iterator();\n          Iterator<SNode> param_it = ListSequence.fromList(SLinkOperations.getChildren(methodDeclaration, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, \"parameter\"))).iterator();\n          SNode arg_var;\n          SNode param_var;\n          while (arg_it.hasNext() && param_it.hasNext()) {\n            arg_var = arg_it.next();\n            param_var = param_it.next();\n            if (eq_cmc61d_a0c0e0a0c0a0e(arg_var, source)) {\n              if (ListSequence.fromList(SLinkOperations.getChildren(param_var, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"))).where(new IWhereFilter<SNode>() {\n                public boolean accept(SNode it) {\n                  return (SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, \"annotation\")) != null);\n                }\n              }).select(new ISelector<SNode, SNode>() {\n                public SNode select(SNode it) {\n                  return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, \"annotation\"));\n                }\n              }).contains(SNodeOperations.getNode(\"3f233e7f-b8a6-46d2-a57f-795d56775243/f:java_stub#3f233e7f-b8a6-46d2-a57f-795d56775243#org.jetbrains.annotations(Annotations/org.jetbrains.annotations@java_stub)\", \"~NotNull\")) && NullableState.canBeNull(state)) {\n                String warning;\n                if (SNodeOperations.isInstanceOf(source, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\"))) {\n                  warning = \"Argument \" + SPropertyOperations.getString(SNodeOperations.cast(source, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")) + \" might be null\";\n                } else {\n                  warning = \"Argument might be null\";\n                }\n                return MultiTuple.<String,SNode>from(warning, source);\n              }\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }","commit_id":"e6541c1b7576a160c656ab187901a9695ff9f47d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Tuples._3<Boolean, String, SNode> checkNullableAssignment(Instruction instruction, AnalysisResult<Map<SNode, NullableState>> result) {\n    if (instruction instanceof WriteInstruction) {\n      WriteInstruction write = (WriteInstruction) instruction;\n      List<SNode> annotation = SLinkOperations.getChildren(((SNode) write.getVariable()), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"));\n      if (annotation != null && ListSequence.fromList(annotation).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return (SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, \"annotation\")) != null);\n        }\n      }).select(new ISelector<SNode, SNode>() {\n        public SNode select(SNode it) {\n          return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, \"annotation\"));\n        }\n      }).contains(SNodeOperations.getNode(\"3f233e7f-b8a6-46d2-a57f-795d56775243/f:java_stub#3f233e7f-b8a6-46d2-a57f-795d56775243#org.jetbrains.annotations(Annotations/org.jetbrains.annotations@java_stub)\", \"~NotNull\"))) {\n        SNode value = (SNode) write.getValue();\n        if (SNodeOperations.isInstanceOf(value, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L, \"jetbrains.mps.baseLanguage.structure.VariableReference\"))) {\n          value = SLinkOperations.getTarget(SNodeOperations.cast(value, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L, \"jetbrains.mps.baseLanguage.structure.VariableReference\")), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L, 0xf8cc6bf960L, \"variableDeclaration\"));\n        }\n        if (NullableState.canBeNull(result.get(instruction).get(value))) {\n          return MultiTuple.<Boolean,String,SNode>from(true, \"This expression might evaluate to null but is assigned to a variable that is annotated with @NotNull\", (SNode) write.getValue());\n        }\n      }\n    }\n    return MultiTuple.<Boolean,String,SNode>from(false, ((String) null), ((SNode) null));\n\n  }","id":1939,"modified_method":"public static Tuples._2<String, SNode> checkNullableAssignment(Instruction instruction, AnalysisResult<Map<SNode, NullableState>> result) {\n    if (instruction instanceof WriteInstruction) {\n      WriteInstruction write = (WriteInstruction) instruction;\n      List<SNode> annotation = SLinkOperations.getChildren(((SNode) write.getVariable()), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"));\n      if (annotation != null && ListSequence.fromList(annotation).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return (SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, \"annotation\")) != null);\n        }\n      }).select(new ISelector<SNode, SNode>() {\n        public SNode select(SNode it) {\n          return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, \"annotation\"));\n        }\n      }).contains(SNodeOperations.getNode(\"3f233e7f-b8a6-46d2-a57f-795d56775243/f:java_stub#3f233e7f-b8a6-46d2-a57f-795d56775243#org.jetbrains.annotations(Annotations/org.jetbrains.annotations@java_stub)\", \"~NotNull\"))) {\n        SNode value = (SNode) write.getValue();\n        if (SNodeOperations.isInstanceOf(value, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L, \"jetbrains.mps.baseLanguage.structure.VariableReference\"))) {\n          value = SLinkOperations.getTarget(SNodeOperations.cast(value, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L, \"jetbrains.mps.baseLanguage.structure.VariableReference\")), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L, 0xf8cc6bf960L, \"variableDeclaration\"));\n        }\n        if (NullableState.canBeNull(result.get(instruction).get(value))) {\n          return MultiTuple.<String,SNode>from(\"This expression might evaluate to null but is assigned to a variable that is annotated with @NotNull\", (SNode) write.getValue());\n        }\n      }\n    }\n    return null;\n\n  }","commit_id":"e6541c1b7576a160c656ab187901a9695ff9f47d","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static boolean eq_cmc61d_a0c0e0a0c0a0h(Object a, Object b) {\n    return (a != null ? a.equals(b) : a == b);\n  }","id":1940,"modified_method":"private static boolean eq_cmc61d_a0c0e0a0c0a0e(Object a, Object b) {\n    return (a != null ? a.equals(b) : a == b);\n  }","commit_id":"e6541c1b7576a160c656ab187901a9695ff9f47d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Tuples._3<Boolean, String, SNode> isAlwaysTrueOrFalse(Instruction instruction, SNode parent, SNode source, NullableState state) {\n    if (instruction instanceof ReadInstruction && (SNodeOperations.isInstanceOf(parent, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b210L, \"jetbrains.mps.baseLanguage.structure.EqualsExpression\")) || SNodeOperations.isInstanceOf(parent, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf9e20e303fL, \"jetbrains.mps.baseLanguage.structure.NotEqualsExpression\")))) {\n      boolean inCondition = false;\n      boolean equals = SNodeOperations.isInstanceOf(parent, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b210L, \"jetbrains.mps.baseLanguage.structure.EqualsExpression\"));\n      boolean isNull = NullableState.NULL.equals(state);\n      boolean isNotNull = NullableState.NOTNULL.equals(state);\n      if (ListSequence.fromList(SNodeOperations.getNodeDescendants(SNodeOperations.getParent(source), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940cd6167L, \"jetbrains.mps.baseLanguage.structure.NullLiteral\"), false, new SAbstractConcept[]{})).isNotEmpty()) {\n        if (SNodeOperations.getNodeAncestor(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, \"jetbrains.mps.baseLanguage.structure.IfStatement\"), false, false) != null && ListSequence.fromList(SNodeOperations.getNodeAncestors(source, null, false)).contains(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, \"jetbrains.mps.baseLanguage.structure.IfStatement\"), false, false), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, 0xf8cc56b218L, \"condition\")))) {\n          inCondition = true;\n        }\n        if (SNodeOperations.getNodeAncestor(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfaa4bf0f2fL, \"jetbrains.mps.baseLanguage.structure.WhileStatement\"), false, false) != null && ListSequence.fromList(SNodeOperations.getNodeAncestors(source, null, false)).contains(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfaa4bf0f2fL, \"jetbrains.mps.baseLanguage.structure.WhileStatement\"), false, false), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfaa4bf0f2fL, 0xfaa4bf0f30L, \"condition\")))) {\n          inCondition = true;\n        }\n        if (inCondition) {\n          if (equals && isNotNull || !(equals) && isNull) {\n            return MultiTuple.<Boolean,String,SNode>from(true, \"This condition is always false\", parent);\n          }\n          if (equals && isNull || !(equals) && isNotNull) {\n            return MultiTuple.<Boolean,String,SNode>from(true, \"This condition is always true\", parent);\n\n          }\n        }\n      }\n    }\n    return MultiTuple.<Boolean,String,SNode>from(false, ((String) null), ((SNode) null));\n  }","id":1941,"modified_method":"public static Tuples._2<String, SNode> isAlwaysTrueOrFalse(Instruction instruction, SNode parent, SNode source, NullableState state) {\n    if (instruction instanceof ReadInstruction && (SNodeOperations.isInstanceOf(parent, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b210L, \"jetbrains.mps.baseLanguage.structure.EqualsExpression\")) || SNodeOperations.isInstanceOf(parent, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf9e20e303fL, \"jetbrains.mps.baseLanguage.structure.NotEqualsExpression\")))) {\n      boolean inCondition = false;\n      boolean equals = SNodeOperations.isInstanceOf(parent, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b210L, \"jetbrains.mps.baseLanguage.structure.EqualsExpression\"));\n      boolean isNull = NullableState.NULL.equals(state);\n      boolean isNotNull = NullableState.NOTNULL.equals(state);\n      if (ListSequence.fromList(SNodeOperations.getNodeDescendants(SNodeOperations.getParent(source), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940cd6167L, \"jetbrains.mps.baseLanguage.structure.NullLiteral\"), false, new SAbstractConcept[]{})).isNotEmpty()) {\n        if (SNodeOperations.getNodeAncestor(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, \"jetbrains.mps.baseLanguage.structure.IfStatement\"), false, false) != null && ListSequence.fromList(SNodeOperations.getNodeAncestors(source, null, false)).contains(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, \"jetbrains.mps.baseLanguage.structure.IfStatement\"), false, false), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, 0xf8cc56b218L, \"condition\")))) {\n          inCondition = true;\n        }\n        if (SNodeOperations.getNodeAncestor(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfaa4bf0f2fL, \"jetbrains.mps.baseLanguage.structure.WhileStatement\"), false, false) != null && ListSequence.fromList(SNodeOperations.getNodeAncestors(source, null, false)).contains(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfaa4bf0f2fL, \"jetbrains.mps.baseLanguage.structure.WhileStatement\"), false, false), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfaa4bf0f2fL, 0xfaa4bf0f30L, \"condition\")))) {\n          inCondition = true;\n        }\n        if (inCondition) {\n          if (equals && isNotNull || !(equals) && isNull) {\n            return MultiTuple.<String,SNode>from(\"This condition is always false\", parent);\n          }\n          if (equals && isNull || !(equals) && isNotNull) {\n            return MultiTuple.<String,SNode>from(\"This condition is always true\", parent);\n\n          }\n        }\n      }\n    }\n    return null;\n  }","commit_id":"e6541c1b7576a160c656ab187901a9695ff9f47d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode iMethodLike, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {\n    if (SNodeOperations.getModel(iMethodLike).getModule() instanceof TransientModelsModule) {\n      return;\n    }\n    // Find possible NPE \n    CustomAnalyzerRunner<Map<SNode, NullableState>> nullableRunner = new NullableAnalyzerRunner(iMethodLike);\n    AnalysisResult<Map<SNode, NullableState>> result = nullableRunner.analyze();\n    Program program = nullableRunner.getProgram();\n    if (DataFlowUtil.tooComplex(program)) {\n      return;\n    }\n    for (Instruction instruction : program.getInstructions()) {\n      SNode source = (SNode) instruction.getSource();\n      SNode variable = source;\n      if (SNodeOperations.isInstanceOf(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L, \"jetbrains.mps.baseLanguage.structure.VariableReference\"))) {\n        variable = SLinkOperations.getTarget(SNodeOperations.cast(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L, \"jetbrains.mps.baseLanguage.structure.VariableReference\")), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L, 0xf8cc6bf960L, \"variableDeclaration\"));\n      }\n      NullableState varState = result.get(instruction).get(variable);\n      SNode parent = SNodeOperations.getParent(source);\n\n      Tuples._3<Boolean, String, SNode> checkingResult;\n      boolean shouldWarn;\n      String warning;\n      SNode nodeToWarn;\n\n      checkingResult = NullableUtil.isNullableDotExpression(parent, source, varState);\n      shouldWarn = (boolean) checkingResult._0();\n      if (shouldWarn) {\n        warning = checkingResult._1();\n        nodeToWarn = checkingResult._2();\n        {\n          MessageTarget errorTarget = new NodeMessageTarget();\n          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportWarning(nodeToWarn, warning, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"3451033204592343684\", null, errorTarget);\n        }\n        continue;\n      }\n\n      checkingResult = NullableUtil.isNullableMethodCall(parent, source, varState);\n      shouldWarn = (boolean) checkingResult._0();\n      if (shouldWarn) {\n        warning = checkingResult._1();\n        nodeToWarn = checkingResult._2();\n        {\n          MessageTarget errorTarget = new NodeMessageTarget();\n          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportWarning(nodeToWarn, warning, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"741163781874494202\", null, errorTarget);\n        }\n      }\n\n      // Test equals and not equals is always true or false \n      checkingResult = NullableUtil.isAlwaysTrueOrFalse(instruction, parent, source, varState);\n      shouldWarn = (boolean) checkingResult._0();\n      if (shouldWarn) {\n        warning = checkingResult._1();\n        nodeToWarn = checkingResult._2();\n        {\n          MessageTarget errorTarget = new NodeMessageTarget();\n          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportWarning(nodeToWarn, warning, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"3906759656537165649\", null, errorTarget);\n        }\n      }\n\n\n      // Find Nullable assignements to NotNull variables \n      checkingResult = NullableUtil.checkNullableAssignment(instruction, result);\n      shouldWarn = (boolean) checkingResult._0();\n      if (shouldWarn) {\n        warning = checkingResult._1();\n        nodeToWarn = checkingResult._2();\n        {\n          MessageTarget errorTarget = new NodeMessageTarget();\n          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportWarning(nodeToWarn, warning, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"3906759656537238595\", null, errorTarget);\n        }\n      }\n\n    }\n    // Find Nullable returns of NotNull methods \n    if (SNodeOperations.isInstanceOf(iMethodLike, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, \"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration\"))) {\n      SNode method = SNodeOperations.cast(iMethodLike, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, \"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration\"));\n      if (ListSequence.fromList(SLinkOperations.getChildren(method, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"))).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return (SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, \"annotation\")) != null);\n        }\n      }).select(new ISelector<SNode, SNode>() {\n        public SNode select(SNode it) {\n          return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, \"annotation\"));\n        }\n      }).contains(SNodeOperations.getNode(\"3f233e7f-b8a6-46d2-a57f-795d56775243/f:java_stub#3f233e7f-b8a6-46d2-a57f-795d56775243#org.jetbrains.annotations(Annotations/org.jetbrains.annotations@java_stub)\", \"~NotNull\"))) {\n        for (SNode returnStatement : RulesFunctions_BaseLanguage.collectReturnStatements(SLinkOperations.getTarget(method, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")))) {\n          RulesFunctions_BaseLanguage.checkReturningExpression(typeCheckingContext, SLinkOperations.getTarget(returnStatement, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7feL, 0xf8cc6bf96cL, \"expression\")), returnStatement, program, result);\n        }\n        SNode last = BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), method, \"virtual_getLastStatement_1239354409446\", new Object[]{});\n        if (SNodeOperations.isInstanceOf(last, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, \"jetbrains.mps.baseLanguage.structure.ExpressionStatement\"))) {\n          RulesFunctions_BaseLanguage.checkReturningExpression(typeCheckingContext, SLinkOperations.getTarget(SNodeOperations.cast(last, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, \"jetbrains.mps.baseLanguage.structure.ExpressionStatement\")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, 0xf8cc56b214L, \"expression\")), last, program, result);\n        }\n      }\n    }\n  }","id":1942,"modified_method":"public void applyRule(final SNode iMethodLike, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {\n    if (SNodeOperations.getModel(iMethodLike).getModule() instanceof TransientModelsModule) {\n      return;\n    }\n    // Find possible NPE \n    CustomAnalyzerRunner<Map<SNode, NullableState>> nullableRunner = new NullableAnalyzerRunner(iMethodLike);\n    AnalysisResult<Map<SNode, NullableState>> result = nullableRunner.analyze();\n    Program program = nullableRunner.getProgram();\n    if (DataFlowUtil.tooComplex(program)) {\n      return;\n    }\n    for (Instruction instruction : program.getInstructions()) {\n      SNode source = (SNode) instruction.getSource();\n      SNode variable = source;\n      if (SNodeOperations.isInstanceOf(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L, \"jetbrains.mps.baseLanguage.structure.VariableReference\"))) {\n        variable = SLinkOperations.getTarget(SNodeOperations.cast(source, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L, \"jetbrains.mps.baseLanguage.structure.VariableReference\")), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L, 0xf8cc6bf960L, \"variableDeclaration\"));\n      }\n      NullableState varState = result.get(instruction).get(variable);\n      SNode parent = SNodeOperations.getParent(source);\n\n      Tuples._2<String, SNode> checkingResult;\n      String warning;\n      SNode nodeToWarn;\n\n      checkingResult = NullableUtil.isNullableDotExpression(parent, source, varState);\n      if (checkingResult != null) {\n        warning = checkingResult._0();\n        nodeToWarn = checkingResult._1();\n        {\n          MessageTarget errorTarget = new NodeMessageTarget();\n          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportWarning(nodeToWarn, warning, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"3451033204592343684\", null, errorTarget);\n        }\n      }\n\n      checkingResult = NullableUtil.isNullableMethodCall(parent, source, varState);\n      if (checkingResult != null) {\n        warning = checkingResult._0();\n        nodeToWarn = checkingResult._1();\n        {\n          MessageTarget errorTarget = new NodeMessageTarget();\n          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportWarning(nodeToWarn, warning, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"4235809288654203516\", null, errorTarget);\n        }\n        continue;\n      }\n\n      // Test equals and not equals is always true or false \n      checkingResult = NullableUtil.isAlwaysTrueOrFalse(instruction, parent, source, varState);\n      if (checkingResult != null) {\n        warning = checkingResult._0();\n        nodeToWarn = checkingResult._1();\n        {\n          MessageTarget errorTarget = new NodeMessageTarget();\n          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportWarning(nodeToWarn, warning, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"4235809288654205433\", null, errorTarget);\n        }\n        continue;\n      }\n\n\n      // Find Nullable assignements to NotNull variables \n      checkingResult = NullableUtil.checkNullableAssignment(instruction, result);\n      if (checkingResult != null) {\n        warning = checkingResult._0();\n        nodeToWarn = checkingResult._1();\n        {\n          MessageTarget errorTarget = new NodeMessageTarget();\n          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportWarning(nodeToWarn, warning, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"4235809288654207287\", null, errorTarget);\n        }\n        continue;\n      }\n\n    }\n    // Find Nullable returns of NotNull methods \n    if (SNodeOperations.isInstanceOf(iMethodLike, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, \"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration\"))) {\n      SNode method = SNodeOperations.cast(iMethodLike, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, \"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration\"));\n      if (ListSequence.fromList(SLinkOperations.getChildren(method, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"))).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return (SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, \"annotation\")) != null);\n        }\n      }).select(new ISelector<SNode, SNode>() {\n        public SNode select(SNode it) {\n          return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, \"annotation\"));\n        }\n      }).contains(SNodeOperations.getNode(\"3f233e7f-b8a6-46d2-a57f-795d56775243/f:java_stub#3f233e7f-b8a6-46d2-a57f-795d56775243#org.jetbrains.annotations(Annotations/org.jetbrains.annotations@java_stub)\", \"~NotNull\"))) {\n        for (SNode returnStatement : RulesFunctions_BaseLanguage.collectReturnStatements(SLinkOperations.getTarget(method, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")))) {\n          RulesFunctions_BaseLanguage.checkReturningExpression(typeCheckingContext, SLinkOperations.getTarget(returnStatement, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7feL, 0xf8cc6bf96cL, \"expression\")), returnStatement, program, result);\n        }\n        SNode last = BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), method, \"virtual_getLastStatement_1239354409446\", new Object[]{});\n        if (SNodeOperations.isInstanceOf(last, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, \"jetbrains.mps.baseLanguage.structure.ExpressionStatement\"))) {\n          RulesFunctions_BaseLanguage.checkReturningExpression(typeCheckingContext, SLinkOperations.getTarget(SNodeOperations.cast(last, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, \"jetbrains.mps.baseLanguage.structure.ExpressionStatement\")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, 0xf8cc56b214L, \"expression\")), last, program, result);\n        }\n      }\n    }\n  }","commit_id":"e6541c1b7576a160c656ab187901a9695ff9f47d","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void requireSequence (CharSequence seq, int start, int end) {\n\t\tif (vertexData.length == 1) {\n\t\t\t// don't scan sequence if we just have one page and markup is disabled\n\t\t\tint newGlyphCount = font.markupEnabled ? countGlyphs(seq, start, end) : end - start;\n\t\t\trequire(0, newGlyphCount);\n\t\t} else {\n\t\t\tfor (int i = 0, n = tmpGlyphCount.length; i < n; i++)\n\t\t\t\ttmpGlyphCount[i] = 0;\n\n\t\t\t// determine # of glyphs in each page\n\t\t\twhile (start < end) {\n\t\t\t\tchar ch = seq.charAt(start++);\n\t\t\t\tif (ch == '[' && font.markupEnabled) {\n\t\t\t\t\tif (!(start < end && seq.charAt(start) == '[')) { // non escaped '['\n\t\t\t\t\t\twhile (start < end && seq.charAt(start) != ']')\n\t\t\t\t\t\t\tstart++;\n\t\t\t\t\t\tstart++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstart++;\n\t\t\t\t}\n\t\t\t\tGlyph g = font.data.getGlyph(ch);\n\t\t\t\tif (g == null) continue;\n\t\t\t\ttmpGlyphCount[g.page]++;\n\t\t\t}\n\t\t\t// require that many for each page\n\t\t\tfor (int i = 0, n = tmpGlyphCount.length; i < n; i++)\n\t\t\t\trequire(i, tmpGlyphCount[i]);\n\t\t}\n\t}","id":1943,"modified_method":"private void requireSequence (CharSequence seq, int start, int end) {\n\t\tif (vertexData.length == 1) {\n\t\t\t// don't scan sequence if we just have one page and markup is disabled\n\t\t\tint newGlyphCount = countGlyphs(seq, start, end);\n\t\t\trequire(0, newGlyphCount);\n\t\t} else {\n\t\t\tfor (int i = 0, n = tmpGlyphCount.length; i < n; i++)\n\t\t\t\ttmpGlyphCount[i] = 0;\n\n\t\t\t// determine # of glyphs in each page\n\t\t\twhile (start < end) {\n\t\t\t\tchar ch = seq.charAt(start++);\n\t\t\t\tif (ch == '[' && font.markupEnabled) {\n\t\t\t\t\tif (!(start < end && seq.charAt(start) == '[')) { // non escaped '['\n\t\t\t\t\t\tint colorTagLen = markup.parseColorTag(seq, -1, start, end);\n\t\t\t\t\t\tif (colorTagLen >= 0) {\n\t\t\t\t\t\t\tstart += colorTagLen + 1;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tstart++;\n\t\t\t\t}\n\t\t\t\tGlyph g = font.data.getGlyph(ch);\n\t\t\t\tif (g == null) continue;\n\t\t\t\ttmpGlyphCount[g.page]++;\n\t\t\t}\n\t\t\t// require that many for each page\n\t\t\tfor (int i = 0, n = tmpGlyphCount.length; i < n; i++)\n\t\t\t\trequire(i, tmpGlyphCount[i]);\n\t\t}\n\t}","commit_id":"309724e5d0c304523375d5f823d36804eb5dc2c6","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** Counts the actual glyphs excluding characters used to markup the text. */\n\tprivate int countGlyphs (CharSequence seq, int start, int end) {\n\t\tint count = end - start;\n\t\twhile (start < end) {\n\t\t\tchar ch = seq.charAt(start++);\n\t\t\tif (ch == '[') {\n\t\t\t\tcount--;\n\t\t\t\tif (!(start < end && seq.charAt(start) == '[')) { // non escaped '['\n\t\t\t\t\twhile (start < end && seq.charAt(start) != ']') {\n\t\t\t\t\t\tstart++;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t\tcount--;\n\t\t\t\t}\n\t\t\t\tstart++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}","id":1944,"modified_method":"/** Counts the actual glyphs excluding characters used to markup the text. */\n\tprivate int countGlyphs (CharSequence seq, int start, int end) {\n\t\tint count = end - start;\n\t\tif (font.markupEnabled) {\n\t\t\twhile (start < end) {\n\t\t\t\tchar ch = seq.charAt(start++);\n\t\t\t\tif (ch == '[') {\n\t\t\t\t\tif (start < end && seq.charAt(start) == '[') { // escaped '['\n\t\t\t\t\t\tstart++;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t} else { // non escaped '['\n\t\t\t\t\t\tint colorTagLen = markup.parseColorTag(seq, -1, start, end);\n\t\t\t\t\t\tif (colorTagLen >= 0) {\n\t\t\t\t\t\t\tstart += colorTagLen + 1;\n\t\t\t\t\t\t\tcount -= colorTagLen + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}","commit_id":"309724e5d0c304523375d5f823d36804eb5dc2c6","url":"https://github.com/libgdx/libgdx"},{"original_method":"private float addToCache (CharSequence str, float x, float y, int start, int end) {\n\t\tfloat startX = x;\n\t\tBitmapFont font = this.font;\n\t\tGlyph lastGlyph = null;\n\t\tBitmapFontData data = font.data;\n\t\ttextChanged = start < end;\n\t\tif (data.scaleX == 1 && data.scaleY == 1) {\n\t\t\twhile (start < end) {\n\t\t\t\tchar ch = str.charAt(start++);\n\t\t\t\tif (ch == '[' && font.markupEnabled) {\n\t\t\t\t\tif (!(start < end && str.charAt(start) == '[')) { // non escaped '['\n\t\t\t\t\t\tstart += TextMarkup.parseColorTag(markup, str, charsCount, start, end) + 1;\n\t\t\t\t\t\tcolor = markup.getLastColor().toFloatBits();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstart++;\n\t\t\t\t}\n\t\t\t\tlastGlyph = data.getGlyph(ch);\n\t\t\t\tif (lastGlyph != null) {\n\t\t\t\t\taddGlyph(lastGlyph, x + lastGlyph.xoffset, y + lastGlyph.yoffset, lastGlyph.width, lastGlyph.height);\n\t\t\t\t\tx += lastGlyph.xadvance;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (start < end) {\n\t\t\t\tchar ch = str.charAt(start++);\n\t\t\t\tif (ch == '[' && font.markupEnabled) {\n\t\t\t\t\tif (!(start < end && str.charAt(start) == '[')) { // non escaped '['\n\t\t\t\t\t\tstart += TextMarkup.parseColorTag(markup, str, charsCount, start, end) + 1;\n\t\t\t\t\t\tcolor = markup.getLastColor().toFloatBits();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstart++;\n\t\t\t\t}\n\t\t\t\tGlyph g = data.getGlyph(ch);\n\t\t\t\tif (g != null) {\n\t\t\t\t\tx += lastGlyph.getKerning(ch);\n\t\t\t\t\tlastGlyph = g;\n\t\t\t\t\taddGlyph(lastGlyph, x + g.xoffset, y + g.yoffset, g.width, g.height);\n\t\t\t\t\tx += g.xadvance;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfloat scaleX = data.scaleX, scaleY = data.scaleY;\n\t\t\twhile (start < end) {\n\t\t\t\tchar ch = str.charAt(start++);\n\t\t\t\tif (ch == '[' && font.markupEnabled) {\n\t\t\t\t\tif (!(start < end && str.charAt(start) == '[')) { // non escaped '['\n\t\t\t\t\t\tstart += TextMarkup.parseColorTag(markup, str, charsCount, start, end) + 1;\n\t\t\t\t\t\tcolor = markup.getLastColor().toFloatBits();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstart++;\n\t\t\t\t}\n\t\t\t\tlastGlyph = data.getGlyph(ch);\n\t\t\t\tif (lastGlyph != null) {\n\t\t\t\t\taddGlyph(lastGlyph, //\n\t\t\t\t\t\tx + lastGlyph.xoffset * scaleX, //\n\t\t\t\t\t\ty + lastGlyph.yoffset * scaleY, //\n\t\t\t\t\t\tlastGlyph.width * scaleX, //\n\t\t\t\t\t\tlastGlyph.height * scaleY);\n\t\t\t\t\tx += lastGlyph.xadvance * scaleX;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (start < end) {\n\t\t\t\tchar ch = str.charAt(start++);\n\t\t\t\tif (ch == '[' && font.markupEnabled) {\n\t\t\t\t\tif (!(start < end && str.charAt(start) == '[')) { // non escaped '['\n\t\t\t\t\t\tstart += TextMarkup.parseColorTag(markup, str, charsCount, start, end) + 1;\n\t\t\t\t\t\tcolor = markup.getLastColor().toFloatBits();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstart++;\n\t\t\t\t}\n\t\t\t\tGlyph g = data.getGlyph(ch);\n\t\t\t\tif (g != null) {\n\t\t\t\t\tx += lastGlyph.getKerning(ch) * scaleX;\n\t\t\t\t\tlastGlyph = g;\n\t\t\t\t\taddGlyph(lastGlyph, //\n\t\t\t\t\t\tx + g.xoffset * scaleX, //\n\t\t\t\t\t\ty + g.yoffset * scaleY, //\n\t\t\t\t\t\tg.width * scaleX, //\n\t\t\t\t\t\tg.height * scaleY);\n\t\t\t\t\tx += g.xadvance * scaleX;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn x - startX;\n\t}","id":1945,"modified_method":"private float addToCache (CharSequence str, float x, float y, int start, int end) {\n\t\tfloat startX = x;\n\t\tBitmapFont font = this.font;\n\t\tGlyph lastGlyph = null;\n\t\tBitmapFontData data = font.data;\n\t\ttextChanged = start < end;\n\t\tif (data.scaleX == 1 && data.scaleY == 1) {\n\t\t\twhile (start < end) {\n\t\t\t\tchar ch = str.charAt(start++);\n\t\t\t\tif (ch == '[' && font.markupEnabled) {\n\t\t\t\t\tif (start < end && str.charAt(start) == '[') // escaped '['\n\t\t\t\t\t\tstart++;\n\t\t\t\t\telse { // non escaped '['\n\t\t\t\t\t\tint colorTagLen = markup.parseColorTag(str, charsCount, start, end);\n\t\t\t\t\t\tif (colorTagLen >= 0) {\n\t\t\t\t\t\t\tcolor = markup.getLastColor().toFloatBits();\n\t\t\t\t\t\t\tstart += colorTagLen + 1;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastGlyph = data.getGlyph(ch);\n\t\t\t\tif (lastGlyph != null) {\n\t\t\t\t\taddGlyph(lastGlyph, x + lastGlyph.xoffset, y + lastGlyph.yoffset, lastGlyph.width, lastGlyph.height);\n\t\t\t\t\tx += lastGlyph.xadvance;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (start < end) {\n\t\t\t\tchar ch = str.charAt(start++);\n\t\t\t\tif (ch == '[' && font.markupEnabled) {\n\t\t\t\t\tif (start < end && str.charAt(start) == '[') // escaped '['\n\t\t\t\t\t\tstart++;\n\t\t\t\t\telse { // non escaped '['\n\t\t\t\t\t\tint colorTagLen = markup.parseColorTag(str, charsCount, start, end);\n\t\t\t\t\t\tif (colorTagLen >= 0) {\n\t\t\t\t\t\t\tcolor = markup.getLastColor().toFloatBits();\n\t\t\t\t\t\t\tstart += colorTagLen + 1;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tGlyph g = data.getGlyph(ch);\n\t\t\t\tif (g != null) {\n\t\t\t\t\tx += lastGlyph.getKerning(ch);\n\t\t\t\t\tlastGlyph = g;\n\t\t\t\t\taddGlyph(lastGlyph, x + g.xoffset, y + g.yoffset, g.width, g.height);\n\t\t\t\t\tx += g.xadvance;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfloat scaleX = data.scaleX, scaleY = data.scaleY;\n\t\t\twhile (start < end) {\n\t\t\t\tchar ch = str.charAt(start++);\n\t\t\t\tif (ch == '[' && font.markupEnabled) {\n\t\t\t\t\tif (start < end && str.charAt(start) == '[') // escaped '['\n\t\t\t\t\t\tstart++;\n\t\t\t\t\telse { // non escaped '['\n\t\t\t\t\t\tint colorTagLen = markup.parseColorTag(str, charsCount, start, end);\n\t\t\t\t\t\tif (colorTagLen >= 0) {\n\t\t\t\t\t\t\tcolor = markup.getLastColor().toFloatBits();\n\t\t\t\t\t\t\tstart += colorTagLen + 1;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastGlyph = data.getGlyph(ch);\n\t\t\t\tif (lastGlyph != null) {\n\t\t\t\t\taddGlyph(lastGlyph, //\n\t\t\t\t\t\tx + lastGlyph.xoffset * scaleX, //\n\t\t\t\t\t\ty + lastGlyph.yoffset * scaleY, //\n\t\t\t\t\t\tlastGlyph.width * scaleX, //\n\t\t\t\t\t\tlastGlyph.height * scaleY);\n\t\t\t\t\tx += lastGlyph.xadvance * scaleX;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (start < end) {\n\t\t\t\tchar ch = str.charAt(start++);\n\t\t\t\tif (ch == '[' && font.markupEnabled) {\n\t\t\t\t\tif (start < end && str.charAt(start) == '[') // escaped '['\n\t\t\t\t\t\tstart++;\n\t\t\t\t\telse { // non escaped '['\n\t\t\t\t\t\tint colorTagLen = markup.parseColorTag(str, charsCount, start, end);\n\t\t\t\t\t\tif (colorTagLen >= 0) {\n\t\t\t\t\t\t\tcolor = markup.getLastColor().toFloatBits();\n\t\t\t\t\t\t\tstart += colorTagLen + 1;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tGlyph g = data.getGlyph(ch);\n\t\t\t\tif (g != null) {\n\t\t\t\t\tx += lastGlyph.getKerning(ch) * scaleX;\n\t\t\t\t\tlastGlyph = g;\n\t\t\t\t\taddGlyph(lastGlyph, //\n\t\t\t\t\t\tx + g.xoffset * scaleX, //\n\t\t\t\t\t\ty + g.yoffset * scaleY, //\n\t\t\t\t\t\tg.width * scaleX, //\n\t\t\t\t\t\tg.height * scaleY);\n\t\t\t\t\tx += g.xadvance * scaleX;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn x - startX;\n\t}","commit_id":"309724e5d0c304523375d5f823d36804eb5dc2c6","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\n\tpublic void create () {\n\t\tspriteBatch = new SpriteBatch();\n\t\tfont = new BitmapFont(Gdx.files.internal(\"data/verdana39.fnt\"), false);\n\n\t\tmultiPageFont = new BitmapFont(Gdx.files.internal(\"data/multipagefont.fnt\"));\n\n\t\t// Add user defined color\n\t\tColors.put(\"PERU\", Color.valueOf(\"CD853F\"));\n\n\t\trenderer = new ShapeRenderer();\n\t\trenderer.setProjectionMatrix(spriteBatch.getProjectionMatrix());\n\n\t\tstage = new Stage();\n\n\t\tSkin skin = new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n\n\t\tBitmapFont labelFont = skin.get(\"default-font\", BitmapFont.class);\n\t\tlabelFont.setMarkupEnabled(true);\n\n\t\t// Notice that the last [] has been deliberately added to test the effect of excessive pop operations.\n\t\t// They are silently ignored, as expected.\n\t\tLabel label = new Label(\"<<[BLUE]M[RED]u[YELLOW]l[GREEN]t[OLIVE]ic[]o[]l[]o[]r[]*[MAROON]Label[][]>>\", skin);\n\n\t\tlabel.setPosition(200, 200);\n\t\tstage.addActor(label);\n\n\t\tWindow window = new Window(\"[RED]Multicolor[GREEN] Title\", skin);\n\t\twindow.setPosition(400, 200);\n\t\twindow.pack();\n\t\tstage.addActor(window);\n\t}","id":1946,"modified_method":"@Override\n\tpublic void create () {\n\t\tspriteBatch = new SpriteBatch();\n\t\tfont = new BitmapFont(Gdx.files.internal(\"data/verdana39.fnt\"), false);\n\n\t\tmultiPageFont = new BitmapFont(Gdx.files.internal(\"data/multipagefont.fnt\"));\n\n\t\t// Add user defined color\n\t\tColors.put(\"PERU\", Color.valueOf(\"CD853F\"));\n\n\t\trenderer = new ShapeRenderer();\n\t\trenderer.setProjectionMatrix(spriteBatch.getProjectionMatrix());\n\n\t\tstage = new Stage();\n\n\t\tSkin skin = new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n\n\t\tBitmapFont labelFont = skin.get(\"default-font\", BitmapFont.class);\n\t\tlabelFont.setMarkupEnabled(true);\n\n\t\t// Notice that the last [] has been deliberately added to test the effect of excessive pop operations.\n\t\t// They are silently ignored, as expected.\n\t\tLabel label = new Label(\"<<[BLUE]M[RED]u[YELLOW]l[GREEN]t[OLIVE]ic[]o[]l[]o[]r[]*[MAROON]Label[][] [Unknown Color]>>\", skin);\n\n\t\tlabel.setPosition(100, 200);\n\t\tstage.addActor(label);\n\n\t\tWindow window = new Window(\"[RED]Multicolor[GREEN] Title\", skin);\n\t\twindow.setPosition(400, 200);\n\t\twindow.pack();\n\t\tstage.addActor(window);\n\t}","commit_id":"309724e5d0c304523375d5f823d36804eb5dc2c6","url":"https://github.com/libgdx/libgdx"},{"original_method":"public static int parseColorTag (TextMarkup markup, CharSequence str, int nomarkupStart, int start, int end) {\n\t\tif (start < end) {\n\t\t\tfinal Color hexColor = tempColor;\n\t\t\tif (str.charAt(start) == '#') {\n\t\t\t\t// Parse hex color RRGGBBAA where AA is optional and defaults to 0xFF if less than 6 chars are used\n\t\t\t\tint colorInt = 0;\n\t\t\t\tfor (int i = start + 1; i < end; i++) {\n\t\t\t\t\tchar ch = str.charAt(i);\n\t\t\t\t\tif (ch == ']') {\n\t\t\t\t\t\tif (i < start + 2 || i > start + 9)\n\t\t\t\t\t\t\tthrow new GdxRuntimeException(\"Hex color cannot have \" + (i - start - 1) + \" digits.\");\n\t\t\t\t\t\tif (i <= start + 7) { // RRGGBB\n\t\t\t\t\t\t\tColor.rgb888ToColor(hexColor, colorInt);\n\t\t\t\t\t\t\thexColor.a = 1f;\n\t\t\t\t\t\t} else { // RRGGBBAA\n\t\t\t\t\t\t\tColor.rgba8888ToColor(hexColor, colorInt);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkup.beginChunk(hexColor, nomarkupStart);\n\t\t\t\t\t\treturn i - start;\n\t\t\t\t\t}\n\t\t\t\t\tif (ch >= '0' && ch <= '9')\n\t\t\t\t\t\tcolorInt = colorInt * 16 + (ch - '0');\n\t\t\t\t\telse if (ch >= 'a' && ch <= 'f')\n\t\t\t\t\t\tcolorInt = colorInt * 16 + (ch - ('a' - 10));\n\t\t\t\t\telse if (ch >= 'A' && ch <= 'F')\n\t\t\t\t\t\tcolorInt = colorInt * 16 + (ch - ('A' - 10));\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow new GdxRuntimeException(\"Unexpected character in hex color: \" + ch);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Parse named color\n\t\t\t\ttempColorBuffer.setLength(0);\n\t\t\t\tfor (int i = start; i < end; i++) {\n\t\t\t\t\tchar ch = str.charAt(i);\n\t\t\t\t\tif (ch == ']') {\n\t\t\t\t\t\tif (tempColorBuffer.length() == 0) { // end tag []\n\t\t\t\t\t\t\tmarkup.endChunk(nomarkupStart);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tString colorString = tempColorBuffer.toString();\n\t\t\t\t\t\t\tColor newColor = Colors.get(colorString);\n\t\t\t\t\t\t\tif (newColor == null) throw new GdxRuntimeException(\"Unknown color: \" + colorString);\n\t\t\t\t\t\t\tmarkup.beginChunk(newColor, nomarkupStart);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn i - start;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttempColorBuffer.append(ch);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthrow new GdxRuntimeException(\"Unclosed color tag.\");\n\t}","id":1947,"modified_method":"/** Parses a color tag.\n\t * @param str the input string\n\t * @param nomarkupStart the index of the string, excluding characters used to markup the text, where color info will be added.\n\t *           if it's negative color info is not set.\n\t * @param start the begin index\n\t * @param end the end index\n\t * @return the number of characters in the tag; {@code -1} in case of unknown color. */\n\tpublic int parseColorTag (CharSequence str, int nomarkupStart, int start, int end) {\n\t\tif (start < end) {\n\t\t\tfinal Color hexColor = tempColor;\n\t\t\tif (str.charAt(start) == '#') {\n\t\t\t\t// Parse hex color RRGGBBAA where AA is optional and defaults to 0xFF if less than 6 chars are used\n\t\t\t\tint colorInt = 0;\n\t\t\t\tfor (int i = start + 1; i < end; i++) {\n\t\t\t\t\tchar ch = str.charAt(i);\n\t\t\t\t\tif (ch == ']') {\n\t\t\t\t\t\tif (i < start + 2 || i > start + 9) return -1; // Illegal number of hex digits\n\t\t\t\t\t\tif (i <= start + 7) { // RRGGBB\n\t\t\t\t\t\t\tColor.rgb888ToColor(hexColor, colorInt);\n\t\t\t\t\t\t\thexColor.a = 1f;\n\t\t\t\t\t\t} else { // RRGGBBAA\n\t\t\t\t\t\t\tColor.rgba8888ToColor(hexColor, colorInt);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (nomarkupStart >= 0) beginChunk(hexColor, nomarkupStart);\n\t\t\t\t\t\treturn i - start;\n\t\t\t\t\t}\n\t\t\t\t\tif (ch >= '0' && ch <= '9')\n\t\t\t\t\t\tcolorInt = colorInt * 16 + (ch - '0');\n\t\t\t\t\telse if (ch >= 'a' && ch <= 'f')\n\t\t\t\t\t\tcolorInt = colorInt * 16 + (ch - ('a' - 10));\n\t\t\t\t\telse if (ch >= 'A' && ch <= 'F')\n\t\t\t\t\t\tcolorInt = colorInt * 16 + (ch - ('A' - 10));\n\t\t\t\t\telse\n\t\t\t\t\t\treturn -1; // Unexpected character in hex color\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Parse named color\n\t\t\t\ttempColorBuffer.setLength(0);\n\t\t\t\tfor (int i = start; i < end; i++) {\n\t\t\t\t\tchar ch = str.charAt(i);\n\t\t\t\t\tif (ch == ']') {\n\t\t\t\t\t\tif (i == start) { // end tag []\n\t\t\t\t\t\t\tif (nomarkupStart >= 0) endChunk(nomarkupStart);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tString colorString = tempColorBuffer.toString();\n\t\t\t\t\t\t\tColor newColor = Colors.get(colorString);\n\t\t\t\t\t\t\tif (newColor == null) return -1; // Unknown color\n\t\t\t\t\t\t\tif (nomarkupStart >= 0) beginChunk(newColor, nomarkupStart);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn i - start;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttempColorBuffer.append(ch);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -1; // Unclosed color tag\n\t}","commit_id":"309724e5d0c304523375d5f823d36804eb5dc2c6","url":"https://github.com/libgdx/libgdx"},{"original_method":"/**\n     * Run one phase of the benchmark\n     * @param matView Materialized view benchmark name.\n     *        fw      File writer object to write stats to.\n     * @throws Exception if anything unexpected happens.\n     */\n    public void runPhase(String matView, FileWriter fw) throws Exception {\n        String systemStr = \"\", csvStr = \"\", procStr = \"\";\n\n        switch (matView) {\n            case \"matView\":\n                systemStr = \"w/\";\n                csvStr = \"w\";\n                procStr = \"idsWithMatView\";\n                break;\n            case \"noMatView\":\n                systemStr = \"w/o\";\n                csvStr = \"wo\";\n                procStr = \"ids\";\n                break;\n            case \"minMatView\":\n                systemStr = \"w/ min\";\n                csvStr = \"w min\";\n                procStr = \"idsWithMinMatView\";\n                break;\n            case \"minMatViewOpt\":\n                systemStr = \"w/ min opt\";\n                csvStr = \"w min opt\";\n                procStr = \"idsWithMinMatViewOpt\";\n                break;\n            case \"4MinMatView\":\n                systemStr = \"4mins\";\n                csvStr = \"4mins\";\n                procStr = \"idsWith4MinMatView\";\n                break;\n            case \"4MinMatViewOpt\":\n                systemStr = \"4mins opt\";\n                csvStr = \"4mins opt\";\n                procStr = \"idsWith4MinMatViewOpt\";\n                break;\n            case \"MultiGroupsMinMatView\":\n                systemStr = \"multi groups min\";\n                csvStr = \"2g\";\n                procStr = \"idsWithMultiGroupsMinMatView\";\n                break;\n            case \"MultiGroupsMinMatViewOpt\":\n                systemStr = \"multi groups min opt\";\n                csvStr = \"2g opt\";\n                procStr = \"idsWithMultiGroupsMinMatViewOpt\";\n                break;\n            case \"MultiGroupsMinMatViewBestOpt\":\n                systemStr = \"multi groups min best opt\";\n                csvStr = \"2g b opt\";\n                procStr = \"idsWithMultiGroupsMinMatViewBestOpt\";\n                break;\n            default:\n                throw new RuntimeException(\"Benchmark \" + matView + \" not found!\");\n        }\n\n        // apprunner has a file name length limit\n        assert(csvStr.length() <= 9);\n\n        int grp = 1;\n\n        fullStatsContext.fetchAndResetBaseline();\n        periodicStatsContext.fetchAndResetBaseline();\n\n        benchmarkStartTS = System.currentTimeMillis();\n        schedulePeriodicStats();\n\n        // Run the benchmark for the requested duration.\n        System.out.println(\"\\n\\nInserting into table \" + systemStr + \" materialized view...\\n\");\n\n        if (config.group > 0) {\n            for (int i=0; i<config.txn; i++){\n                if (systemStr.startsWith(\"4\")) {\n                    client.callProcedure(new NullCallback(),\n                            procStr + \"_insert\",\n                            i,\n                            grp,\n                            i, -i, i, -i);\n                } else if (systemStr.startsWith(\"multi\")) {\n                    client.callProcedure(new NullCallback(),\n                            procStr + \"_insert\",\n                            i,\n                            grp, grp,\n                            i);\n                } else {\n                    client.callProcedure(new NullCallback(),\n                            procStr + \"_insert\",\n                            i,\n                            grp,\n                            i);\n                }\n                if (grp == config.group) {\n                    grp = 1;\n                } else {\n                    grp++;\n                }\n            }\n        } else {\n            for (int i=0; i<config.txn; i++){\n                if (systemStr.startsWith(\"4\")) {\n                    client.callProcedure(new NullCallback(),\n                            procStr + \"_insert\",\n                            i,\n                            i,\n                            i, -i, i, -i);\n                } else if (systemStr.startsWith(\"multi\")) {\n                    client.callProcedure(new NullCallback(),\n                            procStr + \"_insert\",\n                            i,\n                            grp, grp,\n                            i);\n                } else {\n                    client.callProcedure(new NullCallback(),\n                            procStr + \"_insert\",\n                            i,\n                            i,\n                            i);\n                }\n            }\n        }\n        timer.cancel();\n        client.drain();\n\n        if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n            printResults(procStr + \"_insert\");\n        } else {\n            printResults(procStr + \"_insert\", fw, \"Insert \" + csvStr + \" MV\");\n        }\n        System.out.print(HORIZONTAL_RULE);\n\n        if ( ! isMinMatViewCase(matView) ) {\n            // grp is initialized to 2 for updating the grouping column to (grouping column = grouping column + 1)\n            grp = 2;\n\n            fullStatsContext.fetchAndResetBaseline();\n            periodicStatsContext.fetchAndResetBaseline();\n\n            benchmarkStartTS = System.currentTimeMillis();\n            schedulePeriodicStats();\n\n            System.out.println(\"\\n\\nUpdating grouping column in table \" + systemStr + \" materialized view...\\n\");\n\n            if (config.group > 0) {\n                for (int i=0; i<config.txn; i++){\n                    client.callProcedure(new NullCallback(),\n                                         procStr + \"_group_id_update\",\n                                         grp,\n                                         i);\n                    if (grp == (config.group + 1)) {\n                        grp = 2;\n                    } else {\n                        grp++;\n                    }\n                }\n            } else {\n                for (int i=0; i<config.txn; i++){\n                    client.callProcedure(new NullCallback(),\n                                         procStr + \"_group_id_update\",\n                                         (i + 1),\n                                         i);\n                }\n            }\n            timer.cancel();\n            client.drain();\n\n            if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n                printResults(procStr + \"_group_id_update\");\n            } else {\n                printResults(procStr + \"_group_id_update\", fw, \"Update Grp \" + csvStr + \" MV\");\n            }\n            System.out.print(HORIZONTAL_RULE);\n\n            fullStatsContext.fetchAndResetBaseline();\n            periodicStatsContext.fetchAndResetBaseline();\n\n            benchmarkStartTS = System.currentTimeMillis();\n            schedulePeriodicStats();\n\n            System.out.println(\"\\n\\nUpdating aggregated column in table \" + systemStr + \" materialized view...\\n\");\n\n            for (int i=0; i<config.txn; i++){\n                client.callProcedure(new NullCallback(),\n                                     procStr + \"_value_update\",\n                                     (i + 1),\n                                     i);\n            }\n            timer.cancel();\n            client.drain();\n\n            if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n                printResults(procStr + \"_value_update\");\n            } else {\n                printResults(procStr + \"_value_update\", fw, \"Update Sum \" + csvStr + \" MV\");\n            }\n            System.out.print(HORIZONTAL_RULE);\n        }\n\n        fullStatsContext.fetchAndResetBaseline();\n        periodicStatsContext.fetchAndResetBaseline();\n\n        benchmarkStartTS = System.currentTimeMillis();\n        schedulePeriodicStats();\n\n        int numDeletes = config.txn;\n        if (systemStr.startsWith(\"multi\")) {\n            // when the deletion with multi groups benchmarks are running fast, we can get rid of this limit\n            numDeletes = 10000;\n        }\n        System.out.println(\"\\n\\nDeleting \" + numDeletes + \" rows from table \" + systemStr + \" materialized view...\\n\");\n\n        for (int i=0; i<numDeletes; i++){\n            client.callProcedure(new NullCallback(),\n                                 procStr + \"_delete\",\n                                 i);\n        }\n        timer.cancel();\n        client.drain();\n\n        if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n            printResults(procStr + \"_delete\");\n        } else {\n            printResults(procStr + \"_delete\", fw, \"Delete \" + csvStr + \" MV\");\n        }\n    }","id":1948,"modified_method":"/**\n     * Run one phase of the benchmark\n     * @param matView Materialized view benchmark name.\n     *        fw      File writer object to write stats to.\n     * @throws Exception if anything unexpected happens.\n     */\n    public void runPhase(String matView, FileWriter fw) throws Exception {\n        String systemStr = \"\", csvStr = \"\", procStr = \"\";\n\n        switch (matView) {\n            case \"matView\":\n                systemStr = \"w/\";\n                csvStr = \"w\";\n                procStr = \"idsWithMatView\";\n                break;\n            case \"noMatView\":\n                systemStr = \"w/o\";\n                csvStr = \"wo\";\n                procStr = \"ids\";\n                break;\n            case \"minMatView\":\n                systemStr = \"w/ min\";\n                csvStr = \"w min\";\n                procStr = \"idsWithMinMatView\";\n                break;\n            case \"minMatViewOpt\":\n                systemStr = \"w/ min opt\";\n                csvStr = \"w min opt\";\n                procStr = \"idsWithMinMatViewOpt\";\n                break;\n            case \"4MinMatView\":\n                systemStr = \"4mins\";\n                csvStr = \"4mins\";\n                procStr = \"idsWith4MinMatView\";\n                break;\n            case \"4MinMatViewOpt\":\n                systemStr = \"4mins opt\";\n                csvStr = \"4mins opt\";\n                procStr = \"idsWith4MinMatViewOpt\";\n                break;\n            case \"MultiGroupsMinMatView\":\n                systemStr = \"multi groups min\";\n                csvStr = \"2g\";\n                procStr = \"idsWithMultiGroupsMinMatView\";\n                break;\n            case \"MultiGroupsMinMatViewOpt\":\n                systemStr = \"multi groups min opt\";\n                csvStr = \"2g opt\";\n                procStr = \"idsWithMultiGroupsMinMatViewOpt\";\n                break;\n            case \"MultiGroupsMinMatViewBestOpt\":\n                systemStr = \"multi groups min best opt\";\n                csvStr = \"2g b opt\";\n                procStr = \"idsWithMultiGroupsMinMatViewBestOpt\";\n                break;\n            default:\n                throw new RuntimeException(\"Benchmark \" + matView + \" not found!\");\n        }\n\n        // apprunner has a file name length limit\n        assert(csvStr.length() <= 9);\n\n        int grp = 1;\n\n        fullStatsContext.fetchAndResetBaseline();\n        periodicStatsContext.fetchAndResetBaseline();\n\n        benchmarkStartTS = System.currentTimeMillis();\n        schedulePeriodicStats();\n\n        // Run the benchmark for the requested duration.\n        System.out.println(\"\\n\\nInserting into table \" + systemStr + \" materialized view...\\n\");\n\n        if (config.group > 0) {\n            for (int i=0; i<config.txn; i++){\n                if (systemStr.startsWith(\"4\")) {\n                    client.callProcedure(new NullCallback(),\n                            procStr + \"_insert\",\n                            i,\n                            grp,\n                            i, -i, i, -i);\n                } else if (systemStr.startsWith(\"multi\")) {\n                    client.callProcedure(new NullCallback(),\n                            procStr + \"_insert\",\n                            i,\n                            grp, grp,\n                            i);\n                } else {\n                    client.callProcedure(new NullCallback(),\n                            procStr + \"_insert\",\n                            i,\n                            grp,\n                            i);\n                }\n                if (grp == config.group) {\n                    grp = 1;\n                } else {\n                    grp++;\n                }\n            }\n        } else {\n            for (int i=0; i<config.txn; i++){\n                if (systemStr.startsWith(\"4\")) {\n                    client.callProcedure(new NullCallback(),\n                            procStr + \"_insert\",\n                            i,\n                            i,\n                            i, -i, i, -i);\n                } else if (systemStr.startsWith(\"multi\")) {\n                    client.callProcedure(new NullCallback(),\n                            procStr + \"_insert\",\n                            i,\n                            grp, grp,\n                            i);\n                } else {\n                    client.callProcedure(new NullCallback(),\n                            procStr + \"_insert\",\n                            i,\n                            i,\n                            i);\n                }\n            }\n        }\n        timer.cancel();\n        client.drain();\n\n        if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n            printResults(procStr + \"_insert\");\n        } else {\n        \tString suffix = config.streamview ? \" SV\" : \" MV\";\n            printResults(procStr + \"_insert\", fw, \"Insert \" + csvStr + suffix);\n        }\n        System.out.print(HORIZONTAL_RULE);\n\n        // Exclude updates and deletes on underlying tables, not possible for stream views\n        if (!config.streamview) {\n        \tif ( ! isMinMatViewCase(matView) ) {\n        \t\t// grp is initialized to 2 for updating the grouping column to (grouping column = grouping column + 1)\n        \t\tgrp = 2;\n\n        \t\tfullStatsContext.fetchAndResetBaseline();\n        \t\tperiodicStatsContext.fetchAndResetBaseline();\n\n        \t\tbenchmarkStartTS = System.currentTimeMillis();\n        \t\tschedulePeriodicStats();\n\n        \t\tSystem.out.println(\"\\n\\nUpdating grouping column in table \" + systemStr + \" materialized view...\\n\");\n\n        \t\tif (config.group > 0) {\n        \t\t\tfor (int i=0; i<config.txn; i++){\n        \t\t\t\tclient.callProcedure(new NullCallback(),\n        \t\t\t\t\t\tprocStr + \"_group_id_update\",\n        \t\t\t\t\t\tgrp,\n        \t\t\t\t\t\ti);\n        \t\t\t\tif (grp == (config.group + 1)) {\n        \t\t\t\t\tgrp = 2;\n        \t\t\t\t} else {\n        \t\t\t\t\tgrp++;\n        \t\t\t\t}\n        \t\t\t}\n        \t\t} else {\n        \t\t\tfor (int i=0; i<config.txn; i++){\n        \t\t\t\tclient.callProcedure(new NullCallback(),\n        \t\t\t\t\t\tprocStr + \"_group_id_update\",\n        \t\t\t\t\t\t(i + 1),\n        \t\t\t\t\t\ti);\n        \t\t\t}\n        \t\t}\n        \t\ttimer.cancel();\n        \t\tclient.drain();\n\n        \t\tif ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n        \t\t\tprintResults(procStr + \"_group_id_update\");\n        \t\t} else {\n        \t\t\tprintResults(procStr + \"_group_id_update\", fw, \"Update Grp \" + csvStr + \" MV\");\n        \t\t}\n        \t\tSystem.out.print(HORIZONTAL_RULE);\n\n        \t\tfullStatsContext.fetchAndResetBaseline();\n        \t\tperiodicStatsContext.fetchAndResetBaseline();\n\n        \t\tbenchmarkStartTS = System.currentTimeMillis();\n        \t\tschedulePeriodicStats();\n\n        \t\tSystem.out.println(\"\\n\\nUpdating aggregated column in table \" + systemStr + \" materialized view...\\n\");\n\n        \t\tfor (int i=0; i<config.txn; i++){\n        \t\t\tclient.callProcedure(new NullCallback(),\n        \t\t\t\t\tprocStr + \"_value_update\",\n        \t\t\t\t\t(i + 1),\n        \t\t\t\t\ti);\n        \t\t}\n        \t\ttimer.cancel();\n        \t\tclient.drain();\n\n        \t\tif ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n        \t\t\tprintResults(procStr + \"_value_update\");\n        \t\t} else {\n        \t\t\tprintResults(procStr + \"_value_update\", fw, \"Update Sum \" + csvStr + \" MV\");\n        \t\t}\n        \t\tSystem.out.print(HORIZONTAL_RULE);\n        \t}\n\n        \tfullStatsContext.fetchAndResetBaseline();\n        \tperiodicStatsContext.fetchAndResetBaseline();\n\n        \tbenchmarkStartTS = System.currentTimeMillis();\n        \tschedulePeriodicStats();\n\n        \tint numDeletes = config.txn;\n        \tif (systemStr.startsWith(\"multi\")) {\n        \t\t// when the deletion with multi groups benchmarks are running fast, we can get rid of this limit\n        \t\tnumDeletes = 10000;\n        \t}\n        \tSystem.out.println(\"\\n\\nDeleting \" + numDeletes + \" rows from table \" + systemStr + \" materialized view...\\n\");\n\n        \tfor (int i=0; i<numDeletes; i++){\n        \t\tclient.callProcedure(new NullCallback(),\n        \t\t\t\tprocStr + \"_delete\",\n        \t\t\t\ti);\n        \t}\n        \ttimer.cancel();\n        \tclient.drain();\n\n        \tif ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n        \t\tprintResults(procStr + \"_delete\");\n        \t} else {\n        \t\tprintResults(procStr + \"_delete\", fw, \"Delete \" + csvStr + \" MV\");\n        \t}\n        }\n    }","commit_id":"288b3f500cb0348cbba3b3b4d8bfe1d760060859","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Core benchmark code.\n     * Connect. Initialize. Run the loop. Cleanup. Print Results.\n     * @throws Exception\n     */\n    public void runBenchmark() throws Exception {\n        System.out.print(HORIZONTAL_RULE);\n        System.out.println(\" Setup & Initialization\");\n        System.out.println(HORIZONTAL_RULE);\n\n        // connect to one or more servers, loop until success\n        connect(config.servers);\n\n        System.out.print(HORIZONTAL_RULE);\n        System.out.println(\"Starting Benchmark\");\n        System.out.println(HORIZONTAL_RULE);\n\n        benchmarkActive = true;\n\n        // Run the benchmark loop for the requested warmup time\n        // The throughput may be throttled depending on client configuration\n        if (config.warmup > 0) {\n            System.out.println(\"Warming up...\");\n            for (int i=0; i<config.warmup; i++){\n                client.callProcedure(new NullCallback(),\n                                     \"ids_insert\",\n                                     i,\n                                     i,\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMatView_insert\",\n                                     i,\n                                     i,\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMinMatView_insert\",\n                                     i,\n                                     i,\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMinMatViewOpt_insert\",\n                                     i,\n                                     i,\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWith4MinMatView_insert\",\n                                     i,\n                                     i,\n                                     i, i, i, i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWith4MinMatViewOpt_insert\",\n                                     i,\n                                     i,\n                                     i, i, i, i);\n                client.callProcedure(new NullCallback(),\n                                    \"idsWith4MinMatViewOpt_insert\",\n                                    i,\n                                    i,\n                                    i, i, i, i);\n                client.callProcedure(new NullCallback(),\n                                    \"idsWithMultiGroupsMinMatView_insert\",\n                                    i,\n                                    i, i,\n                                    i);\n                client.callProcedure(new NullCallback(),\n                                    \"idsWithMultiGroupsMinMatViewOpt_insert\",\n                                    i,\n                                    i, i,\n                                    i);\n                client.callProcedure(new NullCallback(),\n                                    \"idsWithMultiGroupsMinMatViewBestOpt_insert\",\n                                    i,\n                                    i, i,\n                                    i);\n            }\n            client.drain();\n            for (int i=0; i<config.warmup; i++){\n                client.callProcedure(new NullCallback(),\n                                     \"ids_delete\",\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMatView_delete\",\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMinMatView_delete\",\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMinMatViewOpt_delete\",\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWith4MinMatView_delete\",\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWith4MinMatViewOpt_delete\",\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                    \"idsWithMultiGroupsMinMatView_delete\",\n                                    i);\n                client.callProcedure(new NullCallback(),\n                                    \"idsWithMultiGroupsMinMatViewOpt_delete\",\n                                    i);\n                client.callProcedure(new NullCallback(),\n                                    \"idsWithMultiGroupsMinMatViewBestOpt_delete\",\n                                    i);\n            }\n            client.drain();\n        }\n\n        FileWriter fw = null;\n        if ((config.statsfile != null) && (config.statsfile.length() != 0)) {\n            fw = new FileWriter(config.statsfile);\n        }\n\n        System.out.println(\"\\nRunning benchmark...\\n\");\n\n        runEachBenchmark(fw, \"matView\", \"noMatView\");\n        runEachBenchmark(fw, \"minMatView\", \"minMatViewOpt\");\n        runEachBenchmark(fw, \"4MinMatView\", \"4MinMatViewOpt\");\n        runEachBenchmark(fw, \"MultiGroupsMinMatView\", \"MultiGroupsMinMatViewOpt\", \"MultiGroupsMinMatViewBestOpt\");\n\n        benchmarkActive = false;\n        if ((config.statsfile != null) && (config.statsfile.length() != 0)) {\n            fw.close();\n        }\n\n        // close down the client connections\n        client.close();\n    }","id":1949,"modified_method":"/**\n     * Core benchmark code.\n     * Connect. Initialize. Run the loop. Cleanup. Print Results.\n     * @throws Exception\n     */\n    public void runBenchmark() throws Exception {\n        System.out.print(HORIZONTAL_RULE);\n        System.out.println(\" Setup & Initialization\");\n        System.out.println(HORIZONTAL_RULE);\n\n        // connect to one or more servers, loop until success\n        connect(config.servers);\n\n        System.out.print(HORIZONTAL_RULE);\n        System.out.println(\"Starting Benchmark\");\n        System.out.println(HORIZONTAL_RULE);\n\n        benchmarkActive = true;\n\n        // Run the benchmark loop for the requested warmup time\n        // The throughput may be throttled depending on client configuration\n        if (config.warmup > 0) {\n            System.out.println(\"Warming up...\");\n            for (int i=0; i<config.warmup; i++){\n                client.callProcedure(new NullCallback(),\n                                     \"ids_insert\",\n                                     i,\n                                     i,\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMatView_insert\",\n                                     i,\n                                     i,\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMinMatView_insert\",\n                                     i,\n                                     i,\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMinMatViewOpt_insert\",\n                                     i,\n                                     i,\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWith4MinMatView_insert\",\n                                     i,\n                                     i,\n                                     i, i, i, i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWith4MinMatViewOpt_insert\",\n                                     i,\n                                     i,\n                                     i, i, i, i);\n                client.callProcedure(new NullCallback(),\n                                    \"idsWith4MinMatViewOpt_insert\",\n                                    i,\n                                    i,\n                                    i, i, i, i);\n                client.callProcedure(new NullCallback(),\n                                    \"idsWithMultiGroupsMinMatView_insert\",\n                                    i,\n                                    i, i,\n                                    i);\n                client.callProcedure(new NullCallback(),\n                                    \"idsWithMultiGroupsMinMatViewOpt_insert\",\n                                    i,\n                                    i, i,\n                                    i);\n                client.callProcedure(new NullCallback(),\n                                    \"idsWithMultiGroupsMinMatViewBestOpt_insert\",\n                                    i,\n                                    i, i,\n                                    i);\n            }\n            client.drain();\n            if (!config.streamview) {\n            \tfor (int i=0; i<config.warmup; i++){\n            \t\tclient.callProcedure(new NullCallback(),\n            \t\t\t\t\"ids_delete\",\n            \t\t\t\ti);\n            \t\tclient.callProcedure(new NullCallback(),\n            \t\t\t\t\"idsWithMatView_delete\",\n            \t\t\t\ti);\n            \t\tclient.callProcedure(new NullCallback(),\n            \t\t\t\t\"idsWithMinMatView_delete\",\n            \t\t\t\ti);\n            \t\tclient.callProcedure(new NullCallback(),\n            \t\t\t\t\"idsWithMinMatViewOpt_delete\",\n            \t\t\t\ti);\n            \t\tclient.callProcedure(new NullCallback(),\n            \t\t\t\t\"idsWith4MinMatView_delete\",\n            \t\t\t\ti);\n            \t\tclient.callProcedure(new NullCallback(),\n            \t\t\t\t\"idsWith4MinMatViewOpt_delete\",\n            \t\t\t\ti);\n            \t\tclient.callProcedure(new NullCallback(),\n            \t\t\t\t\"idsWithMultiGroupsMinMatView_delete\",\n            \t\t\t\ti);\n            \t\tclient.callProcedure(new NullCallback(),\n            \t\t\t\t\"idsWithMultiGroupsMinMatViewOpt_delete\",\n            \t\t\t\ti);\n            \t\tclient.callProcedure(new NullCallback(),\n            \t\t\t\t\"idsWithMultiGroupsMinMatViewBestOpt_delete\",\n            \t\t\t\ti);\n            \t}\n            \tclient.drain();\n            }\n        }\n\n        FileWriter fw = null;\n        if ((config.statsfile != null) && (config.statsfile.length() != 0)) {\n            fw = new FileWriter(config.statsfile);\n        }\n\n        System.out.println(\"\\nRunning benchmark...\\n\");\n\n        runEachBenchmark(fw, \"matView\", \"noMatView\");\n        runEachBenchmark(fw, \"minMatView\", \"minMatViewOpt\");\n        runEachBenchmark(fw, \"4MinMatView\", \"4MinMatViewOpt\");\n        runEachBenchmark(fw, \"MultiGroupsMinMatView\", \"MultiGroupsMinMatViewOpt\", \"MultiGroupsMinMatViewBestOpt\");\n\n        benchmarkActive = false;\n        if ((config.statsfile != null) && (config.statsfile.length() != 0)) {\n            fw.close();\n        }\n\n        // close down the client connections\n        client.close();\n    }","commit_id":"288b3f500cb0348cbba3b3b4d8bfe1d760060859","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Core benchmark code.\n     * Connect. Initialize. Run the loop. Cleanup. Print Results.\n     * @throws Exception\n     */\n    public void runBenchmark() throws Exception {\n        System.out.print(HORIZONTAL_RULE);\n        System.out.println(\" Setup & Initialization\");\n        System.out.println(HORIZONTAL_RULE);\n\n        // connect to one or more servers, loop until success\n        connect(config.servers);\n\n        System.out.print(HORIZONTAL_RULE);\n        System.out.println(\"Starting Benchmark\");\n        System.out.println(HORIZONTAL_RULE);\n\n        benchmarkActive = true;\n\n        // Run the benchmark loop for the requested warmup time\n        // The throughput may be throttled depending on client configuration\n        if (config.warmup > 0) {\n            System.out.println(\"Warming up...\");\n            for (int i=0; i<config.warmup; i++){\n                client.callProcedure(new NullCallback(),\n                                     \"ids_insert\",\n                                     i,\n                                     i,\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMatView_insert\",\n                                     i,\n                                     i,\n                                     i);\n            }\n            client.drain();\n            for (int i=0; i<config.warmup; i++){\n                client.callProcedure(new NullCallback(),\n                                     \"ids_delete\",\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMatView_delete\",\n                                     i);\n            }\n            client.drain();\n        }\n\n        FileWriter fw = null;\n        if ((config.statsfile != null) && (config.statsfile.length() != 0)) {\n            fw = new FileWriter(config.statsfile);\n        }\n\n        // reset the stats after warmup\n        fullStatsContext.fetchAndResetBaseline();\n        periodicStatsContext.fetchAndResetBaseline();\n\n        System.out.println(\"\\nRunning benchmark...\\n\");\n        runHalf(true, fw);\n        System.out.print(HORIZONTAL_RULE);\n        runHalf(false, fw);\n        benchmarkActive = false;\n\n        if ((config.statsfile != null) && (config.statsfile.length() != 0)) {\n            fw.close();\n        }\n\n        // close down the client connections\n        client.close();\n    }","id":1950,"modified_method":"/**\n     * Core benchmark code.\n     * Connect. Initialize. Run the loop. Cleanup. Print Results.\n     * @throws Exception\n     */\n    public void runBenchmark() throws Exception {\n        System.out.print(HORIZONTAL_RULE);\n        System.out.println(\" Setup & Initialization\");\n        System.out.println(HORIZONTAL_RULE);\n\n        // connect to one or more servers, loop until success\n        connect(config.servers);\n\n        System.out.print(HORIZONTAL_RULE);\n        System.out.println(\"Starting Benchmark\");\n        System.out.println(HORIZONTAL_RULE);\n\n        benchmarkActive = true;\n\n        // Run the benchmark loop for the requested warmup time\n        // The throughput may be throttled depending on client configuration\n        if (config.warmup > 0) {\n            System.out.println(\"Warming up...\");\n            for (int i=0; i<config.warmup; i++){\n                client.callProcedure(new NullCallback(),\n                                     \"ids_insert\",\n                                     i,\n                                     i,\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMatView_insert\",\n                                     i,\n                                     i,\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMinMatView_insert\",\n                                     i,\n                                     i,\n                                     i);\n            }\n            client.drain();\n            for (int i=0; i<config.warmup; i++){\n                client.callProcedure(new NullCallback(),\n                                     \"ids_delete\",\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMatView_delete\",\n                                     i);\n                client.callProcedure(new NullCallback(),\n                                     \"idsWithMinMatView_delete\",\n                                     i);\n            }\n            client.drain();\n        }\n\n        FileWriter fw = null;\n        if ((config.statsfile != null) && (config.statsfile.length() != 0)) {\n            fw = new FileWriter(config.statsfile);\n        }\n\n        System.out.println(\"\\nRunning benchmark...\\n\");\n        runHalf(\"matView\", fw);\n        System.out.print(HORIZONTAL_RULE);\n        runHalf(\"noMatView\", fw);\n        System.out.print(HORIZONTAL_RULE);\n        runHalf(\"minMatView\", fw);\n        benchmarkActive = false;\n\n        if ((config.statsfile != null) && (config.statsfile.length() != 0)) {\n            fw.close();\n        }\n\n        // close down the client connections\n        client.close();\n    }","commit_id":"57a15f62db022f389eaa93e6586f09242422d0a0","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Writes the diff values to the csv file.\n     * @param savedThroughput Throughput class variable.\n     *        newThroughput   New throughput value.\n     *        savedExecute    Execute class variable.\n     *        newExecute      New Execute value.\n     *        name            Title to use for the row in the csv file.\n     *        stats           ClientStats class.\n     *        fw              FileWriter object with the csv file.\n     * @throws Exception if anything unexpected happens.\n     * @return Returns DiffRetVals class containing the throughput/execute values to update\n     *         the MaterializedViewBenchmark class variables with.\n     */\n    public DiffRetVals diffWriter(double savedThroughput, double newThroughput, double savedExecute,\n                                  double newExecute, String name, ClientStats stats, FileWriter fw) throws Exception {\n        if (savedThroughput > 0) {\n            savedThroughput = (((newThroughput - savedThroughput) /\n                                  newThroughput) * 100);\n            savedExecute = (((savedExecute - newExecute) /\n                               newExecute) * 100);\n            fw.append(String.format(\"%s,%d,-1,%.2f,0,0,0,%.2f,0,0,0,0,0,0\\n\",\n                                    name,\n                                    stats.getStartTimestamp(),\n                                    savedThroughput,\n                                    savedExecute));\n        } else {\n            savedThroughput = newThroughput;\n            savedExecute = newExecute;\n        }\n        return new DiffRetVals(savedThroughput, savedExecute);\n    }","id":1951,"modified_method":"/**\n     * Writes the diff values to the csv file.\n     * @param savedThroughput Throughput class variable.\n     *        newThroughput   New throughput value.\n     *        savedExecute    Execute class variable.\n     *        newExecute      New Execute value.\n     *        name            Title to use for the row in the csv file.\n     *        stats           ClientStats class.\n     *        fw              FileWriter object with the csv file.\n     * @throws Exception if anything unexpected happens.\n     * @return Returns DiffRetVals class containing the throughput/execute values to update\n     *         the MaterializedViewBenchmark class variables with.\n     */\n    public DiffRetVals diffWriter(double savedThroughput, double newThroughput, double savedExecute,\n                                  double newExecute, String name, ClientStats stats, FileWriter fw) throws Exception {\n        if (savedThroughput > 0) {\n            savedThroughput = (((newThroughput - savedThroughput) /\n                                  newThroughput) * 100);\n            savedExecute = (((savedExecute - newExecute) /\n                               newExecute) * 100);\n            fw.append(String.format(\"%s,%d,-1,%.2f,0,0,0,%.2f,0,0,0,0,0,0\\n\",\n                                    name,\n                                    stats.getStartTimestamp(),\n                                    savedThroughput,\n                                    savedExecute));\n            savedThroughput = savedExecute = 0;\n        } else {\n            savedThroughput = newThroughput;\n            savedExecute = newExecute;\n        }\n        return new DiffRetVals(savedThroughput, savedExecute);\n    }","commit_id":"57a15f62db022f389eaa93e6586f09242422d0a0","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Run half of the benchmark\n     * @param matView True if running with materialized view half, otherwise false.\n     *        fw      File writer object to write stats to.\n     * @throws Exception if anything unexpected happens.\n     */\n    public void runHalf(boolean matView, FileWriter fw) throws Exception {\n        String systemStr;\n        String csvStr;\n        String procStr;\n        if (matView) {\n            systemStr = \"w/\";\n            csvStr = \"w\";\n            procStr = \"idsWithMatView\";\n        } else {\n            systemStr = \"w/o\";\n            csvStr = \"wo\";\n            procStr = \"ids\";\n        }\n\n        int grp = 1;\n\n        benchmarkStartTS = System.currentTimeMillis();\n        schedulePeriodicStats();\n\n        // Run the benchmark for the requested duration.\n        System.out.println(\"\\n\\nInserting into table \" + systemStr + \" materialized view...\\n\");\n\n        if (config.group > 0) {\n            for (int i=0; i<config.txn; i++){\n                client.callProcedure(new NullCallback(),\n                                     procStr + \"_insert\",\n                                     i,\n                                     grp,\n                                     i);\n                if (grp == config.group) {\n                    grp = 1;\n                } else {\n                    grp++;\n                }\n            }\n        } else {\n            for (int i=0; i<config.txn; i++){\n                client.callProcedure(new NullCallback(),\n                                     procStr + \"_insert\",\n                                     i,\n                                     i,\n                                     i);\n            }\n        }\n        timer.cancel();\n        client.drain();\n\n        // grp is initialized to 2 for updating the grouping column to (grouping column = grouping column + 1)\n        grp = 2;\n\n        if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n            printResults(procStr + \"_insert\");\n        } else {\n            printResults(procStr + \"_insert\", fw, \"Insert \" + csvStr + \" MV\");\n        }\n        System.out.print(HORIZONTAL_RULE);\n\n        benchmarkStartTS = System.currentTimeMillis();\n        schedulePeriodicStats();\n\n        System.out.println(\"\\n\\nUpdating grouping column in table \" + systemStr + \" materialized view...\\n\");\n\n        if (config.group > 0) {\n            for (int i=0; i<config.txn; i++){\n                client.callProcedure(new NullCallback(),\n                                     procStr + \"_group_id_update\",\n                                     grp,\n                                     i);\n                if (grp == (config.group + 1)) {\n                    grp = 2;\n                } else {\n                    grp++;\n                }\n            }\n        } else {\n            for (int i=0; i<config.txn; i++){\n                client.callProcedure(new NullCallback(),\n                                     procStr + \"_group_id_update\",\n                                     (i + 1),\n                                     i);\n            }\n        }\n        timer.cancel();\n        client.drain();\n\n        if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n            printResults(procStr + \"_group_id_update\");\n        } else {\n            printResults(procStr + \"_group_id_update\", fw, \"Update Group \" + csvStr + \" MV\");\n        }\n        System.out.print(HORIZONTAL_RULE);\n\n        benchmarkStartTS = System.currentTimeMillis();\n        schedulePeriodicStats();\n\n        System.out.println(\"\\n\\nUpdating aggregated column in table \" + systemStr + \" materialized view...\\n\");\n\n        for (int i=0; i<config.txn; i++){\n            client.callProcedure(new NullCallback(),\n                                 procStr + \"_value_update\",\n                                 (i + 1),\n                                 i);\n        }\n        timer.cancel();\n        client.drain();\n\n        if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n            printResults(procStr + \"_value_update\");\n        } else {\n            printResults(procStr + \"_value_update\", fw, \"Update Aggregate \" + csvStr + \" MV\");\n        }\n        System.out.print(HORIZONTAL_RULE);\n\n        benchmarkStartTS = System.currentTimeMillis();\n        schedulePeriodicStats();\n\n        System.out.println(\"\\n\\nDeleting from table \" + systemStr + \" materialized view...\\n\");\n        for (int i=0; i<config.txn; i++){\n            client.callProcedure(new NullCallback(),\n                                 procStr + \"_delete\",\n                                 i);\n        }\n        timer.cancel();\n        client.drain();\n\n        if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n            printResults(procStr + \"_delete\");\n        } else {\n            printResults(procStr + \"_delete\", fw, \"Delete \" + csvStr + \" MV\");\n        }\n    }","id":1952,"modified_method":"/**\n     * Run half of the benchmark\n     * @param matView True if running with materialized view half, otherwise false.\n     *        fw      File writer object to write stats to.\n     * @throws Exception if anything unexpected happens.\n     */\n    public void runHalf(String matView, FileWriter fw) throws Exception {\n        String systemStr;\n        String csvStr;\n        String procStr;\n        switch (matView) {\n            case \"matView\":\n                systemStr = \"w/\";\n                csvStr = \"w\";\n                procStr = \"idsWithMatView\";\n                break;\n            case \"noMatView\":\n                systemStr = \"w/o\";\n                csvStr = \"wo\";\n                procStr = \"ids\";\n                break;\n            default:\n                systemStr = \"w/ min\";\n                csvStr = \"w min\";\n                procStr = \"idsWithMinMatView\";\n        }\n\n        int grp = 1;\n\n        fullStatsContext.fetchAndResetBaseline();\n        periodicStatsContext.fetchAndResetBaseline();\n\n        benchmarkStartTS = System.currentTimeMillis();\n        schedulePeriodicStats();\n\n        // Run the benchmark for the requested duration.\n        System.out.println(\"\\n\\nInserting into table \" + systemStr + \" materialized view...\\n\");\n\n        if (config.group > 0) {\n            for (int i=0; i<config.txn; i++){\n                client.callProcedure(new NullCallback(),\n                                     procStr + \"_insert\",\n                                     i,\n                                     grp,\n                                     i);\n                if (grp == config.group) {\n                    grp = 1;\n                } else {\n                    grp++;\n                }\n            }\n        } else {\n            for (int i=0; i<config.txn; i++){\n                client.callProcedure(new NullCallback(),\n                                     procStr + \"_insert\",\n                                     i,\n                                     i,\n                                     i);\n            }\n        }\n        timer.cancel();\n        client.drain();\n\n        if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n            printResults(procStr + \"_insert\");\n        } else {\n            printResults(procStr + \"_insert\", fw, \"Insert \" + csvStr + \" MV\");\n        }\n        System.out.print(HORIZONTAL_RULE);\n\n        if (!matView.equals(\"minMatView\")) {\n            // grp is initialized to 2 for updating the grouping column to (grouping column = grouping column + 1)\n            grp = 2;\n\n            fullStatsContext.fetchAndResetBaseline();\n            periodicStatsContext.fetchAndResetBaseline();\n\n            benchmarkStartTS = System.currentTimeMillis();\n            schedulePeriodicStats();\n\n            System.out.println(\"\\n\\nUpdating grouping column in table \" + systemStr + \" materialized view...\\n\");\n\n            if (config.group > 0) {\n                for (int i=0; i<config.txn; i++){\n                    client.callProcedure(new NullCallback(),\n                                         procStr + \"_group_id_update\",\n                                         grp,\n                                         i);\n                    if (grp == (config.group + 1)) {\n                        grp = 2;\n                    } else {\n                        grp++;\n                    }\n                }\n            } else {\n                for (int i=0; i<config.txn; i++){\n                    client.callProcedure(new NullCallback(),\n                                         procStr + \"_group_id_update\",\n                                         (i + 1),\n                                         i);\n                }\n            }\n            timer.cancel();\n            client.drain();\n\n            if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n                printResults(procStr + \"_group_id_update\");\n            } else {\n                printResults(procStr + \"_group_id_update\", fw, \"Update Group \" + csvStr + \" MV\");\n            }\n            System.out.print(HORIZONTAL_RULE);\n\n            fullStatsContext.fetchAndResetBaseline();\n            periodicStatsContext.fetchAndResetBaseline();\n\n            benchmarkStartTS = System.currentTimeMillis();\n            schedulePeriodicStats();\n\n            System.out.println(\"\\n\\nUpdating aggregated column in table \" + systemStr + \" materialized view...\\n\");\n\n            for (int i=0; i<config.txn; i++){\n                client.callProcedure(new NullCallback(),\n                                     procStr + \"_value_update\",\n                                     (i + 1),\n                                     i);\n            }\n            timer.cancel();\n            client.drain();\n\n            if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n                printResults(procStr + \"_value_update\");\n            } else {\n                printResults(procStr + \"_value_update\", fw, \"Update Aggregate \" + csvStr + \" MV\");\n            }\n            System.out.print(HORIZONTAL_RULE);\n        }\n\n        fullStatsContext.fetchAndResetBaseline();\n        periodicStatsContext.fetchAndResetBaseline();\n\n        benchmarkStartTS = System.currentTimeMillis();\n        schedulePeriodicStats();\n\n        System.out.println(\"\\n\\nDeleting from table \" + systemStr + \" materialized view...\\n\");\n        for (int i=0; i<config.txn; i++){\n            client.callProcedure(new NullCallback(),\n                                 procStr + \"_delete\",\n                                 i);\n        }\n        timer.cancel();\n        client.drain();\n\n        if ((config.statsfile == null) || (config.statsfile.length() == 0)) {\n            printResults(procStr + \"_delete\");\n        } else {\n            printResults(procStr + \"_delete\", fw, \"Delete \" + csvStr + \" MV\");\n        }\n    }","commit_id":"57a15f62db022f389eaa93e6586f09242422d0a0","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void paintComponent(java.awt.Graphics g)\n        {\n            //tufts.vue.DrawContext dc = new tufts.vue.DrawContext(g);\n           // comp.draw(dc);\n            java.awt.Color old = g.getColor();\n            g.setColor(getBackground());\n            g.fillRect(0,0,getWidth(),getHeight());\n            g.setColor(old);\n            if(!isNode(type))\n            {\n              Style style = type.getStyle();\n                  \n              float strokeWidth = 1.0f;     \n              if(style!= null && style.getAttribute(\"stroke-width\") != null)\n                strokeWidth = edu.tufts.vue.style.ShorthandParser.parseSize(style.getAttribute(\"stroke-width\"));\n                //strokeWidth = Float.parseFloat(style.getAttribute(\"stroke-width\"));\n              //System.out.println(\"typelist: stroke width: \" + strokeWidth);\n              //if(strokeWidth <= 1.1f)\n              //{\n               g.drawLine(10,20,40,20);\n              /*}\n              else\n              {\n               g.fillRect(10,20,30,(int)(strokeWidth));\n               for(int i=0;i<ypoints.length;i++)\n               {\n                  ypoints[i] += (int)((strokeWidth+1)/2 );\n               }\n              }*/\n              \n               \n               g.fillPolygon(xpoints,ypoints,numpoints);\n            }\n            else\n            {\n              old = g.getColor();\n              g.setColor(tufts.vue.VueResources.getColor(\"node.fillColor\"));  \n              g.fillRoundRect(10,15,30,25,5,5);\n              g.setColor(old);\n            }\n            if(type.getLabel()!=null);\n              g.drawString(type.getLabel(),60,20);\n              //g.drawString(comp.getLabel(),40,10);\n              \n                Style s = type.getStyle();\n                if(s!=null)\n                {\n                  String icon = s.getAttribute(\"background-image\");\n                  //System.out.println(\"icon \" + icon);\n                  if(icon != null)\n                  {\n                    javax.swing.ImageIcon ii = new javax.swing.ImageIcon(icon);\n                    //System.out.println(\"image icon: \" + ii);\n                    //p.add(new JLabel(ii));\n                    g.drawImage(ii.getImage(),200,10,40,40,null);\n                  }\n                }\n        }","id":1953,"modified_method":"public void paintComponent(java.awt.Graphics g)\n        {\n            //tufts.vue.DrawContext dc = new tufts.vue.DrawContext(g);\n           // comp.draw(dc);\n            java.awt.Color old = g.getColor();\n            g.setColor(getBackground());\n            g.fillRect(0,0,getWidth(),getHeight());\n            g.setColor(old);\n            if(!isNode(type))\n            {\n              Style style = type.getStyle();\n                  \n              float strokeWidth = 1.0f;     \n              if(style!= null && style.getAttribute(\"stroke-width\") != null)\n                strokeWidth = edu.tufts.vue.style.ShorthandParser.parseSize(style.getAttribute(\"stroke-width\"));\n                //strokeWidth = Float.parseFloat(style.getAttribute(\"stroke-width\"));\n              //System.out.println(\"typelist: stroke width: \" + strokeWidth);\n              //if(strokeWidth <= 1.1f)\n              //{\n               g.drawLine(10,20,40,20);\n              /*}\n              else\n              {\n               g.fillRect(10,20,30,(int)(strokeWidth));\n               for(int i=0;i<ypoints.length;i++)\n               {\n                  ypoints[i] += (int)((strokeWidth+1)/2 );\n               }\n              }*/\n              \n               \n               g.fillPolygon(xpoints,ypoints,numpoints);\n            }\n            else\n            {\n              old = g.getColor();\n              Style style = type.getStyle();\n              java.awt.Color fillColor = tufts.vue.VueResources.getColor(\"node.fillColor\");\n              if(style!=null)\n              {\n                String fillColorString = style.getAttribute(\"background\");\n                if(fillColorString!=null)\n                {\n                    try\n                    {        \n                      fillColor =  java.awt.Color.decode(fillColorString);\n                    }\n                    catch(NumberFormatException nfe)\n                    {\n                        System.out.println(\"TypeList: NumberFormatException \" + nfe);\n                    }\n                }\n              }\n              g.setColor(fillColor);  \n              //g.fillRoundRect(10,15,30,25,5,5);\n              g.fillRoundRect(10,8,30,20,5,5);\n              g.setColor(old);\n            }\n            if(type.getLabel()!=null);\n              //g.drawString(type.getLabel(),60,20);\n              g.drawString(type.getLabel(),60,18 - 2 +g.getFontMetrics().getHeight()/2);\n              //g.drawString(type.getLabel(),60,18-g.getFontMetrics().getAscent()/2);\n              //g.drawString(type.getLabel(),60,18);\n              //g.drawString(comp.getLabel(),40,10);\n              \n                Style s = type.getStyle();\n                if(s!=null)\n                {\n                  String icon = s.getAttribute(\"background-image\");\n                  //System.out.println(\"icon \" + icon);\n                  if(icon != null)\n                  {\n                    javax.swing.ImageIcon ii = new javax.swing.ImageIcon(icon);\n                    //System.out.println(\"image icon: \" + ii);\n                    //p.add(new JLabel(ii));\n                    //g.drawImage(ii.getImage(),200,10,40,40,null);\n                    g.drawImage(ii.getImage(),200,5,26,26,null);\n                  }\n                }\n        }","commit_id":"391995968a448caba73fbed7688c4c1f18a15d90","url":"https://github.com/VUE/VUE"},{"original_method":"public LWComponentView(/*OntType t*/)\n        {\n            //comp = component;\n            //type = t;\n            setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.GRAY));\n        }","id":1954,"modified_method":"public LWComponentView(/*OntType t*/)\n        {\n            //comp = component;\n            //type = t;\n           // setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.GRAY));\n            setBorder(javax.swing.BorderFactory.createMatteBorder(0,0,1,0,\n                                                                  tufts.vue.VueResources.getColor(\"ui.resourceList.dividerColor\", 204,204,204)));\n        }","commit_id":"391995968a448caba73fbed7688c4c1f18a15d90","url":"https://github.com/VUE/VUE"},{"original_method":"public java.awt.Dimension getPreferredSize()\n        {\n            return new java.awt.Dimension(100,50);\n        }","id":1955,"modified_method":"public java.awt.Dimension getPreferredSize()\n        {\n            //return new java.awt.Dimension(100,50);\n            return new java.awt.Dimension(100,37);\n        }","commit_id":"391995968a448caba73fbed7688c4c1f18a15d90","url":"https://github.com/VUE/VUE"},{"original_method":"public java.awt.Component getListCellRendererComponent(JList jList, Object value, int i, boolean isSelected, boolean hasFocus) \n        {            \n            if(value == getSelectedValue())\n            {\n                lwcv.setBackground(new java.awt.Color(230,230,230));\n            }\n            else\n                lwcv.setBackground(new java.awt.Color(255,255,255));\n            \n            lwcv.setType((OntType)value);\n            \n            return lwcv;\n        }","id":1956,"modified_method":"public java.awt.Component getListCellRendererComponent(JList jList, Object value, int i, boolean isSelected, boolean hasFocus) \n        {            \n            if(value == getSelectedValue())\n            {\n                //lwcv.setBackground(new java.awt.Color(230,230,230));\n                lwcv.setBackground(tufts.vue.gui.GUI.getTextHighlightColor());\n            }\n            else\n                lwcv.setBackground(new java.awt.Color(255,255,255));\n            \n            lwcv.setType((OntType)value);\n            \n            return lwcv;\n        }","commit_id":"391995968a448caba73fbed7688c4c1f18a15d90","url":"https://github.com/VUE/VUE"},{"original_method":"@Override\n    public void paint(@NotNull Editor editor, @NotNull Graphics g, @NotNull Rectangle r) {\n      if (myText != null && (step > steps || startWidth != 0)) {\n        TextAttributes attributes = editor.getColorsScheme().getAttributes(JavaHighlightingColors.INLINE_PARAMETER_HINT);\n        if (attributes != null) {\n          GraphicsConfig config = GraphicsUtil.setupAAPainting(g);\n          int shadeRectHeight = Math.min(4, r.height - 3);\n          Color backgroundColor = attributes.getBackgroundColor();\n          g.setColor(ColorUtil.darker(backgroundColor, 1));\n          g.fillRoundRect(r.x + 2, r.y + r.height - shadeRectHeight - 1, r.width - 4, shadeRectHeight, 4, 4);\n          g.setColor(backgroundColor);\n          g.fillRoundRect(r.x + 2, r.y + 1, r.width - 4, r.height - 3, 4, 4);\n          g.setColor(attributes.getForegroundColor());\n          g.setFont(getFont(editor));\n          FontMetrics metrics = g.getFontMetrics();\n          Shape savedClip = g.getClip();\n          g.clipRect(r.x + 3, r.y + 1, r.width - 6, r.height - 3);\n          g.drawString(myText, r.x + 7, r.y + (r.height + metrics.getAscent() - metrics.getDescent()) / 2 - 1);\n          g.setClip(savedClip);\n          config.restore();\n        }\n      }\n    }","id":1957,"modified_method":"@Override\n    public void paint(@NotNull Editor editor, @NotNull Graphics g, @NotNull Rectangle r) {\n      if (myText != null && (step > steps || startWidth != 0)) {\n        TextAttributes attributes = editor.getColorsScheme().getAttributes(JavaHighlightingColors.INLINE_PARAMETER_HINT);\n        if (attributes != null) {\n          Color backgroundColor = attributes.getBackgroundColor();\n          if (backgroundColor != null) {\n            GraphicsConfig config = GraphicsUtil.setupAAPainting(g);\n            int shadeRectHeight = Math.min(4, r.height - 3);\n            g.setColor(ColorUtil.darker(backgroundColor, 1));\n            g.fillRoundRect(r.x + 2, r.y + r.height - shadeRectHeight - 1, r.width - 4, shadeRectHeight, 4, 4);\n            g.setColor(backgroundColor);\n            g.fillRoundRect(r.x + 2, r.y + 1, r.width - 4, r.height - 3, 4, 4);\n            config.restore();\n          }\n          Color foregroundColor = attributes.getForegroundColor();\n          if (foregroundColor != null) {\n            g.setColor(foregroundColor);\n            g.setFont(getFont(editor));\n            FontMetrics metrics = g.getFontMetrics();\n            Shape savedClip = g.getClip();\n            g.clipRect(r.x + 3, r.y + 1, r.width - 6, r.height - 3);\n            g.drawString(myText, r.x + 7, r.y + (r.height + metrics.getAscent() - metrics.getDescent()) / 2 - 1);\n            g.setClip(savedClip);\n          }\n        }\n      }\n    }","commit_id":"1c3b13536e3931d389b3d0830348867aa0c78731","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void paintBorder(Component c, Graphics g2, int x, int y, int width, int height) {\n    if (comboBox == null || arrowButton == null) {\n      return; //NPE on LaF change\n    }\n\n    hasFocus = false;\n    checkFocus();\n    final Graphics2D g = (Graphics2D)g2.create();\n    final Rectangle arrowButtonBounds = arrowButton.getBounds();\n    final int xxx = arrowButtonBounds.x - JBUI.scale(5);\n    final int H = height - JBUI.scale(2);\n    final int W = width - JBUI.scale(2);\n\n    final Shape clip = g.getClip();\n    g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n    g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_NORMALIZE);\n    final int R = JBUI.scale(5);\n    if (hasFocus) {\n      g.clipRect(JBUI.scale(2), JBUI.scale(2), comboBox.getWidth()- JBUI.scale(4), comboBox.getHeight() - JBUI.scale(4));\n    }\n    if (editor != null && comboBox.isEditable()) {\n      g.setColor(editor.getBackground());\n      g.fillRoundRect(x + JBUI.scale(1), y + JBUI.scale(1), W, H, R, R);\n      g.setColor(getArrowButtonFillColor(arrowButton.getBackground()));\n      g.fillRoundRect(xxx, y + JBUI.scale(1), width - xxx, H, R, R);\n      g.setColor(editor.getBackground());\n      g.fillRect(xxx, y + JBUI.scale(1), JBUI.scale(5), H);\n    } else {\n      g.setColor(UIUtil.getPanelBackground());\n      g.fillRoundRect(x + JBUI.scale(1), y + JBUI.scale(1), W, H, R, R);\n      g.setColor(getArrowButtonFillColor(arrowButton.getBackground()));\n      g.fillRoundRect(xxx, y + JBUI.scale(1), width - xxx, H, R, R);\n      g.setColor(UIUtil.getPanelBackground());\n      g.fillRect(xxx, y + JBUI.scale(1), JBUI.scale(5), H);\n    }\n    final Color borderColor = getBorderColor();//ColorUtil.shift(UIUtil.getBorderColor(), 4);\n    g.setColor(getArrowButtonFillColor(borderColor));\n    int off = hasFocus ? 1 : 0;\n    g.drawLine(xxx + JBUI.scale(5), y + JBUI.scale(1) + off, xxx + JBUI.scale(5), height - JBUI.scale(2));\n\n    Rectangle r = rectangleForCurrentValue();\n    paintCurrentValueBackground(g, r, hasFocus);\n    paintCurrentValue(g, r, false);\n\n    if (hasFocus) {\n      g.setClip(clip);\n      DarculaUIUtil.paintFocusRing(g, JBUI.scale(2), JBUI.scale(2), width - JBUI.scale(4), height - JBUI.scale(4));\n    }\n    else {\n      g.setColor(borderColor);\n      g.drawRoundRect(JBUI.scale(1), JBUI.scale(1), width - JBUI.scale(2), height - JBUI.scale(2), R, R);\n      if (!UIUtil.isUnderDarcula() && comboBox.isEnabled()) {\n        g.setColor(getArrowButtonFillColor(getBorderColor()));\n        final int offX = xxx + JBUI.scale(5);\n        g.clipRect(offX, y, width - offX, height);\n        g.drawRoundRect(JBUI.scale(1), JBUI.scale(1), width - JBUI.scale(2), height - JBUI.scale(2), R, R);\n      }\n    }\n    g.dispose();\n  }","id":1958,"modified_method":"@Override\n  public void paintBorder(Component c, Graphics g2, int x, int y, int width, int height) {\n    if (comboBox == null || arrowButton == null) {\n      return; //NPE on LaF change\n    }\n\n    hasFocus = false;\n    checkFocus();\n    final Graphics2D g = (Graphics2D)g2.create();\n    final Rectangle arrowButtonBounds = arrowButton.getBounds();\n    final int xxx = arrowButtonBounds.x - JBUI.scale(5);\n    final int H = height - JBUI.scale(2);\n    final int W = width - JBUI.scale(2);\n\n    final Shape clip = g.getClip();\n    g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n    g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_NORMALIZE);\n    final int R = JBUI.scale(5);\n    if (hasFocus) {\n      g.clipRect(JBUI.scale(2), JBUI.scale(2), comboBox.getWidth()- JBUI.scale(4), comboBox.getHeight() - JBUI.scale(4));\n    }\n    final Color background = editor != null && comboBox.isEditable()\n                             ? editor.getBackground()\n                             : UIUtil.getPanelBackground();\n    g.setColor(background);\n    g.fillRoundRect(x + JBUI.scale(1), y + JBUI.scale(1), W, H, R, R);\n    g.setColor(getArrowButtonFillColor(arrowButton.getBackground()));\n    g.fillRoundRect(xxx, y + JBUI.scale(1), width - xxx, H, R, R);\n    g.setColor(background);\n    g.fillRect(xxx, y + JBUI.scale(1), JBUI.scale(5), H);\n\n    final Color borderColor = getBorderColor();//ColorUtil.shift(UIUtil.getBorderColor(), 4);\n    g.setColor(getArrowButtonFillColor(borderColor));\n    int off = hasFocus ? 1 : 0;\n    g.drawLine(xxx + JBUI.scale(5), y + JBUI.scale(1) + off, xxx + JBUI.scale(5), height - JBUI.scale(2));\n\n    Rectangle r = rectangleForCurrentValue();\n    paintCurrentValueBackground(g, r, hasFocus);\n    paintCurrentValue(g, r, false);\n\n    if (hasFocus) {\n      g.setClip(clip);\n      DarculaUIUtil.paintFocusRing(g, JBUI.scale(2), JBUI.scale(2), width - JBUI.scale(4), height - JBUI.scale(4));\n    }\n    else {\n      g.setColor(borderColor);\n      g.drawRoundRect(JBUI.scale(1), JBUI.scale(1), width - JBUI.scale(2), height - JBUI.scale(2), R, R);\n      if (!UIUtil.isUnderDarcula() && comboBox.isEnabled()) {\n        g.setColor(getArrowButtonFillColor(getBorderColor()));\n        final int offX = xxx + JBUI.scale(5);\n        g.clipRect(offX, y, width - offX, height);\n        g.drawRoundRect(JBUI.scale(1), JBUI.scale(1), width - JBUI.scale(2), height - JBUI.scale(2), R, R);\n      }\n    }\n    g.dispose();\n  }","commit_id":"cb1c52ab4aeec1637dd569824962d63695129e76","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private String getContentAnswer(ItemContentsBean item, PublishedAnswer answer, PrintSettingsBean printSetting) {\n\t\tStringBuffer contentBuffer = new StringBuffer();\n\t\t\n\t\tif (item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT) ||\n\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE) ||\n\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE_SURVEY) ||\n\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT_SINGLE_SELECTION)) {\n\n\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT))\n\t\t\t\tcontentBuffer.append(\"<td colspan='1'><img src='/samigo-app/images/unchecked.gif' /><\/td>\");\n\t\t\telse\n\t\t\t\tcontentBuffer.append(\"<td colspan='1'><img src='/samigo-app/images/radiounchecked.gif' /><\/td>\");\n\t\t\t\t\n\t\t\tif (printSetting.getShowKeysFeedback()) {\n\t\t\t\tcontentBuffer.append(\"<td colspan='10'>\");\n\t\t\t\tif (!item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE_SURVEY)) {\n\t\t\t\t\tcontentBuffer.append(answer.getLabel());\n\t\t\t\t\tcontentBuffer.append(\". \");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcontentBuffer.append(FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(answer.getText())));\n\t\t\t\tcontentBuffer.append(\"<\/td>\");\n\t\t\t\tcontentBuffer.append(\"<td colspan='9'>\");\n\t\t\t\tcontentBuffer.append(\"<h6>\");\n\t\t\t\tcontentBuffer.append(commonMessages.getString(\"feedback\"));\n\t\t\t\tcontentBuffer.append(\": \");\n\t\t\t\tif (answer.getGeneralAnswerFeedback() != null && !answer.getGeneralAnswerFeedback().equals(\"\"))\n\t\t\t\t\tcontentBuffer.append(FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(answer.getGeneralAnswerFeedback())));\n\t\t\t\telse \n\t\t\t\t\tcontentBuffer.append(\"--------\");\n\t\t\t\tcontentBuffer.append(\"<\/h6>\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontentBuffer.append(\"<td colspan='19'>\");\n\t\t\t\tif (!item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE_SURVEY)) {\n\t\t\t\t\tcontentBuffer.append(answer.getLabel());\n\t\t\t\t\tcontentBuffer.append(\". \");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcontentBuffer.append(FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(answer.getText())));\n\t\t\t\tcontentBuffer.append(\"<\/td>\");\n\t\t\t}\n\t\t\tcontentBuffer.append(\"<\/td>\");\n\t\t}\n\n\t\tif (item.getItemData().getTypeId().equals(TypeIfc.TRUE_FALSE)) {\n\t\t\tcontentBuffer.append(\"<td colspan='1'><img src='/samigo-app/images/radiounchecked.gif' /><\/td>\");\n\t\t\tcontentBuffer.append(\"<td colspan='19'>\");\n\t\t\tcontentBuffer.append(FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(answer.getText())));\n\t\t\tcontentBuffer.append(\"<\/td>\");\n\t\t}\n\n\t\treturn contentBuffer.toString();\n\t}","id":1959,"modified_method":"private String getContentAnswer(ItemContentsBean item, PublishedAnswer answer, PrintSettingsBean printSetting) {\n\t\tStringBuffer contentBuffer = new StringBuffer();\n\t\t\n\t\tif (item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT) ||\n\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE) ||\n\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE_SURVEY) ||\n\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT_SINGLE_SELECTION)) {\n\n\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT))\n\t\t\t\tcontentBuffer.append(\"<td colspan='1'><img src='/samigo-app/images/unchecked.gif' /><\/td>\");\n\t\t\telse\n\t\t\t\tcontentBuffer.append(\"<td colspan='1'><img src='/samigo-app/images/radiounchecked.gif' /><\/td>\");\n\t\t\t\t\n\t\t\tif (printSetting.getShowKeysFeedback()) {\n\t\t\t\tcontentBuffer.append(\"<td colspan='10'>\");\n\t\t\t\tif (!item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE_SURVEY)) {\n\t\t\t\t\tcontentBuffer.append(answer.getLabel());\n\t\t\t\t\tcontentBuffer.append(\". \");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcontentBuffer.append(convertFormattedText(answer.getText()));\n\t\t\t\tcontentBuffer.append(\"<\/td>\");\n\t\t\t\tcontentBuffer.append(\"<td colspan='9'>\");\n\t\t\t\tcontentBuffer.append(\"<h6>\");\n\t\t\t\tcontentBuffer.append(commonMessages.getString(\"feedback\"));\n\t\t\t\tcontentBuffer.append(\": \");\n\t\t\t\tif (answer.getGeneralAnswerFeedback() != null && !answer.getGeneralAnswerFeedback().equals(\"\"))\n\t\t\t\t\tcontentBuffer.append(convertFormattedText(answer.getGeneralAnswerFeedback()));\n\t\t\t\telse \n\t\t\t\t\tcontentBuffer.append(\"--------\");\n\t\t\t\tcontentBuffer.append(\"<\/h6>\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontentBuffer.append(\"<td colspan='19'>\");\n\t\t\t\tif (!item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE_SURVEY)) {\n\t\t\t\t\tcontentBuffer.append(answer.getLabel());\n\t\t\t\t\tcontentBuffer.append(\". \");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcontentBuffer.append(convertFormattedText(answer.getText()));\n\t\t\t\tcontentBuffer.append(\"<\/td>\");\n\t\t\t}\n\t\t\tcontentBuffer.append(\"<\/td>\");\n\t\t}\n\n\t\tif (item.getItemData().getTypeId().equals(TypeIfc.TRUE_FALSE)) {\n\t\t\tcontentBuffer.append(\"<td colspan='1'><img src='/samigo-app/images/radiounchecked.gif' /><\/td>\");\n\t\t\tcontentBuffer.append(\"<td colspan='19'>\");\n\t\t\tcontentBuffer.append(convertFormattedText(answer.getText()));\n\t\t\tcontentBuffer.append(\"<\/td>\");\n\t\t}\n\n\t\treturn contentBuffer.toString();\n\t}","commit_id":"12424a2614ec0d0d96d409569fe1f51b97c464f7","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public String prepDocumentPDF() {\n\n\t\tDeliveryBean deliveryBean = (DeliveryBean) ContextUtil.lookupBean(\"delivery\");\n\n\t\tPrintSettingsBean printSetting = (PrintSettingsBean) ContextUtil.lookupBean(\"printSettings\");\n\t\tsetBaseFontSize(printSetting.getFontSize());\n\n\t\tif (printSetting.getShowPartIntros().booleanValue()) {\n\t\t\tStringBuffer assessmentIntros = new StringBuffer();\n\t\t\tif (deliveryBean.getInstructorMessage() != null && !\"\".equals(deliveryBean.getInstructorMessage())) {\n\t\t\t\tassessmentIntros.append(deliveryBean.getInstructorMessage());\n\t\t\t\tassessmentIntros.append(\"<br />\");\n\t\t\t}\n\t\t\t\n\t\t\tif (deliveryBean.getAttachmentList() != null && deliveryBean.getAttachmentList().size() > 0) {\n\t\t\t\tassessmentIntros.append(\"<br />\");\n\t\t\t\tassessmentIntros.append(printMessages.getString(\"attachments\"));\n\n\t\t\t\tList assessmentAttachmentList = deliveryBean.getAttachmentList();\n\t\t\t\tIterator assessmentAttachmentIter = assessmentAttachmentList.iterator();\n\t\t\t\twhile (assessmentAttachmentIter.hasNext()) {\n\t\t\t\t\tassessmentIntros.append(\"<br />\");\n\t\t\t\t\tPublishedAssessmentAttachment assessmentAttachment = (PublishedAssessmentAttachment) assessmentAttachmentIter.next();\n\t\t\t\t\tif (assessmentAttachment.getMimeType().equalsIgnoreCase(\"image/jpeg\") || \n\t\t\t\t\t\t\tassessmentAttachment.getMimeType().equalsIgnoreCase(\"image/pjpeg\") || \n\t\t\t\t\t\t\tassessmentAttachment.getMimeType().equalsIgnoreCase(\"image/gif\") || \n\t\t\t\t\t\t\tassessmentAttachment.getMimeType().equalsIgnoreCase(\"image/png\")) {\n\t\t\t\t\t\tassessmentIntros.append(\"  <img src=\\\"/samigo\");\n\t\t\t\t\t\tassessmentIntros.append(assessmentAttachment.getResourceId());\n\t\t\t\t\t\tassessmentIntros.append(\"\\\" />\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tassessmentIntros.append(\"  \");\n\t\t\t\t\t\tassessmentIntros.append(assessmentAttachment.getFilename());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsetIntro(assessmentIntros.toString());\t\n\t\t}\n\t\telse {\n\t\t\tsetIntro(\"\");\n\t\t}\n\n\t\tArrayList pdfParts = new ArrayList();\n\n\t\t//for each part in an assessment we add a pdfPart to the pdfBean\n\t\tfor (int i = 0; i < deliveryParts.size(); i++) {\n\t\t\t//get the current item\n\t\t\tSectionContentsBean section = (SectionContentsBean) deliveryParts.get(i);\n\t\t\tArrayList items = section.getItemContents();\n\t\t\tArrayList resources = new ArrayList();\n\n\t\t\t//create a new part and empty list to fill with items\n\t\t\tPDFPartBean pdfPart = new PDFPartBean();\n\t\t\tpdfPart.setSectionId(section.getSectionId());\n\n\t\t\tStringBuffer partIntros = new StringBuffer();\n\t\t\tpartIntros.append(\"<h2>\");\n\t\t\tpartIntros.append(authorMessages.getString(\"p\"));\n\t\t\tpartIntros.append(\" \");\n\t\t\tpartIntros.append(i+1);\n\t\t\tif (!printSetting.getShowPartIntros().booleanValue()) {\n\t\t\t\tpartIntros.append(\"<\/h2>\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (\"Default\".equalsIgnoreCase(section.getTitle())) {\n\t\t\t\t\tpartIntros.append(\"<\/h2>\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpartIntros.append(\": \");\n\t\t\t\t\tpartIntros.append(section.getTitle());\n\t\t\t\t\tpartIntros.append(\"<\/h2>\");\n\t\t\t\t}\n\t\t\t\tpartIntros.append(\"<br />\");\n\t\t\t\tif (section.getDescription() != null) {\n\t\t\t\t\tpartIntros.append(section.getDescription());\n\t\t\t\t}\n\t\t\t\tpartIntros.append(\"<br />\");\n\n\t\t\t\t\n\t\t\t\tif (section.getAttachmentList() != null && section.getAttachmentList().size() > 0) {\n\t\t\t\t\tpartIntros.append(\"<br />\");\n\t\t\t\t\tpartIntros.append(printMessages.getString(\"attachments\"));\n\n\t\t\t\t\tList partAttachmentList = section.getAttachmentList();\n\t\t\t\t\tIterator partAttachmentIter = partAttachmentList.iterator();\n\t\t\t\t\twhile (partAttachmentIter.hasNext()) {\n\t\t\t\t\t\tpartIntros.append(\"<br />\");\n\t\t\t\t\t\tPublishedSectionAttachment partAttachment = (PublishedSectionAttachment) partAttachmentIter.next();\n\t\t\t\t\t\tif (partAttachment.getMimeType().equalsIgnoreCase(\"image/jpeg\") || \n\t\t\t\t\t\t\t\tpartAttachment.getMimeType().equalsIgnoreCase(\"image/pjpeg\") || \n\t\t\t\t\t\t\t\tpartAttachment.getMimeType().equalsIgnoreCase(\"image/gif\") || \n\t\t\t\t\t\t\t\tpartAttachment.getMimeType().equalsIgnoreCase(\"image/png\")) {\n\t\t\t\t\t\t\tpartIntros.append(\"  <img src=\\\"/samigo\");\n\t\t\t\t\t\t\tpartIntros.append(partAttachment.getResourceId());\n\t\t\t\t\t\t\tpartIntros.append(\"\\\" />\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpartIntros.append(\"  \");\n\t\t\t\t\t\t\tpartIntros.append(partAttachment.getFilename());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpdfPart.setIntro(partIntros.toString());\n\n\t\t\tArrayList pdfItems = new ArrayList();\n\n\t\t\t//for each item in a section we add a blank pdfItem to the pdfPart\n\t\t\tfor (int j = 0; j < items.size(); j++) {\n\t\t\t\tPDFItemBean pdfItem = new PDFItemBean();\n\n\t\t\t\tItemContentsBean item = (ItemContentsBean) items.get(j);\n\t\t\t\t\n\t\t\t\tStringBuffer legacy = new StringBuffer(\"<h3>\");\n\t\t\t\tif (printSetting.getShowSequence().booleanValue()) {\n\t\t\t\t\tlegacy.append(item.getSequence());\n\t\t\t\t}\n\t\t\t\tlegacy.append(\"<\/h3>\");\n\n\t\t\t\tpdfItem.setItemId(item.getItemData().getItemId());\n\n\t\t\t\tStringBuffer contentBuffer = new StringBuffer(); \n\n\t\t\t\tif (!(item.getItemData().getTypeId().equals(TypeIfc.FILL_IN_BLANK) || item.getItemData().getTypeId().equals(TypeIfc.FILL_IN_NUMERIC))) {\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(item.getItemData().getText())));\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t}\n\t\t\t\tif (item.getItemData().getItemAttachmentList() != null && item.getItemData().getItemAttachmentList().size() > 0) {\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"attachments\"));\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tList itemAttachmentList = item.getItemData().getItemAttachmentList();\n\t\t\t\t\tIterator itemAttachmentIter = itemAttachmentList.iterator();\n\t\t\t\t\twhile (itemAttachmentIter.hasNext()) {\n\t\t\t\t\t\tPublishedItemAttachment itemAttachment = (PublishedItemAttachment) itemAttachmentIter.next();\n\t\t\t\t\t\tif (itemAttachment.getMimeType().equalsIgnoreCase(\"image/jpeg\") || \n\t\t\t\t\t\t\titemAttachment.getMimeType().equalsIgnoreCase(\"image/pjpeg\") || \n\t\t\t\t\t\t\titemAttachment.getMimeType().equalsIgnoreCase(\"image/gif\") || \n\t\t\t\t\t\t\titemAttachment.getMimeType().equalsIgnoreCase(\"image/png\")) {\n\t\t\t\t\t\t\tcontentBuffer.append(\"  <img src=\\\"/samigo\");\n\t\t\t\t\t\t\tcontentBuffer.append(itemAttachment.getResourceId());\n\t\t\t\t\t\t\tcontentBuffer.append(\"\\\" />\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcontentBuffer.append(\"  \");\n\t\t\t\t\t\t\tcontentBuffer.append(itemAttachment.getFilename());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.FILL_IN_BLANK) || item.getItemData().getTypeId().equals(TypeIfc.FILL_IN_NUMERIC)) {\n\t\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.FILL_IN_NUMERIC)) {\n\t\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\t\tcontentBuffer.append(deliveryMessages.getString(\"fin_accepted_instruction\"));\n\t\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\t}\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(item.getItemData().getText())));\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t}\n\n\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.AUDIO_RECORDING)) {\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"time_allowed_seconds\"));\n\t\t\t\t\tcontentBuffer.append(\":\");\n\t\t\t\t\tcontentBuffer.append(item.getItemData().getDuration());\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"number_of_tries\"));\n\t\t\t\t\tcontentBuffer.append(\":\");\n\t\t\t\t\tcontentBuffer.append(item.getItemData().getTriesAllowed());\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t}\n\n\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.FILE_UPLOAD)) {\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"upload_instruction\"));\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"file\"));\n\t\t\t\t\tcontentBuffer.append(\":\");\n\t\t\t\t\tcontentBuffer.append(\"<input type='text' size='50' />\");\n\t\t\t\t\tcontentBuffer.append(\"<input type='button' value='\");\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"browse\"));\n\t\t\t\t\tcontentBuffer.append(\":' />\");\n\t\t\t\t\tcontentBuffer.append(\"<input type='button' value='\");\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"upload\"));\n\t\t\t\t\tcontentBuffer.append(\":' />\");\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t}\n\n\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT) ||\n\t\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE) ||\n\t\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE_SURVEY) ||\n\t\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT_SINGLE_SELECTION) ||\n\t\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.TRUE_FALSE) ||\n\t\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MATRIX_CHOICES_SURVEY)) {\n\n\t\t\t\t\tList question = item.getItemData().getItemTextArraySorted();\n\t\t\t\t\tfor (int k=0; k<question.size(); k++) {\n\t\t\t\t\t\tPublishedItemText itemtext = (PublishedItemText)question.get(k);\n\t\t\t\t\t\tArrayList answers = itemtext.getAnswerArraySorted();\n\n\t\t\t\t\t\tcontentBuffer.append(\"<table cols='20' width='100%'>\");\n\t\t\t\t\t\tfor (int t=0; t<answers.size(); t++) {\n\t\t\t\t\t\t\tPublishedAnswer answer = (PublishedAnswer)answers.get(t);\n\t\t\t\t\t\t\tif (StringUtils.isBlank(answer.getText())) break;\n\t\t\t\t\t\t\tcontentBuffer.append(\"<tr>\");\n\t\t\t\t\t\t\tcontentBuffer.append(getContentAnswer(item, answer, printSetting));\n\t\t\t\t\t\t\tcontentBuffer.append(\"<\/tr>\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontentBuffer.append(\"<\/table>\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.MATCHING)) {\n\t\t\t\t\tcontentBuffer.append(\"<table cols='20' width='100%'>\");\n\t\t\t\t\tList question = item.getMatchingArray();\n\t\t\t\t\tfor (int k=0; k<question.size(); k++) {\n\t\t\t\t\t\tMatchingBean matching = (MatchingBean)question.get(k);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// if there are distractors or shared matches, answers will\n\t\t\t\t\t\t// have fewer answers that matches.\n\t\t\t\t\t\tString answer = \"\";\n\t\t\t\t\t\tif (k < item.getAnswers().size()) {\n\t\t\t\t\t\t\tanswer = (String)item.getAnswers().get(k);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (matching.getText() == null) break;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontentBuffer.append(\"<tr><td colspan='10'>\");\n\t\t\t\t\t\tcontentBuffer.append(FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(matching.getText())));\n\t\t\t\t\t\tcontentBuffer.append(\"<\/td>\");\n\t\t\t\t\t\tcontentBuffer.append(\"<td colspan='10'>\");\n\t\t\t\t\t\tcontentBuffer.append(FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(answer)));\n\t\t\t\t\t\tcontentBuffer.append(\"<\/td><\/tr>\");\n\t\t\t\t\t}\n\n\t\t\t\t\tcontentBuffer.append(\"<\/table>\");\n\t\t\t\t}\n\n\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.EXTENDED_MATCHING_ITEMS)) {\n\t\t\t\t\tcontentBuffer.append(\"<table cols='20' width='100%'>\");\n\n\t\t\t\t\tcontentBuffer.append(\"<tr><td colspan='20'>\");\n\t\t\t\t\tcontentBuffer.append(item.getItemData().getThemeText());\n\t\t\t\t\tcontentBuffer.append(\"<\/td><\/tr>\");\n\n\t\t\t\t\tif (item.getItemData().getIsAnswerOptionsSimple()) {\n\t\t\t\t\t\tList<AnswerIfc> emiAnswerOptions = item.getItemData().getEmiAnswerOptions();\n\t\t\t\t\t\tfor (AnswerIfc answerIfc : emiAnswerOptions) {\n\t\t\t\t\t\t\tcontentBuffer.append(\"<tr><td colspan='20'>\");\n\t\t\t\t\t\t\tcontentBuffer.append(answerIfc.getLabel() + \". \" + answerIfc.getText());\n\t\t\t\t\t\t\tcontentBuffer.append(\"<\/td><\/tr>\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.getItemData().getIsAnswerOptionsRich()) {\n\t\t\t\t\t\tcontentBuffer.append(\"<tr><td colspan='20'>\");\n\t\t\t\t\t\tcontentBuffer.append(item.getItemData().getEmiAnswerOptionsRichText());\n\t\t\t\t\t\tcontentBuffer.append(\"<\/td><\/tr>\");\n\t\t\t\t\t}\n\n\t\t\t\t\tcontentBuffer.append(\"<tr><td colspan='20'>\");\n\t\t\t\t\tcontentBuffer.append(item.getItemData().getLeadInText());\n\t\t\t\t\tcontentBuffer.append(\"<\/td><\/tr>\");\n\n\t\t\t\t\tList<ItemTextIfc> questionAnswerCombinations = item.getItemData().getEmiQuestionAnswerCombinations();\n\n\t\t\t\t\tfor (ItemTextIfc itemTextIfc : questionAnswerCombinations) {\n\t\t\t\t\t\tif (!itemTextIfc.getText().isEmpty()) {\n\t\t\t\t\t\t\tcontentBuffer.append(\"<tr><td colspan='20'>\");\n\t\t\t\t\t\t\tcontentBuffer.append(itemTextIfc.getSequence() + \". \" + itemTextIfc.getText() + \"  ____\");\n\t\t\t\t\t\t\tcontentBuffer.append(\"<\/td><\/tr>\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(\"<\/table>\");\n\t\t\t\t}\n\t\t\t\tif (printSetting.getShowKeys().booleanValue() || printSetting.getShowKeysFeedback().booleanValue()) {\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(getContentQuestion(item, printSetting));\n\t\t\t\t}\n\n\t\t\t\tpdfItem.setContent(contentBuffer.toString());\n\n\t\t\t\tif (legacy != null) {\n\t\t\t\t\tpdfItem.setMeta(legacy.toString()); \n\t\t\t\t}\n\n\t\t\t\tpdfItems.add(pdfItem);\n\t\t\t}\n\n\t\t\tpdfPart.setQuestions(pdfItems);\n\t\t\tpdfPart.setResources(resources);\n\t\t\tif (resources.size() > 0)\n\t\t\t\tpdfPart.setHasResources(Boolean.valueOf(true));\n\t\t\tpdfParts.add(pdfPart);\n\n\t\t}\n\n\t\t//set the new colleciton of PDF beans to be the contents of the pdfassessment\n\t\tsetParts(pdfParts);\n\n\t\tsetTitle(deliveryBean.getAssessmentTitle());\n\n\t\treturn \"print\";\n\t}","id":1960,"modified_method":"public String prepDocumentPDF() {\n\n\t\tDeliveryBean deliveryBean = (DeliveryBean) ContextUtil.lookupBean(\"delivery\");\n\n\t\tPrintSettingsBean printSetting = (PrintSettingsBean) ContextUtil.lookupBean(\"printSettings\");\n\t\tsetBaseFontSize(printSetting.getFontSize());\n\n\t\tif (printSetting.getShowPartIntros().booleanValue()) {\n\t\t\tStringBuffer assessmentIntros = new StringBuffer();\n\t\t\tif (deliveryBean.getInstructorMessage() != null && !\"\".equals(deliveryBean.getInstructorMessage())) {\n\t\t\t\tassessmentIntros.append(deliveryBean.getInstructorMessage());\n\t\t\t\tassessmentIntros.append(\"<br />\");\n\t\t\t}\n\t\t\t\n\t\t\tif (deliveryBean.getAttachmentList() != null && deliveryBean.getAttachmentList().size() > 0) {\n\t\t\t\tassessmentIntros.append(\"<br />\");\n\t\t\t\tassessmentIntros.append(printMessages.getString(\"attachments\"));\n\n\t\t\t\tList assessmentAttachmentList = deliveryBean.getAttachmentList();\n\t\t\t\tIterator assessmentAttachmentIter = assessmentAttachmentList.iterator();\n\t\t\t\twhile (assessmentAttachmentIter.hasNext()) {\n\t\t\t\t\tassessmentIntros.append(\"<br />\");\n\t\t\t\t\tPublishedAssessmentAttachment assessmentAttachment = (PublishedAssessmentAttachment) assessmentAttachmentIter.next();\n\t\t\t\t\tif (assessmentAttachment.getMimeType().equalsIgnoreCase(\"image/jpeg\") || \n\t\t\t\t\t\t\tassessmentAttachment.getMimeType().equalsIgnoreCase(\"image/pjpeg\") || \n\t\t\t\t\t\t\tassessmentAttachment.getMimeType().equalsIgnoreCase(\"image/gif\") || \n\t\t\t\t\t\t\tassessmentAttachment.getMimeType().equalsIgnoreCase(\"image/png\")) {\n\t\t\t\t\t\tassessmentIntros.append(\"  <img src=\\\"/samigo\");\n\t\t\t\t\t\tassessmentIntros.append(assessmentAttachment.getResourceId());\n\t\t\t\t\t\tassessmentIntros.append(\"\\\" />\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tassessmentIntros.append(\"  \");\n\t\t\t\t\t\tassessmentIntros.append(assessmentAttachment.getFilename());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsetIntro(assessmentIntros.toString());\t\n\t\t}\n\t\telse {\n\t\t\tsetIntro(\"\");\n\t\t}\n\n\t\tArrayList pdfParts = new ArrayList();\n\n\t\t//for each part in an assessment we add a pdfPart to the pdfBean\n\t\tfor (int i = 0; i < deliveryParts.size(); i++) {\n\t\t\t//get the current item\n\t\t\tSectionContentsBean section = (SectionContentsBean) deliveryParts.get(i);\n\t\t\tArrayList items = section.getItemContents();\n\t\t\tArrayList resources = new ArrayList();\n\n\t\t\t//create a new part and empty list to fill with items\n\t\t\tPDFPartBean pdfPart = new PDFPartBean();\n\t\t\tpdfPart.setSectionId(section.getSectionId());\n\n\t\t\tStringBuffer partIntros = new StringBuffer();\n\t\t\tpartIntros.append(\"<h2>\");\n\t\t\tpartIntros.append(authorMessages.getString(\"p\"));\n\t\t\tpartIntros.append(\" \");\n\t\t\tpartIntros.append(i+1);\n\t\t\tif (!printSetting.getShowPartIntros().booleanValue()) {\n\t\t\t\tpartIntros.append(\"<\/h2>\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (\"Default\".equalsIgnoreCase(section.getTitle())) {\n\t\t\t\t\tpartIntros.append(\"<\/h2>\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpartIntros.append(\": \");\n\t\t\t\t\tpartIntros.append(section.getTitle());\n\t\t\t\t\tpartIntros.append(\"<\/h2>\");\n\t\t\t\t}\n\t\t\t\tpartIntros.append(\"<br />\");\n\t\t\t\tif (section.getDescription() != null) {\n\t\t\t\t\tpartIntros.append(section.getDescription());\n\t\t\t\t}\n\t\t\t\tpartIntros.append(\"<br />\");\n\n\t\t\t\t\n\t\t\t\tif (section.getAttachmentList() != null && section.getAttachmentList().size() > 0) {\n\t\t\t\t\tpartIntros.append(\"<br />\");\n\t\t\t\t\tpartIntros.append(printMessages.getString(\"attachments\"));\n\n\t\t\t\t\tList partAttachmentList = section.getAttachmentList();\n\t\t\t\t\tIterator partAttachmentIter = partAttachmentList.iterator();\n\t\t\t\t\twhile (partAttachmentIter.hasNext()) {\n\t\t\t\t\t\tpartIntros.append(\"<br />\");\n\t\t\t\t\t\tPublishedSectionAttachment partAttachment = (PublishedSectionAttachment) partAttachmentIter.next();\n\t\t\t\t\t\tif (partAttachment.getMimeType().equalsIgnoreCase(\"image/jpeg\") || \n\t\t\t\t\t\t\t\tpartAttachment.getMimeType().equalsIgnoreCase(\"image/pjpeg\") || \n\t\t\t\t\t\t\t\tpartAttachment.getMimeType().equalsIgnoreCase(\"image/gif\") || \n\t\t\t\t\t\t\t\tpartAttachment.getMimeType().equalsIgnoreCase(\"image/png\")) {\n\t\t\t\t\t\t\tpartIntros.append(\"  <img src=\\\"/samigo\");\n\t\t\t\t\t\t\tpartIntros.append(partAttachment.getResourceId());\n\t\t\t\t\t\t\tpartIntros.append(\"\\\" />\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpartIntros.append(\"  \");\n\t\t\t\t\t\t\tpartIntros.append(partAttachment.getFilename());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpdfPart.setIntro(partIntros.toString());\n\n\t\t\tArrayList pdfItems = new ArrayList();\n\n\t\t\t//for each item in a section we add a blank pdfItem to the pdfPart\n\t\t\tfor (int j = 0; j < items.size(); j++) {\n\t\t\t\tPDFItemBean pdfItem = new PDFItemBean();\n\n\t\t\t\tItemContentsBean item = (ItemContentsBean) items.get(j);\n\t\t\t\t\n\t\t\t\tStringBuffer legacy = new StringBuffer(\"<h3>\");\n\t\t\t\tif (printSetting.getShowSequence().booleanValue()) {\n\t\t\t\t\tlegacy.append(item.getSequence());\n\t\t\t\t}\n\t\t\t\tlegacy.append(\"<\/h3>\");\n\n\t\t\t\tpdfItem.setItemId(item.getItemData().getItemId());\n\n\t\t\t\tStringBuffer contentBuffer = new StringBuffer(); \n\n\t\t\t\tif (!(item.getItemData().getTypeId().equals(TypeIfc.FILL_IN_BLANK) || item.getItemData().getTypeId().equals(TypeIfc.FILL_IN_NUMERIC))) {\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(convertFormattedText(item.getItemData().getText()));\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t}\n\t\t\t\tif (item.getItemData().getItemAttachmentList() != null && item.getItemData().getItemAttachmentList().size() > 0) {\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"attachments\"));\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tList itemAttachmentList = item.getItemData().getItemAttachmentList();\n\t\t\t\t\tIterator itemAttachmentIter = itemAttachmentList.iterator();\n\t\t\t\t\twhile (itemAttachmentIter.hasNext()) {\n\t\t\t\t\t\tPublishedItemAttachment itemAttachment = (PublishedItemAttachment) itemAttachmentIter.next();\n\t\t\t\t\t\tif (itemAttachment.getMimeType().equalsIgnoreCase(\"image/jpeg\") || \n\t\t\t\t\t\t\titemAttachment.getMimeType().equalsIgnoreCase(\"image/pjpeg\") || \n\t\t\t\t\t\t\titemAttachment.getMimeType().equalsIgnoreCase(\"image/gif\") || \n\t\t\t\t\t\t\titemAttachment.getMimeType().equalsIgnoreCase(\"image/png\")) {\n\t\t\t\t\t\t\tcontentBuffer.append(\"  <img src=\\\"/samigo\");\n\t\t\t\t\t\t\tcontentBuffer.append(itemAttachment.getResourceId());\n\t\t\t\t\t\t\tcontentBuffer.append(\"\\\" />\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcontentBuffer.append(\"  \");\n\t\t\t\t\t\t\tcontentBuffer.append(itemAttachment.getFilename());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.FILL_IN_BLANK) || item.getItemData().getTypeId().equals(TypeIfc.FILL_IN_NUMERIC)) {\n\t\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.FILL_IN_NUMERIC)) {\n\t\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\t\tcontentBuffer.append(deliveryMessages.getString(\"fin_accepted_instruction\"));\n\t\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\t}\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(convertFormattedText(item.getItemData().getText()));\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t}\n\n\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.AUDIO_RECORDING)) {\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"time_allowed_seconds\"));\n\t\t\t\t\tcontentBuffer.append(\":\");\n\t\t\t\t\tcontentBuffer.append(item.getItemData().getDuration());\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"number_of_tries\"));\n\t\t\t\t\tcontentBuffer.append(\":\");\n\t\t\t\t\tcontentBuffer.append(item.getItemData().getTriesAllowed());\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t}\n\n\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.FILE_UPLOAD)) {\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"upload_instruction\"));\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"file\"));\n\t\t\t\t\tcontentBuffer.append(\":\");\n\t\t\t\t\tcontentBuffer.append(\"<input type='text' size='50' />\");\n\t\t\t\t\tcontentBuffer.append(\"<input type='button' value='\");\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"browse\"));\n\t\t\t\t\tcontentBuffer.append(\":' />\");\n\t\t\t\t\tcontentBuffer.append(\"<input type='button' value='\");\n\t\t\t\t\tcontentBuffer.append(printMessages.getString(\"upload\"));\n\t\t\t\t\tcontentBuffer.append(\":' />\");\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t}\n\n\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT) ||\n\t\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE) ||\n\t\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE_SURVEY) ||\n\t\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT_SINGLE_SELECTION) ||\n\t\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.TRUE_FALSE) ||\n\t\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MATRIX_CHOICES_SURVEY)) {\n\n\t\t\t\t\tList question = item.getItemData().getItemTextArraySorted();\n\t\t\t\t\tfor (int k=0; k<question.size(); k++) {\n\t\t\t\t\t\tPublishedItemText itemtext = (PublishedItemText)question.get(k);\n\t\t\t\t\t\tArrayList answers = itemtext.getAnswerArraySorted();\n\n\t\t\t\t\t\tcontentBuffer.append(\"<table cols='20' width='100%'>\");\n\t\t\t\t\t\tfor (int t=0; t<answers.size(); t++) {\n\t\t\t\t\t\t\tPublishedAnswer answer = (PublishedAnswer)answers.get(t);\n\t\t\t\t\t\t\tif (StringUtils.isBlank(answer.getText())) break;\n\t\t\t\t\t\t\tcontentBuffer.append(\"<tr>\");\n\t\t\t\t\t\t\tcontentBuffer.append(getContentAnswer(item, answer, printSetting));\n\t\t\t\t\t\t\tcontentBuffer.append(\"<\/tr>\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontentBuffer.append(\"<\/table>\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.MATCHING)) {\n\t\t\t\t\tcontentBuffer.append(\"<table cols='20' width='100%'>\");\n\t\t\t\t\tList question = item.getMatchingArray();\n\t\t\t\t\tfor (int k=0; k<question.size(); k++) {\n\t\t\t\t\t\tMatchingBean matching = (MatchingBean)question.get(k);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// if there are distractors or shared matches, answers will\n\t\t\t\t\t\t// have fewer answers that matches.\n\t\t\t\t\t\tString answer = \"\";\n\t\t\t\t\t\tif (k < item.getAnswers().size()) {\n\t\t\t\t\t\t\tanswer = (String)item.getAnswers().get(k);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (matching.getText() == null) break;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontentBuffer.append(\"<tr><td colspan='10'>\");\n\t\t\t\t\t\tcontentBuffer.append(convertFormattedText(matching.getText()));\n\t\t\t\t\t\tcontentBuffer.append(\"<\/td>\");\n\t\t\t\t\t\tcontentBuffer.append(\"<td colspan='10'>\");\n\t\t\t\t\t\tcontentBuffer.append(convertFormattedText(answer));\n\t\t\t\t\t\tcontentBuffer.append(\"<\/td><\/tr>\");\n\t\t\t\t\t}\n\n\t\t\t\t\tcontentBuffer.append(\"<\/table>\");\n\t\t\t\t}\n\n\t\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.EXTENDED_MATCHING_ITEMS)) {\n\t\t\t\t\tcontentBuffer.append(\"<table cols='20' width='100%'>\");\n\n\t\t\t\t\tcontentBuffer.append(\"<tr><td colspan='20'>\");\n\t\t\t\t\tcontentBuffer.append(item.getItemData().getThemeText());\n\t\t\t\t\tcontentBuffer.append(\"<\/td><\/tr>\");\n\n\t\t\t\t\tif (item.getItemData().getIsAnswerOptionsSimple()) {\n\t\t\t\t\t\tList<AnswerIfc> emiAnswerOptions = item.getItemData().getEmiAnswerOptions();\n\t\t\t\t\t\tfor (AnswerIfc answerIfc : emiAnswerOptions) {\n\t\t\t\t\t\t\tcontentBuffer.append(\"<tr><td colspan='20'>\");\n\t\t\t\t\t\t\tcontentBuffer.append(answerIfc.getLabel() + \". \" + answerIfc.getText());\n\t\t\t\t\t\t\tcontentBuffer.append(\"<\/td><\/tr>\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.getItemData().getIsAnswerOptionsRich()) {\n\t\t\t\t\t\tcontentBuffer.append(\"<tr><td colspan='20'>\");\n\t\t\t\t\t\tcontentBuffer.append(item.getItemData().getEmiAnswerOptionsRichText());\n\t\t\t\t\t\tcontentBuffer.append(\"<\/td><\/tr>\");\n\t\t\t\t\t}\n\n\t\t\t\t\tcontentBuffer.append(\"<tr><td colspan='20'>\");\n\t\t\t\t\tcontentBuffer.append(item.getItemData().getLeadInText());\n\t\t\t\t\tcontentBuffer.append(\"<\/td><\/tr>\");\n\n\t\t\t\t\tList<ItemTextIfc> questionAnswerCombinations = item.getItemData().getEmiQuestionAnswerCombinations();\n\n\t\t\t\t\tfor (ItemTextIfc itemTextIfc : questionAnswerCombinations) {\n\t\t\t\t\t\tif (!itemTextIfc.getText().isEmpty()) {\n\t\t\t\t\t\t\tcontentBuffer.append(\"<tr><td colspan='20'>\");\n\t\t\t\t\t\t\tcontentBuffer.append(itemTextIfc.getSequence() + \". \" + itemTextIfc.getText() + \"  ____\");\n\t\t\t\t\t\t\tcontentBuffer.append(\"<\/td><\/tr>\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(\"<\/table>\");\n\t\t\t\t}\n\t\t\t\tif (printSetting.getShowKeys().booleanValue() || printSetting.getShowKeysFeedback().booleanValue()) {\n\t\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\t\tcontentBuffer.append(getContentQuestion(item, printSetting));\n\t\t\t\t}\n\n\t\t\t\tpdfItem.setContent(contentBuffer.toString());\n\n\t\t\t\tif (legacy != null) {\n\t\t\t\t\tpdfItem.setMeta(legacy.toString()); \n\t\t\t\t}\n\n\t\t\t\tpdfItems.add(pdfItem);\n\t\t\t}\n\n\t\t\tpdfPart.setQuestions(pdfItems);\n\t\t\tpdfPart.setResources(resources);\n\t\t\tif (resources.size() > 0)\n\t\t\t\tpdfPart.setHasResources(Boolean.valueOf(true));\n\t\t\tpdfParts.add(pdfPart);\n\n\t\t}\n\n\t\t//set the new colleciton of PDF beans to be the contents of the pdfassessment\n\t\tsetParts(pdfParts);\n\n\t\tsetTitle(deliveryBean.getAssessmentTitle());\n\n\t\treturn \"print\";\n\t}","commit_id":"12424a2614ec0d0d96d409569fe1f51b97c464f7","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * sets the pdf assessments intro\n\t * @param intro in html\n\t */\n\tpublic void setIntro(String intro) {\n\t\tthis.intro = FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(FormattedText.unEscapeHtml(intro)));\n\t}","id":1961,"modified_method":"/**\n\t * sets the pdf assessments intro\n\t * @param intro in html\n\t */\n\tpublic void setIntro(String intro) {\n\t\tthis.intro = convertFormattedText(FormattedText.unEscapeHtml(intro));\n\t}","commit_id":"12424a2614ec0d0d96d409569fe1f51b97c464f7","url":"https://github.com/sakaiproject/sakai"},{"original_method":"private String getContentQuestion(ItemContentsBean item, PrintSettingsBean printSetting) {\n\t\tStringBuffer contentBuffer = new StringBuffer(\"<h6>\");\n\t\t\n\t\tcontentBuffer.append(printMessages.getString(\"answer_point\"));\n\t\tcontentBuffer.append(\": \");\n\t\tcontentBuffer.append(item.getItemData().getScore());\n\t\tcontentBuffer.append(\" \");\n\t\tcontentBuffer.append(authorMessages.getString(\"points_lower_case\"));\n\n\t\tif (!item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE_SURVEY) &&\n\t\t\t\t!item.getItemData().getTypeId().equals(TypeIfc.AUDIO_RECORDING) &&\n\t\t\t\t!item.getItemData().getTypeId().equals(TypeIfc.FILE_UPLOAD)) {\n\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.ESSAY_QUESTION)) {\n\t\t\t\tcontentBuffer.append(printMessages.getString(\"answer_model\"));\n\t\t\t\tcontentBuffer.append(\": \");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontentBuffer.append(printMessages.getString(\"answer_key\"));\n\t\t\t\tcontentBuffer.append(\": \");\n\t\t\t}\n\t\t\t\t\n\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.FILL_IN_BLANK) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.FILL_IN_NUMERIC) || \n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MATCHING))\n\t\t\t\tcontentBuffer.append(item.getKey());\n\t\t\telse if (item.getItemData().getTypeId().equals(TypeIfc.ESSAY_QUESTION)) {\n\t\t\t\tif (item.getKey() != null && !item.getKey().equals(\"\") && !item.getKey().equals(\"null\"))\n\t\t\t\t\tcontentBuffer.append(item.getKey());\n\t\t\t\telse\n\t\t\t\t\tcontentBuffer.append(\"--------\");\n\t\t\t}\n\t\t\telse\n\t\t\t\tcontentBuffer.append(item.getItemData().getAnswerKey());\n\t\t}\n\n\t\tif (printSetting.getShowKeysFeedback().booleanValue()) {\n\n\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.ESSAY_QUESTION) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.AUDIO_RECORDING) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.FILE_UPLOAD)) {\n\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\tcontentBuffer.append(commonMessages.getString(\"feedback\"));\n\t\t\t\tcontentBuffer.append(\": \");\n\t\t\t\tif (item.getItemData().getGeneralItemFeedback() != null && !item.getItemData().getGeneralItemFeedback().equals(\"\"))\n\t\t\t\t\tcontentBuffer.append(FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(item.getItemData().getGeneralItemFeedback())));\n\t\t\t\telse \n\t\t\t\t\tcontentBuffer.append(\"--------\");\n\t\t\t}\n\n\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT_SINGLE_SELECTION) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.TRUE_FALSE) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.FILL_IN_BLANK) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.FILL_IN_NUMERIC) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MATCHING)) {\n\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\tcontentBuffer.append(printMessages.getString(\"correct_feedback\"));\n\t\t\t\tcontentBuffer.append(\": \");\n\t\t\t\tif (item.getItemData().getCorrectItemFeedback() != null && !item.getItemData().getCorrectItemFeedback().equals(\"\"))\n\t\t\t\t\tcontentBuffer.append(FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(item.getItemData().getCorrectItemFeedback())));\n\t\t\t\telse \n\t\t\t\t\tcontentBuffer.append(\"--------\");\n\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\tcontentBuffer.append(printMessages.getString(\"incorrect_feedback\"));\n\t\t\t\tcontentBuffer.append(\": \");\n\t\t\t\tif (item.getItemData().getInCorrectItemFeedback() != null && !item.getItemData().getInCorrectItemFeedback().equals(\"\"))\n\t\t\t\t\tcontentBuffer.append(FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(item.getItemData().getInCorrectItemFeedback())));\n\t\t\t\telse \n\t\t\t\t\tcontentBuffer.append(\"--------\");\n\t\t\t}\n\n\t\t}\n\t\tcontentBuffer.append(\"<\/h6>\");\n\t\treturn contentBuffer.toString();\n\t}","id":1962,"modified_method":"private String getContentQuestion(ItemContentsBean item, PrintSettingsBean printSetting) {\n\t\tStringBuffer contentBuffer = new StringBuffer(\"<h6>\");\n\t\t\n\t\tcontentBuffer.append(printMessages.getString(\"answer_point\"));\n\t\tcontentBuffer.append(\": \");\n\t\tcontentBuffer.append(item.getItemData().getScore());\n\t\tcontentBuffer.append(\" \");\n\t\tcontentBuffer.append(authorMessages.getString(\"points_lower_case\"));\n\n\t\tif (!item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE_SURVEY) &&\n\t\t\t\t!item.getItemData().getTypeId().equals(TypeIfc.AUDIO_RECORDING) &&\n\t\t\t\t!item.getItemData().getTypeId().equals(TypeIfc.FILE_UPLOAD)) {\n\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.ESSAY_QUESTION)) {\n\t\t\t\tcontentBuffer.append(printMessages.getString(\"answer_model\"));\n\t\t\t\tcontentBuffer.append(\": \");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontentBuffer.append(printMessages.getString(\"answer_key\"));\n\t\t\t\tcontentBuffer.append(\": \");\n\t\t\t}\n\t\t\t\t\n\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.FILL_IN_BLANK) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.FILL_IN_NUMERIC) || \n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MATCHING))\n\t\t\t\tcontentBuffer.append(item.getKey());\n\t\t\telse if (item.getItemData().getTypeId().equals(TypeIfc.ESSAY_QUESTION)) {\n\t\t\t\tif (item.getKey() != null && !item.getKey().equals(\"\") && !item.getKey().equals(\"null\"))\n\t\t\t\t\tcontentBuffer.append(item.getKey());\n\t\t\t\telse\n\t\t\t\t\tcontentBuffer.append(\"--------\");\n\t\t\t}\n\t\t\telse\n\t\t\t\tcontentBuffer.append(item.getItemData().getAnswerKey());\n\t\t}\n\n\t\tif (printSetting.getShowKeysFeedback().booleanValue()) {\n\n\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.ESSAY_QUESTION) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.AUDIO_RECORDING) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.FILE_UPLOAD)) {\n\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\tcontentBuffer.append(commonMessages.getString(\"feedback\"));\n\t\t\t\tcontentBuffer.append(\": \");\n\t\t\t\tif (item.getItemData().getGeneralItemFeedback() != null && !item.getItemData().getGeneralItemFeedback().equals(\"\"))\n\t\t\t\t\tcontentBuffer.append(convertFormattedText(item.getItemData().getGeneralItemFeedback()));\n\t\t\t\telse \n\t\t\t\t\tcontentBuffer.append(\"--------\");\n\t\t\t}\n\n\t\t\tif (item.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CHOICE) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MULTIPLE_CORRECT_SINGLE_SELECTION) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.TRUE_FALSE) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.FILL_IN_BLANK) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.FILL_IN_NUMERIC) ||\n\t\t\t\t\titem.getItemData().getTypeId().equals(TypeIfc.MATCHING)) {\n\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\tcontentBuffer.append(printMessages.getString(\"correct_feedback\"));\n\t\t\t\tcontentBuffer.append(\": \");\n\t\t\t\tif (item.getItemData().getCorrectItemFeedback() != null && !item.getItemData().getCorrectItemFeedback().equals(\"\"))\n\t\t\t\t\tcontentBuffer.append(convertFormattedText(item.getItemData().getCorrectItemFeedback()));\n\t\t\t\telse \n\t\t\t\t\tcontentBuffer.append(\"--------\");\n\t\t\t\tcontentBuffer.append(\"<br />\");\n\t\t\t\tcontentBuffer.append(printMessages.getString(\"incorrect_feedback\"));\n\t\t\t\tcontentBuffer.append(\": \");\n\t\t\t\tif (item.getItemData().getInCorrectItemFeedback() != null && !item.getItemData().getInCorrectItemFeedback().equals(\"\"))\n\t\t\t\t\tcontentBuffer.append(convertFormattedText(item.getItemData().getInCorrectItemFeedback()));\n\t\t\t\telse \n\t\t\t\t\tcontentBuffer.append(\"--------\");\n\t\t\t}\n\n\t\t}\n\t\tcontentBuffer.append(\"<\/h6>\");\n\t\treturn contentBuffer.toString();\n\t}","commit_id":"12424a2614ec0d0d96d409569fe1f51b97c464f7","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public ConstantLocator( final LocationData locDat ) {\n        locationData = locDat;\n    }","id":1963,"modified_method":"public ConstantLocator(final LocationData locationData) {\n        this.locationData = locationData;\n    }","commit_id":"68be6c369b80b1050d8c06293106aab06c19eca0","url":"https://github.com/orbeon/orbeon-forms"},{"original_method":"public void readImpl(PipelineContext context, ContentHandler contentHandler) {\n            try {\n                final State state = (State) getState(context);\n                if (state.store == null) {\n                    // Tee hasn't been read yet\n\n                    if (state.stateWasClearedDebug) {\n                        final ProcessorOutput output = getInputByName(INPUT_DATA).getOutput();\n                        logger.error(\"Tee state was cleared and re-read for output: \" + output.getName());\n//                        System.out.println(\"xxxx Tee state was cleared and re-read: output id: \" + output.getName());\n                    }\n\n                    // Create SAXStore and read input through it\n                    final ProcessorInput input = getInputByName(INPUT_DATA);\n                    state.store = new SAXStore(contentHandler);\n                    readInputAsSAX(context, input, state.store);\n                } else {\n                    state.store.replay(contentHandler);\n                }\n\n                // If this output can be read only once, increase read count\n                if (!isMultipleReads) {\n                    state.readCount++;\n                }\n\n                // If possible, free the SAXStore after the last read\n                freeSAXStoreIfNeeded(state);\n\n            } catch (SAXException e) {\n                throw new OXFException(e);\n            }\n        }","id":1964,"modified_method":"public void readImpl(PipelineContext context, ContentHandler contentHandler) {\n            try {\n                final State state = (State) getState(context);\n                if (state.store == null) {\n                    // Tee hasn't been read yet\n\n                    if (state.stateWasCleared) {\n                        final ProcessorOutput output = getInputByName(INPUT_DATA).getOutput();\n                        logger.error(\"Tee state was cleared and re-read for output: \" + output.getName());\n                    }\n\n                    // Create SAXStore and read input through it\n                    final ProcessorInput input = getInputByName(INPUT_DATA);\n                    state.store = new SAXStore(contentHandler);\n                    readInputAsSAX(context, input, state.store);\n                } else {\n                    state.store.replay(contentHandler);\n                }\n\n                // If this output can be read only once, increase read count\n                if (!isMultipleReads) {\n                    state.readCount++;\n                }\n\n                // If possible, free the SAXStore after the last read\n                freeSAXStoreIfNeeded(state);\n\n            } catch (SAXException e) {\n                throw new OXFException(e);\n            }\n        }","commit_id":"68be6c369b80b1050d8c06293106aab06c19eca0","url":"https://github.com/orbeon/orbeon-forms"},{"original_method":"private void freeSAXStoreIfNeeded(State state) {\n            if (state.readCount == getOutputCount()) {\n                state.store = null;\n                state.stateWasClearedDebug = true;\n\n                final ProcessorOutput output = getInputByName(INPUT_DATA).getOutput();\n                logger.debug(\"Freed SAXStore for output id: \" + output.getId());\n//                System.out.println(\"xxxx freed SAXStore \" + output.getName());\n            }\n        }","id":1965,"modified_method":"private void freeSAXStoreIfNeeded(State state) {\n            if (state.readCount == getOutputCount()) {\n                final SAXStore freedStore = state.store;\n                state.store = null;\n                state.stateWasCleared = true;\n\n                final ProcessorOutput output = getInputByName(INPUT_DATA).getOutput();\n                if (logger.isDebugEnabled()) {\n                    final long saxStoreSize = freedStore.getApproximateSize();\n                    logger.debug(\"Freed SAXStore for output id: \" + output.getName() + \"; approximate size: \" + saxStoreSize + \" bytes\");\n                }\n            }\n        }","commit_id":"68be6c369b80b1050d8c06293106aab06c19eca0","url":"https://github.com/orbeon/orbeon-forms"},{"original_method":"public ProcessorOutput createOutput(String name) {\n        ProcessorOutput output = new ProcessorImpl.CacheableTransformerOutputImpl(getClass(), name) {\n            public void readImpl(PipelineContext pipelineContext, ContentHandler contentHandler) {\n                TemplatesInfo templatesInfo = null;\n                TransformerHandler transformerHandler = null;\n                try {\n                    // Get URI references from cache\n                    KeyValidity configKeyValidity = getInputKeyValidity(pipelineContext, INPUT_CONFIG);\n                    URIReferences uriReferences = getURIReferences(pipelineContext, configKeyValidity);\n\n                    // Get transformer from cache\n                    if (uriReferences != null) {\n                        // FIXME: this won't depend on the transformer input.\n                        KeyValidity stylesheetKeyValidity = createStyleSheetKeyValidity(pipelineContext, configKeyValidity, uriReferences);\n                        if (stylesheetKeyValidity != null)\n                            templatesInfo = (TemplatesInfo) ObjectCache.instance()\n                                    .findValid(pipelineContext, stylesheetKeyValidity.key, stylesheetKeyValidity.validity);\n                    }\n\n                    // Get transformer attributes if any\n                    Map attributes = null;\n                    {\n                        // Read attributes input only if connected\n                        if (getConnectedInputs().get(INPUT_ATTRIBUTES) != null) {\n                            // Read input as an attribute Map and cache it\n                            attributes = (Map) readCacheInputAsObject(pipelineContext, getInputByName(INPUT_ATTRIBUTES), new CacheableInputReader() {\n                                public Object read(PipelineContext context, ProcessorInput input) {\n                                    final Document preferencesDocument = readInputAsDOM4J(context, input);\n                                    final PropertyStore propertyStore = new PropertyStore(preferencesDocument);\n                                    final PropertySet propertySet = propertyStore.getGlobalPropertySet();\n                                    return propertySet.getObjectMap();\n                                }\n                            });\n                        }\n                    }\n\n                    // Output location mode\n                    final String outputLocationMode = getPropertySet().getString(OUTPUT_LOCATION_MODE_PROPERTY, OUTPUT_LOCATION_MODE_DEFAULT);\n                    final boolean isDumbOutputLocation = OUTPUT_LOCATION_DUMB.equals(outputLocationMode);\n                    final boolean isSmartOutputLocation = OUTPUT_LOCATION_SMART.equals(outputLocationMode);\n                    if (isSmartOutputLocation) {\n                        // Create new HashMap as we don't want to change the one in cache\n                        attributes = (attributes == null) ? new HashMap() : new HashMap(attributes);\n                        // Set attributes for Saxon source location\n                        attributes.put(FeatureKeys.LINE_NUMBERING, Boolean.TRUE);\n                        attributes.put(FeatureKeys.COMPILE_WITH_TRACING, Boolean.TRUE);\n                    }\n\n                    // Create transformer if we did not find one in cache\n                    if (templatesInfo == null) {\n                        // Get transformer configuration\n                        Node config = readCacheInputAsDOM4J(pipelineContext, INPUT_TRANSFORMER);\n                        String transformerClass = XPathUtils.selectStringValueNormalize(config, \"/config/class\");\n                        // Create transformer\n                        templatesInfo = createTransformer(pipelineContext, transformerClass, attributes);\n                    }\n\n                    // Create transformer handler and set output writer for Saxon\n                    StringWriter saxonStringWriter = null;\n                    final StringErrorListener errorListener = new StringErrorListener(logger);\n                    transformerHandler = TransformerUtils.getTransformerHandler(templatesInfo.templates, templatesInfo.transformerClass, attributes);\n\n                    final Transformer transformer = transformerHandler.getTransformer();\n                    final TransformerURIResolver transformerURIResolver = new TransformerURIResolver(XSLTTransformer.this, pipelineContext, INPUT_DATA, URLGenerator.DEFAULT_HANDLE_XINCLUDE);\n                    transformer.setURIResolver(transformerURIResolver);\n                    transformer.setErrorListener(errorListener);\n                    if (isSmartOutputLocation)\n                        transformer.setOutputProperty(SaxonOutputKeys.SUPPLY_SOURCE_LOCATOR, \"yes\");\n\n                    final String transformerClassName = transformerHandler.getTransformer().getClass().getName();\n\n                    // NOTE: 2007-07-05 MK suggests that since we depend on Saxon anyway, we shouldn't use reflection\n                    // here but directly the Saxon classes to avoid the cost of reflection.\n\n                    // Well, in fact if we really want to test on the two classes, we probably need to use reflection.\n                    // org.orbeon.saxon.Controller will be there for sure, but not net.sf.saxon.Controller.\n                    if (transformerClassName.equals(\"net.sf.saxon.Controller\") || transformerClassName.equals(\"org.orbeon.saxon.Controller\")) {\n                        saxonStringWriter = new StringWriter();\n                        final Object saxonTransformer = transformerHandler.getTransformer();\n                        final Method getMessageEmitter = saxonTransformer.getClass().getMethod(\"getMessageEmitter\", new Class[]{});\n                        Object messageEmitter = getMessageEmitter.invoke(saxonTransformer, new Object[]{});\n                        if (messageEmitter == null) {\n                            // TODO: this doesn't work w/ Saxon 9 because makeMessageEmitter() is private\n                            Method makeMessageEmitter = saxonTransformer.getClass().getMethod(\"makeMessageEmitter\", new Class[]{});\n                            messageEmitter = makeMessageEmitter.invoke(saxonTransformer, new Object[]{});\n                        }\n                        final Method setWriter = messageEmitter.getClass().getMethod(\"setWriter\", new Class[]{Writer.class});\n                        setWriter.invoke(messageEmitter, new Object[]{saxonStringWriter});\n                    }\n\n                    // Fallback location data\n                    final LocationData processorLocationData = getLocationData();\n\n                    // Output filter to fix-up SAX stream and handle location data if needed\n                    final SAXResult saxResult = new SAXResult(new SimpleForwardingContentHandler(contentHandler) {\n\n                        private Locator inputLocator;\n                        private OutputLocator outputLocator;\n                        private Stack startElementLocationStack;\n\n                        class OutputLocator implements Locator {\n\n                            private LocationData currentLocationData;\n\n                            public String getPublicId() {\n                                return (currentLocationData != null) ? currentLocationData.getPublicID() : inputLocator.getPublicId();\n                            }\n\n                            public String getSystemId() {\n                                return (currentLocationData != null) ? currentLocationData.getSystemID() : inputLocator.getSystemId();\n                            }\n\n                            public int getLineNumber() {\n                                return (currentLocationData != null) ? currentLocationData.getLine() : inputLocator.getLineNumber();\n                            }\n\n                            public int getColumnNumber() {\n                                return (currentLocationData != null) ? currentLocationData.getCol() : inputLocator.getColumnNumber();\n                            }\n\n                            public void setLocationData(LocationData locationData) {\n                                this.currentLocationData = locationData;\n                            }\n                        }\n\n                        // Saxon happens to issue such prefix mappings from time to time. Those\n                        // cause issues later down the chain, and anyway serialize to incorrect XML\n                        // if xmlns:xmlns=\"...\" gets generated. This appears to happen when Saxon\n                        // uses the Copy() instruction. It may be that the source is then\n                        // incorrect, but we haven't traced this further. It may also simply be a\n                        // bug in Saxon.\n                        public void startPrefixMapping(String s, String s1) throws SAXException {\n                            if (\"xmlns\".equals(s)) {\n                                // TODO: This may be an old Saxon bug which doesn't occur anymore. Try to see if it occurs again.\n                                throw new IllegalArgumentException(\"xmlns\");\n//                                return;\n                            }\n                            super.startPrefixMapping(s, s1);\n                        }\n\n                        public void setDocumentLocator(final Locator locator) {\n                            this.inputLocator = locator;\n                            if (isSmartOutputLocation) {\n                                this.outputLocator = new OutputLocator();\n                                this.startElementLocationStack = new Stack();\n                                super.setDocumentLocator(this.outputLocator);\n                            } else if (isDumbOutputLocation) {\n                                super.setDocumentLocator(this.inputLocator);\n                            }\n                        }\n\n                        public void startDocument() throws SAXException {\n                            // Try to set fallback Locator\n                            if (((outputLocator != null && outputLocator.getSystemId() == null) || (inputLocator != null && inputLocator.getSystemId() == null))\n                                    && isDumbOutputLocation && processorLocationData != null) {\n                                final Locator locator = new ConstantLocator(processorLocationData);\n                                super.setDocumentLocator(locator);\n                            }\n                            super.startDocument();\n                        }\n\n                        public void endDocument() throws SAXException {\n                            if (getContentHandler() == null) {\n                                // Hack to test if Saxon outputs more than one endDocument() event\n                                logger.warn(\"XSLT transformer attempted to call endDocument() more than once.\");\n                                return;\n                            }\n                            super.endDocument();\n                        }\n\n                        public void startElement(String uri, String localname, String qName, Attributes attributes) throws SAXException {\n                            if (outputLocator != null) {\n                                final LocationData locationData = findSourceElementLocationData(uri, localname);\n                                outputLocator.setLocationData(locationData);\n                                startElementLocationStack.push(locationData);\n                                super.startElement(uri, localname, qName, attributes);\n                                outputLocator.setLocationData(null);\n                            } else {\n                                super.startElement(uri, localname, qName, attributes);\n                            }\n                        }\n\n\n                        public void endElement(String uri, String localname, String qName) throws SAXException {\n                            if (outputLocator != null) {\n                                // Here we do a funny thing: since Saxon does not provide location data on endElement(), we use that of startElement()\n                                final LocationData locationData = (LocationData) startElementLocationStack.peek();\n                                outputLocator.setLocationData(locationData);\n                                super.endElement(uri, localname, qName);\n                                outputLocator.setLocationData(null);\n                                startElementLocationStack.pop();\n                            } else {\n                                super.endElement(uri, localname, qName);\n                            }\n                        }\n\n                        public void characters(char[] chars, int start, int length) throws SAXException {\n                            if (outputLocator != null) {\n                                final LocationData locationData = findSourceCharacterLocationData();\n                                outputLocator.setLocationData(locationData);\n                                super.characters(chars, start, length);\n                                outputLocator.setLocationData(null);\n                            } else {\n                                super.characters(chars, start, length);\n                            }\n                        }\n\n                        private LocationData findSourceElementLocationData(String uri, String localname) {\n                            if (inputLocator instanceof ContentHandlerProxyLocator) {\n                                final Stack stack = ((ContentHandlerProxyLocator) inputLocator).getContextItemStack();\n\n                                for (int i = stack.size() - 1; i >= 0; i--) {\n                                    final Item currentItem = (Item) stack.get(i);\n                                    if (currentItem instanceof NodeInfo) {\n                                        final NodeInfo currentNodeInfo = (NodeInfo) currentItem;\n                                        if (currentNodeInfo.getNodeKind() == org.w3c.dom.Document.ELEMENT_NODE\n                                                && currentNodeInfo.getLocalPart().equals(localname)\n                                                && currentNodeInfo.getURI().equals(uri)) {\n                                            // Very probable match...\n                                            return new LocationData(currentNodeInfo.getSystemId(), currentNodeInfo.getLineNumber(), -1);\n                                        }\n                                    }\n                                }\n                            }\n                            return null;\n                        }\n\n                        private LocationData findSourceCharacterLocationData() {\n                            if (inputLocator instanceof ContentHandlerProxyLocator) {\n                                final Stack stack = ((ContentHandlerProxyLocator) inputLocator).getContextItemStack();\n\n                                for (int i = stack.size() - 1; i >= 0; i--) {\n                                    final Item currentItem = (Item) stack.get(i);\n                                    if (currentItem instanceof NodeInfo) {\n                                        final NodeInfo currentNodeInfo = (NodeInfo) currentItem;\n//                                        if (currentNodeInfo.getNodeKind() == org.w3c.dom.Document.TEXT_NODE) {\n                                            // Possible match\n                                            return new LocationData(currentNodeInfo.getSystemId(), currentNodeInfo.getLineNumber(), -1);\n//                                        }\n                                    }\n                                }\n                            }\n                            return null;\n                        }\n                    });\n\n                    if (processorLocationData != null) {\n                        final String processorSystemId = processorLocationData.getSystemID();\n                        //saxResult.setSystemId(sysID); // NOT SURE WHY WE DID THIS\n                        // TODO: use source document system ID, not stylesheet system ID\n                        transformerHandler.setSystemId(processorSystemId);\n                    }\n                    transformerHandler.setResult(saxResult);\n\n                    // Execute transformation\n                    try {\n                        if (XSLTTransformer.this.getConnectedInputs().size() > 3) {\n                            // When other inputs are connected, they can be read\n                            // with the doc() function in XSLT. Reading those\n                            // documents might happen before the whole input\n                            // document is read, which is not compatible with\n                            // our processing model. So in this case, we first\n                            // read the data in a SAX store.\n                            final SAXStore dataSaxStore = new SAXStore();\n                            readInputAsSAX(pipelineContext, INPUT_DATA, dataSaxStore);\n                            dataSaxStore.replay(transformerHandler);\n                        } else {\n                            readInputAsSAX(pipelineContext, INPUT_DATA, transformerHandler);\n                        }\n                    } finally {\n\n                        // Log message from Saxon\n                        if (saxonStringWriter != null) {\n                            String message = saxonStringWriter.toString();\n                            if (message.length() > 0)\n                                logger.info(message);\n                        }\n\n                        // Make sure we don't keep stale references to URI resolver objects\n                        transformer.setURIResolver(null);\n                        transformerURIResolver.destroy();\n                    }\n\n                    // Check whether some errors were added\n                    if (errorListener.hasErrors()) {\n                        final List errors = errorListener.getErrors();\n                        if (errors != null) {\n                            ValidationException ve = null;\n                            for (Iterator i = errors.iterator(); i.hasNext();) {\n                                final LocationData currentLocationData = (LocationData) i.next();\n\n                                if (ve == null)\n                                    ve = new ValidationException(\"Errors while executing transformation\", currentLocationData);\n                                else\n                                    ve.addLocationData(currentLocationData);\n                            }\n                        }\n                    }\n                } catch (TransformerException e) {\n                    // This exception occurred during transformation (we make sure creating the transformer wraps into ValidationException or OXFException)\n\n                    // Add location data of TransformerException if possible\n                    final LocationData transformerLocationData =\n                            (e.getLocator() != null && e.getLocator().getSystemId() != null)\n                                ? new LocationData(e.getLocator())\n                                : (templatesInfo.systemId != null)\n                                    ? new LocationData(templatesInfo.systemId, -1, -1)\n                                    : null;\n\n                    throw new ValidationException(e, new ExtendedLocationData(transformerLocationData, \"executing XSLT transformation\"));\n                } catch (Exception e) {\n\n                    if (templatesInfo != null) {\n                        // Transformer was created, this exception occurred during transformation\n\n                        // Add template location data if possible\n                        final LocationData templatesLocationData = (templatesInfo.systemId != null) ? new LocationData(templatesInfo.systemId, -1, -1) : null;\n                        throw ValidationException.wrapException(e, new ExtendedLocationData(templatesLocationData, \"executing XSLT transformation\"));\n                    } else {\n                        // No transformer was created, this exception occurred while creating the transformer\n                        throw ValidationException.wrapException(e, new ExtendedLocationData((LocationData) null, \"creating XSLT transformer\"));\n                    }\n                }\n            }\n\n            protected boolean supportsLocalKeyValidity() {\n                return true;\n            }\n\n            protected CacheKey getLocalKey(PipelineContext context) {\n                try {\n                    KeyValidity configKeyValidity = getInputKeyValidity(context, INPUT_CONFIG);\n                    URIReferences uriReferences = getURIReferences(context, configKeyValidity);\n                    if (uriReferences == null || uriReferences.hasDynamicDocumentReferences)\n                        return null;\n                    List keys = new ArrayList();\n                    keys.add(configKeyValidity.key);\n                    List allURIReferences = new ArrayList();\n                    allURIReferences.addAll(uriReferences.stylesheetReferences);\n                    allURIReferences.addAll(uriReferences.documentReferences);\n                    for (Iterator i = allURIReferences.iterator(); i.hasNext();) {\n                        URIReference uriReference = (URIReference) i.next();\n                        keys.add(new InternalCacheKey(XSLTTransformer.this, \"xsltURLReference\", URLFactory.createURL(uriReference.context, uriReference.spec).toExternalForm()));\n                    }\n                    return new InternalCacheKey(XSLTTransformer.this, keys);\n                } catch (MalformedURLException e) {\n                    throw new OXFException(e);\n                }\n            }\n\n            protected Object getLocalValidity(PipelineContext context) {\n                try {\n                    KeyValidity configKeyValidity = getInputKeyValidity(context, INPUT_CONFIG);\n                    URIReferences uriReferences = getURIReferences(context, configKeyValidity);\n                    if (uriReferences == null || uriReferences.hasDynamicDocumentReferences)\n                        return null;\n                    List validities = new ArrayList();\n                    validities.add(configKeyValidity.validity);\n                    List allURIReferences = new ArrayList();\n                    allURIReferences.addAll(uriReferences.stylesheetReferences);\n                    allURIReferences.addAll(uriReferences.documentReferences);\n                    for (Iterator i = allURIReferences.iterator(); i.hasNext();) {\n                        URIReference uriReference = (URIReference) i.next();\n                        Processor urlGenerator = new URLGenerator(URLFactory.createURL(uriReference.context, uriReference.spec));\n                        validities.add(((ProcessorOutputImpl) urlGenerator.createOutput(OUTPUT_DATA)).getValidity(context));\n                    }\n                    return validities;\n                } catch (IOException e) {\n                    throw new OXFException(e);\n                }\n            }\n\n            private URIReferences getURIReferences(PipelineContext context, KeyValidity configKeyValidity) {\n                if (configKeyValidity == null)\n                    return null;\n                return (URIReferences) ObjectCache.instance().findValid(context, configKeyValidity.key, configKeyValidity.validity);\n            }\n\n            private KeyValidity createStyleSheetKeyValidity(PipelineContext context, KeyValidity configKeyValidity, URIReferences uriReferences) {\n                try {\n                    if (configKeyValidity == null)\n                        return null;\n\n                    List keys = new ArrayList();\n                    List validities = new ArrayList();\n                    keys.add(configKeyValidity.key);\n                    validities.add(configKeyValidity.validity);\n                    for (Iterator i = uriReferences.stylesheetReferences.iterator(); i.hasNext();) {\n                        URIReference uriReference = (URIReference) i.next();\n                        URL url = URLFactory.createURL(uriReference.context, uriReference.spec);\n                        keys.add(new InternalCacheKey(XSLTTransformer.this, \"xsltURLReference\", url.toExternalForm()));\n                        Processor urlGenerator = new URLGenerator(url);\n                        validities.add(((ProcessorOutputImpl) urlGenerator.createOutput(OUTPUT_DATA)).getValidity(context));//FIXME: can we do better? See URL generator.\n                    }\n\n                    return new KeyValidity(new InternalCacheKey(XSLTTransformer.this, keys), validities);\n                } catch (MalformedURLException e) {\n                    throw new OXFException(e);\n                }\n            }\n\n            /**\n             * Reads the input and creates the JAXP Templates object (wrapped in a Transformer object). While reading\n             * the input, figures out the direct dependencies on other files (URIReferences object), and stores these\n             * two mappings in cache:\n             *\n             * configKey        -> uriReferences\n             * uriReferencesKey -> transformer\n             */\n            private TemplatesInfo createTransformer(PipelineContext pipelineContext, String transformerClass, Map attributes) {\n                StringErrorListener errorListener = new StringErrorListener(logger);\n                final StylesheetForwardingContentHandler topStylesheetContentHandler = new StylesheetForwardingContentHandler();\n                try {\n                    // Create transformer\n                    final TemplatesInfo templatesInfo = new TemplatesInfo();\n                    final List xsltContentHandlers = new ArrayList();\n                    {\n                        // Create SAXSource adding our forwarding content handler\n                        final SAXSource stylesheetSAXSource;\n                        {\n                            xsltContentHandlers.add(topStylesheetContentHandler);\n                            XMLReader xmlReader = new ProcessorOutputXMLReader(pipelineContext, getInputByName(INPUT_CONFIG).getOutput()) {\n                                public void setContentHandler(ContentHandler handler) {\n                                    super.setContentHandler(new TeeContentHandler(Arrays.asList(new Object[]{\n                                            topStylesheetContentHandler, handler})));\n                                }\n                            };\n                            stylesheetSAXSource = new SAXSource(xmlReader, new InputSource());\n                        }\n\n                        // Put listener in context that will be called by URI resolved\n                        pipelineContext.setAttribute(PipelineContext.XSLT_STYLESHEET_URI_LISTENER, new URIResolverListener() {\n                            public ContentHandler getContentHandler() {\n                                StylesheetForwardingContentHandler contentHandler = new StylesheetForwardingContentHandler();\n                                xsltContentHandlers.add(contentHandler);\n                                return contentHandler;\n                            }\n                        });\n                        final TransformerURIResolver uriResolver\n                                = new TransformerURIResolver(XSLTTransformer.this, pipelineContext, INPUT_DATA, URLGenerator.DEFAULT_HANDLE_XINCLUDE);\n                        templatesInfo.templates = TransformerUtils.getTemplates(stylesheetSAXSource, transformerClass, attributes, errorListener, uriResolver);\n                        uriResolver.destroy();\n                        templatesInfo.transformerClass = transformerClass;\n                        templatesInfo.systemId = topStylesheetContentHandler.getSystemId();\n                    }\n\n                    // Update cache\n                    {\n                        // Create uriReferences\n                        URIReferences uriReferences = new URIReferences();\n                        for (Iterator i = xsltContentHandlers.iterator(); i.hasNext();) {\n                            StylesheetForwardingContentHandler contentHandler = (StylesheetForwardingContentHandler) i.next();\n                            uriReferences.hasDynamicDocumentReferences = uriReferences.hasDynamicDocumentReferences\n                                    || contentHandler.getURIReferences().hasDynamicDocumentReferences;\n                            uriReferences.stylesheetReferences.addAll\n                                    (contentHandler.getURIReferences().stylesheetReferences);\n                            uriReferences.documentReferences.addAll\n                                    (contentHandler.getURIReferences().documentReferences);\n                        }\n\n                        // Put in cache: configKey -> uriReferences\n                        KeyValidity configKeyValidty = getInputKeyValidity(pipelineContext, INPUT_CONFIG);\n                        if (configKeyValidty != null)\n                            ObjectCache.instance().add(pipelineContext, configKeyValidty.key, configKeyValidty.validity, uriReferences);\n\n                        // Put in cache: (configKey, uriReferences.stylesheetReferences) -> transformer\n                        KeyValidity stylesheetKeyValidity = createStyleSheetKeyValidity(pipelineContext, configKeyValidty, uriReferences);\n                        if (stylesheetKeyValidity != null)\n                            ObjectCache.instance().add(pipelineContext, stylesheetKeyValidity.key, stylesheetKeyValidity.validity, templatesInfo);\n                    }\n\n                    return templatesInfo;\n\n                } catch (TransformerException e) {\n                    if (errorListener.hasErrors()) {\n                        // Use error messages information and provide location data of first errror\n                        final ValidationException validationException = new ValidationException(errorListener.getMessages(), (LocationData) errorListener.getErrors().get(0));\n                        // If possible add location of top-level stylesheet\n                        if (topStylesheetContentHandler.getSystemId() != null)\n                            validationException.addLocationData(new ExtendedLocationData(new LocationData(topStylesheetContentHandler.getSystemId(), -1, -1), \"creating XSLT transformer\"));\n                        throw validationException;\n                    } else {\n                        // No XSLT errors are available\n                        final LocationData transformerExceptionLocationData\n                            = StringErrorListener.getTransformerExceptionLocationData(e, topStylesheetContentHandler.getSystemId());\n                        if (transformerExceptionLocationData.getSystemID() != null)\n                            throw ValidationException.wrapException(e, new ExtendedLocationData(transformerExceptionLocationData, \"creating XSLT transformer\"));\n                        else\n                            throw new OXFException(e);\n                    }\n\n//                    final ExtendedLocationData extendedLocationData\n//                            = StringErrorListener.getTransformerExceptionLocationData(e, topStylesheetContentHandler.getSystemId());\n//\n//                    final ValidationException ve = new ValidationException(e.getMessage() + \" \" + errorListener.getMessages(), e, extendedLocationData);\n//\n//                    // Append location data gathered from error listener\n//                    if (errorListener.hasErrors()) {\n//                        final List errors = errorListener.getErrors();\n//                        if (errors != null) {\n//                            for (Iterator i = errors.iterator(); i.hasNext();) {\n//                                final LocationData currentLocationData = (LocationData) i.next();\n//                                ve.addLocationData(currentLocationData);\n//                            }\n//                        }\n//                    }\n//                    throw ve;\n                } catch (Exception e) {\n                    if (topStylesheetContentHandler.getSystemId() != null) {\n                        throw ValidationException.wrapException(e, new ExtendedLocationData(topStylesheetContentHandler.getSystemId(), -1, -1, \"creating XSLT transformer\"));\n                    } else {\n                        throw new OXFException(e);\n                    }\n                }\n            }\n\n        };\n        addOutput(name, output);\n        return output;\n    }","id":1966,"modified_method":"public ProcessorOutput createOutput(String name) {\n        ProcessorOutput output = new ProcessorImpl.CacheableTransformerOutputImpl(getClass(), name) {\n            public void readImpl(PipelineContext pipelineContext, ContentHandler contentHandler) {\n                TemplatesInfo templatesInfo = null;\n                TransformerHandler transformerHandler = null;\n                try {\n                    // Get URI references from cache\n                    KeyValidity configKeyValidity = getInputKeyValidity(pipelineContext, INPUT_CONFIG);\n                    URIReferences uriReferences = getURIReferences(pipelineContext, configKeyValidity);\n\n                    // Get transformer from cache\n                    if (uriReferences != null) {\n                        // FIXME: this won't depend on the transformer input.\n                        KeyValidity stylesheetKeyValidity = createStyleSheetKeyValidity(pipelineContext, configKeyValidity, uriReferences);\n                        if (stylesheetKeyValidity != null)\n                            templatesInfo = (TemplatesInfo) ObjectCache.instance()\n                                    .findValid(pipelineContext, stylesheetKeyValidity.key, stylesheetKeyValidity.validity);\n                    }\n\n                    // Get transformer attributes if any\n                    Map attributes = null;\n                    {\n                        // Read attributes input only if connected\n                        if (getConnectedInputs().get(INPUT_ATTRIBUTES) != null) {\n                            // Read input as an attribute Map and cache it\n                            attributes = (Map) readCacheInputAsObject(pipelineContext, getInputByName(INPUT_ATTRIBUTES), new CacheableInputReader() {\n                                public Object read(PipelineContext context, ProcessorInput input) {\n                                    final Document preferencesDocument = readInputAsDOM4J(context, input);\n                                    final PropertyStore propertyStore = new PropertyStore(preferencesDocument);\n                                    final PropertySet propertySet = propertyStore.getGlobalPropertySet();\n                                    return propertySet.getObjectMap();\n                                }\n                            });\n                        }\n                    }\n\n                    // Output location mode\n                    final String outputLocationMode = getPropertySet().getString(OUTPUT_LOCATION_MODE_PROPERTY, OUTPUT_LOCATION_MODE_DEFAULT);\n                    final boolean isDumbOutputLocation = OUTPUT_LOCATION_DUMB.equals(outputLocationMode);\n                    final boolean isSmartOutputLocation = OUTPUT_LOCATION_SMART.equals(outputLocationMode);\n                    if (isSmartOutputLocation) {\n                        // Create new HashMap as we don't want to change the one in cache\n                        attributes = (attributes == null) ? new HashMap() : new HashMap(attributes);\n                        // Set attributes for Saxon source location\n                        attributes.put(FeatureKeys.LINE_NUMBERING, Boolean.TRUE);\n                        attributes.put(FeatureKeys.COMPILE_WITH_TRACING, Boolean.TRUE);\n                    }\n\n                    // Create transformer if we did not find one in cache\n                    if (templatesInfo == null) {\n                        // Get transformer configuration\n                        Node config = readCacheInputAsDOM4J(pipelineContext, INPUT_TRANSFORMER);\n                        String transformerClass = XPathUtils.selectStringValueNormalize(config, \"/config/class\");\n                        // Create transformer\n                        templatesInfo = createTransformer(pipelineContext, transformerClass, attributes);\n                    }\n\n                    // Create transformer handler and set output writer for Saxon\n                    StringWriter saxonStringWriter = null;\n                    final StringErrorListener errorListener = new StringErrorListener(logger);\n                    transformerHandler = TransformerUtils.getTransformerHandler(templatesInfo.templates, templatesInfo.transformerClass, attributes);\n\n                    final Transformer transformer = transformerHandler.getTransformer();\n                    final TransformerURIResolver transformerURIResolver = new TransformerURIResolver(XSLTTransformer.this, pipelineContext, INPUT_DATA, URLGenerator.DEFAULT_HANDLE_XINCLUDE);\n                    transformer.setURIResolver(transformerURIResolver);\n                    transformer.setErrorListener(errorListener);\n                    if (isSmartOutputLocation)\n                        transformer.setOutputProperty(SaxonOutputKeys.SUPPLY_SOURCE_LOCATOR, \"yes\");\n\n                    final String transformerClassName = transformerHandler.getTransformer().getClass().getName();\n\n                    // NOTE: 2007-07-05 MK suggests that since we depend on Saxon anyway, we shouldn't use reflection\n                    // here but directly the Saxon classes to avoid the cost of reflection.\n\n                    // Well, in fact if we really want to test on the two classes, we probably need to use reflection.\n                    // org.orbeon.saxon.Controller will be there for sure, but not net.sf.saxon.Controller.\n                    if (transformerClassName.equals(\"net.sf.saxon.Controller\") || transformerClassName.equals(\"org.orbeon.saxon.Controller\")) {\n                        saxonStringWriter = new StringWriter();\n                        final Object saxonTransformer = transformerHandler.getTransformer();\n                        final Method getMessageEmitter = saxonTransformer.getClass().getMethod(\"getMessageEmitter\", new Class[]{});\n                        Object messageEmitter = getMessageEmitter.invoke(saxonTransformer, new Object[]{});\n                        if (messageEmitter == null) {\n                            // TODO: this doesn't work w/ Saxon 9 because makeMessageEmitter() is private\n                            Method makeMessageEmitter = saxonTransformer.getClass().getMethod(\"makeMessageEmitter\", new Class[]{});\n                            messageEmitter = makeMessageEmitter.invoke(saxonTransformer, new Object[]{});\n                        }\n                        final Method setWriter = messageEmitter.getClass().getMethod(\"setWriter\", new Class[]{Writer.class});\n                        setWriter.invoke(messageEmitter, new Object[]{saxonStringWriter});\n                    }\n\n                    // Fallback location data\n                    final LocationData processorLocationData = getLocationData();\n\n                    // Output filter to fix-up SAX stream and handle location data if needed\n                    final SAXResult saxResult = new SAXResult(new SimpleForwardingContentHandler(contentHandler) {\n\n                        private Locator inputLocator;\n                        private OutputLocator outputLocator;\n                        private Stack startElementLocationStack;\n\n                        class OutputLocator implements Locator {\n\n                            private LocationData currentLocationData;\n\n                            public String getPublicId() {\n                                return (currentLocationData != null) ? currentLocationData.getPublicID() : inputLocator.getPublicId();\n                            }\n\n                            public String getSystemId() {\n                                return (currentLocationData != null) ? currentLocationData.getSystemID() : inputLocator.getSystemId();\n                            }\n\n                            public int getLineNumber() {\n                                return (currentLocationData != null) ? currentLocationData.getLine() : inputLocator.getLineNumber();\n                            }\n\n                            public int getColumnNumber() {\n                                return (currentLocationData != null) ? currentLocationData.getCol() : inputLocator.getColumnNumber();\n                            }\n\n                            public void setLocationData(LocationData locationData) {\n                                this.currentLocationData = locationData;\n                            }\n                        }\n\n                        // Saxon happens to issue such prefix mappings from time to time. Those\n                        // cause issues later down the chain, and anyway serialize to incorrect XML\n                        // if xmlns:xmlns=\"...\" gets generated. This appears to happen when Saxon\n                        // uses the Copy() instruction. It may be that the source is then\n                        // incorrect, but we haven't traced this further. It may also simply be a\n                        // bug in Saxon.\n                        public void startPrefixMapping(String s, String s1) throws SAXException {\n                            if (\"xmlns\".equals(s)) {\n                                // TODO: This may be an old Saxon bug which doesn't occur anymore. Try to see if it occurs again.\n                                throw new IllegalArgumentException(\"xmlns\");\n//                                return;\n                            }\n                            super.startPrefixMapping(s, s1);\n                        }\n\n                        public void setDocumentLocator(final Locator locator) {\n                            this.inputLocator = locator;\n                            if (isSmartOutputLocation) {\n                                this.outputLocator = new OutputLocator();\n                                this.startElementLocationStack = new Stack();\n                                super.setDocumentLocator(this.outputLocator);\n                            } else if (isDumbOutputLocation) {\n                                super.setDocumentLocator(this.inputLocator);\n                            } else {\n                                // NOP: don't set a locator\n                            }\n                        }\n\n                        public void startDocument() throws SAXException {\n                            // Try to set fallback Locator\n                            if (((outputLocator != null && outputLocator.getSystemId() == null) || (inputLocator != null && inputLocator.getSystemId() == null))\n                                    && processorLocationData != null && isDumbOutputLocation) {\n                                final Locator locator = new ConstantLocator(processorLocationData);\n                                super.setDocumentLocator(locator);\n                            }\n                            super.startDocument();\n                        }\n\n                        public void endDocument() throws SAXException {\n                            if (getContentHandler() == null) {\n                                // Hack to test if Saxon outputs more than one endDocument() event\n                                logger.warn(\"XSLT transformer attempted to call endDocument() more than once.\");\n                                return;\n                            }\n                            super.endDocument();\n                        }\n\n                        public void startElement(String uri, String localname, String qName, Attributes attributes) throws SAXException {\n                            if (outputLocator != null) {\n                                final LocationData locationData = findSourceElementLocationData(uri, localname);\n                                outputLocator.setLocationData(locationData);\n                                startElementLocationStack.push(locationData);\n                                super.startElement(uri, localname, qName, attributes);\n                                outputLocator.setLocationData(null);\n                            } else {\n                                super.startElement(uri, localname, qName, attributes);\n                            }\n                        }\n\n\n                        public void endElement(String uri, String localname, String qName) throws SAXException {\n                            if (outputLocator != null) {\n                                // Here we do a funny thing: since Saxon does not provide location data on endElement(), we use that of startElement()\n                                final LocationData locationData = (LocationData) startElementLocationStack.peek();\n                                outputLocator.setLocationData(locationData);\n                                super.endElement(uri, localname, qName);\n                                outputLocator.setLocationData(null);\n                                startElementLocationStack.pop();\n                            } else {\n                                super.endElement(uri, localname, qName);\n                            }\n                        }\n\n                        public void characters(char[] chars, int start, int length) throws SAXException {\n                            if (outputLocator != null) {\n                                final LocationData locationData = findSourceCharacterLocationData();\n                                outputLocator.setLocationData(locationData);\n                                super.characters(chars, start, length);\n                                outputLocator.setLocationData(null);\n                            } else {\n                                super.characters(chars, start, length);\n                            }\n                        }\n\n                        private LocationData findSourceElementLocationData(String uri, String localname) {\n                            if (inputLocator instanceof ContentHandlerProxyLocator) {\n                                final Stack stack = ((ContentHandlerProxyLocator) inputLocator).getContextItemStack();\n\n                                for (int i = stack.size() - 1; i >= 0; i--) {\n                                    final Item currentItem = (Item) stack.get(i);\n                                    if (currentItem instanceof NodeInfo) {\n                                        final NodeInfo currentNodeInfo = (NodeInfo) currentItem;\n                                        if (currentNodeInfo.getNodeKind() == org.w3c.dom.Document.ELEMENT_NODE\n                                                && currentNodeInfo.getLocalPart().equals(localname)\n                                                && currentNodeInfo.getURI().equals(uri)) {\n                                            // Very probable match...\n                                            return new LocationData(currentNodeInfo.getSystemId(), currentNodeInfo.getLineNumber(), -1);\n                                        }\n                                    }\n                                }\n                            }\n                            return null;\n                        }\n\n                        private LocationData findSourceCharacterLocationData() {\n                            if (inputLocator instanceof ContentHandlerProxyLocator) {\n                                final Stack stack = ((ContentHandlerProxyLocator) inputLocator).getContextItemStack();\n\n                                for (int i = stack.size() - 1; i >= 0; i--) {\n                                    final Item currentItem = (Item) stack.get(i);\n                                    if (currentItem instanceof NodeInfo) {\n                                        final NodeInfo currentNodeInfo = (NodeInfo) currentItem;\n//                                        if (currentNodeInfo.getNodeKind() == org.w3c.dom.Document.TEXT_NODE) {\n                                            // Possible match\n                                            return new LocationData(currentNodeInfo.getSystemId(), currentNodeInfo.getLineNumber(), -1);\n//                                        }\n                                    }\n                                }\n                            }\n                            return null;\n                        }\n                    });\n\n                    if (processorLocationData != null) {\n                        final String processorSystemId = processorLocationData.getSystemID();\n                        //saxResult.setSystemId(sysID); // NOT SURE WHY WE DID THIS\n                        // TODO: use source document system ID, not stylesheet system ID\n                        transformerHandler.setSystemId(processorSystemId);\n                    }\n                    transformerHandler.setResult(saxResult);\n\n                    // Execute transformation\n                    try {\n                        if (XSLTTransformer.this.getConnectedInputs().size() > 3) {\n                            // When other inputs are connected, they can be read\n                            // with the doc() function in XSLT. Reading those\n                            // documents might happen before the whole input\n                            // document is read, which is not compatible with\n                            // our processing model. So in this case, we first\n                            // read the data in a SAX store.\n                            final SAXStore dataSaxStore = new SAXStore();\n                            readInputAsSAX(pipelineContext, INPUT_DATA, dataSaxStore);\n                            dataSaxStore.replay(transformerHandler);\n                        } else {\n                            readInputAsSAX(pipelineContext, INPUT_DATA, transformerHandler);\n                        }\n                    } finally {\n\n                        // Log message from Saxon\n                        if (saxonStringWriter != null) {\n                            String message = saxonStringWriter.toString();\n                            if (message.length() > 0)\n                                logger.info(message);\n                        }\n\n                        // Make sure we don't keep stale references to URI resolver objects\n                        transformer.setURIResolver(null);\n                        transformerURIResolver.destroy();\n                    }\n\n                    // Check whether some errors were added\n                    if (errorListener.hasErrors()) {\n                        final List errors = errorListener.getErrors();\n                        if (errors != null) {\n                            ValidationException ve = null;\n                            for (Iterator i = errors.iterator(); i.hasNext();) {\n                                final LocationData currentLocationData = (LocationData) i.next();\n\n                                if (ve == null)\n                                    ve = new ValidationException(\"Errors while executing transformation\", currentLocationData);\n                                else\n                                    ve.addLocationData(currentLocationData);\n                            }\n                        }\n                    }\n                } catch (TransformerException e) {\n                    // This exception occurred during transformation (we make sure creating the transformer wraps into ValidationException or OXFException)\n\n                    // Add location data of TransformerException if possible\n                    final LocationData transformerLocationData =\n                            (e.getLocator() != null && e.getLocator().getSystemId() != null)\n                                ? new LocationData(e.getLocator())\n                                : (templatesInfo.systemId != null)\n                                    ? new LocationData(templatesInfo.systemId, -1, -1)\n                                    : null;\n\n                    throw new ValidationException(e, new ExtendedLocationData(transformerLocationData, \"executing XSLT transformation\"));\n                } catch (Exception e) {\n\n                    if (templatesInfo != null) {\n                        // Transformer was created, this exception occurred during transformation\n\n                        // Add template location data if possible\n                        final LocationData templatesLocationData = (templatesInfo.systemId != null) ? new LocationData(templatesInfo.systemId, -1, -1) : null;\n                        throw ValidationException.wrapException(e, new ExtendedLocationData(templatesLocationData, \"executing XSLT transformation\"));\n                    } else {\n                        // No transformer was created, this exception occurred while creating the transformer\n                        throw ValidationException.wrapException(e, new ExtendedLocationData((LocationData) null, \"creating XSLT transformer\"));\n                    }\n                }\n            }\n\n            protected boolean supportsLocalKeyValidity() {\n                return true;\n            }\n\n            protected CacheKey getLocalKey(PipelineContext context) {\n                try {\n                    KeyValidity configKeyValidity = getInputKeyValidity(context, INPUT_CONFIG);\n                    URIReferences uriReferences = getURIReferences(context, configKeyValidity);\n                    if (uriReferences == null || uriReferences.hasDynamicDocumentReferences)\n                        return null;\n                    List keys = new ArrayList();\n                    keys.add(configKeyValidity.key);\n                    List allURIReferences = new ArrayList();\n                    allURIReferences.addAll(uriReferences.stylesheetReferences);\n                    allURIReferences.addAll(uriReferences.documentReferences);\n                    for (Iterator i = allURIReferences.iterator(); i.hasNext();) {\n                        URIReference uriReference = (URIReference) i.next();\n                        keys.add(new InternalCacheKey(XSLTTransformer.this, \"xsltURLReference\", URLFactory.createURL(uriReference.context, uriReference.spec).toExternalForm()));\n                    }\n                    return new InternalCacheKey(XSLTTransformer.this, keys);\n                } catch (MalformedURLException e) {\n                    throw new OXFException(e);\n                }\n            }\n\n            protected Object getLocalValidity(PipelineContext context) {\n                try {\n                    KeyValidity configKeyValidity = getInputKeyValidity(context, INPUT_CONFIG);\n                    URIReferences uriReferences = getURIReferences(context, configKeyValidity);\n                    if (uriReferences == null || uriReferences.hasDynamicDocumentReferences)\n                        return null;\n                    List validities = new ArrayList();\n                    validities.add(configKeyValidity.validity);\n                    List allURIReferences = new ArrayList();\n                    allURIReferences.addAll(uriReferences.stylesheetReferences);\n                    allURIReferences.addAll(uriReferences.documentReferences);\n                    for (Iterator i = allURIReferences.iterator(); i.hasNext();) {\n                        URIReference uriReference = (URIReference) i.next();\n                        Processor urlGenerator = new URLGenerator(URLFactory.createURL(uriReference.context, uriReference.spec));\n                        validities.add(((ProcessorOutputImpl) urlGenerator.createOutput(OUTPUT_DATA)).getValidity(context));\n                    }\n                    return validities;\n                } catch (IOException e) {\n                    throw new OXFException(e);\n                }\n            }\n\n            private URIReferences getURIReferences(PipelineContext context, KeyValidity configKeyValidity) {\n                if (configKeyValidity == null)\n                    return null;\n                return (URIReferences) ObjectCache.instance().findValid(context, configKeyValidity.key, configKeyValidity.validity);\n            }\n\n            private KeyValidity createStyleSheetKeyValidity(PipelineContext context, KeyValidity configKeyValidity, URIReferences uriReferences) {\n                try {\n                    if (configKeyValidity == null)\n                        return null;\n\n                    List keys = new ArrayList();\n                    List validities = new ArrayList();\n                    keys.add(configKeyValidity.key);\n                    validities.add(configKeyValidity.validity);\n                    for (Iterator i = uriReferences.stylesheetReferences.iterator(); i.hasNext();) {\n                        URIReference uriReference = (URIReference) i.next();\n                        URL url = URLFactory.createURL(uriReference.context, uriReference.spec);\n                        keys.add(new InternalCacheKey(XSLTTransformer.this, \"xsltURLReference\", url.toExternalForm()));\n                        Processor urlGenerator = new URLGenerator(url);\n                        validities.add(((ProcessorOutputImpl) urlGenerator.createOutput(OUTPUT_DATA)).getValidity(context));//FIXME: can we do better? See URL generator.\n                    }\n\n                    return new KeyValidity(new InternalCacheKey(XSLTTransformer.this, keys), validities);\n                } catch (MalformedURLException e) {\n                    throw new OXFException(e);\n                }\n            }\n\n            /**\n             * Reads the input and creates the JAXP Templates object (wrapped in a Transformer object). While reading\n             * the input, figures out the direct dependencies on other files (URIReferences object), and stores these\n             * two mappings in cache:\n             *\n             * configKey        -> uriReferences\n             * uriReferencesKey -> transformer\n             */\n            private TemplatesInfo createTransformer(PipelineContext pipelineContext, String transformerClass, Map attributes) {\n                StringErrorListener errorListener = new StringErrorListener(logger);\n                final StylesheetForwardingContentHandler topStylesheetContentHandler = new StylesheetForwardingContentHandler();\n                try {\n                    // Create transformer\n                    final TemplatesInfo templatesInfo = new TemplatesInfo();\n                    final List xsltContentHandlers = new ArrayList();\n                    {\n                        // Create SAXSource adding our forwarding content handler\n                        final SAXSource stylesheetSAXSource;\n                        {\n                            xsltContentHandlers.add(topStylesheetContentHandler);\n                            XMLReader xmlReader = new ProcessorOutputXMLReader(pipelineContext, getInputByName(INPUT_CONFIG).getOutput()) {\n                                public void setContentHandler(ContentHandler handler) {\n                                    super.setContentHandler(new TeeContentHandler(Arrays.asList(new Object[]{\n                                            topStylesheetContentHandler, handler})));\n                                }\n                            };\n                            stylesheetSAXSource = new SAXSource(xmlReader, new InputSource());\n                        }\n\n                        // Put listener in context that will be called by URI resolved\n                        pipelineContext.setAttribute(PipelineContext.XSLT_STYLESHEET_URI_LISTENER, new URIResolverListener() {\n                            public ContentHandler getContentHandler() {\n                                StylesheetForwardingContentHandler contentHandler = new StylesheetForwardingContentHandler();\n                                xsltContentHandlers.add(contentHandler);\n                                return contentHandler;\n                            }\n                        });\n                        final TransformerURIResolver uriResolver\n                                = new TransformerURIResolver(XSLTTransformer.this, pipelineContext, INPUT_DATA, URLGenerator.DEFAULT_HANDLE_XINCLUDE);\n                        templatesInfo.templates = TransformerUtils.getTemplates(stylesheetSAXSource, transformerClass, attributes, errorListener, uriResolver);\n                        uriResolver.destroy();\n                        templatesInfo.transformerClass = transformerClass;\n                        templatesInfo.systemId = topStylesheetContentHandler.getSystemId();\n                    }\n\n                    // Update cache\n                    {\n                        // Create uriReferences\n                        URIReferences uriReferences = new URIReferences();\n                        for (Iterator i = xsltContentHandlers.iterator(); i.hasNext();) {\n                            StylesheetForwardingContentHandler contentHandler = (StylesheetForwardingContentHandler) i.next();\n                            uriReferences.hasDynamicDocumentReferences = uriReferences.hasDynamicDocumentReferences\n                                    || contentHandler.getURIReferences().hasDynamicDocumentReferences;\n                            uriReferences.stylesheetReferences.addAll\n                                    (contentHandler.getURIReferences().stylesheetReferences);\n                            uriReferences.documentReferences.addAll\n                                    (contentHandler.getURIReferences().documentReferences);\n                        }\n\n                        // Put in cache: configKey -> uriReferences\n                        KeyValidity configKeyValidty = getInputKeyValidity(pipelineContext, INPUT_CONFIG);\n                        if (configKeyValidty != null)\n                            ObjectCache.instance().add(pipelineContext, configKeyValidty.key, configKeyValidty.validity, uriReferences);\n\n                        // Put in cache: (configKey, uriReferences.stylesheetReferences) -> transformer\n                        KeyValidity stylesheetKeyValidity = createStyleSheetKeyValidity(pipelineContext, configKeyValidty, uriReferences);\n                        if (stylesheetKeyValidity != null)\n                            ObjectCache.instance().add(pipelineContext, stylesheetKeyValidity.key, stylesheetKeyValidity.validity, templatesInfo);\n                    }\n\n                    return templatesInfo;\n\n                } catch (TransformerException e) {\n                    if (errorListener.hasErrors()) {\n                        // Use error messages information and provide location data of first errror\n                        final ValidationException validationException = new ValidationException(errorListener.getMessages(), (LocationData) errorListener.getErrors().get(0));\n                        // If possible add location of top-level stylesheet\n                        if (topStylesheetContentHandler.getSystemId() != null)\n                            validationException.addLocationData(new ExtendedLocationData(new LocationData(topStylesheetContentHandler.getSystemId(), -1, -1), \"creating XSLT transformer\"));\n                        throw validationException;\n                    } else {\n                        // No XSLT errors are available\n                        final LocationData transformerExceptionLocationData\n                            = StringErrorListener.getTransformerExceptionLocationData(e, topStylesheetContentHandler.getSystemId());\n                        if (transformerExceptionLocationData.getSystemID() != null)\n                            throw ValidationException.wrapException(e, new ExtendedLocationData(transformerExceptionLocationData, \"creating XSLT transformer\"));\n                        else\n                            throw new OXFException(e);\n                    }\n\n//                    final ExtendedLocationData extendedLocationData\n//                            = StringErrorListener.getTransformerExceptionLocationData(e, topStylesheetContentHandler.getSystemId());\n//\n//                    final ValidationException ve = new ValidationException(e.getMessage() + \" \" + errorListener.getMessages(), e, extendedLocationData);\n//\n//                    // Append location data gathered from error listener\n//                    if (errorListener.hasErrors()) {\n//                        final List errors = errorListener.getErrors();\n//                        if (errors != null) {\n//                            for (Iterator i = errors.iterator(); i.hasNext();) {\n//                                final LocationData currentLocationData = (LocationData) i.next();\n//                                ve.addLocationData(currentLocationData);\n//                            }\n//                        }\n//                    }\n//                    throw ve;\n                } catch (Exception e) {\n                    if (topStylesheetContentHandler.getSystemId() != null) {\n                        throw ValidationException.wrapException(e, new ExtendedLocationData(topStylesheetContentHandler.getSystemId(), -1, -1, \"creating XSLT transformer\"));\n                    } else {\n                        throw new OXFException(e);\n                    }\n                }\n            }\n\n        };\n        addOutput(name, output);\n        return output;\n    }","commit_id":"68be6c369b80b1050d8c06293106aab06c19eca0","url":"https://github.com/orbeon/orbeon-forms"},{"original_method":"public void reset() {\n        varName = null;\n    }","id":1967,"modified_method":"public void reset() {\n        super.reset();\n        varName = null;\n    }","commit_id":"da55d2ab7dc18e75578125165432ef1812e318fb","url":"https://github.com/wocommunity/wonder"},{"original_method":"public String varName()  {\n\tif(varName == null) {\n\t    varName = ERXExtensions.replaceStringByStringInString(\"-\", \"_\", \"dhtml-\" + context().elementID().hashCode() + \"-\" + key());\n\t    cat.debug(varName);\n\t}\n\treturn varName;\n    }","id":1968,"modified_method":"public String varName()  {\n\tif(varName == null) {\n\t    varName = ERXExtensions.replaceStringByStringInString(\"-\", \"_\", \"dhtml-\" + context().elementID().hashCode() + \"-\" + key());\n\t    varName = ERXExtensions.replaceStringByStringInString(\".\", \"_\", varName);\n\t    cat.debug(varName);\n\t}\n\treturn varName;\n    }","commit_id":"da55d2ab7dc18e75578125165432ef1812e318fb","url":"https://github.com/wocommunity/wonder"},{"original_method":"public String varName()  {\n\tString varName = (String)valueForBinding(\"varName\");\n\tif(varName == null) {\n\t    varName = \"dhtml_\" + ERXExtensions.replaceStringByStringInString(\"-\", \"_\", \"\" + context().elementID().hashCode());\n\t}\n\treturn varName;\n    }","id":1969,"modified_method":"public String varName()  {\n\tif(varName == null) {\n            varName = (String)valueForBinding(\"varName\");\n            if(varName == null)\n                varName = \"dhtml_\" + ERXExtensions.replaceStringByStringInString(\"-\", \"_\", \"\" + context().elementID().hashCode());\n            varName = ERXExtensions.replaceStringByStringInString(\".\", \"_\", varName);\n\t}\n\treturn varName;\n    }","commit_id":"da55d2ab7dc18e75578125165432ef1812e318fb","url":"https://github.com/wocommunity/wonder"},{"original_method":"public boolean displayContent() {\n\tint showCount = displayCountForKey(keyName());\n\tcat.debug(\"displayContent - showCount: \" + showCount + \" stage:\" + stage);\n\treturn showCount == 0;\n    }","id":1970,"modified_method":"public boolean displayContent() {\n\tint showCount = displayCountForKey(keyName());\n        if(cat.isDebugEnabled())\n            cat.debug(\"displayContent - showCount: \" + showCount + \" stage:\" + stage);\n\treturn showCount == 0;\n    }","commit_id":"da55d2ab7dc18e75578125165432ef1812e318fb","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void resetDict(int currentStage, String contextID) {\n\tint count = 0;\n\tString key = keyName();\n\n\tcat.debug(currentStage + \",\" + contextID);\n\n\t\n\tif(stage != currentStage || lastID != contextID) {\n\t    if(displayCountDict != null)\n\t\tdisplayCountDict.removeAllObjects();\n\t    stage = currentStage;\n\t    lastID = contextID;\n\t}\n\t\n\tif(displayCountDict == null) {\n\t    displayCountDict = new NSMutableDictionary(new Integer(0), key);\n\t} else if(displayCountDict.objectForKey(key) == null) {\n\t    displayCountDict.setObjectForKey(new Integer(0),key);\n\t} else {\n\t    count = ((Integer)displayCountDict.objectForKey(key)).intValue() + 1;\n\t    displayCountDict.setObjectForKey(new Integer(count), key);\n\t}\n    }","id":1971,"modified_method":"public void resetDict(int currentStage, String contextID) {\n\tint count = 0;\n\tString key = keyName();\n\n        if(cat.isDebugEnabled())\n            cat.debug(\"stage:\" + stage + \", currentStage:\" + currentStage + \", context:\" + contextID + \", lastID:\" + lastID);\n\n\t\n\tif(stage != currentStage || !lastID.equals(contextID)) {\n            if(cat.isDebugEnabled())\n                cat.debug(\"did reset\");\n\t    if(displayCountDict != null)\n\t\tdisplayCountDict.removeAllObjects();\n\t    stage = currentStage;\n\t    lastID = contextID;\n\t}\n\t\n\tif(displayCountDict == null) {\n\t    displayCountDict = new NSMutableDictionary(new Integer(0), key);\n\t} else if(displayCountDict.objectForKey(key) == null) {\n\t    displayCountDict.setObjectForKey(new Integer(0),key);\n\t} else {\n\t    count = ((Integer)displayCountDict.objectForKey(key)).intValue() + 1;\n\t    displayCountDict.setObjectForKey(new Integer(count), key);\n\t}\n    }","commit_id":"da55d2ab7dc18e75578125165432ef1812e318fb","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Generate PDF from castor classes.\n     */\n    public void generatePDF(String pdfFileName, OutputStream out,\n            String format) throws Exception {\n        ThreadCategory.setPrefix(LOG4J_CATEGORY);\n        if (log().isDebugEnabled()) {\n            log().debug(\"inside generatePDF\");\n        }\n        File file = new File(ConfigFileConstants.getHome()\n                + \"/share/reports/AvailReport.xml\");\n        try {\n            if (log().isDebugEnabled()) {\n                log().debug(\n                            \"The xml marshalled from the castor classes is saved in \"\n                                    + ConfigFileConstants.getHome()\n                                    + \"/share/reports/AvailReport.xml\");\n            }\n            FileReader fileReader = new FileReader(file);\n            PDFWriter pdfWriter = new PDFWriter(pdfFileName);\n            Calendar calendar = new GregorianCalendar();\n            long timeMillis = calendar.getTime().getTime();\n            if (!format.equals(\"HTML\")) {\n                pdfWriter.generatePDF(fileReader, out,\n                                      ConfigFileConstants.getHome()\n                                              + \"/share/reports/avail-\"\n                                              + timeMillis + \".fot\");\n            } else {\n                pdfWriter.generateHTML(fileReader, out);\n            }\n        } catch (Exception e) {\n            log().fatal(\"Exception: \" + e, e);\n        }\n        if (log().isInfoEnabled()) {\n            log().info(\"leaving generatePDF\");\n        }\n    }","id":1972,"modified_method":"/**\n     * Generate PDF from castor classes.\n     */\n    public void generatePDF(String xsltFileName, OutputStream out,\n            String format) throws Exception {\n        ThreadCategory.setPrefix(LOG4J_CATEGORY);\n        if (log().isDebugEnabled()) {\n            log().debug(\"inside generatePDF\");\n        }\n        File file = new File(ConfigFileConstants.getHome()\n                + \"/share/reports/AvailReport.xml\");\n        try {\n            if (log().isDebugEnabled()) {\n                log().debug(\n                            \"The xml marshalled from the castor classes is saved in \"\n                                    + ConfigFileConstants.getHome()\n                                    + \"/share/reports/AvailReport.xml\");\n            }\n            FileReader fileReader = new FileReader(file);\n            if (!format.equals(\"HTML\")) {\n                new PDFReportRenderer().render(fileReader, out, new InputStreamReader(new FileInputStream(xsltFileName), \"UTF-8\"));\n            } else {\n                new HTMLReportRenderer().render(fileReader, out, new InputStreamReader(new FileInputStream(xsltFileName), \"UTF-8\"));\n            }\n        } catch (Exception e) {\n            log().fatal(\"Exception: \" + e, e);\n        }\n        if (log().isInfoEnabled()) {\n            log().info(\"leaving generatePDF\");\n        }\n    }","commit_id":"bd406611177748491e75d90cc89be217c8e107d4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void render(String inputFileName, OutputStream outputStream, Resource xsltResource) throws ReportRenderException {\n        \n        try {\n            \n            log.debug(\"XSL File \" + xsltResource.getDescription());\n\n            Reader xsl = new FileReader(xsltResource.getFile());\n\n            log.debug(\"file to render\" + inputFileName);\n\n            Reader xml = new FileReader(inputFileName);\n\n\n            TransformerFactory tfact = TransformerFactory.newInstance();\n            Transformer processor = tfact.newTransformer(new StreamSource(xsl));\n            processor.transform(new StreamSource(xml),\n                                new StreamResult(outputStream));\n\n            xsl.close();\n            xml.close();\n\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } catch (TransformerConfigurationException tce) {\n            log.fatal(\"ransformerConfigurationException \", tce);\n            throw new ReportRenderException(tce);\n        } catch (TransformerException te) {\n            log.fatal(\"TransformerException \", te);\n            throw new ReportRenderException(te);\n        }\n    }","id":1973,"modified_method":"public void render(String inputFileName, OutputStream outputStream, Resource xsltResource) throws ReportRenderException {\n        if (log.isDebugEnabled())\n            log.debug(\"Rendering \" + inputFileName + \" with XSL File \" + xsltResource.getDescription() + \" to OutputStream\");\n\n        FileInputStream in = null, xslt = null;\n        try {\n            in = new FileInputStream(xsltResource.getFile());\n            Reader xsl = new InputStreamReader(in, \"UTF-8\");\n            xslt = new FileInputStream(inputFileName);\n            Reader xml = new InputStreamReader(xslt, \"UTF-8\");\n\n            this.render(xml, outputStream, xsl);\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException e) {\n                    log.warn(\"Error while closing XML stream: \" + e.getMessage());\n                }\n            }\n            if (xslt != null) {\n                try {\n                    xslt.close();\n                } catch (IOException e) {\n                    log.warn(\"Error while closing XSLT stream: \" + e.getMessage());\n                }\n            }\n        }\n    }","commit_id":"bd406611177748491e75d90cc89be217c8e107d4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public byte[] render(String inputFileName, Resource xsltResource) throws ReportRenderException {\n        \n        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n        \n        try {\n            \n            log.debug(\"XSL File \" + xsltResource.getDescription());\n\n            Reader xsl = new FileReader(xsltResource.getFile());\n\n            log.debug(\"file to render\" + inputFileName);\n\n            Reader xml = new FileReader(inputFileName);\n\n\n            TransformerFactory tfact = TransformerFactory.newInstance();\n            Transformer processor = tfact.newTransformer(new StreamSource(xsl));\n            processor.transform(new StreamSource(xml),\n                                new StreamResult(outputStream));\n\n            xsl.close();\n            xml.close();\n\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } catch (TransformerConfigurationException tce) {\n            log.fatal(\"ransformerConfigurationException \", tce);\n            throw new ReportRenderException(tce);\n        } catch (TransformerException te) {\n            log.fatal(\"TransformerException \", te);\n            throw new ReportRenderException(te);\n        }\n        \n        return outputStream.toByteArray();\n    }","id":1974,"modified_method":"public byte[] render(String inputFileName, Resource xsltResource) throws ReportRenderException {\n\n        if (log.isDebugEnabled())\n            log.debug(\"Rendering \" + inputFileName + \" with XSL File \" + xsltResource.getDescription() + \" to byte array\");\n\n        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n        this.render(inputFileName, outputStream, xsltResource);\n\n        return outputStream.toByteArray();\n    }","commit_id":"bd406611177748491e75d90cc89be217c8e107d4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void setInputFileName(String intputFileName) {\n        this.m_inputFileName = intputFileName;\n    }","id":1975,"modified_method":"public void setInputFileName(String inputFileName) {\n        this.m_inputFileName = inputFileName;\n    }","commit_id":"bd406611177748491e75d90cc89be217c8e107d4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void render(String inputFileName, String outputFileName, Resource xsltResource) throws ReportRenderException {\n\n        // TODO this needs to be passed the absolute path for the input file (maybe)?\n        \n        try {\n            \n            log.debug(\"XSL File \" + xsltResource.getDescription());\n\n            Reader xsl = new FileReader(xsltResource.getFile());\n\n            log.debug(\"file to render\" + inputFileName);\n\n            Reader xml = new FileReader(m_baseDir + \"/\" + inputFileName);\n\n            log.debug(\"ouput File \" + outputFileName);\n\n            FileWriter htmlWriter = new FileWriter(m_baseDir + \"/\" + outputFileName);\n\n            TransformerFactory tfact = TransformerFactory.newInstance();\n            Transformer processor = tfact.newTransformer(new StreamSource(xsl));\n            processor.transform(new StreamSource(xml),\n                                new StreamResult(htmlWriter));\n\n            htmlWriter.close();\n            xsl.close();\n            xml.close();\n\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } catch (TransformerConfigurationException tce) {\n            log.fatal(\"ransformerConfigurationException \", tce);\n            throw new ReportRenderException(tce);\n        } catch (TransformerException te) {\n            log.fatal(\"TransformerException \", te);\n            throw new ReportRenderException(te);\n        }\n    }","id":1976,"modified_method":"public void render(String inputFileName, String outputFileName, Resource xsltResource) throws ReportRenderException {\n        if (log.isDebugEnabled())\n            log.debug(\"Rendering \" + inputFileName + \" with XSL File \" + xsltResource.getDescription() + \" to \" + outputFileName + \" with base directory of \" + m_baseDir);\n\n        FileInputStream in = null, xslt = null;\n        FileOutputStream out = null;\n        try {\n\n            xslt = new FileInputStream(xsltResource.getFile());\n            Reader xsl = new InputStreamReader(xslt, \"UTF-8\");\n            in = new FileInputStream(m_baseDir + \"/\" + inputFileName);\n            Reader xml = new InputStreamReader(in, \"UTF-8\");\n\n            out = new FileOutputStream(new File(m_baseDir + \"/\" + outputFileName));\n            \n            this.render(xml, out, xsl);\n\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException e) {\n                    log.warn(\"Error while closing XML stream: \" + e.getMessage());\n                }\n            }\n            if (xslt != null) {\n                try {\n                    xslt.close();\n                } catch (IOException e) {\n                    log.warn(\"Error while closing XSLT stream: \" + e.getMessage());\n                }\n            }\n            if (out != null) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    log.warn(\"Error while closing PDF stream: \" + e.getMessage());\n                }\n            }\n        }\n    }","commit_id":"bd406611177748491e75d90cc89be217c8e107d4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void render(InputStream inputStream, OutputStream outputStream, Resource xsltResource) throws ReportRenderException {\n        \n        try {\n            \n            log.debug(\"XSL File \" + xsltResource.getDescription());\n\n            Reader xsl = new FileReader(xsltResource.getFile());\n\n            log.debug(\"rendering input stream\");\n\n            TransformerFactory tfact = TransformerFactory.newInstance();\n            Transformer processor = tfact.newTransformer(new StreamSource(xsl));\n            processor.transform(new StreamSource(inputStream),\n                                new StreamResult(outputStream));\n\n            xsl.close();\n            inputStream.close();\n\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } catch (TransformerConfigurationException tce) {\n            log.fatal(\"ransformerConfigurationException \", tce);\n            throw new ReportRenderException(tce);\n        } catch (TransformerException te) {\n            log.fatal(\"TransformerException \", te);\n            throw new ReportRenderException(te);\n        }\n    }","id":1977,"modified_method":"public void render(InputStream inputStream, OutputStream outputStream, Resource xsltResource) throws ReportRenderException {\n        if (log.isDebugEnabled())\n            log.debug(\"Rendering InputStream with XSL File \" + xsltResource.getDescription() + \" to OutputStream\");\n\n        FileInputStream xslt = null;\n        try {\n            xslt = new FileInputStream(xsltResource.getFile());\n            Reader xsl = new InputStreamReader(xslt, \"UTF-8\");\n            Reader xml = new InputStreamReader(inputStream, \"UTF-8\");\n\n            this.render(xml, outputStream, xsl);\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } finally {\n            if (xslt != null) {\n                try {\n                    xslt.close();\n                } catch (IOException e) {\n                    log.warn(\"Error while closing XSLT stream: \" + e.getMessage());\n                }\n            }\n        }\n    }","commit_id":"bd406611177748491e75d90cc89be217c8e107d4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void render(String inputFileName, OutputStream outputStream, Resource xsltResource) throws ReportRenderException {\n        try {\n\n            log.debug(\"XSL File \" + xsltResource.getDescription());\n\n            Reader xsl = new FileReader(xsltResource.getFile());\n\n            log.debug(\"file to render\" + inputFileName);\n\n            Reader xml = new FileReader(inputFileName);\n\n            Logger nullLogger = new NullLogger();\n            MessageHandler.setScreenLogger(nullLogger);\n            MessageHandler.setOutputMethod(MessageHandler.NONE);\n\n            Driver driver = new Driver();\n            driver.setLogger(avalonLogger);\n            driver.setOutputStream(outputStream);\n            driver.setRenderer(Driver.RENDER_PDF);\n            TransformerFactory tfact = TransformerFactory.newInstance();\n            Transformer transformer = tfact.newTransformer(new StreamSource(\n                                                                            xsl));\n            transformer.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\n            transformer.transform(new StreamSource(xml),\n                                  new SAXResult(driver.getContentHandler()));\n\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } catch (TransformerConfigurationException tce) {\n            log.fatal(\"transformerConfigurationException \", tce);\n            throw new ReportRenderException(tce);\n        } catch (TransformerException te) {\n            log.fatal(\"TransformerException \", te);\n            throw new ReportRenderException(te);\n        }\n        \n    }","id":1978,"modified_method":"public void render(String inputFileName, OutputStream outputStream, Resource xsltResource) throws ReportRenderException {\n        if (log.isDebugEnabled())\n            log.debug(\"Rendering \" + inputFileName + \" with XSL File \" + xsltResource.getDescription() + \" to OutputStream\");\n\n        FileInputStream in = null, xslt = null;\n        try {\n            in = new FileInputStream(xsltResource.getFile());\n            Reader xsl = new InputStreamReader(in, \"UTF-8\");\n            xslt = new FileInputStream(inputFileName);\n            Reader xml = new InputStreamReader(xslt, \"UTF-8\");\n\n            this.render(xml, outputStream, xsl);\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException e) {\n                    log.warn(\"Error while closing XML stream: \" + e.getMessage());\n                }\n            }\n            if (xslt != null) {\n                try {\n                    xslt.close();\n                } catch (IOException e) {\n                    log.warn(\"Error while closing XSLT stream: \" + e.getMessage());\n                }\n            }\n        }\n    }","commit_id":"bd406611177748491e75d90cc89be217c8e107d4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public byte[] render(String inputFileName, Resource xsltResource) throws ReportRenderException {\n        \n        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n        \n        try {\n\n            log.debug(\"XSL File \" + xsltResource.getDescription());\n\n            Reader xsl = new FileReader(xsltResource.getFile());\n\n            log.debug(\"file to render\" + inputFileName);\n\n            Reader xml = new FileReader(inputFileName);\n\n            Logger nullLogger = new NullLogger();\n            MessageHandler.setScreenLogger(nullLogger);\n            MessageHandler.setOutputMethod(MessageHandler.NONE);\n\n            Driver driver = new Driver();\n            driver.setLogger(avalonLogger);\n            driver.setOutputStream(outputStream);\n            driver.setRenderer(Driver.RENDER_PDF);\n            TransformerFactory tfact = TransformerFactory.newInstance();\n            Transformer transformer = tfact.newTransformer(new StreamSource(\n                                                                            xsl));\n            transformer.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\n            transformer.transform(new StreamSource(xml),\n                                  new SAXResult(driver.getContentHandler()));\n\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } catch (TransformerConfigurationException tce) {\n            log.fatal(\"transformerConfigurationException \", tce);\n            throw new ReportRenderException(tce);\n        } catch (TransformerException te) {\n            log.fatal(\"TransformerException \", te);\n            throw new ReportRenderException(te);\n        }\n        \n        return outputStream.toByteArray();\n    }","id":1979,"modified_method":"public byte[] render(String inputFileName, Resource xsltResource) throws ReportRenderException {\n\n        if (log.isDebugEnabled())\n            log.debug(\"Rendering \" + inputFileName + \" with XSL File \" + xsltResource.getDescription() + \" to byte array\");\n\n        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n        this.render(inputFileName, outputStream, xsltResource);\n\n        return outputStream.toByteArray();\n    }","commit_id":"bd406611177748491e75d90cc89be217c8e107d4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void render(InputStream inputStream, OutputStream outputStream, Resource xsltResource) throws ReportRenderException {\n        try {\n\n            log.debug(\"XSL File \" + xsltResource.getDescription());\n\n            Reader xsl = new FileReader(xsltResource.getFile());\n            \n            log.debug(\"rendering input stream\");\n\n            Logger nullLogger = new NullLogger();\n            MessageHandler.setScreenLogger(nullLogger);\n            MessageHandler.setOutputMethod(MessageHandler.NONE);\n\n            Driver driver = new Driver();\n            driver.setLogger(avalonLogger);\n            driver.setOutputStream(outputStream);\n            driver.setRenderer(Driver.RENDER_PDF);\n            TransformerFactory tfact = TransformerFactory.newInstance();\n            Transformer transformer = tfact.newTransformer(new StreamSource(\n                                                                            xsl));\n            transformer.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\n            transformer.transform(new StreamSource(inputStream),\n                                  new SAXResult(driver.getContentHandler()));\n\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } catch (TransformerConfigurationException tce) {\n            log.fatal(\"transformerConfigurationException \", tce);\n            throw new ReportRenderException(tce);\n        } catch (TransformerException te) {\n            log.fatal(\"TransformerException \", te);\n            throw new ReportRenderException(te);\n        }\n        \n    }","id":1980,"modified_method":"public void render(InputStream inputStream, OutputStream outputStream, Resource xsltResource) throws ReportRenderException {\n        if (log.isDebugEnabled())\n            log.debug(\"Rendering InputStream with XSL File \" + xsltResource.getDescription() + \" to OutputStream\");\n\n        FileInputStream xslt = null;\n        try {\n            xslt = new FileInputStream(xsltResource.getFile());\n            Reader xsl = new InputStreamReader(xslt, \"UTF-8\");\n            Reader xml = new InputStreamReader(inputStream, \"UTF-8\");\n\n            this.render(xml, outputStream, xsl);\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } finally {\n            if (xslt != null) {\n                try {\n                    xslt.close();\n                } catch (IOException e) {\n                    log.warn(\"Error while closing XSLT stream: \" + e.getMessage());\n                }\n            }\n        }\n    }","commit_id":"bd406611177748491e75d90cc89be217c8e107d4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public PDFReportRenderer() {\n        \n        ThreadCategory.setPrefix(LOG4J_CATEGORY);\n        log = ThreadCategory.getInstance(PDFReportRenderer.class);\n        avalonLogger = new Log4JLogger(log);\n        \n    }","id":1981,"modified_method":"public PDFReportRenderer() {\n        ThreadCategory.setPrefix(LOG4J_CATEGORY);\n        log = ThreadCategory.getInstance(PDFReportRenderer.class);\n    }","commit_id":"bd406611177748491e75d90cc89be217c8e107d4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void render(String inputFileName, String outputFileName, Resource xsltResource) throws ReportRenderException {\n\n        ThreadCategory.setPrefix(LOG4J_CATEGORY);\n        Category log = ThreadCategory.getInstance(PDFReportRenderer.class);\n        Logger avalonLogger = new Log4JLogger(log);\n\n        try {\n\n            log.debug(\"XSL File \" + xsltResource.getDescription());\n\n            Reader xsl = new FileReader(xsltResource.getFile());\n            \n            log.debug(\"Base directory \" + m_baseDir);\n\n            log.debug(\"file to render\" + inputFileName);\n\n            Reader xml = new FileReader(m_baseDir + \"/\" + inputFileName);\n\n            log.debug(\"ouput File \" + outputFileName);\n\n            FileOutputStream pdfOutputStream = new FileOutputStream(\n                                                                    new File(m_baseDir + \"/\" +\n                                                                             outputFileName));\n\n            Logger nullLogger = new NullLogger();\n            MessageHandler.setScreenLogger(nullLogger);\n            MessageHandler.setOutputMethod(MessageHandler.NONE);\n\n            Driver driver = new Driver();\n            driver.setLogger(avalonLogger);\n            driver.setOutputStream(pdfOutputStream);\n            driver.setRenderer(Driver.RENDER_PDF);\n            TransformerFactory tfact = TransformerFactory.newInstance();\n            Transformer transformer = tfact.newTransformer(new StreamSource(\n                                                                            xsl));\n            transformer.transform(new StreamSource(xml),\n                                  new SAXResult(driver.getContentHandler()));\n            pdfOutputStream.close();\n\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } catch (TransformerConfigurationException tce) {\n            log.fatal(\"transformerConfigurationException \", tce);\n            throw new ReportRenderException(tce);\n        } catch (TransformerException te) {\n            log.fatal(\"TransformerException \", te);\n            throw new ReportRenderException(te);\n        }\n    }","id":1982,"modified_method":"public void render(String inputFileName, String outputFileName, Resource xsltResource) throws ReportRenderException {\n        if (log.isDebugEnabled())\n            log.debug(\"Rendering \" + inputFileName + \" with XSL File \" + xsltResource.getDescription() + \" to \" + outputFileName + \" with base directory of \" + m_baseDir);\n\n        FileInputStream in = null, xslt = null;\n        FileOutputStream out = null;\n        try {\n\n            xslt = new FileInputStream(xsltResource.getFile());\n            Reader xsl = new InputStreamReader(xslt, \"UTF-8\");\n            in = new FileInputStream(m_baseDir + \"/\" + inputFileName);\n            Reader xml = new InputStreamReader(in, \"UTF-8\");\n\n            out = new FileOutputStream(new File(m_baseDir + \"/\" + outputFileName));\n            \n            this.render(xml, out, xsl);\n\n        } catch (IOException ioe) {\n            log.fatal(\"IOException \", ioe);\n            throw new ReportRenderException(ioe);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException e) {\n                    log.warn(\"Error while closing XML stream: \" + e.getMessage());\n                }\n            }\n            if (xslt != null) {\n                try {\n                    xslt.close();\n                } catch (IOException e) {\n                    log.warn(\"Error while closing XSLT stream: \" + e.getMessage());\n                }\n            }\n            if (out != null) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    log.warn(\"Error while closing PDF stream: \" + e.getMessage());\n                }\n            }\n        }\n    }","commit_id":"bd406611177748491e75d90cc89be217c8e107d4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void cleanupStorage() {\n\n        final int EXTRACT_URL_LIFE_LIMIT_IN_SECONDS = _urlExpirationInterval;\n        List<UploadVO> extractJobs= _uploadDao.listByModeAndStatus(Mode.HTTP_DOWNLOAD, Status.DOWNLOAD_URL_CREATED);\n        \n        for (UploadVO extractJob : extractJobs){\n            if( getTimeDiff(extractJob.getLastUpdated()) > EXTRACT_URL_LIFE_LIMIT_IN_SECONDS ){                           \n                String path = extractJob.getInstallPath();\n                HostVO secStorage = ApiDBUtils.findHostById(extractJob.getHostId());\n                s_logger.debug(\"Sending deletion of extract URL \"+extractJob.getUploadUrl());\n                // Would delete the symlink for the Type and if Type == VOLUME then also the volume\n                DeleteEntityDownloadURLCommand cmd = new DeleteEntityDownloadURLCommand(path, extractJob.getType(),extractJob.getUploadUrl(), secStorage.getParent());\n                HostVO ssvm = _ssvmMgr.pickSsvmHost(secStorage);\n                if( ssvm == null ) {\n                \ts_logger.warn(\"There is no secondary storage VM for secondary storage host \" + extractJob.getHostId());\n                \tcontinue;\n                }\n                \n                try {\n\t                send(ssvm.getId(), cmd, null);\n                    _uploadDao.remove(extractJob.getId());\n                } catch (AgentUnavailableException e) {\n                \ts_logger.warn(\"Unable to delete the link for \" +extractJob.getType()+ \" id=\" +extractJob.getTypeId()+ \" url=\"+extractJob.getUploadUrl(), e);\n                }\n            }\n        }\n                \n    }","id":1983,"modified_method":"public void cleanupStorage() {\n\n        final int EXTRACT_URL_LIFE_LIMIT_IN_SECONDS = _urlExpirationInterval;\n        List<UploadVO> extractJobs= _uploadDao.listByModeAndStatus(Mode.HTTP_DOWNLOAD, Status.DOWNLOAD_URL_CREATED);\n        \n        for (UploadVO extractJob : extractJobs){\n            if( getTimeDiff(extractJob.getLastUpdated()) > EXTRACT_URL_LIFE_LIMIT_IN_SECONDS ){                           \n                String path = extractJob.getInstallPath();\n                HostVO secStorage = ApiDBUtils.findHostById(extractJob.getHostId());\n                \n                // Would delete the symlink for the Type and if Type == VOLUME then also the volume\n                DeleteEntityDownloadURLCommand cmd = new DeleteEntityDownloadURLCommand(path, extractJob.getType(),extractJob.getUploadUrl(), secStorage.getParent());\n                HostVO ssvm = _ssvmMgr.pickSsvmHost(secStorage);\n                if( ssvm == null ) {\n                \ts_logger.warn(\"UploadMonitor cleanup: There is no secondary storage VM for secondary storage host \" + extractJob.getHostId());\n                \tcontinue; //TODO: why continue? why not break?\n                }\n                if (s_logger.isDebugEnabled()) {\n                \ts_logger.debug(\"UploadMonitor cleanup: Sending deletion of extract URL \"+ extractJob.getUploadUrl() + \" to ssvm \" + ssvm.getId());\n                }\n                try {\n                    send(ssvm.getId(), cmd, null); //TODO: how do you know if it was successful?\n                    _uploadDao.remove(extractJob.getId());\n                } catch (AgentUnavailableException e) {\n                \ts_logger.warn(\"UploadMonitor cleanup: Unable to delete the link for \" + extractJob.getType()+ \" id=\" + extractJob.getTypeId()+ \" url=\"+ extractJob.getUploadUrl() + \" on ssvm \" + ssvm.getId(), e);\n                }\n            }\n        }\n                \n    }","commit_id":"308cb36066b155eb720381cbaedeb051235938a6","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public void run() {\n            try {\n                s_logger.info(\"Extract Monitor Garbage Collection Thread is running.\");\n\n                GlobalLock scanLock = GlobalLock.getInternLock(\"uploadmonitor.storageGC\");\n                try {\n                    if (scanLock.lock(3)) {\n                        try {\n                            cleanupStorage();\n                        } finally {\n                            scanLock.unlock();\n                        }\n                    }\n                } finally {\n                    scanLock.releaseRef();\n                }\n\n            } catch (Exception e) {\n                s_logger.error(\"Caught the following Exception\", e);\n            }\n        }","id":1984,"modified_method":"@Override\n        public void run() {\n            try {\n                GlobalLock scanLock = GlobalLock.getInternLock(\"uploadmonitor.storageGC\");\n                try {\n                    if (scanLock.lock(3)) {\n                        try {\n                            cleanupStorage();\n                        } finally {\n                            scanLock.unlock();\n                        }\n                    }\n                } finally {\n                    scanLock.releaseRef();\n                }\n\n            } catch (Exception e) {\n                s_logger.error(\"Caught the following Exception\", e);\n            }\n        }","commit_id":"308cb36066b155eb720381cbaedeb051235938a6","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n   public void contextInitialized(ServletContextEvent sce) {\n      final ServletContext ctx = sce.getServletContext();\n      final ContextAdapter contextAdapter = ServletContextHelper.getPowerApiContext(ctx);\n\n      final EventService eventManagerReference = contextAdapter.eventService();\n\n      final ContainerConfigurationListener containerCfgListener = new ContainerConfigurationListener(eventManagerReference);\n      watcherThread = new DestroyableThreadWrapper(contextAdapter.threadingService().newThread(containerCfgListener.getDirWatcher(), \"Artifact Watcher Thread\"), containerCfgListener.getDirWatcher());\n\n      contextAdapter.configurationService().subscribeTo(\"container.cfg.xml\", containerCfgListener, ContainerConfiguration.class);\n\n      artifactManager = new ArtifactManager(containerCfgListener);\n\n      eventManagerReference.listen(artifactManager, ApplicationArtifactEvent.class);\n\n      eventManagerReference.listen(new SingleFireEventListener<PowerFilterEvent, Long>(PowerFilterEvent.class) {\n\n         @Override\n         public void onlyOnce(Event<PowerFilterEvent, Long> e) {\n            watcherThread.start();\n         }\n      }, PowerFilterEvent.POWER_FILTER_INITIALIZED);\n   }","id":1985,"modified_method":"@Override\n   public void contextInitialized(ServletContextEvent sce) {\n      final ServletContext ctx = sce.getServletContext();\n      final ContextAdapter contextAdapter = ServletContextHelper.getPowerApiContext(ctx);\n\n      final EventService eventManagerReference = contextAdapter.eventService();\n\n      final ContainerConfigurationListener containerCfgListener = new ContainerConfigurationListener(eventManagerReference);\n      watcherThread = new DestroyableThreadWrapper(contextAdapter.threadingService().newThread(containerCfgListener.getDirWatcher(), \"Artifact Watcher Thread\"), containerCfgListener.getDirWatcher());\n\n      contextAdapter.configurationService().subscribeTo(\"container.cfg.xml\", containerCfgListener, ContainerConfiguration.class);\n\n      artifactManager = new ArtifactManager(containerCfgListener);\n\n      eventManagerReference.listen(artifactManager, ApplicationArtifactEvent.class);\n\n      eventManagerReference.listen(new SingleFireEventListener<PowerFilterEvent, Long>(PowerFilterEvent.class) {\n\n         @Override\n         public void onlyOnce(Event<PowerFilterEvent, Long> e) {\n            watcherThread.start();\n         }\n      }, PowerFilterEvent.POWER_FILTER_CONFIGURED);\n   }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public void run() {\n        shouldContinue = true;\n\n        while (shouldContinue) {\n            try {\n                processResources();\n                \n                Thread.sleep(15000);\n            } catch (InterruptedException ie) {\n                LOG.info(\"Configuration resource watcher thread has been interrupted. Halting execution.\", ie);\n\n                shouldContinue = false;\n                Thread.currentThread().interrupt();\n            }\n        }\n    }","id":1986,"modified_method":"@Override\n   public synchronized void run() {\n      for (ConfigurationResource resource : watchMap.values()) {\n         try {\n            if (resource.updated()) {\n               eventManager.newEvent(ConfigurationEvent.UPDATE, resource);\n               LOG.info(\"Updated \" + resource.name());\n            }\n         } catch (Exception e) {\n            //TODO: Create a logger that is smart enough not to print out errors we don't care about more than once\n         }\n      }\n   }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"public static void main(String[] args) throws Exception {\n        final MutableClusterView view = new ThreadSafeClusterView();\n        final EHCacheDatastoreManager localManager = new EHCacheDatastoreManager(new CacheManager());\n        final HashRingDatastoreManager remoteManager = new HashRingDatastoreManager(\"temp-host-key\", UUIDEncodingProvider.getInstance(), new MD5HashProvider(), view, localManager.getDatastore(\"ds\"));\n        final Datastore datastore = remoteManager.getDatastore(\"papi:datastore/distributed/default\");\n\n        view.updateLocal(new InetSocketAddress(InetAddress.getLocalHost(), 20000));\n        view.updateMembers(new InetSocketAddress[]{\n                    new InetSocketAddress(InetAddress.getLocalHost(), 2101),\n                    new InetSocketAddress(InetAddress.getLocalHost(), 2102),\n                    new InetSocketAddress(InetAddress.getLocalHost(), 2103),\n                    new InetSocketAddress(InetAddress.getLocalHost(), 2104)});\n\n        final String myKey = \"mykey\";\n        final int finishTotal = 9700,\n                sleep1 = 1000,\n                sleep2 = 100000,\n                sleep3 = 200000,\n                sleep4 = 100250;\n\n        total = 0;\n\n        final Thread inserter1 = new Thread(new CacheInserterRunnable(sleep1, finishTotal, datastore, myKey)),\n                inserter2 = new Thread(new CacheInserterRunnable(sleep2, finishTotal, datastore, myKey)),\n                inserter3 = new Thread(new CacheInserterRunnable(sleep3, finishTotal, datastore, myKey)),\n                inserter4 = new Thread(new CacheInserterRunnable(sleep4, finishTotal, datastore, myKey));\n\n        final Thread reader = new Thread(new Runnable() {\n\n            @Override\n            public void run() {\n                try {\n                    while (true) {\n                        try {\n                            Thread.sleep(400);\n                        } catch (InterruptedException ie) {\n                            break;\n                        }\n\n                        final CacheableValue myValue = datastore.get(myKey).elementAs(CacheableValue.class);\n                        System.out.println(\"Acquired: \" + myValue.getValue() + \" out of \" + total\n                                + \"\\t\\t\\t\\t- Potential Drift Ratio: \" + ((double) myValue.getValue() / (double) total)\n                                + \"\\t\\t- Elapsed time: \" + (System.currentTimeMillis() - beginTimestamp) + \"ms\");\n                    }\n                } catch (Exception ex) {\n                    ex.printStackTrace();\n                }\n            }\n        }, \"Reader 1\");\n\n        Thread.sleep(4000);\n\n        final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        final ObjectOutputStream oos = new ObjectOutputStream(baos);\n\n        oos.writeObject(new CacheableValue(0, true));\n        oos.close();\n\n        beginTimestamp = System.currentTimeMillis();\n\n        datastore.put(myKey, baos.toByteArray(), 200, TimeUnit.SECONDS);\n\n        reader.start();\n        inserter1.start();\n        inserter2.start();\n        inserter3.start();\n        inserter4.start();\n\n        Thread.sleep(200000);\n\n        System.exit(0);\n    }","id":1987,"modified_method":"public static void main(String[] args) throws Exception {\n        final MutableClusterView view = new ThreadSafeClusterView();\n        final EHCacheDatastoreManager localManager = new EHCacheDatastoreManager(new CacheManager());\n        final HashRingDatastoreManager remoteManager = new HashRingDatastoreManager(\"temp-host-key\", UUIDEncodingProvider.getInstance(), new MD5HashProvider(), view, localManager.getDatastore(\"ds\"));\n        final Datastore datastore = remoteManager.getDatastore(\"papi:datastore/distributed/default\");\n\n        view.updateLocal(new InetSocketAddress(InetAddress.getLocalHost(), 20000));\n        view.updateMembers(new InetSocketAddress[]{\n                    new InetSocketAddress(InetAddress.getLocalHost(), 2101),\n                    new InetSocketAddress(InetAddress.getLocalHost(), 2102),\n                    new InetSocketAddress(InetAddress.getLocalHost(), 2103),\n                    new InetSocketAddress(InetAddress.getLocalHost(), 2104)});\n\n        final String myKey = \"mykey\";\n        final int finishTotal = 9700,\n                sleep1 = 1000,\n                sleep2 = 2000,\n                sleep3 = 1200,\n                sleep4 = 3000;\n\n        total = 0;\n\n        final Thread inserter1 = new Thread(new CacheInserterRunnable(sleep1, finishTotal, datastore, myKey)),\n                inserter2 = new Thread(new CacheInserterRunnable(sleep2, finishTotal, datastore, myKey)),\n                inserter3 = new Thread(new CacheInserterRunnable(sleep3, finishTotal, datastore, myKey)),\n                inserter4 = new Thread(new CacheInserterRunnable(sleep4, finishTotal, datastore, myKey));\n\n        final Thread reader = new Thread(new Runnable() {\n\n            @Override\n            public void run() {\n                try {\n                    while (true) {\n                        try {\n                            Thread.sleep(400);\n                        } catch (InterruptedException ie) {\n                            break;\n                        }\n\n                        final CacheableValue myValue = datastore.get(myKey).elementAs(CacheableValue.class);\n                        System.out.println(\"Acquired: \" + myValue.getValue() + \" out of \" + total\n                                + \"\\t\\t\\t\\t- Potential Drift Ratio: \" + ((double) myValue.getValue() / (double) total)\n                                + \"\\t\\t- Elapsed time: \" + (System.currentTimeMillis() - beginTimestamp) + \"ms\");\n                    }\n                } catch (Exception ex) {\n                    ex.printStackTrace();\n                }\n            }\n        }, \"Reader 1\");\n\n        Thread.sleep(4000);\n\n        final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        final ObjectOutputStream oos = new ObjectOutputStream(baos);\n\n        oos.writeObject(new CacheableValue(0, true));\n        oos.close();\n\n        beginTimestamp = System.currentTimeMillis();\n\n        datastore.put(myKey, baos.toByteArray(), 200, TimeUnit.SECONDS);\n\n        reader.start();\n        inserter1.start();\n        inserter2.start();\n        inserter3.start();\n        inserter4.start();\n\n        Thread.sleep(200000);\n\n        System.exit(0);\n    }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"public void initialize(ServletContext ctx) {\n      eventManager.listen(powerApiUpdateManagerEventListener, ConfigurationEvent.class);\n\n      resourceWatcher = new ConfigurationResourceWatcher(eventManager);\n      configurationResourceWatcherThread = new DestroyableThreadWrapper(\n              ServletContextHelper.getPowerApiContext(ctx).threadingService().newThread(resourceWatcher, \"Configuration Watcher Thread\"), resourceWatcher);\n\n      configurationResourceWatcherThread.start();\n   }","id":1988,"modified_method":"public void initialize(ServletContext ctx) {\n      final ThreadingService threadingService = ServletContextHelper.getPowerApiContext(ctx).threadingService();\n      \n      // Initialize the resource watcher\n      resourceWatcher = new ConfigurationResourceWatcher(eventManager);\n      \n      final Poller pollerLogic = new Poller(resourceWatcher, 15000);\n      \n      resrouceWatcherThread = new DestroyableThreadWrapper(\n              threadingService.newThread(pollerLogic, \"Configuration Watcher Thread\"), pollerLogic);\n      resrouceWatcherThread.start();\n      \n      // Listen for configuration events\n      eventManager.listen(powerApiUpdateManagerEventListener, ConfigurationEvent.class);\n   }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n   public synchronized void destroy() {\n      configurationResourceWatcherThread.destroy();\n      listenerMap.clear();\n   }","id":1989,"modified_method":"@Override\n   public synchronized void destroy() {\n      resrouceWatcherThread.destroy();\n      listenerMap.clear();\n   }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public void contextInitialized(ServletContextEvent sce) {\n        final ServletContext servletContext = sce.getServletContext();\n        final String showMePapi = servletContext.getInitParameter(\"show-me-papi\");\n        \n        if (showMePapi == null || showMePapi.equalsIgnoreCase(\"true\")) {\n            PapiBanner.print(LOG);\n        }\n        \n        try {\n            this.initialContext = new InitialServiceContextFactory().getInitialContext();\n        } catch (NamingException ne) {\n            handleNamingException(\"Failed to build initial context\", ne);\n        }\n        \n        try {\n            // Initial subcontexts\n            initialContext.createSubcontext(\"kernel\");\n            initialContext.createSubcontext(\"services\");\n        } catch (NamingException ne) {\n            handleNamingException(\"Failed to create required subcontexts in the JNDI initial context.\", ne);\n        }\n\n        // Most bootstrap steps require or will try to load some kind of\n        // configuration so we need to set our naming context in the servlet context\n        // first before anything else\n        ServletContextHelper.setPowerApiContext(servletContext, initialContext);\n\n        // Services Bootstrap\n\n        // Threading Service\n        final ServiceContext threadManagerContext = bindServletContextBoundService(new ThreadingServiceContext());\n        threadManagerContext.contextInitialized(sce);\n\n        // Event kernel init\n        final ServiceContext eventKernelContext = bindServletContextBoundService(new EventManagerServiceContext());\n        eventKernelContext.contextInitialized(sce);\n\n        // Configuration Services\n        final ConfigurationServiceContext configurationManager = bindServletContextBoundService(new ConfigurationServiceContext());\n        configurationManager.contextInitialized(sce);\n\n        // Response message service\n        final ResponseMessageServiceContext responseMessageServiceManager = bindServletContextBoundService(new ResponseMessageServiceContext());\n        responseMessageServiceManager.contextInitialized(sce);\n\n        // Datastore Service\n        final DatastoreServiceContext datastoreServiceContext = bindServletContextBoundService(new DatastoreServiceContext());\n        datastoreServiceContext.contextInitialized(sce);\n\n        // Start up the class loader manager\n        final ClassLoaderServiceContext clManager = bindServletContextBoundService(new ClassLoaderServiceContext());\n        clManager.contextInitialized(sce);\n\n        /// Start the deployment manager\n        final ArtifactManagerServiceContext artifactManager = bindServletContextBoundService(new ArtifactManagerServiceContext());\n        artifactManager.contextInitialized(sce);\n    }","id":1990,"modified_method":"@Override\n    public void contextInitialized(ServletContextEvent sce) {\n        final ServletContext servletContext = sce.getServletContext();\n        final String showMePapi = servletContext.getInitParameter(\"show-me-papi\");\n        \n        if (showMePapi == null || showMePapi.equalsIgnoreCase(\"true\")) {\n            PapiBanner.print(LOG);\n        }\n        \n        try {\n            this.initialContext = new InitialServiceContextFactory().getInitialContext();\n        } catch (NamingException ne) {\n            handleNamingException(\"Failed to build initial context\", ne);\n        }\n        \n        try {\n            // Initial subcontexts\n            initialContext.createSubcontext(\"kernel\");\n            initialContext.createSubcontext(\"services\");\n        } catch (NamingException ne) {\n            handleNamingException(\"Failed to create required subcontexts in the JNDI initial context.\", ne);\n        }\n\n        // Most bootstrap steps require or will try to load some kind of\n        // configuration so we need to set our naming context in the servlet context\n        // first before anything else\n        ServletContextHelper.setPowerApiContext(servletContext, initialContext);\n\n        // Services Bootstrap\n\n        // Threading Service\n        initService(new ThreadingServiceContext(), sce);\n\n        // Event kernel init\n        initService(new EventManagerServiceContext(), sce);\n\n        // Configuration Services\n        initService(new ConfigurationServiceContext(), sce);\n\n        // Response message service\n        initService(new ResponseMessageServiceContext(), sce);\n\n        // Datastore Service\n        initService(new DatastoreServiceContext(), sce);\n\n        // Start up the class loader manager\n        initService(new ClassLoaderServiceContext(), sce);\n\n        /// Start the deployment manager\n        initService(new ArtifactManagerServiceContext(), sce);\n\n        /// Start the filter chain garbage collector\n        initService(new FilterChainGCServiceContext(), sce);\n    }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"public PowerFilter() {\n        KeyedStackLock updateLock = new KeyedStackLock();\n        Object updateKey = new Object();\n        firstInitialization = true;\n\n        filterChain = new LinkedList<FilterContext>();\n\n        systemModelConfigurationListener = new LockedConfigurationUpdater<PowerProxy>(updateLock, updateKey) {\n\n            final Object internalLock = new Object();\n\n            // TODO:Review - There's got to be a better way of initializing PowerFilter. Maybe the app management service could be queryable.\n            @Override\n            public void onConfigurationUpdated(PowerProxy configurationObject) {\n                currentSystemModel = configurationObject;\n\n                // This event must be fired only after we have finished configuring the system.\n                // This prevents a race condition illustrated below where the application\n                // deployment event is caught but does nothing due to a null configuration\n                synchronized (internalLock) {\n                    if (firstInitialization) {\n                        firstInitialization = false;\n                        papiContext.eventService().newEvent(PowerFilterEvent.POWER_FILTER_INITIALIZED, System.currentTimeMillis());\n                    } else {\n                        final List<FilterContext> newFilterChain = new PowerFilterChainBuilder(filterConfig).build(papiContext.classLoader(), currentSystemModel);\n                        updateFilterList(newFilterChain);\n                    }\n                }\n            }\n        };\n\n        applicationDeploymentListener = new EventListener<ApplicationDeploymentEvent, String>() {\n\n            @Override\n            public void onEvent(Event<ApplicationDeploymentEvent, String> e) {\n                LOG.info(\"Application collection has been modified. Application that changed: \" + e.payload());\n\n                if (currentSystemModel != null) {\n                    final List<FilterContext> newFilterChain = new PowerFilterChainBuilder(filterConfig).build(papiContext.classLoader(), currentSystemModel);\n\n                    updateFilterList(newFilterChain);\n                }\n            }\n        };\n    }","id":1991,"modified_method":"public PowerFilter() {\n        KeyedStackLock updateLock = new KeyedStackLock();\n        Object updateKey = new Object();\n        firstInitialization = true;\n\n        filterChain = new LinkedList<FilterContext>();\n\n        systemModelConfigurationListener = new LockedConfigurationUpdater<PowerProxy>(updateLock, updateKey) {\n\n            final Object internalLock = new Object();\n\n            // TODO:Review - There's got to be a better way of initializing PowerFilter. Maybe the app management service could be queryable.\n            @Override\n            public void onConfigurationUpdated(PowerProxy configurationObject) {\n                currentSystemModel = configurationObject;\n\n                // This event must be fired only after we have finished configuring the system.\n                // This prevents a race condition illustrated below where the application\n                // deployment event is caught but does nothing due to a null configuration\n                synchronized (internalLock) {\n                    if (firstInitialization) {\n                        firstInitialization = false;\n                        papiContext.eventService().newEvent(PowerFilterEvent.POWER_FILTER_CONFIGURED, System.currentTimeMillis());\n                    } else {\n                        final List<FilterContext> newFilterChain = new FilterContextInitializer(filterConfig).buildFilterContexts(papiContext.classLoader(), currentSystemModel);\n                        updateFilterChainBuilder(newFilterChain);\n                    }\n                }\n            }\n        };\n\n        applicationDeploymentListener = new EventListener<ApplicationDeploymentEvent, String>() {\n\n            @Override\n            public void onEvent(Event<ApplicationDeploymentEvent, String> e) {\n                LOG.info(\"Application collection has been modified. Application that changed: \" + e.payload());\n\n                if (currentSystemModel != null) {\n                    final List<FilterContext> newFilterChain = new FilterContextInitializer(filterConfig).buildFilterContexts(papiContext.classLoader(), currentSystemModel);\n\n                    updateFilterChainBuilder(newFilterChain);\n                }\n            }\n        };\n    }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        HttpServletHelper.verifyRequestAndResponse(LOG, request, response);\n\n        final MutableHttpServletRequest mutableHttpRequest = MutableHttpServletRequest.wrap((HttpServletRequest) request);\n        final MutableHttpServletResponse mutableHttpResponse = MutableHttpServletResponse.wrap((HttpServletResponse) response);\n        final PowerFilterChain requestFilterChainState = new PowerFilterChain(Collections.unmodifiableList(this.filterChain), chain, filterConfig.getServletContext());\n\n        mutableHttpResponse.setHeader(CommonHttpHeader.CONTENT_TYPE.getHeaderKey(), mutableHttpRequest.getHeader(CommonHttpHeader.ACCEPT.getHeaderKey()));\n\n        try {\n            requestFilterChainState.startFilterChain(mutableHttpRequest, mutableHttpResponse);\n        } catch (IOException t) {\n            mutableHttpResponse.setStatus(HttpStatusCode.BAD_GATEWAY.intValue());\n\n            LOG.error(\"Exception encountered while processing filter chain\", t);\n        } catch (ServletException t) {\n            mutableHttpResponse.setStatus(HttpStatusCode.BAD_GATEWAY.intValue());\n\n            LOG.error(\"Exception encountered while processing filter chain\", t);\n        } finally {\n            papiContext.responseMessageService().handle(mutableHttpRequest, mutableHttpResponse);\n\n            mutableHttpResponse.commitBufferToServletOutputStream();\n        }\n    }","id":1992,"modified_method":"@Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        HttpServletHelper.verifyRequestAndResponse(LOG, request, response);\n\n        final MutableHttpServletRequest mutableHttpRequest = MutableHttpServletRequest.wrap((HttpServletRequest) request);\n        final MutableHttpServletResponse mutableHttpResponse = MutableHttpServletResponse.wrap((HttpServletResponse) response);\n        final PowerFilterChain requestFilterChainState = powerFilterChainBuilder.newPowerFilterChain(chain, filterConfig.getServletContext());\n\n        mutableHttpResponse.setHeader(CommonHttpHeader.CONTENT_TYPE.getHeaderKey(), mutableHttpRequest.getHeader(CommonHttpHeader.ACCEPT.getHeaderKey()));\n\n        try {\n            requestFilterChainState.startFilterChain(mutableHttpRequest, mutableHttpResponse);\n        } catch (IOException t) {\n            mutableHttpResponse.setStatus(HttpStatusCode.BAD_GATEWAY.intValue());\n\n            LOG.error(\"Exception encountered while processing filter chain\", t);\n        } catch (ServletException t) {\n            mutableHttpResponse.setStatus(HttpStatusCode.BAD_GATEWAY.intValue());\n\n            LOG.error(\"Exception encountered while processing filter chain\", t);\n        } finally {\n            papiContext.responseMessageService().handle(mutableHttpRequest, mutableHttpResponse);\n\n            mutableHttpResponse.commitBufferToServletOutputStream();\n        }\n    }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"private synchronized void updateFilterList(List<FilterContext> newFilterChain) {\n        this.filterChain = new LinkedList<FilterContext>(newFilterChain);\n    }","id":1993,"modified_method":"private synchronized void updateFilterChainBuilder(List<FilterContext> newFilterChain) {\n        if (powerFilterChainBuilder != null) {\n           papiContext.filterChainGarbageCollectorService().retireFilterChainBuilder(powerFilterChainBuilder);\n        }\n        \n        powerFilterChainBuilder = new PowerFilterChainBuilder(newFilterChain);\n    }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"public PowerFilterChain(List<FilterContext> filterChainCopy, FilterChain containerFilterChain, ServletContext context) {\n        this.filterChainCopy = new LinkedList<FilterContext>(filterChainCopy);\n        this.containerFilterChain = containerFilterChain;\n        this.context = context;\n        this.containerClassLoader = Thread.currentThread().getContextClassLoader();\n    }","id":1994,"modified_method":"public PowerFilterChain(List<FilterContext> filterChainCopy, FilterChain containerFilterChain, ServletContext context, ResourceMonitor resourceMontior) {\n      this.filterChainCopy = new LinkedList<FilterContext>(filterChainCopy);\n      this.containerFilterChain = containerFilterChain;\n      this.context = context;\n      this.containerClassLoader = Thread.currentThread().getContextClassLoader();\n      this.resourceMonitor = resourceMontior;\n   }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"public void startFilterChain(ServletRequest servletRequest, ServletResponse servletResponse) throws IOException, ServletException {\n        doFilter(servletRequest, servletResponse);\n    }","id":1995,"modified_method":"public void startFilterChain(ServletRequest servletRequest, ServletResponse servletResponse) throws IOException, ServletException {\n      resourceMonitor.inUse();\n\n      try {\n         doFilter(servletRequest, servletResponse);\n      } finally {\n         resourceMonitor.released();\n      }\n   }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"public PowerFilterChainBuilder(FilterConfig filterConfig) {\n        filterContextManager = new FilterContextManagerImpl(filterConfig);\n    }","id":1996,"modified_method":"public PowerFilterChainBuilder(List<FilterContext> currentFilterChain) {\n      this.currentFilterChain = currentFilterChain;\n      resourceConsumerMonitor = new ResourceConsumerMonitor();\n   }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldBuild() throws ClassNotFoundException {\n            ApplicationClassLoaderManager mockedEarClassLoaderContextManager = mock(ApplicationClassLoaderManager.class);\n\n            EarClassLoaderContext mockedEarClassLoaderContext = mock(EarClassLoaderContext.class);\n            EarDescriptor mockedEarDescriptor = mock(EarDescriptor.class);\n            Map<String, String> mockedFiltersMap = mock(Map.class);\n            EarClassLoader mockedEarClassLoader = mock(EarClassLoader.class);\n\n            when(mockedEarClassLoaderContext.getEarDescriptor()).thenReturn(mockedEarDescriptor);\n            when(mockedEarDescriptor.getRegisteredFilters()).thenReturn(mockedFiltersMap);\n            when(mockedEarClassLoaderContext.getClassLoader()).thenReturn(mockedEarClassLoader);\n            when(mockedFiltersMap.get(any(String.class))).thenReturn(\"FilterClassName\");\n            when(mockedEarClassLoader.loadClass(any(String.class))).thenReturn((Class) FakeFilterClass.class);\n\n            Collection<EarClassLoaderContext> loadedApplications = new LinkedList<EarClassLoaderContext>();\n            loadedApplications.add(mockedEarClassLoaderContext);\n\n            when(mockedEarClassLoaderContextManager.getLoadedApplications()).thenReturn(loadedApplications);\n\n            Filter mockedFilter = mock(Filter.class);\n            when(mockedFilter.getName()).thenReturn(\"filterName\");\n\n            PowerFilterChainBuilder powerFilterChainBuilder = new PowerFilterChainBuilder(mockedFilterConfig);\n\n            PowerProxy mockedPowerProxy = mock(PowerProxy.class);\n            List<Host> hosts = createTestHosts();\n            when(mockedPowerProxy.getHost()).thenReturn(hosts);\n\n            List<FilterContext> powerFilterChain = powerFilterChainBuilder.build(mockedEarClassLoaderContextManager, mockedPowerProxy);\n\n            assertNotNull(powerFilterChain);\n        }","id":1997,"modified_method":"@Test\n        public void shouldBuild() throws ClassNotFoundException {\n            ApplicationClassLoaderManager mockedEarClassLoaderContextManager = mock(ApplicationClassLoaderManager.class);\n\n            EarClassLoaderContext mockedEarClassLoaderContext = mock(EarClassLoaderContext.class);\n            EarDescriptor mockedEarDescriptor = mock(EarDescriptor.class);\n            Map<String, String> mockedFiltersMap = mock(Map.class);\n            EarClassLoader mockedEarClassLoader = mock(EarClassLoader.class);\n\n            when(mockedEarClassLoaderContext.getEarDescriptor()).thenReturn(mockedEarDescriptor);\n            when(mockedEarDescriptor.getRegisteredFilters()).thenReturn(mockedFiltersMap);\n            when(mockedEarClassLoaderContext.getClassLoader()).thenReturn(mockedEarClassLoader);\n            when(mockedFiltersMap.get(any(String.class))).thenReturn(\"FilterClassName\");\n            when(mockedEarClassLoader.loadClass(any(String.class))).thenReturn((Class) FakeFilterClass.class);\n\n            Collection<EarClassLoaderContext> loadedApplications = new LinkedList<EarClassLoaderContext>();\n            loadedApplications.add(mockedEarClassLoaderContext);\n\n            when(mockedEarClassLoaderContextManager.getLoadedApplications()).thenReturn(loadedApplications);\n\n            Filter mockedFilter = mock(Filter.class);\n            when(mockedFilter.getName()).thenReturn(\"filterName\");\n\n            FilterContextInitializer powerFilterChainBuilder = new FilterContextInitializer(mockedFilterConfig);\n\n            PowerProxy mockedPowerProxy = mock(PowerProxy.class);\n            List<Host> hosts = createTestHosts();\n            when(mockedPowerProxy.getHost()).thenReturn(hosts);\n\n            List<FilterContext> powerFilterChain = powerFilterChainBuilder.buildFilterContexts(mockedEarClassLoaderContextManager, mockedPowerProxy);\n\n            assertNotNull(powerFilterChain);\n        }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldInitialize() {\n            FilterConfig mockedFilterConfig = mock(FilterConfig.class);\n            PowerFilterChainBuilder powerFilterChainBuilder = new PowerFilterChainBuilder(mockedFilterConfig);\n\n            assertNotNull(powerFilterChainBuilder);\n        }","id":1998,"modified_method":"@Test\n        public void shouldInitialize() {\n            FilterConfig mockedFilterConfig = mock(FilterConfig.class);\n            FilterContextInitializer powerFilterChainBuilder = new FilterContextInitializer(mockedFilterConfig);\n\n            assertNotNull(powerFilterChainBuilder);\n        }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldReturnEmptyList() throws ClassNotFoundException {\n            ApplicationClassLoaderManager mockedEarClassLoaderContextManager = mock(ApplicationClassLoaderManager.class);\n\n            EarClassLoaderContext mockedEarClassLoaderContext = mock(EarClassLoaderContext.class);\n            EarDescriptor mockedEarDescriptor = mock(EarDescriptor.class);\n            Map<String, String> mockedFiltersMap = mock(Map.class);\n            EarClassLoader mockedEarClassLoader = mock(EarClassLoader.class);\n\n            when(mockedEarClassLoaderContext.getEarDescriptor()).thenReturn(mockedEarDescriptor);\n            when(mockedEarDescriptor.getRegisteredFilters()).thenReturn(mockedFiltersMap);\n            when(mockedEarClassLoaderContext.getClassLoader()).thenReturn(mockedEarClassLoader);\n            when(mockedFiltersMap.get(any(String.class))).thenReturn(\"FilterClassName\");\n            when(mockedEarClassLoader.loadClass(any(String.class))).thenReturn(null);\n\n            Collection<EarClassLoaderContext> loadedApplications = new LinkedList<EarClassLoaderContext>();\n            loadedApplications.add(mockedEarClassLoaderContext);\n\n            when(mockedEarClassLoaderContextManager.getLoadedApplications()).thenReturn(loadedApplications);\n\n            Filter mockedFilter = mock(Filter.class);\n            when(mockedFilter.getName()).thenReturn(\"filterName\");\n\n            PowerFilterChainBuilder powerFilterChainBuilder = new PowerFilterChainBuilder(mockedFilterConfig);\n\n            PowerProxy mockedPowerProxy = mock(PowerProxy.class);\n            List<Host> hosts = createTestHosts();\n            when(mockedPowerProxy.getHost()).thenReturn(hosts);\n\n            List<FilterContext> powerFilterChain = powerFilterChainBuilder.build(mockedEarClassLoaderContextManager, mockedPowerProxy);\n\n            assertEquals(0, powerFilterChain.size());\n        }","id":1999,"modified_method":"@Test\n        public void shouldReturnEmptyList() throws ClassNotFoundException {\n            ApplicationClassLoaderManager mockedEarClassLoaderContextManager = mock(ApplicationClassLoaderManager.class);\n\n            EarClassLoaderContext mockedEarClassLoaderContext = mock(EarClassLoaderContext.class);\n            EarDescriptor mockedEarDescriptor = mock(EarDescriptor.class);\n            Map<String, String> mockedFiltersMap = mock(Map.class);\n            EarClassLoader mockedEarClassLoader = mock(EarClassLoader.class);\n\n            when(mockedEarClassLoaderContext.getEarDescriptor()).thenReturn(mockedEarDescriptor);\n            when(mockedEarDescriptor.getRegisteredFilters()).thenReturn(mockedFiltersMap);\n            when(mockedEarClassLoaderContext.getClassLoader()).thenReturn(mockedEarClassLoader);\n            when(mockedFiltersMap.get(any(String.class))).thenReturn(\"FilterClassName\");\n            when(mockedEarClassLoader.loadClass(any(String.class))).thenReturn(null);\n\n            Collection<EarClassLoaderContext> loadedApplications = new LinkedList<EarClassLoaderContext>();\n            loadedApplications.add(mockedEarClassLoaderContext);\n\n            when(mockedEarClassLoaderContextManager.getLoadedApplications()).thenReturn(loadedApplications);\n\n            Filter mockedFilter = mock(Filter.class);\n            when(mockedFilter.getName()).thenReturn(\"filterName\");\n\n            FilterContextInitializer powerFilterChainBuilder = new FilterContextInitializer(mockedFilterConfig);\n\n            PowerProxy mockedPowerProxy = mock(PowerProxy.class);\n            List<Host> hosts = createTestHosts();\n            when(mockedPowerProxy.getHost()).thenReturn(hosts);\n\n            List<FilterContext> powerFilterChain = powerFilterChainBuilder.buildFilterContexts(mockedEarClassLoaderContextManager, mockedPowerProxy);\n\n            assertEquals(0, powerFilterChain.size());\n        }","commit_id":"8cc6b74007e4ec535a300638d73e5ce907773756","url":"https://github.com/rackerlabs/repose"}]