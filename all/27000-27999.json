[{"original_method":"@Test\n    public void webappShouldBeDeployed() throws Exception\n    {\n        sendRequestAndAssertCorrectResponse(\"https://localhost:63083/test/hello\");\n    }","id":27000,"modified_method":"@Test\n    public void webappShouldBeDeployed() throws Exception\n    {\n        sendRequestAndAssertCorrectResponse(String.format(\"https://localhost:%d/%s\", httpPort.getNumber(), WEBAPP_TEST_URL));\n    }","commit_id":"2e88fdda37bf43cfc49853b57712427147e34310","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void webappWithDefaultsShouldBeDeployed() throws Exception\n    {\n        sendRequestAndAssertCorrectResponse(String.format(\"http://localhost:%s/test/hello\",dynamicPort.getNumber()));\n    }","id":27001,"modified_method":"@Test\n    public void webappWithDefaultsShouldBeDeployed() throws Exception\n    {\n        sendRequestAndAssertCorrectResponse(String.format(\"http://localhost:%s/%s\", dynamicPort.getNumber(), WEBAPP_TEST_URL));\n    }","commit_id":"2e88fdda37bf43cfc49853b57712427147e34310","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void webappShouldBeDeployed() throws Exception\n    {\n        sendRequestAndAssertCorrectResponse(\"http://localhost:63081/test/hello\");\n    }","id":27002,"modified_method":"@Test\n    public void webappShouldBeDeployed() throws Exception\n    {\n        sendRequestAndAssertCorrectResponse(String.format(\"http://localhost:%d/%s\", httpPort.getNumber(), WEBAPP_TEST_URL));\n    }","commit_id":"2e88fdda37bf43cfc49853b57712427147e34310","url":"https://github.com/mulesoft/mule"},{"original_method":"public void addLoginServices(LoginServices services)\n    {        \n        if (this.loginServices != null )\n        {\n            throw new BuildException(\"Only one <loginServices> tag is allowed!\");\n        }\n        \n        this.loginServices = services;  \n    }","id":27003,"modified_method":"/**\n     * @param services\n     */\n    public void addLoginServices(LoginServices services)\n    {        \n        if (this.loginServices != null )\n            throw new BuildException(\"Only one <loginServices> tag is allowed!\");       \n        this.loginServices = services;  \n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public String getRequestLog()\n    {\n        if (requestLog != null)\n        {\n            return requestLog.getClass().getName();\n        }\n\n        return \"\";\n    }","id":27004,"modified_method":"/**\n     * @return\n     */\n    public String getRequestLog()\n    {\n        if (requestLog != null)\n        {\n            return requestLog.getClass().getName();\n        }\n\n        return \"\";\n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public File getTempDirectory()\n    {\n        return tempDirectory;\n    }","id":27005,"modified_method":"/**\n     * @return\n     */\n    public File getTempDirectory()\n    {\n        return tempDirectory;\n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void setRequestLog(String className)\n    {\n        try\n        {\n            this.requestLog = (RequestLog) Class.forName(className).newInstance();\n        }\n        catch (InstantiationException e)\n        {\n            throw new BuildException(\"Request logger instantiation exception: \" + e);\n        }\n        catch (IllegalAccessException e)\n        {\n            throw new BuildException(\"Request logger instantiation exception: \" + e);\n        }\n        catch (ClassNotFoundException e)\n        {\n            throw new BuildException(\"Unknown request logger class: \" + className);\n        }\n    }","id":27006,"modified_method":"/**\n     * @param className\n     */\n    public void setRequestLog(String className)\n    {\n        try\n        {\n            this.requestLog = (RequestLog) Class.forName(className).newInstance();\n        }\n        catch (InstantiationException e)\n        {\n            throw new BuildException(\"Request logger instantiation exception: \" + e);\n        }\n        catch (IllegalAccessException e)\n        {\n            throw new BuildException(\"Request logger instantiation exception: \" + e);\n        }\n        catch (ClassNotFoundException e)\n        {\n            throw new BuildException(\"Unknown request logger class: \" + className);\n        }\n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void setTempDirectory(File tempDirectory)\n    {\n        this.tempDirectory = tempDirectory;\n    }","id":27007,"modified_method":"/**\n     * @param tempDirectory\n     */\n    public void setTempDirectory(File tempDirectory)\n    {\n        this.tempDirectory = tempDirectory;\n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public File getJettyXml()\n    {\n        return jettyXml;\n    }","id":27008,"modified_method":"/**\n     * @return\n     */\n    public File getJettyXml()\n    {\n        return jettyXml;\n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void setJettyXml(File jettyXml)\n    {\n        this.jettyXml = jettyXml;\n    }","id":27009,"modified_method":"/**\n     * @param jettyXml\n     */\n    public void setJettyXml(File jettyXml)\n    {\n        this.jettyXml = jettyXml;\n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * Executes this Ant task. The build flow is being stopped until Jetty\n     * server stops.\n     *\n     * @throws BuildException\n     */\n    public void execute() throws BuildException\n    {\n\n        TaskLog.log(\"Configuring Jetty for project: \" + getProject().getName());\n        WebApplicationProxyImpl.setBaseTempDirectory(tempDirectory);\n        setSystemProperties();\n\n        List connectorsList = null;\n\n        if (connectors != null)\n        {\n            connectorsList = connectors.getConnectors();\n        }\n        else\n        {\n            connectorsList = new Connectors(jettyPort,30000).getDefaultConnectors();\n        }\n\n        List loginServicesList = (loginServices != null?loginServices.getLoginServices():new ArrayList());\n        ServerProxy server = new ServerProxyImpl(connectorsList,loginServicesList,requestLog,jettyXml);\n\n        try\n        {\n            Iterator iterator = webapps.iterator();\n            while (iterator.hasNext())\n            {\n                WebApp webAppConfiguration = (WebApp)iterator.next();\n                WebApplicationProxyImpl webApp = new WebApplicationProxyImpl(webAppConfiguration.getName());\n                webApp.setSourceDirectory(webAppConfiguration.getWarFile());\n                webApp.setContextPath(webAppConfiguration.getContextPath());\n                webApp.setWebXml(webAppConfiguration.getWebXmlFile());\n                webApp.setJettyEnvXml(webAppConfiguration.getJettyEnvXml());\n                webApp.setClassPathFiles(webAppConfiguration.getClassPathFiles());\n                webApp.setLibrariesConfiguration(webAppConfiguration.getLibrariesConfiguration());\n                webApp.setExtraScanTargetsConfiguration(webAppConfiguration.getScanTargetsConfiguration());\n                webApp.setContextHandlers(webAppConfiguration.getContextHandlers());\n                webApp.setAttributes(webAppConfiguration.getAttributes());\n                webApp.setWebDefaultXmlFile(webAppConfiguration.getWebDefaultXmlFile());\n\n                server.addWebApplication(webApp,webAppConfiguration.getScanIntervalSeconds());\n            }\n        }\n        catch (Exception e)\n        {\n            throw new BuildException(e);\n        }\n\n        server.start();\n    }","id":27010,"modified_method":"/**\n     * Executes this Ant task. The build flow is being stopped until Jetty\n     * server stops.\n     *\n     * @throws BuildException\n     */\n    public void execute() throws BuildException\n    {\n\n        TaskLog.log(\"Configuring Jetty for project: \" + getProject().getName());\n        \n        setSystemProperties();\n\n        List<Connector> connectorsList = null;\n\n        if (connectors != null)\n            connectorsList = connectors.getConnectors();\n        else\n            connectorsList = new Connectors(jettyPort,30000).getDefaultConnectors();\n\n        List<LoginService> loginServicesList = (loginServices != null?loginServices.getLoginServices():new ArrayList<LoginService>());\n        ServerProxyImpl server = new ServerProxyImpl();\n        server.setConnectors(connectorsList);\n        server.setLoginServices(loginServicesList);\n        server.setRequestLog(requestLog);\n        server.setJettyXml(jettyXml);\n        server.setDaemon(daemon);\n        server.setStopPort(stopPort);\n        server.setStopKey(stopKey);\n        server.setContextHandlers(contextHandlers);\n        server.setTempDirectory(tempDirectory);\n        server.setScanIntervalSecs(scanIntervalSeconds);\n\n        try\n        {\n            for (WebAppContext webapp: webapps)\n            {\n                server.addWebApplication((AntWebAppContext)webapp);\n            }\n        }\n        catch (Exception e)\n        {\n            throw new BuildException(e);\n        }\n\n        server.start();\n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * Starts web applications' scanners.\n     */\n    private void startScanners() throws Exception\n    {\n        Iterator i = webApplications.keySet().iterator();\n        while (i.hasNext())\n        {\n            WebApplicationProxyImpl webApp = (WebApplicationProxyImpl) i.next();\n            Integer scanIntervalSeconds = (Integer) webApplications.get(webApp);\n            JettyRunTask.startScanner(webApp, scanIntervalSeconds.intValue());\n        }\n    }","id":27011,"modified_method":"/**\n     * Starts web applications' scanners.\n     */\n    private void startScanners() throws Exception\n    {\n        for (AntWebAppContext awc:webApplications)\n        {\n            if (scanIntervalSecs <= 0)\n                return;\n\n            List<File> scanList = awc.getScanFiles();\n \n            TaskLog.log(\"Web application '\" + awc + \"': starting scanner at interval of \"\n                    + scanIntervalSecs + \" seconds.\");\n            Scanner.Listener changeListener = new WebAppScannerListener(awc);\n            Scanner scanner = new Scanner();\n            scanner.setScanInterval(scanIntervalSecs);\n            scanner.addListener(changeListener);\n            scanner.setScanDirs(scanList);\n            scanner.setReportExistingFilesOnStartup(false);\n            scanner.start();\n        }  \n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * @see org.eclipse.jetty.ant.utils.ServerProxy#addWebApplication(WebApplicationProxy,\n     *      int)\n     */\n    public void addWebApplication(WebApplicationProxy webApp, int scanIntervalSeconds)\n    {\n        webApp.createApplicationContext(contexts);\n\n        if (scanIntervalSeconds > 0)\n        {\n            webApplications.put(webApp, new Integer(scanIntervalSeconds));\n        }\n    }","id":27012,"modified_method":"public void addWebApplication(AntWebAppContext webApp)\n    {\n       webApplications.add(webApp);\n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * Configures Jetty server before adding any web applications to it.\n     */\n    private void configure()\n    {\n        // Applies external configuration via jetty.xml\n        applyJettyXml();\n\n        // Configures connectors for this server instance.\n        Iterator<Connector> connectorIterator = connectors.iterator();\n        while (connectorIterator.hasNext())\n        {\n            Connector jettyConnector = (Connector) connectorIterator.next();\n            ServerConnector jc = new ServerConnector(server);\n            \n            jc.setPort(jettyConnector.getPort());\n            jc.setIdleTimeout(jettyConnector.getMaxIdleTime());\n            \n            \n            server.addConnector(jc);\n            \n\n        }\n\n        // Configures login services\n        Iterator servicesIterator = loginServices.iterator();\n        while (servicesIterator.hasNext())\n        {\n            LoginService service = (LoginService) servicesIterator.next();\n            server.addBean(service);\n        }\n\n        // Does not cache resources, to prevent Windows from locking files\n        Resource.setDefaultUseCaches(false);\n\n        // Set default server handlers\n        configureHandlers();\n    }","id":27013,"modified_method":"/**\n     * Configures Jetty server before adding any web applications to it.\n     */\n    private void configure()\n    {\n        if (configured)\n            return;\n        \n        configured = true;\n        \n        if (tempDirectory != null && !tempDirectory.exists())\n            tempDirectory.mkdirs();\n        \n        // Applies external configuration via jetty.xml\n        applyJettyXml();\n\n        // Configures connectors for this server instance.\n        if (connectors != null)\n        {\n            for (Connector c:connectors)\n            {\n                ServerConnector jc = new ServerConnector(server);\n\n                jc.setPort(c.getPort());\n                jc.setIdleTimeout(c.getMaxIdleTime());\n\n                server.addConnector(jc);\n            }\n        }\n\n        // Configures login services\n        if (loginServices != null)\n        {\n            for (LoginService ls:loginServices)\n            {\n                server.addBean(ls);\n            }\n        }\n\n        // Does not cache resources, to prevent Windows from locking files\n        Resource.setDefaultUseCaches(false);\n\n        // Set default server handlers\n        configureHandlers();\n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private void configureHandlers()\n    {\n        RequestLogHandler requestLogHandler = new RequestLogHandler();\n        if (requestLog != null)\n        {\n            requestLogHandler.setRequestLog(requestLog);\n        }\n\n        contexts = (ContextHandlerCollection) server\n                .getChildHandlerByClass(ContextHandlerCollection.class);\n        if (contexts == null)\n        {\n            contexts = new ContextHandlerCollection();\n            HandlerCollection handlers = (HandlerCollection) server\n                    .getChildHandlerByClass(HandlerCollection.class);\n            if (handlers == null)\n            {\n                handlers = new HandlerCollection();\n                server.setHandler(handlers);\n                handlers.setHandlers(new Handler[] { contexts, new DefaultHandler(),\n                        requestLogHandler });\n            }\n            else\n            {\n                handlers.addHandler(contexts);\n            }\n        }\n    }","id":27014,"modified_method":"/**\n     * \n     */\n    private void configureHandlers()\n    {\n        RequestLogHandler requestLogHandler = new RequestLogHandler();\n        if (requestLog != null)\n            requestLogHandler.setRequestLog(requestLog);\n\n        contexts = (ContextHandlerCollection) server\n                .getChildHandlerByClass(ContextHandlerCollection.class);\n        if (contexts == null)\n        {\n            contexts = new ContextHandlerCollection();\n            HandlerCollection handlers = (HandlerCollection) server\n                    .getChildHandlerByClass(HandlerCollection.class);\n            if (handlers == null)\n            {\n                handlers = new HandlerCollection();\n                server.setHandler(handlers);\n                handlers.setHandlers(new Handler[] { contexts, new DefaultHandler(),\n                        requestLogHandler });\n            }\n            else\n            {\n                handlers.addHandler(contexts);\n            }\n        }\n        \n        //if there are any extra contexts to deploy\n        if (contextHandlers != null && contextHandlers.getContextHandlers() != null)\n        {\n            for (ContextHandler c:contextHandlers.getContextHandlers())\n                contexts.addHandler(c);\n        }\n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * @see org.eclipse.jetty.ant.utils.ServerProxy#start()\n     */\n    public void start()\n    {\n        try\n        {\n            server.start();\n            \n            System.setProperty(\"jetty.ant.server.port\",\"\" + ((ServerConnector)server.getConnectors()[0]).getLocalPort());\n            \n            String host = ((ServerConnector)server.getConnectors()[0]).getHost();\n            \n            if (host == null)\n            {\n                System.setProperty(\"jetty.ant.server.host\", \"localhost\");\n            }\n            else\n            {\n                System.setProperty(\"jetty.ant.server.host\", host);\n            }\n            \n            startScanners();\n            TaskLog.log(\"Jetty AntTask Started\");\n\n            server.join();\n\n        }\n        catch (InterruptedException e)\n        {\n            new RuntimeException(e);\n        }\n        catch (Exception e)\n        {\n            new RuntimeException(e);\n        }\n    }","id":27015,"modified_method":"/**\n     * @see org.eclipse.jetty.ant.utils.ServerProxy#start()\n     */\n    public void start()\n    {\n        try\n        {\n            configure();\n            \n            configureWebApps();\n            \n            server.start();\n         \n            System.setProperty(\"jetty.ant.server.port\",\"\" + ((ServerConnector)server.getConnectors()[0]).getLocalPort());\n            \n            String host = ((ServerConnector)server.getConnectors()[0]).getHost();\n            \n            if (host == null)\n            {\n                System.setProperty(\"jetty.ant.server.host\", \"localhost\");\n            }\n            else\n            {\n                System.setProperty(\"jetty.ant.server.host\", host);\n            }\n            \n            startMonitor();\n            \n            startScanners();\n            \n            TaskLog.log(\"Jetty AntTask Started\");\n\n            if (!daemon)\n                server.join();\n        }\n        catch (InterruptedException e)\n        {\n            new RuntimeException(e);\n        }\n        catch (Exception e)\n        {\n            new RuntimeException(e);\n        }\n    }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void contextInitialized(ServletContextEvent sce)\n        {\n            try\n            {\n                //For jasper 2.1:\n                //Get the system classpath tlds and tell jasper about them, if jasper is on the classpath\n                try\n                {\n\n                    ClassLoader loader = _context.getClassLoader();\n                    if (loader == null || loader.getParent() == null)\n                        loader = getClass().getClassLoader();\n                    else\n                        loader = loader.getParent();\n                    Class<?> clazz = loader.loadClass(\"org.apache.jasper.compiler.TldLocationsCache\");\n                    assert clazz!=null;\n                    Collection<Resource> tld_resources = (Collection<Resource>)_context.getAttribute(TLD_RESOURCES);\n\n                    Map<URI, List<String>> tldMap = new HashMap<URI, List<String>>();\n\n                    if (tld_resources != null)\n                    {\n                        //get the jar file names of the files\n                        for (Resource r:tld_resources)\n                        {\n                            Resource jarResource = extractJarResource(r);\n                            //jasper is happy with an empty list of tlds\n                            if (!tldMap.containsKey(jarResource.getURI()))\n                                tldMap.put(jarResource.getURI(), null);\n\n                        }\n                        //set the magic context attribute that tells jasper about the system tlds\n                        sce.getServletContext().setAttribute(\"com.sun.appserv.tld.map\", tldMap);\n                    }\n                }\n                catch (ClassNotFoundException e)\n                {\n                    LOG.ignore(e);\n                }\n\n                //find the tld files and parse them to get out their\n                //listeners\n                Set<Resource> tlds = findTldResources();\n                List<TldDescriptor> descriptors = parseTlds(tlds);\n                processTlds(descriptors);\n\n                if (_tldListeners == null)\n                    return;\n\n                //call the listeners that are ServletContextListeners, put the\n                //rest into the context's list of listeners to call at the appropriate\n                //moment\n                for (EventListener l:_tldListeners) {\n                    if (l instanceof ServletContextListener) {\n                        ((ServletContextListener)l).contextInitialized(sce);\n                    } else {\n                        _context.addEventListener(l);\n                    }\n                }\n\n            }\n            catch (Exception e) {\n                LOG.warn(e);\n            }\n        }","id":27016,"modified_method":"public void contextInitialized(ServletContextEvent sce)\n        {\n            try\n            {\n                //For jasper 2.1:\n                //Get the system classpath tlds and tell jasper about them, if jasper is on the classpath\n                try\n                {\n\n                    ClassLoader loader = _context.getClassLoader();\n                    if (loader == null || loader.getParent() == null)\n                        loader = getClass().getClassLoader();\n                    else\n                        loader = loader.getParent();\n                    //Choose a class that should be present if tlds are in use\n                    Class<?> clazz = loader.loadClass(\"org.apache.jasper.compiler.TagFileProcessor\");\n                    assert clazz!=null;\n                    Collection<Resource> tld_resources = (Collection<Resource>)_context.getAttribute(TLD_RESOURCES);\n\n                    Map<URI, List<String>> tldMap = new HashMap<URI, List<String>>();\n\n                    if (tld_resources != null)\n                    {\n                        //get the jar file names of the files\n                        for (Resource r:tld_resources)\n                        {\n                            Resource jarResource = extractJarResource(r);\n                            //jasper is happy with an empty list of tlds\n                            if (!tldMap.containsKey(jarResource.getURI()))\n                                tldMap.put(jarResource.getURI(), null);\n\n                        }\n                        //set the magic context attribute that tells jasper about the system tlds\n                        sce.getServletContext().setAttribute(\"com.sun.appserv.tld.map\", tldMap);\n                    }\n                }\n                catch (ClassNotFoundException e)\n                {\n                    LOG.ignore(e);\n                }\n\n                //find the tld files and parse them to get out their\n                //listeners\n                Set<Resource> tlds = findTldResources();\n                List<TldDescriptor> descriptors = parseTlds(tlds);\n                processTlds(descriptors);\n\n                if (_tldListeners == null)\n                    return;\n\n                //call the listeners that are ServletContextListeners, put the\n                //rest into the context's list of listeners to call at the appropriate\n                //moment\n                for (EventListener l:_tldListeners) {\n                    if (l instanceof ServletContextListener) {\n                        ((ServletContextListener)l).contextInitialized(sce);\n                    } else {\n                        _context.addEventListener(l);\n                    }\n                }\n\n            }\n            catch (Exception e) {\n                LOG.warn(e);\n            }\n        }","commit_id":"e612c19eb7fe6f2c83e659ef37f95f7685e6ddbf","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * <p>Creates a WebSocketClientFactory with the specified configuration.<\/p>\n     *\n     * @param threadPool the ThreadPool instance to use\n     * @param maskGen    the mask generator to use\n     * @param bufferSize the read buffer size\n     */\n    public WebSocketClientFactory(ThreadPool threadPool, MaskGen maskGen, int bufferSize)\n    {\n        if (threadPool == null)\n        {\n            _threadPool = new QueuedThreadPool();\n            addBean(_threadPool);\n            _shutdownThreadPool = true;\n        }\n        else\n        {\n            _threadPool = threadPool;\n            _shutdownThreadPool = false;\n        }\n\n        _buffers = new WebSocketBuffers(bufferSize);\n        addBean(_buffers);\n\n        _maskGen = maskGen;\n        addBean(_maskGen);\n\n        _selector = new WebSocketClientSelector();\n        addBean(_selector);\n\n        addBean(_sslContextFactory);\n    }","id":27017,"modified_method":"/**\n     * <p>Creates a WebSocketClientFactory with the specified configuration.<\/p>\n     *\n     * @param threadPool the ThreadPool instance to use\n     * @param maskGen    the mask generator to use\n     * @param bufferSize the read buffer size\n     */\n    public WebSocketClientFactory(ThreadPool threadPool, MaskGen maskGen, int bufferSize)\n    {\n        if (threadPool == null)\n            threadPool = new QueuedThreadPool();\n        _threadPool = threadPool;\n        addBean(_threadPool);\n\n        _buffers = new WebSocketBuffers(bufferSize);\n        addBean(_buffers);\n\n        _maskGen = maskGen;\n        addBean(_maskGen);\n\n        _selector = new WebSocketClientSelector();\n        addBean(_selector);\n\n        addBean(_sslContextFactory);\n    }","commit_id":"cecfa69a1387822980a51912dcc4a05bb556564c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    protected void doStop() throws Exception\n    {\n        closeConnections();\n        super.doStop();\n        if (_shutdownThreadPool && _threadPool instanceof LifeCycle)\n            ((LifeCycle)_threadPool).stop();\n    }","id":27018,"modified_method":"@Override\n    protected void doStop() throws Exception\n    {\n        closeConnections();\n        super.doStop();\n    }","commit_id":"cecfa69a1387822980a51912dcc4a05bb556564c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private static void loadProjectType(final FlashBuilderProject flashBuilderProject,\n                                      final VirtualFile dotProjectFile,\n                                      final Element compilerElement) {\n    final VirtualFile dir = dotProjectFile.getParent();\n    assert dir != null;\n\n    final VirtualFile flexLibPropertiesFile = dir.findChild(FlashBuilderImporter.DOT_FLEX_LIB_PROPERTIES);\n    flashBuilderProject.setPureActionScript(dir.findChild(FlashBuilderImporter.DOT_FLEX_PROPERTIES) == null &&\n                                            flexLibPropertiesFile == null);\n    if (flexLibPropertiesFile == null) {\n      final Element parentElement = compilerElement.getParentElement();\n      //noinspection unchecked\n      for (final Element buildTargetsElement : (Iterable<Element>)(parentElement\n                                                                     .getChildren(BUILD_TARGETS_ELEMENT, parentElement.getNamespace()))) {\n        //noinspection unchecked\n        for (final Element buildTargetElement : (Iterable<Element>)(buildTargetsElement\n                                                                      .getChildren(BUILD_TARGET_ELEMENT, parentElement.getNamespace()))) {\n          final String buildTarget = buildTargetElement.getAttributeValue(BUILD_TARGET_NAME_ATTR);\n          if (ANDROID_PLATFORM_ATTR_VALUE.equals(buildTarget)) {\n            flashBuilderProject.setAndroidSupported(isPlatformEnabled(buildTargetElement));\n            flashBuilderProject.setTargetPlatform(TargetPlatform.Mobile);\n            loadSigningOptions(flashBuilderProject, buildTargetElement, TargetPlatform.Mobile, false);\n          }\n          else if (IOS_PLATFORM_ATTR_VALUE.equals(buildTarget)) {\n            flashBuilderProject.setIosSupported(isPlatformEnabled(buildTargetElement));\n            flashBuilderProject.setTargetPlatform(TargetPlatform.Mobile);\n            loadSigningOptions(flashBuilderProject, buildTargetElement, TargetPlatform.Mobile, true);\n          }\n          else if (BLACKBERRY_PLATFORM_ATTR_VALUE.equals(buildTarget)) {\n            flashBuilderProject.setTargetPlatform(TargetPlatform.Mobile);\n          }\n          else if (DEFAULT_VALUE.equals(buildTarget)) {\n            loadSigningOptions(flashBuilderProject, buildTargetElement, TargetPlatform.Desktop, false);\n          }\n        }\n      }\n    }\n    else {\n      // if this is Pure AS Mobile library its target platform will be read a bit later in loadInfoFromDotFlexLibPropertiesFile()}\n    }\n\n    if (flashBuilderProject.getTargetPlatform() == TargetPlatform.Mobile) {\n      return;\n    }\n\n    if (\"true\".equals(compilerElement.getAttributeValue(USE_APOLLO_CONFIG_ATTR))) {\n      flashBuilderProject.setTargetPlatform(TargetPlatform.Desktop);\n    }\n    else {\n      flashBuilderProject.setTargetPlatform(TargetPlatform.Web);\n    }\n  }","id":27019,"modified_method":"private static void loadProjectType(final FlashBuilderProject flashBuilderProject,\n                                      final VirtualFile dotProjectFile,\n                                      final Element compilerElement) {\n    final VirtualFile dir = dotProjectFile.getParent();\n    assert dir != null;\n\n    final VirtualFile flexLibPropertiesFile = dir.findChild(FlashBuilderImporter.DOT_FLEX_LIB_PROPERTIES);\n    flashBuilderProject.setPureActionScript(dir.findChild(FlashBuilderImporter.DOT_FLEX_PROPERTIES) == null &&\n                                            flexLibPropertiesFile == null);\n    if (flexLibPropertiesFile == null) {\n      final Element parentElement = compilerElement.getParentElement();\n      //noinspection unchecked\n      for (final Element buildTargetsElement : (Iterable<Element>)(parentElement\n                                                                     .getChildren(BUILD_TARGETS_ELEMENT, parentElement.getNamespace()))) {\n        //noinspection unchecked\n        for (final Element buildTargetElement : (Iterable<Element>)(buildTargetsElement\n                                                                      .getChildren(BUILD_TARGET_ELEMENT, parentElement.getNamespace()))) {\n          final String buildTarget = buildTargetElement.getAttributeValue(BUILD_TARGET_NAME_ATTR);\n          final String platformId1 = buildTargetElement.getAttributeValue(PLATFORM_ID_1);\n          final String platformId2 = getMultiPlatformId(buildTargetElement);\n\n          if (ANDROID_PLATFORM_ATTR_VALUE.equals(buildTarget) ||\n              ANDROID_PLATFORM_ATTR_VALUE.equals(platformId1) ||\n              ANDROID_PLATFORM_ATTR_VALUE.equals(platformId2)) {\n            flashBuilderProject.setTargetPlatform(TargetPlatform.Mobile);\n            flashBuilderProject.setAndroidSupported(isPlatformEnabled(buildTargetElement));\n            loadSigningOptions(flashBuilderProject, buildTargetElement, TargetPlatform.Mobile, false);\n          }\n          else if (IOS_PLATFORM_ATTR_VALUE.equals(buildTarget) ||\n                   IOS_PLATFORM_ATTR_VALUE.equals(platformId1) ||\n                   IOS_PLATFORM_ATTR_VALUE.equals(platformId2)) {\n            flashBuilderProject.setTargetPlatform(TargetPlatform.Mobile);\n            flashBuilderProject.setIosSupported(isPlatformEnabled(buildTargetElement));\n            loadSigningOptions(flashBuilderProject, buildTargetElement, TargetPlatform.Mobile, true);\n          }\n          else if (BLACKBERRY_PLATFORM_ATTR_VALUE.equals(buildTarget) ||\n                   BLACKBERRY_PLATFORM_ATTR_VALUE.equals(platformId1) ||\n                   BLACKBERRY_PLATFORM_ATTR_VALUE.equals(platformId2)) {\n            flashBuilderProject.setTargetPlatform(TargetPlatform.Mobile);\n          }\n          else {\n            loadSigningOptions(flashBuilderProject, buildTargetElement, TargetPlatform.Desktop, false);\n          }\n        }\n      }\n    }\n    else {\n      // if this is Pure AS Mobile library its target platform will be read a bit later in loadInfoFromDotFlexLibPropertiesFile()}\n    }\n\n    if (flashBuilderProject.getTargetPlatform() == TargetPlatform.Mobile) {\n      return;\n    }\n\n    if (\"true\".equals(compilerElement.getAttributeValue(USE_APOLLO_CONFIG_ATTR))) {\n      flashBuilderProject.setTargetPlatform(TargetPlatform.Desktop);\n    }\n    else {\n      flashBuilderProject.setTargetPlatform(TargetPlatform.Web);\n    }\n  }","commit_id":"2c47a9f0c330b103785db419a1fc7e9b889e208a","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private TargetPlatform handleDependencies(final ModifiableFlexIdeBuildConfiguration bc) {\n    boolean playerglobal = false;\n    boolean airglobal = false;\n    boolean mobilecomponents = false;\n\n    final ModifiableRootModel rootModel = myModelsProvider.getRootModel(myModule);\n    for (OrderEntry entry : rootModel.getOrderEntries()) {\n      final DependencyScope scope = entry instanceof ExportableOrderEntry ? ((ExportableOrderEntry)entry).getScope()\n                                                                          : DependencyScope.COMPILE;\n      final boolean isExported = entry instanceof ExportableOrderEntry && ((ExportableOrderEntry)entry).isExported();\n\n      if (entry instanceof ModuleOrderEntry) {\n        rootModel.removeOrderEntry(entry);\n\n        final String dependencyModuleName = ((ModuleOrderEntry)entry).getModuleName();\n\n        final MavenProject dependencyMavenProject = findMavenProjectByModuleName(dependencyModuleName);\n        if (dependencyMavenProject == null ||\n            !ArrayUtil.contains(dependencyMavenProject.getPackaging(), FlexmojosImporter.SUPPORTED_PACKAGINGS)) {\n          continue;\n        }\n\n        final ModifiableBuildConfigurationEntry bcEntry =\n          myFlexEditor.createBcEntry(bc.getDependencies(), dependencyModuleName, dependencyModuleName);\n        bcEntry.getDependencyType().setLinkageType(FlexUtils.convertLinkageType(scope, isExported));\n        bc.getDependencies().getModifiableEntries().add(0, bcEntry);\n\n        continue;\n      }\n\n      if (entry instanceof JdkOrderEntry) {\n        rootModel.removeOrderEntry(entry);\n      }\n\n      if (!(entry instanceof LibraryOrderEntry)) continue;\n      rootModel.removeOrderEntry(entry);\n\n      if (!LibraryTablesRegistrar.PROJECT_LEVEL.equals(((LibraryOrderEntry)entry).getLibraryLevel())) continue;\n      final Library library = ((LibraryOrderEntry)entry).getLibrary();\n      if (library == null || !MavenRootModelAdapter.isMavenLibrary(library)) continue;\n\n      final String libraryName = library.getName();\n      if (libraryName.contains(\":rb.swc:\") || libraryName.contains(\":resource-bundle:\")) {\n        // fix rb.swc placeholders to real SWCs according to used locales\n        final Library.ModifiableModel libraryModifiableModel = myModelsProvider.getLibraryModel(library);\n        for (final String rbSwcPlaceholdersUrl : findRbSwcPlaceholderUrls(libraryModifiableModel)) {\n          final Collection<String> rootsToAdd = getRbSwcUrlsForCompiledLocales(rbSwcPlaceholdersUrl);\n          libraryModifiableModel.removeRoot(rbSwcPlaceholdersUrl, OrderRootType.CLASSES);\n          for (final String rootToAdd : rootsToAdd) {\n            if (!ArrayUtil.contains(rootToAdd, libraryModifiableModel.getUrls(OrderRootType.CLASSES))) {\n              libraryModifiableModel.addRoot(rootToAdd, OrderRootType.CLASSES);\n            }\n          }\n          // sources and docs could be updated as well, but currently they are always senseless, because they do not exist\n        }\n      }\n\n      if (libraryName.contains(\":swc:\") || libraryName.contains(\":rb.swc:\") || libraryName.contains(\":resource-bundle:\")) {\n        playerglobal |= libraryName.contains(\"playerglobal\");\n        airglobal |= libraryName.contains(\"airglobal\");\n        mobilecomponents |= libraryName.contains(\"mobilecomponents\");\n\n        final LibraryType<?> type = ((LibraryEx)library).getType();\n        final FlexLibraryType flexLibraryType = FlexLibraryType.getInstance();\n\n        if (type != flexLibraryType) {\n          if (type == null) {\n            final LibraryEx.ModifiableModelEx libraryModel = (LibraryEx.ModifiableModelEx)myModelsProvider.getLibraryModel(library);\n            libraryModel.setType(flexLibraryType);\n            libraryModel.setProperties(flexLibraryType.createDefaultProperties());\n          }\n        }\n\n        final ModifiableDependencyEntry sharedLibraryEntry =\n          myFlexEditor.createSharedLibraryEntry(bc.getDependencies(), ((LibraryOrderEntry)entry).getLibraryName(),\n                                                ((LibraryOrderEntry)entry).getLibraryLevel());\n        sharedLibraryEntry.getDependencyType().setLinkageType(FlexUtils.convertLinkageType(scope, isExported));\n        bc.getDependencies().getModifiableEntries().add(sharedLibraryEntry);\n      }\n      else {\n        MavenLog.LOG.info(\"Non-swc dependency for flexmojos project '\" + myModule.getName() + \"': \" + libraryName);\n      }\n    }\n\n    // todo better target platform detection if both airglobal and playerglobal present?\n    return mobilecomponents && airglobal ? TargetPlatform.Mobile\n                                         : airglobal && !playerglobal ? TargetPlatform.Desktop\n                                                                      : TargetPlatform.Web;\n  }","id":27020,"modified_method":"private TargetPlatform handleDependencies(final ModifiableFlexIdeBuildConfiguration bc) {\n    bc.getDependencies().getModifiableEntries().clear();\n\n    boolean playerglobal = false;\n    boolean airglobal = false;\n    boolean mobilecomponents = false;\n\n    final ModifiableRootModel rootModel = myModelsProvider.getRootModel(myModule);\n    for (OrderEntry entry : rootModel.getOrderEntries()) {\n      final DependencyScope scope = entry instanceof ExportableOrderEntry ? ((ExportableOrderEntry)entry).getScope()\n                                                                          : DependencyScope.COMPILE;\n      final boolean isExported = entry instanceof ExportableOrderEntry && ((ExportableOrderEntry)entry).isExported();\n\n      if (entry instanceof ModuleOrderEntry) {\n        rootModel.removeOrderEntry(entry);\n\n        final String dependencyModuleName = ((ModuleOrderEntry)entry).getModuleName();\n\n        final MavenProject dependencyMavenProject = findMavenProjectByModuleName(dependencyModuleName);\n        if (dependencyMavenProject == null ||\n            !ArrayUtil.contains(dependencyMavenProject.getPackaging(), FlexmojosImporter.SUPPORTED_PACKAGINGS)) {\n          continue;\n        }\n\n        final ModifiableBuildConfigurationEntry bcEntry =\n          myFlexEditor.createBcEntry(bc.getDependencies(), dependencyModuleName, dependencyModuleName);\n        bcEntry.getDependencyType().setLinkageType(FlexUtils.convertLinkageType(scope, isExported));\n        bc.getDependencies().getModifiableEntries().add(0, bcEntry);\n\n        continue;\n      }\n\n      if (entry instanceof JdkOrderEntry) {\n        rootModel.removeOrderEntry(entry);\n      }\n\n      if (!(entry instanceof LibraryOrderEntry)) continue;\n      rootModel.removeOrderEntry(entry);\n\n      if (!LibraryTablesRegistrar.PROJECT_LEVEL.equals(((LibraryOrderEntry)entry).getLibraryLevel())) continue;\n      final Library library = ((LibraryOrderEntry)entry).getLibrary();\n      if (library == null || !MavenRootModelAdapter.isMavenLibrary(library)) continue;\n\n      final String libraryName = library.getName();\n      if (libraryName.contains(\":rb.swc:\") || libraryName.contains(\":resource-bundle:\")) {\n        // fix rb.swc placeholders to real SWCs according to used locales\n        final Library.ModifiableModel libraryModifiableModel = myModelsProvider.getLibraryModel(library);\n        for (final String rbSwcPlaceholdersUrl : findRbSwcPlaceholderUrls(libraryModifiableModel)) {\n          final Collection<String> rootsToAdd = getRbSwcUrlsForCompiledLocales(rbSwcPlaceholdersUrl);\n          libraryModifiableModel.removeRoot(rbSwcPlaceholdersUrl, OrderRootType.CLASSES);\n          for (final String rootToAdd : rootsToAdd) {\n            if (!ArrayUtil.contains(rootToAdd, libraryModifiableModel.getUrls(OrderRootType.CLASSES))) {\n              libraryModifiableModel.addRoot(rootToAdd, OrderRootType.CLASSES);\n            }\n          }\n          // sources and docs could be updated as well, but currently they are always senseless, because they do not exist\n        }\n      }\n\n      if (libraryName.contains(\":swc:\") || libraryName.contains(\":rb.swc:\") || libraryName.contains(\":resource-bundle:\")) {\n        playerglobal |= libraryName.contains(\"playerglobal\");\n        airglobal |= libraryName.contains(\"airglobal\");\n        mobilecomponents |= libraryName.contains(\"mobilecomponents\");\n\n        final LibraryType<?> type = ((LibraryEx)library).getType();\n        final FlexLibraryType flexLibraryType = FlexLibraryType.getInstance();\n\n        if (type != flexLibraryType) {\n          if (type == null) {\n            final LibraryEx.ModifiableModelEx libraryModel = (LibraryEx.ModifiableModelEx)myModelsProvider.getLibraryModel(library);\n            libraryModel.setType(flexLibraryType);\n            libraryModel.setProperties(flexLibraryType.createDefaultProperties());\n          }\n        }\n\n        final ModifiableDependencyEntry sharedLibraryEntry =\n          myFlexEditor.createSharedLibraryEntry(bc.getDependencies(), ((LibraryOrderEntry)entry).getLibraryName(),\n                                                ((LibraryOrderEntry)entry).getLibraryLevel());\n        sharedLibraryEntry.getDependencyType().setLinkageType(FlexUtils.convertLinkageType(scope, isExported));\n        bc.getDependencies().getModifiableEntries().add(sharedLibraryEntry);\n      }\n      else {\n        MavenLog.LOG.info(\"Non-swc dependency for flexmojos project '\" + myModule.getName() + \"': \" + libraryName);\n      }\n    }\n\n    // todo better target platform detection if both airglobal and playerglobal present?\n    return mobilecomponents && airglobal ? TargetPlatform.Mobile\n                                         : airglobal && !playerglobal ? TargetPlatform.Desktop\n                                                                      : TargetPlatform.Web;\n  }","commit_id":"ef0b1f9cebd16e6da1e0e76d8ae07c7c91fd22f6","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private ModifiableFlexIdeBuildConfiguration setupMainBuildConfiguration() {\n    final ModifiableFlexIdeBuildConfiguration mainBC = myFlexEditor.createConfiguration(myModule);\n    mainBC.setName(myModule.getName());\n\n    final TargetPlatform targetPlatform = handleDependencies(mainBC);\n    mainBC.setTargetPlatform(targetPlatform);\n    mainBC.setPureAs(false);\n    mainBC.setOutputType(FlexmojosImporter.isFlexApp(myMavenProject) ? OutputType.Application : OutputType.Library);\n\n    final Element configurationElement = myFlexmojosPlugin.getConfigurationElement();\n    if (FlexmojosImporter.isFlexApp(myMavenProject) && configurationElement != null) {\n      final String sourceFile = configurationElement.getChildTextNormalize(\"sourceFile\");\n      if (sourceFile != null && (sourceFile.endsWith(\".as\") || sourceFile.endsWith(\".mxml\"))) {\n        mainBC.setMainClass(sourceFile.substring(0, sourceFile.lastIndexOf(\".\")).replace(\"/\", \".\").replace(\"\\\\\", \".\"));\n      }\n    }\n\n    final String outputFilePath = FlexmojosImporter.getOutputFilePath(myMavenProject);\n    final String fileName = PathUtil.getFileName(outputFilePath);\n    mainBC.setOutputFileName(fileName);\n    mainBC.setOutputFolder(PathUtil.getParentPath(outputFilePath));\n\n    final BuildConfigurationNature nature = mainBC.getNature();\n    if (nature.isApp()) {\n      if (nature.isDesktopPlatform()) {\n        mainBC.getAirDesktopPackagingOptions().setPackageFileName(fileName);\n      }\n      else if (nature.isMobilePlatform()) {\n        mainBC.getAndroidPackagingOptions().setPackageFileName(fileName);\n        mainBC.getIosPackagingOptions().setPackageFileName(fileName);\n      }\n    }\n\n    setupSdk(mainBC);\n\n    final String locales = StringUtil.join(myCompiledLocales, CompilerOptionInfo.LIST_ENTRIES_SEPARATOR);\n    mainBC.getCompilerOptions().setAllOptions(Collections.singletonMap(\"compiler.locale\", locales));\n\n    if (BCUtils.canHaveResourceFiles(nature)) {\n      // Don't copy whatever by default. If user had other setting before reimport - it will be set in #respectPreviousBCState()\n      mainBC.getCompilerOptions().setResourceFilesMode(CompilerOptions.ResourceFilesMode.None);\n    }\n\n    mainBC.getCompilerOptions().setAdditionalConfigFilePath(getCompilerConfigFilePath());\n    return mainBC;\n  }","id":27021,"modified_method":"private ModifiableFlexIdeBuildConfiguration setupMainBuildConfiguration(final @Nullable ModifiableFlexIdeBuildConfiguration existingBC) {\n    final boolean isNewBC = existingBC == null;\n    final ModifiableFlexIdeBuildConfiguration mainBC = isNewBC ? myFlexEditor.createConfiguration(myModule) : existingBC;\n\n    mainBC.setName(myModule.getName());\n\n    final TargetPlatform targetPlatform = handleDependencies(mainBC);\n    if (isNewBC) {\n      mainBC.setTargetPlatform(targetPlatform);\n      mainBC.setPureAs(false);\n    }\n    final OutputType outputType = FlexmojosImporter.isFlexApp(myMavenProject) ? OutputType.Application : OutputType.Library;\n\n    if (outputType != mainBC.getOutputType()) {\n      mainBC.setOutputType(outputType);\n      FlexProjectConfigurationEditor.resetNonApplicableValuesToDefaults(mainBC);\n    }\n\n    final Element configurationElement = myFlexmojosPlugin.getConfigurationElement();\n    if (FlexmojosImporter.isFlexApp(myMavenProject) && configurationElement != null) {\n      final String sourceFile = configurationElement.getChildTextNormalize(\"sourceFile\");\n      if (sourceFile != null && (sourceFile.endsWith(\".as\") || sourceFile.endsWith(\".mxml\"))) {\n        mainBC.setMainClass(sourceFile.substring(0, sourceFile.lastIndexOf(\".\")).replace(\"/\", \".\").replace(\"\\\\\", \".\"));\n      }\n    }\n\n    final String outputFilePath = FlexmojosImporter.getOutputFilePath(myMavenProject);\n    final String fileName = PathUtil.getFileName(outputFilePath);\n    mainBC.setOutputFileName(fileName);\n    mainBC.setOutputFolder(PathUtil.getParentPath(outputFilePath));\n\n    final BuildConfigurationNature nature = mainBC.getNature();\n    if (nature.isApp() && isNewBC) {\n      if (nature.isDesktopPlatform()) {\n        mainBC.getAirDesktopPackagingOptions().setPackageFileName(fileName);\n      }\n      else if (nature.isMobilePlatform()) {\n        mainBC.getAndroidPackagingOptions().setPackageFileName(fileName);\n        mainBC.getIosPackagingOptions().setPackageFileName(fileName);\n      }\n    }\n\n    setupSdk(mainBC);\n\n    final String locales = StringUtil.join(myCompiledLocales, CompilerOptionInfo.LIST_ENTRIES_SEPARATOR);\n    final Map<String, String> options = new THashMap<String, String>(mainBC.getCompilerOptions().getAllOptions());\n    options.put(\"compiler.locale\", locales);\n    mainBC.getCompilerOptions().setAllOptions(options);\n\n    if (BCUtils.canHaveResourceFiles(nature) && isNewBC) {\n      mainBC.getCompilerOptions().setResourceFilesMode(CompilerOptions.ResourceFilesMode.None);\n    }\n\n    mainBC.getCompilerOptions().setAdditionalConfigFilePath(getCompilerConfigFilePath());\n    return mainBC;\n  }","commit_id":"ef0b1f9cebd16e6da1e0e76d8ae07c7c91fd22f6","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public void configureAndAppendTasks(final List<MavenProjectsProcessorTask> postTasks) {\n    final ModifiableFlexIdeBuildConfiguration[] oldBCs = myFlexEditor.getConfigurations(myModule);\n    for (ModifiableFlexIdeBuildConfiguration oldBC : oldBCs) {\n      myFlexEditor.configurationRemoved(oldBC);\n    }\n\n    final ModifiableFlexIdeBuildConfiguration mainBC = setupMainBuildConfiguration();\n\n    final Collection<String> usedNames = new HashSet<String>();\n    usedNames.add(mainBC.getName());\n\n    final Collection<RLMInfo> rlmInfos = FlexmojosImporter.isFlexApp(myMavenProject) ? getRLMInfos() : Collections.<RLMInfo>emptyList();\n    for (RLMInfo info : rlmInfos) {\n      configureRuntimeLoadedModule(mainBC, info, usedNames);\n    }\n\n    respectPreviousBCState(myFlexEditor.getConfigurations(myModule), oldBCs);\n\n    if (FlexCompilerProjectConfiguration.getInstance(myModule.getProject()).GENERATE_FLEXMOJOS_CONFIGS) {\n      if (StringUtil.compareVersionNumbers(myFlexmojosPlugin.getVersion(), \"3.4\") >= 0) {\n        appendGenerateConfigTask(postTasks, mainBC.getCompilerOptions().getAdditionalConfigFilePath());\n        if (!rlmInfos.isEmpty()) {\n          postTasks.add(new RuntimeModulesGenerateConfigTask(myModule, myMavenProject, myMavenTree,\n                                                             mainBC.getCompilerOptions().getAdditionalConfigFilePath(), rlmInfos));\n        }\n      }\n      else {\n        myInformer.showFlexConfigWarningIfNeeded(myModule.getProject());\n      }\n    }\n  }","id":27022,"modified_method":"public void configureAndAppendTasks(final List<MavenProjectsProcessorTask> postTasks) {\n    final ModifiableFlexIdeBuildConfiguration[] oldBCs = myFlexEditor.getConfigurations(myModule);\n    if (oldBCs.length == 1 && oldBCs[0].getName().equals(FlexIdeBuildConfiguration.UNNAMED)) {\n      myFlexEditor.configurationRemoved(oldBCs[0]);\n    }\n\n    final String mainBCName = myModule.getName();\n    final ModifiableFlexIdeBuildConfiguration existingBC = ContainerUtil.find(oldBCs, new Condition<ModifiableFlexIdeBuildConfiguration>() {\n      public boolean value(final ModifiableFlexIdeBuildConfiguration bc) {\n        return mainBCName.equals(bc.getName());\n      }\n    });\n\n    final ModifiableFlexIdeBuildConfiguration mainBC = setupMainBuildConfiguration(existingBC);\n\n    final Collection<RLMInfo> rlmInfos = FlexmojosImporter.isFlexApp(myMavenProject) ? getRLMInfos() : Collections.<RLMInfo>emptyList();\n    for (final RLMInfo info : rlmInfos) {\n      final ModifiableFlexIdeBuildConfiguration existingRlmBC =\n        ContainerUtil.find(oldBCs, new Condition<ModifiableFlexIdeBuildConfiguration>() {\n          public boolean value(final ModifiableFlexIdeBuildConfiguration bc) {\n            return bc.getName().equals(info.myRLMName);\n          }\n        });\n\n      configureRuntimeLoadedModule(mainBC, info, existingRlmBC);\n    }\n\n    if (FlexCompilerProjectConfiguration.getInstance(myModule.getProject()).GENERATE_FLEXMOJOS_CONFIGS) {\n      if (StringUtil.compareVersionNumbers(myFlexmojosPlugin.getVersion(), \"3.4\") >= 0) {\n        appendGenerateConfigTask(postTasks, mainBC.getCompilerOptions().getAdditionalConfigFilePath());\n        if (!rlmInfos.isEmpty()) {\n          postTasks.add(new RuntimeModulesGenerateConfigTask(myModule, myMavenProject, myMavenTree,\n                                                             mainBC.getCompilerOptions().getAdditionalConfigFilePath(), rlmInfos));\n        }\n      }\n      else {\n        myInformer.showFlexConfigWarningIfNeeded(myModule.getProject());\n      }\n    }\n  }","commit_id":"ef0b1f9cebd16e6da1e0e76d8ae07c7c91fd22f6","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private void configureRuntimeLoadedModule(final ModifiableFlexIdeBuildConfiguration mainBC,\n                                            final RLMInfo info,\n                                            final Collection<String> usedNames) {\n    final String bcName = getUniqueName(info.myRLMName, usedNames);\n    usedNames.add(bcName);\n\n    final BuildConfigurationNature nature = new BuildConfigurationNature(mainBC.getTargetPlatform(), mainBC.isPureAs(),\n                                                                         OutputType.RuntimeLoadedModule);\n    final ModifiableFlexIdeBuildConfiguration rlmBC = myFlexEditor.copyConfiguration(mainBC, nature);\n\n    rlmBC.setName(bcName);\n    rlmBC.setMainClass(info.myMainClass);\n    rlmBC.setOutputFileName(info.myOutputFileName);\n    rlmBC.setOutputFolder(info.myOutputFolderPath);\n    rlmBC.getCompilerOptions().setAdditionalConfigFilePath(getCompilerConfigFilePath(info.myRLMName));\n  }","id":27023,"modified_method":"private void configureRuntimeLoadedModule(final ModifiableFlexIdeBuildConfiguration mainBC,\n                                            final RLMInfo info,\n                                            final @Nullable ModifiableFlexIdeBuildConfiguration existingRlmBC) {\n    final BuildConfigurationNature nature = new BuildConfigurationNature(mainBC.getTargetPlatform(), mainBC.isPureAs(),\n                                                                         OutputType.RuntimeLoadedModule);\n    final boolean isNewBC = existingRlmBC == null;\n    final ModifiableFlexIdeBuildConfiguration rlmBC = isNewBC ? myFlexEditor.copyConfiguration(mainBC, nature) : existingRlmBC;\n\n    rlmBC.setName(info.myRLMName);\n    rlmBC.setMainClass(info.myMainClass);\n    rlmBC.setOutputFileName(info.myOutputFileName);\n    rlmBC.setOutputFolder(info.myOutputFolderPath);\n    rlmBC.getCompilerOptions().setAdditionalConfigFilePath(getCompilerConfigFilePath(info.myRLMName));\n  }","commit_id":"ef0b1f9cebd16e6da1e0e76d8ae07c7c91fd22f6","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public void perform(final Project project,\n                      final MavenEmbeddersManager embeddersManager,\n                      final MavenConsole console,\n                      final MavenProgressIndicator indicator) throws MavenProcessCanceledException {\n    final Element mainConfigRootElement = getClonedRootElementOfMainConfigFile(myMainConfigFilePath);\n    if (mainConfigRootElement == null) return;\n\n    for (RLMInfo info : myRlmInfos) {\n      indicator.setText(\"Generating Flex compiler configuration file for \" + info.myRLMName);\n\n      final String mainClassAbsolutePath = findAbsolutePath(myModule, info.myMainClassRelativePath);\n      changeInputAndOutputFilePaths(mainConfigRootElement, mainClassAbsolutePath, info.myOutputFolderPath + \"/\" + info.myOutputFileName);\n      removeChildrenWithNames(mainConfigRootElement, ELEMENTS_TO_REMOVE);\n      // TODO: to be fully equivalent to flexmojos we need also to add 'load-externs' parameter to module config file, 'link-report' parameter to main application config file and care about compilation order\n      // and similar but more complicated thing with resource-bundle-list / include-resource-bundle ?\n      try {\n        JDOMUtil.writeDocument(mainConfigRootElement.getDocument(), info.myConfigFilePath,\n                               CodeStyleSettingsManager.getSettings(project).getLineSeparator());\n      }\n      catch (IOException e) {/**/}\n    }\n  }","id":27024,"modified_method":"public void perform(final Project project,\n                      final MavenEmbeddersManager embeddersManager,\n                      final MavenConsole console,\n                      final MavenProgressIndicator indicator) throws MavenProcessCanceledException {\n    final Element mainConfigRootElement = getClonedRootElementOfMainConfigFile(myMainConfigFilePath);\n    if (mainConfigRootElement == null) return;\n\n    for (RLMInfo info : myRlmInfos) {\n      indicator.setText(\"Generating Flex compiler configuration file for \" + info.myRLMName);\n\n      final String mainClassAbsolutePath = findAbsolutePath(myModule, info.myMainClassRelativePath);\n      changeInputAndOutputFilePaths(mainConfigRootElement, mainClassAbsolutePath, info.myOutputFolderPath + \"/\" + info.myOutputFileName);\n      removeChildrenWithNames(mainConfigRootElement, ELEMENTS_TO_REMOVE);\n      // TODO: to be fully equivalent to flexmojos we need also to add 'load-externs' parameter to module config file, 'link-report' parameter to main application config file and care about compilation order\n      // and similar but more complicated thing with resource-bundle-list / include-resource-bundle ?\n      try {\n        JDOMUtil.writeDocument(mainConfigRootElement.getDocument(), info.myConfigFilePath,\n                               CodeStyleSettingsManager.getSettings(project).getLineSeparator());\n      }\n      catch (IOException e) {/**/}\n    }\n\n    MavenUtil.invokeAndWaitWriteAction(project, new Runnable() {\n      public void run() {\n        // need to refresh externally created file\n        for (RLMInfo info : myRlmInfos) {\n          final VirtualFile file = LocalFileSystem.getInstance().refreshAndFindFileByPath(info.myConfigFilePath);\n          if (file != null) {\n            file.refresh(false, false);\n          }\n        }\n      }\n    });\n  }","commit_id":"ef0b1f9cebd16e6da1e0e76d8ae07c7c91fd22f6","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public boolean isSynthetic(TypeComponent typeComponent) {\n    String name = typeComponent.name();\n    if (name.startsWith(LambdaMethodFilter.LAMBDA_METHOD_PREFIX)) {\n      return false;\n    }\n    else {\n      ReferenceType type = typeComponent.declaringType();\n      if (type.name().contains(\"$$Lambda$\")) {\n        return true;\n      }\n    }\n    VirtualMachine machine = typeComponent.virtualMachine();\n    if (machine != null && machine.canGetSyntheticAttribute()) {\n      return typeComponent.isSynthetic();\n    }\n    else {\n      return name.contains(\"$\");\n    }\n  }","id":27025,"modified_method":"@Override\n  public boolean isSynthetic(TypeComponent typeComponent) {\n    String name = typeComponent.name();\n    if (LambdaMethodFilter.isLambdaName(name)) {\n      return false;\n    }\n    else {\n      ReferenceType type = typeComponent.declaringType();\n      if (type.name().contains(\"$$Lambda$\")) {\n        return true;\n      }\n    }\n    VirtualMachine machine = typeComponent.virtualMachine();\n    if (machine != null && machine.canGetSyntheticAttribute()) {\n      return typeComponent.isSynthetic();\n    }\n    else {\n      return name.contains(\"$\");\n    }\n  }","commit_id":"58d5b9f57e376bfd9b2f81850f03a96e8b94446c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean locationMatches(DebugProcessImpl process, Location location) throws EvaluateException {\n    final VirtualMachineProxyImpl vm = process.getVirtualMachineProxy();\n    final Method method = location.method();\n    return method.name().startsWith(LAMBDA_METHOD_PREFIX) && (!vm.canGetSyntheticAttribute() || method.isSynthetic());\n  }","id":27026,"modified_method":"public boolean locationMatches(DebugProcessImpl process, Location location) throws EvaluateException {\n    final VirtualMachineProxyImpl vm = process.getVirtualMachineProxy();\n    final Method method = location.method();\n    return isLambdaName(method.name()) && (!vm.canGetSyntheticAttribute() || method.isSynthetic());\n  }","commit_id":"58d5b9f57e376bfd9b2f81850f03a96e8b94446c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public SourcePosition getSourcePosition(final Location location) throws NoDataException {\n    DebuggerManagerThreadImpl.assertIsManagerThread();\n    if(location == null) {\n      return null;\n    }\n\n    PsiFile psiFile = getPsiFileByLocation(getDebugProcess().getProject(), location);\n    if(psiFile == null ) {\n      return null;\n    }\n\n    LOG.assertTrue(myDebugProcess != null);\n\n    int lineNumber;\n    try {\n      lineNumber = location.lineNumber() - 1;\n    }\n    catch (InternalError e) {\n      lineNumber = -1;\n    }\n\n    if (lineNumber > -1) {\n      SourcePosition position = calcLineMappedSourcePosition(psiFile, lineNumber);\n      if (position != null) {\n        return position;\n      }\n    }\n\n    if (psiFile instanceof PsiCompiledElement || lineNumber < 0) {\n      final String methodSignature = location.method().signature();\n      if (methodSignature == null) {\n        return SourcePosition.createFromLine(psiFile, -1);\n      }\n      final String methodName = location.method().name();\n      if(methodName == null) {\n        return SourcePosition.createFromLine(psiFile, -1);\n      }\n      if(location.declaringType() == null) {\n        return SourcePosition.createFromLine(psiFile, -1);\n      }\n\n      final MethodFinder finder = new MethodFinder(location.declaringType().name(), methodName, methodSignature);\n      psiFile.accept(finder);\n\n      final PsiMethod compiledMethod = finder.getCompiledMethod();\n      if (compiledMethod == null) {\n        return SourcePosition.createFromLine(psiFile, -1);\n      }\n      SourcePosition sourcePosition = SourcePosition.createFromElement(compiledMethod);\n      if (lineNumber >= 0) {\n        sourcePosition = new ClsSourcePosition(sourcePosition, lineNumber);\n      }\n      return sourcePosition;\n    }\n\n    return new JavaSourcePosition(SourcePosition.createFromLine(psiFile, lineNumber), location.declaringType(), location.method());\n  }","id":27027,"modified_method":"public SourcePosition getSourcePosition(final Location location) throws NoDataException {\n    DebuggerManagerThreadImpl.assertIsManagerThread();\n    if(location == null) {\n      return null;\n    }\n\n    PsiFile psiFile = getPsiFileByLocation(getDebugProcess().getProject(), location);\n    if(psiFile == null ) {\n      return null;\n    }\n\n    LOG.assertTrue(myDebugProcess != null);\n\n    int lineNumber;\n    try {\n      lineNumber = location.lineNumber() - 1;\n    }\n    catch (InternalError e) {\n      lineNumber = -1;\n    }\n\n    if (lineNumber > -1) {\n      SourcePosition position = calcLineMappedSourcePosition(psiFile, lineNumber);\n      if (position != null) {\n        return position;\n      }\n    }\n\n    Method method = location.method();\n\n    if (psiFile instanceof PsiCompiledElement || lineNumber < 0) {\n      final String methodSignature = method.signature();\n      if (methodSignature == null) {\n        return SourcePosition.createFromLine(psiFile, -1);\n      }\n      final String methodName = method.name();\n      if (methodName == null) {\n        return SourcePosition.createFromLine(psiFile, -1);\n      }\n      if (location.declaringType() == null) {\n        return SourcePosition.createFromLine(psiFile, -1);\n      }\n\n      final MethodFinder finder = new MethodFinder(location.declaringType().name(), methodName, methodSignature);\n      psiFile.accept(finder);\n\n      final PsiMethod compiledMethod = finder.getCompiledMethod();\n      if (compiledMethod == null) {\n        return SourcePosition.createFromLine(psiFile, -1);\n      }\n      SourcePosition sourcePosition = SourcePosition.createFromElement(compiledMethod);\n      if (lineNumber >= 0) {\n        sourcePosition = new ClsSourcePosition(sourcePosition, lineNumber);\n      }\n      return sourcePosition;\n    }\n\n    SourcePosition sourcePosition = SourcePosition.createFromLine(psiFile, lineNumber);\n    int lambdaOrdinal = -1;\n    if (LambdaMethodFilter.isLambdaName(method.name())) {\n      List<Location> lambdas = ContainerUtil.filter(locationsOfLine(location.declaringType(), sourcePosition), new Condition<Location>() {\n        @Override\n        public boolean value(Location location) {\n          return LambdaMethodFilter.isLambdaName(location.method().name());\n        }\n      });\n      if (lambdas.size() > 1) {\n        Collections.sort(lambdas, new Comparator<Location>() {\n          @Override\n          public int compare(Location o1, Location o2) {\n            return LambdaMethodFilter.getLambdaOrdinal(o1.method().name()) - LambdaMethodFilter.getLambdaOrdinal(o2.method().name());\n          }\n        });\n        lambdaOrdinal = lambdas.indexOf(location);\n      }\n    }\n    return new JavaSourcePosition(sourcePosition, location.declaringType(), method, lambdaOrdinal);\n  }","commit_id":"58d5b9f57e376bfd9b2f81850f03a96e8b94446c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public SourcePosition mapDelegate(final SourcePosition original) {\n      return ApplicationManager.getApplication().runReadAction(new Computable<SourcePosition>() {\n        @Override\n        public SourcePosition compute() {\n          // There may be more than one class/method code on the line, so we need to find out the correct place\n          for (PsiElement elem : getLineElements(original.getFile(), original.getLine())) {\n            PsiElement remappedElement = remapElement(elem);\n            if (remappedElement != null) {\n              if (remappedElement.getTextOffset() <= original.getOffset()) break;\n              return SourcePosition.createFromElement(remappedElement);\n            }\n          }\n          return original;\n        }\n      });\n    }","id":27028,"modified_method":"@Override\n    public SourcePosition mapDelegate(final SourcePosition original) {\n      return ApplicationManager.getApplication().runReadAction(new Computable<SourcePosition>() {\n        @Override\n        public SourcePosition compute() {\n          PsiFile file = original.getFile();\n          int line = original.getLine();\n          if (LambdaMethodFilter.isLambdaName(myExpectedMethodName) && myLambdaOrdinal > -1) {\n            Document document = PsiDocumentManager.getInstance(file.getProject()).getDocument(file);\n            if (document == null || line >= document.getLineCount()) {\n              return original;\n            }\n            PsiElement element = original.getElementAt();\n            TextRange lineRange = new TextRange(document.getLineStartOffset(line), document.getLineEndOffset(line));\n            do {\n              PsiElement parent = element.getParent();\n              if (parent == null || (parent.getTextOffset() < lineRange.getStartOffset())) {\n                break;\n              }\n              element = parent;\n            }\n            while(true);\n            final List<PsiLambdaExpression> lambdas = new ArrayList<PsiLambdaExpression>(3);\n            // add initial lambda if we're inside already\n            NavigatablePsiElement method = PsiTreeUtil.getParentOfType(element, PsiMethod.class, PsiLambdaExpression.class);\n            if (method instanceof PsiLambdaExpression) {\n              lambdas.add((PsiLambdaExpression)method);\n            }\n            final PsiElementVisitor lambdaCollector = new JavaRecursiveElementVisitor() {\n              @Override\n              public void visitLambdaExpression(PsiLambdaExpression expression) {\n                super.visitLambdaExpression(expression);\n                lambdas.add(expression);\n              }\n            };\n            element.accept(lambdaCollector);\n            for (PsiElement sibling = getNextElement(element); sibling != null; sibling = getNextElement(sibling)) {\n              if (!lineRange.intersects(sibling.getTextRange())) {\n                break;\n              }\n              sibling.accept(lambdaCollector);\n            }\n            if (myLambdaOrdinal < lambdas.size()) {\n              PsiElement body = lambdas.get(myLambdaOrdinal).getBody();\n              if (body instanceof PsiCodeBlock) {\n                for (PsiStatement statement : ((PsiCodeBlock)body).getStatements()) {\n                  if (lineRange.intersects(statement.getTextRange())) {\n                    body = statement;\n                    break;\n                  }\n                }\n              }\n              return SourcePosition.createFromElement(body);\n            }\n          }\n          else {\n            // There may be more than one class/method code on the line, so we need to find out the correct place\n            for (PsiElement elem : getLineElements(file, line)) {\n              PsiElement remappedElement = remapElement(elem);\n              if (remappedElement != null) {\n                if (remappedElement.getTextOffset() <= original.getOffset()) break;\n                return SourcePosition.createFromElement(remappedElement);\n              }\n            }\n          }\n          return original;\n        }\n      });\n    }","commit_id":"58d5b9f57e376bfd9b2f81850f03a96e8b94446c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private PsiElement remapElement(PsiElement element) {\n      PsiClass aClass = getEnclosingClass(element);\n      if (!Comparing.equal(myExpectedClassName, JVMNameUtil.getClassVMName(aClass))) {\n        return null;\n      }\n      NavigatablePsiElement method = PsiTreeUtil.getParentOfType(element, PsiMethod.class, PsiLambdaExpression.class);\n      if (!StringUtil.isEmpty(myExpectedMethodName)) {\n        if (method == null) {\n          return null;\n        }\n        else if ((method instanceof PsiMethod && myExpectedMethodName.equals(((PsiMethod)method).getName()))) {\n          if (insideBody(element, ((PsiMethod)method).getBody())) return element;\n        }\n        else if (method instanceof PsiLambdaExpression && myExpectedMethodName.startsWith(LambdaMethodFilter.LAMBDA_METHOD_PREFIX)) {\n          if (insideBody(element, ((PsiLambdaExpression)method).getBody())) return element;\n        }\n      }\n      return null;\n    }","id":27029,"modified_method":"private PsiElement remapElement(PsiElement element) {\n      PsiClass aClass = getEnclosingClass(element);\n      if (!Comparing.equal(myExpectedClassName, JVMNameUtil.getClassVMName(aClass))) {\n        return null;\n      }\n      NavigatablePsiElement method = PsiTreeUtil.getParentOfType(element, PsiMethod.class, PsiLambdaExpression.class);\n      if (!StringUtil.isEmpty(myExpectedMethodName)) {\n        if (method == null) {\n          return null;\n        }\n        else if ((method instanceof PsiMethod && myExpectedMethodName.equals(((PsiMethod)method).getName()))) {\n          if (insideBody(element, ((PsiMethod)method).getBody())) return element;\n        }\n        //else if (method instanceof PsiLambdaExpression && (myLambdaOrdinal < 0 || myLambdaOrdinal == lambdaOrdinal)\n        //         && LambdaMethodFilter.isLambdaName(myExpectedMethodName)) {\n        //  if (insideBody(element, ((PsiLambdaExpression)method).getBody())) return element;\n        //}\n      }\n      return null;\n    }","commit_id":"58d5b9f57e376bfd9b2f81850f03a96e8b94446c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public JavaSourcePosition(SourcePosition delegate, ReferenceType declaringType, Method method) {\n      super(delegate);\n      myExpectedClassName = declaringType != null ? declaringType.name() : null;\n      myExpectedMethodName = method != null ? method.name() : null;\n    }","id":27030,"modified_method":"public JavaSourcePosition(SourcePosition delegate, ReferenceType declaringType, Method method, int lambdaOrdinal) {\n      super(delegate);\n      myExpectedClassName = declaringType != null ? declaringType.name() : null;\n      myExpectedMethodName = method != null ? method.name() : null;\n      myLambdaOrdinal = lambdaOrdinal;\n    }","commit_id":"58d5b9f57e376bfd9b2f81850f03a96e8b94446c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void createRequestForPreparedClass(DebugProcessImpl debugProcess, ReferenceType classType) {\n    try {\n      final CompoundPositionManager positionManager = debugProcess.getPositionManager();\n      List<Location> locations = positionManager.locationsOfLine(classType, myCustomPosition);\n\n      if (locations.isEmpty()) {\n        // sometimes first statements are mapped to some weird line number, or there are no executable instructions at first statement's line\n        // so if lambda or method body spans for more than one lines, try get some locations from these lines\n        final int lastLine = myFilter.getLastStatementLine();\n        if (lastLine >= 0) {\n          int nextLine = myCustomPosition.getLine() + 1;\n          while (nextLine <= lastLine && locations.isEmpty()) {\n            locations = positionManager.locationsOfLine(classType, SourcePosition.createFromLine(myCustomPosition.getFile(), nextLine++));\n          }\n        }\n      }\n\n      if (!locations.isEmpty()) {\n        final Set<Method> methods = new HashSet<Method>();\n        for (Location loc : locations) {\n          if (acceptLocation(debugProcess, classType, loc)) {\n            methods.add(loc.method());\n          }\n        }\n        Location location = null;\n        final int methodsFound = methods.size();\n        if (methodsFound == 1) {\n          location = methods.iterator().next().location();\n        }\n        else {\n          if (myFilter instanceof LambdaMethodFilter) {\n            final LambdaMethodFilter lambdaFilter = (LambdaMethodFilter)myFilter;\n            if (lambdaFilter.getLambdaOrdinal() < methodsFound) {\n              final Method[] candidates = methods.toArray(new Method[methodsFound]);\n              Arrays.sort(candidates, new Comparator<Method>() {\n                public int compare(Method m1, Method m2) {\n                  return getMethodOrdinal(m1) - getMethodOrdinal(m2);\n                }\n              });\n              location = candidates[lambdaFilter.getLambdaOrdinal()].location();\n            }\n          }\n          else {\n            if (methodsFound > 0) {\n              location = methods.iterator().next().location();\n            }\n          }\n        }\n        if (location != null) {\n          final RequestManagerImpl requestsManager = debugProcess.getRequestsManager();\n          final BreakpointRequest request = requestsManager.createBreakpointRequest(this, location);\n          requestsManager.enableRequest(request);\n        }\n      }\n    }\n    catch (ClassNotPreparedException ex) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"ClassNotPreparedException: \" + ex.getMessage());\n      }\n    }\n    catch (ObjectCollectedException ex) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"ObjectCollectedException: \" + ex.getMessage());\n      }\n    }\n    catch (InternalException ex) {\n      LOG.info(ex);\n    }\n    catch(Exception ex) {\n      LOG.info(ex);\n    }\n  }","id":27031,"modified_method":"protected void createRequestForPreparedClass(DebugProcessImpl debugProcess, ReferenceType classType) {\n    try {\n      final CompoundPositionManager positionManager = debugProcess.getPositionManager();\n      List<Location> locations = positionManager.locationsOfLine(classType, myCustomPosition);\n\n      if (locations.isEmpty()) {\n        // sometimes first statements are mapped to some weird line number, or there are no executable instructions at first statement's line\n        // so if lambda or method body spans for more than one lines, try get some locations from these lines\n        final int lastLine = myFilter.getLastStatementLine();\n        if (lastLine >= 0) {\n          int nextLine = myCustomPosition.getLine() + 1;\n          while (nextLine <= lastLine && locations.isEmpty()) {\n            locations = positionManager.locationsOfLine(classType, SourcePosition.createFromLine(myCustomPosition.getFile(), nextLine++));\n          }\n        }\n      }\n\n      if (!locations.isEmpty()) {\n        final Set<Method> methods = new HashSet<Method>();\n        for (Location loc : locations) {\n          if (acceptLocation(debugProcess, classType, loc)) {\n            methods.add(loc.method());\n          }\n        }\n        Location location = null;\n        final int methodsFound = methods.size();\n        if (methodsFound == 1) {\n          location = methods.iterator().next().location();\n        }\n        else {\n          if (myFilter instanceof LambdaMethodFilter) {\n            final LambdaMethodFilter lambdaFilter = (LambdaMethodFilter)myFilter;\n            if (lambdaFilter.getLambdaOrdinal() < methodsFound) {\n              final Method[] candidates = methods.toArray(new Method[methodsFound]);\n              Arrays.sort(candidates, new Comparator<Method>() {\n                public int compare(Method m1, Method m2) {\n                  return LambdaMethodFilter.getLambdaOrdinal(m1.name()) - LambdaMethodFilter.getLambdaOrdinal(m2.name());\n                }\n              });\n              location = candidates[lambdaFilter.getLambdaOrdinal()].location();\n            }\n          }\n          else {\n            if (methodsFound > 0) {\n              location = methods.iterator().next().location();\n            }\n          }\n        }\n        if (location != null) {\n          final RequestManagerImpl requestsManager = debugProcess.getRequestsManager();\n          final BreakpointRequest request = requestsManager.createBreakpointRequest(this, location);\n          requestsManager.enableRequest(request);\n        }\n      }\n    }\n    catch (ClassNotPreparedException ex) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"ClassNotPreparedException: \" + ex.getMessage());\n      }\n    }\n    catch (ObjectCollectedException ex) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"ObjectCollectedException: \" + ex.getMessage());\n      }\n    }\n    catch (InternalException ex) {\n      LOG.info(ex);\n    }\n    catch(Exception ex) {\n      LOG.info(ex);\n    }\n  }","commit_id":"58d5b9f57e376bfd9b2f81850f03a96e8b94446c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void retryRequest(SalesforceHttpRequest request, AbstractClientBase client, Integer retries, HttpConversation conversation,\n                                  boolean copy) {\n            // copy the request to resend\n            // TODO handle a change in Salesforce instanceUrl, right now we retry with the same destination\n            final Request newRequest;\n            if (copy) {\n                newRequest = httpClient.copyRequest(request, request.getURI());\n                newRequest.method(request.getMethod());\n            } else {\n                newRequest = request;\n            }\n\n            conversation.setAttribute(AUTHENTICATION_RETRIES_ATTRIBUTE, ++retries);\n\n            LOG.debug(\"Retry attempt {} on authentication error for {}\", retries, request);\n\n            // update currentToken\n            String currentToken = session.getAccessToken();\n            if (client != null) {\n                // update client cache for this and future requests\n                client.setAccessToken(currentToken);\n                client.setInstanceUrl(session.getInstanceUrl());\n                client.setAccessToken(newRequest);\n            } else {\n                // plain request not made by an AbstractClientBase\n                newRequest.header(HttpHeader.AUTHORIZATION, \"OAuth \" + currentToken);\n            }\n\n            // send new async request with a new delegate\n            conversation.updateResponseListeners(null);\n            newRequest.onRequestBegin(getRequestAbortListener(request));\n            newRequest.send(null);\n        }","id":27032,"modified_method":"private void retryRequest(SalesforceHttpRequest request, AbstractClientBase client, Integer retries, HttpConversation conversation,\n                                  boolean copy) {\n            // copy the request to resend\n            // TODO handle a change in Salesforce instanceUrl, right now we retry with the same destination\n            final Request newRequest;\n            if (copy) {\n                newRequest = httpClient.copyRequest(request, request.getURI());\n                newRequest.method(request.getMethod());\n                HttpFields headers = newRequest.getHeaders();\n                // copy cookies and host for subscriptions to avoid '403::Unknown Client' errors\n                for (HttpField field : request.getHeaders()) {\n                    HttpHeader header = field.getHeader();\n                    if (HttpHeader.COOKIE.equals(header) || HttpHeader.HOST.equals(header)) {\n                        headers.add(header, field.getValue());\n                    }\n                }\n            } else {\n                newRequest = request;\n            }\n\n            conversation.setAttribute(AUTHENTICATION_RETRIES_ATTRIBUTE, ++retries);\n\n            Object originalRequest = conversation.getAttribute(AUTHENTICATION_REQUEST_ATTRIBUTE);\n            LOG.debug(\"Retry attempt {} on authentication error for {}\", retries, originalRequest != null ? originalRequest : newRequest);\n\n            // update currentToken for original request\n            if (originalRequest == null) {\n\n                String currentToken = session.getAccessToken();\n                if (client != null) {\n                    // update client cache for this and future requests\n                    client.setAccessToken(currentToken);\n                    client.setInstanceUrl(session.getInstanceUrl());\n                    client.setAccessToken(newRequest);\n                } else {\n                    // plain request not made by an AbstractClientBase\n                    newRequest.header(HttpHeader.AUTHORIZATION, \"OAuth \" + currentToken);\n                }\n            }\n\n            // send new async request with a new delegate\n            conversation.updateResponseListeners(null);\n            newRequest.onRequestBegin(getRequestAbortListener(request));\n            newRequest.send(null);\n        }","commit_id":"54c78e5c516b0dd81648c76049b13ed476e89f7c","url":"https://github.com/apache/camel"},{"original_method":"private void processMethodEntryEvent(MethodEntryEvent event) {\n    try {\n      myExitRequest = createExitRequest();\n      myExitRequest.addClassFilter(event.method().declaringType());\n      myExitRequest.putProperty(METHOD_KEY, event.method());\n      myExitRequest.enable();\n\n      enableEntryWatching(false);\n    }\n    catch (Exception e) {\n      LOG.error(e);\n    }\n  }","id":27033,"modified_method":"private void processMethodEntryEvent(MethodEntryEvent event) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"-> \" + event.method());\n    }\n    try {\n      if (myEntryRequest != null && myEntryRequest.isEnabled()) {\n        myExitRequest = createExitRequest();\n        myExitRequest.addClassFilter(event.method().declaringType());\n        myEntryMethod = event.method();\n        myExitRequest.enable();\n\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Now watching only \" + event.method());\n        }\n\n        enableEntryWatching(false);\n      }\n    }\n    catch (Exception e) {\n      LOG.error(e);\n    }\n  }","commit_id":"50a074402267d24471c0f178d613f9a168e95a16","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processMethodExitEvent(MethodExitEvent event) {\n    try {\n      if (Registry.is(\"debugger.watch.return.speedup\") && Comparing.equal(event.request().getProperty(METHOD_KEY), event.method())) {\n        enableEntryWatching(true);\n        createExitRequest().enable();\n      }\n      final Method method = event.method();\n      //myLastMethodReturnValue = event.returnValue();\n      try {\n        if (myReturnValueMethod == null) {\n          //noinspection HardCodedStringLiteral\n          myReturnValueMethod = MethodExitEvent.class.getDeclaredMethod(\"returnValue\", ArrayUtil.EMPTY_CLASS_ARRAY);\n        }\n        final Value retVal = (Value)myReturnValueMethod.invoke(event);\n        \n        if (method == null || !\"void\".equals(method.returnTypeName())) {\n          // remember methods with non-void return types only\n          myLastExecutedMethod = method;\n          myLastMethodReturnValue = retVal;\n        }\n      }\n      catch (NoSuchMethodException ignored) {\n      }\n      catch (IllegalAccessException ignored) {\n      }\n      catch (InvocationTargetException ignored) {\n      }\n    }\n    catch (UnsupportedOperationException ex) {\n      LOG.error(ex);\n    }\n  }","id":27034,"modified_method":"private void processMethodExitEvent(MethodExitEvent event) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"<- \" + event.method());\n    }\n    try {\n      if (Registry.is(\"debugger.watch.return.speedup\") && Comparing.equal(myEntryMethod, event.method())) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Now watching all\");\n        }\n        enableEntryWatching(true);\n        createExitRequest().enable();\n      }\n      final Method method = event.method();\n      //myLastMethodReturnValue = event.returnValue();\n      try {\n        if (myReturnValueMethod == null) {\n          //noinspection HardCodedStringLiteral\n          myReturnValueMethod = MethodExitEvent.class.getDeclaredMethod(\"returnValue\", ArrayUtil.EMPTY_CLASS_ARRAY);\n        }\n        final Value retVal = (Value)myReturnValueMethod.invoke(event);\n        \n        if (method == null || !\"void\".equals(method.returnTypeName())) {\n          // remember methods with non-void return types only\n          myLastExecutedMethod = method;\n          myLastMethodReturnValue = retVal;\n        }\n      }\n      catch (NoSuchMethodException ignored) {\n      }\n      catch (IllegalAccessException ignored) {\n      }\n      catch (InvocationTargetException ignored) {\n      }\n    }\n    catch (UnsupportedOperationException ex) {\n      LOG.error(ex);\n    }\n  }","commit_id":"50a074402267d24471c0f178d613f9a168e95a16","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void updateNode(ActionRequest actionRequest) throws Exception {\n\t\tlong nodeId = ParamUtil.getLong(actionRequest, \"nodeId\");\n\n\t\tString name = ParamUtil.getString(actionRequest, \"name\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tWikiNode.class.getName(), actionRequest);\n\n\t\tif (nodeId <= 0) {\n\n\t\t\t// Add node\n\n\t\t\tWikiNodeServiceUtil.addNode(name, description, serviceContext);\n\t\t}\n\t\telse {\n\n\t\t\t// Update node\n\n\t\t\tWikiNodeServiceUtil.updateNode(nodeId, name, description);\n\t\t}\n\t}","id":27035,"modified_method":"protected void updateNode(ActionRequest actionRequest) throws Exception {\n\t\tlong nodeId = ParamUtil.getLong(actionRequest, \"nodeId\");\n\n\t\tString name = ParamUtil.getString(actionRequest, \"name\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tWikiNode.class.getName(), actionRequest);\n\n\t\tif (nodeId <= 0) {\n\n\t\t\t// Add node\n\n\t\t\tWikiNodeServiceUtil.addNode(name, description, serviceContext);\n\t\t}\n\t\telse {\n\n\t\t\t// Update node\n\n\t\t\tString oldName = getNodeName(nodeId);\n\n\t\t\tWikiNodeServiceUtil.updateNode(nodeId, name, description);\n\n\t\t\tupdatePreferences(actionRequest, oldName, name);\n\t\t}\n\t}","commit_id":"51f8ae2437e5e206be871553d4ee527dbb939ad1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void deleteNode(ActionRequest actionRequest) throws Exception {\n\t\tlong nodeId = ParamUtil.getLong(actionRequest, \"nodeId\");\n\n\t\tWikiCacheThreadLocal.setClearCache(false);\n\n\t\tWikiNodeServiceUtil.deleteNode(nodeId);\n\n\t\tWikiCacheUtil.clearCache(nodeId);\n\n\t\tWikiCacheThreadLocal.setClearCache(true);\n\t}","id":27036,"modified_method":"protected void deleteNode(ActionRequest actionRequest) throws Exception {\n\t\tlong nodeId = ParamUtil.getLong(actionRequest, \"nodeId\");\n\n\t\tString oldName = getNodeName(nodeId);\n\n\t\tWikiCacheThreadLocal.setClearCache(false);\n\n\t\tWikiNodeServiceUtil.deleteNode(nodeId);\n\n\t\tWikiCacheUtil.clearCache(nodeId);\n\n\t\tWikiCacheThreadLocal.setClearCache(true);\n\n\t\tupdatePreferences(actionRequest, oldName, StringPool.BLANK);\n\t}","commit_id":"51f8ae2437e5e206be871553d4ee527dbb939ad1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setRuntimeData (ChannelRuntimeData rd) throws PortalException\n    {\n      runtimeData = rd;\n\n      // If the user hasn't clicked on a tab, get persisted active tab\n      if (activeTab.equals(\"none\"))\n        activeTab = getActiveTab();\n\n      action = runtimeData.getParameter(\"action\");\n\n      if (action != null)\n      {\n        // Select tab\n        if (action.equals(\"selectTab\"))\n          activeTab = runtimeData.getParameter(\"activeTab\");\n        // Set active tab\n        else if (action.equals(\"setActiveTab\"))\n        {\n          try\n          {\n            setActiveTab(activeTab);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageSetActiveTab;\n          }\n        }\n        // Change tab restrictions\n        else if (action.equals(\"changePermissions\" ) )\n        {\n          try\n          {\n            String elementId = runtimeData.getParameter(\"elementID\");\n            String moveAllowed = runtimeData.getParameter(\"moveAllowed\");\n            String editAllowed = runtimeData.getParameter(\"editAllowed\");\n            String addChildAllowed = runtimeData.getParameter(\"addChildAllowed\");\n            String deleteAllowed = runtimeData.getParameter(\"deleteAllowed\");\n            changeRestrictions( elementId, moveAllowed, editAllowed,\n                                addChildAllowed, deleteAllowed );\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageRenameTab;\n          }\n        }\n        // Rename tab\n        else if (action.equals(\"renameTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n            String tabName = runtimeData.getParameter(\"tabName\");\n\n            renameTab(tabId, tabName);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageRenameTab;\n          }\n        }\n        // Move tab\n        else if (action.equals(\"moveTab\"))\n        {\n          try\n          {\n            String methodAndID = runtimeData.getParameter(\"method_ID\");\n\n            if (methodAndID != null)\n            {\n              String sourceTabId = runtimeData.getParameter(\"elementID\");\n              int indexOf_ = methodAndID.indexOf(\"_\");\n              String method = methodAndID.substring(0, indexOf_); // insertBefore or appendAfter\n              String destinationTabId = methodAndID.substring(indexOf_ + 1);\n\n              moveTab(sourceTabId, method, destinationTabId);\n            }\n            else\n              action = \"selectTab\";\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageMoveTab;\n          }\n        }\n        // Add tab\n        else if (action.equals(\"addTab\"))\n        {\n          try\n          {\n            String tabName = runtimeData.getParameter(\"tabName\");\n            String methodAndID = runtimeData.getParameter(\"method_ID\");\n\n            if (methodAndID != null)\n            {\n              int indexOf_ = methodAndID.indexOf(\"_\");\n              String method = methodAndID.substring(0, indexOf_); // insertBefore or appendAfter\n              String destinationTabId = methodAndID.substring(indexOf_ + 1);\n\n              addTab(tabName, method, destinationTabId);\n            }\n            else\n              action = \"newTab\";\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageAddTab;\n          }\n        }\n        // Delete tab\n        else if (action.equals(\"deleteTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n\n            deleteElement(tabId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageDeleteTab;\n          }\n        }\n        // Lock tab\n        else if (action.equals(\"lockTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n\n            updateTabLock(tabId, true);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageLockTab;\n          }\n        }\n        // Unlock tab\n        else if (action.equals(\"unlockTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n\n            updateTabLock(tabId, false);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageUnlockTab;\n          }\n        }\n        // Select column\n        else if (action.equals(\"selectColumn\"))\n          elementID = runtimeData.getParameter(\"elementID\");\n        // Change column width(s)\n        else if (action.equals(\"columnWidth\"))\n        {\n          try\n          {\n            HashMap columnWidths = new HashMap();\n            Enumeration eParams = runtimeData.getParameterNames();\n            while (eParams.hasMoreElements())\n            {\n              String param = (String)eParams.nextElement();\n              String prefix = \"columnWidth_\";\n\n              if (param.startsWith(prefix))\n              {\n                String folderId = param.substring(prefix.length());\n                String newWidth = runtimeData.getParameter(prefix + folderId);\n                columnWidths.put(folderId, newWidth);\n              }\n            }\n\n            changeColumnWidths(columnWidths);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageChangeColumnWidths;\n          }\n        }\n        // Move column\n        else if (action.equals(\"moveColumn\"))\n        {\n          String activeTabParam = runtimeData.getParameter(\"activeTab\");\n          if (activeTabParam != null)\n            activeTab = activeTabParam;\n        }\n        // Move column here\n        else if (action.equals(\"moveColumnHere\"))\n        {\n          try\n          {\n            // Get the source column if this is a one-step move, otherwise we already\n            // have it stored as elementID\n            String sourceId = runtimeData.getParameter(\"sourceID\");\n            if (sourceId != null)\n              elementID = sourceId;\n\n            String method = runtimeData.getParameter(\"method\");\n            String destinationId = runtimeData.getParameter(\"elementID\");\n\n            moveColumn(elementID, method, destinationId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageMoveColumn;\n          }\n        }\n        // New column\n        else if (action.equals(\"newColumn\"))\n        {\n          try\n          {\n            String method = runtimeData.getParameter(\"method\");\n            elementID = runtimeData.getParameter(\"elementID\");\n            String destinationColumnId = elementID;\n\n            addColumn(method, destinationColumnId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageNewColumn;\n          }\n        }\n        // Add column\n        else if (action.equals(\"addColumn\"))\n        {\n          // Currently not implemented...\n          // We need to assign widths to columns.\n          // The action addColumn isn't in the stylesheet yet.\n        }\n        // Delete column\n        else if (action.equals(\"deleteColumn\"))\n        {\n          try\n          {\n            String columnId = runtimeData.getParameter(\"elementID\");\n\n            deleteElement(columnId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageDeleteColumn;\n          }\n        }\n        // Select channel\n        else if (action.equals(\"selectChannel\"))\n        {\n          elementID = runtimeData.getParameter(\"elementID\");\n\n          // Modify channel parameters\n          String subAction = runtimeData.getParameter(\"subAction\");\n          if (subAction != null && subAction.equals(\"modifyChannelParams\"))\n          {\n            IUserLayoutChannelDescription layoutChannel=(IUserLayoutChannelDescription)ulm.getNode(elementID);\n            List overridableChanParams = getOverridableChannelParams(layoutChannel);\n            context.internalState = new ParametersState(context, this, overridableChanParams, layoutChannel);\n            context.internalState.setStaticData(staticData);\n          }\n        }\n        // Move channel\n        else if (action.equals(\"moveChannel\"))\n        {\n          String activeTabParam = runtimeData.getParameter(\"activeTab\");\n          if (activeTabParam != null)\n            activeTab = activeTabParam;\n        }\n        // Move channel here\n        else if (action.equals(\"moveChannelHere\"))\n        {\n          try\n          {\n            // Get the source channel if this is a one-step move, otherwise we already\n            // have it stored as elementID\n            String sourceId = runtimeData.getParameter(\"sourceID\");\n            if (sourceId != null)\n              elementID = sourceId;\n\n            String method = runtimeData.getParameter(\"method\");\n            String destinationId = runtimeData.getParameter(\"elementID\");\n\n            moveChannel(elementID, method, destinationId);\n\n            // Clear out elementId so the channel doesn't stay highlighted\n            elementID = null;\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageMoveChannel;\n          }\n        }\n        // Delete channel\n        else if (action.equals(\"deleteChannel\"))\n        {\n          try\n          {\n            String channelSubscribeId = runtimeData.getParameter(\"elementID\");\n\n            deleteChannel(channelSubscribeId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageDeleteChannel;\n          }\n        }\n        // Cancel\n        else if (action.equals(\"cancel\"))\n        {\n          elementID = \"none\";\n        }\n      }\n      else\n        action = \"none\";\n    }","id":27037,"modified_method":"public void setRuntimeData (ChannelRuntimeData rd) throws PortalException\n    {\n      runtimeData = rd;\n\n      // If the user hasn't clicked on a tab, get persisted active tab\n      if (activeTab.equals(\"none\"))\n        activeTab = getActiveTab();\n\n      action = runtimeData.getParameter(\"action\");\n\n      if (action != null)\n      {\n        // Select tab\n        if (action.equals(\"selectTab\"))\n          activeTab = runtimeData.getParameter(\"activeTab\");\n        // Set active tab\n        else if (action.equals(\"setActiveTab\"))\n        {\n          try\n          {\n            setActiveTab(activeTab);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageSetActiveTab;\n          }\n        }\n        // Change tab restrictions\n        else if (action.equals(\"changePermissions\" ) )\n        {\n          try\n          {\n            String elementId = runtimeData.getParameter(\"elementID\");\n            String moveAllowed = runtimeData.getParameter(\"moveAllowed\");\n            String editAllowed = runtimeData.getParameter(\"editAllowed\");\n            String addChildAllowed = runtimeData.getParameter(\"addChildAllowed\");\n            String deleteAllowed = runtimeData.getParameter(\"deleteAllowed\");\n            changeRestrictions( elementId, moveAllowed, editAllowed,\n                                addChildAllowed, deleteAllowed );\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageRenameTab;\n          }\n        }\n        // Rename tab\n        else if (action.equals(\"renameTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n            String tabName = runtimeData.getParameter(\"tabName\");\n            String externalId = runtimeData.getParameter(\"externalId\");\n\n            renameTab(tabId, tabName, externalId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageRenameTab;\n          }\n        }\n        // Move tab\n        else if (action.equals(\"moveTab\"))\n        {\n          try\n          {\n            String methodAndID = runtimeData.getParameter(\"method_ID\");\n\n            if (methodAndID != null)\n            {\n              String sourceTabId = runtimeData.getParameter(\"elementID\");\n              int indexOf_ = methodAndID.indexOf(\"_\");\n              String method = methodAndID.substring(0, indexOf_); // insertBefore or appendAfter\n              String destinationTabId = methodAndID.substring(indexOf_ + 1);\n\n              moveTab(sourceTabId, method, destinationTabId);\n            }\n            else\n              action = \"selectTab\";\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageMoveTab;\n          }\n        }\n        // Add tab\n        else if (action.equals(\"addTab\"))\n        {\n          try\n          {\n            String tabName = runtimeData.getParameter(\"tabName\");\n            String externalId = runtimeData.getParameter(\"externalId\");\n            String methodAndID = runtimeData.getParameter(\"method_ID\");\n\n            if (methodAndID != null)\n            {\n              int indexOf_ = methodAndID.indexOf(\"_\");\n              String method = methodAndID.substring(0, indexOf_); // insertBefore or appendAfter\n              String destinationTabId = methodAndID.substring(indexOf_ + 1);\n\n              addTab(tabName, externalId, method, destinationTabId);\n            }\n            else\n              action = \"newTab\";\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageAddTab;\n          }\n        }\n        // Delete tab\n        else if (action.equals(\"deleteTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n\n            deleteElement(tabId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageDeleteTab;\n          }\n        }\n        // Lock tab\n        else if (action.equals(\"lockTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n\n            updateTabLock(tabId, true);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageLockTab;\n          }\n        }\n        // Unlock tab\n        else if (action.equals(\"unlockTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n\n            updateTabLock(tabId, false);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageUnlockTab;\n          }\n        }\n        // Select column\n        else if (action.equals(\"selectColumn\"))\n          elementID = runtimeData.getParameter(\"elementID\");\n        // Change column width(s)\n        else if (action.equals(\"columnWidth\"))\n        {\n          try\n          {\n            HashMap columnWidths = new HashMap();\n            Enumeration eParams = runtimeData.getParameterNames();\n            while (eParams.hasMoreElements())\n            {\n              String param = (String)eParams.nextElement();\n              String prefix = \"columnWidth_\";\n\n              if (param.startsWith(prefix))\n              {\n                String folderId = param.substring(prefix.length());\n                String newWidth = runtimeData.getParameter(prefix + folderId);\n                columnWidths.put(folderId, newWidth);\n              }\n            }\n\n            changeColumnWidths(columnWidths);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageChangeColumnWidths;\n          }\n        }\n        // Move column\n        else if (action.equals(\"moveColumn\"))\n        {\n          String activeTabParam = runtimeData.getParameter(\"activeTab\");\n          if (activeTabParam != null)\n            activeTab = activeTabParam;\n        }\n        // Move column here\n        else if (action.equals(\"moveColumnHere\"))\n        {\n          try\n          {\n            // Get the source column if this is a one-step move, otherwise we already\n            // have it stored as elementID\n            String sourceId = runtimeData.getParameter(\"sourceID\");\n            if (sourceId != null)\n              elementID = sourceId;\n\n            String method = runtimeData.getParameter(\"method\");\n            String destinationId = runtimeData.getParameter(\"elementID\");\n\n            moveColumn(elementID, method, destinationId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageMoveColumn;\n          }\n        }\n        // New column\n        else if (action.equals(\"newColumn\"))\n        {\n          try\n          {\n            String method = runtimeData.getParameter(\"method\");\n            elementID = runtimeData.getParameter(\"elementID\");\n            String destinationColumnId = elementID;\n\n            addColumn(method, destinationColumnId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageNewColumn;\n          }\n        }\n        // Add column\n        else if (action.equals(\"addColumn\"))\n        {\n          // Currently not implemented...\n          // We need to assign widths to columns.\n          // The action addColumn isn't in the stylesheet yet.\n        }\n        // Delete column\n        else if (action.equals(\"deleteColumn\"))\n        {\n          try\n          {\n            String columnId = runtimeData.getParameter(\"elementID\");\n\n            deleteElement(columnId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageDeleteColumn;\n          }\n        }\n        // Select channel\n        else if (action.equals(\"selectChannel\"))\n        {\n          elementID = runtimeData.getParameter(\"elementID\");\n\n          // Modify channel parameters\n          String subAction = runtimeData.getParameter(\"subAction\");\n          if (subAction != null && subAction.equals(\"modifyChannelParams\"))\n          {\n            IUserLayoutChannelDescription layoutChannel=(IUserLayoutChannelDescription)ulm.getNode(elementID);\n            List overridableChanParams = getOverridableChannelParams(layoutChannel);\n            context.internalState = new ParametersState(context, this, overridableChanParams, layoutChannel);\n            context.internalState.setStaticData(staticData);\n          }\n        }\n        // Move channel\n        else if (action.equals(\"moveChannel\"))\n        {\n          String activeTabParam = runtimeData.getParameter(\"activeTab\");\n          if (activeTabParam != null)\n            activeTab = activeTabParam;\n        }\n        // Move channel here\n        else if (action.equals(\"moveChannelHere\"))\n        {\n          try\n          {\n            // Get the source channel if this is a one-step move, otherwise we already\n            // have it stored as elementID\n            String sourceId = runtimeData.getParameter(\"sourceID\");\n            if (sourceId != null)\n              elementID = sourceId;\n\n            String method = runtimeData.getParameter(\"method\");\n            String destinationId = runtimeData.getParameter(\"elementID\");\n\n            moveChannel(elementID, method, destinationId);\n\n            // Clear out elementId so the channel doesn't stay highlighted\n            elementID = null;\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageMoveChannel;\n          }\n        }\n        // Delete channel\n        else if (action.equals(\"deleteChannel\"))\n        {\n          try\n          {\n            String channelSubscribeId = runtimeData.getParameter(\"elementID\");\n\n            deleteChannel(channelSubscribeId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageDeleteChannel;\n          }\n        }\n        // Cancel\n        else if (action.equals(\"cancel\"))\n        {\n          elementID = \"none\";\n        }\n      }\n      else\n        action = \"none\";\n    }","commit_id":"253a7252aca3f9f0cc0d19236f2e1da7f321b271","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Adds a new tab to the layout.\n   * @param tabName the name of the tab\n   * @param method either <code>insertBefore<\/code> or <code>appendAfter<\/code>\n   * @param destinationTabId the column to insert the new column before or append after (may actually be a tab)\n   * @throws PortalException\n   */\n  private final void addTab(String tabName,\n                            String method,\n                            String destinationTabId)\n      throws PortalException\n  {\n    IUserLayoutFolderDescription newTab = createFolder(tabName);\n\n    if (tabName == null || tabName.trim().length() == 0) {\n        newTab.setName(BLANK_TAB_NAME);\n    }\n    String siblingId=null;\n    if(method.equals(\"insertBefore\")) \n      siblingId=destinationTabId;\n    ulm.addNode(newTab,ulm.getRootFolderId(),siblingId);\n\n    saveLayout(false);\n  }","id":27038,"modified_method":"/**\n   * Adds a new tab to the layout.\n   * @param tabName the name of the tab\n   * @param method either <code>insertBefore<\/code> or <code>appendAfter<\/code>\n   * @param destinationTabId the column to insert the new column before or append after (may actually be a tab)\n   * @throws PortalException\n   */\n  private final void addTab(String tabName,\n\t\t  \t\t\t\t\tString tabExternalId,\n                            String method,\n                            String destinationTabId)\n      throws PortalException\n  {\n    IUserLayoutFolderDescription newTab = createFolder(tabName);\n\n    if (tabName == null || tabName.trim().length() == 0) {\n        newTab.setName(BLANK_TAB_NAME);\n    }\n    String siblingId=null;\n    if(method.equals(\"insertBefore\")) \n      siblingId=destinationTabId;\n    ulm.addNode(newTab,ulm.getRootFolderId(),siblingId);\n\n    // Update the externalId...\n    if (tabExternalId != null) {\n        try {\n            StructureStylesheetUserPreferences ssup = userPrefs.getStructureStylesheetUserPreferences();\n            ssup.setFolderAttributeValue(newTab.getId(), \"externalId\", tabExternalId);\n            int profileId = editedUserProfile.getProfileId();\n            ulStore.setStructureStylesheetUserPreferences(staticData.getPerson(), profileId, ssup);\n        } catch (Exception e) {\n      \t  throw new PortalException(\"Failed to set the 'externalId' attribute of tab '\" + \n      \t\t\t  \tnewTab.getId() + \"' in StructureStylesheetUserPreferences\", e);\n        }\n    }\n\n    saveLayout(false);\n  }","commit_id":"253a7252aca3f9f0cc0d19236f2e1da7f321b271","url":"https://github.com/Jasig/uPortal"},{"original_method":"private final void renameTab(String tabId, String tabName) throws PortalException\n  {\n      IUserLayoutFolderDescription tab=(IUserLayoutFolderDescription)ulm.getNode(tabId);\n      if(ulm.canUpdateNode(ulm.getNode(tabId))) {\n          if (tabName == null || tabName.trim().length() == 0) {\n              tab.setName(BLANK_TAB_NAME);\n          } else {\n              tab.setName(tabName);\n          }\n          ulm.updateNode(tab);\n      } else {\n      \t\n          throw new PortalException(\"attempt.to.rename.immutable.tab\" +tabId);\n      }\n      saveLayout(false);\n  }","id":27039,"modified_method":"private final void renameTab(String tabId, String tabName, String tabExternalId) throws PortalException {\n      IUserLayoutFolderDescription tab=(IUserLayoutFolderDescription)ulm.getNode(tabId);\n      if(ulm.canUpdateNode(ulm.getNode(tabId))) {\n    \t  \n          if (tabName == null || tabName.trim().length() == 0) {\n              tab.setName(BLANK_TAB_NAME);\n          } else {\n              tab.setName(tabName);\n          }\n          ulm.updateNode(tab);\n\n          // Update the externalId...\n          StructureStylesheetUserPreferences ssup = userPrefs.getStructureStylesheetUserPreferences();\n          if (tabExternalId != null && tabExternalId.trim().length() != 0) {\n              try {\n                  ssup.setFolderAttributeValue(tab.getId(), \"externalId\", tabExternalId);\n                  ulStore.setStructureStylesheetUserPreferences(staticData.getPerson(), \n                \t\t  \t\t\t\t\teditedUserProfile.getProfileId(), ssup);\n              } catch (Exception e) {\n            \t  throw new PortalException(\"Failed to set the 'externalId' attribute of tab '\" + \n            \t\t\t  \t\t\t\ttabId + \"' in StructureStylesheetUserPreferences\", e);\n              }\n          } else {\n        \t  // tabExternalId is not specified... need to remove it if present...\n        \t  if (ssup.getDefinedFolderAttributeValue(tab.getId(), \"externalId\") != null) {\n        \t\t  // It *is* previously specified, and being removed...\n                  try {\n                \t  // Setting to null and saving will remove it from DB.\n                      ssup.setFolderAttributeValue(tab.getId(), \"externalId\", null);\n                      ulStore.setStructureStylesheetUserPreferences(staticData.getPerson(), \n                    \t\t  \t\t\t\teditedUserProfile.getProfileId(), ssup);\n                  } catch (Exception e) {\n                \t  throw new PortalException(\"Failed to remove the 'externalId' attribute of tab '\" + \n                \t\t\t  \t\t\t\ttabId + \"' in StructureStylesheetUserPreferences\", e);\n                  }        \t\t  \n        \t  }\n          }\n\n      } else {\n      \t\n          throw new PortalException(\"attempt.to.rename.immutable.tab\" +tabId);\n      }\n      saveLayout(false);\n  }","commit_id":"253a7252aca3f9f0cc0d19236f2e1da7f321b271","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * Is the given argument a character or entity reference?\n     *\n     *\n     * @param ent the string whose nature we need to determine.\n     *\n     * @return true if ent is an entity reference and false otherwise.\n     */\n    public boolean isReference(String ent) {\n        if (!(ent.charAt(0) == '&') || !ent.endsWith(\";\")) {\n            return false;\n        }\n\n        if (ent.charAt(1) == '#') {\n            if (ent.charAt(2) == 'x') {\n                try {\n                    Integer.parseInt(ent.substring(3, ent.length() - 1), 16);\n                    return true;\n                } catch (NumberFormatException nfe) {\n                    return false;\n                }\n            } else {\n                try {\n                    Integer.parseInt(ent.substring(2, ent.length() - 1));\n                    return true;\n                } catch (NumberFormatException nfe) {\n                    return false;\n                }\n            }\n        }\n\n        String name = ent.substring(1, ent.length() - 1);\n        for (int i = 0; i < knownEntities.length; i++) {\n            if (name.equals(knownEntities[i])) {\n                return true;\n            }\n        }\n        return false;\n    }","id":27040,"modified_method":"/**\n     * Is the given argument a character or entity reference?\n     *\n     * @param ent the string whose nature we need to determine.\n     * @return <tt>true<\/tt> if <tt>ent<\/tt> is an entity reference and\n     * <tt>false<\/tt> otherwise.\n     */\n    public boolean isReference(String ent) {\n        if (!(ent.charAt(0) == '&') || !ent.endsWith(\";\"))\n            return false;\n\n        if (ent.charAt(1) == '#') {\n            if (ent.charAt(2) == 'x') {\n                try {\n                    Integer.parseInt(ent.substring(3, ent.length() - 1), 16);\n                    return true;\n                } catch (NumberFormatException nfe) {\n                    return false;\n                }\n            } else {\n                try {\n                    Integer.parseInt(ent.substring(2, ent.length() - 1));\n                    return true;\n                } catch (NumberFormatException nfe) {\n                    return false;\n                }\n            }\n        }\n\n        String name = ent.substring(1, ent.length() - 1);\n        for (int i = 0; i < knownEntities.length; i++) {\n            if (name.equals(knownEntities[i])) {\n                return true;\n            }\n        }\n        return false;\n    }","commit_id":"9897f9139a19eebf4b6eff6b08155256f5007ed0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates (only if necessary) and returns the element which is at the end\n     * of the specified path.\n     * @param doc the target document where the specified path should be created\n     * @param path a dot separated string indicating the path to be created\n     * @return the component at the end of the newly created path.\n     */\n    public static Element createLastPathComponent(Document doc, String[] path)\n    {\n        if (doc == null)\n            throw new IllegalArgumentException(\"doc must not be null\");\n        if (path == null)\n            throw new IllegalArgumentException(\"path must not be null\");\n\n        Element parent = (Element)doc.getFirstChild();\n        if (parent == null)\n            throw new IllegalArgumentException(\"parentmust not be null\");\n\n        Element e = parent;\n        for (String pathEl : path)\n        {\n            Element newEl = findChild(e, pathEl);\n            if (newEl == null)\n            {\n                newEl = doc.createElement(pathEl);\n                e.appendChild(newEl);\n            }\n            e = newEl;\n        }\n        return e;\n    }","id":27041,"modified_method":"/**\n     * Creates (only if necessary) and returns the element which is at the end\n     * of the specified path.\n     * @param doc the target document where the specified path should be created\n     * @param path an array of <tt>String<\/tt> elements which represents the\n     * path to be created. Each element of <tt>path<\/tt> up to and including the\n     * index <code>pathLength - 1<\/code> must be valid XML (element) names\n     * @param pathLength the length of the specified <tt>path<\/tt>\n     * @return the component at the end of the newly created path.\n     */\n    public static Element createLastPathComponent(\n            Document doc,\n            String[] path, int pathLength)\n    {\n        if (doc == null)\n            throw new IllegalArgumentException(\"doc must not be null\");\n        if (path == null)\n            throw new IllegalArgumentException(\"path must not be null\");\n\n        Element parent = (Element)doc.getFirstChild();\n\n        if (parent == null)\n            throw new IllegalArgumentException(\"parentmust not be null\");\n\n        Element e = parent;\n\n        for (int i = 0; i < pathLength; i++)\n        {\n            String pathEl = path[i];\n            Element newEl = findChild(e, pathEl);\n\n            if (newEl == null)\n            {\n                newEl = doc.createElement(pathEl);\n                e.appendChild(newEl);\n            }\n            e = newEl;\n        }\n        return e;\n    }","commit_id":"9897f9139a19eebf4b6eff6b08155256f5007ed0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Loads the contents of the specified node and its children into the local\r\n     * properties. Any nodes marked as \"system\" will also be resolved in the\r\n     * system properties.\r\n     * @param node the root node that we should load together with its children\r\n     * @param propertyNameBuff a StringBuffer containing the prefix describing\r\n     * the route to the specified node including its one name\r\n     * @param properties the dictionary object where all properties extracted\r\n     * from this node and its children should be recorded.\r\n     */\r\n    private void loadNode(Node         node,\r\n                          StringBuffer propertyNameBuff,\r\n                          Map<String, Object>          props)\r\n    {\r\n        Node currentNode = null;\r\n        NodeList children = node.getChildNodes();\r\n        for(int i = 0; i < children.getLength(); i++)\r\n        {\r\n            currentNode = children.item(i);\r\n\r\n            if(currentNode.getNodeType() == Node.ELEMENT_NODE)\r\n            {\r\n                StringBuffer newPropBuff =\r\n                    new StringBuffer(propertyNameBuff\r\n                                     + \".\" +currentNode.getNodeName());\r\n                String value = XMLConfUtils.getAttribute(\r\n                    currentNode, ATTRIBUTE_VALUE);\r\n\r\n                String propertyType =\r\n                    XMLConfUtils.getAttribute(currentNode, SYSTEM_ATTRIBUTE_NAME);\r\n\r\n                // the value attr is present we must handle the desired property\r\n                if(value != null)\r\n                {\r\n\r\n                    //if the property is marked as \"system\", we should resolve\r\n                    //it against the system properties and only store a\r\n                    //reference locally. this is normally done for properties\r\n                    //that are supposed to configure underlying libraries.\r\n                    if(propertyType != null\r\n                       && propertyType.equals(SYSTEM_ATTRIBUTE_TRUE))\r\n                    {\r\n                        props.put(\r\n                            newPropBuff.toString(),\r\n                            new PropertyReference(newPropBuff.toString()));\r\n                        System.setProperty(newPropBuff.toString(), value);\r\n                    }\r\n                    else\r\n                    {\r\n                        props.put(newPropBuff.toString(), value);\r\n                    }\r\n                }\r\n\r\n                //load child nodes\r\n                loadNode(currentNode, newPropBuff, props);\r\n            }\r\n        }\r\n    }","id":27042,"modified_method":"/**\r\n     * Loads the contents of the specified node and its children into the local\r\n     * properties. Any nodes marked as \"system\" will also be resolved in the\r\n     * system properties.\r\n     * @param node the root node that we should load together with its children\r\n     * @param propertyName a String containing the prefix describing the route\r\n     * to the specified node including its one name\r\n     * @param props the dictionary object where all properties extracted\r\n     * from this node and its children should be recorded.\r\n     */\r\n    private void loadNode(Node         node,\r\n                          String propertyName,\r\n                          Map<String, Object>          props)\r\n    {\r\n        Node currentNode = null;\r\n        NodeList children = node.getChildNodes();\r\n\r\n        for(int i = 0; i < children.getLength(); i++)\r\n        {\r\n            currentNode = children.item(i);\r\n\r\n            if(currentNode.getNodeType() == Node.ELEMENT_NODE)\r\n            {\r\n                String newProp\r\n                    = propertyName\r\n                        + \".\"\r\n                        + DOMElementWriter.decodeName(\r\n                                currentNode.getNodeName());\r\n                String value = XMLConfUtils.getAttribute(\r\n                    currentNode, ATTRIBUTE_VALUE);\r\n\r\n                // the value attr is present we must handle the desired property\r\n                if(value != null)\r\n                {\r\n                    String propertyType\r\n                        = XMLConfUtils.getAttribute(\r\n                                currentNode,\r\n                                SYSTEM_ATTRIBUTE_NAME);\r\n\r\n                    //if the property is marked as \"system\", we should resolve\r\n                    //it against the system properties and only store a\r\n                    //reference locally. this is normally done for properties\r\n                    //that are supposed to configure underlying libraries.\r\n                    if((propertyType != null)\r\n                            && propertyType.equals(SYSTEM_ATTRIBUTE_TRUE))\r\n                    {\r\n                        props.put(newProp, new PropertyReference(newProp));\r\n                        System.setProperty(newProp, value);\r\n                    }\r\n                    else\r\n                        props.put(newProp, value);\r\n                }\r\n\r\n                //load child nodes\r\n                loadNode(currentNode, newProp, props);\r\n            }\r\n        }\r\n    }","commit_id":"9897f9139a19eebf4b6eff6b08155256f5007ed0","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void storeConfiguration(OutputStream out)\r\n    {\r\n        // resolve the properties that were initially in the file - back to\r\n        // the document.\r\n\r\n        if (propertiesDocument == null)\r\n            propertiesDocument = createPropertiesDocument();\r\n\r\n        Node root = propertiesDocument.getFirstChild();\r\n\r\n        Node currentNode = null;\r\n        NodeList children = root.getChildNodes();\r\n        for (int i = 0; i < children.getLength(); i++)\r\n        {\r\n            currentNode = children.item(i);\r\n\r\n            if (currentNode.getNodeType() == Node.ELEMENT_NODE)\r\n            {\r\n                StringBuffer propertyNameBuff = new StringBuffer();\r\n                propertyNameBuff.append(currentNode.getNodeName());\r\n                updateNode(currentNode, propertyNameBuff, properties);\r\n            }\r\n        }\r\n\r\n        // create in the document the properties that were added by other\r\n        // bundles after the initial property load.\r\n\r\n        Map<String, Object> newlyAddedProperties = cloneProperties();\r\n\r\n        // remove those that were originally there;\r\n        for (String propName : fileExtractedProperties.keySet())\r\n            newlyAddedProperties.remove(propName);\r\n\r\n        this.processNewProperties(propertiesDocument, newlyAddedProperties);\r\n\r\n        XMLUtils.indentedWriteXML(propertiesDocument, out);\r\n    }","id":27043,"modified_method":"public void storeConfiguration(OutputStream out)\r\n    {\r\n        // resolve the properties that were initially in the file - back to\r\n        // the document.\r\n        if (propertiesDocument == null)\r\n            propertiesDocument = createPropertiesDocument();\r\n\r\n        Node root = propertiesDocument.getFirstChild();\r\n        NodeList children = root.getChildNodes();\r\n\r\n        for (int i = 0; i < children.getLength(); i++)\r\n        {\r\n            Node currentNode = children.item(i);\r\n\r\n            if (currentNode.getNodeType() == Node.ELEMENT_NODE)\r\n            {\r\n                String propertyName\r\n                    = DOMElementWriter.decodeName(currentNode.getNodeName());\r\n\r\n                updateNode(currentNode, propertyName, properties);\r\n            }\r\n        }\r\n\r\n        // create in the document the properties that were added by other\r\n        // bundles after the initial property load.\r\n        Map<String, Object> newlyAddedProperties = cloneProperties();\r\n\r\n        // remove those that were originally there;\r\n        for (String propName : fileExtractedProperties.keySet())\r\n            newlyAddedProperties.remove(propName);\r\n\r\n        this.processNewProperties(propertiesDocument, newlyAddedProperties);\r\n\r\n        XMLUtils.indentedWriteXML(propertiesDocument, out);\r\n    }","commit_id":"9897f9139a19eebf4b6eff6b08155256f5007ed0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Creates an entry in the xml <tt>doc<\/tt> for the specified key value\r\n     * pair.\r\n     * @param doc the XML <tt>document<\/tt> to update.\r\n     * @param key the value of the <tt>name<\/tt> attribute for the new entry\r\n     * @param value the value of the <tt>value<\/tt> attribue for the new\r\n     * @param isSystem specifies whether this is a system property (system\r\n     *                 attribute will be set to true).\r\n     * entry.\r\n     */\r\n    private void processNewProperty(Document doc,\r\n                                    String key,\r\n                                    String value,\r\n                                    boolean isSystem)\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(key, \".\");\r\n        String[] toks = new String[tokenizer.countTokens()];\r\n        int i = 0;\r\n        while(tokenizer.hasMoreTokens())\r\n            toks[i++] = tokenizer.nextToken();\r\n\r\n        String[] chain = new String[toks.length - 1];\r\n        for (int j = 0; j < chain.length; j++)\r\n        {\r\n            chain[j] = toks[j];\r\n        }\r\n\r\n        String nodeName = toks[toks.length - 1];\r\n\r\n        Element parent = XMLConfUtils.createLastPathComponent(doc, chain);\r\n        Element newNode = XMLConfUtils.findChild(parent, nodeName);\r\n        if (newNode == null)\r\n        {\r\n            newNode = doc.createElement(nodeName);\r\n            parent.appendChild(newNode);\r\n        }\r\n        newNode.setAttribute(\"value\", value);\r\n\r\n        if(isSystem)\r\n            newNode.setAttribute(SYSTEM_ATTRIBUTE_NAME, SYSTEM_ATTRIBUTE_TRUE);\r\n    }","id":27044,"modified_method":"/**\r\n     * Creates an entry in the XML <tt>doc<\/tt> for the specified key value\r\n     * pair.\r\n     * @param doc the XML <tt>document<\/tt> to update.\r\n     * @param key the value of the <tt>name<\/tt> attribute for the new entry\r\n     * @param value the value of the <tt>value<\/tt> attribute for the new entry\r\n     * @param isSystem specifies whether this is a system property (system\r\n     * attribute will be set to true).\r\n     */\r\n    private void processNewProperty(Document doc,\r\n                                    String key,\r\n                                    String value,\r\n                                    boolean isSystem)\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(key, \".\");\r\n        String[] toks = new String[tokenizer.countTokens()];\r\n        int i = 0;\r\n\r\n        while(tokenizer.hasMoreTokens())\r\n            toks[i++] = DOMElementWriter.encodeName(tokenizer.nextToken());\r\n\r\n        String nodeName = toks[toks.length - 1];\r\n        Element parent\r\n            = XMLConfUtils.createLastPathComponent(doc, toks, toks.length - 1);\r\n        Element newNode = XMLConfUtils.findChild(parent, nodeName);\r\n\r\n        if (newNode == null)\r\n        {\r\n            newNode = doc.createElement(nodeName);\r\n            parent.appendChild(newNode);\r\n        }\r\n        newNode.setAttribute(\"value\", value);\r\n\r\n        if(isSystem)\r\n            newNode.setAttribute(SYSTEM_ATTRIBUTE_NAME, SYSTEM_ATTRIBUTE_TRUE);\r\n    }","commit_id":"9897f9139a19eebf4b6eff6b08155256f5007ed0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Creates new entries in the XML <tt>doc<\/tt> for every element in the\r\n     * <tt>newProperties<\/tt> table.\r\n     * \r\n     * @param doc the XML <tt>Document<\/tt> where the new entries should be\r\n     *            created\r\n     * @param newProperties the table containing the properties that are to be\r\n     *            introduced in the document.\r\n     */\r\n    private void processNewProperties(Document doc,\r\n                                      Map<String, Object>      newProperties)\r\n    {\r\n        for (Map.Entry<String, Object> entry : newProperties.entrySet())\r\n        {\r\n            String key = entry.getKey();\r\n            Object value = entry.getValue();\r\n            boolean isSystem = value instanceof PropertyReference;\r\n            value = isSystem\r\n                        ?((PropertyReference)value).getValue()\r\n                        :value;\r\n            processNewProperty(doc, key, value.toString(), isSystem);\r\n        }\r\n    }","id":27045,"modified_method":"/**\r\n     * Creates new entries in the XML <tt>doc<\/tt> for every element in the\r\n     * <tt>newProperties<\/tt> table.\r\n     * \r\n     * @param doc the XML <tt>Document<\/tt> where the new entries should be\r\n     *            created\r\n     * @param newProperties the table containing the properties that are to be\r\n     *            introduced in the document.\r\n     */\r\n    private void processNewProperties(Document doc,\r\n                                      Map<String, Object>      newProperties)\r\n    {\r\n        for (Map.Entry<String, Object> entry : newProperties.entrySet())\r\n        {\r\n            Object value = entry.getValue();\r\n            boolean system;\r\n\r\n            if (system = (value instanceof PropertyReference))\r\n                value = ((PropertyReference) value).getValue();\r\n            processNewProperty(doc, entry.getKey(), value.toString(), system);\r\n        }\r\n    }","commit_id":"9897f9139a19eebf4b6eff6b08155256f5007ed0","url":"https://github.com/jitsi/jitsi"},{"original_method":"public PropertyReference(String propertyName)\r\n        {\r\n            this.propertyName = propertyName;\r\n        }","id":27046,"modified_method":"/**\r\n         * Initializes a new <tt>PropertyReference<\/tt> instance which is to\r\n         * represent a system property with a specific name.\r\n         *\r\n         * @param propertyName the name of the system property to be represented\r\n         * by the new instance\r\n         */\r\n        public PropertyReference(String propertyName)\r\n        {\r\n            this.propertyName = propertyName;\r\n        }","commit_id":"9897f9139a19eebf4b6eff6b08155256f5007ed0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Loads the contents of the specified configuration file into the local\r\n     * properties object.\r\n     * @param file a reference to the configuration file to load.\r\n     * @return a hashtable containing all properties extracted from the\r\n     * specified file.\r\n     *\r\n     * @throws IOException if the specified file does not exist\r\n     * @throws XMLException if there is a problem with the file syntax.\r\n     */\r\n    private Map<String, Object> loadConfiguration(File file)\r\n        throws IOException,\r\n        XMLException\r\n    {\r\n        try\r\n        {\r\n            DocumentBuilderFactory factory =\r\n                DocumentBuilderFactory.newInstance();\r\n            DocumentBuilder builder = factory.newDocumentBuilder();\r\n            Map<String, Object> props = new Hashtable<String, Object>();\r\n\r\n            //if the file is empty (or contains only sth insignificant)\r\n            //ifnore it and create a new document.\r\n            if(file.length() < \"<sip-communicator>\".length()*2)\r\n                propertiesDocument = createPropertiesDocument();\r\n            else\r\n                propertiesDocument = builder.parse(file);\r\n\r\n            Node root = propertiesDocument.getFirstChild();\r\n\r\n            Node currentNode = null;\r\n            NodeList children = root.getChildNodes();\r\n            for(int i = 0; i < children.getLength(); i++)\r\n            {\r\n                currentNode = children.item(i);\r\n\r\n                if(currentNode.getNodeType() == Node.ELEMENT_NODE)\r\n                {\r\n                    StringBuffer propertyNameBuff = new StringBuffer();\r\n                    propertyNameBuff.append(currentNode.getNodeName());\r\n                    loadNode(currentNode, propertyNameBuff, props);\r\n                }\r\n            }\r\n\r\n            return props;\r\n        }\r\n        catch(SAXException ex)\r\n        {\r\n            logger.error(\"Error parsing configuration file\", ex);\r\n            throw new XMLException(ex.getMessage(), ex);\r\n        }\r\n        catch(ParserConfigurationException ex)\r\n        {\r\n            //it is not highly probable that this might happen - so lets just\r\n            //log it.\r\n            logger.error(\"Error finding configuration for default parsers\", ex);\r\n            return new Hashtable<String, Object>();\r\n        }\r\n    }","id":27047,"modified_method":"/**\r\n     * Loads the contents of the specified configuration file into the local\r\n     * properties object.\r\n     * @param file a reference to the configuration file to load.\r\n     * @return a hashtable containing all properties extracted from the\r\n     * specified file.\r\n     *\r\n     * @throws IOException if the specified file does not exist\r\n     * @throws XMLException if there is a problem with the file syntax.\r\n     */\r\n    private Map<String, Object> loadConfiguration(File file)\r\n        throws IOException,\r\n        XMLException\r\n    {\r\n        try\r\n        {\r\n            DocumentBuilderFactory factory =\r\n                DocumentBuilderFactory.newInstance();\r\n            DocumentBuilder builder = factory.newDocumentBuilder();\r\n            Map<String, Object> props = new Hashtable<String, Object>();\r\n\r\n            //if the file is empty (or contains only sth insignificant)\r\n            //ignore it and create a new document.\r\n            if(file.length() < \"<sip-communicator>\".length()*2)\r\n                propertiesDocument = createPropertiesDocument();\r\n            else\r\n                propertiesDocument = builder.parse(file);\r\n\r\n            Node root = propertiesDocument.getFirstChild();\r\n\r\n            Node currentNode = null;\r\n            NodeList children = root.getChildNodes();\r\n            for(int i = 0; i < children.getLength(); i++)\r\n            {\r\n                currentNode = children.item(i);\r\n\r\n                if(currentNode.getNodeType() == Node.ELEMENT_NODE)\r\n                {\r\n                    String propertyName\r\n                        = DOMElementWriter.decodeName(\r\n                                currentNode.getNodeName());\r\n\r\n                    loadNode(currentNode, propertyName, props);\r\n                }\r\n            }\r\n\r\n            return props;\r\n        }\r\n        catch(SAXException ex)\r\n        {\r\n            logger.error(\"Error parsing configuration file\", ex);\r\n            throw new XMLException(ex.getMessage(), ex);\r\n        }\r\n        catch(ParserConfigurationException ex)\r\n        {\r\n            //it is not highly probable that this might happen - so lets just\r\n            //log it.\r\n            logger.error(\"Error finding configuration for default parsers\", ex);\r\n            return new Hashtable<String, Object>();\r\n        }\r\n    }","commit_id":"9897f9139a19eebf4b6eff6b08155256f5007ed0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Updates the value of the specified node and its children to reflect those\r\n     * in the properties file. Nodes marked as \"system\" will be updated from the\r\n     * specified properties object and not from the system properties since if\r\n     * any intentional change (through a configuration form) has occurred it\r\n     * will have been made there.\r\n     * \r\n     * @param node the root node that we shold update together with its children\r\n     * @param propertyNameBuff a StringBuffer containing the prefix describing\r\n     *            the dot separated route to the specified node including its\r\n     *            one name\r\n     * @param props the dictionary object where the up to date values of\r\n     *            the node should be queried.\r\n     */\r\n    private void updateNode(Node node, StringBuffer propertyNameBuff,\r\n        Map<String, Object> props)\r\n    {\r\n        Node currentNode = null;\r\n        NodeList children = node.getChildNodes();\r\n        for (int i = 0; i < children.getLength(); i++)\r\n        {\r\n            currentNode = children.item(i);\r\n\r\n            if (currentNode.getNodeType() == Node.ELEMENT_NODE)\r\n            {\r\n                StringBuffer newPropBuff =\r\n                    new StringBuffer(propertyNameBuff.toString()).append(\".\")\r\n                        .append(currentNode.getNodeName());\r\n\r\n                Attr attr =\r\n                    ((Element) currentNode).getAttributeNode(ATTRIBUTE_VALUE);\r\n\r\n                if (attr != null)\r\n                {\r\n                    // update the corresponding node\r\n                    Object value = props.get(newPropBuff.toString());\r\n\r\n                    if (value == null)\r\n                    {\r\n                        node.removeChild(currentNode);\r\n                        continue;\r\n                    }\r\n\r\n                    boolean isSystem = value instanceof PropertyReference;\r\n                    String prop =\r\n                        isSystem ? ((PropertyReference) value).getValue()\r\n                            .toString() : value.toString();\r\n\r\n                    attr.setNodeValue(prop);\r\n\r\n                    // in case the property has changed to system since the last\r\n                    // load - update the conf file accordingly.\r\n                    if (isSystem)\r\n                        ((Element) currentNode).setAttribute(\r\n                            SYSTEM_ATTRIBUTE_NAME, SYSTEM_ATTRIBUTE_TRUE);\r\n                    else\r\n                        ((Element) currentNode)\r\n                            .removeAttribute(SYSTEM_ATTRIBUTE_NAME);\r\n\r\n                }\r\n\r\n                // update child nodes\r\n                updateNode(currentNode, newPropBuff, props);\r\n            }\r\n        }\r\n    }","id":27048,"modified_method":"/**\r\n     * Updates the value of the specified node and its children to reflect those\r\n     * in the properties file. Nodes marked as \"system\" will be updated from the\r\n     * specified properties object and not from the system properties since if\r\n     * any intentional change (through a configuration form) has occurred it\r\n     * will have been made there.\r\n     * \r\n     * @param node the root node that we should update together with its\r\n     * children\r\n     * @param propertyName a String containing the prefix describing the\r\n     * dot-separated route to the specified node including its one name\r\n     * @param props the dictionary object where the up to date values of the\r\n     * node should be queried.\r\n     */\r\n    private void updateNode(Node node, String propertyName,\r\n        Map<String, Object> props)\r\n    {\r\n        Node currentNode = null;\r\n        NodeList children = node.getChildNodes();\r\n        for (int i = 0; i < children.getLength(); i++)\r\n        {\r\n            currentNode = children.item(i);\r\n\r\n            if (currentNode.getNodeType() == Node.ELEMENT_NODE)\r\n            {\r\n                String newProp\r\n                    = propertyName\r\n                        + \".\"\r\n                        + DOMElementWriter.decodeName(\r\n                                currentNode.getNodeName());\r\n                Attr attr\r\n                    = ((Element) currentNode).getAttributeNode(ATTRIBUTE_VALUE);\r\n\r\n                if (attr != null)\r\n                {\r\n                    // update the corresponding node\r\n                    Object value = props.get(newProp);\r\n\r\n                    if (value == null)\r\n                    {\r\n                        node.removeChild(currentNode);\r\n                        continue;\r\n                    }\r\n\r\n                    boolean isSystem = (value instanceof PropertyReference);\r\n                    String prop\r\n                        = isSystem\r\n                            ? ((PropertyReference) value).getValue().toString()\r\n                            : value.toString();\r\n\r\n                    attr.setNodeValue(prop);\r\n\r\n                    // in case the property has changed to system since the last\r\n                    // load - update the conf file accordingly.\r\n                    if (isSystem)\r\n                        ((Element) currentNode).setAttribute(\r\n                            SYSTEM_ATTRIBUTE_NAME, SYSTEM_ATTRIBUTE_TRUE);\r\n                    else\r\n                        ((Element) currentNode)\r\n                            .removeAttribute(SYSTEM_ATTRIBUTE_NAME);\r\n\r\n                }\r\n\r\n                // update child nodes\r\n                updateNode(currentNode, newProp, props);\r\n            }\r\n        }\r\n    }","commit_id":"9897f9139a19eebf4b6eff6b08155256f5007ed0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Looks through all child elements of the specified root (recursively)\n     * and returns the first element that corresponds to all parameters.\n     *\n     * @param root the Element where the search should begin\n     * @param tagName the name of the node we're looking for\n     * @param keyAttributeName the name of an attribute that the node has to\n     * have\n     * @param keyAttributeValue the value that attribute must have\n     * @return the Element in the tree under root that matches the specified\n     * paameters.\n     * @throws NullPointerException if any of the arguments is null.\n     */\n    public static Element locateElement(Element root,\n                                        String tagName,\n                                        String keyAttributeName,\n                                        String keyAttributeValue)\n    {\n        NodeList nodes = root.getChildNodes();\n        Node node;\n        int len = nodes.getLength();\n        for(int i = 0; i < len; i++)\n        {\n            node = nodes.item(i);\n            if(node.getNodeType() != Node.ELEMENT_NODE)\n                continue;\n\n            // is this the node we're looking for?\n            if(node.getNodeName().equals(tagName))\n            {\n                String attr = ((Element)node).getAttribute(keyAttributeName);\n\n                if(    attr!= null\n                    && attr.equals(keyAttributeValue))\n                    return (Element) node;\n            }\n\n            //look inside.\n            Element child = locateElement( (Element) node, tagName\n                          , keyAttributeName, keyAttributeValue);\n\n            if (child != null)\n                return child;\n\n        }\n\n        return null;\n    }","id":27049,"modified_method":"/**\n     * Looks through all child elements of the specified root (recursively)\n     * and returns the first element that corresponds to all parameters.\n     *\n     * @param root the Element where the search should begin\n     * @param tagName the name of the node we're looking for\n     * @param keyAttributeName the name of an attribute that the node has to\n     * have\n     * @param keyAttributeValue the value that attribute must have\n     * @return the Element in the tree under root that matches the specified\n     * parameters.\n     * @throws NullPointerException if any of the arguments is null.\n     */\n    public static Element locateElement(Element root,\n                                        String tagName,\n                                        String keyAttributeName,\n                                        String keyAttributeValue)\n    {\n        NodeList nodes = root.getChildNodes();\n        int len = nodes.getLength();\n\n        for(int i = 0; i < len; i++)\n        {\n            Node node = nodes.item(i);\n\n            if(node.getNodeType() != Node.ELEMENT_NODE)\n                continue;\n\n            Element element = (Element) node;\n\n            // is this the node we're looking for?\n            if(node.getNodeName().equals(tagName))\n            {\n                String attr = element.getAttribute(keyAttributeName);\n\n                if((attr != null) && attr.equals(keyAttributeValue))\n                    return element;\n            }\n\n            //look inside.\n            Element child\n                = locateElement(\n                        element,\n                        tagName, keyAttributeName, keyAttributeValue);\n\n            if (child != null)\n                return child;\n        }\n        return null;\n    }","commit_id":"9897f9139a19eebf4b6eff6b08155256f5007ed0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Extract the CDATA content of the specified element.\n     * @param element the element whose data we need\n     * @return a String containing the CDATA value of element.\n     */\n    public static String getCData(Element element)\n    {\n        CDATASection text = getCDataNode(element);\n        if (text != null)\n            return text.getData().trim();\n        else\n            return null;\n    }","id":27050,"modified_method":"/**\n     * Extract the CDATA content of the specified element.\n     * @param element the element whose data we need\n     * @return a String containing the CDATA value of element.\n     */\n    public static String getCData(Element element)\n    {\n        CDATASection text = getCDataNode(element);\n\n        return (text == null) ? null : text.getData().trim();\n    }","commit_id":"9897f9139a19eebf4b6eff6b08155256f5007ed0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Extracts the String content of a TXT element.\n     *\n     * @param parentNode the node containing the data that we'd like to get.\n     * @return the string contained by the node or null if none existed.\n     */\n    public static String getText(Element parentNode)\n    {\n        Text text = getTextNode(parentNode);\n\n        if (text == null)\n        {\n            return null;\n        }\n        else\n        {\n            return text.getData();\n        }\n    }","id":27051,"modified_method":"/**\n     * Extracts the String content of a TXT element.\n     *\n     * @param parentNode the node containing the data that we'd like to get.\n     * @return the string contained by the node or null if none existed.\n     */\n    public static String getText(Element parentNode)\n    {\n        Text text = getTextNode(parentNode);\n\n        return (text == null) ? null : text.getData();\n    }","commit_id":"9897f9139a19eebf4b6eff6b08155256f5007ed0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Process layout action events.\n     * Events are described by the following request params:\n     * uP_help_target\n     * uP_about_target\n     * uP_edit_target\n     * uP_remove_target\n     * uP_detach_target\n     * @param req a <code>HttpServletRequest<\/code> value\n     * @param channelManager a <code>ChannelManager<\/code> value\n     * @exception PortalException if an error occurs\n     */\n    private void processUserLayoutParameters (HttpServletRequest req, ChannelManager channelManager, IUserLayoutManager ulm) throws PortalException {\n        String[] values;\n        if ((values = req.getParameterValues(\"uP_help_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                channelManager.passPortalEvent(values[i], new PortalEvent(PortalEvent.HELP_BUTTON_EVENT));\n            }\n        }\n        if ((values = req.getParameterValues(\"uP_about_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                channelManager.passPortalEvent(values[i], new PortalEvent(PortalEvent.ABOUT_BUTTON_EVENT));\n            }\n        }\n        if ((values = req.getParameterValues(\"uP_edit_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                channelManager.passPortalEvent(values[i], new PortalEvent(PortalEvent.EDIT_BUTTON_EVENT));\n            }\n        }\n        if ((values = req.getParameterValues(\"uP_detach_target\")) != null) {\n            channelManager.passPortalEvent(values[0], new PortalEvent(PortalEvent.DETACH_BUTTON_EVENT));\n        }\n\n        if ((values = req.getParameterValues(\"uP_request_move_targets\")) != null) {\n            ulm.markMoveTargets(values[0]);\n        } else {\n            ulm.markMoveTargets(null);\n          }\n\n        if ((values = req.getParameterValues(\"uP_request_add_targets\")) != null) {\n            int nodeType = values[0].equals(\"folder\")?IUserLayoutNodeDescription.FOLDER:IUserLayoutNodeDescription.CHANNEL;\n            ulm.markAddTargets(ulm.createNodeDescription(nodeType));\n        } else {\n            ulm.markAddTargets(null);\n          }\n\n        if ((values = req.getParameterValues(\"uP_add_target\")) != null) {\n         String[] values1, values2;\n         int nodeType = values[0].equals(\"folder\")?IUserLayoutNodeDescription.FOLDER:IUserLayoutNodeDescription.CHANNEL;\n         if ( (values1 = req.getParameterValues(\"targetNextID\")) != null && (values2 = req.getParameterValues(\"targetParentID\")) != null) {\n            IUserLayoutNodeDescription nodeDesc = ulm.createNodeDescription(nodeType);\n            nodeDesc.setName(\"Unnamed\");\n            nodeDesc = ulm.addNode(nodeDesc,values2[0],values1[0]);\n         }\n        }\n\n        if ((values = req.getParameterValues(\"uP_move_target\")) != null) {\n         String[] values1, values2;\n         if ( (values1 = req.getParameterValues(\"targetNextID\")) != null && (values2 = req.getParameterValues(\"targetParentID\")) != null) {\n            ulm.moveNode(values[0],values2[0],values1[0]);\n         }\n        }\n\n        if ((values = req.getParameterValues(\"uP_rename_target\")) != null) {\n         String[] values1;\n         if ( (values1 = req.getParameterValues(\"uP_target_name\")) != null ) {\n            IUserLayoutNodeDescription nodeDesc = ulm.getNode(values[0]);\n            if ( nodeDesc != null ) {\n             nodeDesc.setName(values1[0]);\n             ulm.updateNode(nodeDesc);\n            }\n         }\n        }\n\n        if ((values = req.getParameterValues(\"uP_remove_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                ulm.deleteNode(values[i]);\n            }\n        }\n    }","id":27052,"modified_method":"/**\n     * Process layout action events.\n     * Events are described by the following request params:\n     * uP_help_target\n     * uP_about_target\n     * uP_edit_target\n     * uP_remove_target\n     * uP_detach_target\n     * @param req a <code>HttpServletRequest<\/code> value\n     * @param channelManager a <code>ChannelManager<\/code> value\n     * @exception PortalException if an error occurs\n     */\n    private void processUserLayoutParameters (HttpServletRequest req, ChannelManager channelManager, IUserLayoutManager ulm) throws PortalException {\n        String[] values;\n        if ((values = req.getParameterValues(\"uP_help_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                channelManager.passPortalEvent(values[i], new PortalEvent(PortalEvent.HELP_BUTTON_EVENT));\n            }\n        }\n        if ((values = req.getParameterValues(\"uP_about_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                channelManager.passPortalEvent(values[i], new PortalEvent(PortalEvent.ABOUT_BUTTON_EVENT));\n            }\n        }\n        if ((values = req.getParameterValues(\"uP_edit_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                channelManager.passPortalEvent(values[i], new PortalEvent(PortalEvent.EDIT_BUTTON_EVENT));\n            }\n        }\n        if ((values = req.getParameterValues(\"uP_detach_target\")) != null) {\n            channelManager.passPortalEvent(values[0], new PortalEvent(PortalEvent.DETACH_BUTTON_EVENT));\n        }\n\n        if ((values = req.getParameterValues(\"uP_request_move_targets\")) != null) {\n            ulm.markMoveTargets(values[0]);\n        } else {\n            ulm.markMoveTargets(null);\n          }\n\n        if ((values = req.getParameterValues(\"uP_request_add_targets\")) != null) {\n            int nodeType = values[0].equals(\"folder\")?IUserLayoutNodeDescription.FOLDER:IUserLayoutNodeDescription.CHANNEL;\n            ulm.markAddTargets(ulm.createNodeDescription(nodeType));\n        } else {\n            ulm.markAddTargets(null);\n          }\n\n        if ((values = req.getParameterValues(\"uP_add_target\")) != null) {\n         String[] values1, values2;\n         int nodeType = values[0].equals(\"folder\")?IUserLayoutNodeDescription.FOLDER:IUserLayoutNodeDescription.CHANNEL;\n         if ( (values1 = req.getParameterValues(\"targetNextID\")) != null && (values2 = req.getParameterValues(\"targetParentID\")) != null) {\n            IUserLayoutNodeDescription nodeDesc = ulm.createNodeDescription(nodeType);\n            nodeDesc.setName(\"Unnamed\");\n            nodeDesc = ulm.addNode(nodeDesc,values2[0],values1[0]);\n         }\n        }\n\n        if ((values = req.getParameterValues(\"uP_move_target\")) != null) {\n         String[] values1, values2;\n         if ( (values1 = req.getParameterValues(\"targetNextID\")) != null && (values2 = req.getParameterValues(\"targetParentID\")) != null) {\n            ulm.moveNode(values[0],values2[0],values1[0]);\n         }\n        }\n\n        if ((values = req.getParameterValues(\"uP_rename_target\")) != null) {\n         String[] values1;\n         if ( (values1 = req.getParameterValues(\"uP_target_name\")) != null ) {\n            IUserLayoutNodeDescription nodeDesc = ulm.getNode(values[0]);\n            if ( nodeDesc != null ) {\n             String oldName = nodeDesc.getName();\n             nodeDesc.setName(values1[0]);\n             if ( !ulm.updateNode(nodeDesc) )\n              nodeDesc.setName(oldName);\n            }\n         }\n        }\n\n        if ((values = req.getParameterValues(\"uP_remove_target\")) != null) {\n            for (int i = 0; i < values.length; i++) {\n                ulm.deleteNode(values[i]);\n            }\n        }\n    }","commit_id":"22dbfeb7ebed620e1f0d0099112eb90b4dfd6d34","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * If no context path was provided, activates the home page.\n\t * \n\t * @return True if the home page was activated\n\t * @throws WicketRuntimeException\n\t */\n\tprivate boolean homePage()\n\t{\n\t\tfinal String path = getWebRequest().getPath();\n\t\tfinal String servletPath = getWebRequest().getServletPath();\n\t\tif (Strings.isEmpty(path) || (\"/\".equals(path) && \"\".equals(servletPath)))\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tPage newPage = newPage(application.getPages().getHomePage());\n\t\t\t\t// Redirect to the home page so that a homepage has the same url as a post or get to that page.\n\t\t\t\tsetRedirect(true);\n\t\t\t\tsetResponsePage(newPage);\n\t\t\t\tsetUpdateCluster(true);\n\t\t\t}\n\t\t\tcatch (WicketRuntimeException e)\n\t\t\t{\n\t\t\t\tthrow new WicketRuntimeException(\"Could not create home page\", e);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}","id":27053,"modified_method":"/**\n\t * If no context path was provided, activates the home page.\n\t * \n\t * @return True if the home page was activated\n\t * @throws WicketRuntimeException\n\t */\n\tprivate boolean homePage()\n\t{\n\t\tfinal String path = getWebRequest().getPath();\n\t\tfinal String servletPath = getWebRequest().getServletPath();\n\t\tif (Strings.isEmpty(path) || (\"/\".equals(path) && \"\".equals(servletPath)))\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tClass homePage = application.getPages().getHomePage();\n\t\t\t\tApplicationPages.HomePageStrategy homePageStrategy = application.getPages().getHomePageStrategy();\n\t\t\t\tif(homePageStrategy == ApplicationPages.BOOKMARK_REDIRECT)\n\t\t\t\t{\n\t\t\t\t\tsetResponsePage(homePage);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tPage newPage = newPage(homePage);\n\t\t\t\t\t\n\t\t\t\t\tif(homePageStrategy == ApplicationPages.PAGE_REDIRECT)\n\t\t\t\t\t{\n\t\t\t\t\t\t//see if we have to redirect the render part by default\n\t\t\t\t\t\t//so that a homepage has the same url as a post or get to that page.\n\t\t\t\t\t\tApplicationSettings.RenderStrategy strategy = getSession().getApplication()\n\t\t\t\t\t\t\t\t.getSettings().getRenderStrategy();\n\t\t\t\t\t\tboolean issueRedirect = (strategy == ApplicationSettings.REDIRECT_TO_RENDER\n\t\t\t\t\t\t\t\t|| strategy == ApplicationSettings.REDIRECT_TO_BUFFER);\t\t\t\t\n\t\t\t\t\t\tsetRedirect(issueRedirect);\n\t\t\t\t\t}\n\t\t\t\t\tsetResponsePage(newPage);\n\t\t\t\t}\n\t\t\t\tsetUpdateCluster(true);\n\t\t\t}\n\t\t\tcatch (WicketRuntimeException e)\n\t\t\t{\n\t\t\t\tthrow new WicketRuntimeException(\"Could not create home page\", e);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}","commit_id":"78dc6fbd30b66c558bc1ced6652f10285c0fd337","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Activates a bookmarkable page if one was specified in the request.\n\t * \n\t * @return True if a bookmarkable page was created and returned for the\n\t *         request.\n\t * @throws WicketRuntimeException\n\t */\n\tprivate boolean bookmarkablePage()\n\t{\n\t\t// Get any component parameter\n\t\tfinal String pageClassName = request.getParameter(\"bookmarkablePage\");\n\t\tif (pageClassName != null)\n\t\t{\n\t\t\tClass pageClass = null;\n\t\t    try\n\t\t    {\n\t\t\t\tpageClass = session.getClassResolver().resolveClass(pageClassName);\n\t\t    }\n\t\t    catch (RuntimeException e)\n\t\t    {\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tgetWebResponse().getHttpServletResponse().sendError(\n\t\t\t\t\t        HttpServletResponse.SC_NOT_FOUND, \n\t\t\t\t\t        \"Unable to load Page class: \" + pageClassName);\n\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tcatch (IOException ex)\n\t\t\t\t{\n\t\t\t\t\t// that seems unlikely... anyway, log exception and forget about it\n\t\t\t\t\tlog.error(\"unable to send 404 for \" + getRequest() + \", cause: \" + ex.getMessage(), ex);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t    }\n\n\t\t    try\n\t\t    {\n\t\t\t\tPage newPage = session.getPageFactory().newPage(pageClass,\n\t\t\t\t\t\tnew PageParameters(getRequest().getParameterMap()));\n\t\t\t\t\n\t\t\t\tsetResponsePage(newPage);\n\t\t\t\tsetUpdateCluster(true);\n\t\t\t\treturn true;\n\t\t    }\n\t\t    catch (RuntimeException e)\n\t\t    {\n\t\t        throw new WicketRuntimeException(\"Unable to instantiate Page class: \" \n\t\t                + pageClassName + \". See below for details.\", e);\n\t\t    }\n\t\t}\n\t\treturn false;\n\t}","id":27054,"modified_method":"/**\n\t * Activates a bookmarkable page if one was specified in the request.\n\t * \n\t * @return True if a bookmarkable page was created and returned for the\n\t *         request.\n\t * @throws WicketRuntimeException\n\t */\n\tprivate boolean bookmarkablePage()\n\t{\n\t\t// Get any component parameter\n\t\tfinal String bookmarkableName = request.getParameter(\"bookmarkablePage\");\n\t\tif (bookmarkableName != null)\n\t\t{\n\t\t\tString pageClassName = application.getPages().getBookmarkablePageClassname(bookmarkableName);\n\t\t\tClass pageClass = null;\n\t\t    try\n\t\t    {\n\t\t\t\tpageClass = session.getClassResolver().resolveClass(pageClassName);\n\t\t    }\n\t\t    catch (RuntimeException e)\n\t\t    {\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tgetWebResponse().getHttpServletResponse().sendError(\n\t\t\t\t\t        HttpServletResponse.SC_NOT_FOUND, \n\t\t\t\t\t        \"Unable to load Page class: \" + bookmarkableName);\n\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tcatch (IOException ex)\n\t\t\t\t{\n\t\t\t\t\t// that seems unlikely... anyway, log exception and forget about it\n\t\t\t\t\tlog.error(\"unable to send 404 for \" + getRequest() + \", cause: \" + ex.getMessage(), ex);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t    }\n\n\t\t    try\n\t\t    {\n\t\t\t\tPage newPage = session.getPageFactory().newPage(pageClass,\n\t\t\t\t\t\tnew PageParameters(getRequest().getParameterMap()));\n\t\t\t\t\n\t\t\t\tsetResponsePage(newPage);\n\t\t\t\tsetUpdateCluster(true);\n\t\t\t\treturn true;\n\t\t    }\n\t\t    catch (RuntimeException e)\n\t\t    {\n\t\t        throw new WicketRuntimeException(\"Unable to instantiate Page class: \" \n\t\t                + bookmarkableName + \". See below for details.\", e);\n\t\t    }\n\t\t}\n\t\treturn false;\n\t}","commit_id":"78dc6fbd30b66c558bc1ced6652f10285c0fd337","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Parses a request. The following four steps are followed:\n\t * <p>\n\t * 1. If the URL requested is in the form of a component listener\n\t * invocation, then that invocation will occur and is expected to generate a\n\t * response.\n\t * <p>\n\t * 2. If the URL is to a bookmarkable page, then an instance of that page is\n\t * created and is expected render a response.\n\t * <p>\n\t * 3. If the URL is for the application's home page, an instance of the home\n\t * page will be created and is expected to render a response.\n\t * <p>\n\t * 4. Finally, an attempt is made to render the requested resource as static\n\t * content, available through the servlet context.\n\t * <p>\n\t * If all four steps are executed and content cannot be found to satisfy the\n\t * request, then false is returned.\n\t * \n\t * @return True if a Page should be rendered back to the user\n\t */\n\tprotected final boolean parseRequest()\n\t{\n\t\t// Try different methods of parsing and dispatching the request\n\n\t\tif (callDispatchedComponentListener())\n\t\t{\n\t\t\t// if it is, we don't need to update the cluster, etc, and return false\n\t\t}\n\t\t// it wasn't a dispatched listener, try other methods\n\t\telse if (callComponentListener() || bookmarkablePage() || homePage())\n\t\t{\n\t\t\t// Returning a page\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// If it's not a resource reference or static content\n\t\t\tif (!resourceReference() && !staticContent())\n\t\t\t{\n\t\t\t\t// not found... send 404 to client indicating that no resource was found\n\t\t\t\t// for the request uri\n\t\t\t\tWebResponse webResponse = (WebResponse)getResponse();\n\t\t\t\tHttpServletResponse httpServletResponse = webResponse.getHttpServletResponse();\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\thttpServletResponse.sendError(HttpServletResponse.SC_NOT_FOUND);\n\t\t\t\t}\n\t\t\t\tcatch (IOException e)\n\t\t\t\t{\n\t\t\t\t\t// that seems unlikely... anyway, log exception and forget about it\n\t\t\t\t\tlog.error(\"unable to send 404 for \" + getRequest() + \", cause: \" + e.getMessage(), e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Don't update the cluster, not returning a page\n\t\tsetUpdateCluster(false);\n\t\tsetResponsePage(null);\n\t\treturn false;\n\t}","id":27055,"modified_method":"/**\n\t * Parses a request. The following four steps are followed:\n\t * <p>\n\t * 1. If the URL requested is in the form of a component listener\n\t * invocation, then that invocation will occur and is expected to generate a\n\t * response.\n\t * <p>\n\t * 2. If the URL is to a bookmarkable page, then an instance of that page is\n\t * created and is expected render a response.\n\t * <p>\n\t * 3. If the URL is for the application's home page, an instance of the home\n\t * page will be created and is expected to render a response.\n\t * <p>\n\t * 4. Finally, an attempt is made to render the requested resource as static\n\t * content, available through the servlet context.\n\t * <p>\n\t * If all four steps are executed and content cannot be found to satisfy the\n\t * request, then false is returned.\n\t * \n\t * @return True if a Page should be rendered back to the user\n\t */\n\tprotected final boolean parseRequest()\n\t{\n\t\t// Try different methods of parsing and dispatching the request\n\n\t\tif (callDispatchedComponentListener())\n\t\t{\n\t\t\t// if it is, we don't need to update the cluster, etc, and return false\n\t\t}\n\t\t// it wasn't a dispatched listener, try other methods\n\t\telse if (callComponentListener() || bookmarkablePage() || homePage())\n\t\t{\n\t\t\t// Returning a page\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// If it's not a resource reference or static content\n\t\t\tif (!resourceReference() && !staticContent())\n\t\t\t{\n\t\t\t\t// not found... send 404 to client indicating that no resource was found\n\t\t\t\t// for the request uri\n\t\t\t\tWebResponse webResponse = (WebResponse)getResponse();\n\t\t\t\tHttpServletResponse httpServletResponse = webResponse.getHttpServletResponse();\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\thttpServletResponse.sendError(HttpServletResponse.SC_NOT_FOUND);\n\t\t\t\t}\n\t\t\t\tcatch (IOException e)\n\t\t\t\t{\n\t\t\t\t\t// that seems unlikely... anyway, log exception and forget about it\n\t\t\t\t\tlog.error(\"unable to send 404 for \" + getRequest() + \", cause: \" + e.getMessage(), e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Don't update the cluster, not returning a page\n\t\tsetUpdateCluster(false);\n\t\tsetResponsePage((Page)null);\n\t\treturn false;\n\t}","commit_id":"78dc6fbd30b66c558bc1ced6652f10285c0fd337","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @see wicket.INewBrowserWindowListener#onNewBrowserWindow()\n\t */\n\tpublic void onNewBrowserWindow()\n\t{\n\t\t// if the browser reports a history of 0 then make a new webpage\n\t\tfinal WebPage clonedPage = (WebPage)Objects.cloneObject(this);\n\t\tfinal PageMap map = getSession().createAutoPageMap();\n\t\tclonedPage.moveToPageMap(map);\n\t\tsetResponsePage(clonedPage);\n\t}","id":27056,"modified_method":"/**\n\t * @see wicket.INewBrowserWindowListener#onNewBrowserWindow()\n\t */\n\tpublic void onNewBrowserWindow()\n\t{\n\t\t// if the browser reports a history of 0 then make a new webpage\n\t\tWebPage clonedPage = this;\n\t\ttry\n\t\t{\n\t\t\tclonedPage = (WebPage)Objects.cloneObject(this);\n\t\t\tfinal PageMap map = getSession().createAutoPageMap();\n\t\t\tclonedPage.moveToPageMap(map);\n\t\t} \n\t\tcatch (Exception e)\n\t\t{\n\t\t\tlog.error(\"Page couldn't be cloned to move to another pagemap: \" + clonedPage.getClass(), e);\n\t\t}\n\t\tsetResponsePage(clonedPage);\n\t}","commit_id":"12c2319bf4183fb0ab7d1fed34f71705a554f93d","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Invokes a given interface on a component on a given page\n\t * \n\t * @param page\n\t *            The page where the component is\n\t * @param path\n\t *            The path to the component\n\t * @param interfaceName\n\t *            The name of the interface to call\n\t */\n\tprivate void invokeInterface(final Page page, final String path, final String interfaceName)\n\t{\n\t\t// Set the page for the component as the response page\n\t\tsetResponsePage(page);\n\n\t\ttry\n\t\t{\n\t\t\t// Invoke interface on the component at the given path on the page\n\t\t\tfinal Component component = page.get(Strings.afterFirstPathComponent(path, '.'));\n\t\t\tif (component != null)\n\t\t\t{\n\t\t\t\t// Invoke interface on component\n\t\t\t\tinvokeInterface(component, interfaceName);\n\t\n\t\t\t\t// Set form component values from cookies\n\t\t\t\tsetFormComponentValuesFromCookies(page);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Must be an internal error of some kind or someone is hacking\n\t\t\t\t// around with URLs in their browser.\n\t\t\t\tlog.error(\"No component found for \" + path);\n\t\t\t\tsetResponsePage(newPage(application.getPages().getInternalErrorPage()));\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\t//TODO strange to do that here huh? Yep, we definitively need a tighter cycle\n\t\t\t// See RFE 1193700 (http://sourceforge.net/tracker/index.php?func=detail&aid=1193700&group_id=119783&atid=684978)\n\t\t\tpage.internalBeginRequest();\n\n\t\t\tif(getRedirect())\n\t\t\t{\n\t\t\t\t// as the rendering will be done by redirecting, we need to end\n\t\t\t\t// this page's request here\n\t\t\t\tpage.internalEndRequest();\n\t\t\t}\n\t\t}\n\t}","id":27057,"modified_method":"/**\n\t * Invokes a given interface on a component on a given page\n\t * \n\t * @param page\n\t *            The page where the component is\n\t * @param path\n\t *            The path to the component\n\t * @param interfaceName\n\t *            The name of the interface to call\n\t */\n\tprivate void invokeInterface(final Page page, final String path, final String interfaceName)\n\t{\n\t\t// Set the page for the component as the response page\n\t\tsetResponsePage(page);\n\t\tsetInvokePage(page);\n\t\t// Invoke interface on the component at the given path on the page\n\t\tfinal Component component = page.get(Strings.afterFirstPathComponent(path, '.'));\n\t\tif (component != null)\n\t\t{\n\t\t\t// Invoke interface on component\n\t\t\tinvokeInterface(component, interfaceName);\n\n\t\t\t// Set form component values from cookies\n\t\t\tsetFormComponentValuesFromCookies(page);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Must be an internal error of some kind or someone is hacking\n\t\t\t// around with URLs in their browser.\n\t\t\tlog.error(\"No component found for \" + path);\n\t\t\tsetResponsePage(newPage(application.getPages().getInternalErrorPage()));\n\t\t}\n\t}","commit_id":"de9a8780edb2baf9988683b9c3ce082a52d09401","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * If no context path was provided, activates the home page.\n\t * \n\t * @return True if the home page was activated\n\t * @throws WicketRuntimeException\n\t */\n\tprivate boolean homePage()\n\t{\n\t\tfinal String path = getWebRequest().getPath();\n\t\tif (Strings.isEmpty(path) || \"/\".equals(path))\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tPage newPage = newPage(application.getPages().getHomePage());\n\t\t\t\tsetResponsePage(newPage);\n\t\t\t\tsetUpdateCluster(true);\n\n\t\t\t\t// we have to initialize the page's request now\n\t\t\t\tnewPage.internalBeginRequest();\n\t\t\t}\n\t\t\tcatch (WicketRuntimeException e)\n\t\t\t{\n\t\t\t\tthrow new WicketRuntimeException(\"Could not create home page\", e);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}","id":27058,"modified_method":"/**\n\t * If no context path was provided, activates the home page.\n\t * \n\t * @return True if the home page was activated\n\t * @throws WicketRuntimeException\n\t */\n\tprivate boolean homePage()\n\t{\n\t\tfinal String path = getWebRequest().getPath();\n\t\tif (Strings.isEmpty(path) || \"/\".equals(path))\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tPage newPage = newPage(application.getPages().getHomePage());\n\t\t\t\tsetResponsePage(newPage);\n\t\t\t\tsetUpdateCluster(true);\n\t\t\t}\n\t\t\tcatch (WicketRuntimeException e)\n\t\t\t{\n\t\t\t\tthrow new WicketRuntimeException(\"Could not create home page\", e);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}","commit_id":"de9a8780edb2baf9988683b9c3ce082a52d09401","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Activates a bookmarkable page if one was specified in the request.\n\t * \n\t * @return True if a bookmarkable page was created and returned for the\n\t *         request.\n\t * @throws WicketRuntimeException\n\t */\n\tprivate boolean bookmarkablePage()\n\t{\n\t\t// Get any component parameter\n\t\tfinal String pageClassName = request.getParameter(\"bookmarkablePage\");\n\t\tif (pageClassName != null)\n\t\t{\n\t\t    try\n\t\t    {\n\t\t\t\tfinal Class pageClass = session.getClassResolver().resolveClass(pageClassName);\n\t\t\t\tPage newPage = session.getPageFactory().newPage(pageClass,\n\t\t\t\t\t\tnew PageParameters(getRequest().getParameterMap()));\n\t\t\t\tsetResponsePage(newPage);\n\t\t\t\tsetUpdateCluster(true);\n\n\t\t\t\t// we have to initialize the page's request now\n\t\t\t\tnewPage.internalBeginRequest();\n\n\t\t\t\treturn true;\n\t\t    }\n\t\t    catch (RuntimeException e)\n\t\t    {\n\t\t        throw new WicketRuntimeException(\"Unable to instantiate Page class: \" \n\t\t                + pageClassName + \". See below for details.\", e);\n\t\t    }\n\t\t}\n\t\treturn false;\n\t}","id":27059,"modified_method":"/**\n\t * Activates a bookmarkable page if one was specified in the request.\n\t * \n\t * @return True if a bookmarkable page was created and returned for the\n\t *         request.\n\t * @throws WicketRuntimeException\n\t */\n\tprivate boolean bookmarkablePage()\n\t{\n\t\t// Get any component parameter\n\t\tfinal String pageClassName = request.getParameter(\"bookmarkablePage\");\n\t\tif (pageClassName != null)\n\t\t{\n\t\t    try\n\t\t    {\n\t\t\t\tfinal Class pageClass = session.getClassResolver().resolveClass(pageClassName);\n\t\t\t\tPage newPage = session.getPageFactory().newPage(pageClass,\n\t\t\t\t\t\tnew PageParameters(getRequest().getParameterMap()));\n\t\t\t\tsetResponsePage(newPage);\n\t\t\t\tsetUpdateCluster(true);\n\t\t\t\treturn true;\n\t\t    }\n\t\t    catch (RuntimeException e)\n\t\t    {\n\t\t        throw new WicketRuntimeException(\"Unable to instantiate Page class: \" \n\t\t                + pageClassName + \". See below for details.\", e);\n\t\t    }\n\t\t}\n\t\treturn false;\n\t}","commit_id":"de9a8780edb2baf9988683b9c3ce082a52d09401","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Redirects browser to the given page\n\t * \n\t * @param page\n\t *            The page to redirect to\n\t */\n\tprotected void redirectTo(final Page page)\n\t{\n\t\t// Redirect to the url for the page\n\t\tresponse.redirect(page.urlFor(page, IRedirectListener.class));\n\t}","id":27060,"modified_method":"/**\n\t * Redirects browser to the given page\n\t * \n\t * @param page\n\t *            The page to redirect to\n\t * @throws ServletException \n\t */\n\tprotected void redirectTo(final Page page) throws ServletException\n\t{\n\t\tString redirectUrl = page.urlFor(page, IRedirectListener.class);\n\t\t// Check if use serverside response for client side redirects\n\t\tif(application.getSettings().getResponseType() == 3)\n\t\t{\n\t\t\t// create the redirect response.\n\t\t\ttry\n\t\t\t{\n\t\t\t\tResponse previous = getResponse();\n\t\t\t\tRedirectResponse rr = new RedirectResponse(redirectUrl);\n\t\t\t\tsetResponse(rr);\n\t\t\t\t// test if the invoker page was the same as the page that is going to be renderd\n\t\t\t\tif(getInvokePage() == getResponsePage())\n\t\t\t\t{\n\t\t\t\t\t// set it to null because it is already ended in the page.doRender()\n\t\t\t\t\tsetInvokePage(null);\n\t\t\t\t}\n\t\t\t\tpage.doRender();\n\t\t\t\tsetResponse(previous);\n\t\t\t\tMap map = (Map)getWebRequest().getHttpServletRequest().getSession(true).getAttribute(\"wicket-redirect\");\n\t\t\t\tif(map == null)\n\t\t\t\t{\n\t\t\t\t\tmap = new HashMap(3);\n\t\t\t\t\tgetWebRequest().getHttpServletRequest().getSession(true).setAttribute(\"wicket-redirect\",map);\t\n\t\t\t\t}\n\t\t\t\tmap.put(redirectUrl,rr);\n\t\t\t}\n\t\t\tcatch (RuntimeException ex)\n\t\t\t{\n\t\t\t\tonRuntimeException(page, ex);\n\t\t\t}\n\t\t}\n\t\t// Redirect to the url for the page\n\t\tresponse.redirect(redirectUrl);\n\t}","commit_id":"de9a8780edb2baf9988683b9c3ce082a52d09401","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Respond with response page\n\t * \n\t * @throws ServletException\n\t */\n\tprivate final void respond() throws ServletException\n\t{\n\t\t// Get any page that is to be used to respond to the request\n\t\tfinal Page page = getResponsePage();\n\t\tif (page != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// Should page be redirected to?\n\t\t\t\tif (getRedirect())\n\t\t\t\t{\n\t\t\t\t\t// Redirect to the page\n\t\t\t\t\tredirectTo(page);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// test if the invoker page was the same as the page that is going to be rendered\n\t\t\t\t\tif(getInvokePage() == getResponsePage())\n\t\t\t\t\t{\n\t\t\t\t\t\t// set it to null because it is already ended inthe page.doRender()\n\t\t\t\t\t\tsetInvokePage(null);\n\t\t\t\t\t}\n\t\t\t\t\t// Let page render itself\n\t\t\t\t\tpage.doRender();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (RuntimeException e)\n\t\t\t{\n\t\t\t\t// Handle any runtime exception\n\t\t\t\tonRuntimeException(page, e);\n\t\t\t}\n\t\t}\n\t}","id":27061,"modified_method":"/**\n\t * Respond with response page\n\t * \n\t * @throws ServletException\n\t */\n\tprivate final void respond() throws ServletException\n\t{\n\t\t// Get any page that is to be used to respond to the request\n\t\tfinal Page page = getResponsePage();\n\t\tif (page != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// Should page be redirected to?\n\t\t\t\tif (getRedirect())\n\t\t\t\t{\n\t\t\t\t\t// Redirect to the page\n\t\t\t\t\tredirectTo(page);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// test if the invoker page was the same as the page that is going to be rendered\n\t\t\t\t\tif(getInvokePage() == getResponsePage())\n\t\t\t\t\t{\n\t\t\t\t\t\t// set it to null because it is already ended inthe page.doRender()\n\t\t\t\t\t\tsetInvokePage(null);\n\t\t\t\t\t}\n\t\t\t\t\t// Let page render itself\n\t\t\t\t\tpage.doRender();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (RuntimeException e)\n\t\t\t{\n\t\t\t\t// Handle any runtime exception\n\t\t\t\tonRuntimeException(page, e);\n\t\t\t}\n\t\t}\n\t\telse if(getResponseStream() != null)\n\t\t{\n\t\t\tIResourceStream stream = getResponseStream();\n\t\t\tgetResponse().setContentType(stream.getContentType());\n\t\t\tgetResponse().setContentLength(stream.length());\n\t\t\tif(stream instanceof IStringResourceStream)\n\t\t\t{\n\t\t\t\tgetResponse().write(((IStringResourceStream)stream).asString());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tStreams.copy(stream.getInputStream(), getResponse().getOutputStream());\n\t\t\t\t}\n\t\t\t\tcatch (Exception ex)\n\t\t\t\t{\n\t\t\t\t\tlog.debug(\"error sending ajax response\", ex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"99c7a3727b489ec0e8130ec1ce430ac100da3f1b","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Sets up to handle a runtime exception thrown during rendering\n\t * \n\t * @param page\n\t *            Any page context where the exception was thrown\n\t * @param e\n\t *            The exception\n\t * @throws ServletException\n\t *             The exception rethrown for the servlet container\n\t */\n\tprotected final void onRuntimeException(final Page page, final RuntimeException e)\n\t\t\tthrows ServletException\n\t{\n\t\tlog.error(\"Unexpected runtime exception [page = \" + page + \"]\", e);\n\n\t\t// Reset page for re-rendering after exception\n\t\tif (page != null)\n\t\t{\n\t\t\tpage.resetMarkupStreams();\n\t\t}\n\n\t\t// If the page we failed to render is an error page\n\t\tif (page != null && page.isErrorPage())\n\t\t{\n\t\t\t// give up while we're ahead!\n\t\t\tthrow new ServletException(\"Internal Error: Could not render error page \" + page, e);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tredirectToExceptionErrorPage(page, e);\n\t\t\t}\n\t\t\tcatch (RuntimeException e2)\n\t\t\t{\n\t\t\t\tthrow new ServletException(\n\t\t\t\t\t\t\"Internal Error: Could not redirect to exception error page.  Was trying to display exception for page \"\n\t\t\t\t\t\t\t\t+ page + \":\\n\" + Strings.toString(e), e2);\n\t\t\t}\n\t\t}\n\t}","id":27062,"modified_method":"/**\n\t * Sets up to handle a runtime exception thrown during rendering\n\t * \n\t * @param page\n\t *            Any page context where the exception was thrown\n\t * @param e\n\t *            The exception\n\t * @throws ServletException\n\t *             The exception rethrown for the servlet container\n\t */\n\tprotected final void onRuntimeException(final Page page, final RuntimeException e)\n\t\t\tthrows ServletException\n\t{\n\t\tlog.error(\"Unexpected runtime exception [page = \" + page + \"]\", e);\n\n\t\te.printStackTrace();\n\t\t// Reset page for re-rendering after exception\n\t\tif (page != null)\n\t\t{\n\t\t\tpage.resetMarkupStreams();\n\t\t}\n\n\t\t// If the page we failed to render is an error page\n\t\tif (page != null && page.isErrorPage())\n\t\t{\n\t\t\t// give up while we're ahead!\n\t\t\tthrow new ServletException(\"Internal Error: Could not render error page \" + page, e);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tredirectToExceptionErrorPage(page, e);\n\t\t\t}\n\t\t\tcatch (RuntimeException e2)\n\t\t\t{\n\t\t\t\tthrow new ServletException(\n\t\t\t\t\t\t\"Internal Error: Could not redirect to exception error page.  Was trying to display exception for page \"\n\t\t\t\t\t\t\t\t+ page + \":\\n\" + Strings.toString(e), e2);\n\t\t\t}\n\t\t}\n\t}","commit_id":"99c7a3727b489ec0e8130ec1ce430ac100da3f1b","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Looks up an interface method by name.\n\t * \n\t * @param interfaceName\n\t *            The interface name\n\t * @return The method\n\t * @throws WicketRuntimeException\n\t */\n\tprotected final Method getInterfaceMethod(final String interfaceName)\n\t{\n\t\tfinal Method method = (Method)listenerInterfaceMethods.get(interfaceName);\n\t\tif (method == null)\n\t\t{\n\t\t\tthrow new WicketRuntimeException(\"Attempt to access unknown interface \" + interfaceName);\n\t\t}\n\t\treturn method;\n\t}","id":27063,"modified_method":"/**\n\t * Looks up an request interface method by name.\n\t * \n\t * @param interfaceName\n\t *            The interface name\n\t * @return The method, null of nothing is found\n\t */\n\tprotected final Method getAjaxInterfaceMethod(final String interfaceName)\n\t{\n\t\treturn (Method)listenerAjaxInterfaceMethods.get(interfaceName);\n\t}","commit_id":"99c7a3727b489ec0e8130ec1ce430ac100da3f1b","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * THIS METHOD IS NOT PART OF THE WICKET PUBLIC API. DO NOT CALL IT.\n\t * <p>\n\t * Adds an interface to the map of interfaces that can be invoked by\n\t * outsiders. The interface must have a single method with the signature\n\t * methodName(RequestCycle).\n\t * \n\t * @param i\n\t *            The interface class, which must extend IRequestListener.\n\t */\n\tpublic static void registerRequestListenerInterface(final Class i)\n\t{\n\t\t// Ensure that i extends IRequestListener\n\t\tif (!IRequestListener.class.isAssignableFrom(i))\n\t\t{\n\t\t\tthrow new IllegalArgumentException(\"Class \" + i + \" must extend IRequestListener\");\n\t\t}\n\n\t\t// Get interface methods\n\t\tfinal Method[] methods = i.getMethods();\n\n\t\t// If there is only one method\n\t\tif (methods.length == 1)\n\t\t{\n\t\t\t// and that method takes no parameters\n\t\t\tif (methods[0].getParameterTypes().length == 0)\n\t\t\t{\n\t\t\t\t// Save this interface method by the non-qualified class name\n\t\t\t\tlistenerInterfaceMethods.put(Classes.name(i), methods[0]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthrow new IllegalArgumentException(\"Method in interface \" + i\n\t\t\t\t\t\t+ \" cannot have parameters\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new IllegalArgumentException(\"Interface \" + i + \" can have only one method\");\n\t\t}\n\t}","id":27064,"modified_method":"/**\n\t * THIS METHOD IS NOT PART OF THE WICKET PUBLIC API. DO NOT CALL IT.\n\t * <p>\n\t * Adds an interface to the map of interfaces that can be invoked by\n\t * outsiders. The interface must extend IRequestListener\n\t * \n\t * @param i\n\t *            The interface class, which must extend IRequestListener.\n\t */\n\tpublic static void registerRequestListenerInterface(final Class i)\n\t{\n\t\t// Ensure that i extends IRequestListener\n\t\tif (!IRequestListener.class.isAssignableFrom(i))\n\t\t{\n\t\t\tthrow new IllegalArgumentException(\"Class \" + i + \" must extend IRequestListener\");\n\t\t}\n\n\t\t// Get interface methods\n\t\tfinal Method[] methods = i.getMethods();\n\n\t\t// If there is only one method\n\t\tif (methods.length == 1)\n\t\t{\n\t\t\t// and that method takes no parameters\n\t\t\tif (methods[0].getParameterTypes().length == 0)\n\t\t\t{\n\t\t\t\t// Save this interface method by the non-qualified class name\n\t\t\t\tlistenerRequestInterfaceMethods.put(Classes.name(i), methods[0]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthrow new IllegalArgumentException(\"Method in interface \" + i\n\t\t\t\t\t\t+ \" cannot have parameters\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new IllegalArgumentException(\"Interface \" + i + \" can have only one method\");\n\t\t}\n\t}","commit_id":"99c7a3727b489ec0e8130ec1ce430ac100da3f1b","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Invokes a given interface on a component on a given page\n\t * \n\t * @param page\n\t *            The page where the component is\n\t * @param path\n\t *            The path to the component\n\t * @param interfaceName\n\t *            The name of the interface to call\n\t */\n\tprivate void invokeInterface(final Page page, final String path, final String interfaceName)\n\t{\n\t\t// Set the page for the component as the response page\n\t\tsetResponsePage(page);\n\t\tsetInvokePage(page);\n\t\t// Invoke interface on the component at the given path on the page\n\t\tfinal Component component = page.get(Strings.afterFirstPathComponent(path, '.'));\n\t\tif (component != null)\n\t\t{\n\t\t\tif(!interfaceName.equals(\"IRedirectListener\"))\n\t\t\t{\n\t\t\t\t// Clear all feedback messages if it isn't a redirect\n\t\t\t\tpage.getFeedbackMessages().clear();\n\n\t\t\t\t// and see if we have to redirect the render part by default\n\t\t\t\tApplicationSettings.RenderStrategy strategy = getSession().getApplication()\n\t\t\t\t\t\t.getSettings().getRenderStrategy();\n\t\t\t\tboolean issueRedirect = (strategy == ApplicationSettings.REDIRECT_TO_RENDER\n\t\t\t\t\t\t|| strategy == ApplicationSettings.REDIRECT_TO_BUFFER);\n\n\t\t\t\tsetRedirect(issueRedirect);\n\t\t\t}\n\n\t\t\t// Invoke interface on component\n\t\t\tinvokeInterface(component, interfaceName);\n\n\t\t\t// Set form component values from cookies\n\t\t\tsetFormComponentValuesFromCookies(page);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Must be an internal error of some kind or someone is hacking\n\t\t\t// around with URLs in their browser.\n\t\t\tlog.error(\"No component found for \" + path);\n\t\t\tsetResponsePage(newPage(application.getPages().getInternalErrorPage()));\n\t\t}\n\t}","id":27065,"modified_method":"/**\n\t * Invokes a given interface on a component on a given page\n\t * \n\t * @param page\n\t *            The page where the component is\n\t * @param path\n\t *            The path to the component\n\t * @param interfaceName\n\t *            The name of the interface to call\n\t */\n\tprivate void invokeInterface(final Page page, final String path, final String interfaceName)\n\t{\n\t\tsetInvokePage(page);\n\t\t// Invoke interface on the component at the given path on the page\n\t\tfinal Component component = page.get(Strings.afterFirstPathComponent(path, '.'));\n\t\tif (component != null)\n\t\t{\n\t\t\tMethod method = getRequestInterfaceMethod(interfaceName);\n\t\t\tif(method != null)\n\t\t\t{\n\t\t\t\t// Set the page for the component as the response page\n\t\t\t\tsetResponsePage(page);\n\t\t\t\tif(!interfaceName.equals(\"IRedirectListener\"))\n\t\t\t\t{\n\t\t\t\t\t// Clear all feedback messages if it isn't a redirect\n\t\t\t\t\tpage.getFeedbackMessages().clear();\n\t\n\t\t\t\t\t// and see if we have to redirect the render part by default\n\t\t\t\t\tApplicationSettings.RenderStrategy strategy = getSession().getApplication()\n\t\t\t\t\t\t\t.getSettings().getRenderStrategy();\n\t\t\t\t\tboolean issueRedirect = (strategy == ApplicationSettings.REDIRECT_TO_RENDER\n\t\t\t\t\t\t\t|| strategy == ApplicationSettings.REDIRECT_TO_BUFFER);\n\t\n\t\t\t\t\tsetRedirect(issueRedirect);\n\t\t\t\t}\n\t\n\t\t\t\t// Invoke interface on component\n\t\t\t\tinvokeInterface(component, method);\n\t\n\t\t\t\t// Set form component values from cookies\n\t\t\t\tsetFormComponentValuesFromCookies(page);\n\t\t\t}\n\t\t\telse if( (method = getAjaxInterfaceMethod(interfaceName)) != null)\n\t\t\t{\n\t\t\t\t// Clear all feedback messages if it isn't a redirect\n\t\t\t\tpage.getFeedbackMessages().clear();\n\t\t\t\tIResourceStream stream = (IResourceStream)invokeInterface(component, method);\n\t\t\t\tsetResponseStream(stream);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthrow new WicketRuntimeException(\"Attempt to access unknown interface \" + interfaceName);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Must be an internal error of some kind or someone is hacking\n\t\t\t// around with URLs in their browser.\n\t\t\tlog.error(\"No component found for \" + path);\n\t\t\tsetResponsePage(newPage(application.getPages().getInternalErrorPage()));\n\t\t}\n\t}","commit_id":"99c7a3727b489ec0e8130ec1ce430ac100da3f1b","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Invokes a given interface on a component.\n\t * \n\t * @param component\n\t *            The component\n\t * @param interfaceName\n\t *            The name of the interface to call\n\t */\n\tprivate void invokeInterface(final Component component, final String interfaceName)\n\t{\n\t\t// Look up interface to call\n\t\tfinal Method method = getInterfaceMethod(interfaceName);\n\n\t\ttry\n\t\t{\n\t\t\t// Invoke the interface method on the component\n\t\t\tmethod.invoke(component, new Object[] { });\n\t\t}\n\t\tcatch (IllegalAccessException e)\n\t\t{\n\t\t\tthrow new WicketRuntimeException(\"Cannot access method \" + method + \" of interface \"\n\t\t\t\t\t+ interfaceName, e);\n\t\t}\n\t\tcatch (InvocationTargetException e)\n\t\t{\n\t\t\tthrow new WicketRuntimeException(\"Method \" + method + \" of interface \" + interfaceName\n\t\t\t\t\t+ \" threw an exception\", e);\n\t\t}\n\t}","id":27066,"modified_method":"/**\n\t * Invokes a given interface on a component.\n\t * \n\t * @param component\n\t *            The component\n\t * @param method\n\t *            The name of the method to call\n\t */\n\tprivate Object invokeInterface(final Component component, final Method method)\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Invoke the interface method on the component\n\t\t\treturn method.invoke(component, new Object[] { });\n\t\t}\n\t\tcatch (IllegalAccessException e)\n\t\t{\n\t\t\tthrow new WicketRuntimeException(\"Cannot access method \" + method + \" of interface \"\n\t\t\t\t\t+ method.getClass().getName(), e);\n\t\t}\n\t\tcatch (InvocationTargetException e)\n\t\t{\n\t\t\tthrow new WicketRuntimeException(\"Method \" + method + \" of interface \" + method.getClass().getName()\n\t\t\t\t\t+ \" threw an exception\", e);\n\t\t}\n\t}","commit_id":"99c7a3727b489ec0e8130ec1ce430ac100da3f1b","url":"https://github.com/apache/wicket"},{"original_method":"/**\n   * Main method: tries to launch a browser using every possible way.\n   *\n   * @param url an URL to open.\n   */\n  public static void launchBrowser(@NotNull @NonNls String url) {\n    LOG.debug(\"Launch browser: [\" + url + \"]\");\n\n    if (TRIM_URLS) {\n      url = url.trim();\n    }\n\n    if (url.startsWith(\"jar:\")) {\n      url = extractFiles(url);\n      if (url == null) return;\n    }\n\n    if (getGeneralSettingsInstance().isUseDefaultBrowser() && canStartDefaultBrowser()) {\n      final List<String> command = getDefaultBrowserCommand();\n      if (command != null) {\n        launchBrowserByCommand(url, command);\n      }\n      else {\n        launchBrowserUsingDesktopApi(url);\n      }\n    }\n    else {\n      launchBrowserUsingStandardWay(url);\n    }\n  }","id":27067,"modified_method":"/**\n   * Main method: tries to launch a browser using every possible way.\n   *\n   * @param url an URL to open.\n   */\n  public static void launchBrowser(@NotNull @NonNls String url) {\n    LOG.debug(\"Launch browser: [\" + url + \"]\");\n\n    if (TRIM_URLS) {\n      url = url.trim();\n    }\n\n    if (url.startsWith(\"jar:\")) {\n      String files = extractFiles(url);\n      if (files == null) return;\n      url = files;\n    }\n\n    if (getGeneralSettingsInstance().isUseDefaultBrowser() && canStartDefaultBrowser()) {\n      final List<String> command = getDefaultBrowserCommand();\n      if (command != null) {\n        launchBrowserByCommand(url, command);\n      }\n      else {\n        launchBrowserUsingDesktopApi(url);\n      }\n    }\n    else {\n      launchBrowserUsingStandardWay(url);\n    }\n  }","commit_id":"2e4aca33b3f14fd7b0cbe91554ce212ff75da13b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static List<String> getOpenBrowserCommand(final @NonNls @NotNull String browserPath) {\n    if (SystemInfo.isMac && !new File(browserPath).isFile()) {\n      ArrayList<String> command = new ArrayList<String>();\n      command.add(ExecUtil.getOpenCommandPath());\n      command.add(\"-a\");\n      command.add(browserPath);\n      return command;\n    }\n    else if (SystemInfo.isWindows && !new File(browserPath).isFile()) {\n      return getOpenBrowserWinCommand(browserPath);\n    }\n    else {\n      return new SmartList<String>(browserPath);\n    }\n  }","id":27068,"modified_method":"@NotNull\n  public static List<String> getOpenBrowserCommand(@NonNls @NotNull String browserPath) {\n    if (new File(browserPath).isFile()) {\n      return newSmartList(browserPath);\n    }\n    else if (SystemInfo.isMac) {\n      return newSmartList(ExecUtil.getOpenCommandPath(), \"-a\", browserPath);\n    }\n    else if (SystemInfo.isWindows) {\n      return newSmartList(ExecUtil.getWindowsShellName(), \"/c\", \"start\", \"\\\"\\\"\", browserPath);\n    }\n    else {\n      return newSmartList(browserPath);\n    }\n  }","commit_id":"2e4aca33b3f14fd7b0cbe91554ce212ff75da13b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @NonNls\n  private static List<String> getDefaultBrowserCommand() {\n    if (SystemInfo.isWindows) {\n      return getOpenBrowserWinCommand(null);\n    }\n    else if (SystemInfo.isMac) {\n      return new SmartList<String>(ExecUtil.getOpenCommandPath());\n    }\n    else if (SystemInfo.isUnix && SystemInfo.hasXdgOpen()) {\n      return new SmartList<String>(\"xdg-open\");\n    }\n\n    return null;\n  }","id":27069,"modified_method":"@Nullable\n  @NonNls\n  private static List<String> getDefaultBrowserCommand() {\n    if (SystemInfo.isWindows) {\n      return newSmartList(ExecUtil.getWindowsShellName(), \"/c\", \"start\", \"\\\"\\\"\");\n    }\n    else if (SystemInfo.isMac) {\n      return newSmartList(ExecUtil.getOpenCommandPath());\n    }\n    else if (SystemInfo.isUnix && SystemInfo.hasXdgOpen()) {\n      return newSmartList(\"xdg-open\");\n    }\n\n    return null;\n  }","commit_id":"2e4aca33b3f14fd7b0cbe91554ce212ff75da13b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   *\n   * @param scriptPath is already escaped filepath\n   */\n  public static ProcessOutput sudoAndGetOutput(@NotNull final String scriptPath,\n                                               @NotNull final String prompt,\n                                               @Nullable String workDir) throws IOException, ExecutionException {\n    if (SystemInfo.isMac) {\n      final String script = \"do shell script \\\"\" + scriptPath + \"\\\" with administrator privileges\";\n      return execAndGetOutput(Arrays.asList(getOsascriptPath(), \"-e\", script), workDir);\n    }\n    else if (\"root\".equals(System.getenv(\"USER\"))) {\n      return execAndGetOutput(Collections.singletonList(scriptPath), workDir);\n    }\n    else if (hasKdeSudo.getValue()) {\n      return execAndGetOutput(Arrays.asList(\"kdesudo\", \"--comment\", prompt, scriptPath), workDir);\n    }\n    else if (hasGkSudo.getValue()) {\n      return execAndGetOutput(Arrays.asList(\"gksudo\", \"--message\", prompt, scriptPath), workDir);\n    }\n    else if (SystemInfo.isUnix && hasTerminalApp()) {\n      final File sudo = createTempExecutableScript(\"sudo\", \".sh\",\n                                                   \"#!/bin/sh\\n\" +\n                                                   \"echo \\\"\" + prompt + \"\\\"\\n\" +\n                                                   \"echo\\n\" +\n                                                   \"sudo \" + scriptPath + \"\\n\" +\n                                                   \"STATUS=$?\\n\" +\n                                                   \"echo\\n\" +\n                                                   \"read -p \\\"Press Enter to close this window...\\\" TEMP\\n\" +\n                                                   \"exit $STATUS\\n\");\n      return execAndGetOutput(getTerminalCommand(\"Install\", sudo.getAbsolutePath()), workDir);\n    }\n\n    throw new UnsupportedSystemException();\n  }","id":27070,"modified_method":"/**\n   * @param scriptPath is already escaped file path\n   */\n  @NotNull\n  public static ProcessOutput sudoAndGetOutput(@NotNull final String scriptPath,\n                                               @NotNull final String prompt,\n                                               @Nullable String workDir) throws IOException, ExecutionException {\n    if (SystemInfo.isMac) {\n      final String script = \"do shell script \\\"\" + scriptPath + \"\\\" with administrator privileges\";\n      return execAndGetOutput(Arrays.asList(getOsascriptPath(), \"-e\", script), workDir);\n    }\n    else if (\"root\".equals(System.getenv(\"USER\"))) {\n      return execAndGetOutput(Collections.singletonList(scriptPath), workDir);\n    }\n    else if (hasKdeSudo.getValue()) {\n      return execAndGetOutput(Arrays.asList(\"kdesudo\", \"--comment\", prompt, scriptPath), workDir);\n    }\n    else if (hasGkSudo.getValue()) {\n      return execAndGetOutput(Arrays.asList(\"gksudo\", \"--message\", prompt, scriptPath), workDir);\n    }\n    else if (SystemInfo.isUnix && hasTerminalApp()) {\n      final File sudo = createTempExecutableScript(\"sudo\", \".sh\",\n                                                   \"#!/bin/sh\\n\" +\n                                                   \"echo \\\"\" + prompt + \"\\\"\\n\" +\n                                                   \"echo\\n\" +\n                                                   \"sudo \" + scriptPath + \"\\n\" +\n                                                   \"STATUS=$?\\n\" +\n                                                   \"echo\\n\" +\n                                                   \"read -p \\\"Press Enter to close this window...\\\" TEMP\\n\" +\n                                                   \"exit $STATUS\\n\");\n      return execAndGetOutput(getTerminalCommand(\"Install\", sudo.getAbsolutePath()), workDir);\n    }\n\n    throw new UnsupportedSystemException();\n  }","commit_id":"2e4aca33b3f14fd7b0cbe91554ce212ff75da13b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Main method: tries to launch a browser using every possible way.\n   *\n   * @param url an URL to open.\n   */\n  public static void launchBrowser(@NonNls String url) {\n    LOG.debug(\"Launch browser: [\" + url + \"]\");\n\n    if (TRIM_URLS) {\n      url = url.trim();\n    }\n\n    if (url.startsWith(\"jar:\")) {\n      url = extractFiles(url);\n      if (url == null) return;\n    }\n\n    if (getGeneralSettingsInstance().isUseDefaultBrowser() && canStartDefaultBrowser()) {\n      final String[] command = getDefaultBrowserCommand();\n      if (command != null) {\n        launchBrowserByCommand(url, command);\n      }\n      else {\n        launchBrowserUsingDesktopApi(url);\n      }\n    }\n    else {\n      launchBrowserUsingStandardWay(url);\n    }\n  }","id":27071,"modified_method":"/**\n   * Main method: tries to launch a browser using every possible way.\n   *\n   * @param url an URL to open.\n   */\n  public static void launchBrowser(@NonNls String url) {\n    LOG.debug(\"Launch browser: [\" + url + \"]\");\n\n    if (TRIM_URLS) {\n      url = url.trim();\n    }\n\n    if (url.startsWith(\"jar:\")) {\n      url = extractFiles(url);\n      if (url == null) return;\n    }\n\n    if (getGeneralSettingsInstance().isUseDefaultBrowser() && canStartDefaultBrowser()) {\n      final List<String> command = getDefaultBrowserCommand();\n      if (command != null) {\n        launchBrowserByCommand(url, command);\n      }\n      else {\n        launchBrowserUsingDesktopApi(url);\n      }\n    }\n    else {\n      launchBrowserUsingStandardWay(url);\n    }\n  }","commit_id":"3d39927b53d973fc30c2e77ae46a85c06511bc0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static String extractFiles(String url) {\n    try {\n      int sharpPos = url.indexOf('#');\n      String anchor = \"\";\n      if (sharpPos != -1) {\n        anchor = url.substring(sharpPos);\n        url = url.substring(0, sharpPos);\n      }\n\n      VirtualFile file = VirtualFileManager.getInstance().findFileByUrl(url);\n      if (file == null || !(file.getFileSystem() instanceof JarFileSystem)) return null;\n\n      JarFileSystem jarFileSystem = (JarFileSystem)file.getFileSystem();\n      VirtualFile jarVirtualFile = jarFileSystem.getVirtualFileForJar(file);\n      if (jarVirtualFile == null) return null;\n\n      String targetFilePath = file.getPath();\n      String targetFileRelativePath = StringUtil.substringAfter(targetFilePath, JarFileSystem.JAR_SEPARATOR);\n\n      String jarVirtualFileLocationHash = jarVirtualFile.getName() + Integer.toHexString(jarVirtualFile.getUrl().hashCode());\n      final File outputDir = new File(getExtractedFilesDir(), jarVirtualFileLocationHash);\n\n      final String currentTimestamp = String.valueOf(new File(jarVirtualFile.getPath()).lastModified());\n      final File timestampFile = new File(outputDir, \".idea.timestamp\");\n\n      String previousTimestamp = null;\n      if (timestampFile.exists()) {\n        previousTimestamp = FileUtil.loadFile(timestampFile);\n      }\n\n      if (!currentTimestamp.equals(previousTimestamp)) {\n        final Ref<Boolean> extract = new Ref<Boolean>();\n        Runnable r = new Runnable() {\n          public void run() {\n            final ConfirmExtractDialog dialog = new ConfirmExtractDialog();\n            if (dialog.isToBeShown()) {\n              dialog.show();\n              extract.set(dialog.isOK());\n            }\n            else {\n              dialog.close(DialogWrapper.OK_EXIT_CODE);\n              extract.set(true);\n            }\n          }\n        };\n\n        try {\n          GuiUtils.runOrInvokeAndWait(r);\n        }\n        catch (InvocationTargetException e) {\n          extract.set(false);\n        }\n        catch (InterruptedException e) {\n          extract.set(false);\n        }\n\n        if (!extract.get()) return null;\n\n        final ZipFile zipFile = jarFileSystem.getJarFile(file).getZipFile();\n        if (zipFile == null) return null;\n        ZipEntry entry = zipFile.getEntry(targetFileRelativePath);\n        if (entry == null) return null;\n        InputStream is = zipFile.getInputStream(entry);\n        try {\n          ZipUtil.extractEntry(entry, is, outputDir);\n        }\n        finally {\n          is.close();\n        }\n\n        ApplicationManager.getApplication().invokeLater(new Runnable() {\n          public void run() {\n            new Task.Backgroundable(null, \"Extracting files...\", true) {\n              public void run(@NotNull final ProgressIndicator indicator) {\n                final int size = zipFile.size();\n                final int[] counter = new int[]{0};\n\n                class MyFilter implements FilenameFilter {\n                  private final Set<File> myImportantDirs = new HashSet<File>(\n                    Arrays.asList(outputDir, new File(outputDir, \"resources\")));\n                  private final boolean myImportantOnly;\n\n                  private MyFilter(boolean importantOnly) {\n                    myImportantOnly = importantOnly;\n                  }\n\n                  public boolean accept(File dir, String name) {\n                    indicator.checkCanceled();\n                    boolean result = myImportantOnly == myImportantDirs.contains(dir);\n                    if (result) {\n                      indicator.setFraction(((double)counter[0]) / size);\n                      counter[0]++;\n                    }\n                    return result;\n                  }\n                }\n\n                try {\n                  ZipUtil.extract(zipFile, outputDir, new MyFilter(true));\n                  ZipUtil.extract(zipFile, outputDir, new MyFilter(false));\n                  FileUtil.writeToFile(timestampFile, currentTimestamp.getBytes());\n                }\n                catch (IOException ignore) {\n                }\n              }\n            }.queue();\n          }\n        });\n      }\n\n      return VfsUtil.pathToUrl(FileUtil.toSystemIndependentName(new File(outputDir, targetFileRelativePath).getPath())) + anchor;\n    }\n    catch (IOException e) {\n      LOG.warn(e);\n      Messages.showErrorDialog(\"Cannot extract files: \" + e.getMessage(), \"Error\");\n      return null;\n    }\n  }","id":27072,"modified_method":"@Nullable\n  private static String extractFiles(String url) {\n    try {\n      int sharpPos = url.indexOf('#');\n      String anchor = \"\";\n      if (sharpPos != -1) {\n        anchor = url.substring(sharpPos);\n        url = url.substring(0, sharpPos);\n      }\n\n      VirtualFile file = VirtualFileManager.getInstance().findFileByUrl(url);\n      if (file == null || !(file.getFileSystem() instanceof JarFileSystem)) return null;\n\n      JarFileSystem jarFileSystem = (JarFileSystem)file.getFileSystem();\n      VirtualFile jarVirtualFile = jarFileSystem.getVirtualFileForJar(file);\n      if (jarVirtualFile == null) return null;\n\n      String targetFilePath = file.getPath();\n      String targetFileRelativePath = StringUtil.substringAfter(targetFilePath, JarFileSystem.JAR_SEPARATOR);\n\n      String jarVirtualFileLocationHash = jarVirtualFile.getName() + Integer.toHexString(jarVirtualFile.getUrl().hashCode());\n      final File outputDir = new File(getExtractedFilesDir(), jarVirtualFileLocationHash);\n\n      final String currentTimestamp = String.valueOf(new File(jarVirtualFile.getPath()).lastModified());\n      final File timestampFile = new File(outputDir, \".idea.timestamp\");\n\n      String previousTimestamp = null;\n      if (timestampFile.exists()) {\n        previousTimestamp = FileUtil.loadFile(timestampFile);\n      }\n\n      if (!currentTimestamp.equals(previousTimestamp)) {\n        final Ref<Boolean> extract = new Ref<Boolean>();\n        Runnable r = new Runnable() {\n          public void run() {\n            final ConfirmExtractDialog dialog = new ConfirmExtractDialog();\n            if (dialog.isToBeShown()) {\n              dialog.show();\n              extract.set(dialog.isOK());\n            }\n            else {\n              dialog.close(DialogWrapper.OK_EXIT_CODE);\n              extract.set(true);\n            }\n          }\n        };\n\n        try {\n          GuiUtils.runOrInvokeAndWait(r);\n        }\n        catch (InvocationTargetException e) {\n          extract.set(false);\n        }\n        catch (InterruptedException e) {\n          extract.set(false);\n        }\n\n        if (!extract.get()) return null;\n\n        final ZipFile zipFile = jarFileSystem.getJarFile(file).getZipFile();\n        if (zipFile == null) return null;\n        ZipEntry entry = zipFile.getEntry(targetFileRelativePath);\n        if (entry == null) return null;\n        InputStream is = zipFile.getInputStream(entry);\n        try {\n          ZipUtil.extractEntry(entry, is, outputDir);\n        }\n        finally {\n          is.close();\n        }\n\n        ApplicationManager.getApplication().invokeLater(new Runnable() {\n          public void run() {\n            new Task.Backgroundable(null, \"Extracting files...\", true) {\n              public void run(@NotNull final ProgressIndicator indicator) {\n                final int size = zipFile.size();\n                final int[] counter = new int[]{0};\n\n                class MyFilter implements FilenameFilter {\n                  private final Set<File> myImportantDirs = new HashSet<File>(\n                    Arrays.asList(outputDir, new File(outputDir, \"resources\")));\n                  private final boolean myImportantOnly;\n\n                  private MyFilter(boolean importantOnly) {\n                    myImportantOnly = importantOnly;\n                  }\n\n                  public boolean accept(File dir, String name) {\n                    indicator.checkCanceled();\n                    boolean result = myImportantOnly == myImportantDirs.contains(dir);\n                    if (result) {\n                      indicator.setFraction(((double)counter[0]) / size);\n                      counter[0]++;\n                    }\n                    return result;\n                  }\n                }\n\n                try {\n                  ZipUtil.extract(zipFile, outputDir, new MyFilter(true));\n                  ZipUtil.extract(zipFile, outputDir, new MyFilter(false));\n                  FileUtil.writeToFile(timestampFile, currentTimestamp.getBytes());\n                }\n                catch (IOException ignore) {\n                }\n              }\n            }.queue();\n          }\n        });\n      }\n\n      return VfsUtilCore.pathToUrl(FileUtil.toSystemIndependentName(new File(outputDir, targetFileRelativePath).getPath())) + anchor;\n    }\n    catch (IOException e) {\n      LOG.warn(e);\n      Messages.showErrorDialog(\"Cannot extract files: \" + e.getMessage(), \"Error\");\n      return null;\n    }\n  }","commit_id":"3d39927b53d973fc30c2e77ae46a85c06511bc0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @NonNls\n  private static String[] getDefaultBrowserCommand() {\n    if (SystemInfo.isWindows) {\n      return new String[]{(SystemInfo.isWindows9x ? \"command.com\" : \"cmd.exe\"), \"/c\", \"start\", \"\\\"\\\"\"};\n    }\n    else if (SystemInfo.isMac) {\n      return new String[]{ExecUtil.getOpenCommandPath()};\n    }\n    else if (SystemInfo.isUnix && SystemInfo.hasXdgOpen()) {\n      return new String[]{\"xdg-open\"};\n    }\n\n    return null;\n  }","id":27073,"modified_method":"@Nullable\n  @NonNls\n  private static List<String> getDefaultBrowserCommand() {\n    if (SystemInfo.isWindows) {\n      return Arrays.asList((SystemInfo.isWindows9x ? \"command.com\" : \"cmd.exe\"), \"/c\", \"start\", \"\\\"\\\"\");\n    }\n    else if (SystemInfo.isMac) {\n      return new SmartList<String>(ExecUtil.getOpenCommandPath());\n    }\n    else if (SystemInfo.isUnix && SystemInfo.hasXdgOpen()) {\n      return new SmartList<String>(\"xdg-open\");\n    }\n\n    return null;\n  }","commit_id":"3d39927b53d973fc30c2e77ae46a85c06511bc0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void launchBrowserByCommand(final String url, @NotNull final String[] command) {\n    URL curl;\n    try {\n      curl = getURL(url);\n    }\n    catch (MalformedURLException ignored) {\n      curl = null;\n    }\n    if (curl == null) {\n      showErrorMessage(IdeBundle.message(\"error.malformed.url\", url), CommonBundle.getErrorTitle());\n      return;\n    }\n\n    try {\n      final GeneralCommandLine commandLine = new GeneralCommandLine(command);\n      commandLine.addParameter(escapeUrl(curl.toString()));\n      if (SystemInfo.isWindows) {\n        commandLine.putUserData(GeneralCommandLine.DO_NOT_ESCAPE_QUOTES, true);\n      }\n      commandLine.createProcess();\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Browser launched with command line: \" + commandLine);\n      }\n    }\n    catch (ExecutionException e) {\n      showErrorMessage(IdeBundle.message(\"error.cannot.start.browser\", e.getMessage()), CommonBundle.getErrorTitle());\n    }\n  }","id":27074,"modified_method":"private static void launchBrowserByCommand(final String url, @NotNull final List<String> command) {\n    URL curl;\n    try {\n      curl = getURL(url);\n    }\n    catch (MalformedURLException ignored) {\n      curl = null;\n    }\n    if (curl == null) {\n      showErrorMessage(IdeBundle.message(\"error.malformed.url\", url), CommonBundle.getErrorTitle());\n      return;\n    }\n\n    try {\n      final GeneralCommandLine commandLine = new GeneralCommandLine(command);\n      commandLine.addParameter(escapeUrl(curl.toString()));\n      if (SystemInfo.isWindows) {\n        commandLine.putUserData(GeneralCommandLine.DO_NOT_ESCAPE_QUOTES, true);\n      }\n      commandLine.createProcess();\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Browser launched with command line: \" + commandLine);\n      }\n    }\n    catch (ExecutionException e) {\n      showErrorMessage(IdeBundle.message(\"error.cannot.start.browser\", e.getMessage()), CommonBundle.getErrorTitle());\n    }\n  }","commit_id":"3d39927b53d973fc30c2e77ae46a85c06511bc0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String[] getOpenBrowserCommand(final @NonNls @NotNull String browserPath) {\n    final String[] command;\n\n    if (SystemInfo.isMac) {\n      if (new File(browserPath).isFile()) {\n        // versions before 10.6 don't allow to pass command line arguments to browser via 'open' command\n        // so we use full path to browser executable in such case\n        command = new String[]{browserPath};\n      }\n      else {\n        command = new String[]{ExecUtil.getOpenCommandPath(), \"-a\", browserPath};\n      }\n    }\n    else if (SystemInfo.isWindows) {\n      if (new File(browserPath).isFile()) {\n        command = new String[]{browserPath};\n      }\n      else {\n        command = new String[]{(SystemInfo.isWindows9x ? \"command.com\" : \"cmd.exe\"), \"/c\", \"start\", \"\\\"\\\"\", browserPath};\n      }\n    }\n    else {\n      command = new String[]{browserPath};\n    }\n\n    return command;\n  }","id":27075,"modified_method":"public static List<String> getOpenBrowserCommand(final @NonNls @NotNull String browserPath) {\n    // versions before 10.6 don't allow to pass command line arguments to browser via 'open' command\n    // so we use full path to browser executable in such case\n    if (SystemInfo.isMac && !new File(browserPath).isFile()) {\n      return Arrays.asList(ExecUtil.getOpenCommandPath(), \"-a\", browserPath);\n    }\n    else if (SystemInfo.isWindows && !new File(browserPath).isFile()) {\n      return Arrays.asList((SystemInfo.isWindows9x ? \"command.com\" : \"cmd.exe\"), \"/c\", \"start\", \"\\\"\\\"\", browserPath);\n    }\n    else {\n      return new SmartList<String>(browserPath);\n    }\n  }","commit_id":"3d39927b53d973fc30c2e77ae46a85c06511bc0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings({\"HardCodedStringLiteral\"})\n  private static void launchBrowser(@NonNls @NotNull String browserPath,\n                                    String url, final boolean forceOpenNewInstanceOnMac,\n                                    @NonNls String... browserArgs) throws IOException {\n    final String[] command = BrowserUtil.getOpenBrowserCommand(browserPath);\n    String[] args = ArrayUtil.append(browserArgs, url);\n\n    if (SystemInfo.isMac && ExecUtil.getOpenCommandPath().equals(command[0])) {\n      if (browserArgs.length > 0) {\n        if (BrowserUtil.isOpenCommandSupportArgs()) {\n          args = ArrayUtil.mergeArrays(new String[]{url, \"--args\"}, browserArgs);\n        }\n        else {\n          args = new String[]{url};\n          LOG.warn(\"'open' command doesn't allow to pass command line arguments so they will be ignored: \" + Arrays.toString(args));\n        }\n      }\n      if (forceOpenNewInstanceOnMac) {\n        args = ArrayUtil.mergeArrays(new String[]{\"-n\"}, args);\n      }\n    }\n\n    final String[] commandLine = ArrayUtil.mergeArrays(command, args);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Launching browser: \" + Arrays.toString(commandLine));\n    }\n    Runtime.getRuntime().exec(commandLine);\n  }","id":27076,"modified_method":"@SuppressWarnings({\"HardCodedStringLiteral\"})\n  private static void launchBrowser(@NonNls @NotNull String browserPath,\n                                    String url, final boolean forceOpenNewInstanceOnMac,\n                                    @NonNls String... browserArgs) throws IOException {\n    final List<String> command = BrowserUtil.getOpenBrowserCommand(browserPath);\n    String[] args = ArrayUtil.append(browserArgs, url);\n\n    if (SystemInfo.isMac && ExecUtil.getOpenCommandPath().equals(command.get(0))) {\n      if (browserArgs.length > 0) {\n        if (BrowserUtil.isOpenCommandSupportArgs()) {\n          args = ArrayUtil.mergeArrays(new String[]{url, \"--args\"}, browserArgs);\n        }\n        else {\n          args = new String[]{url};\n          LOG.warn(\"'open' command doesn't allow to pass command line arguments so they will be ignored: \" + Arrays.toString(args));\n        }\n      }\n      if (forceOpenNewInstanceOnMac) {\n        args = ArrayUtil.mergeArrays(new String[]{\"-n\"}, args);\n      }\n    }\n\n    Collections.addAll(command, args);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Launching browser: \" + Arrays.toString(command.toArray()));\n    }\n    new ProcessBuilder(command).start();\n  }","commit_id":"3d39927b53d973fc30c2e77ae46a85c06511bc0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doLaunchBrowser(final BrowserFamily family,\n                               @NotNull String url,\n                               @NotNull String[] additionalParameters,\n                               @NotNull Condition<String> browserSpecificParametersFilter,\n                               final boolean forceOpenNewInstanceOnMac) {\n    final WebBrowserSettings settings = getBrowserSettings(family);\n    final String path = settings.getPath();\n    if (path != null && path.length() > 0) {\n      url = BrowserUtil.escapeUrl(url);\n      try {\n        final BrowserSpecificSettings specificSettings = settings.getBrowserSpecificSettings();\n        final String[] browserParameters = specificSettings != null ? specificSettings.getAdditionalParameters() : ArrayUtil.EMPTY_STRING_ARRAY;\n        String[] parameters = ArrayUtil.mergeArrays(ContainerUtil.findAllAsArray(browserParameters, browserSpecificParametersFilter),\n                                                    additionalParameters);\n        launchBrowser(path, url, forceOpenNewInstanceOnMac, parameters);\n      }\n      catch (IOException e) {\n        Messages.showErrorDialog(e.getMessage(), XmlBundle.message(\"browser.error\"));\n      }\n    }\n    else {\n      Messages.showErrorDialog(XmlBundle.message(\"browser.path.not.specified\", family.getName()),\n                               XmlBundle.message(\"browser.path.not.specified.title\"));\n    }\n  }","id":27077,"modified_method":"private void doLaunchBrowser(final BrowserFamily family,\n                               @NotNull String url,\n                               @NotNull String[] additionalParameters,\n                               @NotNull Condition<String> browserSpecificParametersFilter,\n                               final boolean forceOpenNewInstanceOnMac) {\n    final WebBrowserSettings settings = getBrowserSettings(family);\n    final String path = settings.getPath();\n    String pathCheckResult = checkPath(family, path);\n    if (pathCheckResult == null) {\n      url = BrowserUtil.escapeUrl(url);\n      try {\n        final BrowserSpecificSettings specificSettings = settings.getBrowserSpecificSettings();\n        final String[] browserParameters = specificSettings != null ? specificSettings.getAdditionalParameters() : ArrayUtil.EMPTY_STRING_ARRAY;\n        String[] parameters = ArrayUtil.mergeArrays(ContainerUtil.findAllAsArray(browserParameters, browserSpecificParametersFilter),\n                                                    additionalParameters);\n        launchBrowser(path, url, forceOpenNewInstanceOnMac, parameters);\n      }\n      catch (IOException e) {\n        Messages.showErrorDialog(e.getMessage(), XmlBundle.message(\"browser.error\"));\n      }\n    }\n    else {\n      Messages.showErrorDialog(pathCheckResult, XmlBundle.message(\"browser.path.not.specified.title\"));\n    }\n  }","commit_id":"3d39927b53d973fc30c2e77ae46a85c06511bc0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static List<String> getOpenBrowserCommand(final @NonNls @NotNull String browserPath) {\n    // versions before 10.6 don't allow to pass command line arguments to browser via 'open' command\n    // so we use full path to browser executable in such case\n    if (SystemInfo.isMac && !new File(browserPath).isFile()) {\n      return Arrays.asList(ExecUtil.getOpenCommandPath(), \"-a\", browserPath);\n    }\n    else if (SystemInfo.isWindows && !new File(browserPath).isFile()) {\n      return Arrays.asList((SystemInfo.isWindows9x ? \"command.com\" : \"cmd.exe\"), \"/c\", \"start\", \"\\\"\\\"\", browserPath);\n    }\n    else {\n      return new SmartList<String>(browserPath);\n    }\n  }","id":27078,"modified_method":"public static List<String> getOpenBrowserCommand(final @NonNls @NotNull String browserPath) {\n    // versions before 10.6 don't allow to pass command line arguments to browser via 'open' command\n    // so we use full path to browser executable in such case\n    if (SystemInfo.isMac && !new File(browserPath).isFile()) {\n      ArrayList<String> command = new ArrayList<String>();\n      command.add(ExecUtil.getOpenCommandPath());\n      command.add(\"-a\");\n      command.add(browserPath);\n      return command;\n    }\n    else if (SystemInfo.isWindows && !new File(browserPath).isFile()) {\n      return getOpenBrowserWinCommand(browserPath);\n    }\n    else {\n      return new SmartList<String>(browserPath);\n    }\n  }","commit_id":"893025820caa007867739382a893b4e65ce58c2c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static String extractFiles(String url) {\n    try {\n      int sharpPos = url.indexOf('#');\n      String anchor = \"\";\n      if (sharpPos != -1) {\n        anchor = url.substring(sharpPos);\n        url = url.substring(0, sharpPos);\n      }\n\n      VirtualFile file = VirtualFileManager.getInstance().findFileByUrl(url);\n      if (file == null || !(file.getFileSystem() instanceof JarFileSystem)) return null;\n\n      JarFileSystem jarFileSystem = (JarFileSystem)file.getFileSystem();\n      VirtualFile jarVirtualFile = jarFileSystem.getVirtualFileForJar(file);\n      if (jarVirtualFile == null) return null;\n\n      String targetFilePath = file.getPath();\n      String targetFileRelativePath = StringUtil.substringAfter(targetFilePath, JarFileSystem.JAR_SEPARATOR);\n\n      String jarVirtualFileLocationHash = jarVirtualFile.getName() + Integer.toHexString(jarVirtualFile.getUrl().hashCode());\n      final File outputDir = new File(getExtractedFilesDir(), jarVirtualFileLocationHash);\n\n      final String currentTimestamp = String.valueOf(new File(jarVirtualFile.getPath()).lastModified());\n      final File timestampFile = new File(outputDir, \".idea.timestamp\");\n\n      String previousTimestamp = null;\n      if (timestampFile.exists()) {\n        previousTimestamp = FileUtil.loadFile(timestampFile);\n      }\n\n      if (!currentTimestamp.equals(previousTimestamp)) {\n        final Ref<Boolean> extract = new Ref<Boolean>();\n        Runnable r = new Runnable() {\n          public void run() {\n            final ConfirmExtractDialog dialog = new ConfirmExtractDialog();\n            if (dialog.isToBeShown()) {\n              dialog.show();\n              extract.set(dialog.isOK());\n            }\n            else {\n              dialog.close(DialogWrapper.OK_EXIT_CODE);\n              extract.set(true);\n            }\n          }\n        };\n\n        try {\n          GuiUtils.runOrInvokeAndWait(r);\n        }\n        catch (InvocationTargetException e) {\n          extract.set(false);\n        }\n        catch (InterruptedException e) {\n          extract.set(false);\n        }\n\n        if (!extract.get()) return null;\n\n        final ZipFile zipFile = jarFileSystem.getJarFile(file).getZipFile();\n        if (zipFile == null) return null;\n        ZipEntry entry = zipFile.getEntry(targetFileRelativePath);\n        if (entry == null) return null;\n        InputStream is = zipFile.getInputStream(entry);\n        try {\n          ZipUtil.extractEntry(entry, is, outputDir);\n        }\n        finally {\n          is.close();\n        }\n\n        ApplicationManager.getApplication().invokeLater(new Runnable() {\n          public void run() {\n            new Task.Backgroundable(null, \"Extracting files...\", true) {\n              public void run(@NotNull final ProgressIndicator indicator) {\n                final int size = zipFile.size();\n                final int[] counter = new int[]{0};\n\n                class MyFilter implements FilenameFilter {\n                  private final Set<File> myImportantDirs = new HashSet<File>(\n                    Arrays.asList(outputDir, new File(outputDir, \"resources\")));\n                  private final boolean myImportantOnly;\n\n                  private MyFilter(boolean importantOnly) {\n                    myImportantOnly = importantOnly;\n                  }\n\n                  public boolean accept(File dir, String name) {\n                    indicator.checkCanceled();\n                    boolean result = myImportantOnly == myImportantDirs.contains(dir);\n                    if (result) {\n                      indicator.setFraction(((double)counter[0]) / size);\n                      counter[0]++;\n                    }\n                    return result;\n                  }\n                }\n\n                try {\n                  ZipUtil.extract(zipFile, outputDir, new MyFilter(true));\n                  ZipUtil.extract(zipFile, outputDir, new MyFilter(false));\n                  FileUtil.writeToFile(timestampFile, currentTimestamp.getBytes());\n                }\n                catch (IOException ignore) {\n                }\n              }\n            }.queue();\n          }\n        });\n      }\n\n      return VfsUtilCore.pathToUrl(FileUtil.toSystemIndependentName(new File(outputDir, targetFileRelativePath).getPath())) + anchor;\n    }\n    catch (IOException e) {\n      LOG.warn(e);\n      Messages.showErrorDialog(\"Cannot extract files: \" + e.getMessage(), \"Error\");\n      return null;\n    }\n  }","id":27079,"modified_method":"@Nullable\n  private static String extractFiles(String url) {\n    try {\n      int sharpPos = url.indexOf('#');\n      String anchor = \"\";\n      if (sharpPos != -1) {\n        anchor = url.substring(sharpPos);\n        url = url.substring(0, sharpPos);\n      }\n\n      VirtualFile file = VirtualFileManager.getInstance().findFileByUrl(url);\n      if (file == null || !(file.getFileSystem() instanceof JarFileSystem)) return null;\n\n      JarFileSystem jarFileSystem = (JarFileSystem)file.getFileSystem();\n      VirtualFile jarVirtualFile = jarFileSystem.getVirtualFileForJar(file);\n      if (jarVirtualFile == null) return null;\n\n      String targetFilePath = file.getPath();\n      String targetFileRelativePath = StringUtil.substringAfter(targetFilePath, JarFileSystem.JAR_SEPARATOR);\n\n      String jarVirtualFileLocationHash = jarVirtualFile.getName() + Integer.toHexString(jarVirtualFile.getUrl().hashCode());\n      final File outputDir = new File(getExtractedFilesDir(), jarVirtualFileLocationHash);\n\n      final String currentTimestamp = String.valueOf(new File(jarVirtualFile.getPath()).lastModified());\n      final File timestampFile = new File(outputDir, \".idea.timestamp\");\n\n      String previousTimestamp = null;\n      if (timestampFile.exists()) {\n        previousTimestamp = FileUtil.loadFile(timestampFile);\n      }\n\n      if (!currentTimestamp.equals(previousTimestamp)) {\n        final Ref<Boolean> extract = new Ref<Boolean>();\n        Runnable r = new Runnable() {\n          public void run() {\n            final ConfirmExtractDialog dialog = new ConfirmExtractDialog();\n            if (dialog.isToBeShown()) {\n              dialog.show();\n              extract.set(dialog.isOK());\n            }\n            else {\n              dialog.close(DialogWrapper.OK_EXIT_CODE);\n              extract.set(true);\n            }\n          }\n        };\n\n        try {\n          GuiUtils.runOrInvokeAndWait(r);\n        }\n        catch (InvocationTargetException e) {\n          extract.set(false);\n        }\n        catch (InterruptedException e) {\n          extract.set(false);\n        }\n\n        if (!extract.get()) return null;\n\n        @SuppressWarnings(\"ConstantConditions\")\n        final ZipFile zipFile = jarFileSystem.getJarFile(file).getZipFile();\n        if (zipFile == null) return null;\n        ZipEntry entry = zipFile.getEntry(targetFileRelativePath);\n        if (entry == null) return null;\n        InputStream is = zipFile.getInputStream(entry);\n        try {\n          ZipUtil.extractEntry(entry, is, outputDir);\n        }\n        finally {\n          is.close();\n        }\n\n        ApplicationManager.getApplication().invokeLater(new Runnable() {\n          public void run() {\n            new Task.Backgroundable(null, \"Extracting files...\", true) {\n              public void run(@NotNull final ProgressIndicator indicator) {\n                final int size = zipFile.size();\n                final int[] counter = new int[]{0};\n\n                class MyFilter implements FilenameFilter {\n                  private final Set<File> myImportantDirs = new HashSet<File>(\n                    Arrays.asList(outputDir, new File(outputDir, \"resources\")));\n                  private final boolean myImportantOnly;\n\n                  private MyFilter(boolean importantOnly) {\n                    myImportantOnly = importantOnly;\n                  }\n\n                  public boolean accept(File dir, String name) {\n                    indicator.checkCanceled();\n                    boolean result = myImportantOnly == myImportantDirs.contains(dir);\n                    if (result) {\n                      indicator.setFraction(((double)counter[0]) / size);\n                      counter[0]++;\n                    }\n                    return result;\n                  }\n                }\n\n                try {\n                  ZipUtil.extract(zipFile, outputDir, new MyFilter(true));\n                  ZipUtil.extract(zipFile, outputDir, new MyFilter(false));\n                  FileUtil.writeToFile(timestampFile, currentTimestamp.getBytes());\n                }\n                catch (IOException ignore) {\n                }\n              }\n            }.queue();\n          }\n        });\n      }\n\n      return VfsUtilCore.pathToUrl(FileUtil.toSystemIndependentName(new File(outputDir, targetFileRelativePath).getPath())) + anchor;\n    }\n    catch (IOException e) {\n      LOG.warn(e);\n      Messages.showErrorDialog(\"Cannot extract files: \" + e.getMessage(), \"Error\");\n      return null;\n    }\n  }","commit_id":"893025820caa007867739382a893b4e65ce58c2c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @NonNls\n  private static List<String> getDefaultBrowserCommand() {\n    if (SystemInfo.isWindows) {\n      return Arrays.asList((SystemInfo.isWindows9x ? \"command.com\" : \"cmd.exe\"), \"/c\", \"start\", \"\\\"\\\"\");\n    }\n    else if (SystemInfo.isMac) {\n      return new SmartList<String>(ExecUtil.getOpenCommandPath());\n    }\n    else if (SystemInfo.isUnix && SystemInfo.hasXdgOpen()) {\n      return new SmartList<String>(\"xdg-open\");\n    }\n\n    return null;\n  }","id":27080,"modified_method":"@Nullable\n  @NonNls\n  private static List<String> getDefaultBrowserCommand() {\n    if (SystemInfo.isWindows) {\n      return getOpenBrowserWinCommand(null);\n    }\n    else if (SystemInfo.isMac) {\n      return new SmartList<String>(ExecUtil.getOpenCommandPath());\n    }\n    else if (SystemInfo.isUnix && SystemInfo.hasXdgOpen()) {\n      return new SmartList<String>(\"xdg-open\");\n    }\n\n    return null;\n  }","commit_id":"893025820caa007867739382a893b4e65ce58c2c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"static <C extends ProtocolConfiguration, B extends AbstractProtocolConfigurationBuilder<C>> B addThreadPoolConfigurationAsProperties(ThreadPoolResourceDefinition pool, String propertyPrefix, OperationContext context, ModelNode transport, B builder) throws OperationFailedException {\n        if (transport.get(pool.getPathElement().getKey()).hasDefined(pool.getPathElement().getValue())) {\n            ModelNode threadModel = transport.get(pool.getPathElement().getKeyValuePair());\n\n            if (pool.getMinThreads().resolveModelAttribute(context, threadModel).isDefined()) {\n                builder.addProperty(propertyPrefix + \".min_threads\", pool.getMinThreads().resolveModelAttribute(context, threadModel).asString());\n            }\n            if (pool.getMaxThreads().resolveModelAttribute(context, threadModel).isDefined()) {\n                builder.addProperty(propertyPrefix + \".max_threads\", pool.getMaxThreads().resolveModelAttribute(context, threadModel).asString());\n            }\n            if (pool.getQueueLength().resolveModelAttribute(context, threadModel).isDefined()) {\n                int queueSize = pool.getQueueLength().resolveModelAttribute(context, threadModel).asInt();\n                if (queueSize == 0) {\n                    builder.addProperty(propertyPrefix + \".queue_enabled\", Boolean.FALSE.toString());\n                } else {\n                    builder.addProperty(propertyPrefix + \".queue_enabled\", Boolean.TRUE.toString());\n                    builder.addProperty(propertyPrefix + \".queue_max_size\", String.valueOf(queueSize));\n                }\n            }\n            if (pool.getKeepAliveTime().resolveModelAttribute(context, threadModel).isDefined()) {\n                long keepAliveTime = pool.getKeepAliveTime().resolveModelAttribute(context, threadModel).asLong();\n                TimeUnit unit = Enum.valueOf(TimeUnit.class, pool.getKeepAliveTimeUnit().resolveModelAttribute(context, threadModel).asString());\n                long keepAliveTimeInSeconds = unit.toMillis(keepAliveTime);\n                builder.addProperty(propertyPrefix + \".keep_alive_time\", String.valueOf(keepAliveTimeInSeconds));\n            }\n        }\n        return builder;\n    }","id":27081,"modified_method":"static <C extends ProtocolConfiguration, B extends AbstractProtocolConfigurationBuilder<C>> B addThreadPoolConfigurationProperties(ThreadPoolResourceDefinition pool, String propertyPrefix, OperationContext context, ModelNode transport, B builder) throws OperationFailedException {\n        ModelNode threadModel = transport.get(pool.getPathElement().getKeyValuePair());\n\n        builder.addProperty(propertyPrefix + \".min_threads\", pool.getMinThreads().resolveModelAttribute(context, threadModel).asString())\n                .addProperty(propertyPrefix + \".max_threads\", pool.getMaxThreads().resolveModelAttribute(context, threadModel).asString());\n\n        // queue_*\n        int queueSize = pool.getQueueLength().resolveModelAttribute(context, threadModel).asInt();\n        if (propertyPrefix.equals(\"timer\")) {\n            // Timer pool doesn't accept queue_enabled property\n            builder.addProperty(propertyPrefix + \".queue_max_size\", String.valueOf(queueSize));\n        } else if (queueSize == 0) {\n            builder.addProperty(propertyPrefix + \".queue_enabled\", Boolean.FALSE.toString());\n        } else {\n            builder.addProperty(propertyPrefix + \".queue_enabled\", Boolean.TRUE.toString())\n                    .addProperty(propertyPrefix + \".queue_max_size\", String.valueOf(queueSize));\n        }\n\n        // keep_alive_*\n        long keepAliveTime = pool.getKeepAliveTime().resolveModelAttribute(context, threadModel).asLong();\n        TimeUnit unit = Enum.valueOf(TimeUnit.class, pool.getKeepAliveTimeUnit().resolveModelAttribute(context, threadModel).asString());\n        long keepAliveTimeInMillis = unit.toMillis(keepAliveTime);\n        builder.addProperty(propertyPrefix + \".keep_alive_time\", String.valueOf(keepAliveTimeInMillis));\n\n        return builder;\n    }","commit_id":"2a1c0a0557ae4d96b0e6e76eb966da442e423738","url":"https://github.com/wildfly/wildfly"},{"original_method":"static void installRuntimeServices(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {\n\n        String name = context.getCurrentAddressValue();\n\n        if (!model.hasDefined(TransportResourceDefinition.WILDCARD_PATH.getKey())) {\n            throw JGroupsLogger.ROOT_LOGGER.transportNotDefined(name);\n        }\n\n        ServiceTarget target = context.getServiceTarget();\n\n        Property property = model.get(TransportResourceDefinition.WILDCARD_PATH.getKey()).asProperty();\n        String type = property.getName();\n        ModelNode transport = property.getValue();\n\n        String machine = ModelNodes.asString(TransportResourceDefinition.MACHINE.resolveModelAttribute(context, transport));\n        String rack = ModelNodes.asString(TransportResourceDefinition.RACK.resolveModelAttribute(context, transport));\n        String site = ModelNodes.asString(TransportResourceDefinition.SITE.resolveModelAttribute(context, transport));\n\n        JChannelFactoryBuilder builder = new JChannelFactoryBuilder(name);\n        TransportConfigurationBuilder transportBuilder = builder.setTransport(type)\n                .setModule(ModelNodes.asModuleIdentifier(ProtocolResourceDefinition.MODULE.resolveModelAttribute(context, transport)))\n                .setShared(TransportResourceDefinition.SHARED.resolveModelAttribute(context, transport).asBoolean())\n                .setTopology(site, rack, machine)\n                .setSocketBinding(ModelNodes.asString(ProtocolResourceDefinition.SOCKET_BINDING.resolveModelAttribute(context, transport)))\n                .setDiagnosticsSocket(ModelNodes.asString(TransportResourceDefinition.DIAGNOSTICS_SOCKET_BINDING.resolveModelAttribute(context, transport)));\n\n        addProtocolProperties(context, transport, transportBuilder);\n\n        // Setup threading as jgroups properties\n        if (transport.hasDefined(ThreadPoolResourceDefinition.WILDCARD_PATH.getKey())) {\n            addThreadPoolConfigurationAsProperties(ThreadPoolResourceDefinition.DEFAULT, \"thread_pool\", context, transport, transportBuilder);\n            addThreadPoolConfigurationAsProperties(ThreadPoolResourceDefinition.INTERNAL, \"internal_thread_pool\", context, transport, transportBuilder);\n            addThreadPoolConfigurationAsProperties(ThreadPoolResourceDefinition.OOB, \"oob_thread_pool\", context, transport, transportBuilder);\n            addThreadPoolConfigurationAsProperties(ThreadPoolResourceDefinition.TIMER, \"timer\", context, transport, transportBuilder);\n        }\n\n        transportBuilder.build(target).install();\n\n        if (model.hasDefined(RelayResourceDefinition.PATH.getKey())) {\n            ModelNode relay = model.get(RelayResourceDefinition.PATH.getKeyValuePair());\n            String siteName = RelayResourceDefinition.SITE.resolveModelAttribute(context, relay).asString();\n            RelayConfigurationBuilder relayBuilder = builder.setRelay(siteName);\n            if (relay.hasDefined(RemoteSiteResourceDefinition.WILDCARD_PATH.getKey())) {\n                for (Property remoteSiteProperty: relay.get(RemoteSiteResourceDefinition.WILDCARD_PATH.getKey()).asPropertyList()) {\n                    String remoteSiteName = remoteSiteProperty.getName();\n                    String channelName = RemoteSiteResourceDefinition.CHANNEL.resolveModelAttribute(context, remoteSiteProperty.getValue()).asString();\n                    relayBuilder.addRemoteSite(remoteSiteName, channelName).build(target).install();\n                }\n            }\n            addProtocolProperties(context, relay, relayBuilder).build(target).install();\n        }\n\n        if (model.hasDefined(ProtocolResourceDefinition.WILDCARD_PATH.getKey())) {\n            for (Property protocolProperty : model.get(ProtocolResourceDefinition.WILDCARD_PATH.getKey()).asPropertyList()) {\n                ModelNode protocol = protocolProperty.getValue();\n                ProtocolConfigurationBuilder protocolBuilder = builder.addProtocol(protocolProperty.getName())\n                        .setModule(ModelNodes.asModuleIdentifier(ProtocolResourceDefinition.MODULE.resolveModelAttribute(context, protocol)))\n                        .setSocketBinding(ModelNodes.asString(ProtocolResourceDefinition.SOCKET_BINDING.resolveModelAttribute(context, protocol)));\n                addProtocolProperties(context, protocol, protocolBuilder).build(target).install();\n            }\n        }\n\n        builder.build(target).install();\n\n        new BinderServiceBuilder<>(JGroupsBindingFactory.createChannelFactoryBinding(name), ProtocolStackServiceName.CHANNEL_FACTORY.getServiceName(name), ChannelFactory.class).build(target).install();\n    }","id":27082,"modified_method":"static void installRuntimeServices(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {\n\n        String name = context.getCurrentAddressValue();\n\n        if (!model.hasDefined(TransportResourceDefinition.WILDCARD_PATH.getKey())) {\n            throw JGroupsLogger.ROOT_LOGGER.transportNotDefined(name);\n        }\n\n        ServiceTarget target = context.getServiceTarget();\n\n        Property property = model.get(TransportResourceDefinition.WILDCARD_PATH.getKey()).asProperty();\n        String type = property.getName();\n        ModelNode transport = property.getValue();\n\n        String machine = ModelNodes.asString(TransportResourceDefinition.MACHINE.resolveModelAttribute(context, transport));\n        String rack = ModelNodes.asString(TransportResourceDefinition.RACK.resolveModelAttribute(context, transport));\n        String site = ModelNodes.asString(TransportResourceDefinition.SITE.resolveModelAttribute(context, transport));\n\n        JChannelFactoryBuilder builder = new JChannelFactoryBuilder(name);\n        TransportConfigurationBuilder transportBuilder = builder.setTransport(type)\n                .setModule(ModelNodes.asModuleIdentifier(ProtocolResourceDefinition.MODULE.resolveModelAttribute(context, transport)))\n                .setShared(TransportResourceDefinition.SHARED.resolveModelAttribute(context, transport).asBoolean())\n                .setTopology(site, rack, machine)\n                .setSocketBinding(ModelNodes.asString(ProtocolResourceDefinition.SOCKET_BINDING.resolveModelAttribute(context, transport)))\n                .setDiagnosticsSocket(ModelNodes.asString(TransportResourceDefinition.DIAGNOSTICS_SOCKET_BINDING.resolveModelAttribute(context, transport)));\n\n        addProtocolProperties(context, transport, transportBuilder);\n\n        // Setup thread pool configuration via JGroups properties\n        addThreadPoolConfigurationProperties(ThreadPoolResourceDefinition.DEFAULT, \"thread_pool\", context, transport, transportBuilder);\n        addThreadPoolConfigurationProperties(ThreadPoolResourceDefinition.INTERNAL, \"internal_thread_pool\", context, transport, transportBuilder);\n        addThreadPoolConfigurationProperties(ThreadPoolResourceDefinition.OOB, \"oob_thread_pool\", context, transport, transportBuilder);\n        addThreadPoolConfigurationProperties(ThreadPoolResourceDefinition.TIMER, \"timer\", context, transport, transportBuilder);\n\n        transportBuilder.build(target).install();\n\n        if (model.hasDefined(RelayResourceDefinition.PATH.getKey())) {\n            ModelNode relay = model.get(RelayResourceDefinition.PATH.getKeyValuePair());\n            String siteName = RelayResourceDefinition.SITE.resolveModelAttribute(context, relay).asString();\n            RelayConfigurationBuilder relayBuilder = builder.setRelay(siteName);\n            if (relay.hasDefined(RemoteSiteResourceDefinition.WILDCARD_PATH.getKey())) {\n                for (Property remoteSiteProperty: relay.get(RemoteSiteResourceDefinition.WILDCARD_PATH.getKey()).asPropertyList()) {\n                    String remoteSiteName = remoteSiteProperty.getName();\n                    String channelName = RemoteSiteResourceDefinition.CHANNEL.resolveModelAttribute(context, remoteSiteProperty.getValue()).asString();\n                    relayBuilder.addRemoteSite(remoteSiteName, channelName).build(target).install();\n                }\n            }\n            addProtocolProperties(context, relay, relayBuilder).build(target).install();\n        }\n\n        if (model.hasDefined(ProtocolResourceDefinition.WILDCARD_PATH.getKey())) {\n            for (Property protocolProperty : model.get(ProtocolResourceDefinition.WILDCARD_PATH.getKey()).asPropertyList()) {\n                ModelNode protocol = protocolProperty.getValue();\n                ProtocolConfigurationBuilder protocolBuilder = builder.addProtocol(protocolProperty.getName())\n                        .setModule(ModelNodes.asModuleIdentifier(ProtocolResourceDefinition.MODULE.resolveModelAttribute(context, protocol)))\n                        .setSocketBinding(ModelNodes.asString(ProtocolResourceDefinition.SOCKET_BINDING.resolveModelAttribute(context, protocol)));\n                addProtocolProperties(context, protocol, protocolBuilder).build(target).install();\n            }\n        }\n\n        builder.build(target).install();\n\n        new BinderServiceBuilder<>(JGroupsBindingFactory.createChannelFactoryBinding(name), ProtocolStackServiceName.CHANNEL_FACTORY.getServiceName(name), ChannelFactory.class).build(target).install();\n    }","commit_id":"2a1c0a0557ae4d96b0e6e76eb966da442e423738","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void setDataSource(EODataSource eodatasource) {\n    \tEODatabaseDataSource ds = (eodatasource instanceof EODatabaseDataSource) ? (EODatabaseDataSource)eodatasource : null;\n    \tObject newDataSourceState = null;\n    \tif(ds != null) {\n    \t\tnewDataSourceState = ds.fetchSpecification().toString().replaceAll(\"\\\\n\", \"\") + \":\" + ds.fetchSpecificationForFetch().toString().replaceAll(\"\\\\n\", \"\") + \" fetchLimit: \" + ds.fetchSpecification().fetchLimit() + \", \" + ds.fetchSpecificationForFetch().fetchLimit();\n    \t}\n    \tEODataSource old = displayGroup().dataSource();\n    \tsuper.setDataSource(eodatasource);\n    \tdisplayGroup().setDataSource(eodatasource);\n    \tif(ds == null || (dataSourceState == null) \n    \t\t\t|| (dataSourceState != null && !dataSourceState.equals(newDataSourceState)) || alwaysRefetchList()) {\n    \t\tlog.debug(\"updating:\\n\" + dataSourceState + \" vs\\n\" + newDataSourceState);\n    \t\tdataSourceState = newDataSourceState;\n    \t\t_hasToUpdate = true;\n\n    \t\t// AK: when you use the page in a embedded component and have a few of them in a tab\n    \t\t// page, WO reuses the component for a new dataSource. If this DS doesn't have the \n    \t\t// sort order keys required it leads to a KVC error later on. We fix this here to re-init\n    \t\t// the sort ordering from the rules.\n    \t\tif(old != null && eodatasource != null \n    \t\t\t\t&& !eodatasource.classDescriptionForObjects().equals(old.classDescriptionForObjects())) {\n    \t\t\tsetSortOrderingsOnDisplayGroup(sortOrderings(), displayGroup());\n    \t\t}\n    \t}\n    }","id":27083,"modified_method":"public void setDataSource(EODataSource eodatasource) {\n    \tEODatabaseDataSource ds = (eodatasource instanceof EODatabaseDataSource) ? (EODatabaseDataSource)eodatasource : null;\n    \tObject newDataSourceState = null;\n    \tif(ds != null) {\n    \t\tnewDataSourceState = ds.fetchSpecification().toString().replaceAll(\"\\\\n\", \"\") + \":\" + ds.fetchSpecificationForFetch().toString().replaceAll(\"\\\\n\", \"\") + \" fetchLimit: \" + ds.fetchSpecification().fetchLimit() + \", \" + ds.fetchSpecificationForFetch().fetchLimit();\n    \t}\n    \tEODataSource old = displayGroup().dataSource();\n    \tsuper.setDataSource(eodatasource);\n    \tdisplayGroup().setDataSource(eodatasource);\n    \tif(ds == null || (dataSourceState == null) \n    \t\t\t|| (dataSourceState != null && !dataSourceState.equals(newDataSourceState)) || alwaysRefetchList()) {\n    \t\tlog.debug(\"updating:\\n\" + dataSourceState + \" vs\\n\" + newDataSourceState);\n    \t\tdataSourceState = newDataSourceState;\n    \t\t_hasToUpdate = true;\n\n    \t\t// AK: when you use the page in a embedded component and have a few of them in a tab\n    \t\t// page, WO reuses the component for a new dataSource. If this DS doesn't have the \n    \t\t// sort order keys required it leads to a KVC error later on. We fix this here to re-init\n    \t\t// the sort ordering from the rules.\n    \t\tif(old != null && eodatasource != null \n    \t\t\t\t&& ERXExtensions.safeDifferent(eodatasource.classDescriptionForObjects(), old.classDescriptionForObjects())) {\n    \t\t\tsetSortOrderingsOnDisplayGroup(sortOrderings(), displayGroup());\n    \t\t}\n    \t}\n    }","commit_id":"c3fffb4ac58d347022c89dc0447bb3ee09f21576","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Overridden to clear out the sort ordering if it is no longer applicable.\n\t */\n\tpublic void setDataSource(EODataSource eodatasource) {\n\t\tEODataSource old = dataSource();\n\t\tsuper.setDataSource(eodatasource);\n\t\tif(old != null && eodatasource != null && !old.classDescriptionForObjects().equals(eodatasource.classDescriptionForObjects())) {\n\t\t\tsetSortOrderings(NSArray.EmptyArray);\n\t\t}\n\t}","id":27084,"modified_method":"/**\n\t * Overridden to clear out the sort ordering if it is no longer applicable.\n\t */\n\tpublic void setDataSource(EODataSource eodatasource) {\n\t\tEODataSource old = dataSource();\n\t\tsuper.setDataSource(eodatasource);\n\t\tif(old != null && eodatasource != null && ERXExtensions.safeDifferent(old.classDescriptionForObjects(), eodatasource.classDescriptionForObjects())) {\n\t\t\tsetSortOrderings(NSArray.EmptyArray);\n\t\t}\n\t}","commit_id":"c3fffb4ac58d347022c89dc0447bb3ee09f21576","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Returns whether or not the target should be refreshed.\n\t * \n\t * @return whether or not the target should be refreshed\n\t */\n\tpublic boolean refreshTarget() {\n    boolean refreshTarget = false;\n\t  if (_refreshTarget == null) {\n  \t\tObject cacheKey = valueForBinding(\"cacheKey\");\n  \t\tif (_lastCacheKey == null) {\n  \t\t\t_lastCacheKey = cacheKey;\n  \t\t}\n  \t\telse if (!cacheKey.equals(_lastCacheKey)) {\n  \t\t\trefreshTarget = true;\n  \t\t\t_lastCacheKey = cacheKey;\n  \t\t}\n  \t\t_refreshTarget = Boolean.valueOf(refreshTarget);\n\t  }\n\t\treturn _refreshTarget.booleanValue();\n\t}","id":27085,"modified_method":"/**\n\t * Returns whether or not the target should be refreshed.\n\t * \n\t * @return whether or not the target should be refreshed\n\t */\n\tpublic boolean refreshTarget() {\n    boolean refreshTarget = false;\n\t  if (_refreshTarget == null) {\n  \t\tObject cacheKey = valueForBinding(\"cacheKey\");\n  \t\tif(ERXExtensions.safeDifferent(_lastCacheKey, cacheKey)) {\n  \t\t\trefreshTarget = true;\n  \t\t\t_lastCacheKey = cacheKey;\n  \t\t}\n  \t\t_refreshTarget = Boolean.valueOf(refreshTarget);\n\t  }\n\t\treturn _refreshTarget.booleanValue();\n\t}","commit_id":"47d08ac8a51bf111c06e836b648349460d23ffe3","url":"https://github.com/wocommunity/wonder"},{"original_method":"public static IPInfo getIPInfo(String ipAddress) throws PortalException {\n\t\tJSONObject ipGeocoderRequestJSON = JSONFactoryUtil.createJSONObject();\n\n\t\tipGeocoderRequestJSON.put(\"ipAddress\", ipAddress);\n\n\t\tString ipGeocoderResponse = MessageBusUtil.sendSynchronizedMessage(\n\t\t\tDestinationNames.IP_GEOCODER, ipGeocoderRequestJSON.toString());\n\n\t\tif (ipGeocoderResponse == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tJSONObject ipGeocoderResponseJSON = JSONFactoryUtil.createJSONObject(\n\t\t\tipGeocoderResponse);\n\n\t\tJSONObject ipInfoJSON = ipGeocoderResponseJSON.getJSONObject(\"ipInfo\");\n\n\t\tif (ipInfoJSON == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfloat latitude = GetterUtil.getFloat(ipInfoJSON.getString(\"latitude\"));\n\t\tfloat longitude = GetterUtil.getFloat(\n\t\t\tipInfoJSON.getString(\"longitude\"));\n\n\t\tif ((latitude == 0) && (longitude == 0)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new IPInfo(ipAddress, latitude, longitude);\n\t}","id":27086,"modified_method":"public static IPInfo getIPInfo(String ipAddress) throws PortalException {\n\t\tJSONObject ipInfoJSON =\n\t\t\t(JSONObject)MessageBusUtil.sendSynchronizedMessage(\n\t\t\t\tDestinationNames.IP_GEOCODER, ipAddress);\n\n\t\tif (ipInfoJSON == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfloat latitude = GetterUtil.getFloat(ipInfoJSON.getString(\"latitude\"));\n\t\tfloat longitude = GetterUtil.getFloat(\n\t\t\tipInfoJSON.getString(\"longitude\"));\n\n\t\tif ((latitude == 0) && (longitude == 0)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new IPInfo(ipAddress, latitude, longitude);\n\t}","commit_id":"5c98227fe68ef638d9768cee6d7286aa14cde234","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public String sendSynchronizedMessage(\n\t\t\tString destination, String message, long timeout)\n\t\tthrows MessageBusException {\n\n\t\tDestination destinationModel = _destinations.get(destination);\n\n\t\tif (destinationModel == null) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\"Destination \" + destination + \" is not configured\");\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tDestination responseDestinationModel = _destinations.get(\n\t\t\tgetResponseDestination(destination));\n\n\t\tif (responseDestinationModel == null) {\n\t\t\t_log.error(\n\t\t\t\t\"Response destination \" + destination + \" is not configured\");\n\n\t\t\treturn null;\n\t\t}\n\n\t\tResponseMessageListener responseMessageListener =\n\t\t\tnew ResponseMessageListener(\n\t\t\t\tdestinationModel, responseDestinationModel, getNextResponseId(),\n\t\t\t\ttimeout);\n\n\t\tresponseDestinationModel.register(responseMessageListener);\n\n\t\ttry {\n\t\t\treturn responseMessageListener.send(message);\n\t\t}\n\t\tfinally {\n\t\t\tresponseDestinationModel.unregister(responseMessageListener);\n\t\t}\n\t}","id":27087,"modified_method":"public String sendSynchronizedMessage(\n\t\t\tString destination, String message, long timeout)\n\t\tthrows MessageBusException {\n\n\t\tDestination destinationModel = _destinations.get(destination);\n\n\t\tif (destinationModel == null) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\"Destination \" + destination + \" is not configured\");\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tDestination responseDestinationModel = _destinations.get(\n\t\t\tgetResponseDestination(destination));\n\n\t\tif (responseDestinationModel == null) {\n\t\t\t_log.error(\n\t\t\t\t\"Response destination \" + destination + \" is not configured\");\n\n\t\t\treturn null;\n\t\t}\n\n\t\tStringResponseMessageListener responseMessageListener =\n\t\t\tnew StringResponseMessageListener(\n\t\t\t\tdestinationModel, responseDestinationModel, getNextResponseId(),\n\t\t\t\ttimeout);\n\n\t\tresponseDestinationModel.register(responseMessageListener);\n\n\t\ttry {\n\t\t\treturn responseMessageListener.send(message);\n\t\t}\n\t\tfinally {\n\t\t\tresponseDestinationModel.unregister(responseMessageListener);\n\t\t}\n\t}","commit_id":"cb8ddaaf43d8bab56b883a0e7a5106395f7eb06b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Hits search(\n\t\t\tlong companyId, String query, Sort sort, int start, int end)\n\t\tthrows SearchException {\n\n\t\ttry {\n\t\t\tSearchRequest searchRequest = new SearchRequest(\n\t\t\t\tSearchRequest.COMMAND_SEARCH, companyId, query, sort,\n\t\t\t\tstart, end);\n\n\t\t\tString message = MessageBusUtil.sendSynchronizedMessage(\n\t\t\t\tDestinationNames.SEARCH_READER,\n\t\t\t\tJSONFactoryUtil.serialize(searchRequest));\n\n\t\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject(message);\n\n\t\t\treturn (Hits)JSONFactoryUtil.deserialize(jsonObj.getString(\"hits\"));\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SearchException(e);\n\t\t}\n\t}","id":27088,"modified_method":"public Hits search(\n\t\t\tlong companyId, String query, Sort sort, int start, int end)\n\t\tthrows SearchException {\n\n\t\ttry {\n\t\t\tSearchRequest searchRequest = new SearchRequest(\n\t\t\t\tSearchRequest.COMMAND_SEARCH, companyId, query, sort,\n\t\t\t\tstart, end);\n\n\t\t\tHits hits = (Hits)MessageBusUtil.sendSynchronizedMessage(\n\t\t\t\tDestinationNames.SEARCH_READER, new Message(searchRequest));\n\n\t\t\treturn hits;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SearchException(e);\n\t\t}\n\t}","commit_id":"cb8ddaaf43d8bab56b883a0e7a5106395f7eb06b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void receive(String message) {\n\t\ttry {\n\t\t\tdoReceive(message);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(\"Unable to process message \" + message, e);\n\t\t}\n\t}","id":27089,"modified_method":"public void receive(String message) {\n\t\tthrow new UnsupportedOperationException();\n\t}","commit_id":"cb8ddaaf43d8bab56b883a0e7a5106395f7eb06b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void doReceive(String message) throws Exception {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject(message);\n\n\t\tString responseDestination = jsonObj.getString(\n\t\t\t\"lfrResponseDestination\");\n\t\tString responseId = jsonObj.getString(\"lfrResponseId\");\n\n\t\tjsonObj.remove(\"lfrResponseDestination\");\n\t\tjsonObj.remove(\"lfrResponseId\");\n\n\t\tSearchRequest searchRequest =\n\t\t\t(SearchRequest)JSONFactoryUtil.deserialize(message);\n\n\t\tString command = searchRequest.getCommand();\n\n\t\tlong companyId = searchRequest.getCompanyId();\n\t\tString id = searchRequest.getId();\n\t\tDocument doc = searchRequest.getDocument();\n\n\t\tif (command.equals(SearchRequest.COMMAND_INDEX_ONLY) &&\n\t\t\t\t Validator.isNotNull(responseDestination) &&\n\t\t\t\t Validator.isNotNull(responseId)) {\n\n\t\t\tdoCommandIndexOnly(responseDestination, responseId);\n\t\t}\n\t\telse if (command.equals(SearchRequest.COMMAND_SEARCH) &&\n\t\t\t\t Validator.isNotNull(responseDestination) &&\n\t\t\t\t Validator.isNotNull(responseId)) {\n\n\t\t\tdoCommandSearch(responseDestination, responseId, searchRequest);\n\t\t}\n\t}","id":27090,"modified_method":"protected void doCommandSearch(Message message, SearchRequest searchRequest)\n\t\tthrows Exception {\n\n\t\tHits hits = LuceneSearchEngineUtil.search(\n\t\t\tsearchRequest.getCompanyId(), searchRequest.getQuery(),\n\t\t\tsearchRequest.getSort(), searchRequest.getStart(),\n\t\t\tsearchRequest.getEnd());\n\n\t\tmessage.setResponseValue(hits);\n\n\t\tMessageBusUtil.sendMessage(message.getResponseDestination(), message);\n\t}","commit_id":"cb8ddaaf43d8bab56b883a0e7a5106395f7eb06b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void receive(Object message) {\n\t\tthrow new UnsupportedOperationException();\n\t}","id":27091,"modified_method":"public void receive(Object message) {\n\t\ttry {\n\t\t\tdoReceive((Message)message);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(\"Unable to process message \" + message, e);\n\t\t}\n\t}","commit_id":"cb8ddaaf43d8bab56b883a0e7a5106395f7eb06b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doCommandIndexOnly(\n\t\t\tString responseDestination, String responseId)\n\t\tthrows Exception {\n\n\t\tboolean indexOnly = LuceneSearchEngineUtil.isIndexReadOnly();\n\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"lfrResponseId\", responseId);\n\t\tjsonObj.put(\"indexOnly\", indexOnly);\n\n\t\tMessageBusUtil.sendMessage(responseDestination, jsonObj.toString());\n\t}","id":27092,"modified_method":"protected void doCommandIndexOnly(Message message)\n\t\tthrows Exception {\n\n\t\tboolean indexOnly = LuceneSearchEngineUtil.isIndexReadOnly();\n\n\t\tmessage.setResponseValue(Boolean.valueOf(indexOnly));\n\n\t\tMessageBusUtil.sendMessage(message.getResponseDestination(), message);\n\t}","commit_id":"cb8ddaaf43d8bab56b883a0e7a5106395f7eb06b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private boolean _isIndexReadOnly() {\n\t\tif (_indexReadOnly != null) {\n\t\t\treturn _indexReadOnly.booleanValue();\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(\"{\\\"javaClass\\\":\\\"\");\n\t\tsb.append(SearchRequest.class.getName());\n\t\tsb.append(\"\\\",\\\"command\\\":\\\"\");\n\t\tsb.append(SearchRequest.COMMAND_INDEX_ONLY);\n\t\tsb.append(\"\\\"}\");\n\n\t\ttry {\n\t\t\tString message = MessageBusUtil.sendSynchronizedMessage(\n\t\t\t\tDestinationNames.SEARCH_READER, sb.toString());\n\n\t\t\tif ((message.indexOf(\"true\") != -1)) {\n\t\t\t\t_indexReadOnly = Boolean.TRUE;\n\n\t\t\t\treturn _indexReadOnly.booleanValue();\n\t\t\t}\n\n\t\t\t_indexReadOnly = Boolean.FALSE;\n\n\t\t\treturn _indexReadOnly.booleanValue();\n\t\t}\n\t\tcatch (MessageBusException mbe) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\"Unable to check index status\", mbe);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","id":27093,"modified_method":"private boolean _isIndexReadOnly() {\n\t\tif (_indexReadOnly != null) {\n\t\t\treturn _indexReadOnly.booleanValue();\n\t\t}\n\n\t\ttry {\n\t\t\tMessage message = new Message(\n\t\t\t\tnew SearchRequest(SearchRequest.COMMAND_INDEX_ONLY));\n\n\t\t\t_indexReadOnly = (Boolean)MessageBusUtil.sendSynchronizedMessage(\n\t\t\t\tDestinationNames.SEARCH_READER, message);\n\n\t\t\tif (_indexReadOnly == null) {\n\t\t\t\t_indexReadOnly = Boolean.FALSE;\n\t\t\t}\n\n\t\t\treturn _indexReadOnly.booleanValue();\n\t\t}\n\t\tcatch (MessageBusException mbe) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\"Unable to check index status\", mbe);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","commit_id":"cb8ddaaf43d8bab56b883a0e7a5106395f7eb06b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testAtSortDesc() {\n\t\tNSArray<Employee> first = (NSArray<Employee>) Company.EMPLOYEES.atSortDesc(Employee.FIRST_NAME).valueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(aaBb, Abba), first);\n\t\tNSArray<Employee> last = (NSArray<Employee>) Company.EMPLOYEES.atSortDesc(Employee.LAST_NAME,Employee.FIRST_NAME).valueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(Abba, aaBb), last);\n\t}","id":27094,"modified_method":"@Test\n\tpublic void testAtSortDesc() {\n\t\tNSArray<Employee> first = Company.EMPLOYEES.atSortDesc(Employee.FIRST_NAME).arrayValueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(aaBb, Abba), first);\n\t\tNSArray<Employee> last = Company.EMPLOYEES.atSortDesc(Employee.LAST_NAME,Employee.FIRST_NAME).arrayValueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(Abba, aaBb), last);\n\t}","commit_id":"ebe4854364fc13e4a898618f3e9b3f358f6735ee","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Test\n\tpublic void testSortInsensitiveDesc() {\n\t\tNSArray<Employee> first = (NSArray<Employee>) Company.EMPLOYEES.atSortInsensitiveDesc(Employee.FIRST_NAME).valueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(Abba, aaBb), first);\n\t\tNSArray<Employee> last = (NSArray<Employee>) Company.EMPLOYEES.atSortInsensitiveDesc(Employee.LAST_NAME,Employee.FIRST_NAME).valueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(aaBb, Abba), last);\n\t}","id":27095,"modified_method":"@Test\n\tpublic void testSortInsensitiveDesc() {\n\t\tNSArray<Employee> first = Company.EMPLOYEES.atSortInsensitiveDesc(Employee.FIRST_NAME).arrayValueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(Abba, aaBb), first);\n\t\tNSArray<Employee> last = Company.EMPLOYEES.atSortInsensitiveDesc(Employee.LAST_NAME,Employee.FIRST_NAME).arrayValueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(aaBb, Abba), last);\n\t}","commit_id":"ebe4854364fc13e4a898618f3e9b3f358f6735ee","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Test\n\tpublic void testAtLimitInteger() {\n\t\tNSArray<Employee> employees = (NSArray<Employee>) Company.EMPLOYEES.atLimit(Integer.valueOf(2)).valueInObject(shinraInc);\n\t\tassertTrue(employees.count() == 2);\n\t}","id":27096,"modified_method":"@Test\n\tpublic void testAtLimitInteger() {\n\t\tNSArray<Employee> employees = Company.EMPLOYEES.atLimit(Integer.valueOf(2)).arrayValueInObject(shinraInc);\n\t\tassertTrue(employees.count() == 2);\n\t}","commit_id":"ebe4854364fc13e4a898618f3e9b3f358f6735ee","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Test\n\tpublic void testAtUnique() {\n\t\tNSArray<Role> uniqueRoles = (NSArray<Role>) Company.EMPLOYEES.dot(Employee.ROLES).atFlatten().atUnique().valueInObject(shinraInc);\n\t\tassertTrue(ERXArrayUtilities.arraysAreIdenticalSets(uniqueRoles, roles));\n\t\tassertTrue(uniqueRoles.count() == 3);\n\t\tNSArray<NSArray<Role>> roleArrays = (NSArray<NSArray<Role>>) Company.EMPLOYEES.dot(Employee.ROLES).atUnique().atFlatten().valueInObject(shinraInc);\n\t\tassertTrue(roleArrays.count() == 6);\n\t}","id":27097,"modified_method":"@Test\n\tpublic void testAtUnique() {\n\t\tNSArray<Role> uniqueRoles = Company.EMPLOYEES.dot(Employee.ROLES).atFlatten().atUnique().arrayValueInObject(shinraInc);\n\t\tassertTrue(ERXArrayUtilities.arraysAreIdenticalSets(uniqueRoles, roles));\n\t\tassertTrue(uniqueRoles.count() == 3);\n\t\tNSArray<Role> roleArrays = Company.EMPLOYEES.dot(Employee.ROLES).atUnique().atFlatten().arrayValueInObject(shinraInc);\n\t\tassertTrue(roleArrays.count() == 6);\n\t}","commit_id":"ebe4854364fc13e4a898618f3e9b3f358f6735ee","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Test\n\tpublic void testReverse() {\n\t\tNSArray<Employee> shinraAsc = (NSArray<Employee>) Company.EMPLOYEES.atSortAsc(Employee.FIRST_NAME).valueInObject(shinraInc);\n\t\tNSArray<Employee> shinraDescReverse = (NSArray<Employee>) Company.EMPLOYEES.atSortDesc(Employee.FIRST_NAME).valueInObject(shinraInc);\n\t\tshinraDescReverse = (NSArray<Employee>) ERXKey.reverse().valueInObject(shinraDescReverse);\n\t\tassertEquals(shinraAsc, shinraDescReverse);\n\t}","id":27098,"modified_method":"@Test\n\tpublic void testReverse() {\n\t\tNSArray<Employee> shinraAsc = Company.EMPLOYEES.atSortAsc(Employee.FIRST_NAME).arrayValueInObject(shinraInc);\n\t\tNSArray<Employee> shinraDescReverse = Company.EMPLOYEES.atSortDesc(Employee.FIRST_NAME).arrayValueInObject(shinraInc);\n\t\tshinraDescReverse = (NSArray<Employee>) ERXKey.reverse().valueInObject(shinraDescReverse);\n\t\tassertEquals(shinraAsc, shinraDescReverse);\n\t}","commit_id":"ebe4854364fc13e4a898618f3e9b3f358f6735ee","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Test\n\tpublic void testAtSortAsc() {\n\t\tNSArray<Employee> first = (NSArray<Employee>) Company.EMPLOYEES.atSortAsc(Employee.FIRST_NAME).valueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(Abba, aaBb), first);\n\t\tNSArray<Employee> last = (NSArray<Employee>) Company.EMPLOYEES.atSortAsc(Employee.LAST_NAME,Employee.FIRST_NAME).valueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(aaBb, Abba), last);\n\t}","id":27099,"modified_method":"@Test\n\tpublic void testAtSortAsc() {\n\t\tNSArray<Employee> first = Company.EMPLOYEES.atSortAsc(Employee.FIRST_NAME).arrayValueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(Abba, aaBb), first);\n\t\tNSArray<Employee> last = Company.EMPLOYEES.atSortAsc(Employee.LAST_NAME,Employee.FIRST_NAME).arrayValueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(aaBb, Abba), last);\n\t}","commit_id":"ebe4854364fc13e4a898618f3e9b3f358f6735ee","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Test\n\tpublic void testAtRemoveNullValues() {\n\t\tObject o = Company.EMPLOYEES.dot(Employee.BEST_SALES_TOTAL).valueInObject(shinraInc);\n\t\tNSArray<?> d4 = (NSArray<?>) o;\n\t\tassertTrue(d4.count() == 4);\n\t\tNSArray<BigDecimal> d2 = (NSArray<BigDecimal>) Company.EMPLOYEES.dot(Employee.BEST_SALES_TOTAL).atRemoveNullValues().valueInObject(shinraInc);\n\t\tassertTrue(d2.count() == 2);\n\t}","id":27100,"modified_method":"@Test\n\tpublic void testAtRemoveNullValues() {\n\t\tObject o = Company.EMPLOYEES.dot(Employee.BEST_SALES_TOTAL).valueInObject(shinraInc);\n\t\tNSArray<?> d4 = (NSArray<?>) o;\n\t\tassertTrue(d4.count() == 4);\n\t\tNSArray<BigDecimal> d2 = Company.EMPLOYEES.dot(Employee.BEST_SALES_TOTAL).atRemoveNullValues().arrayValueInObject(shinraInc);\n\t\tassertTrue(d2.count() == 2);\n\t}","commit_id":"ebe4854364fc13e4a898618f3e9b3f358f6735ee","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Test\n\tpublic void testAtSort() {\n\t\tNSArray<Employee> first = (NSArray<Employee>) Company.EMPLOYEES.atSort(Employee.FIRST_NAME).valueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(Abba, aaBb), first);\n\t\tNSArray<Employee> last = (NSArray<Employee>) Company.EMPLOYEES.atSort(Employee.LAST_NAME,Employee.FIRST_NAME).valueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(aaBb, Abba), last);\n\t}","id":27101,"modified_method":"@Test\n\tpublic void testAtSort() {\n\t\tNSArray<Employee> first = Company.EMPLOYEES.atSort(Employee.FIRST_NAME).arrayValueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(Abba, aaBb), first);\n\t\tNSArray<Employee> last = Company.EMPLOYEES.atSort(Employee.LAST_NAME,Employee.FIRST_NAME).arrayValueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(aaBb, Abba), last);\n\t}","commit_id":"ebe4854364fc13e4a898618f3e9b3f358f6735ee","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Test\n\tpublic void testAtRemoveNullValuesERXKeyOfU() {\n\t\t//These don't actually contain null values, but using remove null values should be benign!\n\t\tObject o = Company.EMPLOYEES.atRemoveNullValues(Employee.ROLES).dot(Role.EMPLOYEES).atFlatten().valueInObject(acme);\n\t\tNSArray m1 = (NSArray)o;\n\t\tassertFalse(m1.contains(larry));\n\t\tassertFalse(m1.contains(curly));\n\t\tassertTrue(m1.contains(moe));\n\t\tassertTrue(m1.count() == 2);\n\t\t\n\t\to = Company.EMPLOYEES.dot(Employee.ROLES).atFlatten().atRemoveNullValues(Role.EMPLOYEES).valueInObject(acme);\n\t\tNSArray m2 = (NSArray)o;\n\t\tassertTrue(m2.count() == 2);\n\t\tassertTrue(m2.objectAtIndex(0) instanceof NSArray);\n\t\tNSArray m3 = (NSArray)m2.objectAtIndex(0);\n\t\tassertTrue(m3.count() == 1);\n\t\tassertTrue(m3.objectAtIndex(0) instanceof Employee);\n\t\t\n\t\to = Company.EMPLOYEES.dot(Employee.BEST_SALES_TOTAL).valueInObject(shinraInc);\n\t\tNSArray<?> d4 = (NSArray<?>) o;\n\t\tassertTrue(d4.count() == 4);\n\t\tNSArray<BigDecimal> d2 = (NSArray<BigDecimal>) Company.EMPLOYEES.dot(Employee.BEST_SALES_TOTAL).atRemoveNullValues().valueInObject(shinraInc);\n\t\tNSArray<BigDecimal> d2plus = Company.EMPLOYEES.dot(Employee.BEST_SALES_TOTAL).atRemoveNullValues(new ERXKey<NSArray<BigDecimal>>(\"plus\")).valueInObject(shinraInc);\n\t\tassertEquals(d2, d2plus);\n\t}","id":27102,"modified_method":"@Test\n\tpublic void testAtRemoveNullValuesERXKeyOfU() {\n\t\t//These don't actually contain null values, but using remove null values should be benign!\n\t\tObject o = Company.EMPLOYEES.atRemoveNullValues(Employee.ROLES).dot(Role.EMPLOYEES).atFlatten().valueInObject(acme);\n\t\tNSArray m1 = (NSArray)o;\n\t\tassertFalse(m1.contains(larry));\n\t\tassertFalse(m1.contains(curly));\n\t\tassertTrue(m1.contains(moe));\n\t\tassertTrue(m1.count() == 2);\n\t\t\n\t\to = Company.EMPLOYEES.dot(Employee.ROLES).atFlatten().atRemoveNullValues(Role.EMPLOYEES).valueInObject(acme);\n\t\tNSArray m2 = (NSArray)o;\n\t\tassertTrue(m2.count() == 2);\n\t\tassertTrue(m2.objectAtIndex(0) instanceof NSArray);\n\t\tNSArray m3 = (NSArray)m2.objectAtIndex(0);\n\t\tassertTrue(m3.count() == 1);\n\t\tassertTrue(m3.objectAtIndex(0) instanceof Employee);\n\t\t\n\t\to = Company.EMPLOYEES.dot(Employee.BEST_SALES_TOTAL).valueInObject(shinraInc);\n\t\tNSArray<?> d4 = (NSArray<?>) o;\n\t\tassertTrue(d4.count() == 4);\n\t\tNSArray<BigDecimal> d2 = Company.EMPLOYEES.dot(Employee.BEST_SALES_TOTAL).atRemoveNullValues().arrayValueInObject(shinraInc);\n\t\tNSArray<BigDecimal> d2plus = Company.EMPLOYEES.dot(Employee.BEST_SALES_TOTAL).atRemoveNullValues(new ERXKey<NSArray<BigDecimal>>(\"plus\")).valueInObject(shinraInc);\n\t\tassertEquals(d2, d2plus);\n\t}","commit_id":"ebe4854364fc13e4a898618f3e9b3f358f6735ee","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Test\n\tpublic void testAtFlatten() {\n\t\tNSArray<Paycheck> shinraPaychecks = (NSArray<Paycheck>) Company.EMPLOYEES.dot(Employee.PAYCHECKS).atFlatten().valueInObject(shinraInc);\n\t\tassertTrue(ERXArrayUtilities.arraysAreIdenticalSets(paychecks, shinraPaychecks));\n\t\tNSArray<Employee> duplicateEmployees = (NSArray<Employee>) Company.EMPLOYEES.dot(Employee.COMPANY).dot(Company.EMPLOYEES).atFlatten().valueInObject(shinraInc);\n\t\tassertEquals(16, duplicateEmployees.count());\n\t}","id":27103,"modified_method":"@Test\n\tpublic void testAtFlatten() {\n\t\tNSArray<Paycheck> shinraPaychecks = Company.EMPLOYEES.dot(Employee.PAYCHECKS).atFlatten().arrayValueInObject(shinraInc);\n\t\tassertTrue(ERXArrayUtilities.arraysAreIdenticalSets(paychecks, shinraPaychecks));\n\t\tNSArray<Employee> duplicateEmployees = Company.EMPLOYEES.dot(Employee.COMPANY).dot(Company.EMPLOYEES).atFlatten().arrayValueInObject(shinraInc);\n\t\tassertEquals(16, duplicateEmployees.count());\n\t}","commit_id":"ebe4854364fc13e4a898618f3e9b3f358f6735ee","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Test\n\tpublic void testAtSortInsensitiveAsc() {\n\t\tNSArray<Employee> first = (NSArray<Employee>) Company.EMPLOYEES.atSortInsensitiveAsc(Employee.FIRST_NAME).valueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(aaBb, Abba), first);\n\t\tNSArray<Employee> last = (NSArray<Employee>) Company.EMPLOYEES.atSortInsensitiveAsc(Employee.LAST_NAME,Employee.FIRST_NAME).valueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(Abba, aaBb), last);\n\t}","id":27104,"modified_method":"@Test\n\tpublic void testAtSortInsensitiveAsc() {\n\t\tNSArray<Employee> first = Company.EMPLOYEES.atSortInsensitiveAsc(Employee.FIRST_NAME).arrayValueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(aaBb, Abba), first);\n\t\tNSArray<Employee> last = Company.EMPLOYEES.atSortInsensitiveAsc(Employee.LAST_NAME,Employee.FIRST_NAME).arrayValueInObject(sortCo);\n\t\tassertEquals(new NSArray<Employee>(Abba, aaBb), last);\n\t}","commit_id":"ebe4854364fc13e4a898618f3e9b3f358f6735ee","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void testAddCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar Event Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_8_startDateMonth\", RuntimeVariables.replace(\"May\"));\n\t\tselenium.select(\"_8_startDateDay\", RuntimeVariables.replace(\"label=31\"));\n\t\tselenium.select(\"_8_startDateYear\", RuntimeVariables.replace(\"2010\"));\n\t\tselenium.select(\"_8_startDateHour\", RuntimeVariables.replace(\"12\"));\n\t\tselenium.select(\"_8_startDateMinute\", RuntimeVariables.replace(\":00\"));\n\t\tselenium.select(\"_8_startDateAmPm\", RuntimeVariables.replace(\"PM\"));\n\t\tselenium.clickAt(\"_8_allDayCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"_8_title\",\n\t\t\tRuntimeVariables.replace(\"Hashi's birthday bash\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_description\",\n\t\t\tRuntimeVariables.replace(\"This is so much fun!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hashi's birthday bash\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"5/31/10\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//dd[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is so much fun!\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","id":27105,"modified_method":"public void testAddCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/calendar-event-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Event Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar Event Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"May\"));\n\t\tselenium.select(\"//select[@id='_8_startDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=31\"));\n\t\tselenium.select(\"//select[@id='_8_startDateYear']\",\n\t\t\tRuntimeVariables.replace(\"2010\"));\n\t\tselenium.select(\"//select[@name='_8_startDateHour']\",\n\t\t\tRuntimeVariables.replace(\"12\"));\n\t\tselenium.select(\"//select[@name='_8_startDateMinute']\",\n\t\t\tRuntimeVariables.replace(\":00\"));\n\t\tselenium.select(\"//select[@name='_8_startDateAmPm']\",\n\t\t\tRuntimeVariables.replace(\"PM\"));\n\t\tselenium.clickAt(\"//input[@id='_8_allDayCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"All Day Event Checkbox\"));\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Hashi's birthday bash\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"This is so much fun!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hashi's birthday bash\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"5/31/10\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//dd[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is so much fun!\"),\n\t\t\tselenium.getText(\"//p[2]\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCommunityCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\tassertTrue(selenium.isTextPresent(\"Calendar Event Community\"));\n\t}","id":27106,"modified_method":"public void testAddCommunityCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Custom Site\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Calendar Event Community\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCommunityMBBan() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Community\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t}","id":27107,"modified_method":"public void testAddCommunityMBBan() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Custom Site\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"MB Ban Community\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCommunityMBCategoryThreadSubscription()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Category Thread MB Subscription Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Category Thread MB Subscription Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Category Thread MB Subscription Community\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t}","id":27108,"modified_method":"public void testAddCommunityMBCategoryThreadSubscription()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Custom Site\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Category Thread MB Subscription Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Category Thread MB Subscription Community\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCommunityMembershipRequest() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Membership Request Community Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_134_description\",\n\t\t\tRuntimeVariables.replace(\"Community Description\"));\n\t\tselenium.type(\"_134_description\",\n\t\t\tRuntimeVariables.replace(\"Membership Request Community Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_134_type\",\n\t\t\tRuntimeVariables.replace(\"label=Restricted\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Membership Request Community Name\"));\n\t}","id":27109,"modified_method":"public void testAddCommunityMembershipRequest() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Custom Site\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Membership Request Community Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//textarea[@id='_134_description']\",\n\t\t\tRuntimeVariables.replace(\"Community Description\"));\n\t\tselenium.type(\"//textarea[@id='_134_description']\",\n\t\t\tRuntimeVariables.replace(\"Membership Request Community Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_134_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Restricted\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Membership Request Community Name\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMBCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Public Pages - Live (1)\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Public Pages - Live (1)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Category\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Category\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t}","id":27110,"modified_method":"public void testAddMBCategory() throws Exception {\n\t\tselenium.open(\"/web/mb-ban-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Category\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Category\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMBCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Category Thread MB Subscription Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Public Pages - Live (1)\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Public Pages - Live (1)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Category Test\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='messageBoardsCategoriesPanel']/div[2]/div/div[1]/table/tbody/tr[3]/td[1]/a/strong\"));\n\t}","id":27111,"modified_method":"public void testAddMBCategory() throws Exception {\n\t\tselenium.open(\"/web/category-thread-mb-subscription-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Category Test\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMBCategoryThread() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Category Thread MB Subscription Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Public Pages - Live (1)\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Public Pages - Live (1)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Test\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='messageBoardsCategoriesPanel']/div[2]/div/div[1]/table/tbody/tr[3]/td[1]/a/strong\"));\n\t\tselenium.clickAt(\"//div[@id='messageBoardsCategoriesPanel']/div[2]/div/div[1]/table/tbody/tr[3]/td[1]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Category Subscription Thread\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_19_textArea']\",\n\t\t\tRuntimeVariables.replace(\"This is to test the subscription table.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Subscription Thread\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Subscription Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Subscription Thread\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is to test the subscription table.\"),\n\t\t\tselenium.getText(\"//td[2]/div[2]\"));\n\t}","id":27112,"modified_method":"public void testAddMBCategoryThread() throws Exception {\n\t\tselenium.open(\"/web/category-thread-mb-subscription-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Test\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Category Subscription Thread\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__19_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is to test the subscription table.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Subscription Thread\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is to test the subscription table.\"),\n\t\t\tselenium.getText(\"//td[2]/div[2]\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t}","id":27113,"modified_method":"public void testAddPageCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.type(\"//input[@id='_156_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageMB() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Communities\",\n\t\t\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"MB Ban Community\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Community\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Manage Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@name='_134_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request processed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean messageBoardsTestPagePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li/div/div[3]/a\");\n\n\t\t\t\tif (messageBoardsTestPagePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//li/ul/li/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Message Boards Test Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li/div/div[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":27114,"modified_method":"public void testAddPageMB() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Manage Pages\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.type(\"//input[@name='_156_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageMB() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Communities\",\n\t\t\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Category Thread MB Subscription Community\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Category Thread MB Subscription Community\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Manage Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@name='_134_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request processed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean messageBoardsPagePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li/div/div[3]/a\");\n\n\t\t\t\tif (messageBoardsPagePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//li/ul/li/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Message Boards Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li/div/div[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":27115,"modified_method":"public void testAddPageMB() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Category Thread MB Subscription Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Manage Pages\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.type(\"//input[@name='_156_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar Event Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Calendar']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Calendar']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":27116,"modified_method":"public void testAddPortletCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/calendar-event-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Event Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar Event Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Calendar']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Calendar']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletMB() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Category Thread MB Subscription Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Public Pages - Live (1)\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Public Pages - Live (1)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"More\\u2026\"),\n\t\t\tselenium.getText(\"//a[@id='_145_addApplication']\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\\u2026\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":27117,"modified_method":"public void testAddPortletMB() throws Exception {\n\t\tselenium.open(\"/web/category-thread-mb-subscription-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletMB() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Public Pages - Live (1)\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Public Pages - Live (1)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"More\\u2026\"),\n\t\t\tselenium.getText(\"//a[@id='_145_addApplication']\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\\u2026\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":27118,"modified_method":"public void testAddPortletMB() throws Exception {\n\t\tselenium.open(\"/web/mb-ban-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUserMBBan() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users\", RuntimeVariables.replace(\"Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"mbbansn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"mbban@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"mbbanfn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_middleName']\",\n\t\t\tRuntimeVariables.replace(\"mbbanmn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"mbbanln\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"mbbansn\",\n\t\t\tselenium.getValue(\"//input[@name='_125_screenName']\"));\n\t\tassertEquals(\"mbban@liferay.com\",\n\t\t\tselenium.getValue(\"//input[@name='_125_emailAddress']\"));\n\t\tassertEquals(\"mbbanfn\",\n\t\t\tselenium.getValue(\"//input[@name='_125_firstName']\"));\n\t\tassertEquals(\"mbbanmn\",\n\t\t\tselenium.getValue(\"//input[@name='_125_middleName']\"));\n\t\tassertEquals(\"mbbanln\",\n\t\t\tselenium.getValue(\"//input[@name='_125_lastName']\"));\n\t}","id":27119,"modified_method":"public void testAddUserMBBan() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@name='_125_screenName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"mbbansn\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@name='_125_emailAddress']\",\n\t\t\t\t\tRuntimeVariables.replace(\"mbban@liferay.com\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@name='_125_firstName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"mbbanfn\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@name='_125_middleName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"mbbanmn\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@name='_125_lastName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"mbbanln\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(\"mbbansn\",\n\t\t\t\t\tselenium.getValue(\"//input[@name='_125_screenName']\"));\n\t\t\t\tassertEquals(\"mbban@liferay.com\",\n\t\t\t\t\tselenium.getValue(\"//input[@name='_125_emailAddress']\"));\n\t\t\t\tassertEquals(\"mbbanfn\",\n\t\t\t\t\tselenium.getValue(\"//input[@name='_125_firstName']\"));\n\t\t\t\tassertEquals(\"mbbanmn\",\n\t\t\t\t\tselenium.getValue(\"//input[@name='_125_middleName']\"));\n\t\t\t\tassertEquals(\"mbbanln\",\n\t\t\t\t\tselenium.getValue(\"//input[@name='_125_lastName']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_passwordLink']\", \"Password\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Password\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_password1']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Sign Out\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"mbban@liferay.com\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean iAgreeVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreeVisible1) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean newPasswordVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!newPasswordVisible1) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean passwordReminderVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"reminderQueryAnswer\");\n\n\t\t\t\tif (!passwordReminderVisible1) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Please choose a reminder query.\"),\n\t\t\t\t\tselenium.getText(\"//form/div[1]\"));\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Sign Out\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean rememberMeCheckboxChecked2 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked2) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUserMRPassword() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Users\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_125_keywords\",\n\t\t\tRuntimeVariables.replace(\"requestmembersn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"_125_screenName\");\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"User Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"passwordLink\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_password1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_125_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_125_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":27120,"modified_method":"public void testAddUserMRPassword() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"requestmembersn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"User Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\"Password\"));\n\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\tRuntimeVariables.replace(\"Password\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_password1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUserMR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_125_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"_125_screenName\",\n\t\t\tRuntimeVariables.replace(\"requestmembersn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_125_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"requestmemberea@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_125_firstName\",\n\t\t\tRuntimeVariables.replace(\"requestmemberfn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_125_lastName\",\n\t\t\tRuntimeVariables.replace(\"requestmemberln\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_125_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\tselenium.select(\"_125_birthdayDay\", RuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"_125_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\tselenium.select(\"_125_male\", RuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"requestmembersn\", selenium.getValue(\"_125_screenName\"));\n\t\tassertEquals(\"requestmemberea@liferay.com\",\n\t\t\tselenium.getValue(\"_125_emailAddress\"));\n\t\tassertEquals(\"requestmemberfn\", selenium.getValue(\"_125_firstName\"));\n\t\tassertEquals(\"requestmemberln\", selenium.getValue(\"_125_lastName\"));\n\t}","id":27121,"modified_method":"public void testAddUserMR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"requestmembersn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"requestmemberea@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"requestmemberfn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"requestmemberln\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\tRuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"requestmembersn\",\n\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\tassertEquals(\"requestmemberea@liferay.com\",\n\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\tassertEquals(\"requestmemberfn\",\n\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\tassertEquals(\"requestmemberln\",\n\t\t\tselenium.getValue(\"//input[@id='_125_lastName']\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssignMembersCommunityUserAction()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Community\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Users\"),\n\t\t\tselenium.getText(\"//li[@id='_134_tabs1usersTabsId']/span/span/a\"));\n\t\tselenium.clickAt(\"//li[@id='_134_tabs1usersTabsId']/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Available\", RuntimeVariables.replace(\"Available\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_keywords']\",\n\t\t\tRuntimeVariables.replace(\"mbbansn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"//input[@name='_134_rowIds']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_134_rowIds']\",\n\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_134_rowIds']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":27122,"modified_method":"public void testAssignMembersCommunityUserAction()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Community\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Memberships\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Members\"),\n\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add Members\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_174_keywords']\",\n\t\t\tRuntimeVariables.replace(\"mbbansn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"//input[@name='_174_rowIds']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_174_rowIds']\",\n\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_174_rowIds']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testBanThisUser() throws Exception {\n\t\tselenium.open(\"/web/mb-ban-community/message-boards-test-page/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Category\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Thread\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"MB Ban Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Ban this User\"),\n\t\t\tselenium.getText(\"//div[2]/span[3]/a/span\"));\n\t\tselenium.clickAt(\"//div[2]/span[3]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Ban this User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":27123,"modified_method":"public void testBanThisUser() throws Exception {\n\t\tselenium.open(\"/web/mb-ban-community/message-boards-test-page/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Category\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Thread\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"MB Ban Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Ban this User\"),\n\t\t\tselenium.getText(\"//td[1]/div/div/span[2]/a/span\"));\n\t\tselenium.clickAt(\"//td[1]/div/div/span[2]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Ban this User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLoginUser() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_58_rememberMeCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"_58_rememberMeCheckbox\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":27124,"modified_method":"public void testLoginUser() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_rememberMeCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLogoutUser() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":27125,"modified_method":"public void testLogoutUser() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddCommunityMBBanTest.class);\n\t\ttestSuite.addTestSuite(AddUserMBBanTest.class);\n\t\ttestSuite.addTestSuite(AddUserMBBanPasswordTest.class);\n\t\ttestSuite.addTestSuite(AssignMembersCommunityUserActionTest.class);\n\t\ttestSuite.addTestSuite(AddPageMBTest.class);\n\t\ttestSuite.addTestSuite(AddPortletMBTest.class);\n\t\ttestSuite.addTestSuite(AddMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(MB_SignInTest.class);\n\t\ttestSuite.addTestSuite(MB_AddMBCategoryThreadTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(BanThisUserTest.class);\n\t\ttestSuite.addTestSuite(ViewBannedUsersUserTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(MB_SignInTest.class);\n\t\ttestSuite.addTestSuite(MB_ViewMBPortletBanTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\n\t\treturn testSuite;\n\t}","id":27126,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddCommunityMBBanTest.class);\n\t\ttestSuite.addTestSuite(AddUserMBBanTest.class);\n\t\ttestSuite.addTestSuite(AssignMembersCommunityUserActionTest.class);\n\t\ttestSuite.addTestSuite(AddPageMBTest.class);\n\t\ttestSuite.addTestSuite(AddPortletMBTest.class);\n\t\ttestSuite.addTestSuite(AddMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(MB_SignInTest.class);\n\t\ttestSuite.addTestSuite(MB_AddMBCategoryThreadTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(BanThisUserTest.class);\n\t\ttestSuite.addTestSuite(ViewBannedUsersUserTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(MB_SignInTest.class);\n\t\ttestSuite.addTestSuite(MB_ViewMBPortletBanTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMB_AddMBCategoryThread() throws Exception {\n\t\tselenium.open(\"/web/mb-ban-community/message-boards-test-page/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Category\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Thread\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_19_textArea']\",\n\t\t\tRuntimeVariables.replace(\"This is to test the mbban table.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Thread\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","id":27127,"modified_method":"public void testMB_AddMBCategoryThread() throws Exception {\n\t\tselenium.open(\"/web/mb-ban-community/message-boards-test-page/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Category\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Ban Thread\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__19_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is to test the mbban table.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Ban Thread\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is to test the mbban table.\"),\n\t\t\tselenium.getText(\"//td[2]/div[2]\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMR_LoginUser() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_login\",\n\t\t\tRuntimeVariables.replace(\"requestmemberea@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_58_rememberMeCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"_58_rememberMeCheckbox\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='I Agree']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"reminderQueryAnswer\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":27128,"modified_method":"public void testMR_LoginUser() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"requestmemberea@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_rememberMeCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='I Agree']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"reminderQueryAnswer\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMR_LogoutUser() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":27129,"modified_method":"public void testMR_LogoutUser() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMR_RequestCommunity() throws Exception {\n\t\tselenium.open(\"/user/requestmembersn/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Available Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Available Communities\",\n\t\t\tRuntimeVariables.replace(\"Available Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_29_name\",\n\t\t\tRuntimeVariables.replace(\"Membership Request Community Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//form/span/span[2]/span/input\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Request Membership\"),\n\t\t\tselenium.getText(\"//span/a/span\"));\n\t\tselenium.clickAt(\"//span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Request Membership\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_29_comments\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Community Description comments request to join\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-success'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request was sent. You will receive a reply by email.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-success'])[2]\"));\n\t}","id":27130,"modified_method":"public void testMR_RequestCommunity() throws Exception {\n\t\tselenium.open(\"/user/requestmembersn/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Available Sites\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Available Sites\",\n\t\t\tRuntimeVariables.replace(\"Available Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_29_name']\",\n\t\t\tRuntimeVariables.replace(\"Membership Request Community Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//form/span/span[2]/span/input\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Request Membership\"),\n\t\t\tselenium.getText(\"//span/a/span\"));\n\t\tselenium.clickAt(\"//span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Request Membership\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_29_comments']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Community Description comments request to join\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-success'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request was sent. You will receive a reply by email.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-success'])[2]\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSubscribeMBCategoryThreadActions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Category Thread MB Subscription Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Public Pages - Live (1)\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Public Pages - Live (1)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Test\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//td[7]/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Subscribe\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Subscription Thread\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Subscription Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe\"),\n\t\t\tselenium.getText(\"//td[2]/span/a/span\"));\n\t}","id":27131,"modified_method":"public void testSubscribeMBCategoryThreadActions()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/category-thread-mb-subscription-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Test\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Subscribe\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Subscription Thread\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Subscription Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe\"),\n\t\t\tselenium.getText(\"//td[2]/span/a/span\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar Event Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hashi's birthday bash\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"5/31/10\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//dd[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is so much fun!\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","id":27132,"modified_method":"public void testViewCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/calendar-event-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Event Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar Event Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hashi's birthday bash\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"5/31/10\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//dd[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is so much fun!\"),\n\t\t\tselenium.getText(\"//p[2]\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_134_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar Event Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Hashi's birthday bash\"),\n\t\t\tselenium.getText(\"//div[1]/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//dd[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"None\"),\n\t\t\tselenium.getText(\"//dd[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"All Day: All Day (Time Zone Sensitive)\"),\n\t\t\tselenium.getText(\"//dd[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is so much fun!\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","id":27133,"modified_method":"public void testViewCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/calendar-event-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Event Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar Event Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hashi's birthday bash\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"5/31/10\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//dd[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is so much fun!\"),\n\t\t\tselenium.getText(\"//p[2]\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewSubscribeMBCategoryThread() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Category Thread MB Subscription Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Public Pages - Live (1)\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Public Pages - Live (1)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Test\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Subscription Thread\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Subscription Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe\"),\n\t\t\tselenium.getText(\"//td[2]/span/a/span\"));\n\t}","id":27134,"modified_method":"public void testViewSubscribeMBCategoryThread() throws Exception {\n\t\tselenium.open(\"/web/category-thread-mb-subscription-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Test\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Subscription Thread\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Subscription Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe\"),\n\t\t\tselenium.getText(\"//td[2]/span/a/span\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewSubscribeMBCategoryThread() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Category Thread MB Subscription Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Public Pages - Live (1)\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Public Pages - Live (1)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Test\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Subscription Thread\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Subscription Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe\"),\n\t\t\tselenium.getText(\"//td[2]/span/a/span\"));\n\t}","id":27135,"modified_method":"public void testViewSubscribeMBCategoryThread() throws Exception {\n\t\tselenium.open(\"/web/category-thread-mb-subscription-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Test\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Subscription Thread\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Subscription Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe\"),\n\t\t\tselenium.getText(\"//td[2]/span/a/span\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewUserRequest() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Membership Request Community Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View Membership Requests\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"requestmemberfn requestmemberln (requestmemberea@liferay.com)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Community Description comments request to join\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t}","id":27136,"modified_method":"public void testViewUserRequest() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Membership Request Community Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Memberships\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//span[3]/a/span\",\n\t\t\tRuntimeVariables.replace(\"There are 1 membership requests pending.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"requestmemberfn requestmemberln (requestmemberea@liferay.com)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Community Description comments request to join\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewUserRequest() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Membership Request Community Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View Membership Requests\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"requestmemberfn requestmemberln (requestmemberea@liferay.com)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Community Description comments request to join\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t}","id":27137,"modified_method":"public void testViewUserRequest() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Membership Request Community Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Memberships\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//span[3]/a/span\",\n\t\t\tRuntimeVariables.replace(\"There are 1 membership requests pending.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"requestmemberfn requestmemberln (requestmemberea@liferay.com)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Community Description comments request to join\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t}","commit_id":"ccdb08757dea08bc6da3aaaebd9c7aaa2e6dfcdc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Bookmark\"));\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.type(\"_28_comments\",\n\t\t\tRuntimeVariables.replace(\"This is a test bookmark!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t}","id":27138,"modified_method":"public void testAddEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add Bookmark\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Bookmark\"));\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.type(\"_28_comments\",\n\t\t\tRuntimeVariables.replace(\"This is a test bookmark!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Subfolder']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test folder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test folder!\"));\n\t}","id":27139,"modified_method":"public void testAddFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add Folder\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test folder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test folder!\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddIncorrectURL() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_28_url\", RuntimeVariables.replace(\"www.movies.com\"));\n\t\tselenium.type(\"_28_url\", RuntimeVariables.replace(\"www.movies.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t}","id":27140,"modified_method":"public void testAddIncorrectURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add Bookmark\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_28_url\", RuntimeVariables.replace(\"www.movies.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t}","id":27141,"modified_method":"public void testAddNullEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add Bookmark\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Subfolder']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t}","id":27142,"modified_method":"public void testAddNullFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add Folder\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid name.\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullSubfolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Subfolder']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t}","id":27143,"modified_method":"public void testAddNullSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add Subfolder\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid name.\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullTitle() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_28_url\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.movies.com\"));\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.movies.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t\tselenium.clickAt(\"//input[@value='Cancel']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.movies.com\"));\n\t}","id":27144,"modified_method":"public void testAddNullTitle() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_28_url\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.movies.com\"));\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.movies.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t\tselenium.clickAt(\"//input[@value='Cancel']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.movies.com\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullURL() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_28_name\",\n\t\t\tRuntimeVariables.replace(\"Null Entry Test\"));\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Null Entry Test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t}","id":27145,"modified_method":"public void testAddNullURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add Bookmark\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Null Entry Test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Manage Pages\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/a/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_88_name_en_US\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Test Page\"));\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":27146,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input\", RuntimeVariables.replace(\"Bookmarks Test Page\"));\n\t\tselenium.clickAt(\"//span[2]/span/span/span/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Application\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Community-Bookmarks\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@id=\\\"Community-Bookmarks\\\"]/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[1]/div/div[1]/div\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"//td[1]/div/div[1]/div\"));\n\t}","id":27147,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_145_addApplication\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='Community-Bookmarks']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@id='Community-Bookmarks']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[1]/div/div/div\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"//td[1]/div/div/div\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Bookmark 2\"));\n\t\tselenium.type(\"_28_url\", RuntimeVariables.replace(\"http://www.digg.com\"));\n\t\tselenium.type(\"_28_comments\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test bookmark that will be deleted!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":27148,"modified_method":"public void testAddSecondEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add Bookmark\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Bookmark 2\"));\n\t\tselenium.type(\"_28_url\", RuntimeVariables.replace(\"http://www.digg.com\"));\n\t\tselenium.type(\"_28_comments\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test bookmark that will be deleted!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSubfolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Subfolder']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test subfolder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test subfolder!\"));\n\t}","id":27149,"modified_method":"public void testAddSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add Subfolder\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test subfolder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test subfolder!\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertEntries() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Entries\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[5]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t\tselenium.clickAt(\"link=Recent Entries\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t}","id":27150,"modified_method":"public void testAssertEntries() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Entries\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t\tselenium.clickAt(\"link=Recent Entries\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Folder\"));\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t}","id":27151,"modified_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCombineToParentFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"_28_mergeWithParentFolderCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edited Test SubFolder\"));\n\t}","id":27152,"modified_method":"public void testCombineToParentFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Subfolder\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[8]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[8]/ul/li[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"_28_mergeWithParentFolderCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t\tassertFalse(selenium.isTextPresent(\"Edited Test Subfolder\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteAll() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Bookmarks Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean FolderPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!FolderPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 2:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":27153,"modified_method":"public void testDeleteAll() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Bookmarks Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean FolderPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!FolderPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 2:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//td[6]/ul/li/strong\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[5]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t}","id":27154,"modified_method":"public void testDeleteEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//td[5]/ul/li/strong/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[8]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[8]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Bookmark\"));\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.narutofan.com\"));\n\t\tselenium.type(\"_28_comments\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test bookmark!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t}","id":27155,"modified_method":"public void testEditEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[8]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[8]/ul/li[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_28_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Bookmark\"));\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.narutofan.com\"));\n\t\tselenium.type(\"_28_comments\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test bookmark!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test folder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is an edited test folder!\"));\n\t}","id":27156,"modified_method":"public void testEditFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test folder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is an edited test folder!\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditSubfolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Subfolder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test subfolder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is an edited test subfolder!\"));\n\t}","id":27157,"modified_method":"public void testEditSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[8]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[8]/ul/li[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_28_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Subfolder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test subfolder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is an edited test subfolder!\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Export / Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_86_DELETE_PORTLET_DATA\", RuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\bookmarks\\\\dependencies\\\\Bookmarks-Selenium.portlet.lar\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":27158,"modified_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Export / Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\bookmarks\\\\dependencies\\\\Bookmarks-Selenium.portlet.lar\"));\n\t\tselenium.clickAt(\"_86_DELETE_PORTLET_DATACheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"_86_PORTLET_DATACheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Folders\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//tr[4]/td[6]/ul/li/strong/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[5]/ul/li[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"folder\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Home\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Home\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tselenium.clickAt(\"link=Test Folder\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t}","id":27159,"modified_method":"public void testMoveEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//tr[4]/td[5]/ul/li/strong\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[8]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[8]/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"folder\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Home\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Bookmarks Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tselenium.clickAt(\"link=Test Folder\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchEntries() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_28_keywords1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_keywords1\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.clickAt(\"//input[@value='Search Folders']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[5]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t}","id":27160,"modified_method":"public void testSearchEntries() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_28_keywords1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_keywords1\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchNullEntries() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_28_keywords1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_keywords1\", RuntimeVariables.replace(\"Test1\"));\n\t\tselenium.clickAt(\"//input[@value='Search Folders']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[5]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t}","id":27161,"modified_method":"public void testSearchNullEntries() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_28_keywords1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_keywords1\", RuntimeVariables.replace(\"Test1\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Bookmarks Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean FolderPresent = selenium.isElementPresent(\"//b\");\n\n\t\t\t\tif (!FolderPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Remove']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[2]/ul/li[1]/a/span\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li[1]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Manage Pages\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/ul/li[3]/a/span\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/ul/li[3]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//li[@id='_88_tabs3pageTabsId']/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.clickAt(\"link=Return to Full Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":27162,"modified_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Bookmarks Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean folder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!folder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[8]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[8]/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean folder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!folder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[8]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[8]/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean folder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!folder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[8]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[8]/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean folder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!folder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[8]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[8]/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean folder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!folder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[8]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[8]/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[3]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[3]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Guest\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_treeExpandAll']/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//li/ul/li[1]/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//li[@id='_88_tabs3pageTabsId']/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//li/ul/li[1]/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//li[@id='_88_tabs3pageTabsId']/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//li/ul/li[1]/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//li[@id='_88_tabs3pageTabsId']/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//li/ul/li[1]/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//li[@id='_88_tabs3pageTabsId']/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//li/ul/li[1]/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//li[@id='_88_tabs3pageTabsId']/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\n\t\t\tcase 11:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"424eb3a0623546474261ae83330fdf146ca6c312","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDuplicateServerInstanceVH() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_135_webId\", RuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_webId\", RuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_virtualHostname\",\n\t\t\tRuntimeVariables.replace(\"localhost\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_mx\", RuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Your request failed to complete.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid virtual host.\"));\n\t}","id":27163,"modified_method":"public void testAddDuplicateServerInstanceVH() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\tRuntimeVariables.replace(\"localhost\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please enter a valid virtual host.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDuplicateServerInstanceWebID() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_webId\", RuntimeVariables.replace(\"liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_virtualHostname\",\n\t\t\tRuntimeVariables.replace(\"localhost1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_mx\", RuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Your request failed to complete.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid web ID.\"));\n\t}","id":27164,"modified_method":"public void testAddDuplicateServerInstanceWebID() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\tRuntimeVariables.replace(\"localhost1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid web ID.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Subfolder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Bookmark\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Bookmark\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test bookmark!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Bookmark\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:http://www.liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","id":27165,"modified_method":"public void testAddEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div/div[2]/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Bookmark\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_name']\",\n\t\t\tRuntimeVariables.replace(\"Test Bookmark\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_url']\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_28_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a test bookmark!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Bookmark\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:http://www.liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Folder\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[2]/div/div[2]/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/div/div[2]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test folder!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test folder!\"));\n\t}","id":27166,"modified_method":"public void testAddFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[2]/div/div[2]/div/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/div/div[2]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_name']\",\n\t\t\tRuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_28_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a test folder!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test folder!\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddIncorrectURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[3]/div/div[2]/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_url\", RuntimeVariables.replace(\"www.movies.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid URL.\"),\n\t\t\tselenium.getText(\"//div[@class='aui-form-validator-message url']\"));\n\t}","id":27167,"modified_method":"public void testAddIncorrectURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div/div[2]/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Bookmark\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_url']\",\n\t\t\tRuntimeVariables.replace(\"www.movies.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tassertEquals(RuntimeVariables.replace(\"(Required)\"),\n\t\t\tselenium.getText(\"//label/span\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddInvalidServerInstanceVH() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_135_webId\", RuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_webId\", RuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_virtualHostname\", RuntimeVariables.replace(\"!@#$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_mx\", RuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Your request failed to complete.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid virtual host.\"));\n\t}","id":27168,"modified_method":"public void testAddInvalidServerInstanceVH() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\tRuntimeVariables.replace(\"!@#$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please enter a valid virtual host.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[3]/div/div[2]/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"This field is required.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-form-validator-message required']\"));\n\t}","id":27169,"modified_method":"public void testAddNullEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div/div[2]/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Bookmark\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tassertEquals(RuntimeVariables.replace(\"(Required)\"),\n\t\t\tselenium.getText(\"//label/span\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Folder\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[2]/div/div[2]/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/div/div[2]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"This field is required.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-form-validator-message required']\"));\n\t}","id":27170,"modified_method":"public void testAddNullFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[2]/div/div[2]/div/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/div/div[2]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tassertEquals(RuntimeVariables.replace(\"(Required)\"),\n\t\t\tselenium.getText(\"//label/span\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullServerInstanceMD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_135_webId\", RuntimeVariables.replace(\"lifera1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_webId\", RuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_virtualHostname\",\n\t\t\tRuntimeVariables.replace(\"localhost1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_mx\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"This field is required.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-form-validator-message required']\"));\n\t}","id":27171,"modified_method":"public void testAddNullServerInstanceMD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"lifera1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\tRuntimeVariables.replace(\"localhost1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_mx']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\"//label/div\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullServerInstanceVH() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_135_webId\", RuntimeVariables.replace(\"lifera1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_webId\", RuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_virtualHostname\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_mx\", RuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Your request failed to complete.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid virtual host.\"));\n\t}","id":27172,"modified_method":"public void testAddNullServerInstanceVH() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"lifera1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please enter a valid virtual host.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullServerInstanceWebID() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_webId\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_135_virtualHostname\",\n\t\t\tRuntimeVariables.replace(\"localhost1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_virtualHostname\",\n\t\t\tRuntimeVariables.replace(\"localhost1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_mx\", RuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Your request failed to complete.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid web ID.\"));\n\t}","id":27173,"modified_method":"public void testAddNullServerInstanceWebID() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_webId']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_135_virtualHostname']\",\n\t\t\tRuntimeVariables.replace(\"localhost1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\tRuntimeVariables.replace(\"localhost1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"liferay1.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid web ID.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[3]/div/div[2]/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"This field is required.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-form-validator-message required']\"));\n\t}","id":27174,"modified_method":"public void testAddNullSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div/div[2]/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tassertEquals(RuntimeVariables.replace(\"(Required)\"),\n\t\t\tselenium.getText(\"//label/span\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullTitle() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[3]/div/div[2]/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.movies.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.movies.com\"));\n\t}","id":27175,"modified_method":"public void testAddNullTitle() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div/div[2]/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Bookmark\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_url']\",\n\t\t\tRuntimeVariables.replace(\"http://www.movies.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.movies.com\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Bookmark\"),\n\t\t\tselenium.getText(\"//div[3]/div/div[2]/ul/li[5]/a\"));\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Null Entry Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"This field is required.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-form-validator-message required']\"));\n\t}","id":27176,"modified_method":"public void testAddNullURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div/div[2]/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Bookmark\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_name']\",\n\t\t\tRuntimeVariables.replace(\"Null Entry Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tassertEquals(RuntimeVariables.replace(\"(Required)\"),\n\t\t\tselenium.getText(\"//label/span\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Subfolder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Bookmark\"),\n\t\t\tselenium.getText(\"//div[3]/div/div[2]/ul/li[5]/a\"));\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Bookmark\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Bookmark 2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_url\", RuntimeVariables.replace(\"http://www.digg.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test bookmark that will be deleted!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":27177,"modified_method":"public void testAddSecondEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div/div[2]/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Bookmark\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_name']\",\n\t\t\tRuntimeVariables.replace(\"Test Bookmark 2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_url']\",\n\t\t\tRuntimeVariables.replace(\"http://www.digg.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_28_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test bookmark that will be deleted!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Bookmark 2\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:http://www.digg.com\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddServerCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Log Levels\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add Category\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_137_loggerName\",\n\t\t\tRuntimeVariables.replace(\"CategorTest!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_137_loggerName\",\n\t\t\tRuntimeVariables.replace(\"CategoryTest!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":27178,"modified_method":"public void testAddServerCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\tRuntimeVariables.replace(\"Server Administration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Log Levels\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Log Levels\",\n\t\t\tRuntimeVariables.replace(\"Log Levels\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add Category\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_137_loggerName']\",\n\t\t\tRuntimeVariables.replace(\"CategorTest!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_137_loggerName']\",\n\t\t\tRuntimeVariables.replace(\"CategoryTest!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddServerInstance() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_135_webId\", RuntimeVariables.replace(\"test.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_webId\", RuntimeVariables.replace(\"test.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_virtualHostname\", RuntimeVariables.replace(\"guest\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_mx\", RuntimeVariables.replace(\"test.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=test.com\"));\n\t}","id":27179,"modified_method":"public void testAddServerInstance() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"test.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_webId']\",\n\t\t\tRuntimeVariables.replace(\"test.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\tRuntimeVariables.replace(\"guest\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"test.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=test.com\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Subfolder\"),\n\t\t\tselenium.getText(\"//div[3]/div/div[2]/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test subfolder!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test subfolder!\"));\n\t}","id":27180,"modified_method":"public void testAddSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div/div[2]/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/div/div[2]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_name']\",\n\t\t\tRuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_28_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a test subfolder!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test subfolder!\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertEntries() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Entries\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t\tselenium.clickAt(\"link=Recent Entries\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t}","id":27181,"modified_method":"public void testAssertEntries() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Entries\",\n\t\t\tRuntimeVariables.replace(\"My Entries\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"exact:http://www.digg.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:http://www.liferay.com\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t\tselenium.clickAt(\"link=Recent Entries\",\n\t\t\tRuntimeVariables.replace(\"Recent Entries\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"exact:http://www.digg.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:http://www.liferay.com\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edited Test Folder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edited Test Bookmark\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"http://www.narutofan.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","id":27182,"modified_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edited Test Bookmark\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"http://www.narutofan.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testBrowseInstallMorePlugins() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Plugins Installation\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Install More Portlets']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portlet Plugins\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//form/div[2]\"));\n\t\tselenium.clickAt(\"link=Theme Plugins\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//form/div[2]\"));\n\t\tselenium.clickAt(\"link=Layout Template Plugins\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"No layout template plugins were found.\"),\n\t\t\tselenium.getText(\"//form/div[2]\"));\n\t\tselenium.clickAt(\"link=Hook Plugins\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//form/div[2]\"));\n\t\tselenium.clickAt(\"link=Web Plugins\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//form/div[2]\"));\n\t}","id":27183,"modified_method":"public void testBrowseInstallMorePlugins() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Plugins Installation\",\n\t\t\tRuntimeVariables.replace(\"Plugins Installation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Install More Portlets']\",\n\t\t\tRuntimeVariables.replace(\"Install More Portlets\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portlet Plugins\",\n\t\t\tRuntimeVariables.replace(\"Portlet Plugins\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"No portlet plugins were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"link=Theme Plugins\",\n\t\t\tRuntimeVariables.replace(\"Theme Plugins\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"No theme plugins were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"link=Layout Template Plugins\",\n\t\t\tRuntimeVariables.replace(\"Layout Template Plugins\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"No layout template plugins were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"link=Hook Plugins\",\n\t\t\tRuntimeVariables.replace(\"Hook Plugins\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"No hook plugins were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"link=Web Plugins\",\n\t\t\tRuntimeVariables.replace(\"Web Plugins\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"No web plugins were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testBrowseServerInstance() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add']\"));\n\t}","id":27184,"modified_method":"public void testBrowseServerInstance() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add']\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testBrowseServerPluginsInstallation() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Plugins Installation\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Install More Portlets']\"));\n\t\tselenium.select(\"_136_page\", RuntimeVariables.replace(\"label=4\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Wiki\"));\n\t\tselenium.clickAt(\"link=Theme Plugins\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Install More Themes']\"));\n\t\tselenium.clickAt(\"link=Layout Template Plugins\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Install More Layout Templates']\"));\n\t}","id":27185,"modified_method":"public void testBrowseServerPluginsInstallation() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Plugins Installation\",\n\t\t\tRuntimeVariables.replace(\"Plugins Installation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Install More Portlets']\"));\n\t\tselenium.select(\"//select[@id='_136_page']\",\n\t\t\tRuntimeVariables.replace(\"label=4\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Wiki\"));\n\t\tselenium.clickAt(\"link=Theme Plugins\",\n\t\t\tRuntimeVariables.replace(\"Theme Plugins\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Install More Themes']\"));\n\t\tselenium.clickAt(\"link=Layout Template Plugins\",\n\t\t\tRuntimeVariables.replace(\"Layout Template Plugins\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Install More Layout Templates']\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testBrowseServer() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Execute']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Log Levels\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Update Categories\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Add Category\"));\n\t\tselenium.clickAt(\"link=Update Categories\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Showing 1 - 20\"));\n\t\tassertTrue(selenium.isTextPresent(\"com.ecyrd.jspwiki\"));\n\t\tselenium.clickAt(\"link=Next\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Showing 21 - 40\"));\n\t\tassertTrue(selenium.isTextPresent(\"com.liferay.portal.editor\"));\n\t\tselenium.clickAt(\"link=Properties\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=System Properties\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Portal Properties\"));\n\t\tselenium.clickAt(\"link=System Properties\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Showing 1 - 20\"));\n\t\tassertTrue(selenium.isTextPresent(\"catalina.home\"));\n\t\tselenium.clickAt(\"link=Next\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Showing 21 - 40\"));\n\t\tassertTrue(selenium.isTextPresent(\"env.BASEDIR\"));\n\t\tselenium.clickAt(\"link=Portal Properties\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Showing 1 - 20\"));\n\t\tassertTrue(selenium.isTextPresent(\"admin.email.from.address\"));\n\t\tselenium.clickAt(\"link=Next\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Showing 21 - 40\"));\n\t\tassertTrue(selenium.isTextPresent(\"auth.failure\"));\n\t\tselenium.clickAt(\"link=Data Migration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=File Uploads\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Configure the file upload settings.\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"link=Mail\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Configure the mail server settings.\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"link=OpenOffice\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Enabling OpenOffice integration provides document conversion functionality.\"));\n\t\tassertTrue(selenium.isElementPresent(\"_137_enabledCheckbox\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"link=Shutdown\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Shutdown']\"));\n\t}","id":27186,"modified_method":"public void testBrowseServer() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\tRuntimeVariables.replace(\"Server Administration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Resources\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Execute']\",\n\t\t\tRuntimeVariables.replace(\"Execute\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Log Levels\",\n\t\t\tRuntimeVariables.replace(\"Log Levels\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Update Categories\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Add Category\"));\n\t\tselenium.clickAt(\"link=Update Categories\",\n\t\t\tRuntimeVariables.replace(\"Update Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Showing 1 - 20\"));\n\t\tassertTrue(selenium.isTextPresent(\"com.ecyrd.jspwiki\"));\n\t\tselenium.clickAt(\"link=Next\", RuntimeVariables.replace(\"Next\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Showing 21 - 40\"));\n\t\tassertTrue(selenium.isTextPresent(\"com.liferay.portal.cluster\"));\n\t\tselenium.clickAt(\"link=Properties\",\n\t\t\tRuntimeVariables.replace(\"Properties\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=System Properties\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Portal Properties\"));\n\t\tselenium.clickAt(\"link=System Properties\",\n\t\t\tRuntimeVariables.replace(\"System Properties\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Showing 1 - 20\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"com.liferay.portal.kernel.util.StreamUtil.buffer.size\"));\n\t\tselenium.clickAt(\"link=Next\", RuntimeVariables.replace(\"Next\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Showing 21 - 40\"));\n\t\tassertTrue(selenium.isTextPresent(\"env.COMPUTERNAME\"));\n\t\tselenium.clickAt(\"link=Portal Properties\",\n\t\t\tRuntimeVariables.replace(\"Portal Properties\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Showing 1 - 20\"));\n\t\tassertTrue(selenium.isTextPresent(\"admin.email.from.address\"));\n\t\tselenium.clickAt(\"link=Next\", RuntimeVariables.replace(\"Next\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Showing 21 - 40\"));\n\t\tassertTrue(selenium.isTextPresent(\"aim.password\"));\n\t\tselenium.clickAt(\"link=Data Migration\",\n\t\t\tRuntimeVariables.replace(\"Data Migration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=File Uploads\",\n\t\t\tRuntimeVariables.replace(\"File Uploads\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Configure the file upload settings.\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"link=Mail\", RuntimeVariables.replace(\"Mail\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Configure the mail server settings.\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"link=External Services\",\n\t\t\tRuntimeVariables.replace(\"External Services\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Enabling OpenOffice integration provides document conversion functionality.\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_137_openOfficeEnabledCheckbox']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Save']\"));\n\t\tselenium.clickAt(\"link=Shutdown\", RuntimeVariables.replace(\"Shutdown\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Shutdown']\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCombineToParentFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_28_mergeWithParentFolderCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edited Test SubFolder\"));\n\t}","id":27187,"modified_method":"public void testCombineToParentFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[4]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_28_mergeWithParentFolderCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Merge with Parent Folder Checkbox\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edited Test SubFolder\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t}","id":27188,"modified_method":"public void testDeleteEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[5]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Subfolder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Bookmark\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.narutofan.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test bookmark!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t}","id":27189,"modified_method":"public void testEditEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[5]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_name']\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Bookmark\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_url']\",\n\t\t\tRuntimeVariables.replace(\"http://www.narutofan.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_28_description']\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test bookmark!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//td[4]/span/ul/li/strong/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test folder!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is an edited test folder!\"));\n\t}","id":27190,"modified_method":"public void testEditFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[4]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_name']\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_28_description']\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test folder!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is an edited test folder!\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditServerCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Log Levels\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Update Categories\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"CategoryTest!\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tselenium.select(\"_137_logLevelCategoryTest!\",\n\t\t\tRuntimeVariables.replace(\"label=ALL\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\tassertEquals(\"ALL\",\n\t\t\tselenium.getSelectedLabel(\"_137_logLevelCategoryTest!\"));\n\t}","id":27191,"modified_method":"public void testEditServerCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\tRuntimeVariables.replace(\"Server Administration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Log Levels\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Log Levels\",\n\t\t\tRuntimeVariables.replace(\"Log Levels\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Update Categories\",\n\t\t\tRuntimeVariables.replace(\"Update Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"CategoryTest!\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tselenium.select(\"//select[@name='_137_logLevelCategoryTest!']\",\n\t\t\tRuntimeVariables.replace(\"label=ALL\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"ALL\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@name='_137_logLevelCategoryTest!']\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditServerInstance() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=test.com\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_135_virtualHostname\",\n\t\t\tRuntimeVariables.replace(\"edited\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_virtualHostname\", RuntimeVariables.replace(\"edited\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_135_mx\", RuntimeVariables.replace(\"Edited.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited.com\"));\n\t}","id":27192,"modified_method":"public void testEditServerInstance() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=test.com\", RuntimeVariables.replace(\"test.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_135_virtualHostname']\",\n\t\t\tRuntimeVariables.replace(\"edited\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\tRuntimeVariables.replace(\"edited\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"Edited.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited.com\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//td[4]/span/ul/li/strong/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Subfolder\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test subfolder!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is an edited test subfolder!\"));\n\t}","id":27193,"modified_method":"public void testEditSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[4]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_name']\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Subfolder\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_28_description']\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test subfolder!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is an edited test subfolder!\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\tselenium.getText(\"link=Export / Import\"));\n\t\tselenium.clickAt(\"link=Export / Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\bookmarks\\\\dependencies\\\\Bookmarks-Selenium.portlet.lar\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_DELETE_PORTLET_DATACheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":27194,"modified_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//menu/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//menu/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_86_importFileName']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\bookmarks\\\\dependencies\\\\Bookmarks-Selenium.portlet.lar\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Delete portlet data before importing Checkbox\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Subfolder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//tr[4]/td[5]/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[5]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Subfolder\"),\n\t\t\tselenium.getText(\"_28_folderName\"));\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectPopUp(\"\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Home\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks Home\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Test Folder\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"_28_folderName\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"_28_folderName\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t}","id":27195,"modified_method":"public void testMoveEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//tr[4]/td[5]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[4]/td[5]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Subfolder\"),\n\t\t\tselenium.getText(\"//a[@id='_28_folderName']\"));\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectPopUp(\"\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Home\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks Home\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_28_folderName']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"//a[@id='_28_folderName']\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchEntries() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_keywords1\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t}","id":27196,"modified_method":"public void testSearchEntries() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test Bookmark\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Bookmark 2\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchNullEntries() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_28_keywords1\", RuntimeVariables.replace(\"Test1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t}","id":27197,"modified_method":"public void testSearchNullEntries() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"Bookmarks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_28_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"Test1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"//td[3]/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"//tr[4]/td[3]/a\"));\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownBookmarkFolderCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean bookmarksFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean bookmarksFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean bookmarksFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean bookmarksFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":27198,"modified_method":"public void testTearDownBookmarkFolderCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Bookmarks\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean bookmarksFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean bookmarksFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean bookmarksFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean bookmarksFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"fca93230b117e37350429a4ddd6d42e9d156eb6a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchTags() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Tags Message Board Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_keywords1\", RuntimeVariables.replace(\"selenium1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_keywords1\", RuntimeVariables.replace(\"selenium2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_keywords1\", RuntimeVariables.replace(\"selenium3\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_keywords1\", RuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t}","id":27199,"modified_method":"public void testSearchTags() throws Exception {\n\t\tselenium.open(\"/web/tags-message-board-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"selenium1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"selenium2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"selenium3\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSignIn() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@type='checkbox']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":27200,"modified_method":"public void testSignIn() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSignOut() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":27201,"modified_method":"public void testSignOut() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSignOut() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":27202,"modified_method":"public void testSignOut() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSignOut() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":27203,"modified_method":"public void testSignOut() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewActivityBlogsEntry() throws Exception {\n\t\tselenium.open(\"/web/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Activities Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Activities Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Joe wrote a new blog entry, Blogs Entry Title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[2]/a\"));\n\t}","id":27204,"modified_method":"public void testViewActivityBlogsEntry() throws Exception {\n\t\tselenium.open(\"/web/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Activities Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Activities Page\",\n\t\t\tRuntimeVariables.replace(\"Activities Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Joe wrote a new blog entry, Blogs Entry Title, in Liferay.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[2]/a\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewActivityMBCategoryThreadMessage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Activities Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Activities Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Joe wrote a new message board post, MB Category Thread Message Subject.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[1]/a\"));\n\t}","id":27205,"modified_method":"public void testViewActivityMBCategoryThreadMessage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Activities Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Activities Page\",\n\t\t\tRuntimeVariables.replace(\"Activities Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Joe wrote a new message board post, MB Category Thread Message Subject, in Liferay.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[1]/a\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAddress1MyAccount() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"addressesLink\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"United States\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"_2_addressCountryId0\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"California\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"_2_addressRegionId0\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"1220 Brea Canyon Rd\",\n\t\t\tselenium.getValue(\"_2_addressStreet1_0\"));\n\t\tassertEquals(\"Ste 12\", selenium.getValue(\"_2_addressStreet2_0\"));\n\t\tassertEquals(\"Business\", selenium.getSelectedLabel(\"_2_addressTypeId0\"));\n\t\tassertEquals(\"91789\", selenium.getValue(\"_2_addressZip0\"));\n\t\tassertEquals(\"Walnut\", selenium.getValue(\"_2_addressStreet3_0\"));\n\t\tassertEquals(\"Los Angeles\", selenium.getValue(\"_2_addressCity0\"));\n\t\tassertEquals(\"United States\",\n\t\t\tselenium.getSelectedLabel(\"_2_addressCountryId0\"));\n\t\tassertTrue(selenium.isChecked(\"_2_addressPrimary0\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"_2_addressMailing0Checkbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"California\",\n\t\t\tselenium.getSelectedLabel(\"_2_addressRegionId0\"));\n\t}","id":27206,"modified_method":"public void testViewAddress1MyAccount() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\",\n\t\t\tRuntimeVariables.replace(\"My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_2_addressesLink']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_addressesLink']\",\n\t\t\t\t\"Addresses\"));\n\t\tselenium.clickAt(\"//a[@id='_2_addressesLink']\",\n\t\t\tRuntimeVariables.replace(\"Addresses\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"United States\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_addressCountryId0']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"California\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_addressRegionId0']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"1220 Brea Canyon Rd\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet1_0']\"));\n\t\tassertEquals(\"Ste 12\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet2_0']\"));\n\t\tassertEquals(\"Business\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressTypeId0']\"));\n\t\tassertEquals(\"91789\", selenium.getValue(\"//input[@id='_2_addressZip0']\"));\n\t\tassertEquals(\"Walnut\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet3_0']\"));\n\t\tassertEquals(\"Los Angeles\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressCity0']\"));\n\t\tassertEquals(\"United States\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressCountryId0']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_2_addressPrimary0']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_addressMailing0Checkbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"California\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressRegionId0']\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAddress2MyAccount() throws Exception {\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"addressesLink\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"Canada\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"_2_addressCountryId1\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"Ontario\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"_2_addressRegionId1\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"123 Lets\", selenium.getValue(\"_2_addressStreet1_1\"));\n\t\tassertEquals(\"Other\", selenium.getSelectedLabel(\"_2_addressTypeId1\"));\n\t\tassertEquals(\"897 Hope\", selenium.getValue(\"_2_addressStreet2_1\"));\n\t\tassertEquals(\"00000\", selenium.getValue(\"_2_addressZip1\"));\n\t\tassertEquals(\"7896 This\", selenium.getValue(\"_2_addressStreet3_1\"));\n\t\tassertEquals(\"Works\", selenium.getValue(\"_2_addressCity1\"));\n\t\tassertEquals(\"Canada\", selenium.getSelectedLabel(\"_2_addressCountryId1\"));\n\t\tassertEquals(\"Ontario\", selenium.getSelectedLabel(\"_2_addressRegionId1\"));\n\t}","id":27207,"modified_method":"public void testViewAddress2MyAccount() throws Exception {\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\",\n\t\t\tRuntimeVariables.replace(\"My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_2_addressesLink']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_addressesLink']\",\n\t\t\t\t\"Addresses\"));\n\t\tselenium.clickAt(\"//a[@id='_2_addressesLink']\",\n\t\t\tRuntimeVariables.replace(\"Addresses\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"Canada\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_addressCountryId1']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"Ontario\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_addressRegionId1']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"123 Lets\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet1_1']\"));\n\t\tassertEquals(\"Other\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressTypeId1']\"));\n\t\tassertEquals(\"897 Hope\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet2_1']\"));\n\t\tassertEquals(\"00000\", selenium.getValue(\"//input[@id='_2_addressZip1']\"));\n\t\tassertEquals(\"7896 This\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet3_1']\"));\n\t\tassertEquals(\"Works\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressCity1']\"));\n\t\tassertEquals(\"Canada\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressCountryId1']\"));\n\t\tassertEquals(\"Ontario\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressRegionId1']\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAddress3MyAccount() throws Exception {\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"addressesLink\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"United States\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"_2_addressCountryId2\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"California\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"_2_addressRegionId2\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"1220 Brea Canyon Rd\",\n\t\t\tselenium.getValue(\"_2_addressStreet1_2\"));\n\t\tassertEquals(\"Business\", selenium.getSelectedLabel(\"_2_addressTypeId2\"));\n\t\tassertEquals(\"Ste 12\", selenium.getValue(\"_2_addressStreet2_2\"));\n\t\tassertEquals(\"91789\", selenium.getValue(\"_2_addressZip2\"));\n\t\tassertEquals(\"Walnut\", selenium.getValue(\"_2_addressStreet3_2\"));\n\t\tassertEquals(\"Los Angeles\", selenium.getValue(\"_2_addressCity2\"));\n\t\tassertEquals(\"United States\",\n\t\t\tselenium.getSelectedLabel(\"_2_addressCountryId2\"));\n\t\tassertEquals(\"California\",\n\t\t\tselenium.getSelectedLabel(\"_2_addressRegionId2\"));\n\t}","id":27208,"modified_method":"public void testViewAddress3MyAccount() throws Exception {\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\",\n\t\t\tRuntimeVariables.replace(\"My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_2_addressesLink']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_addressesLink']\",\n\t\t\t\t\"Addresses\"));\n\t\tselenium.clickAt(\"//a[@id='_2_addressesLink']\",\n\t\t\tRuntimeVariables.replace(\"Addresses\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"United States\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_addressCountryId2']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"California\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_addressRegionId2']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"1220 Brea Canyon Rd\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet1_2']\"));\n\t\tassertEquals(\"Business\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressTypeId2']\"));\n\t\tassertEquals(\"Ste 12\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet2_2']\"));\n\t\tassertEquals(\"91789\", selenium.getValue(\"//input[@id='_2_addressZip2']\"));\n\t\tassertEquals(\"Walnut\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet3_2']\"));\n\t\tassertEquals(\"Los Angeles\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressCity2']\"));\n\t\tassertEquals(\"United States\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressCountryId2']\"));\n\t\tassertEquals(\"California\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressRegionId2']\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAnnouncementDelivery() throws Exception {\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Joe Bloggs\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"announcementsLink\", RuntimeVariables.replace(\"\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"_2_announcementsTypegeneralEmailCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"_2_announcementsTypegeneralSmsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_2_announcementsTypegeneralWebsiteCheckbox' and @disabled='']\"));\n\t\tassertTrue(selenium.isChecked(\"_2_announcementsTypenewsSmsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"_2_announcementsTypenewsSmsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_2_announcementsTypenewsWebsiteCheckbox' and @disabled='']\"));\n\t\tassertTrue(selenium.isChecked(\"_2_announcementsTypetestEmailCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"_2_announcementsTypetestSmsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_2_announcementsTypetestWebsiteCheckbox' and @disabled='']\"));\n\t}","id":27209,"modified_method":"public void testViewAnnouncementDelivery() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\",\n\t\t\tRuntimeVariables.replace(\"My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_2_announcementsLink']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_announcementsLink']\",\n\t\t\t\t\"Announcements\"));\n\t\tselenium.clickAt(\"//a[@id='_2_announcementsLink']\",\n\t\t\tRuntimeVariables.replace(\"Announcements\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_announcementsTypegeneralEmailCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_announcementsTypegeneralSmsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_2_announcementsTypegeneralWebsiteCheckbox' and @disabled='']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_announcementsTypenewsEmailCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_announcementsTypenewsSmsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_2_announcementsTypenewsWebsiteCheckbox' and @disabled='']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_announcementsTypetestEmailCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_announcementsTypetestSmsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_2_announcementsTypetestWebsiteCheckbox' and @disabled='']\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAnnouncementsEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Announcements Entry Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Announcements Entry Name\"),\n\t\t\tselenium.getText(\"//div/h3/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"General Announcements Entry Content\"), selenium.getText(\"//p\"));\n\t}","id":27210,"modified_method":"public void testViewAnnouncementsEntry() throws Exception {\n\t\tselenium.open(\n\t\t\t\"/web/announcements-entry-community/announcements-entry-page\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Announcements Entry Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Announcements Entry Page\",\n\t\t\tRuntimeVariables.replace(\"Announcements Entry Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Announcements Entry Name\"),\n\t\t\tselenium.getText(\"//div/h3/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//p\", \"Announcements Entry Content\"));\n\t\tselenium.clickAt(\"//div/h3/a\",\n\t\t\tRuntimeVariables.replace(\"Announcements Entry Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Liferay']\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAssignMembersCommunityOrganization()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Groups Orgs\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Community Groups Orgs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Organizations\"),\n\t\t\tselenium.getText(\"//li[2]/span/span/a\"));\n\t\tselenium.clickAt(\"//li[2]/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_134_rowIds']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Organization Groups Orgs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Organization\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t}","id":27211,"modified_method":"public void testViewAssignMembersCommunityOrganization()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Groups Orgs\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Community Groups Orgs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[7]/span/ul/li/strong/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Memberships\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Organizations\"),\n\t\t\tselenium.getText(\"link=Organizations\"));\n\t\tselenium.clickAt(\"link=Organizations\",\n\t\t\tRuntimeVariables.replace(\"Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_174_rowIds']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Organization Groups Orgs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Organization\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAssignMembersCommunityUserGroup()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Groups User Groups\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Community Groups User Groups\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\"//div/div/div/ul/li[3]/span/span/a\"));\n\t\tselenium.clickAt(\"//div/div/div/ul/li[3]/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"User Groups\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Available\", RuntimeVariables.replace(\"Available\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_rowIds']\",\n\t\t\tRuntimeVariables.replace(\"User Group Groups User Groups\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group Groups User Groups\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_134_rowIds']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group Groups User Groups\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a User Group Groups User Groups user group.\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t}","id":27212,"modified_method":"public void testViewAssignMembersCommunityUserGroup()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Groups User Groups\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Community Groups User Groups\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Memberships\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\"//li[4]/span/a\"));\n\t\tselenium.clickAt(\"//li[4]/span/a\",\n\t\t\tRuntimeVariables.replace(\"User Groups\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_174_name']\",\n\t\t\tRuntimeVariables.replace(\"User Group Groups User Groups\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group Groups User Groups\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_174_rowIds']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group Groups User Groups\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a User Group Groups User Groups user group.\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewBlogsEntryScope() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Group Page Scope Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Page Scope Current Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Scope Current Page\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a blogs entry scope current page test.\"),\n\t\t\tselenium.getText(\"//p\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Page Scope Default\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Page Scope Default\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Scope Current Page\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[@class='entry-title']/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is a blogs entry scope current page test.\"));\n\t}","id":27213,"modified_method":"public void testViewBlogsEntryScope() throws Exception {\n\t\tselenium.open(\"/web/group-page-scope-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Page Scope Current Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Page Scope Current Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Page Scope Current Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Scope Current Page\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a blogs entry scope current page test.\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Page Scope Default\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Page Scope Default\",\n\t\t\tRuntimeVariables.replace(\"Blogs Page Scope Default\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Scope Current Page\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@class='entry-title']/h2/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is a blogs entry scope current page test.\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewBlogsPortletNull() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Blogs Portlet Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Portlet Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You do not have the roles required to access this portlet.\"));\n\t}","id":27214,"modified_method":"public void testViewBlogsPortletNull() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Portlet Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Portlet Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Portlet Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You do not have the roles required to access this portlet.\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewBlogsPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Blogs Portlet Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Portlet Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"You do not have the roles required to access this portlet.\"));\n\t}","id":27215,"modified_method":"public void testViewBlogsPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Portlet Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Portlet Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Portlet Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"You do not have the roles required to access this portlet.\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewBookmarksFolderEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Entry Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Open\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Folder Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Folder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"http://www.liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Entry Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"http://www.liferay.com\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-asset-url']/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-asset-url']/a\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Liferay']\"));\n\t}","id":27216,"modified_method":"public void testViewBookmarksFolderEntry() throws Exception {\n\t\tselenium.open(\"/web/bookmarks-entry-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Bookmarks Entry Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks Entry Page\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Entry Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Folder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"http://www.liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Entry Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='lfr-asset-url']/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@class='lfr-asset-url']/a\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Liferay']\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewBookmarksFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Folder Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Open\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Folder Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertTrue(selenium.isPartialText(\"//tr[3]/td[1]/a\",\n\t\t\t\t\"Bookmarks Folder Description\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Folder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Folder Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","id":27217,"modified_method":"public void testViewBookmarksFolder() throws Exception {\n\t\tselenium.open(\"/web/bookmarks-folder-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Bookmarks Entry Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Bookmarks Entry Page\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Entry Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Folder Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertTrue(selenium.isPartialText(\"//tr[3]/td[1]/a\",\n\t\t\t\t\"Bookmarks Folder Description\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Folder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Folder Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCategoryItem() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Shopping Item Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Item Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Item Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Item Test\\n \\n This is an item test. \\n Limited: Time Only \\n\\n Price for 1 Items and Above: $9.99\\n \\n Availability: In Stock\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"In Stock\"),\n\t\t\tselenium.getText(\"//td[3]/div[1]\"));\n\t}","id":27218,"modified_method":"public void testViewCategoryItem() throws Exception {\n\t\tselenium.open(\"/web/shopping-item-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Shopping Item Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Item Page\",\n\t\t\tRuntimeVariables.replace(\"Shopping Item Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Categories\",\n\t\t\tRuntimeVariables.replace(\"Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//td[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"1111\"),\n\t\t\tselenium.getText(\"//td[1]/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Item Test\\n \\n This is an item test. \\n Limited: Time Only \\n\\n Price for 1 Items and Above: $9.99\\n \\n Availability: In Stock\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Item Test\\n \\n This is an item test. \\n Limited: Time Only \\n\\n Price for 1 Items and Above: $9.99\\n \\n Availability: In Stock\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"In Stock\"),\n\t\t\tselenium.getText(\"//td[3]/div[1]\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Shopping Category Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//td[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Category Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Category Test\\nThis is a category test.\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","id":27219,"modified_method":"public void testViewCategory() throws Exception {\n\t\tselenium.open(\"/web/shopping-category-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Shopping Category Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Category Page\",\n\t\t\tRuntimeVariables.replace(\"Shopping Category Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Category Test\\nThis is a category test.\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCheckOutOrder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Shopping Order Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Order Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Orders\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Order Number\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1234 Sesame Street\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1234 Sesame Street\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[5]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Gotham City:\"),\n\t\t\tselenium.getText(\"//tr[6]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Gotham City:\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[6]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CA\"),\n\t\t\tselenium.getText(\"//tr[7]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CA\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[7]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"90028\"),\n\t\t\tselenium.getText(\"//tr[8]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"90028\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[8]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"USA\"),\n\t\t\tselenium.getText(\"//tr[9]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"USA\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[9]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//tr[10]/td[2]\", \"626-589-1453\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[2]/table/tbody/tr[10]/td[2]\",\n\t\t\t\t\"626-589-1453\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Visa\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:************1111\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//form\",\n\t\t\t\t\"Please take care of my order.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$9.99\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$0.00\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$0.00\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$9.99\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[4]/td[2]\"));\n\t}","id":27220,"modified_method":"public void testViewCheckOutOrder() throws Exception {\n\t\tselenium.open(\"/web/shopping-order-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Shopping Order Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Order Page\",\n\t\t\tRuntimeVariables.replace(\"Shopping Order Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Orders\", RuntimeVariables.replace(\"Orders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Order Number\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1234 Sesame Street\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1234 Sesame Street\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[5]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Gotham City:\"),\n\t\t\tselenium.getText(\"//tr[6]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Gotham City:\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[6]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CA\"),\n\t\t\tselenium.getText(\"//tr[7]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CA\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[7]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"90028\"),\n\t\t\tselenium.getText(\"//tr[8]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"90028\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[8]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"USA\"),\n\t\t\tselenium.getText(\"//tr[9]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"USA\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[9]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//tr[10]/td[2]\", \"626-589-1453\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[2]/table/tbody/tr[10]/td[2]\",\n\t\t\t\t\"626-589-1453\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Visa\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:************1111\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//form\",\n\t\t\t\t\"Please take care of my order.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$9.99\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$0.00\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$0.00\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$9.99\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[4]/td[2]\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCoupon() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Shopping Coupon Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Coupon Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Coupons\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Coupon Code\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"Coupon Test\", selenium.getValue(\"_34_name\"));\n\t\tassertEquals(\"This is a coupon test.\",\n\t\t\tselenium.getValue(\"_34_description\"));\n\t\tassertEquals(\"0.00\", selenium.getValue(\"_34_minOrder\"));\n\t\tassertEquals(\"0.50\", selenium.getValue(\"_34_discount\"));\n\t\tassertEquals(\"Percentage\", selenium.getSelectedLabel(\"_34_discountType\"));\n\t}","id":27221,"modified_method":"public void testViewCoupon() throws Exception {\n\t\tselenium.open(\"/web/shopping-coupon-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Shopping Coupon Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Coupon Page\",\n\t\t\tRuntimeVariables.replace(\"Shopping Coupon Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Coupons\", RuntimeVariables.replace(\"Coupons\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Coupon Code\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"Coupon Test\", selenium.getValue(\"//input[@id='_34_name']\"));\n\t\tassertEquals(\"This is a coupon test.\",\n\t\t\tselenium.getValue(\"//textarea[@id='_34_description']\"));\n\t\tassertEquals(\"0.00\", selenium.getValue(\"//input[@id='_34_minOrder']\"));\n\t\tassertEquals(\"0.50\", selenium.getValue(\"//input[@id='_34_discount']\"));\n\t\tassertEquals(\"Percentage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_34_discountType']\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewDocument() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Document Library Document Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//a/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 document1.\"),\n\t\t\tselenium.getText(\"//a/div\"));\n\t}","id":27222,"modified_method":"public void testViewDocument() throws Exception {\n\t\tselenium.open(\"/web/document-library-document-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Folder1\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/a/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Document1.txt\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 document1.\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/span[4]\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewDocumentVersion() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Document Library Document Version Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test2 Document2.txt\"),\n\t\t\tselenium.getText(\"//a/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is test2 document2.\"),\n\t\t\tselenium.getText(\"//a/div\"));\n\t\tselenium.clickAt(\"//a/span/span\",\n\t\t\tRuntimeVariables.replace(\"Test2 Document2.txt\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//span[1]/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t}","id":27223,"modified_method":"public void testViewDocumentVersion() throws Exception {\n\t\tselenium.open(\"/web/document-library-document-version-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test2 Document2.txt\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test2 Document2.txt\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Document Library Folder Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Test1 Folder1\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//a[2]/strong\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Folder1\"),\n\t\t\tselenium.getText(\"//a[2]/strong\"));\n\t}","id":27224,"modified_method":"public void testViewFolder() throws Exception {\n\t\tselenium.open(\"/web/document-library-folder-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/a/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Folder1\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewLockDLDocument() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Control Panel\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"link=Control Panel\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Document Lock Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Open\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Folder1\"),\n\t\t\tselenium.getText(\"//a[2]/strong\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//a[2]/strong\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Test1 Document1.txt This is Test1 Document1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"0.0k\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Yes\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t}","id":27225,"modified_method":"public void testViewLockDLDocument() throws Exception {\n\t\tselenium.open(\"web/document-library-document-lock-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Lock Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Lock Page\",\n\t\t\tRuntimeVariables.replace(\"Document Lock Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Folder1\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Folder1\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/a/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewOrganization() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sample\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//ul[@class='lfr-component lfr-actions right&nbsp;&nbsp;show-arrow']/li/strong/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[2]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[3]\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sample\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//ul[@class='lfr-component lfr-actions right show-arrow']/li/strong/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[2]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[3]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[4]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[5]\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[6]\",\n\t\t\t\t\t\t\"Liferay Los Angeles\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[6]\",\n\t\t\t\t\t\t\"Liferay, Inc.\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[6]\",\n\t\t\t\t\t\t\"Organization Sample Test\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":27226,"modified_method":"public void testViewOrganization() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Sample\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[3]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Sample\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row']/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row']/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row']/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row']/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Liferay Los Angeles, Liferay, Inc., Organization Sample Test\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row']/td[6]\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPageLayout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Group Page Layout Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Layout Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='aui-w50 portlet-column portlet-column-first aui-dd-drop']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='aui-w50 portlet-column portlet-column-last aui-dd-drop']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-1' and @class='aui-w50 portlet-column portlet-column-first aui-dd-drop']//h1\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Navigation\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-2' and @class='aui-w50 portlet-column portlet-column-last aui-dd-drop']//h1\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='aui-w30 portlet-column portlet-column-first aui-dd-drop']\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='aui-w70 portlet-column portlet-column-last aui-dd-drop']\"));\n\t}","id":27227,"modified_method":"public void testViewPageLayout() throws Exception {\n\t\tselenium.open(\"/web/group-page-layout-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Page Layout Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Layout Page\",\n\t\t\tRuntimeVariables.replace(\"Page Layout Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='aui-w50 portlet-column portlet-column-first yui3-dd-drop']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='aui-w50 portlet-column portlet-column-last yui3-dd-drop']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='layout-column_column-1' and @class='portlet-dropzone portlet-column-content portlet-column-content-first']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Navigation\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='layout-column_column-2' and @class='portlet-dropzone portlet-column-content portlet-column-content-last']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='yui3-aui-w30 portlet-column portlet-column-first yui3-aui-dd-drop']\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='yui3-aui-w70 portlet-column portlet-column-last yui3-aui-dd-drop']\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewShortcut() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Document Library Shortcut Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a[2]/strong\",\n\t\t\tRuntimeVariables.replace(\"Test2 Folder2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//a/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 document1.\"),\n\t\t\tselenium.getText(\"//a/div\"));\n\t}","id":27228,"modified_method":"public void testViewShortcut() throws Exception {\n\t\tselenium.open(\"/web/document-library-shortcut-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[2]/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test2 Folder2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 document1.\"),\n\t\t\tselenium.getText(\"//a/span[3]\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewTags() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Tags Message Board Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"selenium\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='tags lfr-component']/ul/li[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium\"),\n\t\t\tselenium.getText(\"//div[@class='tags lfr-component']/ul/li[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium1\"),\n\t\t\tselenium.getText(\"//div[@class='tags lfr-component']/ul/li[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium2\"),\n\t\t\tselenium.getText(\"//div[@class='tags lfr-component']/ul/li[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium3\"),\n\t\t\tselenium.getText(\"//div[@class='tags lfr-component']/ul/li[4]\"));\n\t}","id":27229,"modified_method":"public void testViewTags() throws Exception {\n\t\tselenium.open(\"/web/tags-message-board-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"selenium\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//li[1]/div/span/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium\"),\n\t\t\tselenium.getText(\"//li[1]/div/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium1\"),\n\t\t\tselenium.getText(\"//li[2]/div/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium2\"),\n\t\t\tselenium.getText(\"//li[3]/div/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium3\"),\n\t\t\tselenium.getText(\"//li[4]/div/span/a\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=User Groups\",\n\t\t\tRuntimeVariables.replace(\"User Groups\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_127_name']\",\n\t\t\tRuntimeVariables.replace(\"User Group Sample Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group Sample Test\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=User Groups\",\n\t\t\tRuntimeVariables.replace(\"User Groups\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_127_name']\",\n\t\t\tRuntimeVariables.replace(\"User Group Sample Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group Sample Test\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"), selenium.getText(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"Liferay Los Angeles\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"Liferay, Inc.\"));\n\t}","id":27230,"modified_method":"public void testViewUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"User Group Sample Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group Sample Test\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"User Group Sample Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group Sample Test\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"), selenium.getText(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"Liferay Los Angeles\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"Liferay, Inc.\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCJournalFeedURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"WC Journal Feed Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Open\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"WC Journal Feed Community\"),\n\t\t\tselenium.getText(\"//div[1]/div/span/a\"));\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Feeds\", RuntimeVariables.replace(\"Feeds\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Feed Name\"),\n\t\t\tselenium.getText(\"//div[1]/h1/span\"));\n\n\t\tString URL = selenium.getValue(\"//div/input\");\n\t\tRuntimeVariables.setValue(\"URL\", URL);\n\t\tselenium.open(RuntimeVariables.getValue(\"URL\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Feed Name\"),\n\t\t\tselenium.getText(\"//x:h1\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Feed Description\"),\n\t\t\tselenium.getText(\"//x:h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content Name\"),\n\t\t\tselenium.getText(\"//x:h3/x:a\"));\n\t}","id":27231,"modified_method":"public void testViewWCJournalFeedURL() throws Exception {\n\t\tselenium.open(\"/web/wc-journal-feed-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"WC Journal Feed Community\"),\n\t\t\tselenium.getText(\"//strong/a/span\"));\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Feeds\", RuntimeVariables.replace(\"Feeds\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[4]/span/ul/li/strong/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Feed Name\"),\n\t\t\tselenium.getText(\"//div[1]/h1/span\"));\n\n\t\tString URL = selenium.getValue(\"//div/input\");\n\t\tRuntimeVariables.setValue(\"URL\", URL);\n\t\tselenium.open(RuntimeVariables.getValue(\"URL\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Feed Name\"),\n\t\t\tselenium.getText(\"//x:h1\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Feed Description\"),\n\t\t\tselenium.getText(\"//x:h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content Name\"),\n\t\t\tselenium.getText(\"//x:h3/x:a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content Content\"),\n\t\t\tselenium.getText(\"//x:div[2]/x:div[1]/x:div/x:p\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWebContentExpando() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Expando Web Content Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"First Expando Bank\"),\n\t\t\tselenium.getText(\"//div[1]/h1\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Create Account']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Michael\"),\n\t\t\tselenium.getText(\"//td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hashimoto\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$100.00\"),\n\t\t\tselenium.getText(\"//td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"JR\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Houn\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$1,000,000.00\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Michael\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Saechang\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$1,000,000.00\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]\"));\n\t\tassertTrue(selenium.isPartialText(\"//section/div/div/div/div[1]\",\n\t\t\t\t\"# of Accounts: 3\"));\n\t}","id":27232,"modified_method":"public void testViewWebContentExpando() throws Exception {\n\t\tselenium.open(\"/web/expando-web-content-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content Display Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"First Expando Bank\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/h1\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Create Account']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Michael\"),\n\t\t\tselenium.getText(\"//td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hashimoto\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$100.00\"),\n\t\t\tselenium.getText(\"//td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"JR\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Houn\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$1,000,000.00\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Michael\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Saechang\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$1,000,000.00\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]\"));\n\t\tassertTrue(selenium.isTextPresent(\"# of Accounts: 3\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWebContentImageAssociation() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Web Content Image Association Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[@class='portlet-section-body results-row last']/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Text Test\"),\n\t\t\tselenium.getText(\"//h1[@id='web-content-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Test:\"),\n\t\t\tselenium.getText(\"//h2[@id='image-title']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//a[@id='image']/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Gallery Image Test:\"),\n\t\t\tselenium.getText(\"//h2[@id='image-gallery-title']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//a[@id='image-gallery']/img\"));\n\t}","id":27233,"modified_method":"public void testViewWebContentImageAssociation() throws Exception {\n\t\tselenium.open(\"/web/web-content-image-association-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content Display Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Text Test\"),\n\t\t\tselenium.getText(\"//h1[@id='web-content-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Test:\"),\n\t\t\tselenium.getText(\"//h2[@id='image-title']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//a[@id='image']/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Gallery Image Test:\"),\n\t\t\tselenium.getText(\"//h2[@id='image-gallery-title']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//a[@id='image-gallery']/img\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWebForm() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Expando Web Form Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Form Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"There is existing form data. Please export and delete it before making changes to the fields.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[3]/div[2]/fieldset/div/div[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There is existing form data. Please export and delete it before making changes to the fields.\"),\n\t\t\tselenium.getText(\"//div[3]/div[2]/fieldset/div/div[1]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Export Data']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Delete Data']\"));\n\t}","id":27234,"modified_method":"public void testViewWebForm() throws Exception {\n\t\tselenium.open(\"/web/expando-web-form-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Form Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Form Page\",\n\t\t\tRuntimeVariables.replace(\"Web Form Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"There is existing form data. Please export and delete it before making changes to the fields.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[3]/div[2]/fieldset/div/div[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There is existing form data. Please export and delete it before making changes to the fields.\"),\n\t\t\tselenium.getText(\"//div[3]/div[2]/fieldset/div/div[1]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Export Data']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Delete Data']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[3]/span/span/button[1]\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[4]/span/span/button[1]\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[5]/span/span/button[1]\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWikiPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Wiki Wiki Page Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Page Test\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Front Page Text\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":27235,"modified_method":"public void testViewWikiPage() throws Exception {\n\t\tselenium.open(\"/web/wiki-wiki-page-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Page Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Page Test\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Front Page Text\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"30594f04a483485e9b6e2e2ef3aa34a4794e8937","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n   * @see StepInterface#init(org.pentaho.di.trans.step.StepMetaInterface , org.pentaho.di.trans.step.StepDataInterface)\n   */\n  public boolean init( StepMetaInterface smi, StepDataInterface sdi ) {\n    meta = (FilterRowsMeta) smi;\n    data = (FilterRowsData) sdi;\n\n    if ( super.init( smi, sdi ) ) {\n      // PDI-6785\n      // could it be a better idea to have a clone on the condition in data and do this on the first row?\n      meta.getCondition().clearFieldPositions();\n\n      List<StreamInterface> targetStreams = meta.getStepIOMeta().getTargetStreams();\n      data.trueStepname = targetStreams.get( 0 ).getStepname();\n      data.falseStepname = targetStreams.get( 1 ).getStepname();\n\n      meta.setTrueStepname( data.trueStepname );\n      meta.setFalseStepname( data.falseStepname );\n\n      data.chosesTargetSteps =\n        targetStreams.get( 0 ).getStepMeta() != null || targetStreams.get( 1 ).getStepMeta() != null;\n      return true;\n    }\n    return false;\n  }","id":27236,"modified_method":"/**\n   * @see StepInterface#init(org.pentaho.di.trans.step.StepMetaInterface , org.pentaho.di.trans.step.StepDataInterface)\n   */\n  public boolean init( StepMetaInterface smi, StepDataInterface sdi ) {\n    meta = (FilterRowsMeta) smi;\n    data = (FilterRowsData) sdi;\n\n    if ( super.init( smi, sdi ) ) {\n      // PDI-6785\n      // could it be a better idea to have a clone on the condition in data and do this on the first row?\n      meta.getCondition().clearFieldPositions();\n\n      List<StreamInterface> targetStreams = meta.getStepIOMeta().getTargetStreams();\n      data.trueStepname = targetStreams.get( 0 ).getStepname();\n      data.falseStepname = targetStreams.get( 1 ).getStepname();\n\n      data.chosesTargetSteps =\n        targetStreams.get( 0 ).getStepMeta() != null || targetStreams.get( 1 ).getStepMeta() != null;\n      return true;\n    }\n    return false;\n  }","commit_id":"3c46aa03c8f54ecb00995aa01388c5cd61b15222","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void ok() {\n    if ( Utils.isEmpty( wStepname.getText() ) ) {\n      return;\n    }\n\n    if ( wCondition.getLevel() > 0 ) {\n      wCondition.goUp();\n    } else {\n      String trueStepname = wTrueTo.getText();\n      if ( trueStepname.length() == 0 ) {\n        trueStepname = null;\n      }\n      String falseStepname = wFalseTo.getText();\n      if ( falseStepname.length() == 0 ) {\n        falseStepname = null;\n      }\n\n      List<StreamInterface> targetStreams = input.getStepIOMeta().getTargetStreams();\n\n      targetStreams.get( 0 ).setStepMeta( transMeta.findStep( trueStepname ) );\n      targetStreams.get( 1 ).setStepMeta( transMeta.findStep( falseStepname ) );\n\n      stepname = wStepname.getText(); // return value\n      input.setCondition( condition );\n\n      dispose();\n    }\n  }","id":27237,"modified_method":"private void ok() {\n    if ( Utils.isEmpty( wStepname.getText() ) ) {\n      return;\n    }\n\n    if ( wCondition.getLevel() > 0 ) {\n      wCondition.goUp();\n    } else {\n      String trueStepname = wTrueTo.getText();\n      if ( trueStepname.length() == 0 ) {\n        trueStepname = null;\n      }\n      String falseStepname = wFalseTo.getText();\n      if ( falseStepname.length() == 0 ) {\n        falseStepname = null;\n      }\n\n      List<StreamInterface> targetStreams = input.getStepIOMeta().getTargetStreams();\n\n      targetStreams.get( 0 ).setStepMeta( transMeta.findStep( trueStepname ) );\n      targetStreams.get( 1 ).setStepMeta( transMeta.findStep( falseStepname ) );\n\n      input.setTrueStepname( trueStepname );\n      input.setFalseStepname( falseStepname );\n\n      stepname = wStepname.getText(); // return value\n      input.setCondition( condition );\n\n      dispose();\n    }\n  }","commit_id":"3c46aa03c8f54ecb00995aa01388c5cd61b15222","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void readRep( Repository rep, IMetaStore metaStore, ObjectId id_step, List<DatabaseMeta> databases ) throws KettleException {\n    try {\n      allocate();\n\n      List<StreamInterface> targetStreams = getStepIOMeta().getTargetStreams();\n\n      targetStreams.get( 0 ).setSubject( rep.getStepAttributeString( id_step, \"send_true_to\" ) );\n      targetStreams.get( 1 ).setSubject( rep.getStepAttributeString( id_step, \"send_false_to\" ) );\n\n      this.trueStepname = targetStreams.get( 0 ).getStepname();\n      this.falseStepname = targetStreams.get( 1 ).getStepname();\n\n      condition = rep.loadConditionFromStepAttribute( id_step, \"id_condition\" );\n\n    } catch ( Exception e ) {\n      throw new KettleException( BaseMessages.getString(\n        PKG, \"FilterRowsMeta.Exception.UnexpectedErrorInReadingStepInfoFromRepository\" ), e );\n    }\n  }","id":27238,"modified_method":"public void readRep( Repository rep, IMetaStore metaStore, ObjectId id_step, List<DatabaseMeta> databases ) throws KettleException {\n    try {\n      allocate();\n\n      List<StreamInterface> targetStreams = getStepIOMeta().getTargetStreams();\n\n      String trueStepName = rep.getStepAttributeString( id_step, \"send_true_to\" );\n      String falseStepName = rep.getStepAttributeString( id_step, \"send_false_to\" );\n      targetStreams.get( 0 ).setSubject( trueStepName );\n      targetStreams.get( 1 ).setSubject( falseStepName );\n\n      this.trueStepname = trueStepName;\n      this.falseStepname = falseStepName;\n\n      condition = rep.loadConditionFromStepAttribute( id_step, \"id_condition\" );\n\n    } catch ( Exception e ) {\n      throw new KettleException( BaseMessages.getString(\n        PKG, \"FilterRowsMeta.Exception.UnexpectedErrorInReadingStepInfoFromRepository\" ), e );\n    }\n  }","commit_id":"3c46aa03c8f54ecb00995aa01388c5cd61b15222","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep( Repository rep, IMetaStore metaStore, ObjectId id_transformation, ObjectId id_step ) throws KettleException {\n    try {\n      if ( condition != null ) {\n        List<StreamInterface> targetStreams = getStepIOMeta().getTargetStreams();\n\n        rep.saveConditionStepAttribute( id_transformation, id_step, \"id_condition\", condition );\n        rep.saveStepAttribute( id_transformation, id_step, \"send_true_to\", targetStreams.get( 0 ).getStepname() );\n        rep.saveStepAttribute( id_transformation, id_step, \"send_false_to\", targetStreams.get( 1 ).getStepname() );\n      }\n    } catch ( Exception e ) {\n      throw new KettleException( BaseMessages.getString(\n        PKG, \"FilterRowsMeta.Exception.UnableToSaveStepInfoToRepository\" )\n        + id_step, e );\n    }\n  }","id":27239,"modified_method":"public void saveRep( Repository rep, IMetaStore metaStore, ObjectId id_transformation, ObjectId id_step ) throws KettleException {\n    try {\n      if ( condition != null ) {\n\n        rep.saveConditionStepAttribute( id_transformation, id_step, \"id_condition\", condition );\n        rep.saveStepAttribute( id_transformation, id_step, \"send_true_to\", trueStepname );\n        rep.saveStepAttribute( id_transformation, id_step, \"send_false_to\", falseStepname );\n      }\n    } catch ( Exception e ) {\n      throw new KettleException( BaseMessages.getString(\n        PKG, \"FilterRowsMeta.Exception.UnableToSaveStepInfoToRepository\" )\n        + id_step, e );\n    }\n  }","commit_id":"3c46aa03c8f54ecb00995aa01388c5cd61b15222","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void readData( Node stepnode ) throws KettleXMLException {\n    try {\n      List<StreamInterface> targetStreams = getStepIOMeta().getTargetStreams();\n\n      targetStreams.get( 0 ).setSubject( XMLHandler.getTagValue( stepnode, \"send_true_to\" ) );\n      targetStreams.get( 1 ).setSubject( XMLHandler.getTagValue( stepnode, \"send_false_to\" ) );\n\n      this.trueStepname = targetStreams.get( 0 ).getStepname();\n      this.falseStepname = targetStreams.get( 1 ).getStepname();\n\n      Node compare = XMLHandler.getSubNode( stepnode, \"compare\" );\n      Node condnode = XMLHandler.getSubNode( compare, \"condition\" );\n\n      // The new situation...\n      if ( condnode != null ) {\n        condition = new Condition( condnode );\n      } else {\n        // Old style condition: Line1 OR Line2 OR Line3: @deprecated!\n        condition = new Condition();\n\n        int nrkeys = XMLHandler.countNodes( compare, \"key\" );\n        if ( nrkeys == 1 ) {\n          Node knode = XMLHandler.getSubNodeByNr( compare, \"key\", 0 );\n\n          String key = XMLHandler.getTagValue( knode, \"name\" );\n          String value = XMLHandler.getTagValue( knode, \"value\" );\n          String field = XMLHandler.getTagValue( knode, \"field\" );\n          String comparator = XMLHandler.getTagValue( knode, \"condition\" );\n\n          condition.setOperator( Condition.OPERATOR_NONE );\n          condition.setLeftValuename( key );\n          condition.setFunction( Condition.getFunction( comparator ) );\n          condition.setRightValuename( field );\n          condition.setRightExact( new ValueMetaAndData( \"value\", value ) );\n        } else {\n          for ( int i = 0; i < nrkeys; i++ ) {\n            Node knode = XMLHandler.getSubNodeByNr( compare, \"key\", i );\n\n            String key = XMLHandler.getTagValue( knode, \"name\" );\n            String value = XMLHandler.getTagValue( knode, \"value\" );\n            String field = XMLHandler.getTagValue( knode, \"field\" );\n            String comparator = XMLHandler.getTagValue( knode, \"condition\" );\n\n            Condition subc = new Condition();\n            if ( i > 0 ) {\n              subc.setOperator( Condition.OPERATOR_OR );\n            } else {\n              subc.setOperator( Condition.OPERATOR_NONE );\n            }\n            subc.setLeftValuename( key );\n            subc.setFunction( Condition.getFunction( comparator ) );\n            subc.setRightValuename( field );\n            subc.setRightExact( new ValueMetaAndData( \"value\", value ) );\n\n            condition.addCondition( subc );\n          }\n        }\n      }\n    } catch ( Exception e ) {\n      throw new KettleXMLException( BaseMessages.getString(\n        PKG, \"FilterRowsMeta.Exception..UnableToLoadStepInfoFromXML\" ), e );\n    }\n  }","id":27240,"modified_method":"private void readData( Node stepnode ) throws KettleXMLException {\n    try {\n      List<StreamInterface> targetStreams = getStepIOMeta().getTargetStreams();\n\n      String trueStepName = XMLHandler.getTagValue( stepnode, \"send_true_to\" );\n      String falseStepName = XMLHandler.getTagValue( stepnode, \"send_false_to\" );\n      targetStreams.get( 0 ).setSubject( trueStepName );\n      targetStreams.get( 1 ).setSubject( falseStepName );\n\n      this.trueStepname = trueStepName;\n      this.falseStepname = falseStepName;\n\n      Node compare = XMLHandler.getSubNode( stepnode, \"compare\" );\n      Node condnode = XMLHandler.getSubNode( compare, \"condition\" );\n\n      // The new situation...\n      if ( condnode != null ) {\n        condition = new Condition( condnode );\n      } else {\n        // Old style condition: Line1 OR Line2 OR Line3: @deprecated!\n        condition = new Condition();\n\n        int nrkeys = XMLHandler.countNodes( compare, \"key\" );\n        if ( nrkeys == 1 ) {\n          Node knode = XMLHandler.getSubNodeByNr( compare, \"key\", 0 );\n\n          String key = XMLHandler.getTagValue( knode, \"name\" );\n          String value = XMLHandler.getTagValue( knode, \"value\" );\n          String field = XMLHandler.getTagValue( knode, \"field\" );\n          String comparator = XMLHandler.getTagValue( knode, \"condition\" );\n\n          condition.setOperator( Condition.OPERATOR_NONE );\n          condition.setLeftValuename( key );\n          condition.setFunction( Condition.getFunction( comparator ) );\n          condition.setRightValuename( field );\n          condition.setRightExact( new ValueMetaAndData( \"value\", value ) );\n        } else {\n          for ( int i = 0; i < nrkeys; i++ ) {\n            Node knode = XMLHandler.getSubNodeByNr( compare, \"key\", i );\n\n            String key = XMLHandler.getTagValue( knode, \"name\" );\n            String value = XMLHandler.getTagValue( knode, \"value\" );\n            String field = XMLHandler.getTagValue( knode, \"field\" );\n            String comparator = XMLHandler.getTagValue( knode, \"condition\" );\n\n            Condition subc = new Condition();\n            if ( i > 0 ) {\n              subc.setOperator( Condition.OPERATOR_OR );\n            } else {\n              subc.setOperator( Condition.OPERATOR_NONE );\n            }\n            subc.setLeftValuename( key );\n            subc.setFunction( Condition.getFunction( comparator ) );\n            subc.setRightValuename( field );\n            subc.setRightExact( new ValueMetaAndData( \"value\", value ) );\n\n            condition.addCondition( subc );\n          }\n        }\n      }\n    } catch ( Exception e ) {\n      throw new KettleXMLException( BaseMessages.getString(\n        PKG, \"FilterRowsMeta.Exception..UnableToLoadStepInfoFromXML\" ), e );\n    }\n  }","commit_id":"3c46aa03c8f54ecb00995aa01388c5cd61b15222","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@Before\r\n  public void setUpLoadSave() throws Exception {\r\n    KettleEnvironment.init();\r\n    PluginRegistry.init( true );\r\n    List<String> attributes =\r\n        Arrays.asList( \"condition\" );\r\n\r\n    Map<String, String> getterMap = new HashMap<String, String>();\r\n    Map<String, String> setterMap = new HashMap<String, String>();\r\n\r\n    Map<String, FieldLoadSaveValidator<?>> attrValidatorMap = new HashMap<String, FieldLoadSaveValidator<?>>();\r\n    attrValidatorMap.put( \"condition\", new ConditionLoadSaveValidator() );\r\n\r\n    Map<String, FieldLoadSaveValidator<?>> typeValidatorMap = new HashMap<String, FieldLoadSaveValidator<?>>();\r\n\r\n    loadSaveTester =\r\n        new LoadSaveTester( testMetaClass, attributes, getterMap, setterMap, attrValidatorMap, typeValidatorMap );\r\n  }","id":27241,"modified_method":"@Before\r\n  public void setUpLoadSave() throws Exception {\r\n    KettleEnvironment.init();\r\n    PluginRegistry.init( true );\r\n    List<String> attributes =\r\n        Arrays.asList( \"condition\", \"send_true_to\", \"send_false_to\" );\r\n\r\n    Map<String, String> getterMap = new HashMap<String, String>();\r\n    Map<String, String> setterMap = new HashMap<String, String>();\r\n\r\n    Map<String, FieldLoadSaveValidator<?>> attrValidatorMap = new HashMap<String, FieldLoadSaveValidator<?>>();\r\n    attrValidatorMap.put( \"condition\", new ConditionLoadSaveValidator() );\r\n    attrValidatorMap.put( \"trueStepName\", new StringLoadSaveValidator() );\r\n    attrValidatorMap.put( \"falseStepname\", new StringLoadSaveValidator() );\r\n\r\n    getterMap.put( \"send_true_to\", \"getTrueStepname\" );\r\n    setterMap.put( \"send_true_to\", \"setTrueStepname\" );\r\n    getterMap.put( \"send_false_to\", \"getFalseStepname\" );\r\n    setterMap.put( \"send_false_to\", \"setFalseStepname\" );\r\n\r\n    Map<String, FieldLoadSaveValidator<?>> typeValidatorMap = new HashMap<String, FieldLoadSaveValidator<?>>();\r\n\r\n    loadSaveTester =\r\n        new LoadSaveTester( testMetaClass, attributes, getterMap, setterMap, attrValidatorMap, typeValidatorMap );\r\n  }","commit_id":"3c46aa03c8f54ecb00995aa01388c5cd61b15222","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public static boolean isVisible(FacetEditorFacade editor, final FacetType<?, ?> type) {\n    final ModuleType moduleType = editor.getSelectedModuleType();\n    if (moduleType == null || !type.isSuitableModuleType(moduleType)) {\n      return false;\n    }\n\n    final FacetInfo selectedFacet = editor.getSelectedFacetInfo();\n    if (!canAddFacet(selectedFacet, type, editor)) {\n      return false;\n    }\n\n    final FacetTypeId underlyingTypeId = type.getUnderlyingFacetType();\n    if (selectedFacet == null) {\n      return underlyingTypeId == null;\n    }\n\n    return underlyingTypeId != null && selectedFacet.getFacetType().getId() == underlyingTypeId;\n  }","id":27242,"modified_method":"public static boolean isVisible(FacetEditorFacade editor, final FacetType<?, ?> type) {\n    final ModuleType moduleType = editor.getSelectedModuleType();\n    if (moduleType == null || !type.isSuitableModuleType(moduleType)) {\n      return false;\n    }\n\n    final FacetTypeId underlyingTypeId = type.getUnderlyingFacetType();\n    final FacetInfo selectedFacet = editor.getSelectedFacetInfo();\n    if (selectedFacet == null) {\n      return underlyingTypeId == null && canAddFacet(null, type, editor);\n    }\n\n    final FacetTypeId selectedFacetType = selectedFacet.getFacetType().getId();\n    if (selectedFacetType == underlyingTypeId) {\n      return canAddFacet(selectedFacet, type, editor);\n    }\n\n    final FacetInfo parent = editor.getParent(selectedFacet);\n    if (!canAddFacet(parent, type, editor)) {\n      return false;\n    }\n    return parent == null && underlyingTypeId == null || parent != null && parent.getFacetType().getId() == underlyingTypeId;\n  }","commit_id":"c6aae7f8385c23ba59c2a1688783bf243648d0fc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(AnActionEvent e) {\n    FacetInfo parent = myEditor.getSelectedFacetInfo();\n    final Collection<FacetInfo> facetInfos = myEditor.getFacetsByType(myType);\n    String facetName = myType.getPresentableName();\n    int i = 2;\n    while (facetExists(facetName, facetInfos)) {\n      facetName = myType.getPresentableName() + i;\n      i++;\n    }\n    myEditor.createFacet(parent, myType, facetName);\n  }","id":27243,"modified_method":"public void actionPerformed(AnActionEvent e) {\n    FacetInfo parent = myEditor.getSelectedFacetInfo();\n    final Collection<FacetInfo> facetInfos = myEditor.getFacetsByType(myType);\n    String facetName = myType.getPresentableName();\n    int i = 2;\n    while (facetExists(facetName, facetInfos)) {\n      facetName = myType.getPresentableName() + i;\n      i++;\n    }\n    final FacetTypeId underlyingFacetType = myType.getUnderlyingFacetType();\n    if (parent == null && underlyingFacetType == null || parent != null && parent.getFacetType().getId() == underlyingFacetType) {\n      myEditor.createFacet(parent, myType, facetName);\n    }\n    else {\n      LOG.assertTrue(parent != null);\n      final FacetInfo grandParent = myEditor.getParent(parent);\n      LOG.assertTrue(grandParent == null && underlyingFacetType == null ||\n                     grandParent != null && grandParent.getFacetType().getId() == underlyingFacetType);\n      myEditor.createFacet(grandParent, myType, facetName);\n    }\n  }","commit_id":"c6aae7f8385c23ba59c2a1688783bf243648d0fc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void createFacets(final List<DetectedFacetInfo> facets, final Module module, final ModifiableRootModel rootModel,\n                                   final ModifiableFacetModel facetModel, Facet underlyingFacet) {\n    for (DetectedFacetInfo detectedFacetInfo : facets) {\n      if (!detectedFacetInfo.isChecked()) continue;\n\n      FacetInfo facetInfo = detectedFacetInfo.myFacetInfo;\n      FacetType type = facetInfo.getFacetType();\n      //noinspection unchecked\n      Facet facet = FacetManagerImpl.createFacet(type, module, facetInfo.getName(), facetInfo.getConfiguration(), underlyingFacet);\n      facetModel.addFacet(facet);\n\n      createFacets(detectedFacetInfo.myChildren, module, rootModel, facetModel, facet);\n    }\n  }","id":27244,"modified_method":"private static void processFacetsInfos(final List<DetectedFacetInfo> facets, final Module module, final ModifiableRootModel rootModel,\n                                   final ModifiableFacetModel facetModel, Facet underlyingFacet, boolean createFacets) {\n    for (DetectedFacetInfo detectedFacetInfo : facets) {\n      boolean createFacet = createFacets && detectedFacetInfo.isChecked();\n      FacetInfo facetInfo = detectedFacetInfo.myFacetInfo;\n      FacetType type = facetInfo.getFacetType();\n      Facet facet = null;\n\n      if (createFacet) {\n        //noinspection unchecked\n        facet = FacetManagerImpl.createFacet(type, module, facetInfo.getName(), facetInfo.getConfiguration(), underlyingFacet);\n        facetModel.addFacet(facet);\n      }\n      else {\n        FacetAutodetectingManager.getInstance(module.getProject()).disableAutodetectionInFiles(type, module, detectedFacetInfo.myFile.getUrl());\n      }\n\n      processFacetsInfos(detectedFacetInfo.myChildren, module, rootModel, facetModel, facet, createFacet);\n    }\n  }","commit_id":"15bce20b99bdd3de8073ebf47e6c0ef95668e86d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void createFacets(final ModuleDescriptor descriptor, final Module module, final ModifiableRootModel rootModel) {\n    ModifiableFacetModel modifiableModel = FacetManager.getInstance(module).createModifiableModel();\n    for (ModuleInfo moduleInfo : myModuleInfos) {\n      if (moduleInfo.isChecked() && moduleInfo.myModuleDescriptor.equals(descriptor)) {\n        createFacets(moduleInfo.myRootFacets, module, rootModel, modifiableModel, null);\n      }\n    }\n    modifiableModel.commit();\n  }","id":27245,"modified_method":"public void createFacets(final ModuleDescriptor descriptor, final Module module, final ModifiableRootModel rootModel) {\n    ModifiableFacetModel modifiableModel = FacetManager.getInstance(module).createModifiableModel();\n    for (ModuleInfo moduleInfo : myModuleInfos) {\n      if (moduleInfo.myModuleDescriptor.equals(descriptor)) {\n        processFacetsInfos(moduleInfo.myRootFacets, module, rootModel, modifiableModel, null, moduleInfo.isChecked());\n      }\n    }\n    modifiableModel.commit();\n  }","commit_id":"15bce20b99bdd3de8073ebf47e6c0ef95668e86d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private DetectedFacetInfo(final FacetInfo facetInfo, String relativeFilePath, @Nullable DetectedFacetInfo parent) {\n      super(facetInfo);\n      myRelativeFilePath = relativeFilePath;\n      myFacetInfo = facetInfo;\n      if (parent != null) {\n        parent.myChildren.add(this);\n        parent.add(this);\n      }\n    }","id":27246,"modified_method":"private DetectedFacetInfo(final FacetInfo facetInfo, String relativeFilePath, final VirtualFile file, @Nullable DetectedFacetInfo parent) {\n      super(facetInfo);\n      myRelativeFilePath = relativeFilePath;\n      myFacetInfo = facetInfo;\n      myFile = file;\n      if (parent != null) {\n        parent.myChildren.add(this);\n        parent.add(this);\n      }\n    }","commit_id":"15bce20b99bdd3de8073ebf47e6c0ef95668e86d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void addFacets(ModuleDescriptor moduleDescriptor, Map<File, List<Pair<FacetInfo, VirtualFile>>> root2Facets) {\n    for (File root : root2Facets.keySet()) {\n      ModuleInfo moduleInfo = new ModuleInfo(moduleDescriptor, root);\n\n      Map<FacetInfo, DetectedFacetInfo> facetInfos = new HashMap<FacetInfo, DetectedFacetInfo>();\n      for (Pair<FacetInfo, VirtualFile> pair : root2Facets.get(root)) {\n        DetectedFacetInfo parent = null;\n        FacetInfo underlyingFacet = pair.getFirst().getUnderlyingFacet();\n        if (underlyingFacet != null) {\n          parent = facetInfos.get(underlyingFacet);\n        }\n\n        String relativePath = getRelativePath(root, pair.getSecond());\n        DetectedFacetInfo detectedFacet = new DetectedFacetInfo(pair.getFirst(), relativePath, parent);\n        facetInfos.put(pair.getFirst(), detectedFacet);\n        if (parent == null) {\n          moduleInfo.addRootFacet(detectedFacet);\n        }\n      }\n\n      myModuleInfos.add(moduleInfo);\n    }\n  }","id":27247,"modified_method":"public void addFacets(ModuleDescriptor moduleDescriptor, Map<File, List<Pair<FacetInfo, VirtualFile>>> root2Facets) {\n    for (File root : root2Facets.keySet()) {\n      ModuleInfo moduleInfo = new ModuleInfo(moduleDescriptor, root);\n\n      Map<FacetInfo, DetectedFacetInfo> facetInfos = new HashMap<FacetInfo, DetectedFacetInfo>();\n      for (Pair<FacetInfo, VirtualFile> pair : root2Facets.get(root)) {\n        DetectedFacetInfo parent = null;\n        FacetInfo underlyingFacet = pair.getFirst().getUnderlyingFacet();\n        if (underlyingFacet != null) {\n          parent = facetInfos.get(underlyingFacet);\n        }\n\n        String relativePath = getRelativePath(root, pair.getSecond());\n        DetectedFacetInfo detectedFacet = new DetectedFacetInfo(pair.getFirst(), relativePath, pair.getSecond(), parent);\n        facetInfos.put(pair.getFirst(), detectedFacet);\n        if (parent == null) {\n          moduleInfo.addRootFacet(detectedFacet);\n        }\n      }\n\n      myModuleInfos.add(moduleInfo);\n    }\n  }","commit_id":"15bce20b99bdd3de8073ebf47e6c0ef95668e86d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void addDisabled(final @NotNull String facetTypeId, final @NotNull String moduleName, final @NotNull Set<String> urls) {\n    for (String url : urls) {\n      addDisabled(facetTypeId, moduleName, url);\n    }\n  }","id":27248,"modified_method":"public void addDisabled(final @NotNull String facetTypeId, final @NotNull String moduleName, final @NotNull String... urls) {\n    for (String url : urls) {\n      addDisabled(facetTypeId, moduleName, url);\n    }\n  }","commit_id":"15bce20b99bdd3de8073ebf47e6c0ef95668e86d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void beforeFacetRemoved(final F facet) {\n      Set<String> files = myAutodetectingManager.getFiles(facet);\n      if (files != null) {\n        myAutodetectingManager.getState().addDisabled(facet.getType().getStringId(), facet.getModule().getName(), files);\n      }\n      myAutodetectingManager.removeFacetFromCache(facet);\n    }","id":27249,"modified_method":"public void beforeFacetRemoved(final F facet) {\n      Set<String> files = myAutodetectingManager.getFiles(facet);\n      if (files != null) {\n        myAutodetectingManager.disableAutodetectionInFiles(facet.getType(), facet.getModule(), files.toArray(new String[files.size()]));\n      }\n      myAutodetectingManager.removeFacetFromCache(facet);\n    }","commit_id":"15bce20b99bdd3de8073ebf47e6c0ef95668e86d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void disableDetectionInProject(final Facet facet) {\n    myAutodetectingManager.getState().addDisabled(facet.getType().getStringId());\n    FacetUtil.deleteImplicitFacets(facet.getModule().getProject(), facet.getTypeId());\n  }","id":27250,"modified_method":"public void disableDetectionInProject(final Facet facet) {\n    myAutodetectingManager.disableAutodetectionInProject(facet.getType());\n    FacetUtil.deleteImplicitFacets(facet.getModule().getProject(), facet.getTypeId());\n  }","commit_id":"15bce20b99bdd3de8073ebf47e6c0ef95668e86d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void disableDetectionInModule(final Facet facet) {\n    myAutodetectingManager.getState().addDisabled(facet.getType().getStringId(), facet.getModule().getName());\n    FacetUtil.deleteImplicitFacets(facet.getModule(), facet.getTypeId());\n  }","id":27251,"modified_method":"public void disableDetectionInModule(final Facet facet) {\n    myAutodetectingManager.disableAutodetectionInModule(facet.getType(), facet.getModule());\n    FacetUtil.deleteImplicitFacets(facet.getModule(), facet.getTypeId());\n  }","commit_id":"15bce20b99bdd3de8073ebf47e6c0ef95668e86d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private <C extends FacetConfiguration> void addFacet(final FacetType<?,C> type, final Element child, final List<Facet> facets) throws InvalidDataException {\n    final C configuration = type.createDefaultConfiguration();\n    configuration.readExternal(child);\n    //todo[nik] set underlying facet\n    facets.add(type.createFacet(myModule, configuration, null));\n  }","id":27252,"modified_method":"private <C extends FacetConfiguration> void addFacet(final FacetType<?, C> type, final Element element, final List<Facet> facets,\n                                                       final Facet underlyingFacet) throws InvalidDataException {\n    final C configuration = type.createDefaultConfiguration();\n    final Element config = element.getChild(CONFIGURATION_ELEMENT);\n    if (config != null) {\n      configuration.readExternal(config);\n    }\n    final Facet facet = type.createFacet(myModule, configuration, underlyingFacet);\n    facets.add(facet);\n    addFacets(facets, element, facet);\n  }","commit_id":"9a41f7a72af1b995e6e2765302eca242bd6fd6d9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void writeExternal(Element element) throws WriteExternalException {\n    final Facet[] facets = getAllFacets();\n    if (facets.length == 0) {\n      throw new WriteExternalException();\n    }\n\n    for (Facet facet : facets) {\n      final Element child = new Element(FACET_ELEMENT);\n      child.setAttribute(TYPE_ATTRIBUTE, facet.getTypeId().getId());\n      facet.getConfiguration().writeExternal(child);\n      element.addContent(child);\n    }\n  }","id":27253,"modified_method":"public void writeExternal(Element element) throws WriteExternalException {\n    final Facet[] facets = getSortedFacets();\n    if (facets.length == 0) {\n      throw new WriteExternalException();\n    }\n\n    Map<Facet, Element> elements = new HashMap<Facet, Element>();\n    elements.put(null, element);\n\n    for (Facet facet : facets) {\n      final Facet underlyingFacet = facet.getUnderlyingFacet();\n      final Element parent = elements.get(underlyingFacet);\n\n      Element child = new Element(FACET_ELEMENT);\n      child.setAttribute(TYPE_ATTRIBUTE, facet.getTypeId().getId());\n      final Element config = new Element(CONFIGURATION_ELEMENT);\n      facet.getConfiguration().writeExternal(config);\n      child.addContent(config);\n\n      parent.addContent(child);\n      elements.put(facet, child);\n    }\n  }","commit_id":"9a41f7a72af1b995e6e2765302eca242bd6fd6d9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void readExternal(Element element) throws InvalidDataException {\n    List<Facet> facets = new ArrayList<Facet>();\n    List<Element> children = element.getChildren(FACET_ELEMENT);\n    for (Element child : children) {\n      final String value = child.getAttributeValue(TYPE_ATTRIBUTE);\n      if (value != null) {\n        final FacetType<?,?> type = myFacetTypeRegistry.findFacetType(value);\n        if (type != null) {\n          addFacet(type, child, facets);\n        }\n      }\n    }\n\n    myModel.setAllFacets(facets.toArray(new Facet[facets.size()]));\n  }","id":27254,"modified_method":"public void readExternal(Element element) throws InvalidDataException {\n    List<Facet> facets = new ArrayList<Facet>();\n    addFacets(facets, element, null);\n\n    myModel.setAllFacets(facets.toArray(new Facet[facets.size()]));\n  }","commit_id":"9a41f7a72af1b995e6e2765302eca242bd6fd6d9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static SNode getContextBuilder_7057666463730366732(SNode context) {\n    List<SNode> ancestors = SNodeOperations.getAncestors(context, \"jetbrains.mps.baseLanguage.builders.structure.BuilderContainer\", false);\n    Iterable<SNode> nonLeaves = ListSequence.fromList(ancestors).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return !(BuilderContainer_Behavior.call_isLeaf_932644095877881871(it));\n      }\n    });\n    return SLinkOperations.getTarget(Sequence.fromIterable(nonLeaves).first(), \"builder\", true);\n  }","id":27255,"modified_method":"public static SNode getContextBuilder_7057666463730366732(SNode context) {\n    return SLinkOperations.getTarget(ListSequence.fromList(SNodeOperations.getAncestors(context, \"jetbrains.mps.baseLanguage.builders.structure.BuilderContainer\", false)).findFirst(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return !(BuilderContainer_Behavior.call_isLeaf_932644095877881871(it));\n      }\n    }), \"builder\", true);\n  }","commit_id":"fb106b78be77b3ce734049d5b30f7335de6cc776","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static boolean call_isRoot_8969040284892403078(SNode thisNode) {\n    if (SPropertyOperations.getBoolean(thisNode, \"root\")) {\n      return true;\n    }\n    if ((SLinkOperations.getTarget(thisNode, \"extends\", false) != null)) {\n      return SimpleBuilderDeclaration_Behavior.call_isRoot_8969040284892403078(SLinkOperations.getTarget(thisNode, \"extends\", false));\n    }\n    return false;\n  }","id":27256,"modified_method":"public static boolean call_isRoot_8969040284892403078(SNode thisNode) {\n    return SPropertyOperations.getBoolean(thisNode, \"root\") || (SLinkOperations.getTarget(thisNode, \"extends\", false) != null) && SimpleBuilderDeclaration_Behavior.call_isRoot_8969040284892403078(SLinkOperations.getTarget(thisNode, \"extends\", false));\n  }","commit_id":"fb106b78be77b3ce734049d5b30f7335de6cc776","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static boolean call_isDescendant_3816167865390595157(SNode thisNode, SNode b) {\n    if (thisNode == b) {\n      return true;\n    }\n    if ((SLinkOperations.getTarget(thisNode, \"extends\", false) == null)) {\n      return false;\n    }\n    return SimpleBuilderDeclaration_Behavior.call_isDescendant_3816167865390595157(SLinkOperations.getTarget(thisNode, \"extends\", false), b);\n  }","id":27257,"modified_method":"public static boolean call_isDescendant_3816167865390595157(SNode thisNode, SNode b) {\n    return thisNode == b || (SLinkOperations.getTarget(thisNode, \"extends\", false) != null) && SimpleBuilderDeclaration_Behavior.call_isDescendant_3816167865390595157(SLinkOperations.getTarget(thisNode, \"extends\", false), b);\n  }","commit_id":"fb106b78be77b3ce734049d5b30f7335de6cc776","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferentConstraintContext _context) {\n    SNode contextBuilder = Builder_Behavior.getContextBuilder_7057666463730366732(_context.getEnclosingNode());\n    if (SNodeOperations.isInstanceOf(contextBuilder, \"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilder\")) {\n      return SimpleBuilderDeclaration_Behavior.call_getProperties_5389689214217081373(SLinkOperations.getTarget(SNodeOperations.cast(contextBuilder, \"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilder\"), \"declaration\", false), _context.getModel(), operationContext.getScope());\n    } else {\n      return new ArrayList<SNode>();\n    }\n  }","id":27258,"modified_method":"public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferentConstraintContext _context) {\n    List<SNode> result = new ArrayList<SNode>();\n    SNode contextBuilder = SNodeOperations.as(Builder_Behavior.getContextBuilder_7057666463730366732(_context.getEnclosingNode()), \"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilder\");\n    for (SNode dcl = SLinkOperations.getTarget(contextBuilder, \"declaration\", false); (dcl != null); dcl = SLinkOperations.getTarget(dcl, \"extends\", false)) {\n      ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(dcl, \"property\", true)));\n      for (SNode builders : ListSequence.fromList(SModelOperations.getRootsIncludingImported(_context.getModel(), operationContext.getScope(), \"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilders\"))) {\n        for (SNode basedecl : ListSequence.fromList(SLinkOperations.getTargets(builders, \"builder\", true))) {\n          SNode extdecl = SNodeOperations.as(basedecl, \"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderExtensionDeclaration\");\n          if (dcl == SLinkOperations.getTarget(extdecl, \"extended\", false)) {\n            ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(extdecl, \"property\", true)));\n          }\n        }\n      }\n    }\n    return result;\n  }","commit_id":"fb106b78be77b3ce734049d5b30f7335de6cc776","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_baz() throws Exception {\n      this.addNodeById(\"7178287329507546170\");\n      this.addNodeById(\"7178287329507546163\");\n      MockTemplateQueryContext genContext = new MockTemplateQueryContext();\n      Adaptation adaptation = new Adaptation(genContext);\n      SNode literal = SNodeOperations.cast(this.getNodeById(\"7178287329507546187\"), \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\");\n      adaptation.setTarget(literal, new Adaptation_Test.TestBody.QuotationClass_aguh3z_a1a0f0a0().createNode(SNodeOperations.cast(this.getNodeById(\"7178287329507546171\"), \"jetbrains.mps.baseLanguage.structure.Interface\")));\n      Object target = Values.LITERAL_TARGET.get(genContext, literal);\n      System.out.println(\"*** target: \" + target);\n      System.out.println(\"*** sessionObjects: \" + genContext.sessionObjects);\n    }","id":27259,"modified_method":"public void test_baz() throws Exception {\n      this.addNodeById(\"7178287329507546170\");\n      this.addNodeById(\"7178287329507578878\");\n      TemplateQueryContext genContext = this.getContext();\n      SNode literal = SNodeOperations.cast(this.getNodeById(\"7178287329507578897\"), \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\");\n      new ClosureLiteralTarget(genContext).setTarget(literal, new Adaptation_Test.TestBody.QuotationClass_aguh3z_a1a0e0a0().createNode());\n      this.assertLiteralTarget(genContext, literal, new Adaptation_Test.TestBody.QuotationClass_aguh3z_a2a0f0a0().createNode());\n    }","commit_id":"a035196c1dbf6508e0b73d9487e62ac6644b6b3f","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode getFunctionMethod(SNode functionTypeOrClassifier) {\n    List<SNode> methods = SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.cast(functionTypeOrClassifier, \"jetbrains.mps.baseLanguage.structure.ClassifierType\"), \"classifier\", false), \"method\", true);\n    return ListSequence.fromList(methods).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode m) {\n        return !(\"equals\".equals(SPropertyOperations.getString(m, \"name\"))) && SPropertyOperations.getBoolean(m, \"isAbstract\");\n      }\n    }).first();\n  }","id":27260,"modified_method":"private static SNode getFunctionMethod(SNode functionTypeOrClassifier) {\n    return ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.cast(functionTypeOrClassifier, \"jetbrains.mps.baseLanguage.structure.ClassifierType\"), \"classifier\", false), \"method\", true)).findFirst(new IWhereFilter<SNode>() {\n      public boolean accept(SNode m) {\n        return !(\"equals\".equals(SPropertyOperations.getString(m, \"name\"))) && SPropertyOperations.getBoolean(m, \"isAbstract\");\n      }\n    });\n  }","commit_id":"a035196c1dbf6508e0b73d9487e62ac6644b6b3f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void prepAdaptations(TemplateQueryContext genContext, SNode ltype, SNode rexpr) {\n    SNode lCType = (SNodeOperations.isInstanceOf(ltype, \"jetbrains.mps.baseLanguage.structure.ClassifierType\") ?\n      SNodeOperations.cast(ltype, \"jetbrains.mps.baseLanguage.structure.ClassifierType\") :\n      null\n    );\n    SNode lFType = (SNodeOperations.isInstanceOf(ltype, \"jetbrains.mps.baseLanguage.closures.structure.FunctionType\") ?\n      SNodeOperations.cast(ltype, \"jetbrains.mps.baseLanguage.closures.structure.FunctionType\") :\n      null\n    );\n    if ((lFType == null) && (lCType == null)) {\n      return;\n    }\n    /*\n      if ((lCType != null) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(lCType, \"classifier\", false), \"jetbrains.mps.baseLanguage.structure.Interface\"))) {\n        return;\n      }\n    */\n    if (Constants.ONLY_CLOSURE_LITERAL_AS_FUNCTION_TYPE) {\n      //  TEMP HACK: proceed only if the \"right\" expression is a ClosureLiteral, balk otherwise \n      //  This may cause unexpected results, so please disable in case of difficulties generating some code \n      if (!(SNodeOperations.isInstanceOf(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\"))) {\n        return;\n      }\n    }\n    SNode rtype = TypeChecker.getInstance().getTypeOf(rexpr);\n    SNode rFType = (SNodeOperations.isInstanceOf(rtype, \"jetbrains.mps.baseLanguage.closures.structure.FunctionType\") ?\n      SNodeOperations.cast(rtype, \"jetbrains.mps.baseLanguage.closures.structure.FunctionType\") :\n      null\n    );\n    SNode rCType = (SNodeOperations.isInstanceOf(rtype, \"jetbrains.mps.baseLanguage.structure.ClassifierType\") ?\n      SNodeOperations.cast(rtype, \"jetbrains.mps.baseLanguage.structure.ClassifierType\") :\n      null\n    );\n\n    if ((lCType != null) && (rFType != null)) {\n      if (SNodeOperations.isInstanceOf(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\") && (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(TypeChecker.getInstance().getRuntimeSupport().coerce_(lCType, HUtil.createMatchingPatternByConceptFQName(\"jetbrains.mps.baseLanguage.closures.structure.FunctionType\"), true), \"resultType\", true), \"jetbrains.mps.baseLanguage.structure.VoidType\")) || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(rFType, \"resultType\", true), \"jetbrains.mps.baseLanguage.structure.VoidType\") || ListSequence.fromList(SNodeOperations.getDescendants(SLinkOperations.getTarget(SNodeOperations.cast(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\"), \"body\", true), \"jetbrains.mps.baseLanguage.structure.ReturnStatement\", false, new String[]{})).all(new IWhereFilter<SNode>() {\n        public boolean accept(SNode rs) {\n          return (SLinkOperations.getTarget(rs, \"expression\", true) == null);\n        }\n      }))) {\n        ClosureLiteralUtil.addAdaptableClosureLiteralTarget(genContext, SNodeOperations.cast(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\"), lCType);\n      } else {\n        FunctionTypeUtil.addAdaptableClassifierTypeTarget(genContext, FunctionType_Behavior.call_getDeclarationRuntimeType_1230319610063(rFType), lCType);\n        Values.PREP_DATA.set(genContext, rexpr, INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(lCType, \"classifier\", false)));\n      }\n    } else\n    if ((lFType != null) && (rCType != null)) {\n      FunctionTypeUtil.addAdaptableClassifierTypeTarget(genContext, rCType, FunctionType_Behavior.call_getDeclarationRuntimeType_1230319610063(lFType));\n      Values.PREP_DATA.set(genContext, rexpr, INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(FunctionType_Behavior.call_getDeclarationRuntimeType_1230319610063(lFType), \"classifier\", false)));\n    } else\n    if ((lFType != null) && (rFType != null)) {\n      final SNode adapterAnn = SLinkOperations.getTarget(new FunctionTypeUtil.QuotationClass_2t0coq_a0a0a0a0j0k().createNode(), \"annotation\", false);\n      final SNode annInst = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.as(SNodeOperations.getParent(rexpr), \"jetbrains.mps.baseLanguage.structure.IMethodCall\"), \"baseMethodDeclaration\", false), \"parameter\", true)).getElement(SNodeOperations.getIndexInParent(rexpr)), \"jetbrains.mps.baseLanguage.structure.HasAnnotation\"), \"annotation\", true)).findFirst(new IWhereFilter<SNode>() {\n        public boolean accept(SNode ann) {\n          return SLinkOperations.getTarget(ann, \"annotation\", false) == adapterAnn;\n        }\n      });\n      if (SNodeOperations.isInstanceOf(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\") && (annInst != null)) {\n        SNode cls = ListSequence.fromList(SModelOperations.getNodesIncludingImported(SNodeOperations.getModel(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(rexpr), \"jetbrains.mps.baseLanguage.structure.IMethodCall\"), \"baseMethodDeclaration\", false)), genContext.getScope(), \"jetbrains.mps.baseLanguage.structure.ClassConcept\")).findFirst(new IWhereFilter<SNode>() {\n          public boolean accept(SNode cls) {\n            return SPropertyOperations.getString(cls, \"name\").equals(SPropertyOperations.getString(SNodeOperations.cast(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(annInst, \"value\", true)).first(), \"value\", true), \"jetbrains.mps.baseLanguage.structure.StringLiteral\"), \"value\"));\n          }\n        });\n        SNode adapterFType = FunctionMethodDeclaration_Behavior.call_functionType_2857237956452412451(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(cls, \"method\", true)).findFirst(new IWhereFilter<SNode>() {\n          public boolean accept(SNode md) {\n            return SNodeOperations.isInstanceOf(md, \"jetbrains.mps.baseLanguage.closures.structure.FunctionMethodDeclaration\");\n          }\n        }), \"jetbrains.mps.baseLanguage.closures.structure.FunctionMethodDeclaration\"));\n        SNode ct = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n        SLinkOperations.setTarget(ct, \"classifier\", cls, false);\nwith_tvd:\n        for (SNode tvd : SLinkOperations.getTargets(cls, \"typeVariableDeclaration\", true)) {\n          if (SLinkOperations.getTarget(SNodeOperations.as(SLinkOperations.getTarget(adapterFType, \"resultType\", true), \"jetbrains.mps.baseLanguage.structure.TypeVariableReference\"), \"typeVariableDeclaration\", false) == tvd) {\n            ListSequence.fromList(SLinkOperations.getTargets(ct, \"parameter\", true)).addElement(ClassifierTypeUtil.getTypeCoercedToClassifierType(SNodeOperations.copyNode(SLinkOperations.getTarget(lFType, \"resultType\", true))));\n            continue;\n          } else {\n            for (int idx = 0; idx < ListSequence.fromList(SLinkOperations.getTargets(adapterFType, \"parameterType\", true)).count(); ++idx) {\n              if (SLinkOperations.getTarget(SNodeOperations.as(ListSequence.fromList(SLinkOperations.getTargets(adapterFType, \"parameterType\", true)).getElement(idx), \"jetbrains.mps.baseLanguage.structure.TypeVariableReference\"), \"typeVariableDeclaration\", false) == tvd) {\n                ListSequence.fromList(SLinkOperations.getTargets(ct, \"parameter\", true)).addElement(ClassifierTypeUtil.getTypeCoercedToClassifierType(SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(lFType, \"parameterType\", true)).getElement(idx))));\n                continue with_tvd;\n              }\n            }\n          }\n          ListSequence.fromList(SLinkOperations.getTargets(ct, \"parameter\", true)).addElement(new FunctionTypeUtil.QuotationClass_2t0coq_a0a0b0e0c0a0j0k().createNode(tvd));\n        }\n        ClosureLiteralUtil.addAdaptableClosureLiteralTarget(genContext, SNodeOperations.cast(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\"), ct);\n      } else if (SNodeOperations.isInstanceOf(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\") && (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(lFType, \"resultType\", true), \"jetbrains.mps.baseLanguage.structure.VoidType\")) || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(rFType, \"resultType\", true), \"jetbrains.mps.baseLanguage.structure.VoidType\") || ListSequence.fromList(SNodeOperations.getDescendants(SLinkOperations.getTarget(SNodeOperations.cast(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\"), \"body\", true), \"jetbrains.mps.baseLanguage.structure.ReturnStatement\", false, new String[]{})).all(new IWhereFilter<SNode>() {\n        public boolean accept(SNode rs) {\n          return (SLinkOperations.getTarget(rs, \"expression\", true) == null);\n        }\n      }))) {\n        ClosureLiteralUtil.addAdaptableClosureLiteralTarget(genContext, SNodeOperations.cast(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\"), FunctionType_Behavior.call_getDeclarationRuntimeType_811905832257074290(lFType, rFType));\n      } else if (SNodeOperations.isInstanceOf(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\") || ListSequence.fromList(FunctionType_Behavior.call_getNormalizedThrowsTypes_3448422702164385781(lFType)).count() != ListSequence.fromList(FunctionType_Behavior.call_getNormalizedThrowsTypes_3448422702164385781(rFType)).count()) {\n        FunctionTypeUtil.addAdaptableClassifierTypeTarget(genContext, FunctionType_Behavior.call_getDeclarationRuntimeType_1230319610063(rFType), FunctionType_Behavior.call_getDeclarationRuntimeType_1230319610063(lFType));\n        Values.PREP_DATA.set(genContext, rexpr, INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(FunctionType_Behavior.call_getDeclarationRuntimeType_1230319610063(lFType), \"classifier\", false)));\n      }\n    }\n  }","id":27261,"modified_method":"public static void prepAdaptations(TemplateQueryContext genContext, SNode ltype, SNode rexpr) {\n    SNode lCType = (SNodeOperations.isInstanceOf(ltype, \"jetbrains.mps.baseLanguage.structure.ClassifierType\") ?\n      SNodeOperations.cast(ltype, \"jetbrains.mps.baseLanguage.structure.ClassifierType\") :\n      null\n    );\n    SNode lFType = (SNodeOperations.isInstanceOf(ltype, \"jetbrains.mps.baseLanguage.closures.structure.FunctionType\") ?\n      SNodeOperations.cast(ltype, \"jetbrains.mps.baseLanguage.closures.structure.FunctionType\") :\n      null\n    );\n    if ((lFType == null) && (lCType == null)) {\n      return;\n    }\n    /*\n      if ((lCType != null) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(lCType, \"classifier\", false), \"jetbrains.mps.baseLanguage.structure.Interface\"))) {\n        return;\n      }\n    */\n    if (Constants.ONLY_CLOSURE_LITERAL_AS_FUNCTION_TYPE) {\n      //  TEMP HACK: proceed only if the \"right\" expression is a ClosureLiteral, balk otherwise \n      //  This may cause unexpected results, so please disable in case of difficulties generating some code \n      if (!(SNodeOperations.isInstanceOf(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\"))) {\n        return;\n      }\n    }\n    SNode rtype = TypeChecker.getInstance().getTypeOf(rexpr);\n    SNode rFType = (SNodeOperations.isInstanceOf(rtype, \"jetbrains.mps.baseLanguage.closures.structure.FunctionType\") ?\n      SNodeOperations.cast(rtype, \"jetbrains.mps.baseLanguage.closures.structure.FunctionType\") :\n      null\n    );\n    SNode rCType = (SNodeOperations.isInstanceOf(rtype, \"jetbrains.mps.baseLanguage.structure.ClassifierType\") ?\n      SNodeOperations.cast(rtype, \"jetbrains.mps.baseLanguage.structure.ClassifierType\") :\n      null\n    );\n\n    if ((lCType != null) && (rFType != null)) {\n      if (SNodeOperations.isInstanceOf(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\") && (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(TypeChecker.getInstance().getRuntimeSupport().coerce_(lCType, HUtil.createMatchingPatternByConceptFQName(\"jetbrains.mps.baseLanguage.closures.structure.FunctionType\"), true), \"resultType\", true), \"jetbrains.mps.baseLanguage.structure.VoidType\")) || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(rFType, \"resultType\", true), \"jetbrains.mps.baseLanguage.structure.VoidType\") || ListSequence.fromList(SNodeOperations.getDescendants(SLinkOperations.getTarget(SNodeOperations.cast(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\"), \"body\", true), \"jetbrains.mps.baseLanguage.structure.ReturnStatement\", false, new String[]{})).all(new IWhereFilter<SNode>() {\n        public boolean accept(SNode rs) {\n          return (SLinkOperations.getTarget(rs, \"expression\", true) == null);\n        }\n      }))) {\n        // <node> \n        new ClosureLiteralTarget(genContext).setTarget(SNodeOperations.cast(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\"), lCType);\n      } else {\n        FunctionTypeUtil.addAdaptableClassifierTypeTarget(genContext, FunctionType_Behavior.call_getDeclarationRuntimeType_1230319610063(rFType), lCType);\n        Values.PREP_DATA.set(genContext, rexpr, INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(lCType, \"classifier\", false)));\n      }\n    } else\n    if ((lFType != null) && (rCType != null)) {\n      FunctionTypeUtil.addAdaptableClassifierTypeTarget(genContext, rCType, FunctionType_Behavior.call_getDeclarationRuntimeType_1230319610063(lFType));\n      Values.PREP_DATA.set(genContext, rexpr, INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(FunctionType_Behavior.call_getDeclarationRuntimeType_1230319610063(lFType), \"classifier\", false)));\n    } else\n    if ((lFType != null) && (rFType != null)) {\n      final SNode annInst = FunctionTypeUtil.lookupAdapterClassAnnotation(rexpr);\n      if (SNodeOperations.isInstanceOf(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\") && (annInst != null)) {\n        SNode cls = FunctionTypeUtil.findAdapterClassDeclaration(rexpr, genContext, annInst);\n        SNode adapterFType = FunctionTypeUtil.getAdapterClassFunctionType(cls);\n        SNode ct = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n        SLinkOperations.setTarget(ct, \"classifier\", cls, false);\nwith_tvd:\n        for (SNode tvd : SLinkOperations.getTargets(cls, \"typeVariableDeclaration\", true)) {\n          if (SLinkOperations.getTarget(SNodeOperations.as(SLinkOperations.getTarget(adapterFType, \"resultType\", true), \"jetbrains.mps.baseLanguage.structure.TypeVariableReference\"), \"typeVariableDeclaration\", false) == tvd) {\n            ListSequence.fromList(SLinkOperations.getTargets(ct, \"parameter\", true)).addElement(ClassifierTypeUtil.getTypeCoercedToClassifierType(SNodeOperations.copyNode(SLinkOperations.getTarget(lFType, \"resultType\", true))));\n            continue;\n          } else {\n            for (int idx = 0; idx < ListSequence.fromList(SLinkOperations.getTargets(adapterFType, \"parameterType\", true)).count(); ++idx) {\n              if (SLinkOperations.getTarget(SNodeOperations.as(ListSequence.fromList(SLinkOperations.getTargets(adapterFType, \"parameterType\", true)).getElement(idx), \"jetbrains.mps.baseLanguage.structure.TypeVariableReference\"), \"typeVariableDeclaration\", false) == tvd) {\n                ListSequence.fromList(SLinkOperations.getTargets(ct, \"parameter\", true)).addElement(ClassifierTypeUtil.getTypeCoercedToClassifierType(SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(lFType, \"parameterType\", true)).getElement(idx))));\n                continue with_tvd;\n              }\n            }\n          }\n          ListSequence.fromList(SLinkOperations.getTargets(ct, \"parameter\", true)).addElement(new FunctionTypeUtil.QuotationClass_2t0coq_a0a0b0e0b0a0j0k().createNode(tvd));\n        }\n        // <node> \n        new ClosureLiteralTarget(genContext).setTarget(SNodeOperations.cast(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\"), ct);\n      } else if (SNodeOperations.isInstanceOf(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\") && (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(lFType, \"resultType\", true), \"jetbrains.mps.baseLanguage.structure.VoidType\")) || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(rFType, \"resultType\", true), \"jetbrains.mps.baseLanguage.structure.VoidType\") || ListSequence.fromList(SNodeOperations.getDescendants(SLinkOperations.getTarget(SNodeOperations.cast(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\"), \"body\", true), \"jetbrains.mps.baseLanguage.structure.ReturnStatement\", false, new String[]{})).all(new IWhereFilter<SNode>() {\n        public boolean accept(SNode rs) {\n          return (SLinkOperations.getTarget(rs, \"expression\", true) == null);\n        }\n      }))) {\n        // <node> \n        new ClosureLiteralTarget(genContext).setTarget(SNodeOperations.cast(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\"), FunctionType_Behavior.call_getDeclarationRuntimeType_811905832257074290(lFType, rFType));\n      } else if (SNodeOperations.isInstanceOf(rexpr, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\") || ListSequence.fromList(FunctionType_Behavior.call_getNormalizedThrowsTypes_3448422702164385781(lFType)).count() != ListSequence.fromList(FunctionType_Behavior.call_getNormalizedThrowsTypes_3448422702164385781(rFType)).count()) {\n        FunctionTypeUtil.addAdaptableClassifierTypeTarget(genContext, FunctionType_Behavior.call_getDeclarationRuntimeType_1230319610063(rFType), FunctionType_Behavior.call_getDeclarationRuntimeType_1230319610063(lFType));\n        Values.PREP_DATA.set(genContext, rexpr, INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(FunctionType_Behavior.call_getDeclarationRuntimeType_1230319610063(lFType), \"classifier\", false)));\n      }\n    }\n  }","commit_id":"a035196c1dbf6508e0b73d9487e62ac6644b6b3f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Test\n\tpublic void testSelectBigText_4000() {\n\n\t\t// those match all rows sharing the first 4000 characters\n\t\t// as CAST_CLOB_TEXT truncates data prior to comparison\n\n\t\tcheckResult(\n\t\t\trunSelect(_BIG_TEXT_A_4000, \"\"),\n\t\t\tnew String[] {\n\t\t\t\t_BIG_TEXT_A_4000, _BIG_TEXT_A_4001, _BIG_TEXT_A_4000_B\n\t\t\t});\n\n\t\tcheckResult(\n\t\t\trunSelect(_BIG_TEXT_A_3999_B, \"\"),\n\t\t\tnew String[] {_BIG_TEXT_A_3999_B, _BIG_TEXT_A_3999_BB});\n\t}","id":27262,"modified_method":"@Test\n\tpublic void testSelectBigText_4000() {\n\n\t\t// those match all rows sharing the first 4000 characters\n\t\t// as CAST_CLOB_TEXT truncates data prior to comparison\n\n\t\tcheckResult(\n\t\t\trunSelect(_BIG_TEXT_A_4000, \"\"), _BIG_TEXT_A_4000, _BIG_TEXT_A_4001,\n\t\t\t_BIG_TEXT_A_4000_B);\n\n\t\tcheckResult(\n\t\t\trunSelect(_BIG_TEXT_A_3999_B, \"\"), _BIG_TEXT_A_3999_B,\n\t\t\t_BIG_TEXT_A_3999_BB);\n\t}","commit_id":"0e521963f51f5b8077286c26da93331ff77320c9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testSelectBigText_3999() {\n\t\tcheckResult(\n\t\t\trunSelect(_BIG_TEXT_A_3999, \"\"), new String[] {_BIG_TEXT_A_3999});\n\t}","id":27263,"modified_method":"@Test\n\tpublic void testSelectBigText_3999() {\n\t\tcheckResult(runSelect(_BIG_TEXT_A_3999, \"\"), _BIG_TEXT_A_3999);\n\t}","commit_id":"0e521963f51f5b8077286c26da93331ff77320c9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testSelectBigText_4001() {\n\n\t\t// those match nothing as CAST_CLOB_TEXT truncates data prior to\n\t\t// comparison. Note this is intended behavior\n\n\t\t// selects where data = _BIG_TEXT_A_4001\n\n\t\tcheckResult(\n\t\t\trunSelect(_BIG_TEXT_A_4000, String.valueOf(_A)), _EMPTY_RESULT);\n\n\t\t// selects where data = _BIG_TEXT_A_3999_BB\n\n\t\tcheckResult(\n\t\t\trunSelect(_BIG_TEXT_A_3999_B, String.valueOf(_B)), _EMPTY_RESULT);\n\n\t\t// selects where data = _BIG_TEXT_A_4000_B\n\n\t\tcheckResult(\n\t\t\trunSelect(_BIG_TEXT_A_4000, String.valueOf(_B)), _EMPTY_RESULT);\n\t}","id":27264,"modified_method":"@Test\n\tpublic void testSelectBigText_4001() {\n\n\t\t// those match nothing as CAST_CLOB_TEXT truncates data prior to\n\t\t// comparison. Note this is intended behavior\n\n\t\t// selects where data = _BIG_TEXT_A_4001\n\n\t\tcheckResult(runSelect(_BIG_TEXT_A_4000, String.valueOf(_A)));\n\n\t\t// selects where data = _BIG_TEXT_A_3999_BB\n\n\t\tcheckResult(runSelect(_BIG_TEXT_A_3999_B, String.valueOf(_B)));\n\n\t\t// selects where data = _BIG_TEXT_A_4000_B\n\n\t\tcheckResult(runSelect(_BIG_TEXT_A_4000, String.valueOf(_B)));\n\t}","commit_id":"0e521963f51f5b8077286c26da93331ff77320c9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testSelectText_1() {\n\n\t\t// matches nothing\n\n\t\tcheckResult(runSelect(String.valueOf(_B), \"\"), _EMPTY_RESULT);\n\n\t\tcheckResult(runSelect(String.valueOf(_A), \"\"), _EMPTY_RESULT);\n\t}","id":27265,"modified_method":"@Test\n\tpublic void testSelectText_1() {\n\n\t\t// matches nothing\n\n\t\tcheckResult(runSelect(String.valueOf(_B), \"\"));\n\n\t\tcheckResult(runSelect(String.valueOf(_A), \"\"));\n\t}","commit_id":"0e521963f51f5b8077286c26da93331ff77320c9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testSelectBigText_3999() throws Exception {\n\t\tcheckResult(runSelect(_BIG_TEXT_A_3999), _BIG_TEXT_A_3999);\n\t}","id":27266,"modified_method":"@Test\n\tpublic void testSelectBigText_3999() throws Exception {\n\t\tAssert.assertEquals(\n\t\t\tArrays.asList(_BIG_TEXT_A_3999), runSelect(_BIG_TEXT_A_3999));\n\t}","commit_id":"44735afc082a46573eca7c3f1fe4b7f2b69d3457","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testSelectBigText_4001() throws Exception {\n\n\t\t// those match nothing as CAST_CLOB_TEXT truncates data prior to\n\t\t// comparison. Note this is intended behavior\n\n\t\t// selects where data = _BIG_TEXT_A_4001\n\n\t\tcheckResult(runSelect(_BIG_TEXT_A_4000, String.valueOf(_A)));\n\n\t\t// selects where data = _BIG_TEXT_A_3999_BB\n\n\t\tcheckResult(runSelect(_BIG_TEXT_A_3999_B_1, String.valueOf(_B)));\n\n\t\t// selects where data = _BIG_TEXT_A_4000_B\n\n\t\tcheckResult(runSelect(_BIG_TEXT_A_4000, String.valueOf(_B)));\n\t}","id":27267,"modified_method":"@Test\n\tpublic void testSelectBigText_4001() throws Exception {\n\n\t\t// those match nothing as CAST_CLOB_TEXT truncates data prior to\n\t\t// comparison. Note this is intended behavior\n\n\t\t// selects where data = _BIG_TEXT_A_4001\n\n\t\tList<String> list = runSelect(_BIG_TEXT_A_4000, String.valueOf(_A));\n\n\t\tAssert.assertTrue(list.toString(), list.isEmpty());\n\n\t\t// selects where data = _BIG_TEXT_A_3999_BB\n\n\t\tlist = runSelect(_BIG_TEXT_A_3999_B_1, String.valueOf(_B));\n\n\t\tAssert.assertTrue(list.toString(), list.isEmpty());\n\n\t\t// selects where data = _BIG_TEXT_A_4000_B\n\n\t\tlist = runSelect(_BIG_TEXT_A_4000, String.valueOf(_B));\n\n\t\tAssert.assertTrue(list.toString(), list.isEmpty());\n\t}","commit_id":"44735afc082a46573eca7c3f1fe4b7f2b69d3457","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testSelectBigText_4000() throws Exception {\n\n\t\t// those match all rows sharing the first 4000 characters\n\t\t// as CAST_CLOB_TEXT truncates data prior to comparison\n\n\t\tcheckResult(\n\t\t\trunSelect(_BIG_TEXT_A_4000), _BIG_TEXT_A_4000, _BIG_TEXT_A_4001,\n\t\t\t_BIG_TEXT_A_4000_B_1);\n\n\t\tcheckResult(\n\t\t\trunSelect(_BIG_TEXT_A_3999_B_1), _BIG_TEXT_A_3999_B_1,\n\t\t\t_BIG_TEXT_A_3999_B_2);\n\t}","id":27268,"modified_method":"@Test\n\tpublic void testSelectBigText_4000() throws Exception {\n\n\t\t// those match all rows sharing the first 4000 characters\n\t\t// as CAST_CLOB_TEXT truncates data prior to comparison\n\n\t\tAssert.assertEquals(\n\t\t\tArrays.asList(\n\t\t\t\t_BIG_TEXT_A_4000, _BIG_TEXT_A_4001, _BIG_TEXT_A_4000_B_1),\n\t\t\trunSelect(_BIG_TEXT_A_4000));\n\t\tAssert.assertEquals(\n\t\t\tArrays.asList(_BIG_TEXT_A_3999_B_1, _BIG_TEXT_A_3999_B_2),\n\t\t\trunSelect(_BIG_TEXT_A_3999_B_1));\n\t}","commit_id":"44735afc082a46573eca7c3f1fe4b7f2b69d3457","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testSelectText_1() throws Exception {\n\n\t\t// matches nothing\n\n\t\tcheckResult(runSelect(String.valueOf(_B)));\n\n\t\tcheckResult(runSelect(String.valueOf(_A)));\n\t}","id":27269,"modified_method":"@Test\n\tpublic void testSelectText_1() throws Exception {\n\n\t\t// matches nothing\n\n\t\tList<String> list = runSelect(String.valueOf(_A));\n\n\t\tAssert.assertTrue(list.toString(), list.isEmpty());\n\n\t\tlist = runSelect(String.valueOf(_B));\n\n\t\tAssert.assertTrue(list.toString(), list.isEmpty());\n\t}","commit_id":"44735afc082a46573eca7c3f1fe4b7f2b69d3457","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public MBStatsUser newMBStatsUser(long groupId) {\n\t\tMBStatsUser mbStatsUser = new MBStatsUserImpl();\n\n\t\tmbStatsUser.setStatsUserId(_counter.get());\n\t\tmbStatsUser.setGroupId(groupId);\n\t\tmbStatsUser.setUserId(_sampleUserId);\n\t\tmbStatsUser.setMessageCount(_maxMBMessageCount);\n\t\tmbStatsUser.setLastPostDate(new Date());\n\n\t\treturn mbStatsUser;\n\t}","id":27270,"modified_method":"public MBStatsUser newMBStatsUser(long groupId) {\n\t\tMBStatsUser mbStatsUser = new MBStatsUserImpl();\n\n\t\tmbStatsUser.setStatsUserId(_counter.get());\n\t\tmbStatsUser.setGroupId(groupId);\n\t\tmbStatsUser.setUserId(_sampleUserId);\n\t\tmbStatsUser.setMessageCount(\n\t\t\t_maxMBCategoryCount * _maxMBThreadCount * _maxMBMessageCount);\n\t\tmbStatsUser.setLastPostDate(new Date());\n\n\t\treturn mbStatsUser;\n\t}","commit_id":"19f2f92e893f73d39649b5820a592c5dcaf73139","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public DataFactory(\n\t\t\tString baseDir, int maxBlogsEntryCount, int maxGroupsCount,\n\t\t\tint maxJournalArticleSize, int maxMBCategoryCount,\n\t\t\tint maxMBThreadCount, int maxMBMessageCount,\n\t\t\tint maxUserToGroupCount)\n\t\tthrows Exception {\n\n\t\t_baseDir = baseDir;\n\t\t_maxBlogsEntryCount = maxBlogsEntryCount;\n\t\t_maxGroupsCount = maxGroupsCount;\n\t\t_maxMBMessageCountPerThread = maxMBMessageCount;\n\t\t_maxMBThreadCount = maxMBThreadCount;\n\t\t_maxMBMessageCountPerCategory = maxMBThreadCount * maxMBMessageCount;\n\t\t_maxMBMessageCount =\n\t\t\tmaxMBCategoryCount * maxMBThreadCount * maxMBMessageCount;\n\t\t_maxUserToGroupCount = maxUserToGroupCount;\n\n\t\t_counter = new SimpleCounter(_maxGroupsCount + 1);\n\t\t_futureDateCounter = new SimpleCounter();\n\t\t_resourcePermissionCounter = new SimpleCounter();\n\t\t_socialActivityCounter = new SimpleCounter();\n\t\t_userScreenNameCounter = new SimpleCounter();\n\n\t\t_classNames = new ArrayList<ClassName>();\n\n\t\tList<String> models = ModelHintsUtil.getModels();\n\n\t\tfor (String model : models) {\n\t\t\tClassName className = new ClassNameImpl();\n\n\t\t\tlong classNameId = _counter.get();\n\n\t\t\tclassName.setClassNameId(classNameId);\n\n\t\t\tclassName.setValue(model);\n\n\t\t\t_classNames.add(className);\n\n\t\t\t_classNamesMap.put(model, classNameId);\n\t\t}\n\n\t\t_accountId = _counter.get();\n\t\t_companyId = _counter.get();\n\t\t_sampleUserId = _counter.get();\n\n\t\tinitCompany();\n\t\tinitDLFileEntryType();\n\t\tinitGroups();\n\t\tinitJournalArticle(maxJournalArticleSize);\n\t\tinitRoles();\n\t\tinitUserNames();\n\t\tinitUsers();\n\t\tinitVirtualHost();\n\t}","id":27271,"modified_method":"public DataFactory(\n\t\t\tString baseDir, int maxBlogsEntryCount, int maxGroupsCount,\n\t\t\tint maxJournalArticleSize, int maxMBCategoryCount,\n\t\t\tint maxMBThreadCount, int maxMBMessageCount,\n\t\t\tint maxUserToGroupCount)\n\t\tthrows Exception {\n\n\t\t_baseDir = baseDir;\n\t\t_maxBlogsEntryCount = maxBlogsEntryCount;\n\t\t_maxGroupsCount = maxGroupsCount;\n\t\t_maxMBCategoryCount = maxMBCategoryCount;\n\t\t_maxMBThreadCount = maxMBThreadCount;\n\t\t_maxMBMessageCount = maxMBMessageCount;\n\t\t_maxUserToGroupCount = maxUserToGroupCount;\n\n\t\t_counter = new SimpleCounter(_maxGroupsCount + 1);\n\t\t_futureDateCounter = new SimpleCounter();\n\t\t_resourcePermissionCounter = new SimpleCounter();\n\t\t_socialActivityCounter = new SimpleCounter();\n\t\t_userScreenNameCounter = new SimpleCounter();\n\n\t\t_classNames = new ArrayList<ClassName>();\n\n\t\tList<String> models = ModelHintsUtil.getModels();\n\n\t\tfor (String model : models) {\n\t\t\tClassName className = new ClassNameImpl();\n\n\t\t\tlong classNameId = _counter.get();\n\n\t\t\tclassName.setClassNameId(classNameId);\n\n\t\t\tclassName.setValue(model);\n\n\t\t\t_classNames.add(className);\n\n\t\t\t_classNamesMap.put(model, classNameId);\n\t\t}\n\n\t\t_accountId = _counter.get();\n\t\t_companyId = _counter.get();\n\t\t_sampleUserId = _counter.get();\n\n\t\tinitCompany();\n\t\tinitDLFileEntryType();\n\t\tinitGroups();\n\t\tinitJournalArticle(maxJournalArticleSize);\n\t\tinitRoles();\n\t\tinitUserNames();\n\t\tinitUsers();\n\t\tinitVirtualHost();\n\t}","commit_id":"19f2f92e893f73d39649b5820a592c5dcaf73139","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public MBMessage newMBMessage(\n\t\tMBThread mbThread, long classNameId, long classPK, int currentIndex) {\n\n\t\tlong messageId = 0;\n\t\tlong parentMessageId = 0;\n\t\tlong rootMessageId = mbThread.getRootMessageId();\n\t\tString subject = null;\n\t\tString body = null;\n\n\t\tif (currentIndex == 0) {\n\t\t\tmessageId = rootMessageId;\n\t\t\tparentMessageId = MBMessageConstants.DEFAULT_PARENT_MESSAGE_ID;\n\t\t\tsubject = StringUtil.valueOf(classPK);\n\t\t\tbody = StringUtil.valueOf(classPK);\n\t\t}\n\t\telse {\n\t\t\tmessageId = _counter.get();\n\t\t\tparentMessageId = rootMessageId;\n\t\t\tsubject = \"N/A\";\n\t\t\tbody = \"This is a test comment \" + currentIndex + StringPool.PERIOD;\n\t\t}\n\n\t\treturn newMBMessage(\n\t\t\tmbThread.getGroupId(), classNameId, classPK,\n\t\t\tMBCategoryConstants.DISCUSSION_CATEGORY_ID, mbThread.getThreadId(),\n\t\t\tmessageId, rootMessageId, parentMessageId, subject, body);\n\t}","id":27272,"modified_method":"public MBMessage newMBMessage(\n\t\tMBThread mbThread, long classNameId, long classPK, int currentIndex) {\n\n\t\tlong messageId = 0;\n\t\tlong parentMessageId = 0;\n\t\tString subject = null;\n\t\tString body = null;\n\n\t\tif (currentIndex == 0) {\n\t\t\tmessageId = mbThread.getRootMessageId();\n\t\t\tparentMessageId = MBMessageConstants.DEFAULT_PARENT_MESSAGE_ID;\n\t\t\tsubject = StringUtil.valueOf(classPK);\n\t\t\tbody = StringUtil.valueOf(classPK);\n\t\t}\n\t\telse {\n\t\t\tmessageId = _counter.get();\n\t\t\tparentMessageId = mbThread.getRootMessageId();\n\t\t\tsubject = \"N/A\";\n\t\t\tbody = \"This is test comment \" + currentIndex + \".\";\n\t\t}\n\n\t\treturn newMBMessage(\n\t\t\tmbThread.getGroupId(), classNameId, classPK,\n\t\t\tMBCategoryConstants.DISCUSSION_CATEGORY_ID, mbThread.getThreadId(),\n\t\t\tmessageId, mbThread.getRootMessageId(), parentMessageId, subject,\n\t\t\tbody);\n\t}","commit_id":"19f2f92e893f73d39649b5820a592c5dcaf73139","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public JournalArticle newJournalArticle(\n\t\tJournalArticleResource journalArticleResource) {\n\n\t\tJournalArticle journalArticle = new JournalArticleImpl();\n\n\t\tjournalArticle.setUuid(SequentialUUID.generate());\n\t\tjournalArticle.setId(_counter.get());\n\t\tjournalArticle.setResourcePrimKey(\n\t\t\tjournalArticleResource.getResourcePrimKey());\n\t\tjournalArticle.setGroupId(journalArticleResource.getGroupId());\n\t\tjournalArticle.setCompanyId(_companyId);\n\t\tjournalArticle.setUserId(_sampleUserId);\n\t\tjournalArticle.setUserName(_sampleUser.getFullName());\n\t\tjournalArticle.setCreateDate(new Date());\n\t\tjournalArticle.setModifiedDate(new Date());\n\t\tjournalArticle.setClassNameId(\n\t\t\tJournalArticleConstants.CLASSNAME_ID_DEFAULT);\n\t\tjournalArticle.setArticleId(journalArticleResource.getArticleId());\n\t\tjournalArticle.setVersion(JournalArticleConstants.VERSION_DEFAULT);\n\t\tjournalArticle.setTitle(_JOURNAL_ARTICLE_TITLE);\n\t\tjournalArticle.setUrlTitle(\"Test Journal Article\");\n\t\tjournalArticle.setContent(_journalArticleContent);\n\t\tjournalArticle.setType(\"general\");\n\t\tjournalArticle.setDisplayDate(new Date());\n\t\tjournalArticle.setIndexable(true);\n\t\tjournalArticle.setExpirationDate(nextFutureDate());\n\t\tjournalArticle.setReviewDate(new Date());\n\t\tjournalArticle.setStatusDate(new Date());\n\n\t\treturn journalArticle;\n\t}","id":27273,"modified_method":"public JournalArticle newJournalArticle(\n\t\tJournalArticleResource journalArticleResource) {\n\n\t\tJournalArticle journalArticle = new JournalArticleImpl();\n\n\t\tjournalArticle.setUuid(SequentialUUID.generate());\n\t\tjournalArticle.setId(_counter.get());\n\t\tjournalArticle.setResourcePrimKey(\n\t\t\tjournalArticleResource.getResourcePrimKey());\n\t\tjournalArticle.setGroupId(journalArticleResource.getGroupId());\n\t\tjournalArticle.setCompanyId(_companyId);\n\t\tjournalArticle.setUserId(_sampleUserId);\n\t\tjournalArticle.setUserName(_sampleUser.getFullName());\n\t\tjournalArticle.setCreateDate(new Date());\n\t\tjournalArticle.setModifiedDate(new Date());\n\t\tjournalArticle.setClassNameId(\n\t\t\tJournalArticleConstants.CLASSNAME_ID_DEFAULT);\n\t\tjournalArticle.setArticleId(journalArticleResource.getArticleId());\n\t\tjournalArticle.setVersion(JournalArticleConstants.VERSION_DEFAULT);\n\t\tjournalArticle.setTitle(_JOURNAL_ARTICLE_TITLE);\n\t\tjournalArticle.setUrlTitle(\"Test Journal Article\");\n\t\tjournalArticle.setContent(_journalArticleContent);\n\t\tjournalArticle.setType(\"general\");\n\t\tjournalArticle.setDisplayDate(new Date());\n\t\tjournalArticle.setExpirationDate(nextFutureDate());\n\t\tjournalArticle.setReviewDate(new Date());\n\t\tjournalArticle.setIndexable(true);\n\t\tjournalArticle.setStatusDate(new Date());\n\n\t\treturn journalArticle;\n\t}","commit_id":"19f2f92e893f73d39649b5820a592c5dcaf73139","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected AssetEntry newAssetEntry(\n\t\tlong groupId, Date createDate, Date modifiedDate, long classNameId,\n\t\tlong classPK, String uuid, long classTypeId, boolean visible,\n\t\tString mimeType, String title) {\n\n\t\tAssetEntry assetEntry = new AssetEntryImpl();\n\n\t\tassetEntry.setEntryId(_counter.get());\n\t\tassetEntry.setGroupId(groupId);\n\t\tassetEntry.setCompanyId(_companyId);\n\t\tassetEntry.setUserId(_sampleUserId);\n\t\tassetEntry.setUserName(_sampleUser.getFullName());\n\t\tassetEntry.setCreateDate(createDate);\n\t\tassetEntry.setModifiedDate(modifiedDate);\n\t\tassetEntry.setClassNameId(classNameId);\n\t\tassetEntry.setClassPK(classPK);\n\t\tassetEntry.setClassUuid(uuid);\n\t\tassetEntry.setClassTypeId(classTypeId);\n\t\tassetEntry.setStartDate(createDate);\n\t\tassetEntry.setEndDate(nextFutureDate());\n\t\tassetEntry.setPublishDate(createDate);\n\t\tassetEntry.setExpirationDate(nextFutureDate());\n\t\tassetEntry.setVisible(visible);\n\t\tassetEntry.setMimeType(mimeType);\n\t\tassetEntry.setTitle(title);\n\n\t\treturn assetEntry;\n\t}","id":27274,"modified_method":"protected AssetEntry newAssetEntry(\n\t\tlong groupId, Date createDate, Date modifiedDate, long classNameId,\n\t\tlong classPK, String uuid, long classTypeId, boolean visible,\n\t\tString mimeType, String title) {\n\n\t\tAssetEntry assetEntry = new AssetEntryImpl();\n\n\t\tassetEntry.setEntryId(_counter.get());\n\t\tassetEntry.setGroupId(groupId);\n\t\tassetEntry.setCompanyId(_companyId);\n\t\tassetEntry.setUserId(_sampleUserId);\n\t\tassetEntry.setUserName(_sampleUser.getFullName());\n\t\tassetEntry.setCreateDate(createDate);\n\t\tassetEntry.setModifiedDate(modifiedDate);\n\t\tassetEntry.setClassNameId(classNameId);\n\t\tassetEntry.setClassPK(classPK);\n\t\tassetEntry.setClassUuid(uuid);\n\t\tassetEntry.setClassTypeId(classTypeId);\n\t\tassetEntry.setVisible(visible);\n\t\tassetEntry.setStartDate(createDate);\n\t\tassetEntry.setEndDate(nextFutureDate());\n\t\tassetEntry.setPublishDate(createDate);\n\t\tassetEntry.setExpirationDate(nextFutureDate());\n\t\tassetEntry.setMimeType(mimeType);\n\t\tassetEntry.setTitle(title);\n\n\t\treturn assetEntry;\n\t}","commit_id":"19f2f92e893f73d39649b5820a592c5dcaf73139","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public BlogsEntry newBlogsEntry(long groupId, int currentIndex) {\n\t\tBlogsEntry blogsEntry = new BlogsEntryImpl();\n\n\t\tblogsEntry.setUuid(SequentialUUID.generate());\n\t\tblogsEntry.setEntryId(_counter.get());\n\t\tblogsEntry.setGroupId(groupId);\n\t\tblogsEntry.setCompanyId(_companyId);\n\t\tblogsEntry.setUserId(_sampleUserId);\n\t\tblogsEntry.setUserName(_sampleUser.getFullName());\n\t\tblogsEntry.setCreateDate(new Date());\n\t\tblogsEntry.setModifiedDate(new Date());\n\t\tblogsEntry.setTitle(\"Test Blog \" + currentIndex);\n\t\tblogsEntry.setUrlTitle(\"testblog\" + currentIndex);\n\t\tblogsEntry.setContent(\n\t\t\t\"This is a test blog \" + currentIndex + StringPool.PERIOD);\n\t\tblogsEntry.setDisplayDate(new Date());\n\t\tblogsEntry.setStatusDate(new Date());\n\n\t\treturn blogsEntry;\n\t}","id":27275,"modified_method":"public BlogsEntry newBlogsEntry(long groupId, int currentIndex) {\n\t\tBlogsEntry blogsEntry = new BlogsEntryImpl();\n\n\t\tblogsEntry.setUuid(SequentialUUID.generate());\n\t\tblogsEntry.setEntryId(_counter.get());\n\t\tblogsEntry.setGroupId(groupId);\n\t\tblogsEntry.setCompanyId(_companyId);\n\t\tblogsEntry.setUserId(_sampleUserId);\n\t\tblogsEntry.setUserName(_sampleUser.getFullName());\n\t\tblogsEntry.setCreateDate(new Date());\n\t\tblogsEntry.setModifiedDate(new Date());\n\t\tblogsEntry.setTitle(\"Test Blog \" + currentIndex);\n\t\tblogsEntry.setUrlTitle(\"testblog\" + currentIndex);\n\t\tblogsEntry.setContent(\"This is test blog \" + currentIndex + \".\");\n\t\tblogsEntry.setDisplayDate(new Date());\n\t\tblogsEntry.setStatusDate(new Date());\n\n\t\treturn blogsEntry;\n\t}","commit_id":"19f2f92e893f73d39649b5820a592c5dcaf73139","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void initJournalArticle(int maxJournalArticleSize) {\n\t\tif (maxJournalArticleSize <= 0) {\n\t\t\tmaxJournalArticleSize = 1;\n\t\t}\n\n\t\tchar[] chars = new char[maxJournalArticleSize];\n\n\t\tfor (int i = 0; i < maxJournalArticleSize; i++) {\n\t\t\tchars[i] = (char)(CharPool.LOWER_CASE_A + (i % 26));\n\t\t}\n\n\t\t_journalArticleContent =\n\t\t\t\"<?xml version=\\\"1.0\\\"?><root available-locales=\\\"en_US\\\" \" +\n\t\t\t\t\"default-locale=\\\"en_US\\\"><static-content language-id=\" +\n\t\t\t\t\t\"\\\"en_US\\\"><![CDATA[<p>\" + new String(chars) + \"<\/p>]]>\" +\n\t\t\t\t\t\t\"<\/static-content><\/root>\";\n\t}","id":27276,"modified_method":"public void initJournalArticle(int maxJournalArticleSize) {\n\t\tStringBundler sb = new StringBundler();\n\n\t\tsb.append(\"<?xml version=\\\"1.0\\\"?><root available-locales=\\\"en_US\\\" \");\n\t\tsb.append(\"default-locale=\\\"en_US\\\"><static-content language-id=\");\n\t\tsb.append(\"\\\"en_US\\\"><![CDATA[<p>\");\n\n\t\tif (maxJournalArticleSize <= 0) {\n\t\t\tmaxJournalArticleSize = 1;\n\t\t}\n\n\t\tchar[] chars = new char[maxJournalArticleSize];\n\n\t\tfor (int i = 0; i < maxJournalArticleSize; i++) {\n\t\t\tchars[i] = (char)(CharPool.LOWER_CASE_A + (i % 26));\n\t\t}\n\n\t\tsb.append(new String(chars));\n\n\t\tsb.append(\"<\/p>]]><\/static-content><\/root>\");\n\n\t\t_journalArticleContent = sb.toString();\n\t}","commit_id":"19f2f92e893f73d39649b5820a592c5dcaf73139","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public MBMessage newMBMessage(MBThread mbThread, int currentIndex) {\n\t\tlong messageId = 0;\n\t\tlong parentMessageId = 0;\n\t\tlong rootMessageId = mbThread.getRootMessageId();\n\n\t\tif (currentIndex == 1) {\n\t\t\tmessageId = rootMessageId;\n\t\t\tparentMessageId = MBMessageConstants.DEFAULT_PARENT_MESSAGE_ID;\n\t\t}\n\t\telse {\n\t\t\tmessageId = _counter.get();\n\t\t\tparentMessageId = rootMessageId;\n\t\t}\n\n\t\tString subject = \"Test Message \" + currentIndex;\n\t\tString body =\n\t\t\t\"This is a test message \" + currentIndex + StringPool.PERIOD;\n\n\t\treturn newMBMessage(\n\t\t\tmbThread.getGroupId(), 0, 0, mbThread.getCategoryId(),\n\t\t\tmbThread.getThreadId(), messageId, rootMessageId, parentMessageId,\n\t\t\tsubject, body);\n\t}","id":27277,"modified_method":"public MBMessage newMBMessage(MBThread mbThread, int currentIndex) {\n\t\tlong messageId = 0;\n\t\tlong parentMessageId = 0;\n\n\t\tif (currentIndex == 1) {\n\t\t\tmessageId = mbThread.getRootMessageId();\n\t\t\tparentMessageId = MBMessageConstants.DEFAULT_PARENT_MESSAGE_ID;\n\t\t}\n\t\telse {\n\t\t\tmessageId = _counter.get();\n\t\t\tparentMessageId = mbThread.getRootMessageId();\n\t\t}\n\n\t\treturn newMBMessage(\n\t\t\tmbThread.getGroupId(), 0, 0, mbThread.getCategoryId(),\n\t\t\tmbThread.getThreadId(), messageId, mbThread.getRootMessageId(),\n\t\t\tparentMessageId, \"Test Message \" + currentIndex,\n\t\t\t\"This is test message \" + currentIndex + \".\");\n\t}","commit_id":"19f2f92e893f73d39649b5820a592c5dcaf73139","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public WikiPage newWikiPage(WikiNode wikiNode, int currentIndex) {\n\t\tWikiPage wikiPage = new WikiPageImpl();\n\n\t\twikiPage.setUuid(SequentialUUID.generate());\n\t\twikiPage.setPageId(_counter.get());\n\t\twikiPage.setResourcePrimKey(_counter.get());\n\t\twikiPage.setGroupId(wikiNode.getGroupId());\n\t\twikiPage.setCompanyId(_companyId);\n\t\twikiPage.setUserId(_sampleUserId);\n\t\twikiPage.setUserName(_sampleUser.getFullName());\n\t\twikiPage.setCreateDate(new Date());\n\t\twikiPage.setModifiedDate(new Date());\n\t\twikiPage.setNodeId(wikiNode.getNodeId());\n\t\twikiPage.setTitle(\"Test Page \" + currentIndex);\n\t\twikiPage.setVersion(WikiPageConstants.VERSION_DEFAULT);\n\t\twikiPage.setContent(\n\t\t\t\"This is a test page \" + currentIndex + StringPool.PERIOD);\n\t\twikiPage.setFormat(WikiPageConstants.DEFAULT_FORMAT);\n\t\twikiPage.setHead(true);\n\n\t\treturn wikiPage;\n\t}","id":27278,"modified_method":"public WikiPage newWikiPage(WikiNode wikiNode, int currentIndex) {\n\t\tWikiPage wikiPage = new WikiPageImpl();\n\n\t\twikiPage.setUuid(SequentialUUID.generate());\n\t\twikiPage.setPageId(_counter.get());\n\t\twikiPage.setResourcePrimKey(_counter.get());\n\t\twikiPage.setGroupId(wikiNode.getGroupId());\n\t\twikiPage.setCompanyId(_companyId);\n\t\twikiPage.setUserId(_sampleUserId);\n\t\twikiPage.setUserName(_sampleUser.getFullName());\n\t\twikiPage.setCreateDate(new Date());\n\t\twikiPage.setModifiedDate(new Date());\n\t\twikiPage.setNodeId(wikiNode.getNodeId());\n\t\twikiPage.setTitle(\"Test Page \" + currentIndex);\n\t\twikiPage.setVersion(WikiPageConstants.VERSION_DEFAULT);\n\t\twikiPage.setContent(\"This is test page \" + currentIndex + \".\");\n\t\twikiPage.setFormat(WikiPageConstants.DEFAULT_FORMAT);\n\t\twikiPage.setHead(true);\n\n\t\treturn wikiPage;\n\t}","commit_id":"19f2f92e893f73d39649b5820a592c5dcaf73139","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public MBCategory newMBCategory(long groupId, int currentIndex) {\n\t\tMBCategory mbCategory = new MBCategoryImpl();\n\n\t\tmbCategory.setUuid(SequentialUUID.generate());\n\t\tmbCategory.setCategoryId(_counter.get());\n\t\tmbCategory.setGroupId(groupId);\n\t\tmbCategory.setCompanyId(_companyId);\n\t\tmbCategory.setUserId(_sampleUserId);\n\t\tmbCategory.setUserName(_sampleUser.getFullName());\n\t\tmbCategory.setCreateDate(new Date());\n\t\tmbCategory.setModifiedDate(new Date());\n\t\tmbCategory.setParentCategoryId(\n\t\t\tMBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID);\n\t\tmbCategory.setName(\"Test Category \" + currentIndex);\n\t\tmbCategory.setDisplayStyle(MBCategoryConstants.DEFAULT_DISPLAY_STYLE);\n\t\tmbCategory.setThreadCount(_maxMBThreadCount);\n\t\tmbCategory.setMessageCount(_maxMBMessageCountPerCategory);\n\t\tmbCategory.setLastPostDate(new Date());\n\t\tmbCategory.setStatusDate(new Date());\n\n\t\treturn mbCategory;\n\t}","id":27279,"modified_method":"public MBCategory newMBCategory(long groupId, int currentIndex) {\n\t\tMBCategory mbCategory = new MBCategoryImpl();\n\n\t\tmbCategory.setUuid(SequentialUUID.generate());\n\t\tmbCategory.setCategoryId(_counter.get());\n\t\tmbCategory.setGroupId(groupId);\n\t\tmbCategory.setCompanyId(_companyId);\n\t\tmbCategory.setUserId(_sampleUserId);\n\t\tmbCategory.setUserName(_sampleUser.getFullName());\n\t\tmbCategory.setCreateDate(new Date());\n\t\tmbCategory.setModifiedDate(new Date());\n\t\tmbCategory.setParentCategoryId(\n\t\t\tMBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID);\n\t\tmbCategory.setName(\"Test Category \" + currentIndex);\n\t\tmbCategory.setDisplayStyle(MBCategoryConstants.DEFAULT_DISPLAY_STYLE);\n\t\tmbCategory.setThreadCount(_maxMBThreadCount);\n\t\tmbCategory.setMessageCount(_maxMBThreadCount * _maxMBMessageCount);\n\t\tmbCategory.setLastPostDate(new Date());\n\t\tmbCategory.setStatusDate(new Date());\n\n\t\treturn mbCategory;\n\t}","commit_id":"19f2f92e893f73d39649b5820a592c5dcaf73139","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public MBThread newMBThread(MBCategory mbCategory) {\n\t\treturn newMBThread(\n\t\t\t_counter.get(), mbCategory.getGroupId(), mbCategory.getCategoryId(),\n\t\t\t_counter.get(), _maxMBMessageCountPerThread);\n\t}","id":27280,"modified_method":"public MBThread newMBThread(MBCategory mbCategory) {\n\t\treturn newMBThread(\n\t\t\t_counter.get(), mbCategory.getGroupId(), mbCategory.getCategoryId(),\n\t\t\t_counter.get(), _maxMBMessageCount);\n\t}","commit_id":"19f2f92e893f73d39649b5820a592c5dcaf73139","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void addComment(\n\t\t\tlong userId, long groupId, String className, long classPK,\n\t\t\tString body, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tMBMessageDisplay messageDisplay =\n\t\t\t_mbMessageLocalService.getDiscussionMessageDisplay(\n\t\t\t\tuserId, groupId, className, classPK,\n\t\t\t\tWorkflowConstants.STATUS_APPROVED);\n\n\t\tMBThread thread = messageDisplay.getThread();\n\n\t\tlong threadId = thread.getThreadId();\n\t\tlong parentMessageId = thread.getRootMessageId();\n\n\t\tList<MBMessage> messages =\n\t\t\t_mbMessageLocalService.getThreadMessages(\n\t\t\t\tthreadId, WorkflowConstants.STATUS_APPROVED);\n\n\t\tfor (MBMessage message : messages) {\n\t\t\tString messageBody = message.getBody();\n\n\t\t\tif (messageBody.equals(messageBody)) {\n\t\t\t\tthrow new DuplicateCommentException();\n\t\t\t}\n\t\t}\n\n\t\t_mbMessageLocalService.addDiscussionMessage(\n\t\t\tuserId, StringPool.BLANK, groupId, className, classPK, threadId,\n\t\t\tparentMessageId, StringPool.BLANK, body, serviceContext);\n\t}","id":27281,"modified_method":"@Override\n\tpublic void addComment(\n\t\t\tlong userId, long groupId, String className, long classPK,\n\t\t\tString body, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tMBMessageDisplay messageDisplay =\n\t\t\t_mbMessageLocalService.getDiscussionMessageDisplay(\n\t\t\t\tuserId, groupId, className, classPK,\n\t\t\t\tWorkflowConstants.STATUS_APPROVED);\n\n\t\tMBThread thread = messageDisplay.getThread();\n\n\t\tList<MBMessage> messages =\n\t\t\t_mbMessageLocalService.getThreadMessages(\n\t\t\t\tthread.getThreadId(), WorkflowConstants.STATUS_APPROVED);\n\n\t\tfor (MBMessage message : messages) {\n\t\t\tString messageBody = message.getBody();\n\n\t\t\tif (messageBody.equals(messageBody)) {\n\t\t\t\tthrow new DuplicateCommentException();\n\t\t\t}\n\t\t}\n\n\t\t_mbMessageLocalService.addDiscussionMessage(\n\t\t\tuserId, StringPool.BLANK, groupId, className, classPK,\n\t\t\tthread.getThreadId(), thread.getRootMessageId(), StringPool.BLANK,\n\t\t\tbody, serviceContext);\n\t}","commit_id":"2510084a614711bbd25ad37b8e368f6513fe817f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testAddCommentWithUsernameAndSubject() throws Exception {\n\t\twhen(\n\t\t\t_mbMessage.getMessageId()\n\t\t).thenReturn(\n\t\t\t_MBMESSAGE_ID\n\t\t);\n\n\t\tAssert.assertEquals(\n\t\t\t_MBMESSAGE_ID,\n\t\t\t_mbCommentManagerImpl.addComment(\n\t\t\t\t_USER_ID, _GROUP_ID, _CLASS_NAME, _ENTRY_ID, _USER_NAME,\n\t\t\t\t_SUBJECT, _BODY, _serviceContextFunction));\n\n\t\tMockito.verify(\n\t\t\t_mbMessageLocalService\n\t\t).addDiscussionMessage(\n\t\t\t_USER_ID, _USER_NAME, _GROUP_ID, _CLASS_NAME, _ENTRY_ID, _THREAD_ID,\n\t\t\t_ROOT_MESSAGE_ID, _SUBJECT, _BODY, _serviceContext\n\t\t);\n\n\t\tMockito.verify(\n\t\t\t_mbMessageLocalService\n\t\t).getDiscussionMessageDisplay(\n\t\t\t_USER_ID, _GROUP_ID, _CLASS_NAME, _ENTRY_ID,\n\t\t\tWorkflowConstants.STATUS_APPROVED\n\t\t);\n\t}","id":27282,"modified_method":"@Test\n\tpublic void testAddCommentWithUserNameAndSubject() throws Exception {\n\t\twhen(\n\t\t\t_mbMessage.getMessageId()\n\t\t).thenReturn(\n\t\t\t_MBMESSAGE_ID\n\t\t);\n\n\t\tAssert.assertEquals(\n\t\t\t_MBMESSAGE_ID,\n\t\t\t_mbCommentManagerImpl.addComment(\n\t\t\t\t_USER_ID, _GROUP_ID, _CLASS_NAME, _ENTRY_ID, _USER_NAME,\n\t\t\t\t_SUBJECT, _BODY, _serviceContextFunction));\n\n\t\tMockito.verify(\n\t\t\t_mbMessageLocalService\n\t\t).addDiscussionMessage(\n\t\t\t_USER_ID, _USER_NAME, _GROUP_ID, _CLASS_NAME, _ENTRY_ID, _THREAD_ID,\n\t\t\t_ROOT_MESSAGE_ID, _SUBJECT, _BODY, _serviceContext\n\t\t);\n\n\t\tMockito.verify(\n\t\t\t_mbMessageLocalService\n\t\t).getDiscussionMessageDisplay(\n\t\t\t_USER_ID, _GROUP_ID, _CLASS_NAME, _ENTRY_ID,\n\t\t\tWorkflowConstants.STATUS_APPROVED\n\t\t);\n\t}","commit_id":"2510084a614711bbd25ad37b8e368f6513fe817f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic Response execute(long companyId) {\n\t\ttry {\n\t\t\taddPingback(companyId);\n\n\t\t\treturn XmlRpcUtil.createSuccess(\"Pingback accepted\");\n\t\t}\n\t\tcatch (DuplicateCommentException dce) {\n\t\t\treturn XmlRpcUtil.createFault(\n\t\t\t\tPINGBACK_ALREADY_REGISTERED, \"Pingback previously registered\");\n\t\t}\n\t\tcatch (InvalidSourceURIException isue) {\n\t\t\treturn XmlRpcUtil.createFault(\n\t\t\t\tSOURCE_URI_INVALID, isue.getMessage());\n\t\t}\n\t\tcatch (PingbackDisabledException pde) {\n\t\t\treturn XmlRpcUtil.createFault(\n\t\t\t\tXmlRpcConstants.REQUESTED_METHOD_NOT_FOUND, pde.getMessage());\n\t\t}\n\t\tcatch (UnavailableSourceURIException usue) {\n\t\t\treturn XmlRpcUtil.createFault(\n\t\t\t\tSOURCE_URI_DOES_NOT_EXIST, usue.getMessage());\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(e, e);\n\t\t\t}\n\n\t\t\treturn XmlRpcUtil.createFault(\n\t\t\t\tTARGET_URI_INVALID, \"Error parsing target URI\");\n\t\t}\n\t}","id":27283,"modified_method":"@Override\n\tpublic Response execute(long companyId) {\n\t\ttry {\n\t\t\taddPingback(companyId);\n\n\t\t\treturn XmlRpcUtil.createSuccess(\"Pingback accepted\");\n\t\t}\n\t\tcatch (DuplicateCommentException dce) {\n\t\t\treturn XmlRpcUtil.createFault(\n\t\t\t\tPINGBACK_ALREADY_REGISTERED, \"Pingback previously registered\");\n\t\t}\n\t\tcatch (InvalidSourceURIException isue) {\n\t\t\treturn XmlRpcUtil.createFault(\n\t\t\t\tSOURCE_URI_INVALID, isue.getMessage());\n\t\t}\n\t\tcatch (PingbackDisabledException pde) {\n\t\t\treturn XmlRpcUtil.createFault(\n\t\t\t\tXmlRpcConstants.REQUESTED_METHOD_NOT_FOUND, pde.getMessage());\n\t\t}\n\t\tcatch (UnavailableSourceURIException usue) {\n\t\t\treturn XmlRpcUtil.createFault(\n\t\t\t\tSOURCE_URI_DOES_NOT_EXIST, usue.getMessage());\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(e, e);\n\t\t\t}\n\n\t\t\treturn XmlRpcUtil.createFault(\n\t\t\t\tTARGET_URI_INVALID, \"Unable to parse target URI\");\n\t\t}\n\t}","commit_id":"2510084a614711bbd25ad37b8e368f6513fe817f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void performLeaseCheck() {\n        if (leaseCheckDisabled || !renewed) {\n            // if leaseCheckDisabled is set we never do the check, so return fast\n\n            // the 'renewed' flag indicates if this instance *ever* renewed the lease after startup\n            // until that is not set, we cannot do the lease check (otherwise startup wouldn't work)\n            return;\n        }\n        if (leaseCheckFailed) {\n            // unsynchronized access to leaseCheckFailed is fine\n            // since it only ever changes from false to true once\n            // and should the current thread read it erroneously\n            // as false here, it would further down find out that\n            // the lease has indeed still expired and then\n            // go into the synchronized.\n            // (note that once a lease check failed it would not\n            // be updated again, ever, as guaranteed by checking\n            // for leaseCheckFailed in renewLease() )\n            LOG.error(LEASE_CHECK_FAILED_MSG);\n            throw new AssertionError(LEASE_CHECK_FAILED_MSG);\n        }\n        long now = getCurrentTime();\n        // OAK-3238 put the barrier 1/3 of 60sec=20sec before the end\n        // OAK-3398 keeps this the same but uses an explicit leaseFailureMargin for this\n        if (now < (leaseEndTime - leaseFailureMargin)) {\n            // then all is good\n            return;\n        }\n        synchronized(this) {\n            if (leaseCheckFailed) {\n                LOG.error(LEASE_CHECK_FAILED_MSG);\n                throw new AssertionError(LEASE_CHECK_FAILED_MSG);\n            }\n            // synchronized could have delayed the 'now', so\n            // set it again..\n            now = getCurrentTime();\n            if (now < (leaseEndTime - leaseFailureMargin)) {\n                // if lease is OK here, then there was a race\n                // between performLeaseCheck and renewLease()\n                // where the winner was: renewLease().\n                // so: luckily we can continue here\n                return;\n            }\n            leaseCheckFailed = true; // make sure only one thread 'wins', ie goes any further\n        }\n        \n        // OAK-3397 : unlike previously, when the lease check fails we should not\n        // do a hard System exit here but rather stop the oak-core bundle \n        // (or if that fails just deactivate DocumentNodeStore) - with the\n        // goals to prevent this instance to continue to operate\n        // give that a lease failure is a strong indicator of a faulty\n        // instance - and to stop the background threads of DocumentNodeStore,\n        // specifically the BackgroundLeaseUpdate and the BackgroundOperation.\n        \n        final String restarterErrorMsg = LEASE_CHECK_FAILED_MSG+\" (leaseEndTime: \"+leaseEndTime+\n                \", leaseTime: \"+leaseTime+\n                \", leaseFailureMargin: \"+leaseFailureMargin+\n                \", lease check end time (leaseEndTime-leaseFailureMargin): \"+(leaseEndTime - leaseFailureMargin)+\n                \", now: \"+now+\n                \", remaining: \"+((leaseEndTime - leaseFailureMargin) - now)+\n                \") Need to stop oak-core/DocumentNodeStoreService.\";\n        LOG.error(restarterErrorMsg);\n        \n        // actual stopping should be done in a separate thread, so:\n        if (leaseFailureHandler!=null) {\n            final Runnable r = new Runnable() {\n    \n                @Override\n                public void run() {\n                    if (leaseFailureHandler!=null) {\n                        leaseFailureHandler.handleLeaseFailure();\n                    }\n                }\n            };\n            final Thread th = new Thread(r, \"LeaseFailureHandler-Thread\");\n            th.setDaemon(true);\n            th.start();\n        }\n\n        throw new AssertionError(restarterErrorMsg);\n    }","id":27284,"modified_method":"public void performLeaseCheck() {\n        if (leaseCheckDisabled || !renewed) {\n            // if leaseCheckDisabled is set we never do the check, so return fast\n\n            // the 'renewed' flag indicates if this instance *ever* renewed the lease after startup\n            // until that is not set, we cannot do the lease check (otherwise startup wouldn't work)\n            return;\n        }\n        if (leaseCheckFailed) {\n            // unsynchronized access to leaseCheckFailed is fine\n            // since it only ever changes from false to true once\n            // and should the current thread read it erroneously\n            // as false here, it would further down find out that\n            // the lease has indeed still expired and then\n            // go into the synchronized.\n            // (note that once a lease check failed it would not\n            // be updated again, ever, as guaranteed by checking\n            // for leaseCheckFailed in renewLease() )\n            LOG.error(LEASE_CHECK_FAILED_MSG);\n            throw new AssertionError(LEASE_CHECK_FAILED_MSG);\n        }\n        long now = getCurrentTime();\n        // OAK-3238 put the barrier 1/3 of 60sec=20sec before the end\n        // OAK-3398 keeps this the same but uses an explicit leaseFailureMargin for this\n        if (now < (leaseEndTime - leaseFailureMargin)) {\n            // then all is good\n            return;\n        }\n        // synchronized: we need to guard leaseCheckFailed in order to ensure\n        //               that it is only set by 1 thread - thus handleLeaseFailure\n        //               is guaranteed to be only called once\n        synchronized(this) {\n            if (leaseCheckFailed) {\n                // someone else won and marked leaseCheckFailed - so we only log/throw\n                LOG.error(LEASE_CHECK_FAILED_MSG);\n                throw new AssertionError(LEASE_CHECK_FAILED_MSG);\n            }\n            // synchronized could have delayed the 'now', so\n            // set it again..\n            now = getCurrentTime();\n            if (now < (leaseEndTime - leaseFailureMargin)) {\n                // if lease is OK here, then there was a race\n                // between performLeaseCheck and renewLease()\n                // where the winner was: renewLease().\n                // so: luckily we can continue here\n                return;\n            }\n            leaseCheckFailed = true; // make sure only one thread 'wins', ie goes any further\n        }\n        \n        final String errorMsg = LEASE_CHECK_FAILED_MSG+\" (leaseEndTime: \"+leaseEndTime+\n                \", leaseTime: \"+leaseTime+\n                \", leaseFailureMargin: \"+leaseFailureMargin+\n                \", lease check end time (leaseEndTime-leaseFailureMargin): \"+(leaseEndTime - leaseFailureMargin)+\n                \", now: \"+now+\n                \", remaining: \"+((leaseEndTime - leaseFailureMargin) - now)+\n                \") Need to stop oak-core/DocumentNodeStoreService.\";\n        LOG.error(errorMsg);\n\n        handleLeaseFailure(errorMsg);\n    }","commit_id":"b06584552bb0299ad40a6348a96a32e2d485b811","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     * Renew the cluster id lease. This method needs to be called once in a while,\n     * to ensure the same cluster id is not re-used by a different instance.\n     * The lease is only renewed when after leaseUpdateInterval millis\n     * since last lease update - default being every 10 sec.\n     *\n     * @return {@code true} if the lease was renewed; {@code false} otherwise.\n     */\n    public boolean renewLease() {\n        long now = getCurrentTime();\n        if (now < leaseEndTime - leaseTime + leaseUpdateInterval) {\n            return false;\n        }\n        synchronized(this) {\n            if (leaseCheckFailed) {\n                // prevent lease renewal after it failed\n                LOG.error(LEASE_CHECK_FAILED_MSG);\n                throw new AssertionError(LEASE_CHECK_FAILED_MSG);\n            }\n            // synchronized could have delayed the 'now', so\n            // set it again..\n            now = getCurrentTime();\n            leaseEndTime = now + leaseTime;\n        }\n        UpdateOp update = new UpdateOp(\"\" + id, true);\n        update.set(LEASE_END_KEY, leaseEndTime);\n        update.set(STATE, ClusterNodeState.ACTIVE.name());\n        ClusterNodeInfoDocument doc = store.createOrUpdate(Collection.CLUSTER_NODES, update);\n        String mode = (String) doc.get(READ_WRITE_MODE_KEY);\n        if (mode != null && !mode.equals(readWriteMode)) {\n            readWriteMode = mode;\n            store.setReadWriteMode(mode);\n        }\n        renewed = true;\n        return true;\n    }","id":27285,"modified_method":"/**\n     * Renew the cluster id lease. This method needs to be called once in a while,\n     * to ensure the same cluster id is not re-used by a different instance.\n     * The lease is only renewed after 'leaseUpdateInterval' millis\n     * since last lease update - default being every 10 sec (this used to be 30sec).\n     *\n     * @return {@code true} if the lease was renewed; {@code false} otherwise.\n     */\n    public boolean renewLease() {\n        long now = getCurrentTime();\n        if (now < leaseEndTime - leaseTime + leaseUpdateInterval) {\n            // no need to renew the lease - it is still within 'leaseUpdateInterval'\n            return false;\n        }\n        // lease requires renewal\n        \n        synchronized(this) {\n            // this is synchronized since access to leaseCheckFailed and leaseEndTime\n            // are both normally synchronzied to propagate values between renewLease() \n            // and performLeaseCheck().\n            // (there are unsychronized accesses to both of these as well - however\n            // they are both double-checked - and with both reading a stale value is thus OK)\n            \n            if (leaseCheckFailed) {\n                // prevent lease renewal after it failed\n                LOG.error(LEASE_CHECK_FAILED_MSG);\n                throw new AssertionError(LEASE_CHECK_FAILED_MSG);\n            }\n            // synchronized could have delayed the 'now', so\n            // set it again..\n            now = getCurrentTime();\n            leaseEndTime = now + leaseTime;\n        }\n        UpdateOp update = new UpdateOp(\"\" + id, true);\n        update.set(LEASE_END_KEY, leaseEndTime);\n        update.set(STATE, ClusterNodeState.ACTIVE.name());\n        ClusterNodeInfoDocument doc = null;\n        if (renewed && !leaseCheckDisabled) { // if leaseCheckDisabled, then we just update the lease without checking\n            // OAK-3398:\n            // if we renewed the lease ever with this instance/ClusterNodeInfo\n            // (which is the normal case.. except for startup),\n            // then we can now make an assertion that the lease is unchanged\n            // and the incremental update must only succeed if no-one else\n            // did a recover/inactivation in the meantime\n            update.setNew(false); // in this case it is *not* a new document\n            // make two assertions: the leaseEnd must match ..\n            update.equals(LEASE_END_KEY, null, previousLeaseEndTime);\n            // plus it must still be active ..\n            update.equals(STATE, null, ClusterNodeState.ACTIVE.name());\n            // @TODO: to make it 100% failure proof we could introduce\n            // yet another field to clusterNodes: a runtimeId that we\n            // create (UUID) at startup each time - and against that\n            // we could also check here - but that goes a bit far IMO\n            doc = store.findAndUpdate(Collection.CLUSTER_NODES, update);\n        } else {\n            // this is only for startup - then we 'just' overwrite\n            // the lease - or create it - and don't care a lot about what the\n            // status of the lease was\n            doc = store.createOrUpdate(Collection.CLUSTER_NODES, update);\n        }\n        if (doc==null) { // should not occur when leaseCheckDisabled\n            // OAK-3398 : someone else either started recovering or is already through with that.\n            // in both cases the local instance lost the lease-update-game - and hence\n            // should behave and must consider itself as 'lease failed'\n\n            synchronized(this) {                \n                if (leaseCheckFailed) {\n                    // somehow the instance figured out otherwise that the \n                    // lease check failed - so we don't have to too - so we just log/throw\n                    LOG.error(LEASE_CHECK_FAILED_MSG);\n                    throw new AssertionError(LEASE_CHECK_FAILED_MSG);\n                }\n                leaseCheckFailed = true; // make sure only one thread 'wins', ie goes any further\n            }\n            final String errorMsg = LEASE_CHECK_FAILED_MSG+\n                    \" (Could not update lease anymore, someone else in the cluster \"\n                    + \"must have noticed this instance' slowness already. \"\n                    + \"Going to invoke leaseFailureHandler!)\";\n            LOG.error(errorMsg);\n\n            handleLeaseFailure(errorMsg);\n            // should never be reached: handleLeaseFailure throws an AssertionError\n            return false;\n        }\n        previousLeaseEndTime = leaseEndTime; // store previousLeaseEndTime for reference for next time\n        String mode = (String) doc.get(READ_WRITE_MODE_KEY);\n        if (mode != null && !mode.equals(readWriteMode)) {\n            readWriteMode = mode;\n            store.setReadWriteMode(mode);\n        }\n        renewed = true;\n        return true;\n    }","commit_id":"b06584552bb0299ad40a6348a96a32e2d485b811","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    @DB\n    public void scheduleRulesetUpdateToHosts(List<Long> affectedVms, boolean updateSeqno, Long delayMs) {\n        if (affectedVms.size() == 0) {\n            return;\n        }\n        if (s_logger.isTraceEnabled()) {\n            s_logger.trace(\"Security Group Mgr2: scheduling ruleset updates for \" + affectedVms.size() + \" vms\");\n        }\n        Set<Long> workItems = new TreeSet<Long>();\n        workItems.addAll(affectedVms);\n    \n        Transaction txn = Transaction.currentTxn();\n        txn.start();\n        _rulesetLogDao.createOrUpdate(workItems);\n        txn.commit();\n        _workQueue.submitWorkForVms(workItems);\n    }","id":27286,"modified_method":"@Override\n    //@DB\n    public void scheduleRulesetUpdateToHosts(List<Long> affectedVms, boolean updateSeqno, Long delayMs) {\n        if (affectedVms.size() == 0) {\n            return;\n        }\n        Set<Long> workItems = new TreeSet<Long>();\n        workItems.addAll(affectedVms);\n        if (s_logger.isTraceEnabled()) {\n            s_logger.trace(\"Security Group Mgr v2: scheduling ruleset updates for \" + affectedVms.size() + \" vms \" + \" (unique=\" + workItems.size() + \"), current queue size=\" + _workQueue.size());\n        }\n\n        Profiler p = new Profiler();\n        p.start();\n        int updated = _rulesetLogDao.createOrUpdate(workItems);\n        int newJobs = _workQueue.submitWorkForVms(workItems);\n        p.stop();\n        if (s_logger.isTraceEnabled()){\n            s_logger.trace(\"Security Group Mgr v2: done scheduling ruleset updates for \" + workItems.size() + \" vms: num new jobs=\" + \n                           newJobs + \" num rows insert or updated=\" + updated + \" time taken=\" + p.getDuration());\n        }\n    }","commit_id":"d03c5af72036cbbd86e3e12727aff93e75af9207","url":"https://github.com/apache/cloudstack"},{"original_method":"protected void sendRulesetUpdates(SecurityGroupWork work){\n        Long userVmId = work.getInstanceId();\n        UserVm vm = _userVMDao.findById(userVmId);\n\n        if (vm != null && vm.getState() == State.Running) {\n            Map<PortAndProto, Set<String>> rules = generateRulesForVM(userVmId);\n            Long agentId = vm.getHostId();\n            if (agentId != null) {\n                SecurityIngressRulesCmd cmd = generateRulesetCmd(vm.getInstanceName(), vm.getPrivateIpAddress(), \n                        vm.getPrivateMacAddress(), vm.getId(), generateRulesetSignature(rules), \n                        work.getLogsequenceNumber(), rules);\n                Commands cmds = new Commands(cmd);\n                try {\n                    _agentMgr.send(agentId, cmds, _answerListener);\n                } catch (AgentUnavailableException e) {\n                    s_logger.debug(\"Unable to send updates for vm: \" + userVmId + \"(agentid=\" + agentId + \")\");\n                }\n            }\n        } else {\n            if (s_logger.isTraceEnabled()) {\n                if (vm != null)\n                    s_logger.trace(\"No rules sent to vm \" + vm + \"state=\" + vm.getState());\n                else\n                    s_logger.trace(\"Could not find vm: No rules sent to vm \" + userVmId );\n            }\n        }\n    }","id":27287,"modified_method":"protected void sendRulesetUpdates(SecurityGroupWork work){\n        Long userVmId = work.getInstanceId();\n        UserVm vm = _userVMDao.findById(userVmId);\n\n        if (vm != null && vm.getState() == State.Running) {\n            Map<PortAndProto, Set<String>> rules = generateRulesForVM(userVmId);\n            Long agentId = vm.getHostId();\n            if (agentId != null) {\n                SecurityIngressRulesCmd cmd = generateRulesetCmd(vm.getInstanceName(), vm.getPrivateIpAddress(), \n                        vm.getPrivateMacAddress(), vm.getId(), generateRulesetSignature(rules), \n                        work.getLogsequenceNumber(), rules);\n                if (s_logger.isTraceEnabled()) {\n                    s_logger.trace(\"SecurityGroupManager v2: sending ruleset update for vm \" + vm.getInstanceName() + \n                                   \": num rules=\" + cmd.getRuleSet().length + \" num cidrs=\" + cmd.getTotalNumCidrs());\n                }\n                Commands cmds = new Commands(cmd);\n                try {\n                    _agentMgr.send(agentId, cmds, _answerListener);\n                    if (s_logger.isTraceEnabled()) {\n                        s_logger.trace(\"SecurityGroupManager v2: sent ruleset updates for \" + vm.getInstanceName() + \" curr queue size=\" + _workQueue.size());\n                    }\n                } catch (AgentUnavailableException e) {\n                    s_logger.debug(\"Unable to send updates for vm: \" + userVmId + \"(agentid=\" + agentId + \")\");\n                }\n            }\n        } else {\n            if (s_logger.isTraceEnabled()) {\n                if (vm != null)\n                    s_logger.trace(\"No rules sent to vm \" + vm + \"state=\" + vm.getState());\n                else\n                    s_logger.trace(\"Could not find vm: No rules sent to vm \" + userVmId );\n            }\n        }\n    }","commit_id":"d03c5af72036cbbd86e3e12727aff93e75af9207","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void createOrUpdate(Set<Long> workItems) {\n        Transaction txn = Transaction.currentTxn();\n        PreparedStatement stmtInsert = null;\n        int [] queryResult = null;\n        boolean success = true;\n        try {\n            stmtInsert = txn.prepareAutoCloseStatement(INSERT_OR_UPDATE);\n            txn.start();\n            for (Long vmId: workItems) {\n                stmtInsert.setLong(1, vmId);\n                stmtInsert.addBatch();\n            }\n            queryResult = stmtInsert.executeBatch();\n            \n            txn.commit();\n            if (s_logger.isTraceEnabled())\n                s_logger.trace(\"Updated or inserted \" + workItems.size() + \" log items\");\n        } catch (SQLException e) {\n            s_logger.warn(\"Failed to execute batch update statement for ruleset log\");\n            success = false;\n        }\n        if (!success && queryResult != null) {\n            Long [] arrayItems = new Long[workItems.size()];\n            workItems.toArray(arrayItems);\n            for (int i=0; i < queryResult.length; i++) {\n                if (queryResult[i] < 0 ) {\n                    s_logger.debug(\"Batch query update failed for vm \" + arrayItems[i]);\n                }\n            }\n        } \n        return;\n    }","id":27288,"modified_method":"@Override\n    public int createOrUpdate(Set<Long> workItems) {\n        //return createOrUpdateUsingBatch(workItems);\n        return createOrUpdateUsingMultiInsert(workItems);\n    }","commit_id":"d03c5af72036cbbd86e3e12727aff93e75af9207","url":"https://github.com/apache/cloudstack"},{"original_method":"/**\n     * Apply the changes to the document store (to update MongoDB).\n     * \n     * @param store the store\n     */\n    void applyToDocumentStore() {\n        DocumentStore store = mk.getDocumentStore();\n        String commitRoot = null;\n        ArrayList<UpdateOp> newNodes = new ArrayList<UpdateOp>();\n        ArrayList<UpdateOp> changedNodes = new ArrayList<UpdateOp>();\n        for (String p : operations.keySet()) {\n            markChanged(p);\n            if (commitRoot == null) {\n                commitRoot = p;\n            } else {\n                while (!PathUtils.isAncestor(commitRoot, p)) {\n                    commitRoot = PathUtils.getParentPath(commitRoot);\n                    if (PathUtils.denotesRoot(commitRoot)) {\n                        break;\n                    }\n                }\n            }\n        }\n        // create a \"root of the commit\" if there is none\n        UpdateOp root = getUpdateOperationForNode(commitRoot);\n        for (String p : operations.keySet()) {\n            UpdateOp op = operations.get(p);\n            if (op == root) {\n                // apply at the end\n            } else if (op.isNew()) {\n                newNodes.add(op);\n            } else {\n                changedNodes.add(op);\n            }\n        }\n        if (changedNodes.size() == 0 && root.isNew) {\n            // no updates, so we just add the root like the others\n            newNodes.add(root);\n            root = null;\n        }\n        if (newNodes.size() > 0) {\n            store.create(Collection.NODES, newNodes);\n        }\n        for (UpdateOp op : changedNodes) {\n            createOrUpdateNode(store, op);\n        }\n        if (root != null) {\n            long increment = mk.getWriteCountIncrement(commitRoot);\n            root.increment(UpdateOp.WRITE_COUNT, 1 + increment);\n            root.addMapEntry(UpdateOp.REVISIONS + \".\" + revision.toString(), \"true\");\n            createOrUpdateNode(store, root);\n            operations.put(commitRoot, root);\n        }\n    }","id":27289,"modified_method":"/**\n     * Apply the changes to the document store (to update MongoDB).\n     * \n     * @param store the store\n     */\n    void applyToDocumentStore() {\n        DocumentStore store = mk.getDocumentStore();\n        String commitRoot = null;\n        ArrayList<UpdateOp> newNodes = new ArrayList<UpdateOp>();\n        ArrayList<UpdateOp> changedNodes = new ArrayList<UpdateOp>();\n        for (String p : operations.keySet()) {\n            markChanged(p);\n            if (commitRoot == null) {\n                commitRoot = p;\n            } else {\n                while (!PathUtils.isAncestor(commitRoot, p)) {\n                    commitRoot = PathUtils.getParentPath(commitRoot);\n                    if (PathUtils.denotesRoot(commitRoot)) {\n                        break;\n                    }\n                }\n            }\n        }\n        // create a \"root of the commit\" if there is none\n        UpdateOp root = getUpdateOperationForNode(commitRoot);\n        for (String p : operations.keySet()) {\n            UpdateOp op = operations.get(p);\n            if (op == root) {\n                // apply at the end\n            } else if (op.isNew()) {\n                newNodes.add(op);\n            } else {\n                changedNodes.add(op);\n            }\n        }\n        if (changedNodes.size() == 0 && root.isNew) {\n            // no updates, so we just add the root like the others\n            newNodes.add(root);\n            root = null;\n        }\n        try {\n            if (newNodes.size() > 0) {\n                store.create(Collection.NODES, newNodes);\n            }\n            for (UpdateOp op : changedNodes) {\n                createOrUpdateNode(store, op);\n            }\n            if (root != null) {\n                long increment = mk.getWriteCountIncrement(commitRoot);\n                root.increment(UpdateOp.WRITE_COUNT, 1 + increment);\n                root.addMapEntry(UpdateOp.REVISIONS + \".\" + revision.toString(), \"true\");\n                createOrUpdateNode(store, root);\n                operations.put(commitRoot, root);\n            }\n        } catch (MicroKernelException e) {\n            throw new MicroKernelException(\"Exception committing \" + diff.toString(), e);\n        }\n    }","commit_id":"c6135d346622f73397d1a4045ebc02e7103fa5da","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private UpdateOp[] splitDocument(Map<String, Object> map) {\n        String path = (String) map.get(UpdateOp.PATH);\n        String id = (String) map.get(UpdateOp.ID);\n        Long previous = (Long) map.get(UpdateOp.PREVIOUS);\n        if (previous == null) {\n            previous = 0L;\n        } else {\n            previous++;\n        }\n        UpdateOp old = new UpdateOp(path, id + \"/\" + previous, true);\n        UpdateOp main = new UpdateOp(path, id, false);\n        main.set(UpdateOp.PREVIOUS, previous);\n        for (Entry<String, Object> e : map.entrySet()) {\n            String key = e.getKey();\n            if (key.equals(UpdateOp.PATH)) {\n                // ok\n            } else if (key.equals(UpdateOp.ID)) {\n                // ok\n            } else if (key.equals(UpdateOp.PREVIOUS)) {\n                // ok\n            } else if (key.equals(UpdateOp.WRITE_COUNT)) {\n                // only maintain the write count on the main document\n                main.set(UpdateOp.WRITE_COUNT, e.getValue());\n            } else {\n                // UpdateOp.DELETED,\n                // UpdateOp.REVISIONS,\n                // and regular properties\n                @SuppressWarnings(\"unchecked\")\n                Map<String, Object> valueMap = (Map<String, Object>) e.getValue();\n                Revision latestRev = null;\n                for (String r : valueMap.keySet()) {\n                    Revision propRev = Revision.fromString(r);\n                    if (latestRev == null || mk.isRevisionNewer(propRev, latestRev)) {\n                        latestRev = propRev;\n                    }\n                }\n                for (String r : valueMap.keySet()) {\n                    Revision propRev = Revision.fromString(r);\n                    Object v = valueMap.get(r);\n                    if (propRev.equals(latestRev)) {\n                        main.setMapEntry(key + \".\" + propRev.toString(), v);\n                    } else {\n                        old.addMapEntry(key + \".\" + propRev.toString(), v);\n                    }\n                }\n            }\n        }\n        return new UpdateOp[]{old, main};\n    }","id":27290,"modified_method":"private UpdateOp[] splitDocument(Map<String, Object> map) {\n        String path = (String) map.get(UpdateOp.PATH);\n        String id = (String) map.get(UpdateOp.ID);\n        Long previous = (Long) map.get(UpdateOp.PREVIOUS);\n        if (previous == null) {\n            previous = 0L;\n        } else {\n            previous++;\n        }\n        UpdateOp old = new UpdateOp(path, id + \"/\" + previous, true);\n        UpdateOp main = new UpdateOp(path, id, false);\n        main.set(UpdateOp.PREVIOUS, previous);\n        for (Entry<String, Object> e : map.entrySet()) {\n            String key = e.getKey();\n            if (key.equals(UpdateOp.PATH)) {\n                // ok\n            } else if (key.equals(UpdateOp.ID)) {\n                // ok\n            } else if (key.equals(UpdateOp.PREVIOUS)) {\n                // ok\n            } else if (key.equals(UpdateOp.WRITE_COUNT)) {\n                // only maintain the write count on the main document\n                main.set(UpdateOp.WRITE_COUNT, e.getValue());\n            } else {\n                // UpdateOp.DELETED,\n                // UpdateOp.REVISIONS,\n                // and regular properties\n                @SuppressWarnings(\"unchecked\")\n                Map<String, Object> valueMap = (Map<String, Object>) e.getValue();\n                Revision latestRev = null;\n                for (String r : valueMap.keySet()) {\n                    Revision propRev = Revision.fromString(r);\n                    if (latestRev == null || mk.isRevisionNewer(propRev, latestRev)) {\n                        latestRev = propRev;\n                    }\n                }\n                for (String r : valueMap.keySet()) {\n                    Revision propRev = Revision.fromString(r);\n                    Object v = valueMap.get(r);\n                    if (propRev.equals(latestRev)) {\n                        main.setMapEntry(key + \".\" + propRev.toString(), v);\n                    } else {\n                        old.addMapEntry(key + \".\" + propRev.toString(), v);\n                    }\n                }\n            }\n        }\n        if (PURGE_OLD_REVISIONS) {\n            old = null;\n        }\n        return new UpdateOp[]{old, main};\n    }","commit_id":"c6135d346622f73397d1a4045ebc02e7103fa5da","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private void createOrUpdateNode(DocumentStore store, UpdateOp op) {\n        Map<String, Object> map = store.createOrUpdate(Collection.NODES, op);\n        int size = Utils.getMapSize(map);\n        if (size > MAX_MAP_SIZE) {\n            UpdateOp[] split = splitDocument(map);\n            \n            // TODO check if the new main document is actually smaller;\n            // otherwise, splitting doesn't make sense\n            \n            // the old version\n            store.createOrUpdate(Collection.NODES, split[0]);\n            // the (shrunken) main document\n            store.createOrUpdate(Collection.NODES, split[1]);\n        }\n        // TODO detect conflicts here\n        Long count = (Long) map.get(UpdateOp.WRITE_COUNT);\n        if (count == null) {\n            count = 0L;\n        }\n        String path = op.getPath();\n        writeCounts.put(path, count);\n    }","id":27291,"modified_method":"private void createOrUpdateNode(DocumentStore store, UpdateOp op) {\n        Map<String, Object> map = store.createOrUpdate(Collection.NODES, op);\n        int size = Utils.getMapSize(map);\n        if (size > MAX_DOCUMENT_SIZE) {\n            UpdateOp[] split = splitDocument(map);\n            \n            // TODO check if the new main document is actually smaller;\n            // otherwise, splitting doesn't make sense\n            \n            // the old version\n            UpdateOp old = split[0];\n            if (old != null) {\n                store.createOrUpdate(Collection.NODES, old);\n            }\n            \n            // the (shrunken) main document\n            UpdateOp main = split[1];\n            if (main != null) {\n                store.createOrUpdate(Collection.NODES, main);\n            }\n        }\n        // TODO detect conflicts here\n        Long count = (Long) map.get(UpdateOp.WRITE_COUNT);\n        if (count == null) {\n            count = 0L;\n        }\n        String path = op.getPath();\n        writeCounts.put(path, count);\n    }","commit_id":"c6135d346622f73397d1a4045ebc02e7103fa5da","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private boolean includeRevision(Revision x, Revision requestRevision) {\n        if (x.getClusterId() == this.clusterId && \n                requestRevision.getClusterId() == this.clusterId) {\n            // both revisions were created by this cluster node: \n            // compare timestamps only\n            return requestRevision.compareRevisionTime(x) >= 0;\n        }\n        // TODO currently we only compare the timestamps\n        return x.compareRevisionTime(requestRevision) >= 0;\n    }","id":27292,"modified_method":"private boolean includeRevision(Revision x, Revision requestRevision) {\n        if (x.getClusterId() == this.clusterId && \n                requestRevision.getClusterId() == this.clusterId) {\n            // both revisions were created by this cluster node: \n            // compare timestamps only\n            return requestRevision.compareRevisionTime(x) >= 0;\n        }\n        // TODO currently we only compare the timestamps\n        return requestRevision.compareRevisionTime(x) >= 0;\n    }","commit_id":"c6135d346622f73397d1a4045ebc02e7103fa5da","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public void reattachFragment_recurse( HashSet<AbstractPlanNode> visited, ArrayList<AbstractPlanNode> collected, SendPlanNode child ) {\n        visited.add(this);\n        for( AbstractPlanNode pn : m_inlineNodes.values() ) {\n            pn.reattachFragment_recurse(visited, collected, child);\n        }\n        for( AbstractPlanNode pn : m_children ) {\n            pn.reattachFragment_recurse(visited, collected, child);\n        }\n    }","id":27293,"modified_method":"public boolean reattachFragment_recurse( HashSet<AbstractPlanNode> visited, SendPlanNode child ) {\n        visited.add(this);\n        for( AbstractPlanNode pn : m_inlineNodes.values() ) {\n            if( pn.reattachFragment_recurse(visited, child) )\n                return true;\n        }\n        for( AbstractPlanNode pn : m_children ) {\n            if( pn.reattachFragment_recurse(visited, child) )\n                return true;\n        }\n        return false;\n    }","commit_id":"46c7672b2992be91c26ed39ae3cc079f31670a1b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public boolean reattachFragment( SendPlanNode child ) {\n        HashSet<AbstractPlanNode> visited = new HashSet<AbstractPlanNode>();\n        ArrayList<AbstractPlanNode> collected = new ArrayList<AbstractPlanNode>();\n        reattachFragment_recurse( visited, collected, child );\n        if( collected.size() == 0 )\n            return false;\n        else\n            return true;\n    }","id":27294,"modified_method":"public boolean reattachFragment( SendPlanNode child ) {\n        HashSet<AbstractPlanNode> visited = new HashSet<AbstractPlanNode>();\n        return reattachFragment_recurse( visited, child );\n    }","commit_id":"46c7672b2992be91c26ed39ae3cc079f31670a1b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public void reattachFragment_recurse( HashSet<AbstractPlanNode> visited, ArrayList<AbstractPlanNode> collected, SendPlanNode child  ) {\n        visited.add(this);\n        collected.add(this);\n        this.addAndLinkChild(child);\n    }","id":27295,"modified_method":"@Override\n    public boolean reattachFragment_recurse( HashSet<AbstractPlanNode> visited, SendPlanNode child  ) {\n        this.addAndLinkChild(child);\n        return true;\n    }","commit_id":"46c7672b2992be91c26ed39ae3cc079f31670a1b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testDiff() {\n        AbstractPlanNode pn1 = null;\n        AbstractPlanNode pn2 = null;\n        ArrayList<AbstractPlanNode> list1 = new ArrayList<AbstractPlanNode>();\n        ArrayList<AbstractPlanNode> list2 = new ArrayList<AbstractPlanNode>();\n        pn1 = compile(\"select * from l order by b limit ?;\", 3, true);\n        pn2 = compile(\"select * from l order by a limit ?;\", 3, true);\n        assertTrue(pn1 != null);\n        assertTrue(pn2 != null);\n        list1.add(pn1);\n        list2.add(pn2);\n        pn1 = compile(\"select * from l, t where t.a=l.b order by b limit ?;\", 3, true);\n        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n        list1.add(pn1);\n        list2.add(pn2);\n        pn1 = compile(\"select * from l, t where t.a=l.b order by b;\", 3, true);\n        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n        list1.add(pn1);\n        list2.add(pn2);\n        pn1 = compile(\"select * from l, t where t.a=l.b limit ?;\", 3, true);\n        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n        list1.add(pn1);\n        list2.add(pn2);\n        pn1 = compile(\"select * from l, t where t.a=l.b;\", 3, true);\n        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n        list1.add(pn1);\n        list2.add(pn2);\n        pn1 = compile(\"select * from l order by a limit ?;\", 3, true);\n        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n        list1.add(pn1);\n        list2.add(pn2);\n        pn1 = compile(\"select * from l limit ?;\", 3, true);\n        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n        list1.add(pn1);\n        list2.add(pn2);\n        pn1 = compile(\"select * from l where a=? order by b limit ?;\", 3, true);\n        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n        list1.add(pn1);\n        list2.add(pn2);\n        pn1 = compile(\"select * from l where a=? limit ?;\", 3, true);\n        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n        list1.add(pn1);\n        list2.add(pn2);\n        pn1 = compile(\"select * from l where a=?;\", 3, true);\n        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n        list1.add(pn1);\n        list2.add(pn2);\n        pn1 = compile(\"select * from l, t where t.a=l.a;\", 3, true);\n        pn2 = compile(\"select * from l, t where t.b=l.b order by a limit ?;\", 3, true);\n        list1.add(pn1);\n        list2.add(pn2);\n        int size = list1.size();\n        for( int i = 0; i < size; i++ ) {\n            System.out.println(i);\n            plannerTester.diff(list1.get(i), list2.get(i), true);\n            System.out.println(list1.get(i).toExplainPlanString());\n            System.out.println(list2.get(i).toExplainPlanString());\n\n        }\n    }","id":27296,"modified_method":"public void testDiff() {\n        AbstractPlanNode pn1 = null;\n        AbstractPlanNode pn2 = null;\n        assertTrue( compileDiffDigPattern( \"select * from l order by b limit ?;\", 3, true,\n                                           \"select * from l order by a limit ?;\", 3, true,\n                                            \"same leaf size\") );\n        assertTrue( compileDiffDigPattern( \"select * from l, t where t.a=l.b order by b limit ?;\", 3, true,\n                                           \"select * from l, t where t.a=l.b order by a limit ?;\", 3, true,\n                                           \"Join query\") );\n\n        assertTrue( compileDiffDigPattern( \"select * from l, t where t.a=l.b order by b;\", 3, true,\n                \"select * from l, t where t.a=l.b order by a limit ?;\", 3, true,\n                \"Plan tree size diff: (5 => 6)\",\"Inline Projection Nodes diff:\",\"([5-SEQSCAN] => [6-SEQSCAN])\"\n                ,\"Inline IndexScan Nodes diff:\",\"([4-NESTLOOPINDEX] => [5-NESTLOOPINDEX])\",\"Limit Nodes diff:\",\"([] => [2])\"));\n\n        assertTrue( compileDiffDigPattern( \"select * from l, t where t.a=l.b order by b limit ?;\", 3, true,\n                \"select * from l, t where t.a=l.b order by a limit ?;\", 3, true,\n                \"Join query\") );\n\n//        assertTrue( compileDiffDigPattern( \"select * from l, t where t.a=l.b limit ?;\", 3, true,\n//                \"select * from l, t where t.a=l.b order by a limit ?;\", 3, true,\n//                \"Limit Nodes diff: \",\"([] => [2])\",\"Order By Nodes diff:\",\"([] => [4])\") );\n//\n//        assertTrue( compileDiffDigPattern( \"select * from l, t where t.a=l.b;\", 3, true,\n//                \"select * from l, t where t.a=l.b order by a limit ?;\", 3, true,\n//                \"Scan time diff : \",\"(1 => 2)\",\"Diff at leaf 1 :\",\"(Empty => INDEXSCAN on T using COVER2_TREE)\"));\n//\n//        assertTrue( compileDiffDigPattern( \"select * from l, t where t.a=l.a;\", 3, true,\n//                \"select * from l, t where t.a=l.b order by a limit ?;\", 3, true,\n//                \"Diff scan at leaf 1 :\",\"(INDEXSCAN on T => SEQSCAN on T)\",\n//                \"Limit Nodes diff: \",\"([] => [2])\",\n//                \"Order By Nodes diff: \",\"([] => [4])\",\n//                \"Join Node Type diff:\",\"(NESTLOOPINDEX at 3 => NESTLOOP at 5)\"));\n//\n//        assertTrue( compileDiffDigPattern( \"select * from l where a=?;\", 3, true,\n//                \"select * from l, t where t.b=l.b order by a limit ?;\", 3, true,\n//                \"Diff at leaf 1 :\", \"(Empty => INDEXSCAN on T using COVER2_TREE)\",\n//                \"Projection Nodes diff:\",\"([] => [3])\"));\n\n//        pn1 = compile(\"select * from l order by a limit ?;\", 3, true);\n//        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n//        list1.add(pn1);\n//        list2.add(pn2);\n//        pn1 = compile(\"select * from l limit ?;\", 3, true);\n//        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n//        list1.add(pn1);\n//        list2.add(pn2);\n//        pn1 = compile(\"select * from l where a=? order by b limit ?;\", 3, true);\n//        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n//        list1.add(pn1);\n//        list2.add(pn2);\n//        pn1 = compile(\"select * from l where a=? limit ?;\", 3, true);\n//        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n//        list1.add(pn1);\n//        list2.add(pn2);\n//        pn1 = compile(\"select * from l where a=?;\", 3, true);\n//        pn2 = compile(\"select * from l, t where t.a=l.b order by a limit ?;\", 3, true);\n//        list1.add(pn1);\n//        list2.add(pn2);\n//        pn1 = compile(\"select * from l, t where t.a=l.a;\", 3, true);\n//        pn2 = compile(\"select * from l, t where t.b=l.b order by a limit ?;\", 3, true);\n//        list1.add(pn1);\n//        list2.add(pn2);\n//        int size = list1.size();\n//        for( int i = 0; i < size; i++ ) {\n//            System.out.println(i);\n//            plannerTester.diff(list1.get(i), list2.get(i), true);\n//            System.out.println(list1.get(i).toExplainPlanString());\n//            System.out.println(list2.get(i).toExplainPlanString());\n//\n//        }\n    }","commit_id":"46c7672b2992be91c26ed39ae3cc079f31670a1b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public Coordinate XYToLatLon(int x, int y, int zoom) {\n        double scale = getDegreesPerTile(zoom) / getTileSize();\n        Projection proj = Main.getProjection();\n        EastNorth ret = new EastNorth(\n                topLeftCorner.east() + x * scale,\n                topLeftCorner.north() - y * scale\n                );\n        LatLon ll = proj.eastNorth2latlon(ret);\n        return new Coordinate(ll.lat(), ll.lon());\n    }","id":27297,"modified_method":"@Override\n    public ICoordinate XYToLatLon(int x, int y, int zoom) {\n        double scale = getDegreesPerTile(zoom) / getTileSize();\n        Projection proj = Main.getProjection();\n        EastNorth ret = new EastNorth(\n                topLeftCorner.east() + x * scale,\n                topLeftCorner.north() - y * scale\n                );\n        return proj.eastNorth2latlon(ret).toCoordinate();\n    }","commit_id":"fc5575ea55843aec3003f46d22a4c9ef1276aa40","url":"https://github.com/openstreetmap/josm"},{"original_method":"@Override\n    public Coordinate tileXYToLatLon(Tile tile) {\n        return tileXYToLatLon(tile.getXtile(), tile.getYtile(), tile.getZoom());\n    }","id":27298,"modified_method":"@Override\n    public ICoordinate tileXYToLatLon(Tile tile) {\n        return tileXYToLatLon(tile.getXtile(), tile.getYtile(), tile.getZoom());\n    }","commit_id":"fc5575ea55843aec3003f46d22a4c9ef1276aa40","url":"https://github.com/openstreetmap/josm"},{"original_method":"@Override\n    public Coordinate tileXYToLatLon(TileXY xy, int zoom) {\n        return tileXYToLatLon(xy.getXIndex(), xy.getYIndex(), zoom);\n    }","id":27299,"modified_method":"@Override\n    public ICoordinate tileXYToLatLon(TileXY xy, int zoom) {\n        return tileXYToLatLon(xy.getXIndex(), xy.getYIndex(), zoom);\n    }","commit_id":"fc5575ea55843aec3003f46d22a4c9ef1276aa40","url":"https://github.com/openstreetmap/josm"},{"original_method":"@Override\n    public Coordinate XYToLatLon(Point point, int zoom) {\n        return XYToLatLon(point.x, point.y, zoom);\n    }","id":27300,"modified_method":"@Override\n    public ICoordinate XYToLatLon(Point point, int zoom) {\n        return XYToLatLon(point.x, point.y, zoom);\n    }","commit_id":"fc5575ea55843aec3003f46d22a4c9ef1276aa40","url":"https://github.com/openstreetmap/josm"},{"original_method":"@Override\n    public Coordinate tileXYToLatLon(int x, int y, int zoom) {\n        LatLon ret = Main.getProjection().eastNorth2latlon(getTileEastNorth(x, y, zoom));\n        return new Coordinate(ret.lat(),  ret.lon());\n    }","id":27301,"modified_method":"@Override\n    public ICoordinate tileXYToLatLon(int x, int y, int zoom) {\n        return Main.getProjection().eastNorth2latlon(getTileEastNorth(x, y, zoom)).toCoordinate();\n    }","commit_id":"fc5575ea55843aec3003f46d22a4c9ef1276aa40","url":"https://github.com/openstreetmap/josm"},{"original_method":"@Override\n    public void actionPerformed(ActionEvent e) {\n        if (!isEnabled())\n            return;\n\n        int numberOfNodesInCircle = Main.pref.getInteger(\"createcircle.nodecount\", 8);\n        if (numberOfNodesInCircle < 1) {\n            numberOfNodesInCircle = 1;\n        } else if (numberOfNodesInCircle > 100) {\n            numberOfNodesInCircle = 100;\n        }\n\n        Collection<OsmPrimitive> sel = getCurrentDataSet().getSelected();\n        List<Node> nodes = new LinkedList<Node>();\n        Way existingWay = null;\n\n        for (OsmPrimitive osm : sel)\n            if (osm instanceof Node) {\n                nodes.add((Node)osm);\n            }\n\n        // special case if no single nodes are selected and exactly one way is:\n        // then use the way's nodes\n        if (nodes.isEmpty() && (sel.size() == 1)) {\n            for (OsmPrimitive osm : sel)\n                if (osm instanceof Way) {\n                    existingWay = ((Way)osm);\n                    for (Node n : ((Way)osm).getNodes())\n                    {\n                        if(!nodes.contains(n)) {\n                            nodes.add(n);\n                        }\n                    }\n                }\n        }\n\n        // now we can start doing things to OSM data\n        Collection<Command> cmds = new LinkedList<Command>();\n\n        if (nodes.size() == 2) {\n            // diameter: two single nodes needed or a way with two nodes\n\n            Node   n1 = nodes.get(0);\n            double x1 = n1.getEastNorth().east();\n            double y1 = n1.getEastNorth().north();\n            Node   n2 = nodes.get(1);\n            double x2 = n2.getEastNorth().east();\n            double y2 = n2.getEastNorth().north();\n\n            // calculate the center (xc/yc)\n            double xc = 0.5 * (x1 + x2);\n            double yc = 0.5 * (y1 + y2);\n\n            // calculate the radius (r)\n            double r = Math.sqrt(Math.pow(xc-x1,2) + Math.pow(yc-y1,2));\n\n            // find where to put the existing nodes\n            double a1 = calcang(xc, yc, x1, y1);\n            double a2 = calcang(xc, yc, x2, y2);\n            if (a1 < a2) { double at = a1; Node nt = n1; a1 = a2; n1 = n2; a2 = at; n2 = nt; }\n\n            // build a way for the circle\n            List<Node> wayToAdd = new ArrayList<Node>(numberOfNodesInCircle + 1);\n\n            for (int i = 1; i <= numberOfNodesInCircle; i++) {\n                double a = a2 + 2*Math.PI*(1.0 - i/(double)numberOfNodesInCircle); // \"1-\" to get it clock-wise\n\n                // insert existing nodes if they fit before this new node (999 means \"already added this node\")\n                if ((a1 < 999) && (a1 > a - 1E-9) && (a1 < a + 1E-9)) {\n                    wayToAdd.add(n1);\n                    a1 = 999;\n                }\n                else if ((a2 < 999) && (a2 > a - 1E-9) && (a2 < a + 1E-9)) {\n                    wayToAdd.add(n2);\n                    a2 = 999;\n                }\n                else {\n                    // get the position of the new node and insert it\n                    double x = xc + r*Math.cos(a);\n                    double y = yc + r*Math.sin(a);\n                    Node n = new Node(Main.getProjection().eastNorth2latlon(new EastNorth(x,y)));\n                    wayToAdd.add(n);\n                    cmds.add(new AddCommand(n));\n                }\n            }\n            wayToAdd.add(wayToAdd.get(0)); // close the circle\n            if (existingWay == null) {\n                Way newWay = new Way();\n                newWay.setNodes(wayToAdd);\n                cmds.add(new AddCommand(newWay));\n            } else {\n                Way newWay = new Way(existingWay);\n                newWay.setNodes(wayToAdd);\n                cmds.add(new ChangeCommand(existingWay, newWay));\n            }\n\n            // the first node may be unused/abandoned if createcircle.nodecount is odd\n            if (a1 < 999) {\n                // if it is, delete it\n                List<OsmPrimitive> parents = n1.getReferrers();\n                if (parents.isEmpty() || ((parents.size() == 1) && (parents.contains(existingWay)))) {\n                    cmds.add(new DeleteCommand(n1));\n                }\n            }\n\n        } else if (nodes.size() == 3) {\n            // triangle: three single nodes needed or a way with three nodes\n\n            // let's get some shorter names\n            Node   n1 = nodes.get(0);\n            double x1 = n1.getEastNorth().east();\n            double y1 = n1.getEastNorth().north();\n            Node   n2 = nodes.get(1);\n            double x2 = n2.getEastNorth().east();\n            double y2 = n2.getEastNorth().north();\n            Node   n3 = nodes.get(2);\n            double x3 = n3.getEastNorth().east();\n            double y3 = n3.getEastNorth().north();\n\n            // calculate the center (xc/yc)\n            double s = 0.5*((x2 - x3)*(x1 - x3) - (y2 - y3)*(y3 - y1));\n            double sUnder = (x1 - x2)*(y3 - y1) - (y2 - y1)*(x1 - x3);\n\n            if (sUnder == 0) {\n                new Notification(\n                        tr(\"Those nodes are not in a circle. Aborting.\"))\n                        .setIcon(JOptionPane.WARNING_MESSAGE)\n                        .show();\n                return;\n            }\n\n            s /= sUnder;\n\n            double xc = 0.5*(x1 + x2) + s*(y2 - y1);\n            double yc = 0.5*(y1 + y2) + s*(x1 - x2);\n\n            // calculate the radius (r)\n            double r = Math.sqrt(Math.pow(xc-x1,2) + Math.pow(yc-y1,2));\n\n            // find where to put the existing nodes\n            double a1 = calcang(xc, yc, x1, y1);\n            double a2 = calcang(xc, yc, x2, y2);\n            double a3 = calcang(xc, yc, x3, y3);\n            if (a1 < a2) { double at = a1; Node nt = n1; a1 = a2; n1 = n2; a2 = at; n2 = nt; }\n            if (a2 < a3) { double at = a2; Node nt = n2; a2 = a3; n2 = n3; a3 = at; n3 = nt; }\n            if (a1 < a2) { double at = a1; Node nt = n1; a1 = a2; n1 = n2; a2 = at; n2 = nt; }\n\n            // build a way for the circle\n            List<Node> wayToAdd = new ArrayList<Node>();\n            for (int i = 1; i <= numberOfNodesInCircle; i++) {\n                double a = 2*Math.PI*(1.0 - i/(double)numberOfNodesInCircle); // \"1-\" to get it clock-wise\n                // insert existing nodes if they fit before this new node (999 means \"already added this node\")\n                if (a1 < 999 && a1 > a) {\n                    wayToAdd.add(n1);\n                    a1 = 999;\n                }\n                if (a2 < 999 && a2 > a) {\n                    wayToAdd.add(n2);\n                    a2 = 999;\n                }\n                if (a3 < 999 && a3 > a) {\n                    wayToAdd.add(n3);\n                    a3 = 999;\n                }\n                // get the position of the new node and insert it\n                double x = xc + r*Math.cos(a);\n                double y = yc + r*Math.sin(a);\n                Node n = new Node(Main.getProjection().eastNorth2latlon(new EastNorth(x,y)));\n                wayToAdd.add(n);\n                cmds.add(new AddCommand(n));\n            }\n            wayToAdd.add(wayToAdd.get(0)); // close the circle\n            if (existingWay == null) {\n                Way newWay = new Way();\n                newWay.setNodes(wayToAdd);\n                cmds.add(new AddCommand(newWay));\n            } else {\n                Way newWay = new Way(existingWay);\n                newWay.setNodes(wayToAdd);\n                cmds.add(new ChangeCommand(existingWay, newWay));\n            }\n\n        } else {\n            new Notification(\n                    tr(\"Please select exactly two or three nodes or one way with exactly two or three nodes.\"))\n                    .setIcon(JOptionPane.INFORMATION_MESSAGE)\n                    .setDuration(Notification.TIME_LONG)\n                    .show();\n            return;\n        }\n\n        Main.main.undoRedo.add(new SequenceCommand(tr(\"Create Circle\"), cmds));\n        Main.map.repaint();\n    }","id":27302,"modified_method":"@Override\n    public void actionPerformed(ActionEvent e) {\n        if (!isEnabled())\n            return;\n\n        int numberOfNodesInCircle = Main.pref.getInteger(\"createcircle.nodecount\", 8);\n        if (numberOfNodesInCircle < 1) {\n            numberOfNodesInCircle = 1;\n        } else if (numberOfNodesInCircle > 100) {\n            numberOfNodesInCircle = 100;\n        }\n\n        Collection<OsmPrimitive> sel = getCurrentDataSet().getSelected();\n        List<Node> nodes = new LinkedList<Node>();\n        Way existingWay = null;\n\n        for (OsmPrimitive osm : sel)\n            if (osm instanceof Node) {\n                nodes.add((Node)osm);\n            }\n\n        // special case if no single nodes are selected and exactly one way is:\n        // then use the way's nodes\n        if (nodes.isEmpty() && (sel.size() == 1)) {\n            for (OsmPrimitive osm : sel)\n                if (osm instanceof Way) {\n                    existingWay = ((Way)osm);\n                    for (Node n : ((Way)osm).getNodes())\n                    {\n                        if(!nodes.contains(n)) {\n                            nodes.add(n);\n                        }\n                    }\n                }\n        }\n\n        // now we can start doing things to OSM data\n        Collection<Command> cmds = new LinkedList<Command>();\n\n        if (nodes.size() == 2) {\n            // diameter: two single nodes needed or a way with two nodes\n\n            Node   n1 = nodes.get(0);\n            double x1 = n1.getEastNorth().east();\n            double y1 = n1.getEastNorth().north();\n            Node   n2 = nodes.get(1);\n            double x2 = n2.getEastNorth().east();\n            double y2 = n2.getEastNorth().north();\n\n            // calculate the center (xc/yc)\n            double xc = 0.5 * (x1 + x2);\n            double yc = 0.5 * (y1 + y2);\n\n            // calculate the radius (r)\n            double r = Math.sqrt(Math.pow(xc-x1,2) + Math.pow(yc-y1,2));\n\n            // find where to put the existing nodes\n            double a1 = calcang(xc, yc, x1, y1);\n            double a2 = calcang(xc, yc, x2, y2);\n            if (a1 < a2) { double at = a1; Node nt = n1; a1 = a2; n1 = n2; a2 = at; n2 = nt; }\n\n            // build a way for the circle\n            List<Node> wayToAdd = new ArrayList<Node>(numberOfNodesInCircle + 1);\n\n            for (int i = 1; i <= numberOfNodesInCircle; i++) {\n                double a = a2 + 2*Math.PI*(1.0 - i/(double)numberOfNodesInCircle); // \"1-\" to get it clock-wise\n\n                // insert existing nodes if they fit before this new node (999 means \"already added this node\")\n                if ((a1 < 999) && (a1 > a - 1E-9) && (a1 < a + 1E-9)) {\n                    wayToAdd.add(n1);\n                    a1 = 999;\n                }\n                else if ((a2 < 999) && (a2 > a - 1E-9) && (a2 < a + 1E-9)) {\n                    wayToAdd.add(n2);\n                    a2 = 999;\n                }\n                else {\n                    // get the position of the new node and insert it\n                    double x = xc + r*Math.cos(a);\n                    double y = yc + r*Math.sin(a);\n                    Node n = new Node(Main.getProjection().eastNorth2latlon(new EastNorth(x,y)));\n                    wayToAdd.add(n);\n                    cmds.add(new AddCommand(n));\n                }\n            }\n            wayToAdd.add(wayToAdd.get(0)); // close the circle\n            if (existingWay == null) {\n                Way newWay = new Way();\n                newWay.setNodes(wayToAdd);\n                cmds.add(new AddCommand(newWay));\n            } else {\n                Way newWay = new Way(existingWay);\n                newWay.setNodes(wayToAdd);\n                cmds.add(new ChangeCommand(existingWay, newWay));\n            }\n\n            // the first node may be unused/abandoned if createcircle.nodecount is odd\n            if (a1 < 999) {\n                // if it is, delete it\n                List<OsmPrimitive> parents = n1.getReferrers();\n                if (parents.isEmpty() || ((parents.size() == 1) && (parents.contains(existingWay)))) {\n                    cmds.add(new DeleteCommand(n1));\n                }\n            }\n\n        } else if (nodes.size() == 3) {\n            // triangle: three single nodes needed or a way with three nodes\n\n            // let's get some shorter names\n            Node   n1 = nodes.get(0);\n            double x1 = n1.getEastNorth().east();\n            double y1 = n1.getEastNorth().north();\n            Node   n2 = nodes.get(1);\n            double x2 = n2.getEastNorth().east();\n            double y2 = n2.getEastNorth().north();\n            Node   n3 = nodes.get(2);\n            double x3 = n3.getEastNorth().east();\n            double y3 = n3.getEastNorth().north();\n\n            // calculate the center (xc/yc)\n            double s = 0.5*((x2 - x3)*(x1 - x3) - (y2 - y3)*(y3 - y1));\n            double sUnder = (x1 - x2)*(y3 - y1) - (y2 - y1)*(x1 - x3);\n\n            if (sUnder == 0) {\n                notifyNodesNotOnCircle();\n                return;\n            }\n\n            s /= sUnder;\n\n            double xc = 0.5*(x1 + x2) + s*(y2 - y1);\n            double yc = 0.5*(y1 + y2) + s*(x1 - x2);\n\n            // calculate the radius (r)\n            double r = Math.sqrt(Math.pow(xc-x1,2) + Math.pow(yc-y1,2));\n\n            // find where to put the existing nodes\n            double a1 = calcang(xc, yc, x1, y1);\n            double a2 = calcang(xc, yc, x2, y2);\n            double a3 = calcang(xc, yc, x3, y3);\n            if (a1 < a2) { double at = a1; Node nt = n1; a1 = a2; n1 = n2; a2 = at; n2 = nt; }\n            if (a2 < a3) { double at = a2; Node nt = n2; a2 = a3; n2 = n3; a3 = at; n3 = nt; }\n            if (a1 < a2) { double at = a1; Node nt = n1; a1 = a2; n1 = n2; a2 = at; n2 = nt; }\n\n            // build a way for the circle\n            List<Node> wayToAdd = new ArrayList<Node>();\n            for (int i = 1; i <= numberOfNodesInCircle; i++) {\n                double a = 2*Math.PI*(1.0 - i/(double)numberOfNodesInCircle); // \"1-\" to get it clock-wise\n                // insert existing nodes if they fit before this new node (999 means \"already added this node\")\n                if (a1 < 999 && a1 > a) {\n                    wayToAdd.add(n1);\n                    a1 = 999;\n                }\n                if (a2 < 999 && a2 > a) {\n                    wayToAdd.add(n2);\n                    a2 = 999;\n                }\n                if (a3 < 999 && a3 > a) {\n                    wayToAdd.add(n3);\n                    a3 = 999;\n                }\n                // get the position of the new node and insert it\n                double x = xc + r*Math.cos(a);\n                double y = yc + r*Math.sin(a);\n                LatLon ll = Main.getProjection().eastNorth2latlon(new EastNorth(x,y));\n                if (ll.isOutSideWorld()) {\n                    notifyNodesNotOnCircle();\n                    return;\n                }\n                Node n = new Node(ll);\n                wayToAdd.add(n);\n                cmds.add(new AddCommand(n));\n            }\n            wayToAdd.add(wayToAdd.get(0)); // close the circle\n            if (existingWay == null) {\n                Way newWay = new Way();\n                newWay.setNodes(wayToAdd);\n                cmds.add(new AddCommand(newWay));\n            } else {\n                Way newWay = new Way(existingWay);\n                newWay.setNodes(wayToAdd);\n                cmds.add(new ChangeCommand(existingWay, newWay));\n            }\n\n        } else {\n            new Notification(\n                    tr(\"Please select exactly two or three nodes or one way with exactly two or three nodes.\"))\n                    .setIcon(JOptionPane.INFORMATION_MESSAGE)\n                    .setDuration(Notification.TIME_LONG)\n                    .show();\n            return;\n        }\n\n        Main.main.undoRedo.add(new SequenceCommand(tr(\"Create Circle\"), cmds));\n        Main.map.repaint();\n    }","commit_id":"ee7253df502370f7db738385c620afabc93986f6","url":"https://github.com/openstreetmap/josm"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\t@Override\n\tprotected void execute() throws Exception {\n\t\tcommandType = -1;\n\t\tdata.commandInfo = \"Listening\";\n\t\tdata.commandDetail = \"-\";\n\n\t\ttry {\n\t\t\tcommandType = channel.readByte();\n\t\t\t++data.totalRequests;\n\n\t\t\tdata.lastCommandReceived = System.currentTimeMillis();\n\n\t\t\tswitch (commandType) {\n\n\t\t\tcase OChannelBinaryProtocol.CONNECT: {\n\t\t\t\tdata.commandInfo = \"Connect\";\n\n\t\t\t\tuser = channel.readString();\n\t\t\t\tpasswd = channel.readString();\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeString(connection.id);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DB_OPEN: {\n\t\t\t\tdata.commandInfo = \"Open database\";\n\n\t\t\t\tString dbURL = channel.readString();\n\t\t\t\tString dbName = dbURL.substring(dbURL.lastIndexOf(\":\") + 1);\n\n\t\t\t\tuser = channel.readString();\n\t\t\t\tpasswd = channel.readString();\n\n\t\t\t\t// SEARCH THE DB IN MEMORY FIRST\n\t\t\t\tconnection.database = (ODatabaseDocumentTx) OServerMain.server().getMemoryDatabases().get(dbName);\n\n\t\t\t\tif (connection.database == null)\n\t\t\t\t\t// SEARCH THE DB IN LOCAL FS\n\t\t\t\t\tconnection.database = new ODatabaseDocumentTx(OServerMain.server().getStoragePath(dbName));\n\n\t\t\t\tif (connection.database.isClosed())\n\t\t\t\t\tif (connection.database.getStorage() instanceof OStorageMemory)\n\t\t\t\t\t\tconnection.database.create();\n\t\t\t\t\telse\n\t\t\t\t\t\tconnection.database.open(user, passwd);\n\n\t\t\t\tunderlyingDatabase = ((ODatabaseRaw) ((ODatabaseComplex<?>) connection.database.getUnderlying()).getUnderlying());\n\n\t\t\t\tif (!(underlyingDatabase.getStorage() instanceof OStorageMemory) && !loadUserFromSchema(user, passwd)) {\n\t\t\t\t\tsendError(new OSecurityAccessException(connection.database.getName(), \"Access denied to database '\"\n\t\t\t\t\t\t\t+ connection.database.getName() + \"' for user: \" + user));\n\t\t\t\t} else {\n\t\t\t\t\tsendOk();\n\t\t\t\t\tchannel.writeString(connection.id);\n\t\t\t\t\tchannel.writeInt(connection.database.getClusterNames().size());\n\t\t\t\t\tfor (OCluster c : (connection.database.getStorage()).getClusters()) {\n\t\t\t\t\t\tif (c != null) {\n\t\t\t\t\t\t\tchannel.writeString(c.getName());\n\t\t\t\t\t\t\tchannel.writeInt(c.getId());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DB_CREATE: {\n\t\t\t\tdata.commandInfo = \"Create database\";\n\n\t\t\t\tString dbName = channel.readString();\n\t\t\t\tString storageMode = channel.readString();\n\n\t\t\t\tfinal String path;\n\t\t\t\tfinal String realPath;\n\n\t\t\t\tif (storageMode.equals(OEngineLocal.NAME)) {\n\t\t\t\t\tif (OServerMain.server().existsStoragePath(dbName))\n\t\t\t\t\t\tthrow new IllegalArgumentException(\"Database '\" + dbName + \"' already exists.\");\n\n\t\t\t\t\tpath = storageMode + \":${ORIENT_HOME}/databases/\" + dbName + \"/\" + dbName;\n\t\t\t\t\trealPath = OSystemVariableResolver.resolveSystemVariables(path);\n\t\t\t\t} else if (storageMode.equals(OEngineMemory.NAME)) {\n\t\t\t\t\tif (OServerMain.server().getMemoryDatabases().containsKey(dbName))\n\t\t\t\t\t\tthrow new IllegalArgumentException(\"Database '\" + dbName + \"' already exists.\");\n\n\t\t\t\t\tpath = storageMode + \":\" + dbName;\n\t\t\t\t\trealPath = path;\n\t\t\t\t} else\n\t\t\t\t\tthrow new IllegalArgumentException(\"Can't create databse: storage mode '\" + storageMode + \"' is not supported.\");\n\n\t\t\t\tconnection.database = new ODatabaseDocumentTx(realPath);\n\t\t\t\tconnection.database.create();\n\n\t\t\t\tif (storageMode.equals(OEngineLocal.NAME)) {\n\t\t\t\t\t// CLOSE IT BECAUSE IT WILL BE OPEN AT FIRST USE\n\t\t\t\t\tconnection.database.close();\n\n\t\t\t\t} else if (storageMode.equals(OEngineMemory.NAME)) {\n\t\t\t\t\t// SAVE THE DB IN MEMORY\n\t\t\t\t\tOServerMain.server().getMemoryDatabases().put(dbName, connection.database);\n\t\t\t\t}\n\n\t\t\t\tunderlyingDatabase = ((ODatabaseRaw) ((ODatabaseComplex<?>) connection.database.getUnderlying()).getUnderlying());\n\n\t\t\t\tsendOk();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DB_CLOSE:\n\t\t\t\tdata.commandInfo = \"Close Database\";\n\n\t\t\t\t// connection.storage.close();\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.DB_EXIST:\n\t\t\t\tdata.commandInfo = \"Exists database\";\n\n\t\t\t\tchannel.writeByte((byte) (connection.database.exists() ? 1 : 0));\n\n\t\t\t\tsendOk();\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.CLUSTER_COUNT:\n\t\t\t\tdata.commandInfo = \"Count cluster elements\";\n\n\t\t\t\tint[] ids = new int[channel.readShort()];\n\t\t\t\tfor (int i = 0; i < ids.length; ++i)\n\t\t\t\t\tids[i] = channel.readShort();\n\n\t\t\t\tlong count = connection.database.countClusterElements(ids);\n\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeLong(count);\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.CLUSTER_ADD: {\n\t\t\t\tdata.commandInfo = \"Add cluster\";\n\n\t\t\t\tfinal String type = channel.readString();\n\t\t\t\tfinal String name = channel.readString();\n\n\t\t\t\tfinal int num;\n\t\t\t\tif (OClusterLocal.TYPE.equals(type))\n\t\t\t\t\tnum = connection.database.addPhysicalCluster(name, channel.readString(), channel.readInt());\n\t\t\t\telse\n\t\t\t\t\tnum = connection.database.addLogicalCluster(name, channel.readInt());\n\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeShort((short) num);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.CLUSTER_REMOVE: {\n\t\t\t\tdata.commandInfo = \"remove cluster\";\n\n\t\t\t\tfinal int id = channel.readShort();\n\n\t\t\t\tboolean result = connection.database.getStorage().removeCluster(id);\n\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeByte((byte) (result ? '1' : '0'));\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.RECORD_LOAD:\n\t\t\t\tdata.commandInfo = \"Load record\";\n\n\t\t\t\tfinal ORawBuffer record = underlyingDatabase.read(channel.readShort(), channel.readLong());\n\t\t\t\tsendOk();\n\t\t\t\tif (record != null) {\n\t\t\t\t\tchannel.writeByte((byte) 1);\n\t\t\t\t\tchannel.writeBytes(record.buffer);\n\t\t\t\t\tchannel.writeInt(record.version);\n\t\t\t\t\tchannel.writeByte(record.recordType);\n\t\t\t\t} else\n\t\t\t\t\tchannel.writeByte((byte) 0);\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.RECORD_CREATE:\n\t\t\t\tdata.commandInfo = \"Create record\";\n\n\t\t\t\tfinal long location = underlyingDatabase.save(channel.readShort(), ORID.CLUSTER_POS_INVALID, channel.readBytes(), -1,\n\t\t\t\t\t\tchannel.readByte());\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeLong(location);\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.RECORD_UPDATE:\n\t\t\t\tdata.commandInfo = \"Update record\";\n\n\t\t\t\tfinal int clusterId = channel.readShort();\n\t\t\t\tfinal long position = channel.readLong();\n\n\t\t\t\tlong newVersion = underlyingDatabase.save(clusterId, position, channel.readBytes(), channel.readInt(), channel.readByte());\n\n\t\t\t\t// TODO: Handle it by using triggers\n\t\t\t\tif (connection.database.getMetadata().getSchema().getIdentity().getClusterId() == clusterId\n\t\t\t\t\t\t&& connection.database.getMetadata().getSchema().getIdentity().getClusterPosition() == position)\n\t\t\t\t\tconnection.database.getMetadata().loadSchema();\n\t\t\t\telse if (((ODictionaryLocal<?>) connection.database.getDictionary()).getTree().getRecord().getIdentity().getClusterId() == clusterId\n\t\t\t\t\t\t&& ((ODictionaryLocal<?>) connection.database.getDictionary()).getTree().getRecord().getIdentity().getClusterPosition() == position)\n\t\t\t\t\t((ODictionaryLocal<?>) connection.database.getDictionary()).load();\n\n\t\t\t\tsendOk();\n\n\t\t\t\tchannel.writeInt((int) newVersion);\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.RECORD_DELETE:\n\t\t\t\tdata.commandInfo = \"Delete record\";\n\n\t\t\t\tunderlyingDatabase.delete(channel.readShort(), channel.readLong(), channel.readInt());\n\t\t\t\tsendOk();\n\n\t\t\t\tchannel.writeByte((byte) '1');\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.COUNT: {\n\t\t\t\tdata.commandInfo = \"Count cluster records\";\n\n\t\t\t\tfinal String clusterName = channel.readString();\n\t\t\t\tfinal long size = connection.database.countClusterElements(clusterName);\n\n\t\t\t\tsendOk();\n\n\t\t\t\tchannel.writeLong(size);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.COMMAND: {\n\t\t\t\tdata.commandInfo = \"Execute remote command\";\n\n\t\t\t\tfinal boolean asynch = channel.readByte() == 'a';\n\n\t\t\t\tfinal OCommandRequestText command = (OCommandRequestText) OStreamSerializerAnyStreamable.INSTANCE.fromStream(channel\n\t\t\t\t\t\t.readBytes());\n\n\t\t\t\tfinal OQuery<?> query = (OQuery<?>) (command instanceof OQuery<?> ? command : null);\n\n\t\t\t\tdata.commandDetail = command.getText();\n\n\t\t\t\tif (asynch) {\n\t\t\t\t\t// ASYNCHRONOUS\n\t\t\t\t\tfinal StringBuilder empty = new StringBuilder();\n\t\t\t\t\tfinal Set<ODocument> recordToSend = new HashSet<ODocument>();\n\n\t\t\t\t\tfinal Map<String, Integer> fetchPlan;\n\n\t\t\t\t\tif (query != null && query.getFetchPlan() != null) {\n\t\t\t\t\t\t// CHECK IF THERE IS SOME FETCH-DEPTH\n\t\t\t\t\t\tfinal String[] planParts = query.getFetchPlan().split(\" \");\n\t\t\t\t\t\tfetchPlan = new HashMap<String, Integer>();\n\n\t\t\t\t\t\tString[] parts;\n\t\t\t\t\t\tfor (String planPart : planParts) {\n\t\t\t\t\t\t\tparts = planPart.split(\":\");\n\t\t\t\t\t\t\tfetchPlan.put(parts[0], Integer.parseInt(parts[1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tfetchPlan = null;\n\n\t\t\t\t\tcommand.setResultListener(new OCommandResultListener() {\n\t\t\t\t\t\tpublic boolean result(final Object iRecord) {\n\t\t\t\t\t\t\tif (empty.length() == 0)\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tsendOk();\n\t\t\t\t\t\t\t\t\tempty.append(\"-\");\n\t\t\t\t\t\t\t\t} catch (IOException e1) {\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tchannel.writeByte((byte) 1); // ONE MORE RECORD\n\t\t\t\t\t\t\t\twriteRecord((ORecordInternal<?>) iRecord);\n\t\t\t\t\t\t\t\tchannel.flush();\n\n\t\t\t\t\t\t\t\tif (fetchPlan != null && iRecord instanceof ODocument) {\n\t\t\t\t\t\t\t\t\tfetchInDeep((ODocument) iRecord, fetchPlan, null, 0, -1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprivate void fetchInDeep(final ODocument doc, final Map<String, Integer> iFetchPlan, final String iCurrentField,\n\t\t\t\t\t\t\t\tfinal int iCurrentLevel, final int iMaxFetch) {\n\n\t\t\t\t\t\t\tif (iMaxFetch > -1 && recordToSend.size() >= iMaxFetch)\n\t\t\t\t\t\t\t\t// MAX FETCH SIZE REACHED: STOP TO FETCH AT ALL\n\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\tObject fieldValue;\n\t\t\t\t\t\t\tInteger depthLevel;\n\t\t\t\t\t\t\tint currentLevel;\n\t\t\t\t\t\t\tInteger anyFieldDepthLevel = iFetchPlan.get(\"*\");\n\n\t\t\t\t\t\t\t// BROWSE ALL THE DOCUMENT'S FIELDS\n\t\t\t\t\t\t\tfor (String fieldName : doc.fieldNames()) {\n\t\t\t\t\t\t\t\t// GET THE FETCH PLAN FOR THE GENERIC FIELD IF SPECIFIED\n\t\t\t\t\t\t\t\tdepthLevel = iFetchPlan.get(fieldName);\n\n\t\t\t\t\t\t\t\t// IF NOT FOUND, SEARCH IT FOR THE SPECIFIC CLASSES FOLLOWING THE INHERITANCE\n\t\t\t\t\t\t\t\tif (depthLevel == null) {\n\t\t\t\t\t\t\t\t\tOClass cls = doc.getSchemaClass();\n\n\t\t\t\t\t\t\t\t\twhile (cls != null && depthLevel == null) {\n\t\t\t\t\t\t\t\t\t\tdepthLevel = iFetchPlan.get(cls.getName() + \".\" + fieldName);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (depthLevel == null)\n\t\t\t\t\t\t\t\t\t\t\tcls = cls.getSuperClass();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (depthLevel == null)\n\t\t\t\t\t\t\t\t\t// NO SPECIFIED: ASSIGN DEFAULT LEVEL TAKEN FROM * WILDCARD IF ANY\n\t\t\t\t\t\t\t\t\tdepthLevel = anyFieldDepthLevel;\n\t\t\t\t\t\t\t\telse if (depthLevel == 0)\n\t\t\t\t\t\t\t\t\t// NO FETCH THIS FIELD PLEASE\n\t\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t\tif (fieldName.equals(iCurrentField)) {\n\t\t\t\t\t\t\t\t\tcurrentLevel = iCurrentLevel + 1;\n\n\t\t\t\t\t\t\t\t\tif (depthLevel >= currentLevel)\n\t\t\t\t\t\t\t\t\t\t// MAX DEPTH REACHED: STOP TO FETCH THIS FIELD\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\tcurrentLevel = 0;\n\n\t\t\t\t\t\t\t\tif (iMaxFetch > -1 && recordToSend.size() >= iMaxFetch)\n\t\t\t\t\t\t\t\t\t// MAX FETCH SIZE REACHED: STOP TO FETCH AT ALL\n\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\tfieldValue = doc.field(fieldName);\n\n\t\t\t\t\t\t\t\tif (fieldValue != null && fieldValue instanceof ODocument) {\n\t\t\t\t\t\t\t\t\tfinal ODocument linked = (ODocument) fieldValue;\n\t\t\t\t\t\t\t\t\tif (recordToSend.add(linked))\n\t\t\t\t\t\t\t\t\t\t// GO RECURSIVELY\n\t\t\t\t\t\t\t\t\t\tfetchInDeep(linked, iFetchPlan, fieldName, currentLevel, iMaxFetch);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t((OCommandRequestInternal) connection.database.command(command)).execute();\n\n\t\t\t\t\tif (empty.length() == 0)\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tsendOk();\n\t\t\t\t\t\t} catch (IOException e1) {\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// SEND RECORDS TO LOAD IN CLIENT CACHE\n\t\t\t\t\tfor (ODocument doc : recordToSend) {\n\t\t\t\t\t\tchannel.writeByte((byte) 2); // CLIENT CACHE RECORD. IT ISN'T PART OF THE RESULT SET\n\t\t\t\t\t\twriteRecord(doc);\n\t\t\t\t\t}\n\n\t\t\t\t\tchannel.writeByte((byte) 0); // NO MORE RECORDS\n\t\t\t\t} else {\n\t\t\t\t\t// SYNCHRONOUS\n\t\t\t\t\tfinal Object result = ((OCommandRequestInternal) connection.database.command(command)).execute();\n\n\t\t\t\t\tsendOk();\n\n\t\t\t\t\tif (result == null) {\n\t\t\t\t\t\t// NULL VALUE\n\t\t\t\t\t\tchannel.writeByte((byte) 'n');\n\t\t\t\t\t\tchannel.writeBytes(null);\n\t\t\t\t\t} else if (result instanceof ORecord<?>) {\n\t\t\t\t\t\t// RECORD\n\t\t\t\t\t\tchannel.writeByte((byte) 'r');\n\t\t\t\t\t\twriteRecord((ORecordInternal<?>) result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ANY OTHER (INCLUDING LITERALS)\n\t\t\t\t\t\tchannel.writeByte((byte) 'a');\n\t\t\t\t\t\tchannel.writeBytes(OStreamSerializerAnyRuntime.INSTANCE.toStream(result));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DICTIONARY_LOOKUP: {\n\t\t\t\tdata.commandInfo = \"Dictionary lookup\";\n\n\t\t\t\tString key = channel.readString();\n\t\t\t\tORecordInternal<?> value = connection.database.getDictionary().get(key);\n\n\t\t\t\tsendOk();\n\n\t\t\t\twriteRecord(value);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DICTIONARY_PUT: {\n\t\t\t\tdata.commandInfo = \"Dictionary put\";\n\n\t\t\t\tString key = channel.readString();\n\t\t\t\tORecordInternal<?> value = ORecordFactory.newInstance(channel.readByte());\n\n\t\t\t\tfinal ORecordId rid = new ORecordId(channel.readString());\n\t\t\t\tvalue.setIdentity(rid.clusterId, rid.clusterPosition);\n\t\t\t\tvalue.setDatabase(connection.database);\n\n\t\t\t\tvalue = connection.database.getDictionary().putRecord(key, value);\n\n\t\t\t\tsendOk();\n\n\t\t\t\twriteRecord(value);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DICTIONARY_REMOVE: {\n\t\t\t\tdata.commandInfo = \"Dictionary remove\";\n\n\t\t\t\tString key = channel.readString();\n\t\t\t\tORecordInternal<?> value = connection.database.getDictionary().remove(key);\n\n\t\t\t\tsendOk();\n\n\t\t\t\twriteRecord(value);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DICTIONARY_SIZE: {\n\t\t\t\tdata.commandInfo = \"Dictionary size\";\n\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeInt(connection.database.getDictionary().size());\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DICTIONARY_KEYS: {\n\t\t\t\tdata.commandInfo = \"Dictionary keys\";\n\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeCollectionString(connection.database.getDictionary().keySet());\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.TX_COMMIT:\n\t\t\t\tdata.commandInfo = \"Transaction commit\";\n\n\t\t\t\t((OStorageLocal) connection.database.getStorage()).commit(connection.database.getId(), new OTransactionOptimisticProxy(\n\t\t\t\t\t\t(ODatabaseRecordTx<OTransactionRecordProxy>) connection.database.getUnderlying(), channel));\n\n\t\t\t\tsendOk();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tdata.commandInfo = \"Command not supported\";\n\n\t\t\t\tOLogManager.instance().error(this, \"Request not supported. Code: \" + commandType);\n\n\t\t\t\tchannel.clearInput();\n\t\t\t\tsendError(null);\n\t\t\t}\n\t\t} catch (EOFException eof) {\n\t\t\tshutdown();\n\t\t} catch (SocketException e) {\n\t\t\tshutdown();\n\t\t} catch (OException e) {\n\t\t\tsendError(e);\n\t\t} catch (Throwable t) {\n\t\t\tOLogManager.instance().error(this, \"Error on executing request\", t);\n\t\t\tsendError(t);\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tchannel.flush();\n\t\t\t} catch (Throwable t) {\n\t\t\t\tOLogManager.instance().debug(this, \"Error on send data over the network\", t);\n\t\t\t}\n\n\t\t\tOSerializationThreadLocal.INSTANCE.get().clear();\n\n\t\t\tdata.lastCommandExecutionTime = System.currentTimeMillis() - data.lastCommandReceived;\n\t\t\tdata.totalCommandExecutionTime += data.lastCommandExecutionTime;\n\n\t\t\tdata.lastCommandInfo = data.commandInfo;\n\t\t\tdata.lastCommandDetail = data.commandDetail;\n\t\t}\n\t}","id":27303,"modified_method":"@SuppressWarnings(\"unchecked\")\n\t@Override\n\tprotected void execute() throws Exception {\n\t\tcommandType = -1;\n\t\tdata.commandInfo = \"Listening\";\n\t\tdata.commandDetail = \"-\";\n\n\t\ttry {\n\t\t\tcommandType = channel.readByte();\n\t\t\t++data.totalRequests;\n\n\t\t\tdata.lastCommandReceived = System.currentTimeMillis();\n\n\t\t\tswitch (commandType) {\n\n\t\t\tcase OChannelBinaryProtocol.CONNECT: {\n\t\t\t\tdata.commandInfo = \"Connect\";\n\n\t\t\t\tuser = channel.readString();\n\t\t\t\tpasswd = channel.readString();\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeString(connection.id);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DB_OPEN: {\n\t\t\t\tdata.commandInfo = \"Open database\";\n\n\t\t\t\tString dbURL = channel.readString();\n\t\t\t\tString dbName = dbURL.substring(dbURL.lastIndexOf(\":\") + 1);\n\n\t\t\t\tuser = channel.readString();\n\t\t\t\tpasswd = channel.readString();\n\n\t\t\t\t// SEARCH THE DB IN MEMORY FIRST\n\t\t\t\tconnection.database = (ODatabaseDocumentTx) OServerMain.server().getMemoryDatabases().get(dbName);\n\n\t\t\t\tif (connection.database == null)\n\t\t\t\t\t// SEARCH THE DB IN LOCAL FS\n\t\t\t\t\tconnection.database = new ODatabaseDocumentTx(OServerMain.server().getStoragePath(dbName));\n\n\t\t\t\tif (connection.database.isClosed())\n\t\t\t\t\tif (connection.database.getStorage() instanceof OStorageMemory)\n\t\t\t\t\t\tconnection.database.create();\n\t\t\t\t\telse\n\t\t\t\t\t\tconnection.database.open(user, passwd);\n\n\t\t\t\tunderlyingDatabase = ((ODatabaseRaw) ((ODatabaseComplex<?>) connection.database.getUnderlying()).getUnderlying());\n\n\t\t\t\tif (!(underlyingDatabase.getStorage() instanceof OStorageMemory) && !loadUserFromSchema(user, passwd)) {\n\t\t\t\t\tsendError(new OSecurityAccessException(connection.database.getName(), \"Access denied to database '\"\n\t\t\t\t\t\t\t+ connection.database.getName() + \"' for user: \" + user));\n\t\t\t\t} else {\n\t\t\t\t\tsendOk();\n\t\t\t\t\tchannel.writeString(connection.id);\n\t\t\t\t\tchannel.writeInt(connection.database.getClusterNames().size());\n\t\t\t\t\tfor (OCluster c : (connection.database.getStorage()).getClusters()) {\n\t\t\t\t\t\tif (c != null) {\n\t\t\t\t\t\t\tchannel.writeString(c.getName());\n\t\t\t\t\t\t\tchannel.writeInt(c.getId());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DB_CREATE: {\n\t\t\t\tdata.commandInfo = \"Create database\";\n\n\t\t\t\tString dbName = channel.readString();\n\t\t\t\tString storageMode = channel.readString();\n\n\t\t\t\tfinal String path;\n\t\t\t\tfinal String realPath;\n\n\t\t\t\tif (storageMode.equals(OEngineLocal.NAME)) {\n\t\t\t\t\tif (OServerMain.server().existsStoragePath(dbName))\n\t\t\t\t\t\tthrow new IllegalArgumentException(\"Database '\" + dbName + \"' already exists.\");\n\n\t\t\t\t\tpath = storageMode + \":${ORIENT_HOME}/databases/\" + dbName + \"/\" + dbName;\n\t\t\t\t\trealPath = OSystemVariableResolver.resolveSystemVariables(path);\n\t\t\t\t} else if (storageMode.equals(OEngineMemory.NAME)) {\n\t\t\t\t\tif (OServerMain.server().getMemoryDatabases().containsKey(dbName))\n\t\t\t\t\t\tthrow new IllegalArgumentException(\"Database '\" + dbName + \"' already exists.\");\n\n\t\t\t\t\tpath = storageMode + \":\" + dbName;\n\t\t\t\t\trealPath = path;\n\t\t\t\t} else\n\t\t\t\t\tthrow new IllegalArgumentException(\"Can't create databse: storage mode '\" + storageMode + \"' is not supported.\");\n\n\t\t\t\tconnection.database = new ODatabaseDocumentTx(realPath);\n\t\t\t\tconnection.database.create();\n\n\t\t\t\tif (storageMode.equals(OEngineLocal.NAME)) {\n\t\t\t\t\t// CLOSE IT BECAUSE IT WILL BE OPEN AT FIRST USE\n\t\t\t\t\tconnection.database.close();\n\n\t\t\t\t} else if (storageMode.equals(OEngineMemory.NAME)) {\n\t\t\t\t\t// SAVE THE DB IN MEMORY\n\t\t\t\t\tOServerMain.server().getMemoryDatabases().put(dbName, connection.database);\n\t\t\t\t}\n\n\t\t\t\tunderlyingDatabase = ((ODatabaseRaw) ((ODatabaseComplex<?>) connection.database.getUnderlying()).getUnderlying());\n\n\t\t\t\tsendOk();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DB_CLOSE:\n\t\t\t\tdata.commandInfo = \"Close Database\";\n\n\t\t\t\t// connection.storage.close();\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.DB_EXIST:\n\t\t\t\tdata.commandInfo = \"Exists database\";\n\n\t\t\t\tchannel.writeByte((byte) (connection.database.exists() ? 1 : 0));\n\n\t\t\t\tsendOk();\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.CLUSTER_COUNT:\n\t\t\t\tdata.commandInfo = \"Count cluster elements\";\n\n\t\t\t\tint[] ids = new int[channel.readShort()];\n\t\t\t\tfor (int i = 0; i < ids.length; ++i)\n\t\t\t\t\tids[i] = channel.readShort();\n\n\t\t\t\tlong count = connection.database.countClusterElements(ids);\n\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeLong(count);\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.CLUSTER_ADD: {\n\t\t\t\tdata.commandInfo = \"Add cluster\";\n\n\t\t\t\tfinal String type = channel.readString();\n\t\t\t\tfinal String name = channel.readString();\n\n\t\t\t\tfinal int num;\n\t\t\t\tif (OClusterLocal.TYPE.equals(type))\n\t\t\t\t\tnum = connection.database.addPhysicalCluster(name, channel.readString(), channel.readInt());\n\t\t\t\telse\n\t\t\t\t\tnum = connection.database.addLogicalCluster(name, channel.readInt());\n\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeShort((short) num);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.CLUSTER_REMOVE: {\n\t\t\t\tdata.commandInfo = \"remove cluster\";\n\n\t\t\t\tfinal int id = channel.readShort();\n\n\t\t\t\tboolean result = connection.database.getStorage().removeCluster(id);\n\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeByte((byte) (result ? '1' : '0'));\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.RECORD_LOAD:\n\t\t\t\tdata.commandInfo = \"Load record\";\n\n\t\t\t\tfinal ORawBuffer record = underlyingDatabase.read(channel.readShort(), channel.readLong());\n\t\t\t\tsendOk();\n\t\t\t\tif (record != null) {\n\t\t\t\t\tchannel.writeByte((byte) 1);\n\t\t\t\t\tchannel.writeBytes(record.buffer);\n\t\t\t\t\tchannel.writeInt(record.version);\n\t\t\t\t\tchannel.writeByte(record.recordType);\n\t\t\t\t} else\n\t\t\t\t\tchannel.writeByte((byte) 0);\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.RECORD_CREATE:\n\t\t\t\tdata.commandInfo = \"Create record\";\n\n\t\t\t\tfinal long location = underlyingDatabase.save(channel.readShort(), ORID.CLUSTER_POS_INVALID, channel.readBytes(), -1,\n\t\t\t\t\t\tchannel.readByte());\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeLong(location);\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.RECORD_UPDATE:\n\t\t\t\tdata.commandInfo = \"Update record\";\n\n\t\t\t\tfinal int clusterId = channel.readShort();\n\t\t\t\tfinal long position = channel.readLong();\n\n\t\t\t\tlong newVersion = underlyingDatabase.save(clusterId, position, channel.readBytes(), channel.readInt(), channel.readByte());\n\n\t\t\t\t// TODO: Handle it by using triggers\n\t\t\t\tif (connection.database.getMetadata().getSchema().getIdentity().getClusterId() == clusterId\n\t\t\t\t\t\t&& connection.database.getMetadata().getSchema().getIdentity().getClusterPosition() == position)\n\t\t\t\t\tconnection.database.getMetadata().loadSchema();\n\t\t\t\telse if (((ODictionaryLocal<?>) connection.database.getDictionary()).getTree().getRecord().getIdentity().getClusterId() == clusterId\n\t\t\t\t\t\t&& ((ODictionaryLocal<?>) connection.database.getDictionary()).getTree().getRecord().getIdentity().getClusterPosition() == position)\n\t\t\t\t\t((ODictionaryLocal<?>) connection.database.getDictionary()).load();\n\n\t\t\t\tsendOk();\n\n\t\t\t\tchannel.writeInt((int) newVersion);\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.RECORD_DELETE:\n\t\t\t\tdata.commandInfo = \"Delete record\";\n\n\t\t\t\tunderlyingDatabase.delete(channel.readShort(), channel.readLong(), channel.readInt());\n\t\t\t\tsendOk();\n\n\t\t\t\tchannel.writeByte((byte) '1');\n\t\t\t\tbreak;\n\n\t\t\tcase OChannelBinaryProtocol.COUNT: {\n\t\t\t\tdata.commandInfo = \"Count cluster records\";\n\n\t\t\t\tfinal String clusterName = channel.readString();\n\t\t\t\tfinal long size = connection.database.countClusterElements(clusterName);\n\n\t\t\t\tsendOk();\n\n\t\t\t\tchannel.writeLong(size);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.COMMAND: {\n\t\t\t\tdata.commandInfo = \"Execute remote command\";\n\n\t\t\t\tfinal boolean asynch = channel.readByte() == 'a';\n\n\t\t\t\tfinal OCommandRequestText command = (OCommandRequestText) OStreamSerializerAnyStreamable.INSTANCE.fromStream(channel\n\t\t\t\t\t\t.readBytes());\n\n\t\t\t\tfinal OQuery<?> query = (OQuery<?>) (command instanceof OQuery<?> ? command : null);\n\n\t\t\t\tdata.commandDetail = command.getText();\n\n\t\t\t\tif (asynch) {\n\t\t\t\t\t// ASYNCHRONOUS\n\t\t\t\t\tfinal StringBuilder empty = new StringBuilder();\n\t\t\t\t\tfinal Set<ODocument> recordToSend = new HashSet<ODocument>();\n\n\t\t\t\t\tfinal Map<String, Integer> fetchPlan;\n\n\t\t\t\t\tif (query != null && query.getFetchPlan() != null) {\n\t\t\t\t\t\t// CHECK IF THERE IS SOME FETCH-DEPTH\n\t\t\t\t\t\tfinal String[] planParts = query.getFetchPlan().split(\" \");\n\t\t\t\t\t\tfetchPlan = new HashMap<String, Integer>();\n\n\t\t\t\t\t\tString[] parts;\n\t\t\t\t\t\tfor (String planPart : planParts) {\n\t\t\t\t\t\t\tparts = planPart.split(\":\");\n\t\t\t\t\t\t\tfetchPlan.put(parts[0], Integer.parseInt(parts[1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tfetchPlan = null;\n\n\t\t\t\t\tcommand.setResultListener(new OCommandResultListener() {\n\t\t\t\t\t\tpublic boolean result(final Object iRecord) {\n\t\t\t\t\t\t\tif (empty.length() == 0)\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tsendOk();\n\t\t\t\t\t\t\t\t\tempty.append(\"-\");\n\t\t\t\t\t\t\t\t} catch (IOException e1) {\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tchannel.writeByte((byte) 1); // ONE MORE RECORD\n\t\t\t\t\t\t\t\twriteRecord((ORecordInternal<?>) iRecord);\n\t\t\t\t\t\t\t\tchannel.flush();\n\n\t\t\t\t\t\t\t\tif (fetchPlan != null && iRecord instanceof ODocument) {\n\t\t\t\t\t\t\t\t\tfetchInDeep((ODocument) iRecord, fetchPlan, null, 0, -1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprivate void fetchInDeep(final ODocument doc, final Map<String, Integer> iFetchPlan, final String iCurrentField,\n\t\t\t\t\t\t\t\tfinal int iCurrentLevel, final int iMaxFetch) {\n\n\t\t\t\t\t\t\tif (iMaxFetch > -1 && recordToSend.size() >= iMaxFetch)\n\t\t\t\t\t\t\t\t// MAX FETCH SIZE REACHED: STOP TO FETCH AT ALL\n\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\tObject fieldValue;\n\t\t\t\t\t\t\tInteger depthLevel;\n\t\t\t\t\t\t\tint currentLevel;\n\t\t\t\t\t\t\tInteger anyFieldDepthLevel = iFetchPlan.get(\"*\");\n\n\t\t\t\t\t\t\t// BROWSE ALL THE DOCUMENT'S FIELDS\n\t\t\t\t\t\t\tfor (String fieldName : doc.fieldNames()) {\n\t\t\t\t\t\t\t\t// GET THE FETCH PLAN FOR THE GENERIC FIELD IF SPECIFIED\n\t\t\t\t\t\t\t\tdepthLevel = iFetchPlan.get(fieldName);\n\n\t\t\t\t\t\t\t\t// IF NOT FOUND, SEARCH IT FOR THE SPECIFIC CLASSES FOLLOWING THE INHERITANCE\n\t\t\t\t\t\t\t\tif (depthLevel == null) {\n\t\t\t\t\t\t\t\t\tOClass cls = doc.getSchemaClass();\n\n\t\t\t\t\t\t\t\t\twhile (cls != null && depthLevel == null) {\n\t\t\t\t\t\t\t\t\t\tdepthLevel = iFetchPlan.get(cls.getName() + \".\" + fieldName);\n\n\t\t\t\t\t\t\t\t\t\tif (depthLevel == null)\n\t\t\t\t\t\t\t\t\t\t\tcls = cls.getSuperClass();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (depthLevel == null)\n\t\t\t\t\t\t\t\t\t// NO SPECIFIED: ASSIGN DEFAULT LEVEL TAKEN FROM * WILDCARD IF ANY\n\t\t\t\t\t\t\t\t\tdepthLevel = anyFieldDepthLevel;\n\t\t\t\t\t\t\t\telse if (depthLevel == 0)\n\t\t\t\t\t\t\t\t\t// NO FETCH THIS FIELD PLEASE\n\t\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t\tif (fieldName.equals(iCurrentField)) {\n\t\t\t\t\t\t\t\t\tcurrentLevel = iCurrentLevel + 1;\n\n\t\t\t\t\t\t\t\t\tif (depthLevel >= currentLevel)\n\t\t\t\t\t\t\t\t\t\t// MAX DEPTH REACHED: STOP TO FETCH THIS FIELD\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\tcurrentLevel = 0;\n\n\t\t\t\t\t\t\t\tif (iMaxFetch > -1 && recordToSend.size() >= iMaxFetch)\n\t\t\t\t\t\t\t\t\t// MAX FETCH SIZE REACHED: STOP TO FETCH AT ALL\n\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\tfieldValue = doc.field(fieldName);\n\n\t\t\t\t\t\t\t\tif (fieldValue != null && fieldValue instanceof ODocument) {\n\t\t\t\t\t\t\t\t\tfinal ODocument linked = (ODocument) fieldValue;\n\t\t\t\t\t\t\t\t\tif (recordToSend.add(linked))\n\t\t\t\t\t\t\t\t\t\t// GO RECURSIVELY\n\t\t\t\t\t\t\t\t\t\tfetchInDeep(linked, iFetchPlan, fieldName, currentLevel, iMaxFetch);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t((OCommandRequestInternal) connection.database.command(command)).execute();\n\n\t\t\t\t\tif (empty.length() == 0)\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tsendOk();\n\t\t\t\t\t\t} catch (IOException e1) {\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// SEND RECORDS TO LOAD IN CLIENT CACHE\n\t\t\t\t\tfor (ODocument doc : recordToSend) {\n\t\t\t\t\t\tchannel.writeByte((byte) 2); // CLIENT CACHE RECORD. IT ISN'T PART OF THE RESULT SET\n\t\t\t\t\t\twriteRecord(doc);\n\t\t\t\t\t}\n\n\t\t\t\t\tchannel.writeByte((byte) 0); // NO MORE RECORDS\n\t\t\t\t} else {\n\t\t\t\t\t// SYNCHRONOUS\n\t\t\t\t\tfinal Object result = ((OCommandRequestInternal) connection.database.command(command)).execute();\n\n\t\t\t\t\tsendOk();\n\n\t\t\t\t\tif (result == null) {\n\t\t\t\t\t\t// NULL VALUE\n\t\t\t\t\t\tchannel.writeByte((byte) 'n');\n\t\t\t\t\t\tchannel.writeBytes(null);\n\t\t\t\t\t} else if (result instanceof ORecord<?>) {\n\t\t\t\t\t\t// RECORD\n\t\t\t\t\t\tchannel.writeByte((byte) 'r');\n\t\t\t\t\t\twriteRecord((ORecordInternal<?>) result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ANY OTHER (INCLUDING LITERALS)\n\t\t\t\t\t\tchannel.writeByte((byte) 'a');\n\t\t\t\t\t\tchannel.writeBytes(OStreamSerializerAnyRuntime.INSTANCE.toStream(result));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DICTIONARY_LOOKUP: {\n\t\t\t\tdata.commandInfo = \"Dictionary lookup\";\n\n\t\t\t\tfinal String key = channel.readString();\n\t\t\t\tfinal ORecordAbstract<?> value = connection.database.getDictionary().get(key);\n\n\t\t\t\tif (value != null)\n\t\t\t\t\t((ODatabaseRecordTx<ORecordInternal<?>>) connection.database.getUnderlying()).load(value);\n\n\t\t\t\tsendOk();\n\n\t\t\t\twriteRecord(value);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DICTIONARY_PUT: {\n\t\t\t\tdata.commandInfo = \"Dictionary put\";\n\n\t\t\t\tString key = channel.readString();\n\t\t\t\tORecordInternal<?> value = ORecordFactory.newInstance(channel.readByte());\n\n\t\t\t\tfinal ORecordId rid = new ORecordId(channel.readString());\n\t\t\t\tvalue.setIdentity(rid.clusterId, rid.clusterPosition);\n\t\t\t\tvalue.setDatabase(connection.database);\n\n\t\t\t\tvalue = connection.database.getDictionary().putRecord(key, value);\n\n\t\t\t\tif (value != null)\n\t\t\t\t\t((ODatabaseRecordTx<ORecordInternal<?>>) connection.database.getUnderlying()).load(value);\n\n\t\t\t\tsendOk();\n\n\t\t\t\twriteRecord(value);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DICTIONARY_REMOVE: {\n\t\t\t\tdata.commandInfo = \"Dictionary remove\";\n\n\t\t\t\tfinal String key = channel.readString();\n\t\t\t\tfinal ORecordInternal<?> value = connection.database.getDictionary().remove(key);\n\n\t\t\t\tif (value != null)\n\t\t\t\t\t((ODatabaseRecordTx<ORecordInternal<?>>) connection.database.getUnderlying()).load(value);\n\n\t\t\t\tsendOk();\n\n\t\t\t\twriteRecord(value);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DICTIONARY_SIZE: {\n\t\t\t\tdata.commandInfo = \"Dictionary size\";\n\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeInt(connection.database.getDictionary().size());\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.DICTIONARY_KEYS: {\n\t\t\t\tdata.commandInfo = \"Dictionary keys\";\n\n\t\t\t\tsendOk();\n\t\t\t\tchannel.writeCollectionString(connection.database.getDictionary().keySet());\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OChannelBinaryProtocol.TX_COMMIT:\n\t\t\t\tdata.commandInfo = \"Transaction commit\";\n\n\t\t\t\t((OStorageLocal) connection.database.getStorage()).commit(connection.database.getId(), new OTransactionOptimisticProxy(\n\t\t\t\t\t\t(ODatabaseRecordTx<OTransactionRecordProxy>) connection.database.getUnderlying(), channel));\n\n\t\t\t\tsendOk();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tdata.commandInfo = \"Command not supported\";\n\n\t\t\t\tOLogManager.instance().error(this, \"Request not supported. Code: \" + commandType);\n\n\t\t\t\tchannel.clearInput();\n\t\t\t\tsendError(null);\n\t\t\t}\n\t\t} catch (EOFException eof) {\n\t\t\tshutdown();\n\t\t} catch (SocketException e) {\n\t\t\tshutdown();\n\t\t} catch (OException e) {\n\t\t\tsendError(e);\n\t\t} catch (Throwable t) {\n\t\t\tOLogManager.instance().error(this, \"Error on executing request\", t);\n\t\t\tsendError(t);\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tchannel.flush();\n\t\t\t} catch (Throwable t) {\n\t\t\t\tOLogManager.instance().debug(this, \"Error on send data over the network\", t);\n\t\t\t}\n\n\t\t\tOSerializationThreadLocal.INSTANCE.get().clear();\n\n\t\t\tdata.lastCommandExecutionTime = System.currentTimeMillis() - data.lastCommandReceived;\n\t\t\tdata.totalCommandExecutionTime += data.lastCommandExecutionTime;\n\n\t\t\tdata.lastCommandInfo = data.commandInfo;\n\t\t\tdata.lastCommandDetail = data.commandDetail;\n\t\t}\n\t}","commit_id":"f451b80949bb0b82f861a53a5429eb907b3c536f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private ORecord<?> readRecordFromNetwork(ODatabaseRecord<?> iDatabase) throws IOException {\r\n\t\tint classId = network.readShort();\r\n\t\tif (classId == OChannelBinaryProtocol.RECORD_NULL)\r\n\t\t\treturn null;\r\n\r\n\t\tORecordInternal<?> record = ORecordFactory.newInstance(network.readByte());\r\n\r\n\t\tif (record instanceof ORecordSchemaAware<?>)\r\n\t\t\t((ORecordSchemaAware<?>) record).fill(iDatabase, classId, network.readShort(), network.readLong(), network.readInt())\r\n\t\t\t\t\t.fromStream(network.readBytes());\r\n\t\telse {\r\n\t\t\t// DISCARD CLASS ID\r\n\t\t\trecord.fill(iDatabase, network.readShort(), network.readLong(), network.readInt()).fromStream(network.readBytes());\r\n\t\t}\r\n\r\n\t\treturn record;\r\n\t}","id":27304,"modified_method":"private ORecord<?> readRecordFromNetwork(ODatabaseRecord<?> iDatabase) throws IOException {\r\n\t\tfinal int classId = network.readShort();\r\n\t\tif (classId == OChannelBinaryProtocol.RECORD_NULL)\r\n\t\t\treturn null;\r\n\r\n\t\tORecordInternal<?> record = ORecordFactory.newInstance(network.readByte());\r\n\r\n\t\tif (record instanceof ORecordSchemaAware<?>)\r\n\t\t\t((ORecordSchemaAware<?>) record).fill(iDatabase, classId, network.readShort(), network.readLong(), network.readInt());\r\n\t\telse\r\n\t\t\t// DISCARD CLASS ID\r\n\t\t\trecord.fill(iDatabase, network.readShort(), network.readLong(), network.readInt());\r\n\r\n\t\trecord.fromStream(network.readBytes());\r\n\r\n\t\treturn record;\r\n\t}","commit_id":"f451b80949bb0b82f861a53a5429eb907b3c536f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tpublic ODocument fromStream(final byte[] iRecordBuffer) {\r\n\t\tremoveAllCollectionChangeListeners();\r\n\r\n\t\t_fieldValues = null;\r\n\t\t_fieldTypes = null;\r\n\t\t_fieldOriginalValues = null;\r\n\t\t_fieldChangeListeners = null;\r\n\t\t_fieldCollectionChangeTimeLines = null;\r\n\r\n\t\treturn (ODocument) super.fromStream(iRecordBuffer);\r\n\t}","id":27305,"modified_method":"@Override\r\n\tpublic ODocument fromStream(final byte[] iRecordBuffer) {\r\n\t\tremoveAllCollectionChangeListeners();\r\n\r\n\t\t_fieldValues = null;\r\n\t\t_fieldTypes = null;\r\n\t\t_fieldOriginalValues = null;\r\n\t\t_fieldChangeListeners = null;\r\n\t\t_fieldCollectionChangeTimeLines = null;\r\n\r\n\t\tsuper.fromStream(iRecordBuffer);\r\n\r\n\t\tif (!_lazyLoad) {\r\n\t\t\tcheckForFields();\r\n\t\t\tcheckForLoading();\r\n\t\t}\r\n\r\n\t\treturn (ODocument) this;\r\n\t}","commit_id":"363510076122220a49ae0b9225add6851296f3f8","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void testSerialization() {\r\n    final byte[] streamOrigin = \"Account@html:{\\\"path\\\":\\\"html/layout\\\"},config:{\\\"title\\\":\\\"Github Admin\\\",\\\"modules\\\":(githubDisplay:\\\"github_display\\\")},complex:(simple1:\\\"string1\\\",one_level1:(simple2:\\\"string2\\\"),two_levels:(simple3:\\\"string3\\\",one_level2:(simple4:\\\"string4\\\")))\"\r\n        .getBytes();\r\n    ODocument doc = new ODocument().fromStream(streamOrigin);\r\n    doc.field(\"out\");\r\n    final byte[] streamDest = doc.toStream();\r\n    Assert.assertEquals(streamOrigin, streamDest);\r\n  }","id":27306,"modified_method":"public void testSerialization() {\r\n    ORecordSerializer current = ODatabaseDocumentTx.getDefaultSerializer();\r\n    ODatabaseDocumentTx.setDefaultSerializer(ORecordSerializerSchemaAware2CSV.INSTANCE);\r\n    final byte[] streamOrigin = \"Account@html:{\\\"path\\\":\\\"html/layout\\\"},config:{\\\"title\\\":\\\"Github Admin\\\",\\\"modules\\\":(githubDisplay:\\\"github_display\\\")},complex:(simple1:\\\"string1\\\",one_level1:(simple2:\\\"string2\\\"),two_levels:(simple3:\\\"string3\\\",one_level2:(simple4:\\\"string4\\\")))\"\r\n        .getBytes();\r\n    ODocument doc = (ODocument) ORecordSerializerSchemaAware2CSV.INSTANCE.fromStream(streamOrigin, new ODocument(), null);\r\n    doc.field(\"out\");\r\n    final byte[] streamDest = ORecordSerializerSchemaAware2CSV.INSTANCE.toStream(doc, false);\r\n    Assert.assertEquals(streamOrigin, streamDest);\r\n    ODatabaseDocumentTx.setDefaultSerializer(current);\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void testNestedMultiLevelEmbeddedJson() {\r\n    if (!database.getMetadata().getSchema().existsClass(\"Device\"))\r\n      database.getMetadata().getSchema().createClass(\"Device\");\r\n\r\n    database.command(new OCommandSQL(\"insert into device (domainset) values ({'domain' : { 'lvlone' : { 'value' : 'five' } } } )\"))\r\n        .execute();\r\n\r\n    List<ODocument> result = database.query(new OSQLSynchQuery<Object>(\r\n        \"select from device where domainset.domain.lvlone.value in 'five'\"));\r\n    Assert.assertTrue(result.size() > 0);\r\n  }","id":27307,"modified_method":"public void testNestedMultiLevelEmbeddedJson() {\r\n    ODatabaseDocumentTx database = new ODatabaseDocumentTx(url);\r\n    database.open(\"admin\", \"admin\");\r\n\r\n    try {\r\n      if (!database.getMetadata().getSchema().existsClass(\"Device\"))\r\n        database.getMetadata().getSchema().createClass(\"Device\");\r\n\r\n      database.command(\r\n          new OCommandSQL(\"insert into device (domainset) values ({'domain' : { 'lvlone' : { 'value' : 'five' } } } )\")).execute();\r\n\r\n      List<ODocument> result = database.query(new OSQLSynchQuery<Object>(\r\n          \"select from device where domainset.domain.lvlone.value in 'five'\"));\r\n      Assert.assertTrue(result.size() > 0);\r\n\r\n    } finally {\r\n      database.close();\r\n    }\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test\r\n  public void testMultiLevelTypes() {\r\n    String oldDataTimeFormat = database.get(ODatabase.ATTRIBUTES.DATETIMEFORMAT).toString();\r\n    database.set(ODatabase.ATTRIBUTES.DATETIMEFORMAT, ODateHelper.DEF_DATETIME_FORMAT);\r\n    try {\r\n      ODocument newDoc = new ODocument();\r\n      newDoc.field(\"long\", 100000000000l);\r\n      newDoc.field(\"date\", new Date());\r\n      newDoc.field(\"byte\", (byte) 12);\r\n      ODocument firstLevelDoc = new ODocument();\r\n      firstLevelDoc.field(\"long\", 200000000000l);\r\n      firstLevelDoc.field(\"date\", new Date());\r\n      firstLevelDoc.field(\"byte\", (byte) 13);\r\n      ODocument secondLevelDoc = new ODocument();\r\n      secondLevelDoc.field(\"long\", 300000000000l);\r\n      secondLevelDoc.field(\"date\", new Date());\r\n      secondLevelDoc.field(\"byte\", (byte) 14);\r\n      ODocument thirdLevelDoc = new ODocument();\r\n      thirdLevelDoc.field(\"long\", 400000000000l);\r\n      thirdLevelDoc.field(\"date\", new Date());\r\n      thirdLevelDoc.field(\"byte\", (byte) 15);\r\n      newDoc.field(\"doc\", firstLevelDoc);\r\n      firstLevelDoc.field(\"doc\", secondLevelDoc);\r\n      secondLevelDoc.field(\"doc\", thirdLevelDoc);\r\n\r\n      String json = newDoc.toJSON();\r\n      ODocument loadedDoc = new ODocument().fromJSON(json);\r\n\r\n      Assert.assertTrue(newDoc.hasSameContentOf(loadedDoc));\r\n      Assert.assertTrue(loadedDoc.field(\"long\") instanceof Long);\r\n      Assert.assertEquals(((Long) newDoc.field(\"long\")).longValue(), ((Long) loadedDoc.field(\"long\")).longValue());\r\n      Assert.assertTrue(loadedDoc.field(\"date\") instanceof Date);\r\n      Assert.assertTrue(loadedDoc.field(\"byte\") instanceof Byte);\r\n      Assert.assertEquals(((Byte) newDoc.field(\"byte\")).byteValue(), ((Byte) loadedDoc.field(\"byte\")).byteValue());\r\n      Assert.assertTrue(loadedDoc.field(\"doc\") instanceof ODocument);\r\n\r\n      ODocument firstDoc = loadedDoc.field(\"doc\");\r\n      Assert.assertTrue(firstLevelDoc.hasSameContentOf(firstDoc));\r\n      Assert.assertTrue(firstDoc.field(\"long\") instanceof Long);\r\n      Assert.assertEquals(((Long) firstLevelDoc.field(\"long\")).longValue(), ((Long) firstDoc.field(\"long\")).longValue());\r\n      Assert.assertTrue(firstDoc.field(\"date\") instanceof Date);\r\n      Assert.assertTrue(firstDoc.field(\"byte\") instanceof Byte);\r\n      Assert.assertEquals(((Byte) firstLevelDoc.field(\"byte\")).byteValue(), ((Byte) firstDoc.field(\"byte\")).byteValue());\r\n      Assert.assertTrue(firstDoc.field(\"doc\") instanceof ODocument);\r\n\r\n      ODocument secondDoc = firstDoc.field(\"doc\");\r\n      Assert.assertTrue(secondLevelDoc.hasSameContentOf(secondDoc));\r\n      Assert.assertTrue(secondDoc.field(\"long\") instanceof Long);\r\n      Assert.assertEquals(((Long) secondLevelDoc.field(\"long\")).longValue(), ((Long) secondDoc.field(\"long\")).longValue());\r\n      Assert.assertTrue(secondDoc.field(\"date\") instanceof Date);\r\n      Assert.assertTrue(secondDoc.field(\"byte\") instanceof Byte);\r\n      Assert.assertEquals(((Byte) secondLevelDoc.field(\"byte\")).byteValue(), ((Byte) secondDoc.field(\"byte\")).byteValue());\r\n      Assert.assertTrue(secondDoc.field(\"doc\") instanceof ODocument);\r\n\r\n      ODocument thirdDoc = secondDoc.field(\"doc\");\r\n      Assert.assertTrue(thirdLevelDoc.hasSameContentOf(thirdDoc));\r\n      Assert.assertTrue(thirdDoc.field(\"long\") instanceof Long);\r\n      Assert.assertEquals(((Long) thirdLevelDoc.field(\"long\")).longValue(), ((Long) thirdDoc.field(\"long\")).longValue());\r\n      Assert.assertTrue(thirdDoc.field(\"date\") instanceof Date);\r\n      Assert.assertTrue(thirdDoc.field(\"byte\") instanceof Byte);\r\n      Assert.assertEquals(((Byte) thirdLevelDoc.field(\"byte\")).byteValue(), ((Byte) thirdDoc.field(\"byte\")).byteValue());\r\n    } finally {\r\n      database.set(ODatabase.ATTRIBUTES.DATETIMEFORMAT, oldDataTimeFormat);\r\n    }\r\n  }","id":27308,"modified_method":"@Test\r\n  public void testMultiLevelTypes() {\r\n    ODocument newDoc = new ODocument();\r\n    newDoc.field(\"long\", 100000000000l);\r\n    newDoc.field(\"date\", new Date());\r\n    newDoc.field(\"byte\", (byte) 12);\r\n    ODocument firstLevelDoc = new ODocument();\r\n    firstLevelDoc.field(\"long\", 200000000000l);\r\n    firstLevelDoc.field(\"date\", new Date());\r\n    firstLevelDoc.field(\"byte\", (byte) 13);\r\n    ODocument secondLevelDoc = new ODocument();\r\n    secondLevelDoc.field(\"long\", 300000000000l);\r\n    secondLevelDoc.field(\"date\", new Date());\r\n    secondLevelDoc.field(\"byte\", (byte) 14);\r\n    ODocument thirdLevelDoc = new ODocument();\r\n    thirdLevelDoc.field(\"long\", 400000000000l);\r\n    thirdLevelDoc.field(\"date\", new Date());\r\n    thirdLevelDoc.field(\"byte\", (byte) 15);\r\n    newDoc.field(\"doc\", firstLevelDoc);\r\n    firstLevelDoc.field(\"doc\", secondLevelDoc);\r\n    secondLevelDoc.field(\"doc\", thirdLevelDoc);\r\n\r\n    String json = newDoc.toJSON();\r\n    ODocument loadedDoc = new ODocument().fromJSON(json);\r\n\r\n    Assert.assertTrue(newDoc.hasSameContentOf(loadedDoc));\r\n    Assert.assertTrue(loadedDoc.field(\"long\") instanceof Long);\r\n    Assert.assertEquals(((Long) newDoc.field(\"long\")).longValue(), ((Long) loadedDoc.field(\"long\")).longValue());\r\n    Assert.assertTrue(loadedDoc.field(\"date\") instanceof Date);\r\n    Assert.assertTrue(loadedDoc.field(\"byte\") instanceof Byte);\r\n    Assert.assertEquals(((Byte) newDoc.field(\"byte\")).byteValue(), ((Byte) loadedDoc.field(\"byte\")).byteValue());\r\n    Assert.assertTrue(loadedDoc.field(\"doc\") instanceof ODocument);\r\n\r\n    ODocument firstDoc = loadedDoc.field(\"doc\");\r\n    Assert.assertTrue(firstLevelDoc.hasSameContentOf(firstDoc));\r\n    Assert.assertTrue(firstDoc.field(\"long\") instanceof Long);\r\n    Assert.assertEquals(((Long) firstLevelDoc.field(\"long\")).longValue(), ((Long) firstDoc.field(\"long\")).longValue());\r\n    Assert.assertTrue(firstDoc.field(\"date\") instanceof Date);\r\n    Assert.assertTrue(firstDoc.field(\"byte\") instanceof Byte);\r\n    Assert.assertEquals(((Byte) firstLevelDoc.field(\"byte\")).byteValue(), ((Byte) firstDoc.field(\"byte\")).byteValue());\r\n    Assert.assertTrue(firstDoc.field(\"doc\") instanceof ODocument);\r\n\r\n    ODocument secondDoc = firstDoc.field(\"doc\");\r\n    Assert.assertTrue(secondLevelDoc.hasSameContentOf(secondDoc));\r\n    Assert.assertTrue(secondDoc.field(\"long\") instanceof Long);\r\n    Assert.assertEquals(((Long) secondLevelDoc.field(\"long\")).longValue(), ((Long) secondDoc.field(\"long\")).longValue());\r\n    Assert.assertTrue(secondDoc.field(\"date\") instanceof Date);\r\n    Assert.assertTrue(secondDoc.field(\"byte\") instanceof Byte);\r\n    Assert.assertEquals(((Byte) secondLevelDoc.field(\"byte\")).byteValue(), ((Byte) secondDoc.field(\"byte\")).byteValue());\r\n    Assert.assertTrue(secondDoc.field(\"doc\") instanceof ODocument);\r\n\r\n    ODocument thirdDoc = secondDoc.field(\"doc\");\r\n    Assert.assertTrue(thirdLevelDoc.hasSameContentOf(thirdDoc));\r\n    Assert.assertTrue(thirdDoc.field(\"long\") instanceof Long);\r\n    Assert.assertEquals(((Long) thirdLevelDoc.field(\"long\")).longValue(), ((Long) thirdDoc.field(\"long\")).longValue());\r\n    Assert.assertTrue(thirdDoc.field(\"date\") instanceof Date);\r\n    Assert.assertTrue(thirdDoc.field(\"byte\") instanceof Byte);\r\n    Assert.assertEquals(((Byte) thirdLevelDoc.field(\"byte\")).byteValue(), ((Byte) thirdDoc.field(\"byte\")).byteValue());\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void testNestedEmbeddedJson() {\r\n    if (!database.getMetadata().getSchema().existsClass(\"Device\"))\r\n      database.getMetadata().getSchema().createClass(\"Device\");\r\n\r\n    database.command(new OCommandSQL(\"insert into device (resource_id, domainset) VALUES (1, { 'domain' : 'eee' })\")).execute();\r\n\r\n    List<ODocument> result = database.query(new OSQLSynchQuery<Object>(\"select from device where domainset.domain in 'eee'\"));\r\n    Assert.assertTrue(result.size() > 0);\r\n  }","id":27309,"modified_method":"public void testNestedEmbeddedJson() {\r\n    ODatabaseDocumentTx database = new ODatabaseDocumentTx(url);\r\n    database.open(\"admin\", \"admin\");\r\n\r\n    try {\r\n      if (!database.getMetadata().getSchema().existsClass(\"Device\"))\r\n        database.getMetadata().getSchema().createClass(\"Device\");\r\n\r\n      database.command(new OCommandSQL(\"insert into device (resource_id, domainset) VALUES (1, { 'domain' : 'eee' })\")).execute();\r\n\r\n      List<ODocument> result = database.query(new OSQLSynchQuery<Object>(\"select from device where domainset.domain in 'eee'\"));\r\n      Assert.assertTrue(result.size() > 0);\r\n\r\n    } finally {\r\n      database.close();\r\n    }\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void testLongTypes() {\r\n    ODocument newDoc = new ODocument();\r\n\r\n    newDoc\r\n        .fromJSON(\"{\\\"@type\\\": \\\"d\\\",\\\"@class\\\": \\\"Track\\\",\\\"type\\\": \\\"LineString\\\",\\\"coordinates\\\": [ [ 32874387347347,  0 ],  [ -23736753287327, 1 ] ]}\");\r\n\r\n    newDoc.save();\r\n\r\n    ODocument loadedDoc = database.load(newDoc.getIdentity());\r\n\r\n    Assert.assertTrue(newDoc.hasSameContentOf(loadedDoc));\r\n  }","id":27310,"modified_method":"public void testLongTypes() {\r\n    ODatabaseDocumentTx database = new ODatabaseDocumentTx(url);\r\n    database.open(\"admin\", \"admin\");\r\n\r\n    ODocument newDoc = new ODocument();\r\n\r\n    newDoc\r\n        .fromJSON(\"{\\\"@type\\\": \\\"d\\\",\\\"@class\\\": \\\"Track\\\",\\\"type\\\": \\\"LineString\\\",\\\"coordinates\\\": [ [ 32874387347347,  0 ],  [ -23736753287327, 1 ] ]}\");\r\n\r\n    newDoc.save();\r\n\r\n    ODocument loadedDoc = database.load(newDoc.getIdentity());\r\n\r\n    Assert.assertTrue(newDoc.hasSameContentOf(loadedDoc));\r\n    database.close();\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void testJsonToStream() {\r\n    String doc1Json = \"{Key1:{\\\"%Field1\\\":[{},{},{},{},{}],\\\"%Field2\\\":false,\\\"%Field3\\\":\\\"Value1\\\"}}\";\r\n    ODocument doc1 = new ODocument().fromJSON(doc1Json);\r\n    String doc1String = new String(doc1.toStream());\r\n    Assert.assertEquals(doc1Json, \"{\" + doc1String + \"}\");\r\n\r\n    String doc2Json = \"{Key1:{\\\"%Field1\\\":[{},{},{},{},{}],\\\"%Field2\\\":false,\\\"%Field3\\\":\\\"Value1\\\"}}\";\r\n    ODocument doc2 = new ODocument().fromJSON(doc2Json);\r\n    String doc2String = new String(doc2.toStream());\r\n    Assert.assertEquals(doc2Json, \"{\" + doc2String + \"}\");\r\n  }","id":27311,"modified_method":"public void testJsonToStream() {\r\n    String doc1Json = \"{Key1:{\\\"%Field1\\\":[{},{},{},{},{}],\\\"%Field2\\\":false,\\\"%Field3\\\":\\\"Value1\\\"}}\";\r\n    ODocument doc1 = new ODocument().fromJSON(doc1Json);\r\n\r\n    String doc1String = new String(ORecordSerializerSchemaAware2CSV.INSTANCE.toStream(doc1, false));\r\n    Assert.assertEquals(doc1Json, \"{\" + doc1String + \"}\");\r\n\r\n    String doc2Json = \"{Key1:{\\\"%Field1\\\":[{},{},{},{},{}],\\\"%Field2\\\":false,\\\"%Field3\\\":\\\"Value1\\\"}}\";\r\n    ODocument doc2 = new ODocument().fromJSON(doc2Json);\r\n    String doc2String = new String(ORecordSerializerSchemaAware2CSV.INSTANCE.toStream(doc2, false));\r\n    Assert.assertEquals(doc2Json, \"{\" + doc2String + \"}\");\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test\r\n  public void testToJSONWithNoLazyLoadAndClosedDatabase() {\r\n    List<ODocument> result = database.command(\r\n        new OSQLSynchQuery<ODocument>(\"select * from Profile where name = 'Barack' and surname = 'Obama'\")).execute();\r\n\r\n    for (ODocument doc : result) {\r\n      doc.reload(\"*:0\");\r\n      String jsonFull = doc.toJSON();\r\n      ORID rid = doc.getIdentity();\r\n      database.close();\r\n      database.open(\"admin\", \"admin\");\r\n      doc = database.load(rid);\r\n      doc.setLazyLoad(false);\r\n      doc.reload(\"*:0\");\r\n      database.close();\r\n      String jsonLoaded = doc.toJSON();\r\n      Assert.assertEquals(jsonLoaded, jsonFull);\r\n      database.open(\"admin\", \"admin\");\r\n      doc = database.load(rid);\r\n      doc.setLazyLoad(false);\r\n      doc.load(\"*:0\");\r\n      database.close();\r\n      jsonLoaded = doc.toJSON();\r\n\r\n      Assert.assertEquals(jsonLoaded, jsonFull);\r\n    }\r\n\r\n    if (database.isClosed())\r\n      database.open(\"admin\", \"admin\");\r\n\r\n    for (ODocument doc : result) {\r\n      doc.reload(\"*:1\");\r\n      String jsonFull = doc.toJSON();\r\n      ORID rid = doc.getIdentity();\r\n      database.close();\r\n      database.open(\"admin\", \"admin\");\r\n      doc = database.load(rid);\r\n      doc.setLazyLoad(false);\r\n      doc.reload(\"*:1\");\r\n      database.close();\r\n      String jsonLoaded = doc.toJSON();\r\n      Assert.assertEquals(jsonFull, jsonLoaded);\r\n      database.open(\"admin\", \"admin\");\r\n      doc = database.load(rid);\r\n      doc.setLazyLoad(false);\r\n      doc.load(\"*:1\");\r\n      database.close();\r\n      jsonLoaded = doc.toJSON();\r\n\r\n      Assert.assertEquals(jsonFull, jsonLoaded);\r\n    }\r\n  }","id":27312,"modified_method":"@Test\r\n  public void testToJSONWithNoLazyLoadAndClosedDatabase() {\r\n    ODatabaseDocumentTx database = new ODatabaseDocumentTx(url);\r\n    database.open(\"admin\", \"admin\");\r\n\r\n    List<ODocument> result = database.command(\r\n        new OSQLSynchQuery<ODocument>(\"select * from Profile where name = 'Barack' and surname = 'Obama'\")).execute();\r\n\r\n    for (ODocument doc : result) {\r\n      doc.reload(\"*:0\");\r\n      String jsonFull = doc.toJSON();\r\n      ORID rid = doc.getIdentity();\r\n      database.close();\r\n      database.open(\"admin\", \"admin\");\r\n      doc = database.load(rid);\r\n      doc.setLazyLoad(false);\r\n      doc.reload(\"*:0\");\r\n      database.close();\r\n      String jsonLoaded = doc.toJSON();\r\n      Assert.assertEquals(jsonLoaded, jsonFull);\r\n      database.open(\"admin\", \"admin\");\r\n      doc = database.load(rid);\r\n      doc.setLazyLoad(false);\r\n      doc.load(\"*:0\");\r\n      database.close();\r\n      jsonLoaded = doc.toJSON();\r\n\r\n      Assert.assertEquals(jsonLoaded, jsonFull);\r\n    }\r\n\r\n    database.open(\"admin\", \"admin\");\r\n\r\n    for (ODocument doc : result) {\r\n      doc.reload(\"*:1\");\r\n      String jsonFull = doc.toJSON();\r\n      ORID rid = doc.getIdentity();\r\n      database.close();\r\n      database.open(\"admin\", \"admin\");\r\n      doc = database.load(rid);\r\n      doc.setLazyLoad(false);\r\n      doc.reload(\"*:1\");\r\n      database.close();\r\n      String jsonLoaded = doc.toJSON();\r\n      Assert.assertEquals(jsonFull, jsonLoaded);\r\n      database.open(\"admin\", \"admin\");\r\n      doc = database.load(rid);\r\n      doc.setLazyLoad(false);\r\n      doc.load(\"*:1\");\r\n      database.close();\r\n      jsonLoaded = doc.toJSON();\r\n\r\n      Assert.assertEquals(jsonFull, jsonLoaded);\r\n    }\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Parameters(value = \"url\")\r\n  public JSONTest(@Optional final String iURL) {\r\n    super(iURL);\r\n  }","id":27313,"modified_method":"@Parameters(value = \"url\")\r\n  public JSONTest(final String iURL) {\r\n    url = iURL;\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void testSpecialChar() {\r\n    ODocument doc = new ODocument().fromJSON(\"{name:{\\\"%Field\\\":[\\\"value1\\\",\\\"value2\\\"],\\\"%Field2\\\":{},\\\"%Field3\\\":\\\"value3\\\"}}\");\r\n    doc.save();\r\n\r\n    ODocument doc2 = database.load(doc.getIdentity());\r\n    Assert.assertEquals(doc, doc2);\r\n  }","id":27314,"modified_method":"public void testSpecialChar() {\r\n    ODatabaseDocumentTx database = new ODatabaseDocumentTx(url);\r\n    database.open(\"admin\", \"admin\");\r\n\r\n    ODocument doc = new ODocument().fromJSON(\"{name:{\\\"%Field\\\":[\\\"value1\\\",\\\"value2\\\"],\\\"%Field2\\\":{},\\\"%Field3\\\":\\\"value3\\\"}}\");\r\n    doc.save();\r\n\r\n    ODocument doc2 = database.load(doc.getIdentity());\r\n    Assert.assertEquals(doc, doc2);\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void testArrayOfArray() {\r\n    ODocument newDoc = new ODocument();\r\n\r\n    newDoc\r\n        .fromJSON(\"{\\\"@type\\\": \\\"d\\\",\\\"@class\\\": \\\"Track\\\",\\\"type\\\": \\\"LineString\\\",\\\"coordinates\\\": [ [ 100,  0 ],  [ 101, 1 ] ]}\");\r\n\r\n    newDoc.save();\r\n\r\n    ODocument loadedDoc = database.load(newDoc.getIdentity());\r\n\r\n    Assert.assertTrue(newDoc.hasSameContentOf(loadedDoc));\r\n  }","id":27315,"modified_method":"public void testArrayOfArray() {\r\n    ODatabaseDocumentTx database = new ODatabaseDocumentTx(url);\r\n    database.open(\"admin\", \"admin\");\r\n\r\n    ODocument newDoc = new ODocument();\r\n\r\n    newDoc\r\n        .fromJSON(\"{\\\"@type\\\": \\\"d\\\",\\\"@class\\\": \\\"Track\\\",\\\"type\\\": \\\"LineString\\\",\\\"coordinates\\\": [ [ 100,  0 ],  [ 101, 1 ] ]}\");\r\n\r\n    newDoc.save();\r\n\r\n    ODocument loadedDoc = database.load(newDoc.getIdentity());\r\n\r\n    Assert.assertTrue(newDoc.hasSameContentOf(loadedDoc));\r\n    database.close();\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test\r\n  public void shouldDeserializeFieldWithCurlyBraces() {\r\n    String json = \"{\\\"a\\\":\\\"{dd}\\\",\\\"bl\\\":{\\\"b\\\":\\\"c\\\",\\\"a\\\":\\\"d\\\"}}\";\r\n    ODocument in = (ODocument) ORecordSerializerJSON.INSTANCE.fromString(json, database.newInstance(), new String[] {});\r\n\r\n    Assert.assertEquals(in.field(\"a\"), \"{dd}\");\r\n    Assert.assertTrue(in.field(\"bl\") instanceof Map);\r\n  }","id":27316,"modified_method":"@Test\r\n  public void shouldDeserializeFieldWithCurlyBraces() {\r\n    ODatabaseDocumentTx tx = new ODatabaseDocumentTx(\"memory:testshouldDeserializeFieldWithCurlyBraces\").create();\r\n\r\n    String json = \"{\\\"a\\\":\\\"{dd}\\\",\\\"bl\\\":{\\\"b\\\":\\\"c\\\",\\\"a\\\":\\\"d\\\"}}\";\r\n    ODocument in = (ODocument) ORecordSerializerJSON.INSTANCE.fromString(json, tx.newInstance(), new String[] {});\r\n\r\n    Assert.assertEquals(in.field(\"a\"), \"{dd}\");\r\n    Assert.assertTrue(in.field(\"bl\") instanceof Map);\r\n\r\n    tx.drop();\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void testNestedJsonCollection() {\r\n    if (!database.getMetadata().getSchema().existsClass(\"Device\"))\r\n      database.getMetadata().getSchema().createClass(\"Device\");\r\n\r\n    database.command(\r\n        new OCommandSQL(\"insert into device (resource_id, domainset) VALUES (0, [ { 'domain' : 'abc' }, { 'domain' : 'pqr' } ])\"))\r\n        .execute();\r\n\r\n    List<ODocument> result = database.query(new OSQLSynchQuery<Object>(\"select from device where domainset.domain in 'abc'\"));\r\n    Assert.assertTrue(result.size() > 0);\r\n\r\n    result = database.query(new OSQLSynchQuery<Object>(\"select from device where domainset[domain = 'abc'] is not null\"));\r\n    Assert.assertTrue(result.size() > 0);\r\n\r\n    result = database.query(new OSQLSynchQuery<Object>(\"select from device where domainset.domain in 'pqr'\"));\r\n    Assert.assertTrue(result.size() > 0);\r\n  }","id":27317,"modified_method":"public void testNestedJsonCollection() {\r\n    ODatabaseDocumentTx database = new ODatabaseDocumentTx(url);\r\n    database.open(\"admin\", \"admin\");\r\n\r\n    try {\r\n      if (!database.getMetadata().getSchema().existsClass(\"Device\"))\r\n        database.getMetadata().getSchema().createClass(\"Device\");\r\n\r\n      database\r\n          .command(\r\n              new OCommandSQL(\r\n                  \"insert into device (resource_id, domainset) VALUES (0, [ { 'domain' : 'abc' }, { 'domain' : 'pqr' } ])\"))\r\n          .execute();\r\n\r\n      List<ODocument> result = database.query(new OSQLSynchQuery<Object>(\"select from device where domainset.domain in 'abc'\"));\r\n      Assert.assertTrue(result.size() > 0);\r\n\r\n      result = database.query(new OSQLSynchQuery<Object>(\"select from device where domainset[domain = 'abc'] is not null\"));\r\n      Assert.assertTrue(result.size() > 0);\r\n\r\n      result = database.query(new OSQLSynchQuery<Object>(\"select from device where domainset.domain in 'pqr'\"));\r\n      Assert.assertTrue(result.size() > 0);\r\n\r\n    } finally {\r\n      database.close();\r\n    }\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void testSpecialChars() {\r\n    ODocument doc = new ODocument()\r\n        .fromJSON(\"{Field:{\\\"Key1\\\":[\\\"Value1\\\",\\\"Value2\\\"],\\\"Key2\\\":{\\\"%%dummy%%\\\":null},\\\"Key3\\\":\\\"Value3\\\"}}\");\r\n    doc.save();\r\n\r\n    ODocument doc2 = database.load(doc.getIdentity());\r\n    Assert.assertEquals(doc, doc2);\r\n  }","id":27318,"modified_method":"public void testSpecialChars() {\r\n    ODatabaseDocumentTx database = new ODatabaseDocumentTx(url);\r\n    database.open(\"admin\", \"admin\");\r\n\r\n    ODocument doc = new ODocument()\r\n        .fromJSON(\"{Field:{\\\"Key1\\\":[\\\"Value1\\\",\\\"Value2\\\"],\\\"Key2\\\":{\\\"%%dummy%%\\\":null},\\\"Key3\\\":\\\"Value3\\\"}}\");\r\n    doc.save();\r\n\r\n    ODocument doc2 = database.load(doc.getIdentity());\r\n    Assert.assertEquals(doc, doc2);\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test\r\n  public void testFetchedJson() {\r\n    OObjectDatabaseTx database = new OObjectDatabaseTx(url);\r\n    database.open(\"admin\", \"admin\");\r\n    try {\r\n      database.getEntityManager().registerEntityClasses(\"com.orientechnologies.orient.test.domain.business\");\r\n      database.getEntityManager().registerEntityClasses(\"com.orientechnologies.orient.test.domain.whiz\");\r\n      database.getEntityManager().registerEntityClasses(\"com.orientechnologies.orient.test.domain.base\");\r\n\r\n      List<ODocument> result = database.getUnderlying()\r\n          .command(new OSQLSynchQuery<ODocument>(\"select * from Profile where name = 'Barack' and surname = 'Obama'\")).execute();\r\n\r\n      for (ODocument doc : result) {\r\n        String jsonFull = doc.toJSON(\"type,rid,version,class,keepTypes,attribSameRow,indent:0,fetchPlan:*:-1\");\r\n        ODocument loadedDoc = new ODocument().fromJSON(jsonFull);\r\n\r\n        Assert.assertTrue(doc.hasSameContentOf(loadedDoc));\r\n      }\r\n    } finally {\r\n      database.close();\r\n    }\r\n  }","id":27319,"modified_method":"@Test\r\n  public void testFetchedJson() {\r\n    OObjectDatabaseTx database = new OObjectDatabaseTx(url);\r\n    database.open(\"admin\", \"admin\");\r\n    database.getEntityManager().registerEntityClasses(\"com.orientechnologies.orient.test.domain.business\");\r\n    database.getEntityManager().registerEntityClasses(\"com.orientechnologies.orient.test.domain.whiz\");\r\n    database.getEntityManager().registerEntityClasses(\"com.orientechnologies.orient.test.domain.base\");\r\n\r\n    List<ODocument> result = database.getUnderlying()\r\n        .command(new OSQLSynchQuery<ODocument>(\"select * from Profile where name = 'Barack' and surname = 'Obama'\")).execute();\r\n\r\n    for (ODocument doc : result) {\r\n      String jsonFull = doc.toJSON(\"type,rid,version,class,keepTypes,attribSameRow,indent:0,fetchPlan:*:-1\");\r\n      ODocument loadedDoc = new ODocument().fromJSON(jsonFull);\r\n\r\n      Assert.assertTrue(doc.hasSameContentOf(loadedDoc));\r\n    }\r\n  }","commit_id":"5af01a5526e094a8902db832362ee7f3434fe35f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public OSerializableStream fromStream(final byte[] iStream) throws IOException {\r\n\t\tfinal long timer = OProfiler.getInstance().startChrono();\r\n\t\ttry {\r\n\t\t\tOMemoryInputStream stream = new OMemoryInputStream(iStream);\r\n\r\n\t\t\tORID rootRid = new ORecordId().fromStream(stream.getAsByteArray());\r\n\r\n\t\t\tsize = stream.getAsInteger();\r\n\t\t\tlastPageSize = stream.getAsShort();\r\n\r\n\t\t\tserializerFromStream(stream);\r\n\r\n\t\t\t// LOAD THE ROOT OBJECT AFTER ALL\r\n\t\t\tif (rootRid.isValid())\r\n\t\t\t\troot = createEntry(null, rootRid);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t} catch (Exception e) {\r\n\r\n\t\t\tOLogManager.instance().error(this, \"Error on unmarshalling OTreeMapPersistent object\", e, OSerializationException.class);\r\n\r\n\t\t} finally {\r\n\t\t\tOProfiler.getInstance().stopChrono(\"OTreeMapPersistent.fromStream\", timer);\r\n\t\t}\r\n\t\treturn this;\r\n\t}","id":27320,"modified_method":"public OSerializableStream fromStream(final byte[] iStream) throws IOException {\r\n\t\tfinal long timer = OProfiler.getInstance().startChrono();\r\n\r\n\t\tfinal ORID rootRid = new ORecordId();\r\n\r\n\t\ttry {\r\n\t\t\tfinal OMemoryInputStream stream = new OMemoryInputStream(iStream);\r\n\r\n\t\t\trootRid.fromStream(stream.getAsByteArray());\r\n\r\n\t\t\tsize = stream.getAsInteger();\r\n\t\t\tlastPageSize = stream.getAsShort();\r\n\r\n\t\t\tserializerFromStream(stream);\r\n\r\n\t\t\t// LOAD THE ROOT OBJECT AFTER ALL\r\n\t\t\tif (rootRid.isValid())\r\n\t\t\t\troot = createEntry(null, rootRid);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t} catch (Exception e) {\r\n\r\n\t\t\tOLogManager.instance().error(this, \"Error on unmarshalling OTreeMapPersistent object from record: \" + rootRid, e,\r\n\t\t\t\t\tOSerializationException.class);\r\n\r\n\t\t} finally {\r\n\t\t\tOProfiler.getInstance().stopChrono(\"OTreeMapPersistent.fromStream\", timer);\r\n\t\t}\r\n\t\treturn this;\r\n\t}","commit_id":"acbc475cd42ffabf180561bd39361d01b8c3dad3","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void increment(byte [] key, long amount) {\n    Count count = this.countermap.get(key);\n    if (count == null) {\n      count = new Count();\n      this.countermap.put(key, count);\n    }\n    count.count += amount;\n  }","id":27321,"modified_method":"public long increment(byte [] key, long amount) {\n    Count count = this.countermap.get(key);\n    if (count == null) {\n      count = new Count();\n      this.countermap.put(key, count);\n    }\n    count.count += amount;\n    return count.count;\n  }","commit_id":"a32bccf77e8c99ff0656ec6fa8099bd135bd91a0","url":"https://github.com/caskdata/cdap"},{"original_method":"public void increment(byte [] key, long amount) {\n    this.engine.increment(generateRandomOrderKey(key), amount);\n  }","id":27322,"modified_method":"public long increment(byte [] key, long amount) {\n    return this.engine.increment(generateRandomOrderKey(key), amount);\n  }","commit_id":"a32bccf77e8c99ff0656ec6fa8099bd135bd91a0","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean execute(Increment inc) {\n    this.executor.increment(inc.getKey(), inc.getAmount());\n    return true;\n  }","id":27323,"modified_method":"@Override\n  public boolean execute(Increment inc) {\n    long result = this.executor.increment(inc.getKey(), inc.getAmount());\n    inc.setResult(result);\n    OperationGenerator<Long> generator =\n        inc.getPostIncrementOperationGenerator();\n    if (generator != null) {\n      WriteOperation writeOperation = generator.generateWriteOperation(result);\n      if (writeOperation != null) {\n        return execute(writeOperation);\n      }\n    }\n    return true;\n  }","commit_id":"a32bccf77e8c99ff0656ec6fa8099bd135bd91a0","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public byte [] execute(Read read) throws SyncReadTimeoutException {\n    return this.executor.readRandom(read.getKey());\n  }","id":27324,"modified_method":"@Override\n  public byte [] execute(Read read) throws SyncReadTimeoutException {\n    byte [] result = this.executor.readRandom(read.getKey());\n    read.setResult(result);\n    return result;\n  }","commit_id":"a32bccf77e8c99ff0656ec6fa8099bd135bd91a0","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean execute(List<WriteOperation> writes) {\n    for (WriteOperation write : writes) {\n      if (write instanceof Write) {\n        if (!execute((Write)write)) return false;\n      } else if (write instanceof OrderedWrite) {\n        if (!execute((OrderedWrite)write)) return false;\n      } else if (write instanceof ReadModifyWrite) {\n        if (!execute((ReadModifyWrite)write)) return false;\n      } else if (write instanceof QueuePush) {\n        if (!execute((QueuePush)write)) return false;\n      } else if (write instanceof Increment) {\n        if (!execute((Increment)write)) return false;\n      } else if (write instanceof CompareAndSwap) {\n        if (!execute((CompareAndSwap)write)) return false;\n      }\n    }\n    return true;\n  }","id":27325,"modified_method":"@Override\n  public boolean execute(List<WriteOperation> writes) {\n    for (WriteOperation write : writes) {\n      if(!execute(write)) return false;\n    }\n    return true;\n  }","commit_id":"a32bccf77e8c99ff0656ec6fa8099bd135bd91a0","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Map<byte[], byte[]> execute(OrderedRead orderedRead) throws SyncReadTimeoutException {\n    if (orderedRead.getEndKey() == null) {\n      if (orderedRead.getLimit() <= 1) {\n        return this.executor.readOrdered(orderedRead.getStartKey());\n      } else {\n        return this.executor.readOrdered(orderedRead.getStartKey(),\n            orderedRead.getLimit());\n      }\n    } else {\n      return this.executor.readOrdered(orderedRead.getStartKey(),\n          orderedRead.getEndKey());\n    }\n  }","id":27326,"modified_method":"@Override\n  public Map<byte[], byte[]> execute(OrderedRead orderedRead) throws SyncReadTimeoutException {\n    Map<byte[], byte[]> result = null;\n    if (orderedRead.getEndKey() == null) {\n      if (orderedRead.getLimit() <= 1) {\n        result = this.executor.readOrdered(orderedRead.getStartKey());\n      } else {\n        result = this.executor.readOrdered(orderedRead.getStartKey(),\n            orderedRead.getLimit());\n      }\n    } else {\n      result = this.executor.readOrdered(orderedRead.getStartKey(),\n          orderedRead.getEndKey());\n    }\n    orderedRead.setResult(result);\n    return result;\n  }","commit_id":"a32bccf77e8c99ff0656ec6fa8099bd135bd91a0","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public long execute(ReadCounter readCounter)\n  throws SyncReadTimeoutException {\n    return this.executor.readCounter(readCounter.getKey());\n  }","id":27327,"modified_method":"@Override\n  public long execute(ReadCounter readCounter)\n  throws SyncReadTimeoutException {\n    long result = this.executor.readCounter(readCounter.getKey());\n    readCounter.setResult(result);\n    return result;\n  }","commit_id":"a32bccf77e8c99ff0656ec6fa8099bd135bd91a0","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public byte [] execute(QueuePop pop) throws SyncReadTimeoutException {\n    return this.executor.queuePop(pop.getQueueName());\n  }","id":27328,"modified_method":"@Override\n  public byte [] execute(QueuePop pop) throws SyncReadTimeoutException {\n    byte [] result = this.executor.queuePop(pop.getQueueName());\n    pop.setResult(result);\n    return result;\n  }","commit_id":"a32bccf77e8c99ff0656ec6fa8099bd135bd91a0","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public byte[] getResult() {\n    // TODO Auto-generated method stub\n    return null;\n  }","id":27329,"modified_method":"@Override\n  public Map<byte[], byte[]> getResult() {\n    return this.result;\n  }","commit_id":"a32bccf77e8c99ff0656ec6fa8099bd135bd91a0","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public byte[] getResult() {\n    // TODO Auto-generated method stub\n    return null;\n  }","id":27330,"modified_method":"@Override\n  public byte[] getResult() {\n    return this.result;\n  }","commit_id":"a32bccf77e8c99ff0656ec6fa8099bd135bd91a0","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void invoke(@NotNull final Project project, final Editor editor, PsiFile file) throws IncorrectOperationException {\n    final int offset = editor.getCaretModel().getOffset();\n    final Pair<PsiElement, TextRange> pair = getRangePair(file, editor);\n    assert pair != null;\n    final PsiFile injectedFile = (PsiFile)pair.first;\n    final int injectedOffset = ((DocumentWindow)PsiDocumentManager.getInstance(project).getDocument(injectedFile)).hostToInjected(offset);\n    QuickEditHandler handler = getHandler(project, injectedFile, editor, file);\n    if (!ApplicationManager.getApplication().isUnitTestMode()) {\n      handler.navigate(injectedOffset);\n    }\n  }","id":27331,"modified_method":"@Override\n  public void invoke(@NotNull final Project project, final Editor editor, PsiFile file) throws IncorrectOperationException {\n    invokeImpl(project, editor, file);\n  }","commit_id":"8feadb172788481103fe22c84875dfbaf531cb98","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private QuickEditHandler getHandler(Project project, PsiFile injectedFile, Editor editor, PsiFile origFile) {\n    QuickEditHandler handler = injectedFile.getUserData(QUICK_EDIT_HANDLER);\n    if (handler != null && handler.isValid()) {\n      return handler;\n    }\n    handler = new QuickEditHandler(project, injectedFile, origFile, editor, this);\n    injectedFile.putUserData(QUICK_EDIT_HANDLER, handler);\n    return handler;\n  }","id":27332,"modified_method":"@NotNull\n  private QuickEditHandler getHandler(Project project, PsiFile injectedFile, Editor editor, PsiFile origFile) {\n    QuickEditHandler handler = getExistingHandler(injectedFile);\n    if (handler != null && handler.isValid()) {\n      return handler;\n    }\n    handler = new QuickEditHandler(project, injectedFile, origFile, editor, this);\n    if (ApplicationManager.getApplication().isUnitTestMode()) {\n      // todo remove and hide QUICK_EDIT_HANDLER\n      injectedFile.putUserData(QUICK_EDIT_HANDLER, handler);\n    }\n    return handler;\n  }","commit_id":"8feadb172788481103fe22c84875dfbaf531cb98","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void initMarkers(final Place shreds) {\n    final SmartPointerManager smartPointerManager = SmartPointerManager.getInstance(myProject);\n    for (PsiLanguageInjectionHost.Shred shred : shreds) {\n      final RangeMarker rangeMarker = myNewDocument.createRangeMarker(\n        shred.getRange().getStartOffset() + shred.getPrefix().length(),\n        shred.getRange().getEndOffset() - shred.getSuffix().length());\n      final TextRange rangeInsideHost = shred.getRangeInsideHost();\n      final RangeMarker origMarker =\n        myOrigDocument.createRangeMarker(rangeInsideHost.shiftRight(shred.getHost().getTextRange().getStartOffset()));\n      SmartPsiElementPointer<PsiLanguageInjectionHost> elementPointer = smartPointerManager.createSmartPsiElementPointer(shred.getHost());\n      myMarkers.add(Trinity.<RangeMarker, RangeMarker, SmartPsiElementPointer>create(origMarker, rangeMarker, elementPointer));\n    }\n    for (Trinity<RangeMarker, RangeMarker, SmartPsiElementPointer> markers : myMarkers) {\n      markers.first.setGreedyToLeft(true);\n      markers.second.setGreedyToLeft(true);\n      markers.first.setGreedyToRight(true);\n      markers.second.setGreedyToRight(true);\n    }\n    int curOffset = 0;\n    for (Trinity<RangeMarker, RangeMarker, SmartPsiElementPointer> markerPair : myMarkers) {\n      final RangeMarker marker = markerPair.second;\n      final int start = marker.getStartOffset();\n      final int end = marker.getEndOffset();\n      if (curOffset < start) {\n        final RangeMarker rangeMarker = myNewDocument.createGuardedBlock(curOffset, start);\n        if (curOffset == 0) rangeMarker.setGreedyToLeft(true);\n      }\n      curOffset = end;\n    }\n    if (curOffset < myNewDocument.getTextLength()) {\n      final RangeMarker rangeMarker = myNewDocument.createGuardedBlock(curOffset, myNewDocument.getTextLength());\n      rangeMarker.setGreedyToRight(true);\n    }\n  }","id":27333,"modified_method":"public void initMarkers(Place shreds) {\n    SmartPointerManager smartPointerManager = SmartPointerManager.getInstance(myProject);\n    for (PsiLanguageInjectionHost.Shred shred : shreds) {\n      final RangeMarker rangeMarker = myNewDocument.createRangeMarker(\n        shred.getRange().getStartOffset() + shred.getPrefix().length(),\n        shred.getRange().getEndOffset() - shred.getSuffix().length());\n      final TextRange rangeInsideHost = shred.getRangeInsideHost();\n      PsiLanguageInjectionHost host = shred.getHost();\n      // todo fixme: char literal update will throw exceptions\n      boolean oneCharOnly = host.getText().startsWith(\"'\") && \"JAVA\".equals(host.getLanguage().getID());\n      RangeMarker origMarker = myOrigDocument.createRangeMarker(rangeInsideHost.shiftRight(host.getTextRange().getStartOffset()));\n      SmartPsiElementPointer<PsiLanguageInjectionHost> elementPointer = smartPointerManager.createSmartPsiElementPointer(host);\n      Trinity<RangeMarker, RangeMarker, SmartPsiElementPointer> markers =\n        Trinity.<RangeMarker, RangeMarker, SmartPsiElementPointer>create(origMarker, rangeMarker, elementPointer);\n      myMarkers.add(markers);\n      markers.first.setGreedyToRight(true);\n      markers.second.setGreedyToRight(true);\n      markers.first.setGreedyToLeft(true);\n      markers.second.setGreedyToLeft(true);\n    }\n    initGuardedBlocks(shreds);\n  }","commit_id":"8feadb172788481103fe22c84875dfbaf531cb98","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void commitToOriginal() {\n    if (!isValid()) return;\n    final PsiFile origFile = (PsiFile)myNewFile.getUserData(FileContextUtil.INJECTED_IN_ELEMENT).getElement();\n    VirtualFile origFileVirtualFile = origFile != null? origFile.getVirtualFile() : null;\n    myCommittingToOriginal = true;\n    try {\n      if (origFileVirtualFile == null || !ReadonlyStatusHandler.getInstance(myProject).ensureFilesWritable(origFileVirtualFile).hasReadonlyFiles()) {\n        PostprocessReformattingAspect.getInstance(myProject).disablePostprocessFormattingInside(new Runnable() {\n          @Override\n          public void run() {\n            commitToOriginalInner();\n          }\n        });\n      }\n    }\n    finally {\n      myCommittingToOriginal = false;\n    }\n  }","id":27334,"modified_method":"private void commitToOriginal() {\n    if (!isValid()) return;\n    final PsiFile origFile = (PsiFile)myNewFile.getUserData(FileContextUtil.INJECTED_IN_ELEMENT).getElement();\n    VirtualFile origFileVirtualFile = origFile != null? origFile.getVirtualFile() : null;\n    myCommittingToOriginal = true;\n    try {\n      if (origFileVirtualFile == null || !ReadonlyStatusHandler.getInstance(myProject).ensureFilesWritable(origFileVirtualFile).hasReadonlyFiles()) {\n        PostprocessReformattingAspect.getInstance(myProject).disablePostprocessFormattingInside(new Runnable() {\n          @Override\n          public void run() {\n            if (myAltFullRange != null) {\n              altCommitToOriginal();\n              return;\n            }\n            commitToOriginalInner();\n          }\n        });\n      }\n    }\n    finally {\n      myCommittingToOriginal = false;\n    }\n  }","commit_id":"8feadb172788481103fe22c84875dfbaf531cb98","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"QuickEditHandler(Project project, PsiFile injectedFile, final PsiFile origFile, Editor editor, QuickEditAction action) {\n    myProject = project;\n    myInjectedFile = injectedFile;\n    myEditor = editor;\n    myAction = action;\n    myOrigDocument = editor.getDocument();\n    final Place shreds = InjectedLanguageUtil.getShreds(myInjectedFile);\n    final FileType fileType = injectedFile.getFileType();\n    final Language language = injectedFile.getLanguage();\n\n    final PsiFileFactory factory = PsiFileFactory.getInstance(project);\n    final String text = InjectedLanguageManager.getInstance(project).getUnescapedText(injectedFile);\n    final String newFileName =\n      StringUtil.notNullize(language.getDisplayName(), \"Injected\") + \" Fragment \" + \"(\" +\n      origFile.getName() + \":\" + shreds.get(0).getHost().getTextRange().getStartOffset() + \")\" + \".\" + fileType.getDefaultExtension();\n    myNewFile = factory.createFileFromText(newFileName, language, text, true, true);\n    myNewVirtualFile = (LightVirtualFile)myNewFile.getVirtualFile();\n    assert myNewVirtualFile != null;\n    final SmartPointerManager smartPointerManager = SmartPointerManager.getInstance(project);\n    myNewFile.putUserData(FileContextUtil.INJECTED_IN_ELEMENT, smartPointerManager.createSmartPsiElementPointer(origFile));\n    myNewDocument = PsiDocumentManager.getInstance(project).getDocument(myNewFile);\n    assert myNewDocument != null;\n    EditorActionManager.getInstance().setReadonlyFragmentModificationHandler(myNewDocument, new ReadonlyFragmentModificationHandler() {\n      @Override\n      public void handle(final ReadOnlyFragmentModificationException e) {\n        //nothing\n      }\n    });\n    myOrigCreationStamp = myOrigDocument.getModificationStamp(); // store creation stamp for UNDO tracking\n    myOrigDocument.addDocumentListener(this, this);\n    myNewDocument.addDocumentListener(this, this);\n    EditorFactory editorFactory = ObjectUtils.assertNotNull(EditorFactory.getInstance());\n    // not FileEditorManager listener because of RegExp checker and alike\n    editorFactory.addEditorFactoryListener(new EditorFactoryAdapter() {\n\n      int myEditorCount;\n\n      @Override\n      public void editorCreated(@NotNull EditorFactoryEvent event) {\n        if (event.getEditor().getDocument() != myNewDocument) return;\n        myEditorCount ++;\n        final EditorActionHandler editorEscape = EditorActionManager.getInstance().getActionHandler(IdeActions.ACTION_EDITOR_ESCAPE);\n        new AnAction() {\n          @Override\n          public void update(AnActionEvent e) {\n            Editor editor = PlatformDataKeys.EDITOR.getData(e.getDataContext());\n            e.getPresentation().setEnabled(\n              editor != null && LookupManager.getActiveLookup(editor) == null &&\n              TemplateManager.getInstance(myProject).getActiveTemplate(editor) == null &&\n              (editorEscape == null || !editorEscape.isEnabled(editor, e.getDataContext())));\n          }\n\n          @Override\n          public void actionPerformed(AnActionEvent e) {\n            closeEditor();\n          }\n        }.registerCustomShortcutSet(CommonShortcuts.ESCAPE, event.getEditor().getContentComponent());\n      }\n\n      @Override\n      public void editorReleased(@NotNull EditorFactoryEvent event) {\n        if (event.getEditor().getDocument() != myNewDocument) return;\n        if (-- myEditorCount > 0) return;\n        Disposer.dispose(QuickEditHandler.this);\n        myInjectedFile.putUserData(QuickEditAction.QUICK_EDIT_HANDLER, null);\n      }\n    }, this);\n    initMarkers(shreds);\n  }","id":27335,"modified_method":"QuickEditHandler(Project project, PsiFile injectedFile, final PsiFile origFile, Editor editor, QuickEditAction action) {\n    myProject = project;\n    myEditor = editor;\n    myAction = action;\n    myOrigDocument = editor.getDocument();\n    final Place shreds = InjectedLanguageUtil.getShreds(injectedFile);\n    final FileType fileType = injectedFile.getFileType();\n    final Language language = injectedFile.getLanguage();\n\n    final PsiFileFactory factory = PsiFileFactory.getInstance(project);\n    final String text = InjectedLanguageManager.getInstance(project).getUnescapedText(injectedFile);\n    final String newFileName =\n      StringUtil.notNullize(language.getDisplayName(), \"Injected\") + \" Fragment \" + \"(\" +\n      origFile.getName() + \":\" + shreds.get(0).getHost().getTextRange().getStartOffset() + \")\" + \".\" + fileType.getDefaultExtension();\n    myNewFile = factory.createFileFromText(newFileName, language, text, true, true);\n    myNewVirtualFile = (LightVirtualFile)myNewFile.getVirtualFile();\n    assert myNewVirtualFile != null;\n    // suppress possible errors as in injected mode\n    myNewFile.putUserData(InjectedLanguageUtil.FRANKENSTEIN_INJECTION,\n                          injectedFile.getUserData(InjectedLanguageUtil.FRANKENSTEIN_INJECTION));\n    final SmartPointerManager smartPointerManager = SmartPointerManager.getInstance(project);\n    myNewFile.putUserData(FileContextUtil.INJECTED_IN_ELEMENT, smartPointerManager.createSmartPsiElementPointer(origFile));\n    myNewDocument = PsiDocumentManager.getInstance(project).getDocument(myNewFile);\n    assert myNewDocument != null;\n    EditorActionManager.getInstance().setReadonlyFragmentModificationHandler(myNewDocument, new MyQuietHandler());\n    myOrigCreationStamp = myOrigDocument.getModificationStamp(); // store creation stamp for UNDO tracking\n    myOrigDocument.addDocumentListener(this, this);\n    myNewDocument.addDocumentListener(this, this);\n    EditorFactory editorFactory = ObjectUtils.assertNotNull(EditorFactory.getInstance());\n    // not FileEditorManager listener because of RegExp checker and alike\n    editorFactory.addEditorFactoryListener(new EditorFactoryAdapter() {\n\n      int myEditorCount;\n\n      @Override\n      public void editorCreated(@NotNull EditorFactoryEvent event) {\n        if (event.getEditor().getDocument() != myNewDocument) return;\n        myEditorCount ++;\n        final EditorActionHandler editorEscape = EditorActionManager.getInstance().getActionHandler(IdeActions.ACTION_EDITOR_ESCAPE);\n        new AnAction() {\n          @Override\n          public void update(AnActionEvent e) {\n            Editor editor = PlatformDataKeys.EDITOR.getData(e.getDataContext());\n            e.getPresentation().setEnabled(\n              editor != null && LookupManager.getActiveLookup(editor) == null &&\n              TemplateManager.getInstance(myProject).getActiveTemplate(editor) == null &&\n              (editorEscape == null || !editorEscape.isEnabled(editor, e.getDataContext())));\n          }\n\n          @Override\n          public void actionPerformed(AnActionEvent e) {\n            closeEditor();\n          }\n        }.registerCustomShortcutSet(CommonShortcuts.ESCAPE, event.getEditor().getContentComponent());\n      }\n\n      @Override\n      public void editorReleased(@NotNull EditorFactoryEvent event) {\n        if (event.getEditor().getDocument() != myNewDocument) return;\n        if (-- myEditorCount > 0) return;\n        Disposer.dispose(QuickEditHandler.this);\n      }\n    }, this);\n\n    if (\"JAVA\".equals(shreds.get(0).getHost().getLanguage().getID())) {\n      myAltFullRange = myOrigDocument.createRangeMarker(\n        shreds.get(0).getHostRangeMarker().getStartOffset(),\n        shreds.get(shreds.size() - 1).getHostRangeMarker().getEndOffset());\n      myAltFullRange.setGreedyToLeft(true);\n      myAltFullRange.setGreedyToRight(true);\n\n      initGuardedBlocks(shreds);\n      myInjectedFile = null;\n    }\n    else {\n      initMarkers(shreds);\n      myAltFullRange = null;\n      myInjectedFile = injectedFile;\n    }\n  }","commit_id":"8feadb172788481103fe22c84875dfbaf531cb98","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isValid() {\n    return myNewVirtualFile.isValid() && myInjectedFile.isValid();\n  }","id":27336,"modified_method":"public boolean isValid() {\n    return myNewVirtualFile.isValid() && (myAltFullRange == null && myInjectedFile.isValid() || myAltFullRange.isValid());\n  }","commit_id":"8feadb172788481103fe22c84875dfbaf531cb98","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void documentChanged(DocumentEvent e) {\n    UndoManager undoManager = UndoManager.getInstance(myProject);\n    boolean undoOrRedo = undoManager.isUndoInProgress() || undoManager.isRedoInProgress();\n    if (undoOrRedo) {\n      // allow undo/redo up until 'creation stamp' back in time\n      // and check it after action is completed\n      if (e.getDocument() == myOrigDocument) {\n        //noinspection SSBasedInspection\n        SwingUtilities.invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            if (myOrigCreationStamp > myOrigDocument.getModificationStamp()) {\n              closeEditor();\n            }\n          }\n        });\n      }\n    }\n    else if (e.getDocument() == myNewDocument) {\n      commitToOriginal();\n    }\n    else if (e.getDocument() == myOrigDocument) {\n      if (myCommittingToOriginal) return;\n      closeEditor();\n    }\n  }","id":27337,"modified_method":"@Override\n  public void documentChanged(DocumentEvent e) {\n    UndoManager undoManager = UndoManager.getInstance(myProject);\n    boolean undoOrRedo = undoManager.isUndoInProgress() || undoManager.isRedoInProgress();\n    if (undoOrRedo) {\n      // allow undo/redo up until 'creation stamp' back in time\n      // and check it after action is completed\n      if (e.getDocument() == myOrigDocument) {\n        //noinspection SSBasedInspection\n        SwingUtilities.invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            if (myOrigCreationStamp > myOrigDocument.getModificationStamp()) {\n              closeEditor();\n            }\n          }\n        });\n      }\n    }\n    else if (e.getDocument() == myNewDocument) {\n      commitToOriginal();\n    }\n    else if (e.getDocument() == myOrigDocument) {\n      if (myCommittingToOriginal || myAltFullRange != null && myAltFullRange.isValid()) return;\n      closeEditor();\n    }\n  }","commit_id":"8feadb172788481103fe22c84875dfbaf531cb98","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void navigate(int injectedOffset) {\n    if (myAction.isShowInBalloon()) {\n      Ref<Balloon> ref = Ref.create(null);\n      final JComponent component = myAction.createBalloonComponent(myNewFile, ref);\n      if (component != null) {\n        final Balloon balloon = JBPopupFactory.getInstance().createBalloonBuilder(component)\n          .setShadow(true)\n          .setAnimationCycle(0)\n          .setHideOnClickOutside(true)\n          .setHideOnKeyOutside(true)\n          .setHideOnAction(false)\n          .setFillColor(UIUtil.getControlColor())\n          .createBalloon();\n        ref.set(balloon);\n        Disposer.register(myNewFile.getProject(), balloon);\n        final Balloon.Position position = QuickEditAction.getBalloonPosition(myEditor);\n        RelativePoint point = JBPopupFactory.getInstance().guessBestPopupLocation(myEditor);\n        if (position == Balloon.Position.above) {\n          final Point p = point.getPoint();\n          point = new RelativePoint(point.getComponent(), new Point(p.x, p.y - myEditor.getLineHeight()));\n        }\n        balloon.show(point, position);\n      }\n    } else {\n      final FileEditorManagerEx fileEditorManager = FileEditorManagerEx.getInstanceEx(myProject);\n      final FileEditor[] editors = fileEditorManager.getEditors(myNewVirtualFile);\n      if (editors.length == 0) {\n        final EditorWindow curWindow = fileEditorManager.getCurrentWindow();\n        mySplittedWindow = curWindow.split(SwingConstants.HORIZONTAL, false, myNewVirtualFile, true);\n      }\n      fileEditorManager.openTextEditor(new OpenFileDescriptor(myProject, myNewVirtualFile, injectedOffset), true);\n    }\n  }","id":27338,"modified_method":"public void navigate(int injectedOffset) {\n    if (myAction.isShowInBalloon()) {\n      Ref<Balloon> ref = Ref.create(null);\n      final JComponent component = myAction.createBalloonComponent(myNewFile, ref);\n      if (component != null) {\n        final Balloon balloon = JBPopupFactory.getInstance().createBalloonBuilder(component)\n          .setShadow(true)\n          .setAnimationCycle(0)\n          .setHideOnClickOutside(true)\n          .setHideOnKeyOutside(true)\n          .setHideOnAction(false)\n          .setFillColor(UIUtil.getControlColor())\n          .createBalloon();\n        ref.set(balloon);\n        Disposer.register(myNewFile.getProject(), balloon);\n        final Balloon.Position position = QuickEditAction.getBalloonPosition(myEditor);\n        RelativePoint point = JBPopupFactory.getInstance().guessBestPopupLocation(myEditor);\n        if (position == Balloon.Position.above) {\n          final Point p = point.getPoint();\n          point = new RelativePoint(point.getComponent(), new Point(p.x, p.y - myEditor.getLineHeight()));\n        }\n        balloon.show(point, position);\n      }\n    }\n    else {\n      final FileEditorManagerEx fileEditorManager = FileEditorManagerEx.getInstanceEx(myProject);\n      final FileEditor[] editors = fileEditorManager.getEditors(myNewVirtualFile);\n      if (editors.length == 0) {\n        final EditorWindow curWindow = fileEditorManager.getCurrentWindow();\n        mySplittedWindow = curWindow.split(SwingConstants.HORIZONTAL, false, myNewVirtualFile, true);\n      }\n      Editor editor = fileEditorManager.openTextEditor(new OpenFileDescriptor(myProject, myNewVirtualFile, injectedOffset), true);\n      // fold missing values\n      if (editor != null) {\n        editor.putUserData(QuickEditAction.QUICK_EDIT_HANDLER, this);\n        final FoldingModel foldingModel = editor.getFoldingModel();\n        foldingModel.runBatchFoldingOperation(new Runnable() {\n          @Override\n          public void run() {\n            for (RangeMarker o : ContainerUtil.reverse(((DocumentEx)myNewDocument).getGuardedBlocks())) {\n              String replacement = o.getUserData(REPLACEMENT_KEY);\n              FoldRegion region = foldingModel.addFoldRegion(o.getStartOffset(), o.getEndOffset(), replacement);\n              region.setExpanded(false);\n            }\n          }\n        });\n      }\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() {\n          myEditor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);\n        }\n      });\n\n    }\n  }","commit_id":"8feadb172788481103fe22c84875dfbaf531cb98","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void initMarkers(final Place shreds) {\n      final SmartPointerManager smartPointerManager = SmartPointerManager.getInstance(myProject);\n      for (PsiLanguageInjectionHost.Shred shred : shreds) {\n        final RangeMarker rangeMarker = myNewDocument\n          .createRangeMarker(shred.range.getStartOffset() + shred.prefix.length(), shred.range.getEndOffset() - shred.suffix.length());\n        final TextRange rangeInsideHost = shred.getRangeInsideHost();\n        final RangeMarker origMarker =\n          myOrigDocument.createRangeMarker(rangeInsideHost.shiftRight(shred.host.getTextRange().getStartOffset()));\n        myMarkers.put(smartPointerManager.createSmartPsiElementPointer(shred.host), Pair.create(origMarker, rangeMarker));\n      }\n      boolean first = true;\n      for (Pair<RangeMarker, RangeMarker> markers : myMarkers.values()) {\n        if (first) {\n          markers.first.setGreedyToLeft(true);\n          markers.second.setGreedyToLeft(true);\n        }\n        markers.first.setGreedyToRight(true);\n        markers.second.setGreedyToRight(true);\n        first = false;\n      }\n      int curOffset = 0;\n      for (Pair<RangeMarker, RangeMarker> markerPair : myMarkers.values()) {\n        final RangeMarker marker = markerPair.second;\n        final int start = marker.getStartOffset();\n        final int end = marker.getEndOffset();\n        if (curOffset < start) {\n          final RangeMarker rangeMarker = myNewDocument.createGuardedBlock(curOffset, start);\n          if (curOffset == 0) rangeMarker.setGreedyToLeft(true);\n        }\n        curOffset = end;\n      }\n      if (curOffset < myNewDocument.getTextLength()) {\n        final RangeMarker rangeMarker = myNewDocument.createGuardedBlock(curOffset, myNewDocument.getTextLength());\n        rangeMarker.setGreedyToRight(true);\n      }\n    }","id":27339,"modified_method":"public void initMarkers(final Place shreds) {\n      final SmartPointerManager smartPointerManager = SmartPointerManager.getInstance(myProject);\n      for (PsiLanguageInjectionHost.Shred shred : shreds) {\n        final RangeMarker rangeMarker = myNewDocument\n          .createRangeMarker(shred.range.getStartOffset() + shred.prefix.length(), shred.range.getEndOffset() - shred.suffix.length());\n        final TextRange rangeInsideHost = shred.getRangeInsideHost();\n        final RangeMarker origMarker =\n          myOrigDocument.createRangeMarker(rangeInsideHost.shiftRight(shred.host.getTextRange().getStartOffset()));\n        myMarkers.put(smartPointerManager.createSmartPsiElementPointer(shred.host), Pair.create(origMarker, rangeMarker));\n      }\n      boolean first = true;\n      for (Pair<RangeMarker, RangeMarker> markers : myMarkers.values()) {\n        //if (first) {\n          markers.first.setGreedyToLeft(true);\n          markers.second.setGreedyToLeft(true);\n        //}\n        markers.first.setGreedyToRight(true);\n        markers.second.setGreedyToRight(true);\n        first = false;\n      }\n      int curOffset = 0;\n      for (Pair<RangeMarker, RangeMarker> markerPair : myMarkers.values()) {\n        final RangeMarker marker = markerPair.second;\n        final int start = marker.getStartOffset();\n        final int end = marker.getEndOffset();\n        if (curOffset < start) {\n          final RangeMarker rangeMarker = myNewDocument.createGuardedBlock(curOffset, start);\n          if (curOffset == 0) rangeMarker.setGreedyToLeft(true);\n        }\n        curOffset = end;\n      }\n      if (curOffset < myNewDocument.getTextLength()) {\n        final RangeMarker rangeMarker = myNewDocument.createGuardedBlock(curOffset, myNewDocument.getTextLength());\n        rangeMarker.setGreedyToRight(true);\n      }\n    }","commit_id":"7f34352a3ad5aa56126dfda0d2bd6274fc541194","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public <T> T execute(String expression, Map<String, ? extends Object> vars)\n    {\n        return interalExecuteExpression(expression, new MapVariableResolverFactory(vars));\n    }","id":27340,"modified_method":"@Override\n    @SuppressWarnings(\"unchecked\")\n    public <T> T execute(String expression, Map<String, ? extends Object> vars)\n    {\n        return (T) interalExecuteExpression(expression, new MapVariableResolverFactory(vars));\n    }","commit_id":"18beb71135940e5cf6b6fc92747a7901a0ae1b98","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public <T> T execute(String expression, MuleMessage message)\n    {\n        return interalExecuteExpression(expression, new MapVariableResolverFactory(null));\n    }","id":27341,"modified_method":"@Override\n    @SuppressWarnings(\"unchecked\")\n    public <T> T execute(String expression, MuleMessage message)\n    {\n        return (T) interalExecuteExpression(expression, new MapVariableResolverFactory(null));\n    }","commit_id":"18beb71135940e5cf6b6fc92747a7901a0ae1b98","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public <T> T execute(String expression, MuleEvent event)\n    {\n        return execute(expression, event, null);\n    }","id":27342,"modified_method":"@Override\n    @SuppressWarnings(\"unchecked\")\n    public <T> T execute(String expression, MuleEvent event)\n    {\n        return (T) execute(expression, event, null);\n    }","commit_id":"18beb71135940e5cf6b6fc92747a7901a0ae1b98","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public <T> T execute(String expression, MuleEvent event, Map<String, ? extends Object> vars)\n    {\n        return interalExecuteExpression(expression, new MapVariableResolverFactory(vars));\n    }","id":27343,"modified_method":"@Override\n    @SuppressWarnings(\"unchecked\")\n    public <T> T execute(String expression, MuleEvent event, Map<String, ? extends Object> vars)\n    {\n        return (T) interalExecuteExpression(expression, new MapVariableResolverFactory(vars));\n    }","commit_id":"18beb71135940e5cf6b6fc92747a7901a0ae1b98","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public <T> T execute(String expression)\n    {\n        return interalExecuteExpression(expression, new MapVariableResolverFactory(null));\n    }","id":27344,"modified_method":"@Override\n    @SuppressWarnings(\"unchecked\")\n    public <T> T execute(String expression)\n    {\n        return (T) interalExecuteExpression(expression, new MapVariableResolverFactory(null));\n    }","commit_id":"18beb71135940e5cf6b6fc92747a7901a0ae1b98","url":"https://github.com/mulesoft/mule"},{"original_method":"public String getValue( final Key key ) throws AuthException {\n    String value = cache.get( key.getClass( ) );\n    if ( value == null ) {\n      final PolicyKey policyKey = Ats.from( key.getClass( ) ).get( PolicyKey.class );\n      value = policyKey==null ? null : evaluatedKeys.get( policyKey.value() );\n      if ( value == null ) {\n        value = key.value( );\n      }\n      cache.put( key.getClass( ), value );\n    }\n    return value;\n  }","id":27345,"modified_method":"public String getValue( final Key key ) throws AuthException {\n    String value = cache.get( key.name( ) );\n    if ( value == null ) {\n      final PolicyKey policyKey = Ats.from( key.getClass( ) ).get( PolicyKey.class );\n      value = policyKey==null ? null : evaluatedKeys.get( policyKey.value() );\n      if ( value == null ) {\n        value = key.value( );\n      }\n      cache.put( key.name( ), value );\n    }\n    return value;\n  }","commit_id":"89bfc24973862f18eb4191e076fb733f5e91d9c8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static Key getKeyInstance( Class<? extends Key> keyClass ) {\n    try {\n      Key key = keyClass.newInstance( );\n      return key;\n    } catch ( IllegalAccessException e ) {\n      throw new RuntimeException( \"Can not find key class \" + keyClass.getName( ), e );\n    } catch ( InstantiationException e ) {\n      throw new RuntimeException( \"Can not find key class \" + keyClass.getName( ), e );\n    } catch ( ExceptionInInitializerError e ) {\n      throw new RuntimeException( \"Can not find key class \" + keyClass.getName( ), e );\n    } catch ( SecurityException e ) {\n      throw new RuntimeException( \"Can not find key class \" + keyClass.getName( ), e );\n    }\n  }","id":27346,"modified_method":"static Key getKeyInstance( Class<? extends Key> keyClass ) {\n    try {\n      Key key = keyClass.newInstance( );\n      return key;\n    } catch ( IllegalAccessException e ) {\n      throw new RuntimeException( \"Can not find key class \" + keyClass.getName( ), e );\n    } catch ( InstantiationException e ) {\n      throw new RuntimeException( \"Can not find key class \" + keyClass.getName( ), e );\n    } catch ( ExceptionInInitializerError e ) {\n      throw new RuntimeException( \"Can not find key class \" + keyClass.getName( ), e );\n    } catch ( SecurityException e ) {\n      throw new RuntimeException( \"Can not find key class \" + keyClass.getName( ), e );\n    }\n  }","commit_id":"89bfc24973862f18eb4191e076fb733f5e91d9c8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static Class<? extends Key> getKeyClass( String name ) {\n    return KEY_MAP.get( name );\n  }","id":27347,"modified_method":"static Class<? extends Key> getKeyClass( String name ) {\n    return KEY_MAP.get( name );\n  }","commit_id":"89bfc24973862f18eb4191e076fb733f5e91d9c8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * Evaluate conditions for an authorization.\n   */\n  private boolean evaluateConditions( \n      final Set<String> policyVariables,\n      final List<? extends Condition> conditions, \n      final String action, \n      final CachedKeyEvaluator keyEval, \n      final ContractKeyEvaluator contractEval \n  ) throws AuthException {\n    for ( Condition cond : conditions ) {\n      ConditionOp op = Conditions.getOpInstance( cond.getType( ) );\n      Key key = Keys.getKeyInstance( Keys.getKeyClass( cond.getKey( ) ) );\n      final boolean applies = key.canApply( action );\n      if ( key instanceof ContractKey ) {\n        if ( applies ) contractEval.addContract( ( ContractKey ) key, cond.getValues( ) );\n        continue;\n      }\n      boolean condValue = false;\n      for ( String value : cond.getValues( ) ) {\n        if ( op.check( applies ? keyEval.getValue( key ) : null, variableExplode( policyVariables, value ) ) ) {\n          condValue = true;\n          break;\n        }\n      }\n      if ( !condValue ) {\n        return false;\n      }\n    }\n    return true;\n  }","id":27348,"modified_method":"/**\n   * Evaluate conditions for an authorization.\n   */\n  private boolean evaluateConditions( \n      final Set<String> policyVariables,\n      final List<? extends Condition> conditions, \n      final String action, \n      final CachedKeyEvaluator keyEval, \n      final ContractKeyEvaluator contractEval \n  ) throws AuthException {\n    for ( Condition cond : conditions ) {\n      ConditionOp op = Conditions.getOpInstance( cond.getType( ) );\n      Key key = Keys.getKeyByName( cond.getKey( ) );\n      final boolean applies = key.canApply( action );\n      if ( key instanceof ContractKey ) {\n        if ( applies ) contractEval.addContract( ( ContractKey ) key, cond.getValues( ) );\n        continue;\n      }\n      boolean condValue = false;\n      for ( String value : cond.getValues( ) ) {\n        if ( op.check( applies ? keyEval.getValue( key ) : null, variableExplode( policyVariables, value ) ) ) {\n          condValue = true;\n          break;\n        }\n      }\n      if ( !condValue ) {\n        return false;\n      }\n    }\n    return true;\n  }","commit_id":"89bfc24973862f18eb4191e076fb733f5e91d9c8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * Process each of the quota authorizations. If any of them is exceeded, deny access.\n   * \n   * @param quotas The quota authorizations\n   * @param action The request action.\n   * @param resourceType The resource type for allocation\n   * @param resourceName The resource associated with the allocation\n   * @param quantity The quantity to allocate.\n   * @throws AuthException for any error.\n   */\n  private void processQuotas( final List<Pair<PolicyVersion,Authorization>> quotas,\n                              final String accountId,\n                              final String userId,\n                              final String action,\n                              final String resourceType,\n                              final String resourceName,\n                              final Long quantity ) throws AuthException {\n    NumericGreaterThan ngt = new NumericGreaterThan( );\n    for ( Pair<PolicyVersion,Authorization> quota : quotas ) {\n      final PolicyVersion policy = quota.getLeft();\n      final Authorization auth = quota.getRight( );\n      if ( !matchActions( auth, action ) ) {\n        LOG.debug( \"Action \" + action + \" not matching\" );\n        continue;\n      }\n      if ( !matchResources( auth, resourceType, resourceName ) ) {\n        LOG.debug( \"Resource \" + resourceName + \" not matching\" );\n        continue;\n      }\n      PolicyScope scope = policy.getPolicyScope();\n      String principalId = getAuthorizationPrincipalId( scope, accountId, userId );\n      for ( Condition cond : auth.getConditions( ) ) {\n        Key key = Keys.getKeyInstance( Keys.getKeyClass( cond.getKey( ) ) );\n        if ( !( key instanceof QuotaKey ) ) {\n          LOG.debug( \"Key \" + cond.getKey( ) + \" is not a quota\" );\n          continue;\n        }\n        QuotaKey quotaKey = ( QuotaKey ) key;\n        if ( !quotaKey.canApply( action , resourceType ) ) {\n          LOG.debug( \"Key \" + cond.getKey( ) + \" can not apply for action=\" + action + \", resourceType=\" + resourceType );\n          continue;\n        }\n        String usageValue = quotaKey.value( scope, principalId, resourceName, quantity );\n        if ( QuotaKey.NOT_SUPPORTED.equals( usageValue ) ) {\n          LOG.debug( \"Key \" + cond.getKey( ) + \" is not supported for scope=\" + scope );\n          continue;\n        }\n        String quotaValue = Iterables.getFirst( cond.getValues(), null );\n        if ( ngt.check( usageValue, quotaValue ) ) {\n          LOG.error( \"Quota \" + key.getClass( ).getName( ) + \" is exceeded: quota=\" + quotaValue + \", usage=\" + usageValue );\n          throw new AuthException( AuthException.QUOTA_EXCEEDED );\n        }\n      }\n    }\n  }","id":27349,"modified_method":"/**\n   * Process each of the quota authorizations. If any of them is exceeded, deny access.\n   * \n   * @param quotas The quota authorizations\n   * @param action The request action.\n   * @param resourceType The resource type for allocation\n   * @param resourceName The resource associated with the allocation\n   * @param quantity The quantity to allocate.\n   * @throws AuthException for any error.\n   */\n  private void processQuotas( final List<Pair<PolicyVersion,Authorization>> quotas,\n                              final String accountId,\n                              final String userId,\n                              final String action,\n                              final String resourceType,\n                              final String resourceName,\n                              final Long quantity ) throws AuthException {\n    NumericGreaterThan ngt = new NumericGreaterThan( );\n    for ( Pair<PolicyVersion,Authorization> quota : quotas ) {\n      final PolicyVersion policy = quota.getLeft();\n      final Authorization auth = quota.getRight( );\n      if ( !matchActions( auth, action ) ) {\n        LOG.debug( \"Action \" + action + \" not matching\" );\n        continue;\n      }\n      if ( !matchResources( auth, resourceType, resourceName ) ) {\n        LOG.debug( \"Resource \" + resourceName + \" not matching\" );\n        continue;\n      }\n      PolicyScope scope = policy.getPolicyScope();\n      String principalId = getAuthorizationPrincipalId( scope, accountId, userId );\n      for ( Condition cond : auth.getConditions( ) ) {\n        Key key = Keys.getKeyByName( cond.getKey( ) );\n        if ( !( key instanceof QuotaKey ) ) {\n          LOG.debug( \"Key \" + cond.getKey( ) + \" is not a quota\" );\n          continue;\n        }\n        QuotaKey quotaKey = ( QuotaKey ) key;\n        if ( !quotaKey.canApply( action , resourceType ) ) {\n          LOG.debug( \"Key \" + cond.getKey( ) + \" can not apply for action=\" + action + \", resourceType=\" + resourceType );\n          continue;\n        }\n        String usageValue = quotaKey.value( scope, principalId, resourceName, quantity );\n        if ( QuotaKey.NOT_SUPPORTED.equals( usageValue ) ) {\n          LOG.debug( \"Key \" + cond.getKey( ) + \" is not supported for scope=\" + scope );\n          continue;\n        }\n        String quotaValue = Iterables.getFirst( cond.getValues(), null );\n        if ( ngt.check( usageValue, quotaValue ) ) {\n          LOG.error( \"Quota \" + key.getClass( ).getName( ) + \" is exceeded: quota=\" + quotaValue + \", usage=\" + usageValue );\n          throw new AuthException( AuthException.QUOTA_EXCEEDED );\n        }\n      }\n    }\n  }","commit_id":"89bfc24973862f18eb4191e076fb733f5e91d9c8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * Check the condition key and value validity.\n   * \n   * @param key Condition key.\n   * @param values Condition values.\n   * @param typeClass The condition type\n   * @param isQuota If it is for a quota statement\n   * @throws JSONException for syntax error.\n   */\n  private void checkConditionKeyAndValues(\n      final String key,\n      final Set<String> values,\n      final Class<? extends ConditionOp> typeClass,\n      final boolean isQuota\n  ) throws JSONException {\n    if ( key == null ) {\n      throw new JSONException( \"Empty key name\" );\n    }\n    final Class<? extends Key> keyClass = Keys.getKeyClass( key );\n    if ( keyClass == null ) {\n      throw new JSONException( \"Condition key '\" + key + \"' is not supported\" );\n    }\n    if ( isQuota && !QuotaKey.class.isAssignableFrom( keyClass ) ) {\n      throw new JSONException( \"Quota statement can only use quota keys.'\" + key + \"' is invalid.\" );\n    }\n    final Key keyObj = Keys.getKeyInstance( keyClass );\n    if ( !NullConditionOp.class.equals( typeClass ) ) {\n      keyObj.validateConditionType( typeClass );\n    }\n    if ( values.size( ) < 1 ) {\n      throw new JSONException( \"No value for key '\" + key + \"'\" );\n    }\n    if ( isQuota && values.size( ) > 1 ) {\n      throw new JSONException( \"Quota key '\" + key + \"' can only have one value\" );\n    }\n    if ( !NullConditionOp.class.equals( typeClass ) ) for ( final String v : values ) {\n      keyObj.validateValueType( v );\n    }\n  }","id":27350,"modified_method":"/**\n   * Check the condition key and value validity.\n   * \n   * @param key Condition key.\n   * @param values Condition values.\n   * @param typeClass The condition type\n   * @param isQuota If it is for a quota statement\n   * @throws JSONException for syntax error.\n   */\n  private void checkConditionKeyAndValues(\n      final String key,\n      final Set<String> values,\n      final Class<? extends ConditionOp> typeClass,\n      final boolean isQuota\n  ) throws JSONException {\n    if ( key == null ) {\n      throw new JSONException( \"Empty key name\" );\n    }\n    final Key keyObj = Keys.getKeyByName( key );\n    if ( keyObj == null ) {\n      throw new JSONException( \"Condition key '\" + key + \"' is not supported\" );\n    }\n    if ( isQuota && !(keyObj instanceof QuotaKey)) {\n      throw new JSONException( \"Quota statement can only use quota keys.'\" + key + \"' is invalid.\" );\n    }\n    if ( !NullConditionOp.class.equals( typeClass ) ) {\n      keyObj.validateConditionType( typeClass );\n    }\n    if ( values.size( ) < 1 ) {\n      throw new JSONException( \"No value for key '\" + key + \"'\" );\n    }\n    if ( isQuota && values.size( ) > 1 ) {\n      throw new JSONException( \"Quota key '\" + key + \"' can only have one value\" );\n    }\n    if ( !NullConditionOp.class.equals( typeClass ) ) for ( final String v : values ) {\n      keyObj.validateValueType( v );\n    }\n  }","commit_id":"89bfc24973862f18eb4191e076fb733f5e91d9c8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/** {@inheritDoc} */\n    @Override public void start(Stage primaryStage) {\n        owner = primaryStage;\n\n        if (prefsFile.exists())\n            try (BufferedInputStream in = new BufferedInputStream(new FileInputStream(prefsFile))) {\n                prefs.load(in);\n            }\n            catch (IOException e) {\n                log.log(Level.SEVERE, \"Failed to load preferences. Default preferences will be used\", e);\n            }\n\n        // Load custom preferences.\n        List<String> params = getParameters().getRaw();\n\n        if (!params.isEmpty()) {\n            String customPrefsFileName = params.get(0);\n\n            if (customPrefsFileName.isEmpty())\n                log.log(Level.WARNING, \"Path to file with custom preferences is not specified.\");\n            else {\n                File customPrefsFile = U.resolveIgnitePath(customPrefsFileName);\n\n                if (customPrefsFile == null)\n                    log.log(Level.WARNING, \"Failed to resolve path to file with custom preferences: \" +\n                        customPrefsFile);\n                else {\n                    Properties customPrefs = new Properties();\n\n                    try (BufferedInputStream in = new BufferedInputStream(new FileInputStream(customPrefsFile))) {\n                        customPrefs.load(in);\n                    }\n                    catch (IOException e) {\n                        log.log(Level.SEVERE, \"Failed to load custom preferences.\", e);\n                    }\n\n                    String igniteHome = GridFilenameUtils.separatorsToUnix(U.getIgniteHome());\n\n                    for (Map.Entry<Object, Object> prop : customPrefs.entrySet()) {\n                        String key = prop.getKey().toString();\n                        String val = prop.getValue().toString().replaceAll(\"%IGNITE_HOME%\", igniteHome);\n\n                        prefs.setProperty(key, val);\n                    }\n                }\n            }\n        }\n\n        // Restore presets.\n        for (Preset preset : presets) {\n            String key = \"presets.\" + preset.pref + \".\";\n\n            preset.jar = getStringProp(key + \"jar\", preset.jar);\n            preset.drv = getStringProp(key + \"drv\", preset.drv);\n            preset.url = getStringProp(key + \"url\", preset.url);\n            preset.user = getStringProp(key + \"user\", preset.user);\n        }\n\n        primaryStage.setTitle(\"Apache Ignite Auto Schema Import Utility\");\n\n        primaryStage.getIcons().addAll(\n            image(\"ignite\", 16),\n            image(\"ignite\", 24),\n            image(\"ignite\", 32),\n            image(\"ignite\", 48),\n            image(\"ignite\", 64),\n            image(\"ignite\", 128));\n\n        pi = progressIndicator(50);\n\n        createGeneratePane();\n\n        hdrPane = createHeaderPane();\n        rootPane = borderPane(hdrPane, createConnectionPane(), createButtonsPane(), null, null);\n\n        primaryStage.setScene(scene(rootPane));\n\n        primaryStage.setWidth(650);\n        primaryStage.setMinWidth(650);\n\n        primaryStage.setHeight(650);\n        primaryStage.setMinHeight(650);\n\n        prev();\n\n        // Restore window pos and size.\n        if (prefs.getProperty(PREF_WINDOW_X) != null) {\n            int x = getIntProp(PREF_WINDOW_X, 100);\n            int y = getIntProp(PREF_WINDOW_Y, 100);\n            int w = getIntProp(PREF_WINDOW_WIDTH, 650);\n            int h = getIntProp(PREF_WINDOW_HEIGHT, 650);\n\n            // Ensure that window fit any available screen.\n            if (!Screen.getScreensForRectangle(x, y, w, h).isEmpty()) {\n                if (x > 0)\n                    primaryStage.setX(x);\n\n                if (y > 0)\n                    primaryStage.setY(y);\n\n                primaryStage.setWidth(w);\n                primaryStage.setHeight(h);\n            }\n        }\n        else\n            primaryStage.centerOnScreen();\n\n        String userHome = System.getProperty(\"user.home\").replace('\\\\', '/');\n\n        // Restore connection pane settings.\n        rdbmsCb.getSelectionModel().select(getIntProp(PREF_JDBC_DB_PRESET, 0));\n        jdbcDrvJarTf.setText(getStringProp(PREF_JDBC_DRIVER_JAR, \"h2.jar\"));\n        jdbcDrvClsTf.setText(getStringProp(PREF_JDBC_DRIVER_CLASS, \"org.h2.Driver\"));\n        jdbcUrlTf.setText(getStringProp(PREF_JDBC_URL, \"jdbc:h2:\" + userHome + \"/ignite-schema-import/db\"));\n        userTf.setText(getStringProp(PREF_JDBC_USER, \"sa\"));\n\n        // Restore generation pane settings.\n        outFolderTf.setText(getStringProp(PREF_OUT_FOLDER, userHome + \"/ignite-schema-import/out\"));\n\n        pkgTf.setText(getStringProp(PREF_POJO_PACKAGE, \"org.apache.ignite\"));\n        pojoIncludeKeysCh.setSelected(getBoolProp(PREF_POJO_INCLUDE, true));\n        pojoConstructorCh.setSelected(getBoolProp(PREF_POJO_CONSTRUCTOR, false));\n\n        xmlSingleFileCh.setSelected(getBoolProp(PREF_XML_SINGLE, true));\n\n        regexTf.setText(getStringProp(PREF_NAMING_PATTERN, \"(\\\\w+)\"));\n        replaceTf.setText(getStringProp(PREF_NAMING_REPLACE, \"$1_SomeText\"));\n\n        primaryStage.show();\n    }","id":27351,"modified_method":"/** {@inheritDoc} */\n    @Override public void start(Stage primaryStage) {\n        owner = primaryStage;\n\n        if (prefsFile.exists())\n            try (BufferedInputStream in = new BufferedInputStream(new FileInputStream(prefsFile))) {\n                prefs.load(in);\n            }\n            catch (IOException e) {\n                log.log(Level.SEVERE, \"Failed to load preferences. Default preferences will be used\", e);\n            }\n\n        // Load custom preferences.\n        List<String> params = getParameters().getRaw();\n\n        if (!params.isEmpty()) {\n            String customPrefsFileName = params.get(0);\n\n            if (customPrefsFileName.isEmpty())\n                log.log(Level.WARNING, \"Path to file with custom preferences is not specified.\");\n            else {\n                File customPrefsFile = U.resolveIgnitePath(customPrefsFileName);\n\n                if (customPrefsFile == null)\n                    log.log(Level.WARNING, \"Failed to resolve path to file with custom preferences: \" +\n                        customPrefsFile);\n                else {\n                    Properties customPrefs = new Properties();\n\n                    try (BufferedInputStream in = new BufferedInputStream(new FileInputStream(customPrefsFile))) {\n                        customPrefs.load(in);\n                    }\n                    catch (IOException e) {\n                        log.log(Level.SEVERE, \"Failed to load custom preferences.\", e);\n                    }\n\n                    String igniteHome = GridFilenameUtils.separatorsToUnix(U.getIgniteHome());\n\n                    for (Map.Entry<Object, Object> prop : customPrefs.entrySet()) {\n                        String key = prop.getKey().toString();\n                        String val = prop.getValue().toString().replaceAll(\"%IGNITE_HOME%\", igniteHome);\n\n                        prefs.setProperty(key, val);\n                    }\n                }\n            }\n        }\n\n        // Restore presets.\n        for (Preset preset : presets) {\n            String key = \"presets.\" + preset.pref + \".\";\n\n            preset.jar = getStringProp(key + \"jar\", preset.jar);\n            preset.drv = getStringProp(key + \"drv\", preset.drv);\n            preset.url = getStringProp(key + \"url\", preset.url);\n            preset.user = getStringProp(key + \"user\", preset.user);\n        }\n\n        primaryStage.setTitle(\"Apache Ignite Auto Schema Import Utility\");\n\n        primaryStage.getIcons().addAll(\n            image(\"ignite\", 16),\n            image(\"ignite\", 24),\n            image(\"ignite\", 32),\n            image(\"ignite\", 48),\n            image(\"ignite\", 64),\n            image(\"ignite\", 128));\n\n        pi = progressIndicator(50);\n\n        createGeneratePane();\n\n        hdrPane = createHeaderPane();\n        rootPane = borderPane(hdrPane, createConnectionPane(), createButtonsPane(), null, null);\n\n        primaryStage.setScene(scene(rootPane));\n\n        primaryStage.setWidth(650);\n        primaryStage.setMinWidth(650);\n\n        primaryStage.setHeight(650);\n        primaryStage.setMinHeight(650);\n\n        prev();\n\n        // Restore window pos and size.\n        if (prefs.getProperty(PREF_WINDOW_X) != null) {\n            int x = getIntProp(PREF_WINDOW_X, 100);\n            int y = getIntProp(PREF_WINDOW_Y, 100);\n            int w = getIntProp(PREF_WINDOW_WIDTH, 650);\n            int h = getIntProp(PREF_WINDOW_HEIGHT, 650);\n\n            // Ensure that window fit any available screen.\n            if (!Screen.getScreensForRectangle(x, y, w, h).isEmpty()) {\n                primaryStage.setX(x);\n                primaryStage.setY(y);\n\n                primaryStage.setWidth(w);\n                primaryStage.setHeight(h);\n            }\n        }\n        else\n            primaryStage.centerOnScreen();\n\n        String userHome = System.getProperty(\"user.home\").replace('\\\\', '/');\n\n        // Restore connection pane settings.\n        rdbmsCb.getSelectionModel().select(getIntProp(PREF_JDBC_DB_PRESET, 0));\n        jdbcDrvJarTf.setText(getStringProp(PREF_JDBC_DRIVER_JAR, \"h2.jar\"));\n        jdbcDrvClsTf.setText(getStringProp(PREF_JDBC_DRIVER_CLASS, \"org.h2.Driver\"));\n        jdbcUrlTf.setText(getStringProp(PREF_JDBC_URL, \"jdbc:h2:\" + userHome + \"/ignite-schema-import/db\"));\n        userTf.setText(getStringProp(PREF_JDBC_USER, \"sa\"));\n\n        // Restore generation pane settings.\n        outFolderTf.setText(getStringProp(PREF_OUT_FOLDER, userHome + \"/ignite-schema-import/out\"));\n\n        pkgTf.setText(getStringProp(PREF_POJO_PACKAGE, \"org.apache.ignite\"));\n        pojoIncludeKeysCh.setSelected(getBoolProp(PREF_POJO_INCLUDE, true));\n        pojoConstructorCh.setSelected(getBoolProp(PREF_POJO_CONSTRUCTOR, false));\n\n        xmlSingleFileCh.setSelected(getBoolProp(PREF_XML_SINGLE, true));\n\n        regexTf.setText(getStringProp(PREF_NAMING_PATTERN, \"(\\\\w+)\"));\n        replaceTf.setText(getStringProp(PREF_NAMING_REPLACE, \"$1_SomeText\"));\n\n        primaryStage.show();\n    }","commit_id":"e10fb963c90b59da62226990f068cf77d9ec79d3","url":"https://github.com/apache/ignite"},{"original_method":"@Override\n  public void moveTo(int x, int y) {\n    getComponent().setLocation(myX, myY);\n    super.moveTo(x, y);\n  }","id":27352,"modified_method":"@Override\n  public void moveTo(int x, int y) {\n    super.moveTo(x, y);\n    getComponent().setLocation(getX(), getY());\n  }","commit_id":"407380c5109af7c6f82a4702ef163c0a69fc7cd4","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void setY(int y) {\n    JComponent component = getComponent();\n    component.setLocation(component.getX(), y);\n    super.setY(y);\n  }","id":27353,"modified_method":"@Override\n  public void setY(int y) {\n    super.setY(y);\n    getComponent().setLocation(getX(), getY());\n  }","commit_id":"407380c5109af7c6f82a4702ef163c0a69fc7cd4","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void setX(int x) {\n    JComponent component = getComponent();\n    component.setLocation(x, component.getY());\n    super.setX(x);\n  }","id":27354,"modified_method":"@Override\n  public void setX(int x) {\n    super.setX(x);\n    getComponent().setLocation(getX(), getY());\n  }","commit_id":"407380c5109af7c6f82a4702ef163c0a69fc7cd4","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doLayout(EditorCell_Collection editorCells) {\n    int width = 0;\n    final int x = editorCells.getX();\n    final int y = editorCells.getY();\n    if (editorCells.isDrawBrackets()) {\n      width += EditorCell_Collection.BRACKET_WIDTH * 2;\n    }\n    int ascent = 0;\n    int descent = 0;\n    EditorCell[] cells = editorCells.getCells();\n    for (int i = 0; i < cells.length; i++) {\n      EditorCell editorCell = cells[i];\n      editorCell.setX(x + width);\n      editorCell.relayout();\n      width += editorCell.getWidth();\n\n      if (i != cells.length - 1) {\n        EditorCell nextCell = cells[i + 1];\n        if (nextCell.isPunctuationLayout()) {\n          width -= editorCell.getRightInternalInset();\n          editorCell.setNextIsPunctuation();\n        }\n      }\n\n      ascent = Math.max(ascent, editorCell.getAscent());\n      descent = Math.max(descent, editorCell.getDescent());\n    }\n\n    if (editorCells.isDrawBrackets()) {\n      width += EditorCell_Collection.BRACKET_WIDTH * 2;\n    }\n    int baseline = y + ascent;\n    editorCells.setWidth(width);\n    editorCells.setHeight(ascent + descent);\n\n    for (EditorCell editorCell : cells) {\n      editorCell.setBaseline(baseline);\n    }\n  }","id":27355,"modified_method":"public void doLayout(EditorCell_Collection editorCells) {\n    int width = 0;\n    final int x = editorCells.getX();\n    final int y = editorCells.getY();\n    int ascent = 0;\n    int descent = 0;\n    EditorCell[] cells = editorCells.getCells();\n    for (int i = 0; i < cells.length; i++) {\n      EditorCell editorCell = cells[i];\n      editorCell.setX(x + width);\n      editorCell.relayout();\n      width += editorCell.getWidth();\n\n      if (i != cells.length - 1) {\n        EditorCell nextCell = cells[i + 1];\n        if (nextCell.isPunctuationLayout()) {\n          width -= editorCell.getRightInternalInset();\n          editorCell.setNextIsPunctuation();\n        }\n      }\n\n      ascent = Math.max(ascent, editorCell.getAscent());\n      descent = Math.max(descent, editorCell.getDescent());\n    }\n\n    int baseline = y + ascent;\n\n    editorCells.setWidth(width);\n    editorCells.setHeight(ascent + descent);\n\n    for (EditorCell editorCell : cells) {\n      editorCell.setBaseline(baseline);\n    }\n  }","commit_id":"c62bc81d2acdc953675636af8e702ba3536528f6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doLayout(EditorCell_Collection editorCells) {\n    if (editorCells.isFolded()) {\n      Font font = EditorSettings.getInstance().getDefaultEditorFont();\n      FontMetrics metrics = editorCells.getEditor().getFontMetrics(font);\n      editorCells.setHeight(metrics.getHeight());\n      editorCells.setWidth(metrics.stringWidth(EditorCell_Collection.FOLDED_TEXT));\n      for (EditorCell cell : editorCells.dfsCells()) {\n        cell.setX(editorCells.getX());\n        cell.setY(editorCells.getY());\n        cell.setWidth(0);\n        cell.setHeight(0);\n      }\n      return;\n    }\n\n    EditorCell closingBrace = editorCells.getClosingBrace();\n    EditorCell openingBrace = editorCells.getOpeningBrace();\n    boolean usesBraces = editorCells.usesBraces();\n    if (usesBraces) {\n      closingBrace.relayout();\n      openingBrace.relayout();\n      openingBrace.setX(editorCells.getX());\n      openingBrace.setY(editorCells.getY());\n    }\n\n    final int x = usesBraces ? editorCells.getX() + openingBrace.getWidth() : editorCells.getX();\n    final int y = editorCells.getY();\n    int lastCellWidth;\n    int braceIndent = 0;\n    int width = 0;\n    int height = 0;\n    if (editorCells.isDrawBrackets()) {\n      width += EditorCell_Collection.BRACKET_WIDTH * 2;\n    }\n    for (EditorCell editorCell : editorCells.contentCells()) {\n      if (editorCells.isDrawBrackets()) {\n        editorCell.setX(x + EditorCell_Collection.BRACKET_WIDTH);\n      } else {\n        editorCell.setX(x);\n      }\n      editorCell.setY(y + height);\n      editorCell.relayout();\n      int cellHeight = editorCell.getHeight();\n      int indent = EditorUtil.getBracesIndent(editorCell);\n      braceIndent = Math.max(indent, braceIndent);\n      height += cellHeight;\n    }\n    for (EditorCell editorCell : editorCells.contentCells()) {\n      lastCellWidth = editorCell.getWidth();\n      int indent = EditorUtil.getBracesIndent(editorCell);\n      int delta = braceIndent - indent;\n      width = Math.max(width, lastCellWidth + delta);\n    }\n    if (editorCells.isDrawBrackets()) {\n      width += EditorCell_Collection.BRACKET_WIDTH * 2;\n    }\n    editorCells.setArtificialBracesIndent(braceIndent);\n    for (EditorCell editorCell : editorCells.contentCells()) {\n      int cellX = editorCell.getX();\n      int cellY = editorCell.getY();\n      int indent = EditorUtil.getBracesIndent(editorCell);\n      int newCellX = cellX - indent + braceIndent;\n      if (newCellX != cellX) editorCell.moveTo(newCellX, cellY);\n    }\n\n    if (myGridLayout) {\n      int x0 = x;\n      if (editorCells.isDrawBrackets()) {\n        x0 += EditorCell_Collection.BRACKET_WIDTH;\n      }\n      int size = editorCells.getContentCellsCount();\n      int[] maxHeights = new int[size];\n      for (int j = 0; j < maxHeights.length; j++) {\n        maxHeights[j] = 0;\n      }\n      for (int i = 0; ; i++) {\n        int maxWidth = -1;\n        int j = 0;\n        for (EditorCell editorCell : editorCells.contentCells()) {\n          if (editorCell instanceof EditorCell_Collection) {\n            EditorCell_Collection editorCellCollection = (EditorCell_Collection) editorCell;\n            CellLayout cellLayout = editorCellCollection.getCellLayout();\n            if (cellLayout instanceof CellLayout_Horizontal) {\n              if (i < editorCellCollection.getChildCount()) {\n                EditorCell cell = editorCellCollection.getChildAt(i);\n                cell.setX(x0);\n                cell.relayout();\n                maxWidth = Math.max(maxWidth, cell.getWidth());\n                maxHeights[j] = Math.max(maxHeights[j], cell.getHeight());\n              }\n            } else {\n              editorCellCollection.relayout();\n              maxHeights[j] = Math.max(maxHeights[j], editorCell.getHeight());\n            }\n          } else {\n            editorCell.relayout();\n            maxHeights[j] = Math.max(maxHeights[j], editorCell.getHeight());\n          }\n          j++;\n        }\n        for (EditorCell editorCell : editorCells.contentCells()) {\n          if (editorCell instanceof EditorCell_Collection) {\n            EditorCell_Collection editorCellCollection = (EditorCell_Collection) editorCell;\n            CellLayout cellLayout = editorCellCollection.getCellLayout();\n            if (cellLayout instanceof CellLayout_Horizontal && i < editorCellCollection.getChildCount()) {\n              EditorCell cell = editorCellCollection.getChildAt(i);\n              cell.setWidth(maxWidth);\n            }\n          }\n        }\n        if (maxWidth == -1) {\n          break;\n        }\n        x0 += maxWidth;\n      }\n      int j = 0;\n      height = 0;\n      for (EditorCell editorCell : editorCells.contentCells()) {\n        editorCell.moveTo(editorCell.getX(), y + height);\n        int deltaHeight = maxHeights[j];\n        editorCell.setHeight(deltaHeight);\n        height += deltaHeight;\n        j++;\n      }\n      for (EditorCell editorCell : editorCells.contentCells()) {\n        if (editorCell instanceof EditorCell_Collection) {\n          EditorCell_Collection editorCellCollection = (EditorCell_Collection) editorCell;\n          CellLayout cellLayout = editorCellCollection.getCellLayout();\n          if (cellLayout instanceof CellLayout_Horizontal) {\n            int width0 = 0;\n            if (editorCells.isDrawBrackets()) {\n              width0 += EditorCell_Collection.BRACKET_WIDTH * 2;\n            }\n            for (EditorCell cell : editorCellCollection) {\n              width0 += cell.getWidth();\n            }\n            editorCellCollection.setWidth(width0);\n            width = Math.max(width, width0);\n          }\n        }\n      }\n    }\n    if (usesBraces) {\n      closingBrace.setY(y + height - closingBrace.getHeight());\n      if (myGridLayout) {\n        closingBrace.setX(x + width);\n        width += closingBrace.getWidth();\n      } else {\n        EditorCell lastCell = editorCells.lastContentCell();\n        while (EditorUtil.isCollection(lastCell)) {\n          lastCell = ((EditorCell_Collection)lastCell).lastCell();\n        }\n        closingBrace.setX(lastCell.getX() + lastCell.getWidth()/*x + lastCellWidth*/);\n        width = Math.max(width, (closingBrace.getX() - x) + closingBrace.getWidth());\n      }\n      width += openingBrace.getWidth();\n    }\n    editorCells.setWidth(width);\n    editorCells.setHeight(height);\n  }","id":27356,"modified_method":"public void doLayout(EditorCell_Collection editorCells) {\n    if (editorCells.isFolded()) {\n      Font font = EditorSettings.getInstance().getDefaultEditorFont();\n      FontMetrics metrics = editorCells.getEditor().getFontMetrics(font);\n      editorCells.setHeight(metrics.getHeight());\n      editorCells.setWidth(metrics.stringWidth(EditorCell_Collection.FOLDED_TEXT));\n      for (EditorCell cell : editorCells.dfsCells()) {\n        cell.setX(editorCells.getX());\n        cell.setY(editorCells.getY());\n        cell.setWidth(0);\n        cell.setHeight(0);\n      }\n      return;\n    }\n\n    EditorCell closingBrace = editorCells.getClosingBrace();\n    EditorCell openingBrace = editorCells.getOpeningBrace();\n    boolean usesBraces = editorCells.usesBraces();\n    if (usesBraces) {\n      closingBrace.relayout();\n      openingBrace.relayout();\n      openingBrace.setX(editorCells.getX());\n      openingBrace.setY(editorCells.getY());\n    }\n\n    final int x = usesBraces ? editorCells.getX() + openingBrace.getWidth() : editorCells.getX();\n    final int y = editorCells.getY();\n    int lastCellWidth;\n    int braceIndent = 0;\n    int width = 0;\n    int height = 0;\n    for (EditorCell editorCell : editorCells.contentCells()) {\n      editorCell.setX(x);\n      editorCell.setY(y + height);\n      editorCell.relayout();\n      int cellHeight = editorCell.getHeight();\n      int indent = EditorUtil.getBracesIndent(editorCell);\n      braceIndent = Math.max(indent, braceIndent);\n      height += cellHeight;\n    }\n    for (EditorCell editorCell : editorCells.contentCells()) {\n      lastCellWidth = editorCell.getWidth();\n      int indent = EditorUtil.getBracesIndent(editorCell);\n      int delta = braceIndent - indent;\n      width = Math.max(width, lastCellWidth + delta);\n    }\n    editorCells.setArtificialBracesIndent(braceIndent);\n    for (EditorCell editorCell : editorCells.contentCells()) {\n      int cellX = editorCell.getX();\n      int cellY = editorCell.getY();\n      int indent = EditorUtil.getBracesIndent(editorCell);\n      int newCellX = cellX - indent + braceIndent;\n      if (newCellX != cellX) editorCell.moveTo(newCellX, cellY);\n    }\n\n    if (myGridLayout) {\n      int x0 = x;\n      int size = editorCells.getContentCellsCount();\n      int[] maxHeights = new int[size];\n      for (int j = 0; j < maxHeights.length; j++) {\n        maxHeights[j] = 0;\n      }\n      for (int i = 0; ; i++) {\n        int maxWidth = -1;\n        int j = 0;\n        for (EditorCell editorCell : editorCells.contentCells()) {\n          if (editorCell instanceof EditorCell_Collection) {\n            EditorCell_Collection editorCellCollection = (EditorCell_Collection) editorCell;\n            CellLayout cellLayout = editorCellCollection.getCellLayout();\n            if (cellLayout instanceof CellLayout_Horizontal) {\n              if (i < editorCellCollection.getChildCount()) {\n                EditorCell cell = editorCellCollection.getChildAt(i);\n                cell.setX(x0);\n                cell.relayout();\n                maxWidth = Math.max(maxWidth, cell.getWidth());\n                maxHeights[j] = Math.max(maxHeights[j], cell.getHeight());\n              }\n            } else {\n              editorCellCollection.relayout();\n              maxHeights[j] = Math.max(maxHeights[j], editorCell.getHeight());\n            }\n          } else {\n            editorCell.relayout();\n            maxHeights[j] = Math.max(maxHeights[j], editorCell.getHeight());\n          }\n          j++;\n        }\n        for (EditorCell editorCell : editorCells.contentCells()) {\n          if (editorCell instanceof EditorCell_Collection) {\n            EditorCell_Collection editorCellCollection = (EditorCell_Collection) editorCell;\n            CellLayout cellLayout = editorCellCollection.getCellLayout();\n            if (cellLayout instanceof CellLayout_Horizontal && i < editorCellCollection.getChildCount()) {\n              EditorCell cell = editorCellCollection.getChildAt(i);\n              cell.setWidth(maxWidth);\n            }\n          }\n        }\n        if (maxWidth == -1) {\n          break;\n        }\n        x0 += maxWidth;\n      }\n      int j = 0;\n      height = 0;\n      for (EditorCell editorCell : editorCells.contentCells()) {\n        editorCell.moveTo(editorCell.getX(), y + height);\n        int deltaHeight = maxHeights[j];\n        editorCell.setHeight(deltaHeight);\n        height += deltaHeight;\n        j++;\n      }\n      for (EditorCell editorCell : editorCells.contentCells()) {\n        if (editorCell instanceof EditorCell_Collection) {\n          EditorCell_Collection editorCellCollection = (EditorCell_Collection) editorCell;\n          CellLayout cellLayout = editorCellCollection.getCellLayout();\n          if (cellLayout instanceof CellLayout_Horizontal) {\n            int width0 = 0;\n            for (EditorCell cell : editorCellCollection) {\n              width0 += cell.getWidth();\n            }\n            editorCellCollection.setWidth(width0);\n            width = Math.max(width, width0);\n          }\n        }\n      }\n    }\n    if (usesBraces) {\n      closingBrace.setY(y + height - closingBrace.getHeight());\n      if (myGridLayout) {\n        closingBrace.setX(x + width);\n        width += closingBrace.getWidth();\n      } else {\n        EditorCell lastCell = editorCells.lastContentCell();\n        while (EditorUtil.isCollection(lastCell)) {\n          lastCell = ((EditorCell_Collection)lastCell).lastCell();\n        }\n        closingBrace.setX(lastCell.getX() + lastCell.getWidth()/*x + lastCellWidth*/);\n        width = Math.max(width, (closingBrace.getX() - x) + closingBrace.getWidth());\n      }\n      width += openingBrace.getWidth();\n    }\n    editorCells.setWidth(width);\n    editorCells.setHeight(height);\n  }","commit_id":"c62bc81d2acdc953675636af8e702ba3536528f6","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected int doWork() {\n    \t\t\t\n    \tg_log_n = new int[256];\n    \tfor (int i = 1; i < 256; ++i) g_log_n[i] = (int)(4.343 * Math.log(i) + 0.5);\n    \t\n    \treader = new SAMFileReader(IN);\n    \treader.setValidationStringency(ValidationStringency.SILENT);\n\t\tSAMFileHeader oldHeader = reader.getFileHeader();\n\t\tif ( oldHeader == null ) throw new RuntimeException(\"Failed to retrieve SAM file header from the input bam file\");\n\t\t\n\t\tif ( REDUCE && oldHeader.getSortOrder() != SortOrder.queryname ) \n\t\t\tSystem.out.println(\"WARNING: Input file is not sorted by query name, REDUCE may have no effect. Sort order: \"\n\t\t\t\t\t+oldHeader.getSortOrder());\n\t\t\n\t\tremappedReads = new TreeSet<SAMRecord>(new AlignmentComparator());\n\t\t\n\t\tSAMFileHeader h = new SAMFileHeader();\n\t\t\n\t\tfor ( Entry<String, Object> attr : oldHeader.getAttributes() ) h.setAttribute(attr.getKey(), attr.getValue());\n\t\th.setGroupOrder(oldHeader.getGroupOrder());\n\t\th.setProgramRecords(oldHeader.getProgramRecords());\n\t\th.setReadGroups(oldHeader.getReadGroups());\n\t\t\n\t\tif ( oldHeader.getSortOrder() == SortOrder.queryname ) {\n\t\t\th.setSortOrder(SortOrder.queryname);\n\t\t} else {\n\t\t\th.setSortOrder(SortOrder.unsorted);\n\t\t}\n\t\t\n\t\tReferenceSequenceFileWalker reference = new ReferenceSequenceFileWalker(REFERENCE);\n\n        if ( reference.getSequenceDictionary() == null ) {\n        \tSystem.out.println(\"No reference sequence dictionary found. Aborting.\");\n        \treader.close();\n        \tSystem.exit(1);\n        }\n\t\t\n\t\th.setSequenceDictionary(reference.getSequenceDictionary());\n\t\tGenomeLocParser.setupRefContigOrdering(reference.getSequenceDictionary());\n\t\t\n\t\tmap = new GenomicMap(10000);\n\t\tmap.read(MAP_FILE);\n\t\tSystem.out.println(\"Map loaded successfully: \"+map.size()+\" contigs\");\n\t\t\t\t\n\t\t\n\t\twriter = new SAMFileWriterFactory().makeSAMOrBAMWriter(h, true, OUT);\n\t\t\n\t\tfor ( SAMRecord read : reader ) {\n\t\t\t\n\t\t\t\n\t\t\tif ( map.remapToMasterReference(read,h,true) == null ) {\n\t\t\t\tbadRecords++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( AlignmentUtils.isReadUnmapped(read) ) totalUnmappedReads++;\n\t\t\telse {\n\t\t\t\t// destroy mate pair mapping information, if any (we will need to reconstitute pairs after remapping both ends):\n\t\t\t\tread.setMateReferenceIndex(SAMRecord.NO_ALIGNMENT_REFERENCE_INDEX);\n\t\t\t\tread.setMateAlignmentStart(SAMRecord.NO_ALIGNMENT_START);\n//\t\t\t\tif ( read.getReadPairedFlag() ) System.out.println(\"PAIRED READ!!\");\n\t\t\t}\n\t\t\ttotalRecords++;\n\t\t\t\n\t\t\tif ( totalRecords % 1000000 == 0 ) System.out.println(totalRecords + \" valid records processed\");\n\t\t\t\n\n\t\t\tif ( ! read.getReadName().equals(lastReadName) ) {\n\t\t\t\ttotalReads++;\n\t\t\t\tlastReadName = read.getReadName();\n\t\t\t\n\t\t\t\t\t\t\n\t\t\t\tif ( REDUCE ) {\n\t\t\t\t\t\n\t\t\t\t\tupdateCountsAndQuals(remappedReads);\n\t\t\t\t\t\n\t\t\t\t\tfor ( SAMRecord r : remappedReads ) {\n\t\t\t\t\t\twriter.addAlignment(r); // emit non-redundant alignments for previous query\n\t\t\t\t\t\twrittenRecords++;\n\t\t\t\t\t}\n\t\t\t\t\tremappedReads.clear(); \n\t\t\t\t}\n\t\t\t} \n\t\t\tif ( REDUCE ) remappedReads.add(read); \n\t\t\telse {\n\t\t\t\twriter.addAlignment(read);\n\t\t\t\twrittenRecords++;\n\t\t\t}\n\t\t}\n\n\t\t// write remaining bunch of reads:\n\t\tif ( REDUCE ) {\n\t\t\tupdateCountsAndQuals(remappedReads);\n\t\t\tfor ( SAMRecord r : remappedReads ) {\n\t\t\t\twriter.addAlignment(r); // emit non-redundant alignments for previous query\n\t\t\t\twrittenRecords++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"Total valid records processed: \"+totalRecords);\n\t\tSystem.out.println(\"Incorrect records (alignments across contig boundary) detected: \"+badRecords + \n\t\t\t\t\" (discarded and excluded from any other stats)\");\n\t\tSystem.out.println(\"Total reads processed: \"+totalReads);\n\t\tSystem.out.println(\"Total mapped reads: \"+(totalReads-totalUnmappedReads));\n\t\tSystem.out.println(\"Average hits per mapped read: \"+((double)(totalRecords-totalUnmappedReads))/(totalReads-totalUnmappedReads));\n\t\tSystem.out.println(\"Records written: \"+writtenRecords);\n\t\tSystem.out.println(\"Average hits per mapped read written (after reduction): \"\n\t\t\t\t+((double)(writtenRecords-totalUnmappedReads))/(totalReads-totalUnmappedReads));\n\t\treader.close();\n\t\twriter.close();\n\t\treturn 0;\n\t}","id":27357,"modified_method":"protected int doWork() {\n    \t\t\t\n    \tg_log_n = new int[256];\n    \tfor (int i = 1; i < 256; ++i) g_log_n[i] = (int)(4.343 * Math.log(i) + 0.5);\n    \t\n    \treader = new SAMFileReader(IN);\n    \treader.setValidationStringency(ValidationStringency.SILENT);\n\t\tSAMFileHeader oldHeader = reader.getFileHeader();\n\t\tif ( oldHeader == null ) throw new RuntimeException(\"Failed to retrieve SAM file header from the input bam file\");\n\t\t\n\t\tif ( REDUCE && oldHeader.getSortOrder() != SortOrder.queryname ) \n\t\t\tSystem.out.println(\"WARNING: Input file is not sorted by query name, REDUCE may have no effect. Sort order: \"\n\t\t\t\t\t+oldHeader.getSortOrder());\n\t\t\n\t\tremappedReads = new TreeSet<SAMRecord>(new AlignmentComparator());\n\t\t\n\t\tSAMFileHeader h = new SAMFileHeader();\n\t\t\n\t\tfor ( Entry<String, Object> attr : oldHeader.getAttributes() ) h.setAttribute(attr.getKey(), attr.getValue());\n\t\th.setGroupOrder(oldHeader.getGroupOrder());\n\t\th.setProgramRecords(oldHeader.getProgramRecords());\n\t\th.setReadGroups(oldHeader.getReadGroups());\n\t\t\n\t\tif ( oldHeader.getSortOrder() == SortOrder.queryname ) {\n\t\t\th.setSortOrder(SortOrder.queryname);\n\t\t} else {\n\t\t\th.setSortOrder(SortOrder.unsorted);\n\t\t}\n\t\t\n\t\tReferenceSequenceFileWalker reference = new ReferenceSequenceFileWalker(REFERENCE);\n\n        if ( reference.getSequenceDictionary() == null ) {\n        \tSystem.out.println(\"No reference sequence dictionary found. Aborting.\");\n        \treader.close();\n        \tSystem.exit(1);\n        }\n\t\t\n\t\th.setSequenceDictionary(reference.getSequenceDictionary());\n\t\tGenomeLocParser.setupRefContigOrdering(reference.getSequenceDictionary());\n\t\t\n\t\tmap = new GenomicMap(10000);\n\t\tmap.read(MAP_FILE);\n\t\tSystem.out.println(\"Map loaded successfully: \"+map.size()+\" contigs\");\n\t\t\t\t\n\t\t\n\t\twriter = new SAMFileWriterFactory().makeSAMOrBAMWriter(h, true, OUT);\n\t\t\n\t\tfor ( SAMRecord read : reader ) {\n\t\t\t\n\t\t\t\n\t\t\tif ( map.remapToMasterReference(read,h,true) == null ) {\n\t\t\t\tbadRecords++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( AlignmentUtils.isReadUnmapped(read) ) totalUnmappedReads++;\n\n                        // destroy mate pair mapping information, if any (we will need to reconstitute pairs after remapping both ends):\n                        read.setMateReferenceIndex(SAMRecord.NO_ALIGNMENT_REFERENCE_INDEX);\n                        read.setMateAlignmentStart(SAMRecord.NO_ALIGNMENT_START);\n//\t\t\t\tif ( read.getReadPairedFlag() ) System.out.println(\"PAIRED READ!!\");\n\n\t\t\ttotalRecords++;\n\t\t\t\n\t\t\tif ( totalRecords % 1000000 == 0 ) System.out.println(totalRecords + \" valid records processed\");\n\t\t\t\n\n\t\t\tif ( ! read.getReadName().equals(lastReadName) ) {\n\t\t\t\ttotalReads++;\n\t\t\t\tlastReadName = read.getReadName();\n\t\t\t\n\t\t\t\t\t\t\n\t\t\t\tif ( REDUCE ) {\n\t\t\t\t\t\n\t\t\t\t\tupdateCountsAndQuals(remappedReads);\n\t\t\t\t\t\n\t\t\t\t\tfor ( SAMRecord r : remappedReads ) {\n\t\t\t\t\t\twriter.addAlignment(r); // emit non-redundant alignments for previous query\n\t\t\t\t\t\twrittenRecords++;\n\t\t\t\t\t}\n\t\t\t\t\tremappedReads.clear(); \n\t\t\t\t}\n\t\t\t} \n\t\t\tif ( REDUCE ) remappedReads.add(read); \n\t\t\telse {\n\t\t\t\twriter.addAlignment(read);\n\t\t\t\twrittenRecords++;\n\t\t\t}\n\t\t}\n\n\t\t// write remaining bunch of reads:\n\t\tif ( REDUCE ) {\n\t\t\tupdateCountsAndQuals(remappedReads);\n\t\t\tfor ( SAMRecord r : remappedReads ) {\n\t\t\t\twriter.addAlignment(r); // emit non-redundant alignments for previous query\n\t\t\t\twrittenRecords++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"Total valid records processed: \"+totalRecords);\n\t\tSystem.out.println(\"Incorrect records (alignments across contig boundary) detected: \"+badRecords + \n\t\t\t\t\" (discarded and excluded from any other stats)\");\n\t\tSystem.out.println(\"Total reads processed: \"+totalReads);\n\t\tSystem.out.println(\"Total mapped reads: \"+(totalReads-totalUnmappedReads));\n\t\tSystem.out.println(\"Average hits per mapped read: \"+((double)(totalRecords-totalUnmappedReads))/(totalReads-totalUnmappedReads));\n\t\tSystem.out.println(\"Records written: \"+writtenRecords);\n\t\tSystem.out.println(\"Average hits per mapped read written (after reduction): \"\n\t\t\t\t+((double)(writtenRecords-totalUnmappedReads))/(totalReads-totalUnmappedReads));\n\t\treader.close();\n\t\twriter.close();\n\t\treturn 0;\n\t}","commit_id":"0721c450c2b30c6fb4363cc044121c4fe9a0724d","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void updateCountsAndQuals(Set<SAMRecord> reads) {\n    \tif ( reads.size() == 1 ) {\n    \t\tSAMRecord r = reads.iterator().next();\n \n        \t// technically, if edit distance of the read is equal to max_diff used in alignments, \n        \t// we should have set 25... \n    \t\tr.setMappingQuality(37);\n    \t\tr.setAttribute(\"X0\", new Integer(1));\n    \t\tr.setAttribute(\"X1\", new Integer(0));\n    \t\tr.setNotPrimaryAlignmentFlag(false);\n    \t\t\n    \t} else {\n    \t\t\n    \t\t// we have multiple alignments for the read\n    \t\t// need to figure out how many best vs inferior alignments are there:\n    \t\tint minNM = 1000000;\n    \t\tint cnt = 0; // count of best alignments\n    \t\tfor ( SAMRecord r : reads ) {\n                Object attr = r.getAttribute(\"NM\");\n                if ( attr == null ) {\n                    return; // can not recompute qualities!\n                }\n    \t\t\tint nm;\n                if ( attr instanceof Short ) nm = ((Short)attr).intValue();\n                else if ( attr instanceof Integer ) nm = ((Integer)attr).intValue();\n                else throw new RuntimeException(\"NM attribute is neither Short nor Integer, don't know what to do.\");\n    \t\t\tif ( nm < minNM  ) { \n    \t\t\t\tminNM = nm;\n    \t\t\t\tcnt = 1;\n    \t\t\t} else if ( nm == minNM ) cnt++;\n    \t\t}\n\n    \t\t// now reset counts and quals:\n    \t\tfor ( SAMRecord r : reads ) {\n    \t\t\t\n    \t\t\tint cnt2 = reads.size() - cnt; // count of inferior alignments\n    \t\t\t\n    \t   \t\tr.setAttribute(\"X0\", new Integer(cnt));   \n        \t\tr.setAttribute(\"X1\", new Integer(cnt2));\n    \t\t\t\n        \t\tif ( cnt2 > 255 ) cnt2 = 255; // otherwise we will be out of bounds in g_log_n\n\n                int nm_attr;\n                Object attr =  r.getAttribute(\"NM\");\n                if ( attr instanceof Short ) nm_attr = ((Short)attr).intValue();\n                else if ( attr instanceof Integer ) nm_attr = ((Integer)attr).intValue();\n                else throw new RuntimeException(\"NM attribute is neither Short nor Integer, don't know what to do.\");\n    \t\t\tif ( nm_attr == minNM ) { \n    \t\t\t\t\n    \t\t\t\t// one of the best alignments:\n\n    \t\t\t\tr.setNotPrimaryAlignmentFlag(false);\n    \t\t\t\tif ( cnt == 1 ) {    \t\t\t\t\t\n    \t\t\t\t\t// single best alignment; additional inferior alignments will only affect mapping qual\n    \t\t\t\t\tr.setMappingQuality( 23 < g_log_n[cnt2] ? 0 : 23 - g_log_n[cnt2] ); // this recipe for Q is copied from bwa\n    \t\t\t\t} else {\n    \t\t\t\t\tr.setMappingQuality(0); // multiple best alignments - mapping quality is 0\n    \t\t\t\t}\n    \t\t\t} else {\n    \t\t\t\t\n    \t\t\t\t// secondary alignment ( we know we hold a better one)\n    \t\t\t\tr.setNotPrimaryAlignmentFlag(true);\n    \t\t\t\tr.setMappingQuality(0); // ??? should we set 0 for secondary??\n    \t\t\t}\n    \t\t}\n    \t}\n    \t\n    }","id":27358,"modified_method":"private void updateCountsAndQuals(Set<SAMRecord> reads) {\n    \tif ( reads.size() == 1 ) {\n    \t\tSAMRecord r = reads.iterator().next();\n \n        \t// technically, if edit distance of the read is equal to max_diff used in alignments, \n        \t// we should have set 25... \n                if ( AlignmentUtils.isReadUnmapped(r) ) {\n                    r.setMappingQuality(0);\n                } else {\n                    r.setMappingQuality(37);\n                    r.setAttribute(\"X0\", new Integer(1));\n                    r.setAttribute(\"X1\", new Integer(0));\n                }\n    \t\tr.setNotPrimaryAlignmentFlag(false);\n    \t\t\n    \t} else {\n    \t\t\n    \t\t// we have multiple alignments for the read\n    \t\t// need to figure out how many best vs inferior alignments are there:\n    \t\tint minNM = 1000000;\n    \t\tint cnt = 0; // count of best alignments\n    \t\tfor ( SAMRecord r : reads ) {\n                Object attr = r.getAttribute(\"NM\");\n                if ( attr == null ) {\n                    return; // can not recompute qualities!\n                }\n    \t\t\tint nm;\n                if ( attr instanceof Short ) nm = ((Short)attr).intValue();\n                else if ( attr instanceof Integer ) nm = ((Integer)attr).intValue();\n                else throw new RuntimeException(\"NM attribute is neither Short nor Integer, don't know what to do.\");\n    \t\t\tif ( nm < minNM  ) { \n    \t\t\t\tminNM = nm;\n    \t\t\t\tcnt = 1;\n    \t\t\t} else if ( nm == minNM ) cnt++;\n    \t\t}\n\n    \t\t// now reset counts and quals:\n    \t\tfor ( SAMRecord r : reads ) {\n    \t\t\t\n    \t\t\tint cnt2 = reads.size() - cnt; // count of inferior alignments\n    \t\t\t\n    \t   \t\tr.setAttribute(\"X0\", new Integer(cnt));   \n        \t\tr.setAttribute(\"X1\", new Integer(cnt2));\n    \t\t\t\n        \t\tif ( cnt2 > 255 ) cnt2 = 255; // otherwise we will be out of bounds in g_log_n\n\n                int nm_attr;\n                Object attr =  r.getAttribute(\"NM\");\n                if ( attr instanceof Short ) nm_attr = ((Short)attr).intValue();\n                else if ( attr instanceof Integer ) nm_attr = ((Integer)attr).intValue();\n                else throw new RuntimeException(\"NM attribute is neither Short nor Integer, don't know what to do.\");\n    \t\t\tif ( nm_attr == minNM ) { \n    \t\t\t\t\n    \t\t\t\t// one of the best alignments:\n\n    \t\t\t\tr.setNotPrimaryAlignmentFlag(false);\n    \t\t\t\tif ( cnt == 1 ) {    \t\t\t\t\t\n    \t\t\t\t\t// single best alignment; additional inferior alignments will only affect mapping qual\n    \t\t\t\t\tr.setMappingQuality( 23 < g_log_n[cnt2] ? 0 : 23 - g_log_n[cnt2] ); // this recipe for Q is copied from bwa\n    \t\t\t\t} else {\n    \t\t\t\t\tr.setMappingQuality(0); // multiple best alignments - mapping quality is 0\n    \t\t\t\t}\n    \t\t\t} else {\n    \t\t\t\t\n    \t\t\t\t// secondary alignment ( we know we hold a better one)\n    \t\t\t\tr.setNotPrimaryAlignmentFlag(true);\n    \t\t\t\tr.setMappingQuality(0); // ??? should we set 0 for secondary??\n    \t\t\t}\n    \t\t}\n    \t}\n    \t\n    }","commit_id":"0721c450c2b30c6fb4363cc044121c4fe9a0724d","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void clean(ReadBin readsToClean) {\n\n        final List<GATKSAMRecord> reads = readsToClean.getReads();\n        if ( reads.size() == 0 )\n            return;\n\n        byte[] reference = readsToClean.getReference(referenceReader);\n        int leftmostIndex = readsToClean.getLocation().getStart();\n\n        final ArrayList<GATKSAMRecord> refReads = new ArrayList<GATKSAMRecord>();                 // reads that perfectly match ref\n        final ArrayList<AlignedRead> altReads = new ArrayList<AlignedRead>();               // reads that don't perfectly match\n        final LinkedList<AlignedRead> altAlignmentsToTest = new LinkedList<AlignedRead>();  // should we try to make an alt consensus from the read?\n        final Set<Consensus> altConsenses = new LinkedHashSet<Consensus>();               // list of alt consenses\n\n        // if there are any known indels for this region, get them and create alternate consenses\n        generateAlternateConsensesFromKnownIndels(altConsenses, leftmostIndex, reference);\n\n        // decide which reads potentially need to be cleaned;\n        // if there are reads with a single indel in them, add that indel to the list of alternate consenses\n        long totalRawMismatchSum = determineReadsThatNeedCleaning(reads, refReads, altReads, altAlignmentsToTest, altConsenses, leftmostIndex, reference);\n\n        // use 'Smith-Waterman' to create alternate consenses from reads that mismatch the reference, using totalRawMismatchSum as the random seed\n        if ( consensusModel == ConsensusDeterminationModel.USE_SW )\n            generateAlternateConsensesFromReads(altAlignmentsToTest, altConsenses, reference, leftmostIndex);\n\n        // if ( debugOn ) System.out.println(\"------\\nChecking consenses...\\n--------\\n\");\n\n        Consensus bestConsensus = null;\n        Iterator<Consensus> iter = altConsenses.iterator();\n\n        while ( iter.hasNext() ) {\n            Consensus consensus = iter.next();\n            //logger.debug(\"Trying new consensus: \" + consensus.cigar + \" \" + new String(consensus.str));\n\n//            if ( DEBUG ) {\n//                System.out.println(\"Checking consensus with alignment at \"+consensus.positionOnReference+\" cigar \"+consensus.cigar);\n//                System.out.println(new String(consensus.str));\n//                int z = 0;\n//                for ( ; z < consensus.positionOnReference; z++ )  System.out.print('.');\n//                for ( z=0 ; z < consensus.cigar.getCigarElement(0).getLength() ; z++ ) System.out.print('.');\n//                if ( consensus.cigar.getCigarElement(1).getOperator() == CigarOperator.I ) for ( z= 0; z < consensus.cigar.getCigarElement(1).getLength(); z++ )  System.out.print('I');\n//                System.out.println();\n//            }\n\n            // if ( debugOn ) System.out.println(\"Consensus: \"+consensus.str);\n\n            for ( int j = 0; j < altReads.size(); j++ ) {\n                AlignedRead toTest = altReads.get(j);\n                Pair<Integer, Integer> altAlignment = findBestOffset(consensus.str, toTest, leftmostIndex);\n\n                // the mismatch score is the min of its alignment vs. the reference and vs. the alternate\n                int myScore = altAlignment.second;\n\n                if ( myScore > toTest.getAlignerMismatchScore() || myScore >= toTest.getMismatchScoreToReference() )\n                    myScore = toTest.getMismatchScoreToReference();\n                // keep track of reads that align better to the alternate consensus.\n                // By pushing alignments with equal scores to the alternate, it means we'll over-call (het -> hom non ref) but are less likely to under-call (het -> ref, het non ref -> het)\n                else\n                    consensus.readIndexes.add(new Pair<Integer, Integer>(j, altAlignment.first));\n\n                //logger.debug(consensus.cigar +  \" vs. \" + toTest.getRead().getReadName() + \"-\" + toTest.getRead().getReadString() + \" => \" + myScore + \" vs. \" + toTest.getMismatchScoreToReference());\n                if ( !toTest.getRead().getDuplicateReadFlag() )\n                    consensus.mismatchSum += myScore;\n\n                // optimization: once the mismatch sum is higher than the best consensus, quit since this one can't win\n                //  THIS MUST BE DISABLED IF WE DECIDE TO ALLOW MORE THAN ONE ALTERNATE CONSENSUS!\n                if ( bestConsensus != null && consensus.mismatchSum > bestConsensus.mismatchSum )\n                    break;\n            }\n\n            //logger.debug(\"Mismatch sum of new consensus: \" + consensus.mismatchSum);\n            if ( bestConsensus == null || bestConsensus.mismatchSum > consensus.mismatchSum) {\n                // we do not need this alt consensus, release memory right away!!\n                if ( bestConsensus != null )\n                    bestConsensus.readIndexes.clear();\n                bestConsensus = consensus;\n                //logger.debug(\"New consensus \" + bestConsensus.cigar +  \" is now best consensus\");\n            } else {\n                // we do not need this alt consensus, release memory right away!!\n                consensus.readIndexes.clear();\n            }\n        }\n\n        // if:\n        // 1) the best alternate consensus has a smaller sum of quality score mismatches than the aligned version of the reads,\n        // 2) beats the LOD threshold for the sum of quality score mismatches of the raw version of the reads,\n        // 3) didn't just move around the mismatching columns (i.e. it actually reduces entropy), \n        // then clean!\n        final double improvement = (bestConsensus == null ? -1 : ((double)(totalRawMismatchSum - bestConsensus.mismatchSum))/10.0);\n        if ( improvement >= LOD_THRESHOLD ) {\n\n            bestConsensus.cigar = AlignmentUtils.leftAlignIndel(bestConsensus.cigar, reference, bestConsensus.str, bestConsensus.positionOnReference, bestConsensus.positionOnReference);\n\n           // start cleaning the appropriate reads\n            for ( Pair<Integer, Integer> indexPair : bestConsensus.readIndexes ) {\n                AlignedRead aRead = altReads.get(indexPair.first);\n                if ( !updateRead(bestConsensus.cigar, bestConsensus.positionOnReference, indexPair.second, aRead, leftmostIndex) )\n                    return;\n            }\n            if ( consensusModel != ConsensusDeterminationModel.KNOWNS_ONLY && !alternateReducesEntropy(altReads, reference, leftmostIndex) ) {\n                if ( statsOutput != null ) {\n                    try {\n                        statsOutput.write(currentInterval.toString());\n                        statsOutput.write(\"\\tFAIL (bad indel)\\t\"); // if improvement > LOD_THRESHOLD *BUT* entropy is not reduced (SNPs still exist)\n                        statsOutput.write(Double.toString(improvement));\n                        statsOutput.write(\"\\n\");\n                        statsOutput.flush();\n                    } catch (Exception e) {\n                        throw new UserException.CouldNotCreateOutputFile(\"statsOutput\", \"Failed to write stats output file\", e);\n                    }\n                }\n            } else {\n                //logger.debug(\"CLEAN: \" + bestConsensus.cigar + \" \" + bestConsensus.str.toString() + \" \" + bestConsensus.cigar.numCigarElements() );\n                if ( indelOutput != null && bestConsensus.cigar.numCigarElements() > 1 ) {\n                    // NOTE: indels are printed out in the format specified for the low-coverage pilot1\n                    //  indel calls (tab-delimited): chr position size type sequence\n                    StringBuilder str = new StringBuilder();\n                    str.append(reads.get(0).getReferenceName());\n                    int position = bestConsensus.positionOnReference + bestConsensus.cigar.getCigarElement(0).getLength();\n                    str.append(\"\\t\" + (leftmostIndex + position - 1));\n                    CigarElement ce = bestConsensus.cigar.getCigarElement(1);\n                    str.append(\"\\t\" + ce.getLength() + \"\\t\" + ce.getOperator() + \"\\t\");\n                    int length = ce.getLength();\n                    if ( ce.getOperator() == CigarOperator.D ) {\n                        for ( int i = 0; i < length; i++)\n                            str.append((char)reference[position+i]);\n                    } else {\n                        for ( int i = 0; i < length; i++)\n                            str.append((char)bestConsensus.str[position+i]);\n                    }\n                    str.append(\"\\t\" + (((double)(totalRawMismatchSum - bestConsensus.mismatchSum))/10.0) + \"\\n\");\n                    try {\n                        indelOutput.write(str.toString());\n                        indelOutput.flush();\n                    } catch (Exception e) {\n                        throw new UserException.CouldNotCreateOutputFile(\"indelOutput\", \"Failed to write indel output file\", e);\n                    }\n                }\n                if ( statsOutput != null ) {\n                    try {\n                        statsOutput.write(currentInterval.toString());\n                        statsOutput.write(\"\\tCLEAN\"); // if improvement > LOD_THRESHOLD *AND* entropy is reduced\n                        if ( bestConsensus.cigar.numCigarElements() > 1 )\n                            statsOutput.write(\" (found indel)\");\n                        statsOutput.write(\"\\t\");\n                        statsOutput.write(Double.toString(improvement));\n                        statsOutput.write(\"\\n\");\n                        statsOutput.flush();\n                    } catch (Exception e) {\n                        throw new UserException.CouldNotCreateOutputFile(\"statsOutput\", \"Failed to write stats output file\", e);\n                    }\n                }\n\n                // finish cleaning the appropriate reads\n                for ( Pair<Integer, Integer> indexPair : bestConsensus.readIndexes ) {\n                    final AlignedRead aRead = altReads.get(indexPair.first);\n                    if ( aRead.finalizeUpdate() ) {\n                        // We need to update the mapping quality score of the cleaned reads;\n                        // however we don't have enough info to use the proper MAQ scoring system.\n                        // For now, we will just arbitrarily add 10 to the mapping quality. [EB, 6/7/2010].\n                        // TODO -- we need a better solution here\n                        GATKSAMRecord read = aRead.getRead();\n                        read.setMappingQuality(Math.min(aRead.getRead().getMappingQuality() + 10, 254));\n\n                        // before we fix the attribute tags we first need to make sure we have enough of the reference sequence\n                        int neededBasesToLeft = leftmostIndex - read.getAlignmentStart();\n                        int neededBasesToRight = read.getAlignmentEnd() - leftmostIndex - reference.length + 1;\n                        int neededBases = Math.max(neededBasesToLeft, neededBasesToRight);\n                        if ( neededBases > 0 ) {\n                            int padLeft = Math.max(leftmostIndex-neededBases, 1);\n                            int padRight = Math.min(leftmostIndex+reference.length+neededBases, referenceReader.getSequenceDictionary().getSequence(currentInterval.getContig()).getSequenceLength());\n                            reference = referenceReader.getSubsequenceAt(currentInterval.getContig(), padLeft, padRight).getBases();\n                            leftmostIndex = padLeft;\n                        }\n\n                        // now, fix the attribute tags\n                        // TODO -- get rid of this try block when Picard does the right thing for reads aligned off the end of the reference\n                        try {\n                            if ( read.getAttribute(SAMTag.NM.name()) != null )\n                                read.setAttribute(SAMTag.NM.name(), SequenceUtil.calculateSamNmTag(read, reference, leftmostIndex-1));\n                            if ( read.getAttribute(SAMTag.UQ.name()) != null )\n                                read.setAttribute(SAMTag.UQ.name(), SequenceUtil.sumQualitiesOfMismatches(read, reference, leftmostIndex-1));\n                        } catch (Exception e) {\n                            // ignore it\n                        }\n                        // TODO -- this is only temporary until Tim adds code to recalculate this value\n                        if ( read.getAttribute(SAMTag.MD.name()) != null )\n                            read.setAttribute(SAMTag.MD.name(), null);\n\n                        // mark that it was actually cleaned\n                        readsActuallyCleaned.add(read);\n                    }\n                }\n            }\n\n            // END IF ( improvement >= LOD_THRESHOLD )\n\n        } else if ( statsOutput != null ) {\n            try {\n                statsOutput.write(String.format(\"%s\\tFAIL\\t%.1f%n\",\n                        currentInterval.toString(), improvement));\n                statsOutput.flush();\n            } catch (Exception e) {\n                throw new UserException.CouldNotCreateOutputFile(\"statsOutput\", \"Failed to write stats output file\", e);\n            }\n        }\n    }","id":27359,"modified_method":"private void clean(ReadBin readsToClean) {\n\n        final List<GATKSAMRecord> reads = readsToClean.getReads();\n        if ( reads.size() == 0 )\n            return;\n\n        byte[] reference = readsToClean.getReference(referenceReader);\n        int leftmostIndex = readsToClean.getLocation().getStart();\n\n        final ArrayList<GATKSAMRecord> refReads = new ArrayList<GATKSAMRecord>();                 // reads that perfectly match ref\n        final ArrayList<AlignedRead> altReads = new ArrayList<AlignedRead>();               // reads that don't perfectly match\n        final LinkedList<AlignedRead> altAlignmentsToTest = new LinkedList<AlignedRead>();  // should we try to make an alt consensus from the read?\n        final Set<Consensus> altConsenses = new LinkedHashSet<Consensus>();               // list of alt consenses\n\n        // if there are any known indels for this region, get them and create alternate consenses\n        generateAlternateConsensesFromKnownIndels(altConsenses, leftmostIndex, reference);\n\n        // decide which reads potentially need to be cleaned;\n        // if there are reads with a single indel in them, add that indel to the list of alternate consenses\n        long totalRawMismatchSum = determineReadsThatNeedCleaning(reads, refReads, altReads, altAlignmentsToTest, altConsenses, leftmostIndex, reference);\n\n        // use 'Smith-Waterman' to create alternate consenses from reads that mismatch the reference, using totalRawMismatchSum as the random seed\n        if ( consensusModel == ConsensusDeterminationModel.USE_SW )\n            generateAlternateConsensesFromReads(altAlignmentsToTest, altConsenses, reference, leftmostIndex);\n\n        // if ( debugOn ) System.out.println(\"------\\nChecking consenses...\\n--------\\n\");\n\n        Consensus bestConsensus = null;\n        Iterator<Consensus> iter = altConsenses.iterator();\n\n        while ( iter.hasNext() ) {\n            Consensus consensus = iter.next();\n            //logger.debug(\"Trying new consensus: \" + consensus.cigar + \" \" + new String(consensus.str));\n\n//            if ( DEBUG ) {\n//                System.out.println(\"Checking consensus with alignment at \"+consensus.positionOnReference+\" cigar \"+consensus.cigar);\n//                System.out.println(new String(consensus.str));\n//                int z = 0;\n//                for ( ; z < consensus.positionOnReference; z++ )  System.out.print('.');\n//                for ( z=0 ; z < consensus.cigar.getCigarElement(0).getLength() ; z++ ) System.out.print('.');\n//                if ( consensus.cigar.getCigarElement(1).getOperator() == CigarOperator.I ) for ( z= 0; z < consensus.cigar.getCigarElement(1).getLength(); z++ )  System.out.print('I');\n//                System.out.println();\n//            }\n\n            // if ( debugOn ) System.out.println(\"Consensus: \"+consensus.str);\n\n            for ( int j = 0; j < altReads.size(); j++ ) {\n                AlignedRead toTest = altReads.get(j);\n                Pair<Integer, Integer> altAlignment = findBestOffset(consensus.str, toTest, leftmostIndex);\n\n                // the mismatch score is the min of its alignment vs. the reference and vs. the alternate\n                int myScore = altAlignment.second;\n\n                if ( myScore > toTest.getAlignerMismatchScore() || myScore >= toTest.getMismatchScoreToReference() )\n                    myScore = toTest.getMismatchScoreToReference();\n                // keep track of reads that align better to the alternate consensus.\n                // By pushing alignments with equal scores to the alternate, it means we'll over-call (het -> hom non ref) but are less likely to under-call (het -> ref, het non ref -> het)\n                else\n                    consensus.readIndexes.add(new Pair<Integer, Integer>(j, altAlignment.first));\n\n                //logger.debug(consensus.cigar +  \" vs. \" + toTest.getRead().getReadName() + \"-\" + toTest.getRead().getReadString() + \" => \" + myScore + \" vs. \" + toTest.getMismatchScoreToReference());\n                if ( !toTest.getRead().getDuplicateReadFlag() )\n                    consensus.mismatchSum += myScore;\n\n                // optimization: once the mismatch sum is higher than the best consensus, quit since this one can't win\n                //  THIS MUST BE DISABLED IF WE DECIDE TO ALLOW MORE THAN ONE ALTERNATE CONSENSUS!\n                if ( bestConsensus != null && consensus.mismatchSum > bestConsensus.mismatchSum )\n                    break;\n            }\n\n            //logger.debug(\"Mismatch sum of new consensus: \" + consensus.mismatchSum);\n            if ( bestConsensus == null || bestConsensus.mismatchSum > consensus.mismatchSum) {\n                // we do not need this alt consensus, release memory right away!!\n                if ( bestConsensus != null )\n                    bestConsensus.readIndexes.clear();\n                bestConsensus = consensus;\n                //logger.debug(\"New consensus \" + bestConsensus.cigar +  \" is now best consensus\");\n            } else {\n                // we do not need this alt consensus, release memory right away!!\n                consensus.readIndexes.clear();\n            }\n        }\n\n        // if:\n        // 1) the best alternate consensus has a smaller sum of quality score mismatches than the aligned version of the reads,\n        // 2) beats the LOD threshold for the sum of quality score mismatches of the raw version of the reads,\n        // 3) didn't just move around the mismatching columns (i.e. it actually reduces entropy), \n        // then clean!\n        final double improvement = (bestConsensus == null ? -1 : ((double)(totalRawMismatchSum - bestConsensus.mismatchSum))/10.0);\n        if ( improvement >= LOD_THRESHOLD ) {\n\n            bestConsensus.cigar = AlignmentUtils.leftAlignIndel(bestConsensus.cigar, reference, bestConsensus.str, bestConsensus.positionOnReference, bestConsensus.positionOnReference);\n\n           // start cleaning the appropriate reads\n            for ( Pair<Integer, Integer> indexPair : bestConsensus.readIndexes ) {\n                AlignedRead aRead = altReads.get(indexPair.first);\n                if ( !updateRead(bestConsensus.cigar, bestConsensus.positionOnReference, indexPair.second, aRead, leftmostIndex) )\n                    return;\n            }\n            if ( consensusModel != ConsensusDeterminationModel.KNOWNS_ONLY && !alternateReducesEntropy(altReads, reference, leftmostIndex) ) {\n                if ( statsOutput != null ) {\n                    try {\n                        statsOutput.write(currentInterval.toString());\n                        statsOutput.write(\"\\tFAIL (bad indel)\\t\"); // if improvement > LOD_THRESHOLD *BUT* entropy is not reduced (SNPs still exist)\n                        statsOutput.write(Double.toString(improvement));\n                        statsOutput.write(\"\\n\");\n                        statsOutput.flush();\n                    } catch (Exception e) {\n                        throw new UserException.CouldNotCreateOutputFile(\"statsOutput\", \"Failed to write stats output file\", e);\n                    }\n                }\n            } else {\n                //logger.debug(\"CLEAN: \" + bestConsensus.cigar + \" \" + bestConsensus.str.toString() + \" \" + bestConsensus.cigar.numCigarElements() );\n                if ( indelOutput != null && bestConsensus.cigar.numCigarElements() > 1 ) {\n                    // NOTE: indels are printed out in the format specified for the low-coverage pilot1\n                    //  indel calls (tab-delimited): chr position size type sequence\n                    StringBuilder str = new StringBuilder();\n                    str.append(reads.get(0).getReferenceName());\n                    int position = bestConsensus.positionOnReference + bestConsensus.cigar.getCigarElement(0).getLength();\n                    str.append(\"\\t\" + (leftmostIndex + position - 1));\n                    CigarElement ce = bestConsensus.cigar.getCigarElement(1);\n                    str.append(\"\\t\" + ce.getLength() + \"\\t\" + ce.getOperator() + \"\\t\");\n                    int length = ce.getLength();\n                    if ( ce.getOperator() == CigarOperator.D ) {\n                        for ( int i = 0; i < length; i++)\n                            str.append((char)reference[position+i]);\n                    } else {\n                        for ( int i = 0; i < length; i++)\n                            str.append((char)bestConsensus.str[position+i]);\n                    }\n                    str.append(\"\\t\" + (((double)(totalRawMismatchSum - bestConsensus.mismatchSum))/10.0) + \"\\n\");\n                    try {\n                        indelOutput.write(str.toString());\n                        indelOutput.flush();\n                    } catch (Exception e) {\n                        throw new UserException.CouldNotCreateOutputFile(\"indelOutput\", \"Failed to write indel output file\", e);\n                    }\n                }\n                if ( statsOutput != null ) {\n                    try {\n                        statsOutput.write(currentInterval.toString());\n                        statsOutput.write(\"\\tCLEAN\"); // if improvement > LOD_THRESHOLD *AND* entropy is reduced\n                        if ( bestConsensus.cigar.numCigarElements() > 1 )\n                            statsOutput.write(\" (found indel)\");\n                        statsOutput.write(\"\\t\");\n                        statsOutput.write(Double.toString(improvement));\n                        statsOutput.write(\"\\n\");\n                        statsOutput.flush();\n                    } catch (Exception e) {\n                        throw new UserException.CouldNotCreateOutputFile(\"statsOutput\", \"Failed to write stats output file\", e);\n                    }\n                }\n\n                // finish cleaning the appropriate reads\n                for ( Pair<Integer, Integer> indexPair : bestConsensus.readIndexes ) {\n                    final AlignedRead aRead = altReads.get(indexPair.first);\n                    if ( aRead.finalizeUpdate() ) {\n                        // We need to update the mapping quality score of the cleaned reads;\n                        // however we don't have enough info to use the proper MAQ scoring system.\n                        // For now, we will just arbitrarily add 10 to the mapping quality. [EB, 6/7/2010].\n                        // TODO -- we need a better solution here\n                        GATKSAMRecord read = aRead.getRead();\n                        if ( read.getMappingQuality() != 255 ) // 255 == Unknown, so don't modify it\n                            read.setMappingQuality(Math.min(aRead.getRead().getMappingQuality() + 10, 254));\n\n                        // before we fix the attribute tags we first need to make sure we have enough of the reference sequence\n                        int neededBasesToLeft = leftmostIndex - read.getAlignmentStart();\n                        int neededBasesToRight = read.getAlignmentEnd() - leftmostIndex - reference.length + 1;\n                        int neededBases = Math.max(neededBasesToLeft, neededBasesToRight);\n                        if ( neededBases > 0 ) {\n                            int padLeft = Math.max(leftmostIndex-neededBases, 1);\n                            int padRight = Math.min(leftmostIndex+reference.length+neededBases, referenceReader.getSequenceDictionary().getSequence(currentInterval.getContig()).getSequenceLength());\n                            reference = referenceReader.getSubsequenceAt(currentInterval.getContig(), padLeft, padRight).getBases();\n                            leftmostIndex = padLeft;\n                        }\n\n                        // now, fix the attribute tags\n                        // TODO -- get rid of this try block when Picard does the right thing for reads aligned off the end of the reference\n                        try {\n                            if ( read.getAttribute(SAMTag.NM.name()) != null )\n                                read.setAttribute(SAMTag.NM.name(), SequenceUtil.calculateSamNmTag(read, reference, leftmostIndex-1));\n                            if ( read.getAttribute(SAMTag.UQ.name()) != null )\n                                read.setAttribute(SAMTag.UQ.name(), SequenceUtil.sumQualitiesOfMismatches(read, reference, leftmostIndex-1));\n                        } catch (Exception e) {\n                            // ignore it\n                        }\n                        // TODO -- this is only temporary until Tim adds code to recalculate this value\n                        if ( read.getAttribute(SAMTag.MD.name()) != null )\n                            read.setAttribute(SAMTag.MD.name(), null);\n\n                        // mark that it was actually cleaned\n                        readsActuallyCleaned.add(read);\n                    }\n                }\n            }\n\n            // END IF ( improvement >= LOD_THRESHOLD )\n\n        } else if ( statsOutput != null ) {\n            try {\n                statsOutput.write(String.format(\"%s\\tFAIL\\t%.1f%n\",\n                        currentInterval.toString(), improvement));\n                statsOutput.flush();\n            } catch (Exception e) {\n                throw new UserException.CouldNotCreateOutputFile(\"statsOutput\", \"Failed to write stats output file\", e);\n            }\n        }\n    }","commit_id":"90a053ea935ea6868008bacc9b6d96cf8dd3644a","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void clean(ReadBin readsToClean) {\n\n        final List<SAMRecord> reads = readsToClean.getReads();\n        if ( reads.size() == 0 )\n            return;\n\n        final byte[] reference = readsToClean.getReference(referenceReader);\n        final long leftmostIndex = readsToClean.getLocation().getStart();\n\n        final ArrayList<SAMRecord> refReads = new ArrayList<SAMRecord>();                   // reads that perfectly match ref\n        final ArrayList<AlignedRead> altReads = new ArrayList<AlignedRead>();               // reads that don't perfectly match\n        final LinkedList<AlignedRead> altAlignmentsToTest = new LinkedList<AlignedRead>();  // should we try to make an alt consensus from the read?\n        final Set<Consensus> altConsenses = new LinkedHashSet<Consensus>();                 // list of alt consenses\n\n        // if there are any known indels for this region, get them and create alternate consenses\n        generateAlternateConsensesFromKnownIndels(altConsenses, leftmostIndex, reference);\n\n        // decide which reads potentially need to be cleaned;\n        // if there are reads with a single indel in them, add that indel to the list of alternate consenses\n        long totalRawMismatchSum = determineReadsThatNeedCleaning(reads, refReads, altReads, altAlignmentsToTest, altConsenses, leftmostIndex, reference);\n\n        // use 'Smith-Waterman' to create alternate consenses from reads that mismatch the reference\n        if ( !USE_KNOWN_INDELS_ONLY )\n            generateAlternateConsensesFromReads(altAlignmentsToTest, altConsenses, reference);\n\n        // if ( debugOn ) System.out.println(\"------\\nChecking consenses...\\n--------\\n\");\n\n        Consensus bestConsensus = null;\n        Iterator<Consensus> iter = altConsenses.iterator();\n\n        while ( iter.hasNext() ) {\n            Consensus consensus = iter.next();\n            //logger.debug(\"Trying new consensus: \" + consensus.cigar + \" \" + new String(consensus.str));\n\n//            if ( DEBUG ) {\n//                System.out.println(\"Checking consensus with alignment at \"+consensus.positionOnReference+\" cigar \"+consensus.cigar);\n//                System.out.println(new String(consensus.str));\n//                int z = 0;\n//                for ( ; z < consensus.positionOnReference; z++ )  System.out.print('.');\n//                for ( z=0 ; z < consensus.cigar.getCigarElement(0).getLength() ; z++ ) System.out.print('.');\n//                if ( consensus.cigar.getCigarElement(1).getOperator() == CigarOperator.I ) for ( z= 0; z < consensus.cigar.getCigarElement(1).getLength(); z++ )  System.out.print('I');\n//                System.out.println();\n//            }\n\n            // if ( debugOn ) System.out.println(\"Consensus: \"+consensus.str);\n\n            for ( int j = 0; j < altReads.size(); j++ ) {\n                AlignedRead toTest = altReads.get(j);\n                Pair<Integer, Integer> altAlignment = findBestOffset(consensus.str, toTest, (int)leftmostIndex);\n\n                // the mismatch score is the min of its alignment vs. the reference and vs. the alternate\n                int myScore = altAlignment.second;\n\n                if ( myScore > toTest.getAlignerMismatchScore() || myScore >= toTest.getMismatchScoreToReference() )\n                    myScore = toTest.getMismatchScoreToReference();\n                // keep track of reads that align better to the alternate consensus.\n                // By pushing alignments with equal scores to the alternate, it means we'll over-call (het -> hom non ref) but are less likely to under-call (het -> ref, het non ref -> het)\n                else\n                    consensus.readIndexes.add(new Pair<Integer, Integer>(j, altAlignment.first));\n\n                //logger.debug(consensus.cigar +  \" vs. \" + toTest.getRead().getReadName() + \"-\" + toTest.getRead().getReadString() + \" => \" + myScore + \" vs. \" + toTest.getMismatchScoreToReference());\n                if ( !toTest.getRead().getDuplicateReadFlag() )\n                    consensus.mismatchSum += myScore;\n\n                // optimization: once the mismatch sum is higher than the best consensus, quit since this one can't win\n                //  THIS MUST BE DISABLED IF WE DECIDE TO ALLOW MORE THAN ONE ALTERNATE CONSENSUS!\n                if ( bestConsensus != null && consensus.mismatchSum > bestConsensus.mismatchSum )\n                    break;\n            }\n\n            //logger.debug(\"Mismatch sum of new consensus: \" + consensus.mismatchSum);\n            if ( bestConsensus == null || bestConsensus.mismatchSum > consensus.mismatchSum) {\n                // we do not need this alt consensus, release memory right away!!\n                if ( bestConsensus != null )\n                    bestConsensus.readIndexes.clear();\n                bestConsensus = consensus;\n                //logger.debug(\"New consensus \" + bestConsensus.cigar +  \" is now best consensus\");\n            } else {\n                // we do not need this alt consensus, release memory right away!!\n                consensus.readIndexes.clear();\n            }\n        }\n\n        // if:\n        // 1) the best alternate consensus has a smaller sum of quality score mismatches than the aligned version of the reads,\n        // 2) beats the LOD threshold for the sum of quality score mismatches of the raw version of the reads,\n        // 3) didn't just move around the mismatching columns (i.e. it actually reduces entropy), \n        // then clean!\n        final double improvement = (bestConsensus == null ? -1 : ((double)(totalRawMismatchSum - bestConsensus.mismatchSum))/10.0);\n        if ( improvement >= LOD_THRESHOLD ) {\n\n            bestConsensus.cigar = AlignmentUtils.leftAlignIndel(bestConsensus.cigar, reference, bestConsensus.str, bestConsensus.positionOnReference, bestConsensus.positionOnReference);\n\n           // start cleaning the appropriate reads\n            for ( Pair<Integer, Integer> indexPair : bestConsensus.readIndexes ) {\n                AlignedRead aRead = altReads.get(indexPair.first);\n                if ( !updateRead(bestConsensus.cigar, bestConsensus.positionOnReference, indexPair.second, aRead, (int)leftmostIndex) )\n                    return;\n            }\n            if ( !USE_KNOWN_INDELS_ONLY && !alternateReducesEntropy(altReads, reference, leftmostIndex) ) {\n                if ( statsOutput != null ) {\n                    try {\n                        statsOutput.write(currentInterval.toString());\n                        statsOutput.write(\"\\tFAIL (bad indel)\\t\"); // if improvement > LOD_THRESHOLD *BUT* entropy is not reduced (SNPs still exist)\n                        statsOutput.write(Double.toString(improvement));\n                        statsOutput.write(\"\\n\");\n                        statsOutput.flush();\n                    } catch (Exception e) {\n                        throw new StingException(e.getMessage());\n                    }\n                }\n            } else {\n                //logger.debug(\"CLEAN: \" + bestConsensus.cigar + \" \" + bestConsensus.str.toString() + \" \" + bestConsensus.cigar.numCigarElements() );\n                if ( indelOutput != null && bestConsensus.cigar.numCigarElements() > 1 ) {\n                    // NOTE: indels are printed out in the format specified for the low-coverage pilot1\n                    //  indel calls (tab-delimited): chr position size type sequence\n                    StringBuilder str = new StringBuilder();\n                    str.append(reads.get(0).getReferenceName());\n                    int position = bestConsensus.positionOnReference + bestConsensus.cigar.getCigarElement(0).getLength();\n                    str.append(\"\\t\" + (leftmostIndex + position - 1));\n                    CigarElement ce = bestConsensus.cigar.getCigarElement(1);\n                    str.append(\"\\t\" + ce.getLength() + \"\\t\" + ce.getOperator() + \"\\t\");\n                    int length = ce.getLength();\n                    if ( ce.getOperator() == CigarOperator.D ) {\n                        for ( int i = 0; i < length; i++)\n                            str.append((char)reference[position+i]);\n                    } else {\n                        for ( int i = 0; i < length; i++)\n                            str.append((char)bestConsensus.str[position+i]);\n                    }\n                    str.append(\"\\t\" + (((double)(totalRawMismatchSum - bestConsensus.mismatchSum))/10.0) + \"\\n\");\n                    try {\n                        indelOutput.write(str.toString());\n                        indelOutput.flush();\n                    } catch (Exception e) {\n                        throw new StingException(e.getMessage());\n                    }\n                }\n                if ( statsOutput != null ) {\n                    try {\n                        statsOutput.write(currentInterval.toString());\n                        statsOutput.write(\"\\tCLEAN\"); // if improvement > LOD_THRESHOLD *AND* entropy is reduced\n                        if ( bestConsensus.cigar.numCigarElements() > 1 )\n                            statsOutput.write(\" (found indel)\");\n                        statsOutput.write(\"\\t\");\n                        statsOutput.write(Double.toString(improvement));\n                        statsOutput.write(\"\\n\");\n                        statsOutput.flush();\n                    } catch (Exception e) {\n                        throw new StingException(e.getMessage());\n                    }\n                }\n\n                // finish cleaning the appropriate reads\n                for ( Pair<Integer, Integer> indexPair : bestConsensus.readIndexes ) {\n                    final AlignedRead aRead = altReads.get(indexPair.first);\n                    if ( aRead.finalizeUpdate() ) {\n                        // We need to update the mapping quality score of the cleaned reads;\n                        // however we don't have enough info to use the proper MAQ scoring system.\n                        // For now, we will just arbitrarily add 10 to the mapping quality. [EB, 6/7/2010].\n                        // TODO -- we need a better solution here\n                        aRead.getRead().setMappingQuality(Math.min(aRead.getRead().getMappingQuality() + 10, 254));\n                        aRead.getRead().setAttribute(\"NM\", AlignmentUtils.numMismatches(aRead.getRead(), reference, aRead.getRead().getAlignmentStart()-(int)leftmostIndex));\n                    }\n                }\n            }\n\n            // END IF ( improvement >= LOD_THRESHOLD )\n\n        } else if ( statsOutput != null ) {\n            try {\n                statsOutput.write(String.format(\"%s\\tFAIL\\t%.1f%n\",\n                        currentInterval.toString(), improvement));\n                statsOutput.flush();\n            } catch (Exception e) {\n                throw new StingException(e.getMessage());\n            }\n        }\n    }","id":27360,"modified_method":"private void clean(ReadBin readsToClean) {\n\n        final List<SAMRecord> reads = readsToClean.getReads();\n        if ( reads.size() == 0 )\n            return;\n\n        final byte[] reference = readsToClean.getReference(referenceReader);\n        final long leftmostIndex = readsToClean.getLocation().getStart();\n\n        final ArrayList<SAMRecord> refReads = new ArrayList<SAMRecord>();                   // reads that perfectly match ref\n        final ArrayList<AlignedRead> altReads = new ArrayList<AlignedRead>();               // reads that don't perfectly match\n        final LinkedList<AlignedRead> altAlignmentsToTest = new LinkedList<AlignedRead>();  // should we try to make an alt consensus from the read?\n        final Set<Consensus> altConsenses = new LinkedHashSet<Consensus>();                 // list of alt consenses\n\n        // if there are any known indels for this region, get them and create alternate consenses\n        generateAlternateConsensesFromKnownIndels(altConsenses, leftmostIndex, reference);\n\n        // decide which reads potentially need to be cleaned;\n        // if there are reads with a single indel in them, add that indel to the list of alternate consenses\n        long totalRawMismatchSum = determineReadsThatNeedCleaning(reads, refReads, altReads, altAlignmentsToTest, altConsenses, leftmostIndex, reference);\n\n        // use 'Smith-Waterman' to create alternate consenses from reads that mismatch the reference\n        if ( !USE_KNOWN_INDELS_ONLY )\n            generateAlternateConsensesFromReads(altAlignmentsToTest, altConsenses, reference);\n\n        // if ( debugOn ) System.out.println(\"------\\nChecking consenses...\\n--------\\n\");\n\n        Consensus bestConsensus = null;\n        Iterator<Consensus> iter = altConsenses.iterator();\n\n        while ( iter.hasNext() ) {\n            Consensus consensus = iter.next();\n            //logger.debug(\"Trying new consensus: \" + consensus.cigar + \" \" + new String(consensus.str));\n\n//            if ( DEBUG ) {\n//                System.out.println(\"Checking consensus with alignment at \"+consensus.positionOnReference+\" cigar \"+consensus.cigar);\n//                System.out.println(new String(consensus.str));\n//                int z = 0;\n//                for ( ; z < consensus.positionOnReference; z++ )  System.out.print('.');\n//                for ( z=0 ; z < consensus.cigar.getCigarElement(0).getLength() ; z++ ) System.out.print('.');\n//                if ( consensus.cigar.getCigarElement(1).getOperator() == CigarOperator.I ) for ( z= 0; z < consensus.cigar.getCigarElement(1).getLength(); z++ )  System.out.print('I');\n//                System.out.println();\n//            }\n\n            // if ( debugOn ) System.out.println(\"Consensus: \"+consensus.str);\n\n            for ( int j = 0; j < altReads.size(); j++ ) {\n                AlignedRead toTest = altReads.get(j);\n                Pair<Integer, Integer> altAlignment = findBestOffset(consensus.str, toTest, (int)leftmostIndex);\n\n                // the mismatch score is the min of its alignment vs. the reference and vs. the alternate\n                int myScore = altAlignment.second;\n\n                if ( myScore > toTest.getAlignerMismatchScore() || myScore >= toTest.getMismatchScoreToReference() )\n                    myScore = toTest.getMismatchScoreToReference();\n                // keep track of reads that align better to the alternate consensus.\n                // By pushing alignments with equal scores to the alternate, it means we'll over-call (het -> hom non ref) but are less likely to under-call (het -> ref, het non ref -> het)\n                else\n                    consensus.readIndexes.add(new Pair<Integer, Integer>(j, altAlignment.first));\n\n                //logger.debug(consensus.cigar +  \" vs. \" + toTest.getRead().getReadName() + \"-\" + toTest.getRead().getReadString() + \" => \" + myScore + \" vs. \" + toTest.getMismatchScoreToReference());\n                if ( !toTest.getRead().getDuplicateReadFlag() )\n                    consensus.mismatchSum += myScore;\n\n                // optimization: once the mismatch sum is higher than the best consensus, quit since this one can't win\n                //  THIS MUST BE DISABLED IF WE DECIDE TO ALLOW MORE THAN ONE ALTERNATE CONSENSUS!\n                if ( bestConsensus != null && consensus.mismatchSum > bestConsensus.mismatchSum )\n                    break;\n            }\n\n            //logger.debug(\"Mismatch sum of new consensus: \" + consensus.mismatchSum);\n            if ( bestConsensus == null || bestConsensus.mismatchSum > consensus.mismatchSum) {\n                // we do not need this alt consensus, release memory right away!!\n                if ( bestConsensus != null )\n                    bestConsensus.readIndexes.clear();\n                bestConsensus = consensus;\n                //logger.debug(\"New consensus \" + bestConsensus.cigar +  \" is now best consensus\");\n            } else {\n                // we do not need this alt consensus, release memory right away!!\n                consensus.readIndexes.clear();\n            }\n        }\n\n        // if:\n        // 1) the best alternate consensus has a smaller sum of quality score mismatches than the aligned version of the reads,\n        // 2) beats the LOD threshold for the sum of quality score mismatches of the raw version of the reads,\n        // 3) didn't just move around the mismatching columns (i.e. it actually reduces entropy), \n        // then clean!\n        final double improvement = (bestConsensus == null ? -1 : ((double)(totalRawMismatchSum - bestConsensus.mismatchSum))/10.0);\n        if ( improvement >= LOD_THRESHOLD ) {\n\n            bestConsensus.cigar = AlignmentUtils.leftAlignIndel(bestConsensus.cigar, reference, bestConsensus.str, bestConsensus.positionOnReference, bestConsensus.positionOnReference);\n\n           // start cleaning the appropriate reads\n            for ( Pair<Integer, Integer> indexPair : bestConsensus.readIndexes ) {\n                AlignedRead aRead = altReads.get(indexPair.first);\n                if ( !updateRead(bestConsensus.cigar, bestConsensus.positionOnReference, indexPair.second, aRead, (int)leftmostIndex) )\n                    return;\n            }\n            if ( !USE_KNOWN_INDELS_ONLY && !alternateReducesEntropy(altReads, reference, leftmostIndex) ) {\n                if ( statsOutput != null ) {\n                    try {\n                        statsOutput.write(currentInterval.toString());\n                        statsOutput.write(\"\\tFAIL (bad indel)\\t\"); // if improvement > LOD_THRESHOLD *BUT* entropy is not reduced (SNPs still exist)\n                        statsOutput.write(Double.toString(improvement));\n                        statsOutput.write(\"\\n\");\n                        statsOutput.flush();\n                    } catch (Exception e) {\n                        throw new StingException(e.getMessage());\n                    }\n                }\n            } else {\n                //logger.debug(\"CLEAN: \" + bestConsensus.cigar + \" \" + bestConsensus.str.toString() + \" \" + bestConsensus.cigar.numCigarElements() );\n                if ( indelOutput != null && bestConsensus.cigar.numCigarElements() > 1 ) {\n                    // NOTE: indels are printed out in the format specified for the low-coverage pilot1\n                    //  indel calls (tab-delimited): chr position size type sequence\n                    StringBuilder str = new StringBuilder();\n                    str.append(reads.get(0).getReferenceName());\n                    int position = bestConsensus.positionOnReference + bestConsensus.cigar.getCigarElement(0).getLength();\n                    str.append(\"\\t\" + (leftmostIndex + position - 1));\n                    CigarElement ce = bestConsensus.cigar.getCigarElement(1);\n                    str.append(\"\\t\" + ce.getLength() + \"\\t\" + ce.getOperator() + \"\\t\");\n                    int length = ce.getLength();\n                    if ( ce.getOperator() == CigarOperator.D ) {\n                        for ( int i = 0; i < length; i++)\n                            str.append((char)reference[position+i]);\n                    } else {\n                        for ( int i = 0; i < length; i++)\n                            str.append((char)bestConsensus.str[position+i]);\n                    }\n                    str.append(\"\\t\" + (((double)(totalRawMismatchSum - bestConsensus.mismatchSum))/10.0) + \"\\n\");\n                    try {\n                        indelOutput.write(str.toString());\n                        indelOutput.flush();\n                    } catch (Exception e) {\n                        throw new StingException(e.getMessage());\n                    }\n                }\n                if ( statsOutput != null ) {\n                    try {\n                        statsOutput.write(currentInterval.toString());\n                        statsOutput.write(\"\\tCLEAN\"); // if improvement > LOD_THRESHOLD *AND* entropy is reduced\n                        if ( bestConsensus.cigar.numCigarElements() > 1 )\n                            statsOutput.write(\" (found indel)\");\n                        statsOutput.write(\"\\t\");\n                        statsOutput.write(Double.toString(improvement));\n                        statsOutput.write(\"\\n\");\n                        statsOutput.flush();\n                    } catch (Exception e) {\n                        throw new StingException(e.getMessage());\n                    }\n                }\n\n                // finish cleaning the appropriate reads\n                for ( Pair<Integer, Integer> indexPair : bestConsensus.readIndexes ) {\n                    final AlignedRead aRead = altReads.get(indexPair.first);\n                    if ( aRead.finalizeUpdate() ) {\n                        // We need to update the mapping quality score of the cleaned reads;\n                        // however we don't have enough info to use the proper MAQ scoring system.\n                        // For now, we will just arbitrarily add 10 to the mapping quality. [EB, 6/7/2010].\n                        // TODO -- we need a better solution here\n                        SAMRecord read = aRead.getRead();\n                        read.setMappingQuality(Math.min(aRead.getRead().getMappingQuality() + 10, 254));\n\n                        // fix the attribute tags\n                        if ( read.getAttribute(SAMTag.NM.name()) != null )\n                            read.setAttribute(\"NM\", SequenceUtil.calculateSamNmTag(read, reference, (int)leftmostIndex-1));\n                        if ( read.getAttribute(SAMTag.UQ.name()) != null )\n                            read.setAttribute(\"UQ\", SequenceUtil.sumQualitiesOfMismatches(read, reference, (int)leftmostIndex-1));\n                    }\n                }\n            }\n\n            // END IF ( improvement >= LOD_THRESHOLD )\n\n        } else if ( statsOutput != null ) {\n            try {\n                statsOutput.write(String.format(\"%s\\tFAIL\\t%.1f%n\",\n                        currentInterval.toString(), improvement));\n                statsOutput.flush();\n            } catch (Exception e) {\n                throw new StingException(e.getMessage());\n            }\n        }\n    }","commit_id":"65edbced365303147b88e1c5e58a23b6e1416023","url":"https://github.com/broadgsa/gatk"},{"original_method":"public boolean finalizeUpdate() {\n            // if we haven't made any changes, don't do anything\n            if ( newCigar == null )\n                return false;\n            if ( newStart == -1 )\n                newStart = read.getAlignmentStart();\n\n            // annotate the record with the original cigar (and optionally the alignment start)\n            if ( !NO_ORIGINAL_ALIGNMENT_TAGS ) {\n                read.setAttribute(ORIGINAL_CIGAR_TAG, read.getCigar().toString());\n                if ( newStart != read.getAlignmentStart() )\n                    read.setAttribute(ORIGINAL_POSITION_TAG, read.getAlignmentStart());\n            }\n            \n            // if it's a paired end read, we need to update the insert size\n            if ( read.getReadPairedFlag() ) {\n                int insertSize = read.getInferredInsertSize();\n                if ( insertSize > 0 ) {\n                    read.setCigar(newCigar);\n                    read.setInferredInsertSize(insertSize + read.getAlignmentStart() - newStart);\n                    read.setAlignmentStart(newStart);\n                } else {\n                    // note that the correct order of actions is crucial here (we can't set the new cigar too early)\n                    int oldEnd = read.getAlignmentEnd();\n                    read.setCigar(newCigar);\n                    read.setAlignmentStart(newStart);\n                    read.setInferredInsertSize(insertSize + oldEnd - read.getAlignmentEnd());\n                }\n            } else {\n                read.setCigar(newCigar);\n                read.setAlignmentStart(newStart);\n            }\n            return true;\n        }","id":27361,"modified_method":"public boolean finalizeUpdate() {\n            // if we haven't made any changes, don't do anything\n            if ( newCigar == null )\n                return false;\n            if ( newStart == -1 )\n                newStart = read.getAlignmentStart();\n\n            // annotate the record with the original cigar (and optionally the alignment start)\n            if ( !NO_ORIGINAL_ALIGNMENT_TAGS ) {\n                read.setAttribute(ORIGINAL_CIGAR_TAG, read.getCigar().toString());\n                if ( newStart != read.getAlignmentStart() )\n                    read.setAttribute(ORIGINAL_POSITION_TAG, read.getAlignmentStart());\n            }\n\n            read.setCigar(newCigar);\n            read.setAlignmentStart(newStart);\n\n            return true;\n        }","commit_id":"65edbced365303147b88e1c5e58a23b6e1416023","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Test\n    public void testRealignerKnownsOnly() {\n        String[] md5s = {\"70b657dcb654bd2c84c38d654c5af697\", \"74652bd8240291293ec921f8ecfa1622\"};\n        WalkerTestSpec spec = new WalkerTestSpec(\n                \"-T IndelRealigner -noPG -LOD 1.0 -R \" + b36KGReference + \" -I \" + validationDataLocation + \"NA12878.chrom1.SLX.SRP000032.2009_06.bam -L 1:10023000-10076000 -compress 1 -targetIntervals \" + validationDataLocation + \"NA12878.indels.intervals -B:knownIndels,VCF \" + validationDataLocation + \"NA12878.indels.vcf4 -o %s -stats %s --sortInCoordinateOrderEvenThoughItIsHighlyUnsafe -knownsOnly\",\n                 2,\n                 Arrays.asList(md5s));\n        executeTest(\"test realigner known indels only\", spec);\n    }","id":27362,"modified_method":"@Test\n    public void testRealignerKnownsOnly() {\n        String[] md5s = {\"dc2fe2856840b12a34bb57de2ca71cd0\", \"74652bd8240291293ec921f8ecfa1622\"};\n        WalkerTestSpec spec = new WalkerTestSpec(\n                \"-T IndelRealigner -noPG -LOD 1.0 -R \" + b36KGReference + \" -I \" + validationDataLocation + \"NA12878.chrom1.SLX.SRP000032.2009_06.bam -L 1:10023000-10076000 -compress 1 -targetIntervals \" + validationDataLocation + \"NA12878.indels.intervals -B:knownIndels,VCF \" + validationDataLocation + \"NA12878.indels.vcf4 -o %s -stats %s --sortInCoordinateOrderEvenThoughItIsHighlyUnsafe -knownsOnly\",\n                 2,\n                 Arrays.asList(md5s));\n        executeTest(\"test realigner known indels only\", spec);\n    }","commit_id":"65edbced365303147b88e1c5e58a23b6e1416023","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Test\n    public void testRealignerLod5() {\n        String[] md5s = {\"ecff0ce35feb839b6346197db455bbdf\", \"c4ef635f2597b12b93a73199f07e509b\"};\n        WalkerTestSpec spec = new WalkerTestSpec(\n                \"-T IndelRealigner -noPG -LOD 5 -maxConsensuses 100 -greedy 100 -R \" + b36KGReference + \" -I \" + validationDataLocation + \"NA12878.chrom1.SLX.SRP000032.2009_06.bam -L 1:10023000-10030000 -compress 1 -targetIntervals \" + validationDataLocation + \"cleaner.test.intervals -o %s -stats %s --sortInCoordinateOrderEvenThoughItIsHighlyUnsafe\",\n                 2,\n                 Arrays.asList(md5s));\n        executeTest(\"test realigner lod5\", spec);\n    }","id":27363,"modified_method":"@Test\n    public void testRealignerLod5() {\n        String[] md5s = {\"2265e03ed1a2290e60208559925c30ef\", \"c4ef635f2597b12b93a73199f07e509b\"};\n        WalkerTestSpec spec = new WalkerTestSpec(\n                \"-T IndelRealigner -noPG -LOD 5 -maxConsensuses 100 -greedy 100 -R \" + b36KGReference + \" -I \" + validationDataLocation + \"NA12878.chrom1.SLX.SRP000032.2009_06.bam -L 1:10023000-10030000 -compress 1 -targetIntervals \" + validationDataLocation + \"cleaner.test.intervals -o %s -stats %s --sortInCoordinateOrderEvenThoughItIsHighlyUnsafe\",\n                 2,\n                 Arrays.asList(md5s));\n        executeTest(\"test realigner lod5\", spec);\n    }","commit_id":"65edbced365303147b88e1c5e58a23b6e1416023","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Test\n    public void testRealignerLod50() {\n        String[] md5s = {\"ecff0ce35feb839b6346197db455bbdf\", \"3735a510513b6fa4161d92155e026283\"};\n        WalkerTestSpec spec = new WalkerTestSpec(\n                \"-T IndelRealigner -noPG -LOD 50 -maxConsensuses 100 -greedy 100 -R \" + b36KGReference + \" -I \" + validationDataLocation + \"NA12878.chrom1.SLX.SRP000032.2009_06.bam -L 1:10023000-10030000 -compress 1 -targetIntervals \" + validationDataLocation + \"cleaner.test.intervals -o %s -stats %s --sortInCoordinateOrderEvenThoughItIsHighlyUnsafe\",\n                 2,\n                 Arrays.asList(md5s));\n        executeTest(\"test realigner lod50\", spec);\n    }","id":27364,"modified_method":"@Test\n    public void testRealignerLod50() {\n        String[] md5s = {\"2265e03ed1a2290e60208559925c30ef\", \"3735a510513b6fa4161d92155e026283\"};\n        WalkerTestSpec spec = new WalkerTestSpec(\n                \"-T IndelRealigner -noPG -LOD 50 -maxConsensuses 100 -greedy 100 -R \" + b36KGReference + \" -I \" + validationDataLocation + \"NA12878.chrom1.SLX.SRP000032.2009_06.bam -L 1:10023000-10030000 -compress 1 -targetIntervals \" + validationDataLocation + \"cleaner.test.intervals -o %s -stats %s --sortInCoordinateOrderEvenThoughItIsHighlyUnsafe\",\n                 2,\n                 Arrays.asList(md5s));\n        executeTest(\"test realigner lod50\", spec);\n    }","commit_id":"65edbced365303147b88e1c5e58a23b6e1416023","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Override\n\tpublic ActionForward render(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows Exception {\n\n\t\tPortlet portlet = null;\n\n\t\ttry {\n\t\t\tportlet = getPortlet(renderRequest);\n\t\t}\n\t\tcatch (PrincipalException pe) {\n\t\t\tSessionErrors.add(\n\t\t\t\trenderRequest, PrincipalException.class.getName());\n\n\t\t\treturn mapping.findForward(\"portlet.portlet_configuration.error\");\n\t\t}\n\n\t\trenderResponse.setTitle(getTitle(portlet, renderRequest));\n\n\t\tConfigurationAction configurationAction = getConfigurationAction(\n\t\t\tportlet);\n\n\t\tif (configurationAction != null) {\n\t\t\tString path = configurationAction.render(\n\t\t\t\tportletConfig, renderRequest, renderResponse);\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Configuration action returned render path \" + path);\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(path)) {\n\t\t\t\trenderRequest.setAttribute(\n\t\t\t\t\tWebKeys.CONFIGURATION_ACTION_PATH, path);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.error(\"Configuration action returned a null path\");\n\t\t\t}\n\t\t}\n\n\t\treturn mapping.findForward(\n\t\t\tgetForward(\n\t\t\t\trenderRequest,\n\t\t\t\t\"portlet.portlet_configuration.edit_configuration\"));\n\t}","id":27365,"modified_method":"@Override\n\tpublic ActionForward render(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows Exception {\n\n\t\tPortlet portlet = null;\n\n\t\ttry {\n\t\t\tportlet = getPortlet(renderRequest);\n\t\t}\n\t\tcatch (PrincipalException pe) {\n\t\t\tSessionErrors.add(\n\t\t\t\trenderRequest, PrincipalException.class.getName());\n\n\t\t\treturn mapping.findForward(\"portlet.portlet_configuration.error\");\n\t\t}\n\n\t\trenderResponse.setTitle(getTitle(portlet, renderRequest));\n\n\t\tConfigurationAction configurationAction = getConfigurationAction(\n\t\t\tportlet);\n\n\t\tif (configurationAction != null) {\n\t\t\tString path = configurationAction.render(\n\t\t\t\tportletConfig, renderRequest, renderResponse);\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Configuration action returned render path \" + path);\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(path)) {\n\t\t\t\trenderRequest.setAttribute(\n\t\t\t\t\tWebKeys.CONFIGURATION_ACTION_PATH, path);\n\n\t\t\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\t\t\trenderRequest);\n\n\t\t\t\tPortletPreferences preferences = getPreferences(\n\t\t\t\t\trequest, renderRequest.getPreferences());\n\n\t\t\t\trenderRequest = new ConfigurationRenderRequestWrapper(\n\t\t\t\t\trenderRequest, preferences);\n\n\t\t\t\trequest.setAttribute(\n\t\t\t\t\tJavaConstants.JAVAX_PORTLET_REQUEST, renderRequest);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.error(\"Configuration action returned a null path\");\n\t\t\t}\n\t\t}\n\n\t\treturn mapping.findForward(\n\t\t\tgetForward(\n\t\t\t\trenderRequest,\n\t\t\t\t\"portlet.portlet_configuration.edit_configuration\"));\n\t}","commit_id":"ddab66861833ed26067f61717e88e23175f610da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getTitle(Portlet portlet, RenderRequest renderRequest)\n\t\tthrows Exception {\n\n\t\tServletContext servletContext =\n\t\t\t(ServletContext)renderRequest.getAttribute(WebKeys.CTX);\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)renderRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tPortletPreferences portletSetup =\n\t\t\tPortletPreferencesFactoryUtil.getPortletSetup(\n\t\t\t\trenderRequest, portlet.getPortletId());\n\n\t\tString title = PortletConfigurationUtil.getPortletTitle(\n\t\t\tportletSetup, themeDisplay.getLanguageId());\n\n\t\tif (Validator.isNull(title)) {\n\t\t\ttitle = PortalUtil.getPortletTitle(\n\t\t\t\tportlet, servletContext, themeDisplay.getLocale());\n\t\t}\n\n\t\treturn title;\n\t}","id":27366,"modified_method":"protected String getTitle(Portlet portlet, RenderRequest renderRequest)\n\t\tthrows Exception {\n\n\t\tServletContext servletContext =\n\t\t\t(ServletContext)renderRequest.getAttribute(WebKeys.CTX);\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)renderRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\trenderRequest);\n\n\t\tPortletPreferences portletSetup = getPreferences(\n\t\t\trequest, renderRequest.getPreferences());\n\n\t\tString title = PortletConfigurationUtil.getPortletTitle(\n\t\t\tportletSetup, themeDisplay.getLanguageId());\n\n\t\tif (Validator.isNull(title)) {\n\t\t\ttitle = PortalUtil.getPortletTitle(\n\t\t\t\tportlet, servletContext, themeDisplay.getLocale());\n\t\t}\n\n\t\treturn title;\n\t}","commit_id":"ddab66861833ed26067f61717e88e23175f610da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tPortlet portlet = null;\n\n\t\ttry {\n\t\t\tportlet = getPortlet(actionRequest);\n\t\t}\n\t\tcatch (PrincipalException pe) {\n\t\t\tSessionErrors.add(\n\t\t\t\tactionRequest, PrincipalException.class.getName());\n\n\t\t\tsetForward(actionRequest, \"portlet.portlet_configuration.error\");\n\n\t\t\treturn;\n\t\t}\n\n\t\tConfigurationAction configurationAction = getConfigurationAction(\n\t\t\tportlet);\n\n\t\tif (configurationAction != null) {\n\t\t\tconfigurationAction.processAction(\n\t\t\t\tportletConfig, actionRequest, actionResponse);\n\t\t}\n\t}","id":27367,"modified_method":"@Override\n\tpublic void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tPortlet portlet = null;\n\n\t\ttry {\n\t\t\tportlet = getPortlet(actionRequest);\n\t\t}\n\t\tcatch (PrincipalException pe) {\n\t\t\tSessionErrors.add(\n\t\t\t\tactionRequest, PrincipalException.class.getName());\n\n\t\t\tsetForward(actionRequest, \"portlet.portlet_configuration.error\");\n\n\t\t\treturn;\n\t\t}\n\n\t\tConfigurationAction configurationAction = getConfigurationAction(\n\t\t\tportlet);\n\n\t\tif (configurationAction == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tactionRequest);\n\n\t\tPortletPreferences preferences = getPreferences(\n\t\t\trequest, actionRequest.getPreferences());\n\n\t\tactionRequest = new ConfigurationActionRequestWrapper(\n\t\t\tactionRequest, preferences);\n\n\t\tconfigurationAction.processAction(\n\t\t\tportletConfig, actionRequest, actionResponse);\n\t}","commit_id":"ddab66861833ed26067f61717e88e23175f610da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void serveResource(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tPortlet portlet = null;\n\n\t\ttry {\n\t\t\tportlet = getPortlet(resourceRequest);\n\t\t}\n\t\tcatch (PrincipalException pe) {\n\t\t\treturn;\n\t\t}\n\n\t\tResourceServingConfigurationAction resourceServingConfigurationAction =\n\t\t\t(ResourceServingConfigurationAction)getConfigurationAction(portlet);\n\n\t\tif (resourceServingConfigurationAction != null) {\n\t\t\tresourceServingConfigurationAction.serveResource(\n\t\t\t\tportletConfig, resourceRequest, resourceResponse);\n\t\t}\n\t}","id":27368,"modified_method":"@Override\n\tpublic void serveResource(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tPortlet portlet = null;\n\n\t\ttry {\n\t\t\tportlet = getPortlet(resourceRequest);\n\t\t}\n\t\tcatch (PrincipalException pe) {\n\t\t\treturn;\n\t\t}\n\n\t\tResourceServingConfigurationAction resourceServingConfigurationAction =\n\t\t\t(ResourceServingConfigurationAction)getConfigurationAction(portlet);\n\n\t\tif (resourceServingConfigurationAction == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tresourceRequest);\n\n\t\tPortletPreferences preferences = getPreferences(\n\t\t\trequest, resourceRequest.getPreferences());\n\n\t\tresourceRequest = new ConfigurationResourceRequestWrapper(\n\t\t\tresourceRequest, preferences);\n\n\t\tresourceServingConfigurationAction.serveResource(\n\t\t\tportletConfig, resourceRequest, resourceResponse);\n\t}","commit_id":"ddab66861833ed26067f61717e88e23175f610da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void doPost(HttpServletRequest req, HttpServletResponse res)\n      throws ServletException, IOException\n  {\n\tString alias = req.getParameter(\"id\");\n\tif ((alias==null) ||(\"\").equals(alias)){\n\t\tlog.warn(\"The published URL you have entered is incorrect. id is missing. Please check in Published Settings.\");\n\t\treturn;\n\t}\n\n    HttpSession httpSession = req.getSession(true);\n    httpSession.setMaxInactiveInterval(3600); // one hour\n    PersonBean person = (PersonBean) ContextUtil.lookupBeanFromExternalServlet(\n                        \"person\", req, res);\n    // we are going to use the delivery bean to flag that this access is via url\n    // this is the flag that we will use in deliverAssessment.jsp to decide what\n    // button to display - daisyf\n    DeliveryBean delivery = (DeliveryBean) ContextUtil.lookupBeanFromExternalServlet(\n       \"delivery\", req, res);\n    // For SAK-7132. \n    // As this class is only used for taking assessment via URL, \n    // there should not be any assessment grading data at this point\n    delivery.setAssessmentGrading(null);\n    delivery.setActionString(\"takeAssessmentViaUrl\");\n\n    // reset timer in case this is a timed assessment\n    delivery.setTimeElapse(\"0\");\n    delivery.setLastTimer(0);\n    delivery.setTimeLimit(\"0\");\n    delivery.setBeginAssessment(true);\n\n    delivery.setNumberRetake(-1);\n    delivery.setActualNumberRetake(-1);\n\n    // set path\n    delivery.setContextPath(req.getContextPath());\n\n\n    // 1. get publishedAssessment and check if anonymous is allowed\n    // 2. If so, goto welcome.faces\n    // 3. If not, goto login.faces\n    // both pages will set agentId and then direct user to BeginAssessment\n    PublishedAssessmentService service = new PublishedAssessmentService();\n    PublishedAssessmentFacade pub = service.getPublishedAssessmentIdByAlias(alias);\n\n    if (pub==null){\n\t\tlog.warn(\"The published URL you have entered is incorrect. Please check in Published Settings.\");\n    \treturn;\n    }\n    delivery.setAssessmentId(pub.getPublishedAssessmentId().toString());\n    delivery.setAssessmentTitle(pub.getTitle());\n    delivery.setPublishedAssessment(pub);\n\n    BeginDeliveryActionListener listener = new BeginDeliveryActionListener();\n    listener.populateBeanFromPub(delivery, pub);\n\n    RequestDispatcher dispatcher = null;\n    String path = \"/jsf/delivery/invalidAssessment.faces\";\n    boolean relativePath = true;\n\n    String agentIdString = \"\";\n    boolean isAuthorized = false;\n    boolean isAuthenticated = false;\n\n      // Determine if assessment accept Anonymous Users. If so, starting in version 2.0.1\n      // all users will be authenticated as anonymous for the assessment in this case.\n      //boolean anonymousAllowed = false;\n      String releaseTo = pub.getAssessmentAccessControl().getReleaseTo();\n      if (releaseTo != null && releaseTo.indexOf(\"Anonymous Users\")> -1){\n        //anonymousAllowed = true;\n        agentIdString = AgentFacade.createAnonymous();\n        isAuthenticated = true;\n        isAuthorized = true;\n        delivery.setAnonymousLogin(true);\n        person.setAnonymousId(agentIdString);\n      }\n      else { // check membership\n    \tagentIdString = req.getRemoteUser();\n        isAuthenticated = ( agentIdString!= null && !(\"\").equals(agentIdString));\n        if (isAuthenticated){\n          if (releaseTo.indexOf(AssessmentAccessControl.RELEASE_TO_SELECTED_GROUPS)>-1) {\n        \t  isAuthorized = checkMembershipForGroupRelease(pub, req, res);\n          }\n          else {\n        \t  isAuthorized = checkMembership(pub, req, res);\n          }\n          // in 2.2, agentId is differnt from req.getRemoteUser()\n          agentIdString = AgentFacade.getAgentString();\n        }\n      }\n\n      log.debug(\"*** agentIdString: \"+agentIdString);\n       \n      String nextAction = delivery.checkFromViaUrlLogin();\n      log.debug(\"nextAction=\"+nextAction);\n      if (isAuthorized){\n        // Assessment has been permanently removed\n        if (\"isRemoved\".equals(nextAction)){\n          path = \"/jsf/delivery/isRemoved.faces\";\n        }\n        // Assessment is available for taking\n        else if (\"safeToProceed\".equals(nextAction)){\n          // if assessment is available, set it in delivery bean for display in deliverAssessment.jsp\n          listener.processAction(null);\n          path = \"/jsf/delivery/beginTakingAssessment_viaurl.faces\";\n        }\n        // Assessment is currently not available (eg., retracted for edit, due date has passed, submission limit has been reached, etc)\n        else if (\"assessmentNotAvailable\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/assessmentNotAvailable.faces\";\n        }\n        else if (\"isRetracted\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/isRetracted.faces\";\n        }\n        else if (\"isRetractedForEdit\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/isRetractedForEdit.faces\";\n        }\n        else if (\"discrepancyInData\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/discrepancyInData.faces\";\n        }\n        else if (\"assessmentHasBeenSubmitted\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/assessmentHasBeenSubmitted.faces\";\n        }\n        else if (\"noSubmissionLeft\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/noSubmissionLeft.faces\";\n        }\n        else if (\"noLateSubmission\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/noLateSubmission.faces\";\n        }\n        else if (\"timeExpired\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/timeExpired.faces\";\n        }\n        else {\n        \tpath = \"/jsf/delivery/assessmentNotAvailable.faces\";\n        }\n      }\n      else{ // notAuthorized\n    \t  if (!isAuthenticated){\n    \t\t  if (AgentFacade.isStandaloneEnvironment()) {\n    \t\t\t  delivery.setActionString(null);\n    \t\t\t  path = \"/jsf/delivery/login.faces\";\n    \t\t  }\n    \t\t  else{\n    \t\t\t  relativePath = false;\n    \t\t\t  delivery.setActionString(null);\n    \t\t\t  path = \"/authn/login?url=\" + URLEncoder.encode(req.getRequestURL().toString()+\"?id=\"+alias, \"UTF-8\");\n    \t\t  }\n    \t  }\n    \t  else { //isAuthenticated but not authorized\n    \t\t  path = \"/jsf/delivery/accessDenied.faces\";\n    \t  }\n      }\n      if (\"true\".equals(req.getParameter(\"fromDirect\"))) {\n        // send the user directly into taking the assessment... they already clicked start from the direct servlet\n        if (delivery.getNavigation().trim() != null && \"1\".equals(delivery.getNavigation().trim())) {\n          LinearAccessDeliveryActionListener linearDeliveryListener = new LinearAccessDeliveryActionListener();\n          linearDeliveryListener.processAction(null);\n        }\n        else {\n          DeliveryActionListener deliveryListener = new DeliveryActionListener();\n          deliveryListener.processAction(null);\n        }\n        \n        //TODO: Should be something a bit more robust as validate() can retun a lot of things...\n        if (\"takeAssessment\".equals(delivery.validate())) {\n          path = \"/jsf/delivery/deliverAssessment.faces\";\n        }\n        \n      }\n    log.debug(\"***path\"+path);\n    if (relativePath){\n      dispatcher = req.getRequestDispatcher(path);\n      dispatcher.forward(req, res);\n    }\n    else{\n      log.info(\"** servlet path=\"+req.getRequestURL().toString());\n      String url = req.getRequestURL().toString();\n      String context = req.getContextPath();\n      String finalUrl = url.substring(0,url.lastIndexOf(context))+path;\n      log.info(\"**** finalUrl = \"+finalUrl);\n      res.sendRedirect(finalUrl);\n    }\n  }","id":27369,"modified_method":"public void doPost(HttpServletRequest req, HttpServletResponse res)\n      throws ServletException, IOException\n  {\n\tString alias = req.getParameter(\"id\");\n\tif ((alias==null) ||(\"\").equals(alias)){\n\t\tlog.warn(\"The published URL you have entered is incorrect. id is missing. Please check in Published Settings.\");\n\t\treturn;\n\t}\n\n    HttpSession httpSession = req.getSession(true);\n    httpSession.setMaxInactiveInterval(3600); // one hour\n    PersonBean person = (PersonBean) ContextUtil.lookupBeanFromExternalServlet(\n                        \"person\", req, res);\n    // we are going to use the delivery bean to flag that this access is via url\n    // this is the flag that we will use in deliverAssessment.jsp to decide what\n    // button to display - daisyf\n    DeliveryBean delivery = (DeliveryBean) ContextUtil.lookupBeanFromExternalServlet(\n       \"delivery\", req, res);\n    // For SAK-7132. \n    // As this class is only used for taking assessment via URL, \n    // there should not be any assessment grading data at this point\n    delivery.setAssessmentGrading(null);\n    delivery.setActionString(\"takeAssessmentViaUrl\");\n\n    // reset timer in case this is a timed assessment\n    delivery.setTimeElapse(\"0\");\n    delivery.setLastTimer(0);\n    delivery.setTimeLimit(\"0\");\n    delivery.setBeginAssessment(true);\n\n    delivery.setNumberRetake(-1);\n    delivery.setActualNumberRetake(-1);\n\n    // set path\n    delivery.setContextPath(req.getContextPath());\n\n\n    // 1. get publishedAssessment and check if anonymous is allowed\n    // 2. If so, goto welcome.faces\n    // 3. If not, goto login.faces\n    // both pages will set agentId and then direct user to BeginAssessment\n    PublishedAssessmentService service = new PublishedAssessmentService();\n    PublishedAssessmentFacade pub = service.getPublishedAssessmentIdByAlias(alias);\n\n    if (pub==null){\n\t\tlog.warn(\"The published URL you have entered is incorrect. Please check in Published Settings.\");\n    \treturn;\n    }\n    delivery.setAssessmentId(pub.getPublishedAssessmentId().toString());\n    delivery.setAssessmentTitle(pub.getTitle());\n    delivery.setPublishedAssessment(pub);\n\n    BeginDeliveryActionListener listener = new BeginDeliveryActionListener();\n    listener.populateBeanFromPub(delivery, pub);\n\n    RequestDispatcher dispatcher = null;\n    String path = \"/jsf/delivery/invalidAssessment.faces\";\n    boolean relativePath = true;\n\n    String agentIdString = \"\";\n    boolean isAuthorized = false;\n    boolean isAuthenticated = false;\n\n      // Determine if assessment accept Anonymous Users. If so, starting in version 2.0.1\n      // all users will be authenticated as anonymous for the assessment in this case.\n      //boolean anonymousAllowed = false;\n      String releaseTo = pub.getAssessmentAccessControl().getReleaseTo();\n      if (releaseTo != null && releaseTo.indexOf(\"Anonymous Users\")> -1){\n        //anonymousAllowed = true;\n        agentIdString = AgentFacade.createAnonymous();\n        isAuthenticated = true;\n        isAuthorized = true;\n        delivery.setAnonymousLogin(true);\n        person.setAnonymousId(agentIdString);\n      }\n      else { // check membership\n    \tagentIdString = req.getRemoteUser();\n        isAuthenticated = ( agentIdString!= null && !(\"\").equals(agentIdString));\n        if (isAuthenticated){\n          if (releaseTo.indexOf(AssessmentAccessControl.RELEASE_TO_SELECTED_GROUPS)>-1) {\n        \t  isAuthorized = checkMembershipForGroupRelease(pub, req, res);\n          }\n          else {\n        \t  isAuthorized = checkMembership(pub, req, res);\n          }\n          // in 2.2, agentId is differnt from req.getRemoteUser()\n          agentIdString = AgentFacade.getAgentString();\n        }\n      }\n\n      log.debug(\"*** agentIdString: \"+agentIdString);\n       \n      String nextAction = delivery.checkFromViaUrlLogin();\n      log.debug(\"nextAction=\"+nextAction);\n      if (isAuthorized){\n        // Assessment has been permanently removed\n        if (\"isRemoved\".equals(nextAction)){\n          path = \"/jsf/delivery/isRemoved.faces\";\n        }\n        // Assessment is available for taking\n        else if (\"safeToProceed\".equals(nextAction)){\n          // if assessment is available, set it in delivery bean for display in deliverAssessment.jsp\n          listener.processAction(null);\n          path = \"/jsf/delivery/beginTakingAssessment_viaurl.faces\";\n        }\n        // Assessment is currently not available (eg., retracted for edit, due date has passed, submission limit has been reached, etc)\n        else if (\"assessmentNotAvailable\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/assessmentNotAvailable.faces\";\n        }\n        else if (\"isRetracted\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/isRetracted.faces\";\n        }\n        else if (\"isRetractedForEdit\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/isRetractedForEdit.faces\";\n        }\n        else if (\"discrepancyInData\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/discrepancyInData.faces\";\n        }\n        else if (\"assessmentHasBeenSubmitted\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/assessmentHasBeenSubmitted.faces\";\n        }\n        else if (\"noSubmissionLeft\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/noSubmissionLeft.faces\";\n        }\n        else if (\"noLateSubmission\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/noLateSubmission.faces\";\n        }\n        else if (\"timeExpired\".equals(nextAction)){\n        \tpath = \"/jsf/delivery/timeExpired.faces\";\n        }\n        else {\n        \tpath = \"/jsf/delivery/assessmentNotAvailable.faces\";\n        }\n      }\n      else{ // notAuthorized\n    \t  if (!isAuthenticated){\n    \t\t  if (AgentFacade.isStandaloneEnvironment()) {\n    \t\t\t  delivery.setActionString(null);\n    \t\t\t  path = \"/jsf/delivery/login.faces\";\n    \t\t  }\n    \t\t  else{\n    \t\t\t  relativePath = false;\n    \t\t\t  delivery.setActionString(null);\n    \t\t\t  path = \"/authn/login?url=\" + URLEncoder.encode(req.getRequestURL().toString()+\"?id=\"+alias, \"UTF-8\");\n    \t\t  }\n    \t  }\n    \t  else { //isAuthenticated but not authorized\n    \t\t  path = \"/jsf/delivery/accessDenied.faces\";\n    \t  }\n      }\n      if (\"true\".equals(req.getParameter(\"fromDirect\"))) {\n        // send the user directly into taking the assessment... they already clicked start from the direct servlet\n        if (delivery.getNavigation().trim() != null && \"1\".equals(delivery.getNavigation().trim())) {\n          LinearAccessDeliveryActionListener linearDeliveryListener = new LinearAccessDeliveryActionListener();\n          linearDeliveryListener.processAction(null);\n        }\n        else {\n          DeliveryActionListener deliveryListener = new DeliveryActionListener();\n          //This has to be setup if it's coming from direct otherwise it doesn't start right\n          UIComponent uic = new UICommand();\n          uic.setId(\"beginAssessment\");\n          ActionEvent ae = new ActionEvent(uic);\n          deliveryListener.processAction(ae);\n        }\n        \n        //TODO: Should be something a bit more robust as validate() can retun a lot of things...\n        if (\"takeAssessment\".equals(delivery.validate())) {\n          path = \"/jsf/delivery/deliverAssessment.faces\";\n        }\n        \n      }\n    log.debug(\"***path\"+path);\n    if (relativePath){\n      dispatcher = req.getRequestDispatcher(path);\n      dispatcher.forward(req, res);\n    }\n    else{\n      log.info(\"** servlet path=\"+req.getRequestURL().toString());\n      String url = req.getRequestURL().toString();\n      String context = req.getContextPath();\n      String finalUrl = url.substring(0,url.lastIndexOf(context))+path;\n      log.info(\"**** finalUrl = \"+finalUrl);\n      res.sendRedirect(finalUrl);\n    }\n  }","commit_id":"6d21cb6a1ab31ed261058b89219a484a697d4de4","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void processAction(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows PortletException {\n\n\t\tsuper.processAction(actionRequest, actionResponse);\n\n\t\tint action = ParamUtil.getInteger(actionRequest, \"action\");\n\n\t\tif ((action == AdminPortletAction.CREATE) ||\n\t\t\t(action == AdminPortletAction.CREATE_CHANNEL) ||\n\t\t\t(action == AdminPortletAction.DELETE) ||\n\t\t\t(action == AdminPortletAction.DELETE_CHANNELS) ||\n\t\t\t(action == AdminPortletAction.UPDATE)) {\n\n\t\t\tif (actionRequest.getAttribute(\"CONSUMER_ADMIN_ERROR\") != null) {\n\t\t\t\tsetRenderParameters(actionRequest, actionResponse);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tSessionMessages.add(actionRequest, \"request_processed\");\n\n\t\t\tString redirect = ParamUtil.getString(actionRequest, \"redirect\");\n\n\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\ttry {\n\t\t\t\t\tactionResponse.sendRedirect(redirect);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (IOException ioe) {\n\t\t\t\t\tthrow new PortletException(ioe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetRenderParameters(actionRequest, actionResponse);\n\t}","id":27370,"modified_method":"public void processAction(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows PortletException {\n\n\t\tString paramAction = ParamUtil.getString(actionRequest, \"action\", null);\n\t\t\n\t\tif (Validator.isNotNull(paramAction)) {\t\t\t\n\t\t\tsuper.processAction(actionRequest, actionResponse);\n\t\t}\n\n\t\tint action = ParamUtil.getInteger(actionRequest, \"action\");\n\n\t\tif ((action == AdminPortletAction.CREATE) ||\n\t\t\t(action == AdminPortletAction.CREATE_CHANNEL) ||\n\t\t\t(action == AdminPortletAction.DELETE) ||\n\t\t\t(action == AdminPortletAction.DELETE_CHANNELS) ||\n\t\t\t(action == AdminPortletAction.UPDATE)) {\n\n\t\t\tif (actionRequest.getAttribute(\"CONSUMER_ADMIN_ERROR\") != null) {\n\t\t\t\tsetRenderParameters(actionRequest, actionResponse);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tSessionMessages.add(actionRequest, \"request_processed\");\n\n\t\t\tString redirect = ParamUtil.getString(actionRequest, \"redirect\");\n\n\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\ttry {\n\t\t\t\t\tactionResponse.sendRedirect(redirect);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (IOException ioe) {\n\t\t\t\t\tthrow new PortletException(ioe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetRenderParameters(actionRequest, actionResponse);\n\t}","commit_id":"c16137fabe3c9f6d0524c323f0cb99a26f927352","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void processAction(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows PortletException {\n\n\t\tsuper.processAction(actionRequest, actionResponse);\n\n\t\tsetRenderParameters(actionRequest, actionResponse);\n\t}","id":27371,"modified_method":"public void processAction(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows PortletException {\n\n\t\tString action = ParamUtil.getString(actionRequest, \"action\", null);\n\t\t\n\t\tif (Validator.isNotNull(action)) {\t\t\t\n\t\t\tsuper.processAction(actionRequest, actionResponse);\n\t\t}\n\t\t\n\t\tsetRenderParameters(actionRequest, actionResponse);\n\t}","commit_id":"c16137fabe3c9f6d0524c323f0cb99a26f927352","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void processAction(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tvalidateRootFolder(actionRequest);\n\n\t\tsuper.processAction(portletConfig, actionRequest, actionResponse);\n\t}","id":27372,"modified_method":"@Override\n\tpublic void processAction(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tString tabs2 = ParamUtil.getString(actionRequest, \"tabs2\");\n\n\t\tif (Validator.isNotNull(cmd)) {\n\t\t\tif (tabs2.equals(\"display-settings\")) {\n\t\t\t\tvalidateRootFolder(actionRequest);\n\t\t\t}\n\t\t\telse if (tabs2.equals(\"document-added-email\")) {\n\t\t\t\tvalidateEmailFileEntryAdded(actionRequest);\n\t\t\t}\n\t\t\telse if (tabs2.equals(\"document-updated-email\")) {\n\t\t\t\tvalidateEmailFileEntryUpdated(actionRequest);\n\t\t\t}\n\t\t\telse if (tabs2.equals(\"email-from\")) {\n\t\t\t\tvalidateEmailFrom(actionRequest);\n\t\t\t}\n\t\t}\n\n\t\tsuper.processAction(portletConfig, actionRequest, actionResponse);\n\t}","commit_id":"72045298c13c0cb545cc55a764407366d53b841f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void evaluateMethod(Object extension, Method method, List results) {\n    try {\n      Object result = method.invoke(extension);\n      if (result != null) {\n        //TODO add arrays/collections of objects/classes\n        if (result instanceof Class) {\n          results.addAll(componentContainer.getComponentsByType((Class) result));\n\n        } else if (result instanceof Collection) {\n          results.addAll((Collection) result);\n\n        } else {\n          results.add(result);\n        }\n      }\n    } catch (Exception e) {\n      throw new IllegalStateException(\"Can not invoke method \" + method, e);\n    }\n  }","id":27373,"modified_method":"private void evaluateMethod(Object extension, Method method, List<Object> results) {\n    try {\n      Object result = method.invoke(extension);\n      if (result != null) {\n        //TODO add arrays/collections of objects/classes\n        if (result instanceof Class) {\n          results.addAll(componentContainer.getComponentsByType((Class) result));\n\n        } else if (result instanceof Collection<?>) {\n          results.addAll((Collection<?>) result);\n\n        } else {\n          results.add(result);\n        }\n      }\n    } catch (Exception e) {\n      throw new IllegalStateException(\"Can not invoke method \" + method, e);\n    }\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void isDecoratorContextProxy() {\n    DecoratorContext context = mock(DecoratorContext.class);\n    DefaultFormulaData data = new DefaultFormulaData(context);\n\n    data.getChildrenMeasures((MeasuresFilter) anyObject());\n    verify(context).getChildrenMeasures((MeasuresFilter) anyObject());\n\n    data.getChildrenMeasures((Metric) anyObject());\n    verify(context).getChildrenMeasures((Metric) anyObject());\n\n    data.getMeasures((MeasuresFilter) anyObject());\n    verify(context).getMeasures((MeasuresFilter) anyObject());\n\n    data.getMeasure((Metric) anyObject());\n    verify(context).getMeasure((Metric) anyObject());\n  }","id":27374,"modified_method":"@Test\n  public void isDecoratorContextProxy() {\n    DecoratorContext context = mock(DecoratorContext.class);\n    DefaultFormulaData data = new DefaultFormulaData(context);\n\n    data.getChildrenMeasures(any(MeasuresFilter.class));\n    verify(context).getChildrenMeasures(any(MeasuresFilter.class));\n\n    data.getChildrenMeasures(any(Metric.class));\n    verify(context).getChildrenMeasures(any(Metric.class));\n\n    data.getMeasures(any(MeasuresFilter.class));\n    verify(context).getMeasures(any(MeasuresFilter.class));\n\n    data.getMeasure(any(Metric.class));\n    verify(context).getMeasure(any(Metric.class));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given: empty list of blocks for file\n   * Expected: {@link Collections#EMPTY_LIST}\n   */\n  @Test\n  public void shouldReturnEmptyListWhenNoBlocksForFile() {\n    List<CloneGroup> result = detect(null, new ArrayList<Block>());\n    assertThat(result, sameInstance(Collections.EMPTY_LIST));\n  }","id":27375,"modified_method":"/**\n   * Given: empty list of blocks for file\n   * Expected: {@link Collections#EMPTY_LIST}\n   */\n  @Test\n  public void shouldReturnEmptyListWhenNoBlocksForFile() {\n    List<CloneGroup> result = detect(null, new Block[0]);\n    assertThat(result, sameInstance(Collections.EMPTY_LIST));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given:\n   * <pre>\n   * b: 1 2 3 4\n   * a: 1 2 3\n   * <\/pre>\n   * Expected clone which ends at the end of file \"a\":\n   * <pre>\n   * a-b (1 2 3)\n   * <\/pre>\n   */\n  @Test\n  public void problemWithEndOfFile() {\n    CloneIndex cloneIndex = createIndex(\n        newBlocks(\"b\", \"1 2 3 4\"));\n    List<Block> fileBlocks =\n        newBlocks(\"a\", \"1 2 3\");\n    List<CloneGroup> clones = detect(cloneIndex, fileBlocks);\n\n    print(clones);\n    assertThat(clones.size(), is(1));\n\n    assertThat(clones, hasCloneGroup(3,\n        newClonePart(\"a\", 0, 3),\n        newClonePart(\"b\", 0, 3)));\n  }","id":27376,"modified_method":"/**\n   * Given:\n   * <pre>\n   * b: 1 2 3 4\n   * a: 1 2 3\n   * <\/pre>\n   * Expected clone which ends at the end of file \"a\":\n   * <pre>\n   * a-b (1 2 3)\n   * <\/pre>\n   */\n  @Test\n  public void problemWithEndOfFile() {\n    CloneIndex cloneIndex = createIndex(\n        newBlocks(\"b\", \"1 2 3 4\"));\n    Block[] fileBlocks =\n        newBlocks(\"a\", \"1 2 3\");\n    List<CloneGroup> clones = detect(cloneIndex, fileBlocks);\n\n    print(clones);\n    assertThat(clones.size(), is(1));\n\n    assertThat(clones, hasCloneGroup(3,\n        newClonePart(\"a\", 0, 3),\n        newClonePart(\"b\", 0, 3)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"protected abstract List<CloneGroup> detect(CloneIndex index, List<Block> fileBlocks);","id":27377,"modified_method":"protected abstract List<CloneGroup> detect(CloneIndex index, Block[] fileBlocks);","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given:\n   * <pre>\n   * y:   2 3 4 5\n   * z:     3 4\n   * x: 1 2 3 4 5 6\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * x-y (2 3 4 5)\n   * x-y-z (3 4)\n   * <\/pre>\n   */\n  @Test\n  public void exampleFromPaper() {\n    CloneIndex index = createIndex(\n        newBlocks(\"y\", \"2 3 4 5\"),\n        newBlocks(\"z\", \"3 4\"));\n    List<Block> fileBlocks = newBlocks(\"x\", \"1 2 3 4 5 6\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertEquals(2, result.size());\n\n    assertThat(result, hasCloneGroup(4,\n        newClonePart(\"x\", 1, 4),\n        newClonePart(\"y\", 0, 4)));\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"x\", 2, 2),\n        newClonePart(\"y\", 1, 2),\n        newClonePart(\"z\", 0, 2)));\n  }","id":27378,"modified_method":"/**\n   * Given:\n   * <pre>\n   * y:   2 3 4 5\n   * z:     3 4\n   * x: 1 2 3 4 5 6\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * x-y (2 3 4 5)\n   * x-y-z (3 4)\n   * <\/pre>\n   */\n  @Test\n  public void exampleFromPaper() {\n    CloneIndex index = createIndex(\n        newBlocks(\"y\", \"2 3 4 5\"),\n        newBlocks(\"z\", \"3 4\"));\n    Block[] fileBlocks = newBlocks(\"x\", \"1 2 3 4 5 6\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertEquals(2, result.size());\n\n    assertThat(result, hasCloneGroup(4,\n        newClonePart(\"x\", 1, 4),\n        newClonePart(\"y\", 0, 4)));\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"x\", 2, 2),\n        newClonePart(\"y\", 1, 2),\n        newClonePart(\"z\", 0, 2)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Test for problem, which was described in original paper - same clone would be reported twice.\n   * Given:\n   * <pre>\n   * a: 1 2 3 1 2 4\n   * <\/pre>\n   * Expected only one clone:\n   * <pre>\n   * a-a (1 2)\n   * <\/pre>\n   */\n  @Test\n  public void clonesInFileItself() {\n    CloneIndex index = createIndex();\n    List<Block> fileBlocks = newBlocks(\"a\", \"1 2 3 1 2 4\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertThat(result.size(), is(1));\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"a\", 0, 2),\n        newClonePart(\"a\", 3, 2)));\n  }","id":27379,"modified_method":"/**\n   * Test for problem, which was described in original paper - same clone would be reported twice.\n   * Given:\n   * <pre>\n   * a: 1 2 3 1 2 4\n   * <\/pre>\n   * Expected only one clone:\n   * <pre>\n   * a-a (1 2)\n   * <\/pre>\n   */\n  @Test\n  public void clonesInFileItself() {\n    CloneIndex index = createIndex();\n    Block[] fileBlocks = newBlocks(\"a\", \"1 2 3 1 2 4\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertThat(result.size(), is(1));\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"a\", 0, 2),\n        newClonePart(\"a\", 3, 2)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given file with two lines, containing following statements:\n   * <pre>\n   * 0: A,B,A,B\n   * 1: A,B,A\n   * <\/pre>\n   * with block size 5 each block will span both lines, and hashes will be:\n   * <pre>\n   * A,B,A,B,A=1\n   * B,A,B,A,B=2\n   * A,B,A,B,A=1\n   * <\/pre>\n   * Expected: one clone with two parts, which contain exactly the same lines\n   */\n  @Test\n  public void same_lines_but_different_indexes() {\n    CloneIndex cloneIndex = createIndex();\n    Block.Builder block = Block.builder()\n        .setResourceId(\"a\")\n        .setLines(0, 1);\n    List<Block> fileBlocks = Arrays.asList(\n        block.setBlockHash(new ByteArray(\"1\".getBytes())).setIndexInFile(0).build(),\n        block.setBlockHash(new ByteArray(\"2\".getBytes())).setIndexInFile(1).build(),\n        block.setBlockHash(new ByteArray(\"1\".getBytes())).setIndexInFile(2).build());\n    List<CloneGroup> clones = detect(cloneIndex, fileBlocks);\n\n    print(clones);\n    assertThat(clones.size(), is(1));\n    Iterator<CloneGroup> clonesIterator = clones.iterator();\n\n    CloneGroup clone = clonesIterator.next();\n    assertThat(clone.getCloneUnitLength(), is(1));\n    assertThat(clone.getCloneParts().size(), is(2));\n    assertThat(clone.getOriginPart(), is(new ClonePart(\"a\", 0, 0, 1)));\n    assertThat(clone.getCloneParts(), hasItem(new ClonePart(\"a\", 0, 0, 1)));\n    assertThat(clone.getCloneParts(), hasItem(new ClonePart(\"a\", 2, 0, 1)));\n  }","id":27380,"modified_method":"/**\n   * Given file with two lines, containing following statements:\n   * <pre>\n   * 0: A,B,A,B\n   * 1: A,B,A\n   * <\/pre>\n   * with block size 5 each block will span both lines, and hashes will be:\n   * <pre>\n   * A,B,A,B,A=1\n   * B,A,B,A,B=2\n   * A,B,A,B,A=1\n   * <\/pre>\n   * Expected: one clone with two parts, which contain exactly the same lines\n   */\n  @Test\n  public void same_lines_but_different_indexes() {\n    CloneIndex cloneIndex = createIndex();\n    Block.Builder block = Block.builder()\n        .setResourceId(\"a\")\n        .setLines(0, 1);\n    Block[] fileBlocks = new Block[] {\n      block.setBlockHash(new ByteArray(\"1\".getBytes())).setIndexInFile(0).build(),\n      block.setBlockHash(new ByteArray(\"2\".getBytes())).setIndexInFile(1).build(),\n      block.setBlockHash(new ByteArray(\"1\".getBytes())).setIndexInFile(2).build()\n    };\n    List<CloneGroup> clones = detect(cloneIndex, fileBlocks);\n\n    print(clones);\n    assertThat(clones.size(), is(1));\n    Iterator<CloneGroup> clonesIterator = clones.iterator();\n\n    CloneGroup clone = clonesIterator.next();\n    assertThat(clone.getCloneUnitLength(), is(1));\n    assertThat(clone.getCloneParts().size(), is(2));\n    assertThat(clone.getOriginPart(), is(new ClonePart(\"a\", 0, 0, 1)));\n    assertThat(clone.getCloneParts(), hasItem(new ClonePart(\"a\", 0, 0, 1)));\n    assertThat(clone.getCloneParts(), hasItem(new ClonePart(\"a\", 2, 0, 1)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given:\n   * <pre>\n   * a:   2 3 4 5\n   * b:     3 4\n   * c: 1 2 3 4 5 6\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * c-a (2 3 4 5)\n   * c-a-b (3 4)\n   * <\/pre>\n   */\n  @Test\n  public void exampleFromPaperWithModifiedResourceIds() {\n    CloneIndex cloneIndex = createIndex(\n        newBlocks(\"a\", \"2 3 4 5\"),\n        newBlocks(\"b\", \"3 4\"));\n    List<Block> fileBlocks = newBlocks(\"c\", \"1 2 3 4 5 6\");\n    List<CloneGroup> clones = detect(cloneIndex, fileBlocks);\n\n    print(clones);\n    assertThat(clones.size(), is(2));\n\n    assertThat(clones, hasCloneGroup(4,\n        newClonePart(\"c\", 1, 4),\n        newClonePart(\"a\", 0, 4)));\n\n    assertThat(clones, hasCloneGroup(2,\n        newClonePart(\"c\", 2, 2),\n        newClonePart(\"a\", 1, 2),\n        newClonePart(\"b\", 0, 2)));\n  }","id":27381,"modified_method":"/**\n   * Given:\n   * <pre>\n   * a:   2 3 4 5\n   * b:     3 4\n   * c: 1 2 3 4 5 6\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * c-a (2 3 4 5)\n   * c-a-b (3 4)\n   * <\/pre>\n   */\n  @Test\n  public void exampleFromPaperWithModifiedResourceIds() {\n    CloneIndex cloneIndex = createIndex(\n        newBlocks(\"a\", \"2 3 4 5\"),\n        newBlocks(\"b\", \"3 4\"));\n    Block[] fileBlocks = newBlocks(\"c\", \"1 2 3 4 5 6\");\n    List<CloneGroup> clones = detect(cloneIndex, fileBlocks);\n\n    print(clones);\n    assertThat(clones.size(), is(2));\n\n    assertThat(clones, hasCloneGroup(4,\n        newClonePart(\"c\", 1, 4),\n        newClonePart(\"a\", 0, 4)));\n\n    assertThat(clones, hasCloneGroup(2,\n        newClonePart(\"c\", 2, 2),\n        newClonePart(\"a\", 1, 2),\n        newClonePart(\"b\", 0, 2)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"protected static CloneIndex createIndex(List<Block>... blocks) {\n    CloneIndex cloneIndex = new MemoryCloneIndex();\n    for (List<Block> b : blocks) {\n      for (Block block : b) {\n        cloneIndex.insert(block);\n      }\n    }\n    return cloneIndex;\n  }","id":27382,"modified_method":"protected static CloneIndex createIndex(Block[]... blocks) {\n    CloneIndex cloneIndex = new MemoryCloneIndex();\n    for (Block[] b : blocks) {\n      for (Block block : b) {\n        cloneIndex.insert(block);\n      }\n    }\n    return cloneIndex;\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given:\n   * <pre>\n   * a: 1 2 3\n   * b: 1 2 4\n   * a: 1 2 5\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * a-b (1 2) - instead of \"a-a-b\", which will be the case if file from index not ignored\n   * <\/pre>\n   */\n  @Test\n  public void fileAlreadyInIndex() {\n    CloneIndex index = createIndex(\n        newBlocks(\"a\", \"1 2 3\"),\n        newBlocks(\"b\", \"1 2 4\"));\n    // Note about blocks with hashes \"3\", \"4\" and \"5\": those blocks here in order to not face another problem - with EOF (see separate test)\n    List<Block> fileBlocks = newBlocks(\"a\", \"1 2 5\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertThat(result.size(), is(1));\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"a\", 0, 2),\n        newClonePart(\"b\", 0, 2)));\n  }","id":27383,"modified_method":"/**\n   * Given:\n   * <pre>\n   * a: 1 2 3\n   * b: 1 2 4\n   * a: 1 2 5\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * a-b (1 2) - instead of \"a-a-b\", which will be the case if file from index not ignored\n   * <\/pre>\n   */\n  @Test\n  public void fileAlreadyInIndex() {\n    CloneIndex index = createIndex(\n        newBlocks(\"a\", \"1 2 3\"),\n        newBlocks(\"b\", \"1 2 4\"));\n    // Note about blocks with hashes \"3\", \"4\" and \"5\": those blocks here in order to not face another problem - with EOF (see separate test)\n    Block[] fileBlocks = newBlocks(\"a\", \"1 2 5\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertThat(result.size(), is(1));\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"a\", 0, 2),\n        newClonePart(\"b\", 0, 2)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given:\n   * <pre>\n   * b: 1 2 3 4 1 2 3 4 1 2 3 4\n   * c: 1 2 3 4\n   * a: 1 2 3 5\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * a-b-b-b-c (1 2 3)\n   * <\/pre>\n   */\n  @Test\n  public void example2() {\n    CloneIndex index = createIndex(\n        newBlocks(\"b\", \"1 2 3 4 1 2 3 4 1 2 3 4\"),\n        newBlocks(\"c\", \"1 2 3 4\"));\n    List<Block> fileBlocks = newBlocks(\"a\", \"1 2 3 5\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertThat(result.size(), is(1));\n\n    assertThat(result, hasCloneGroup(3,\n        newClonePart(\"a\", 0, 3),\n        newClonePart(\"b\", 0, 3),\n        newClonePart(\"b\", 4, 3),\n        newClonePart(\"b\", 8, 3),\n        newClonePart(\"c\", 0, 3)));\n  }","id":27384,"modified_method":"/**\n   * Given:\n   * <pre>\n   * b: 1 2 3 4 1 2 3 4 1 2 3 4\n   * c: 1 2 3 4\n   * a: 1 2 3 5\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * a-b-b-b-c (1 2 3)\n   * <\/pre>\n   */\n  @Test\n  public void example2() {\n    CloneIndex index = createIndex(\n        newBlocks(\"b\", \"1 2 3 4 1 2 3 4 1 2 3 4\"),\n        newBlocks(\"c\", \"1 2 3 4\"));\n    Block[] fileBlocks = newBlocks(\"a\", \"1 2 3 5\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertThat(result.size(), is(1));\n\n    assertThat(result, hasCloneGroup(3,\n        newClonePart(\"a\", 0, 3),\n        newClonePart(\"b\", 0, 3),\n        newClonePart(\"b\", 4, 3),\n        newClonePart(\"b\", 8, 3),\n        newClonePart(\"c\", 0, 3)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given:\n   * <pre>\n   * b:     3 4 5 6\n   * c:         5 6 7\n   * a: 1 2 3 4 5 6 7 8 9\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * a-b (3 4 5 6)\n   * a-b-c (5 6)\n   * a-c (5 6 7)\n   * <\/pre>\n   */\n  @Test\n  public void example1() {\n    CloneIndex index = createIndex(\n        newBlocks(\"b\", \"3 4 5 6\"),\n        newBlocks(\"c\", \"5 6 7\"));\n    List<Block> fileBlocks = newBlocks(\"a\", \"1 2 3 4 5 6 7 8 9\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertThat(result.size(), is(3));\n\n    assertThat(result, hasCloneGroup(4,\n        newClonePart(\"a\", 2, 4),\n        newClonePart(\"b\", 0, 4)));\n\n    assertThat(result, hasCloneGroup(3,\n        newClonePart(\"a\", 4, 3),\n        newClonePart(\"c\", 0, 3)));\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"a\", 4, 2),\n        newClonePart(\"b\", 2, 2),\n        newClonePart(\"c\", 0, 2)));\n  }","id":27385,"modified_method":"/**\n   * Given:\n   * <pre>\n   * b:     3 4 5 6\n   * c:         5 6 7\n   * a: 1 2 3 4 5 6 7 8 9\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * a-b (3 4 5 6)\n   * a-b-c (5 6)\n   * a-c (5 6 7)\n   * <\/pre>\n   */\n  @Test\n  public void example1() {\n    CloneIndex index = createIndex(\n        newBlocks(\"b\", \"3 4 5 6\"),\n        newBlocks(\"c\", \"5 6 7\"));\n    Block[] fileBlocks = newBlocks(\"a\", \"1 2 3 4 5 6 7 8 9\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertThat(result.size(), is(3));\n\n    assertThat(result, hasCloneGroup(4,\n        newClonePart(\"a\", 2, 4),\n        newClonePart(\"b\", 0, 4)));\n\n    assertThat(result, hasCloneGroup(3,\n        newClonePart(\"a\", 4, 3),\n        newClonePart(\"c\", 0, 3)));\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"a\", 4, 2),\n        newClonePart(\"b\", 2, 2),\n        newClonePart(\"c\", 0, 2)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"protected static List<Block> newBlocks(String resourceId, String hashes) {\n    List<Block> result = Lists.newArrayList();\n    int indexInFile = 0;\n    for (int i = 0; i < hashes.length(); i += 2) {\n      Block block = newBlock(resourceId, new ByteArray(\"0\" + hashes.charAt(i)), indexInFile);\n      result.add(block);\n      indexInFile++;\n    }\n    return result;\n  }","id":27386,"modified_method":"protected static Block[] newBlocks(String resourceId, String hashes) {\n    List<Block> result = Lists.newArrayList();\n    int indexInFile = 0;\n    for (int i = 0; i < hashes.length(); i += 2) {\n      Block block = newBlock(resourceId, new ByteArray(\"0\" + hashes.charAt(i)), indexInFile);\n      result.add(block);\n      indexInFile++;\n    }\n    return result.toArray(new Block[result.size()]);\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given:\n   * <pre>\n   * b: 1 2 1 2\n   * a: 1 2 1\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * a-b-b (1 2)\n   * a-b (1 2 1)\n   * <\/pre>\n   * \"a-a-b-b (1)\" should not be reported, because fully covered by \"a-b (1 2 1)\"\n   */\n  @Test\n  public void covered() {\n    CloneIndex index = createIndex(\n        newBlocks(\"b\", \"1 2 1 2\"));\n    List<Block> fileBlocks = newBlocks(\"a\", \"1 2 1\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertThat(result.size(), is(2));\n\n    assertThat(result, hasCloneGroup(3,\n        newClonePart(\"a\", 0, 3),\n        newClonePart(\"b\", 0, 3)));\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"a\", 0, 2),\n        newClonePart(\"b\", 0, 2),\n        newClonePart(\"b\", 2, 2)));\n  }","id":27387,"modified_method":"/**\n   * Given:\n   * <pre>\n   * b: 1 2 1 2\n   * a: 1 2 1\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * a-b-b (1 2)\n   * a-b (1 2 1)\n   * <\/pre>\n   * \"a-a-b-b (1)\" should not be reported, because fully covered by \"a-b (1 2 1)\"\n   */\n  @Test\n  public void covered() {\n    CloneIndex index = createIndex(\n        newBlocks(\"b\", \"1 2 1 2\"));\n    Block[] fileBlocks = newBlocks(\"a\", \"1 2 1\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertThat(result.size(), is(2));\n\n    assertThat(result, hasCloneGroup(3,\n        newClonePart(\"a\", 0, 3),\n        newClonePart(\"b\", 0, 3)));\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"a\", 0, 2),\n        newClonePart(\"b\", 0, 2),\n        newClonePart(\"b\", 2, 2)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given: file with repeated hashes\n   * Expected: only one query of index for each unique hash\n   */\n  @Test\n  public void only_one_query_of_index_for_each_unique_hash() {\n    CloneIndex index = spy(createIndex());\n    List<Block> fileBlocks = newBlocks(\"a\", \"1 2 1 2\");\n    detect(index, fileBlocks);\n\n    verify(index).getBySequenceHash(new ByteArray(\"01\"));\n    verify(index).getBySequenceHash(new ByteArray(\"02\"));\n    verifyNoMoreInteractions(index);\n  }","id":27388,"modified_method":"/**\n   * Given: file with repeated hashes\n   * Expected: only one query of index for each unique hash\n   */\n  @Test\n  public void only_one_query_of_index_for_each_unique_hash() {\n    CloneIndex index = spy(createIndex());\n    Block[] fileBlocks = newBlocks(\"a\", \"1 2 1 2\");\n    detect(index, fileBlocks);\n\n    verify(index).getBySequenceHash(new ByteArray(\"01\"));\n    verify(index).getBySequenceHash(new ByteArray(\"02\"));\n    verifyNoMoreInteractions(index);\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given:\n   * <pre>\n   * b: 1 2 1 2 1 2 1\n   * a: 1 2 1 2 1 2\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * a-b-b (1 2 1 2 1) - note that there is overlapping among parts for \"b\"\n   * a-b (1 2 1 2 1 2)\n   * <\/pre>\n   */\n  @Test\n  public void problemWithNestedCloneGroups() {\n    CloneIndex index = createIndex(\n        newBlocks(\"b\", \"1 2 1 2 1 2 1\"));\n    List<Block> fileBlocks = newBlocks(\"a\", \"1 2 1 2 1 2\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertThat(result.size(), is(2));\n\n    assertThat(result, hasCloneGroup(6,\n        newClonePart(\"a\", 0, 6),\n        newClonePart(\"b\", 0, 6)));\n\n    assertThat(result, hasCloneGroup(5,\n        newClonePart(\"a\", 0, 5),\n        newClonePart(\"b\", 0, 5),\n        newClonePart(\"b\", 2, 5)));\n  }","id":27389,"modified_method":"/**\n   * Given:\n   * <pre>\n   * b: 1 2 1 2 1 2 1\n   * a: 1 2 1 2 1 2\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * a-b-b (1 2 1 2 1) - note that there is overlapping among parts for \"b\"\n   * a-b (1 2 1 2 1 2)\n   * <\/pre>\n   */\n  @Test\n  public void problemWithNestedCloneGroups() {\n    CloneIndex index = createIndex(\n        newBlocks(\"b\", \"1 2 1 2 1 2 1\"));\n    Block[] fileBlocks = newBlocks(\"a\", \"1 2 1 2 1 2\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertThat(result.size(), is(2));\n\n    assertThat(result, hasCloneGroup(6,\n        newClonePart(\"a\", 0, 6),\n        newClonePart(\"b\", 0, 6)));\n\n    assertThat(result, hasCloneGroup(5,\n        newClonePart(\"a\", 0, 5),\n        newClonePart(\"b\", 0, 5),\n        newClonePart(\"b\", 2, 5)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  protected List<CloneGroup> detect(CloneIndex index, List<Block> fileBlocks) {\n    return OriginalCloneDetectionAlgorithm.detect(index, fileBlocks);\n  }","id":27390,"modified_method":"@Override\n  protected List<CloneGroup> detect(CloneIndex index, Block[] fileBlocks) {\n    return OriginalCloneDetectionAlgorithm.detect(index, Arrays.asList(fileBlocks));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void configureLogging(LoggingConfiguration logging) {\n    logging.setProperties((Map) session.getSystemProperties());\n    logging.setFormat(LoggingConfiguration.FORMAT_MAVEN);\n    if (getLog().isDebugEnabled()) {\n      logging.setVerbose(true);\n    }\n  }","id":27391,"modified_method":"private void configureLogging(LoggingConfiguration logging) {\n    logging.setProperties(Maps.fromProperties(session.getSystemProperties()));\n    logging.setFormat(LoggingConfiguration.FORMAT_MAVEN);\n    if (getLog().isDebugEnabled()) {\n      logging.setVerbose(true);\n    }\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * See SONAR-3060\n   * <p>\n   * In case when file contains a lot of duplicated blocks suffix-tree works better than original algorithm,\n   * which works more than 5 minutes for this example.\n   * <\/p><p>\n   * However should be noted that current implementation with suffix-tree also is not optimal,\n   * even if it works for this example couple of seconds,\n   * because duplications should be filtered in order to remove fully-covered.\n   * But such cases nearly never appear in real-world, so current implementation is acceptable for the moment.\n   * <\/p>\n   */\n  @Test\n  public void huge() {\n    CloneIndex index = createIndex();\n    List<Block> fileBlocks = Lists.newArrayList();\n    int indexInFile = 0;\n    for (int i = 0; i < 5000; i++) {\n      Block block = newBlock(\"x\", new ByteArray(\"01\"), indexInFile);\n      fileBlocks.add(block);\n      indexInFile++;\n    }\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    assertEquals(1, result.size());\n  }","id":27392,"modified_method":"/**\n   * See SONAR-3060\n   * <p>\n   * In case when file contains a lot of duplicated blocks suffix-tree works better than original algorithm,\n   * which works more than 5 minutes for this example.\n   * <\/p><p>\n   * However should be noted that current implementation with suffix-tree also is not optimal,\n   * even if it works for this example couple of seconds,\n   * because duplications should be filtered in order to remove fully-covered.\n   * But such cases nearly never appear in real-world, so current implementation is acceptable for the moment.\n   * <\/p>\n   */\n  @Test\n  public void huge() {\n    CloneIndex index = createIndex();\n    Block[] fileBlocks = new Block[5000];\n    for (int i = 0; i < 5000; i++) {\n      fileBlocks[i] = newBlock(\"x\", new ByteArray(\"01\"), i);\n    }\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    assertEquals(1, result.size());\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  protected List<CloneGroup> detect(CloneIndex index, List<Block> fileBlocks) {\n    return SuffixTreeCloneDetectionAlgorithm.detect(index, fileBlocks);\n  }","id":27393,"modified_method":"@Override\n  protected List<CloneGroup> detect(CloneIndex index, Block[] fileBlocks) {\n    return SuffixTreeCloneDetectionAlgorithm.detect(index, Arrays.asList(fileBlocks));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * This test and associated with it suffix-tree demonstrates that without check of origin in {@link Search}\n   * possible to construct {@link CloneGroup} with a wrong origin.\n   * \n   * Given:\n   * <pre>\n   * a: 1 2 3 4\n   * b: 4 3 2\n   * c: 4 3 1\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * a-c (1)\n   * a-b (2)\n   * a-b-c (3)\n   * a-b-c (4)\n   * <pre>\n   */\n  @Test\n  public void myTest3() {\n    CloneIndex index = createIndex(\n        newBlocks(\"b\", \"4 3 2\"),\n        newBlocks(\"c\", \"4 3 1\")\n        );\n    List<Block> fileBlocks = newBlocks(\"a\", \"1 2 3 4\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertEquals(4, result.size());\n\n    assertThat(result, hasCloneGroup(1,\n        newClonePart(\"a\", 0, 1),\n        newClonePart(\"c\", 2, 1)));\n\n    assertThat(result, hasCloneGroup(1,\n        newClonePart(\"a\", 1, 1),\n        newClonePart(\"b\", 2, 1)));\n\n    assertThat(result, hasCloneGroup(1,\n        newClonePart(\"a\", 2, 1),\n        newClonePart(\"b\", 1, 1),\n        newClonePart(\"c\", 1, 1)));\n\n    assertThat(result, hasCloneGroup(1,\n        newClonePart(\"a\", 3, 1),\n        newClonePart(\"b\", 0, 1),\n        newClonePart(\"c\", 0, 1)));\n  }","id":27394,"modified_method":"/**\n   * This test and associated with it suffix-tree demonstrates that without check of origin in {@link Search}\n   * possible to construct {@link CloneGroup} with a wrong origin.\n   * \n   * Given:\n   * <pre>\n   * a: 1 2 3 4\n   * b: 4 3 2\n   * c: 4 3 1\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * a-c (1)\n   * a-b (2)\n   * a-b-c (3)\n   * a-b-c (4)\n   * <pre>\n   */\n  @Test\n  public void myTest3() {\n    CloneIndex index = createIndex(\n        newBlocks(\"b\", \"4 3 2\"),\n        newBlocks(\"c\", \"4 3 1\")\n        );\n    Block[] fileBlocks = newBlocks(\"a\", \"1 2 3 4\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertEquals(4, result.size());\n\n    assertThat(result, hasCloneGroup(1,\n        newClonePart(\"a\", 0, 1),\n        newClonePart(\"c\", 2, 1)));\n\n    assertThat(result, hasCloneGroup(1,\n        newClonePart(\"a\", 1, 1),\n        newClonePart(\"b\", 2, 1)));\n\n    assertThat(result, hasCloneGroup(1,\n        newClonePart(\"a\", 2, 1),\n        newClonePart(\"b\", 1, 1),\n        newClonePart(\"c\", 1, 1)));\n\n    assertThat(result, hasCloneGroup(1,\n        newClonePart(\"a\", 3, 1),\n        newClonePart(\"b\", 0, 1),\n        newClonePart(\"c\", 0, 1)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given: file without duplications\n   * Expected: {@link Collections#EMPTY_LIST} (no need to construct suffix-tree)\n   */\n  @Test\n  public void noDuplications() {\n    CloneIndex index = createIndex();\n    List<Block> fileBlocks = newBlocks(\"a\", \"1 2 3\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n    assertThat(result, sameInstance(Collections.EMPTY_LIST));\n  }","id":27395,"modified_method":"/**\n   * Given: file without duplications\n   * Expected: {@link Collections#EMPTY_LIST} (no need to construct suffix-tree)\n   */\n  @Test\n  public void noDuplications() {\n    CloneIndex index = createIndex();\n    Block[] fileBlocks = newBlocks(\"a\", \"1 2 3\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n    assertThat(result, sameInstance(Collections.EMPTY_LIST));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * This test and associated with it suffix-tree demonstrates that without filtering in {@link DuplicationsCollector#endOfGroup()}\n   * possible to construct {@link CloneGroup}, which is fully covered by another {@link CloneGroup}.\n   * \n   * Given:\n   * <pre>\n   * x: a 2 3 b 2 3 c 2 3 d 2 3 2 3 2 3\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * x-x (2 3 2 3)\n   * x-x-x-x-x-x (2 3)\n   * <pre>\n   * TODO Godin: however would be better to receive only (2 3)\n   */\n  @Test\n  public void myTest2() {\n    CloneIndex index = createIndex();\n    List<Block> fileBlocks = newBlocks(\"x\", \"a 2 3 b 2 3 c 2 3 d 2 3 2 3 2 3\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertEquals(2, result.size());\n\n    assertThat(result, hasCloneGroup(4,\n        newClonePart(\"x\", 10, 4),\n        newClonePart(\"x\", 12, 4)));\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"x\", 1, 2),\n        newClonePart(\"x\", 4, 2),\n        newClonePart(\"x\", 7, 2),\n        newClonePart(\"x\", 10, 2),\n        newClonePart(\"x\", 12, 2),\n        newClonePart(\"x\", 14, 2)));\n  }","id":27396,"modified_method":"/**\n   * This test and associated with it suffix-tree demonstrates that without filtering in {@link DuplicationsCollector#endOfGroup()}\n   * possible to construct {@link CloneGroup}, which is fully covered by another {@link CloneGroup}.\n   * \n   * Given:\n   * <pre>\n   * x: a 2 3 b 2 3 c 2 3 d 2 3 2 3 2 3\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * x-x (2 3 2 3)\n   * x-x-x-x-x-x (2 3)\n   * <pre>\n   * TODO Godin: however would be better to receive only (2 3)\n   */\n  @Test\n  public void myTest2() {\n    CloneIndex index = createIndex();\n    Block[] fileBlocks = newBlocks(\"x\", \"a 2 3 b 2 3 c 2 3 d 2 3 2 3 2 3\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertEquals(2, result.size());\n\n    assertThat(result, hasCloneGroup(4,\n        newClonePart(\"x\", 10, 4),\n        newClonePart(\"x\", 12, 4)));\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"x\", 1, 2),\n        newClonePart(\"x\", 4, 2),\n        newClonePart(\"x\", 7, 2),\n        newClonePart(\"x\", 10, 2),\n        newClonePart(\"x\", 12, 2),\n        newClonePart(\"x\", 14, 2)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Given:\n   * <pre>\n   * x: a 2 b 2 c 2 2 2\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * x-x (2 2)\n   * x-x-x-x-x (2)\n   * <pre>\n   * TODO Godin: however would be better to receive only (2)\n   */\n  @Test\n  public void myTest() {\n    CloneIndex index = createIndex();\n    List<Block> fileBlocks = newBlocks(\"x\", \"a 2 b 2 c 2 2 2\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertEquals(2, result.size());\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"x\", 5, 2),\n        newClonePart(\"x\", 6, 2)));\n\n    assertThat(result, hasCloneGroup(1,\n        newClonePart(\"x\", 1, 1),\n        newClonePart(\"x\", 3, 1),\n        newClonePart(\"x\", 5, 1),\n        newClonePart(\"x\", 6, 1),\n        newClonePart(\"x\", 7, 1)));\n  }","id":27397,"modified_method":"/**\n   * Given:\n   * <pre>\n   * x: a 2 b 2 c 2 2 2\n   * <\/pre>\n   * Expected:\n   * <pre>\n   * x-x (2 2)\n   * x-x-x-x-x (2)\n   * <pre>\n   * TODO Godin: however would be better to receive only (2)\n   */\n  @Test\n  public void myTest() {\n    CloneIndex index = createIndex();\n    Block[] fileBlocks = newBlocks(\"x\", \"a 2 b 2 c 2 2 2\");\n    List<CloneGroup> result = detect(index, fileBlocks);\n\n    print(result);\n    assertEquals(2, result.size());\n\n    assertThat(result, hasCloneGroup(2,\n        newClonePart(\"x\", 5, 2),\n        newClonePart(\"x\", 6, 2)));\n\n    assertThat(result, hasCloneGroup(1,\n        newClonePart(\"x\", 1, 1),\n        newClonePart(\"x\", 3, 1),\n        newClonePart(\"x\", 5, 1),\n        newClonePart(\"x\", 6, 1),\n        newClonePart(\"x\", 7, 1)));\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void register(View view) {\n    ViewProxy proxy = new ViewProxy(view);\n    if (view instanceof Widget) {\n      widgets.add(proxy);\n      widgetsPerId.put(proxy.getId(), proxy);\n\n    } else if (view instanceof Page) {\n      pagesPerId.put(proxy.getId(), proxy);\n      pages.add(proxy);\n    }\n  }","id":27398,"modified_method":"private void register(View view) {\n    if (view instanceof Widget) {\n      ViewProxy<Widget> proxy = new ViewProxy<Widget>((Widget) view);\n      widgets.add(proxy);\n      widgetsPerId.put(proxy.getId(), proxy);\n\n    } else if (view instanceof Page) {\n      ViewProxy<Page> proxy = new ViewProxy<Page>((Page) view);\n      pagesPerId.put(proxy.getId(), proxy);\n      pages.add(proxy);\n    }\n  }","commit_id":"d7d95106d0e46906477da9c7f93be156823d7bce","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n\t * Test stream encryption & decryption work, and that using different keys for decryption fails\n\t */\n\t@Test\n\tpublic void basicStreamEncryptDecrypt() throws IOException {\n\t\tbasic.streamEncryptDecrypt();\n\t}","id":27399,"modified_method":"/**\n\t * Test stream encryption & decryption work, and that using different keys for decryption fails\n\t */\n\t@Test\n\tpublic void basicStreamEncryptDecrypt() throws IOException {\n\t\tLog.setLevel(Log.FAC_PIPELINE, Level.INFO);\n\t\tbasic.streamEncryptDecrypt();\n\t}","commit_id":"052498a95a46896129b20f1d2d982c7ff855b2ed","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"protected long newBlock(ContentName rootName,\n\t\t\tlong segmentNumber, SignedInfo signedInfo,\n\t\t\tbyte contentBlock[], int blockLength, boolean isDigest,\n\t\t\tContentKeys keys) throws InvalidKeyException, InvalidAlgorithmParameterException, ContentEncodingException {\n\t\tif (null != keys) {\n\t\t\ttry {\n\t\t\t\t// Make a separate cipher, so this segmenter can be used by multiple callers at once.\n\t\t\t\tCipher thisCipher = keys.getSegmentEncryptionCipher(rootName, signedInfo.getPublisherKeyID(), segmentNumber);\n\t\t\t\t// TODO -- incurs an extra copy\n\t\t\t\tcontentBlock = thisCipher.doFinal(contentBlock, 0, blockLength);\n\n\t\t\t\t// Override content type to mark encryption.\n\t\t\t\t// Note: we don't require that writers use our facilities for encryption, so\n\t\t\t\t// content previously encrypted may not be marked as type ENCR. So on the decryption\n\t\t\t\t// side we don't require that encrypted data be marked ENCR -- if you give us a\n\t\t\t\t// decryption key, we'll try to decrypt it.\n\t\t\t\tsignedInfo.setType(ContentType.ENCR);\n\n\t\t\t} catch (IllegalBlockSizeException e) {\n\t\t\t\tLog.warning(\"Unexpected IllegalBlockSizeException for an algorithm we have already used!\");\n\t\t\t\tthrow new InvalidKeyException(\"Unexpected IllegalBlockSizeException for an algorithm we have already used!\", e);\n\t\t\t} catch (BadPaddingException e) {\n\t\t\t\tLog.warning(\"Unexpected BadPaddingException for an algorithm we have already used!\");\n\t\t\t\tthrow new InvalidAlgorithmParameterException(\"Unexpected BadPaddingException for an algorithm we have already used!\", e);\n\t\t\t}\n\n\t\t}\n\t\t_blocks[_currentBlock] =  \n\t\t\tnew ContentObject(\n\t\t\t\t\tSegmentationProfile.segmentName(rootName, segmentNumber),\n\t\t\t\t\tsignedInfo,\n\t\t\t\t\tcontentBlock, 0, blockLength,\n\t\t\t\t\t(Signature)null);\n\t\tint contentLength = _blocks[_currentBlock].contentLength();\n\t\t_currentBlock++;\n\t\treturn nextSegmentIndex(segmentNumber, contentLength);\n\t}","id":27400,"modified_method":"protected long newBlock(ContentName rootName,\n\t\t\tlong segmentNumber, SignedInfo signedInfo,\n\t\t\tbyte contentBlock[], int blockLength, boolean isDigest,\n\t\t\tContentKeys keys) throws InvalidKeyException, InvalidAlgorithmParameterException, ContentEncodingException {\n\t\tif (null != keys) {\n\t\t\ttry {\n\t\t\t\t// Make a separate cipher, so this segmenter can be used by multiple callers at once.\n\t\t\t\tCipher thisCipher = keys.getSegmentEncryptionCipher(rootName, signedInfo.getPublisherKeyID(), segmentNumber);\n\t\t\t\t// TODO -- incurs an extra copy\n\t\t\t\tcontentBlock = thisCipher.doFinal(contentBlock, 0, blockLength);\n\n\t\t\t\t// Override content type to mark encryption.\n\t\t\t\t// Note: we don't require that writers use our facilities for encryption, so\n\t\t\t\t// content previously encrypted may not be marked as type ENCR. So on the decryption\n\t\t\t\t// side we don't require that encrypted data be marked ENCR -- if you give us a\n\t\t\t\t// decryption key, we'll try to decrypt it.\n\t\t\t\tsignedInfo.setType(ContentType.ENCR);\n\n\t\t\t} catch (IllegalBlockSizeException e) {\n\t\t\t\tLog.warning(\"Unexpected IllegalBlockSizeException for an algorithm we have already used!\");\n\t\t\t\tthrow new InvalidKeyException(\"Unexpected IllegalBlockSizeException for an algorithm we have already used!\", e);\n\t\t\t} catch (BadPaddingException e) {\n\t\t\t\tLog.warning(\"Unexpected BadPaddingException for an algorithm we have already used!\");\n\t\t\t\tthrow new InvalidAlgorithmParameterException(\"Unexpected BadPaddingException for an algorithm we have already used!\", e);\n\t\t\t}\n\n\t\t}\n\t\tContentObject co =\n\t\t\tnew ContentObject(\n\t\t\t\t\tSegmentationProfile.segmentName(rootName, segmentNumber),\n\t\t\t\t\tsignedInfo,\n\t\t\t\t\tcontentBlock, 0, blockLength,\n\t\t\t\t\t(Signature)null);\n\t\t_blocks.add(co);\n\t\tint contentLength = co.contentLength();\n\t\treturn nextSegmentIndex(segmentNumber, contentLength);\n\t}","commit_id":"052498a95a46896129b20f1d2d982c7ff855b2ed","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/** \n\t * Takes pre-segmented content, builds segment names and ContentObjects, signs\n\t * them, and writes them to the flow controller to go out to the network.\n\t * @param name name prefix to use for the segments\n\t * @param baseSegmentNumber the segment number to start this batch with\n\t * @param contentBlocks content buffers containing content to put, one buffer per ContentObject\n\t * @param blockCount the number of these content buffers to write\n\t * @param firstBlockIndex the index into the content buffer array to start writing blocks\n\t * @param lastBlockLength the number of bytes of the last block to be written to use -- this\n\t * \tallows a fixed set of byte [] to be used to buffer content for segmentation, and still cope\n\t * \twith variable-length last blocks\n\t * @param type the type for the content\n\t * @param timestamp the timestamp for the content\n\t * @param freshnessSeconds the number of seconds this content should be considered fresh, or null\n\t * \t\t\tto leave unset\n\t * @param finalSegmentIndex the expected segment number of the last segment of this stream,\n\t * \t\t\t\tnull to omit, Long(-1) to set as the last segment of this put, whatever\n\t * \t\t\t\tits number turns out to be\n\t * @param locator the key locator to use\n\t * @param publisher the publisher to use\n\t * @param keys the keys to use for encrypting this segment, or null if unencrypted. The\n\t *   specific Key/IV used for this segment will be obtained by calling keys.getSegmentEncryptionCipher().\n\t * @return returns the segment identifier for the next segment to be written, if any.\n\t * \t\tIf the caller doesn't want to override this, they can hand this number back\n\t * \t    to a subsequent call to fragmentedPut.\n\t * @throws InvalidKeyException\n\t * @throws SignatureException\n\t * @throws NoSuchAlgorithmException\n\t * @throws IOException \n\t * @throws InvalidAlgorithmParameterException \n\t * @see fragmentedPut(ContentName, byte[], int, int, Long, ContentType, Integer, KeyLocator, PublisherPublicKeyDigest)\n\t * Starts segmentation at segment SegmentationProfile().baseSegment().\n\t */\n\tpublic long fragmentedPut(\n\t\t\tContentName name, long baseSegmentNumber,\n\t\t\tbyte contentBlocks[][], int blockCount, \n\t\t\tint firstBlockIndex, int lastBlockLength,\n\t\t\tContentType type, \n\t\t\tCCNTime timestamp,\n\t\t\tInteger freshnessSeconds, Long finalSegmentIndex,\n\t\t\tKeyLocator locator, \n\t\t\tPublisherPublicKeyDigest publisher, \n\t\t\tContentKeys keys) throws InvalidKeyException, SignatureException, \n\t\t\tNoSuchAlgorithmException, IOException, InvalidAlgorithmParameterException {\n\n\t\tif (blockCount == 0)\n\t\t\treturn baseSegmentNumber;\n\n\t\tif (null == publisher) {\n\t\t\tpublisher = getFlowControl().getHandle().keyManager().getDefaultKeyID();\n\t\t}\n\t\tPrivateKey signingKey = getFlowControl().getHandle().keyManager().getSigningKey(publisher);\n\n\t\tif (null == locator)\n\t\t\tlocator = getFlowControl().getHandle().keyManager().getKeyLocator(publisher);\n\n\t\tContentName rootName = SegmentationProfile.segmentRoot(name);\n\t\tgetFlowControl().addNameSpace(rootName);\n\n\t\tif (null == type) {\n\t\t\ttype = ContentType.DATA;\n\t\t}\n\n\t\tbyte [] finalBlockID = null;\n\t\tif (null != finalSegmentIndex) {\n\t\t\tif (finalSegmentIndex.longValue() == CCNSegmenter.LAST_SEGMENT) {\n\t\t\t\tlong length = 0;\n\t\t\t\tfor (int j = firstBlockIndex; j < firstBlockIndex + blockCount - 1; j++) {\n\t\t\t\t\tlength += contentBlocks[j].length;\n\t\t\t\t}\n\t\t\t\t// don't include last block length; want intervening byte count before the last block\n\n\t\t\t\t// compute final segment number\n\t\t\t\tfinalBlockID = SegmentationProfile.getSegmentNumberNameComponent(\n\t\t\t\t\t\tlastSegmentIndex(baseSegmentNumber, length, blockCount));\n\t\t\t} else {\n\t\t\t\tfinalBlockID = SegmentationProfile.getSegmentNumberNameComponent(finalSegmentIndex);\n\t\t\t}\n\t\t}\n\n\t\t//ContentObject [] contentObjects = \n\t\t//\tbuildBlocks(rootName, baseSegmentNumber, \n\t\t//\t\t\tnew SignedInfo(publisher, timestamp, type, locator, freshnessSeconds, finalBlockID),\n\t\t//\t\t\tcontentBlocks, false, blockCount, firstBlockIndex, lastBlockLength, keys);\n\t\tlong nextIndex = newBlock(rootName, baseSegmentNumber, \n\t\t\t\t\tnew SignedInfo(publisher, timestamp, type, locator, freshnessSeconds, finalBlockID),\n\t\t\t\t\tcontentBlocks[0], lastBlockLength, false, keys);\n\n\t\tif (_currentBlock >= BLOCK_BUF_COUNT) {\n\t\t\t// Digest of complete contents\n\t\t\t// If we're going to unique-ify the block names\n\t\t\t// (or just in general) we need to incorporate the names\n\t\t\t// and signedInfos in the MerkleTree blocks. \n\t\t\t// For now, this generates the root signature too, so can\n\t\t\t// ask for the signature for each block.\n\t\t\t_bulkSigner.signBlocks(_blocks, signingKey);\n\t\t\tif (null == _firstSegment) {\n\t\t\t\t_firstSegment = _blocks[0].clone();\n\t\t\t}\n\t\t\tgetFlowControl().put(_blocks);\n\t\t\t_currentBlock = 0;\n\t\n\t\t\t//return nextSegmentIndex(\n\t\t\t//\t\tSegmentationProfile.getSegmentNumber(contentObjects[firstBlockIndex + blockCount - 1].name()), \n\t\t\t//\t\tcontentObjects[firstBlockIndex + blockCount - 1].contentLength());\n\t\t}\n\t\t\n\t\treturn nextIndex;\n\t}","id":27401,"modified_method":"/** \n\t * Takes pre-segmented content, builds segment names and ContentObjects, signs\n\t * them, and writes them to the flow controller to go out to the network.\n\t * @param name name prefix to use for the segments\n\t * @param baseSegmentNumber the segment number to start this batch with\n\t * @param contentBlocks content buffers containing content to put, one buffer per ContentObject\n\t * @param blockCount the number of these content buffers to write\n\t * @param firstBlockIndex the index into the content buffer array to start writing blocks\n\t * @param lastBlockLength the number of bytes of the last block to be written to use -- this\n\t * \tallows a fixed set of byte [] to be used to buffer content for segmentation, and still cope\n\t * \twith variable-length last blocks\n\t * @param type the type for the content\n\t * @param timestamp the timestamp for the content\n\t * @param freshnessSeconds the number of seconds this content should be considered fresh, or null\n\t * \t\t\tto leave unset\n\t * @param finalSegmentIndex the expected segment number of the last segment of this stream,\n\t * \t\t\t\tnull to omit, Long(-1) to set as the last segment of this put, whatever\n\t * \t\t\t\tits number turns out to be\n\t * @param locator the key locator to use\n\t * @param publisher the publisher to use\n\t * @param keys the keys to use for encrypting this segment, or null if unencrypted. The\n\t *   specific Key/IV used for this segment will be obtained by calling keys.getSegmentEncryptionCipher().\n\t * @return returns the segment identifier for the next segment to be written, if any.\n\t * \t\tIf the caller doesn't want to override this, they can hand this number back\n\t * \t    to a subsequent call to fragmentedPut.\n\t * @throws InvalidKeyException\n\t * @throws SignatureException\n\t * @throws NoSuchAlgorithmException\n\t * @throws IOException \n\t * @throws InvalidAlgorithmParameterException \n\t * @see fragmentedPut(ContentName, byte[], int, int, Long, ContentType, Integer, KeyLocator, PublisherPublicKeyDigest)\n\t * Starts segmentation at segment SegmentationProfile().baseSegment().\n\t */\n\tpublic long fragmentedPut(\n\t\t\tContentName name, long baseSegmentNumber,\n\t\t\tbyte contentBlocks[][], int blockCount, \n\t\t\tint firstBlockIndex, int lastBlockLength,\n\t\t\tContentType type, \n\t\t\tCCNTime timestamp,\n\t\t\tInteger freshnessSeconds, Long finalSegmentIndex,\n\t\t\tKeyLocator locator, \n\t\t\tPublisherPublicKeyDigest publisher, \n\t\t\tContentKeys keys) throws InvalidKeyException, SignatureException, \n\t\t\tNoSuchAlgorithmException, IOException, InvalidAlgorithmParameterException {\n\n\t\tif (blockCount == 0)\n\t\t\treturn baseSegmentNumber;\n\n\t\tif (null == publisher) {\n\t\t\tpublisher = getFlowControl().getHandle().keyManager().getDefaultKeyID();\n\t\t}\n\t\tPrivateKey signingKey = getFlowControl().getHandle().keyManager().getSigningKey(publisher);\n\n\t\tif (null == locator)\n\t\t\tlocator = getFlowControl().getHandle().keyManager().getKeyLocator(publisher);\n\n\t\tContentName rootName = SegmentationProfile.segmentRoot(name);\n\t\tgetFlowControl().addNameSpace(rootName);\n\n\t\tif (null == type) {\n\t\t\ttype = ContentType.DATA;\n\t\t}\n\n\t\tbyte [] finalBlockID = null;\n\t\tif (null != finalSegmentIndex) {\n\t\t\tif (finalSegmentIndex.longValue() == CCNSegmenter.LAST_SEGMENT) {\n\t\t\t\tlong length = 0;\n\t\t\t\tfor (int j = firstBlockIndex; j < firstBlockIndex + blockCount - 1; j++) {\n\t\t\t\t\tlength += contentBlocks[j].length;\n\t\t\t\t}\n\t\t\t\t// don't include last block length; want intervening byte count before the last block\n\n\t\t\t\t// compute final segment number\n\t\t\t\tfinalBlockID = SegmentationProfile.getSegmentNumberNameComponent(\n\t\t\t\t\t\tlastSegmentIndex(baseSegmentNumber, length, blockCount));\n\t\t\t} else {\n\t\t\t\tfinalBlockID = SegmentationProfile.getSegmentNumberNameComponent(finalSegmentIndex);\n\t\t\t}\n\t\t}\n\n\t\t//ContentObject [] contentObjects = \n\t\t//\tbuildBlocks(rootName, baseSegmentNumber, \n\t\t//\t\t\tnew SignedInfo(publisher, timestamp, type, locator, freshnessSeconds, finalBlockID),\n\t\t//\t\t\tcontentBlocks, false, blockCount, firstBlockIndex, lastBlockLength, keys);\n\t\tlong nextIndex = baseSegmentNumber;\n\t\tfor (int i = firstBlockIndex; i < firstBlockIndex + blockCount; i++) {\n\t\t\tnextIndex = newBlock(rootName, nextIndex, \n\t\t\t\t\t\tnew SignedInfo(publisher, timestamp, type, locator, freshnessSeconds, finalBlockID),\n\t\t\t\t\t\t\t\tcontentBlocks[i], (i < firstBlockIndex + blockCount - 1)\n\t\t\t\t\t\t\t\t?  contentBlocks[i].length : lastBlockLength, false, keys);\n\t\t}\n\n\t\tif (_blocks.size() >= BLOCK_BUF_COUNT || null != finalSegmentIndex) {\n\t\t\t// Digest of complete contents\n\t\t\t// If we're going to unique-ify the block names\n\t\t\t// (or just in general) we need to incorporate the names\n\t\t\t// and signedInfos in the MerkleTree blocks. \n\t\t\t// For now, this generates the root signature too, so can\n\t\t\t// ask for the signature for each block.\n\t\t\tContentObject[] blocks = new ContentObject[_blocks.size()];\n\t\t\t_blocks.toArray(blocks);\n\t\t\t_bulkSigner.signBlocks(blocks, signingKey);\n\t\t\tif (null == _firstSegment) {\n\t\t\t\t_firstSegment = _blocks.get(0).clone();\n\t\t\t}\n\t\t\tgetFlowControl().put(blocks);\n\t\t\t_blocks.clear();\n\t\n\t\t\t//return nextSegmentIndex(\n\t\t\t//\t\tSegmentationProfile.getSegmentNumber(contentObjects[firstBlockIndex + blockCount - 1].name()), \n\t\t\t//\t\tcontentObjects[firstBlockIndex + blockCount - 1].contentLength());\n\t\t}\n\t\t\n\t\treturn nextIndex;\n\t}","commit_id":"052498a95a46896129b20f1d2d982c7ff855b2ed","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public AnnounceSender(Message m, long uid, PeerNode source, OpennetManager om, Node node) {\n\t\tthis.source = source;\n\t\tthis.uid = uid;\n\t\tthis.msg = m;\n\t\tthis.om = om;\n\t\tthis.node = node;\n\t\tthis.onlyNode = null;\n\t\thtl = m.getShort(DMT.HTL);\n\t\ttarget = m.getDouble(DMT.TARGET_LOCATION); // FIXME validate\n\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tcb = null;\n\t}","id":27402,"modified_method":"public AnnounceSender(Message m, long uid, PeerNode source, OpennetManager om, Node node) {\n\t\tthis.source = source;\n\t\tthis.uid = uid;\n\t\tthis.msg = m;\n\t\tthis.om = om;\n\t\tthis.node = node;\n\t\tthis.onlyNode = null;\n\t\thtl = (short) Math.min(m.getShort(DMT.HTL), node.maxHTL());\n\t\ttarget = m.getDouble(DMT.TARGET_LOCATION); // FIXME validate\n\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tcb = null;\n\t}","commit_id":"c2762380e0fe488ade4a1ac6d1969e4d54d3191d","url":"https://github.com/freenet/fred"},{"original_method":"@DB()\n    @SuppressWarnings(\"unchecked\")\n    protected <M> M getObject(Class<M> type, ResultSet rs, int index) throws SQLException {\n        if (type == String.class) {\n            byte[] bytes = rs.getBytes(index);\n            if (bytes != null) {\n                try {\n                    return (M)new String(bytes, \"UTF-8\");\n                } catch (UnsupportedEncodingException e) {\n                    throw new CloudRuntimeException(\"UnsupportedEncodingException exception while converting UTF-8 data\");\n                }\n            } else {\n                return null;\n            }\n        } else if (type == int.class) {\n            return (M)new Integer(rs.getInt(index));\n        } else if (type == Integer.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M)new Integer(rs.getInt(index));\n            }\n        } else if (type == long.class) {\n            return (M)new Long(rs.getLong(index));\n        } else if (type == Long.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M)new Long(rs.getLong(index));\n            }\n        } else if (type == Date.class) {\n            final Object data = rs.getDate(index);\n            if (data == null) {\n                return null;\n            } else {\n                return (M)DateUtil.parseDateString(s_gmtTimeZone, rs.getString(index));\n            }\n        } else if (type == short.class) {\n            return (M)new Short(rs.getShort(index));\n        } else if (type == Short.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M)new Short(rs.getShort(index));\n            }\n        } else if (type == boolean.class) {\n            return (M)new Boolean(rs.getBoolean(index));\n        } else if (type == Boolean.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M)new Boolean(rs.getBoolean(index));\n            }\n        } else if (type == float.class) {\n            return (M)new Float(rs.getFloat(index));\n        } else if (type == Float.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M)new Float(rs.getFloat(index));\n            }\n        } else if (type == double.class) {\n            return (M)new Double(rs.getDouble(index));\n        } else if (type == Double.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M)new Double(rs.getDouble(index));\n            }\n        } else if (type == byte.class) {\n            return (M)new Byte(rs.getByte(index));\n        } else if (type == Byte.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M)new Byte(rs.getByte(index));\n            }\n        } else if (type == Calendar.class) {\n            final Object data = rs.getDate(index);\n            if (data == null) {\n                return null;\n            } else {\n                final Calendar cal = Calendar.getInstance();\n                cal.setTime(DateUtil.parseDateString(s_gmtTimeZone, rs.getString(index)));\n                return (M)cal;\n            }\n        } else if (type == byte[].class) {\n            return (M)rs.getBytes(index);\n        } else {\n            return (M)rs.getObject(index);\n        }\n    }","id":27403,"modified_method":"/**\n     * Get a value from a result set.\n     *\n     * @param type\n     *            the expected type of the result\n     * @param rs\n     *            the result set\n     * @param index\n     *            the index of the column\n     * @return the result in the requested type\n     * @throws SQLException\n     */\n    @DB()\n    @SuppressWarnings(\"unchecked\")\n    protected static <M> M getObject(Class<M> type, ResultSet rs, int index) throws SQLException {\n        if (type == String.class) {\n            byte[] bytes = rs.getBytes(index);\n            if (bytes != null) {\n                try {\n                    return (M)new String(bytes, \"UTF-8\");\n                } catch (UnsupportedEncodingException e) {\n                    throw new CloudRuntimeException(\"UnsupportedEncodingException exception while converting UTF-8 data\");\n                }\n            } else {\n                return null;\n            }\n        } else if (type == int.class) {\n            return (M)new Integer(rs.getInt(index));\n        } else if (type == Integer.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M)new Integer(rs.getInt(index));\n            }\n        } else if (type == long.class) {\n            return (M) (Long) rs.getLong(index);\n        } else if (type == Long.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M) (Long) rs.getLong(index);\n            }\n        } else if (type == Date.class) {\n            final Object data = rs.getDate(index);\n            if (data == null) {\n                return null;\n            } else {\n                return (M)DateUtil.parseDateString(s_gmtTimeZone, rs.getString(index));\n            }\n        } else if (type == short.class) {\n            return (M) (Short) rs.getShort(index);\n        } else if (type == Short.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M) (Short) rs.getShort(index);\n            }\n        } else if (type == boolean.class) {\n            return (M) (Boolean) rs.getBoolean(index);\n        } else if (type == Boolean.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M) (Boolean) rs.getBoolean(index);\n            }\n        } else if (type == float.class) {\n            return (M) (Float) rs.getFloat(index);\n        } else if (type == Float.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M) (Float) rs.getFloat(index);\n            }\n        } else if (type == double.class) {\n            return (M) (Double) rs.getDouble(index);\n        } else if (type == Double.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M) (Double) rs.getDouble(index);\n            }\n        } else if (type == byte.class) {\n            return (M) (Byte) rs.getByte(index);\n        } else if (type == Byte.class) {\n            if (rs.getObject(index) == null) {\n                return null;\n            } else {\n                return (M) (Byte) rs.getByte(index);\n            }\n        } else if (type == Calendar.class) {\n            final Object data = rs.getDate(index);\n            if (data == null) {\n                return null;\n            } else {\n                final Calendar cal = Calendar.getInstance();\n                cal.setTime(DateUtil.parseDateString(s_gmtTimeZone, rs.getString(index)));\n                return (M)cal;\n            }\n        } else if (type == byte[].class) {\n            return (M)rs.getBytes(index);\n        } else {\n            return (M)rs.getObject(index);\n        }\n    }","commit_id":"e4da3775c99847deee22073a662b95777b2ac285","url":"https://github.com/apache/cloudstack"},{"original_method":"private void configureMetaManager(Resource[] pluginDescriptors) {\n        for (int i = 0; i < pluginDescriptors.length; i++) {\n            Resource pluginDescriptor = pluginDescriptors[i];\n            InputStream inputStream = null;\n\n            try {\n                inputStream = pluginDescriptor.getInputStream();\n                DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n                Document doc = builder.parse(inputStream);\n                Element pluginElement = doc.getDocumentElement();\n\n                String pluginName = pluginElement.getAttribute(\"name\");\n                String pluginVersion = pluginElement.getAttribute(\"version\");\n\n                if(StringUtils.isBlank(pluginName)) throw new GrailsConfigurationException(\"Plug-in descriptor [\"+pluginDescriptor+\"] doesn't specify a plug-in name. It must be corrupted, try re-install the plug-in\");\n                if(StringUtils.isBlank(pluginVersion)) throw new GrailsConfigurationException(\"Plug-in descriptor [\"+pluginDescriptor+\"] with name [\"+pluginName+\"] doesn't specify a plug-in version. It must be corrupted, try re-install the plug-in\");\n\n                XPath xpath = XPathFactory.newInstance().newXPath();\n                NodeList nodes = (NodeList) xpath.evaluate(\n                        \"/plugin/resources/resource\",\n                        doc,\n                        XPathConstants.NODESET);\n                List pluginResources = new ArrayList();\n                for (int j = 0; j < nodes.getLength(); j++) {\n                    Node node = nodes.item(j);\n                    pluginResources.add(node.getTextContent());\n                }\n\n                PluginMeta pluginMeta = new PluginMeta(pluginName, pluginVersion);\n                pluginMeta.pluginResources = (String[])pluginResources.toArray(new String[pluginResources.size()]);\n\n                pluginInfo.put(pluginName, pluginMeta);\n\n                for (int j = 0; j < pluginMeta.pluginResources.length; j++) {\n                    String pluginResource = pluginMeta.pluginResources[j];\n                    resourceToPluginMap.put(pluginResource, pluginMeta);\n\n                }\n            } catch (Exception e) {\n                throw new GrailsConfigurationException(\"Error loading plug-in descriptor [\" + pluginDescriptor+ \"]:\" + e.getMessage(),e);\n            } finally {\n                if(inputStream!=null) {\n                    try {\n                        inputStream.close();\n                    } catch (IOException ioe) {\n                        LOG.debug(\"Error closing plugin.xml stream.\", ioe);\n                    }\n                }\n            }\n        }\n    }","id":27404,"modified_method":"private void configureMetaManager(Resource[] pluginDescriptors) {\n        for (int i = 0; i < pluginDescriptors.length; i++) {\n            Resource pluginDescriptor = pluginDescriptors[i];\n            InputStream inputStream = null;\n\n            try {\n                inputStream = pluginDescriptor.getInputStream();\n                SAXReader reader = new SAXReader();\n                Document doc = reader.read(inputStream);\n                Element pluginElement = doc.getRootElement();\n\n                String pluginName = pluginElement.attribute(\"name\").getText();\n                String pluginVersion = pluginElement.attribute(\"version\").getText();\n\n                if(StringUtils.isBlank(pluginName)) throw new GrailsConfigurationException(\"Plug-in descriptor [\"+pluginDescriptor+\"] doesn't specify a plug-in name. It must be corrupted, try re-install the plug-in\");\n                if(StringUtils.isBlank(pluginVersion)) throw new GrailsConfigurationException(\"Plug-in descriptor [\"+pluginDescriptor+\"] with name [\"+pluginName+\"] doesn't specify a plug-in version. It must be corrupted, try re-install the plug-in\");\n\n                XPath xpath = DocumentHelper.createXPath(\"/plugin/resources/resource\");\n                List nodes = xpath.selectNodes(doc);\n                List pluginResources = new ArrayList();\n                for (int j = 0; j < nodes.size(); j++) {\n                    Element node = (Element) nodes.get(j);\n                    pluginResources.add(node.getText());\n                }\n\n                PluginMeta pluginMeta = new PluginMeta(pluginName, pluginVersion);\n                pluginMeta.pluginResources = (String[])pluginResources.toArray(new String[pluginResources.size()]);\n\n                pluginInfo.put(pluginName, pluginMeta);\n\n                for (int j = 0; j < pluginMeta.pluginResources.length; j++) {\n                    String pluginResource = pluginMeta.pluginResources[j];\n                    resourceToPluginMap.put(pluginResource, pluginMeta);\n\n                }\n            } catch (Exception e) {\n                throw new GrailsConfigurationException(\"Error loading plug-in descriptor [\" + pluginDescriptor+ \"]:\" + e.getMessage(),e);\n            } finally {\n                if(inputStream!=null) {\n                    try {\n                        inputStream.close();\n                    } catch (IOException ioe) {\n                        LOG.debug(\"Error closing plugin.xml stream.\", ioe);\n                    }\n                }\n            }\n        }\n    }","commit_id":"4a44c6b650ce2d0398b1fcf1b107e0836b005150","url":"https://github.com/grails/grails-core"},{"original_method":"public void afterPropertiesSet() throws Exception {\n        if(descriptor != null && descriptor.exists()) {\n            // Enforce UTF-8 on source code for reloads\n            CompilerConfiguration config = CompilerConfiguration.DEFAULT;\n            config.setSourceEncoding(\"UTF-8\");\n\n            GroovyClassLoader classLoader = new GroovyClassLoader(Thread.currentThread().getContextClassLoader(), config);\n            List classes = new ArrayList();\n            InputStream inputStream = null;\n            try {\n                inputStream = descriptor.getInputStream();\n\n                // Get all the resource nodes in the descriptor.\n                XPath xpath = XPathFactory.newInstance().newXPath();\n                NodeList grailsClasses = (NodeList) xpath.evaluate(\n                        \"/grails/resources/resource\",\n                        new InputSource(inputStream),\n                        XPathConstants.NODESET);\n\n                // Each resource node should contain a full class name,\n                // so we attempt to load them as classes.\n                for (int i = 0; i < grailsClasses.getLength(); i++) {\n                    Node node = grailsClasses.item(i);\n                    try {\n                        classes.add(classLoader.loadClass(node.getTextContent()));\n                    } catch (ClassNotFoundException e) {\n                        LOG.warn(\"Class with name [\"+node.getTextContent()+\"] was not found, and hence not loaded. Possible empty class or script definition?\");\n                    }\n                }\n            } finally {\n                if(inputStream!=null)\n                    inputStream.close();\n            }\n            Class[] loadedClasses = (Class[])classes.toArray(new Class[classes.size()]);\n            this.grailsApplication = new DefaultGrailsApplication(loadedClasses, classLoader);\n        }\n        else {\n            Assert.notNull(resourceLoader, \"Property [resourceLoader] must be set!\");\n\n            this.grailsApplication = new DefaultGrailsApplication(this.resourceLoader);\n        }\n\n        ApplicationHolder.setApplication(this.grailsApplication);\n    }","id":27405,"modified_method":"public void afterPropertiesSet() throws Exception {\n        if(descriptor != null && descriptor.exists()) {\n            // Enforce UTF-8 on source code for reloads\n            CompilerConfiguration config = CompilerConfiguration.DEFAULT;\n            config.setSourceEncoding(\"UTF-8\");\n\n            GroovyClassLoader classLoader = new GroovyClassLoader(Thread.currentThread().getContextClassLoader(), config);\n            List classes = new ArrayList();\n            InputStream inputStream = null;\n            try {\n                inputStream = descriptor.getInputStream();\n\n                // Get all the resource nodes in the descriptor.\n                SAXReader reader = new SAXReader();\n                XPath xpath = DocumentHelper.createXPath(\"/grails/resources/resource\");\n                List grailsClasses = xpath.selectNodes(reader.read(inputStream));\n\n                // Each resource node should contain a full class name,\n                // so we attempt to load them as classes.\n                for (int i = 0; i < grailsClasses.size(); i++) {\n                    Element node = (Element) grailsClasses.get(i);\n                    try {\n                        classes.add(classLoader.loadClass(node.getText()));\n                    } catch (ClassNotFoundException e) {\n                        LOG.warn(\"Class with name [\"+node.getText()+\"] was not found, and hence not loaded. Possible empty class or script definition?\");\n                    }\n                }\n            } finally {\n                if(inputStream!=null)\n                    inputStream.close();\n            }\n            Class[] loadedClasses = (Class[])classes.toArray(new Class[classes.size()]);\n            this.grailsApplication = new DefaultGrailsApplication(loadedClasses, classLoader);\n        }\n        else {\n            Assert.notNull(resourceLoader, \"Property [resourceLoader] must be set!\");\n\n            this.grailsApplication = new DefaultGrailsApplication(this.resourceLoader);\n        }\n\n        ApplicationHolder.setApplication(this.grailsApplication);\n    }","commit_id":"4a44c6b650ce2d0398b1fcf1b107e0836b005150","url":"https://github.com/grails/grails-core"},{"original_method":"public void afterPropertiesSet() throws Exception {\n\t\tthis.pluginManager = PluginManagerHolder.getPluginManager();\n\n\t\tif(pluginManager == null) {\n            if(descriptor == null) throw new IllegalStateException(\"Cannot create PluginManager, /WEB-INF/grails.xml not found!\");\n\n            GroovyClassLoader classLoader = application.getClassLoader();\n            List classes = new ArrayList();\n            InputStream inputStream = null;\n\n            try {\n                inputStream = descriptor.getInputStream();\n                XPath xpath = XPathFactory.newInstance().newXPath();\n                NodeList nodes = (NodeList) xpath.evaluate(\n                        \"/grails/plugins/plugin\",\n                        new InputSource(inputStream),\n                        XPathConstants.NODESET);\n                for (int i = 0; i < nodes.getLength(); i++) {\n                    Node node = nodes.item(i);\n                    final String pluginName = node.getTextContent();\n                    classes.add(classLoader.loadClass(pluginName));\n                }\n            } finally {\n                if(inputStream!=null)\n                    inputStream.close();\n            }\n\n            Class[] loadedPlugins = (Class[])classes.toArray(new Class[classes.size()]);\n\n            pluginManager = new DefaultGrailsPluginManager(loadedPlugins, application);\n            pluginManager.setApplicationContext(applicationContext);\n            PluginManagerHolder.setPluginManager(pluginManager);\n\t\t\tpluginManager.loadPlugins();\n\t\t}\n        this.pluginManager.setApplication(application);\n        this.pluginManager.doArtefactConfiguration();\n        application.initialise();\n    }","id":27406,"modified_method":"public void afterPropertiesSet() throws Exception {\n\t\tthis.pluginManager = PluginManagerHolder.getPluginManager();\n\n\t\tif(pluginManager == null) {\n            if(descriptor == null) throw new IllegalStateException(\"Cannot create PluginManager, /WEB-INF/grails.xml not found!\");\n\n            GroovyClassLoader classLoader = application.getClassLoader();\n            List classes = new ArrayList();\n            InputStream inputStream = null;\n\n            try {\n                inputStream = descriptor.getInputStream();\n                SAXReader reader = new SAXReader();\n                XPath xpath = DocumentHelper.createXPath(\"/grails/plugins/plugin\");\n                List nodes = xpath.selectNodes(reader.read(inputStream));  \n\n                for (int i = 0; i < nodes.size(); i++) {\n                    Element node = (Element) nodes.get(i);\n                    final String pluginName = node.getText();\n                    classes.add(classLoader.loadClass(pluginName));\n                }\n            } finally {\n                if(inputStream!=null)\n                    inputStream.close();\n            }\n\n            Class[] loadedPlugins = (Class[])classes.toArray(new Class[classes.size()]);\n\n            pluginManager = new DefaultGrailsPluginManager(loadedPlugins, application);\n            pluginManager.setApplicationContext(applicationContext);\n            PluginManagerHolder.setPluginManager(pluginManager);\n\t\t\tpluginManager.loadPlugins();\n\t\t}\n        this.pluginManager.setApplication(application);\n        this.pluginManager.doArtefactConfiguration();\n        application.initialise();\n    }","commit_id":"4a44c6b650ce2d0398b1fcf1b107e0836b005150","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Gets all properties from one file node in the manifest.xml.<p>\n     * \n     * @param currentElement the current file node\n     * @param resType the resource type of this node\n     * @param propertyName name of a property to be added to all resources\n     * @param propertyValue value of that property\n     * @param deleteProperties the list of properies to be deleted\n     * @return HashMap with all properties blonging to the resource\n     * @throws CmsException if something goes wrong\n     */\n    protected HashMap getPropertiesFromXml(Element currentElement, int resType, String propertyName, String propertyValue, List deleteProperties) throws CmsException {\n        // get all properties for this file\n        NodeList propertyNodes = currentElement.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_PROPERTY);\n        // clear all stores for property information\n        HashMap properties = new HashMap();\n        // add the module property to properties\n        if (propertyName != null && propertyValue != null && !\"\".equals(propertyName)) {\n            createPropertydefinition(propertyName, resType);\n            properties.put(propertyName, propertyValue);\n        }\n        // walk through all properties\n        for (int j = 0; j < propertyNodes.getLength(); j++) {\n            Element currentProperty = (Element)propertyNodes.item(j);\n            // get name information for this property\n            String name = getTextNodeValue(currentProperty, I_CmsConstants.C_EXPORT_TAG_NAME);\n            // check if this is an unwanted property\n            if ((name != null) && (!deleteProperties.contains(name))) {\n                // get value information for this property\n                String value = getTextNodeValue(currentProperty, I_CmsConstants.C_EXPORT_TAG_VALUE);\n                if (value == null) {\n                    // create an empty property\n                    value = \"\";\n                }\n                // add property\n                properties.put(name, value);\n                createPropertydefinition(name, resType);\n            }\n        }\n        return properties;\n    }","id":27407,"modified_method":"/**\n     * Gets all properties from one file node in the manifest.xml.<p>\n     * \n     * @param currentElement the current file node\n     * @param resType the resource type of this node\n     * @param propertyName name of a property to be added to all resources\n     * @param propertyValue value of that property\n     * @param deleteProperties the list of properies to be deleted\n     * @return HashMap with all properties blonging to the resource\n     * @throws CmsException if something goes wrong\n     */\n    protected HashMap getPropertiesFromXml(Element currentElement, int resType, String propertyName, String propertyValue, List deleteProperties) throws CmsException {\n        // get all properties for this file\n        List propertyNodes = currentElement.selectNodes(\"./\" + I_CmsConstants.C_EXPORT_TAG_PROPERTIES + \"/\" + I_CmsConstants.C_EXPORT_TAG_PROPERTY);\n        // clear all stores for property information\n        HashMap properties = new HashMap();\n        // add the module property to properties\n        if (propertyName != null && propertyValue != null && !\"\".equals(propertyName)) {\n            createPropertydefinition(propertyName, resType);\n            properties.put(propertyName, propertyValue);\n        }\n        // walk through all properties\n        for (int j = 0; j < propertyNodes.size(); j++) {\n            Element currentProperty = (Element)propertyNodes.get(j);\n            // get name information for this property\n            String name = CmsImport.getChildElementTextValue(currentProperty, I_CmsConstants.C_EXPORT_TAG_NAME);\n            // check if this is an unwanted property\n            if ((name != null) && (!deleteProperties.contains(name))) {\n                // get value information for this property\n                String value = CmsImport.getChildElementTextValue(currentProperty, I_CmsConstants.C_EXPORT_TAG_VALUE);\n                if (value == null) {\n                    // create an empty property\n                    value = \"\";\n                }\n                // add property\n                properties.put(name, value);\n                createPropertydefinition(name, resType);\n            }\n        }\n        return properties;\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Helper for checking the templates from C_VFS_PATH_BODIES.<p>\n     * \n     * @param el the Element to check\n     * @return true if the template is ok\n     */\n    private boolean checkTemplateTagOk(Element el) {\n\n        NodeList list = el.getChildNodes();\n        if (list.getLength() > 3) {\n            // only the one template tag allowed (and the two empty text nodes)\n            return false;\n        }\n        for (int i = 0; i < list.getLength(); i++) {\n            Node n = list.item(i);\n            short ntype = n.getNodeType();\n            if (ntype == Node.TEXT_NODE) {\n                String nodeValue = n.getNodeValue();\n                if ((nodeValue != null) && (nodeValue.trim().length() > 0)) {\n                    return false;\n                }\n            } else if (ntype == Node.ELEMENT_NODE) {\n                // this should be <ELEMENT name=\"frametemplate\"/>\n                if (!\"element\".equalsIgnoreCase(n.getNodeName())) {\n                    return false;\n                }\n                if (!\"frametemplate\".equals(((Element)n).getAttribute(\"name\"))) {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }","id":27408,"modified_method":"/**\n     * Helper for checking the templates from C_VFS_PATH_BODIES.<p>\n     * \n     * @param el the Element to check\n     * @return true if the template is ok\n     */\n    private boolean checkTemplateTagOk(Element el) {\n\n        List list = el.elements();\n        if (list.size() > 3) {\n            // only the one template tag allowed (and the two empty text nodes)\n            return false;\n        }\n        for (int i = 0; i < list.size(); i++) {\n            Node n = (Node) list.get(i);\n            short ntype = n.getNodeType();\n            if (ntype == Node.TEXT_NODE) {\n                String nodeValue = n.getText();\n                if ((nodeValue != null) && (nodeValue.trim().length() > 0)) {\n                    return false;\n                }\n            } else if (ntype == Node.ELEMENT_NODE) {\n                // this should be <ELEMENT name=\"frametemplate\"/>\n                if (!\"element\".equalsIgnoreCase(n.getName())) {\n                    return false;\n                }\n                if (!\"frametemplate\".equals(((Element)n).attribute(\"name\").getText())) {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Checks if the resource path information fullfills the rules for template and body paths.<p>\n     *\n     * @param name the absolute path of the resource in the VFS\n     * @param content the content of the resource.\n     * @param type the resource type\n     * @return true if the resource is ok\n     */\n    public boolean isTemplateCompatible(String name, byte[] content, String type) {\n\n        // dont check folders\n        if (CmsResourceTypeFolder.C_RESOURCE_TYPE_NAME.equals(type)) {\n            return true;\n        }\n        if (name == null) {\n            return false;\n        }\n        if (name.startsWith(I_CmsWpConstants.C_VFS_PATH_BODIES)) {\n            // this is a body file\n            if (!CmsResourceTypePlain.C_RESOURCE_TYPE_NAME.equals(type)) {\n                // only plain files allowed in content/bodys\n                return false;\n            }\n            // to check the rest we have to parse the content\n            try {\n                org.w3c.dom.Document xmlDoc = A_CmsXmlContent.getXmlParser().parse(new java.io.StringReader(new String(content)));\n                for (Node n = xmlDoc.getFirstChild(); n != null; n = treeWalker(xmlDoc, n)) {\n                    short ntype = n.getNodeType();\n                    if (((ntype > Node.CDATA_SECTION_NODE) && ntype < Node.DOCUMENT_TYPE_NODE) || (ntype == Node.ATTRIBUTE_NODE)) {\n                        return false;\n                    }\n                    if (n.getNodeType() == Node.ELEMENT_NODE) {\n                        String tagName = n.getNodeName();\n                        if (!(\"template\".equalsIgnoreCase(tagName) || \"xmltemplate\".equalsIgnoreCase(tagName))) {\n                            return false;\n                        }\n                    }\n                }\n            } catch (Exception e) {\n                return false;\n            }\n\n        } else if (name.startsWith(I_CmsWpConstants.C_VFS_PATH_DEFAULT_TEMPLATES) || (name.startsWith(I_CmsWpConstants.C_VFS_PATH_MODULES) && name.indexOf(\"/\" + I_CmsWpConstants.C_VFS_DIR_TEMPLATES) > -1)) {\n            // this is a template file\n            if (!CmsResourceTypePlain.C_RESOURCE_TYPE_NAME.equals(type)) {\n                // only plain templates are allowed\n                return false;\n            }\n            // to check the rest we have to parse the content\n            try {\n                org.w3c.dom.Document xmlDoc = A_CmsXmlContent.getXmlParser().parse(new java.io.StringReader(new String(content)));\n                // we check the sub nodes from <xmltemplate>\n                // there should be the two elementdefs, one template and some empty text nodes\n                NodeList list = xmlDoc.getChildNodes();\n                list = (list.item(0)).getChildNodes();\n                int counterEldefs = 0;\n                int counterTeplate = 0;\n                for (int i = 0; i < list.getLength(); i++) {\n                    Node n = list.item(i);\n                    short nodeType = n.getNodeType();\n                    if (nodeType == Node.ELEMENT_NODE) {\n                        // allowed is the Elementdef or the template tag\n                        String nodeName = n.getNodeName();\n                        if (\"elementdef\".equalsIgnoreCase(nodeName)) {\n                            // check the rules for the elementdefinitions\n                            if (!checkElementDefOk((Element)n)) {\n                                return false;\n                            }\n                            counterEldefs++;\n                        } else if (\"template\".equalsIgnoreCase(nodeName)) {\n                            // check if the template node is ok.\n                            if (!checkTemplateTagOk((Element)n)) {\n                                return false;\n                            }\n                            counterTeplate++;\n                        } else {\n                            //this name is not allowed\n                            return false;\n                        }\n\n                    } else if (nodeType == Node.TEXT_NODE) {\n                        // text node is only allowed if the value is empty\n                        String nodeValue = n.getNodeValue();\n                        if ((nodeValue != null) && (nodeValue.trim().length() > 0)) {\n                            return false;\n                        }\n                    } else {\n                        // this nodeType is not allowed\n                        return false;\n                    }\n                }\n                if (counterEldefs != 2 || counterTeplate != 1) {\n                    // there have to be exactly two elementdefs and one template tag\n                    return false;\n                }\n\n            } catch (Exception e) {\n                return false;\n            }\n        }\n        return true;\n    }","id":27409,"modified_method":"/**\n     * Checks if the resource path information fullfills the rules for template and body paths.<p>\n     *\n     * @param name the absolute path of the resource in the VFS\n     * @param content the content of the resource.\n     * @param type the resource type\n     * @return true if the resource is ok\n     */\n    public boolean isTemplateCompatible(String name, byte[] content, String type) {\n\n        // dont check folders\n        if (CmsResourceTypeFolder.C_RESOURCE_TYPE_NAME.equals(type)) {\n            return true;\n        }\n        if (name == null) {\n            return false;\n        }\n        if (name.startsWith(I_CmsWpConstants.C_VFS_PATH_BODIES)) {\n            // this is a body file\n            if (!CmsResourceTypePlain.C_RESOURCE_TYPE_NAME.equals(type)) {\n                // only plain files allowed in content/bodys\n                return false;\n            }\n            // to check the rest we have to parse the content\n            try {\n                Document xmlDoc = DocumentHelper.parseText(new String(content));\n                for (Node n = (Node) xmlDoc.content().get(0); n != null; n = treeWalker(xmlDoc, n)) {\n                    short ntype = n.getNodeType();\n                    if (((ntype > Node.CDATA_SECTION_NODE) && ntype < Node.DOCUMENT_TYPE_NODE) || (ntype == Node.ATTRIBUTE_NODE)) {\n                        return false;\n                    }\n                    if (n.getNodeType() == Node.ELEMENT_NODE) {\n                        String tagName = n.getName();\n                        if (!(\"template\".equalsIgnoreCase(tagName) || \"xmltemplate\".equalsIgnoreCase(tagName))) {\n                            return false;\n                        }\n                    }\n                }\n            } catch (Exception e) {\n                return false;\n            }\n\n        } else if (name.startsWith(I_CmsWpConstants.C_VFS_PATH_DEFAULT_TEMPLATES) || (name.startsWith(I_CmsWpConstants.C_VFS_PATH_MODULES) && name.indexOf(\"/\" + I_CmsWpConstants.C_VFS_DIR_TEMPLATES) > -1)) {\n            // this is a template file\n            if (!CmsResourceTypePlain.C_RESOURCE_TYPE_NAME.equals(type)) {\n                // only plain templates are allowed\n                return false;\n            }\n            // to check the rest we have to parse the content\n            try {\n                Document xmlDoc = DocumentHelper.parseText(new String(content));                \n                \n                // we check the sub nodes from <xmltemplate>\n                // there should be the two elementdefs, one template and some empty text nodes\n                List list = xmlDoc.getRootElement().content();\n                list = ((Element) list.get(0)).content();\n                int counterEldefs = 0;\n                int counterTeplate = 0;\n                for (int i = 0; i < list.size(); i++) {\n                    Node n = (Node) list.get(i);\n                    short nodeType = n.getNodeType();\n                    if (nodeType == Node.ELEMENT_NODE) {\n                        // allowed is the Elementdef or the template tag\n                        String nodeName = n.getName();\n                        if (\"elementdef\".equalsIgnoreCase(nodeName)) {\n                            // check the rules for the elementdefinitions\n                            if (!checkElementDefOk((Element)n)) {\n                                return false;\n                            }\n                            counterEldefs++;\n                        } else if (\"template\".equalsIgnoreCase(nodeName)) {\n                            // check if the template node is ok.\n                            if (!checkTemplateTagOk((Element)n)) {\n                                return false;\n                            }\n                            counterTeplate++;\n                        } else {\n                            //this name is not allowed\n                            return false;\n                        }\n\n                    } else if (nodeType == Node.TEXT_NODE) {\n                        // text node is only allowed if the value is empty\n                        String nodeValue = n.getText();\n                        if ((nodeValue != null) && (nodeValue.trim().length() > 0)) {\n                            return false;\n                        }\n                    } else {\n                        // this nodeType is not allowed\n                        return false;\n                    }\n                }\n                if (counterEldefs != 2 || counterTeplate != 1) {\n                    // there have to be exactly two elementdefs and one template tag\n                    return false;\n                }\n\n            } catch (Exception e) {\n                return false;\n            }\n        }\n        return true;\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Helper for checking the templates from C_VFS_PATH_BODIES.<p>\n     * \n     * @param el the Element to check\n     * @return true if the element definition is ok\n     */\n    private boolean checkElementDefOk(Element el) {\n        // first the name\n        String elementName = el.getAttribute(\"name\");\n        if (!(\"contenttemplate\".equalsIgnoreCase(elementName) || \"frametemplate\".equalsIgnoreCase(elementName))) {\n            // no other elementdefinition allowed\n            return false;\n        }\n        // now the templateclass only the standard class is allowed\n        String elClass = el.getElementsByTagName(\"CLASS\").item(0).getFirstChild().getNodeValue();\n        if (!I_CmsConstants.C_XML_CONTROL_DEFAULT_CLASS.equals(elClass)) {\n            return false;\n        }\n        String elTemplate = el.getElementsByTagName(\"TEMPLATE\").item(0).getFirstChild().getNodeValue();\n        if (elTemplate == null || elTemplate.indexOf(elementName) < 1) {\n            // it must be in the path /content/\"elementName\"/ or in\n            // the path /system/modules/\"modulename\"/\"elementName\"/\n            return false;\n        }\n        return true;\n    }","id":27410,"modified_method":"/**\n     * Helper for checking the templates from C_VFS_PATH_BODIES.<p>\n     * \n     * @param el the Element to check\n     * @return true if the element definition is ok\n     */\n    private boolean checkElementDefOk(Element el) {\n        // first the name\n        String elementName = el.attribute(\"name\").getText();\n        if (!(\"contenttemplate\".equalsIgnoreCase(elementName) || \"frametemplate\".equalsIgnoreCase(elementName))) {\n            // no other elementdefinition allowed\n            return false;\n        }\n        // now the templateclass only the standard class is allowed\n        String elClass = CmsImport.getChildElementTextValue(el,\"CLASS\");\n        if (!I_CmsConstants.C_XML_CONTROL_DEFAULT_CLASS.equals(elClass)) {\n            return false;\n        }\n        String elTemplate = CmsImport.getChildElementTextValue(el,\"TEMPLATE\");\n        if (elTemplate == null || elTemplate.indexOf(elementName) < 1) {\n            // it must be in the path /content/\"elementName\"/ or in\n            // the path /system/modules/\"modulename\"/\"elementName\"/\n            return false;\n        }\n        return true;\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Help method to walk through the DOM document tree by a width-first-order.<p>\n     * \n     * @param root the root Node\n     * @param n a Node representing the current position in the tree\n     * @return next node\n     */\n    private Node treeWalkerWidth(Node root, Node n) {\n        if (n == root) {\n            return null;\n        }\n        Node nextnode = null;\n        Node parent = null;\n        nextnode = n.getNextSibling();\n        parent = n.getParentNode();\n        while (nextnode == null && parent != null && parent != root) {\n            // child has sibling\n            // last chance: we take our parent's sibling\n            // (or our grandparent's sibling...)\n            nextnode = parent.getNextSibling();\n            parent = parent.getParentNode();\n        }\n        return nextnode;\n    }","id":27411,"modified_method":"/**\n     * Help method to walk through the document tree by a breadth-first-order.<p>\n     * \n     * @param root the root Node\n     * @param n a Node representing the current position in the tree\n     * @return next node\n     */\n    private Node treeWalkerBreadth(Node root, Node n) {\n        if (n == root) {\n            return null;\n        }\n        Node nextnode = null;\n        Node parent = null;\n        nextnode = getNextSibling(n);        \n        parent = n.getParent();\n        while (nextnode == null && parent != null && parent != root) {\n            // child has sibling\n            // last chance: we take our parent's sibling\n            // (or our grandparent's sibling...)\n            nextnode = getNextSibling(parent);\n            parent = parent.getParent();\n        }\n        return nextnode;\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Help method to walk through the DOM document tree.<p>\n     *\n     * @param root the root Node\n     * @param n a Node representing the current position in the tree\n     * @return next node\n     */\n    private Node treeWalker(Node root, Node n) {\n        Node nextnode = null;\n        if (n.hasChildNodes()) {\n            // child has child notes itself\n            // process these first in the next loop\n            nextnode = n.getFirstChild();\n        } else {\n            // child has no subchild.\n            // so we take the next sibling\n            nextnode = treeWalkerWidth(root, n);\n        }\n        return nextnode;\n    }","id":27412,"modified_method":"/**\n     * Help method to walk through the DOM document tree.<p>\n     *\n     * @param root the root Node\n     * @param n a Node representing the current position in the tree\n     * @return next node\n     */\n    private Node treeWalker(Node root, Node n) {\n        Node nextnode = null;\n        if (n.hasContent()) {\n            // child has child notes itself\n            // process these first in the next loop\n            nextnode = (Node) ((Element)n).content().get(0);\n        } else {\n            // child has no subchild.\n            // so we take the next sibling\n            nextnode = treeWalkerBreadth(root, n);\n        }\n        return nextnode;\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns a list of files which are both in the import and in the virtual file system.<p>\n     * \n     * @return Vector of Strings, complete path of the files\n     * @throws CmsException if something goes wrong\n     */\n    public Vector getConflictingFilenames() throws CmsException {\n        NodeList fileNodes;\n        Element currentElement;\n        String source, destination;\n        Vector conflictNames = new Vector();\n        try {\n            // get all file-nodes\n            fileNodes = m_docXml.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_FILE);\n\n            // walk through all files in manifest\n            for (int i = 0; i < fileNodes.getLength(); i++) {\n                currentElement = (Element)fileNodes.item(i);\n                source = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SOURCE);\n                destination = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESTINATION);\n                if (source != null) {\n                    // only consider files\n                    boolean exists = true;\n                    try {\n                        CmsResource res = m_cms.readFileHeader(m_importPath + destination);\n                        if (res.getState() == I_CmsConstants.C_STATE_DELETED) {\n                            exists = false;\n                        }\n                    } catch (CmsException e) {\n                        exists = false;\n                    }\n                    if (exists) {\n                        conflictNames.addElement(m_importPath + destination);\n                    }\n                }\n            }\n        } catch (Exception exc) {\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n        if (m_importZip != null) {\n            try {\n                m_importZip.close();\n            } catch (IOException exc) {\n                throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n            }\n        }\n        return conflictNames;\n    }","id":27413,"modified_method":"/**\n     * Returns a list of files which are both in the import and in the virtual file system.<p>\n     * \n     * @return Vector of Strings, complete path of the files\n     * @throws CmsException if something goes wrong\n     */\n    public Vector getConflictingFilenames() throws CmsException {\n        List fileNodes;\n        Element currentElement;\n        String source, destination;\n        Vector conflictNames = new Vector();\n        //String xpathExpr = null;\n\n        try {\n            // get all file-nodes\n            fileNodes = m_docXml.selectNodes(\"//\" + I_CmsConstants.C_EXPORT_TAG_FILE);\n\n            // walk through all files in manifest\n            for (int i = 0; i < fileNodes.size(); i++) {\n                currentElement = (Element)fileNodes.get(i);\n                source = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SOURCE);\n                destination = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESTINATION);\n                if (source != null) {\n                    // only consider files\n                    boolean exists = true;\n                    try {\n                        CmsResource res = m_cms.readFileHeader(m_importPath + destination);\n                        if (res.getState() == I_CmsConstants.C_STATE_DELETED) {\n                            exists = false;\n                        }\n                    } catch (CmsException e) {\n                        exists = false;\n                    }\n                    if (exists) {\n                        conflictNames.addElement(m_importPath + destination);\n                    }\n                }\n            }\n        } catch (Exception exc) {\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n        if (m_importZip != null) {\n            try {\n                m_importZip.close();\n            } catch (IOException exc) {\n                throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n            }\n        }\n        return conflictNames;\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Initalizes the import.<p>\n     * \n     * @throws CmsException if something goes wrong\n     */\n    protected void openImportFile() throws CmsException {\n        // create the digest\n        createDigest();\n\n        // open the import resource\n        getImportResource();\n\n        // read the xml-config file\n        getXmlConfigFile();\n\n        // try to read the export version nummber\n        try {\n            m_importVersion = Integer.parseInt(getTextNodeValue((Element)m_docXml.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_INFO).item(0), I_CmsConstants.C_EXPORT_TAG_VERSION));\n        } catch (Exception e) {\n            //ignore the exception, the export file has no version nummber (version 0).\n        }\n        m_report.println(\"Import Version \"+m_importVersion, I_CmsReport.C_FORMAT_NOTE);\n    }","id":27414,"modified_method":"/**\n     * Initalizes the import.<p>\n     * \n     * @throws CmsException if something goes wrong\n     */\n    protected void openImportFile() throws CmsException {\n        // create the digest\n        createDigest();\n\n        // open the import resource\n        getImportResource();\n\n        // read the xml-config file\n        m_docXml = CmsImport.getXmlDocument(getFileBytes(I_CmsConstants.C_EXPORT_XMLFILENAME));\n\n        // try to read the export version number\n        try {\n            m_importVersion = Integer.parseInt(((Element)m_docXml.selectNodes(\"//\" + I_CmsConstants.C_EXPORT_TAG_EXPORT + \"/\" + I_CmsConstants.C_EXPORT_TAG_INFO + \"/\" + I_CmsConstants.C_EXPORT_TAG_VERSION).get(0)).getTextTrim());\n        } catch (Exception e) {\n            //ignore the exception, the export file has no version nummber (version 0).\n        }\n        m_report.println(\"Import Version \"+m_importVersion, I_CmsReport.C_FORMAT_NOTE);\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the text for a node.\n     *\n     * @param elem the parent element\n     * @param tag the tagname to get the value from\n     * @return the value of the tag\n     */\n    protected String getTextNodeValue(Element elem, String tag) {\n        try {\n            return elem.getElementsByTagName(tag).item(0).getFirstChild().getNodeValue();\n        } catch (Exception exc) {\n            // ignore the exception and return null\n            return null;\n        }\n    }","id":27415,"modified_method":"/**\n     * Returns the value of a child element with a specified name for a given parent element.<p>\n     *\n     * @param parentElement the parent element\n     * @param elementName the child element name\n     * @return the value of the child node, or null if something went wrong\n     */\n    static String getChildElementTextValue(Element parentElement, String elementName) {\n        try {\n            // get the first child element matching the specified name\n            Element childElement = (Element) parentElement.selectNodes(\"./\" + elementName).get(0);\n            // return the value of the child element\n            return childElement.getTextTrim();\n        } catch (Exception e) {\n            return null;\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns a Vector of resource names that are needed to create a project for this import.<p>\n     * \n     * It calls the method getConflictingFileNames if needed, to calculate these resources.\n     * \n     * @return a Vector of resource names that are needed to create a project for this import\n     * @throws CmsException if something goes wrong\n     */\n    public Vector getResourcesForProject() throws CmsException {\n        NodeList fileNodes;\n        Element currentElement;\n        String destination;\n        Vector resources = new Vector();\n        try {\n            if (m_importingChannelData) {\n                m_cms.getRequestContext().saveSiteRoot();\n                m_cms.setContextToCos();\n            }\n\n            // get all file-nodes\n            fileNodes = m_docXml.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_FILE);\n            // walk through all files in manifest\n            for (int i = 0; i < fileNodes.getLength(); i++) {\n                currentElement = (Element)fileNodes.item(i);\n                destination = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESTINATION);\n\n                // get the resources for a project\n                try {\n                    String resource = destination.substring(0, destination.indexOf(\"/\", 1) + 1);\n                    resource = m_importPath + resource;\n                    // add the resource, if it dosen't already exist\n                    if ((!resources.contains(resource)) && (!resource.equals(m_importPath))) {\n                        try {\n                            m_cms.readFolder(resource);\n                            // this resource exists in the current project -> add it\n                            resources.addElement(resource);\n                        } catch (CmsException exc) {\n                            // this resource is missing - we need the root-folder\n                            resources.addElement(I_CmsConstants.C_ROOT);\n                        }\n                    }\n                } catch (StringIndexOutOfBoundsException exc) {\n                    // this is a resource in root-folder: ignore the excpetion\n                }\n            }\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        } finally {\n            if (m_importingChannelData) {\n                m_cms.getRequestContext().restoreSiteRoot();\n            }\n        }\n        if (m_importZip != null) {\n            try {\n                m_importZip.close();\n            } catch (IOException exc) {\n                m_report.println(exc);\n                throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n            }\n        }\n        if (resources.contains(I_CmsConstants.C_ROOT)) {\n            // we have to import root - forget the rest!\n            resources.removeAllElements();\n            resources.addElement(I_CmsConstants.C_ROOT);\n        }\n        return resources;\n    }","id":27416,"modified_method":"/**\n     * Returns a Vector of resource names that are needed to create a project for this import.<p>\n     * \n     * It calls the method getConflictingFileNames if needed, to calculate these resources.\n     * \n     * @return a Vector of resource names that are needed to create a project for this import\n     * @throws CmsException if something goes wrong\n     */\n    public Vector getResourcesForProject() throws CmsException {\n        List fileNodes;\n        Element currentElement;\n        String destination;\n        Vector resources = new Vector();\n        try {\n            if (m_importingChannelData) {\n                m_cms.getRequestContext().saveSiteRoot();\n                m_cms.setContextToCos();\n            }\n\n            // get all file-nodes\n            fileNodes = m_docXml.selectNodes(\"//\" + I_CmsConstants.C_EXPORT_TAG_FILE);\n\n            // walk through all files in manifest\n            for (int i = 0; i < fileNodes.size(); i++) {\n                currentElement = (Element)fileNodes.get(i);\n                destination = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESTINATION);\n\n                // get the resources for a project\n                try {\n                    String resource = destination.substring(0, destination.indexOf(\"/\", 1) + 1);\n                    resource = m_importPath + resource;\n                    // add the resource, if it dosen't already exist\n                    if ((!resources.contains(resource)) && (!resource.equals(m_importPath))) {\n                        try {\n                            m_cms.readFolder(resource);\n                            // this resource exists in the current project -> add it\n                            resources.addElement(resource);\n                        } catch (CmsException exc) {\n                            // this resource is missing - we need the root-folder\n                            resources.addElement(I_CmsConstants.C_ROOT);\n                        }\n                    }\n                } catch (StringIndexOutOfBoundsException exc) {\n                    // this is a resource in root-folder: ignore the excpetion\n                }\n            }\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        } finally {\n            if (m_importingChannelData) {\n                m_cms.getRequestContext().restoreSiteRoot();\n            }\n        }\n        if (m_importZip != null) {\n            try {\n                m_importZip.close();\n            } catch (IOException exc) {\n                m_report.println(exc);\n                throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n            }\n        }\n        if (resources.contains(I_CmsConstants.C_ROOT)) {\n            // we have to import root - forget the rest!\n            resources.removeAllElements();\n            resources.addElement(I_CmsConstants.C_ROOT);\n        }\n        return resources;\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Imports the resources for a module.<p>\n     * \n     * @param excludeList filenames of files and folders which should not \n     *      be (over)written in the virtual file system (not used when null)\n     * @param writtenFilenames filenames of the files and folder which have actually been \n     *      successfully written (not used when null)\n     * @param fileCodes code of the written files (for the registry)\n     *      (not used when null)\n     * @param propertyName name of a property to be added to all resources\n     * @param propertyValue value of that property\n     * @throws CmsException if something goes wrong\n     */\n    public void importResources(Vector excludeList, Vector writtenFilenames, Vector fileCodes, String propertyName, String propertyValue) throws CmsException {\n        // initialize the import\n        boolean run=false;\n        openImportFile();              \n        try {\n            // now find the correct import implementation         \n            Iterator i=m_ImportImplementations.iterator();\n            while (i.hasNext()) {\n                 I_CmsImport imp=((I_CmsImport)i.next());\n                    if (imp.getVersion()==m_importVersion) {\n                        // this is the correct import version, so call it for the import process\n                        imp.importResources(m_cms, m_importPath, m_report, \n                                            m_digest, m_importResource, m_importZip, m_docXml, excludeList, writtenFilenames, fileCodes, propertyName, propertyValue);\n                        run=true;\n                        break;                    \n                    }\n            }   \n            if (!run) {\n                m_report.println(m_report.key(\"report.import_db_noclass\"), I_CmsReport.C_FORMAT_WARNING);               \n            }\n        } catch (CmsException e) {\n            throw e;\n        } finally {\n            // close the import file\n            closeImportFile();\n            OpenCms.fireCmsEvent(new CmsEvent(new CmsObject(), I_CmsEventListener.EVENT_CLEAR_OFFLINE_CACHES, Collections.EMPTY_MAP, false));\n        }\n    }","id":27417,"modified_method":"/**\n     * Imports the resources for a module.<p>\n     * \n     * @param excludeList filenames of files and folders which should not \n     *      be (over)written in the virtual file system (not used when null)\n     * @param writtenFilenames filenames of the files and folder which have actually been \n     *      successfully written (not used when null)\n     * @param fileCodes code of the written files (for the registry)\n     *      (not used when null)\n     * @param propertyName name of a property to be added to all resources\n     * @param propertyValue value of that property\n     * @throws CmsException if something goes wrong\n     */\n    public void importResources(Vector excludeList, Vector writtenFilenames, Vector fileCodes, String propertyName, String propertyValue) throws CmsException {\n        // initialize the import\n        boolean run=false;\n        openImportFile();              \n        try {\n            // now find the correct import implementation         \n            Iterator i=m_ImportImplementations.iterator();\n            while (i.hasNext()) {\n                 I_CmsImport imp=((I_CmsImport)i.next());\n                    if (imp.getVersion()==m_importVersion) {\n                        // this is the correct import version, so call it for the import process\n                        imp.importResources(m_cms, m_importPath, m_report, \n                                            m_digest, m_importResource, m_importZip, m_docXml, excludeList, writtenFilenames, fileCodes, propertyName, propertyValue);\n                        run=true;\n                        break;                    \n                    }\n            }   \n            if (!run) {\n                m_report.println(m_report.key(\"report.import_db_noclass\"), I_CmsReport.C_FORMAT_WARNING);               \n            }\n        } catch (CmsException e) {\n            m_report.println(e);\n            throw e;\n        } finally {\n            // close the import file\n            closeImportFile();\n            OpenCms.fireCmsEvent(new CmsEvent(new CmsObject(), I_CmsEventListener.EVENT_CLEAR_OFFLINE_CACHES, Collections.EMPTY_MAP, false));\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Gets the available modules in the current system\n     * and imports the data for existing modules.<p>\n     * @throws CmsException in case something goes wrong\n     */\n    public void importModuleMasters() throws CmsException {\n        // get all available modules in this system\n        Hashtable moduleExportables = new Hashtable();\n        m_cms.getRegistry().getModuleExportables(moduleExportables);\n        // now get the subIds of each module\n        Hashtable availableModules = new Hashtable();\n        Enumeration modElements = moduleExportables.elements();\n        while (modElements.hasMoreElements()) {\n            String classname = (String)modElements.nextElement();\n            // get the subId of the module\n            try {\n                int subId = getContentDefinition(classname, new Class[] {CmsObject.class }, new Object[] {m_cms }).getSubId();\n                // put the subid and the classname into the hashtable of available modules\n                availableModules.put(\"\" + subId, classname);\n            } catch (Exception e) {\n                // do nothing\n            }\n\n        }\n        // now get the moduledata for import\n        NodeList masterNodes;\n        Element currentElement;\n        String subid;\n\n        try {\n            // get all master-nodes\n            masterNodes = m_docXml.getElementsByTagName(CmsExportModuledata.C_EXPORT_TAG_MASTER);\n            int length = masterNodes.getLength();\n\n            // walk through all files in manifest\n            for (int i = 0; i < length; i++) {\n                currentElement = (Element)masterNodes.item(i);\n                // get the subid of the modulemaster\n                subid = getTextNodeValue(currentElement, CmsExportModuledata.C_EXPORT_TAG_MASTER_SUBID);\n                // check if there exists a module with this subid\n                String classname = (String)availableModules.get(subid);\n                if ((classname != null) && !(\"\".equals(classname.trim()))) {\n                    // import the dataset, the channelrelation and the media\n                    m_report.print(\" ( \" + (i + 1) + \" / \" + length + \" ) \", I_CmsReport.C_FORMAT_NOTE);\n                    importMaster(subid, classname, currentElement);\n                }\n            }\n        } catch (Exception exc) {\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n    }","id":27418,"modified_method":"/**\n     * Gets the available modules in the current system\n     * and imports the data for existing modules.<p>\n     * @throws CmsException in case something goes wrong\n     */\n    public void importModuleMasters() throws CmsException {\n        // get all available modules in this system\n        Hashtable moduleExportables = new Hashtable();\n        m_cms.getRegistry().getModuleExportables(moduleExportables);\n        // now get the subIds of each module\n        Hashtable availableModules = new Hashtable();\n        Enumeration modElements = moduleExportables.elements();\n        while (modElements.hasMoreElements()) {\n            String classname = (String)modElements.nextElement();\n            // get the subId of the module\n            try {\n                int subId = getContentDefinition(classname, new Class[] {CmsObject.class }, new Object[] {m_cms }).getSubId();\n                // put the subid and the classname into the hashtable of available modules\n                availableModules.put(\"\" + subId, classname);\n            } catch (Exception e) {\n                // do nothing\n            }\n\n        }\n        // now get the moduledata for import\n        List masterNodes;\n        Element currentElement;\n        String subid;\n\n        try {\n            // get all master-nodes\n            masterNodes = m_docXml.selectNodes(\"//\" + CmsExportModuledata.C_EXPORT_TAG_MASTER);\n            int length = masterNodes.size();\n\n            // walk through all files in manifest\n            for (int i = 0; i < length; i++) {\n                currentElement = (Element)masterNodes.get(i);\n                // get the subid of the modulemaster\n                subid = CmsImport.getChildElementTextValue(currentElement, CmsExportModuledata.C_EXPORT_TAG_MASTER_SUBID);\n                // check if there exists a module with this subid\n                String classname = (String)availableModules.get(subid);\n                if ((classname != null) && !(\"\".equals(classname.trim()))) {\n                    // import the dataset, the channelrelation and the media\n                    m_report.print(\" ( \" + (i + 1) + \" / \" + length + \" ) \", I_CmsReport.C_FORMAT_NOTE);\n                    importMaster(subid, classname, currentElement);\n                }\n            }\n        } catch (Exception exc) {\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Gets the information for a single media from the media file.<p>\n     * \n     * @param mediaFilename the name of the xml file that contains the media information\n     * @return the media information from the media file\n     * @throws CmsException in case something goes wrong\n     */\n    private CmsMasterMedia getMediaData(String mediaFilename) throws CmsException {\n        String position, width, height, size, mimetype, type, title, name, description, contentfile;\n        // get the new media object\n        CmsMasterMedia newMedia = new CmsMasterMedia();\n        // get the file with the data of the media\n        Document mediaXml = this.getXmlFile(mediaFilename);\n        Element media = mediaXml.getDocumentElement();\n        position = getTextNodeValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_POSITION);\n        try {\n            newMedia.setPosition(Integer.parseInt(position));\n        } catch (Exception e) {\n            // ignore\n        }\n        width = getTextNodeValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_WIDTH);\n        try {\n            newMedia.setWidth(Integer.parseInt(width));\n        } catch (Exception e) {\n            // ignore\n        }\n        height = getTextNodeValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_HEIGHT);\n        try {\n            newMedia.setHeight(Integer.parseInt(height));\n        } catch (Exception e) {\n            // ignore\n        }\n        size = getTextNodeValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_SIZE);\n        try {\n            newMedia.setSize(Integer.parseInt(size));\n        } catch (Exception e) {\n            // ignore\n        }\n        mimetype = getTextNodeValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_MIMETYPE);\n        newMedia.setMimetype(mimetype);\n        type = getTextNodeValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_TYPE);\n        try {\n            newMedia.setType(Integer.parseInt(type));\n        } catch (Exception e) {\n            // ignore\n        }\n        title = getTextNodeValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_TITLE);\n        newMedia.setTitle(title);\n        name = getTextNodeValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_NAME);\n        newMedia.setName(name);\n        description = getTextNodeValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_DESCRIPTION);\n        newMedia.setDescription(description);\n        // get the content of the media\n        contentfile = getTextNodeValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_CONTENT);\n        byte[] mediacontent = null;\n        try {\n            mediacontent = getFileBytes(contentfile);\n        } catch (Exception e) {\n            m_report.println(e);\n        }\n        newMedia.setMedia(mediacontent);\n        mediacontent = null;\n        return newMedia;\n    }","id":27419,"modified_method":"/**\n     * Gets the information for a single media from the media file.<p>\n     * \n     * @param mediaFilename the name of the xml file that contains the media information\n     * @return the media information from the media file\n     * @throws CmsException in case something goes wrong\n     */\n    private CmsMasterMedia getMediaData(String mediaFilename) throws CmsException {\n        String position, width, height, size, mimetype, type, title, name, description, contentfile;\n        // get the new media object\n        CmsMasterMedia newMedia = new CmsMasterMedia();\n        // get the file with the data of the media\n        Document mediaXml = CmsImport.getXmlDocument(getFileReader(mediaFilename));\n        Element media = mediaXml.getRootElement();\n        position = CmsImport.getChildElementTextValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_POSITION);\n        try {\n            newMedia.setPosition(Integer.parseInt(position));\n        } catch (Exception e) {\n            // ignore\n        }\n        width = CmsImport.getChildElementTextValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_WIDTH);\n        try {\n            newMedia.setWidth(Integer.parseInt(width));\n        } catch (Exception e) {\n            // ignore\n        }\n        height = CmsImport.getChildElementTextValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_HEIGHT);\n        try {\n            newMedia.setHeight(Integer.parseInt(height));\n        } catch (Exception e) {\n            // ignore\n        }\n        size = CmsImport.getChildElementTextValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_SIZE);\n        try {\n            newMedia.setSize(Integer.parseInt(size));\n        } catch (Exception e) {\n            // ignore\n        }\n        mimetype = CmsImport.getChildElementTextValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_MIMETYPE);\n        newMedia.setMimetype(mimetype);\n        type = CmsImport.getChildElementTextValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_TYPE);\n        try {\n            newMedia.setType(Integer.parseInt(type));\n        } catch (Exception e) {\n            // ignore\n        }\n        title = CmsImport.getChildElementTextValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_TITLE);\n        newMedia.setTitle(title);\n        name = CmsImport.getChildElementTextValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_NAME);\n        newMedia.setName(name);\n        description = CmsImport.getChildElementTextValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_DESCRIPTION);\n        newMedia.setDescription(description);\n        // get the content of the media\n        contentfile = CmsImport.getChildElementTextValue(media, CmsExportModuledata.C_EXPORT_TAG_MEDIA_CONTENT);\n        byte[] mediacontent = null;\n        try {\n            mediacontent = getFileBytes(contentfile);\n        } catch (Exception e) {\n            m_report.println(e);\n        }\n        newMedia.setMedia(mediacontent);\n        mediacontent = null;\n        return newMedia;\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns a buffered reader for this resource using the importFile as root.<p>\n     *\n     * @param filename the name of the file to read\n     * @return the file reader for this file\n     * @throws Exception in case something goes wrong\n     */\n    private BufferedReader getFileReader(String filename) throws Exception {\n        // is this a zip-file?\n        if (m_importZip != null) {\n            // yes\n            ZipEntry entry = m_importZip.getEntry(filename);\n            InputStream stream = m_importZip.getInputStream(entry);\n            return new BufferedReader(new InputStreamReader(stream));\n        } else {\n            // no - use directory\n            File xmlFile = new File(m_importResource, filename);\n            return new BufferedReader(new FileReader(xmlFile));\n        }\n    }","id":27420,"modified_method":"/**\n     * Returns a buffered reader for this resource using the importFile as root.<p>\n     *\n     * @param filename the name of the file to read\n     * @return the file reader for this file\n     * @throws CmsException in case something goes wrong\n     */\n    private BufferedReader getFileReader(String filename) throws CmsException {\n        try {\n            // is this a zip-file?\n            if (m_importZip != null) {\n                // yes\n                ZipEntry entry = m_importZip.getEntry(filename);\n                InputStream stream = m_importZip.getInputStream(entry);\n                return new BufferedReader(new InputStreamReader(stream));\n            } else {\n                // no - use directory\n                File xmlFile = new File(m_importResource, filename);\n                return new BufferedReader(new FileReader(xmlFile));\n            }\n        } catch (Exception e) {\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, e);\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Imports the moduledata and writes them to the cms even if there already exist \n     * conflicting files.<p>\n     * @throws CmsException in case something goes wrong\n     */\n    public void importResources() throws CmsException {\n        // initialize the import\n        openImportFile();\n        try {\n            // first import the channels\n            m_report.println(m_report.key(\"report.import_channels_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n            //importAllResources(null, null, null, null, null);\n            // now find the correct import implementation    \n            m_cms.getRequestContext().saveSiteRoot();\n            m_cms.setContextToCos();     \n            Iterator i=m_ImportImplementations.iterator();\n                while (i.hasNext()) {\n                    I_CmsImport imp=((I_CmsImport)i.next());\n                    if (imp.getVersion()==m_importVersion) {\n                        // this is the correct import version, so call it for the import process\n                        imp.importResources(m_cms, m_importPath, m_report, \n                                        m_digest, m_importResource, m_importZip, m_docXml, null, null, null, null, null);\n                        break;                    \n                     }\n                 }   \n            m_cms.getRequestContext().restoreSiteRoot();\n            m_report.println(m_report.key(\"report.import_channels_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n \n            // now import the moduledata\n            m_report.println(m_report.key(\"report.import_moduledata_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n            importModuleMasters();\n            m_report.println(m_report.key(\"report.import_moduledata_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n        } catch (CmsException e) {\n            throw e;\n        } finally {\n            // close the import file\n            closeImportFile();\n        }\n    }","id":27421,"modified_method":"/**\n     * Imports the moduledata and writes them to the cms even if there already exist \n     * conflicting files.<p>\n     * @throws CmsException in case something goes wrong\n     */\n    public void importResources() throws CmsException {\n        // initialize the import\n        openImportFile();\n        try {\n            // first import the channels\n            m_report.println(m_report.key(\"report.import_channels_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n            //importAllResources(null, null, null, null, null);\n            // now find the correct import implementation    \n            m_cms.getRequestContext().saveSiteRoot();\n            m_cms.setContextToCos();     \n            Iterator i=m_ImportImplementations.iterator();\n                while (i.hasNext()) {\n                    I_CmsImport imp=((I_CmsImport)i.next());\n                    if (imp.getVersion()==m_importVersion) {\n                        // this is the correct import version, so call it for the import process\n                        imp.importResources(m_cms, m_importPath, m_report, \n                                        m_digest, m_importResource, m_importZip, m_docXml, null, null, null, null, null);\n                        break;                    \n                     }\n                 }   \n            m_cms.getRequestContext().restoreSiteRoot();\n            m_report.println(m_report.key(\"report.import_channels_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n \n            // now import the moduledata\n            m_report.println(m_report.key(\"report.import_moduledata_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n            importModuleMasters();\n            m_report.println(m_report.key(\"report.import_moduledata_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n        } catch (CmsException e) {\n            m_report.println(e);\n            throw e;\n        } finally {\n            // close the import file\n            closeImportFile();\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Gets the media of the master from the xml file.<p>\n     * \n     * @param currentElement The current element of the xml file\n     * @return vector containing the media (CmsMasterMedia object) of the master\n     * @throws CmsException in case something goes wrong\n     */\n    private Vector getMasterMedia(Element currentElement) throws CmsException {\n        Vector masterMedia = new Vector();\n        // get the mediafiles of the master\n        NodeList mediaNodes = currentElement.getElementsByTagName(CmsExportModuledata.C_EXPORT_TAG_MASTER_MEDIA);\n        // walk through all media\n        for (int j = 0; j < mediaNodes.getLength(); j++) {\n            // get the name of the file where the mediadata is stored\n            String mediaFilename = ((Element)mediaNodes.item(j)).getFirstChild().getNodeValue();\n            // try to get the information of the media\n            if ((mediaFilename != null) && !(\"\".equals(mediaFilename.trim()))) {\n                CmsMasterMedia newMedia = getMediaData(mediaFilename);\n                masterMedia.add(newMedia);\n            }\n        }\n        return masterMedia;\n    }","id":27422,"modified_method":"/**\n     * Gets the media of the master from the xml file.<p>\n     * \n     * @param currentElement The current element of the xml file\n     * @return vector containing the media (CmsMasterMedia object) of the master\n     * @throws CmsException in case something goes wrong\n     */\n    private Vector getMasterMedia(Element currentElement) throws CmsException {\n        Vector masterMedia = new Vector();\n        // get the mediafiles of the master\n        List mediaNodes = currentElement.selectNodes(\"*/\" + CmsExportModuledata.C_EXPORT_TAG_MASTER_MEDIA);\n        // walk through all media\n        for (int j = 0; j < mediaNodes.size(); j++) {\n            // get the name of the file where the mediadata is stored\n            String mediaFilename = ((Element) mediaNodes.get(j)).getTextTrim();\n            // try to get the information of the media\n            if ((mediaFilename != null) && !(\"\".equals(mediaFilename.trim()))) {\n                CmsMasterMedia newMedia = getMediaData(mediaFilename);\n                masterMedia.add(newMedia);\n            }\n        }\n        return masterMedia;\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Gets the dataset for the master from the xml file.<p>\n     * \n     * @param subId the subid of the module\n     * @param currentElement the current element of the xml file\n     * @return the dataset with the imported information\n     * @throws CmsException in case something goes wrong\n     */\n    private CmsMasterDataSet getMasterDataSet(int subId, Element currentElement) throws CmsException {\n        String datasetfile, username, groupname, accessFlags, publicationDate, purgeDate, flags, feedId, feedReference, feedFilename, title;\n        // get the new dataset object\n        CmsMasterDataSet newDataset = new CmsMasterDataSet();\n\n        // get the file with the dataset of the master\n        datasetfile = getTextNodeValue(currentElement, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATASET);\n        Document datasetXml = this.getXmlFile(datasetfile);\n        Element dataset = datasetXml.getDocumentElement();\n        // get the information from the dataset and add it to the dataset\n        // first add the subid\n        newDataset.m_subId = subId;\n        newDataset.m_masterId = CmsUUID.getNullUUID();\n        // get the id of the user or set the owner to the current user\n        username = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_USER);\n        CmsUUID userId = m_cms.getRequestContext().currentUser().getId();\n        try {\n            if ((username != null) && !(\"\".equals(username.trim()))) {\n                userId = m_cms.readUser(username).getId();\n            }\n        } catch (Exception e) {\n            // userId will be current user\n        }\n        newDataset.m_userId = userId;\n        // get the id of the group or set the group to the current user        \n        groupname = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_GROUP);\n\n        CmsUUID groupId = CmsUUID.getNullUUID();\n        try {\n            if ((groupname != null) && !(\"\".equals(groupname.trim()))) {\n                groupId = m_cms.readGroup(groupname).getId();\n            }\n        } catch (Exception e) {\n            try {\n                groupId = m_cms.readGroup(OpenCms.getDefaultUsers().getGroupUsers()).getId();\n            } catch (Exception e2) {\n                // ignore\n            }\n        }\n\n        newDataset.m_groupId = groupId;\n        // set the accessflags or the default flags\n        accessFlags = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_ACCESSFLAGS);\n        try {\n            newDataset.m_accessFlags = Integer.parseInt(accessFlags);\n        } catch (Exception e) {\n            newDataset.m_accessFlags = I_CmsConstants.C_ACCESS_DEFAULT_FLAGS;\n        }\n        // set the publication date\n        publicationDate = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_PUBLICATIONDATE);\n        try {\n            newDataset.m_publicationDate = convertDate(publicationDate);\n        } catch (Exception e) {\n            // ignore\n        }\n        // set the purge date\n        purgeDate = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_PURGEDATE);\n        try {\n            newDataset.m_purgeDate = convertDate(purgeDate);\n        } catch (Exception e) {\n            // ignore\n        }\n        // set the flags\n        flags = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_FLAGS);\n        try {\n            newDataset.m_flags = Integer.parseInt(flags);\n        } catch (Exception e) {\n            // ignore\n        }\n        // set the feedid\n        feedId = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_FEEDID);\n        try {\n            newDataset.m_feedId = Integer.parseInt(feedId);\n        } catch (Exception e) {\n            // ignore\n        }\n        // set the feedreference\n        feedReference = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_FEEDREFERENCE);\n        try {\n            newDataset.m_feedReference = Integer.parseInt(feedReference);\n        } catch (Exception e) {\n            // ignore\n        }\n        // set the feedfilenam\n        feedFilename = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_FEEDFILENAME);\n        newDataset.m_feedFilename = feedFilename;\n        // set the masters title\n        title = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_TITLE);\n        newDataset.m_title = title;\n        // set the values of data_big\n        for (int i = 0; i < newDataset.m_dataBig.length; i++) {\n            String filename = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATABIG + i);\n            String value = new String();\n            if (filename != null && !\"\".equals(filename.trim())) {\n                // get the value from the file\n                value = new String(getFileBytes(filename));\n            }\n            newDataset.m_dataBig[i] = value;\n        }\n        // get the values of data_medium\n        for (int i = 0; i < newDataset.m_dataMedium.length; i++) {\n            String filename = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATAMEDIUM + i);\n            String value = new String();\n            if (filename != null && !\"\".equals(filename.trim())) {\n                // get the value from the file\n                value = new String(getFileBytes(filename));\n            }\n            newDataset.m_dataMedium[i] = value;\n        }\n        // get the values of data_small\n        for (int i = 0; i < newDataset.m_dataSmall.length; i++) {\n            String filename = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATASMALL + i);\n            String value = new String();\n            if (filename != null && !\"\".equals(filename.trim())) {\n                // get the value from the file\n                value = new String(getFileBytes(filename));\n            }\n            newDataset.m_dataSmall[i] = value;\n        }\n        // get the values of data_int\n        for (int i = 0; i < newDataset.m_dataInt.length; i++) {\n            String value = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATAINT + i);\n            try {\n                newDataset.m_dataInt[i] = new Integer(value).intValue();\n            } catch (Exception e) {\n                newDataset.m_dataInt[i] = 0;\n            }\n        }\n        // get the values of data_reference\n        for (int i = 0; i < newDataset.m_dataReference.length; i++) {\n            String value = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATAREFERENCE + i);\n            try {\n                newDataset.m_dataReference[i] = new Integer(value).intValue();\n            } catch (Exception e) {\n                newDataset.m_dataReference[i] = 0;\n            }\n        }\n        // get the values of data_date\n        for (int i = 0; i < newDataset.m_dataDate.length; i++) {\n            String value = getTextNodeValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATADATE + i);\n            try {\n                newDataset.m_dataDate[i] = convertDate(value);\n            } catch (Exception e) {\n                newDataset.m_dataDate[i] = 0;\n            }\n        }\n        return newDataset;\n    }","id":27423,"modified_method":"/**\n     * Gets the dataset for the master from the xml file.<p>\n     * \n     * @param subId the subid of the module\n     * @param currentElement the current element of the xml file\n     * @return the dataset with the imported information\n     * @throws CmsException in case something goes wrong\n     */\n    private CmsMasterDataSet getMasterDataSet(int subId, Element currentElement) throws CmsException {\n        String datasetfile, username, groupname, accessFlags, publicationDate, purgeDate, flags, feedId, feedReference, feedFilename, title;\n        // get the new dataset object\n        CmsMasterDataSet newDataset = new CmsMasterDataSet();\n\n        // get the file with the dataset of the master\n        datasetfile = CmsImport.getChildElementTextValue(currentElement, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATASET);\n        Document datasetXml = CmsImport.getXmlDocument(getFileReader(datasetfile));\n        Element dataset = (Element) datasetXml.selectNodes(\"//\" + CmsExportModuledata.C_EXPORT_TAG_MASTER_DATASET).get(0);\n        // get the information from the dataset and add it to the dataset\n        // first add the subid\n        newDataset.m_subId = subId;\n        newDataset.m_masterId = CmsUUID.getNullUUID();\n        // get the id of the user or set the owner to the current user\n        username = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_USER);\n        CmsUUID userId = m_cms.getRequestContext().currentUser().getId();\n        try {\n            if ((username != null) && !(\"\".equals(username.trim()))) {\n                userId = m_cms.readUser(username).getId();\n            }\n        } catch (Exception e) {\n            // userId will be current user\n        }\n        newDataset.m_userId = userId;\n        // get the id of the group or set the group to the current user        \n        groupname = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_GROUP);\n\n        CmsUUID groupId = CmsUUID.getNullUUID();\n        try {\n            if ((groupname != null) && !(\"\".equals(groupname.trim()))) {\n                groupId = m_cms.readGroup(groupname).getId();\n            }\n        } catch (Exception e) {\n            try {\n                groupId = m_cms.readGroup(OpenCms.getDefaultUsers().getGroupUsers()).getId();\n            } catch (Exception e2) {\n                // ignore\n            }\n        }\n\n        newDataset.m_groupId = groupId;\n        // set the accessflags or the default flags\n        accessFlags = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_ACCESSFLAGS);\n        try {\n            newDataset.m_accessFlags = Integer.parseInt(accessFlags);\n        } catch (Exception e) {\n            newDataset.m_accessFlags = I_CmsConstants.C_ACCESS_DEFAULT_FLAGS;\n        }\n        // set the publication date\n        publicationDate = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_PUBLICATIONDATE);\n        try {\n            newDataset.m_publicationDate = convertDate(publicationDate);\n        } catch (Exception e) {\n            // ignore\n        }\n        // set the purge date\n        purgeDate = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_PURGEDATE);\n        try {\n            newDataset.m_purgeDate = convertDate(purgeDate);\n        } catch (Exception e) {\n            // ignore\n        }\n        // set the flags\n        flags = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_FLAGS);\n        try {\n            newDataset.m_flags = Integer.parseInt(flags);\n        } catch (Exception e) {\n            // ignore\n        }\n        // set the feedid\n        feedId = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_FEEDID);\n        try {\n            newDataset.m_feedId = Integer.parseInt(feedId);\n        } catch (Exception e) {\n            // ignore\n        }\n        // set the feedreference\n        feedReference = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_FEEDREFERENCE);\n        try {\n            newDataset.m_feedReference = Integer.parseInt(feedReference);\n        } catch (Exception e) {\n            // ignore\n        }\n        // set the feedfilenam\n        feedFilename = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_FEEDFILENAME);\n        newDataset.m_feedFilename = feedFilename;\n        // set the masters title\n        title = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_TITLE);\n        newDataset.m_title = title;\n        // set the values of data_big\n        for (int i = 0; i < newDataset.m_dataBig.length; i++) {\n            String filename = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATABIG + i);\n            String value = new String();\n            if (filename != null && !\"\".equals(filename.trim())) {\n                // get the value from the file\n                value = new String(getFileBytes(filename));\n            }\n            newDataset.m_dataBig[i] = value;\n        }\n        // get the values of data_medium\n        for (int i = 0; i < newDataset.m_dataMedium.length; i++) {\n            String filename = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATAMEDIUM + i);\n            String value = new String();\n            if (filename != null && !\"\".equals(filename.trim())) {\n                // get the value from the file\n                value = new String(getFileBytes(filename));\n            }\n            newDataset.m_dataMedium[i] = value;\n        }\n        // get the values of data_small\n        for (int i = 0; i < newDataset.m_dataSmall.length; i++) {\n            String filename = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATASMALL + i);\n            String value = new String();\n            if (filename != null && !\"\".equals(filename.trim())) {\n                // get the value from the file\n                value = new String(getFileBytes(filename));\n            }\n            newDataset.m_dataSmall[i] = value;\n        }\n        // get the values of data_int\n        for (int i = 0; i < newDataset.m_dataInt.length; i++) {\n            String value = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATAINT + i);\n            try {\n                newDataset.m_dataInt[i] = new Integer(value).intValue();\n            } catch (Exception e) {\n                newDataset.m_dataInt[i] = 0;\n            }\n        }\n        // get the values of data_reference\n        for (int i = 0; i < newDataset.m_dataReference.length; i++) {\n            String value = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATAREFERENCE + i);\n            try {\n                newDataset.m_dataReference[i] = new Integer(value).intValue();\n            } catch (Exception e) {\n                newDataset.m_dataReference[i] = 0;\n            }\n        }\n        // get the values of data_date\n        for (int i = 0; i < newDataset.m_dataDate.length; i++) {\n            String value = CmsImport.getChildElementTextValue(dataset, CmsExportModuledata.C_EXPORT_TAG_MASTER_DATADATE + i);\n            try {\n                newDataset.m_dataDate[i] = convertDate(value);\n            } catch (Exception e) {\n                newDataset.m_dataDate[i] = 0;\n            }\n        }\n        return newDataset;\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Gets the channel relations for the master from the xml file.<p>\n     * \n     * @param currentElement the current element of the xml file\n     * @return vector containing the ids of all channels of the master\n     */\n    private Vector getMasterChannelRelation(Element currentElement) {\n        Vector channelRelations = new Vector();\n        // get the channelnames of the master\n        NodeList channelNodes = currentElement.getElementsByTagName(CmsExportModuledata.C_EXPORT_TAG_MASTER_CHANNELNAME);\n\n        // walk through all channelrelations\n        for (int j = 0; j < channelNodes.getLength(); j++) {\n            // get the name of the channel\n            String channelName = ((Element)channelNodes.item(j)).getFirstChild().getNodeValue();\n            // try to read the channel and get its channelid\n            if ((channelName != null) && !(\"\".equals(channelName.trim()))) {\n                channelRelations.addElement(channelName);\n            }\n        }\n        return channelRelations;\n    }","id":27424,"modified_method":"/**\n     * Gets the channel relations for the master from the xml file.<p>\n     * \n     * @param currentElement the current element of the xml file\n     * @return vector containing the ids of all channels of the master\n     */\n    private Vector getMasterChannelRelation(Element currentElement) {\n        Vector channelRelations = new Vector();\n        // get the channelnames of the master\n        List channelNodes = currentElement.selectNodes(\"*/\" + CmsExportModuledata.C_EXPORT_TAG_MASTER_CHANNELNAME);\n\n        // walk through all channelrelations\n        for (int j = 0; j < channelNodes.size(); j++) {\n            // get the name of the channel\n            String channelName = ((Element) channelNodes.get(j)).getTextTrim();\n            // try to read the channel and get its channelid\n            if ((channelName != null) && !(\"\".equals(channelName.trim()))) {\n                channelRelations.addElement(channelName);\n            }\n        }\n        return channelRelations;\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Merges a single page.<p>\n     * \n     * @param resname the resource name of the page\n     * @throws Exception if something goes wrong\n     */\n    private void mergePageFile(String resname) throws Exception {\n\n        String mastertemplate = \"\";\n        String bodyname = \"\";\n        String bodyclass = \"\";\n        HashMap bodyparams = null;\n        \n        // get the header file\n        CmsFile pagefile = m_cms.readFile(resname);\n        // now parse the content of the headerfile to identify the master template used by this\n        // page\n        InputStream in = new ByteArrayInputStream(pagefile.getContents());\n        Document contentXml;\n        CmsFile bodyfile;\n        \n        // create DOM document\n        contentXml = A_CmsXmlContent.getXmlParser().parse(in);\n        // get the <masterTemplate> node to check the content.\n        // this node contains the name of the template file\n        NodeList masterTemplateNode = contentXml.getElementsByTagName(\"masterTemplate\");\n        // there is only one <masterTemplate> allowed\n        if (masterTemplateNode.getLength() == 1) {\n            // get the name of the mastertemplate\n            mastertemplate = masterTemplateNode.item(0).getFirstChild().getNodeValue();\n        }\n        \n        // get the <ELEMENTDEF> nodes to check the content.\n        // this node contains the information for the body element.\n        NodeList bodyNode = contentXml.getElementsByTagName(\"ELEMENTDEF\");\n        \n        // there is only one <ELEMENTDEF> allowed\n        if (bodyNode.getLength() == 1) {\n            \n            // get the elementdef\n            Node bodyElement = bodyNode.item(0);\n            NodeList nodes = bodyElement.getChildNodes();\n            int i;\n            \n            // get the class of the body template\n            for (i = 0; i < nodes.getLength(); i++) {\n                if (\"CLASS\".equals(nodes.item(i).getNodeName())) {\n                    bodyclass = nodes.item(i).getFirstChild().getNodeValue();\n                    break;\n                }\n            }\n            \n            // get the name of the body template\n            for (i = 0; i < nodes.getLength(); i++) {\n                if (\"TEMPLATE\".equals(nodes.item(i).getNodeName())) {\n                    bodyname = nodes.item(i).getFirstChild().getNodeValue();\n                    if (!bodyname.startsWith(\"/\")) {\n                        bodyname = CmsResource.getFolderPath(resname) + bodyname;\n                    }\n                    break;\n                }\n            }\n            \n            // get body template parameters if defined\n            for (i = 0; i < nodes.getLength(); i++) {\n                if (\"PARAMETER\".equals(nodes.item(i).getNodeName())) {\n                    Node paramElement = nodes.item(i);\n                    if (bodyparams == null) {\n                        bodyparams = new HashMap();\n                    }\n                    bodyparams.put(paramElement.getAttributes().getNamedItem(\"name\").getNodeValue(), paramElement.getFirstChild().getNodeValue());\n                }\n            }\n            \n            // lock the resource, so that it can be manipulated\n            m_cms.lockResource(resname);             \n            // get all properties                   \n            Map properties = m_cms.readProperties(resname);\n            // now get the content of the bodyfile and insert it into the control file                   \n            bodyfile = m_cms.readFile(bodyname);\n            \n            if (m_convertToXmlPage) {\n                CmsXmlPage xmlPage = CmsXmlPageConverter.convertToXmlPage(m_cms, new String(bodyfile.getContents()), \"body\", getLocale(resname, properties)); \n                \n                if (xmlPage != null) {\n                    xmlPage.write(pagefile);\n                    \n                    // set the type to xml page\n                    pagefile.setType(CmsResourceTypeXmlPage.C_RESOURCE_TYPE_ID);\n                    pagefile.setLoaderId(CmsXmlPageLoader.C_RESOURCE_LOADER_ID);\n                }\n            }\n \n            // write all changes                     \n            m_cms.writeFile(pagefile);\n            // add the template property to the controlfile\n            m_cms.writeProperty(resname, I_CmsConstants.C_PROPERTY_TEMPLATE, mastertemplate, true);\n            // if set, add the bodyclass as property\n            if (bodyclass != null && !\"\".equals(bodyclass)) {\n                m_cms.writeProperty(resname, I_CmsConstants.C_PROPERTY_BODY_CLASS, bodyclass, true);\n            }\n            // if set, add bodyparams as properties\n            if (bodyparams != null) {\n                for (Iterator p = bodyparams.keySet().iterator(); p.hasNext();) {\n                    String key = (String)p.next();\n                    m_cms.writeProperty(resname, key, (String)bodyparams.get(key), true);\n                }\n            }\n            m_cms.writeProperties(resname, properties, true);\n            m_cms.touch(resname, pagefile.getDateLastModified(), false, pagefile.getUserLastModified());\n            // done, ulock the resource                   \n            m_cms.unlockResource(resname, false);\n            // finally delete the old body file, it is not needed anymore\n            m_cms.lockResource(bodyname);\n            m_cms.deleteResource(bodyname, I_CmsConstants.C_DELETE_OPTION_IGNORE_VFS_LINKS);\n            m_report.println(\" \" + m_report.key(\"report.ok\"), I_CmsReport.C_FORMAT_OK); \n            \n        } else {\n            \n            // there are more than one template nodes in this control file\n            // convert the resource into a plain text file\n            // lock the resource, so that it can be manipulated\n            m_cms.lockResource(resname);\n            // set the type to plain\n            pagefile.setType(CmsResourceTypePlain.C_RESOURCE_TYPE_ID);\n            // write all changes                     \n            m_cms.writeFile(pagefile);\n            // don, ulock the resource                   \n            m_cms.unlockResource(resname, false);\n            m_report.println(\" \" + m_report.key(\"report.notconverted\"), I_CmsReport.C_FORMAT_OK);\n        }\n    }","id":27425,"modified_method":"/**\n     * Merges a single page.<p>\n     * \n     * @param resname the resource name of the page\n     * @throws Exception if something goes wrong\n     */\n    private void mergePageFile(String resname) throws Exception {\n        Document contentXml = null;\n        CmsFile bodyfile = null;\n        String mastertemplate = \"\";\n        String bodyname = \"\";\n        String bodyclass = \"\";\n        Map bodyparams = null;\n        \n        // get the header file\n        CmsFile pagefile = m_cms.readFile(resname);\n        contentXml = CmsImport.getXmlDocument(pagefile.getContents());\n        \n        // get the <masterTemplate> node to check the content.\n        // this node contains the name of the template file\n        List masterTemplateNode = contentXml.selectNodes(\"//masterTemplate\");\n        // there is only one <masterTemplate> allowed\n        if (masterTemplateNode.size() == 1) {\n            // get the name of the mastertemplate\n            mastertemplate = ((Element) masterTemplateNode.get(0)).getTextTrim();\n        }\n        \n        // get the <ELEMENTDEF> nodes to check the content.\n        // this node contains the information for the body element.\n        List bodyNode = contentXml.selectNodes(\"//ELEMENTDEF\");\n        \n        // there is only one <ELEMENTDEF> allowed\n        if (bodyNode.size() == 1) {\n            \n            // get the elementdef\n            Element bodyElement = (Element) bodyNode.get(0);\n            List nodes = bodyElement.elements();\n            int i;\n            Node node = null;\n            \n            // get the class of the body template\n            for (i = 0; i < nodes.size(); i++) {\n                node = (Node) nodes.get(i);\n                if (\"CLASS\".equals(node.getName())) {\n                    bodyclass = ((Element)node).getTextTrim();\n                    break;\n                }\n            }\n            \n            // get the name of the body template\n            for (i = 0; i < nodes.size(); i++) {\n                node = (Node) nodes.get(i);\n                if (\"TEMPLATE\".equals(node.getName())) {\n                    bodyname = ((Element)node).getTextTrim();\n                    if (!bodyname.startsWith(\"/\")) {\n                        bodyname = CmsResource.getFolderPath(resname) + bodyname;\n                    }\n                    break;\n                }\n            }\n            \n            // get body template parameters if defined\n            for (i = 0; i < nodes.size(); i++) {\n                node = (Node) nodes.get(i);\n                if (\"PARAMETER\".equals(node.getName())) {\n                    Element paramElement = (Element) node;\n                    if (bodyparams == null) {\n                        bodyparams = (Map) new HashMap();\n                    }\n                    bodyparams.put((paramElement.attribute(\"name\")).getText(), paramElement.getTextTrim());\n                }\n            }\n            \n            // lock the resource, so that it can be manipulated\n            m_cms.lockResource(resname);             \n            // get all properties                   \n            Map properties = m_cms.readProperties(resname);\n            // now get the content of the bodyfile and insert it into the control file                   \n            bodyfile = m_cms.readFile(bodyname);\n            \n            if (m_convertToXmlPage) {\n                CmsXmlPage xmlPage = CmsXmlPageConverter.convertToXmlPage(m_cms, new String(bodyfile.getContents()), \"body\", getLocale(resname, properties)); \n                \n                if (xmlPage != null) {\n                    xmlPage.write(pagefile);\n                    \n                    // set the type to xml page\n                    pagefile.setType(CmsResourceTypeXmlPage.C_RESOURCE_TYPE_ID);\n                    pagefile.setLoaderId(CmsXmlPageLoader.C_RESOURCE_LOADER_ID);\n                }\n            }\n \n            // write all changes                     \n            m_cms.writeFile(pagefile);\n            // add the template property to the controlfile\n            m_cms.writeProperty(resname, I_CmsConstants.C_PROPERTY_TEMPLATE, mastertemplate, true);\n            // if set, add the bodyclass as property\n            if (bodyclass != null && !\"\".equals(bodyclass)) {\n                m_cms.writeProperty(resname, I_CmsConstants.C_PROPERTY_BODY_CLASS, bodyclass, true);\n            }\n            // if set, add bodyparams as properties\n            if (bodyparams != null) {\n                for (Iterator p = bodyparams.keySet().iterator(); p.hasNext();) {\n                    String key = (String)p.next();\n                    m_cms.writeProperty(resname, key, (String)bodyparams.get(key), true);\n                }\n            }\n            m_cms.writeProperties(resname, properties, true);\n            m_cms.touch(resname, pagefile.getDateLastModified(), false, pagefile.getUserLastModified());\n            // done, ulock the resource                   \n            m_cms.unlockResource(resname, false);\n            // finally delete the old body file, it is not needed anymore\n            m_cms.lockResource(bodyname);\n            m_cms.deleteResource(bodyname, I_CmsConstants.C_DELETE_OPTION_IGNORE_VFS_LINKS);\n            m_report.println(\" \" + m_report.key(\"report.ok\"), I_CmsReport.C_FORMAT_OK); \n            \n        } else {\n            \n            // there are more than one template nodes in this control file\n            // convert the resource into a plain text file\n            // lock the resource, so that it can be manipulated\n            m_cms.lockResource(resname);\n            // set the type to plain\n            pagefile.setType(CmsResourceTypePlain.C_RESOURCE_TYPE_ID);\n            // write all changes                     \n            m_cms.writeFile(pagefile);\n            // don, ulock the resource                   \n            m_cms.unlockResource(resname, false);\n            m_report.println(\" \" + m_report.key(\"report.notconverted\"), I_CmsReport.C_FORMAT_OK);\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n      * Imports the users and writes them to the cms.<p>\n      * \n      * @throws CmsException if something goes wrong\n      */\n    private void importUsers() throws CmsException {\n        NodeList userNodes;\n        NodeList groupNodes;\n        Element currentElement, currentGroup;\n        Vector userGroups;\n        Hashtable userInfo = new Hashtable();\n        sun.misc.BASE64Decoder dec;\n        String id, name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, pwd, infoNode;\n        // try to get the import resource\n        //getImportResource();\n        try {\n            // getAll user nodes\n            userNodes = m_docXml.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_USERDATA);\n            // walk threw all groups in manifest\n            for (int i = 0; i < userNodes.getLength(); i++) {\n                currentElement = (Element)userNodes.item(i);\n                id = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ID);\n                name = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_NAME);\n                // decode passwords using base 64 decoder\n                dec = new sun.misc.BASE64Decoder();\n                pwd = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_PASSWORD);\n                password = new String(dec.decodeBuffer(pwd.trim()));\n                dec = new sun.misc.BASE64Decoder();\n                pwd = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_RECOVERYPASSWORD);\n                recoveryPassword = new String(dec.decodeBuffer(pwd.trim()));\n\n                description = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                flags = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                firstname = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FIRSTNAME);\n                lastname = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_LASTNAME);\n                email = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_EMAIL);\n                address = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ADDRESS);\n                section = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SECTION);\n                defaultGroup = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DEFAULTGROUP);\n                type = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_TYPE);\n                // get the userinfo and put it into the hashtable\n                infoNode = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERINFO);\n                try {\n                    // read the userinfo from the dat-file\n                    byte[] value = getFileBytes(infoNode);\n                    // deserialize the object\n                    ByteArrayInputStream bin = new ByteArrayInputStream(value);\n                    ObjectInputStream oin = new ObjectInputStream(bin);\n                    userInfo = (Hashtable)oin.readObject();\n                    value = null;\n                } catch (IOException ioex) {\n                    m_report.println(ioex);\n                }\n\n                // get the groups of the user and put them into the vector\n                groupNodes = currentElement.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_GROUPNAME);\n                userGroups = new Vector();\n                for (int j = 0; j < groupNodes.getLength(); j++) {\n                    currentGroup = (Element)groupNodes.item(j);\n                    userGroups.addElement(getTextNodeValue(currentGroup, I_CmsConstants.C_EXPORT_TAG_NAME));\n                }\n                // import this user\n                importUser(id, name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, userInfo, userGroups);\n            }\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n    }","id":27426,"modified_method":"/**\n      * Imports the users and writes them to the cms.<p>\n      * \n      * @throws CmsException if something goes wrong\n      */\n    private void importUsers() throws CmsException {\n        List userNodes;\n        List groupNodes;\n        Element currentElement, currentGroup;\n        Vector userGroups;\n        Hashtable userInfo = new Hashtable();\n        sun.misc.BASE64Decoder dec;\n        String id, name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, pwd, infoNode;\n        // try to get the import resource\n        //getImportResource();\n        try {\n            // getAll user nodes\n            userNodes = m_docXml.selectNodes(\"//\" + I_CmsConstants.C_EXPORT_TAG_USERDATA);\n            // walk threw all groups in manifest\n            for (int i = 0; i < userNodes.size(); i++) {\n                currentElement = (Element)userNodes.get(i);\n                id = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ID);\n                name = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_NAME);\n                // decode passwords using base 64 decoder\n                dec = new sun.misc.BASE64Decoder();\n                pwd = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_PASSWORD);\n                password = new String(dec.decodeBuffer(pwd.trim()));\n                dec = new sun.misc.BASE64Decoder();\n                pwd = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_RECOVERYPASSWORD);\n                recoveryPassword = new String(dec.decodeBuffer(pwd.trim()));\n\n                description = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                flags = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                firstname = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FIRSTNAME);\n                lastname = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_LASTNAME);\n                email = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_EMAIL);\n                address = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ADDRESS);\n                section = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SECTION);\n                defaultGroup = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DEFAULTGROUP);\n                type = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_TYPE);\n                // get the userinfo and put it into the hashtable\n                infoNode = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERINFO);\n                try {\n                    // read the userinfo from the dat-file\n                    byte[] value = getFileBytes(infoNode);\n                    // deserialize the object\n                    ByteArrayInputStream bin = new ByteArrayInputStream(value);\n                    ObjectInputStream oin = new ObjectInputStream(bin);\n                    userInfo = (Hashtable)oin.readObject();\n                    value = null;\n                } catch (IOException ioex) {\n                    m_report.println(ioex);\n                }\n\n                // get the groups of the user and put them into the vector\n                groupNodes = currentElement.selectNodes(\"*/\" + I_CmsConstants.C_EXPORT_TAG_GROUPNAME);\n                userGroups = new Vector();\n                for (int j = 0; j < groupNodes.size(); j++) {\n                    currentGroup = (Element)groupNodes.get(j);\n                    userGroups.addElement(CmsImport.getChildElementTextValue(currentGroup, I_CmsConstants.C_EXPORT_TAG_NAME));\n                }\n                // import this user\n                importUser(id, name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, userInfo, userGroups);\n            }\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Imports the resources and writes them to the cms.<p>\n     * \n     * @param excludeList filenames of files and folders which should not \n     *      be (over)written in the virtual file system (not used when null)\n     * @param writtenFilenames filenames of the files and folder which have actually been \n     *      successfully written (not used when null)\n     * @param fileCodes code of the written files (for the registry)\n     *      (not used when null)\n     * @param propertyName name of a property to be added to all resources\n     * @param propertyValue value of that property\n     * @throws CmsException if something goes wrong\n     */\n    private void importAllResources(Vector excludeList, Vector writtenFilenames, Vector fileCodes, String propertyName, String propertyValue) throws CmsException {\n        NodeList fileNodes, acentryNodes;\n        Element currentElement, currentEntry;\n        String source, destination, type, timestamp, uuid, uuidfile, uuidresource;\n        long lastmodified = 0;\n        int resType;\n        Map properties = null;\n        boolean old_overwriteCollidingResources = false;\n\n        if (m_importingChannelData) {\n            m_cms.getRequestContext().saveSiteRoot();\n            m_cms.setContextToCos();\n        }\n\n        if (excludeList == null) {\n            excludeList = new Vector();\n        }\n\n        m_webAppNames = (List)OpenCms.getRuntimeProperty(\"compatibility.support.webAppNames\");\n        if (m_webAppNames == null) {\n            m_webAppNames = Collections.EMPTY_LIST;\n        }\n\n        // get the old webapp url from the OpenCms properties\n        m_webappUrl = OpenCms.getImportExportManager().getWebAppUrl();\n        if (m_webappUrl == null) {\n            // use a default value\n            m_webappUrl = \"http://localhost:8080/opencms/opencms\";\n        }\n        // cut last \"/\" from webappUrl if present\n        if (m_webappUrl.endsWith(\"/\")) {\n            m_webappUrl = m_webappUrl.substring(0, m_webappUrl.lastIndexOf(\"/\"));\n        }\n\n        // get list of unwanted properties\n        List deleteProperties = OpenCms.getImportExportManager().getIgnoredProperties();\n\n        // get list of immutable resources\n        List immutableResources = OpenCms.getImportExportManager().getImmutableResources();\n        if (DEBUG > 0) {\n            System.err.println(\"Import: Immutable resources size is \" + immutableResources.size());\n        }\n        \n        // save the value of the boolean flag whether colliding resources should be overwritten\n        old_overwriteCollidingResources = OpenCms.getImportExportManager().overwriteCollidingResources();\n        \n        // force v1 and v2 imports to overwrite colliding resources, because they dont have resource \n        // UUIDSs in their manifest anyway\n        OpenCms.getImportExportManager().setOverwriteCollidingResources(true);\n        \n        try {\n            // get all file-nodes\n            fileNodes = m_docXml.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_FILE);\n            int importSize = fileNodes.getLength();\n\n            // walk through all files in manifest\n            for (int i = 0; i < fileNodes.getLength(); i++) {\n\n                m_report.print(\" ( \" + (i + 1) + \" / \" + importSize + \" ) \", I_CmsReport.C_FORMAT_NOTE);\n                currentElement = (Element)fileNodes.item(i);\n\n                // get all information for a file-import\n                source = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SOURCE);\n                destination = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESTINATION);\n                type = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_TYPE);\n                if (C_RESOURCE_TYPE_NEWPAGE_NAME.equals(type)) {\n                    resType = C_RESOURCE_TYPE_NEWPAGE_ID;\n                } else {\n                    resType = m_cms.getResourceTypeId(type);\n                }\n                uuid = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDSTRUCTURE);\n                uuidfile = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDCONTENT);\n                uuidresource = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDRESOURCE);\n\n                if ((timestamp = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_LASTMODIFIED)) != null) {\n                    lastmodified = Long.parseLong(timestamp);\n                } else {\n                    lastmodified = System.currentTimeMillis();\n                }\n\n                // if the type is \"script\" set it to plain\n                if (\"script\".equals(type)) {\n                    type = CmsResourceTypePlain.C_RESOURCE_TYPE_NAME;\n                }\n\n                String translatedName = m_cms.getRequestContext().addSiteRoot(m_importPath + destination);\n                if (CmsResourceTypeFolder.C_RESOURCE_TYPE_NAME.equals(type)) {\n                    translatedName += I_CmsConstants.C_FOLDER_SEPARATOR;\n                }\n                translatedName = m_cms.getRequestContext().getDirectoryTranslator().translateResource(translatedName);\n                if (DEBUG > 3) {\n                    System.err.println(\"Import: Translated resource name is \" + translatedName);\n                }\n\n                boolean resourceNotImmutable = checkImmutable(translatedName, immutableResources);\n\n                translatedName = m_cms.getRequestContext().removeSiteRoot(translatedName);\n                if (resourceNotImmutable && (!excludeList.contains(translatedName))) {\n\n                    // print out the information to the report\n                    m_report.print(m_report.key(\"report.importing\"), I_CmsReport.C_FORMAT_NOTE);\n                    m_report.print(translatedName);\n                    m_report.print(m_report.key(\"report.dots\"));\n\n                    // get all properties\n                    properties = getPropertiesFromXml(currentElement, resType, propertyName, propertyValue, deleteProperties);\n\n                    // import the specified file \n                    CmsResource res = importResource(source, destination, uuid, uuidfile, uuidresource, type, lastmodified, properties, writtenFilenames, fileCodes);\n\n                    if (res != null) {\n\n                        // write all imported access control entries for this file\n                        acentryNodes = currentElement.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_ENTRY);\n                        // collect all access control entries\n                        //String resid = getTextNodeValue(currentElement, C_EXPORT_TAG_ID);\n                        for (int j = 0; j < acentryNodes.getLength(); j++) {\n                            currentEntry = (Element)acentryNodes.item(j);\n                            // get the data of the access control entry\n                            String id = getTextNodeValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ID);\n                            String flags = getTextNodeValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                            String allowed = getTextNodeValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_ALLOWEDPERMISSIONS);\n                            String denied = getTextNodeValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_DENIEDPERMISSIONS);\n\n                            // add the entry to the list\n                            addImportAccessControlEntry(res, id, allowed, denied, flags);\n                        }\n                        importAccessControlEntries(res);\n\n                    } else {\n                        // resource import failed, since no CmsResource was created\n                        m_report.print(m_report.key(\"report.skipping\"), I_CmsReport.C_FORMAT_OK);\n                    }\n                } else {\n                    // skip the file import, just print out the information to the report\n                    m_report.print(m_report.key(\"report.skipping\"), I_CmsReport.C_FORMAT_NOTE);\n                    m_report.println(translatedName);\n                }\n            }\n\n            // now merge the body and page control files. this only has to be done if the import\n            // version is below version 3\n            if (getVersion() < 3 && m_convertToXmlPage) {\n                mergePageFiles();\n                removeFolders();\n            }\n        } catch (Exception exc) {\n            exc.printStackTrace(System.err);\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        } finally {\n            if (m_importingChannelData) {\n                m_cms.getRequestContext().restoreSiteRoot();\n            }\n            \n            // set the flag to overwrite colliding resources back to its original value\n            OpenCms.getImportExportManager().setOverwriteCollidingResources(old_overwriteCollidingResources);\n        }\n    }","id":27427,"modified_method":"/**\n     * Imports the resources and writes them to the cms.<p>\n     * \n     * @param excludeList filenames of files and folders which should not \n     *      be (over)written in the virtual file system (not used when null)\n     * @param writtenFilenames filenames of the files and folder which have actually been \n     *      successfully written (not used when null)\n     * @param fileCodes code of the written files (for the registry)\n     *      (not used when null)\n     * @param propertyName name of a property to be added to all resources\n     * @param propertyValue value of that property\n     * @throws CmsException if something goes wrong\n     */\n    private void importAllResources(Vector excludeList, Vector writtenFilenames, Vector fileCodes, String propertyName, String propertyValue) throws CmsException {\n        List fileNodes = null, acentryNodes = null;\n        Element currentElement = null, currentEntry = null;\n        String source = null, destination = null, type = null, timestamp = null, uuid = null, uuidfile = null, uuidresource = null;\n        long lastmodified = 0;\n        int resType;\n        Map properties = null;\n        boolean old_overwriteCollidingResources = false;\n\n        if (m_importingChannelData) {\n            m_cms.getRequestContext().saveSiteRoot();\n            m_cms.setContextToCos();\n        }\n\n        if (excludeList == null) {\n            excludeList = new Vector();\n        }\n\n        m_webAppNames = (List)OpenCms.getRuntimeProperty(\"compatibility.support.webAppNames\");\n        if (m_webAppNames == null) {\n            m_webAppNames = Collections.EMPTY_LIST;\n        }\n\n        // get the old webapp url from the OpenCms properties\n        m_webappUrl = OpenCms.getImportExportManager().getWebAppUrl();\n        if (m_webappUrl == null) {\n            // use a default value\n            m_webappUrl = \"http://localhost:8080/opencms/opencms\";\n        }\n        // cut last \"/\" from webappUrl if present\n        if (m_webappUrl.endsWith(\"/\")) {\n            m_webappUrl = m_webappUrl.substring(0, m_webappUrl.lastIndexOf(\"/\"));\n        }\n\n        // get list of unwanted properties\n        List deleteProperties = OpenCms.getImportExportManager().getIgnoredProperties();\n\n        // get list of immutable resources\n        List immutableResources = OpenCms.getImportExportManager().getImmutableResources();\n        if (DEBUG > 0) {\n            System.err.println(\"Import: Immutable resources size is \" + immutableResources.size());\n        }\n        \n        // save the value of the boolean flag whether colliding resources should be overwritten\n        old_overwriteCollidingResources = OpenCms.getImportExportManager().overwriteCollidingResources();\n        \n        // force v1 and v2 imports to overwrite colliding resources, because they dont have resource \n        // UUIDs in their manifest anyway\n        OpenCms.getImportExportManager().setOverwriteCollidingResources(true);\n        \n        try {\n            // get all file-nodes\n            fileNodes = m_docXml.selectNodes(\"//\" + I_CmsConstants.C_EXPORT_TAG_FILE);\n            int importSize = fileNodes.size();\n\n            // walk through all files in manifest\n            for (int i = 0; i < importSize; i++) {\n\n                m_report.print(\" ( \" + (i + 1) + \" / \" + importSize + \" ) \", I_CmsReport.C_FORMAT_NOTE);\n                currentElement = (Element) fileNodes.get(i);\n\n                // get all information for a file-import\n                source = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SOURCE);\n                destination = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESTINATION);\n                type = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_TYPE);\n                if (C_RESOURCE_TYPE_NEWPAGE_NAME.equals(type)) {\n                    resType = C_RESOURCE_TYPE_NEWPAGE_ID;\n                } else {\n                    resType = m_cms.getResourceTypeId(type);\n                }\n                uuid = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDSTRUCTURE);\n                uuidfile = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDCONTENT);\n                uuidresource = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDRESOURCE);\n\n                if ((timestamp = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_LASTMODIFIED)) != null) {\n                    lastmodified = Long.parseLong(timestamp);\n                } else {\n                    lastmodified = System.currentTimeMillis();\n                }\n\n                // if the type is \"script\" set it to plain\n                if (\"script\".equals(type)) {\n                    type = CmsResourceTypePlain.C_RESOURCE_TYPE_NAME;\n                }\n\n                String translatedName = m_cms.getRequestContext().addSiteRoot(m_importPath + destination);\n                if (CmsResourceTypeFolder.C_RESOURCE_TYPE_NAME.equals(type)) {\n                    translatedName += I_CmsConstants.C_FOLDER_SEPARATOR;\n                }\n                translatedName = m_cms.getRequestContext().getDirectoryTranslator().translateResource(translatedName);\n                if (DEBUG > 3) {\n                    System.err.println(\"Import: Translated resource name is \" + translatedName);\n                }\n\n                boolean resourceNotImmutable = checkImmutable(translatedName, immutableResources);\n\n                translatedName = m_cms.getRequestContext().removeSiteRoot(translatedName);\n                if (resourceNotImmutable && (!excludeList.contains(translatedName))) {\n\n                    // print out the information to the report\n                    m_report.print(m_report.key(\"report.importing\"), I_CmsReport.C_FORMAT_NOTE);\n                    m_report.print(translatedName);\n                    m_report.print(m_report.key(\"report.dots\"));\n\n                    // get all properties\n                    properties = getPropertiesFromXml(currentElement, resType, propertyName, propertyValue, deleteProperties);\n\n                    // import the specified file \n                    CmsResource res = importResource(source, destination, uuid, uuidfile, uuidresource, type, lastmodified, properties, writtenFilenames, fileCodes);\n\n                    if (res != null) {\n\n                        // write all imported access control entries for this file\n                        acentryNodes = currentElement.selectNodes(\"*/\" + I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_ENTRY);\n                        // collect all access control entries\n                        //String resid = getTextNodeValue(currentElement, C_EXPORT_TAG_ID);\n                        for (int j = 0; j < acentryNodes.size(); j++) {\n                            currentEntry = (Element)acentryNodes.get(j);\n                            // get the data of the access control entry\n                            String id = CmsImport.getChildElementTextValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ID);\n                            String flags = CmsImport.getChildElementTextValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                            String allowed = CmsImport.getChildElementTextValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_ALLOWEDPERMISSIONS);\n                            String denied = CmsImport.getChildElementTextValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_DENIEDPERMISSIONS);\n\n                            // add the entry to the list\n                            addImportAccessControlEntry(res, id, allowed, denied, flags);\n                        }\n                        importAccessControlEntries(res);\n\n                    } else {\n                        // resource import failed, since no CmsResource was created\n                        m_report.print(m_report.key(\"report.skipping\"), I_CmsReport.C_FORMAT_OK);\n                    }\n                } else {\n                    // skip the file import, just print out the information to the report\n                    m_report.print(m_report.key(\"report.skipping\"), I_CmsReport.C_FORMAT_NOTE);\n                    m_report.println(translatedName);\n                }\n            }\n\n            // now merge the body and page control files. this only has to be done if the import\n            // version is below version 3\n            if (getVersion() < 3 && m_convertToXmlPage) {\n                mergePageFiles();\n                removeFolders();\n            }\n        } catch (Exception exc) {\n            exc.printStackTrace(System.err);\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        } finally {\n            if (m_importingChannelData) {\n                m_cms.getRequestContext().restoreSiteRoot();\n            }\n            \n            // set the flag to overwrite colliding resources back to its original value\n            OpenCms.getImportExportManager().setOverwriteCollidingResources(old_overwriteCollidingResources);\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Imports the groups and writes them to the cms.<p>\n     * \n     * @throws CmsException if something goes wrong\n     */\n    private void importGroups() throws CmsException {\n        NodeList groupNodes;\n        Element currentElement;\n        String id, name, description, flags, parentgroup;\n        try {\n            // getAll group nodes\n            groupNodes = m_docXml.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_GROUPDATA);\n            // walk through all groups in manifest\n            for (int i = 0; i < groupNodes.getLength(); i++) {\n                currentElement = (Element)groupNodes.item(i);\n                id = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ID);\n                name = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_NAME);\n                description = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                flags = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                parentgroup = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_PARENTGROUP);\n                // import this group\n                importGroup(id, name, description, flags, parentgroup);\n            }\n\n            // now try to import the groups in the stack\n            while (!m_groupsToCreate.empty()) {\n                Stack tempStack = m_groupsToCreate;\n                m_groupsToCreate = new Stack();\n                while (tempStack.size() > 0) {\n                    Hashtable groupdata = (Hashtable)tempStack.pop();\n                    id = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_ID);\n                    name = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_NAME);\n                    description = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                    flags = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                    parentgroup = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_PARENTGROUP);\n                    // try to import the group\n                    importGroup(id, name, description, flags, parentgroup);\n                }\n            }\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n    }","id":27428,"modified_method":"/**\n     * Imports the groups and writes them to the cms.<p>\n     * \n     * @throws CmsException if something goes wrong\n     */\n    private void importGroups() throws CmsException {\n        List groupNodes;\n        Element currentElement;\n        String id, name, description, flags, parentgroup;\n        try {\n            // getAll group nodes\n            groupNodes = m_docXml.selectNodes(\"//\" + I_CmsConstants.C_EXPORT_TAG_GROUPDATA);\n            // walk through all groups in manifest\n            for (int i = 0; i < groupNodes.size(); i++) {\n                currentElement = (Element)groupNodes.get(i);\n                id = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ID);\n                name = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_NAME);\n                description = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                flags = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                parentgroup = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_PARENTGROUP);\n                // import this group\n                importGroup(id, name, description, flags, parentgroup);\n            }\n\n            // now try to import the groups in the stack\n            while (!m_groupsToCreate.empty()) {\n                Stack tempStack = m_groupsToCreate;\n                m_groupsToCreate = new Stack();\n                while (tempStack.size() > 0) {\n                    Hashtable groupdata = (Hashtable)tempStack.pop();\n                    id = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_ID);\n                    name = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_NAME);\n                    description = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                    flags = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                    parentgroup = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_PARENTGROUP);\n                    // try to import the group\n                    importGroup(id, name, description, flags, parentgroup);\n                }\n            }\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Imports the groups and writes them to the cms.<p>\n     * \n     * @throws CmsException if something goes wrong\n     */\n    private void importGroups() throws CmsException {\n        NodeList groupNodes;\n        Element currentElement;\n        String id, name, description, flags, parentgroup;\n        try {\n            // getAll group nodes\n            groupNodes = m_docXml.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_GROUPDATA);\n            // walk through all groups in manifest\n            for (int i = 0; i < groupNodes.getLength(); i++) {\n                currentElement = (Element)groupNodes.item(i);\n                id = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ID);\n                name = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_NAME);\n                description = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                flags = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                parentgroup = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_PARENTGROUP);\n                // import this group\n                importGroup(id, name, description, flags, parentgroup);\n            }\n\n            // now try to import the groups in the stack\n            while (!m_groupsToCreate.empty()) {\n                Stack tempStack = m_groupsToCreate;\n                m_groupsToCreate = new Stack();\n                while (tempStack.size() > 0) {\n                    Hashtable groupdata = (Hashtable)tempStack.pop();\n                    id = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_ID);\n                    name = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_NAME);\n                    description = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                    flags = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                    parentgroup = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_PARENTGROUP);\n                    // try to import the group\n                    importGroup(id, name, description, flags, parentgroup);\n                }\n            }\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n    }","id":27429,"modified_method":"/**\n     * Imports the groups and writes them to the cms.<p>\n     * \n     * @throws CmsException if something goes wrong\n     */\n    private void importGroups() throws CmsException {\n        List groupNodes;\n        Element currentElement;\n        String id, name, description, flags, parentgroup;\n        try {\n            // getAll group nodes\n            groupNodes = m_docXml.selectNodes(\"//\" + I_CmsConstants.C_EXPORT_TAG_GROUPDATA);\n            // walk through all groups in manifest\n            for (int i = 0; i < groupNodes.size(); i++) {\n                currentElement = (Element)groupNodes.get(i);\n                id = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ID);\n                name = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_NAME);\n                description = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                flags = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                parentgroup = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_PARENTGROUP);\n                // import this group\n                importGroup(id, name, description, flags, parentgroup);\n            }\n\n            // now try to import the groups in the stack\n            while (!m_groupsToCreate.empty()) {\n                Stack tempStack = m_groupsToCreate;\n                m_groupsToCreate = new Stack();\n                while (tempStack.size() > 0) {\n                    Hashtable groupdata = (Hashtable)tempStack.pop();\n                    id = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_ID);\n                    name = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_NAME);\n                    description = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                    flags = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                    parentgroup = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_PARENTGROUP);\n                    // try to import the group\n                    importGroup(id, name, description, flags, parentgroup);\n                }\n            }\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n      * Imports the users and writes them to the cms.<p>\n      * \n      * @throws CmsException if something goes wrong\n      */\n    private void importUsers() throws CmsException {\n        NodeList userNodes;\n        NodeList groupNodes;\n        Element currentElement, currentGroup;\n        Vector userGroups;\n        Hashtable userInfo = new Hashtable();\n        sun.misc.BASE64Decoder dec;\n        String id, name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, pwd, infoNode;\n        // try to get the import resource\n        //getImportResource();\n        try {\n            // getAll user nodes\n            userNodes = m_docXml.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_USERDATA);\n            // walk threw all groups in manifest\n            for (int i = 0; i < userNodes.getLength(); i++) {\n                currentElement = (Element)userNodes.item(i);\n                id = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ID);\n                name = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_NAME);\n                // decode passwords using base 64 decoder\n                dec = new sun.misc.BASE64Decoder();\n                pwd = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_PASSWORD);\n                password = new String(dec.decodeBuffer(pwd.trim()));\n                dec = new sun.misc.BASE64Decoder();\n                pwd = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_RECOVERYPASSWORD);\n                recoveryPassword = new String(dec.decodeBuffer(pwd.trim()));\n\n                description = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                flags = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                firstname = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FIRSTNAME);\n                lastname = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_LASTNAME);\n                email = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_EMAIL);\n                address = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ADDRESS);\n                section = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SECTION);\n                defaultGroup = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DEFAULTGROUP);\n                type = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_TYPE);\n                // get the userinfo and put it into the hashtable\n                infoNode = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERINFO);\n                try {\n                    // read the userinfo from the dat-file\n                    byte[] value = getFileBytes(infoNode);\n                    // deserialize the object\n                    ByteArrayInputStream bin = new ByteArrayInputStream(value);\n                    ObjectInputStream oin = new ObjectInputStream(bin);\n                    userInfo = (Hashtable)oin.readObject();\n                } catch (IOException ioex) {\n                    m_report.println(ioex);\n                }\n\n                // get the groups of the user and put them into the vector\n                groupNodes = currentElement.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_GROUPNAME);\n                userGroups = new Vector();\n                for (int j = 0; j < groupNodes.getLength(); j++) {\n                    currentGroup = (Element)groupNodes.item(j);\n                    userGroups.addElement(getTextNodeValue(currentGroup, I_CmsConstants.C_EXPORT_TAG_NAME));\n                }\n                // import this user\n                importUser(id, name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, userInfo, userGroups);\n            }\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n    }","id":27430,"modified_method":"/**\n      * Imports the users and writes them to the cms.<p>\n      * \n      * @throws CmsException if something goes wrong\n      */\n    private void importUsers() throws CmsException {\n        List userNodes;\n        List groupNodes;\n        Element currentElement, currentGroup;\n        Vector userGroups;\n        Hashtable userInfo = new Hashtable();\n        sun.misc.BASE64Decoder dec;\n        String id, name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, pwd, infoNode;\n        // try to get the import resource\n        //getImportResource();\n        try {\n            // getAll user nodes\n            userNodes = m_docXml.selectNodes(\"//\" + I_CmsConstants.C_EXPORT_TAG_USERDATA);\n            // walk threw all groups in manifest\n            for (int i = 0; i < userNodes.size(); i++) {\n                currentElement = (Element)userNodes.get(i);\n                id = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ID);\n                name = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_NAME);\n                // decode passwords using base 64 decoder\n                dec = new sun.misc.BASE64Decoder();\n                pwd = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_PASSWORD);\n                password = new String(dec.decodeBuffer(pwd.trim()));\n                dec = new sun.misc.BASE64Decoder();\n                pwd = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_RECOVERYPASSWORD);\n                recoveryPassword = new String(dec.decodeBuffer(pwd.trim()));\n\n                description = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                flags = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                firstname = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FIRSTNAME);\n                lastname = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_LASTNAME);\n                email = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_EMAIL);\n                address = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ADDRESS);\n                section = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SECTION);\n                defaultGroup = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DEFAULTGROUP);\n                type = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_TYPE);\n                // get the userinfo and put it into the hashtable\n                infoNode = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERINFO);\n                try {\n                    // read the userinfo from the dat-file\n                    byte[] value = getFileBytes(infoNode);\n                    // deserialize the object\n                    ByteArrayInputStream bin = new ByteArrayInputStream(value);\n                    ObjectInputStream oin = new ObjectInputStream(bin);\n                    userInfo = (Hashtable)oin.readObject();\n                } catch (IOException ioex) {\n                    m_report.println(ioex);\n                }\n\n                // get the groups of the user and put them into the vector\n                groupNodes = currentElement.selectNodes(\"*/\" + I_CmsConstants.C_EXPORT_TAG_GROUPNAME);\n                userGroups = new Vector();\n                for (int j = 0; j < groupNodes.size(); j++) {\n                    currentGroup = (Element)groupNodes.get(j);\n                    userGroups.addElement(CmsImport.getChildElementTextValue(currentGroup, I_CmsConstants.C_EXPORT_TAG_NAME));\n                }\n                // import this user\n                importUser(id, name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, userInfo, userGroups);\n            }\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Imports the resources and writes them to the cms.<p>\n     * \n     * \n     * @param excludeList filenames of files and folders which should not \n     *      be (over)written in the virtual file system (not used when null)\n     * @param writtenFilenames filenames of the files and folder which have actually been \n     *      successfully written (not used when null)\n     * @param fileCodes code of the written files (for the registry)\n     *      (not used when null)\n     * @param propertyName name of a property to be added to all resources\n     * @param propertyValue value of that property\n     * @throws CmsException if something goes wrong\n     */\n    private void importAllResources(Vector excludeList, Vector writtenFilenames, Vector fileCodes, String propertyName, String propertyValue) throws CmsException {\n\n        String source, destination, type, uuidstructure, uuidresource, uuidcontent, userlastmodified, usercreated, flags, timestamp;\n        long datelastmodified, datecreated;\n        int resType;\n        \n        NodeList fileNodes, acentryNodes;\n        Element currentElement, currentEntry;\n        Map properties = null;\n\n        if (m_importingChannelData) {\n            m_cms.getRequestContext().saveSiteRoot();\n            m_cms.setContextToCos();\n        }\n\n        // clear some required structures at the init phase of the import      \n        if (excludeList == null) {\n            excludeList = new Vector();\n        }\n        // get list of unwanted properties\n        List deleteProperties = OpenCms.getImportExportManager().getIgnoredProperties();\n        if (deleteProperties == null) {\n            deleteProperties = new ArrayList();\n        }\n        // get list of immutable resources\n        List immutableResources = OpenCms.getImportExportManager().getImmutableResources();\n        if (immutableResources == null) {\n            immutableResources = new ArrayList();\n        }\n        // get the wanted page type for imported pages\n        m_convertToXmlPage = OpenCms.getImportExportManager().convertToXmlPage();       \n        \n        try {\n            // get all file-nodes\n            fileNodes = m_docXml.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_FILE);\n            int importSize = fileNodes.getLength();\n            // walk through all files in manifest\n            for (int i = 0; i < fileNodes.getLength(); i++) {\n                m_report.print(\" ( \" + (i + 1) + \" / \" + importSize + \" ) \");\n                currentElement = (Element)fileNodes.item(i);\n                // get all information for a file-import\n                // <source>\n                source = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SOURCE);\n                // <destintion>\n                destination = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESTINATION);\n                // <type>\n                type = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_TYPE);\n                if (C_RESOURCE_TYPE_NEWPAGE_NAME.equals(type)) {\n                    resType = C_RESOURCE_TYPE_NEWPAGE_ID;\n                } else {\n                    resType = m_cms.getResourceTypeId(type);\n                }\n                // <uuidstructure>\n                uuidstructure = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDSTRUCTURE);\n                // <uuidresource>\n                uuidresource = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDRESOURCE);\n                // <uuidcontent>\n                uuidcontent = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDCONTENT);\n                // <datelastmodified>\n                if ((timestamp = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DATELASTMODIFIED)) != null) {\n                    datelastmodified = Long.parseLong(timestamp);\n                } else {\n                    datelastmodified = System.currentTimeMillis();\n                }\n                // <userlastmodified>\n                userlastmodified = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERLASTMODIFIED);\n                // <datecreated>\n                if ((timestamp = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DATECREATED)) != null) {\n                    datecreated = Long.parseLong(timestamp);\n                } else {\n                    datecreated = System.currentTimeMillis();\n                }\n                // <usercreated>\n                usercreated = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERCREATED);\n                // <flags>              \n                flags = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n\n                String translatedName = m_cms.getRequestContext().addSiteRoot(m_importPath + destination);\n                if (CmsResourceTypeFolder.C_RESOURCE_TYPE_NAME.equals(type)) {\n                    translatedName += I_CmsConstants.C_FOLDER_SEPARATOR;\n                }\n                // translate the name during import\n                translatedName = m_cms.getRequestContext().getDirectoryTranslator().translateResource(translatedName);\n                // check if this resource is immutable\n                boolean resourceNotImmutable = checkImmutable(translatedName, immutableResources);\n                translatedName = m_cms.getRequestContext().removeSiteRoot(translatedName);\n                // if the resource is not immutable and not on the exclude list, import it\n                if (resourceNotImmutable && (!excludeList.contains(translatedName))) {\n                    // print out the information to the report\n                    m_report.print(m_report.key(\"report.importing\"), I_CmsReport.C_FORMAT_NOTE);\n                    m_report.print(translatedName);\n                    m_report.print(m_report.key(\"report.dots\"));\n                    // get all properties\n                    properties = getPropertiesFromXml(currentElement, resType, propertyName, propertyValue, deleteProperties);\n                    // import the resource               \n\n                    CmsResource res = importResource(source, destination, type, uuidstructure, uuidresource, uuidcontent, datelastmodified, userlastmodified, datecreated, usercreated, flags, properties, writtenFilenames, fileCodes);\n\n                    // if the resource was imported add the access control entrys if available\n                    if (res != null) {\n                        // write all imported access control entries for this file\n                        acentryNodes = currentElement.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_ENTRY);\n                        // collect all access control entries\n                        for (int j = 0; j < acentryNodes.getLength(); j++) {\n                            currentEntry = (Element)acentryNodes.item(j);\n                            // get the data of the access control entry\n                            String id = getTextNodeValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_PRINCIPAL);\n                            String acflags = getTextNodeValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                            String allowed = getTextNodeValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_ALLOWEDPERMISSIONS);\n                            String denied = getTextNodeValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_DENIEDPERMISSIONS);\n                            // add the entry to the list\n                            addImportAccessControlEntry(res, id, allowed, denied, acflags);\n                        }\n                        importAccessControlEntries(res);\n                    } else {\n                        // resource import failed, since no CmsResource was created\n                        m_report.print(m_report.key(\"report.skipping\"), I_CmsReport.C_FORMAT_NOTE);\n                        m_report.println(translatedName);\n                    }\n                } else {\n                    // skip the file import, just print out the information to the report\n                    m_report.print(m_report.key(\"report.skipping\"), I_CmsReport.C_FORMAT_NOTE);\n                    m_report.println(translatedName);\n                }\n            }\n//            if (!m_importingChannelData) {\n//                // at last we have to get the links from all new imported pages for the  linkmanagement\n//                m_report.println(m_report.key(\"report.check_links_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n//                updatePageLinks();\n//                m_report.println(m_report.key(\"report.check_links_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n//            }\n\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        } finally {\n            if (m_importingChannelData) {\n                m_cms.getRequestContext().restoreSiteRoot();\n            }\n        }\n\n    }","id":27431,"modified_method":"/**\n     * Imports the resources and writes them to the cms.<p>\n     * \n     * \n     * @param excludeList filenames of files and folders which should not \n     *      be (over)written in the virtual file system (not used when null)\n     * @param writtenFilenames filenames of the files and folder which have actually been \n     *      successfully written (not used when null)\n     * @param fileCodes code of the written files (for the registry)\n     *      (not used when null)\n     * @param propertyName name of a property to be added to all resources\n     * @param propertyValue value of that property\n     * @throws CmsException if something goes wrong\n     */\n    private void importAllResources(Vector excludeList, Vector writtenFilenames, Vector fileCodes, String propertyName, String propertyValue) throws CmsException {\n\n        String source, destination, type, uuidstructure, uuidresource, uuidcontent, userlastmodified, usercreated, flags, timestamp;\n        long datelastmodified, datecreated;\n        int resType;\n        \n        List fileNodes, acentryNodes;\n        Element currentElement, currentEntry;\n        Map properties = null;\n\n        if (m_importingChannelData) {\n            m_cms.getRequestContext().saveSiteRoot();\n            m_cms.setContextToCos();\n        }\n\n        // clear some required structures at the init phase of the import      \n        if (excludeList == null) {\n            excludeList = new Vector();\n        }\n        // get list of unwanted properties\n        List deleteProperties = OpenCms.getImportExportManager().getIgnoredProperties();\n        if (deleteProperties == null) {\n            deleteProperties = new ArrayList();\n        }\n        // get list of immutable resources\n        List immutableResources = OpenCms.getImportExportManager().getImmutableResources();\n        if (immutableResources == null) {\n            immutableResources = new ArrayList();\n        }\n        // get the wanted page type for imported pages\n        m_convertToXmlPage = OpenCms.getImportExportManager().convertToXmlPage();       \n        \n        try {\n            // get all file-nodes\n            fileNodes = m_docXml.selectNodes(\"//\" + I_CmsConstants.C_EXPORT_TAG_FILE);\n            \n            int importSize = fileNodes.size();\n            // walk through all files in manifest\n            for (int i = 0; i < fileNodes.size(); i++) {\n                m_report.print(\" ( \" + (i + 1) + \" / \" + importSize + \" ) \");\n                currentElement = (Element)fileNodes.get(i);\n                // get all information for a file-import\n                // <source>\n                source = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SOURCE);\n                // <destintion>\n                destination = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESTINATION);\n                // <type>\n                type = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_TYPE);\n                if (C_RESOURCE_TYPE_NEWPAGE_NAME.equals(type)) {\n                    resType = C_RESOURCE_TYPE_NEWPAGE_ID;\n                } else {\n                    resType = m_cms.getResourceTypeId(type);\n                }\n                // <uuidstructure>\n                uuidstructure = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDSTRUCTURE);\n                // <uuidresource>\n                uuidresource = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDRESOURCE);\n                // <uuidcontent>\n                uuidcontent = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDCONTENT);\n                // <datelastmodified>\n                if ((timestamp = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DATELASTMODIFIED)) != null) {\n                    datelastmodified = Long.parseLong(timestamp);\n                } else {\n                    datelastmodified = System.currentTimeMillis();\n                }\n                // <userlastmodified>\n                userlastmodified = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERLASTMODIFIED);\n                // <datecreated>\n                if ((timestamp = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DATECREATED)) != null) {\n                    datecreated = Long.parseLong(timestamp);\n                } else {\n                    datecreated = System.currentTimeMillis();\n                }\n                // <usercreated>\n                usercreated = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERCREATED);\n                // <flags>              \n                flags = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n\n                String translatedName = m_cms.getRequestContext().addSiteRoot(m_importPath + destination);\n                if (CmsResourceTypeFolder.C_RESOURCE_TYPE_NAME.equals(type)) {\n                    translatedName += I_CmsConstants.C_FOLDER_SEPARATOR;\n                }\n                // translate the name during import\n                translatedName = m_cms.getRequestContext().getDirectoryTranslator().translateResource(translatedName);\n                // check if this resource is immutable\n                boolean resourceNotImmutable = checkImmutable(translatedName, immutableResources);\n                translatedName = m_cms.getRequestContext().removeSiteRoot(translatedName);\n                // if the resource is not immutable and not on the exclude list, import it\n                if (resourceNotImmutable && (!excludeList.contains(translatedName))) {\n                    // print out the information to the report\n                    m_report.print(m_report.key(\"report.importing\"), I_CmsReport.C_FORMAT_NOTE);\n                    m_report.print(translatedName);\n                    m_report.print(m_report.key(\"report.dots\"));\n                    // get all properties\n                    properties = getPropertiesFromXml(currentElement, resType, propertyName, propertyValue, deleteProperties);\n                    // import the resource               \n\n                    CmsResource res = importResource(source, destination, type, uuidstructure, uuidresource, uuidcontent, datelastmodified, userlastmodified, datecreated, usercreated, flags, properties, writtenFilenames, fileCodes);\n\n                    // if the resource was imported add the access control entrys if available\n                    if (res != null) {\n                        // write all imported access control entries for this file\n                        acentryNodes = currentElement.selectNodes(\"*/\" + I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_ENTRY);\n                        // collect all access control entries\n                        for (int j = 0; j < acentryNodes.size(); j++) {\n                            currentEntry = (Element)acentryNodes.get(j);\n                            // get the data of the access control entry\n                            String id = CmsImport.getChildElementTextValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_PRINCIPAL);\n                            String acflags = CmsImport.getChildElementTextValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                            String allowed = CmsImport.getChildElementTextValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_ALLOWEDPERMISSIONS);\n                            String denied = CmsImport.getChildElementTextValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_DENIEDPERMISSIONS);\n                            // add the entry to the list\n                            addImportAccessControlEntry(res, id, allowed, denied, acflags);\n                        }\n                        importAccessControlEntries(res);\n                    } else {\n                        // resource import failed, since no CmsResource was created\n                        m_report.print(m_report.key(\"report.skipping\"), I_CmsReport.C_FORMAT_NOTE);\n                        m_report.println(translatedName);\n                    }\n                } else {\n                    // skip the file import, just print out the information to the report\n                    m_report.print(m_report.key(\"report.skipping\"), I_CmsReport.C_FORMAT_NOTE);\n                    m_report.println(translatedName);\n                }\n            }\n//            if (!m_importingChannelData) {\n//                // at last we have to get the links from all new imported pages for the  linkmanagement\n//                m_report.println(m_report.key(\"report.check_links_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n//                updatePageLinks();\n//                m_report.println(m_report.key(\"report.check_links_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n//            }\n\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        } finally {\n            if (m_importingChannelData) {\n                m_cms.getRequestContext().restoreSiteRoot();\n            }\n        }\n\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Imports the groups and writes them to the cms.<p>\n     * \n     * @throws CmsException if something goes wrong\n     */\n    private void importGroups() throws CmsException {\n        NodeList groupNodes;\n        Element currentElement;\n        String name, description, flags, parentgroup;\n        try {\n            // getAll group nodes\n            groupNodes = m_docXml.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_GROUPDATA);\n            // walk through all groups in manifest\n            for (int i = 0; i < groupNodes.getLength(); i++) {\n                currentElement = (Element)groupNodes.item(i);\n                name = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_NAME);\n                name = OpenCms.getDefaultUsers().translateGroup(name);  \n                description = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                flags = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                parentgroup = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_PARENTGROUP);\n                if ((parentgroup!=null) && (parentgroup.length()>0)) {\n                    parentgroup = OpenCms.getDefaultUsers().translateGroup(parentgroup);\n                }\n                // import this group\n             \n                importGroup(null, name, description, flags, parentgroup);\n            }\n\n            // now try to import the groups in the stack\n            while (!m_groupsToCreate.empty()) {\n                Stack tempStack = m_groupsToCreate;\n                m_groupsToCreate = new Stack();\n                while (tempStack.size() > 0) {\n                    Hashtable groupdata = (Hashtable)tempStack.pop();\n                    name = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_NAME);\n                    description = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                    flags = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                    parentgroup = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_PARENTGROUP);\n                    // try to import the group\n                    importGroup(null, name, description, flags, parentgroup);\n                }\n            }\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n    }","id":27432,"modified_method":"/**\n     * Imports the groups and writes them to the cms.<p>\n     * \n     * @throws CmsException if something goes wrong\n     */\n    private void importGroups() throws CmsException {\n        List groupNodes;\n        Element currentElement;\n        String name, description, flags, parentgroup;\n        try {\n            // getAll group nodes\n            groupNodes = m_docXml.selectNodes(\"//\" + I_CmsConstants.C_EXPORT_TAG_GROUPDATA);\n            // walk through all groups in manifest\n            for (int i = 0; i < groupNodes.size(); i++) {\n                currentElement = (Element)groupNodes.get(i);\n                name = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_NAME);\n                name = OpenCms.getDefaultUsers().translateGroup(name);  \n                description = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                flags = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                parentgroup = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_PARENTGROUP);\n                if ((parentgroup!=null) && (parentgroup.length()>0)) {\n                    parentgroup = OpenCms.getDefaultUsers().translateGroup(parentgroup);\n                }\n                // import this group\n             \n                importGroup(null, name, description, flags, parentgroup);\n            }\n\n            // now try to import the groups in the stack\n            while (!m_groupsToCreate.empty()) {\n                Stack tempStack = m_groupsToCreate;\n                m_groupsToCreate = new Stack();\n                while (tempStack.size() > 0) {\n                    Hashtable groupdata = (Hashtable)tempStack.pop();\n                    name = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_NAME);\n                    description = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n                    flags = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                    parentgroup = (String)groupdata.get(I_CmsConstants.C_EXPORT_TAG_PARENTGROUP);\n                    // try to import the group\n                    importGroup(null, name, description, flags, parentgroup);\n                }\n            }\n        } catch (Exception exc) {\n            m_report.println(exc);\n            throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n    * Imports the resources and writes them to the cms.<p>\n    * \n    * \n    * @param excludeList filenames of files and folders which should not \n    *      be (over)written in the virtual file system (not used when null)\n    * @param propertyName name of a property to be added to all resources\n    * @param propertyValue value of that property\n    * @throws CmsException if something goes wrong\n    */\n   private void importAllResources(Vector excludeList, String propertyName, String propertyValue) throws CmsException {\n\n       String source, destination, type, uuidresource, uuidcontent, userlastmodified, usercreated, flags, timestamp;\n       long datelastmodified, datecreated;\n       int resType;\n\n       NodeList fileNodes, acentryNodes;\n       Element currentElement, currentEntry;\n       Map properties = null;\n\n       if (m_importingChannelData) {\n           m_cms.getRequestContext().saveSiteRoot();\n           m_cms.setContextToCos();\n       }\n\n       // clear some required structures at the init phase of the import      \n       if (excludeList == null) {\n           excludeList = new Vector();\n       }\n       // get list of unwanted properties\n       List deleteProperties = OpenCms.getImportExportManager().getIgnoredProperties();\n       if (deleteProperties == null) {\n           deleteProperties = new ArrayList();\n       }\n       // get list of immutable resources\n       List immutableResources = OpenCms.getImportExportManager().getImmutableResources();\n       if (immutableResources == null) {\n           immutableResources = new ArrayList();\n       }\n       // get the wanted page type for imported pages\n       m_convertToXmlPage = OpenCms.getImportExportManager().convertToXmlPage();\n       \n       try {\n           // get all file-nodes\n           fileNodes = m_docXml.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_FILE);\n           int importSize = fileNodes.getLength();\n           // walk through all files in manifest\n           for (int i = 0; i < fileNodes.getLength(); i++) {\n               m_report.print(\" ( \" + (i + 1) + \" / \" + importSize + \" ) \", I_CmsReport.C_FORMAT_NOTE);\n               currentElement = (Element)fileNodes.item(i);\n               // get all information for a file-import\n               // <source>\n               source = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SOURCE);\n               // <destintion>\n               destination = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESTINATION);\n               // <type>\n               type = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_TYPE);\n               if (C_RESOURCE_TYPE_NEWPAGE_NAME.equals(type)) {\n                   resType = C_RESOURCE_TYPE_NEWPAGE_ID;\n               } else {\n                   resType = m_cms.getResourceTypeId(type);\n               }\n               // <uuidresource>\n               uuidresource = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDRESOURCE);\n               // <uuidcontent>\n               uuidcontent = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDCONTENT);\n               // <datelastmodified>\n               if ((timestamp = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DATELASTMODIFIED)) != null) {\n                   datelastmodified = Long.parseLong(timestamp);\n               } else {\n                   datelastmodified = System.currentTimeMillis();\n               }\n               // <userlastmodified>\n               userlastmodified = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERLASTMODIFIED);\n               userlastmodified = OpenCms.getDefaultUsers().translateUser(userlastmodified);\n               // <datecreated>\n               if ((timestamp = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DATECREATED)) != null) {\n                   datecreated = Long.parseLong(timestamp);\n               } else {\n                   datecreated = System.currentTimeMillis();\n               }\n               // <usercreated>\n               usercreated = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERCREATED);\n               usercreated = OpenCms.getDefaultUsers().translateUser(usercreated);\n               // <flags>              \n               flags = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n\n               String translatedName = m_cms.getRequestContext().addSiteRoot(m_importPath + destination);\n               if (CmsResourceTypeFolder.C_RESOURCE_TYPE_NAME.equals(type)) {\n                   translatedName += I_CmsConstants.C_FOLDER_SEPARATOR;\n               }\n               // translate the name during import\n               translatedName = m_cms.getRequestContext().getDirectoryTranslator().translateResource(translatedName);\n               // check if this resource is immutable\n               boolean resourceNotImmutable = checkImmutable(translatedName, immutableResources);\n               translatedName = m_cms.getRequestContext().removeSiteRoot(translatedName);\n               // if the resource is not immutable and not on the exclude list, import it\n               if (resourceNotImmutable && (!excludeList.contains(translatedName))) {\n                   // print out the information to the report\n                   m_report.print(m_report.key(\"report.importing\"), I_CmsReport.C_FORMAT_NOTE);\n                   m_report.print(translatedName);\n                   m_report.print(m_report.key(\"report.dots\"));\n                   // get all properties\n                   properties = getPropertiesFromXml(currentElement, resType, propertyName, propertyValue, deleteProperties);\n                   // import the resource               \n                   CmsResource res = importResource(source, destination, resType,  uuidresource, uuidcontent, datelastmodified, userlastmodified, datecreated, usercreated, flags, properties);\n                   // if the resource was imported add the access control entrys if available\n                   if (res != null) {\n                       // write all imported access control entries for this file\n                       acentryNodes = currentElement.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_ENTRY);\n                       // collect all access control entries\n                       for (int j = 0; j < acentryNodes.getLength(); j++) {\n                           currentEntry = (Element)acentryNodes.item(j);\n                           // get the data of the access control entry\n                           String id = getTextNodeValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_PRINCIPAL);\n                           String principalId=new CmsUUID().toString();\n\n                           String principal=id.substring(id.indexOf(\".\")+1, id.length());\n\n                           if (id.startsWith(I_CmsConstants.C_EXPORT_ACEPRINCIPAL_GROUP)) {\n                               principal = OpenCms.getDefaultUsers().translateGroup(principal);  \n                               principalId=m_cms.readGroup(principal).getId().toString();\n                           } else {\n                               principal = OpenCms.getDefaultUsers().translateUser(principal);  \n                               principalId=m_cms.readUser(principal).getId().toString();\n                           }                                                    \n                           String acflags = getTextNodeValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n                           String allowed = getTextNodeValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_ALLOWEDPERMISSIONS);\n                           String denied = getTextNodeValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_DENIEDPERMISSIONS);\n                           // add the entry to the list\n                           addImportAccessControlEntry(res, principalId, allowed, denied, acflags);\n                       }\n                       importAccessControlEntries(res);\n                   } else {\n                       // resource import failed, since no CmsResource was created\n                       m_report.print(m_report.key(\"report.skipping\"), I_CmsReport.C_FORMAT_NOTE);\n                       m_report.println(translatedName);                     \n                   }\n                   \n               } else {\n                   // skip the file import, just print out the information to the report\n                   m_report.print(m_report.key(\"report.skipping\"), I_CmsReport.C_FORMAT_NOTE);\n                   m_report.println(translatedName);\n               }\n           }\n       } catch (Exception exc) {\n           m_report.println(exc);\n           throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n       } finally {\n           if (m_importingChannelData) {\n               m_cms.getRequestContext().restoreSiteRoot();\n           }\n       }\n\n   }","id":27433,"modified_method":"/**\n    * Imports the resources and writes them to the cms.<p>\n    * \n    * \n    * @param excludeList filenames of files and folders which should not \n    *      be (over)written in the virtual file system (not used when null)\n    * @param propertyName name of a property to be added to all resources\n    * @param propertyValue value of that property\n    * @throws CmsException if something goes wrong\n    */\n   private void importAllResources(Vector excludeList, String propertyName, String propertyValue) throws CmsException {\n\n       String source, destination, type, uuidresource, uuidcontent, userlastmodified, usercreated, flags, timestamp;\n       long datelastmodified, datecreated;\n       int resType;\n\n       List fileNodes, acentryNodes;\n       Element currentElement, currentEntry;\n       Map properties = null;\n\n       if (m_importingChannelData) {\n           m_cms.getRequestContext().saveSiteRoot();\n           m_cms.setContextToCos();\n       }\n\n       // clear some required structures at the init phase of the import      \n       if (excludeList == null) {\n           excludeList = new Vector();\n       }\n       // get list of unwanted properties\n       List deleteProperties = OpenCms.getImportExportManager().getIgnoredProperties();\n       if (deleteProperties == null) {\n           deleteProperties = new ArrayList();\n       }\n       // get list of immutable resources\n       List immutableResources = OpenCms.getImportExportManager().getImmutableResources();\n       if (immutableResources == null) {\n           immutableResources = new ArrayList();\n       }\n       // get the wanted page type for imported pages\n       m_convertToXmlPage = OpenCms.getImportExportManager().convertToXmlPage();\n       \n       try {\n           // get all file-nodes\n           fileNodes = m_docXml.selectNodes(\"//\" + I_CmsConstants.C_EXPORT_TAG_FILE);\n           int importSize = fileNodes.size();\n           // walk through all files in manifest\n           for (int i = 0; i < fileNodes.size(); i++) {\n               m_report.print(\" ( \" + (i + 1) + \" / \" + importSize + \" ) \", I_CmsReport.C_FORMAT_NOTE);\n               currentElement = (Element)fileNodes.get(i);\n               // get all information for a file-import\n               // <source>\n               source = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SOURCE);\n               // <destintion>\n               destination = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESTINATION);\n               // <type>\n               type = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_TYPE);\n               if (C_RESOURCE_TYPE_NEWPAGE_NAME.equals(type)) {\n                   resType = C_RESOURCE_TYPE_NEWPAGE_ID;\n               } else {\n                   resType = m_cms.getResourceTypeId(type);\n               }\n               // <uuidresource>\n               uuidresource = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDRESOURCE);\n               // <uuidcontent>\n               uuidcontent = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_UUIDCONTENT);\n               // <datelastmodified>\n               if ((timestamp = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DATELASTMODIFIED)) != null) {\n                   datelastmodified = Long.parseLong(timestamp);\n               } else {\n                   datelastmodified = System.currentTimeMillis();\n               }\n               // <userlastmodified>\n               userlastmodified = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERLASTMODIFIED);\n               userlastmodified = OpenCms.getDefaultUsers().translateUser(userlastmodified);\n               // <datecreated>\n               if ((timestamp = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DATECREATED)) != null) {\n                   datecreated = Long.parseLong(timestamp);\n               } else {\n                   datecreated = System.currentTimeMillis();\n               }\n               // <usercreated>\n               usercreated = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERCREATED);\n               usercreated = OpenCms.getDefaultUsers().translateUser(usercreated);\n               // <flags>              \n               flags = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n\n               String translatedName = m_cms.getRequestContext().addSiteRoot(m_importPath + destination);\n               if (CmsResourceTypeFolder.C_RESOURCE_TYPE_NAME.equals(type)) {\n                   translatedName += I_CmsConstants.C_FOLDER_SEPARATOR;\n               }\n               // translate the name during import\n               translatedName = m_cms.getRequestContext().getDirectoryTranslator().translateResource(translatedName);\n               // check if this resource is immutable\n               boolean resourceNotImmutable = checkImmutable(translatedName, immutableResources);\n               translatedName = m_cms.getRequestContext().removeSiteRoot(translatedName);\n               // if the resource is not immutable and not on the exclude list, import it\n               if (resourceNotImmutable && (!excludeList.contains(translatedName))) {\n                   // print out the information to the report\n                   m_report.print(m_report.key(\"report.importing\"), I_CmsReport.C_FORMAT_NOTE);\n                   m_report.print(translatedName);\n                   m_report.print(m_report.key(\"report.dots\"));\n                   // get all properties\n                   properties = getPropertiesFromXml(currentElement, resType, propertyName, propertyValue, deleteProperties);\n                   // import the resource               \n                   CmsResource res = importResource(source, destination, resType,  uuidresource, uuidcontent, datelastmodified, userlastmodified, datecreated, usercreated, flags, properties);\n                   // if the resource was imported add the access control entrys if available\n                   if (res != null) {\n                       // write all imported access control entries for this file\n                       acentryNodes = currentElement.selectNodes(\"*/\" + I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_ENTRY);\n                       // collect all access control entries\n                       for (int j = 0; j < acentryNodes.size(); j++) {\n                           currentEntry = (Element)acentryNodes.get(j);\n                           // get the data of the access control entry\n                           String id = CmsImport.getChildElementTextValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_PRINCIPAL);\n                           String principalId=new CmsUUID().toString();\n\n                           String principal=id.substring(id.indexOf(\".\")+1, id.length());\n\n                           if (id.startsWith(I_CmsConstants.C_EXPORT_ACEPRINCIPAL_GROUP)) {\n                               principal = OpenCms.getDefaultUsers().translateGroup(principal);  \n                               principalId=m_cms.readGroup(principal).getId().toString();\n                           } else {\n                               principal = OpenCms.getDefaultUsers().translateUser(principal);  \n                               principalId=m_cms.readUser(principal).getId().toString();\n                           }                                                    \n                           String acflags = CmsImport.getChildElementTextValue(currentEntry, I_CmsConstants.C_EXPORT_TAG_FLAGS);                                                      \n                           String allowed = ((Element)currentEntry.selectNodes(\"./\" + I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_PERMISSIONSET + \"/\" + I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_ALLOWEDPERMISSIONS).get(0)).getTextTrim();\n                           String denied = ((Element)currentEntry.selectNodes(\"./\" + I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_PERMISSIONSET + \"/\" + I_CmsConstants.C_EXPORT_TAG_ACCESSCONTROL_DENIEDPERMISSIONS).get(0)).getTextTrim();\n                           // add the entry to the list\n                           addImportAccessControlEntry(res, principalId, allowed, denied, acflags);\n                       }\n                       importAccessControlEntries(res);\n                   } else {\n                       // resource import failed, since no CmsResource was created\n                       m_report.print(m_report.key(\"report.skipping\"), I_CmsReport.C_FORMAT_NOTE);\n                       m_report.println(translatedName);                     \n                   }\n                   \n               } else {\n                   // skip the file import, just print out the information to the report\n                   m_report.print(m_report.key(\"report.skipping\"), I_CmsReport.C_FORMAT_NOTE);\n                   m_report.println(translatedName);\n               }\n           }\n       } catch (Exception exc) {\n           m_report.println(exc);\n           throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n       } finally {\n           if (m_importingChannelData) {\n               m_cms.getRequestContext().restoreSiteRoot();\n           }\n       }\n\n   }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n    * Imports the users and writes them to the cms.<p>\n    * \n    * @throws CmsException if something goes wrong\n    */\n    private void importUsers() throws CmsException {\n      NodeList userNodes;\n      NodeList groupNodes;\n      Element currentElement, currentGroup;\n      Vector userGroups;\n      Hashtable userInfo = new Hashtable();\n      sun.misc.BASE64Decoder dec;\n      String  name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, pwd, infoNode;\n      // try to get the import resource\n      //getImportResource();\n      try {\n          // getAll user nodes\n          userNodes = m_docXml.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_USERDATA);\n          // walk threw all groups in manifest\n          for (int i = 0; i < userNodes.getLength(); i++) {\n              currentElement = (Element)userNodes.item(i);\n              name = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_NAME);\n              name = OpenCms.getDefaultUsers().translateUser(name);              \n              // decode passwords using base 64 decoder\n              dec = new sun.misc.BASE64Decoder();\n              pwd = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_PASSWORD);\n              password = new String(dec.decodeBuffer(pwd.trim()));\n              dec = new sun.misc.BASE64Decoder();\n              pwd = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_RECOVERYPASSWORD);\n              recoveryPassword = new String(dec.decodeBuffer(pwd.trim()));\n\n              description = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n              flags = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n              firstname = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FIRSTNAME);\n              lastname = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_LASTNAME);\n              email = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_EMAIL);\n              address = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ADDRESS);\n              section = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SECTION);\n              defaultGroup = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DEFAULTGROUP);\n              type = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_TYPE);\n              // get the userinfo and put it into the hashtable\n              infoNode = getTextNodeValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERINFO);\n              try {\n                  // read the userinfo from the dat-file\n                  byte[] value = getFileBytes(infoNode);\n                  // deserialize the object\n                  ByteArrayInputStream bin = new ByteArrayInputStream(value);\n                  ObjectInputStream oin = new ObjectInputStream(bin);\n                  userInfo = (Hashtable)oin.readObject();\n              } catch (IOException ioex) {\n                  m_report.println(ioex);\n              }\n\n              // get the groups of the user and put them into the vector\n              groupNodes = currentElement.getElementsByTagName(I_CmsConstants.C_EXPORT_TAG_GROUPNAME);\n              userGroups = new Vector();\n              for (int j = 0; j < groupNodes.getLength(); j++) {\n                  currentGroup = (Element)groupNodes.item(j);\n                  String userInGroup=getTextNodeValue(currentGroup, I_CmsConstants.C_EXPORT_TAG_NAME);\n                  userInGroup = OpenCms.getDefaultUsers().translateGroup(userInGroup);  \n                  userGroups.addElement(userInGroup);\n              }\n              // import this user\n              importUser(null, name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, userInfo, userGroups);\n          }\n      } catch (Exception exc) {\n          m_report.println(exc);\n          throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n      }\n  }","id":27434,"modified_method":"/**\n    * Imports the users and writes them to the cms.<p>\n    * \n    * @throws CmsException if something goes wrong\n    */\n    private void importUsers() throws CmsException {\n      List userNodes;\n      List groupNodes;\n      Element currentElement, currentGroup;\n      Vector userGroups;\n      Hashtable userInfo = new Hashtable();\n      sun.misc.BASE64Decoder dec;\n      String  name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, pwd, infoNode;\n      // try to get the import resource\n      //getImportResource();\n      try {\n          // getAll user nodes\n          userNodes = m_docXml.selectNodes(\"//\" + I_CmsConstants.C_EXPORT_TAG_USERDATA);\n          // walk threw all groups in manifest\n          for (int i = 0; i < userNodes.size(); i++) {\n              currentElement = (Element)userNodes.get(i);\n              name = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_NAME);\n              name = OpenCms.getDefaultUsers().translateUser(name);              \n              // decode passwords using base 64 decoder\n              dec = new sun.misc.BASE64Decoder();\n              pwd = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_PASSWORD);\n              password = new String(dec.decodeBuffer(pwd.trim()));\n              dec = new sun.misc.BASE64Decoder();\n              pwd = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_RECOVERYPASSWORD);\n              recoveryPassword = new String(dec.decodeBuffer(pwd.trim()));\n\n              description = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);\n              flags = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FLAGS);\n              firstname = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_FIRSTNAME);\n              lastname = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_LASTNAME);\n              email = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_EMAIL);\n              address = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_ADDRESS);\n              section = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_SECTION);\n              defaultGroup = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_DEFAULTGROUP);\n              type = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_TYPE);\n              // get the userinfo and put it into the hashtable\n              infoNode = CmsImport.getChildElementTextValue(currentElement, I_CmsConstants.C_EXPORT_TAG_USERINFO);\n              try {\n                  // read the userinfo from the dat-file\n                  byte[] value = getFileBytes(infoNode);\n                  // deserialize the object\n                  ByteArrayInputStream bin = new ByteArrayInputStream(value);\n                  ObjectInputStream oin = new ObjectInputStream(bin);\n                  userInfo = (Hashtable)oin.readObject();\n              } catch (IOException ioex) {\n                  m_report.println(ioex);\n              }\n\n              // get the groups of the user and put them into the vector\n              groupNodes = currentElement.selectNodes(\"*/\" + I_CmsConstants.C_EXPORT_TAG_GROUPNAME);\n              userGroups = new Vector();\n              for (int j = 0; j < groupNodes.size(); j++) {\n                  currentGroup = (Element)groupNodes.get(j);\n                  String userInGroup=CmsImport.getChildElementTextValue(currentGroup, I_CmsConstants.C_EXPORT_TAG_NAME);\n                  userInGroup = OpenCms.getDefaultUsers().translateGroup(userInGroup);  \n                  userGroups.addElement(userInGroup);\n              }\n              // import this user\n              importUser(null, name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, userInfo, userGroups);\n          }\n      } catch (Exception exc) {\n          m_report.println(exc);\n          throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION, exc);\n      }\n  }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Converts the contents of a page into an xml page.<p>\n     * \n     * @param cms the cms object\n     * @param content the content used with xml templates\n     * @param body the name of the body\n     * @param locale the locale of the body\n     * @return the xml page content or null if conversion failed\n     * @throws CmsException if something goes wrong\n     */\n    public static CmsXmlPage convertToXmlPage(CmsObject cms, String content, String body, Locale locale) throws CmsException {\n\n        CmsXmlPage xmlPage = null;\n        \n        try {\n            xmlPage = new CmsXmlPage();\n            \n            SAXReader reader = new SAXReader();\n            Document page = reader.read(new StringReader(content));\n            \n            Element xmltemplate = page.getRootElement();\n            if (xmltemplate == null || !\"XMLTEMPLATE\".equals(xmltemplate.getName())) {\n                throw new Exception(\"Element XMLTEMPLATE not found\");\n            }\n            \n            Element edittemplate = xmltemplate.element(\"edittemplate\");\n            String bodyContent = null;\n            \n            if (edittemplate != null) {\n                bodyContent = edittemplate.getText();\n            } else {\n                Element template = xmltemplate.element(\"TEMPLATE\");\n                if (template != null) {\n                    StringBuffer contentBuffer = new StringBuffer();\n                    for (Iterator i = template.nodeIterator(); i.hasNext();) {\n                        Node n = (Node)i.next();\n                        if (n.getNodeType() == Node.CDATA_SECTION_NODE) {\n                            contentBuffer.append(n.getText());\n                            continue;\n                        } else if (n.getNodeType() == Node.ELEMENT_NODE) {\n                            if (\"LINK\".equals(n.getName())) {\n                                contentBuffer.append(OpenCms.getSystemInfo().getOpenCmsContext());\n                                contentBuffer.append(n.getText());\n                                continue;\n                            } \n                        } \n                        \n                        // ignore other node types\n                        // contentBuffer.append(\"<!-- ignored: \\n\");\n                        // contentBuffer.append(n.toString());\n                        // contentBuffer.append(\"\\n//-->\");\n                    }\n                    bodyContent = contentBuffer.toString();\n                }\n            }\n        \n            if (bodyContent == null) {\n                throw new Exception(\"Body content not found\");\n            }\n            \n            bodyContent = CmsStringSubstitution.substitute(bodyContent, I_CmsWpConstants.C_MACRO_OPENCMS_CONTEXT, OpenCms.getSystemInfo().getOpenCmsContext());\n            \n            xmlPage.addElement(body, locale);\n            xmlPage.setContent(cms, body, locale, bodyContent);\n            \n            return xmlPage;\n        } catch (Exception exc) {\n            throw new CmsException(exc.toString());\n        }\n    }","id":27435,"modified_method":"/**\n     * Converts the contents of a page into an xml page.<p>\n     * \n     * @param cms the cms object\n     * @param content the content used with xml templates\n     * @param body the name of the body\n     * @param locale the locale of the body\n     * @return the xml page content or null if conversion failed\n     * @throws CmsException if something goes wrong\n     */\n    public static CmsXmlPage convertToXmlPage(CmsObject cms, String content, String body, Locale locale) throws CmsException {\n\n        CmsXmlPage xmlPage = null;\n        \n        try {\n            xmlPage = new CmsXmlPage();\n            Document page = CmsImport.getXmlDocument(content);\n            \n            Element xmltemplate = page.getRootElement();\n            if (xmltemplate == null || !\"XMLTEMPLATE\".equals(xmltemplate.getName())) {\n                throw new Exception(\"Element XMLTEMPLATE not found\");\n            }\n            \n            Element edittemplate = xmltemplate.element(\"edittemplate\");\n            String bodyContent = null;\n            \n            if (edittemplate != null) {\n                bodyContent = edittemplate.getText();\n            } else {\n                Element template = xmltemplate.element(\"TEMPLATE\");\n                if (template != null) {\n                    StringBuffer contentBuffer = new StringBuffer();\n                    for (Iterator i = template.nodeIterator(); i.hasNext();) {\n                        Node n = (Node)i.next();\n                        if (n.getNodeType() == Node.CDATA_SECTION_NODE) {\n                            contentBuffer.append(n.getText());\n                            continue;\n                        } else if (n.getNodeType() == Node.ELEMENT_NODE) {\n                            if (\"LINK\".equals(n.getName())) {\n                                contentBuffer.append(OpenCms.getSystemInfo().getOpenCmsContext());\n                                contentBuffer.append(n.getText());\n                                continue;\n                            } \n                        } \n                        \n                        // ignore other node types\n                        // contentBuffer.append(\"<!-- ignored: \\n\");\n                        // contentBuffer.append(n.toString());\n                        // contentBuffer.append(\"\\n//-->\");\n                    }\n                    bodyContent = contentBuffer.toString();\n                }\n            }\n        \n            if (bodyContent == null) {\n                throw new Exception(\"Body content not found\");\n            }\n            \n            bodyContent = CmsStringSubstitution.substitute(bodyContent, I_CmsWpConstants.C_MACRO_OPENCMS_CONTEXT, OpenCms.getSystemInfo().getOpenCmsContext());\n            \n            xmlPage.addElement(body, locale);\n            xmlPage.setContent(cms, body, locale, bodyContent);\n            \n            return xmlPage;\n        } catch (Exception exc) {\n            throw new CmsException(exc.toString());\n        }\n    }","commit_id":"490b8054ce34f0274ca7b8f7774ed517a9d18a00","url":"https://github.com/alkacon/opencms-core"},{"original_method":"private Runnable runBuild(StartParameter startParameter, DaemonParameters daemonParameters, BuildActionExecuter<BuildActionParameters> executer) {\n        return new RunBuildAction(executer, startParameter, SystemProperties.getInstance().getCurrentDir(), clientMetaData(), getBuildStartTime(), daemonParameters.getEffectiveSystemProperties(), System.getenv());\n    }","id":27436,"modified_method":"private Runnable runBuild(StartParameter startParameter, DaemonParameters daemonParameters, BuildActionExecuter<BuildActionParameters> executer) {\n        Map<String, String> systemProperties = new HashMap<String, String>();\n        GUtil.addToMap(systemProperties, daemonParameters.getEffectiveSystemProperties());\n        BuildActionParameters parameters = new DefaultBuildActionParameters(systemProperties, System.getenv(), SystemProperties.getInstance().getCurrentDir(),\n                startParameter.getLogLevel(), daemonParameters.isUsageConfiguredExplicitly());\n        return new RunBuildAction(executer, startParameter, clientMetaData(), getBuildStartTime(),\n                parameters);\n    }","commit_id":"7717247b8c10afbdd91b5b93d5fa4d33071e5e44","url":"https://github.com/gradle/gradle"},{"original_method":"public DaemonBuildActionExecuter(BuildActionExecuter<BuildActionParameters> executer, DaemonParameters parameters) {\n        this.executer = executer;\n        this.parameters = parameters;\n    }","id":27437,"modified_method":"public DaemonBuildActionExecuter(BuildActionExecuter<BuildActionParameters> executer, DaemonParameters daemonParameters) {\n        this.executer = executer;\n        this.daemonParameters = daemonParameters;\n    }","commit_id":"7717247b8c10afbdd91b5b93d5fa4d33071e5e44","url":"https://github.com/gradle/gradle"},{"original_method":"public Object execute(BuildAction action, BuildRequestContext buildRequestContext, ProviderOperationParameters actionParameters) {\n        BuildActionParameters parameters = new DefaultBuildActionParameters(this.parameters.getEffectiveSystemProperties(),\n                System.getenv(), SystemProperties.getInstance().getCurrentDir(), actionParameters.getBuildLogLevel());\n        try {\n            return executer.execute(action, buildRequestContext, parameters);\n        } catch (ReportedException e) {\n            Throwable t = e.getCause();\n            while (t != null) {\n                if (t instanceof BuildCancelledException) {\n                    throw new InternalBuildCancelledException(e.getCause());\n                }\n                t = t.getCause();\n            }\n            throw new BuildExceptionVersion1(e.getCause());\n        }\n    }","id":27438,"modified_method":"public Object execute(BuildAction action, BuildRequestContext buildRequestContext, ProviderOperationParameters parameters) {\n        BuildActionParameters actionParameters = new DefaultBuildActionParameters(daemonParameters.getEffectiveSystemProperties(),\n                System.getenv(), SystemProperties.getInstance().getCurrentDir(), parameters.getBuildLogLevel(), daemonParameters.isUsageConfiguredExplicitly());\n        try {\n            return executer.execute(action, buildRequestContext, actionParameters);\n        } catch (ReportedException e) {\n            Throwable t = e.getCause();\n            while (t != null) {\n                if (t instanceof BuildCancelledException) {\n                    throw new InternalBuildCancelledException(e.getCause());\n                }\n                t = t.getCause();\n            }\n            throw new BuildExceptionVersion1(e.getCause());\n        }\n    }","commit_id":"7717247b8c10afbdd91b5b93d5fa4d33071e5e44","url":"https://github.com/gradle/gradle"},{"original_method":"public DaemonParameters setEnabled(boolean enabled) {\n        this.enabled = enabled;\n        return this;\n    }","id":27439,"modified_method":"public DaemonParameters setEnabled(boolean enabled) {\n        daemonUsage = enabled ? DaemonUsage.EXPLICITLY_ENABLED : DaemonUsage.EXPLICITLY_DISABLED;\n        return this;\n    }","commit_id":"7717247b8c10afbdd91b5b93d5fa4d33071e5e44","url":"https://github.com/gradle/gradle"},{"original_method":"public boolean isEnabled() {\n        return enabled;\n    }","id":27440,"modified_method":"public boolean isEnabled() {\n        return daemonUsage.enabled;\n    }","commit_id":"7717247b8c10afbdd91b5b93d5fa4d33071e5e44","url":"https://github.com/gradle/gradle"},{"original_method":"public DefaultBuildActionParameters(Map<?, ?> systemProperties, Map<String, String> envVariables, File currentDir, LogLevel logLevel) {\n        this.currentDir = currentDir;\n        this.logLevel = logLevel;\n        assert systemProperties != null;\n        assert envVariables != null;\n        this.systemProperties = new HashMap<String, String>();\n        GUtil.addToMap(this.systemProperties, systemProperties);\n        this.envVariables = new HashMap<String, String>(envVariables);\n    }","id":27441,"modified_method":"public DefaultBuildActionParameters(Map<?, ?> systemProperties, Map<String, String> envVariables, File currentDir, LogLevel logLevel, boolean daemonUsageConfiguredExplicitly) {\n        this.currentDir = currentDir;\n        this.logLevel = logLevel;\n        assert systemProperties != null;\n        assert envVariables != null;\n        this.systemProperties = new HashMap<String, String>();\n        GUtil.addToMap(this.systemProperties, systemProperties);\n        this.envVariables = new HashMap<String, String>(envVariables);\n        this.daemonUsageConfiguredExplicitly = daemonUsageConfiguredExplicitly;\n    }","commit_id":"7717247b8c10afbdd91b5b93d5fa4d33071e5e44","url":"https://github.com/gradle/gradle"},{"original_method":"public InProcessBuildActionExecuter(GradleLauncherFactory gradleLauncherFactory, BuildActionRunner buildActionRunner) {\n        this.gradleLauncherFactory = gradleLauncherFactory;\n        this.buildActionRunner = buildActionRunner;\n    }","id":27442,"modified_method":"public InProcessBuildActionExecuter(GradleLauncherFactory gradleLauncherFactory, BuildActionRunner buildActionRunner, StyledTextOutputFactory textOutputFactory,\n                                        GradleBuildEnvironment buildEnvironment, DocumentationRegistry documentationRegistry) {\n        this.gradleLauncherFactory = gradleLauncherFactory;\n        this.buildActionRunner = buildActionRunner;\n        this.textOutputFactory = textOutputFactory;\n        this.buildEnvironment = buildEnvironment;\n        this.documentationRegistry = documentationRegistry;\n    }","commit_id":"7717247b8c10afbdd91b5b93d5fa4d33071e5e44","url":"https://github.com/gradle/gradle"},{"original_method":"public Object execute(BuildAction action, BuildRequestContext buildRequestContext, BuildActionParameters actionParameters) {\n        DefaultGradleLauncher gradleLauncher = (DefaultGradleLauncher) gradleLauncherFactory.newInstance(action.getStartParameter(), buildRequestContext);\n        try {\n            DefaultBuildController buildController = new DefaultBuildController(gradleLauncher);\n            buildActionRunner.run(action, buildController);\n            return buildController.result;\n        } finally {\n            gradleLauncher.stop();\n        }\n    }","id":27443,"modified_method":"public Object execute(BuildAction action, BuildRequestContext buildRequestContext, BuildActionParameters actionParameters) {\n        DefaultGradleLauncher gradleLauncher = (DefaultGradleLauncher) gradleLauncherFactory.newInstance(action.getStartParameter(), buildRequestContext);\n        try {\n            DefaultBuildController buildController = new DefaultBuildController(gradleLauncher);\n            buildActionRunner.run(action, buildController);\n            possiblySuggestUsingDaemon(actionParameters);\n            return buildController.result;\n        } finally {\n            gradleLauncher.stop();\n        }\n    }","commit_id":"7717247b8c10afbdd91b5b93d5fa4d33071e5e44","url":"https://github.com/gradle/gradle"},{"original_method":"InProcessBuildActionExecuter createBuildActionExecuter(GradleLauncherFactory gradleLauncherFactory, ServiceRegistry services) {\n            return new InProcessBuildActionExecuter(gradleLauncherFactory, new ChainingBuildActionRunner(services.getAll(BuildActionRunner.class)));\n        }","id":27444,"modified_method":"InProcessBuildActionExecuter createBuildActionExecuter(GradleLauncherFactory gradleLauncherFactory, ServiceRegistry services) {\n            List<BuildActionRunner> buildActionRunners = services.getAll(BuildActionRunner.class);\n            GradleBuildEnvironment buildEnvironment = services.get(GradleBuildEnvironment.class);\n            DocumentationRegistry documentationRegistry = services.get(DocumentationRegistry.class);\n            StyledTextOutputFactory textOutputFactory = services.get(StyledTextOutputFactory.class);\n            return new InProcessBuildActionExecuter(gradleLauncherFactory, new ChainingBuildActionRunner(buildActionRunners), textOutputFactory, buildEnvironment, documentationRegistry);\n        }","commit_id":"7717247b8c10afbdd91b5b93d5fa4d33071e5e44","url":"https://github.com/gradle/gradle"},{"original_method":"public void convert(Map<String, String> properties, DaemonParameters target) {\n        String prop = properties.get(IDLE_TIMEOUT_PROPERTY);\n        if (prop != null) {\n            try {\n                target.setIdleTimeout(new Integer(prop));\n            } catch (NumberFormatException e) {\n                throw new GradleException(String.format(\"Unable to parse %s property. The value should be an int but is: %s\", IDLE_TIMEOUT_PROPERTY, prop));\n            }\n        }\n\n        prop = properties.get(JVM_ARGS_PROPERTY);\n        if (prop != null) {\n            target.setJvmArgs(JvmOptions.fromString(prop));\n        }\n\n        prop = properties.get(JAVA_HOME_PROPERTY);\n        if (prop != null) {\n            File javaHome = new File(prop);\n            if (!javaHome.isDirectory()) {\n                throw new GradleException(String.format(\"Java home supplied via '%s' is invalid. Invalid directory: %s\", JAVA_HOME_PROPERTY, prop));\n            }\n            try {\n                Jvm.forHome(javaHome);\n            } catch (JavaHomeException e) {\n                throw new GradleException(String.format(\"Java home supplied via '%s' seems to be invalid: %s\", JAVA_HOME_PROPERTY, prop));\n            }\n            target.setJavaHome(javaHome);\n        }\n\n        prop = properties.get(DAEMON_BASE_DIR_PROPERTY);\n        if (prop != null) {\n            target.setBaseDir(new File(prop));\n        }\n\n        target.setEnabled(isTrue(properties.get(DAEMON_ENABLED_PROPERTY)));\n        target.setDebug(isTrue(properties.get(DEBUG_MODE_PROPERTY)));\n    }","id":27445,"modified_method":"public void convert(Map<String, String> properties, DaemonParameters target) {\n        String prop = properties.get(IDLE_TIMEOUT_PROPERTY);\n        if (prop != null) {\n            try {\n                target.setIdleTimeout(new Integer(prop));\n            } catch (NumberFormatException e) {\n                throw new GradleException(String.format(\"Unable to parse %s property. The value should be an int but is: %s\", IDLE_TIMEOUT_PROPERTY, prop));\n            }\n        }\n\n        prop = properties.get(JVM_ARGS_PROPERTY);\n        if (prop != null) {\n            target.setJvmArgs(JvmOptions.fromString(prop));\n        }\n\n        prop = properties.get(JAVA_HOME_PROPERTY);\n        if (prop != null) {\n            File javaHome = new File(prop);\n            if (!javaHome.isDirectory()) {\n                throw new GradleException(String.format(\"Java home supplied via '%s' is invalid. Invalid directory: %s\", JAVA_HOME_PROPERTY, prop));\n            }\n            try {\n                Jvm.forHome(javaHome);\n            } catch (JavaHomeException e) {\n                throw new GradleException(String.format(\"Java home supplied via '%s' seems to be invalid: %s\", JAVA_HOME_PROPERTY, prop));\n            }\n            target.setJavaHome(javaHome);\n        }\n\n        prop = properties.get(DAEMON_BASE_DIR_PROPERTY);\n        if (prop != null) {\n            target.setBaseDir(new File(prop));\n        }\n\n        String daemonEnabledPropertyValue = properties.get(DAEMON_ENABLED_PROPERTY);\n        if (daemonEnabledPropertyValue != null) {\n            target.setEnabled(isTrue(daemonEnabledPropertyValue));\n        }\n        target.setDebug(isTrue(properties.get(DEBUG_MODE_PROPERTY)));\n    }","commit_id":"7717247b8c10afbdd91b5b93d5fa4d33071e5e44","url":"https://github.com/gradle/gradle"},{"original_method":"public void run() {\n        executer.execute(\n                new ExecuteBuildAction(startParameter),\n                new DefaultBuildRequestContext(new DefaultBuildRequestMetaData(clientMetaData, startTime), new FixedBuildCancellationToken(), new NoOpBuildEventConsumer()),\n                new DefaultBuildActionParameters(systemProperties, envVariables, currentDir, startParameter.getLogLevel()));\n    }","id":27446,"modified_method":"public void run() {\n        executer.execute(\n                new ExecuteBuildAction(startParameter),\n                new DefaultBuildRequestContext(new DefaultBuildRequestMetaData(clientMetaData, startTime), new FixedBuildCancellationToken(), new NoOpBuildEventConsumer()),\n                buildActionParameters);\n    }","commit_id":"7717247b8c10afbdd91b5b93d5fa4d33071e5e44","url":"https://github.com/gradle/gradle"},{"original_method":"public RunBuildAction(BuildActionExecuter<BuildActionParameters> executer, StartParameter startParameter, File currentDir, BuildClientMetaData clientMetaData, long startTime, Map<?, ?> systemProperties, Map<String, String> envVariables) {\n        this.executer = executer;\n        this.startParameter = startParameter;\n        this.currentDir = currentDir;\n        this.clientMetaData = clientMetaData;\n        this.startTime = startTime;\n        this.systemProperties = new HashMap<String, String>();\n        GUtil.addToMap(this.systemProperties, systemProperties);\n        this.envVariables = envVariables;\n    }","id":27447,"modified_method":"public RunBuildAction(BuildActionExecuter<BuildActionParameters> executer, StartParameter startParameter, BuildClientMetaData clientMetaData, long startTime,\n                          BuildActionParameters buildActionParameters) {\n        this.executer = executer;\n        this.startParameter = startParameter;\n        this.clientMetaData = clientMetaData;\n        this.startTime = startTime;\n        this.buildActionParameters = buildActionParameters;\n    }","commit_id":"7717247b8c10afbdd91b5b93d5fa4d33071e5e44","url":"https://github.com/gradle/gradle"},{"original_method":"PersistentCache createCache(StartParameter startParameter) {\n        CacheLayout layout = new CacheLayoutBuilder()\n                .withScope(startParameter.getCurrentDir())\n                .withSharedCacheThatInvalidatesOnVersionChange()\n                .build();\n        return cacheRepository.\n                cache(\"buildSrc\").\n                withLockOptions(mode(FileLockManager.LockMode.None).useCrossVersionImplementation()).\n                withLayout(layout).\n                open();\n    }","id":27448,"modified_method":"PersistentCache createCache(StartParameter startParameter) {\n        CacheLayout layout = new CacheLayoutBuilder()\n                .withScope(new File(startParameter.getCurrentDir(), \".gradle/noVersion/buildSrc\"))\n                .withSharedCache()\n                .build();\n        return cacheRepository\n                .cache(\"buildSrc\")\n                .withLockOptions(mode(FileLockManager.LockMode.None).useCrossVersionImplementation())\n                .withLayout(layout)\n                .withProperties(Collections.singletonMap(\"gradle.version\", GradleVersion.current().getVersion()))\n                .open();\n    }","commit_id":"b986ecf11bfd8993dd4bbb9f27e19f735fe9332b","url":"https://github.com/gradle/gradle"},{"original_method":"public File getCacheDir(File globalCacheDir, File projectCacheDir, String cacheKey) {\n        File cacheBaseDir = determineBaseDir(globalCacheDir, projectCacheDir);\n        cacheBaseDir = applyVersionStrategy(cacheBaseDir);\n        for (String pathEntry : pathEntries) {\n            cacheBaseDir = new File(cacheBaseDir, pathEntry);\n        }\n        return new File(cacheBaseDir, cacheKey);\n    }","id":27449,"modified_method":"public File getCacheDir(File globalCacheDir, File projectCacheDir, String cacheKey) {\n        if (baseDir != null) {\n            return baseDir;\n        }\n\n        File cacheBaseDir = determineBaseDir(globalCacheDir, projectCacheDir);\n        cacheBaseDir = applyVersionStrategy(cacheBaseDir);\n        for (String pathEntry : pathEntries) {\n            cacheBaseDir = new File(cacheBaseDir, pathEntry);\n        }\n        return new File(cacheBaseDir, cacheKey);\n    }","commit_id":"b986ecf11bfd8993dd4bbb9f27e19f735fe9332b","url":"https://github.com/gradle/gradle"},{"original_method":"private File applyVersionStrategy(File cacheBaseDir) {\n        switch (versionStrategy) {\n            case CachePerVersion:\n                return new File(cacheBaseDir, version.getVersion());\n            case SharedCacheInvalidateOnVersionChange:\n                // Include the 'noVersion' suffix for backwards compatibility\n                return  new File(cacheBaseDir, \"noVersion\");\n            case SharedCache:\n            default:\n                return cacheBaseDir;\n        }\n    }","id":27450,"modified_method":"private File applyVersionStrategy(File cacheBaseDir) {\n        switch (versionStrategy) {\n            case CachePerVersion:\n                return new File(cacheBaseDir, version.getVersion());\n            case SharedCache:\n                return cacheBaseDir;\n            default:\n                throw new IllegalArgumentException();\n        }\n    }","commit_id":"b986ecf11bfd8993dd4bbb9f27e19f735fe9332b","url":"https://github.com/gradle/gradle"},{"original_method":"private File determineBaseDir(File globalCacheDir, File projectCacheDir) {\n        if (baseDir != null) {\n            return new File(baseDir, \".gradle\");\n        }\n        if (project != null) {\n            return getProjectCacheDir(projectCacheDir);\n        }\n        return globalCacheDir;\n    }","id":27451,"modified_method":"private File determineBaseDir(File globalCacheDir, File projectCacheDir) {\n        if (project != null) {\n            return getProjectCacheDir(projectCacheDir);\n        }\n        return globalCacheDir;\n    }","commit_id":"b986ecf11bfd8993dd4bbb9f27e19f735fe9332b","url":"https://github.com/gradle/gradle"},{"original_method":"public T open() {\n            File cacheBaseDir = layout.getCacheDir(globalCacheDir, projectCacheDir, key);\n            Map<String, ?> props = layout.applyLayoutProperties(properties);\n            return doOpen(cacheBaseDir, props, validator);\n        }","id":27452,"modified_method":"public T open() {\n            File cacheBaseDir = layout.getCacheDir(globalCacheDir, projectCacheDir, key);\n            return doOpen(cacheBaseDir, properties, validator);\n        }","commit_id":"b986ecf11bfd8993dd4bbb9f27e19f735fe9332b","url":"https://github.com/gradle/gradle"},{"original_method":"public DefaultCommandLineConverter() {\n        this.fileLookup = new DefaultFileLookup(FileSystems.getDefault());\n        layoutCommandLineConverter = new LayoutCommandLineConverter(fileLookup);\n    }","id":27453,"modified_method":"public DefaultCommandLineConverter() {\n        layoutCommandLineConverter = new LayoutCommandLineConverter();\n    }","commit_id":"8c371f0aeba78c00a4eb888c2b840d951d40d75c","url":"https://github.com/gradle/gradle"},{"original_method":"void convertCommandLineSystemProperties(Map<String, String> systemProperties, StartParameter startParameter, FileResolver resolver) {\n        startParameter.getSystemPropertiesArgs().putAll(systemProperties);\n        if (systemProperties.containsKey(GRADLE_USER_HOME_PROPERTY_KEY)) {\n            startParameter.setGradleUserHomeDir(resolver.resolve(systemProperties.get(GRADLE_USER_HOME_PROPERTY_KEY)));\n        }\n    }","id":27454,"modified_method":"void convertCommandLineSystemProperties(Map<String, String> systemProperties, StartParameter startParameter, Transformer<File, String> resolver) {\n        startParameter.getSystemPropertiesArgs().putAll(systemProperties);\n        if (systemProperties.containsKey(GRADLE_USER_HOME_PROPERTY_KEY)) {\n            startParameter.setGradleUserHomeDir(resolver.transform(systemProperties.get(GRADLE_USER_HOME_PROPERTY_KEY)));\n        }\n    }","commit_id":"8c371f0aeba78c00a4eb888c2b840d951d40d75c","url":"https://github.com/gradle/gradle"},{"original_method":"public StartParameter convert(final ParsedCommandLine options, final StartParameter startParameter) throws CommandLineArgumentException {\n        loggingConfigurationCommandLineConverter.convert(options, startParameter);\n        FileResolver resolver = fileLookup.getFileResolver(startParameter.getCurrentDir());\n\n        Map<String, String> systemProperties = systemPropertiesCommandLineConverter.convert(options, new HashMap<String, String>());\n        convertCommandLineSystemProperties(systemProperties, startParameter, resolver);\n\n        Map<String, String> projectProperties = projectPropertiesCommandLineConverter.convert(options, new HashMap<String, String>());\n        startParameter.getProjectProperties().putAll(projectProperties);\n\n        BuildLayoutParameters layout = new BuildLayoutParameters()\n                .setGradleUserHomeDir(startParameter.getGradleUserHomeDir())\n                .setProjectDir(startParameter.getCurrentDir());\n        layoutCommandLineConverter.convert(options, layout);\n        startParameter.setGradleUserHomeDir(layout.getGradleUserHomeDir());\n        startParameter.setProjectDir(layout.getProjectDir());\n        startParameter.setSearchUpwards(layout.getSearchUpwards());\n\n        if (options.hasOption(BUILD_FILE)) {\n            startParameter.setBuildFile(resolver.resolve(options.option(BUILD_FILE).getValue()));\n        }\n        if (options.hasOption(SETTINGS_FILE)) {\n            startParameter.setSettingsFile(resolver.resolve(options.option(SETTINGS_FILE).getValue()));\n        }\n\n        for (String script : options.option(INIT_SCRIPT).getValues()) {\n            startParameter.addInitScript(resolver.resolve(script));\n        }\n\n        if (options.hasOption(CACHE)) {\n            try {\n                startParameter.setCacheUsage(CacheUsage.fromString(options.option(CACHE).getValue()));\n            } catch (InvalidUserDataException e) {\n                throw new CommandLineArgumentException(e.getMessage());\n            }\n        }\n\n        if (options.hasOption(PROJECT_CACHE_DIR)) {\n            startParameter.setProjectCacheDir(resolver.resolve(options.option(PROJECT_CACHE_DIR).getValue()));\n        }\n\n        if (options.hasOption(NO_PROJECT_DEPENDENCY_REBUILD)) {\n            startParameter.setBuildProjectDependencies(false);\n        }\n\n        if (!options.getExtraArguments().isEmpty()) {\n            startParameter.setTaskNames(options.getExtraArguments());\n        }\n\n        if (options.hasOption(DRY_RUN)) {\n            startParameter.setDryRun(true);\n        }\n\n        if (options.hasOption(NO_OPT)) {\n            startParameter.setNoOpt(true);\n        }\n\n        if (options.hasOption(RERUN_TASKS)) {\n            startParameter.setRerunTasks(true);\n        }\n\n        if (options.hasOption(RECOMPILE_SCRIPTS)) {\n            startParameter.setRecompileScripts(true);\n        }\n\n        if (options.hasOption(EXCLUDE_TASK)) {\n            startParameter.setExcludedTaskNames(options.option(EXCLUDE_TASK).getValues());\n        }\n\n        if (options.hasOption(PROFILE)) {\n            startParameter.setProfile(true);\n        }\n\n        if (options.hasOption(CONTINUE)) {\n            startParameter.setContinueOnFailure(true);\n        }\n\n        if (options.hasOption(OFFLINE)) {\n            startParameter.setOffline(true);\n        }\n\n        if (options.hasOption(REFRESH)) {\n            startParameter.setRefreshOptions(RefreshOptions.fromCommandLineOptions(options.option(REFRESH).getValues()));\n        }\n\n        if (options.hasOption(REFRESH_DEPENDENCIES)) {\n            startParameter.setRefreshDependencies(true);\n        }\n\n        if (options.hasOption(PARALLEL)) {\n            startParameter.setParallelThreadCount(-1);\n        }\n\n        if (options.hasOption(PARALLEL_THREADS)) {\n            try {\n                int parallelThreads = Integer.parseInt(options.option(PARALLEL_THREADS).getValue());\n                startParameter.setParallelThreadCount(parallelThreads);\n            } catch (NumberFormatException e) {\n                throw new CommandLineArgumentException(String.format(\"Not a numeric argument for %s\", PARALLEL_THREADS));\n            }\n        }\n\n        if (options.hasOption(CONFIGURE_ON_DEMAND)) {\n            startParameter.setConfigureOnDemand(true);\n        }\n\n        return startParameter;\n    }","id":27455,"modified_method":"public StartParameter convert(final ParsedCommandLine options, final StartParameter startParameter) throws CommandLineArgumentException {\n        loggingConfigurationCommandLineConverter.convert(options, startParameter);\n        Transformer<File, String> resolver = new BasicFileResolver(startParameter.getCurrentDir());\n\n        Map<String, String> systemProperties = systemPropertiesCommandLineConverter.convert(options, new HashMap<String, String>());\n        convertCommandLineSystemProperties(systemProperties, startParameter, resolver);\n\n        Map<String, String> projectProperties = projectPropertiesCommandLineConverter.convert(options, new HashMap<String, String>());\n        startParameter.getProjectProperties().putAll(projectProperties);\n\n        BuildLayoutParameters layout = new BuildLayoutParameters()\n                .setGradleUserHomeDir(startParameter.getGradleUserHomeDir())\n                .setProjectDir(startParameter.getCurrentDir());\n        layoutCommandLineConverter.convert(options, layout);\n        startParameter.setGradleUserHomeDir(layout.getGradleUserHomeDir());\n        startParameter.setProjectDir(layout.getProjectDir());\n        startParameter.setSearchUpwards(layout.getSearchUpwards());\n\n        if (options.hasOption(BUILD_FILE)) {\n            startParameter.setBuildFile(resolver.transform(options.option(BUILD_FILE).getValue()));\n        }\n        if (options.hasOption(SETTINGS_FILE)) {\n            startParameter.setSettingsFile(resolver.transform(options.option(SETTINGS_FILE).getValue()));\n        }\n\n        for (String script : options.option(INIT_SCRIPT).getValues()) {\n            startParameter.addInitScript(resolver.transform(script));\n        }\n\n        if (options.hasOption(CACHE)) {\n            try {\n                startParameter.setCacheUsage(CacheUsage.fromString(options.option(CACHE).getValue()));\n            } catch (InvalidUserDataException e) {\n                throw new CommandLineArgumentException(e.getMessage());\n            }\n        }\n\n        if (options.hasOption(PROJECT_CACHE_DIR)) {\n            startParameter.setProjectCacheDir(resolver.transform(options.option(PROJECT_CACHE_DIR).getValue()));\n        }\n\n        if (options.hasOption(NO_PROJECT_DEPENDENCY_REBUILD)) {\n            startParameter.setBuildProjectDependencies(false);\n        }\n\n        if (!options.getExtraArguments().isEmpty()) {\n            startParameter.setTaskNames(options.getExtraArguments());\n        }\n\n        if (options.hasOption(DRY_RUN)) {\n            startParameter.setDryRun(true);\n        }\n\n        if (options.hasOption(NO_OPT)) {\n            startParameter.setNoOpt(true);\n        }\n\n        if (options.hasOption(RERUN_TASKS)) {\n            startParameter.setRerunTasks(true);\n        }\n\n        if (options.hasOption(RECOMPILE_SCRIPTS)) {\n            startParameter.setRecompileScripts(true);\n        }\n\n        if (options.hasOption(EXCLUDE_TASK)) {\n            startParameter.setExcludedTaskNames(options.option(EXCLUDE_TASK).getValues());\n        }\n\n        if (options.hasOption(PROFILE)) {\n            startParameter.setProfile(true);\n        }\n\n        if (options.hasOption(CONTINUE)) {\n            startParameter.setContinueOnFailure(true);\n        }\n\n        if (options.hasOption(OFFLINE)) {\n            startParameter.setOffline(true);\n        }\n\n        if (options.hasOption(REFRESH)) {\n            startParameter.setRefreshOptions(RefreshOptions.fromCommandLineOptions(options.option(REFRESH).getValues()));\n        }\n\n        if (options.hasOption(REFRESH_DEPENDENCIES)) {\n            startParameter.setRefreshDependencies(true);\n        }\n\n        if (options.hasOption(PARALLEL)) {\n            startParameter.setParallelThreadCount(-1);\n        }\n\n        if (options.hasOption(PARALLEL_THREADS)) {\n            try {\n                int parallelThreads = Integer.parseInt(options.option(PARALLEL_THREADS).getValue());\n                startParameter.setParallelThreadCount(parallelThreads);\n            } catch (NumberFormatException e) {\n                throw new CommandLineArgumentException(String.format(\"Not a numeric argument for %s\", PARALLEL_THREADS));\n            }\n        }\n\n        if (options.hasOption(CONFIGURE_ON_DEMAND)) {\n            startParameter.setConfigureOnDemand(true);\n        }\n\n        return startParameter;\n    }","commit_id":"8c371f0aeba78c00a4eb888c2b840d951d40d75c","url":"https://github.com/gradle/gradle"},{"original_method":"public BuildLayoutParameters convert(ParsedCommandLine options, BuildLayoutParameters target) throws CommandLineArgumentException {\n        FileResolver resolver = fileLookup.getFileResolver(target.getProjectDir());\n        if (options.hasOption(NO_SEARCH_UPWARDS)) {\n            target.setSearchUpwards(false);\n        }\n        if (options.hasOption(PROJECT_DIR)) {\n            target.setProjectDir(resolver.resolve(options.option(PROJECT_DIR).getValue()));\n        }\n        if (options.hasOption(GRADLE_USER_HOME)) {\n            target.setGradleUserHomeDir(resolver.resolve(options.option(GRADLE_USER_HOME).getValue()));\n        }\n        return target;\n    }","id":27456,"modified_method":"public BuildLayoutParameters convert(ParsedCommandLine options, BuildLayoutParameters target) throws CommandLineArgumentException {\n        Transformer<File, String> resolver = new BasicFileResolver(target.getProjectDir());\n        if (options.hasOption(NO_SEARCH_UPWARDS)) {\n            target.setSearchUpwards(false);\n        }\n        if (options.hasOption(PROJECT_DIR)) {\n            target.setProjectDir(resolver.transform(options.option(PROJECT_DIR).getValue()));\n        }\n        if (options.hasOption(GRADLE_USER_HOME)) {\n            target.setGradleUserHomeDir(resolver.transform(options.option(GRADLE_USER_HOME).getValue()));\n        }\n        return target;\n    }","commit_id":"8c371f0aeba78c00a4eb888c2b840d951d40d75c","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\r\n  public ODocument reset() {\r\n    ODatabaseRecordThreadLocal.INSTANCE.set((ODatabaseRecord) database);\r\n    final int deleted = database.command(new OSQLSynchQuery<OIdentifiable>(\"delete from \" + DISTRIBUTED_CONFLICT_CLASS));\r\n    return new ODocument().field(\"result\", deleted);\r\n  }","id":27457,"modified_method":"@Override\r\n  public ODocument reset() {\r\n    ODatabaseRecordThreadLocal.INSTANCE.set((ODatabaseRecord) database);\r\n    final int deleted = (Integer) database.command(new OSQLSynchQuery<OIdentifiable>(\"delete from \" + DISTRIBUTED_CONFLICT_CLASS))\r\n        .execute();\r\n    return new ODocument().field(\"result\", deleted);\r\n  }","commit_id":"bb9f0972c879967b9aaa8848b7f18067caabf87f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public String getSyntax() {\n    return \"ALTER SEQUENCE <class> \";\n  }","id":27458,"modified_method":"@Override\n  public String getSyntax() {\n    return \"ALTER SEQUENCE <sequence> [START <value>] [INCREMENT <value>] [CACHE <value>]\";\n  }","commit_id":"c456b7bcacd6b38e945e40739169d48d744769c6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public OCommandExecutorSQLCreateSequence parse(OCommandRequest iRequest) {\n    init((OCommandRequestText) iRequest);\n\n    final ODatabaseDocumentInternal database = getDatabase();\n    final StringBuilder word = new StringBuilder();\n\n    parserRequiredKeyword(KEYWORD_CREATE);\n    parserRequiredKeyword(KEYWORD_SEQUENCE);\n    this.sequenceName = parserRequiredWord(false, \"Expected <sequence name>\");\n    this.params = new OSequence.CreateParams();\n\n    String temp;\n    while ((temp = parseOptionalWord(true)) != null) {\n      if (parserIsEnded()) {\n        break;\n      }\n\n      if (temp.equals(KEYWORD_TYPE)) {\n        String typeAsString = parserRequiredWord(true, \"Expected <sequence type>\");\n        try {\n          this.sequenceType = OSequenceHelper.getSequenceTyeFromString(typeAsString);\n        } catch (IllegalArgumentException e) {\n          throw new OCommandSQLParsingException(\"Unknown sequence's type '\" + typeAsString + \"'. Supported attributes are: \"\n              + Arrays.toString(SEQUENCE_TYPE.values()));\n        }\n      } else if (temp.equals(KEYWORD_START)) {\n        String startAsString = parserRequiredWord(true, \"Expected <start value>\");\n        this.params.start = Long.parseLong(startAsString);\n      } else if (temp.equals(KEYWORD_INCREMENT)) {\n        String incrementAsString = parserRequiredWord(true, \"Expected <increment value>\");\n        this.params.increment = Integer.parseInt(incrementAsString);\n      } else if (temp.equals(KEYWORD_CACHE)) {\n        String cacheAsString = parserRequiredWord(true, \"Expected <cache value>\");\n        this.params.cacheSize = Integer.parseInt(cacheAsString);\n      }\n    }\n\n    return this;\n  }","id":27459,"modified_method":"@Override\n  public OCommandExecutorSQLCreateSequence parse(OCommandRequest iRequest) {\n    init((OCommandRequestText) iRequest);\n\n    final ODatabaseDocumentInternal database = getDatabase();\n    final StringBuilder word = new StringBuilder();\n\n    parserRequiredKeyword(KEYWORD_CREATE);\n    parserRequiredKeyword(KEYWORD_SEQUENCE);\n    this.sequenceName = parserRequiredWord(false, \"Expected <sequence name>\");\n    this.params = new OSequence.CreateParams().setDefaults();\n\n    String temp;\n    while ((temp = parseOptionalWord(true)) != null) {\n      if (parserIsEnded()) {\n        break;\n      }\n\n      if (temp.equals(KEYWORD_TYPE)) {\n        String typeAsString = parserRequiredWord(true, \"Expected <sequence type>\");\n        try {\n          this.sequenceType = OSequenceHelper.getSequenceTyeFromString(typeAsString);\n        } catch (IllegalArgumentException e) {\n          throw new OCommandSQLParsingException(\"Unknown sequence type '\" + typeAsString + \"'. Supported attributes are: \"\n              + Arrays.toString(SEQUENCE_TYPE.values()));\n        }\n      } else if (temp.equals(KEYWORD_START)) {\n        String startAsString = parserRequiredWord(true, \"Expected <start value>\");\n        this.params.start = Long.parseLong(startAsString);\n      } else if (temp.equals(KEYWORD_INCREMENT)) {\n        String incrementAsString = parserRequiredWord(true, \"Expected <increment value>\");\n        this.params.increment = Integer.parseInt(incrementAsString);\n      } else if (temp.equals(KEYWORD_CACHE)) {\n        String cacheAsString = parserRequiredWord(true, \"Expected <cache value>\");\n        this.params.cacheSize = Integer.parseInt(cacheAsString);\n      }\n    }\n\n    return this;\n  }","commit_id":"c456b7bcacd6b38e945e40739169d48d744769c6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public ODefaultSQLMethodFactory() {\n    register(OSQLMethodAppend.NAME, new OSQLMethodAppend());\n    register(OSQLMethodAsBoolean.NAME, new OSQLMethodAsBoolean());\n    register(OSQLMethodAsDate.NAME, new OSQLMethodAsDate());\n    register(OSQLMethodAsDateTime.NAME, new OSQLMethodAsDateTime());\n    register(OSQLMethodAsDecimal.NAME, new OSQLMethodAsDecimal());\n    register(OSQLMethodAsFloat.NAME, new OSQLMethodAsFloat());\n    register(OSQLMethodAsInteger.NAME, new OSQLMethodAsInteger());\n    register(OSQLMethodAsList.NAME, new OSQLMethodAsList());\n    register(OSQLMethodAsLong.NAME, new OSQLMethodAsLong());\n    register(OSQLMethodAsMap.NAME, new OSQLMethodAsMap());\n    register(OSQLMethodAsSet.NAME, new OSQLMethodAsSet());\n    register(OSQLMethodAsString.NAME, new OSQLMethodAsString());\n    register(OSQLMethodCharAt.NAME, new OSQLMethodCharAt());\n    register(OSQLMethodConvert.NAME, new OSQLMethodConvert());\n    register(OSQLMethodExclude.NAME, new OSQLMethodExclude());\n    register(OSQLMethodField.NAME, new OSQLMethodField());\n    register(OSQLMethodFormat.NAME, new OSQLMethodFormat());\n    register(OSQLMethodFromJSON.NAME, new OSQLMethodFromJSON());\n    register(OSQLMethodFunctionDelegate.NAME, OSQLMethodFunctionDelegate.class);\n    register(OSQLMethodHash.NAME, new OSQLMethodHash());\n    register(OSQLMethodInclude.NAME, new OSQLMethodInclude());\n    register(OSQLMethodIndexOf.NAME, new OSQLMethodIndexOf());\n    register(OSQLMethodJavaType.NAME, new OSQLMethodJavaType());\n    register(OSQLMethodKeys.NAME, new OSQLMethodKeys());\n    register(OSQLMethodLastIndexOf.NAME, new OSQLMethodLastIndexOf());\n    register(OSQLMethodLeft.NAME, new OSQLMethodLeft());\n    register(OSQLMethodLength.NAME, new OSQLMethodLength());\n    register(OSQLMethodMultiValue.NAME, new OSQLMethodMultiValue());\n    register(OSQLMethodNormalize.NAME, new OSQLMethodNormalize());\n    register(OSQLMethodPrefix.NAME, new OSQLMethodPrefix());\n    register(OSQLMethodRemove.NAME, new OSQLMethodRemove());\n    register(OSQLMethodRemoveAll.NAME, new OSQLMethodRemoveAll());\n    register(OSQLMethodReplace.NAME, new OSQLMethodReplace());\n    register(OSQLMethodRight.NAME, new OSQLMethodRight());\n    register(OSQLMethodSize.NAME, new OSQLMethodSize());\n    register(OSQLMethodToLowerCase.NAME, new OSQLMethodToLowerCase());\n    register(OSQLMethodToUpperCase.NAME, new OSQLMethodToUpperCase());\n    register(OSQLMethodTrim.NAME, new OSQLMethodTrim());\n    register(OSQLMethodType.NAME, new OSQLMethodType());\n    register(OSQLMethodSubString.NAME, new OSQLMethodSubString());\n    register(OSQLMethodToJSON.NAME, new OSQLMethodToJSON());\n    register(OSQLMethodValues.NAME, new OSQLMethodValues());\n  }","id":27460,"modified_method":"public ODefaultSQLMethodFactory() {\n    register(OSQLMethodAppend.NAME, new OSQLMethodAppend());\n    register(OSQLMethodAsBoolean.NAME, new OSQLMethodAsBoolean());\n    register(OSQLMethodAsDate.NAME, new OSQLMethodAsDate());\n    register(OSQLMethodAsDateTime.NAME, new OSQLMethodAsDateTime());\n    register(OSQLMethodAsDecimal.NAME, new OSQLMethodAsDecimal());\n    register(OSQLMethodAsFloat.NAME, new OSQLMethodAsFloat());\n    register(OSQLMethodAsInteger.NAME, new OSQLMethodAsInteger());\n    register(OSQLMethodAsList.NAME, new OSQLMethodAsList());\n    register(OSQLMethodAsLong.NAME, new OSQLMethodAsLong());\n    register(OSQLMethodAsMap.NAME, new OSQLMethodAsMap());\n    register(OSQLMethodAsSet.NAME, new OSQLMethodAsSet());\n    register(OSQLMethodAsString.NAME, new OSQLMethodAsString());\n    register(OSQLMethodCharAt.NAME, new OSQLMethodCharAt());\n    register(OSQLMethodConvert.NAME, new OSQLMethodConvert());\n    register(OSQLMethodExclude.NAME, new OSQLMethodExclude());\n    register(OSQLMethodField.NAME, new OSQLMethodField());\n    register(OSQLMethodFormat.NAME, new OSQLMethodFormat());\n    register(OSQLMethodFromJSON.NAME, new OSQLMethodFromJSON());\n    register(OSQLMethodFunctionDelegate.NAME, OSQLMethodFunctionDelegate.class);\n    register(OSQLMethodHash.NAME, new OSQLMethodHash());\n    register(OSQLMethodInclude.NAME, new OSQLMethodInclude());\n    register(OSQLMethodIndexOf.NAME, new OSQLMethodIndexOf());\n    register(OSQLMethodJavaType.NAME, new OSQLMethodJavaType());\n    register(OSQLMethodKeys.NAME, new OSQLMethodKeys());\n    register(OSQLMethodLastIndexOf.NAME, new OSQLMethodLastIndexOf());\n    register(OSQLMethodLeft.NAME, new OSQLMethodLeft());\n    register(OSQLMethodLength.NAME, new OSQLMethodLength());\n    register(OSQLMethodMultiValue.NAME, new OSQLMethodMultiValue());\n    register(OSQLMethodNormalize.NAME, new OSQLMethodNormalize());\n    register(OSQLMethodPrefix.NAME, new OSQLMethodPrefix());\n    register(OSQLMethodRemove.NAME, new OSQLMethodRemove());\n    register(OSQLMethodRemoveAll.NAME, new OSQLMethodRemoveAll());\n    register(OSQLMethodReplace.NAME, new OSQLMethodReplace());\n    register(OSQLMethodRight.NAME, new OSQLMethodRight());\n    register(OSQLMethodSize.NAME, new OSQLMethodSize());\n    register(OSQLMethodToLowerCase.NAME, new OSQLMethodToLowerCase());\n    register(OSQLMethodToUpperCase.NAME, new OSQLMethodToUpperCase());\n    register(OSQLMethodTrim.NAME, new OSQLMethodTrim());\n    register(OSQLMethodType.NAME, new OSQLMethodType());\n    register(OSQLMethodSubString.NAME, new OSQLMethodSubString());\n    register(OSQLMethodToJSON.NAME, new OSQLMethodToJSON());\n    register(OSQLMethodValues.NAME, new OSQLMethodValues());\n\n    // SEQUENCE\n    register(OSQLMethodCurrent.NAME, new OSQLMethodCurrent());\n    register(OSQLMethodNext.NAME, new OSQLMethodNext());\n    register(OSQLMethodReset.NAME, new OSQLMethodReset());\n  }","commit_id":"c456b7bcacd6b38e945e40739169d48d744769c6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@SuppressWarnings(\"unchecked\")\r\n  public static ODocument applyRecord(final ODocument iValue, final Map<String, Object> iProjections,\r\n      final OCommandContext iContext, final OIdentifiable iRecord) {\r\n    // APPLY PROJECTIONS\r\n    final ODocument inputDocument = (ODocument) (iRecord != null ? iRecord.getRecord() : null);\r\n\r\n    if (iProjections.isEmpty())\r\n      // SELECT * CASE\r\n      inputDocument.copyTo(iValue);\r\n    else {\r\n\r\n      for (Entry<String, Object> projection : iProjections.entrySet()) {\r\n        final String prjName = projection.getKey();\r\n        final Object v = projection.getValue();\r\n\r\n        if (v == null && prjName != null) {\r\n          iValue.field(prjName, (Object) null);\r\n          continue;\r\n        }\r\n\r\n        final Object projectionValue;\r\n        if (v.equals(\"*\")) {\r\n          // COPY ALL\r\n          inputDocument.copyTo(iValue);\r\n          // CONTINUE WITH NEXT ITEM\r\n          continue;\r\n\r\n        } else if (v instanceof OSQLFilterItemVariable || v instanceof OSQLFilterItemField) {\r\n          final OSQLFilterItemAbstract var = (OSQLFilterItemAbstract) v;\r\n          final OPair<OSQLMethodRuntime, Object[]> last = var.getLastChainOperator();\r\n          if (last != null && last.getKey().getMethod() instanceof OSQLMethodField && last.getValue() != null\r\n              && last.getValue().length == 1 && last.getValue()[0].equals(\"*\")) {\r\n            final Object value = ((OSQLFilterItemAbstract) v).getValue(inputDocument, iValue, iContext);\r\n            if (inputDocument != null && value != null && inputDocument instanceof ODocument && value instanceof ODocument) {\r\n              // COPY FIELDS WITH PROJECTION NAME AS PREFIX\r\n              for (String fieldName : ((ODocument) value).fieldNames()) {\r\n                iValue.field(prjName + fieldName, ((ODocument) value).field(fieldName));\r\n              }\r\n            }\r\n            projectionValue = null;\r\n          } else\r\n            // RETURN A VARIABLE FROM THE CONTEXT\r\n            projectionValue = ((OSQLFilterItemAbstract) v).getValue(inputDocument, iValue, iContext);\r\n\r\n        } else if (v instanceof OSQLFunctionRuntime) {\r\n          final OSQLFunctionRuntime f = (OSQLFunctionRuntime) v;\r\n          projectionValue = f.execute(inputDocument, inputDocument, iValue, iContext);\r\n        } else if (v instanceof OSQLSequenceItem) {\r\n          final OSQLSequenceItem s = (OSQLSequenceItem) v;\r\n          projectionValue = s.getValue(iRecord, null, iContext);\r\n        } else {\r\n          if (v == null) {\r\n            // SIMPLE NULL VALUE: SET IT IN DOCUMENT\r\n            iValue.field(prjName, v);\r\n            continue;\r\n          }\r\n          projectionValue = v;\r\n        }\r\n\r\n        if (projectionValue != null)\r\n          if (projectionValue instanceof ORidBag)\r\n            iValue.field(prjName, new ORidBag((ORidBag) projectionValue));\r\n          else if (projectionValue instanceof OIdentifiable && !(projectionValue instanceof ORID)\r\n              && !(projectionValue instanceof ORecord))\r\n            iValue.field(prjName, ((OIdentifiable) projectionValue).getRecord());\r\n          else if (projectionValue instanceof Iterator) {\r\n            boolean link = true;\r\n            // make temporary value typical case graph database elemenet's iterator edges\r\n            if (projectionValue instanceof OResettable)\r\n              ((OResettable) projectionValue).reset();\r\n\r\n            final List<Object> iteratorValues = new ArrayList<Object>();\r\n            final Iterator projectionValueIterator = (Iterator) projectionValue;\r\n            while (projectionValueIterator.hasNext()) {\r\n              Object value = projectionValueIterator.next();\r\n              if (value instanceof OIdentifiable) {\r\n                value = ((OIdentifiable) value).getRecord();\r\n                if (!((OIdentifiable) value).getIdentity().isPersistent())\r\n                  link = false;\r\n              }\r\n\r\n              if (value != null)\r\n                iteratorValues.add(value);\r\n            }\r\n\r\n            iValue.field(prjName, iteratorValues, link ? OType.LINKLIST : OType.EMBEDDEDLIST);\r\n          } else if (projectionValue instanceof ODocument && !((ODocument) projectionValue).getIdentity().isPersistent()) {\r\n            iValue.field(prjName, projectionValue, OType.EMBEDDED);\r\n          } else if (projectionValue instanceof Set<?>) {\r\n            OType type = OType.getTypeByValue(projectionValue);\r\n            if (type == OType.LINKSET && !entriesPersistent((Collection<OIdentifiable>) projectionValue))\r\n              type = OType.EMBEDDEDSET;\r\n            iValue.field(prjName, projectionValue, type);\r\n          } else if (projectionValue instanceof Map<?, ?>) {\r\n            OType type = OType.getTypeByValue(projectionValue);\r\n            if (type == OType.LINKMAP && !entriesPersistent(((Map<?, OIdentifiable>) projectionValue).values()))\r\n              type = OType.EMBEDDEDMAP;\r\n            iValue.field(prjName, projectionValue, type);\r\n          } else if (projectionValue instanceof List<?>) {\r\n            OType type = OType.getTypeByValue(projectionValue);\r\n            if (type == OType.LINKLIST && !entriesPersistent((Collection<OIdentifiable>) projectionValue))\r\n              type = OType.EMBEDDEDLIST;\r\n            iValue.field(prjName, projectionValue, type);\r\n\r\n          } else\r\n            iValue.field(prjName, projectionValue);\r\n\r\n      }\r\n    }\r\n\r\n    return iValue;\r\n  }","id":27461,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n  public static ODocument applyRecord(final ODocument iValue, final Map<String, Object> iProjections,\r\n      final OCommandContext iContext, final OIdentifiable iRecord) {\r\n    // APPLY PROJECTIONS\r\n    final ODocument inputDocument = (ODocument) (iRecord != null ? iRecord.getRecord() : null);\r\n\r\n    if (iProjections.isEmpty())\r\n      // SELECT * CASE\r\n      inputDocument.copyTo(iValue);\r\n    else {\r\n\r\n      for (Entry<String, Object> projection : iProjections.entrySet()) {\r\n        final String prjName = projection.getKey();\r\n        final Object v = projection.getValue();\r\n\r\n        if (v == null && prjName != null) {\r\n          iValue.field(prjName, (Object) null);\r\n          continue;\r\n        }\r\n\r\n        final Object projectionValue;\r\n        if (v.equals(\"*\")) {\r\n          // COPY ALL\r\n          inputDocument.copyTo(iValue);\r\n          // CONTINUE WITH NEXT ITEM\r\n          continue;\r\n\r\n        } else if (v instanceof OSQLFilterItemVariable || v instanceof OSQLFilterItemField) {\r\n          final OSQLFilterItemAbstract var = (OSQLFilterItemAbstract) v;\r\n          final OPair<OSQLMethodRuntime, Object[]> last = var.getLastChainOperator();\r\n          if (last != null && last.getKey().getMethod() instanceof OSQLMethodField && last.getValue() != null\r\n              && last.getValue().length == 1 && last.getValue()[0].equals(\"*\")) {\r\n            final Object value = ((OSQLFilterItemAbstract) v).getValue(inputDocument, iValue, iContext);\r\n            if (inputDocument != null && value != null && inputDocument instanceof ODocument && value instanceof ODocument) {\r\n              // COPY FIELDS WITH PROJECTION NAME AS PREFIX\r\n              for (String fieldName : ((ODocument) value).fieldNames()) {\r\n                iValue.field(prjName + fieldName, ((ODocument) value).field(fieldName));\r\n              }\r\n            }\r\n            projectionValue = null;\r\n          } else\r\n            // RETURN A VARIABLE FROM THE CONTEXT\r\n            projectionValue = ((OSQLFilterItemAbstract) v).getValue(inputDocument, iValue, iContext);\r\n\r\n        } else if (v instanceof OSQLFunctionRuntime) {\r\n          final OSQLFunctionRuntime f = (OSQLFunctionRuntime) v;\r\n          projectionValue = f.execute(inputDocument, inputDocument, iValue, iContext);\r\n        } else {\r\n          if (v == null) {\r\n            // SIMPLE NULL VALUE: SET IT IN DOCUMENT\r\n            iValue.field(prjName, v);\r\n            continue;\r\n          }\r\n          projectionValue = v;\r\n        }\r\n\r\n        if (projectionValue != null)\r\n          if (projectionValue instanceof ORidBag)\r\n            iValue.field(prjName, new ORidBag((ORidBag) projectionValue));\r\n          else if (projectionValue instanceof OIdentifiable && !(projectionValue instanceof ORID)\r\n              && !(projectionValue instanceof ORecord))\r\n            iValue.field(prjName, ((OIdentifiable) projectionValue).getRecord());\r\n          else if (projectionValue instanceof Iterator) {\r\n            boolean link = true;\r\n            // make temporary value typical case graph database elemenet's iterator edges\r\n            if (projectionValue instanceof OResettable)\r\n              ((OResettable) projectionValue).reset();\r\n\r\n            final List<Object> iteratorValues = new ArrayList<Object>();\r\n            final Iterator projectionValueIterator = (Iterator) projectionValue;\r\n            while (projectionValueIterator.hasNext()) {\r\n              Object value = projectionValueIterator.next();\r\n              if (value instanceof OIdentifiable) {\r\n                value = ((OIdentifiable) value).getRecord();\r\n                if (!((OIdentifiable) value).getIdentity().isPersistent())\r\n                  link = false;\r\n              }\r\n\r\n              if (value != null)\r\n                iteratorValues.add(value);\r\n            }\r\n\r\n            iValue.field(prjName, iteratorValues, link ? OType.LINKLIST : OType.EMBEDDEDLIST);\r\n          } else if (projectionValue instanceof ODocument && !((ODocument) projectionValue).getIdentity().isPersistent()) {\r\n            iValue.field(prjName, projectionValue, OType.EMBEDDED);\r\n          } else if (projectionValue instanceof Set<?>) {\r\n            OType type = OType.getTypeByValue(projectionValue);\r\n            if (type == OType.LINKSET && !entriesPersistent((Collection<OIdentifiable>) projectionValue))\r\n              type = OType.EMBEDDEDSET;\r\n            iValue.field(prjName, projectionValue, type);\r\n          } else if (projectionValue instanceof Map<?, ?>) {\r\n            OType type = OType.getTypeByValue(projectionValue);\r\n            if (type == OType.LINKMAP && !entriesPersistent(((Map<?, OIdentifiable>) projectionValue).values()))\r\n              type = OType.EMBEDDEDMAP;\r\n            iValue.field(prjName, projectionValue, type);\r\n          } else if (projectionValue instanceof List<?>) {\r\n            OType type = OType.getTypeByValue(projectionValue);\r\n            if (type == OType.LINKLIST && !entriesPersistent((Collection<OIdentifiable>) projectionValue))\r\n              type = OType.EMBEDDEDLIST;\r\n            iValue.field(prjName, projectionValue, type);\r\n\r\n          } else\r\n            iValue.field(prjName, projectionValue);\r\n\r\n      }\r\n    }\r\n\r\n    return iValue;\r\n  }","commit_id":"c456b7bcacd6b38e945e40739169d48d744769c6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public static Object parseValue(final OBaseParser iCommand, final String iWord, final OCommandContext iContext) {\r\n    if (iWord.equals(\"*\"))\r\n      return \"*\";\r\n\r\n    // TRY TO PARSE AS RAW VALUE\r\n    final Object v = parseValue(iWord, iContext);\r\n    if (v != VALUE_NOT_PARSED)\r\n      return v;\r\n\r\n    if (!iWord.equalsIgnoreCase(\"any()\") && !iWord.equalsIgnoreCase(\"all()\")) {\r\n      // TRY TO PARSE AS FUNCTION\r\n      final Object func = OSQLHelper.getFunction(iCommand, iWord);\r\n      if (func != null)\r\n        return func;\r\n    }\r\n\r\n    if (iWord.startsWith(\"$\"))\r\n      // CONTEXT VARIABLE\r\n      return new OSQLFilterItemVariable(iCommand, iWord);\r\n\r\n    if (iWord.startsWith(OSQLSequenceItem.PREFIX)) {\r\n      return new OSQLSequenceItem(iCommand, iWord);\r\n    }\r\n\r\n    // PARSE AS FIELD\r\n    return new OSQLFilterItemField(iCommand, iWord);\r\n  }","id":27462,"modified_method":"public static Object parseValue(final OBaseParser iCommand, final String iWord, final OCommandContext iContext) {\r\n    if (iWord.equals(\"*\"))\r\n      return \"*\";\r\n\r\n    // TRY TO PARSE AS RAW VALUE\r\n    final Object v = parseValue(iWord, iContext);\r\n    if (v != VALUE_NOT_PARSED)\r\n      return v;\r\n\r\n    if (!iWord.equalsIgnoreCase(\"any()\") && !iWord.equalsIgnoreCase(\"all()\")) {\r\n      // TRY TO PARSE AS FUNCTION\r\n      final Object func = OSQLHelper.getFunction(iCommand, iWord);\r\n      if (func != null)\r\n        return func;\r\n    }\r\n\r\n    if (iWord.startsWith(\"$\"))\r\n      // CONTEXT VARIABLE\r\n      return new OSQLFilterItemVariable(iCommand, iWord);\r\n\r\n    // PARSE AS FIELD\r\n    return new OSQLFilterItemField(iCommand, iWord);\r\n  }","commit_id":"c456b7bcacd6b38e945e40739169d48d744769c6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private long sequenceCurrent(String sequenceName) {\n    return sequenceSql(sequenceName, \"current\");\n  }","id":27463,"modified_method":"private long sequenceCurrent(String sequenceName) {\n    return sequenceSql(sequenceName, \"current()\");\n  }","commit_id":"c456b7bcacd6b38e945e40739169d48d744769c6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private long sequenceNext(String sequenceName) {\n    return sequenceSql(sequenceName, \"next\");\n  }","id":27464,"modified_method":"private long sequenceNext(String sequenceName) {\n    return sequenceSql(sequenceName, \"next()\");\n  }","commit_id":"c456b7bcacd6b38e945e40739169d48d744769c6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private long sequenceReset(String sequenceName) {\n    return sequenceSql(sequenceName, \"reset\");\n  }","id":27465,"modified_method":"private long sequenceReset(String sequenceName) {\n    return sequenceSql(sequenceName, \"reset()\");\n  }","commit_id":"c456b7bcacd6b38e945e40739169d48d744769c6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private long sequenceSql(String sequenceName, String cmd) {\n    Object ret = database.command(new OCommandSQL(\"SELECT #\" + sequenceName + \".\" + cmd)).execute();\n    return 0;\n  }","id":27466,"modified_method":"private long sequenceSql(String sequenceName, String cmd) {\n    Iterable<ODocument> ret = database.command(new OCommandSQL(\"SELECT sequence('\" + sequenceName + \"').\" + cmd + \" as value\")).execute();\n    return (Long) ret.iterator().next().field(\"value\");\n  }","commit_id":"c456b7bcacd6b38e945e40739169d48d744769c6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private void testSequence(String sequenceName, OSequence.SEQUENCE_TYPE sequenceType) {\n    OSequenceLibrary sequenceLibrary = database.getMetadata().getSequenceLibrary();\n\n    database.command(new OCommandSQL(\"CREATE SEQUENCE \" + sequenceName + \" TYPE \" + sequenceType));\n\n    OSequenceException err = null;\n    try {\n      database.command(new OCommandSQL(\"CREATE SEQUENCE \" + sequenceName + \" TYPE \" + sequenceType));\n    } catch (OSequenceException se) {\n      err = se;\n    }\n    Assert.assertTrue(err == null || err.getMessage().toLowerCase().contains(\"already exists\"),\n            \"Creating a second \" + sequenceType.toString() +\n                    \" sequences with same name doesn't throw an exception\");\n\n    // Doing it twice to check everything works after reset\n    for (int i = 0; i < 2; ++i) {\n      Assert.assertEquals(sequenceCurrent(sequenceName), 0L);\n      Assert.assertEquals(sequenceNext(sequenceName), 1L);\n      Assert.assertEquals(sequenceCurrent(sequenceName), 1L);\n      Assert.assertEquals(sequenceNext(sequenceName), 2L);\n      Assert.assertEquals(sequenceNext(sequenceName), 3L);\n      Assert.assertEquals(sequenceNext(sequenceName), 4L);\n      Assert.assertEquals(sequenceCurrent(sequenceName), 4L);\n      Assert.assertEquals(sequenceReset(sequenceName), 0L);\n    }\n  }","id":27467,"modified_method":"private void testSequence(String sequenceName, OSequence.SEQUENCE_TYPE sequenceType) {\n    OSequenceLibrary sequenceLibrary = database.getMetadata().getSequenceLibrary();\n\n    database.command(new OCommandSQL(\"CREATE SEQUENCE \" + sequenceName + \" TYPE \" + sequenceType)).execute();\n\n    OSequenceException err = null;\n    try {\n      database.command(new OCommandSQL(\"CREATE SEQUENCE \" + sequenceName + \" TYPE \" + sequenceType)).execute();\n    } catch (OSequenceException se) {\n      err = se;\n    }\n    Assert.assertTrue(err == null || err.getMessage().toLowerCase().contains(\"already exists\"),\n        \"Creating a second \" + sequenceType.toString() + \" sequences with same name doesn't throw an exception\");\n\n    // Doing it twice to check everything works after reset\n    for (int i = 0; i < 2; ++i) {\n      Assert.assertEquals(sequenceCurrent(sequenceName), 0L);\n      Assert.assertEquals(sequenceNext(sequenceName), 1L);\n      Assert.assertEquals(sequenceCurrent(sequenceName), 1L);\n      Assert.assertEquals(sequenceNext(sequenceName), 2L);\n      Assert.assertEquals(sequenceNext(sequenceName), 3L);\n      Assert.assertEquals(sequenceNext(sequenceName), 4L);\n      Assert.assertEquals(sequenceCurrent(sequenceName), 4L);\n      Assert.assertEquals(sequenceReset(sequenceName), 0L);\n    }\n  }","commit_id":"c456b7bcacd6b38e945e40739169d48d744769c6","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test\n  public void testLiveInsert() {\n    OLiveCommandExecutorSQLFactory.init();\n\n    ODatabaseDocumentTx db = new ODatabaseDocumentTx(\"memory:OLiveQueryTest\");\n    db.activateOnCurrentThread();\n    db.registerHook(new OLiveQueryHook(db));\n    db.create();\n    try {\n      db.getMetadata().getSchema().createClass(\"test\");\n      db.getMetadata().getSchema().createClass(\"test2\");\n      MyLiveQueryListener listener = new MyLiveQueryListener();\n\n      OResultSet<ODocument> tokens = db.query(new OLiveQuery<ODocument>(\"live select from test\", listener));\n      Assert.assertEquals(tokens.size(), 1);\n\n      ODocument tokenDoc = tokens.get(0);\n      Integer token = tokenDoc.field(\"token\");\n      Assert.assertNotNull(token);\n\n      db.command(new OCommandSQL(\"insert into test set name = 'foo', surname = 'bar'\")).execute();\n      db.command(new OCommandSQL(\"insert into test set name = 'foo', surname = 'baz'\")).execute();\n      db.command(new OCommandSQL(\"insert into test2 set name = 'foo'\"));\n\n      db.command(new OCommandSQL(\"live unsubscribe \" + token)).execute();\n\n      db.command(new OCommandSQL(\"insert into test set name = 'foo', surname = 'bax'\")).execute();\n      try {\n        Thread.sleep(3000);\n      } catch (InterruptedException e) {\n        e.printStackTrace();\n      }\n      Assert.assertEquals(listener.ops.size(), 2);\n      for (ORecordOperation doc : listener.ops) {\n        Assert.assertEquals(doc.type, ORecordOperation.CREATED);\n        Assert.assertEquals(((ODocument) doc.record).field(\"name\"), \"foo\");\n      }\n    } finally {\n      db.drop();\n    }\n  }","id":27468,"modified_method":"@Test\n  public void testLiveInsert() {\n    OLiveCommandExecutorSQLFactory.init();\n\n    ODatabaseDocumentTx db = new ODatabaseDocumentTx(\"memory:OLiveQueryTest\");\n    db.activateOnCurrentThread();\n    db.registerHook(new OLiveQueryHook(db));\n    db.create();\n    try {\n      db.getMetadata().getSchema().createClass(\"test\");\n      db.getMetadata().getSchema().createClass(\"test2\");\n      MyLiveQueryListener listener = new MyLiveQueryListener();\n\n      OResultSet<ODocument> tokens = db.query(new OLiveQuery<ODocument>(\"live select from test\", listener));\n      Assert.assertEquals(tokens.size(), 1);\n\n      ODocument tokenDoc = tokens.get(0);\n      Integer token = tokenDoc.field(\"token\");\n      Assert.assertNotNull(token);\n\n      db.command(new OCommandSQL(\"insert into test set name = 'foo', surname = 'bar'\")).execute();\n      db.command(new OCommandSQL(\"insert into test set name = 'foo', surname = 'baz'\")).execute();\n      db.command(new OCommandSQL(\"insert into test2 set name = 'foo'\")).execute();\n\n      db.command(new OCommandSQL(\"live unsubscribe \" + token)).execute();\n\n      db.command(new OCommandSQL(\"insert into test set name = 'foo', surname = 'bax'\")).execute();\n      try {\n        Thread.sleep(3000);\n      } catch (InterruptedException e) {\n        e.printStackTrace();\n      }\n      Assert.assertEquals(listener.ops.size(), 2);\n      for (ORecordOperation doc : listener.ops) {\n        Assert.assertEquals(doc.type, ORecordOperation.CREATED);\n        Assert.assertEquals(((ODocument) doc.record).field(\"name\"), \"foo\");\n      }\n    } finally {\n      db.drop();\n    }\n  }","commit_id":"ea2f95c796ae02bcd1494c7d87ee2884b5b4c207","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void testSQLManagementOfUnderlyingDocumentsInGraphs() {\r\n    database.command(new OCommandSQL(\"create class V1 extends V\")).execute();\r\n    database.command(new OCommandSQL(\"create class E1 extends E\")).execute();\r\n    OIdentifiable v1 = database.command(new OCommandSQL(\"create vertex V1 set name = 'madeInSqlLand'\")).execute();\r\n    OIdentifiable v2 = database.command(new OCommandSQL(\"create vertex V1 set name = 'madeInSqlLand'\")).execute();\r\n    OIdentifiable v3 = database.command(new OCommandSQL(\"create vertex V1 set name = 'madeInSqlLand'\")).execute();\r\n    List<OIdentifiable> e1 = database.command(\r\n        new OCommandSQL(\"create edge E1 from \" + v1.getIdentity() + \" to \" + v2.getIdentity())).execute();\r\n    List<OIdentifiable> e2 = database.command(\r\n        new OCommandSQL(\"create edge E1 from \" + v1.getIdentity() + \" to \" + v3.getIdentity())).execute();\r\n    database.command(new OCommandSQL(\"delete from V1 where @rid = ?\")).execute(v2);\r\n    database.command(new OCommandSQL(\"delete from V1 where @rid = ?\")).execute(v3);\r\n    database.command(new OCommandSQL(\"delete from E1 where @rid = ?\")).execute(e1.get(0));\r\n    database.command(new OCommandSQL(\"delete from E1 where @rid = ?\")).execute(e2.get(0));\r\n    database.command(new OCommandSQL(\"create property V1.ctime DATETIME\"));\r\n    database.command(new OCommandSQL(\"update V1 set ctime=sysdate() where name = 'madeInSqlLand'\"));\r\n\r\n    database.command(new OCommandSQL(\"drop class V1\")).execute();\r\n    database.command(new OCommandSQL(\"drop class E1\")).execute();\r\n  }","id":27469,"modified_method":"public void testSQLManagementOfUnderlyingDocumentsInGraphs() {\r\n    Object result;\r\n\r\n    result = database.command(new OCommandSQL(\"create class V1 extends V\")).execute();\r\n    result = database.command(new OCommandSQL(\"create class E1 extends E\")).execute();\r\n\r\n    OIdentifiable v1 = database.command(new OCommandSQL(\"create vertex V1 set name = 'madeInSqlLand'\")).execute();\r\n    OIdentifiable v2 = database.command(new OCommandSQL(\"create vertex V1 set name = 'madeInSqlLand'\")).execute();\r\n    OIdentifiable v3 = database.command(new OCommandSQL(\"create vertex V1 set name = 'madeInSqlLand'\")).execute();\r\n    List<OIdentifiable> e1 = database.command(\r\n        new OCommandSQL(\"create edge E1 from \" + v1.getIdentity() + \" to \" + v2.getIdentity())).execute();\r\n    List<OIdentifiable> e2 = database.command(\r\n        new OCommandSQL(\"create edge E1 from \" + v1.getIdentity() + \" to \" + v3.getIdentity())).execute();\r\n\r\n    result = database.command(new OCommandSQL(\"delete from V1 where @rid = ?\")).execute(v2);\r\n    Assert.assertEquals(result, 1);\r\n    result = database.command(new OCommandSQL(\"delete from V1 where @rid = ?\")).execute(v3);\r\n    Assert.assertEquals(result, 1);\r\n    result = database.command(new OCommandSQL(\"delete from E1 where @rid = ?\")).execute(e1.get(0));\r\n    Assert.assertEquals(result, 1);\r\n    result = database.command(new OCommandSQL(\"delete from E1 where @rid = ?\")).execute(e2.get(0));\r\n    Assert.assertEquals(result, 1);\r\n    \r\n    result = database.command(new OCommandSQL(\"create property V1.ctime DATETIME\")).execute();\r\n    //result = database.command(new OCommandSQL(\"update V1 set ctime=sysdate() where name = 'madeInSqlLand'\")).execute();\r\n\r\n    result = database.command(new OCommandSQL(\"drop class V1\")).execute();\r\n    result = database.command(new OCommandSQL(\"drop class E1\")).execute();\r\n  }","commit_id":"4bd04b37e707cdd1aeed516dfe4069c39c4fe013","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n   * Delete the current edge.\r\n   */\r\n  public boolean result(final Object iRecord) {\r\n    final OIdentifiable id = (OIdentifiable) iRecord;\r\n    if (id.getIdentity().isValid()) {\r\n\r\n      if (((OGraphDatabase) database).removeEdge(id)) {\r\n        removed++;\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }","id":27470,"modified_method":"/**\r\n   * Delete the current edge.\r\n   */\r\n  public boolean result(final Object iRecord) {\r\n    final OIdentifiable id = (OIdentifiable) iRecord;\r\n\r\n    if (compiledFilter != null) {\r\n      // ADDITIONAL FILTERING\r\n      if (!(Boolean) compiledFilter.evaluate((ODocument) id.getRecord(), null, context))\r\n        return false;\r\n    }\r\n\r\n    if (id.getIdentity().isValid()) {\r\n\r\n      if (((OGraphDatabase) database).removeEdge(id)) {\r\n        removed++;\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }","commit_id":"4bd04b37e707cdd1aeed516dfe4069c39c4fe013","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@SuppressWarnings(\"unchecked\")\r\n  public OCommandExecutorSQLDeleteEdge parse(final OCommandRequest iRequest) {\r\n    database = getDatabase();\r\n    database.checkSecurity(ODatabaseSecurityResources.COMMAND, ORole.PERMISSION_READ);\r\n\r\n    init(((OCommandRequestText) iRequest).getText());\r\n\r\n    parserRequiredKeyword(\"DELETE\");\r\n    parserRequiredKeyword(\"EDGE\");\r\n\r\n    OClass clazz = null;\r\n\r\n    String temp = parseOptionalWord(true);\r\n    while (temp != null) {\r\n\r\n      if (temp.equals(\"FROM\")) {\r\n        from = new ORecordId(parserRequiredWord(false));\r\n        if (rid != null)\r\n          throwSyntaxErrorException(\"FROM '\" + from + \"' is not allowed when specify a RID (\" + rid + \")\");\r\n\r\n      } else if (temp.equals(\"TO\")) {\r\n        to = new ORecordId(parserRequiredWord(false));\r\n        if (rid != null)\r\n          throwSyntaxErrorException(\"TO '\" + to + \"' is not allowed when specify a RID (\" + rid + \")\");\r\n\r\n      } else if (temp.startsWith(\"#\")) {\r\n        rid = new ORecordId(temp);\r\n        if (from != null || to != null)\r\n          throwSyntaxErrorException(\"Specifying the RID \" + rid + \" is not allowed with FROM/TO\");\r\n\r\n      } else if (temp.equals(KEYWORD_WHERE)) {\r\n        if (clazz == null)\r\n          // ASSIGN DEFAULT CLASS\r\n          clazz = database.getMetadata().getSchema().getClass(OGraphDatabase.EDGE_CLASS_NAME);\r\n\r\n        final String condition = parserGetCurrentPosition() > -1 ? \" \" + parserText.substring(parserGetCurrentPosition()) : \"\";\r\n\r\n        final StringBuilder q = new StringBuilder();\r\n        q.append(\"select from \");\r\n        q.append(clazz.getName());\r\n\r\n        boolean where = false;\r\n        if (from != null) {\r\n          q.append(\" \");\r\n          q.append(KEYWORD_WHERE);\r\n          q.append(\" out = \");\r\n          q.append(from);\r\n          where = true;\r\n        }\r\n\r\n        if (to != null) {\r\n          q.append(\" \");\r\n          if (!where) {\r\n            q.append(KEYWORD_WHERE);\r\n            where = true;\r\n          } else\r\n            q.append(\"and\");\r\n          q.append(\" in = \");\r\n          q.append(to);\r\n        }\r\n\r\n        if (condition != null) {\r\n          q.append(\" \");\r\n          if (!where) {\r\n            q.append(KEYWORD_WHERE);\r\n            where = true;\r\n          } else\r\n            q.append(\"and\");\r\n          q.append(condition);\r\n        }\r\n\r\n        query = database.command(new OSQLAsynchQuery<ODocument>(q.toString(), this));\r\n        break;\r\n\r\n      } else if (temp.length() > 0) {\r\n        // GET/CHECK CLASS NAME\r\n        clazz = database.getMetadata().getSchema().getClass(temp);\r\n        if (clazz == null)\r\n          throw new OCommandSQLParsingException(\"Class '\" + temp + \" was not found\");\r\n      }\r\n\r\n      temp = parseOptionalWord(true);\r\n      if (parserIsEnded())\r\n        break;\r\n    }\r\n\r\n    if (from == null && to == null && rid == null && clazz == null)\r\n      // DELETE ALL THE EDGES\r\n      query = database.command(new OSQLAsynchQuery<ODocument>(\"select from E\", this));\r\n\r\n    return this;\r\n  }","id":27471,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n  public OCommandExecutorSQLDeleteEdge parse(final OCommandRequest iRequest) {\r\n    database = getDatabase();\r\n    database.checkSecurity(ODatabaseSecurityResources.COMMAND, ORole.PERMISSION_READ);\r\n\r\n    init(((OCommandRequestText) iRequest).getText());\r\n\r\n    parserRequiredKeyword(\"DELETE\");\r\n    parserRequiredKeyword(\"EDGE\");\r\n\r\n    OClass clazz = null;\r\n\r\n    String temp = parseOptionalWord(true);\r\n    while (temp != null) {\r\n\r\n      if (temp.equals(\"FROM\")) {\r\n        from = new ORecordId(parserRequiredWord(false));\r\n        if (rid != null)\r\n          throwSyntaxErrorException(\"FROM '\" + from + \"' is not allowed when specify a RID (\" + rid + \")\");\r\n\r\n      } else if (temp.equals(\"TO\")) {\r\n        to = new ORecordId(parserRequiredWord(false));\r\n        if (rid != null)\r\n          throwSyntaxErrorException(\"TO '\" + to + \"' is not allowed when specify a RID (\" + rid + \")\");\r\n\r\n      } else if (temp.startsWith(\"#\")) {\r\n        rid = new ORecordId(temp);\r\n        if (from != null || to != null)\r\n          throwSyntaxErrorException(\"Specifying the RID \" + rid + \" is not allowed with FROM/TO\");\r\n\r\n      } else if (temp.equals(KEYWORD_WHERE)) {\r\n        if (clazz == null)\r\n          // ASSIGN DEFAULT CLASS\r\n          clazz = database.getMetadata().getSchema().getClass(OGraphDatabase.EDGE_CLASS_NAME);\r\n\r\n        final String condition = parserGetCurrentPosition() > -1 ? \" \" + parserText.substring(parserGetCurrentPosition()) : \"\";\r\n\r\n        compiledFilter = OSQLEngine.getInstance().parseCondition(condition, getContext(), KEYWORD_WHERE);\r\n        break;\r\n\r\n      } else if (temp.length() > 0) {\r\n        // GET/CHECK CLASS NAME\r\n        clazz = database.getMetadata().getSchema().getClass(temp);\r\n        if (clazz == null)\r\n          throw new OCommandSQLParsingException(\"Class '\" + temp + \" was not found\");\r\n      }\r\n\r\n      temp = parseOptionalWord(true);\r\n      if (parserIsEnded())\r\n        break;\r\n    }\r\n\r\n    if (from == null && to == null && rid == null && clazz == null && compiledFilter == null)\r\n      // DELETE ALL THE EDGES\r\n      query = database.command(new OSQLAsynchQuery<ODocument>(\"select from E\", this));\r\n\r\n    return this;\r\n  }","commit_id":"4bd04b37e707cdd1aeed516dfe4069c39c4fe013","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n   * Execute the command and return the ODocument object created.\r\n   */\r\n  public Object execute(final Map<Object, Object> iArgs) {\r\n    if (from == null && to == null && rid == null && query == null)\r\n      throw new OCommandExecutionException(\"Cannot execute the command because it has not been parsed yet\");\r\n\r\n    database = getDatabase();\r\n    if (!(database instanceof OGraphDatabase))\r\n      database = new OGraphDatabase((ODatabaseRecordTx) database);\r\n\r\n    if (rid != null) {\r\n      // REMOVE PUNCTUAL RID\r\n      if (((OGraphDatabase) database).removeEdge(rid))\r\n        removed = 1;\r\n    } else {\r\n      // MULTIPLE EDGES\r\n      final Set<OIdentifiable> edges;\r\n\r\n      if (query == null) {\r\n        // SELECTIVE TARGET\r\n        if (from != null && to != null)\r\n          // REMOVE ALL THE EDGES BETWEEN VERTICES\r\n          edges = ((OGraphDatabase) database).getEdgesBetweenVertexes(from, to);\r\n        else if (from != null)\r\n          // REMOVE ALL THE EDGES THAT START FROM A VERTEXES\r\n          edges = new HashSet<OIdentifiable>(((OGraphDatabase) database).getOutEdges(from));\r\n        else if (to != null)\r\n          // REMOVE ALL THE EDGES THAT ARRIVE TO A VERTEXES\r\n          edges = new HashSet<OIdentifiable>(((OGraphDatabase) database).getInEdges(to));\r\n        else\r\n          throw new OCommandExecutionException(\"Invalid target\");\r\n\r\n        // DELETE THE FOUND EDGES\r\n        removed = edges.size();\r\n        for (OIdentifiable edge : edges)\r\n          ((OGraphDatabase) database).removeEdge(edge);\r\n      } else if (query != null)\r\n        // TARGET IS A CLASS + OPTIONAL CONDITION\r\n        query.execute(iArgs);\r\n      else\r\n        throw new OCommandExecutionException(\"Invalid target\");\r\n    }\r\n\r\n    return removed;\r\n  }","id":27472,"modified_method":"/**\r\n   * Execute the command and return the ODocument object created.\r\n   */\r\n  public Object execute(final Map<Object, Object> iArgs) {\r\n    if (from == null && to == null && rid == null && query == null)\r\n      throw new OCommandExecutionException(\"Cannot execute the command because it has not been parsed yet\");\r\n\r\n    database = getDatabase();\r\n    if (!(database instanceof OGraphDatabase))\r\n      database = new OGraphDatabase((ODatabaseRecordTx) database);\r\n\r\n    if (rid != null) {\r\n      // REMOVE PUNCTUAL RID\r\n      if (((OGraphDatabase) database).removeEdge(rid))\r\n        removed = 1;\r\n    } else {\r\n      // MULTIPLE EDGES\r\n      final Set<OIdentifiable> edges;\r\n\r\n      if (query == null) {\r\n        // SELECTIVE TARGET\r\n        if (from != null && to != null)\r\n          // REMOVE ALL THE EDGES BETWEEN VERTICES\r\n          edges = ((OGraphDatabase) database).getEdgesBetweenVertexes(from, to);\r\n        else if (from != null)\r\n          // REMOVE ALL THE EDGES THAT START FROM A VERTEXES\r\n          edges = new HashSet<OIdentifiable>(((OGraphDatabase) database).getOutEdges(from));\r\n        else if (to != null)\r\n          // REMOVE ALL THE EDGES THAT ARRIVE TO A VERTEXES\r\n          edges = new HashSet<OIdentifiable>(((OGraphDatabase) database).getInEdges(to));\r\n        else\r\n          throw new OCommandExecutionException(\"Invalid target\");\r\n\r\n        if (compiledFilter != null) {\r\n          // ADDITIONAL FILTERING\r\n          for (Iterator<OIdentifiable> it = edges.iterator(); it.hasNext();) {\r\n            final OIdentifiable edge = it.next();\r\n            if (!(Boolean) compiledFilter.evaluate((ODocument) edge.getRecord(), null, context))\r\n              it.remove();\r\n          }\r\n        }\r\n\r\n        // DELETE THE FOUND EDGES\r\n        removed = edges.size();\r\n        for (OIdentifiable edge : edges)\r\n          ((OGraphDatabase) database).removeEdge(edge);\r\n      } else if (query != null)\r\n        // TARGET IS A CLASS + OPTIONAL CONDITION\r\n        query.execute(iArgs);\r\n      else\r\n        throw new OCommandExecutionException(\"Invalid target\");\r\n    }\r\n\r\n    return removed;\r\n  }","commit_id":"4bd04b37e707cdd1aeed516dfe4069c39c4fe013","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n   * Update current record.\r\n   */\r\n  @SuppressWarnings(\"unchecked\")\r\n  public boolean result(final Object iRecord) {\r\n    final ODocument record = (ODocument) iRecord;\r\n\r\n    if (compiledFilter != null) {\r\n      // ADDITIONAL FILTERING\r\n      if (!(Boolean) compiledFilter.evaluate(record, null, context))\r\n        return false;\r\n    }\r\n\r\n    boolean recordUpdated = false;\r\n\r\n    parameters.reset();\r\n\r\n    // BIND VALUES TO UPDATE\r\n    if (!setEntries.isEmpty()) {\r\n      OSQLHelper.bindParameters(record, setEntries, parameters);\r\n      recordUpdated = true;\r\n    }\r\n\r\n    // BIND VALUES TO INCREMENT\r\n    for (Map.Entry<String, Number> entry : incrementEntries.entrySet()) {\r\n      final Number prevValue = record.field(entry.getKey());\r\n\r\n      if (prevValue == null)\r\n        // NO PREVIOUS VALUE: CONSIDER AS 0\r\n        record.field(entry.getKey(), entry.getValue());\r\n      else\r\n        // COMPUTING INCREMENT\r\n        record.field(entry.getKey(), OType.increment(prevValue, entry.getValue()));\r\n\r\n      recordUpdated = true;\r\n    }\r\n\r\n    Object v;\r\n\r\n    // BIND VALUES TO ADD\r\n    Collection<Object> coll;\r\n    Object fieldValue;\r\n    for (OPair<String, Object> entry : addEntries) {\r\n      coll = null;\r\n      if (!record.containsField(entry.getKey())) {\r\n        // GET THE TYPE IF ANY\r\n        if (record.getSchemaClass() != null) {\r\n          OProperty prop = record.getSchemaClass().getProperty(entry.getKey());\r\n          if (prop != null && prop.getType() == OType.LINKSET)\r\n            // SET TYPE\r\n            coll = new HashSet<Object>();\r\n        }\r\n\r\n        if (coll == null)\r\n          // IN ALL OTHER CASES USE A LIST\r\n          coll = new ArrayList<Object>();\r\n\r\n        record.field(entry.getKey(), coll);\r\n      } else {\r\n        fieldValue = record.field(entry.getKey());\r\n\r\n        if (fieldValue instanceof Collection<?>)\r\n          coll = (Collection<Object>) fieldValue;\r\n        else\r\n          continue;\r\n      }\r\n\r\n      v = entry.getValue();\r\n\r\n      if (v instanceof OSQLFilterItem)\r\n        v = ((OSQLFilterItem) v).getValue(record, context);\r\n      else if (v instanceof OSQLFunctionRuntime)\r\n        v = ((OSQLFunctionRuntime) v).execute(record, null, context);\r\n\r\n      coll.add(v);\r\n      recordUpdated = true;\r\n    }\r\n\r\n    // BIND VALUES TO PUT (AS MAP)\r\n    Map<String, Object> map;\r\n    OPair<String, Object> pair;\r\n    for (Entry<String, OPair<String, Object>> entry : putEntries.entrySet()) {\r\n      fieldValue = record.field(entry.getKey());\r\n\r\n      if (fieldValue == null) {\r\n        if (record.getSchemaClass() != null) {\r\n          final OProperty property = record.getSchemaClass().getProperty(entry.getKey());\r\n          if (property != null\r\n              && (property.getType() != null && (!property.getType().equals(OType.EMBEDDEDMAP) && !property.getType().equals(\r\n                  OType.LINKMAP)))) {\r\n            throw new OCommandExecutionException(\"field \" + entry.getKey() + \" is not defined as a map\");\r\n          }\r\n        }\r\n        fieldValue = new HashMap<String, Object>();\r\n        record.field(entry.getKey(), fieldValue);\r\n      }\r\n\r\n      if (fieldValue instanceof Map<?, ?>) {\r\n        map = (Map<String, Object>) fieldValue;\r\n\r\n        pair = entry.getValue();\r\n\r\n        v = pair.getValue();\r\n\r\n        if (v instanceof OSQLFilterItem)\r\n          v = ((OSQLFilterItem) v).getValue(record, context);\r\n        else if (pair.getValue() instanceof OSQLFunctionRuntime)\r\n          v = ((OSQLFunctionRuntime) v).execute(record, null, context);\r\n\r\n        map.put(pair.getKey(), v);\r\n        recordUpdated = true;\r\n      }\r\n    }\r\n\r\n    // REMOVE FIELD IF ANY\r\n    for (OPair<String, Object> entry : removeEntries) {\r\n      v = entry.getValue();\r\n      if (v == EMPTY_VALUE) {\r\n        record.removeField(entry.getKey());\r\n        recordUpdated = true;\r\n      } else {\r\n        fieldValue = record.field(entry.getKey());\r\n\r\n        if (fieldValue instanceof Collection<?>) {\r\n          coll = (Collection<Object>) fieldValue;\r\n          if (coll.remove(v))\r\n            recordUpdated = true;\r\n        } else if (fieldValue instanceof Map<?, ?>) {\r\n          map = (Map<String, Object>) fieldValue;\r\n          if (map.remove(v) != null)\r\n            recordUpdated = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (recordUpdated) {\r\n      record.setDirty();\r\n      record.save();\r\n      recordCount++;\r\n    }\r\n\r\n    return true;\r\n  }","id":27473,"modified_method":"/**\r\n   * Update current record.\r\n   */\r\n  @SuppressWarnings(\"unchecked\")\r\n  public boolean result(final Object iRecord) {\r\n    final ODocument record = (ODocument) ((OIdentifiable) iRecord).getRecord();\r\n\r\n    if (compiledFilter != null) {\r\n      // ADDITIONAL FILTERING\r\n      if (!(Boolean) compiledFilter.evaluate(record, null, context))\r\n        return false;\r\n    }\r\n\r\n    boolean recordUpdated = false;\r\n\r\n    parameters.reset();\r\n\r\n    // BIND VALUES TO UPDATE\r\n    if (!setEntries.isEmpty()) {\r\n      OSQLHelper.bindParameters(record, setEntries, parameters);\r\n      recordUpdated = true;\r\n    }\r\n\r\n    // BIND VALUES TO INCREMENT\r\n    for (Map.Entry<String, Number> entry : incrementEntries.entrySet()) {\r\n      final Number prevValue = record.field(entry.getKey());\r\n\r\n      if (prevValue == null)\r\n        // NO PREVIOUS VALUE: CONSIDER AS 0\r\n        record.field(entry.getKey(), entry.getValue());\r\n      else\r\n        // COMPUTING INCREMENT\r\n        record.field(entry.getKey(), OType.increment(prevValue, entry.getValue()));\r\n\r\n      recordUpdated = true;\r\n    }\r\n\r\n    Object v;\r\n\r\n    // BIND VALUES TO ADD\r\n    Collection<Object> coll;\r\n    Object fieldValue;\r\n    for (OPair<String, Object> entry : addEntries) {\r\n      coll = null;\r\n      if (!record.containsField(entry.getKey())) {\r\n        // GET THE TYPE IF ANY\r\n        if (record.getSchemaClass() != null) {\r\n          OProperty prop = record.getSchemaClass().getProperty(entry.getKey());\r\n          if (prop != null && prop.getType() == OType.LINKSET)\r\n            // SET TYPE\r\n            coll = new HashSet<Object>();\r\n        }\r\n\r\n        if (coll == null)\r\n          // IN ALL OTHER CASES USE A LIST\r\n          coll = new ArrayList<Object>();\r\n\r\n        record.field(entry.getKey(), coll);\r\n      } else {\r\n        fieldValue = record.field(entry.getKey());\r\n\r\n        if (fieldValue instanceof Collection<?>)\r\n          coll = (Collection<Object>) fieldValue;\r\n        else\r\n          continue;\r\n      }\r\n\r\n      v = entry.getValue();\r\n\r\n      if (v instanceof OSQLFilterItem)\r\n        v = ((OSQLFilterItem) v).getValue(record, context);\r\n      else if (v instanceof OSQLFunctionRuntime)\r\n        v = ((OSQLFunctionRuntime) v).execute(record, null, context);\r\n\r\n      coll.add(v);\r\n      recordUpdated = true;\r\n    }\r\n\r\n    // BIND VALUES TO PUT (AS MAP)\r\n    Map<String, Object> map;\r\n    OPair<String, Object> pair;\r\n    for (Entry<String, OPair<String, Object>> entry : putEntries.entrySet()) {\r\n      fieldValue = record.field(entry.getKey());\r\n\r\n      if (fieldValue == null) {\r\n        if (record.getSchemaClass() != null) {\r\n          final OProperty property = record.getSchemaClass().getProperty(entry.getKey());\r\n          if (property != null\r\n              && (property.getType() != null && (!property.getType().equals(OType.EMBEDDEDMAP) && !property.getType().equals(\r\n                  OType.LINKMAP)))) {\r\n            throw new OCommandExecutionException(\"field \" + entry.getKey() + \" is not defined as a map\");\r\n          }\r\n        }\r\n        fieldValue = new HashMap<String, Object>();\r\n        record.field(entry.getKey(), fieldValue);\r\n      }\r\n\r\n      if (fieldValue instanceof Map<?, ?>) {\r\n        map = (Map<String, Object>) fieldValue;\r\n\r\n        pair = entry.getValue();\r\n\r\n        v = pair.getValue();\r\n\r\n        if (v instanceof OSQLFilterItem)\r\n          v = ((OSQLFilterItem) v).getValue(record, context);\r\n        else if (pair.getValue() instanceof OSQLFunctionRuntime)\r\n          v = ((OSQLFunctionRuntime) v).execute(record, null, context);\r\n\r\n        map.put(pair.getKey(), v);\r\n        recordUpdated = true;\r\n      }\r\n    }\r\n\r\n    // REMOVE FIELD IF ANY\r\n    for (OPair<String, Object> entry : removeEntries) {\r\n      v = entry.getValue();\r\n      if (v == EMPTY_VALUE) {\r\n        record.removeField(entry.getKey());\r\n        recordUpdated = true;\r\n      } else {\r\n        fieldValue = record.field(entry.getKey());\r\n\r\n        if (fieldValue instanceof Collection<?>) {\r\n          coll = (Collection<Object>) fieldValue;\r\n          if (coll.remove(v))\r\n            recordUpdated = true;\r\n        } else if (fieldValue instanceof Map<?, ?>) {\r\n          map = (Map<String, Object>) fieldValue;\r\n          if (map.remove(v) != null)\r\n            recordUpdated = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (recordUpdated) {\r\n      record.setDirty();\r\n      record.save();\r\n      recordCount++;\r\n    }\r\n\r\n    return true;\r\n  }","commit_id":"4bd04b37e707cdd1aeed516dfe4069c39c4fe013","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public String getMasterNode(final String iDatabaseName, final String iClusterName, final Object iKey) {\r\n    String masterNode = getDatabaseClusterConfiguration(iDatabaseName, iClusterName).field(\"master\");\r\n    if (masterNode == null) {\r\n      OLogManager\r\n          .instance()\r\n          .warn(\r\n              this,\r\n              \"DISTRIBUTED found wrong configuration for database '%s': cannot find the 'master' field for the cluster '%s'. '$auto' will be used\",\r\n              iDatabaseName, iClusterName);\r\n      masterNode = \"$auto\";\r\n    } else if (!masterNode.equalsIgnoreCase(\"$auto\"))\r\n      return masterNode;\r\n\r\n    // AUTO, BY HAZELCAST PARTITION SERVICE\r\n    return getNodeId(hazelcastInstance.getPartitionService().getPartition(iKey).getOwner());\r\n  }","id":27474,"modified_method":"public String getMasterNode(final String iDatabaseName, final String iClusterName, final Object iKey) {\r\n    String masterNode = getDatabaseClusterConfiguration(iDatabaseName, iClusterName).field(\"master\");\r\n    if (masterNode == null) {\r\n      OLogManager\r\n          .instance()\r\n          .warn(\r\n              this,\r\n              \"DISTRIBUTED found wrong configuration for database '%s': cannot find the 'master' field for the cluster '%s'. '$auto' will be used\",\r\n              iDatabaseName, iClusterName);\r\n    } else if (!masterNode.equalsIgnoreCase(\"$auto\"))\r\n      return masterNode;\r\n\r\n    // AUTO, BY HAZELCAST PARTITION SERVICE\r\n    return getNodeId(hazelcastInstance.getPartitionService().getPartition(iKey).getOwner());\r\n  }","commit_id":"ad6f1d8ffa7a64631d3f50788ebebfe03823c636","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public Object call() throws Exception {\r\n    if (OLogManager.instance().isDebugEnabled())\r\n      OLogManager.instance().debug(this, \"DISTRIBUTED <- command: %s\", text.toString());\r\n\r\n    if (status != STATUS.ALIGN && !getDistributedServerManager().checkStatus(\"online\"))\r\n      // NODE NOT ONLINE, REFUSE THE OEPRATION\r\n      throw new OServerOfflineException();\r\n\r\n    final ODatabaseDocumentTx db = openDatabase();\r\n    ODistributedThreadLocal.INSTANCE.distributedExecution = true;\r\n    try {\r\n\r\n      Object result = openDatabase().command(new OCommandSQL(text));\r\n\r\n      if (mode != EXECUTION_MODE.FIRE_AND_FORGET)\r\n        return result;\r\n\r\n      // FIRE AND FORGET MODE: AVOID THE PAYLOAD AS RESULT\r\n      return null;\r\n\r\n    } finally {\r\n      ODistributedThreadLocal.INSTANCE.distributedExecution = false;\r\n      closeDatabase(db);\r\n    }\r\n  }","id":27475,"modified_method":"@Override\r\n  public Object call() throws Exception {\r\n    if (OLogManager.instance().isDebugEnabled())\r\n      OLogManager.instance().debug(this, \"DISTRIBUTED <- command: %s\", text.toString());\r\n\r\n    if (status != STATUS.ALIGN && !getDistributedServerManager().checkStatus(\"online\"))\r\n      // NODE NOT ONLINE, REFUSE THE OEPRATION\r\n      throw new OServerOfflineException();\r\n\r\n    final ODatabaseDocumentTx db = openDatabase();\r\n    ODistributedThreadLocal.INSTANCE.distributedExecution = true;\r\n    try {\r\n\r\n      Object result = openDatabase().command(new OCommandSQL(text)).execute();\r\n\r\n      if (mode != EXECUTION_MODE.FIRE_AND_FORGET)\r\n        return result;\r\n\r\n      // FIRE AND FORGET MODE: AVOID THE PAYLOAD AS RESULT\r\n      return null;\r\n\r\n    } finally {\r\n      ODistributedThreadLocal.INSTANCE.distributedExecution = false;\r\n      closeDatabase(db);\r\n    }\r\n  }","commit_id":"ad6f1d8ffa7a64631d3f50788ebebfe03823c636","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private void joinWithTCP() {\r\n        final Config config = Config.get();\r\n        if (config.getJoin().getJoinMembers().requiredMember != null) {\r\n            joinViaRequiredMember();\r\n        } else {\r\n            joinViaPossibleMembers();\r\n        }\r\n    }","id":27476,"modified_method":"private void joinWithTCP() {\r\n        final Config config = Config.get();\r\n        if (config.getJoin().getJoinMembers().getRequiredMember() != null) {\r\n            joinViaRequiredMember();\r\n        } else {\r\n            joinViaPossibleMembers();\r\n        }\r\n    }","commit_id":"4044d34364781163d4f19207bbdc31bd575c1e30","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private void joinViaRequiredMember() {\r\n\r\n        try {\r\n            final Config config = Config.get();\r\n            final Address requiredAddress = getAddressFor(config.getJoin().getJoinMembers().requiredMember);\r\n            if (DEBUG) {\r\n                logger.log(Level.FINEST, \"Joining over required member \" + requiredAddress);\r\n            }\r\n            if (requiredAddress == null) {\r\n                throw new RuntimeException(\"Invalid required member \"\r\n                        + config.getJoin().getJoinMembers().requiredMember);\r\n            }\r\n            if (requiredAddress.equals(address)) {\r\n                setAsMaster();\r\n                return;\r\n            }\r\n            ConnectionManager.get().getOrConnect(requiredAddress);\r\n            Connection conn = null;\r\n            while (conn == null) {\r\n                conn = ConnectionManager.get().getOrConnect(requiredAddress);\r\n                Thread.sleep(1000);\r\n            }\r\n            while (!joined) {\r\n                final Connection connection = ConnectionManager.get().getOrConnect(requiredAddress);\r\n                if (connection == null)\r\n                    joinViaRequiredMember();\r\n                if (DEBUG) {\r\n                    logger.log(Level.FINEST, \"Sending joinRequest \" + requiredAddress);\r\n                }\r\n                ClusterManager.get().sendJoinRequest(requiredAddress);\r\n\r\n                Thread.sleep(2000);\r\n            }\r\n        } catch (final Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }","id":27477,"modified_method":"private void joinViaRequiredMember() {\r\n\r\n        try {\r\n            final Config config = Config.get();\r\n            final Address requiredAddress = getAddressFor(config.getJoin().getJoinMembers().getRequiredMember());\r\n            if (DEBUG) {\r\n                logger.log(Level.FINEST, \"Joining over required member \" + requiredAddress);\r\n            }\r\n            if (requiredAddress == null) {\r\n                throw new RuntimeException(\"Invalid required member \"\r\n                        + config.getJoin().getJoinMembers().getRequiredMember());\r\n            }\r\n            if (requiredAddress.equals(address)) {\r\n                setAsMaster();\r\n                return;\r\n            }\r\n            ConnectionManager.get().getOrConnect(requiredAddress);\r\n            Connection conn = null;\r\n            while (conn == null) {\r\n                conn = ConnectionManager.get().getOrConnect(requiredAddress);\r\n                Thread.sleep(1000);\r\n            }\r\n            while (!joined) {\r\n                final Connection connection = ConnectionManager.get().getOrConnect(requiredAddress);\r\n                if (connection == null)\r\n                    joinViaRequiredMember();\r\n                if (DEBUG) {\r\n                    logger.log(Level.FINEST, \"Sending joinRequest \" + requiredAddress);\r\n                }\r\n                ClusterManager.get().sendJoinRequest(requiredAddress);\r\n\r\n                Thread.sleep(2000);\r\n            }\r\n        } catch (final Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }","commit_id":"4044d34364781163d4f19207bbdc31bd575c1e30","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private void joinViaPossibleMembers() {\r\n        final Config config = Config.get();\r\n        try {\r\n            final List<Address> lsPossibleAddresses = getPossibleMembers(config.getJoin().getJoinMembers().lsMembers);\r\n            lsPossibleAddresses.remove(address);\r\n            for (final Address adrs : lsPossibleAddresses) {\r\n                if (DEBUG)\r\n                    logger.log(Level.FINEST, \"connecting to \" + adrs);\r\n                ConnectionManager.get().getOrConnect(adrs);\r\n            }\r\n            boolean found = false;\r\n            int numberOfSeconds = 0;\r\n            connectionTimeout:\r\n            while (!found\r\n                    && numberOfSeconds < config.getJoin().getJoinMembers().connectionTimeoutSeconds) {\r\n                Address addressFailed = null;\r\n                while ((addressFailed = qFailedConnections.poll()) != null) {\r\n                    lsPossibleAddresses.remove(addressFailed);\r\n                }\r\n                if (lsPossibleAddresses.size() == 0)\r\n                    break connectionTimeout;\r\n                Thread.sleep(1000);\r\n                numberOfSeconds++;\r\n                int numberOfJoinReq = 0;\r\n                for (final Address adrs : lsPossibleAddresses) {\r\n                    final Connection conn = ConnectionManager.get().getOrConnect(adrs);\r\n                    if (DEBUG)\r\n                        logger.log(Level.FINEST, \"conn \" + conn);\r\n                    if (conn != null && numberOfJoinReq < 5) {\r\n                        found = true;\r\n                        ClusterManager.get().sendJoinRequest(adrs);\r\n                        numberOfJoinReq++;\r\n                    }\r\n                }\r\n            }\r\n            if (DEBUG)\r\n                logger.log(Level.FINEST, \"FOUND \" + found);\r\n            if (!found) {\r\n                setAsMaster();\r\n            } else {\r\n                while (!joined) {\r\n                    int numberOfJoinReq = 0;\r\n                    for (final Address adrs : lsPossibleAddresses) {\r\n                        final Connection conn = ConnectionManager.get().getOrConnect(adrs);\r\n                        if (conn != null && numberOfJoinReq < 5) {\r\n                            found = true;\r\n                            ClusterManager.get().sendJoinRequest(adrs);\r\n                            numberOfJoinReq++;\r\n                        }\r\n                    }\r\n                    Thread.sleep(2000);\r\n                    if (DEBUG) {\r\n                        logger.log(Level.FINEST, masterAddress.toString());\r\n                    }\r\n                    if (masterAddress == null) { // no-one knows the master\r\n                        boolean masterCandidate = true;\r\n                        for (final Address address : lsPossibleAddresses) {\r\n                            if (this.address.hashCode() > address.hashCode())\r\n                                masterCandidate = false;\r\n                        }\r\n                        if (masterCandidate) {\r\n                            setAsMaster();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            lsPossibleAddresses.clear();\r\n            qFailedConnections.clear();\r\n        } catch (final Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }","id":27478,"modified_method":"private void joinViaPossibleMembers() {\r\n        final Config config = Config.get();\r\n        try {\r\n            final List<Address> lsPossibleAddresses = getPossibleMembers(config.getJoin().getJoinMembers().getLsMembers());\r\n            lsPossibleAddresses.remove(address);\r\n            for (final Address adrs : lsPossibleAddresses) {\r\n                if (DEBUG)\r\n                    logger.log(Level.FINEST, \"connecting to \" + adrs);\r\n                ConnectionManager.get().getOrConnect(adrs);\r\n            }\r\n            boolean found = false;\r\n            int numberOfSeconds = 0;\r\n            connectionTimeout:\r\n            while (!found\r\n                    && numberOfSeconds < config.getJoin().getJoinMembers().getConnectionTimeoutSeconds()) {\r\n                Address addressFailed = null;\r\n                while ((addressFailed = qFailedConnections.poll()) != null) {\r\n                    lsPossibleAddresses.remove(addressFailed);\r\n                }\r\n                if (lsPossibleAddresses.size() == 0)\r\n                    break connectionTimeout;\r\n                Thread.sleep(1000);\r\n                numberOfSeconds++;\r\n                int numberOfJoinReq = 0;\r\n                for (final Address adrs : lsPossibleAddresses) {\r\n                    final Connection conn = ConnectionManager.get().getOrConnect(adrs);\r\n                    if (DEBUG)\r\n                        logger.log(Level.FINEST, \"conn \" + conn);\r\n                    if (conn != null && numberOfJoinReq < 5) {\r\n                        found = true;\r\n                        ClusterManager.get().sendJoinRequest(adrs);\r\n                        numberOfJoinReq++;\r\n                    }\r\n                }\r\n            }\r\n            if (DEBUG)\r\n                logger.log(Level.FINEST, \"FOUND \" + found);\r\n            if (!found) {\r\n                setAsMaster();\r\n            } else {\r\n                while (!joined) {\r\n                    int numberOfJoinReq = 0;\r\n                    for (final Address adrs : lsPossibleAddresses) {\r\n                        final Connection conn = ConnectionManager.get().getOrConnect(adrs);\r\n                        if (conn != null && numberOfJoinReq < 5) {\r\n                            found = true;\r\n                            ClusterManager.get().sendJoinRequest(adrs);\r\n                            numberOfJoinReq++;\r\n                        }\r\n                    }\r\n                    Thread.sleep(2000);\r\n                    if (DEBUG) {\r\n                        logger.log(Level.FINEST, masterAddress.toString());\r\n                    }\r\n                    if (masterAddress == null) { // no-one knows the master\r\n                        boolean masterCandidate = true;\r\n                        for (final Address address : lsPossibleAddresses) {\r\n                            if (this.address.hashCode() > address.hashCode())\r\n                                masterCandidate = false;\r\n                        }\r\n                        if (masterCandidate) {\r\n                            setAsMaster();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            lsPossibleAddresses.clear();\r\n            qFailedConnections.clear();\r\n        } catch (final Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }","commit_id":"4044d34364781163d4f19207bbdc31bd575c1e30","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private void handleTcpIp(final org.w3c.dom.Node node) {\n        final NamedNodeMap atts = node.getAttributes();\n        final Join join = config.getJoin();\n        \n        for (int a = 0; a < atts.getLength(); a++) {\n            final org.w3c.dom.Node att = atts.item(a);\n            final String value = getTextContent(att).trim();\n            if (att.getNodeName().equals(\"enabled\")) {\n                join.getJoinMembers().enabled = checkTrue(value);\n            } else if (att.getNodeName().equals(\"conn-timeout-seconds\")) {\n                join.getJoinMembers().connectionTimeoutSeconds = getIntegerValue(\"conn-timeout-seconds\",\n                        value, 5);\n            }\n        }\n\n        final NodeList nodelist = node.getChildNodes();\n        members:\n        for (int i = 0; i < nodelist.getLength(); i++) {\n            final org.w3c.dom.Node n = nodelist.item(i);\n            final String value = getTextContent(n).trim();\n\n            if (n.getNodeName().equalsIgnoreCase(\"required-member\")) {\n                join.getJoinMembers().requiredMember = value;\n            } else if (n.getNodeName().equalsIgnoreCase(\"hostname\")) {\n                join.getJoinMembers().add(value);\n            } else if (n.getNodeName().equalsIgnoreCase(\"interface\")) {\n                final int indexStar = value.indexOf('*');\n                final int indexDash = value.indexOf('-');\n\n                if (indexStar == -1 && indexDash == -1) {\n                    join.getJoinMembers().add(value);\n                } else {\n                    final String first3 = value.substring(0, value.lastIndexOf('.'));\n                    final String lastOne = value.substring(value.lastIndexOf('.') + 1);\n                    if (first3.indexOf('*') != -1 && first3.indexOf('-') != -1) {\n                        String msg = \"First 3 parts of interface definition cannot contain '*' and '-'.\";\n                        msg += \"\\nPlease change the value '\" + value + \"' in the config file.\";\n                        logger.log(Level.WARNING, msg);\n                        continue members;\n                    }\n                    if (lastOne.equals(\"*\")) {\n                        for (int j = 0; j < 256; j++) {\n                            join.getJoinMembers().add(first3 + \".\" + String.valueOf(j));\n                        }\n                    } else if (lastOne.indexOf('-') != -1) {\n                        final int start = Integer.parseInt(lastOne.substring(0, lastOne\n                                .indexOf('-')));\n                        final int end = Integer.parseInt(lastOne\n                                .substring(lastOne.indexOf('-') + 1));\n                        for (int j = start; j <= end; j++) {\n                            join.getJoinMembers().add(first3 + \".\" + String.valueOf(j));\n                        }\n                    }\n                }\n\n            }\n        }\n    }","id":27479,"modified_method":"private void handleTcpIp(final org.w3c.dom.Node node) {\n        final NamedNodeMap atts = node.getAttributes();\n        final Join join = config.getJoin();\n        \n        for (int a = 0; a < atts.getLength(); a++) {\n            final org.w3c.dom.Node att = atts.item(a);\n            final String value = getTextContent(att).trim();\n            if (att.getNodeName().equals(\"enabled\")) {\n                join.getJoinMembers().setEnabled(checkTrue(value));\n            } else if (att.getNodeName().equals(\"conn-timeout-seconds\")) {\n                join.getJoinMembers().setConnectionTimeoutSeconds(getIntegerValue(\"conn-timeout-seconds\", value, 5));\n            }\n        }\n\n        final NodeList nodelist = node.getChildNodes();\n        members:\n        for (int i = 0; i < nodelist.getLength(); i++) {\n            final org.w3c.dom.Node n = nodelist.item(i);\n            final String value = getTextContent(n).trim();\n\n            if (n.getNodeName().equalsIgnoreCase(\"required-member\")) {\n                join.getJoinMembers().setRequiredMember(value);\n            } else if (n.getNodeName().equalsIgnoreCase(\"hostname\")) {\n                join.getJoinMembers().add(value);\n            } else if (n.getNodeName().equalsIgnoreCase(\"interface\")) {\n                final int indexStar = value.indexOf('*');\n                final int indexDash = value.indexOf('-');\n\n                if (indexStar == -1 && indexDash == -1) {\n                    join.getJoinMembers().add(value);\n                } else {\n                    final String first3 = value.substring(0, value.lastIndexOf('.'));\n                    final String lastOne = value.substring(value.lastIndexOf('.') + 1);\n                    if (first3.indexOf('*') != -1 && first3.indexOf('-') != -1) {\n                        String msg = \"First 3 parts of interface definition cannot contain '*' and '-'.\";\n                        msg += \"\\nPlease change the value '\" + value + \"' in the config file.\";\n                        logger.log(Level.WARNING, msg);\n                        continue members;\n                    }\n                    if (lastOne.equals(\"*\")) {\n                        for (int j = 0; j < 256; j++) {\n                            join.getJoinMembers().add(first3 + \".\" + String.valueOf(j));\n                        }\n                    } else if (lastOne.indexOf('-') != -1) {\n                        final int start = Integer.parseInt(lastOne.substring(0, lastOne\n                                .indexOf('-')));\n                        final int end = Integer.parseInt(lastOne\n                                .substring(lastOne.indexOf('-') + 1));\n                        for (int j = start; j <= end; j++) {\n                            join.getJoinMembers().add(first3 + \".\" + String.valueOf(j));\n                        }\n                    }\n                }\n\n            }\n        }\n    }","commit_id":"4044d34364781163d4f19207bbdc31bd575c1e30","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public Iterable<IEObjectDescription> getElements(final EObject object) {\n\t\tfinal URI uri = EcoreUtil2.getNormalizedURI(object);\n\t\tIterable<IEObjectDescription> localElements = getLocalElementsByEObject(object, uri);\n\t\tIterable<IEObjectDescription> parentElements = getParentElements(new Provider<Iterable<IEObjectDescription>>() {\n\t\t\tpublic Iterable<IEObjectDescription> get() {\n\t\t\t\treturn getParent().getElements(object);\n\t\t\t}\n\t\t});\n\t\tIterable<IEObjectDescription> unfilteredResult = Iterables.concat(localElements, parentElements);\n\t\tIterable<IEObjectDescription> result = Iterables.filter(unfilteredResult, new Predicate<IEObjectDescription>() {\n\t\t\tpublic boolean apply(IEObjectDescription input) {\n\t\t\t\tIterable<IEObjectDescription> localByName = getLocalElementsByName(input.getName());\n\t\t\t\tfor(IEObjectDescription local: localByName) {\n\t\t\t\t\tif (!local.getEObjectURI().equals(uri)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}","id":27480,"modified_method":"public Iterable<IEObjectDescription> getElements(final EObject object) {\n\t\tfinal URI uri = EcoreUtil2.getNormalizedURI(object);\n\t\tIterable<IEObjectDescription> localElements = getLocalElementsByEObject(object, uri);\n\t\tIterable<IEObjectDescription> parentElements = getParentElements(new Provider<Iterable<IEObjectDescription>>() {\n\t\t\tpublic Iterable<IEObjectDescription> get() {\n\t\t\t\treturn getParent().getElements(object);\n\t\t\t}\n\t\t});\n\t\tIterable<IEObjectDescription> result = Iterables.concat(localElements, parentElements);\n\t\treturn result;\n\t}","commit_id":"78c50f8f4bebf189f3763ef75c1de80a4109dd7e","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void assertSerializeable(String expected) {\n\t\ttry {\n\t\t\tXExpression expr = expression(expected, true);\n\t\t\t//\t\t\tSystem.out.println(EmfFormatter.objToStr(expr));\n\t\t\tString actual = serializer.serialize(expr);\n\t\t\tassertEquals(expected, actual);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}","id":27481,"modified_method":"protected void assertSerializeable(String expected) throws Exception {\n\t\tXExpression expr = expression(expected, true);\n\t\t//\t\t\tSystem.out.println(EmfFormatter.objToStr(expr));\n\t\tString actual = serializer.serialize(expr);\n\t\tassertEquals(expected, actual);\n\t}","commit_id":"78c50f8f4bebf189f3763ef75c1de80a4109dd7e","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void assertSerializeable(String exprStr) {\n\t\tXExpression expr = null;\n\t\tString exprSerialized = null;\n\t\tXExpression exprReparsed = null;\n\t\ttry {\n\t\t\texpr = expression(exprStr, true);\n\t\t\tremoveNodeModel(expr);\n\t\t\texprSerialized = serializer.serialize(expr);\n\t\t\texprReparsed = expression(exprSerialized, true);\n\t\t\tassertEquals(EmfFormatter.objToStr(expr), EmfFormatter.objToStr(exprReparsed));\n\t\t} catch (Throwable e) {\n\n\t\t\t// FIXME: https://bugs.eclipse.org/bugs/show_bug.cgi?id=344707\n\t\t\tif (e.getMessage().contains(\"No EObjectDescription could be found\"))\n\t\t\t\treturn;\n\n\t\t\tSystem.out.println(\"---- Expected----\");\n\t\t\tSystem.out.println(exprStr);\n\t\t\tSystem.out.println(\"-----------------\");\n\t\t\tSystem.out.println(\"---- Actual----\");\n\t\t\tSystem.out.println(exprSerialized);\n\t\t\tSystem.out.println(\"-----------------\");\n\n\t\t\tif (e instanceof RuntimeException)\n\t\t\t\tthrow (RuntimeException) e;\n\t\t\telse if (e instanceof Error)\n\t\t\t\tthrow (Error) e;\n\t\t\telse {\n\t\t\t\te.printStackTrace();\n\t\t\t\tfail(e.getMessage());\n\t\t\t}\n\n\t\t}\n\t}","id":27482,"modified_method":"protected void assertSerializeable(String input) throws Exception {\n\t\tXExpression expression = expression(input, true);\n\t\tremoveNodeModel(expression);\n\t\tString serialized = serializer.serialize(expression);\n\t\tXExpression reparsed = expression(serialized, true);\n\t\tif (!EcoreUtil.equals(expression, reparsed)) {\n\t\t\tassertEquals(EmfFormatter.objToStr(expression), EmfFormatter.objToStr(reparsed));\n\t\t\tassertEquals(input, serialized);\n\t\t\tfail(\"EcoreUtil#equals was false for: \" + serialized + \" / \" + input);\n\t\t}\n\t}","commit_id":"78c50f8f4bebf189f3763ef75c1de80a4109dd7e","url":"https://github.com/eclipse/xtext"},{"original_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(classes, options);\n  }","id":27483,"modified_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  private static final Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","id":27484,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  private static Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":27485,"modified_method":"private static boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n  }","id":27486,"modified_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27487,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27488,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    String clazz = elem.getClassName();\n    return clazz;\n  }","id":27489,"modified_method":"private static String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    return elem.getClassName();\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(classes, options, false);\n  }","id":27490,"modified_method":"protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(instances, classes, options, false);\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(classes, options);\n  }","id":27491,"modified_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","id":27492,"modified_method":"public static Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else //noinspection StatementWithEmptyBody\n        if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void fillField(Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(null, toSet);\n        } else {\n          //case: not array\n          f.set(null, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","id":27493,"modified_method":"private static void fillField(Object instance, Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(instance, toSet);\n        } else {\n          //case: not array\n          f.set(instance, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","id":27494,"modified_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields = null;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0) {\n            fatal(\"Option can only be applied to static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key.toString(), Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","id":27495,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Create Class->Object Mapping\n    Map<Class, Object> class2object = new HashMap<Class, Object>();\n    if (instances != null) {\n      for (int i = 0; i < classes.length; ++i) {\n        assert instances[i].getClass() == classes[i];\n        class2object.put(classes[i], instances[i]);\n      }\n    }\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0 && instances == null) {\n            fatal(\"An instance object must be provided if an option is applied to a non-static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key, Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(class2object.get(target.getDeclaringClass()), target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(class2object.get(target.getDeclaringClass()), target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","commit_id":"a92418288a47b2d4ff4fe8f04d965169fffe18e3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields = null;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0) {\n            fatal(\"Option can only be applied to static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key.toString(), Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","id":27496,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Create Class->Object Mapping\n    Map<Class, Object> class2object = new HashMap<Class, Object>();\n    if (instances != null) {\n      for (int i = 0; i < classes.length; ++i) {\n        assert instances[i].getClass() == classes[i];\n        class2object.put(classes[i], instances[i]);\n      }\n    }\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0 && instances == null) {\n            fatal(\"An instance object must be provided if an option is applied to a non-static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key, Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(class2object.get(target.getDeclaringClass()), target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(class2object.get(target.getDeclaringClass()), target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    String clazz = elem.getClassName();\n    return clazz;\n  }","id":27497,"modified_method":"private static String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    return elem.getClassName();\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void fillField(Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(null, toSet);\n        } else {\n          //case: not array\n          f.set(null, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","id":27498,"modified_method":"private static void fillField(Object instance, Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(instance, toSet);\n        } else {\n          //case: not array\n          f.set(instance, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(classes, options);\n  }","id":27499,"modified_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":27500,"modified_method":"private static boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27501,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(classes, options);\n  }","id":27502,"modified_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n  }","id":27503,"modified_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","id":27504,"modified_method":"public static Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else //noinspection StatementWithEmptyBody\n        if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","id":27505,"modified_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(classes, options, false);\n  }","id":27506,"modified_method":"protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(instances, classes, options, false);\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27507,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  private static final Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","id":27508,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  private static Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","commit_id":"5c8ec8f3d59924e3c317c792ec7b0663c091846b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":27509,"modified_method":"private static boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","id":27510,"modified_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields = null;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0) {\n            fatal(\"Option can only be applied to static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key.toString(), Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","id":27511,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Create Class->Object Mapping\n    Map<Class, Object> class2object = new HashMap<Class, Object>();\n    if (instances != null) {\n      for (int i = 0; i < classes.length; ++i) {\n        assert instances[i].getClass() == classes[i];\n        class2object.put(classes[i], instances[i]);\n      }\n    }\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0 && instances == null) {\n            fatal(\"An instance object must be provided if an option is applied to a non-static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key, Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(class2object.get(target.getDeclaringClass()), target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(class2object.get(target.getDeclaringClass()), target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27512,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    String clazz = elem.getClassName();\n    return clazz;\n  }","id":27513,"modified_method":"private static String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    return elem.getClassName();\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(classes, options, false);\n  }","id":27514,"modified_method":"protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(instances, classes, options, false);\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(classes, options);\n  }","id":27515,"modified_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n  }","id":27516,"modified_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(classes, options);\n  }","id":27517,"modified_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  private static final Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","id":27518,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  private static Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void fillField(Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(null, toSet);\n        } else {\n          //case: not array\n          f.set(null, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","id":27519,"modified_method":"private static void fillField(Object instance, Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(instance, toSet);\n        } else {\n          //case: not array\n          f.set(instance, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27520,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","id":27521,"modified_method":"public static Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else //noinspection StatementWithEmptyBody\n        if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","commit_id":"67e303211e7399e13ccc4372badcfbd5fa971651","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(classes, options);\n  }","id":27522,"modified_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","id":27523,"modified_method":"public static Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else //noinspection StatementWithEmptyBody\n        if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":27524,"modified_method":"private static boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27525,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    String clazz = elem.getClassName();\n    return clazz;\n  }","id":27526,"modified_method":"private static String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    return elem.getClassName();\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n  }","id":27527,"modified_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27528,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","id":27529,"modified_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields = null;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0) {\n            fatal(\"Option can only be applied to static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key.toString(), Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","id":27530,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Create Class->Object Mapping\n    Map<Class, Object> class2object = new HashMap<Class, Object>();\n    if (instances != null) {\n      for (int i = 0; i < classes.length; ++i) {\n        assert instances[i].getClass() == classes[i];\n        class2object.put(classes[i], instances[i]);\n      }\n    }\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0 && instances == null) {\n            fatal(\"An instance object must be provided if an option is applied to a non-static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key, Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(class2object.get(target.getDeclaringClass()), target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(class2object.get(target.getDeclaringClass()), target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  private static final Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","id":27531,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  private static Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(classes, options);\n  }","id":27532,"modified_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(classes, options, false);\n  }","id":27533,"modified_method":"protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(instances, classes, options, false);\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void fillField(Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(null, toSet);\n        } else {\n          //case: not array\n          f.set(null, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","id":27534,"modified_method":"private static void fillField(Object instance, Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(instance, toSet);\n        } else {\n          //case: not array\n          f.set(instance, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","commit_id":"a40f135006c79c48a90ed3e73b7600058f906ae3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields = null;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0) {\n            fatal(\"Option can only be applied to static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key.toString(), Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","id":27535,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Create Class->Object Mapping\n    Map<Class, Object> class2object = new HashMap<Class, Object>();\n    if (instances != null) {\n      for (int i = 0; i < classes.length; ++i) {\n        assert instances[i].getClass() == classes[i];\n        class2object.put(classes[i], instances[i]);\n      }\n    }\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0 && instances == null) {\n            fatal(\"An instance object must be provided if an option is applied to a non-static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key, Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(class2object.get(target.getDeclaringClass()), target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(class2object.get(target.getDeclaringClass()), target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  private static final Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","id":27536,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  private static Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(classes, options, false);\n  }","id":27537,"modified_method":"protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(instances, classes, options, false);\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(classes, options);\n  }","id":27538,"modified_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27539,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27540,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void fillField(Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(null, toSet);\n        } else {\n          //case: not array\n          f.set(null, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","id":27541,"modified_method":"private static void fillField(Object instance, Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(instance, toSet);\n        } else {\n          //case: not array\n          f.set(instance, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n  }","id":27542,"modified_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":27543,"modified_method":"private static boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    String clazz = elem.getClassName();\n    return clazz;\n  }","id":27544,"modified_method":"private static String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    return elem.getClassName();\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","id":27545,"modified_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(classes, options);\n  }","id":27546,"modified_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","id":27547,"modified_method":"public static Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else //noinspection StatementWithEmptyBody\n        if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","commit_id":"ab55dea0077a11a034d76c4049738175e020076b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void fillField(Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(null, toSet);\n        } else {\n          //case: not array\n          f.set(null, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","id":27548,"modified_method":"private static void fillField(Object instance, Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(instance, toSet);\n        } else {\n          //case: not array\n          f.set(instance, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(classes, options);\n  }","id":27549,"modified_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27550,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n  }","id":27551,"modified_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","id":27552,"modified_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    String clazz = elem.getClassName();\n    return clazz;\n  }","id":27553,"modified_method":"private static String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    return elem.getClassName();\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(classes, options, false);\n  }","id":27554,"modified_method":"protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(instances, classes, options, false);\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","id":27555,"modified_method":"public static Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else //noinspection StatementWithEmptyBody\n        if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  private static final Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","id":27556,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  private static Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(classes, options);\n  }","id":27557,"modified_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27558,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields = null;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0) {\n            fatal(\"Option can only be applied to static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key.toString(), Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","id":27559,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Create Class->Object Mapping\n    Map<Class, Object> class2object = new HashMap<Class, Object>();\n    if (instances != null) {\n      for (int i = 0; i < classes.length; ++i) {\n        assert instances[i].getClass() == classes[i];\n        class2object.put(classes[i], instances[i]);\n      }\n    }\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0 && instances == null) {\n            fatal(\"An instance object must be provided if an option is applied to a non-static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key, Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(class2object.get(target.getDeclaringClass()), target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(class2object.get(target.getDeclaringClass()), target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":27560,"modified_method":"private static boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"33ee8f38da0b5cdaa5e8d8879e7da4e960722b7f","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n  }","id":27561,"modified_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(classes, options);\n  }","id":27562,"modified_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    String clazz = elem.getClassName();\n    return clazz;\n  }","id":27563,"modified_method":"private static String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    return elem.getClassName();\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27564,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  private static final Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","id":27565,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  private static Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields = null;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0) {\n            fatal(\"Option can only be applied to static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key.toString(), Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","id":27566,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Create Class->Object Mapping\n    Map<Class, Object> class2object = new HashMap<Class, Object>();\n    if (instances != null) {\n      for (int i = 0; i < classes.length; ++i) {\n        assert instances[i].getClass() == classes[i];\n        class2object.put(classes[i], instances[i]);\n      }\n    }\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0 && instances == null) {\n            fatal(\"An instance object must be provided if an option is applied to a non-static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key, Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(class2object.get(target.getDeclaringClass()), target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(class2object.get(target.getDeclaringClass()), target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(classes, options, false);\n  }","id":27567,"modified_method":"protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(instances, classes, options, false);\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","id":27568,"modified_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27569,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void fillField(Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(null, toSet);\n        } else {\n          //case: not array\n          f.set(null, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","id":27570,"modified_method":"private static void fillField(Object instance, Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(instance, toSet);\n        } else {\n          //case: not array\n          f.set(instance, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","id":27571,"modified_method":"public static Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else //noinspection StatementWithEmptyBody\n        if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":27572,"modified_method":"private static boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(classes, options);\n  }","id":27573,"modified_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"f845ff65c5d3b7d1302d728e4a09445ea0d35770","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n  }","id":27574,"modified_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","id":27575,"modified_method":"public static Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else //noinspection StatementWithEmptyBody\n        if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  private static final Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","id":27576,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  private static Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    String clazz = elem.getClassName();\n    return clazz;\n  }","id":27577,"modified_method":"private static String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    return elem.getClassName();\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(classes, options);\n  }","id":27578,"modified_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","id":27579,"modified_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(classes, options);\n  }","id":27580,"modified_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":27581,"modified_method":"private static boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void fillField(Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(null, toSet);\n        } else {\n          //case: not array\n          f.set(null, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","id":27582,"modified_method":"private static void fillField(Object instance, Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(instance, toSet);\n        } else {\n          //case: not array\n          f.set(instance, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27583,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(classes, options, false);\n  }","id":27584,"modified_method":"protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(instances, classes, options, false);\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27585,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields = null;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0) {\n            fatal(\"Option can only be applied to static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key.toString(), Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","id":27586,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Create Class->Object Mapping\n    Map<Class, Object> class2object = new HashMap<Class, Object>();\n    if (instances != null) {\n      for (int i = 0; i < classes.length; ++i) {\n        assert instances[i].getClass() == classes[i];\n        class2object.put(classes[i], instances[i]);\n      }\n    }\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0 && instances == null) {\n            fatal(\"An instance object must be provided if an option is applied to a non-static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key, Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(class2object.get(target.getDeclaringClass()), target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(class2object.get(target.getDeclaringClass()), target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","commit_id":"0be2dd9c5f0eb77dce044d66bfc5ac81d8536cb5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27587,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(classes, options, false);\n  }","id":27588,"modified_method":"protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(instances, classes, options, false);\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void fillField(Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(null, toSet);\n        } else {\n          //case: not array\n          f.set(null, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","id":27589,"modified_method":"private static void fillField(Object instance, Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(instance, toSet);\n        } else {\n          //case: not array\n          f.set(instance, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n  }","id":27590,"modified_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27591,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":27592,"modified_method":"private static boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(classes, options);\n  }","id":27593,"modified_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","id":27594,"modified_method":"public static Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else //noinspection StatementWithEmptyBody\n        if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields = null;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0) {\n            fatal(\"Option can only be applied to static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key.toString(), Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","id":27595,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Create Class->Object Mapping\n    Map<Class, Object> class2object = new HashMap<Class, Object>();\n    if (instances != null) {\n      for (int i = 0; i < classes.length; ++i) {\n        assert instances[i].getClass() == classes[i];\n        class2object.put(classes[i], instances[i]);\n      }\n    }\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0 && instances == null) {\n            fatal(\"An instance object must be provided if an option is applied to a non-static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key, Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(class2object.get(target.getDeclaringClass()), target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(class2object.get(target.getDeclaringClass()), target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(classes, options);\n  }","id":27596,"modified_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    String clazz = elem.getClassName();\n    return clazz;\n  }","id":27597,"modified_method":"private static String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    return elem.getClassName();\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  private static final Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","id":27598,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  private static Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","id":27599,"modified_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","commit_id":"caf2c67bd13c200ac4316f55bf1f6bcc5c4ed452","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","id":27600,"modified_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void fillField(Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(null, toSet);\n        } else {\n          //case: not array\n          f.set(null, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","id":27601,"modified_method":"private static void fillField(Object instance, Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(instance, toSet);\n        } else {\n          //case: not array\n          f.set(instance, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","id":27602,"modified_method":"public static Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else //noinspection StatementWithEmptyBody\n        if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields = null;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0) {\n            fatal(\"Option can only be applied to static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key.toString(), Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","id":27603,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Create Class->Object Mapping\n    Map<Class, Object> class2object = new HashMap<Class, Object>();\n    if (instances != null) {\n      for (int i = 0; i < classes.length; ++i) {\n        assert instances[i].getClass() == classes[i];\n        class2object.put(classes[i], instances[i]);\n      }\n    }\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0 && instances == null) {\n            fatal(\"An instance object must be provided if an option is applied to a non-static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key, Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(class2object.get(target.getDeclaringClass()), target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(class2object.get(target.getDeclaringClass()), target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(classes, options, false);\n  }","id":27604,"modified_method":"protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(instances, classes, options, false);\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27605,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    String clazz = elem.getClassName();\n    return clazz;\n  }","id":27606,"modified_method":"private static String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    return elem.getClassName();\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  private static final Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","id":27607,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  private static Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(classes, options);\n  }","id":27608,"modified_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(classes, options);\n  }","id":27609,"modified_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":27610,"modified_method":"private static boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27611,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n  }","id":27612,"modified_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n  }","commit_id":"73ef9b8766236a9eac2bebf5daee62dae9d53ee4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  private static final Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","id":27613,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  private static Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n  }","id":27614,"modified_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(classes, options);\n  }","id":27615,"modified_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":27616,"modified_method":"private static boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    String clazz = elem.getClassName();\n    return clazz;\n  }","id":27617,"modified_method":"private static String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    return elem.getClassName();\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(classes, options, false);\n  }","id":27618,"modified_method":"protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(instances, classes, options, false);\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields = null;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0) {\n            fatal(\"Option can only be applied to static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key.toString(), Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","id":27619,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Create Class->Object Mapping\n    Map<Class, Object> class2object = new HashMap<Class, Object>();\n    if (instances != null) {\n      for (int i = 0; i < classes.length; ++i) {\n        assert instances[i].getClass() == classes[i];\n        class2object.put(classes[i], instances[i]);\n      }\n    }\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0 && instances == null) {\n            fatal(\"An instance object must be provided if an option is applied to a non-static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key, Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(class2object.get(target.getDeclaringClass()), target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(class2object.get(target.getDeclaringClass()), target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void fillField(Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(null, toSet);\n        } else {\n          //case: not array\n          f.set(null, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","id":27620,"modified_method":"private static void fillField(Object instance, Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(instance, toSet);\n        } else {\n          //case: not array\n          f.set(instance, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27621,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27622,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","id":27623,"modified_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","id":27624,"modified_method":"public static Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else //noinspection StatementWithEmptyBody\n        if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(classes, options);\n  }","id":27625,"modified_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"09aebd637defe3d87e546f62a5433e56ea1e90ce","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","id":27626,"modified_method":"public static void exec(Runnable toRun, Properties options, boolean exit) {\n    //--Init\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    startTrack(\"init\");\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n    endTrack(\"init\");\n    // -- Setup Logging\n    StanfordRedwoodConfiguration.apply(options);\n    //--Run Program\n    int exitCode = 0;\n    startTrack(\"main\");\n    try {\n      toRun.run();\n    } catch (Throwable t) {\n      log(FORCE, t);\n      exitCode = 1;\n    }\n    endTrack(\"main\"); //ends main\n    if (exit) {\n      System.exit(exitCode);\n    }\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(classes, options);\n  }","id":27627,"modified_method":"public static void fillOptions(Class<?>[] classes, Properties options) {\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  private static final Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","id":27628,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  private static Class filePathToClass(String cpEntry, String path) {\n    if (path.length() <= cpEntry.length()) {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    if (path.charAt(cpEntry.length()) != '/') {\n      throw new IllegalArgumentException(\"Illegal path: cp=\" + cpEntry\n          + \" path=\" + path);\n    }\n    path = path.substring(cpEntry.length() + 1);\n    path = path.replaceAll(\"/\", \".\").substring(0, path.length() - 6);\n    try {\n      return Class.forName(path,\n          false,\n          ClassLoader.getSystemClassLoader());\n    } catch (ClassNotFoundException e) {\n      throw fail(\"Could not load class at path: \" + path);\n    } catch (NoClassDefFoundError ex) {\n      warn(\"Class at path \" + path + \" is unloadable\");\n      return null;\n    }\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27629,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(String[] expectedArgs) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\" \");\n    for (String arg : expectedArgs) {\n      b.append(arg).append(\" \");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":27630,"modified_method":"private static boolean isIgnored(String path) {\n    for (String ignore : IGNORED_JARS) {\n      if (path.endsWith(ignore)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static final String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    String clazz = elem.getClassName();\n    return clazz;\n  }","id":27631,"modified_method":"private static String threadRootClass() {\n    StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n    StackTraceElement elem = trace[trace.length - 1];\n    return elem.getClassName();\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    Map<String, Field> optionFields = fillOptionsImpl(visibleClasses, options);//fill\n  }","id":27632,"modified_method":"public static void fillOptions(Properties props, String[] args) {\n    //(convert to map)\n    Properties options = StringUtils.argsToProperties(args);\n    for (String key : props.stringPropertyNames()) {\n      options.put(key, props.getProperty(key));\n    }\n    //(bootstrap)\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    //(fill options)\n    Class<?>[] visibleClasses = optionClasses;\n    if (visibleClasses == null) visibleClasses = getVisibleClasses(); //get classes\n    fillOptionsImpl(null, visibleClasses, options);//fill\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void fillField(Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(null, toSet);\n        } else {\n          //case: not array\n          f.set(null, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","id":27633,"modified_method":"private static void fillField(Object instance, Field f, String value) {\n    try {\n      //--Permissions\n      boolean accessState = true;\n      if (Modifier.isFinal(f.getModifiers())) {\n        fatal(\"Option cannot be final: \" + f);\n      }\n      if (!f.isAccessible()) {\n        accessState = false;\n        f.setAccessible(true);\n      }\n      //--Set Value\n      Object objVal = MetaClass.cast(value, f.getGenericType());\n      if (objVal != null) {\n        if (objVal.getClass().isArray()) {\n          //(case: array)\n          Object[] array = (Object[]) objVal;\n          // error check\n          if (!f.getType().isArray()) {\n            fatal(\"Setting an array to a non-array field. field: \" + f + \" value: \" + Arrays.toString(array) + \" src: \" + value);\n          }\n          // create specific array\n          Object toSet = Array.newInstance(f.getType().getComponentType(), array.length);\n          for (int i = 0; i < array.length; i++) {\n            Array.set(toSet, i, array[i]);\n          }\n          // set value\n          f.set(instance, toSet);\n        } else {\n          //case: not array\n          f.set(instance, objVal);\n        }\n      } else {\n        fatal(\"Cannot assign option field: \" + f + \" value: \" + value + \"; invalid type\");\n      }\n      //--Permissions\n      if (!accessState) {\n        f.setAccessible(false);\n      }\n    } catch (IllegalArgumentException e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    } catch (IllegalAccessException e) {\n      err(e);\n      fatal(\"Cannot access option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName());\n    } catch (Exception e) {\n      err(e);\n      fatal(\"Cannot assign option field: \" + f.getDeclaringClass().getCanonicalName() + \".\" + f.getName() + \" value: \" + value + \" cause: \" + e.getMessage());\n    }\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","id":27634,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public static void usageAndExit(Map<String, String[]> argToFlagsMap) {\n    String clazz = threadRootClass();\n    StringBuilder b = new StringBuilder();\n    b.append(\"USAGE: \").append(clazz).append(\"\\n\\t\");\n    for (String arg : argToFlagsMap.keySet()) {\n      String[] flags = argToFlagsMap.get(arg);\n      if (flags == null || flags.length == 0) {\n        throw new IllegalArgumentException(\n            \"No flags registered for arg: \" + arg);\n      }\n      b.append(\"{\");\n      for (int i = 0; i < flags.length - 1; i++) {\n        b.append(flags[i]).append(\",\");\n      }\n      b.append(flags[flags.length - 1]).append(\"}\");\n    }\n    System.out.println(b.toString());\n    System.exit(0);\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(classes, options, false);\n  }","id":27635,"modified_method":"protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options) {\n    return fillOptionsImpl(instances, classes, options, false);\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(classes, options);\n  }","id":27636,"modified_method":"public static void fillOptions(Class<?>[] classes,\n                                  String[] args) {\n    Properties options = StringUtils.argsToProperties(args); //get options\n    fillOptionsImpl(null, BOOTSTRAP_CLASSES, options, false); //bootstrap\n    fillOptionsImpl(null, classes, options);\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static final Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","id":27637,"modified_method":"public static Class<?>[] getVisibleClasses() {\n    //--Variables\n    List<Class<?>> classes = new ArrayList<Class<?>>();\n    // (get classpath)\n    String pathSep = System.getProperty(\"path.separator\");\n    String[] cp = System.getProperties().getProperty(\"java.class.path\",\n        null).split(pathSep);\n    // --Fill Options\n    // (get classes)\n    for (String entry : cp) {\n      log(\"Checking cp \" + entry);\n      //(should skip?)\n      if (entry.equals(\".\") || entry.trim().length() == 0) {\n        continue;\n      }\n      //(no, don't skip)\n      File f = new File(entry);\n      if (f.isDirectory()) {\n        // --Case: Files\n        LazyFileIterator iter = new LazyFileIterator(f, \".*class$\");\n        while (iter.hasNext()) {\n          //(get the associated class)\n          Class<?> clazz = filePathToClass(entry, iter.next().getPath());\n          if (clazz != null) {\n            //(add the class if it's valid)\n            classes.add(clazz);\n          }\n        }\n      } else //noinspection StatementWithEmptyBody\n        if (!isIgnored(entry)) {\n        // --Case: Jar\n        try {\n          JarFile jar = new JarFile(f);\n          Enumeration<JarEntry> e = jar.entries();\n          while (e.hasMoreElements()) {\n            //(for each jar file element)\n            JarEntry jarEntry = e.nextElement();\n            String clazz = jarEntry.getName();\n            if (clazz.matches(\".*class$\")) {\n              //(if it's a class)\n              clazz = clazz.substring(0, clazz.length() - 6)\n                  .replaceAll(\"/\", \".\");\n              //(add it)\n              try {\n                classes.add(\n                    Class.forName(clazz,\n                        false,\n                        ClassLoader.getSystemClassLoader()));\n              } catch (ClassNotFoundException ex) {\n                warn(\"Could not load class in jar: \" + f + \" at path: \" + clazz);\n              } catch (NoClassDefFoundError ex) {\n                debug(\"Could not scan class: \" + clazz + \" (in jar: \" + f + \")\");\n              }\n            }\n          }\n        } catch (IOException e) {\n          warn(\"Could not open jar file: \" + f + \"(are you sure the file exists?)\");\n        }\n      } else {\n        //case: ignored jar\n      }\n    }\n\n    return classes.toArray(new Class<?>[classes.size()]);\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields = null;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0) {\n            fatal(\"Option can only be applied to static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key.toString(), Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","id":27638,"modified_method":"@SuppressWarnings(\"rawtypes\")\n  protected static Map<String, Field> fillOptionsImpl(\n      Object[] instances,\n      Class<?>[] classes,\n      Properties options,\n      boolean ensureAllOptions) {\n\n    //--Create Class->Object Mapping\n    Map<Class, Object> class2object = new HashMap<Class, Object>();\n    if (instances != null) {\n      for (int i = 0; i < classes.length; ++i) {\n        assert instances[i].getClass() == classes[i];\n        class2object.put(classes[i], instances[i]);\n      }\n    }\n\n    //--Get Fillable Options\n    Map<String, Field> canFill = new HashMap<String, Field>();\n    Map<String, Pair<Boolean, Boolean>> required = new HashMap<String, Pair<Boolean, Boolean>>(); /* <exists, is_set> */\n    Map<String, String> interner = new HashMap<String, String>();\n    for (Class c : classes) {\n      Field[] fields;\n      try {\n        fields = c.getDeclaredFields();\n      } catch (Throwable e) {\n        debug(\"Could not check fields for class: \" + c.getName() + \"  (caused by \" + e.getClass() + \": \" + e.getMessage() + \")\");\n        continue;\n      }\n\n      for (Field f : fields) {\n        Option o = f.getAnnotation(Option.class);\n        if (o != null) {\n          //(check if field is static)\n          if ((f.getModifiers() & Modifier.STATIC) == 0 && instances == null) {\n            fatal(\"An instance object must be provided if an option is applied to a non-static field: \" + c + \".\" + f);\n          }\n          //(required marker)\n          Pair<Boolean, Boolean> mark = Pair.makePair(false, false);\n          if (o.required()) {\n            mark = Pair.makePair(true, false);\n          }\n          //(add main name)\n          String name = o.name().toLowerCase();\n          if (name.equals(\"\")) {\n            name = f.getName().toLowerCase();\n          }\n          if (canFill.containsKey(name)) {\n            String name1 = canFill.get(name).getDeclaringClass().getCanonicalName() + \".\" + canFill.get(name).getName();\n            String name2 = f.getDeclaringClass().getCanonicalName() + \".\" + f.getName();\n            if (!name1.equals(name2)) {\n              fatal(\"Multiple declarations of option \" + name + \": \" + name1 + \" and \" + name2);\n            } else {\n              err(\"Class is in classpath multiple times: \" + canFill.get(name).getDeclaringClass().getCanonicalName());\n            }\n          }\n          canFill.put(name, f);\n          required.put(name, mark);\n          interner.put(name, name);\n          //(add alternate names)\n          if (!o.alt().equals(\"\")) {\n            for (String alt : o.alt().split(\" *, *\")) {\n              alt = alt.toLowerCase();\n              if (canFill.containsKey(alt) && !alt.equals(name))\n                throw new IllegalArgumentException(\"Multiple declarations of option \" + alt + \": \" + canFill.get(alt) + \" and \" + f);\n              canFill.put(alt, f);\n              if (mark.first) required.put(alt, mark);\n              interner.put(alt, name);\n            }\n          }\n        }\n      }\n    }\n\n    //--Fill Options\n    for (Object rawKey : options.keySet()) {\n      String rawKeyStr = rawKey.toString();\n      String key = rawKey.toString().toLowerCase();\n      // (get values)\n      String value = options.get(rawKey).toString();\n      assert value != null;\n      Field target = canFill.get(key);\n      // (mark required option as fulfilled)\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark != null && mark.first) {\n        required.put(key, Pair.makePair(true, true));\n      }\n      // (fill the field)\n      if (target != null) {\n        // (case: declared option)\n        fillField(class2object.get(target.getDeclaringClass()), target, value);\n      } else if (ensureAllOptions) {\n        // (case: undeclared option)\n        // split the key\n        int lastDotIndex = rawKeyStr.lastIndexOf('.');\n        if (lastDotIndex < 0) {\n          fatal(\"Unrecognized option: \" + key);\n        }\n        String className = rawKeyStr.substring(0, lastDotIndex);\n        String fieldName = rawKeyStr.substring(lastDotIndex + 1);\n        // get the class\n        Class clazz = null;\n        try {\n          clazz = ClassLoader.getSystemClassLoader().loadClass(className);\n        } catch (Exception e) {\n          debug(\"Could not set option: \" + rawKey + \"; no such class: \" + className);\n        }\n        // get the field\n        if (clazz != null) {\n          try {\n            target = clazz.getField(fieldName);\n          } catch (Exception e) {\n            debug(\"Could not set option: \" + rawKey + \"; no such field: \" + fieldName + \" in class: \" + className);\n          }\n          fillField(class2object.get(target.getDeclaringClass()), target, value);\n        }\n      }\n    }\n\n    //--Ensure Required\n    boolean good = true;\n    for (String key : required.keySet()) {\n      Pair<Boolean, Boolean> mark = required.get(key);\n      if (mark.first && !mark.second) {\n        err(\"Missing required option: \" + interner.get(key) + \"   <in class: \" + canFill.get(key).getDeclaringClass() + \">\");\n        required.put(key, Pair.makePair(true, true));  //don't duplicate error messages\n        good = false;\n      }\n    }\n    if (!good) {\n      System.exit(1);\n    }\n\n    return canFill;\n  }","commit_id":"c7344b48be975270806ea281855da788d312fd46","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n\tpublic List<T> getConfigurations(long companyId, boolean useDefault) {\n\t\tList<Dictionary<String, Object>> configurationsProperties =\n\t\t\tgetConfigurationsProperties(companyId, useDefault);\n\n\t\tif (configurationsProperties.isEmpty()) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\n\t\tList<T> configurables = new ArrayList<>(\n\t\t\tconfigurationsProperties.size());\n\n\t\tfor (Dictionary<String, Object> configurationProperties :\n\t\t\t\tconfigurationsProperties) {\n\n\t\t\tT configurable = Configurable.createConfigurable(\n\t\t\t\tgetMetatype(), configurationProperties);\n\n\t\t\tconfigurables.add(configurable);\n\t\t}\n\n\t\treturn configurables;\n\t}","id":27639,"modified_method":"@Override\n\tpublic List<T> getConfigurations(long companyId, boolean useDefault) {\n\t\tList<Dictionary<String, Object>> configurationsProperties =\n\t\t\tgetConfigurationsProperties(companyId, useDefault);\n\n\t\tif (configurationsProperties.isEmpty()) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\n\t\treturn Collections.singletonList(\n\t\t\tConfigurable.createConfigurable(\n\t\t\t\tgetMetatype(), configurationsProperties.get(0)));\n\t}","commit_id":"6ebcb667d6590ef5523a680320d4c5468b8d6723","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getDisplayName() {\n    if (displayName != null) return displayName;\n    final ResourceBundle resourceBundle = AbstractBundle.getResourceBundle(bundle, myPluginDescriptor.getPluginClassLoader());\n    return displayName = CommonBundle.message(resourceBundle, key);\n  }","id":27640,"modified_method":"public String getDisplayName() {\n    if (displayName != null) return displayName;\n    LOG.assertTrue(bundle != null, \"Bundle missed for \" + this);\n    final ResourceBundle resourceBundle = AbstractBundle.getResourceBundle(bundle, myPluginDescriptor.getPluginClassLoader());\n    return displayName = CommonBundle.message(resourceBundle, key);\n  }","commit_id":"cdbe339f118b940bea819eba60615f2366816dd9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static <T extends UnnamedConfigurable> T wrapConfigurable(ConfigurableEP<T> ep) {\n    return ep.displayName != null || ep.key != null ? (T)new ConfigurableWrapper(ep) : ep.createConfigurable();\n  }","id":27641,"modified_method":"@Nullable\n  public static <T extends UnnamedConfigurable> T wrapConfigurable(ConfigurableEP<T> ep) {\n    if (ep.displayName != null || ep.key != null) {\n      return (T)(ep.children != null || ep.childrenEPName != null ? new CompositeWrapper(ep) : new ConfigurableWrapper(ep));\n    }\n    else {\n      return ep.createConfigurable();\n    }\n  }","commit_id":"cdbe339f118b940bea819eba60615f2366816dd9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ConfigurableWrapper(ConfigurableEP ep) {\n    myEp = ep;\n    myKids = ep.children == null ? EMPTY_ARRAY : ContainerUtil.mapNotNull(ep.getChildren(),\n                                                                          new NullableFunction<ConfigurableEP, ConfigurableWrapper>() {\n                                                                            @Override\n                                                                            public ConfigurableWrapper fun(ConfigurableEP ep) {\n                                                                              return ep.isAvailable() ? new ConfigurableWrapper(ep) : null;\n                                                                            }\n                                                                          }, new ConfigurableWrapper[0]);\n  }","id":27642,"modified_method":"public ConfigurableWrapper(ConfigurableEP ep) {\n    myEp = ep;\n  }","commit_id":"cdbe339f118b940bea819eba60615f2366816dd9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ConfigurableWrapper addChild(Configurable configurable) {\n    return new CompositeWrapper(myEp, null, configurable);\n  }","id":27643,"modified_method":"public ConfigurableWrapper addChild(Configurable configurable) {\n    return new CompositeWrapper(myEp, configurable);\n  }","commit_id":"17281ae06a6821aa2c8e82dd058478b638cdd9f8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private CompositeWrapper(@NotNull ConfigurableEP ep, @Nullable UnnamedConfigurable configurable, Configurable... kids) {\n      super(ep, configurable);\n      if (ep.dynamic) {\n        kids = ((Composite)getConfigurable()).getConfigurables();\n      }\n      else if (ep.children != null) {\n        kids = ContainerUtil.mapNotNull(ep.getChildren(),\n                                        new NullableFunction<ConfigurableEP, ConfigurableWrapper>() {\n                                          @Override\n                                          public ConfigurableWrapper fun(ConfigurableEP ep) {\n                                            return ep.isAvailable() ? (ConfigurableWrapper)wrapConfigurable(ep) : null;\n                                          }\n                                        }, EMPTY_ARRAY);\n      }\n      if (ep.childrenEPName != null) {\n        ExtensionPoint<Object> childrenEP = Extensions.getArea(ep.getProject()).getExtensionPoint(ep.childrenEPName);\n        Object[] extensions = childrenEP.getExtensions();\n        if (extensions.length > 0) {\n          if (extensions[0] instanceof ConfigurableEP) {\n            Configurable[] children = ContainerUtil.mapNotNull(((ConfigurableEP<Configurable>[])extensions),\n                                                         CONFIGURABLE_FUNCTION, new Configurable[0]);\n            kids = ArrayUtil.mergeArrays(kids, children);\n          }\n          else {\n            kids = ArrayUtil.mergeArrays(kids, ((Composite)getConfigurable()).getConfigurables());\n          }\n        }\n      }\n      myKids = kids;\n      Configurable.SortingConfigurable sorting = cast(Configurable.SortingConfigurable.class, this);\n      if (sorting != null) {\n        Arrays.sort(myKids, sorting.getChildComparator());\n      }\n    }","id":27644,"modified_method":"private CompositeWrapper(@NotNull ConfigurableEP ep, Configurable... kids) {\n      super(ep);\n      if (ep.dynamic) {\n        kids = ((Composite)getConfigurable()).getConfigurables();\n      }\n      else if (ep.children != null) {\n        kids = ContainerUtil.mapNotNull(ep.getChildren(),\n                                        new NullableFunction<ConfigurableEP, ConfigurableWrapper>() {\n                                          @Override\n                                          public ConfigurableWrapper fun(ConfigurableEP ep) {\n                                            return ep.isAvailable() ? (ConfigurableWrapper)wrapConfigurable(ep) : null;\n                                          }\n                                        }, EMPTY_ARRAY);\n      }\n      if (ep.childrenEPName != null) {\n        ExtensionPoint<Object> childrenEP = Extensions.getArea(ep.getProject()).getExtensionPoint(ep.childrenEPName);\n        Object[] extensions = childrenEP.getExtensions();\n        if (extensions.length > 0) {\n          if (extensions[0] instanceof ConfigurableEP) {\n            Configurable[] children = ContainerUtil.mapNotNull(((ConfigurableEP<Configurable>[])extensions),\n                                                         CONFIGURABLE_FUNCTION, new Configurable[0]);\n            kids = ArrayUtil.mergeArrays(kids, children);\n          }\n          else {\n            kids = ArrayUtil.mergeArrays(kids, ((Composite)getConfigurable()).getConfigurables());\n          }\n        }\n      }\n      myKids = kids;\n      Configurable.SortingConfigurable sorting = cast(Configurable.SortingConfigurable.class, this);\n      if (sorting != null) {\n        Arrays.sort(myKids, sorting.getChildComparator());\n      }\n    }","commit_id":"17281ae06a6821aa2c8e82dd058478b638cdd9f8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static <T extends UnnamedConfigurable> T wrapConfigurable(ConfigurableEP<T> ep) {\n    if (!ep.canCreateConfigurable()) {\n      return null;\n    }\n    if (ep.displayName != null || ep.key != null || ep.groupId != null) {\n      T configurable = null;\n      return !ep.dynamic && ep.children == null && ep.childrenEPName == null\n             ? (T)new ConfigurableWrapper(ep, configurable)\n             : (T)new CompositeWrapper(ep, configurable);\n    }\n    else {\n      return ep.createConfigurable();\n    }\n  }","id":27645,"modified_method":"@Nullable\n  public static <T extends UnnamedConfigurable> T wrapConfigurable(ConfigurableEP<T> ep) {\n    if (!ep.canCreateConfigurable()) {\n      return null;\n    }\n    if (ep.displayName != null || ep.key != null || ep.groupId != null) {\n      return !ep.dynamic && ep.children == null && ep.childrenEPName == null\n             ? (T)new ConfigurableWrapper(ep)\n             : (T)new CompositeWrapper(ep);\n    }\n    T configurable = ep.createConfigurable();\n    if (configurable instanceof Configurable) {\n      LOG.warn(\"cannot wrap configurable: \" + configurable.getClass().getName());\n    }\n    return configurable;\n  }","commit_id":"17281ae06a6821aa2c8e82dd058478b638cdd9f8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private ConfigurableWrapper(@NotNull ConfigurableEP ep, @Nullable UnnamedConfigurable configurable) {\n    myEp = ep;\n    myConfigurable = configurable;\n  }","id":27646,"modified_method":"private ConfigurableWrapper(@NotNull ConfigurableEP ep) {\n    myEp = ep;\n  }","commit_id":"17281ae06a6821aa2c8e82dd058478b638cdd9f8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n\t * Constructor.\n\t */\n\tpublic PageablesPage()\n\t{\n\t\tWebMarkupContainer datacontainer = new WebMarkupContainer(\"data\");\n\t\tadd(datacontainer.setOutputMarkupId(true));\n\t\tPageableListView listview = new PageableListView(\"rows\", Arrays.asList(names), 10)\n\t\t{\n\t\t\tprotected void populateItem(ListItem item)\n\t\t\t{\n\t\t\t\titem.add(new Label(\"name\", item.getModelObjectAsString()));\n\t\t\t}\n\t\t};\n\t\tadd(datacontainer.add(listview));\n\t\tadd(new AjaxPagingNavigator(\"navigator\", listview));\n\t}","id":27647,"modified_method":"/**\n\t * Constructor.\n\t */\n\tpublic PageablesPage()\n\t{\n\t\tWebMarkupContainer datacontainer = new WebMarkupContainer(\"data\");\n\t\tdatacontainer.setOutputMarkupId(true);\n\t\tadd(datacontainer);\n\t\t\n\t\tPageableListView listview = new PageableListView(\"rows\", Arrays.asList(names), 10)\n\t\t{\n\t\t\tprotected void populateItem(ListItem item)\n\t\t\t{\n\t\t\t\titem.add(new Label(\"name\", item.getModelObjectAsString()));\n\t\t\t}\n\t\t};\n\t\t\n\t\tdatacontainer.add(listview);\n\t\tdatacontainer.add(new AjaxPagingNavigator(\"navigator\", listview));\n\t}","commit_id":"48b828bee5a287749d6c80d965d68b15434a6bd8","url":"https://github.com/apache/wicket"},{"original_method":"public ConfirmedFriends(final String id, final String userX) {\n\t\tsuper(id);\n\t\t\n\t\tlog.debug(\"ConfirmedFriends()\");\n\t\t\n\t\t//get SakaiProxy\n\t\tsakaiProxy = ProfileApplication.get().getSakaiProxy();\n\t\t\n\t\t//get ProfileLogic\n\t\tprofileLogic = ProfileApplication.get().getProfileLogic();\n\t\t\t\n\t\t//setup model to store the actions in the modal windows\n\t\tfinal FriendAction friendActionModel = new FriendAction();\n\t\t\n\t\t//get id of user viewing this page (will be the same if user is viewing own list, different if viewing someone else's)\n\t\tfinal String userY = sakaiProxy.getCurrentUserId();\n\t\t\n\t\t//if viewing own friends, you can manage them.\n\t\tif(userX.equals(userY)) {\n\t\t\tupdateable = true;\n\t\t}\n\t\t\n\t\t//get our list of confirmed friends as an IDataProvider\n\t\tConfirmedFriendsDataProvider provider = new ConfirmedFriendsDataProvider(userX);\n\t\t\n\t\t//init number of friends\n\t\tnumConfirmedFriends = provider.size();\n\t\t\n\t\t//model so we can update the number of friends\n\t\tIModel numConfirmedFriendsModel = new Model() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic Object getObject() {\n\t\t\t\treturn numConfirmedFriends;\n\t\t\t} \n\t\t};\n\t\t\n\t\t//heading\n\t\tfinal WebMarkupContainer confirmedFriendsHeading = new WebMarkupContainer(\"confirmedFriendsHeading\");\n\t\tLabel confirmedFriendsLabel = new Label(\"confirmedFriendsLabel\");\n\t\t//if viewing own list, \"my friends\", else, \"their name's friends\"\n\t\tif(updateable) {\n\t\t\tconfirmedFriendsLabel.setModel(new ResourceModel(\"heading.friends.my\"));\n\t\t} else {\n\t\t\tString displayName = sakaiProxy.getUserDisplayName(userX);\n\t\t\tconfirmedFriendsLabel.setModel(new StringResourceModel(\"heading.friends.view\", null, new Object[]{ displayName } ));\n\t\t}\n\t\tconfirmedFriendsHeading.add(confirmedFriendsLabel);\n\t\tconfirmedFriendsHeading.add(new Label(\"confirmedFriendsNumber\", numConfirmedFriendsModel));\n\t\tconfirmedFriendsHeading.setOutputMarkupId(true);\n\t\tadd(confirmedFriendsHeading);\n\t\t\n\t\t//no friends message (only show if viewing own list)\n\t\t/*\n\t\tfinal WebMarkupContainer noFriendsContainer = new WebMarkupContainer(\"noFriendsContainer\");\n\t\tnoFriendsContainer.setOutputMarkupId(true);\n\t\t\n\t\tfinal Link noFriendsLink = new Link(\"noFriendsLink\", new ResourceModel(\"link.friend.search\")) {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClick() {\n\t\t\t\tsetResponsePage(new MySearch());\n\t\t\t}\n\n\t\t};\n\t\tnoFriendsContainer.add(noFriendsLink);\n\t\tnoFriendsContainer.setVisible(false);\n\t\tadd(noFriendsContainer);\n\t\t*/\n\t\t\n\t\n\t\t\n\t\t//container which wraps list\n\t\tfinal WebMarkupContainer confirmedFriendsContainer = new WebMarkupContainer(\"confirmedFriendsContainer\");\n\t\tconfirmedFriendsContainer.setOutputMarkupId(true);\n\t\t\n\t\t//results\n\t\tDataView confirmedFriendsDataView = new DataView(\"results-list\", provider) {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tprotected void populateItem(final Item item) {\n\t\t        \n\t\t    \t//get friendId\n\t\t    \tfinal String friendId = (String)item.getModelObject();\n\t\t    \t\t\t    \t\n\t\t    \t//setup values\n\t\t    \tString displayName = sakaiProxy.getUserDisplayName(friendId);\n\t\t    \tboolean friend;\n\t\t    \t\n\t\t    \t//get friend status\n\t\t    \tif(updateable) {\n\t\t    \t\tfriend = true; //viewing own page, hence friend\n\t\t    \t} else {\n\t\t    \t\tfriend = profileLogic.isUserXFriendOfUserY(userY, friendId); //other person viewing, check if they are friends\n\t\t    \t}\n\t    \t\t\n\t\t    \t//is profile image allowed to be viewed by this user/friend?\n\t\t\t\tfinal boolean isProfileImageAllowed = profileLogic.isUserXProfileImageVisibleByUserY(friendId, userY, friend);\n\t\t\t\t\n\t\t\t\t//image\n\t\t\t\titem.add(new ProfileImageRenderer(\"result-photo\", friendId, isProfileImageAllowed, ProfileConstants.PROFILE_IMAGE_THUMBNAIL, true));\n\t\t    \t\n\t\t\t\n\t\t    \t//name and link to profile\n\t\t    \tLink profileLink = new Link(\"result-profileLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t\t\tpublic void onClick() {\n\t\t\t\t\t\tsetResponsePage(new ViewProfile(friendId));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\tprofileLink.add(new Label(\"result-name\", displayName));\n\t\t    \titem.add(profileLink);\n\t\t    \t\n\t\t\t\t//is status allowed to be viewed by this user/friend?\n\t\t\t\tfinal boolean isProfileStatusAllowed = profileLogic.isUserXStatusVisibleByUserY(friendId, userY, friend);\n\t\t\t\t\n\t\t\t\tLabel statusMsgLabel = new Label(\"result-statusMsg\");\n\t\t\t\tLabel statusDateLabel = new Label(\"result-statusDate\");\n\t\t\t\t\n\t\t\t\tif(isProfileStatusAllowed) {\n\t\t\t\t\tString profileStatusMessage = profileLogic.getUserStatusMessage(friendId);\n\t\t\t\t\tDate profileStatusDate = profileLogic.getUserStatusDate(friendId);\n\t\t\t\t\tif(profileStatusMessage == null) {\n\t\t\t\t\t\tstatusMsgLabel.setVisible(false);\n\t\t\t\t\t\tstatusDateLabel.setVisible(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//message\n\t\t\t\t\t\tstatusMsgLabel.setModel(new Model(profileStatusMessage));\n\t\t\t\t\t\t\n\t\t\t\t\t\t//now date\n\t\t\t\t\t\tif(profileStatusDate == null) {\n\t\t\t\t\t\t\tstatusDateLabel.setVisible(false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatusDateLabel.setModel(new Model(ProfileUtils.convertDateForStatus(profileStatusDate)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\titem.add(statusMsgLabel);\n\t\t\t\titem.add(statusDateLabel);\n\t\t    \t\n\t\t    \t\n\t\t    \t/* ACTIONS */\n\t\t    \t\n\t\t    \t//REMOVE FRIEND MODAL WINDOW\n\t\t\t\tfinal ModalWindow removeFriendWindow = new ModalWindow(\"removeFriendWindow\");\n\t\t\t\tremoveFriendWindow.setContent(new RemoveFriend(removeFriendWindow.getContentId(), removeFriendWindow, friendActionModel, userX, friendId)); \n\t\t\t\t\n\t\t\t\t//REMOVE FRIEND LINK\n\t\t    \tfinal AjaxLink removeFriendLink = new AjaxLink(\"removeFriendLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t//target.appendJavascript(\"Wicket.Window.get().window.style.width='800px';\");\n\t\t\t\t\t\tremoveFriendWindow.show(target);\n\t\t\t\t\t\ttarget.appendJavascript(\"fixWindowVertical();\"); \n\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tContextImage removeFriendIcon = new ContextImage(\"removeFriendIcon\",new Model(ProfileConstants.DELETE_IMG));\n\t\t\t\tremoveFriendLink.add(removeFriendIcon);\n\t\t\t\tremoveFriendLink.add(new AttributeModifier(\"title\", true,new ResourceModel(\"link.title.removefriend\")));\n\t\t\t\titem.add(removeFriendLink);\n\t\t\t\t\n\t\t\t\t//can only delete if own friends\n\t\t\t\tif(!updateable) {\n\t\t\t\t\tremoveFriendLink.setEnabled(true);\n\t\t\t\t\tremoveFriendLink.setVisible(false);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// REMOVE FRIEND MODAL WINDOW HANDLER \n\t\t\t\tremoveFriendWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClose(AjaxRequestTarget target){\n\t\t            \tif(friendActionModel.isRemoved()) { \n\t\t            \t\t\n\t\t            \t\t//decrement number of friends\n\t\t            \t\tnumConfirmedFriends--;\n\t\t            \t\t\n\t\t            \t\t//remove friend item from display\n\t\t            \t\ttarget.appendJavascript(\"$('#\" + item.getMarkupId() + \"').slideUp();\");\n\t\t            \t\t\n\t\t            \t\t//update label\n\t\t            \t\ttarget.addComponent(confirmedFriendsHeading);\n\t\t            \t\t\n\t\t            \t\t//if none left, hide whole thing\n\t\t            \t\tif(numConfirmedFriends==0) {\n\t\t            \t\t\ttarget.appendJavascript(\"$('#\" + confirmedFriendsContainer.getMarkupId() + \"').fadeOut();\");\n\t\t            \t\t\t\n\t\t            \t\t\t/*\n\t\t            \t\t\tif(userX.equals(userY)) {\n\t\t            \t\t\t\tnoFriendsContainer.setVisible(true);\n\t\t            \t\t\t\ttarget.addComponent(noFriendsContainer);\n\t\t            \t\t\t}\n\t\t            \t\t\t*/\n\t\t            \t\t\t\n\t\t            \t\t}\n\t\t            \t\t\n\t\t            \t}\n\t\t            }\n\t\t        });\n\t\t\t\titem.add(removeFriendWindow);\n\t\t\t\t\n\t\t\t\titem.setOutputMarkupId(true);\n\t\t\t\t\n\t\t    }\n\t\t\t\n\t\t};\n\t\tconfirmedFriendsDataView.setOutputMarkupId(true);\n\t\tconfirmedFriendsContainer.add(confirmedFriendsDataView);\n\n\t\t//add results container\n\t\tadd(confirmedFriendsContainer);\n\n\t\t//initially, if no friends, hide container\n\t\tif(numConfirmedFriends == 0) {\n\t\t\tconfirmedFriendsContainer.setVisible(false);\n\t\t\t\n\t\t}\n\t}","id":27648,"modified_method":"public ConfirmedFriends(final String id, final String userUuid) {\n\t\tsuper(id);\n\t\t\n\t\tlog.debug(\"ConfirmedFriends()\");\n\t\t\n\t\t//get SakaiProxy\n\t\tsakaiProxy = ProfileApplication.get().getSakaiProxy();\n\t\t\n\t\t//get ProfileLogic\n\t\tprofileLogic = ProfileApplication.get().getProfileLogic();\n\t\t\t\n\t\t//setup model to store the actions in the modal windows\n\t\tfinal FriendAction friendActionModel = new FriendAction();\n\t\t\n\t\t//get id of user viewing this page (will be the same if user is viewing own list, different if viewing someone else's)\n\t\tfinal String currentUserUuid = sakaiProxy.getCurrentUserId();\n\t\t\n\t\t//if viewing own friends, you can manage them.\n\t\tif(userUuid.equals(currentUserUuid)) {\n\t\t\townList = true;\n\t\t}\n\t\t\n\t\t//get our list of confirmed friends as an IDataProvider\n\t\tConfirmedFriendsDataProvider provider = new ConfirmedFriendsDataProvider(userUuid);\n\t\t\n\t\t//init number of friends\n\t\tnumConfirmedFriends = provider.size();\n\t\t\n\t\t//model so we can update the number of friends\n\t\tIModel numConfirmedFriendsModel = new Model() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic Object getObject() {\n\t\t\t\treturn numConfirmedFriends;\n\t\t\t} \n\t\t};\n\t\t\n\t\t//heading\n\t\tfinal WebMarkupContainer confirmedFriendsHeading = new WebMarkupContainer(\"confirmedFriendsHeading\");\n\t\tLabel confirmedFriendsLabel = new Label(\"confirmedFriendsLabel\");\n\t\t//if viewing own list, \"my friends\", else, \"their name's friends\"\n\t\tif(ownList) {\n\t\t\tconfirmedFriendsLabel.setModel(new ResourceModel(\"heading.friends.my\"));\n\t\t} else {\n\t\t\tString displayName = sakaiProxy.getUserDisplayName(userUuid);\n\t\t\tconfirmedFriendsLabel.setModel(new StringResourceModel(\"heading.friends.view\", null, new Object[]{ displayName } ));\n\t\t}\n\t\tconfirmedFriendsHeading.add(confirmedFriendsLabel);\n\t\tconfirmedFriendsHeading.add(new Label(\"confirmedFriendsNumber\", numConfirmedFriendsModel));\n\t\tconfirmedFriendsHeading.setOutputMarkupId(true);\n\t\tadd(confirmedFriendsHeading);\n\t\t\n\t\t//no friends message (only show if viewing own list)\n\t\t/*\n\t\tfinal WebMarkupContainer noFriendsContainer = new WebMarkupContainer(\"noFriendsContainer\");\n\t\tnoFriendsContainer.setOutputMarkupId(true);\n\t\t\n\t\tfinal Link noFriendsLink = new Link(\"noFriendsLink\", new ResourceModel(\"link.friend.search\")) {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClick() {\n\t\t\t\tsetResponsePage(new MySearch());\n\t\t\t}\n\n\t\t};\n\t\tnoFriendsContainer.add(noFriendsLink);\n\t\tnoFriendsContainer.setVisible(false);\n\t\tadd(noFriendsContainer);\n\t\t*/\n\t\t\n\t\n\t\t\n\t\t//container which wraps list\n\t\tfinal WebMarkupContainer confirmedFriendsContainer = new WebMarkupContainer(\"confirmedFriendsContainer\");\n\t\tconfirmedFriendsContainer.setOutputMarkupId(true);\n\t\t\n\t\t//results\n\t\tDataView confirmedFriendsDataView = new DataView(\"results-list\", provider) {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tprotected void populateItem(final Item item) {\n\t\t        \n\t\t    \t//get friendUuid\n\t\t    \tfinal String friendUuid = (String)item.getModelObject();\n\t\t    \t\t\t    \t\n\t\t    \t//setup values\n\t\t    \tString displayName = sakaiProxy.getUserDisplayName(friendUuid);\n\t\t    \tboolean friend;\n\t\t    \t\n\t\t    \t//get friend status\n\t\t    \tif(ownList) {\n\t\t    \t\tfriend = true; //viewing own page, hence friend\n\t\t    \t} else {\n\t\t    \t\tfriend = profileLogic.isUserXFriendOfUserY(userUuid, friendUuid); //other person viewing, check if they are friends\n\t\t    \t}\n\t    \t\t\n\t\t    \t//is profile image allowed to be viewed by this user/friend?\n\t\t\t\tfinal boolean isProfileImageAllowed = profileLogic.isUserXProfileImageVisibleByUserY(friendUuid, currentUserUuid, friend);\n\t\t\t\t\n\t\t\t\t//image\n\t\t\t\titem.add(new ProfileImageRenderer(\"result-photo\", friendUuid, isProfileImageAllowed, ProfileConstants.PROFILE_IMAGE_THUMBNAIL, true));\n\t\t    \t\n\t\t\t\n\t\t    \t//name and link to profile\n\t\t    \tLink profileLink = new Link(\"result-profileLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t\t\tpublic void onClick() {\n\t\t\t\t\t\tsetResponsePage(new ViewProfile(friendUuid));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\tprofileLink.add(new Label(\"result-name\", displayName));\n\t\t    \titem.add(profileLink);\n\t\t    \t\n\t\t    \t//status component\n\t\t\t\tProfileStatusRenderer status = new ProfileStatusRenderer(\"result-status\", userUuid, currentUserUuid, \"friendsListInfoStatusMessage\", \"friendsListInfoStatusDate\");\n\t\t\t\tstatus.setOutputMarkupId(true);\n\t\t\t\titem.add(status);\n\t\t    \t\n\t\t    \t\n\t\t    \t/* ACTIONS */\n\t\t    \t\n\t\t    \t//REMOVE FRIEND MODAL WINDOW\n\t\t\t\tfinal ModalWindow removeFriendWindow = new ModalWindow(\"removeFriendWindow\");\n\t\t\t\tremoveFriendWindow.setContent(new RemoveFriend(removeFriendWindow.getContentId(), removeFriendWindow, friendActionModel, userUuid, friendUuid)); \n\t\t\t\t\n\t\t\t\t//REMOVE FRIEND LINK\n\t\t    \tfinal AjaxLink removeFriendLink = new AjaxLink(\"removeFriendLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t//target.appendJavascript(\"Wicket.Window.get().window.style.width='800px';\");\n\t\t\t\t\t\tremoveFriendWindow.show(target);\n\t\t\t\t\t\ttarget.appendJavascript(\"fixWindowVertical();\"); \n\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tContextImage removeFriendIcon = new ContextImage(\"removeFriendIcon\",new Model(ProfileConstants.DELETE_IMG));\n\t\t\t\tremoveFriendLink.add(removeFriendIcon);\n\t\t\t\tremoveFriendLink.add(new AttributeModifier(\"title\", true,new ResourceModel(\"link.title.removefriend\")));\n\t\t\t\titem.add(removeFriendLink);\n\t\t\t\t\n\t\t\t\t//can only delete if own friends\n\t\t\t\tif(!ownList) {\n\t\t\t\t\tremoveFriendLink.setEnabled(true);\n\t\t\t\t\tremoveFriendLink.setVisible(false);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// REMOVE FRIEND MODAL WINDOW HANDLER \n\t\t\t\tremoveFriendWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClose(AjaxRequestTarget target){\n\t\t            \tif(friendActionModel.isRemoved()) { \n\t\t            \t\t\n\t\t            \t\t//decrement number of friends\n\t\t            \t\tnumConfirmedFriends--;\n\t\t            \t\t\n\t\t            \t\t//remove friend item from display\n\t\t            \t\ttarget.appendJavascript(\"$('#\" + item.getMarkupId() + \"').slideUp();\");\n\t\t            \t\t\n\t\t            \t\t//update label\n\t\t            \t\ttarget.addComponent(confirmedFriendsHeading);\n\t\t            \t\t\n\t\t            \t\t//if none left, hide whole thing\n\t\t            \t\tif(numConfirmedFriends==0) {\n\t\t            \t\t\ttarget.appendJavascript(\"$('#\" + confirmedFriendsContainer.getMarkupId() + \"').fadeOut();\");\n\t\t            \t\t}\n\t\t            \t\t\n\t\t            \t}\n\t\t            }\n\t\t        });\n\t\t\t\titem.add(removeFriendWindow);\n\t\t\t\t\n\t\t\t\titem.setOutputMarkupId(true);\n\t\t\t\t\n\t\t    }\n\t\t\t\n\t\t};\n\t\tconfirmedFriendsDataView.setOutputMarkupId(true);\n\t\tconfirmedFriendsContainer.add(confirmedFriendsDataView);\n\n\t\t//add results container\n\t\tadd(confirmedFriendsContainer);\n\n\t\t//initially, if no friends, hide container\n\t\tif(numConfirmedFriends == 0) {\n\t\t\tconfirmedFriendsContainer.setVisible(false);\n\t\t\t\n\t\t}\n\t}","commit_id":"98b9612eda4524d67a1d9b436f8f689ca2ab22d0","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public MySearch() {\n\t\t\n\t\tlog.debug(\"MySearch()\");\n\t\t\n\t\t//setup model to store the actions in the modal windows\n\t\tfinal FriendAction friendActionModel = new FriendAction();\n\t\t\n\t\t//get current user\n\t\tfinal String currentUserUuid = sakaiProxy.getCurrentUserId();\n\t\t\n\t\t// FeedbackPanel - so we activate feedback\n        final FeedbackPanel feedback = new FeedbackPanel(\"feedback\");\n        feedback.setOutputMarkupId(true);\n        add(feedback);\n        // filteredErrorLevels will not be shown in the FeedbackPanel\n        int[] filteredErrorLevels = new int[]{FeedbackMessage.ERROR};\n        feedback.setFilter(new ErrorLevelsFeedbackMessageFilter(filteredErrorLevels));\n     \n        //create model for form\n\t\tsearch = new Search();\n\t\tCompoundPropertyModel searchModel = new CompoundPropertyModel(search);\n        \n\t\t/* \n\t\t * \n\t\t * SEARCH BY NAME FORM\n\t\t * \n\t\t */\n\t\t\n        //heading\t\n\t\tLabel sbnHeading = new Label(\"sbnHeading\", new ResourceModel(\"heading.search.byname\"));\n\t\tadd(sbnHeading);\n\t\t\n\t\t//setup form\t\t\n\t\tForm sbnForm = new Form(\"sbnForm\", searchModel);\n\t\tsbnForm.setOutputMarkupId(true);\n\t\t\n\t\t//search field\n        sbnForm.add(new Label(\"sbnNameLabel\", new ResourceModel(\"text.search.byname\")));\n\t\tfinal TextField sbnNameField = new TextField(\"searchName\");\n\t\tsbnNameField.setRequired(true);\n\t\tsbnNameField.setOutputMarkupId(true);\n\t\tsbnForm.add(sbnNameField);\n\t\tsbnForm.add(new IconWithClueTip(\"sbnNameToolTip\", ProfileConstants.INFO_IMAGE, new ResourceModel(\"text.search.byname.tooltip\")));\n\t\t\n\t\t//search feedback\n        final FeedbackLabel sbnNameFeedback = new FeedbackLabel(\"searchNameFeedback\", sbnNameField, new ResourceModel(\"text.search.nothing\"));\n        sbnNameFeedback.setOutputMarkupId(true);\n        //sbnNameField.add(new ComponentVisualErrorBehavior(\"onblur\", sbnNameFeedback)); //removed for now\n        sbnForm.add(sbnNameFeedback);\n\t\t\n\t\t\n\t\t/* \n\t\t * \n\t\t * SEARCH BY INTEREST FORM\n\t\t * \n\t\t */\n\t\t\n        //heading\t\n\t\tLabel sbiHeading = new Label(\"sbiHeading\", new ResourceModel(\"heading.search.byinterest\"));\n\t\tadd(sbiHeading);\n\t\t\n\t\t\n\t\t//setup form\t\t\n\t\tForm sbiForm = new Form(\"sbiForm\", searchModel);\n\t\tsbiForm.setOutputMarkupId(true);\n\t\t\n\t\t//search field\n        sbiForm.add(new Label(\"sbiInterestLabel\", new ResourceModel(\"text.search.byinterest\")));\n\t\tfinal TextField sbiInterestField = new TextField(\"searchInterest\");\n\t\tsbiInterestField.setRequired(true);\n\t\tsbiInterestField.setOutputMarkupId(true);\n\t\tsbiForm.add(sbiInterestField);\n\t\tsbiForm.add(new IconWithClueTip(\"sbiInterestToolTip\", ProfileConstants.INFO_IMAGE, new ResourceModel(\"text.search.byinterest.tooltip\")));\n\t\t\n\t\t//search feedback\n        final FeedbackLabel sbiInterestFeedback = new FeedbackLabel(\"searchInterestFeedback\", sbiInterestField, new ResourceModel(\"text.search.nothing\"));\n        sbiInterestFeedback.setOutputMarkupId(true);\n        //sbnNameField.add(new ComponentVisualErrorBehavior(\"onblur\", sbnNameFeedback)); //removed for now\n        sbiForm.add(sbiInterestFeedback);\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/* \n\t\t * \n\t\t * RESULTS\n\t\t * \n\t\t */\n\t\t\n\t\t//search results label\n\t\tfinal Label numSearchResults = new Label(\"numSearchResults\");\n\t\tnumSearchResults.setOutputMarkupId(true);\n\t\tnumSearchResults.setEscapeModelStrings(false);\n\t\tadd(numSearchResults);\n\t\t\n\t\t// model to wrap search results\n\t\tLoadableDetachableModel resultsModel = new LoadableDetachableModel(){\n\t\t\tprotected Object load() {\n\t\t\t\treturn results;\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t\t\t\n\t\t//container which wraps list\n\t\tfinal WebMarkupContainer resultsContainer = new WebMarkupContainer(\"searchResultsContainer\");\n\t\tresultsContainer.setOutputMarkupPlaceholderTag(true);\n\t\tresultsContainer.setVisible(false); //hide initially\n\t\t\n\t\t//search results\n\t\tListView resultsListView = new ListView(\"results-list\", resultsModel) {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tprotected void populateItem(ListItem item) {\n\t\t        \n\t\t    \t//get SearchResult object\n\t\t    \t//this contains info like if they are a friend and if their profile is visible etc\n\t\t    \tSearchResult searchResult = (SearchResult)item.getModelObject();\n\t\t    \t\n\t\t    \t//get userUuid\n\t\t    \tfinal String userUuid = searchResult.getUserUuid();\n\t\t    \t\t\n\t\t    \t//setup basic values\n\t\t    \tString displayName = sakaiProxy.getUserDisplayName(userUuid);\n\t\t    \t\t\n\t\t    \t//is profile image allowed to be viewed by this user/friend?\n\t\t\t\tfinal boolean isProfileImageAllowed = searchResult.isProfileImageAllowed();\n\t\t\t\t\n\t\t\t\t//image\n\t\t\t\titem.add(new ProfileImageRenderer(\"result-photo\", userUuid, isProfileImageAllowed, ProfileConstants.PROFILE_IMAGE_THUMBNAIL, false));\n\t\t    \t\n\t\t    \t//name and link to profile (if allowed or no link)\n\t\t    \tLink profileLink = new Link(\"result-profileLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t\t\tpublic void onClick() {\n\t\t\t\t\t\t//if user found themself, go to own profile, else show other profile\n\t\t\t\t\t\tif(userUuid.equals(currentUserUuid)) {\n\t\t\t\t\t\t\tsetResponsePage(new MyProfile());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//gets userUuid of other user from the link's model\n\t\t\t\t\t\t\tsetResponsePage(new ViewProfile((String)getModelObject()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tprofileLink.setModel(new Model(userUuid));\n\t\t\t\t\n\t\t\t\t/* DEPRECATED, we always link now because of PRFL-24 \n\t\t\t\tif(isProfileAllowed) {\n\t\t\t\t\tprofileLink.setModel(new Model(userUuid));\n\t\t\t\t} else {\n\t\t\t\t\tprofileLink.setEnabled(false);\n\t\t\t\t}\n\t\t\t\t*/\n\n\t\t\t\tprofileLink.add(new Label(\"result-name\", displayName));\n\t\t    \titem.add(profileLink);\n\t\t    \t\n\t\t    \t//is status allowed to be viewed by this user?\n\t\t\t\tfinal boolean isProfileStatusAllowed = searchResult.isStatusAllowed();\n\t\t\t\t\n\t\t\t\tLabel statusMsgLabel = new Label(\"result-statusMsg\");\n\t\t\t\tLabel statusDateLabel = new Label(\"result-statusDate\");\n\t\t\t\t\n\t\t\t\tif(isProfileStatusAllowed) {\n\t\t\t\t\tString profileStatusMessage = profileLogic.getUserStatusMessage(userUuid);\n\t\t\t\t\tDate profileStatusDate = profileLogic.getUserStatusDate(userUuid);\n\t\t\t\t\tif(profileStatusMessage == null) {\n\t\t\t\t\t\tstatusMsgLabel.setVisible(false);\n\t\t\t\t\t\tstatusDateLabel.setVisible(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//message\n\t\t\t\t\t\tstatusMsgLabel.setModel(new Model(profileStatusMessage));\n\t\t\t\t\t\t\n\t\t\t\t\t\t//now date\n\t\t\t\t\t\tif(profileStatusDate == null) {\n\t\t\t\t\t\t\tstatusDateLabel.setVisible(false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatusDateLabel.setModel(new Model(ProfileUtils.convertDateForStatus(profileStatusDate)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\titem.add(statusMsgLabel);\n\t\t\t\titem.add(statusDateLabel);\n\t\t    \t\n\t\t    \t\n\t\t    \t\n\t\t    \t/* ACTIONS */\n\t\t    \t\n\t\t    \t//setup state of this User-result pair\n\t\t    \tboolean friend = searchResult.isFriend();\n\t\t    \tboolean friendRequestToThisPerson = searchResult.isFriendRequestToThisPerson();\n\t\t\t\tboolean friendRequestFromThisPerson = searchResult.isFriendRequestFromThisPerson();\n\t\t\t\tboolean isFriendsListVisible = searchResult.isFriendsListVisible();\n\t\t    \t\n\t\t    \t//ADD FRIEND MODAL WINDOW\n\t\t\t\tfinal ModalWindow connectionWindow = new ModalWindow(\"result-connectionWindow\");\n\t\t    \tconnectionWindow.setContent(new AddFriend(connectionWindow.getContentId(), connectionWindow, friendActionModel, currentUserUuid, userUuid)); \n\n\t\t    \t//ADD FRIEND LINK\n\t\t    \tWebMarkupContainer c1 = new WebMarkupContainer(\"result-connectionContainer\");\n\t\t    \tc1.setOutputMarkupId(true);\n\t\t    \t\n\t\t    \tfinal AjaxLink connectionLink = new AjaxLink(\"result-connectionLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t//target.appendJavascript(\"Wicket.Window.get().window.style.width='800px';\");\n\t\t\t\t\t\tconnectionWindow.show(target);\n\t\t\t\t\t\ttarget.appendJavascript(\"fixWindowVertical();\"); \n\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tfinal Label connectionLabel = new Label(\"result-connectionLabel\");\n\t\t\t\tconnectionLabel.setOutputMarkupId(true);\n\t\t\t\tconnectionLink.add(connectionLabel);\n\t\t\t\t\n\t\t    \t//setup 'add friend' link\n\t\t\t\tif(friend) {\n\t\t\t\t\tconnectionLabel.setModel(new ResourceModel(\"text.friend.confirmed\"));\n\t\t\t\t\tconnectionLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\t\t\tconnectionLink.setEnabled(false);\n\t\t\t\t} else if (friendRequestToThisPerson) {\n\t\t\t\t\tconnectionLabel.setModel(new ResourceModel(\"text.friend.requested\"));\n\t\t\t\t\tconnectionLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\t\t\tconnectionLink.setEnabled(false);\t\t\t\t\t\n\t\t\t\t} else if (friendRequestFromThisPerson) {\n\t\t\t\t\tconnectionLabel.setModel(new ResourceModel(\"text.friend.pending\"));\n\t\t\t\t\tconnectionLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\t\t\tconnectionLink.setEnabled(false);\n\t\t\t\t} else if (userUuid.equals(currentUserUuid)) {\n\t\t\t\t\tconnectionLink.setEnabled(false);\n\t\t\t\t\tc1.setVisible(false);\n\t\t\t\t} else {\n\t\t\t\t\tconnectionLabel.setModel(new ResourceModel(\"link.friend.add\"));\n\t\t\t\t}\n\t\t\t\tconnectionLink.setOutputMarkupId(true);\n\t\t\t\tc1.add(connectionLink);\n\t\t\t\titem.add(c1);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t//VIEW FRIENDS LINK\n\t\t\t\tWebMarkupContainer c2 = new WebMarkupContainer(\"result-friendsContainer\");\n\t\t    \tc2.setOutputMarkupId(true);\n\t\t    \t\n\t\t    \tfinal AjaxLink viewFriendsLink = new AjaxLink(\"result-viewFriendsLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t\t\t//if user found themself, go to MyFriends, else, ViewFriends\n\t\t\t\t\t\tif(userUuid.equals(currentUserUuid)) {\n\t\t\t\t\t\t\tsetResponsePage(new MyFriends());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetResponsePage(new ViewFriends(userUuid));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tfinal Label viewFriendsLabel = new Label(\"result-viewFriendsLabel\", new ResourceModel(\"link.view.friends\"));\n\t\t\t\tviewFriendsLink.add(viewFriendsLabel);\n\t\t\t\t\n\t\t\t\t//hide if not allowed\n\t\t\t\tif(!isFriendsListVisible) {\n\t\t\t\t\tviewFriendsLink.setEnabled(false);\n\t\t\t\t\tc2.setVisible(false);\n\t\t\t\t}\n\t\t\t\tviewFriendsLink.setOutputMarkupId(true);\n\t\t\t\tc2.add(viewFriendsLink);\n\t\t\t\titem.add(c2);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// ADD FRIEND MODAL WINDOW HANDLER \n\t\t\t\tconnectionWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t\t\tpublic void onClose(AjaxRequestTarget target){\n\t\t\t\t\t\t\n\t\t            \tif(friendActionModel.isRequested()) { \n\t\t            \t\tconnectionLabel.setModel(new ResourceModel(\"text.friend.requested\"));\n\t\t\t\t\t\t\tconnectionLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\t\t\t\t\tconnectionLink.setEnabled(false);\n\t\t            \t\t\n\t\t\t\t\t\t\t//TODO: recalculate if we can see this person's friend list and show the link if so\n\t\t            \t\t\n\t\t            \t\t//repaint\n\t\t            \t\ttarget.addComponent(connectionLink);\n\t\t            \t}\n\t\t            }\n\t\t        });\n\t\t\t\titem.add(connectionWindow);\n\t\t\t\t\n\t\t\t\t\n\t\t    }\n\t\t};\n\t\tresultsContainer.add(resultsListView);\n\t\t\n\t\t\n\t\t\n\t\t//add results container\n\t\tadd(resultsContainer);\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\t\n\t\t \n\t\t/* \n\t\t * \n\t\t * SEARCH BY NAME SUBMIT\n\t\t * \n\t\t */\n\t\t\n\t\tIndicatingAjaxButton sbnSubmitButton = new IndicatingAjaxButton(\"sbnSubmit\", sbnForm) {\n\t\t\t\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tprotected void onSubmit(AjaxRequestTarget target, Form form) {\n\n\t\t\t\tif(target != null) {\n\t\t\t\t\t//get the model\n\t\t\t\t\tSearch search = (Search) form.getModelObject();\n\t\t\t\t\t\n\t\t\t\t\t//get search field\n\t\t\t\t\tString searchText = FormattedText.processFormattedText(search.getSearchName(), new StringBuffer());\n\t\t\t\t\t\n\t\t\t\t\tlog.debug(\"MySearch() search.getSearchName(): \" + searchText);\n\t\t\t\t\n\t\t\t\t\t//clear the interest search field in model and repaint to clear value\n\t\t\t\t\tsearch.setSearchInterest(\"\");\n\t\t\t\t\t\n\t\t\t\t\t//search both UDB and Sakaiperson for matches.\n\t\t\t\t\tresults = new ArrayList<SearchResult>(profileLogic.findUsersByNameOrEmail(searchText, currentUserUuid));\n\t\n\t\t\t\t\tint numResults = results.size();\n\t\t\t\t\tint maxResults = ProfileConstants.MAX_SEARCH_RESULTS;\n\t\t\t\t\t\n\t\t\t\t\t//text\n\t\t\t\t\tif(numResults == 0) {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.byname.no.results\", null, new Object[]{ searchText } ));\n\t\t\t\t\t\tresultsContainer.setVisible(false);\n\t\t\t\t\t} else if (numResults == 1) {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.byname.one.result\", null, new Object[]{ searchText } ));\n\t\t\t\t\t\tresultsContainer.setVisible(true);\n\t\t\t\t\t} else if (numResults == maxResults) {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.toomany.results\", null, new Object[]{ searchText, maxResults } ));\n\t\t\t\t\t\tresultsContainer.setVisible(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.byname.all.results\", null, new Object[]{ numResults, searchText } ));\n\t\t\t\t\t\tresultsContainer.setVisible(true);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//post view event\n\t\t\t\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_SEARCH_BY_NAME, \"/profile/\"+currentUserUuid, false);\n\t\t\t\t\t\n\t\t\t\t\t//repaint components\n\t\t\t\t\ttarget.addComponent(sbiInterestField);\n\t\t\t\t\ttarget.addComponent(resultsContainer);\n\t\t\t\t\ttarget.addComponent(numSearchResults);\n\t\t\t\t\ttarget.appendJavascript(\"setMainFrameHeight(window.name);\");\t\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n            }\n\t\t};\n\t\tsbnSubmitButton.setModel(new ResourceModel(\"button.search.byname\"));\n\t\tsbnForm.add(sbnSubmitButton);\n        add(sbnForm);\n        \n        \n        \n        /* \n\t\t * \n\t\t * SEARCH BY INTEREST SUBMIT\n\t\t * \n\t\t */\n\t\t\n        IndicatingAjaxButton sbiSubmitButton = new IndicatingAjaxButton(\"sbiSubmit\", sbiForm) {\n\t\t\t\n\t\t\tprivate static final long serialVersionUID = 1L;\n        \t\n        \tprotected void onSubmit(AjaxRequestTarget target, Form form) {\n\n\t\t\t\tif(target != null) {\n\t\t\t\t\t//get the model\n\t\t\t\t\tSearch search = (Search) form.getModelObject();\n\t\t\t\t\t\n\t\t\t\t\t//get search field\n\t\t\t\t\tString searchText = FormattedText.processFormattedText(search.getSearchInterest(), new StringBuffer());\n\n\t\t\t\t\tlog.debug(\"MySearch() search.getSearchInterest(): \" + searchText);\n\t\t\t\t\t\n\t\t\t\t\t//clear the name search field in model and repaint to clear value\n\t\t\t\t\tsearch.setSearchName(\"\");\n\t\t\t\t\t\n\t\t\t\t\t//search SakaiPerson for matches\n\t\t\t\t\tresults = new ArrayList<SearchResult>(profileLogic.findUsersByInterest(searchText, currentUserUuid));\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tint numResults = results.size();\n\t\t\t\t\tint maxResults = ProfileConstants.MAX_SEARCH_RESULTS;\n\n\t\t\t\t\t//text\n\t\t\t\t\tif(numResults == 0) {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.byinterest.no.results\", null, new Object[]{ searchText } ));\n\t\t\t\t\t\tresultsContainer.setVisible(false);\n\t\t\t\t\t} else if (numResults == 1) {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.byinterest.one.result\", null, new Object[]{ searchText } ));\n\t\t\t\t\t\tresultsContainer.setVisible(true);\n\t\t\t\t\t} else if (numResults == maxResults) {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.toomany.results\", null, new Object[]{ searchText, maxResults } ));\n\t\t\t\t\t\tresultsContainer.setVisible(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.byinterest.all.results\", null, new Object[]{ numResults, searchText } ));\n\t\t\t\t\t\tresultsContainer.setVisible(true);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//post view event\n\t\t\t\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_SEARCH_BY_INTEREST, \"/profile/\"+currentUserUuid, false);\n\t\t\t\t\t\n\t\t\t\t\t//repaint components\n\t\t\t\t\ttarget.addComponent(sbnNameField);\n\t\t\t\t\ttarget.addComponent(numSearchResults);\n\t\t\t\t\ttarget.addComponent(resultsContainer);\n\t\t\t\t\ttarget.appendJavascript(\"setMainFrameHeight(window.name);\");\t\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n            }\n\t\t};\n\t\tsbiSubmitButton.setModel(new ResourceModel(\"button.search.byinterest\"));\n\t\tsbiForm.add(sbiSubmitButton);\n        add(sbiForm);\n   \t\n\t}","id":27649,"modified_method":"public MySearch() {\n\t\t\n\t\tlog.debug(\"MySearch()\");\n\t\t\n\t\t//setup model to store the actions in the modal windows\n\t\tfinal FriendAction friendActionModel = new FriendAction();\n\t\t\n\t\t//get current user\n\t\tfinal String currentUserUuid = sakaiProxy.getCurrentUserId();\n\t\t\n\t\t// FeedbackPanel - so we activate feedback\n        final FeedbackPanel feedback = new FeedbackPanel(\"feedback\");\n        feedback.setOutputMarkupId(true);\n        add(feedback);\n        // filteredErrorLevels will not be shown in the FeedbackPanel\n        int[] filteredErrorLevels = new int[]{FeedbackMessage.ERROR};\n        feedback.setFilter(new ErrorLevelsFeedbackMessageFilter(filteredErrorLevels));\n     \n        //create model for form\n\t\tsearch = new Search();\n\t\tCompoundPropertyModel searchModel = new CompoundPropertyModel(search);\n        \n\t\t/* \n\t\t * \n\t\t * SEARCH BY NAME FORM\n\t\t * \n\t\t */\n\t\t\n        //heading\t\n\t\tLabel sbnHeading = new Label(\"sbnHeading\", new ResourceModel(\"heading.search.byname\"));\n\t\tadd(sbnHeading);\n\t\t\n\t\t//setup form\t\t\n\t\tForm sbnForm = new Form(\"sbnForm\", searchModel);\n\t\tsbnForm.setOutputMarkupId(true);\n\t\t\n\t\t//search field\n        sbnForm.add(new Label(\"sbnNameLabel\", new ResourceModel(\"text.search.byname\")));\n\t\tfinal TextField sbnNameField = new TextField(\"searchName\");\n\t\tsbnNameField.setRequired(true);\n\t\tsbnNameField.setOutputMarkupId(true);\n\t\tsbnForm.add(sbnNameField);\n\t\tsbnForm.add(new IconWithClueTip(\"sbnNameToolTip\", ProfileConstants.INFO_IMAGE, new ResourceModel(\"text.search.byname.tooltip\")));\n\t\t\n\t\t//search feedback\n        final FeedbackLabel sbnNameFeedback = new FeedbackLabel(\"searchNameFeedback\", sbnNameField, new ResourceModel(\"text.search.nothing\"));\n        sbnNameFeedback.setOutputMarkupId(true);\n        //sbnNameField.add(new ComponentVisualErrorBehavior(\"onblur\", sbnNameFeedback)); //removed for now\n        sbnForm.add(sbnNameFeedback);\n\t\t\n\t\t\n\t\t/* \n\t\t * \n\t\t * SEARCH BY INTEREST FORM\n\t\t * \n\t\t */\n\t\t\n        //heading\t\n\t\tLabel sbiHeading = new Label(\"sbiHeading\", new ResourceModel(\"heading.search.byinterest\"));\n\t\tadd(sbiHeading);\n\t\t\n\t\t\n\t\t//setup form\t\t\n\t\tForm sbiForm = new Form(\"sbiForm\", searchModel);\n\t\tsbiForm.setOutputMarkupId(true);\n\t\t\n\t\t//search field\n        sbiForm.add(new Label(\"sbiInterestLabel\", new ResourceModel(\"text.search.byinterest\")));\n\t\tfinal TextField sbiInterestField = new TextField(\"searchInterest\");\n\t\tsbiInterestField.setRequired(true);\n\t\tsbiInterestField.setOutputMarkupId(true);\n\t\tsbiForm.add(sbiInterestField);\n\t\tsbiForm.add(new IconWithClueTip(\"sbiInterestToolTip\", ProfileConstants.INFO_IMAGE, new ResourceModel(\"text.search.byinterest.tooltip\")));\n\t\t\n\t\t//search feedback\n        final FeedbackLabel sbiInterestFeedback = new FeedbackLabel(\"searchInterestFeedback\", sbiInterestField, new ResourceModel(\"text.search.nothing\"));\n        sbiInterestFeedback.setOutputMarkupId(true);\n        //sbnNameField.add(new ComponentVisualErrorBehavior(\"onblur\", sbnNameFeedback)); //removed for now\n        sbiForm.add(sbiInterestFeedback);\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/* \n\t\t * \n\t\t * RESULTS\n\t\t * \n\t\t */\n\t\t\n\t\t//search results label\n\t\tfinal Label numSearchResults = new Label(\"numSearchResults\");\n\t\tnumSearchResults.setOutputMarkupId(true);\n\t\tnumSearchResults.setEscapeModelStrings(false);\n\t\tadd(numSearchResults);\n\t\t\n\t\t// model to wrap search results\n\t\tLoadableDetachableModel resultsModel = new LoadableDetachableModel(){\n\t\t\tprotected Object load() {\n\t\t\t\treturn results;\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t\t\t\n\t\t//container which wraps list\n\t\tfinal WebMarkupContainer resultsContainer = new WebMarkupContainer(\"searchResultsContainer\");\n\t\tresultsContainer.setOutputMarkupPlaceholderTag(true);\n\t\tresultsContainer.setVisible(false); //hide initially\n\t\t\n\t\t//search results\n\t\tListView resultsListView = new ListView(\"results-list\", resultsModel) {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tprotected void populateItem(ListItem item) {\n\t\t        \n\t\t    \t//get SearchResult object\n\t\t    \t//this contains info like if they are a friend and if their profile is visible etc\n\t\t    \tSearchResult searchResult = (SearchResult)item.getModelObject();\n\t\t    \t\n\t\t    \t//get userUuid\n\t\t    \tfinal String userUuid = searchResult.getUserUuid();\n\t\t    \t\t\n\t\t    \t//setup basic values\n\t\t    \tString displayName = sakaiProxy.getUserDisplayName(userUuid);\n\t\t    \t\t\n\t\t    \t//is profile image allowed to be viewed by this user/friend?\n\t\t\t\tfinal boolean isProfileImageAllowed = searchResult.isProfileImageAllowed();\n\t\t\t\t\n\t\t\t\t//image\n\t\t\t\titem.add(new ProfileImageRenderer(\"result-photo\", userUuid, isProfileImageAllowed, ProfileConstants.PROFILE_IMAGE_THUMBNAIL, false));\n\t\t    \t\n\t\t    \t//name and link to profile (if allowed or no link)\n\t\t    \tLink profileLink = new Link(\"result-profileLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t\t\tpublic void onClick() {\n\t\t\t\t\t\t//if user found themself, go to own profile, else show other profile\n\t\t\t\t\t\tif(userUuid.equals(currentUserUuid)) {\n\t\t\t\t\t\t\tsetResponsePage(new MyProfile());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//gets userUuid of other user from the link's model\n\t\t\t\t\t\t\tsetResponsePage(new ViewProfile((String)getModelObject()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tprofileLink.setModel(new Model(userUuid));\n\t\t\t\t\n\t\t\t\t/* DEPRECATED, we always link now because of PRFL-24 \n\t\t\t\tif(isProfileAllowed) {\n\t\t\t\t\tprofileLink.setModel(new Model(userUuid));\n\t\t\t\t} else {\n\t\t\t\t\tprofileLink.setEnabled(false);\n\t\t\t\t}\n\t\t\t\t*/\n\n\t\t\t\tprofileLink.add(new Label(\"result-name\", displayName));\n\t\t    \titem.add(profileLink);\n\t\t    \t\n\t\t    \t//status component\n\t\t\t\tProfileStatusRenderer status = new ProfileStatusRenderer(\"result-status\", userUuid, currentUserUuid, \"friendsListInfoStatusMessage\", \"friendsListInfoStatusDate\");\n\t\t\t\tstatus.setOutputMarkupId(true);\n\t\t\t\titem.add(status);\n\t\t    \t\n\t\t    \t\n\t\t    \t\n\t\t    \t/* ACTIONS */\n\t\t    \t\n\t\t    \t//setup state of this User-result pair\n\t\t    \tboolean friend = searchResult.isFriend();\n\t\t    \tboolean friendRequestToThisPerson = searchResult.isFriendRequestToThisPerson();\n\t\t\t\tboolean friendRequestFromThisPerson = searchResult.isFriendRequestFromThisPerson();\n\t\t\t\tboolean isFriendsListVisible = searchResult.isFriendsListVisible();\n\t\t    \t\n\t\t    \t//ADD FRIEND MODAL WINDOW\n\t\t\t\tfinal ModalWindow connectionWindow = new ModalWindow(\"result-connectionWindow\");\n\t\t    \tconnectionWindow.setContent(new AddFriend(connectionWindow.getContentId(), connectionWindow, friendActionModel, currentUserUuid, userUuid)); \n\n\t\t    \t//ADD FRIEND LINK\n\t\t    \tWebMarkupContainer c1 = new WebMarkupContainer(\"result-connectionContainer\");\n\t\t    \tc1.setOutputMarkupId(true);\n\t\t    \t\n\t\t    \tfinal AjaxLink connectionLink = new AjaxLink(\"result-connectionLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t//target.appendJavascript(\"Wicket.Window.get().window.style.width='800px';\");\n\t\t\t\t\t\tconnectionWindow.show(target);\n\t\t\t\t\t\ttarget.appendJavascript(\"fixWindowVertical();\"); \n\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tfinal Label connectionLabel = new Label(\"result-connectionLabel\");\n\t\t\t\tconnectionLabel.setOutputMarkupId(true);\n\t\t\t\tconnectionLink.add(connectionLabel);\n\t\t\t\t\n\t\t    \t//setup 'add friend' link\n\t\t\t\tif(friend) {\n\t\t\t\t\tconnectionLabel.setModel(new ResourceModel(\"text.friend.confirmed\"));\n\t\t\t\t\tconnectionLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\t\t\tconnectionLink.setEnabled(false);\n\t\t\t\t} else if (friendRequestToThisPerson) {\n\t\t\t\t\tconnectionLabel.setModel(new ResourceModel(\"text.friend.requested\"));\n\t\t\t\t\tconnectionLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\t\t\tconnectionLink.setEnabled(false);\t\t\t\t\t\n\t\t\t\t} else if (friendRequestFromThisPerson) {\n\t\t\t\t\tconnectionLabel.setModel(new ResourceModel(\"text.friend.pending\"));\n\t\t\t\t\tconnectionLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\t\t\tconnectionLink.setEnabled(false);\n\t\t\t\t} else if (userUuid.equals(currentUserUuid)) {\n\t\t\t\t\tconnectionLink.setEnabled(false);\n\t\t\t\t\tc1.setVisible(false);\n\t\t\t\t} else {\n\t\t\t\t\tconnectionLabel.setModel(new ResourceModel(\"link.friend.add\"));\n\t\t\t\t}\n\t\t\t\tconnectionLink.setOutputMarkupId(true);\n\t\t\t\tc1.add(connectionLink);\n\t\t\t\titem.add(c1);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t//VIEW FRIENDS LINK\n\t\t\t\tWebMarkupContainer c2 = new WebMarkupContainer(\"result-friendsContainer\");\n\t\t    \tc2.setOutputMarkupId(true);\n\t\t    \t\n\t\t    \tfinal AjaxLink viewFriendsLink = new AjaxLink(\"result-viewFriendsLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t\t\t//if user found themself, go to MyFriends, else, ViewFriends\n\t\t\t\t\t\tif(userUuid.equals(currentUserUuid)) {\n\t\t\t\t\t\t\tsetResponsePage(new MyFriends());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetResponsePage(new ViewFriends(userUuid));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tfinal Label viewFriendsLabel = new Label(\"result-viewFriendsLabel\", new ResourceModel(\"link.view.friends\"));\n\t\t\t\tviewFriendsLink.add(viewFriendsLabel);\n\t\t\t\t\n\t\t\t\t//hide if not allowed\n\t\t\t\tif(!isFriendsListVisible) {\n\t\t\t\t\tviewFriendsLink.setEnabled(false);\n\t\t\t\t\tc2.setVisible(false);\n\t\t\t\t}\n\t\t\t\tviewFriendsLink.setOutputMarkupId(true);\n\t\t\t\tc2.add(viewFriendsLink);\n\t\t\t\titem.add(c2);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// ADD FRIEND MODAL WINDOW HANDLER \n\t\t\t\tconnectionWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t\t\tpublic void onClose(AjaxRequestTarget target){\n\t\t\t\t\t\t\n\t\t            \tif(friendActionModel.isRequested()) { \n\t\t            \t\tconnectionLabel.setModel(new ResourceModel(\"text.friend.requested\"));\n\t\t\t\t\t\t\tconnectionLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\t\t\t\t\tconnectionLink.setEnabled(false);\n\t\t            \t\t\n\t\t\t\t\t\t\t//TODO: recalculate if we can see this person's friend list and show the link if so\n\t\t            \t\t\n\t\t            \t\t//repaint\n\t\t            \t\ttarget.addComponent(connectionLink);\n\t\t            \t}\n\t\t            }\n\t\t        });\n\t\t\t\titem.add(connectionWindow);\n\t\t\t\t\n\t\t\t\t\n\t\t    }\n\t\t};\n\t\tresultsContainer.add(resultsListView);\n\t\t\n\t\t\n\t\t\n\t\t//add results container\n\t\tadd(resultsContainer);\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\t\n\t\t \n\t\t/* \n\t\t * \n\t\t * SEARCH BY NAME SUBMIT\n\t\t * \n\t\t */\n\t\t\n\t\tIndicatingAjaxButton sbnSubmitButton = new IndicatingAjaxButton(\"sbnSubmit\", sbnForm) {\n\t\t\t\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tprotected void onSubmit(AjaxRequestTarget target, Form form) {\n\n\t\t\t\tif(target != null) {\n\t\t\t\t\t//get the model\n\t\t\t\t\tSearch search = (Search) form.getModelObject();\n\t\t\t\t\t\n\t\t\t\t\t//get search field\n\t\t\t\t\tString searchText = FormattedText.processFormattedText(search.getSearchName(), new StringBuffer());\n\t\t\t\t\t\n\t\t\t\t\tlog.debug(\"MySearch() search.getSearchName(): \" + searchText);\n\t\t\t\t\n\t\t\t\t\t//clear the interest search field in model and repaint to clear value\n\t\t\t\t\tsearch.setSearchInterest(\"\");\n\t\t\t\t\t\n\t\t\t\t\t//search both UDB and Sakaiperson for matches.\n\t\t\t\t\tresults = new ArrayList<SearchResult>(profileLogic.findUsersByNameOrEmail(searchText, currentUserUuid));\n\t\n\t\t\t\t\tint numResults = results.size();\n\t\t\t\t\tint maxResults = ProfileConstants.MAX_SEARCH_RESULTS;\n\t\t\t\t\t\n\t\t\t\t\t//text\n\t\t\t\t\tif(numResults == 0) {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.byname.no.results\", null, new Object[]{ searchText } ));\n\t\t\t\t\t\tresultsContainer.setVisible(false);\n\t\t\t\t\t} else if (numResults == 1) {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.byname.one.result\", null, new Object[]{ searchText } ));\n\t\t\t\t\t\tresultsContainer.setVisible(true);\n\t\t\t\t\t} else if (numResults == maxResults) {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.toomany.results\", null, new Object[]{ searchText, maxResults } ));\n\t\t\t\t\t\tresultsContainer.setVisible(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.byname.all.results\", null, new Object[]{ numResults, searchText } ));\n\t\t\t\t\t\tresultsContainer.setVisible(true);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//post view event\n\t\t\t\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_SEARCH_BY_NAME, \"/profile/\"+currentUserUuid, false);\n\t\t\t\t\t\n\t\t\t\t\t//repaint components\n\t\t\t\t\ttarget.addComponent(sbiInterestField);\n\t\t\t\t\ttarget.addComponent(resultsContainer);\n\t\t\t\t\ttarget.addComponent(numSearchResults);\n\t\t\t\t\ttarget.appendJavascript(\"setMainFrameHeight(window.name);\");\t\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n            }\n\t\t};\n\t\tsbnSubmitButton.setModel(new ResourceModel(\"button.search.byname\"));\n\t\tsbnForm.add(sbnSubmitButton);\n        add(sbnForm);\n        \n        \n        \n        /* \n\t\t * \n\t\t * SEARCH BY INTEREST SUBMIT\n\t\t * \n\t\t */\n\t\t\n        IndicatingAjaxButton sbiSubmitButton = new IndicatingAjaxButton(\"sbiSubmit\", sbiForm) {\n\t\t\t\n\t\t\tprivate static final long serialVersionUID = 1L;\n        \t\n        \tprotected void onSubmit(AjaxRequestTarget target, Form form) {\n\n\t\t\t\tif(target != null) {\n\t\t\t\t\t//get the model\n\t\t\t\t\tSearch search = (Search) form.getModelObject();\n\t\t\t\t\t\n\t\t\t\t\t//get search field\n\t\t\t\t\tString searchText = FormattedText.processFormattedText(search.getSearchInterest(), new StringBuffer());\n\n\t\t\t\t\tlog.debug(\"MySearch() search.getSearchInterest(): \" + searchText);\n\t\t\t\t\t\n\t\t\t\t\t//clear the name search field in model and repaint to clear value\n\t\t\t\t\tsearch.setSearchName(\"\");\n\t\t\t\t\t\n\t\t\t\t\t//search SakaiPerson for matches\n\t\t\t\t\tresults = new ArrayList<SearchResult>(profileLogic.findUsersByInterest(searchText, currentUserUuid));\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tint numResults = results.size();\n\t\t\t\t\tint maxResults = ProfileConstants.MAX_SEARCH_RESULTS;\n\n\t\t\t\t\t//text\n\t\t\t\t\tif(numResults == 0) {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.byinterest.no.results\", null, new Object[]{ searchText } ));\n\t\t\t\t\t\tresultsContainer.setVisible(false);\n\t\t\t\t\t} else if (numResults == 1) {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.byinterest.one.result\", null, new Object[]{ searchText } ));\n\t\t\t\t\t\tresultsContainer.setVisible(true);\n\t\t\t\t\t} else if (numResults == maxResults) {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.toomany.results\", null, new Object[]{ searchText, maxResults } ));\n\t\t\t\t\t\tresultsContainer.setVisible(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnumSearchResults.setModel(new StringResourceModel(\"text.search.byinterest.all.results\", null, new Object[]{ numResults, searchText } ));\n\t\t\t\t\t\tresultsContainer.setVisible(true);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//post view event\n\t\t\t\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_SEARCH_BY_INTEREST, \"/profile/\"+currentUserUuid, false);\n\t\t\t\t\t\n\t\t\t\t\t//repaint components\n\t\t\t\t\ttarget.addComponent(sbnNameField);\n\t\t\t\t\ttarget.addComponent(numSearchResults);\n\t\t\t\t\ttarget.addComponent(resultsContainer);\n\t\t\t\t\ttarget.appendJavascript(\"setMainFrameHeight(window.name);\");\t\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n            }\n\t\t};\n\t\tsbiSubmitButton.setModel(new ResourceModel(\"button.search.byinterest\"));\n\t\tsbiForm.add(sbiSubmitButton);\n        add(sbiForm);\n   \t\n\t}","commit_id":"98b9612eda4524d67a1d9b436f8f689ca2ab22d0","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public MyStatusPanel(String id, UserProfile userProfile) {\n\t\tsuper(id);\n\t\t\n\t\tlog.debug(\"MyStatusPanel()\");\n\n\t\t//get SakaiProxy API\n\t\tsakaiProxy = ProfileApplication.get().getSakaiProxy();\n\t\t\n\t\t//get ProfileLogic API\n\t\tprofileLogic = ProfileApplication.get().getProfileLogic();\n\t\t\t\t\n\t\t//get info\n\t\tString displayName = userProfile.getDisplayName();\n\t\tfinal String userId = sakaiProxy.getCurrentUserId();\n\t\t\n\t\t//status container - here so we can work on it if the status is not set\n\t\tfinal WebMarkupContainer statusContainer = new WebMarkupContainer(\"statusContainer\");\n\t\tstatusContainer.setOutputMarkupPlaceholderTag(true); //we need a placeholder for if we have no status\n\t\t\n\t\t//setup ProfileStatus object loaded with the current values from the DB for the page to use initially.\n\t\tprofileStatus = profileLogic.getUserStatus(userId);\n\t\t\n\t\t//if no status, initialise\n\t\tif(profileStatus == null) {\n\t\t\tstatusContainer.setVisible(false); //hide status section\n\t\t\tprofileStatus = new ProfileStatus();\n\t\t}\n\t\t\n\t\t\n\t\t//the message and date fields get their values from the ProfileStatus object\n\t\t//when the status form is submitted, Hibernate persists the data in the background\n\t\t//and the message and date fields get their values again, via these models from the ProfileStatus object.\n\t\t\n\t\t//setup model for status message\n\t\tLoadableDetachableModel statusMessageModel = new LoadableDetachableModel() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\n\t\t\tprivate String message = \"\";\n\t\t\t\n\t\t\tprotected Object load() {\n\t\t\t\tprofileStatus = profileLogic.getUserStatus(userId);\n\t\t\t\tmessage = profileStatus.getMessage(); //get from hibernate\n\t\t\t\tif(\"\".equals(message) || message == null){\n\t\t\t\t\tlog.warn(\"No status message for: \" + userId);\n\t\t\t\t} \n\t\t\t\treturn message;\n\t\t\t}\n\t\t\t\n\t\t};\n\t\t\n\t\t//setup model for status date\n\t\tLoadableDetachableModel statusDateModel = new LoadableDetachableModel() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\n\t\t\tprivate Date date;\n\t\t\tprivate String dateStr = \"\";\n\t\t\t\n\t\t\tprotected Object load() {\n\t\t\t\tdate = profileLogic.getUserStatusDate(userId);\n\t\t\t\tif(date == null) {\n\t\t\t\t\tlog.warn(\"No status date for: \" + userId);\n\t\t\t\t} else {\n\t\t\t\t\t//transform the date\n\t\t\t\t\tdateStr = ProfileUtils.convertDateForStatus(date);\n\t\t\t\t}\n\t\t\t\treturn dateStr;\n\t\t\t}\n\t\t\t\n\t\t};\n\t\n\t\t\t\t\n\t\t//create model\n\t\tCompoundPropertyModel profileStatusModel = new CompoundPropertyModel(profileStatus);\n\t\n\t\t//name\n\t\tLabel profileName = new Label(\"profileName\", displayName);\n\t\tadd(profileName);\n\t\t\n\t\t\n\t\t//status\n\t\tLabel statusMessageLabel = new Label(\"statusMessage\", statusMessageModel);\n\t\tstatusMessageLabel.setOutputMarkupId(true);\n\t\tstatusContainer.add(statusMessageLabel);\n\t\t\n\t\t//status last updated\n\t\tLabel statusDateLabel = new Label(\"statusDate\", statusDateModel);\n\t\tstatusDateLabel.setOutputMarkupId(true);\n\t\tstatusContainer.add(statusDateLabel);\n\t\t\n\t\t//status update link\n\t\tAjaxFallbackLink statusClearLink = new AjaxFallbackLink(\"statusClearLink\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t//clear status, hide and repaint\n\t\t\t\tif(profileLogic.clearUserStatus(userId)) {\n\t\t\t\t\tstatusContainer.setVisible(false);\n\t\t\t\t\ttarget.addComponent(statusContainer);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\t\t\n\t\t};\n\t\tstatusClearLink.setOutputMarkupId(true);\n\t\tstatusClearLink.add(new Label(\"statusClearLabel\",new ResourceModel(\"link.status.clear\")));\n\t\tstatusContainer.add(statusClearLink);\n\t\t\n\t\t//add status container\n\t\tadd(statusContainer);\n\t\t\t\t\n\t\t//status form\n\t\tForm form = new Form(\"form\", profileStatusModel);\n\t\tform.setOutputMarkupId(true);\n        \t\t\n\t\t//status field\n        TextField statusField = new TextField(\"message\", new PropertyModel(profileStatus, \"message\"));\n        statusField.setOutputMarkupId(true);\n        form.add(statusField);\n        \n        //link the status textfield field with the focus/blur function via this dynamic js \n\t\tStringHeaderContributor statusJavascript = new StringHeaderContributor(\n\t\t\t\t\"<script type=\\\"text/javascript\\\">\" +\n\t\t\t\t\t\"$(document).ready( function(){\" +\n\t\t\t\t\t\"autoFill($('#\" + statusField.getMarkupId() + \"'), '\" + defaultStatus + \"');\" +\n\t\t\t\t\t\"});\" +\n\t\t\t\t\"<\/script>\");\n\t\tadd(statusJavascript);\n        \n        \n        //submit button\n\t\tIndicatingAjaxButton submitButton = new IndicatingAjaxButton(\"submit\", form) {\n\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tprotected void onSubmit(AjaxRequestTarget target, Form form) {\n\t\t\t\t\n\t\t\t\t//get the backing model\n\t\t\t\tProfileStatus profileStatus = (ProfileStatus) form.getModelObject();\n\t\t\t\t\n\t\t\t\t//get userId from sakaiProxy\n\t\t\t\tString userId = sakaiProxy.getCurrentUserId();\n\t\t\t\t\n\t\t\t\t//get the status. if its the default text, do not update, although we should clear the model\n\t\t\t\tString statusMessage = profileStatus.getMessage().trim();\n\t\t\t\tif(statusMessage.equals(defaultStatus)) {\n\t\t\t\t\tprofileStatus.setMessage(\"\");\n\t\t\t\t\tlog.warn(\"Status update for userId: \" + userId + \" was not updated because they didn't enter anything.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//save status from userProfile\n\t\t\t\tif(profileLogic.setUserStatus(userId, statusMessage)) {\n\t\t\t\t\tlog.info(\"Saved status for: \" + userId);\n\t\t\t\t\t\n\t\t\t\t\t//post update event\n\t\t\t\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_STATUS_UPDATE, \"/profile/\"+userId, true);\n\n\t\t\t\t\t//update twitter if set\n\t\t\t\t\tupdateTwitter(userId, statusMessage);\n\t\t\t\t\t\n\t\t\t\t\t// make status panel container visible and repaint\n\t\t\t\t\tstatusContainer.setVisible(true);\n\t\t\t\t\ttarget.addComponent(statusContainer);\n\t\t\t\t} else {\n\t\t\t\t\tlog.error(\"Couldn't save status for: \" + userId);\n\t\t\t\t\tString js = \"alert('Failed to save status. If the problem persists, contact your system administrator.');\";\n\t\t\t\t\ttarget.prependJavascript(js);\t\n\t\t\t\t}\n\t\t\t\t\n            }\n\t\t};\n\t\tsubmitButton.setModel(new ResourceModel(\"button.sayit\"));\n\t\tform.add(submitButton);\n\t\t\n        //add form\n\t\tadd(form);\n\t\t\n\t}","id":27650,"modified_method":"public MyStatusPanel(String id, UserProfile userProfile) {\n\t\tsuper(id);\n\t\t\n\t\tlog.debug(\"MyStatusPanel()\");\n\n\t\t//get SakaiProxy API\n\t\tsakaiProxy = ProfileApplication.get().getSakaiProxy();\n\t\t\n\t\t//get ProfileLogic API\n\t\tprofileLogic = ProfileApplication.get().getProfileLogic();\n\t\t\t\t\n\t\t//get info\n\t\tfinal String displayName = userProfile.getDisplayName();\n\t\tfinal String userId = userProfile.getUserId();\n\t\tfinal String currentUserId = sakaiProxy.getCurrentUserId();\n\t\t\n\t\t//name\n\t\tLabel profileName = new Label(\"profileName\", displayName);\n\t\tadd(profileName);\n\t\t\n\t\t//status component\n\t\tstatus = new ProfileStatusRenderer(\"status\", userId, currentUserId, null, \"tiny\");\n\t\tstatus.setOutputMarkupId(true);\n\t\tadd(status);\n\t\t\n\t\t\n\t\t\t\t\n\t\t//setup SimpleText object to back the single form field \n\t\tSimpleText simpleText = new SimpleText();\n\t\t\t\t\n\t\t//status form\n\t\tForm form = new Form(\"form\", new Model(simpleText));\n\t\tform.setOutputMarkupId(true);\n        \t\t\n\t\t//status field\n\t\tfinal TextField statusField = new TextField(\"message\", new PropertyModel(simpleText, \"text\"));\n        statusField.setOutputMarkupPlaceholderTag(true);\n        form.add(statusField);\n        \n        //link the status textfield field with the focus/blur function via this dynamic js \n\t\tStringHeaderContributor statusJavascript = new StringHeaderContributor(\n\t\t\t\t\"<script type=\\\"text/javascript\\\">\" +\n\t\t\t\t\t\"$(document).ready( function(){\" +\n\t\t\t\t\t\"autoFill($('#\" + statusField.getMarkupId() + \"'), '\" + defaultStatus + \"');\" +\n\t\t\t\t\t\"});\" +\n\t\t\t\t\"<\/script>\");\n\t\tadd(statusJavascript);\n\n        \n        //clear link\n\t\tfinal AjaxFallbackLink clearLink = new AjaxFallbackLink(\"clearLink\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t//clear status, hide and repaint\n\t\t\t\tif(profileLogic.clearUserStatus(userId)) {\n\t\t\t\t\tstatus.setVisible(false); //hide status\n\t\t\t\t\tthis.setVisible(false); //hide clear link\n\t\t\t\t\ttarget.addComponent(status);\n\t\t\t\t\ttarget.addComponent(this);\n\t\t\t\t\t\n\t\t\t\t\ttarget.appendJavascript(\"autoFill($('#\" + statusField.getMarkupId() + \"'), '\" + defaultStatus + \"');\");\n\t\t\t\t\t//target.addComponent(statusField);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tclearLink.setOutputMarkupPlaceholderTag(true);\n\t\tclearLink.add(new Label(\"clearLabel\",new ResourceModel(\"link.status.clear\")));\n\t\n\t\t//set visibility of clear link\n\t\tif(!status.isVisible()) {\n\t\t\tclearLink.setVisible(false);\n\t\t}\n\t\tadd(clearLink);\n        \n        \n        \n        \n        \n        //submit button\n\t\tIndicatingAjaxButton submitButton = new IndicatingAjaxButton(\"submit\", form) {\n\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tprotected void onSubmit(AjaxRequestTarget target, Form form) {\n\t\t\t\t\n\t\t\t\t//get the backing model\n        \t\tSimpleText simpleText = (SimpleText) form.getModelObject();\n\t\t\t\t\n\t\t\t\t//get userId from sakaiProxy\n\t\t\t\tString userId = sakaiProxy.getCurrentUserId();\n\t\t\t\t\n\t\t\t\t//get the status. if its the default text, do not update, although we should clear the model\n\t\t\t\tString statusMessage = simpleText.getText().trim();\n\t\t\t\tif(statusMessage.equals(defaultStatus)) {\n\t\t\t\t\tlog.warn(\"Status for userId: \" + userId + \" was not updated because they didn't enter anything.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//save status from userProfile\n\t\t\t\tif(profileLogic.setUserStatus(userId, statusMessage)) {\n\t\t\t\t\tlog.info(\"Saved status for: \" + userId);\n\t\t\t\t\t\n\t\t\t\t\t//post update event\n\t\t\t\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_STATUS_UPDATE, \"/profile/\"+userId, true);\n\n\t\t\t\t\t//update twitter if set\n\t\t\t\t\tupdateTwitter(userId, statusMessage);\n\t\t\t\t\t\n\t\t\t\t\t//repaint status component\n\t\t\t\t\tProfileStatusRenderer newStatus = new ProfileStatusRenderer(\"status\", userId, currentUserId, null, \"tiny\");\n\t\t\t\t\tnewStatus.setOutputMarkupId(true);\n\t\t\t\t\tstatus.replaceWith(newStatus);\n\t\t\t\t\tnewStatus.setVisible(true);\n\t\t\t\t\t\n\t\t\t\t\t//also show the clear link\n\t\t\t\t\tclearLink.setVisible(true);\n\t\t\t\t\t\n\t\t\t\t\tif(target != null) {\n\t\t\t\t\t\ttarget.addComponent(newStatus);\n\t\t\t\t\t\ttarget.addComponent(clearLink);\n\t\t\t\t\t\tstatus=newStatus; //update reference\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tlog.error(\"Couldn't save status for: \" + userId);\n\t\t\t\t\tString js = \"alert('Failed to save status. If the problem persists, contact your system administrator.');\";\n\t\t\t\t\ttarget.prependJavascript(js);\t\n\t\t\t\t}\n\t\t\t\t\n            }\n\t\t};\n\t\tsubmitButton.setModel(new ResourceModel(\"button.sayit\"));\n\t\tform.add(submitButton);\n\t\t\n        //add form\n\t\tadd(form);\n\t\t\n\t}","commit_id":"98b9612eda4524d67a1d9b436f8f689ca2ab22d0","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public RequestedFriends(final String id, final MyFriends parent, final String userId) {\n\t\tsuper(id);\n\t\t\n\t\tlog.debug(\"RequestedFriends()\");\n\t\t\n\t\t//get SakaiProxy\n\t\tsakaiProxy = ProfileApplication.get().getSakaiProxy();\n\t\t\n\t\t//get ProfileLogic\n\t\tprofileLogic = ProfileApplication.get().getProfileLogic();\n\t\t\n\t\t//setup model to store the actions in the modal windows\n\t\tfinal FriendAction friendActionModel = new FriendAction();\n\t\n\t\t//get our list of friend requests as an IDataProvider\n\t\tRequestedFriendsDataProvider provider = new RequestedFriendsDataProvider(userId);\n\t\t\n\t\t//init number of requests\n\t\tnumRequestedFriends = provider.size();\n\t\t\n\t\t//model so we can update the number of requests\n\t\tIModel numRequestedFriendsModel = new Model() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic Object getObject() {\n\t\t\t\treturn numRequestedFriends;\n\t\t\t} \n\t\t};\n\t\t\n\t\t//heading\n\t\tfinal WebMarkupContainer requestedFriendsHeading = new WebMarkupContainer(\"requestedFriendsHeading\");\n\t\trequestedFriendsHeading.add(new Label(\"requestedFriendsLabel\", new ResourceModel(\"heading.friend.requests\")));\n\t\trequestedFriendsHeading.add(new Label(\"requestedFriendsNumber\", numRequestedFriendsModel));\n\t\trequestedFriendsHeading.setOutputMarkupId(true);\n\t\tadd(requestedFriendsHeading);\n\t\t\n\t\t//container which wraps list\n\t\tfinal WebMarkupContainer requestedFriendsContainer = new WebMarkupContainer(\"requestedFriendsContainer\");\n\t\trequestedFriendsContainer.setOutputMarkupId(true);\n\t\t\n\t\t//search results\n\t\tDataView requestedFriendsDataView = new DataView(\"results-list\", provider) {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tprotected void populateItem(final Item item) {\n\t\t        \n\t\t    \t//get friendId\n\t\t    \tfinal String friendId = (String)item.getModelObject();\n\t\t    \t\t\t    \t\n\t\t    \t//get name\n\t\t    \tString displayName = sakaiProxy.getUserDisplayName(friendId);\n\t\t    \t\n\t\t    \t//is this user allowed to view this person's profile image?\n\t\t\t\tboolean isProfileImageAllowed = profileLogic.isUserXProfileImageVisibleByUserY(friendId, userId, false);\n\t\t\t\t\n\t\t\t\t//image\n\t\t\t\titem.add(new ProfileImageRenderer(\"result-photo\", friendId, isProfileImageAllowed, ProfileConstants.PROFILE_IMAGE_THUMBNAIL, true));\n\t\t    \t\t\t    \t\n\t\t    \t//name and link to profile\n\t\t    \tLink profileLink = new Link(\"result-profileLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t\t\tpublic void onClick() {\n\t\t\t\t\t\tsetResponsePage(new ViewProfile(friendId));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\tprofileLink.add(new Label(\"result-name\", displayName));\n\t\t    \titem.add(profileLink);\n\t\t    \t\n\t\t    \t\n\t\t    \t//is status allowed to be viewed by this user?\n\t\t\t\tfinal boolean isProfileStatusAllowed = profileLogic.isUserXStatusVisibleByUserY(friendId, userId, false);\n\t\t\t\t\n\t\t\t\tLabel statusMsgLabel = new Label(\"result-statusMsg\");\n\t\t\t\tLabel statusDateLabel = new Label(\"result-statusDate\");\n\t\t\t\t\n\t\t\t\tif(isProfileStatusAllowed) {\n\t\t\t\t\tString profileStatusMessage = profileLogic.getUserStatusMessage(friendId);\n\t\t\t\t\tDate profileStatusDate = profileLogic.getUserStatusDate(friendId);\n\t\t\t\t\tif(profileStatusMessage == null) {\n\t\t\t\t\t\tstatusMsgLabel.setVisible(false);\n\t\t\t\t\t\tstatusDateLabel.setVisible(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//message\n\t\t\t\t\t\tstatusMsgLabel.setModel(new Model(profileStatusMessage));\n\t\t\t\t\t\t\n\t\t\t\t\t\t//now date\n\t\t\t\t\t\tif(profileStatusDate == null) {\n\t\t\t\t\t\t\tstatusDateLabel.setVisible(false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatusDateLabel.setModel(new Model(ProfileUtils.convertDateForStatus(profileStatusDate)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\titem.add(statusMsgLabel);\n\t\t\t\titem.add(statusDateLabel);\n\t\t    \t\n\t\t    \t\n\t\t    \t\n\t\t    \t\n\t\t    \t\n\t\t    \t\n\t\t    \t/* ACTIONS */\n\t\t    \t\n\t\t    \t//CONFIRM FRIEND MODAL WINDOW\n\t\t\t\tfinal ModalWindow confirmFriendWindow = new ModalWindow(\"confirmFriendWindow\");\n\t\t\t\tconfirmFriendWindow.setContent(new ConfirmFriend(confirmFriendWindow.getContentId(), confirmFriendWindow, friendActionModel, userId, friendId)); \n\t\t\t\t\n\t\t\t\t//IGNORE FRIEND MODAL WINDOW\n\t\t\t\tfinal ModalWindow ignoreFriendWindow = new ModalWindow(\"ignoreFriendWindow\");\n\t\t\t\tignoreFriendWindow.setContent(new IgnoreFriend(ignoreFriendWindow.getContentId(), ignoreFriendWindow, friendActionModel, userId, friendId)); \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t//IGNORE FRIEND LINK\n\t\t    \tfinal AjaxLink ignoreFriendLink = new AjaxLink(\"ignoreFriendLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tignoreFriendWindow.show(target);\n\t\t\t\t\t\ttarget.appendJavascript(\"fixWindowVertical();\"); \n\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tContextImage ignoreFriendIcon = new ContextImage(\"ignoreFriendIcon\",new Model(ProfileConstants.CANCEL_IMG));\n\t\t\t\tignoreFriendLink.add(ignoreFriendIcon);\n\t\t\t\tignoreFriendLink.add(new AttributeModifier(\"title\", true,new ResourceModel(\"link.title.ignorefriend\")));\n\t\t\t\titem.add(ignoreFriendLink);\n\t\t\t\t\n\t\t\t\t//CONFIRM FRIEND LINK\n\t\t    \tfinal AjaxLink confirmFriendLink = new AjaxLink(\"confirmFriendLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconfirmFriendWindow.show(target);\n\t\t\t\t\t\ttarget.appendJavascript(\"fixWindowVertical();\"); \n\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tContextImage confirmFriendIcon = new ContextImage(\"confirmFriendIcon\",new Model(ProfileConstants.ACCEPT_IMG));\n\t\t\t\tconfirmFriendLink.add(confirmFriendIcon);\n\t\t\t\tconfirmFriendLink.add(new AttributeModifier(\"title\", true,new ResourceModel(\"link.title.confirmfriend\")));\n\t\t\t\titem.add(confirmFriendLink);\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// CONFIRM FRIEND MODAL WINDOW HANDLER \n\t\t\t\tconfirmFriendWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClose(AjaxRequestTarget target){\n\t\t            \tif(friendActionModel.isConfirmed()) { \n\t\t            \t\t\n\t\t            \t\t//decrement number of requests\n\t\t            \t\tnumRequestedFriends--;\n\t\t            \t\t\n\t\t            \t\t//remove friend item from display\n\t\t            \t\ttarget.appendJavascript(\"$('#\" + item.getMarkupId() + \"').slideUp();\");\n\t\t            \t\t\n\t\t            \t\t//update label\n\t\t            \t\ttarget.addComponent(requestedFriendsHeading);\n\t\t            \t\t\n\t\t            \t\t//TODO repaint confirmed friends panel by calling method in MyFriends to repaint it for us\n\t\t            \t\tparent.updateConfirmedFriends(target, userId);\n\t\t            \t\t\n\t\t            \t\t//if none left, hide everything\n\t\t            \t\tif(numRequestedFriends==0) {\n\t\t            \t\t\ttarget.appendJavascript(\"$('#\" + requestedFriendsHeading.getMarkupId() + \"').fadeOut();\");\n\t\t            \t\t\ttarget.appendJavascript(\"$('#\" + requestedFriendsContainer.getMarkupId() + \"').fadeOut();\");\n\t\t            \t\t}\n\t\t            \t\t\n\t\t            \t}\n\t\t            }\n\t\t        });\n\t\t\t\titem.add(confirmFriendWindow);\n\t\t\t\t\n\t\t\t\t// IGNORE FRIEND MODAL WINDOW HANDLER \n\t\t\t\tignoreFriendWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClose(AjaxRequestTarget target){\n\t\t            \tif(friendActionModel.isIgnored()) { \n\t\t            \t\t\n\t\t            \t\t//decrement number of requests\n\t\t            \t\tnumRequestedFriends--;\n\t\t            \t\t\n\t\t            \t\t//remove friend item from display\n\t\t            \t\ttarget.appendJavascript(\"$('#\" + item.getMarkupId() + \"').slideUp();\");\n\t\t            \t\t\n\t\t            \t\t//update label\n\t\t            \t\ttarget.addComponent(requestedFriendsHeading);\n\t\t            \t\t\t\t            \t\t\n\t\t            \t\t//if none left, hide everything\n\t\t            \t\tif(numRequestedFriends==0) {\n\t\t            \t\t\ttarget.appendJavascript(\"$('#\" + requestedFriendsHeading.getMarkupId() + \"').fadeOut();\");\n\t\t            \t\t\ttarget.appendJavascript(\"$('#\" + requestedFriendsContainer.getMarkupId() + \"').fadeOut();\");\n\t\t            \t\t}\n\t\t            \t\t\n\t\t            \t}\n\t\t            }\n\t\t        });\n\t\t\t\titem.add(ignoreFriendWindow);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\titem.setOutputMarkupId(true);\n\t\t\t\t\n\t\t    }\n\t\t\t\n\t\t};\n\t\trequestedFriendsDataView.setOutputMarkupId(true);\n\t\trequestedFriendsContainer.add(requestedFriendsDataView);\n\n\t\t//add results container\n\t\tadd(requestedFriendsContainer);\n\t\t\n\t\t//initially, if no requests, hide everything\n\t\tif(numRequestedFriends == 0) {\n\t\t\tthis.setVisible(false);\n\t\t}\n\t\t\n\t}","id":27651,"modified_method":"public RequestedFriends(final String id, final MyFriends parent, final String userUuid) {\n\t\tsuper(id);\n\t\t\n\t\tlog.debug(\"RequestedFriends()\");\n\t\t\n\t\t//get SakaiProxy\n\t\tsakaiProxy = ProfileApplication.get().getSakaiProxy();\n\t\t\n\t\t//get ProfileLogic\n\t\tprofileLogic = ProfileApplication.get().getProfileLogic();\n\t\t\n\t\t//setup model to store the actions in the modal windows\n\t\tfinal FriendAction friendActionModel = new FriendAction();\n\t\n\t\t//get our list of friend requests as an IDataProvider\n\t\tRequestedFriendsDataProvider provider = new RequestedFriendsDataProvider(userUuid);\n\t\t\n\t\t//init number of requests\n\t\tnumRequestedFriends = provider.size();\n\t\t\n\t\t//model so we can update the number of requests\n\t\tIModel numRequestedFriendsModel = new Model() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic Object getObject() {\n\t\t\t\treturn numRequestedFriends;\n\t\t\t} \n\t\t};\n\t\t\n\t\t//heading\n\t\tfinal WebMarkupContainer requestedFriendsHeading = new WebMarkupContainer(\"requestedFriendsHeading\");\n\t\trequestedFriendsHeading.add(new Label(\"requestedFriendsLabel\", new ResourceModel(\"heading.friend.requests\")));\n\t\trequestedFriendsHeading.add(new Label(\"requestedFriendsNumber\", numRequestedFriendsModel));\n\t\trequestedFriendsHeading.setOutputMarkupId(true);\n\t\tadd(requestedFriendsHeading);\n\t\t\n\t\t//container which wraps list\n\t\tfinal WebMarkupContainer requestedFriendsContainer = new WebMarkupContainer(\"requestedFriendsContainer\");\n\t\trequestedFriendsContainer.setOutputMarkupId(true);\n\t\t\n\t\t//search results\n\t\tDataView requestedFriendsDataView = new DataView(\"results-list\", provider) {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tprotected void populateItem(final Item item) {\n\t\t        \n\t\t    \t//get friendUuid\n\t\t    \tfinal String friendUuid = (String)item.getModelObject();\n\t\t    \t\t\t    \t\n\t\t    \t//get name\n\t\t    \tString displayName = sakaiProxy.getUserDisplayName(friendUuid);\n\t\t    \t\n\t\t    \t//is this user allowed to view this person's profile image?\n\t\t\t\tboolean isProfileImageAllowed = profileLogic.isUserXProfileImageVisibleByUserY(friendUuid, userUuid, false);\n\t\t\t\t\n\t\t\t\t//image\n\t\t\t\titem.add(new ProfileImageRenderer(\"result-photo\", friendUuid, isProfileImageAllowed, ProfileConstants.PROFILE_IMAGE_THUMBNAIL, true));\n\t\t    \t\t\t    \t\n\t\t    \t//name and link to profile\n\t\t    \tLink profileLink = new Link(\"result-profileLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t\t\tpublic void onClick() {\n\t\t\t\t\t\tsetResponsePage(new ViewProfile(friendUuid));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\tprofileLink.add(new Label(\"result-name\", displayName));\n\t\t    \titem.add(profileLink);\n\t\t    \t\n\t\t    \t\n\t\t    \t//status component\n\t\t\t\tProfileStatusRenderer status = new ProfileStatusRenderer(\"result-status\", userUuid, userUuid, \"friendsListInfoStatusMessage\", \"friendsListInfoStatusDate\");\n\t\t\t\tstatus.setOutputMarkupId(true);\n\t\t\t\titem.add(status);\n\t\t    \t\n\t\t    \t\n\t\t    \t\n\t\t    \t/* ACTIONS */\n\t\t    \t\n\t\t    \t//CONFIRM FRIEND MODAL WINDOW\n\t\t\t\tfinal ModalWindow confirmFriendWindow = new ModalWindow(\"confirmFriendWindow\");\n\t\t\t\tconfirmFriendWindow.setContent(new ConfirmFriend(confirmFriendWindow.getContentId(), confirmFriendWindow, friendActionModel, userUuid, friendUuid)); \n\t\t\t\t\n\t\t\t\t//IGNORE FRIEND MODAL WINDOW\n\t\t\t\tfinal ModalWindow ignoreFriendWindow = new ModalWindow(\"ignoreFriendWindow\");\n\t\t\t\tignoreFriendWindow.setContent(new IgnoreFriend(ignoreFriendWindow.getContentId(), ignoreFriendWindow, friendActionModel, userUuid, friendUuid)); \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t//IGNORE FRIEND LINK\n\t\t    \tfinal AjaxLink ignoreFriendLink = new AjaxLink(\"ignoreFriendLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tignoreFriendWindow.show(target);\n\t\t\t\t\t\ttarget.appendJavascript(\"fixWindowVertical();\"); \n\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tContextImage ignoreFriendIcon = new ContextImage(\"ignoreFriendIcon\",new Model(ProfileConstants.CANCEL_IMG));\n\t\t\t\tignoreFriendLink.add(ignoreFriendIcon);\n\t\t\t\tignoreFriendLink.add(new AttributeModifier(\"title\", true,new ResourceModel(\"link.title.ignorefriend\")));\n\t\t\t\titem.add(ignoreFriendLink);\n\t\t\t\t\n\t\t\t\t//CONFIRM FRIEND LINK\n\t\t    \tfinal AjaxLink confirmFriendLink = new AjaxLink(\"confirmFriendLink\") {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconfirmFriendWindow.show(target);\n\t\t\t\t\t\ttarget.appendJavascript(\"fixWindowVertical();\"); \n\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tContextImage confirmFriendIcon = new ContextImage(\"confirmFriendIcon\",new Model(ProfileConstants.ACCEPT_IMG));\n\t\t\t\tconfirmFriendLink.add(confirmFriendIcon);\n\t\t\t\tconfirmFriendLink.add(new AttributeModifier(\"title\", true,new ResourceModel(\"link.title.confirmfriend\")));\n\t\t\t\titem.add(confirmFriendLink);\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// CONFIRM FRIEND MODAL WINDOW HANDLER \n\t\t\t\tconfirmFriendWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClose(AjaxRequestTarget target){\n\t\t            \tif(friendActionModel.isConfirmed()) { \n\t\t            \t\t\n\t\t            \t\t//decrement number of requests\n\t\t            \t\tnumRequestedFriends--;\n\t\t            \t\t\n\t\t            \t\t//remove friend item from display\n\t\t            \t\ttarget.appendJavascript(\"$('#\" + item.getMarkupId() + \"').slideUp();\");\n\t\t            \t\t\n\t\t            \t\t//update label\n\t\t            \t\ttarget.addComponent(requestedFriendsHeading);\n\t\t            \t\t\n\t\t            \t\t//TODO repaint confirmed friends panel by calling method in MyFriends to repaint it for us\n\t\t            \t\tparent.updateConfirmedFriends(target, userUuid);\n\t\t            \t\t\n\t\t            \t\t//if none left, hide everything\n\t\t            \t\tif(numRequestedFriends==0) {\n\t\t            \t\t\ttarget.appendJavascript(\"$('#\" + requestedFriendsHeading.getMarkupId() + \"').fadeOut();\");\n\t\t            \t\t\ttarget.appendJavascript(\"$('#\" + requestedFriendsContainer.getMarkupId() + \"').fadeOut();\");\n\t\t            \t\t}\n\t\t            \t\t\n\t\t            \t}\n\t\t            }\n\t\t        });\n\t\t\t\titem.add(confirmFriendWindow);\n\t\t\t\t\n\t\t\t\t// IGNORE FRIEND MODAL WINDOW HANDLER \n\t\t\t\tignoreFriendWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\t\t\t\tpublic void onClose(AjaxRequestTarget target){\n\t\t            \tif(friendActionModel.isIgnored()) { \n\t\t            \t\t\n\t\t            \t\t//decrement number of requests\n\t\t            \t\tnumRequestedFriends--;\n\t\t            \t\t\n\t\t            \t\t//remove friend item from display\n\t\t            \t\ttarget.appendJavascript(\"$('#\" + item.getMarkupId() + \"').slideUp();\");\n\t\t            \t\t\n\t\t            \t\t//update label\n\t\t            \t\ttarget.addComponent(requestedFriendsHeading);\n\t\t            \t\t\t\t            \t\t\n\t\t            \t\t//if none left, hide everything\n\t\t            \t\tif(numRequestedFriends==0) {\n\t\t            \t\t\ttarget.appendJavascript(\"$('#\" + requestedFriendsHeading.getMarkupId() + \"').fadeOut();\");\n\t\t            \t\t\ttarget.appendJavascript(\"$('#\" + requestedFriendsContainer.getMarkupId() + \"').fadeOut();\");\n\t\t            \t\t}\n\t\t            \t\t\n\t\t            \t}\n\t\t            }\n\t\t        });\n\t\t\t\titem.add(ignoreFriendWindow);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\titem.setOutputMarkupId(true);\n\t\t\t\t\n\t\t    }\n\t\t\t\n\t\t};\n\t\trequestedFriendsDataView.setOutputMarkupId(true);\n\t\trequestedFriendsContainer.add(requestedFriendsDataView);\n\n\t\t//add results container\n\t\tadd(requestedFriendsContainer);\n\t\t\n\t\t//initially, if no requests, hide everything\n\t\tif(numRequestedFriends == 0) {\n\t\t\tthis.setVisible(false);\n\t\t}\n\t\t\n\t}","commit_id":"98b9612eda4524d67a1d9b436f8f689ca2ab22d0","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public ViewProfile(String userUuid)   {\n\t\t\n\t\tlog.debug(\"ViewProfile()\");\n\n\t\t//setup model to store the actions in the modal windows\n\t\tfinal FriendAction friendActionModel = new FriendAction();\n\t\t\n\t\t//get current user Id\n\t\tString currentUserId = sakaiProxy.getCurrentUserId();\n\t\t\t\t\n\t\t//double check, if somehow got to own ViewPage, redirect to MyProfile\n\t\tif(userUuid.equals(currentUserId)) {\n\t\t\tlog.warn(\"ViewProfile: user \" + userUuid + \" accessed ViewProfile for self. Redirecting...\");\n\t\t\tthrow new RestartResponseException(new MyProfile());\n\t\t}\n\t\t\n\t\t//post view event\n\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_PROFILE_VIEW_OTHER, \"/profile/\"+userUuid, false);\n\t\t\n\t\t//init\n\t\tboolean friend = false;\n\t\tboolean friendRequestToThisPerson = false;\n\t\tboolean friendRequestFromThisPerson = false;\n\n\t\t//friend?\n\t\tfriend = profileLogic.isUserXFriendOfUserY(userUuid, currentUserId);\n\n\t\t//if not friend, has a friend request already been made to this person?\n\t\tif(!friend) {\n\t\t\tfriendRequestToThisPerson = profileLogic.isFriendRequestPending(currentUserId, userUuid);\n\t\t}\n\t\t\n\t\t//if not friend and no friend request to this person, has a friend request been made from this person to the current user?\n\t\tif(!friend && !friendRequestToThisPerson) {\n\t\t\tfriendRequestFromThisPerson = profileLogic.isFriendRequestPending(userUuid, currentUserId);\n\t\t}\n\t\t\n\t\t\n\t\t//is this user allowed to view this person's profile image?\n\t\tboolean isProfileImageAllowed = profileLogic.isUserXProfileImageVisibleByUserY(userUuid, currentUserId, friend);\n\t\t\n\t\t//is this user allowed to view this person's status?\n\t\tboolean isStatusAllowed = profileLogic.isUserXStatusVisibleByUserY(userUuid, currentUserId, friend);\n\t\t\n\t\t\n\t\t/* DEPRECATED via PRFL-24 when privacy was relaxed\n\t\tif(!isProfileAllowed) {\n\t\t\tthrow new ProfileIllegalAccessException(\"User: \" + currentUserId + \" is not allowed to view profile for: \" + userUuid);\n\t\t}\n\t\t*/\n\t\t\n\t\t//holds number of profile containers that are visible\n\t\tint visibleContainerCount = 0;\n\t\t\n\t\t//get SakaiPerson for the person who's profile we are viewing\n\t\tSakaiPerson sakaiPerson = sakaiProxy.getSakaiPerson(userUuid);\n\t\t//if null, they have no profile so just get a prototype\n\t\tif(sakaiPerson == null) {\n\t\t\tlog.info(\"No SakaiPerson for \" + userUuid);\n\t\t\tsakaiPerson = sakaiProxy.getSakaiPersonPrototype();\n\t\t\t//if its still null, throw exception\n\t\t\tif(sakaiPerson == null) {\n\t\t\t\tthrow new ProfilePrototypeNotDefinedException(\"Couldn't create a SakaiPerson prototype for \" + userUuid);\n\t\t\t}\n\t\t} \n\t\t\n\t\t//get some values from SakaiPerson or SakaiProxy if empty\n\t\t//SakaiPerson returns NULL strings if value is not set, not blank ones\n\t\tString userDisplayName = sakaiProxy.getUserDisplayName(userUuid);\n\t\t\n\t\t/* IMAGE */\n\t\tadd(new ProfileImageRenderer(\"photo\", userUuid, isProfileImageAllowed, ProfileConstants.PROFILE_IMAGE_MAIN, true));\n\t\t\n\t\t/*STATUS PANEL */\n\t\t//container\n\t\tWebMarkupContainer statusContainer = new WebMarkupContainer(\"statusContainer\");\n\t\tstatusContainer.setOutputMarkupId(true);\n\t\t\n\t\t//get status\n\t\tprofileStatus = profileLogic.getUserStatus(userUuid);\n\t\t\n\t\t//if no status, initialise\n\t\tif(profileStatus == null) {\n\t\t\tstatusContainer.setVisible(false); //hide status section\n\t\t\tprofileStatus = new ProfileStatus();\n\t\t}\n\t\t\n\t\t//get the message\n\t\tString statusMessage = profileStatus.getMessage();\n\t\tif(StringUtils.isBlank(statusMessage)){\n\t\t\tstatusContainer.setVisible(false);\n\t\t\tstatusMessage = \"\";\n\t\t} \n\t\t\n\t\t//get the formatted date\n\t\tDate statusDate = profileStatus.getDateAdded();\n\t\tString statusDateStr = \"\";\n\t\tif(statusDate == null) {\n\t\t\tstatusContainer.setVisible(false);\n\t\t} else {\n\t\t\t//transform the date\n\t\t\tstatusDateStr = ProfileUtils.convertDateForStatus(statusDate);\n\t\t}\n\t\t\n\t\t//name\n\t\tLabel profileName = new Label(\"profileName\", userDisplayName);\n\t\tadd(profileName);\n\t\t\n\t\t\n\t\t//status\n\t\tLabel statusMessageLabel = new Label(\"statusMessage\", statusMessage);\n\t\tstatusMessageLabel.setOutputMarkupId(true);\n\t\tstatusContainer.add(statusMessageLabel);\n\t\t\n\t\t//status last updated\n\t\tLabel statusDateLabel = new Label(\"statusDate\", statusDateStr);\n\t\tstatusDateLabel.setOutputMarkupId(true);\n\t\tstatusContainer.add(statusDateLabel);\n\t\t\n\t\t//if this person is not allowed to view their status, hide it\n\t\t//TODO move this into a separet method and don't even get the data if they can't view it.\n\t\tif(!isStatusAllowed) {\n\t\t\tstatusContainer.setVisible(false);\n\t\t}\n\t\t\n\t\t//add status container\n\t\tadd(statusContainer);\n\t\t\n\t\t\n\t\t/* BASIC INFO */\n\t\t\n\t\t// privacy settings for basic info\n\t\tboolean isBasicInfoAllowed = profileLogic.isUserXBasicInfoVisibleByUserY(userUuid, currentUserId, friend);\n\n\t\tWebMarkupContainer basicInfoContainer = new WebMarkupContainer(\"mainSectionContainer_basic\");\n\t\tbasicInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//setup info\n\t\tString nickname = sakaiPerson.getNickname();\n\t\tDate dateOfBirth = sakaiPerson.getDateOfBirth();\n\t\tString birthday = \"\";\n\t\tint visibleFieldCount_basic = 0;\n\t\t\n\t\tif(dateOfBirth != null) {\n\t\t\t\n\t\t\tif(profileLogic.isBirthYearVisible(userUuid)) {\n\t\t\t\tbirthday = ProfileUtils.convertDateToString(dateOfBirth, ProfileConstants.DEFAULT_DATE_FORMAT);\n\t\t\t} else {\n\t\t\t\tbirthday = ProfileUtils.convertDateToString(dateOfBirth, ProfileConstants.DEFAULT_DATE_FORMAT_HIDE_YEAR);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//heading\n\t\tbasicInfoContainer.add(new Label(\"mainSectionHeading_basic\", new ResourceModel(\"heading.basic\")));\n\t\t\n\t\t//nickname\n\t\tWebMarkupContainer nicknameContainer = new WebMarkupContainer(\"nicknameContainer\");\n\t\tnicknameContainer.add(new Label(\"nicknameLabel\", new ResourceModel(\"profile.nickname\")));\n\t\tnicknameContainer.add(new Label(\"nickname\", nickname));\n\t\tbasicInfoContainer.add(nicknameContainer);\n\t\tif(StringUtils.isBlank(nickname)) {\n\t\t\tnickname=\"\"; //for the 'add friend' link\n\t\t\tnicknameContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_basic++;\n\t\t}\n\t\t\n\t\t//birthday\n\t\tWebMarkupContainer birthdayContainer = new WebMarkupContainer(\"birthdayContainer\");\n\t\tbirthdayContainer.add(new Label(\"birthdayLabel\", new ResourceModel(\"profile.birthday\")));\n\t\tbirthdayContainer.add(new Label(\"birthday\", birthday));\n\t\tbasicInfoContainer.add(birthdayContainer);\n\t\tif(StringUtils.isBlank(birthday)) {\n\t\t\tbirthdayContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_basic++;\n\t\t}\n\t\t\n\t\tadd(basicInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_basic == 0 || !isBasicInfoAllowed) {\n\t\t\tbasicInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/* CONTACT INFO */\n\t\t\n\t\t// privacy settings for contact info\n\t\tboolean isContactInfoAllowed = profileLogic.isUserXContactInfoVisibleByUserY(userUuid, currentUserId, friend);\n\n\t\tWebMarkupContainer contactInfoContainer = new WebMarkupContainer(\"mainSectionContainer_contact\");\n\t\tcontactInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//get info\n\t\tString email = sakaiProxy.getUserEmail(userUuid); //must come from SakaiProxy\n\t\tString homepage = sakaiPerson.getLabeledURI();\n\t\tString workphone = sakaiPerson.getTelephoneNumber();\n\t\tString homephone = sakaiPerson.getHomePhone();\n\t\tString mobilephone = sakaiPerson.getMobile();\n\t\tString facsimile = sakaiPerson.getFacsimileTelephoneNumber();\n\t\t\n\t\tint visibleFieldCount_contact = 0;\n\t\t\n\t\t//heading\n\t\tcontactInfoContainer.add(new Label(\"mainSectionHeading_contact\", new ResourceModel(\"heading.contact\")));\n\t\t\n\t\t//email\n\t\tWebMarkupContainer emailContainer = new WebMarkupContainer(\"emailContainer\");\n\t\temailContainer.add(new Label(\"emailLabel\", new ResourceModel(\"profile.email\")));\n\t\temailContainer.add(new Label(\"email\", email));\n\t\tcontactInfoContainer.add(emailContainer);\n\t\tif(StringUtils.isBlank(email)) {\n\t\t\temailContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//homepage\n\t\tWebMarkupContainer homepageContainer = new WebMarkupContainer(\"homepageContainer\");\n\t\thomepageContainer.add(new Label(\"homepageLabel\", new ResourceModel(\"profile.homepage\")));\n\t\thomepageContainer.add(new Label(\"homepage\", homepage));\n\t\tcontactInfoContainer.add(homepageContainer);\n\t\tif(StringUtils.isBlank(homepage)) {\n\t\t\thomepageContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//work phone\n\t\tWebMarkupContainer workphoneContainer = new WebMarkupContainer(\"workphoneContainer\");\n\t\tworkphoneContainer.add(new Label(\"workphoneLabel\", new ResourceModel(\"profile.phone.work\")));\n\t\tworkphoneContainer.add(new Label(\"workphone\", workphone));\n\t\tcontactInfoContainer.add(workphoneContainer);\n\t\tif(StringUtils.isBlank(workphone)) {\n\t\t\tworkphoneContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//home phone\n\t\tWebMarkupContainer homephoneContainer = new WebMarkupContainer(\"homephoneContainer\");\n\t\thomephoneContainer.add(new Label(\"homephoneLabel\", new ResourceModel(\"profile.phone.home\")));\n\t\thomephoneContainer.add(new Label(\"homephone\", homephone));\n\t\tcontactInfoContainer.add(homephoneContainer);\n\t\tif(StringUtils.isBlank(homephone)) {\n\t\t\thomephoneContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//mobile phone\n\t\tWebMarkupContainer mobilephoneContainer = new WebMarkupContainer(\"mobilephoneContainer\");\n\t\tmobilephoneContainer.add(new Label(\"mobilephoneLabel\", new ResourceModel(\"profile.phone.mobile\")));\n\t\tmobilephoneContainer.add(new Label(\"mobilephone\", mobilephone));\n\t\tcontactInfoContainer.add(mobilephoneContainer);\n\t\tif(StringUtils.isBlank(mobilephone)) {\n\t\t\tmobilephoneContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//facsimile\n\t\tWebMarkupContainer facsimileContainer = new WebMarkupContainer(\"facsimileContainer\");\n\t\tfacsimileContainer.add(new Label(\"facsimileLabel\", new ResourceModel(\"profile.phone.facsimile\")));\n\t\tfacsimileContainer.add(new Label(\"facsimile\", facsimile));\n\t\tcontactInfoContainer.add(facsimileContainer);\n\t\tif(StringUtils.isBlank(facsimile)) {\n\t\t\tfacsimileContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\tadd(contactInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_contact == 0 || !isContactInfoAllowed) {\n\t\t\tcontactInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t\n\t\t/* ACADEMIC INFO */\n\t\t\n\t\t// privacy settings for contact info\n\t\t//boolean isAcademicInfoAllowed = profile.isUserXContactInfoVisibleByUserY(userUuid, currentUserId, friend);\n\t\tboolean isAcademicInfoAllowed = true;\n\t\t\n\t\tWebMarkupContainer academicInfoContainer = new WebMarkupContainer(\"mainSectionContainer_academic\");\n\t\tacademicInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//get info\n\t\tString department = sakaiPerson.getOrganizationalUnit();\n\t\tString position = sakaiPerson.getTitle();\n\t\tString school = sakaiPerson.getCampus();\n\t\tString room = sakaiPerson.getRoomNumber();\n\t\tString course = sakaiPerson.getEducationCourse();\n\t\tString subjects = sakaiPerson.getEducationSubjects();\n\t\t\n\t\tint visibleFieldCount_academic = 0;\n\t\t\n\t\t//heading\n\t\tacademicInfoContainer.add(new Label(\"mainSectionHeading_academic\", new ResourceModel(\"heading.academic\")));\n\t\t\n\t\t//department\n\t\tWebMarkupContainer departmentContainer = new WebMarkupContainer(\"departmentContainer\");\n\t\tdepartmentContainer.add(new Label(\"departmentLabel\", new ResourceModel(\"profile.department\")));\n\t\tdepartmentContainer.add(new Label(\"department\", department));\n\t\tacademicInfoContainer.add(departmentContainer);\n\t\tif(StringUtils.isBlank(department)) {\n\t\t\tdepartmentContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//position\n\t\tWebMarkupContainer positionContainer = new WebMarkupContainer(\"positionContainer\");\n\t\tpositionContainer.add(new Label(\"positionLabel\", new ResourceModel(\"profile.position\")));\n\t\tpositionContainer.add(new Label(\"position\", position));\n\t\tacademicInfoContainer.add(positionContainer);\n\t\tif(StringUtils.isBlank(position)) {\n\t\t\tpositionContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//school\n\t\tWebMarkupContainer schoolContainer = new WebMarkupContainer(\"schoolContainer\");\n\t\tschoolContainer.add(new Label(\"schoolLabel\", new ResourceModel(\"profile.school\")));\n\t\tschoolContainer.add(new Label(\"school\", school));\n\t\tacademicInfoContainer.add(schoolContainer);\n\t\tif(StringUtils.isBlank(school)) {\n\t\t\tschoolContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//room\n\t\tWebMarkupContainer roomContainer = new WebMarkupContainer(\"roomContainer\");\n\t\troomContainer.add(new Label(\"roomLabel\", new ResourceModel(\"profile.room\")));\n\t\troomContainer.add(new Label(\"room\", room));\n\t\tacademicInfoContainer.add(roomContainer);\n\t\tif(StringUtils.isBlank(room)) {\n\t\t\troomContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//course\n\t\tWebMarkupContainer courseContainer = new WebMarkupContainer(\"courseContainer\");\n\t\tcourseContainer.add(new Label(\"courseLabel\", new ResourceModel(\"profile.course\")));\n\t\tcourseContainer.add(new Label(\"course\", course));\n\t\tacademicInfoContainer.add(courseContainer);\n\t\tif(StringUtils.isBlank(course)) {\n\t\t\tcourseContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//subjects\n\t\tWebMarkupContainer subjectsContainer = new WebMarkupContainer(\"subjectsContainer\");\n\t\tsubjectsContainer.add(new Label(\"subjectsLabel\", new ResourceModel(\"profile.subjects\")));\n\t\tsubjectsContainer.add(new Label(\"subjects\", subjects));\n\t\tacademicInfoContainer.add(subjectsContainer);\n\t\tif(StringUtils.isBlank(subjects)) {\n\t\t\tsubjectsContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\tadd(academicInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_academic == 0 || !isAcademicInfoAllowed) {\n\t\t\tacademicInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/* PERSONAL INFO */\n\t\t\n\t\t// privacy settings for basic info\n\t\tboolean isPersonalInfoAllowed = profileLogic.isUserXPersonalInfoVisibleByUserY(userUuid, currentUserId, friend);\n\n\t\tWebMarkupContainer personalInfoContainer = new WebMarkupContainer(\"mainSectionContainer_personal\");\n\t\tpersonalInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//setup info\n\t\tString favouriteBooks = sakaiPerson.getFavouriteBooks();\n\t\tString favouriteTvShows = sakaiPerson.getFavouriteTvShows();\n\t\tString favouriteMovies = sakaiPerson.getFavouriteMovies();\n\t\tString favouriteQuotes = sakaiPerson.getFavouriteQuotes();\n\t\tString otherInformation = sakaiPerson.getNotes();\n\t\tint visibleFieldCount_personal = 0;\n\t\t\n\t\t//heading\n\t\tpersonalInfoContainer.add(new Label(\"mainSectionHeading_personal\", new ResourceModel(\"heading.interests\")));\n\t\t\n\t\t//favourite books\n\t\tWebMarkupContainer booksContainer = new WebMarkupContainer(\"booksContainer\");\n\t\tbooksContainer.add(new Label(\"booksLabel\", new ResourceModel(\"profile.favourite.books\")));\n\t\tbooksContainer.add(new Label(\"favouriteBooks\", favouriteBooks));\n\t\tpersonalInfoContainer.add(booksContainer);\n\t\tif(StringUtils.isBlank(favouriteBooks)) {\n\t\t\tbooksContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite tv shows\n\t\tWebMarkupContainer tvContainer = new WebMarkupContainer(\"tvContainer\");\n\t\ttvContainer.add(new Label(\"tvLabel\", new ResourceModel(\"profile.favourite.tv\")));\n\t\ttvContainer.add(new Label(\"favouriteTvShows\", favouriteTvShows));\n\t\tpersonalInfoContainer.add(tvContainer);\n\t\tif(StringUtils.isBlank(favouriteTvShows)) {\n\t\t\ttvContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite movies\n\t\tWebMarkupContainer moviesContainer = new WebMarkupContainer(\"moviesContainer\");\n\t\tmoviesContainer.add(new Label(\"moviesLabel\", new ResourceModel(\"profile.favourite.movies\")));\n\t\tmoviesContainer.add(new Label(\"favouriteMovies\", favouriteMovies));\n\t\tpersonalInfoContainer.add(moviesContainer);\n\t\tif(StringUtils.isBlank(favouriteMovies)) {\n\t\t\tmoviesContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite quotes\n\t\tWebMarkupContainer quotesContainer = new WebMarkupContainer(\"quotesContainer\");\n\t\tquotesContainer.add(new Label(\"quotesLabel\", new ResourceModel(\"profile.favourite.quotes\")));\n\t\tquotesContainer.add(new Label(\"favouriteQuotes\", favouriteQuotes));\n\t\tpersonalInfoContainer.add(quotesContainer);\n\t\tif(StringUtils.isBlank(favouriteQuotes)) {\n\t\t\tquotesContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite quotes\n\t\tWebMarkupContainer otherContainer = new WebMarkupContainer(\"otherContainer\");\n\t\totherContainer.add(new Label(\"otherLabel\", new ResourceModel(\"profile.other\")));\n\t\totherContainer.add(new Label(\"otherInformation\", otherInformation));\n\t\tpersonalInfoContainer.add(otherContainer);\n\t\tif(StringUtils.isBlank(otherInformation)) {\n\t\t\totherContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t\n\t\tadd(personalInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_personal == 0 || !isPersonalInfoAllowed) {\n\t\t\tpersonalInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/* NO INFO VISIBLE MESSAGE (hide if some visible) */\n\t\tLabel noContainersVisible = new Label (\"noContainersVisible\", new ResourceModel(\"text.view.profile.nothing\"));\n\t\tnoContainersVisible.setOutputMarkupId(true);\n\t\tadd(noContainersVisible);\n\t\t\n\t\tif(visibleContainerCount > 0) {\n\t\t\tnoContainersVisible.setVisible(false);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/* SIDELINKS */\n\t\tWebMarkupContainer sideLinks = new WebMarkupContainer(\"sideLinks\");\n\t\t\n\t\t//ADD FRIEND MODAL WINDOW\n\t\tfinal ModalWindow addFriendWindow = new ModalWindow(\"addFriendWindow\");\n\n\t\t//FRIEND LINK/STATUS\n\t\tfinal AjaxLink addFriendLink = new AjaxLink(\"addFriendLink\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n    \t\t\taddFriendWindow.show(target);\n\t\t\t}\n\t\t};\n\t\t\n\t\tfinal Label addFriendLabel = new Label(\"addFriendLabel\");\n\t\taddFriendLink.add(addFriendLabel);\n\t\t\n\t\t//setup link/label and windows\n\t\tif(friend) {\n\t\t\taddFriendLabel.setModel(new ResourceModel(\"text.friend.confirmed\"));\n    \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\taddFriendLink.setEnabled(false);\n\t\t} else if (friendRequestToThisPerson) {\n\t\t\taddFriendLabel.setModel(new ResourceModel(\"text.friend.requested\"));\n    \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\taddFriendLink.setEnabled(false);\n\t\t} else if (friendRequestFromThisPerson) {\n\t\t\t//TODO (confirm pending friend request link)\n\t\t\t//could be done by setting the content off the addFriendWindow.\n\t\t\t//will need to rename some links to make more generic and set the onClick and setContent in here for link and window\n\t\t\taddFriendLabel.setModel(new ResourceModel(\"text.friend.pending\"));\n    \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\taddFriendLink.setEnabled(false);\n\t\t}  else {\n\t\t\taddFriendLabel.setModel(new StringResourceModel(\"link.friend.add.name\", null, new Object[]{ nickname } ));\n\t\t\taddFriendWindow.setContent(new AddFriend(addFriendWindow.getContentId(), addFriendWindow, friendActionModel, currentUserId, userUuid)); \n\t\t}\n\t\tsideLinks.add(addFriendLink);\n\t\t\n\t\t\n\t\t//ADD FRIEND MODAL WINDOW HANDLER \n\t\taddFriendWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClose(AjaxRequestTarget target){\n            \tif(friendActionModel.isRequested()) { \n            \t\t//friend was successfully requested, update label and link\n            \t\taddFriendLabel.setModel(new ResourceModel(\"text.friend.requested\"));\n            \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n            \t\taddFriendLink.setEnabled(false);\n            \t\ttarget.addComponent(addFriendLink);\n            \t}\n            }\n        });\n\t\t\n\t\tadd(addFriendWindow);\n\t\t\n\t\tadd(sideLinks);\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/* FRIEND FEED PANEL */\n\t\t//friends feed panel\n\t\tboolean isFriendsListVisible = profileLogic.isUserXFriendsListVisibleByUserY(userUuid, currentUserId, friend);\n\t\t\n\t\tPanel friendsFeed;\n\t\tif(isFriendsListVisible) {\n\t\t\tfriendsFeed = new FriendsFeed(\"friendsFeed\", userUuid, currentUserId);\n\t\t} else {\n\t\t\tfriendsFeed = new EmptyPanel(\"friendsFeed\");\n\t\t\tfriendsFeed.setVisible(false);\n\t\t}\n\t\tfriendsFeed.setOutputMarkupId(true);\n\t\t\n\t\tadd(friendsFeed);\n\t\n\t}","id":27652,"modified_method":"public ViewProfile(String userUuid)   {\n\t\t\n\t\tlog.debug(\"ViewProfile()\");\n\n\t\t//setup model to store the actions in the modal windows\n\t\tfinal FriendAction friendActionModel = new FriendAction();\n\t\t\n\t\t//get current user Id\n\t\tString currentUserId = sakaiProxy.getCurrentUserId();\n\t\t\t\t\n\t\t//double check, if somehow got to own ViewPage, redirect to MyProfile\n\t\tif(userUuid.equals(currentUserId)) {\n\t\t\tlog.warn(\"ViewProfile: user \" + userUuid + \" accessed ViewProfile for self. Redirecting...\");\n\t\t\tthrow new RestartResponseException(new MyProfile());\n\t\t}\n\t\t\n\t\t//post view event\n\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_PROFILE_VIEW_OTHER, \"/profile/\"+userUuid, false);\n\t\t\n\t\t//init\n\t\tboolean friend = false;\n\t\tboolean friendRequestToThisPerson = false;\n\t\tboolean friendRequestFromThisPerson = false;\n\n\t\t//friend?\n\t\tfriend = profileLogic.isUserXFriendOfUserY(userUuid, currentUserId);\n\n\t\t//if not friend, has a friend request already been made to this person?\n\t\tif(!friend) {\n\t\t\tfriendRequestToThisPerson = profileLogic.isFriendRequestPending(currentUserId, userUuid);\n\t\t}\n\t\t\n\t\t//if not friend and no friend request to this person, has a friend request been made from this person to the current user?\n\t\tif(!friend && !friendRequestToThisPerson) {\n\t\t\tfriendRequestFromThisPerson = profileLogic.isFriendRequestPending(userUuid, currentUserId);\n\t\t}\n\t\t\n\t\t\n\t\t//is this user allowed to view this person's profile image?\n\t\tboolean isProfileImageAllowed = profileLogic.isUserXProfileImageVisibleByUserY(userUuid, currentUserId, friend);\n\t\t\n\t\t//is this user allowed to view this person's status?\n\t\tboolean isStatusAllowed = profileLogic.isUserXStatusVisibleByUserY(userUuid, currentUserId, friend);\n\t\t\n\t\t\n\t\t/* DEPRECATED via PRFL-24 when privacy was relaxed\n\t\tif(!isProfileAllowed) {\n\t\t\tthrow new ProfileIllegalAccessException(\"User: \" + currentUserId + \" is not allowed to view profile for: \" + userUuid);\n\t\t}\n\t\t*/\n\t\t\n\t\t//holds number of profile containers that are visible\n\t\tint visibleContainerCount = 0;\n\t\t\n\t\t//get SakaiPerson for the person who's profile we are viewing\n\t\tSakaiPerson sakaiPerson = sakaiProxy.getSakaiPerson(userUuid);\n\t\t//if null, they have no profile so just get a prototype\n\t\tif(sakaiPerson == null) {\n\t\t\tlog.info(\"No SakaiPerson for \" + userUuid);\n\t\t\tsakaiPerson = sakaiProxy.getSakaiPersonPrototype();\n\t\t\t//if its still null, throw exception\n\t\t\tif(sakaiPerson == null) {\n\t\t\t\tthrow new ProfilePrototypeNotDefinedException(\"Couldn't create a SakaiPerson prototype for \" + userUuid);\n\t\t\t}\n\t\t} \n\t\t\n\t\t//get some values from SakaiPerson or SakaiProxy if empty\n\t\t//SakaiPerson returns NULL strings if value is not set, not blank ones\n\t\tString userDisplayName = sakaiProxy.getUserDisplayName(userUuid);\n\t\t\n\t\t/* IMAGE */\n\t\tadd(new ProfileImageRenderer(\"photo\", userUuid, isProfileImageAllowed, ProfileConstants.PROFILE_IMAGE_MAIN, true));\n\t\t\n\t\t/* NAME */\n\t\tLabel profileName = new Label(\"profileName\", userDisplayName);\n\t\tadd(profileName);\n\t\t\n\t\t/*STATUS PANEL */\n\t\tProfileStatusRenderer status = new ProfileStatusRenderer(\"status\", userUuid, currentUserId, null, \"tiny\");\n\t\tstatus.setOutputMarkupId(true);\n\t\tadd(status);\n\t\t\n\t\t\n\t\t/* BASIC INFO */\n\t\t\n\t\t// privacy settings for basic info\n\t\tboolean isBasicInfoAllowed = profileLogic.isUserXBasicInfoVisibleByUserY(userUuid, currentUserId, friend);\n\n\t\tWebMarkupContainer basicInfoContainer = new WebMarkupContainer(\"mainSectionContainer_basic\");\n\t\tbasicInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//setup info\n\t\tString nickname = sakaiPerson.getNickname();\n\t\tDate dateOfBirth = sakaiPerson.getDateOfBirth();\n\t\tString birthday = \"\";\n\t\tint visibleFieldCount_basic = 0;\n\t\t\n\t\tif(dateOfBirth != null) {\n\t\t\t\n\t\t\tif(profileLogic.isBirthYearVisible(userUuid)) {\n\t\t\t\tbirthday = ProfileUtils.convertDateToString(dateOfBirth, ProfileConstants.DEFAULT_DATE_FORMAT);\n\t\t\t} else {\n\t\t\t\tbirthday = ProfileUtils.convertDateToString(dateOfBirth, ProfileConstants.DEFAULT_DATE_FORMAT_HIDE_YEAR);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//heading\n\t\tbasicInfoContainer.add(new Label(\"mainSectionHeading_basic\", new ResourceModel(\"heading.basic\")));\n\t\t\n\t\t//nickname\n\t\tWebMarkupContainer nicknameContainer = new WebMarkupContainer(\"nicknameContainer\");\n\t\tnicknameContainer.add(new Label(\"nicknameLabel\", new ResourceModel(\"profile.nickname\")));\n\t\tnicknameContainer.add(new Label(\"nickname\", nickname));\n\t\tbasicInfoContainer.add(nicknameContainer);\n\t\tif(StringUtils.isBlank(nickname)) {\n\t\t\tnickname=\"\"; //for the 'add friend' link\n\t\t\tnicknameContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_basic++;\n\t\t}\n\t\t\n\t\t//birthday\n\t\tWebMarkupContainer birthdayContainer = new WebMarkupContainer(\"birthdayContainer\");\n\t\tbirthdayContainer.add(new Label(\"birthdayLabel\", new ResourceModel(\"profile.birthday\")));\n\t\tbirthdayContainer.add(new Label(\"birthday\", birthday));\n\t\tbasicInfoContainer.add(birthdayContainer);\n\t\tif(StringUtils.isBlank(birthday)) {\n\t\t\tbirthdayContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_basic++;\n\t\t}\n\t\t\n\t\tadd(basicInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_basic == 0 || !isBasicInfoAllowed) {\n\t\t\tbasicInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/* CONTACT INFO */\n\t\t\n\t\t// privacy settings for contact info\n\t\tboolean isContactInfoAllowed = profileLogic.isUserXContactInfoVisibleByUserY(userUuid, currentUserId, friend);\n\n\t\tWebMarkupContainer contactInfoContainer = new WebMarkupContainer(\"mainSectionContainer_contact\");\n\t\tcontactInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//get info\n\t\tString email = sakaiProxy.getUserEmail(userUuid); //must come from SakaiProxy\n\t\tString homepage = sakaiPerson.getLabeledURI();\n\t\tString workphone = sakaiPerson.getTelephoneNumber();\n\t\tString homephone = sakaiPerson.getHomePhone();\n\t\tString mobilephone = sakaiPerson.getMobile();\n\t\tString facsimile = sakaiPerson.getFacsimileTelephoneNumber();\n\t\t\n\t\tint visibleFieldCount_contact = 0;\n\t\t\n\t\t//heading\n\t\tcontactInfoContainer.add(new Label(\"mainSectionHeading_contact\", new ResourceModel(\"heading.contact\")));\n\t\t\n\t\t//email\n\t\tWebMarkupContainer emailContainer = new WebMarkupContainer(\"emailContainer\");\n\t\temailContainer.add(new Label(\"emailLabel\", new ResourceModel(\"profile.email\")));\n\t\temailContainer.add(new Label(\"email\", email));\n\t\tcontactInfoContainer.add(emailContainer);\n\t\tif(StringUtils.isBlank(email)) {\n\t\t\temailContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//homepage\n\t\tWebMarkupContainer homepageContainer = new WebMarkupContainer(\"homepageContainer\");\n\t\thomepageContainer.add(new Label(\"homepageLabel\", new ResourceModel(\"profile.homepage\")));\n\t\thomepageContainer.add(new Label(\"homepage\", homepage));\n\t\tcontactInfoContainer.add(homepageContainer);\n\t\tif(StringUtils.isBlank(homepage)) {\n\t\t\thomepageContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//work phone\n\t\tWebMarkupContainer workphoneContainer = new WebMarkupContainer(\"workphoneContainer\");\n\t\tworkphoneContainer.add(new Label(\"workphoneLabel\", new ResourceModel(\"profile.phone.work\")));\n\t\tworkphoneContainer.add(new Label(\"workphone\", workphone));\n\t\tcontactInfoContainer.add(workphoneContainer);\n\t\tif(StringUtils.isBlank(workphone)) {\n\t\t\tworkphoneContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//home phone\n\t\tWebMarkupContainer homephoneContainer = new WebMarkupContainer(\"homephoneContainer\");\n\t\thomephoneContainer.add(new Label(\"homephoneLabel\", new ResourceModel(\"profile.phone.home\")));\n\t\thomephoneContainer.add(new Label(\"homephone\", homephone));\n\t\tcontactInfoContainer.add(homephoneContainer);\n\t\tif(StringUtils.isBlank(homephone)) {\n\t\t\thomephoneContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//mobile phone\n\t\tWebMarkupContainer mobilephoneContainer = new WebMarkupContainer(\"mobilephoneContainer\");\n\t\tmobilephoneContainer.add(new Label(\"mobilephoneLabel\", new ResourceModel(\"profile.phone.mobile\")));\n\t\tmobilephoneContainer.add(new Label(\"mobilephone\", mobilephone));\n\t\tcontactInfoContainer.add(mobilephoneContainer);\n\t\tif(StringUtils.isBlank(mobilephone)) {\n\t\t\tmobilephoneContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//facsimile\n\t\tWebMarkupContainer facsimileContainer = new WebMarkupContainer(\"facsimileContainer\");\n\t\tfacsimileContainer.add(new Label(\"facsimileLabel\", new ResourceModel(\"profile.phone.facsimile\")));\n\t\tfacsimileContainer.add(new Label(\"facsimile\", facsimile));\n\t\tcontactInfoContainer.add(facsimileContainer);\n\t\tif(StringUtils.isBlank(facsimile)) {\n\t\t\tfacsimileContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\tadd(contactInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_contact == 0 || !isContactInfoAllowed) {\n\t\t\tcontactInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t\n\t\t/* ACADEMIC INFO */\n\t\t\n\t\t// privacy settings for contact info\n\t\t//boolean isAcademicInfoAllowed = profile.isUserXContactInfoVisibleByUserY(userUuid, currentUserId, friend);\n\t\tboolean isAcademicInfoAllowed = true;\n\t\t\n\t\tWebMarkupContainer academicInfoContainer = new WebMarkupContainer(\"mainSectionContainer_academic\");\n\t\tacademicInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//get info\n\t\tString department = sakaiPerson.getOrganizationalUnit();\n\t\tString position = sakaiPerson.getTitle();\n\t\tString school = sakaiPerson.getCampus();\n\t\tString room = sakaiPerson.getRoomNumber();\n\t\tString course = sakaiPerson.getEducationCourse();\n\t\tString subjects = sakaiPerson.getEducationSubjects();\n\t\t\n\t\tint visibleFieldCount_academic = 0;\n\t\t\n\t\t//heading\n\t\tacademicInfoContainer.add(new Label(\"mainSectionHeading_academic\", new ResourceModel(\"heading.academic\")));\n\t\t\n\t\t//department\n\t\tWebMarkupContainer departmentContainer = new WebMarkupContainer(\"departmentContainer\");\n\t\tdepartmentContainer.add(new Label(\"departmentLabel\", new ResourceModel(\"profile.department\")));\n\t\tdepartmentContainer.add(new Label(\"department\", department));\n\t\tacademicInfoContainer.add(departmentContainer);\n\t\tif(StringUtils.isBlank(department)) {\n\t\t\tdepartmentContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//position\n\t\tWebMarkupContainer positionContainer = new WebMarkupContainer(\"positionContainer\");\n\t\tpositionContainer.add(new Label(\"positionLabel\", new ResourceModel(\"profile.position\")));\n\t\tpositionContainer.add(new Label(\"position\", position));\n\t\tacademicInfoContainer.add(positionContainer);\n\t\tif(StringUtils.isBlank(position)) {\n\t\t\tpositionContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//school\n\t\tWebMarkupContainer schoolContainer = new WebMarkupContainer(\"schoolContainer\");\n\t\tschoolContainer.add(new Label(\"schoolLabel\", new ResourceModel(\"profile.school\")));\n\t\tschoolContainer.add(new Label(\"school\", school));\n\t\tacademicInfoContainer.add(schoolContainer);\n\t\tif(StringUtils.isBlank(school)) {\n\t\t\tschoolContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//room\n\t\tWebMarkupContainer roomContainer = new WebMarkupContainer(\"roomContainer\");\n\t\troomContainer.add(new Label(\"roomLabel\", new ResourceModel(\"profile.room\")));\n\t\troomContainer.add(new Label(\"room\", room));\n\t\tacademicInfoContainer.add(roomContainer);\n\t\tif(StringUtils.isBlank(room)) {\n\t\t\troomContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//course\n\t\tWebMarkupContainer courseContainer = new WebMarkupContainer(\"courseContainer\");\n\t\tcourseContainer.add(new Label(\"courseLabel\", new ResourceModel(\"profile.course\")));\n\t\tcourseContainer.add(new Label(\"course\", course));\n\t\tacademicInfoContainer.add(courseContainer);\n\t\tif(StringUtils.isBlank(course)) {\n\t\t\tcourseContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//subjects\n\t\tWebMarkupContainer subjectsContainer = new WebMarkupContainer(\"subjectsContainer\");\n\t\tsubjectsContainer.add(new Label(\"subjectsLabel\", new ResourceModel(\"profile.subjects\")));\n\t\tsubjectsContainer.add(new Label(\"subjects\", subjects));\n\t\tacademicInfoContainer.add(subjectsContainer);\n\t\tif(StringUtils.isBlank(subjects)) {\n\t\t\tsubjectsContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\tadd(academicInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_academic == 0 || !isAcademicInfoAllowed) {\n\t\t\tacademicInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/* PERSONAL INFO */\n\t\t\n\t\t// privacy settings for basic info\n\t\tboolean isPersonalInfoAllowed = profileLogic.isUserXPersonalInfoVisibleByUserY(userUuid, currentUserId, friend);\n\n\t\tWebMarkupContainer personalInfoContainer = new WebMarkupContainer(\"mainSectionContainer_personal\");\n\t\tpersonalInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//setup info\n\t\tString favouriteBooks = sakaiPerson.getFavouriteBooks();\n\t\tString favouriteTvShows = sakaiPerson.getFavouriteTvShows();\n\t\tString favouriteMovies = sakaiPerson.getFavouriteMovies();\n\t\tString favouriteQuotes = sakaiPerson.getFavouriteQuotes();\n\t\tString otherInformation = sakaiPerson.getNotes();\n\t\tint visibleFieldCount_personal = 0;\n\t\t\n\t\t//heading\n\t\tpersonalInfoContainer.add(new Label(\"mainSectionHeading_personal\", new ResourceModel(\"heading.interests\")));\n\t\t\n\t\t//favourite books\n\t\tWebMarkupContainer booksContainer = new WebMarkupContainer(\"booksContainer\");\n\t\tbooksContainer.add(new Label(\"booksLabel\", new ResourceModel(\"profile.favourite.books\")));\n\t\tbooksContainer.add(new Label(\"favouriteBooks\", favouriteBooks));\n\t\tpersonalInfoContainer.add(booksContainer);\n\t\tif(StringUtils.isBlank(favouriteBooks)) {\n\t\t\tbooksContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite tv shows\n\t\tWebMarkupContainer tvContainer = new WebMarkupContainer(\"tvContainer\");\n\t\ttvContainer.add(new Label(\"tvLabel\", new ResourceModel(\"profile.favourite.tv\")));\n\t\ttvContainer.add(new Label(\"favouriteTvShows\", favouriteTvShows));\n\t\tpersonalInfoContainer.add(tvContainer);\n\t\tif(StringUtils.isBlank(favouriteTvShows)) {\n\t\t\ttvContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite movies\n\t\tWebMarkupContainer moviesContainer = new WebMarkupContainer(\"moviesContainer\");\n\t\tmoviesContainer.add(new Label(\"moviesLabel\", new ResourceModel(\"profile.favourite.movies\")));\n\t\tmoviesContainer.add(new Label(\"favouriteMovies\", favouriteMovies));\n\t\tpersonalInfoContainer.add(moviesContainer);\n\t\tif(StringUtils.isBlank(favouriteMovies)) {\n\t\t\tmoviesContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite quotes\n\t\tWebMarkupContainer quotesContainer = new WebMarkupContainer(\"quotesContainer\");\n\t\tquotesContainer.add(new Label(\"quotesLabel\", new ResourceModel(\"profile.favourite.quotes\")));\n\t\tquotesContainer.add(new Label(\"favouriteQuotes\", favouriteQuotes));\n\t\tpersonalInfoContainer.add(quotesContainer);\n\t\tif(StringUtils.isBlank(favouriteQuotes)) {\n\t\t\tquotesContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite quotes\n\t\tWebMarkupContainer otherContainer = new WebMarkupContainer(\"otherContainer\");\n\t\totherContainer.add(new Label(\"otherLabel\", new ResourceModel(\"profile.other\")));\n\t\totherContainer.add(new Label(\"otherInformation\", otherInformation));\n\t\tpersonalInfoContainer.add(otherContainer);\n\t\tif(StringUtils.isBlank(otherInformation)) {\n\t\t\totherContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t\n\t\tadd(personalInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_personal == 0 || !isPersonalInfoAllowed) {\n\t\t\tpersonalInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/* NO INFO VISIBLE MESSAGE (hide if some visible) */\n\t\tLabel noContainersVisible = new Label (\"noContainersVisible\", new ResourceModel(\"text.view.profile.nothing\"));\n\t\tnoContainersVisible.setOutputMarkupId(true);\n\t\tadd(noContainersVisible);\n\t\t\n\t\tif(visibleContainerCount > 0) {\n\t\t\tnoContainersVisible.setVisible(false);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/* SIDELINKS */\n\t\tWebMarkupContainer sideLinks = new WebMarkupContainer(\"sideLinks\");\n\t\t\n\t\t//ADD FRIEND MODAL WINDOW\n\t\tfinal ModalWindow addFriendWindow = new ModalWindow(\"addFriendWindow\");\n\n\t\t//FRIEND LINK/STATUS\n\t\tfinal AjaxLink addFriendLink = new AjaxLink(\"addFriendLink\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n    \t\t\taddFriendWindow.show(target);\n\t\t\t}\n\t\t};\n\t\t\n\t\tfinal Label addFriendLabel = new Label(\"addFriendLabel\");\n\t\taddFriendLink.add(addFriendLabel);\n\t\t\n\t\t//setup link/label and windows\n\t\tif(friend) {\n\t\t\taddFriendLabel.setModel(new ResourceModel(\"text.friend.confirmed\"));\n    \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\taddFriendLink.setEnabled(false);\n\t\t} else if (friendRequestToThisPerson) {\n\t\t\taddFriendLabel.setModel(new ResourceModel(\"text.friend.requested\"));\n    \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\taddFriendLink.setEnabled(false);\n\t\t} else if (friendRequestFromThisPerson) {\n\t\t\t//TODO (confirm pending friend request link)\n\t\t\t//could be done by setting the content off the addFriendWindow.\n\t\t\t//will need to rename some links to make more generic and set the onClick and setContent in here for link and window\n\t\t\taddFriendLabel.setModel(new ResourceModel(\"text.friend.pending\"));\n    \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n\t\t\taddFriendLink.setEnabled(false);\n\t\t}  else {\n\t\t\taddFriendLabel.setModel(new StringResourceModel(\"link.friend.add.name\", null, new Object[]{ nickname } ));\n\t\t\taddFriendWindow.setContent(new AddFriend(addFriendWindow.getContentId(), addFriendWindow, friendActionModel, currentUserId, userUuid)); \n\t\t}\n\t\tsideLinks.add(addFriendLink);\n\t\t\n\t\t\n\t\t//ADD FRIEND MODAL WINDOW HANDLER \n\t\taddFriendWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClose(AjaxRequestTarget target){\n            \tif(friendActionModel.isRequested()) { \n            \t\t//friend was successfully requested, update label and link\n            \t\taddFriendLabel.setModel(new ResourceModel(\"text.friend.requested\"));\n            \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model(\"instruction\")));\n            \t\taddFriendLink.setEnabled(false);\n            \t\ttarget.addComponent(addFriendLink);\n            \t}\n            }\n        });\n\t\t\n\t\tadd(addFriendWindow);\n\t\t\n\t\tadd(sideLinks);\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/* FRIEND FEED PANEL */\n\t\t//friends feed panel\n\t\tboolean isFriendsListVisible = profileLogic.isUserXFriendsListVisibleByUserY(userUuid, currentUserId, friend);\n\t\t\n\t\tPanel friendsFeed;\n\t\tif(isFriendsListVisible) {\n\t\t\tfriendsFeed = new FriendsFeed(\"friendsFeed\", userUuid, currentUserId);\n\t\t} else {\n\t\t\tfriendsFeed = new EmptyPanel(\"friendsFeed\");\n\t\t\tfriendsFeed.setVisible(false);\n\t\t}\n\t\tfriendsFeed.setOutputMarkupId(true);\n\t\t\n\t\tadd(friendsFeed);\n\t\n\t}","commit_id":"98b9612eda4524d67a1d9b436f8f689ca2ab22d0","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Does the actual rendering of the page\n\t * @param userUuid\n\t */\n\tprivate void renderMyProfile(final String userUuid) {\n\t\t\t\n\t\t//add the feedback panel for any error messages\n\t\tFeedbackPanel feedbackPanel = new FeedbackPanel(\"feedbackPanel\");\n\t\tadd(feedbackPanel);\n\t\tfeedbackPanel.setVisible(false); //hide by default\n\t\t\n\t\t//get SakaiPerson for this user\n\t\tSakaiPerson sakaiPerson = sakaiProxy.getSakaiPerson(userUuid);\n\t\t//if null, create one \n\t\tif(sakaiPerson == null) {\n\t\t\tlog.warn(\"No SakaiPerson for \" + userUuid + \". Creating one.\");\n\t\t\tsakaiPerson = sakaiProxy.createSakaiPerson(userUuid);\n\t\t\t//if its still null, throw exception\n\t\t\tif(sakaiPerson == null) {\n\t\t\t\tthrow new ProfileNotDefinedException(\"Couldn't create a SakaiPerson for \" + userUuid);\n\t\t\t}\n\t\t\t//post create event\n\t\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_PROFILE_NEW, userUuid, true);\n\t\t} \n\t\t\n\t\t//post view event\n\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_PROFILE_VIEW_OWN, \"/profile/\"+userUuid, false);\n\n\t\t//get some values from SakaiPerson or SakaiProxy if empty\n\t\t//SakaiPerson returns NULL strings if value is not set, not blank ones\n\t\n\t\t//these must come from Account to keep it all in sync\n\t\t//we *could* get a User object here and get the values.\n\t\tString userDisplayName = sakaiProxy.getUserDisplayName(userUuid);\n\t\t/*\n\t\tString userFirstName = sakaiProxy.getUserFirstName(userId);\n\t\tString userLastName = sakaiProxy.getUserLastName(userId);\n\t\t*/\n\n\t\tString userEmail = sakaiProxy.getUserEmail(userUuid);\n\t\t\n\t\t//create instance of the UserProfile class\n\t\t//we then pass the userProfile in the constructor to the child panels\n\t\tUserProfile userProfile = new UserProfile();\n\t\t\t\t\n\t\t//get rest of values from SakaiPerson and setup UserProfile\n\t\tuserProfile.setUserUuid(userUuid);\n\t\t\n\t\tuserProfile.setNickname(sakaiPerson.getNickname());\n\t\tuserProfile.setDateOfBirth(sakaiPerson.getDateOfBirth());\n\t\tuserProfile.setDisplayName(userDisplayName);\n\t\t//userProfile.setFirstName(userFirstName);\n\t\t//userProfile.setLastName(userLastName);\n\t\t//userProfile.setMiddleName(sakaiPerson.getInitials());\n\t\t\n\t\tuserProfile.setEmail(userEmail);\n\t\tuserProfile.setHomepage(sakaiPerson.getLabeledURI());\n\t\tuserProfile.setHomephone(sakaiPerson.getHomePhone());\n\t\tuserProfile.setWorkphone(sakaiPerson.getTelephoneNumber());\n\t\tuserProfile.setMobilephone(sakaiPerson.getMobile());\n\t\tuserProfile.setFacsimile(sakaiPerson.getFacsimileTelephoneNumber());\n\t\t\n\t\tuserProfile.setDepartment(sakaiPerson.getOrganizationalUnit());\n\t\tuserProfile.setPosition(sakaiPerson.getTitle());\n\t\tuserProfile.setSchool(sakaiPerson.getCampus());\n\t\tuserProfile.setRoom(sakaiPerson.getRoomNumber());\n\t\t\n\t\tuserProfile.setCourse(sakaiPerson.getEducationCourse());\n\t\tuserProfile.setSubjects(sakaiPerson.getEducationSubjects());\n\t\t\n\t\tuserProfile.setStaffProfile(sakaiPerson.getStaffProfile());\n\t\tuserProfile.setAcademicProfileURL(sakaiPerson.getAcademicProfileUrl());\n\t\tuserProfile.setUniversityProfileURL(sakaiPerson.getUniversityProfileUrl());\n\t\tuserProfile.setPublications(sakaiPerson.getPublications());\n\t\t\n\t\t// business fields\n\t\tuserProfile.setBusinessBiography(sakaiPerson.getBusinessBiography());\n\t\tuserProfile.setCompanyProfiles(profileLogic.getCompanyProfiles(userUuid));\n\t\t\n\t\tuserProfile.setFavouriteBooks(sakaiPerson.getFavouriteBooks());\n\t\tuserProfile.setFavouriteTvShows(sakaiPerson.getFavouriteTvShows());\n\t\tuserProfile.setFavouriteMovies(sakaiPerson.getFavouriteMovies());\n\t\tuserProfile.setFavouriteQuotes(sakaiPerson.getFavouriteQuotes());\n\t\tuserProfile.setOtherInformation(ProfileUtils.unescapeHtml(sakaiPerson.getNotes()));\n\t\t\n\t\t// social networking fields\n\t\tSocialNetworkingInfo socialNetworkingInfo = profileLogic.getSocialNetworkingInfo(userProfile.getUserUuid());\n\t\tif (null != socialNetworkingInfo) {\n\t\t\tuserProfile.setFacebookUsername(socialNetworkingInfo.getFacebookUsername());\n\t\t\tuserProfile.setLinkedinUsername(socialNetworkingInfo.getLinkedinUsername());\n\t\t\tuserProfile.setMyspaceUsername(socialNetworkingInfo.getMyspaceUsername());\n\t\t\tuserProfile.setSkypeUsername(socialNetworkingInfo.getSkypeUsername());\n\t\t\tuserProfile.setTwitterUsername(socialNetworkingInfo.getTwitterUsername());\n\t\t}\n\t\t\n\t\t//PRFL-97 workaround. SakaiPerson table needs to be upgraded so locked is not null, but this handles it if not upgraded.\n\t\tif(sakaiPerson.getLocked() == null) {\n\t\t\tuserProfile.setLocked(false);\n\t\t\tthis.setLocked(false);\n\t\t} else {\n\t\t\tthis.setLocked(sakaiPerson.getLocked());\n\t\t\tuserProfile.setLocked(this.isLocked());\n\t\t}\n\t\t\n\t\n\t\t//what type of picture changing method do we use?\n\t\tint profilePictureType = sakaiProxy.getProfilePictureType();\n\t\t\n\t\t//change picture panel (upload or url depending on property)\n\t\tfinal Panel changePicture;\n\t\t\n\t\t//render appropriate panel with appropriate constructor ie if superUser etc\n\t\tif(profilePictureType == ProfileConstants.PICTURE_SETTING_UPLOAD) {\n\t\t\t\n\t\t\tif(sakaiProxy.isSuperUserAndProxiedToUser(userUuid)){\n\t\t\t\tchangePicture = new ChangeProfilePictureUpload(\"changePicture\", userUuid);\n\t\t\t} else {\n\t\t\t\tchangePicture = new ChangeProfilePictureUpload(\"changePicture\");\n\t\t\t}\n\t\t} else if (profilePictureType == ProfileConstants.PICTURE_SETTING_URL) {\n\t\t\tif(sakaiProxy.isSuperUserAndProxiedToUser(userUuid)){\n\t\t\t\tchangePicture = new ChangeProfilePictureUrl(\"changePicture\", userUuid);\n\t\t\t} else {\n\t\t\t\tchangePicture = new ChangeProfilePictureUrl(\"changePicture\");\n\t\t\t}\n\t\t} else {\n\t\t\t//no valid option for changing picture was returned from the Profile2 API.\n\t\t\tlog.error(\"Invalid picture type returned: \" + profilePictureType);\n\t\t\tchangePicture = new EmptyPanel(\"changePicture\");\n\t\t}\n\t\tchangePicture.setOutputMarkupPlaceholderTag(true);\n\t\tchangePicture.setVisible(false);\n\t\tadd(changePicture);\n\t\t\n\t\t//add the current picture\n\t\tadd(new ProfileImageRenderer(\"photo\", userUuid, true, ProfileConstants.PROFILE_IMAGE_MAIN, true));\n\t\t\n\t\t//change profile image button\n\t\tAjaxLink<Void> changePictureLink = new AjaxLink<Void>(\"changePictureLink\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t\n\t\t\t\ttarget.addComponent(changePicture);\n\t\t\t\tchangePicture.setVisible(true);\n\t\t\t\t\n\t\t\t\t//resize iframe\n\t\t\t\ttarget.prependJavascript(\"setMainFrameHeight(window.name);\");\n\t\t\t\t//when the editImageButton is clicked, show the panel\n\t\t\t\t//its possible this will push the content lower than the iframe, so make sure the iframe size is good.\n\t\t\t\t//String js = \"$('#\" + changePicture.getMarkupId() + \"').slideToggle()\";\n\t\t\t\t//target.appendJavascript(js);\n\t\t\t\t//target.appendJavascript(\"alert('\" + changePicture.getMarkupId() + \"')\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\t\t\n\t\t};\n\t\tchangePictureLink.add(new Label(\"changePictureLabel\", new ResourceModel(\"link.change.profile.picture\")));\n\t\t\n\t\t//is picture changing disabled?\n\t\tif((!sakaiProxy.isProfilePictureChangeEnabled() || userProfile.isLocked()) && !sakaiProxy.isSuperUser()) {\n\t\t\tchangePictureLink.setEnabled(false);\n\t\t\tchangePictureLink.setVisible(false);\n\t\t}\n\t\tadd(changePictureLink);\n\t\t\n\t\t\n\t\t/* SIDELINKS */\n\t\tWebMarkupContainer sideLinks = new WebMarkupContainer(\"sideLinks\");\n\t\tint visibleSideLinksCount = 0;\n\t\t\n\t\tWebMarkupContainer lockProfileContainer = new WebMarkupContainer(\"lockProfileContainer\");\n\t\t\n\t\t//ADMIN: LOCK/UNLOCK A PROFILE\n\t\tfinal Label lockProfileLabel = new Label(\"lockProfileLabel\");\n\t\t\n\t\tfinal AjaxLink<Void> lockProfileLink = new AjaxLink<Void>(\"lockProfileLink\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t//toggle it to be opposite of what it currently is, update labels\n\t\t\t\tboolean locked = isLocked();\n    \t\t\tif(sakaiProxy.toggleProfileLocked(userUuid, !locked)) {\n    \t\t\t\tsetLocked(!locked);\n    \t\t\t\tlog.info(\"MyProfile(): SuperUser toggled lock status of profile for \" + userUuid + \" to \" + !locked);\n    \t\t\t\tlockProfileLabel.setDefaultModel(new ResourceModel(\"link.profile.locked.\" + isLocked()));\n    \t\t\t\tthis.add(new AttributeModifier(\"title\", true, new ResourceModel(\"text.profile.locked.\" + isLocked())));\n    \t\t\t\ttarget.addComponent(this);\n    \t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tlockProfileLink.add(lockProfileLabel);\n\t\t\t\t\n\t\t//setup link/label and windows with special property based on locked status\n\t\tlockProfileLabel.setDefaultModel(new ResourceModel(\"link.profile.locked.\" + isLocked()));\n\t\tlockProfileLink.add(new AttributeModifier(\"title\", true, new ResourceModel(\"text.profile.locked.\" + isLocked())));\n\t\t\n\t\tlockProfileContainer.add(lockProfileLink);\n\t\t\n\t\t//show lock/unlock link to superUser and only if not own profile\n\t\tif(!sakaiProxy.isSuperUserAndProxiedToUser(userUuid)) {\n\t\t\tlockProfileContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleSideLinksCount++;\n\t\t}\n\t\t\n\t\t//hide entire list if no links to show\n\t\tif(visibleSideLinksCount == 0) {\n\t\t\tsideLinks.setVisible(false);\n\t\t}\n\t\t\n\t\tsideLinks.add(lockProfileContainer);\n\t\tadd(sideLinks);\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t//status panel\n\t\tPanel myStatusPanel = new MyStatusPanel(\"myStatusPanel\", userProfile);\n\t\tadd(myStatusPanel);\n\t\t\n\t\t//info panel - load the display version by default\n\t\tPanel myInfoDisplay = new MyInfoDisplay(\"myInfo\", userProfile);\n\t\tmyInfoDisplay.setOutputMarkupId(true);\n\t\tadd(myInfoDisplay);\n\t\t\n\t\t//contact panel - load the display version by default\n\t\tPanel myContactDisplay = new MyContactDisplay(\"myContact\", userProfile);\n\t\tmyContactDisplay.setOutputMarkupId(true);\n\t\tadd(myContactDisplay);\n\t\t\n\t\t//academic panel - load the display version by default\n\t\tPanel myAcademicDisplay = new MyAcademicDisplay(\"myAcademic\", userProfile);\n\t\tmyAcademicDisplay.setOutputMarkupId(true);\n\t\tadd(myAcademicDisplay);\n\t\t\n\t\t//business panel - load the display version by default\n\t\tPanel myBusinessDisplay = new MyBusinessDisplay(\"myBusiness\", userProfile);\n\t\tmyBusinessDisplay.setOutputMarkupId(true);\n\t\tadd(myBusinessDisplay);\n\t\t\n\t\t//interests panel - load the display version by default\n\t\tPanel myInterestsDisplay = new MyInterestsDisplay(\"myInterests\", userProfile);\n\t\tmyInterestsDisplay.setOutputMarkupId(true);\n\t\tadd(myInterestsDisplay);\n\n\t\t\n\t\t//my quick links panel\n\t\t\n\t\t\n\t\t//friends feed panel for self - lazy loaded\n\t\tadd(new NotifyingAjaxLazyLoadPanel(\"friendsFeed\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t@Override\n            public Component getLazyLoadComponent(String markupId) {\n            \treturn new FriendsFeed(markupId, userUuid, userUuid);\n            }\n\n\t\t\t@Override\n\t\t\tpublic void renderHead(IHeaderResponse response) {\n\t\t\t\tresponse.renderOnDomReadyJavascript(\"setMainFrameHeight(window.name);\");\n\t\t\t}\n        });\n        \t\n        \t\n\t\t//gallery feed panel\n\t\tadd(new NotifyingAjaxLazyLoadPanel(\"galleryFeed\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t@Override\n\t\t\tpublic Component getLazyLoadComponent(String markupId) {\n\t\t\t\tif (sakaiProxy.isProfileGalleryEnabledGlobally()) {\n\t\t\t\t\treturn new GalleryFeed(markupId, userUuid, userUuid)\n\t\t\t\t\t\t\t.setOutputMarkupId(true);\n\t\t\t\t} else {\n\t\t\t\t\treturn new EmptyPanel(markupId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void renderHead(IHeaderResponse response) {\n\t\t\t\tresponse.renderOnDomReadyJavascript(\"setMainFrameHeight(window.name);\");\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\t\n\t}","id":27653,"modified_method":"/**\n\t * Does the actual rendering of the page\n\t * @param userUuid\n\t */\n\tprivate void renderMyProfile(final String userUuid) {\n\t\t\t\n\t\t//add the feedback panel for any error messages\n\t\tFeedbackPanel feedbackPanel = new FeedbackPanel(\"feedbackPanel\");\n\t\tadd(feedbackPanel);\n\t\tfeedbackPanel.setVisible(false); //hide by default\n\t\t\n\t\t//get SakaiPerson for this user\n\t\tSakaiPerson sakaiPerson = sakaiProxy.getSakaiPerson(userUuid);\n\t\t//if null, create one \n\t\tif(sakaiPerson == null) {\n\t\t\tlog.warn(\"No SakaiPerson for \" + userUuid + \". Creating one.\");\n\t\t\tsakaiPerson = sakaiProxy.createSakaiPerson(userUuid);\n\t\t\t//if its still null, throw exception\n\t\t\tif(sakaiPerson == null) {\n\t\t\t\tthrow new ProfileNotDefinedException(\"Couldn't create a SakaiPerson for \" + userUuid);\n\t\t\t}\n\t\t\t//post create event\n\t\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_PROFILE_NEW, userUuid, true);\n\t\t} \n\t\t\n\t\t//post view event\n\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_PROFILE_VIEW_OWN, \"/profile/\"+userUuid, false);\n\n\t\t//get some values from SakaiPerson or SakaiProxy if empty\n\t\t//SakaiPerson returns NULL strings if value is not set, not blank ones\n\t\n\t\t//these must come from Account to keep it all in sync\n\t\t//we *could* get a User object here and get the values.\n\t\tString userDisplayName = sakaiProxy.getUserDisplayName(userUuid);\n\t\t/*\n\t\tString userFirstName = sakaiProxy.getUserFirstName(userId);\n\t\tString userLastName = sakaiProxy.getUserLastName(userId);\n\t\t*/\n\n\t\tString userEmail = sakaiProxy.getUserEmail(userUuid);\n\t\t\n\t\t//create instance of the UserProfile class\n\t\t//we then pass the userProfile in the constructor to the child panels\n\t\tUserProfile userProfile = new UserProfile();\n\t\t\t\t\n\t\t//get rest of values from SakaiPerson and setup UserProfile\n\t\tuserProfile.setUserUuid(userUuid);\n\t\t\n\t\tuserProfile.setNickname(sakaiPerson.getNickname());\n\t\tuserProfile.setDateOfBirth(sakaiPerson.getDateOfBirth());\n\t\tuserProfile.setDisplayName(userDisplayName);\n\t\t//userProfile.setFirstName(userFirstName);\n\t\t//userProfile.setLastName(userLastName);\n\t\t//userProfile.setMiddleName(sakaiPerson.getInitials());\n\t\t\n\t\tuserProfile.setEmail(userEmail);\n\t\tuserProfile.setHomepage(sakaiPerson.getLabeledURI());\n\t\tuserProfile.setHomephone(sakaiPerson.getHomePhone());\n\t\tuserProfile.setWorkphone(sakaiPerson.getTelephoneNumber());\n\t\tuserProfile.setMobilephone(sakaiPerson.getMobile());\n\t\tuserProfile.setFacsimile(sakaiPerson.getFacsimileTelephoneNumber());\n\t\t\n\t\tuserProfile.setDepartment(sakaiPerson.getOrganizationalUnit());\n\t\tuserProfile.setPosition(sakaiPerson.getTitle());\n\t\tuserProfile.setSchool(sakaiPerson.getCampus());\n\t\tuserProfile.setRoom(sakaiPerson.getRoomNumber());\n\t\t\n\t\tuserProfile.setCourse(sakaiPerson.getEducationCourse());\n\t\tuserProfile.setSubjects(sakaiPerson.getEducationSubjects());\n\t\t\n\t\tuserProfile.setStaffProfile(sakaiPerson.getStaffProfile());\n\t\tuserProfile.setAcademicProfileURL(sakaiPerson.getAcademicProfileUrl());\n\t\tuserProfile.setUniversityProfileURL(sakaiPerson.getUniversityProfileUrl());\n\t\tuserProfile.setPublications(sakaiPerson.getPublications());\n\t\t\n\t\t// business fields\n\t\tuserProfile.setBusinessBiography(sakaiPerson.getBusinessBiography());\n\t\tuserProfile.setCompanyProfiles(profileLogic.getCompanyProfiles(userUuid));\n\t\t\n\t\tuserProfile.setFavouriteBooks(sakaiPerson.getFavouriteBooks());\n\t\tuserProfile.setFavouriteTvShows(sakaiPerson.getFavouriteTvShows());\n\t\tuserProfile.setFavouriteMovies(sakaiPerson.getFavouriteMovies());\n\t\tuserProfile.setFavouriteQuotes(sakaiPerson.getFavouriteQuotes());\n\t\tuserProfile.setOtherInformation(ProfileUtils.unescapeHtml(sakaiPerson.getNotes()));\n\t\t\n\t\t// social networking fields\n\t\tSocialNetworkingInfo socialNetworkingInfo = profileLogic.getSocialNetworkingInfo(userProfile.getUserUuid());\n\t\tif (null != socialNetworkingInfo) {\n\t\t\tuserProfile.setFacebookUsername(socialNetworkingInfo.getFacebookUsername());\n\t\t\tuserProfile.setLinkedinUsername(socialNetworkingInfo.getLinkedinUsername());\n\t\t\tuserProfile.setMyspaceUsername(socialNetworkingInfo.getMyspaceUsername());\n\t\t\tuserProfile.setSkypeUsername(socialNetworkingInfo.getSkypeUsername());\n\t\t\tuserProfile.setTwitterUsername(socialNetworkingInfo.getTwitterUsername());\n\t\t}\n\t\t\n\t\t//PRFL-97 workaround. SakaiPerson table needs to be upgraded so locked is not null, but this handles it if not upgraded.\n\t\tif(sakaiPerson.getLocked() == null) {\n\t\t\tuserProfile.setLocked(false);\n\t\t\tthis.setLocked(false);\n\t\t} else {\n\t\t\tthis.setLocked(sakaiPerson.getLocked());\n\t\t\tuserProfile.setLocked(this.isLocked());\n\t\t}\n\t\t\n\t\n\t\t//what type of picture changing method do we use?\n\t\tint profilePictureType = sakaiProxy.getProfilePictureType();\n\t\t\n\t\t//change picture panel (upload or url depending on property)\n\t\tfinal Panel changePicture;\n\t\t\n\t\t//render appropriate panel with appropriate constructor ie if superUser etc\n\t\tif(profilePictureType == ProfileConstants.PICTURE_SETTING_UPLOAD) {\n\t\t\t\n\t\t\tif(sakaiProxy.isSuperUserAndProxiedToUser(userUuid)){\n\t\t\t\tchangePicture = new ChangeProfilePictureUpload(\"changePicture\", userUuid);\n\t\t\t} else {\n\t\t\t\tchangePicture = new ChangeProfilePictureUpload(\"changePicture\");\n\t\t\t}\n\t\t} else if (profilePictureType == ProfileConstants.PICTURE_SETTING_URL) {\n\t\t\tif(sakaiProxy.isSuperUserAndProxiedToUser(userUuid)){\n\t\t\t\tchangePicture = new ChangeProfilePictureUrl(\"changePicture\", userUuid);\n\t\t\t} else {\n\t\t\t\tchangePicture = new ChangeProfilePictureUrl(\"changePicture\");\n\t\t\t}\n\t\t} else {\n\t\t\t//no valid option for changing picture was returned from the Profile2 API.\n\t\t\tlog.error(\"Invalid picture type returned: \" + profilePictureType);\n\t\t\tchangePicture = new EmptyPanel(\"changePicture\");\n\t\t}\n\t\tchangePicture.setOutputMarkupPlaceholderTag(true);\n\t\tchangePicture.setVisible(false);\n\t\tadd(changePicture);\n\t\t\n\t\t//add the current picture\n\t\tadd(new ProfileImageRenderer(\"photo\", userUuid, true, ProfileConstants.PROFILE_IMAGE_MAIN, true));\n\t\t\n\t\t//change profile image button\n\t\tAjaxLink<Void> changePictureLink = new AjaxLink<Void>(\"changePictureLink\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t\n\t\t\t\ttarget.addComponent(changePicture);\n\t\t\t\tchangePicture.setVisible(true);\n\t\t\t\t\n\t\t\t\t//resize iframe\n\t\t\t\ttarget.prependJavascript(\"setMainFrameHeight(window.name);\");\n\t\t\t\t//when the editImageButton is clicked, show the panel\n\t\t\t\t//its possible this will push the content lower than the iframe, so make sure the iframe size is good.\n\t\t\t\t//String js = \"$('#\" + changePicture.getMarkupId() + \"').slideToggle()\";\n\t\t\t\t//target.appendJavascript(js);\n\t\t\t\t//target.appendJavascript(\"alert('\" + changePicture.getMarkupId() + \"')\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\t\t\n\t\t};\n\t\tchangePictureLink.add(new Label(\"changePictureLabel\", new ResourceModel(\"link.change.profile.picture\")));\n\t\t\n\t\t//is picture changing disabled?\n\t\tif((!sakaiProxy.isProfilePictureChangeEnabled() || userProfile.isLocked()) && !sakaiProxy.isSuperUser()) {\n\t\t\tchangePictureLink.setEnabled(false);\n\t\t\tchangePictureLink.setVisible(false);\n\t\t}\n\t\tadd(changePictureLink);\n\t\t\n\t\t\n\t\t/* SIDELINKS */\n\t\tWebMarkupContainer sideLinks = new WebMarkupContainer(\"sideLinks\");\n\t\tint visibleSideLinksCount = 0;\n\t\t\n\t\tWebMarkupContainer lockProfileContainer = new WebMarkupContainer(\"lockProfileContainer\");\n\t\t\n\t\t//ADMIN: LOCK/UNLOCK A PROFILE\n\t\tfinal Label lockProfileLabel = new Label(\"lockProfileLabel\");\n\t\t\n\t\tfinal AjaxLink<Void> lockProfileLink = new AjaxLink<Void>(\"lockProfileLink\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\t//toggle it to be opposite of what it currently is, update labels\n\t\t\t\tboolean locked = isLocked();\n    \t\t\tif(sakaiProxy.toggleProfileLocked(userUuid, !locked)) {\n    \t\t\t\tsetLocked(!locked);\n    \t\t\t\tlog.info(\"MyProfile(): SuperUser toggled lock status of profile for \" + userUuid + \" to \" + !locked);\n    \t\t\t\tlockProfileLabel.setDefaultModel(new ResourceModel(\"link.profile.locked.\" + isLocked()));\n    \t\t\t\tthis.add(new AttributeModifier(\"title\", true, new ResourceModel(\"text.profile.locked.\" + isLocked())));\n    \t\t\t\ttarget.addComponent(this);\n    \t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tlockProfileLink.add(lockProfileLabel);\n\t\t\t\t\n\t\t//setup link/label and windows with special property based on locked status\n\t\tlockProfileLabel.setDefaultModel(new ResourceModel(\"link.profile.locked.\" + isLocked()));\n\t\tlockProfileLink.add(new AttributeModifier(\"title\", true, new ResourceModel(\"text.profile.locked.\" + isLocked())));\n\t\t\n\t\tlockProfileContainer.add(lockProfileLink);\n\t\t\n\t\t//show lock/unlock link to superUser and only if not own profile\n\t\tif(!sakaiProxy.isSuperUserAndProxiedToUser(userUuid)) {\n\t\t\tlockProfileContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleSideLinksCount++;\n\t\t}\n\t\t\n\t\t//hide entire list if no links to show\n\t\tif(visibleSideLinksCount == 0) {\n\t\t\tsideLinks.setVisible(false);\n\t\t}\n\t\t\n\t\tsideLinks.add(lockProfileContainer);\n\t\tadd(sideLinks);\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t//status panel\n\t\tPanel myStatusPanel = new MyStatusPanel(\"myStatusPanel\", userProfile);\n\t\tadd(myStatusPanel);\n\t\t\n\t\t//info panel - load the display version by default\n\t\tPanel myInfoDisplay = new MyInfoDisplay(\"myInfo\", userProfile);\n\t\tmyInfoDisplay.setOutputMarkupId(true);\n\t\tadd(myInfoDisplay);\n\t\t\n\t\t//contact panel - load the display version by default\n\t\tPanel myContactDisplay = new MyContactDisplay(\"myContact\", userProfile);\n\t\tmyContactDisplay.setOutputMarkupId(true);\n\t\tadd(myContactDisplay);\n\t\t\n\t\t//academic panel - load the display version by default\n\t\tPanel myAcademicDisplay = new MyAcademicDisplay(\"myAcademic\", userProfile);\n\t\tmyAcademicDisplay.setOutputMarkupId(true);\n\t\tadd(myAcademicDisplay);\n\t\t\n\t\t//business panel - load the display version by default\n\t\tPanel myBusinessDisplay;\n\t\tif (sakaiProxy.isBusinessProfileEnabled()) {\n\t\t\tmyBusinessDisplay = new MyBusinessDisplay(\"myBusiness\", userProfile);\n\t\t\tmyBusinessDisplay.setOutputMarkupId(true);\n\t\t} else {\n\t\t\tmyBusinessDisplay = new EmptyPanel(\"myBusiness\");\n\t\t}\n\t\tadd(myBusinessDisplay);\n\t\t\n\t\t//interests panel - load the display version by default\n\t\tPanel myInterestsDisplay = new MyInterestsDisplay(\"myInterests\", userProfile);\n\t\tmyInterestsDisplay.setOutputMarkupId(true);\n\t\tadd(myInterestsDisplay);\n\n\t\t\n\t\t//my quick links panel\n\t\t\n\t\t\n\t\t//friends feed panel for self - lazy loaded\n\t\tadd(new NotifyingAjaxLazyLoadPanel(\"friendsFeed\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t@Override\n            public Component getLazyLoadComponent(String markupId) {\n            \treturn new FriendsFeed(markupId, userUuid, userUuid);\n            }\n\n\t\t\t@Override\n\t\t\tpublic void renderHead(IHeaderResponse response) {\n\t\t\t\tresponse.renderOnDomReadyJavascript(\"setMainFrameHeight(window.name);\");\n\t\t\t}\n        });\n        \t\n        \t\n\t\t//gallery feed panel\n\t\tadd(new NotifyingAjaxLazyLoadPanel(\"galleryFeed\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t@Override\n\t\t\tpublic Component getLazyLoadComponent(String markupId) {\n\t\t\t\tif (sakaiProxy.isProfileGalleryEnabledGlobally()) {\n\t\t\t\t\treturn new GalleryFeed(markupId, userUuid, userUuid)\n\t\t\t\t\t\t\t.setOutputMarkupId(true);\n\t\t\t\t} else {\n\t\t\t\t\treturn new EmptyPanel(markupId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void renderHead(IHeaderResponse response) {\n\t\t\t\tresponse.renderOnDomReadyJavascript(\"setMainFrameHeight(window.name);\");\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\t\n\t}","commit_id":"d11c8b613855707da5aacc1ae06e87da98f0cc03","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public ViewProfile(final String userUuid)   {\n\t\t\n\t\tlog.debug(\"ViewProfile()\");\n\n\t\t//setup model to store the actions in the modal windows\n\t\tfinal FriendAction friendActionModel = new FriendAction();\n\t\t\n\t\t//get current user info\n\t\tUser currentUser = sakaiProxy.getUserQuietly(sakaiProxy.getCurrentUserId());\n\t\tfinal String currentUserId = currentUser.getId();\n\t\tString currentUserType = currentUser.getType();\n\t\t\n\t\t//double check, if somehow got to own ViewPage, redirect to MyProfile instead\n\t\tif(userUuid.equals(currentUserId)) {\n\t\t\tlog.warn(\"ViewProfile: user \" + userUuid + \" accessed ViewProfile for self. Redirecting...\");\n\t\t\tthrow new RestartResponseException(new MyProfile());\n\t\t}\n\t\t\n\t\t//check if super user, to grant editing rights to another user's profile\n\t\tif(sakaiProxy.isSuperUser()) {\n\t\t\tlog.warn(\"ViewProfile: superUser \" + currentUserId + \" accessed ViewProfile for \" + userUuid + \". Redirecting to allow edit.\");\n\t\t\tthrow new RestartResponseException(new MyProfile(userUuid));\n\t\t}\n\t\t\n\t\t//post view event\n\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_PROFILE_VIEW_OTHER, \"/profile/\"+userUuid, false);\n\t\t\n\t\t/* DEPRECATED via PRFL-24 when privacy was relaxed\n\t\tif(!isProfileAllowed) {\n\t\t\tthrow new ProfileIllegalAccessException(\"User: \" + currentUserId + \" is not allowed to view profile for: \" + userUuid);\n\t\t}\n\t\t*/\n\t\t\n\t\t//holds number of profile containers that are visible\n\t\tint visibleContainerCount = 0;\n\t\t\n\t\t//get SakaiPerson for the person who's profile we are viewing\n\t\tSakaiPerson sakaiPerson = sakaiProxy.getSakaiPerson(userUuid);\n\t\t//if null, they have no profile so just get a prototype\n\t\tif(sakaiPerson == null) {\n\t\t\tlog.info(\"No SakaiPerson for \" + userUuid);\n\t\t\tsakaiPerson = sakaiProxy.getSakaiPersonPrototype();\n\t\t\t//if its still null, throw exception\n\t\t\tif(sakaiPerson == null) {\n\t\t\t\tthrow new ProfilePrototypeNotDefinedException(\"Couldn't create a SakaiPerson prototype for \" + userUuid);\n\t\t\t}\n\t\t} \n\t\t\n\t\t//get some values from SakaiPerson or SakaiProxy if empty\n\t\t//SakaiPerson returns NULL strings if value is not set, not blank ones\n\t\tUser user = sakaiProxy.getUserQuietly(userUuid);\n\t\tString userDisplayName = user.getDisplayName();\n\t\tString userType = user.getType();\n\t\t\n\t\t//init\n\t\tboolean friend = false;\n\t\tboolean friendRequestToThisPerson = false;\n\t\tboolean friendRequestFromThisPerson = false;\n\n\t\t//friend?\n\t\tfriend = profileLogic.isUserXFriendOfUserY(userUuid, currentUserId);\n\n\t\t//if not friend, has a friend request already been made to this person?\n\t\tif(!friend) {\n\t\t\tfriendRequestToThisPerson = profileLogic.isFriendRequestPending(currentUserId, userUuid);\n\t\t}\n\t\t\n\t\t//if not friend and no friend request to this person, has a friend request been made from this person to the current user?\n\t\tif(!friend && !friendRequestToThisPerson) {\n\t\t\tfriendRequestFromThisPerson = profileLogic.isFriendRequestPending(userUuid, currentUserId);\n\t\t}\n\t\t\n\t\t//privacy checks\n\t\tProfilePrivacy privacy = profileLogic.getPrivacyRecordForUser(userUuid);\n\t\t\n\t\tboolean isProfileImageAllowed = profileLogic.isUserXProfileImageVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tboolean isBasicInfoAllowed = profileLogic.isUserXBasicInfoVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tboolean isContactInfoAllowed = profileLogic.isUserXContactInfoVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tboolean isAcademicInfoAllowed = profileLogic.isUserXAcademicInfoVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tboolean isBusinessInfoAllowed = profileLogic.isUserXBusinessInfoVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tboolean isPersonalInfoAllowed = profileLogic.isUserXPersonalInfoVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tboolean isFriendsListVisible = profileLogic.isUserXFriendsListVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tfinal boolean isGalleryVisible = profileLogic.isUserXGalleryVisibleByUser(userUuid, privacy, currentUserId, friend);\n\t\tboolean isConnectionAllowed = sakaiProxy.isConnectionAllowedBetweenUserTypes(currentUserType, userType);\n\t\t\n\t\t/* IMAGE */\n\t\tadd(new ProfileImageRenderer(\"photo\", userUuid, isProfileImageAllowed, ProfileConstants.PROFILE_IMAGE_MAIN, true));\n\t\t\n\t\t/* NAME */\n\t\tLabel profileName = new Label(\"profileName\", userDisplayName);\n\t\tadd(profileName);\n\t\t\n\t\t/*STATUS PANEL */\n\t\tProfileStatusRenderer status = new ProfileStatusRenderer(\"status\", userUuid, privacy, currentUserId, friend, null, \"tiny\");\n\t\tstatus.setOutputMarkupId(true);\n\t\tadd(status);\n\t\t\n\t\t/* BASIC INFO */\n\t\tWebMarkupContainer basicInfoContainer = new WebMarkupContainer(\"mainSectionContainer_basic\");\n\t\tbasicInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//get info\n\t\tString nickname = sakaiPerson.getNickname();\n\t\tDate dateOfBirth = sakaiPerson.getDateOfBirth();\n\t\tString birthday = \"\";\n\t\tint visibleFieldCount_basic = 0;\n\t\t\n\t\tif(dateOfBirth != null) {\n\t\t\t\n\t\t\tif(profileLogic.isBirthYearVisible(userUuid)) {\n\t\t\t\tbirthday = ProfileUtils.convertDateToString(dateOfBirth, ProfileConstants.DEFAULT_DATE_FORMAT);\n\t\t\t} else {\n\t\t\t\tbirthday = ProfileUtils.convertDateToString(dateOfBirth, ProfileConstants.DEFAULT_DATE_FORMAT_HIDE_YEAR);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//heading\n\t\tbasicInfoContainer.add(new Label(\"mainSectionHeading_basic\", new ResourceModel(\"heading.basic\")));\n\t\t\n\t\t//nickname\n\t\tWebMarkupContainer nicknameContainer = new WebMarkupContainer(\"nicknameContainer\");\n\t\tnicknameContainer.add(new Label(\"nicknameLabel\", new ResourceModel(\"profile.nickname\")));\n\t\tnicknameContainer.add(new Label(\"nickname\", nickname));\n\t\tbasicInfoContainer.add(nicknameContainer);\n\t\tif(StringUtils.isBlank(nickname)) {\n\t\t\tnickname=\"\"; //for the 'add friend' link\n\t\t\tnicknameContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_basic++;\n\t\t}\n\t\t\n\t\t//birthday\n\t\tWebMarkupContainer birthdayContainer = new WebMarkupContainer(\"birthdayContainer\");\n\t\tbirthdayContainer.add(new Label(\"birthdayLabel\", new ResourceModel(\"profile.birthday\")));\n\t\tbirthdayContainer.add(new Label(\"birthday\", birthday));\n\t\tbasicInfoContainer.add(birthdayContainer);\n\t\tif(StringUtils.isBlank(birthday)) {\n\t\t\tbirthdayContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_basic++;\n\t\t}\n\t\t\n\t\tadd(basicInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_basic == 0 || !isBasicInfoAllowed) {\n\t\t\tbasicInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t/* CONTACT INFO */\n\t\tWebMarkupContainer contactInfoContainer = new WebMarkupContainer(\"mainSectionContainer_contact\");\n\t\tcontactInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//get info\n\t\tString email = sakaiProxy.getUserEmail(userUuid); //must come from SakaiProxy\n\t\tString homepage = sakaiPerson.getLabeledURI();\n\t\tString workphone = sakaiPerson.getTelephoneNumber();\n\t\tString homephone = sakaiPerson.getHomePhone();\n\t\tString mobilephone = sakaiPerson.getMobile();\n\t\tString facsimile = sakaiPerson.getFacsimileTelephoneNumber();\n\t\t\n\t\tint visibleFieldCount_contact = 0;\n\t\t\n\t\t//heading\n\t\tcontactInfoContainer.add(new Label(\"mainSectionHeading_contact\", new ResourceModel(\"heading.contact\")));\n\t\t\n\t\t//email\n\t\tWebMarkupContainer emailContainer = new WebMarkupContainer(\"emailContainer\");\n\t\temailContainer.add(new Label(\"emailLabel\", new ResourceModel(\"profile.email\")));\n\t\temailContainer.add(new Label(\"email\", email));\n\t\tcontactInfoContainer.add(emailContainer);\n\t\tif(StringUtils.isBlank(email)) {\n\t\t\temailContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//homepage\n\t\tWebMarkupContainer homepageContainer = new WebMarkupContainer(\"homepageContainer\");\n\t\thomepageContainer.add(new Label(\"homepageLabel\", new ResourceModel(\"profile.homepage\")));\n\t\thomepageContainer.add(new ExternalLink(\"homepage\", homepage, homepage));\n\t\tcontactInfoContainer.add(homepageContainer);\n\t\tif(StringUtils.isBlank(homepage)) {\n\t\t\thomepageContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//work phone\n\t\tWebMarkupContainer workphoneContainer = new WebMarkupContainer(\"workphoneContainer\");\n\t\tworkphoneContainer.add(new Label(\"workphoneLabel\", new ResourceModel(\"profile.phone.work\")));\n\t\tworkphoneContainer.add(new Label(\"workphone\", workphone));\n\t\tcontactInfoContainer.add(workphoneContainer);\n\t\tif(StringUtils.isBlank(workphone)) {\n\t\t\tworkphoneContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//home phone\n\t\tWebMarkupContainer homephoneContainer = new WebMarkupContainer(\"homephoneContainer\");\n\t\thomephoneContainer.add(new Label(\"homephoneLabel\", new ResourceModel(\"profile.phone.home\")));\n\t\thomephoneContainer.add(new Label(\"homephone\", homephone));\n\t\tcontactInfoContainer.add(homephoneContainer);\n\t\tif(StringUtils.isBlank(homephone)) {\n\t\t\thomephoneContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//mobile phone\n\t\tWebMarkupContainer mobilephoneContainer = new WebMarkupContainer(\"mobilephoneContainer\");\n\t\tmobilephoneContainer.add(new Label(\"mobilephoneLabel\", new ResourceModel(\"profile.phone.mobile\")));\n\t\tmobilephoneContainer.add(new Label(\"mobilephone\", mobilephone));\n\t\tcontactInfoContainer.add(mobilephoneContainer);\n\t\tif(StringUtils.isBlank(mobilephone)) {\n\t\t\tmobilephoneContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//facsimile\n\t\tWebMarkupContainer facsimileContainer = new WebMarkupContainer(\"facsimileContainer\");\n\t\tfacsimileContainer.add(new Label(\"facsimileLabel\", new ResourceModel(\"profile.phone.facsimile\")));\n\t\tfacsimileContainer.add(new Label(\"facsimile\", facsimile));\n\t\tcontactInfoContainer.add(facsimileContainer);\n\t\tif(StringUtils.isBlank(facsimile)) {\n\t\t\tfacsimileContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\tadd(contactInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_contact == 0 || !isContactInfoAllowed) {\n\t\t\tcontactInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t\n\t\t/* ACADEMIC INFO */\n\t\tWebMarkupContainer academicInfoContainer = new WebMarkupContainer(\"mainSectionContainer_academic\");\n\t\tacademicInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//get info\n\t\tString department = sakaiPerson.getOrganizationalUnit();\n\t\tString position = sakaiPerson.getTitle();\n\t\tString school = sakaiPerson.getCampus();\n\t\tString room = sakaiPerson.getRoomNumber();\n\t\tString course = sakaiPerson.getEducationCourse();\n\t\tString subjects = sakaiPerson.getEducationSubjects();\n\t\t\n\t\tint visibleFieldCount_academic = 0;\n\t\t\n\t\t//heading\n\t\tacademicInfoContainer.add(new Label(\"mainSectionHeading_academic\", new ResourceModel(\"heading.academic\")));\n\t\t\n\t\t//department\n\t\tWebMarkupContainer departmentContainer = new WebMarkupContainer(\"departmentContainer\");\n\t\tdepartmentContainer.add(new Label(\"departmentLabel\", new ResourceModel(\"profile.department\")));\n\t\tdepartmentContainer.add(new Label(\"department\", department));\n\t\tacademicInfoContainer.add(departmentContainer);\n\t\tif(StringUtils.isBlank(department)) {\n\t\t\tdepartmentContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//position\n\t\tWebMarkupContainer positionContainer = new WebMarkupContainer(\"positionContainer\");\n\t\tpositionContainer.add(new Label(\"positionLabel\", new ResourceModel(\"profile.position\")));\n\t\tpositionContainer.add(new Label(\"position\", position));\n\t\tacademicInfoContainer.add(positionContainer);\n\t\tif(StringUtils.isBlank(position)) {\n\t\t\tpositionContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//school\n\t\tWebMarkupContainer schoolContainer = new WebMarkupContainer(\"schoolContainer\");\n\t\tschoolContainer.add(new Label(\"schoolLabel\", new ResourceModel(\"profile.school\")));\n\t\tschoolContainer.add(new Label(\"school\", school));\n\t\tacademicInfoContainer.add(schoolContainer);\n\t\tif(StringUtils.isBlank(school)) {\n\t\t\tschoolContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//room\n\t\tWebMarkupContainer roomContainer = new WebMarkupContainer(\"roomContainer\");\n\t\troomContainer.add(new Label(\"roomLabel\", new ResourceModel(\"profile.room\")));\n\t\troomContainer.add(new Label(\"room\", room));\n\t\tacademicInfoContainer.add(roomContainer);\n\t\tif(StringUtils.isBlank(room)) {\n\t\t\troomContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//course\n\t\tWebMarkupContainer courseContainer = new WebMarkupContainer(\"courseContainer\");\n\t\tcourseContainer.add(new Label(\"courseLabel\", new ResourceModel(\"profile.course\")));\n\t\tcourseContainer.add(new Label(\"course\", course));\n\t\tacademicInfoContainer.add(courseContainer);\n\t\tif(StringUtils.isBlank(course)) {\n\t\t\tcourseContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//subjects\n\t\tWebMarkupContainer subjectsContainer = new WebMarkupContainer(\"subjectsContainer\");\n\t\tsubjectsContainer.add(new Label(\"subjectsLabel\", new ResourceModel(\"profile.subjects\")));\n\t\tsubjectsContainer.add(new Label(\"subjects\", subjects));\n\t\tacademicInfoContainer.add(subjectsContainer);\n\t\tif(StringUtils.isBlank(subjects)) {\n\t\t\tsubjectsContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\tadd(academicInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_academic == 0 || !isAcademicInfoAllowed) {\n\t\t\tacademicInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t/* BUSINESS INFO*/\n\t\tint visibleFieldCount_business = 0;\n\t\t\n\t\tWebMarkupContainer businessInfoContainer = new WebMarkupContainer(\"mainSectionContainer_business\");\n\t\tbusinessInfoContainer.setOutputMarkupId(true);\n\t\tbusinessInfoContainer.add(new Label(\"mainSectionHeading_business\", new ResourceModel(\"heading.business\")));\n\t\tadd(businessInfoContainer);\n\t\t\n\t\tWebMarkupContainer businessBiographyContainer = new WebMarkupContainer(\"businessBiographyContainer\");\n\t\t\n\t\tbusinessBiographyContainer.add(new Label(\"businessBiographyLabel\", new ResourceModel(\"profile.business.bio\")));\n\t\tbusinessBiographyContainer.add(new Label(\"businessBiography\", sakaiPerson.getBusinessBiography()));\n\t\t\n\t\tbusinessInfoContainer.add(businessBiographyContainer);\n\t\t\t\t\n\t\tif (StringUtils.isBlank(sakaiPerson.getBusinessBiography())) {\n\t\t\tbusinessBiographyContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_business++;\n\t\t}\n\t\t\n\t\tWebMarkupContainer companyProfilesContainer = new WebMarkupContainer(\n\t\t\"companyProfilesContainer\");\n\n\t\tcompanyProfilesContainer.add(new Label(\"companyProfilesLabel\",\n\t\t\t\tnew ResourceModel(\"profile.business.company.profiles\")));\n\n\t\tList<CompanyProfile> companyProfiles = profileLogic.getCompanyProfiles(userUuid);\n\t\t\n\t\tList<ITab> tabs = new ArrayList<ITab>();\n\t\tif (null != profileLogic.getCompanyProfiles(userUuid)) {\n\n\t\t\tfor (final CompanyProfile companyProfile : companyProfiles) {\n\n\t\t\t\tvisibleFieldCount_business++;\n\t\t\t\t\n\t\t\t\ttabs.add(new AbstractTab(new ResourceModel(\"profile.business.company.profile\")) {\n\n\t\t\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic Panel getPanel(String panelId) {\n\n\t\t\t\t\t\treturn new CompanyProfileDisplay(panelId,\n\t\t\t\t\t\t\t\tcompanyProfile);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tcompanyProfilesContainer.add(new TabbedPanel(\"companyProfiles\", tabs));\n\t\tbusinessInfoContainer.add(companyProfilesContainer);\n\n\t\tif (0 == tabs.size()) {\t\t\t\n\t\t\tcompanyProfilesContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_business == 0 || !isBusinessInfoAllowed) {\n\t\t\tbusinessInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\t\t\n\t\t\n\t\t/* PERSONAL INFO */\n\t\tWebMarkupContainer personalInfoContainer = new WebMarkupContainer(\"mainSectionContainer_personal\");\n\t\tpersonalInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//setup info\n\t\t\n\t\t// social networking\n\t\tSocialNetworkingInfo socialNetworkingInfo = profileLogic.getSocialNetworkingInfo(userUuid);\n\t\tString facebookUsername = socialNetworkingInfo.getFacebookUsername();\n\t\tString linkedinUsername = socialNetworkingInfo.getLinkedinUsername();\n\t\tString myspaceUsername = socialNetworkingInfo.getMyspaceUsername();\n\t\tString skypeUsername = socialNetworkingInfo.getSkypeUsername();\n\t\tString twitterUsername = socialNetworkingInfo.getTwitterUsername();\n\t\t\n\t\t// favourites and other\n\t\tString favouriteBooks = sakaiPerson.getFavouriteBooks();\n\t\tString favouriteTvShows = sakaiPerson.getFavouriteTvShows();\n\t\tString favouriteMovies = sakaiPerson.getFavouriteMovies();\n\t\tString favouriteQuotes = sakaiPerson.getFavouriteQuotes();\n\t\tString otherInformation = sakaiPerson.getNotes();\n\n\t\tint visibleFieldCount_personal = 0;\n\t\t\n\t\t//heading\n\t\tpersonalInfoContainer.add(new Label(\"mainSectionHeading_personal\", new ResourceModel(\"heading.interests\")));\n\t\t\n\t\t//social networking\n\t\t\n\t\t//facebook\n\t\tWebMarkupContainer facebookContainer = new WebMarkupContainer(\"facebookContainer\");\n\t\tfacebookContainer.add(new Label(\"facebookLabel\", new ResourceModel(\"profile.socialnetworking.facebook\")));\n\t\tfacebookContainer.add(new ExternalLink(\"facebookLink\", ProfileUtils.getFacebookURL(facebookUsername), ProfileUtils.getFacebookURL(facebookUsername)));\n\t\tpersonalInfoContainer.add(facebookContainer);\n\t\tif(StringUtils.isBlank(facebookUsername)) {\n\t\t\tfacebookContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//linkedin\n\t\tWebMarkupContainer linkedinContainer = new WebMarkupContainer(\"linkedinContainer\");\n\t\tlinkedinContainer.add(new Label(\"linkedinLabel\", new ResourceModel(\"profile.socialnetworking.linkedin\")));\n\t\tlinkedinContainer.add(new ExternalLink(\"linkedinLink\", ProfileUtils.getLinkedinURL(linkedinUsername), ProfileUtils.getLinkedinURL(linkedinUsername)));\n\t\tpersonalInfoContainer.add(linkedinContainer);\n\t\tif(StringUtils.isBlank(linkedinUsername)) {\n\t\t\tlinkedinContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//myspace\n\t\tWebMarkupContainer myspaceContainer = new WebMarkupContainer(\"myspaceContainer\");\n\t\tmyspaceContainer.add(new Label(\"myspaceLabel\", new ResourceModel(\"profile.socialnetworking.myspace\")));\n\t\tmyspaceContainer.add(new ExternalLink(\"myspaceLink\", ProfileUtils.getMyspaceURL(myspaceUsername), ProfileUtils.getMyspaceURL(myspaceUsername)));\n\t\tpersonalInfoContainer.add(myspaceContainer);\n\t\tif(StringUtils.isBlank(myspaceUsername)) {\n\t\t\tmyspaceContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//twitter\n\t\tWebMarkupContainer twitterContainer = new WebMarkupContainer(\"twitterContainer\");\n\t\ttwitterContainer.add(new Label(\"twitterLabel\", new ResourceModel(\"profile.socialnetworking.twitter\")));\n\t\ttwitterContainer.add(new ExternalLink(\"twitterLink\", ProfileUtils.getTwitterURL(twitterUsername), ProfileUtils.getTwitterURL(twitterUsername)));\n\t\tpersonalInfoContainer.add(twitterContainer);\n\t\tif(StringUtils.isBlank(twitterUsername)) {\n\t\t\ttwitterContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//skypeme\n\t\tWebMarkupContainer skypeContainer = new WebMarkupContainer(\"skypeContainer\");\n\t\tskypeContainer.add(new Label(\"skypeLabel\", new ResourceModel(\"profile.socialnetworking.skype\")));\n\t\tskypeContainer.add(new ExternalLink(\"skypeLink\", ProfileUtils.getSkypeMeURL(skypeUsername), new ResourceModel(\"profile.socialnetworking.skype.link\").getObject()));\n\t\tpersonalInfoContainer.add(skypeContainer);\n\t\tif(StringUtils.isBlank(skypeUsername)) {\n\t\t\tskypeContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite books\n\t\tWebMarkupContainer booksContainer = new WebMarkupContainer(\"booksContainer\");\n\t\tbooksContainer.add(new Label(\"booksLabel\", new ResourceModel(\"profile.favourite.books\")));\n\t\tbooksContainer.add(new Label(\"favouriteBooks\", favouriteBooks));\n\t\tpersonalInfoContainer.add(booksContainer);\n\t\tif(StringUtils.isBlank(favouriteBooks)) {\n\t\t\tbooksContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite tv shows\n\t\tWebMarkupContainer tvContainer = new WebMarkupContainer(\"tvContainer\");\n\t\ttvContainer.add(new Label(\"tvLabel\", new ResourceModel(\"profile.favourite.tv\")));\n\t\ttvContainer.add(new Label(\"favouriteTvShows\", favouriteTvShows));\n\t\tpersonalInfoContainer.add(tvContainer);\n\t\tif(StringUtils.isBlank(favouriteTvShows)) {\n\t\t\ttvContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite movies\n\t\tWebMarkupContainer moviesContainer = new WebMarkupContainer(\"moviesContainer\");\n\t\tmoviesContainer.add(new Label(\"moviesLabel\", new ResourceModel(\"profile.favourite.movies\")));\n\t\tmoviesContainer.add(new Label(\"favouriteMovies\", favouriteMovies));\n\t\tpersonalInfoContainer.add(moviesContainer);\n\t\tif(StringUtils.isBlank(favouriteMovies)) {\n\t\t\tmoviesContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite quotes\n\t\tWebMarkupContainer quotesContainer = new WebMarkupContainer(\"quotesContainer\");\n\t\tquotesContainer.add(new Label(\"quotesLabel\", new ResourceModel(\"profile.favourite.quotes\")));\n\t\tquotesContainer.add(new Label(\"favouriteQuotes\", favouriteQuotes));\n\t\tpersonalInfoContainer.add(quotesContainer);\n\t\tif(StringUtils.isBlank(favouriteQuotes)) {\n\t\t\tquotesContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite quotes\n\t\tWebMarkupContainer otherContainer = new WebMarkupContainer(\"otherContainer\");\n\t\totherContainer.add(new Label(\"otherLabel\", new ResourceModel(\"profile.other\")));\n\t\totherContainer.add(new Label(\"otherInformation\", ProfileUtils.escapeHtmlForDisplay(otherInformation)).setEscapeModelStrings(false));\n\t\tpersonalInfoContainer.add(otherContainer);\n\t\tif(StringUtils.isBlank(otherInformation)) {\n\t\t\totherContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t\n\t\tadd(personalInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_personal == 0 || !isPersonalInfoAllowed) {\n\t\t\tpersonalInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/* NO INFO VISIBLE MESSAGE (hide if some visible) */\n\t\tLabel noContainersVisible = new Label (\"noContainersVisible\", new ResourceModel(\"text.view.profile.nothing\"));\n\t\tnoContainersVisible.setOutputMarkupId(true);\n\t\tadd(noContainersVisible);\n\t\t\n\t\tif(visibleContainerCount > 0) {\n\t\t\tnoContainersVisible.setVisible(false);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/* SIDELINKS */\n\t\tWebMarkupContainer sideLinks = new WebMarkupContainer(\"sideLinks\");\n\t\tint visibleSideLinksCount = 0;\n\t\t\n\t\tWebMarkupContainer addFriendContainer = new WebMarkupContainer(\"addFriendContainer\");\n\t\t\n\t\t//ADD FRIEND MODAL WINDOW\n\t\tfinal ModalWindow addFriendWindow = new ModalWindow(\"addFriendWindow\");\n\n\t\t//FRIEND LINK/STATUS\n\t\tfinal AjaxLink<Void> addFriendLink = new AjaxLink<Void>(\"addFriendLink\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n    \t\t\taddFriendWindow.show(target);\n\t\t\t}\n\t\t};\n\t\t\n\t\tfinal Label addFriendLabel = new Label(\"addFriendLabel\");\n\t\taddFriendLink.add(addFriendLabel);\n\t\t\n\t\taddFriendContainer.add(addFriendLink);\n\t\t\n\t\t//setup link/label and windows\n\t\tif(friend) {\n\t\t\taddFriendLabel.setDefaultModel(new ResourceModel(\"text.friend.confirmed\"));\n    \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model<String>(\"instruction\")));\n\t\t\taddFriendLink.setEnabled(false);\n\t\t} else if (friendRequestToThisPerson) {\n\t\t\taddFriendLabel.setDefaultModel(new ResourceModel(\"text.friend.requested\"));\n    \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model<String>(\"instruction\")));\n\t\t\taddFriendLink.setEnabled(false);\n\t\t} else if (friendRequestFromThisPerson) {\n\t\t\t//TODO (confirm pending friend request link)\n\t\t\t//could be done by setting the content off the addFriendWindow.\n\t\t\t//will need to rename some links to make more generic and set the onClick and setContent in here for link and window\n\t\t\taddFriendLabel.setDefaultModel(new ResourceModel(\"text.friend.pending\"));\n    \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model<String>(\"instruction\")));\n\t\t\taddFriendLink.setEnabled(false);\n\t\t}  else {\n\t\t\taddFriendLabel.setDefaultModel(new StringResourceModel(\"link.friend.add.name\", null, new Object[]{ nickname } ));\n\t\t\taddFriendWindow.setContent(new AddFriend(addFriendWindow.getContentId(), addFriendWindow, friendActionModel, currentUserId, userUuid)); \n\t\t}\n\t\tsideLinks.add(addFriendContainer);\n\t\t\n\t\t\n\t\t//ADD FRIEND MODAL WINDOW HANDLER \n\t\taddFriendWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClose(AjaxRequestTarget target){\n            \tif(friendActionModel.isRequested()) { \n            \t\t//friend was successfully requested, update label and link\n            \t\taddFriendLabel.setDefaultModel(new ResourceModel(\"text.friend.requested\"));\n            \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model<String>(\"instruction\")));\n            \t\taddFriendLink.setEnabled(false);\n            \t\ttarget.addComponent(addFriendLink);\n            \t}\n            }\n        });\n\t\t\n\t\tadd(addFriendWindow);\n\t\t\n\t\t//hide connection link if not allowed\n\t\tif(!isConnectionAllowed) {\n\t\t\taddFriendContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleSideLinksCount++;\n\t\t}\n\t\t\n\t\t//hide entire list if no links to show\n\t\tif(visibleSideLinksCount == 0) {\n\t\t\tsideLinks.setVisible(false);\n\t\t}\n\t\t\n\t\tadd(sideLinks);\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/* FRIENDS FEED PANEL */\n\t\tif(isFriendsListVisible) {\n\t\t\tadd(new AjaxLazyLoadPanel(\"friendsFeed\") {\n\t\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t\t@Override\n\t            public Component getLazyLoadComponent(String markupId) {\n\t            \treturn new FriendsFeed(markupId, userUuid, currentUserId);\n\t            }\n\t\t\t\t\n\t        });\n\t\t} else {\n\t\t\tadd(new EmptyPanel(\"friendsFeed\").setVisible(false));\n\t\t}\n\t\t\n\t\t/* GALLERY FEED PANEL */\n\t\tif (sakaiProxy.isProfileGalleryEnabledGlobally() && isGalleryVisible) {\n\t\t\tadd(new AjaxLazyLoadPanel(\"galleryFeed\") {\n\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\n\t\t\t\t@Override\n\t\t\t\tpublic Component getLazyLoadComponent(String markupId) {\n\t\t\t\t\treturn new GalleryFeed(markupId, userUuid, currentUserId).setOutputMarkupId(true);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tadd(new EmptyPanel(\"galleryFeed\").setVisible(false));\n\t\t}\n\t}","id":27654,"modified_method":"public ViewProfile(final String userUuid)   {\n\t\t\n\t\tlog.debug(\"ViewProfile()\");\n\n\t\t//setup model to store the actions in the modal windows\n\t\tfinal FriendAction friendActionModel = new FriendAction();\n\t\t\n\t\t//get current user info\n\t\tUser currentUser = sakaiProxy.getUserQuietly(sakaiProxy.getCurrentUserId());\n\t\tfinal String currentUserId = currentUser.getId();\n\t\tString currentUserType = currentUser.getType();\n\t\t\n\t\t//double check, if somehow got to own ViewPage, redirect to MyProfile instead\n\t\tif(userUuid.equals(currentUserId)) {\n\t\t\tlog.warn(\"ViewProfile: user \" + userUuid + \" accessed ViewProfile for self. Redirecting...\");\n\t\t\tthrow new RestartResponseException(new MyProfile());\n\t\t}\n\t\t\n\t\t//check if super user, to grant editing rights to another user's profile\n\t\tif(sakaiProxy.isSuperUser()) {\n\t\t\tlog.warn(\"ViewProfile: superUser \" + currentUserId + \" accessed ViewProfile for \" + userUuid + \". Redirecting to allow edit.\");\n\t\t\tthrow new RestartResponseException(new MyProfile(userUuid));\n\t\t}\n\t\t\n\t\t//post view event\n\t\tsakaiProxy.postEvent(ProfileConstants.EVENT_PROFILE_VIEW_OTHER, \"/profile/\"+userUuid, false);\n\t\t\n\t\t/* DEPRECATED via PRFL-24 when privacy was relaxed\n\t\tif(!isProfileAllowed) {\n\t\t\tthrow new ProfileIllegalAccessException(\"User: \" + currentUserId + \" is not allowed to view profile for: \" + userUuid);\n\t\t}\n\t\t*/\n\t\t\n\t\t//holds number of profile containers that are visible\n\t\tint visibleContainerCount = 0;\n\t\t\n\t\t//get SakaiPerson for the person who's profile we are viewing\n\t\tSakaiPerson sakaiPerson = sakaiProxy.getSakaiPerson(userUuid);\n\t\t//if null, they have no profile so just get a prototype\n\t\tif(sakaiPerson == null) {\n\t\t\tlog.info(\"No SakaiPerson for \" + userUuid);\n\t\t\tsakaiPerson = sakaiProxy.getSakaiPersonPrototype();\n\t\t\t//if its still null, throw exception\n\t\t\tif(sakaiPerson == null) {\n\t\t\t\tthrow new ProfilePrototypeNotDefinedException(\"Couldn't create a SakaiPerson prototype for \" + userUuid);\n\t\t\t}\n\t\t} \n\t\t\n\t\t//get some values from SakaiPerson or SakaiProxy if empty\n\t\t//SakaiPerson returns NULL strings if value is not set, not blank ones\n\t\tUser user = sakaiProxy.getUserQuietly(userUuid);\n\t\tString userDisplayName = user.getDisplayName();\n\t\tString userType = user.getType();\n\t\t\n\t\t//init\n\t\tboolean friend = false;\n\t\tboolean friendRequestToThisPerson = false;\n\t\tboolean friendRequestFromThisPerson = false;\n\n\t\t//friend?\n\t\tfriend = profileLogic.isUserXFriendOfUserY(userUuid, currentUserId);\n\n\t\t//if not friend, has a friend request already been made to this person?\n\t\tif(!friend) {\n\t\t\tfriendRequestToThisPerson = profileLogic.isFriendRequestPending(currentUserId, userUuid);\n\t\t}\n\t\t\n\t\t//if not friend and no friend request to this person, has a friend request been made from this person to the current user?\n\t\tif(!friend && !friendRequestToThisPerson) {\n\t\t\tfriendRequestFromThisPerson = profileLogic.isFriendRequestPending(userUuid, currentUserId);\n\t\t}\n\t\t\n\t\t//privacy checks\n\t\tProfilePrivacy privacy = profileLogic.getPrivacyRecordForUser(userUuid);\n\t\t\n\t\tboolean isProfileImageAllowed = profileLogic.isUserXProfileImageVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tboolean isBasicInfoAllowed = profileLogic.isUserXBasicInfoVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tboolean isContactInfoAllowed = profileLogic.isUserXContactInfoVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tboolean isAcademicInfoAllowed = profileLogic.isUserXAcademicInfoVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tboolean isBusinessInfoAllowed = profileLogic.isUserXBusinessInfoVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tboolean isPersonalInfoAllowed = profileLogic.isUserXPersonalInfoVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tboolean isFriendsListVisible = profileLogic.isUserXFriendsListVisibleByUserY(userUuid, privacy, currentUserId, friend);\n\t\tfinal boolean isGalleryVisible = profileLogic.isUserXGalleryVisibleByUser(userUuid, privacy, currentUserId, friend);\n\t\tboolean isConnectionAllowed = sakaiProxy.isConnectionAllowedBetweenUserTypes(currentUserType, userType);\n\t\t\n\t\t/* IMAGE */\n\t\tadd(new ProfileImageRenderer(\"photo\", userUuid, isProfileImageAllowed, ProfileConstants.PROFILE_IMAGE_MAIN, true));\n\t\t\n\t\t/* NAME */\n\t\tLabel profileName = new Label(\"profileName\", userDisplayName);\n\t\tadd(profileName);\n\t\t\n\t\t/*STATUS PANEL */\n\t\tProfileStatusRenderer status = new ProfileStatusRenderer(\"status\", userUuid, privacy, currentUserId, friend, null, \"tiny\");\n\t\tstatus.setOutputMarkupId(true);\n\t\tadd(status);\n\t\t\n\t\t/* BASIC INFO */\n\t\tWebMarkupContainer basicInfoContainer = new WebMarkupContainer(\"mainSectionContainer_basic\");\n\t\tbasicInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//get info\n\t\tString nickname = sakaiPerson.getNickname();\n\t\tDate dateOfBirth = sakaiPerson.getDateOfBirth();\n\t\tString birthday = \"\";\n\t\tint visibleFieldCount_basic = 0;\n\t\t\n\t\tif(dateOfBirth != null) {\n\t\t\t\n\t\t\tif(profileLogic.isBirthYearVisible(userUuid)) {\n\t\t\t\tbirthday = ProfileUtils.convertDateToString(dateOfBirth, ProfileConstants.DEFAULT_DATE_FORMAT);\n\t\t\t} else {\n\t\t\t\tbirthday = ProfileUtils.convertDateToString(dateOfBirth, ProfileConstants.DEFAULT_DATE_FORMAT_HIDE_YEAR);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//heading\n\t\tbasicInfoContainer.add(new Label(\"mainSectionHeading_basic\", new ResourceModel(\"heading.basic\")));\n\t\t\n\t\t//nickname\n\t\tWebMarkupContainer nicknameContainer = new WebMarkupContainer(\"nicknameContainer\");\n\t\tnicknameContainer.add(new Label(\"nicknameLabel\", new ResourceModel(\"profile.nickname\")));\n\t\tnicknameContainer.add(new Label(\"nickname\", nickname));\n\t\tbasicInfoContainer.add(nicknameContainer);\n\t\tif(StringUtils.isBlank(nickname)) {\n\t\t\tnickname=\"\"; //for the 'add friend' link\n\t\t\tnicknameContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_basic++;\n\t\t}\n\t\t\n\t\t//birthday\n\t\tWebMarkupContainer birthdayContainer = new WebMarkupContainer(\"birthdayContainer\");\n\t\tbirthdayContainer.add(new Label(\"birthdayLabel\", new ResourceModel(\"profile.birthday\")));\n\t\tbirthdayContainer.add(new Label(\"birthday\", birthday));\n\t\tbasicInfoContainer.add(birthdayContainer);\n\t\tif(StringUtils.isBlank(birthday)) {\n\t\t\tbirthdayContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_basic++;\n\t\t}\n\t\t\n\t\tadd(basicInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_basic == 0 || !isBasicInfoAllowed) {\n\t\t\tbasicInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t/* CONTACT INFO */\n\t\tWebMarkupContainer contactInfoContainer = new WebMarkupContainer(\"mainSectionContainer_contact\");\n\t\tcontactInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//get info\n\t\tString email = sakaiProxy.getUserEmail(userUuid); //must come from SakaiProxy\n\t\tString homepage = sakaiPerson.getLabeledURI();\n\t\tString workphone = sakaiPerson.getTelephoneNumber();\n\t\tString homephone = sakaiPerson.getHomePhone();\n\t\tString mobilephone = sakaiPerson.getMobile();\n\t\tString facsimile = sakaiPerson.getFacsimileTelephoneNumber();\n\t\t\n\t\tint visibleFieldCount_contact = 0;\n\t\t\n\t\t//heading\n\t\tcontactInfoContainer.add(new Label(\"mainSectionHeading_contact\", new ResourceModel(\"heading.contact\")));\n\t\t\n\t\t//email\n\t\tWebMarkupContainer emailContainer = new WebMarkupContainer(\"emailContainer\");\n\t\temailContainer.add(new Label(\"emailLabel\", new ResourceModel(\"profile.email\")));\n\t\temailContainer.add(new Label(\"email\", email));\n\t\tcontactInfoContainer.add(emailContainer);\n\t\tif(StringUtils.isBlank(email)) {\n\t\t\temailContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//homepage\n\t\tWebMarkupContainer homepageContainer = new WebMarkupContainer(\"homepageContainer\");\n\t\thomepageContainer.add(new Label(\"homepageLabel\", new ResourceModel(\"profile.homepage\")));\n\t\thomepageContainer.add(new ExternalLink(\"homepage\", homepage, homepage));\n\t\tcontactInfoContainer.add(homepageContainer);\n\t\tif(StringUtils.isBlank(homepage)) {\n\t\t\thomepageContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//work phone\n\t\tWebMarkupContainer workphoneContainer = new WebMarkupContainer(\"workphoneContainer\");\n\t\tworkphoneContainer.add(new Label(\"workphoneLabel\", new ResourceModel(\"profile.phone.work\")));\n\t\tworkphoneContainer.add(new Label(\"workphone\", workphone));\n\t\tcontactInfoContainer.add(workphoneContainer);\n\t\tif(StringUtils.isBlank(workphone)) {\n\t\t\tworkphoneContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//home phone\n\t\tWebMarkupContainer homephoneContainer = new WebMarkupContainer(\"homephoneContainer\");\n\t\thomephoneContainer.add(new Label(\"homephoneLabel\", new ResourceModel(\"profile.phone.home\")));\n\t\thomephoneContainer.add(new Label(\"homephone\", homephone));\n\t\tcontactInfoContainer.add(homephoneContainer);\n\t\tif(StringUtils.isBlank(homephone)) {\n\t\t\thomephoneContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//mobile phone\n\t\tWebMarkupContainer mobilephoneContainer = new WebMarkupContainer(\"mobilephoneContainer\");\n\t\tmobilephoneContainer.add(new Label(\"mobilephoneLabel\", new ResourceModel(\"profile.phone.mobile\")));\n\t\tmobilephoneContainer.add(new Label(\"mobilephone\", mobilephone));\n\t\tcontactInfoContainer.add(mobilephoneContainer);\n\t\tif(StringUtils.isBlank(mobilephone)) {\n\t\t\tmobilephoneContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\t//facsimile\n\t\tWebMarkupContainer facsimileContainer = new WebMarkupContainer(\"facsimileContainer\");\n\t\tfacsimileContainer.add(new Label(\"facsimileLabel\", new ResourceModel(\"profile.phone.facsimile\")));\n\t\tfacsimileContainer.add(new Label(\"facsimile\", facsimile));\n\t\tcontactInfoContainer.add(facsimileContainer);\n\t\tif(StringUtils.isBlank(facsimile)) {\n\t\t\tfacsimileContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_contact++;\n\t\t}\n\t\t\n\t\tadd(contactInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_contact == 0 || !isContactInfoAllowed) {\n\t\t\tcontactInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t\n\t\t/* ACADEMIC INFO */\n\t\tWebMarkupContainer academicInfoContainer = new WebMarkupContainer(\"mainSectionContainer_academic\");\n\t\tacademicInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//get info\n\t\tString department = sakaiPerson.getOrganizationalUnit();\n\t\tString position = sakaiPerson.getTitle();\n\t\tString school = sakaiPerson.getCampus();\n\t\tString room = sakaiPerson.getRoomNumber();\n\t\tString course = sakaiPerson.getEducationCourse();\n\t\tString subjects = sakaiPerson.getEducationSubjects();\n\t\t\n\t\tint visibleFieldCount_academic = 0;\n\t\t\n\t\t//heading\n\t\tacademicInfoContainer.add(new Label(\"mainSectionHeading_academic\", new ResourceModel(\"heading.academic\")));\n\t\t\n\t\t//department\n\t\tWebMarkupContainer departmentContainer = new WebMarkupContainer(\"departmentContainer\");\n\t\tdepartmentContainer.add(new Label(\"departmentLabel\", new ResourceModel(\"profile.department\")));\n\t\tdepartmentContainer.add(new Label(\"department\", department));\n\t\tacademicInfoContainer.add(departmentContainer);\n\t\tif(StringUtils.isBlank(department)) {\n\t\t\tdepartmentContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//position\n\t\tWebMarkupContainer positionContainer = new WebMarkupContainer(\"positionContainer\");\n\t\tpositionContainer.add(new Label(\"positionLabel\", new ResourceModel(\"profile.position\")));\n\t\tpositionContainer.add(new Label(\"position\", position));\n\t\tacademicInfoContainer.add(positionContainer);\n\t\tif(StringUtils.isBlank(position)) {\n\t\t\tpositionContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//school\n\t\tWebMarkupContainer schoolContainer = new WebMarkupContainer(\"schoolContainer\");\n\t\tschoolContainer.add(new Label(\"schoolLabel\", new ResourceModel(\"profile.school\")));\n\t\tschoolContainer.add(new Label(\"school\", school));\n\t\tacademicInfoContainer.add(schoolContainer);\n\t\tif(StringUtils.isBlank(school)) {\n\t\t\tschoolContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//room\n\t\tWebMarkupContainer roomContainer = new WebMarkupContainer(\"roomContainer\");\n\t\troomContainer.add(new Label(\"roomLabel\", new ResourceModel(\"profile.room\")));\n\t\troomContainer.add(new Label(\"room\", room));\n\t\tacademicInfoContainer.add(roomContainer);\n\t\tif(StringUtils.isBlank(room)) {\n\t\t\troomContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//course\n\t\tWebMarkupContainer courseContainer = new WebMarkupContainer(\"courseContainer\");\n\t\tcourseContainer.add(new Label(\"courseLabel\", new ResourceModel(\"profile.course\")));\n\t\tcourseContainer.add(new Label(\"course\", course));\n\t\tacademicInfoContainer.add(courseContainer);\n\t\tif(StringUtils.isBlank(course)) {\n\t\t\tcourseContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\t//subjects\n\t\tWebMarkupContainer subjectsContainer = new WebMarkupContainer(\"subjectsContainer\");\n\t\tsubjectsContainer.add(new Label(\"subjectsLabel\", new ResourceModel(\"profile.subjects\")));\n\t\tsubjectsContainer.add(new Label(\"subjects\", subjects));\n\t\tacademicInfoContainer.add(subjectsContainer);\n\t\tif(StringUtils.isBlank(subjects)) {\n\t\t\tsubjectsContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_academic++;\n\t\t}\n\t\t\n\t\tadd(academicInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_academic == 0 || !isAcademicInfoAllowed) {\n\t\t\tacademicInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t/* BUSINESS INFO (OPTIONAL) */\n\t\tif (sakaiProxy.isBusinessProfileEnabled()) {\n\t\t\tViewBusiness businessPanel = new ViewBusiness(\"viewBusiness\",\n\t\t\t\t\tuserUuid, sakaiPerson, isBusinessInfoAllowed);\n\n\t\t\tif (0 == businessPanel.getVisibleFieldCount() || !isBusinessInfoAllowed) {\n\t\t\t\tbusinessPanel.setVisible(false);\n\t\t\t} else {\n\t\t\t\tvisibleContainerCount++;\n\t\t\t}\n\t\t\tadd(businessPanel);\n\t\t\t\n\t\t} else {\n\t\t\tPanel businessPanel = new EmptyPanel(\"viewBusiness\");\n\t\t\tadd(businessPanel);\n\t\t}\n\t\t\n\t\t/* PERSONAL INFO */\n\t\tWebMarkupContainer personalInfoContainer = new WebMarkupContainer(\"mainSectionContainer_personal\");\n\t\tpersonalInfoContainer.setOutputMarkupId(true);\n\t\t\n\t\t//setup info\n\t\t\n\t\t// social networking\n\t\tSocialNetworkingInfo socialNetworkingInfo = profileLogic.getSocialNetworkingInfo(userUuid);\n\t\tString facebookUsername = socialNetworkingInfo.getFacebookUsername();\n\t\tString linkedinUsername = socialNetworkingInfo.getLinkedinUsername();\n\t\tString myspaceUsername = socialNetworkingInfo.getMyspaceUsername();\n\t\tString skypeUsername = socialNetworkingInfo.getSkypeUsername();\n\t\tString twitterUsername = socialNetworkingInfo.getTwitterUsername();\n\t\t\n\t\t// favourites and other\n\t\tString favouriteBooks = sakaiPerson.getFavouriteBooks();\n\t\tString favouriteTvShows = sakaiPerson.getFavouriteTvShows();\n\t\tString favouriteMovies = sakaiPerson.getFavouriteMovies();\n\t\tString favouriteQuotes = sakaiPerson.getFavouriteQuotes();\n\t\tString otherInformation = sakaiPerson.getNotes();\n\n\t\tint visibleFieldCount_personal = 0;\n\t\t\n\t\t//heading\n\t\tpersonalInfoContainer.add(new Label(\"mainSectionHeading_personal\", new ResourceModel(\"heading.interests\")));\n\t\t\n\t\t//social networking\n\t\t\n\t\t//facebook\n\t\tWebMarkupContainer facebookContainer = new WebMarkupContainer(\"facebookContainer\");\n\t\tfacebookContainer.add(new Label(\"facebookLabel\", new ResourceModel(\"profile.socialnetworking.facebook\")));\n\t\tfacebookContainer.add(new ExternalLink(\"facebookLink\", ProfileUtils.getFacebookURL(facebookUsername), ProfileUtils.getFacebookURL(facebookUsername)));\n\t\tpersonalInfoContainer.add(facebookContainer);\n\t\tif(StringUtils.isBlank(facebookUsername)) {\n\t\t\tfacebookContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//linkedin\n\t\tWebMarkupContainer linkedinContainer = new WebMarkupContainer(\"linkedinContainer\");\n\t\tlinkedinContainer.add(new Label(\"linkedinLabel\", new ResourceModel(\"profile.socialnetworking.linkedin\")));\n\t\tlinkedinContainer.add(new ExternalLink(\"linkedinLink\", ProfileUtils.getLinkedinURL(linkedinUsername), ProfileUtils.getLinkedinURL(linkedinUsername)));\n\t\tpersonalInfoContainer.add(linkedinContainer);\n\t\tif(StringUtils.isBlank(linkedinUsername)) {\n\t\t\tlinkedinContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//myspace\n\t\tWebMarkupContainer myspaceContainer = new WebMarkupContainer(\"myspaceContainer\");\n\t\tmyspaceContainer.add(new Label(\"myspaceLabel\", new ResourceModel(\"profile.socialnetworking.myspace\")));\n\t\tmyspaceContainer.add(new ExternalLink(\"myspaceLink\", ProfileUtils.getMyspaceURL(myspaceUsername), ProfileUtils.getMyspaceURL(myspaceUsername)));\n\t\tpersonalInfoContainer.add(myspaceContainer);\n\t\tif(StringUtils.isBlank(myspaceUsername)) {\n\t\t\tmyspaceContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//twitter\n\t\tWebMarkupContainer twitterContainer = new WebMarkupContainer(\"twitterContainer\");\n\t\ttwitterContainer.add(new Label(\"twitterLabel\", new ResourceModel(\"profile.socialnetworking.twitter\")));\n\t\ttwitterContainer.add(new ExternalLink(\"twitterLink\", ProfileUtils.getTwitterURL(twitterUsername), ProfileUtils.getTwitterURL(twitterUsername)));\n\t\tpersonalInfoContainer.add(twitterContainer);\n\t\tif(StringUtils.isBlank(twitterUsername)) {\n\t\t\ttwitterContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//skypeme\n\t\tWebMarkupContainer skypeContainer = new WebMarkupContainer(\"skypeContainer\");\n\t\tskypeContainer.add(new Label(\"skypeLabel\", new ResourceModel(\"profile.socialnetworking.skype\")));\n\t\tskypeContainer.add(new ExternalLink(\"skypeLink\", ProfileUtils.getSkypeMeURL(skypeUsername), new ResourceModel(\"profile.socialnetworking.skype.link\").getObject()));\n\t\tpersonalInfoContainer.add(skypeContainer);\n\t\tif(StringUtils.isBlank(skypeUsername)) {\n\t\t\tskypeContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite books\n\t\tWebMarkupContainer booksContainer = new WebMarkupContainer(\"booksContainer\");\n\t\tbooksContainer.add(new Label(\"booksLabel\", new ResourceModel(\"profile.favourite.books\")));\n\t\tbooksContainer.add(new Label(\"favouriteBooks\", favouriteBooks));\n\t\tpersonalInfoContainer.add(booksContainer);\n\t\tif(StringUtils.isBlank(favouriteBooks)) {\n\t\t\tbooksContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite tv shows\n\t\tWebMarkupContainer tvContainer = new WebMarkupContainer(\"tvContainer\");\n\t\ttvContainer.add(new Label(\"tvLabel\", new ResourceModel(\"profile.favourite.tv\")));\n\t\ttvContainer.add(new Label(\"favouriteTvShows\", favouriteTvShows));\n\t\tpersonalInfoContainer.add(tvContainer);\n\t\tif(StringUtils.isBlank(favouriteTvShows)) {\n\t\t\ttvContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite movies\n\t\tWebMarkupContainer moviesContainer = new WebMarkupContainer(\"moviesContainer\");\n\t\tmoviesContainer.add(new Label(\"moviesLabel\", new ResourceModel(\"profile.favourite.movies\")));\n\t\tmoviesContainer.add(new Label(\"favouriteMovies\", favouriteMovies));\n\t\tpersonalInfoContainer.add(moviesContainer);\n\t\tif(StringUtils.isBlank(favouriteMovies)) {\n\t\t\tmoviesContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite quotes\n\t\tWebMarkupContainer quotesContainer = new WebMarkupContainer(\"quotesContainer\");\n\t\tquotesContainer.add(new Label(\"quotesLabel\", new ResourceModel(\"profile.favourite.quotes\")));\n\t\tquotesContainer.add(new Label(\"favouriteQuotes\", favouriteQuotes));\n\t\tpersonalInfoContainer.add(quotesContainer);\n\t\tif(StringUtils.isBlank(favouriteQuotes)) {\n\t\t\tquotesContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t//favourite quotes\n\t\tWebMarkupContainer otherContainer = new WebMarkupContainer(\"otherContainer\");\n\t\totherContainer.add(new Label(\"otherLabel\", new ResourceModel(\"profile.other\")));\n\t\totherContainer.add(new Label(\"otherInformation\", ProfileUtils.escapeHtmlForDisplay(otherInformation)).setEscapeModelStrings(false));\n\t\tpersonalInfoContainer.add(otherContainer);\n\t\tif(StringUtils.isBlank(otherInformation)) {\n\t\t\totherContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleFieldCount_personal++;\n\t\t}\n\t\t\n\t\t\n\t\tadd(personalInfoContainer);\n\t\t\n\t\t//if nothing/not allowed, hide whole panel\n\t\tif(visibleFieldCount_personal == 0 || !isPersonalInfoAllowed) {\n\t\t\tpersonalInfoContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleContainerCount++;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/* NO INFO VISIBLE MESSAGE (hide if some visible) */\n\t\tLabel noContainersVisible = new Label (\"noContainersVisible\", new ResourceModel(\"text.view.profile.nothing\"));\n\t\tnoContainersVisible.setOutputMarkupId(true);\n\t\tadd(noContainersVisible);\n\t\t\n\t\tif(visibleContainerCount > 0) {\n\t\t\tnoContainersVisible.setVisible(false);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/* SIDELINKS */\n\t\tWebMarkupContainer sideLinks = new WebMarkupContainer(\"sideLinks\");\n\t\tint visibleSideLinksCount = 0;\n\t\t\n\t\tWebMarkupContainer addFriendContainer = new WebMarkupContainer(\"addFriendContainer\");\n\t\t\n\t\t//ADD FRIEND MODAL WINDOW\n\t\tfinal ModalWindow addFriendWindow = new ModalWindow(\"addFriendWindow\");\n\n\t\t//FRIEND LINK/STATUS\n\t\tfinal AjaxLink<Void> addFriendLink = new AjaxLink<Void>(\"addFriendLink\") {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n    \t\t\taddFriendWindow.show(target);\n\t\t\t}\n\t\t};\n\t\t\n\t\tfinal Label addFriendLabel = new Label(\"addFriendLabel\");\n\t\taddFriendLink.add(addFriendLabel);\n\t\t\n\t\taddFriendContainer.add(addFriendLink);\n\t\t\n\t\t//setup link/label and windows\n\t\tif(friend) {\n\t\t\taddFriendLabel.setDefaultModel(new ResourceModel(\"text.friend.confirmed\"));\n    \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model<String>(\"instruction\")));\n\t\t\taddFriendLink.setEnabled(false);\n\t\t} else if (friendRequestToThisPerson) {\n\t\t\taddFriendLabel.setDefaultModel(new ResourceModel(\"text.friend.requested\"));\n    \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model<String>(\"instruction\")));\n\t\t\taddFriendLink.setEnabled(false);\n\t\t} else if (friendRequestFromThisPerson) {\n\t\t\t//TODO (confirm pending friend request link)\n\t\t\t//could be done by setting the content off the addFriendWindow.\n\t\t\t//will need to rename some links to make more generic and set the onClick and setContent in here for link and window\n\t\t\taddFriendLabel.setDefaultModel(new ResourceModel(\"text.friend.pending\"));\n    \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model<String>(\"instruction\")));\n\t\t\taddFriendLink.setEnabled(false);\n\t\t}  else {\n\t\t\taddFriendLabel.setDefaultModel(new StringResourceModel(\"link.friend.add.name\", null, new Object[]{ nickname } ));\n\t\t\taddFriendWindow.setContent(new AddFriend(addFriendWindow.getContentId(), addFriendWindow, friendActionModel, currentUserId, userUuid)); \n\t\t}\n\t\tsideLinks.add(addFriendContainer);\n\t\t\n\t\t\n\t\t//ADD FRIEND MODAL WINDOW HANDLER \n\t\taddFriendWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\tpublic void onClose(AjaxRequestTarget target){\n            \tif(friendActionModel.isRequested()) { \n            \t\t//friend was successfully requested, update label and link\n            \t\taddFriendLabel.setDefaultModel(new ResourceModel(\"text.friend.requested\"));\n            \t\taddFriendLink.add(new AttributeModifier(\"class\", true, new Model<String>(\"instruction\")));\n            \t\taddFriendLink.setEnabled(false);\n            \t\ttarget.addComponent(addFriendLink);\n            \t}\n            }\n        });\n\t\t\n\t\tadd(addFriendWindow);\n\t\t\n\t\t//hide connection link if not allowed\n\t\tif(!isConnectionAllowed) {\n\t\t\taddFriendContainer.setVisible(false);\n\t\t} else {\n\t\t\tvisibleSideLinksCount++;\n\t\t}\n\t\t\n\t\t//hide entire list if no links to show\n\t\tif(visibleSideLinksCount == 0) {\n\t\t\tsideLinks.setVisible(false);\n\t\t}\n\t\t\n\t\tadd(sideLinks);\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/* FRIENDS FEED PANEL */\n\t\tif(isFriendsListVisible) {\n\t\t\tadd(new AjaxLazyLoadPanel(\"friendsFeed\") {\n\t\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t\t@Override\n\t            public Component getLazyLoadComponent(String markupId) {\n\t            \treturn new FriendsFeed(markupId, userUuid, currentUserId);\n\t            }\n\t\t\t\t\n\t        });\n\t\t} else {\n\t\t\tadd(new EmptyPanel(\"friendsFeed\").setVisible(false));\n\t\t}\n\t\t\n\t\t/* GALLERY FEED PANEL */\n\t\tif (sakaiProxy.isProfileGalleryEnabledGlobally() && isGalleryVisible) {\n\t\t\tadd(new AjaxLazyLoadPanel(\"galleryFeed\") {\n\t\t\t\tprivate static final long serialVersionUID = 1L;\n\t\n\t\t\t\t@Override\n\t\t\t\tpublic Component getLazyLoadComponent(String markupId) {\n\t\t\t\t\treturn new GalleryFeed(markupId, userUuid, currentUserId).setOutputMarkupId(true);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tadd(new EmptyPanel(\"galleryFeed\").setVisible(false));\n\t\t}\n\t}","commit_id":"d11c8b613855707da5aacc1ae06e87da98f0cc03","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void paintComponent(Graphics g)\n        {\n            super.paintComponent(g);\n\n            g = g.create();\n            try\n            {\n                AntialiasingManager.activateAntialiasing(g);\n\n                Graphics2D g2 = (Graphics2D) g;\n                int width = getWidth();\n                int height = getHeight();\n\n                g2.setColor(Color.WHITE);\n\n                g2.fillRoundRect(0, 0, width - 1, height - 1, 15, 15);\n\n                g2.setColor(Color.GRAY);\n\n                g2.drawRoundRect(0, 0, width - 1, height - 1, 15, 15);\n\n                // paint the image\n                if (isWindowImageBgEnabled && bgImage != null)\n                {\n                    if (isTextureBackground)\n                    {\n                        g2.setPaint(texture);\n\n                        g2.fillRect(0, 0, width, height);\n                    }\n                    else\n                    {\n                        g.setColor(new Color(GuiActivator.getResources()\n                            .getColor(\"contactListBackground\")));\n\n                        // paint the background with the choosen color\n                        g.fillRect(0, 0, width, height);\n\n                        g2.drawImage(bgImage, width - bgImage.getWidth(),\n                            height - bgImage.getHeight(), this);\n                    }\n                }\n            }\n            finally\n            {\n                g.dispose();\n            }\n        }","id":27655,"modified_method":"public void paintComponent(Graphics g)\n        {\n            super.paintComponent(g);\n\n            g = g.create();\n            try\n            {\n                AntialiasingManager.activateAntialiasing(g);\n\n                Graphics2D g2 = (Graphics2D) g;\n                int width = getWidth();\n                int height = getHeight();\n\n                g2.setColor(Color.WHITE);\n\n                g2.fillRoundRect(0, 0, width - 1, height - 1, 15, 15);\n\n                g2.setColor(Color.GRAY);\n\n                g2.drawRoundRect(0, 0, width - 1, height - 1, 15, 15);\n\n                // paint the image\n                if (bgImage != null)\n                {\n                    if (texture != null)\n                    {\n                        g2.setPaint(texture);\n\n                        g2.fillRect(0, 0, width, height);\n                    }\n                    else\n                    {\n                        g.setColor(color);\n\n                        // paint the background with the chosen color\n                        g.fillRect(0, 0, width, height);\n\n                        g2.drawImage(bgImage, width - bgImage.getWidth(),\n                            height - bgImage.getHeight(), this);\n                    }\n                }\n            }\n            finally\n            {\n                g.dispose();\n            }\n        }","commit_id":"d8c9db8af99ae57263b412e583c7049e75192f4e","url":"https://github.com/jitsi/jitsi"},{"original_method":"public SCViewport()\n        {\n            this.setOpaque(false);\n            this.setBorder(null);\n        }","id":27656,"modified_method":"public SCViewport()\n        {\n            this.setOpaque(false);\n            this.setBorder(null);\n\n            if (getSettingsBoolean(\"impl.gui.IS_WINDOW_BACKGROUND_ENABLED\"))\n            {\n                bgImage =\n                    ImageLoader.getImage(ImageLoader.MAIN_WINDOW_BACKGROUND);\n\n                if (getSettingsBoolean(\"impl.gui.IS_TEXTURE_BACKGROUND\")\n                    && (bgImage != null))\n                {\n                    texture =\n                        new TexturePaint(bgImage, new Rectangle(0, 0, bgImage\n                            .getWidth(null), bgImage.getHeight(null)));\n                    color = null;\n                }\n                else\n                {\n                    texture = null;\n                    color =\n                        new Color(GuiActivator.getResources().getColor(\n                            \"contactListBackground\"));\n                }\n            }\n            else\n            {\n                bgImage = null;\n                texture = null;\n                color = null;\n            }\n        }","commit_id":"d8c9db8af99ae57263b412e583c7049e75192f4e","url":"https://github.com/jitsi/jitsi"},{"original_method":"public SCScrollPane()\n    {\n        super();\n\n        this.setBorder(null);\n        this.setOpaque(false);\n\n        this.setViewport(new SCViewport());\n\n        this.getVerticalScrollBar().setUnitIncrement(30);\n\n        String windowImageBackgroundProperty\n            = \"impl.gui.IS_WINDOW_BACKGROUND_ENABLED\";\n\n        isWindowImageBgEnabled = new Boolean(GuiActivator.getResources()\n            .getSettingsString(windowImageBackgroundProperty)).booleanValue();\n\n        if (isWindowImageBgEnabled)\n            this.initBackgroundImage();\n    }","id":27657,"modified_method":"public SCScrollPane()\n    {\n        this.setBorder(null);\n        this.setOpaque(false);\n\n        this.setViewport(new SCViewport());\n\n        this.getVerticalScrollBar().setUnitIncrement(30);\n    }","commit_id":"d8c9db8af99ae57263b412e583c7049e75192f4e","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void paintComponent(Graphics g)\n        {\n            super.paintComponent(g);\n\n            g = g.create();\n            try\n            {\n                internalPaintComponent(g);\n            }\n            finally\n            {\n                g.dispose();\n            }\n        }","id":27658,"modified_method":"public void paintComponent(Graphics g)\n        {\n            super.paintComponent(g);\n\n            // If the custom color window background is not enabled we have\n            // nothing to do here.\n            if (!isColorBgEnabled)\n                return;\n\n            g = g.create();\n            try\n            {\n                internalPaintComponent(g);\n            }\n            finally\n            {\n                g.dispose();\n            }\n        }","commit_id":"d8c9db8af99ae57263b412e583c7049e75192f4e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Positions this window in the center of the screen.\n     */\n    private void setCenterLocation()\n    {\n        this.setLocation(\n                Toolkit.getDefaultToolkit().getScreenSize().width/2\n                    - this.getWidth()/2,\n                Toolkit.getDefaultToolkit().getScreenSize().height/2\n                    - this.getHeight()/2\n                );\n    }","id":27659,"modified_method":"/**\n     * Positions this window in the center of the screen.\n     */\n    private void setCenterLocation()\n    {\n        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n        this.setLocation(screenSize.width / 2 - this.getWidth() / 2,\n            screenSize.height / 2 - this.getHeight() / 2);\n    }","commit_id":"d8c9db8af99ae57263b412e583c7049e75192f4e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Sets window size and position.\n     */\n    public void setSizeAndLocation()\n    {\n        ConfigurationService configService\n            = GuiActivator.getConfigurationService();\n\n        String className = this.getClass().getName();\n\n        String widthString = configService.getString(\n            className + \".width\");\n\n        String heightString = configService.getString(\n            className + \".height\");\n\n        String xString = configService.getString(\n            className + \".x\");\n\n        String yString = configService.getString(\n            className + \".y\");\n\n        int width = 0;\n        int height = 0;\n\n        int screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;\n        int screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;\n\n        if(widthString != null && heightString != null)\n        {\n            width = new Integer(widthString).intValue();\n            height = new Integer(heightString).intValue();\n\n            if(width > 0 && height > 0\n                && width <= screenWidth && height <= screenHeight)\n                this.setSize(width, height);\n        }\n\n        int x = 0;\n        int y = 0;\n\n        if(xString != null && yString != null)\n        {\n            x = new Integer(xString).intValue();\n            y = new Integer(yString).intValue();\n\n            this.setLocation(x, y);\n        } else\n        {\n            this.setCenterLocation();\n        }\n    }","id":27660,"modified_method":"/**\n     * Sets window size and position.\n     */\n    public void setSizeAndLocation()\n    {\n        ConfigurationService configService =\n            GuiActivator.getConfigurationService();\n\n        String className = this.getClass().getName();\n\n        String widthString = configService.getString(className + \".width\");\n\n        String heightString = configService.getString(className + \".height\");\n\n        String xString = configService.getString(className + \".x\");\n\n        String yString = configService.getString(className + \".y\");\n\n        int width = 0;\n        int height = 0;\n\n        if (widthString != null && heightString != null)\n        {\n            width = new Integer(widthString).intValue();\n            height = new Integer(heightString).intValue();\n\n            if (width > 0 && height > 0)\n            {\n                Dimension screenSize =\n                    Toolkit.getDefaultToolkit().getScreenSize();\n                if (width <= screenSize.width && height <= screenSize.height)\n                    this.setSize(width, height);\n            }\n        }\n\n        int x = 0;\n        int y = 0;\n\n        if (xString != null && yString != null)\n        {\n            x = new Integer(xString).intValue();\n            y = new Integer(yString).intValue();\n\n            this.setLocation(x, y);\n        }\n        else\n        {\n            this.setCenterLocation();\n        }\n    }","commit_id":"d8c9db8af99ae57263b412e583c7049e75192f4e","url":"https://github.com/jitsi/jitsi"},{"original_method":"private void internalPaintComponent(Graphics g)\n        {\n            // If the custom color window background is not enabled we have\n            // nothing to do here.\n            if (!isColorBgEnabled)\n                return;\n\n            Graphics2D g2 = (Graphics2D) g;\n\n            AntialiasingManager.activateAntialiasing(g2);\n\n            GradientPaint bgGradientColor\n                = new GradientPaint(this.getWidth()/2, 0,\n                bgStartColor,\n                this.getWidth()/2,\n                80,\n                bgEndColor);\n\n            g2.setPaint(bgGradientColor);\n            g2.fillRect(0, 0, this.getWidth(), 80);\n\n            g2.setColor(bgEndColor);\n            g2.fillRect(0, 78,\n                    this.getWidth(),\n                    this.getHeight());\n\n            GradientPaint curveShadow = new GradientPaint(0, 0,\n                new Color(255, 255, 255, 150),\n                this.getWidth(),\n                this.getHeight(),\n                new Color(255, 255, 255, 50));\n\n            g2.setPaint(curveShadow);\n            g2.setStroke(new BasicStroke(1f));\n            CubicCurve2D curve1 = new CubicCurve2D.Float(\n                50, -1, 250, 30, 50, 150, 0, 300);\n\n            g2.draw(curve1);\n\n            CubicCurve2D curve2 = new CubicCurve2D.Float(\n                this.getWidth() - 20, 0,\n                this.getWidth(), 100,\n                this.getWidth()/2, 100,\n                0, 150);\n\n            g2.draw(curve2);\n\n            CubicCurve2D curve3 = new CubicCurve2D.Float(\n                0, 90,\n                this.getWidth()/3, 60,\n                2*this.getWidth()/3, 60,\n                this.getWidth(), 90);\n\n            g2.draw(curve3);\n        }","id":27661,"modified_method":"private void internalPaintComponent(Graphics g)\n        {\n            AntialiasingManager.activateAntialiasing(g);\n\n            Graphics2D g2 = (Graphics2D) g;\n            int width = getWidth();\n            int height = getHeight();\n\n            GradientPaint bgGradientColor =\n                new GradientPaint(width / 2, 0, bgStartColor, width / 2, 80,\n                    bgEndColor);\n\n            g2.setPaint(bgGradientColor);\n            g2.fillRect(0, 0, width, 80);\n\n            g2.setColor(bgEndColor);\n            g2.fillRect(0, 78, width, height);\n\n            GradientPaint curveShadow =\n                new GradientPaint(0, 0, new Color(255, 255, 255, 150), width,\n                    height, new Color(255, 255, 255, 50));\n\n            g2.setPaint(curveShadow);\n            g2.setStroke(new BasicStroke(1f));\n            CubicCurve2D curve1 =\n                new CubicCurve2D.Float(50, -1, 250, 30, 50, 150, 0, 300);\n\n            g2.draw(curve1);\n\n            CubicCurve2D curve2 =\n                new CubicCurve2D.Float(width - 20, 0, width, 100, width / 2,\n                    100, 0, 150);\n\n            g2.draw(curve2);\n\n            CubicCurve2D curve3 =\n                new CubicCurve2D.Float(0, 90, width / 3, 60, 2 * width / 3, 60,\n                    width, 90);\n\n            g2.draw(curve3);\n        }","commit_id":"d8c9db8af99ae57263b412e583c7049e75192f4e","url":"https://github.com/jitsi/jitsi"},{"original_method":"public MainContentPane()\n        {\n            super(new BorderLayout());\n\n            int borderSize = GuiActivator.getResources()\n                .getSettingsInt(\"impl.gui.MAIN_WINDOW_BORDER_SIZE\");\n\n            if (isColorBgEnabled)\n            {\n                this.setBorder(BorderFactory\n                    .createEmptyBorder( borderSize,\n                                        borderSize,\n                                        borderSize,\n                                        borderSize));\n            }\n        }","id":27662,"modified_method":"public MainContentPane()\n        {\n            super(new BorderLayout());\n\n            ResourceManagementService resources = GuiActivator.getResources();\n\n            isColorBgEnabled =\n                new Boolean(resources.getSettingsString(\n                    \"impl.gui.IS_WINDOW_COLOR_BACKGROUND_ENABLED\"))\n                    .booleanValue();\n            if (isColorBgEnabled)\n            {\n                bgStartColor =\n                    new Color(resources.getColor(\"service.gui.MAIN_BACKGROUND\"));\n                bgEndColor =\n                    new Color(resources\n                        .getColor(\"service.gui.MAIN_BACKGROUND_GRADIENT\"));\n\n                int borderSize =\n                    resources\n                        .getSettingsInt(\"impl.gui.MAIN_WINDOW_BORDER_SIZE\");\n                this.setBorder(BorderFactory.createEmptyBorder(borderSize,\n                    borderSize, borderSize, borderSize));\n            }\n            else\n            {\n                bgStartColor = null;\n                bgEndColor = null;\n            }\n        }","commit_id":"d8c9db8af99ae57263b412e583c7049e75192f4e","url":"https://github.com/jitsi/jitsi"},{"original_method":"public SIPCommFrame()\n    {\n        this.init();\n    }","id":27663,"modified_method":"public SIPCommFrame()\n    {\n        this.setContentPane(new MainContentPane());\n\n        Image scLogo = ImageLoader.getImage(ImageLoader.SIP_COMMUNICATOR_LOGO);\n        this.setIconImage(scLogo);\n\n        // In order to have the same icon when using option panes\n        JOptionPane.getRootFrame().setIconImage(scLogo);\n\n        this.addWindowListener(new FrameWindowAdapter());\n\n        JRootPane rootPane = getRootPane();\n        amap = rootPane.getActionMap();\n        amap.put(\"close\", new CloseAction());\n\n        imap =\n            rootPane.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);\n    }","commit_id":"d8c9db8af99ae57263b412e583c7049e75192f4e","url":"https://github.com/jitsi/jitsi"},{"original_method":"protected void paintComponent(Graphics g)\r\n        {\r\n            super.paintComponent(g);\r\n\r\n            Graphics2D g2 = (Graphics2D) g;\r\n\r\n            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\r\n                RenderingHints.VALUE_ANTIALIAS_ON);\r\n\r\n            g2.drawImage(bgImage, 0, 0, null);\r\n        }","id":27664,"modified_method":"protected void paintComponent(Graphics g)\r\n        {\r\n            super.paintComponent(g);\r\n\r\n            g = g.create();\r\n            try\r\n            {\r\n                AntialiasingManager.activateAntialiasing(g);\r\n                g.drawImage(bgImage, 0, 0, null);\r\n            }\r\n            finally\r\n            {\r\n                g.dispose();\r\n            }\r\n        }","commit_id":"401a9bf9c75686486bd79f5a157b9fb00e85634f","url":"https://github.com/jitsi/jitsi"},{"original_method":"protected void paintComponent(Graphics g)\r\n        {\r\n            super.paintComponent(g);\r\n\r\n            activateAntialiasing(g);\r\n\r\n            Graphics2D g2 = (Graphics2D) g;\r\n\r\n            g2.drawImage(bgImage, 0, 0, null);\r\n\r\n//            g2.setColor(new Color(255, 255, 255, 100));\r\n//\r\n//            g2.fillRect(0, 0, getWidth(), getHeight());\r\n        }","id":27665,"modified_method":"protected void paintComponent(Graphics g)\r\n        {\r\n            super.paintComponent(g);\r\n\r\n            g = g.create();\r\n            try\r\n            {\r\n                AntialiasingManager.activateAntialiasing(g);\r\n\r\n                g.drawImage(bgImage, 0, 0, null);\r\n            }\r\n            finally\r\n            {\r\n                g.dispose();\r\n            }\r\n        }","commit_id":"401a9bf9c75686486bd79f5a157b9fb00e85634f","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Paint a background for all groups and a round blue border and background\n     * when a cell is selected.\n     */\n    public void paintComponent(Graphics g)\n    {\n        super.paintComponent(g);\n\n        Graphics2D g2 = (Graphics2D) g;\n\n        AntialiasingManager.activateAntialiasing(g2);\n\n        if (!this.isLeaf)\n        {\n\n            GradientPaint p = new GradientPaint(0, 0,\n                Constants.BORDER_COLOR, this.getWidth(), this\n                    .getHeight(), Constants.GRADIENT_LIGHT_COLOR);\n\n            g2.setPaint(p);\n            g2.fillRoundRect(1, 1, this.getWidth(), this.getHeight() - 1, 7, 7);\n        }\n        else\n        {\n            if (direction.equals(GuiCallParticipantRecord.INCOMING_CALL))\n            {\n\n                GradientPaint p = new GradientPaint(0, 0,\n                    Constants.HISTORY_IN_CALL_COLOR, this.getWidth(), this\n                        .getHeight(), Constants.GRADIENT_LIGHT_COLOR);\n\n                g2.setPaint(p);\n                g2.fillRoundRect(1, 1, this.getWidth(), this.getHeight() - 1,\n                    7, 7);\n            }\n            else if (direction.equals(GuiCallParticipantRecord.OUTGOING_CALL))\n            {\n\n                GradientPaint p = new GradientPaint(0, 0,\n                    Constants.HISTORY_OUT_CALL_COLOR, this.getWidth(), this\n                        .getHeight(), Constants.GRADIENT_LIGHT_COLOR);\n\n                g2.setPaint(p);\n                g2.fillRoundRect(1, 1, this.getWidth(), this.getHeight() - 1,\n                    7, 7);\n            }\n        }\n\n        if (this.isSelected)\n        {\n\n            g2.setColor(Constants.SELECTED_COLOR);\n            g2.fillRoundRect(1, 0, this.getWidth(), this.getHeight(), 7, 7);\n\n            g2.setColor(Constants.LIST_SELECTION_BORDER_COLOR);\n            g2.setStroke(new BasicStroke(1.5f));\n            g2.drawRoundRect(1, 0, this.getWidth() - 2, this.getHeight() - 1,\n                7, 7);\n        }\n    }","id":27666,"modified_method":"/**\n     * Paint a background for all groups and a round blue border and background\n     * when a cell is selected.\n     */\n    public void paintComponent(Graphics g)\n    {\n        super.paintComponent(g);\n\n        g = g.create();\n        try\n        {\n            internalPaintComponent(g);\n        }\n        finally\n        {\n            g.dispose();\n        }\n    }","commit_id":"401a9bf9c75686486bd79f5a157b9fb00e85634f","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n         * Paint a round blue border and background when a cell is selected.\r\n         */\r\n        public void paintComponent(Graphics g)\r\n        {\r\n            Graphics2D g2 = (Graphics2D) g;\r\n\r\n            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\r\n                RenderingHints.VALUE_ANTIALIAS_ON);\r\n\r\n            if (this.isSelected)\r\n            {\r\n                g2.setColor(selectedColor);\r\n                g2.fillRoundRect(1, 0, this.getWidth(), this.getHeight(), 7, 7);\r\n\r\n                g2.setColor(blueGreyBorderColor);\r\n                g2.setStroke(new BasicStroke(1.5f));\r\n                g2.drawRoundRect(1, 0, this.getWidth() - 2, this.getHeight() - 1,\r\n                        7, 7);\r\n            }\r\n\r\n            super.paintComponent(g);\r\n        }","id":27667,"modified_method":"/**\r\n         * Paint a round blue border and background when a cell is selected.\r\n         */\r\n        public void paintComponent(Graphics g)\r\n        {\r\n            if (this.isSelected)\r\n            {\r\n                Graphics2D g2 = (Graphics2D) g.create();\r\n\r\n                try\r\n                {\r\n                    AntialiasingManager.activateAntialiasing(g2);\r\n\r\n                    int width = getWidth();\r\n                    int height = getHeight();\r\n\r\n                    g2.setColor(selectedColor);\r\n                    g2.fillRoundRect(1, 0, width, height, 7, 7);\r\n\r\n                    g2.setColor(blueGreyBorderColor);\r\n                    g2.setStroke(new BasicStroke(1.5f));\r\n                    g2.drawRoundRect(1, 0, width - 2, height - 1, 7, 7);\r\n                }\r\n                finally\r\n                {\r\n                    g2.dispose();\r\n                }\r\n            }\r\n\r\n            super.paintComponent(g);\r\n        }","commit_id":"401a9bf9c75686486bd79f5a157b9fb00e85634f","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates a rounded avatar image.\n     * \n     * @param avatarBytes The bytes of the initial avatar image.\n     * \n     * @return The rounded corner image.\n     */\n    public static ImageIcon getScaledRoundedImage(  Image image,\n                                                    int width,\n                                                    int height)\n    {\n        BufferedImage destImage = null;\n\n        ImageIcon scaledImage = ImageUtils.scaleIconWithinBounds(   image,\n                                                                    width,\n                                                                    height);\n\n        destImage\n            = new BufferedImage(scaledImage.getImage().getWidth(null),\n                                scaledImage.getImage().getHeight(null),\n                                BufferedImage.TYPE_INT_ARGB);\n\n        Graphics2D g = destImage.createGraphics();\n\n        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\n                RenderingHints.VALUE_ANTIALIAS_ON);\n\n        g.setColor(Color.WHITE);\n        g.fillRoundRect(0, 0, \n                        scaledImage.getIconWidth(),\n                        scaledImage.getIconHeight(),\n                        10, 10);\n        g.setComposite(AlphaComposite.SrcIn);\n\n        g.drawImage(scaledImage.getImage(), 0, 0, null);\n\n        return new ImageIcon(destImage);\n    }","id":27668,"modified_method":"/**\n     * Creates a rounded avatar image.\n     * \n     * @param avatarBytes The bytes of the initial avatar image.\n     * \n     * @return The rounded corner image.\n     */\n    public static ImageIcon getScaledRoundedImage(  Image image,\n                                                    int width,\n                                                    int height)\n    {\n        BufferedImage destImage = null;\n\n        ImageIcon scaledImage = ImageUtils.scaleIconWithinBounds(   image,\n                                                                    width,\n                                                                    height);\n\n        destImage\n            = new BufferedImage(scaledImage.getImage().getWidth(null),\n                                scaledImage.getImage().getHeight(null),\n                                BufferedImage.TYPE_INT_ARGB);\n\n        Graphics2D g = destImage.createGraphics();\n\n        try\n        {\n            AntialiasingManager.activateAntialiasing(g);\n\n            g.setColor(Color.WHITE);\n            g.fillRoundRect(0, 0, scaledImage.getIconWidth(), scaledImage\n                .getIconHeight(), 10, 10);\n            g.setComposite(AlphaComposite.SrcIn);\n\n            g.drawImage(scaledImage.getImage(), 0, 0, null);\n        }\n        finally\n        {\n            g.dispose();\n        }\n\n        return new ImageIcon(destImage);\n    }","commit_id":"401a9bf9c75686486bd79f5a157b9fb00e85634f","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void paintComponent(Graphics g)\n        {\n            // do the superclass behavior first\n            super.paintComponent(g);\n\n            g = g.create();\n            try\n            {\n                Graphics2D g2d = (Graphics2D) g;\n\n                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\n                    RenderingHints.VALUE_ANTIALIAS_ON);\n\n                // paint the background with the chosen color\n                g2d.setColor(background);\n                g2d.fillRoundRect(10, 10, getWidth() - 20, getHeight() - 20,\n                    15, 15);\n            }\n            finally\n            {\n                g.dispose();\n            }\n        }","id":27669,"modified_method":"public void paintComponent(Graphics g)\n        {\n            // do the superclass behavior first\n            super.paintComponent(g);\n\n            g = g.create();\n            try\n            {\n                AntialiasingManager.activateAntialiasing(g);\n\n                Graphics2D g2d = (Graphics2D) g;\n\n                // paint the background with the chosen color\n                g2d.setColor(background);\n                g2d.fillRoundRect(10, 10, getWidth() - 20, getHeight() - 20,\n                    15, 15);\n            }\n            finally\n            {\n                g.dispose();\n            }\n        }","commit_id":"401a9bf9c75686486bd79f5a157b9fb00e85634f","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void paintComponent(Graphics g)\n        {\n            // do the superclass behavior first\n            super.paintComponent(g);\n\n            g = g.create();\n            try\n            {\n                Graphics2D g2d = (Graphics2D) g;\n\n                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\n                    RenderingHints.VALUE_ANTIALIAS_ON);\n\n                // paint the background with the chosen color\n                g2d.setColor(accountRegistrationPanelBackground);\n                g2d.fillRoundRect(0, 0, getWidth(), getHeight(), 15, 15);\n            }\n            finally\n            {\n                g.dispose();\n            }\n        }","id":27670,"modified_method":"public void paintComponent(Graphics g)\n        {\n            // do the superclass behavior first\n            super.paintComponent(g);\n\n            g = g.create();\n            try\n            {\n                AntialiasingManager.activateAntialiasing(g);\n\n                Graphics2D g2d = (Graphics2D) g;\n\n                // paint the background with the chosen color\n                g2d.setColor(accountRegistrationPanelBackground);\n                g2d.fillRoundRect(0, 0, getWidth(), getHeight(), 15, 15);\n            }\n            finally\n            {\n                g.dispose();\n            }\n        }","commit_id":"401a9bf9c75686486bd79f5a157b9fb00e85634f","url":"https://github.com/jitsi/jitsi"},{"original_method":"protected void paintComponent(Graphics g)\n        {\n            super.paintComponent(g);\n\n            Graphics2D g2 = (Graphics2D) g;\n\n            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\n                RenderingHints.VALUE_ANTIALIAS_ON);\n\n            /*\n             * Drawing an Image with a data layout and color model compatible\n             * with this JPanel is magnitudes faster so create and use such an\n             * Image from the original drawn by this instance.\n             */\n            int width = getWidth();\n            int height = getHeight();\n            boolean imageIsChanging = false;\n            if ((cache == null) || (cacheWidth != width)\n                || (cacheHeight != height))\n            {\n                cache =\n                    g2.getDeviceConfiguration().createCompatibleImage(width,\n                        height);\n                cacheWidth = width;\n                cacheHeight = height;\n\n                Graphics2D cacheGraphics = cache.createGraphics();\n                try\n                {\n                    super.paintComponent(cacheGraphics);\n\n                    cacheGraphics.setRenderingHint(\n                        RenderingHints.KEY_ANTIALIASING,\n                        RenderingHints.VALUE_ANTIALIAS_ON);\n\n                    imageIsChanging =\n                        !cacheGraphics.drawImage(image, 0, 0, null);\n\n                    cacheGraphics.setColor(new Color(150, 150, 150));\n                    cacheGraphics.drawRoundRect(0, 0, width - 1, height - 1, 5,\n                        5);\n                }\n                finally\n                {\n                    cacheGraphics.dispose();\n                }\n            }\n\n            g2.drawImage(cache, 0, 0, null);\n\n            /*\n             * Once the original Image drawn by this instance has been fully\n             * loaded, we're free to use its \"compatible\" caching representation\n             * for the purposes of optimized execution speed.\n             */\n            if (imageIsChanging)\n            {\n                cache = null;\n            }\n        }","id":27671,"modified_method":"protected void paintComponent(Graphics g)\n        {\n            super.paintComponent(g);\n\n            g = g.create();\n            try\n            {\n                internalPaintComponent(g);\n            }\n            finally\n            {\n                g.dispose();\n            }\n        }","commit_id":"401a9bf9c75686486bd79f5a157b9fb00e85634f","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Calls the UI delegate's paint method, if the UI delegate is non-<code>null<\/code>.\n     * We pass the delegate a copy of the <code>Graphics<\/code> object to\n     * protect the rest of the paint code from irrevocable changes (for example,\n     * <code>Graphics.translate<\/code>).\n     * <p>\n     * The passed in <code>Graphics<\/code> object might have a transform other\n     * than the identify transform installed on it. In this case, you might get\n     * unexpected results if you cumulatively apply another transform.\n     * \n     * @param g the <code>Graphics<\/code> object to protect\n     * @see #paint\n     * @see ComponentUI\n     */\n    public void paintComponent(Graphics g)\n    {\n        super.paintComponent(g);\n\n        Graphics2D g2 = (Graphics2D) g;\n        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\n            RenderingHints.VALUE_ANTIALIAS_ON);\n\n        if (grid)\n        {\n            for (int x = 0; x < this.getWidth(); x += defaultGrid)\n            {\n                for (int y = 0; y < this.getHeight(); y += defaultGrid)\n                {\n                    g.setColor(Color.LIGHT_GRAY);\n                    g.fillOval(x, y, 2, 2);\n                }\n            }\n        }\n        WhiteboardShape s;\n        for (int i = 0; i < displayList.size(); i++)\n        {\n            s = (WhiteboardShape) displayList.get(i);\n            s.paint(g, affineTrans);\n        }\n    }","id":27672,"modified_method":"/**\n     * Calls the UI delegate's paint method, if the UI delegate is non-<code>null<\/code>.\n     * We pass the delegate a copy of the <code>Graphics<\/code> object to\n     * protect the rest of the paint code from irrevocable changes (for example,\n     * <code>Graphics.translate<\/code>).\n     * <p>\n     * The passed in <code>Graphics<\/code> object might have a transform other\n     * than the identify transform installed on it. In this case, you might get\n     * unexpected results if you cumulatively apply another transform.\n     * \n     * @param g the <code>Graphics<\/code> object to protect\n     * @see #paint\n     * @see ComponentUI\n     */\n    public void paintComponent(Graphics g)\n    {\n        super.paintComponent(g);\n\n        g = g.create();\n        try\n        {\n            AntialiasingManager.activateAntialiasing(g);\n\n            if (grid)\n            {\n                for (int x = 0; x < this.getWidth(); x += defaultGrid)\n                {\n                    for (int y = 0; y < this.getHeight(); y += defaultGrid)\n                    {\n                        g.setColor(Color.LIGHT_GRAY);\n                        g.fillOval(x, y, 2, 2);\n                    }\n                }\n            }\n            WhiteboardShape s;\n            for (int i = 0; i < displayList.size(); i++)\n            {\n                s = (WhiteboardShape) displayList.get(i);\n                s.paint(g, affineTrans);\n            }\n        }\n        finally\n        {\n            g.dispose();\n        }\n    }","commit_id":"401a9bf9c75686486bd79f5a157b9fb00e85634f","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Manage popup event\n     * \n     * @param e MouseEvent\n     */\n    private void checkPopupEvent(MouseEvent e)\n    {\n        copyPopupMenuItem.setEnabled(false);\n        pastePopupMenuItem.setEnabled(false);\n        colorPopupMenuItem.setEnabled(false);\n        propetiesPopupMenuItem.setEnabled(false);\n        deletePopupMenuItem.setEnabled(false);\n\n        if (e.isPopupTrigger())\n        {\n            if (wf.getSelectedShape() != null)\n            {\n                copyPopupMenuItem.setEnabled(true);\n                colorPopupMenuItem.setEnabled(true);\n                propetiesPopupMenuItem.setEnabled(true);\n                deletePopupMenuItem.setEnabled(true);\n            }\n\n            if (wf.getCopiedShape() != null)\n            {\n                pastePopupMenuItem.setEnabled(true);\n            }\n            if (e.getButton() == e.BUTTON3)\n                popupMenu.show(e.getComponent(), e.getX(), e.getY());\n        }\n    }","id":27673,"modified_method":"/**\n     * Manage popup event\n     * \n     * @param e MouseEvent\n     */\n    private void checkPopupEvent(MouseEvent e)\n    {\n        copyPopupMenuItem.setEnabled(false);\n        pastePopupMenuItem.setEnabled(false);\n        colorPopupMenuItem.setEnabled(false);\n        propetiesPopupMenuItem.setEnabled(false);\n        deletePopupMenuItem.setEnabled(false);\n\n        if (e.isPopupTrigger())\n        {\n            if (wf.getSelectedShape() != null)\n            {\n                copyPopupMenuItem.setEnabled(true);\n                colorPopupMenuItem.setEnabled(true);\n                propetiesPopupMenuItem.setEnabled(true);\n                deletePopupMenuItem.setEnabled(true);\n            }\n\n            if (wf.getCopiedShape() != null)\n            {\n                pastePopupMenuItem.setEnabled(true);\n            }\n            if (e.getButton() == MouseEvent.BUTTON3)\n                popupMenu.show(e.getComponent(), e.getX(), e.getY());\n        }\n    }","commit_id":"401a9bf9c75686486bd79f5a157b9fb00e85634f","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Draw a point on the shape\n     *\n     * @param g graphics context\n     * @param t 2D affine transform\n     * @param point point coord for the 2D affine transform\n     * @param color color for the point\n     */\n    public void drawSelectedPoint ( Graphics g,\n                                    AffineTransform t,\n                                    WhiteboardPoint point,\n                                    Color color)\n    {\n        Point2D v0 = t.transform (\n            new Point2D.Double(point.getX(), point.getY()), null);\n\n        int x = (int) v0.getX ();\n        int y = (int) v0.getY ();\n\n        ((Graphics2D)g).setRenderingHint(   RenderingHints.KEY_ANTIALIASING,\n                                            RenderingHints.VALUE_ANTIALIAS_ON);\n\n        g.setColor (new Color(  color.getRed(),\n                                color.getGreen(),\n                                color.getBlue(),\n                                160));\n\n        g.fillOval (x-5, y-5, 10, 10);\n    }","id":27674,"modified_method":"/**\n     * Draw a point on the shape\n     *\n     * @param g graphics context\n     * @param t 2D affine transform\n     * @param point point coord for the 2D affine transform\n     * @param color color for the point\n     */\n    public void drawSelectedPoint ( Graphics g,\n                                    AffineTransform t,\n                                    WhiteboardPoint point,\n                                    Color color)\n    {\n        g = g.create();\n        try\n        {\n            Point2D v0 =\n                t.transform(new Point2D.Double(point.getX(), point.getY()),\n                    null);\n\n            int x = (int) v0.getX();\n            int y = (int) v0.getY();\n\n            AntialiasingManager.activateAntialiasing(g);\n\n            g.setColor(new Color(color.getRed(), color.getGreen(), color\n                .getBlue(), 160));\n\n            g.fillOval(x - 5, y - 5, 10, 10);\n        }\n        finally\n        {\n            g.dispose();\n        }\n    }","commit_id":"401a9bf9c75686486bd79f5a157b9fb00e85634f","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Draws the background of the menu item.\n     * \n     * @param g the paint graphics\n     * @param menuItem menu item to be painted\n     * @param bgColor selection background color\n     * @since 1.4\n     */\n    protected void paintBackground(Graphics g, JMenuItem menuItem, Color bgColor)\n    {\n        AntialiasingManager.activateAntialiasing(g);\n\n        super.paintBackground(g, menuItem, bgColor);\n\n        boolean isToolBarExtended\n            = new Boolean(GuiActivator.getResources().\n                getSettingsString(\"impl.gui.IS_TOOLBAR_EXTENDED\"))\n                    .booleanValue();\n\n        if (!isToolBarExtended)\n        {\n            int menuWidth = menuItem.getWidth();\n            int menuHeight = menuItem.getHeight();\n\n            g.drawImage(menuBgImage, 0, 0, menuWidth, menuHeight, null);\n        }\n    }","id":27675,"modified_method":"/**\n     * Draws the background of the menu item.\n     * \n     * @param g the paint graphics\n     * @param menuItem menu item to be painted\n     * @param bgColor selection background color\n     * @since 1.4\n     */\n    protected void paintBackground(Graphics g, JMenuItem menuItem, Color bgColor)\n    {\n        super.paintBackground(g, menuItem, bgColor);\n\n        boolean isToolBarExtended =\n            new Boolean(GuiActivator.getResources().getSettingsString(\n                \"impl.gui.IS_TOOLBAR_EXTENDED\")).booleanValue();\n\n        if (!isToolBarExtended)\n        {\n            g = g.create();\n            try\n            {\n                AntialiasingManager.activateAntialiasing(g);\n\n                int menuWidth = menuItem.getWidth();\n                int menuHeight = menuItem.getHeight();\n\n                g.drawImage(menuBgImage, 0, 0, menuWidth, menuHeight, null);\n            }\n            finally\n            {\n                g.dispose();\n            }\n        }\n    }","commit_id":"d3945f3779c3a5498305f16364f67185259684f0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Draws the background of the menu item.\n     * \n     * @param g the paint graphics\n     * @param menuItem menu item to be painted\n     * @param bgColor selection background color\n     * @since 1.4\n     */    \n    protected void paintBackground(Graphics g, JMenuItem menuItem, Color bgColor)\n    {\n        AntialiasingManager.activateAntialiasing(g);\n        \n        super.paintBackground(g, menuItem, bgColor);\n        \n        ButtonModel model = menuItem.getModel();\n        Color oldColor = g.getColor();\n        \n        int menuWidth = menuItem.getWidth();\n        int menuHeight = menuItem.getHeight();\n\n        if (menuItem.isOpaque()) {\n            if (model.isArmed()\n                || (menuItem instanceof JMenu && model.isSelected())) {\n                g.setColor(bgColor);\n                g.fillRoundRect(0, 0, menuWidth, menuHeight, 5, 5);\n                \n                g.setColor(SIPCommLookAndFeel.getControlDarkShadow());\n                g.drawRoundRect(0, 0, menuWidth - 1, menuHeight - 1, 5, 5);\n            }\n            else {                \n                g.setColor(menuItem.getBackground());                \n                g.fillRoundRect(0, 0, menuWidth, menuHeight, 5, 5);\n            }\n            g.setColor(oldColor);            \n        }\n    }","id":27676,"modified_method":"/**\n     * Draws the background of the menu item.\n     * \n     * @param g the paint graphics\n     * @param menuItem menu item to be painted\n     * @param bgColor selection background color\n     * @since 1.4\n     */\n    protected void paintBackground(Graphics g, JMenuItem menuItem, Color bgColor)\n    {\n        super.paintBackground(g, menuItem, bgColor);\n\n        g = g.create();\n        try\n        {\n            internalPaintBackground(g, menuItem, bgColor);\n        }\n        finally\n        {\n            g.dispose();\n        }\n    }","commit_id":"d3945f3779c3a5498305f16364f67185259684f0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Draws the background of the menu item.\n     * \n     * @param g the paint graphics\n     * @param menuItem menu item to be painted\n     * @param bgColor selection background color\n     * @since 1.4\n     */    \n    protected void paintBackground(Graphics g, JMenuItem menuItem, Color bgColor)\n    {\n        AntialiasingManager.activateAntialiasing(g);\n        \n        super.paintBackground(g, menuItem, bgColor);\n        \n        ButtonModel model = menuItem.getModel();\n        Color oldColor = g.getColor();\n        \n        int menuWidth = menuItem.getWidth();\n        int menuHeight = menuItem.getHeight();\n\n        if (menuItem.isOpaque()) {\n            if (model.isArmed()\n                || (menuItem instanceof JMenu && model.isSelected())) {\n                g.setColor(bgColor);\n                g.fillRoundRect(0, 0, menuWidth, menuHeight, 5, 5);\n                \n                g.setColor(SIPCommLookAndFeel.getControlDarkShadow());\n                g.drawRoundRect(0, 0, menuWidth - 1, menuHeight - 1, 5, 5);\n            }\n            else {\n                g.setColor(menuItem.getBackground());\n                g.fillRoundRect(0, 0, menuWidth, menuHeight, 5, 5);\n            }\n            g.setColor(oldColor);\n        }\n    }","id":27677,"modified_method":"/**\n     * Draws the background of the menu item.\n     * \n     * @param g the paint graphics\n     * @param menuItem menu item to be painted\n     * @param bgColor selection background color\n     * @since 1.4\n     */    \n    protected void paintBackground(Graphics g, JMenuItem menuItem, Color bgColor)\n    {\n        super.paintBackground(g, menuItem, bgColor);\n\n        g = g.create();\n        try\n        {\n            internalPaintBackground(g, menuItem, bgColor);\n        }\n        finally\n        {\n            g.dispose();\n        }\n    }","commit_id":"d3945f3779c3a5498305f16364f67185259684f0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Draws the background of the menu.\n     * \n     * @param g the paint graphics\n     * @param menuItem menu item to be painted\n     * @param bgColor selection background color\n     * @since 1.4\n     */\n    protected void paintBackground(Graphics g, JMenuItem menuItem, Color bgColor)\n    {\n        AntialiasingManager.activateAntialiasing(g);\n        super.paintBackground(g, menuItem, bgColor);\n\n        ButtonModel model = menuItem.getModel();\n        Color oldColor = g.getColor();\n\n        int menuWidth = menuItem.getWidth();\n        int menuHeight = menuItem.getHeight();\n\n        if (menuItem.isOpaque())\n        {\n            if (model.isArmed()\n                || (menuItem instanceof JMenu && model.isSelected()))\n            {\n                g.setColor(bgColor);\n                g.fillRoundRect(0, 0, menuWidth, menuHeight, 5, 5);\n\n                g.setColor(SIPCommLookAndFeel.getControlDarkShadow());\n                g.drawRoundRect(0, 0, menuWidth - 1, menuHeight - 1, 5, 5);\n            }\n            else\n            {\n                g.setColor(menuItem.getBackground());\n                g.fillRoundRect(0, 0, menuWidth, menuHeight, 5, 5);\n            }\n            g.setColor(oldColor);\n        }\n    }","id":27678,"modified_method":"/**\n     * Draws the background of the menu.\n     * \n     * @param g the paint graphics\n     * @param menuItem menu item to be painted\n     * @param bgColor selection background color\n     * @since 1.4\n     */\n    protected void paintBackground(Graphics g, JMenuItem menuItem, Color bgColor)\n    {\n        super.paintBackground(g, menuItem, bgColor);\n\n        g = g.create();\n        try\n        {\n            internalPaintBackground(g, menuItem, bgColor);\n        }\n        finally\n        {\n            g.dispose();\n        }\n    }","commit_id":"d3945f3779c3a5498305f16364f67185259684f0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Draws the background of the menu item.\n     * \n     * @param g the paint graphics\n     * @param menuItem menu item to be painted\n     * @param bgColor selection background color\n     * @since 1.4\n     */\n    protected void paintBackground(Graphics g, JMenuItem menuItem, Color bgColor)\n    {\n        AntialiasingManager.activateAntialiasing(g);\n\n        int menuWidth = menuItem.getWidth();\n        int menuHeight = menuItem.getHeight();\n\n        g.drawImage(menuBgImage, 0, 0, menuWidth, menuHeight, null);\n    }","id":27679,"modified_method":"/**\n     * Draws the background of the menu item.\n     * \n     * @param g the paint graphics\n     * @param menuItem menu item to be painted\n     * @param bgColor selection background color\n     * @since 1.4\n     */\n    protected void paintBackground(Graphics g, JMenuItem menuItem, Color bgColor)\n    {\n        g = g.create();\n        try\n        {\n            AntialiasingManager.activateAntialiasing(g);\n\n            int menuWidth = menuItem.getWidth();\n            int menuHeight = menuItem.getHeight();\n\n            g.drawImage(menuBgImage, 0, 0, menuWidth, menuHeight, null);\n        }\n        finally\n        {\n            g.dispose();\n        }\n    }","commit_id":"d3945f3779c3a5498305f16364f67185259684f0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Draws the background of the menu.\n     * \n     * @param g the paint graphics\n     * @param menuItem menu item to be painted\n     * @param bgColor selection background color\n     * @since 1.4\n     */\n    protected void paintBackground(Graphics g, JMenuItem menuItem, Color bgColor)\n    {\n        AntialiasingManager.activateAntialiasing(g);\n\n        super.paintBackground(g, menuItem, bgColor);\n\n        Color oldColor = g.getColor();\n\n        int menuWidth = menuItem.getWidth();\n        int menuHeight = menuItem.getHeight();\n\n        if (menuItem.isSelected())\n        {\n            g.setColor(Color.LIGHT_GRAY);\n            g.fillRoundRect(0, 0, menuWidth, menuHeight, 8, 8);\n        }\n\n        g.setColor(oldColor);\n    }","id":27680,"modified_method":"/**\n     * Draws the background of the menu.\n     * \n     * @param g the paint graphics\n     * @param menuItem menu item to be painted\n     * @param bgColor selection background color\n     * @since 1.4\n     */\n    protected void paintBackground(Graphics g, JMenuItem menuItem, Color bgColor)\n    {\n        super.paintBackground(g, menuItem, bgColor);\n\n        g = g.create();\n        try\n        {\n            internalPaintBackground(g, menuItem, bgColor);\n        }\n        finally\n        {\n            g.dispose();\n        }\n    }","commit_id":"d3945f3779c3a5498305f16364f67185259684f0","url":"https://github.com/jitsi/jitsi"},{"original_method":"protected void paintTabBackground(Graphics g, int tabPlacement,\n            int tabIndex, int x, int y, int w, int h, boolean isSelected) {\n\n        BufferedImage leftImg = null;\n        BufferedImage middleImg = null;\n        BufferedImage rightImg = null;\n        \n        Graphics2D g2 = (Graphics2D) g;\n\n        AntialiasingManager.activateAntialiasing(g2);\n      \n        int tabOverlap = 0;\n        \n        if (isSelected)\n        {\n            if (tabPane.isEnabledAt(tabIndex))\n            {\n                leftImg = UtilActivator.getImage(SELECTED_TAB_LEFT_BG);\n                middleImg = UtilActivator.getImage(SELECTED_TAB_MIDDLE_BG);\n                rightImg = UtilActivator.getImage(SELECTED_TAB_RIGHT_BG);\n\n                tabOverlap = TAB_OVERLAP;\n            }\n            else\n            {\n                leftImg = UtilActivator.getImage(TAB_LEFT_BG);\n                middleImg = UtilActivator.getImage(TAB_MIDDLE_BG);\n                rightImg = UtilActivator.getImage(TAB_RIGHT_BG);\n            }\n        }\n        else\n        {\n            leftImg = UtilActivator.getImage(TAB_LEFT_BG);\n            middleImg = UtilActivator.getImage(TAB_MIDDLE_BG);\n            rightImg = UtilActivator.getImage(TAB_RIGHT_BG);\n        }\n        \n        g2.drawImage(leftImg, x, y, null);\n        g2.drawImage(middleImg, x + leftImg.getWidth(), y,\n            w - leftImg.getWidth() - rightImg.getWidth() + tabOverlap,\n            leftImg.getHeight(), null);\n        g2.drawImage(rightImg, x + w - rightImg.getWidth() + tabOverlap, y, null);\n    }","id":27681,"modified_method":"protected void paintTabBackground(Graphics g, int tabPlacement,\n        int tabIndex, int x, int y, int w, int h, boolean isSelected)\n    {\n        g = g.create();\n        try\n        {\n            internalPaintTabBackground(g, tabPlacement, tabIndex, x, y, w, h,\n                isSelected);\n        }\n        finally\n        {\n            g.dispose();\n        }\n    }","commit_id":"d3945f3779c3a5498305f16364f67185259684f0","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n   * Constructor.\n   * @param name database name\n   * @param backup backup file\n   * @param qc query context\n   * @param info input info\n   */\n  public DBRestore(final String name, final IOFile backup, final QueryContext qc,\n      final InputInfo info) {\n\n    super(UpdateType.DBRESTORE, name, info, qc);\n    this.backup = backup;\n  }","id":27682,"modified_method":"/**\n   * Constructor.\n   * @param name database name\n   * @param backup backup file\n   * @param qc query context\n   * @param info input info\n   */\n  public DBRestore(final String name, final String backup, final QueryContext qc,\n      final InputInfo info) {\n\n    super(UpdateType.DBRESTORE, name, info, qc);\n    this.backup = backup;\n  }","commit_id":"1287dfdd0c07f27165535a90eb18413630276d91","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Lists all available backups matching the specified prefix.\n   * @param prefix prefix (may be {@code null})\n   * @return database list\n   */\n  public StringList backups(final String prefix) {\n    final StringList list = new StringList();\n    for(final IOFile f : gopts.dbpath().children()) {\n      final String name = f.name();\n      if(name.endsWith(IO.ZIPSUFFIX) && (prefix == null || name.startsWith(prefix))) {\n        list.add(name.replaceFirst(\"\\\\..*\", \"\"));\n      }\n    }\n    return list;\n  }","id":27683,"modified_method":"/**\n   * Returns the name of a specific backup, or all backups found for a specific database,\n   * in a descending order.\n   * @param db database\n   * @return names of specified backups\n   */\n  public StringList backups(final String db) {\n    final StringList backups = new StringList();\n    final IOFile file = gopts.dbpath(db + IO.ZIPSUFFIX);\n    if(file.exists()) {\n      backups.add(db);\n    } else {\n      final String regex = db.replaceAll(\"([\" + REGEXCHARS + \"])\", \"\\\\\\\\$1\") +\n          DateTime.PATTERN + IO.ZIPSUFFIX;\n      for(final IOFile f : gopts.dbpath().children()) {\n        final String n = f.name();\n        if(n.matches(regex)) backups.add(n.substring(0, n.lastIndexOf('.')));\n      }\n    }\n    return backups.sort(Prop.CASE, false);\n  }","commit_id":"1287dfdd0c07f27165535a90eb18413630276d91","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public void action(final Object cmp) {\n    final Context ctx = gui.context;\n    if(refresh) {\n      // rebuild databases and focus list chooser\n      choice.setData(ctx.databases.list().toArray());\n      choice.requestFocusInWindow();\n      refresh = false;\n    }\n\n    final StringList dbs = choice.getValues();\n    final String db = choice.getValue();\n    final ArrayList<Command> cmds = new ArrayList<Command>();\n\n    if(cmp == open) {\n      close();\n\n    } else if(cmp == drop) {\n      for(final String s : dbs) {\n        if(ctx.globalopts.dbexists(s)) cmds.add(new DropDB(s));\n      }\n      if(!BaseXDialog.confirm(gui, Util.info(DROPPING_DB_X, cmds.size()))) return;\n      refresh = true;\n\n    } else if(cmp == rename) {\n      final DialogInput dr = new DialogInput(db, RENAME_DB, this, 1);\n      if(!dr.ok() || dr.input().equals(db)) return;\n      cmds.add(new AlterDB(db, dr.input()));\n      refresh = true;\n\n    } else if(cmp == copy) {\n      final DialogInput dc = new DialogInput(db, COPY_DB, this, 2);\n      if(!dc.ok() || dc.input().equals(db)) return;\n      cmds.add(new Copy(db, dc.input()));\n      refresh = true;\n\n    } else if(cmp == backup) {\n      for(final String s : dbs) cmds.add(new CreateBackup(s));\n\n    } else if(cmp == restore) {\n      // show warning if existing database would be overwritten\n      if(!gui.context.globalopts.dbexists(db) || BaseXDialog.confirm(gui, OVERWRITE_DB_QUESTION))\n        cmds.add(new Restore(backups.getValue()));\n\n    } else if(cmp == backups) {\n      // don't reset the combo box after selecting an item\n      // no direct consequences if backup selection changes\n\n    } else if(cmp == delete) {\n      cmds.add(new DropBackup(backups.getValue()));\n      refresh = backups.getList().length == 1;\n      backups.requestFocusInWindow();\n\n    } else if(cmp == deleteAll) {\n      final String[] back = backups.getList();\n      if(!BaseXDialog.confirm(gui, Util.info(DROP_BACKUPS_X, back.length))) return;\n      for(final String b : back) cmds.add(new DropBackup(b));\n      refresh = true;\n\n    } else {\n      final String title = dbs.size() == 1 ? db : dbs.size() + \" \" + DATABASES;\n      doc1.setText(title);\n      doc2.setText(BACKUPS + COLS + title);\n\n      boolean active = ctx.globalopts.dbexists(db);\n      String info = \"\";\n      if(active) {\n        // refresh info view\n        final MetaData meta = new MetaData(db, ctx);\n        try {\n          meta.read();\n          info = InfoDB.db(meta, true, true, true);\n        } catch(final IOException ex) {\n          info = Util.message(ex);\n        }\n      } else if(dbs.size() == 1) {\n        info = ONLY_BACKUP;\n      }\n      detail.setText(info);\n\n      // enable or disable buttons\n      rename.setEnabled(active);\n      copy.setEnabled(active);\n      open.setEnabled(active);\n      restore.setEnabled(active);\n\n      active = false;\n      for(final String d : dbs) active |= ctx.globalopts.dbexists(d);\n      drop.setEnabled(active);\n      backup.setEnabled(active);\n\n      // enable/disable backup buttons\n      final StringList back = Databases.backupPaths(db, ctx).sort(Prop.CASE, false);\n      for(int b = 0; b < back.size(); b++) {\n        final String n = new IOFile(back.get(b)).name();\n        back.set(b, n.substring(0, n.lastIndexOf('.')));\n      }\n\n      active = !back.isEmpty();\n      backups.setData(back.toArray());\n      backups.setEnabled(active);\n\n      restore.setEnabled(active);\n      delete.setEnabled(active);\n      deleteAll.setEnabled(active);\n    }\n\n    // run all commands\n    if(!cmds.isEmpty()) {\n      DialogProgress.execute(this, cmds.toArray(new Command[cmds.size()]));\n    }\n  }","id":27684,"modified_method":"@Override\n  public void action(final Object cmp) {\n    final Context ctx = gui.context;\n    if(refresh) {\n      // rebuild databases and focus list chooser\n      choice.setData(ctx.databases.list().toArray());\n      choice.requestFocusInWindow();\n      refresh = false;\n    }\n\n    final StringList dbs = choice.getValues();\n    final String db = choice.getValue();\n    final ArrayList<Command> cmds = new ArrayList<Command>();\n\n    if(cmp == open) {\n      close();\n\n    } else if(cmp == drop) {\n      for(final String s : dbs) {\n        if(ctx.globalopts.dbexists(s)) cmds.add(new DropDB(s));\n      }\n      if(!BaseXDialog.confirm(gui, Util.info(DROPPING_DB_X, cmds.size()))) return;\n      refresh = true;\n\n    } else if(cmp == rename) {\n      final DialogInput dr = new DialogInput(db, RENAME_DB, this, 1);\n      if(!dr.ok() || dr.input().equals(db)) return;\n      cmds.add(new AlterDB(db, dr.input()));\n      refresh = true;\n\n    } else if(cmp == copy) {\n      final DialogInput dc = new DialogInput(db, COPY_DB, this, 2);\n      if(!dc.ok() || dc.input().equals(db)) return;\n      cmds.add(new Copy(db, dc.input()));\n      refresh = true;\n\n    } else if(cmp == backup) {\n      for(final String s : dbs) cmds.add(new CreateBackup(s));\n\n    } else if(cmp == restore) {\n      // show warning if existing database would be overwritten\n      if(!gui.context.globalopts.dbexists(db) || BaseXDialog.confirm(gui, OVERWRITE_DB_QUESTION))\n        cmds.add(new Restore(backups.getValue()));\n\n    } else if(cmp == backups) {\n      // don't reset the combo box after selecting an item\n      // no direct consequences if backup selection changes\n\n    } else if(cmp == delete) {\n      cmds.add(new DropBackup(backups.getValue()));\n      refresh = backups.getList().length == 1;\n      backups.requestFocusInWindow();\n\n    } else if(cmp == deleteAll) {\n      final String[] back = backups.getList();\n      if(!BaseXDialog.confirm(gui, Util.info(DROP_BACKUPS_X, back.length))) return;\n      for(final String b : back) cmds.add(new DropBackup(b));\n      refresh = true;\n\n    } else {\n      final String title = dbs.size() == 1 ? db : dbs.size() + \" \" + DATABASES;\n      doc1.setText(title);\n      doc2.setText(BACKUPS + COLS + title);\n\n      boolean active = ctx.globalopts.dbexists(db);\n      String info = \"\";\n      if(active) {\n        // refresh info view\n        final MetaData meta = new MetaData(db, ctx);\n        try {\n          meta.read();\n          info = InfoDB.db(meta, true, true, true);\n        } catch(final IOException ex) {\n          info = Util.message(ex);\n        }\n      } else if(dbs.size() == 1) {\n        info = ONLY_BACKUP;\n      }\n      detail.setText(info);\n\n      // enable or disable buttons\n      rename.setEnabled(active);\n      copy.setEnabled(active);\n      open.setEnabled(active);\n      restore.setEnabled(active);\n\n      active = false;\n      for(final String d : dbs) active |= ctx.globalopts.dbexists(d);\n      drop.setEnabled(active);\n      backup.setEnabled(active);\n\n      // enable/disable backup buttons\n      final StringList names = ctx.databases.backups(db);\n      active = !names.isEmpty();\n      backups.setData(names.toArray());\n      backups.setEnabled(active);\n\n      restore.setEnabled(active);\n      delete.setEnabled(active);\n      deleteAll.setEnabled(active);\n    }\n\n    // run all commands\n    if(!cmds.isEmpty()) {\n      DialogProgress.execute(this, cmds.toArray(new Command[cmds.size()]));\n    }\n  }","commit_id":"1287dfdd0c07f27165535a90eb18413630276d91","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Drops one or more backups of the specified database.\n   * @param name name of database file\n   * @param ctx database context\n   * @return success flag\n   */\n  public static boolean drop(final String name, final Context ctx) {\n    final IOFile dir = ctx.globalopts.dbpath();\n    return new IOFile(dir, name).delete();\n  }","id":27685,"modified_method":"/**\n   * Drops a backup with the specified name.\n   * @param name name of backup file\n   * @param ctx database context\n   * @return success flag\n   */\n  public static boolean drop(final String name, final Context ctx) {\n    return new IOFile(ctx.globalopts.dbpath(), name + IO.ZIPSUFFIX).delete();\n  }","commit_id":"1287dfdd0c07f27165535a90eb18413630276d91","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  protected boolean run() {\n    final String name = args[0];\n    if(!Databases.validName(name, true)) return error(NAME_INVALID_X, name);\n\n    // loop through all databases and collect databases to be dropped\n    final StringList dbs = context.databases.listDBs(name);\n    // if the given argument is not a database name, it could be the name of a backup file\n    if(dbs.isEmpty()) dbs.add(name);\n\n    // drop all backups\n    for(final String db : dbs) {\n      for(final String file : backups(db.contains(\"-\") ? db : db + '-', context))\n        drop(file, context);\n    }\n\n    return info(BACKUP_DROPPED_X, name + '*' + IO.ZIPSUFFIX);\n  }","id":27686,"modified_method":"@Override\n  protected boolean run() {\n    final String name = args[0];\n    if(!Databases.validName(name, true)) return error(NAME_INVALID_X, name);\n\n    // loop through all databases and collect databases to be dropped\n    final StringList dbs = context.databases.listDBs(name);\n    // if the given argument is not a database name, it could be the name of a backup file\n    if(dbs.isEmpty()) dbs.add(name);\n\n    // drop all backups\n    for(final String db : dbs) {\n      for(final String backup : context.databases.backups(db)) drop(backup, context);\n    }\n\n    return info(BACKUP_DROPPED_X, name + '*' + IO.ZIPSUFFIX);\n  }","commit_id":"1287dfdd0c07f27165535a90eb18413630276d91","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Performs the backups function.\n   * @param ctx query context\n   * @return iterator\n   * @throws QueryException query exception\n   */\n  private Iter backups(final QueryContext ctx) throws QueryException {\n    checkCreate(ctx);\n    final String prefix = expr.length == 0 ? null : string(checkStr(expr[0], ctx)) + '-';\n\n    final StringList list = ctx.context.databases.backups(prefix);\n    final IOFile dbpath = ctx.context.globalopts.dbpath();\n    return new Iter() {\n      int up = -1;\n\n      @Override\n      public Item next() {\n        if(++up >= list.size()) return null;\n        final String name = list.get(up);\n        final long length = new IOFile(dbpath, name + IO.ZIPSUFFIX).length();\n        return new FElem(BACKUP).add(name).add(SIZE, token(length));\n      }\n    };\n  }","id":27687,"modified_method":"/**\n   * Performs the backups function.\n   * @param ctx query context\n   * @return iterator\n   * @throws QueryException query exception\n   */\n  private Iter backups(final QueryContext ctx) throws QueryException {\n    checkCreate(ctx);\n    final String name = expr.length == 0 ? null : string(checkStr(expr[0], ctx));\n\n    final StringList backups = name == null ? ctx.context.databases.backups() :\n      ctx.context.databases.backups(name);\n    final IOFile dbpath = ctx.context.globalopts.dbpath();\n    return new Iter() {\n      int up = -1;\n\n      @Override\n      public Item next() {\n        if(++up >= backups.size()) return null;\n        final String backup = backups.get(up);\n        final long length = new IOFile(dbpath, backup + IO.ZIPSUFFIX).length();\n        return new FElem(BACKUP).add(backup).add(SIZE, token(length));\n      }\n    };\n  }","commit_id":"1287dfdd0c07f27165535a90eb18413630276d91","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Performs the restore function.\n   * @param ctx query context\n   * @return {@code null}\n   * @throws QueryException query exception\n   */\n  private Item restore(final QueryContext ctx) throws QueryException {\n    // extract database name from backup file\n    final String name = string(checkStr(expr[0], ctx));\n    final String db = Restore.dbName(name);\n    if(!Databases.validName(db)) throw BXDB_NAME.get(info, db);\n\n    final IOFile backup = Restore.backupFile(name, ctx.context);\n    if(backup == null) throw BXDB_NOBACKUP.get(info, name);\n\n    ctx.updates.add(new DBRestore(db, backup, ctx, info), ctx);\n    return null;\n  }","id":27688,"modified_method":"/**\n   * Performs the restore function.\n   * @param ctx query context\n   * @return {@code null}\n   * @throws QueryException query exception\n   */\n  private Item restore(final QueryContext ctx) throws QueryException {\n    // extract database name from backup file\n    final String name = string(checkStr(expr[0], ctx));\n    if(!Databases.validName(name)) throw BXDB_NAME.get(info, name);\n\n    // find backup with or without date suffix\n    final StringList backups = ctx.context.databases.backups(name);\n    if(backups.isEmpty()) throw BXDB_NOBACKUP.get(info, name);\n\n    final String backup = backups.get(0);\n    final String db = Databases.name(backup);\n    ctx.updates.add(new DBRestore(db, backup, ctx, info), ctx);\n    return null;\n  }","commit_id":"1287dfdd0c07f27165535a90eb18413630276d91","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Performs the drop-backup function.\n   * @param ctx query context\n   * @return {@code null}\n   * @throws QueryException query exception\n   */\n  private Item dropBackup(final QueryContext ctx) throws QueryException {\n    final String name = string(checkStr(expr[0], ctx));\n    if(!Databases.validName(name)) throw BXDB_NAME.get(info, name);\n\n    final StringList files = DropBackup.backups(name, ctx.context);\n    if(files.isEmpty()) throw BXDB_WHICHBACK.get(info, name);\n\n    for(final String file : files) {\n      ctx.updates.add(new BackupDrop(file, info, ctx), ctx);\n    }\n    return null;\n  }","id":27689,"modified_method":"/**\n   * Performs the drop-backup function.\n   * @param ctx query context\n   * @return {@code null}\n   * @throws QueryException query exception\n   */\n  private Item dropBackup(final QueryContext ctx) throws QueryException {\n    final String name = string(checkStr(expr[0], ctx));\n    if(!Databases.validName(name)) throw BXDB_NAME.get(info, name);\n\n    final StringList backups = ctx.context.databases.backups(name);\n    if(backups.isEmpty()) throw BXDB_WHICHBACK.get(info, name);\n\n    for(final String backup : backups) {\n      ctx.updates.add(new BackupDrop(backup, info, ctx), ctx);\n    }\n    return null;\n  }","commit_id":"1287dfdd0c07f27165535a90eb18413630276d91","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public void databases(final LockResult lr) {\n    super.databases(lr);\n    // Not sure whether database or name of backup file is provided: lock both\n    final String name = args[0];\n    lr.write.add(name).add(dbName(name));\n  }","id":27690,"modified_method":"@Override\n  public void databases(final LockResult lr) {\n    super.databases(lr);\n    // Not sure whether database or name of backup file is provided: lock both\n    final String backup = args[0];\n    lr.write.add(backup).add(Databases.name(backup));\n  }","commit_id":"1287dfdd0c07f27165535a90eb18413630276d91","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  protected boolean run() {\n    String name = args[0];\n    final String db = dbName(name);\n    if(!Databases.validName(db)) return error(NAME_INVALID_X, name);\n\n    // find backup file with or without date suffix\n    final IOFile file = backupFile(name, context);\n    if(file == null) return error(BACKUP_NOT_FOUND_X, name);\n\n    // close database if it's currently opened and not opened by others\n    if(!closed) closed = close(context, db);\n    // check if database is still pinned\n    if(context.pinned(db)) return error(DB_PINNED_X, db);\n\n    // try to restore database\n    try {\n      restore(db, file, this, context);\n      return !closed || new Open(db).run(context) ?\n        info(DB_RESTORED_X, file.name(), perf) : error(DB_NOT_RESTORED_X, db);\n    } catch(final IOException ex) {\n      return error(DB_NOT_RESTORED_X, db);\n    }\n  }","id":27691,"modified_method":"@Override\n  protected boolean run() {\n    String name = args[0];\n    if(!Databases.validName(name)) return error(NAME_INVALID_X, name);\n\n    // find backup with or without date suffix\n    final StringList backups = context.databases.backups(name);\n    if(backups.isEmpty()) return error(BACKUP_NOT_FOUND_X, name);\n\n    final String backup = backups.get(0);\n    final String db = Databases.name(backup);\n\n    // close database if it's currently opened and not opened by others\n    if(!closed) closed = close(context, db);\n    // check if database is still pinned\n    if(context.pinned(db)) return error(DB_PINNED_X, db);\n\n    // try to restore database\n    try {\n      restore(db, backup, this, context);\n      return !closed || new Open(db).run(context) ?\n        info(DB_RESTORED_X, backup, perf) : error(DB_NOT_RESTORED_X, db);\n    } catch(final IOException ex) {\n      Util.debug(ex);\n      return error(DB_NOT_RESTORED_X, db);\n    }\n  }","commit_id":"1287dfdd0c07f27165535a90eb18413630276d91","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Restores the specified database.\n   * @param db name of database\n   * @param file file\n   * @param cmd calling command instance\n   * @param context database context\n   * @throws IOException  I/O exception\n   */\n  public static void restore(final String db, final IOFile file, final Restore cmd,\n      final Context context) throws IOException {\n\n    // drop target database\n    DropDB.drop(db, context);\n\n    final Zip zip = new Zip(file);\n    if(cmd != null) cmd.proc(zip);\n    zip.unzip(context.globalopts.dbpath());\n  }","id":27692,"modified_method":"/**\n   * Restores the specified database.\n   * @param db name of database\n   * @param backup name of backup\n   * @param cmd calling command instance\n   * @param context database context\n   * @throws IOException  I/O exception\n   */\n  public static void restore(final String db, final String backup, final Restore cmd,\n      final Context context) throws IOException {\n\n    // drop target database\n    DropDB.drop(db, context);\n\n    final IOFile dbpath = context.globalopts.dbpath();\n    final Zip zip = new Zip(new IOFile(dbpath, backup + IO.ZIPSUFFIX));\n    if(cmd != null) cmd.proc(zip);\n    zip.unzip(dbpath);\n  }","commit_id":"1287dfdd0c07f27165535a90eb18413630276d91","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  protected boolean run() throws IOException {\n    final Table table = new Table();\n    table.description = BACKUPS_X;\n    table.header.add(NAME);\n    table.header.add(SIZE);\n\n    final StringList list = context.databases.backups(null);\n    final IOFile dbpath = context.globalopts.dbpath();\n    for(final String name : list) {\n      final TokenList tl = new TokenList();\n      tl.add(name);\n      tl.add(new IOFile(dbpath, name).length());\n      table.contents.add(tl);\n    }\n    out.println(table.sort().finish());\n    return true;\n  }","id":27693,"modified_method":"@Override\n  protected boolean run() throws IOException {\n    final Table table = new Table();\n    table.description = BACKUPS_X;\n    table.header.add(NAME);\n    table.header.add(SIZE);\n\n    final IOFile dbpath = context.globalopts.dbpath();\n    for(final String name : context.databases.backups()) {\n      final TokenList tl = new TokenList();\n      tl.add(name);\n      tl.add(new IOFile(dbpath, name + IO.ZIPSUFFIX).length());\n      table.contents.add(tl);\n    }\n    out.println(table.sort().finish());\n    return true;\n  }","commit_id":"1287dfdd0c07f27165535a90eb18413630276d91","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Constructor.\n   * @param name database name\n   * @param backup backup file\n   * @param qc query context\n   * @param info input info\n   */\n  public DBRestore(final String name, final IOFile backup, final QueryContext qc,\n      final InputInfo info) {\n\n    super(UpdateType.DBRESTORE, name, info, qc);\n    this.backup = backup;\n  }","id":27694,"modified_method":"/**\n   * Constructor.\n   * @param name database name\n   * @param backup backup file\n   * @param qc query context\n   * @param info input info\n   */\n  public DBRestore(final String name, final String backup, final QueryContext qc,\n      final InputInfo info) {\n\n    super(UpdateType.DBRESTORE, name, info, qc);\n    this.backup = backup;\n  }","commit_id":"866d452e1b5d11511f1b83c3a2bcda835ae9e114","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Lists all available backups matching the specified prefix.\n   * @param prefix prefix (may be {@code null})\n   * @return database list\n   */\n  public StringList backups(final String prefix) {\n    final StringList list = new StringList();\n    for(final IOFile f : gopts.dbpath().children()) {\n      final String name = f.name();\n      if(name.endsWith(IO.ZIPSUFFIX) && (prefix == null || name.startsWith(prefix))) {\n        list.add(name.replaceFirst(\"\\\\..*\", \"\"));\n      }\n    }\n    return list;\n  }","id":27695,"modified_method":"/**\n   * Returns the name of a specific backup, or all backups found for a specific database,\n   * in a descending order.\n   * @param db database\n   * @return names of specified backups\n   */\n  public StringList backups(final String db) {\n    final StringList backups = new StringList();\n    final IOFile file = gopts.dbpath(db + IO.ZIPSUFFIX);\n    if(file.exists()) {\n      backups.add(db);\n    } else {\n      final String regex = db.replaceAll(\"([\" + REGEXCHARS + \"])\", \"\\\\\\\\$1\") +\n          DateTime.PATTERN + IO.ZIPSUFFIX;\n      for(final IOFile f : gopts.dbpath().children()) {\n        final String n = f.name();\n        if(n.matches(regex)) backups.add(n.substring(0, n.lastIndexOf('.')));\n      }\n    }\n    return backups.sort(Prop.CASE, false);\n  }","commit_id":"866d452e1b5d11511f1b83c3a2bcda835ae9e114","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public void action(final Object cmp) {\n    final Context ctx = gui.context;\n    if(refresh) {\n      // rebuild databases and focus list chooser\n      choice.setData(ctx.databases.list().toArray());\n      choice.requestFocusInWindow();\n      refresh = false;\n    }\n\n    final StringList dbs = choice.getValues();\n    final String db = choice.getValue();\n    final ArrayList<Command> cmds = new ArrayList<Command>();\n\n    if(cmp == open) {\n      close();\n\n    } else if(cmp == drop) {\n      for(final String s : dbs) {\n        if(ctx.globalopts.dbexists(s)) cmds.add(new DropDB(s));\n      }\n      if(!BaseXDialog.confirm(gui, Util.info(DROPPING_DB_X, cmds.size()))) return;\n      refresh = true;\n\n    } else if(cmp == rename) {\n      final DialogInput dr = new DialogInput(db, RENAME_DB, this, 1);\n      if(!dr.ok() || dr.input().equals(db)) return;\n      cmds.add(new AlterDB(db, dr.input()));\n      refresh = true;\n\n    } else if(cmp == copy) {\n      final DialogInput dc = new DialogInput(db, COPY_DB, this, 2);\n      if(!dc.ok() || dc.input().equals(db)) return;\n      cmds.add(new Copy(db, dc.input()));\n      refresh = true;\n\n    } else if(cmp == backup) {\n      for(final String s : dbs) cmds.add(new CreateBackup(s));\n\n    } else if(cmp == restore) {\n      // show warning if existing database would be overwritten\n      if(!gui.context.globalopts.dbexists(db) || BaseXDialog.confirm(gui, OVERWRITE_DB_QUESTION))\n        cmds.add(new Restore(backups.getValue()));\n\n    } else if(cmp == backups) {\n      // don't reset the combo box after selecting an item\n      // no direct consequences if backup selection changes\n\n    } else if(cmp == delete) {\n      cmds.add(new DropBackup(backups.getValue()));\n      refresh = backups.getList().length == 1;\n      backups.requestFocusInWindow();\n\n    } else if(cmp == deleteAll) {\n      final String[] back = backups.getList();\n      if(!BaseXDialog.confirm(gui, Util.info(DROP_BACKUPS_X, back.length))) return;\n      for(final String b : back) cmds.add(new DropBackup(b));\n      refresh = true;\n\n    } else {\n      final String title = dbs.size() == 1 ? db : dbs.size() + \" \" + DATABASES;\n      doc1.setText(title);\n      doc2.setText(BACKUPS + COLS + title);\n\n      boolean active = ctx.globalopts.dbexists(db);\n      String info = \"\";\n      if(active) {\n        // refresh info view\n        final MetaData meta = new MetaData(db, ctx);\n        try {\n          meta.read();\n          info = InfoDB.db(meta, true, true, true);\n        } catch(final IOException ex) {\n          info = Util.message(ex);\n        }\n      } else if(dbs.size() == 1) {\n        info = ONLY_BACKUP;\n      }\n      detail.setText(info);\n\n      // enable or disable buttons\n      rename.setEnabled(active);\n      copy.setEnabled(active);\n      open.setEnabled(active);\n      restore.setEnabled(active);\n\n      active = false;\n      for(final String d : dbs) active |= ctx.globalopts.dbexists(d);\n      drop.setEnabled(active);\n      backup.setEnabled(active);\n\n      // enable/disable backup buttons\n      final StringList back = Databases.backupPaths(db, ctx).sort(Prop.CASE, false);\n      for(int b = 0; b < back.size(); b++) {\n        final String n = new IOFile(back.get(b)).name();\n        back.set(b, n.substring(0, n.lastIndexOf('.')));\n      }\n\n      active = !back.isEmpty();\n      backups.setData(back.toArray());\n      backups.setEnabled(active);\n\n      restore.setEnabled(active);\n      delete.setEnabled(active);\n      deleteAll.setEnabled(active);\n    }\n\n    // run all commands\n    if(!cmds.isEmpty()) {\n      DialogProgress.execute(this, cmds.toArray(new Command[cmds.size()]));\n    }\n  }","id":27696,"modified_method":"@Override\n  public void action(final Object cmp) {\n    final Context ctx = gui.context;\n    if(refresh) {\n      // rebuild databases and focus list chooser\n      choice.setData(ctx.databases.list().toArray());\n      choice.requestFocusInWindow();\n      refresh = false;\n    }\n\n    final StringList dbs = choice.getValues();\n    final String db = choice.getValue();\n    final ArrayList<Command> cmds = new ArrayList<Command>();\n\n    if(cmp == open) {\n      close();\n\n    } else if(cmp == drop) {\n      for(final String s : dbs) {\n        if(ctx.globalopts.dbexists(s)) cmds.add(new DropDB(s));\n      }\n      if(!BaseXDialog.confirm(gui, Util.info(DROPPING_DB_X, cmds.size()))) return;\n      refresh = true;\n\n    } else if(cmp == rename) {\n      final DialogInput dr = new DialogInput(db, RENAME_DB, this, 1);\n      if(!dr.ok() || dr.input().equals(db)) return;\n      cmds.add(new AlterDB(db, dr.input()));\n      refresh = true;\n\n    } else if(cmp == copy) {\n      final DialogInput dc = new DialogInput(db, COPY_DB, this, 2);\n      if(!dc.ok() || dc.input().equals(db)) return;\n      cmds.add(new Copy(db, dc.input()));\n      refresh = true;\n\n    } else if(cmp == backup) {\n      for(final String s : dbs) cmds.add(new CreateBackup(s));\n\n    } else if(cmp == restore) {\n      // show warning if existing database would be overwritten\n      if(!gui.context.globalopts.dbexists(db) || BaseXDialog.confirm(gui, OVERWRITE_DB_QUESTION))\n        cmds.add(new Restore(backups.getValue()));\n\n    } else if(cmp == backups) {\n      // don't reset the combo box after selecting an item\n      // no direct consequences if backup selection changes\n\n    } else if(cmp == delete) {\n      cmds.add(new DropBackup(backups.getValue()));\n      refresh = backups.getList().length == 1;\n      backups.requestFocusInWindow();\n\n    } else if(cmp == deleteAll) {\n      final String[] back = backups.getList();\n      if(!BaseXDialog.confirm(gui, Util.info(DROP_BACKUPS_X, back.length))) return;\n      for(final String b : back) cmds.add(new DropBackup(b));\n      refresh = true;\n\n    } else {\n      final String title = dbs.size() == 1 ? db : dbs.size() + \" \" + DATABASES;\n      doc1.setText(title);\n      doc2.setText(BACKUPS + COLS + title);\n\n      boolean active = ctx.globalopts.dbexists(db);\n      String info = \"\";\n      if(active) {\n        // refresh info view\n        final MetaData meta = new MetaData(db, ctx);\n        try {\n          meta.read();\n          info = InfoDB.db(meta, true, true, true);\n        } catch(final IOException ex) {\n          info = Util.message(ex);\n        }\n      } else if(dbs.size() == 1) {\n        info = ONLY_BACKUP;\n      }\n      detail.setText(info);\n\n      // enable or disable buttons\n      rename.setEnabled(active);\n      copy.setEnabled(active);\n      open.setEnabled(active);\n      restore.setEnabled(active);\n\n      active = false;\n      for(final String d : dbs) active |= ctx.globalopts.dbexists(d);\n      drop.setEnabled(active);\n      backup.setEnabled(active);\n\n      // enable/disable backup buttons\n      final StringList names = ctx.databases.backups(db);\n      active = !names.isEmpty();\n      backups.setData(names.toArray());\n      backups.setEnabled(active);\n\n      restore.setEnabled(active);\n      delete.setEnabled(active);\n      deleteAll.setEnabled(active);\n    }\n\n    // run all commands\n    if(!cmds.isEmpty()) {\n      DialogProgress.execute(this, cmds.toArray(new Command[cmds.size()]));\n    }\n  }","commit_id":"866d452e1b5d11511f1b83c3a2bcda835ae9e114","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  protected boolean run() {\n    final String name = args[0];\n    if(!Databases.validName(name, true)) return error(NAME_INVALID_X, name);\n\n    // loop through all databases and collect databases to be dropped\n    final StringList dbs = context.databases.listDBs(name);\n    // if the given argument is not a database name, it could be the name of a backup file\n    if(dbs.isEmpty()) dbs.add(name);\n\n    // drop all backups\n    for(final String db : dbs) {\n      for(final String file : backups(db.contains(\"-\") ? db : db + '-', context))\n        drop(file, context);\n    }\n\n    return info(BACKUP_DROPPED_X, name + '*' + IO.ZIPSUFFIX);\n  }","id":27697,"modified_method":"@Override\n  protected boolean run() {\n    final String name = args[0];\n    if(!Databases.validName(name, true)) return error(NAME_INVALID_X, name);\n\n    // loop through all databases and collect databases to be dropped\n    final StringList dbs = context.databases.listDBs(name);\n    // if the given argument is not a database name, it could be the name of a backup file\n    if(dbs.isEmpty()) dbs.add(name);\n\n    // drop all backups\n    for(final String db : dbs) {\n      for(final String backup : context.databases.backups(db)) drop(backup, context);\n    }\n\n    return info(BACKUP_DROPPED_X, name + '*' + IO.ZIPSUFFIX);\n  }","commit_id":"866d452e1b5d11511f1b83c3a2bcda835ae9e114","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Drops one or more backups of the specified database.\n   * @param name name of database file\n   * @param ctx database context\n   * @return success flag\n   */\n  public static boolean drop(final String name, final Context ctx) {\n    final IOFile dir = ctx.globalopts.dbpath();\n    return new IOFile(dir, name).delete();\n  }","id":27698,"modified_method":"/**\n   * Drops a backup with the specified name.\n   * @param name name of backup file\n   * @param ctx database context\n   * @return success flag\n   */\n  public static boolean drop(final String name, final Context ctx) {\n    return new IOFile(ctx.globalopts.dbpath(), name + IO.ZIPSUFFIX).delete();\n  }","commit_id":"866d452e1b5d11511f1b83c3a2bcda835ae9e114","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Performs the drop-backup function.\n   * @param ctx query context\n   * @return {@code null}\n   * @throws QueryException query exception\n   */\n  private Item dropBackup(final QueryContext ctx) throws QueryException {\n    final String name = string(checkStr(expr[0], ctx));\n    if(!Databases.validName(name)) throw BXDB_NAME.get(info, name);\n\n    final StringList files = DropBackup.backups(name, ctx.context);\n    if(files.isEmpty()) throw BXDB_WHICHBACK.get(info, name);\n\n    for(final String file : files) {\n      ctx.updates.add(new BackupDrop(file, info, ctx), ctx);\n    }\n    return null;\n  }","id":27699,"modified_method":"/**\n   * Performs the drop-backup function.\n   * @param ctx query context\n   * @return {@code null}\n   * @throws QueryException query exception\n   */\n  private Item dropBackup(final QueryContext ctx) throws QueryException {\n    final String name = string(checkStr(expr[0], ctx));\n    if(!Databases.validName(name)) throw BXDB_NAME.get(info, name);\n\n    final StringList backups = ctx.context.databases.backups(name);\n    if(backups.isEmpty()) throw BXDB_WHICHBACK.get(info, name);\n\n    for(final String backup : backups) {\n      ctx.updates.add(new BackupDrop(backup, info, ctx), ctx);\n    }\n    return null;\n  }","commit_id":"866d452e1b5d11511f1b83c3a2bcda835ae9e114","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Performs the backups function.\n   * @param ctx query context\n   * @return iterator\n   * @throws QueryException query exception\n   */\n  private Iter backups(final QueryContext ctx) throws QueryException {\n    checkCreate(ctx);\n    final String prefix = expr.length == 0 ? null : string(checkStr(expr[0], ctx)) + '-';\n\n    final StringList list = ctx.context.databases.backups(prefix);\n    final IOFile dbpath = ctx.context.globalopts.dbpath();\n    return new Iter() {\n      int up = -1;\n\n      @Override\n      public Item next() {\n        if(++up >= list.size()) return null;\n        final String name = list.get(up);\n        final long length = new IOFile(dbpath, name + IO.ZIPSUFFIX).length();\n        return new FElem(BACKUP).add(name).add(SIZE, token(length));\n      }\n    };\n  }","id":27700,"modified_method":"/**\n   * Performs the backups function.\n   * @param ctx query context\n   * @return iterator\n   * @throws QueryException query exception\n   */\n  private Iter backups(final QueryContext ctx) throws QueryException {\n    checkCreate(ctx);\n    final String name = expr.length == 0 ? null : string(checkStr(expr[0], ctx));\n\n    final StringList backups = name == null ? ctx.context.databases.backups() :\n      ctx.context.databases.backups(name);\n    final IOFile dbpath = ctx.context.globalopts.dbpath();\n    return new Iter() {\n      int up = -1;\n\n      @Override\n      public Item next() {\n        if(++up >= backups.size()) return null;\n        final String backup = backups.get(up);\n        final long length = new IOFile(dbpath, backup + IO.ZIPSUFFIX).length();\n        return new FElem(BACKUP).add(backup).add(SIZE, token(length));\n      }\n    };\n  }","commit_id":"866d452e1b5d11511f1b83c3a2bcda835ae9e114","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Performs the restore function.\n   * @param ctx query context\n   * @return {@code null}\n   * @throws QueryException query exception\n   */\n  private Item restore(final QueryContext ctx) throws QueryException {\n    // extract database name from backup file\n    final String name = string(checkStr(expr[0], ctx));\n    final String db = Restore.dbName(name);\n    if(!Databases.validName(db)) throw BXDB_NAME.get(info, db);\n\n    final IOFile backup = Restore.backupFile(name, ctx.context);\n    if(backup == null) throw BXDB_NOBACKUP.get(info, name);\n\n    ctx.updates.add(new DBRestore(db, backup, ctx, info), ctx);\n    return null;\n  }","id":27701,"modified_method":"/**\n   * Performs the restore function.\n   * @param ctx query context\n   * @return {@code null}\n   * @throws QueryException query exception\n   */\n  private Item restore(final QueryContext ctx) throws QueryException {\n    // extract database name from backup file\n    final String name = string(checkStr(expr[0], ctx));\n    if(!Databases.validName(name)) throw BXDB_NAME.get(info, name);\n\n    // find backup with or without date suffix\n    final StringList backups = ctx.context.databases.backups(name);\n    if(backups.isEmpty()) throw BXDB_NOBACKUP.get(info, name);\n\n    final String backup = backups.get(0);\n    final String db = Databases.name(backup);\n    ctx.updates.add(new DBRestore(db, backup, ctx, info), ctx);\n    return null;\n  }","commit_id":"866d452e1b5d11511f1b83c3a2bcda835ae9e114","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public void databases(final LockResult lr) {\n    super.databases(lr);\n    // Not sure whether database or name of backup file is provided: lock both\n    final String name = args[0];\n    lr.write.add(name).add(dbName(name));\n  }","id":27702,"modified_method":"@Override\n  public void databases(final LockResult lr) {\n    super.databases(lr);\n    // Not sure whether database or name of backup file is provided: lock both\n    final String backup = args[0];\n    lr.write.add(backup).add(Databases.name(backup));\n  }","commit_id":"866d452e1b5d11511f1b83c3a2bcda835ae9e114","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  protected boolean run() {\n    String name = args[0];\n    final String db = dbName(name);\n    if(!Databases.validName(db)) return error(NAME_INVALID_X, name);\n\n    // find backup file with or without date suffix\n    final IOFile file = backupFile(name, context);\n    if(file == null) return error(BACKUP_NOT_FOUND_X, name);\n\n    // close database if it's currently opened and not opened by others\n    if(!closed) closed = close(context, db);\n    // check if database is still pinned\n    if(context.pinned(db)) return error(DB_PINNED_X, db);\n\n    // try to restore database\n    try {\n      restore(db, file, this, context);\n      return !closed || new Open(db).run(context) ?\n        info(DB_RESTORED_X, file.name(), perf) : error(DB_NOT_RESTORED_X, db);\n    } catch(final IOException ex) {\n      return error(DB_NOT_RESTORED_X, db);\n    }\n  }","id":27703,"modified_method":"@Override\n  protected boolean run() {\n    String name = args[0];\n    if(!Databases.validName(name)) return error(NAME_INVALID_X, name);\n\n    // find backup with or without date suffix\n    final StringList backups = context.databases.backups(name);\n    if(backups.isEmpty()) return error(BACKUP_NOT_FOUND_X, name);\n\n    final String backup = backups.get(0);\n    final String db = Databases.name(backup);\n\n    // close database if it's currently opened and not opened by others\n    if(!closed) closed = close(context, db);\n    // check if database is still pinned\n    if(context.pinned(db)) return error(DB_PINNED_X, db);\n\n    // try to restore database\n    try {\n      restore(db, backup, this, context);\n      return !closed || new Open(db).run(context) ?\n        info(DB_RESTORED_X, backup, perf) : error(DB_NOT_RESTORED_X, db);\n    } catch(final IOException ex) {\n      Util.debug(ex);\n      return error(DB_NOT_RESTORED_X, db);\n    }\n  }","commit_id":"866d452e1b5d11511f1b83c3a2bcda835ae9e114","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Restores the specified database.\n   * @param db name of database\n   * @param file file\n   * @param cmd calling command instance\n   * @param context database context\n   * @throws IOException  I/O exception\n   */\n  public static void restore(final String db, final IOFile file, final Restore cmd,\n      final Context context) throws IOException {\n\n    // drop target database\n    DropDB.drop(db, context);\n\n    final Zip zip = new Zip(file);\n    if(cmd != null) cmd.proc(zip);\n    zip.unzip(context.globalopts.dbpath());\n  }","id":27704,"modified_method":"/**\n   * Restores the specified database.\n   * @param db name of database\n   * @param backup name of backup\n   * @param cmd calling command instance\n   * @param context database context\n   * @throws IOException  I/O exception\n   */\n  public static void restore(final String db, final String backup, final Restore cmd,\n      final Context context) throws IOException {\n\n    // drop target database\n    DropDB.drop(db, context);\n\n    final IOFile dbpath = context.globalopts.dbpath();\n    final Zip zip = new Zip(new IOFile(dbpath, backup + IO.ZIPSUFFIX));\n    if(cmd != null) cmd.proc(zip);\n    zip.unzip(dbpath);\n  }","commit_id":"866d452e1b5d11511f1b83c3a2bcda835ae9e114","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  protected boolean run() throws IOException {\n    final Table table = new Table();\n    table.description = BACKUPS_X;\n    table.header.add(NAME);\n    table.header.add(SIZE);\n\n    final StringList list = context.databases.backups(null);\n    final IOFile dbpath = context.globalopts.dbpath();\n    for(final String name : list) {\n      final TokenList tl = new TokenList();\n      tl.add(name);\n      tl.add(new IOFile(dbpath, name).length());\n      table.contents.add(tl);\n    }\n    out.println(table.sort().finish());\n    return true;\n  }","id":27705,"modified_method":"@Override\n  protected boolean run() throws IOException {\n    final Table table = new Table();\n    table.description = BACKUPS_X;\n    table.header.add(NAME);\n    table.header.add(SIZE);\n\n    final IOFile dbpath = context.globalopts.dbpath();\n    for(final String name : context.databases.backups()) {\n      final TokenList tl = new TokenList();\n      tl.add(name);\n      tl.add(new IOFile(dbpath, name + IO.ZIPSUFFIX).length());\n      table.contents.add(tl);\n    }\n    out.println(table.sort().finish());\n    return true;\n  }","commit_id":"866d452e1b5d11511f1b83c3a2bcda835ae9e114","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Opens the addressed database.\n   * @param http HTTP context\n   * @throws HTTPException REST exception\n   */\n  static void open(final HTTPContext http) throws HTTPException {\n    final String db = http.db();\n    if(db == null) return;\n    try {\n      http.session().execute(new Open(db, http.dbpath()));\n    } catch(final IOException ex) {\n      HTTPErr.NOT_FOUND_X.thrw(ex);\n    }\n  }","id":27706,"modified_method":"/**\n   * Opens the addressed database.\n   * @param http HTTP context\n   * @throws HTTPException REST exception\n   */\n  static void open(final HTTPContext http) throws HTTPException {\n    final String db = http.db();\n    if(db == null) return;\n    try {\n      http.session().execute(new Open(db));\n      http.session().execute(new Cs(_DB_OPEN.args(db, http.dbpath())));\n    } catch(final IOException ex) {\n      HTTPErr.NOT_FOUND_X.thrw(ex);\n    }\n  }","commit_id":"d6782db72530128aafb3d87b657bf2d7bd52b378","url":"https://github.com/BaseXdb/basex"},{"original_method":"private int compareModuleComponentSelectors(DependencyEdge left, DependencyEdge right) {\n            ModuleComponentSelector leftRequested = (ModuleComponentSelector)left.getRequested();\n            ModuleComponentSelector rightRequested = (ModuleComponentSelector)right.getRequested();\n            int byGroup = leftRequested.getGroup().compareTo(rightRequested.getGroup());\n            if (byGroup != 0) {\n                return byGroup;\n            }\n\n            int byModule = leftRequested.getModule().compareTo(rightRequested.getModule());\n            if (byModule != 0) {\n                return byModule;\n            }\n\n            //if selected matches requested version comparison is overridden\n            boolean leftMatches = leftRequested.matchesStrictly(left.getActual());\n            boolean rightMatches = rightRequested.matchesStrictly(right.getActual());\n            if (leftMatches && !rightMatches) {\n                return -1;\n            } else if (!leftMatches && rightMatches) {\n                return 1;\n            }\n\n            //order dynamic selectors after static selectors\n            boolean leftDynamic = matcher.isDynamic(leftRequested.getVersion());\n            boolean rightDynamic = matcher.isDynamic(rightRequested.getVersion());\n            if (leftDynamic && !rightDynamic) {\n                return 1;\n            } else if (!leftDynamic && rightDynamic) {\n                return -1;\n            }\n\n            int byVersion;\n            if (leftDynamic && rightDynamic) {\n                // order dynamic selectors lexicographically\n                byVersion = leftRequested.getVersion().compareTo(rightRequested.getVersion());\n            } else {\n                // order static selectors semantically\n                byVersion = matcher.compare(leftRequested.getVersion(), rightRequested.getVersion());\n            }\n            if (byVersion != 0) {\n                return byVersion;\n            }\n\n            return compareFromComponentIdentifiers(left.getFrom(), right.getFrom());\n        }","id":27707,"modified_method":"private int compareModuleComponentSelectors(DependencyEdge left, DependencyEdge right) {\n            ModuleComponentSelector leftRequested = (ModuleComponentSelector)left.getRequested();\n            ModuleComponentSelector rightRequested = (ModuleComponentSelector)right.getRequested();\n            int byGroup = leftRequested.getGroup().compareTo(rightRequested.getGroup());\n            if (byGroup != 0) {\n                return byGroup;\n            }\n\n            int byModule = leftRequested.getModule().compareTo(rightRequested.getModule());\n            if (byModule != 0) {\n                return byModule;\n            }\n\n            //if selected matches requested version comparison is overridden\n            boolean leftMatches = leftRequested.matchesStrictly(left.getActual());\n            boolean rightMatches = rightRequested.matchesStrictly(right.getActual());\n            if (leftMatches && !rightMatches) {\n                return -1;\n            } else if (!leftMatches && rightMatches) {\n                return 1;\n            }\n\n            //order dynamic selectors after static selectors\n            boolean leftDynamic = matcher.createSelector(leftRequested.getVersion()).isDynamic();\n            boolean rightDynamic = matcher.createSelector(rightRequested.getVersion()).isDynamic();\n            if (leftDynamic && !rightDynamic) {\n                return 1;\n            } else if (!leftDynamic && rightDynamic) {\n                return -1;\n            }\n\n            int byVersion;\n            if (leftDynamic && rightDynamic) {\n                // order dynamic selectors lexicographically\n                byVersion = leftRequested.getVersion().compareTo(rightRequested.getVersion());\n            } else {\n                // order static selectors semantically\n                byVersion = matcher.compare(leftRequested.getVersion(), rightRequested.getVersion());\n            }\n            if (byVersion != 0) {\n                return byVersion;\n            }\n\n            return compareFromComponentIdentifiers(left.getFrom(), right.getFrom());\n        }","commit_id":"97007467ad61329ef03f38d08e1dbc032efa26f2","url":"https://github.com/gradle/gradle"},{"original_method":"public int compare(Versioned element1, Versioned element2) {\n        String version1 = element1.getVersion();\n        String version2 = element2.getVersion();\n\n        /*\n         * The revisions can still be not resolved, so we use the current version matcher to\n         * know if one revision is dynamic, and in this case if it should be considered greater\n         * or lower than the other one. Note that if the version matcher compare method returns\n         * 0, it's because it's not possible to know which revision is greater. In this case we\n         * consider the dynamic one to be greater, because most of the time it will then be\n         * actually resolved and a real comparison will occur.\n         */\n        if (versionMatcher.isDynamic(version1)) {\n            int c = versionMatcher.compare(version1, version2);\n            return c >= 0 ? 1 : -1;\n        } else if (versionMatcher.isDynamic(version2)) {\n            int c = versionMatcher.compare(version2, version1);\n            return c >= 0 ? -1 : 1;\n        }\n\n        return versionMatcher.compare(version1, version2);\n    }","id":27708,"modified_method":"public int compare(Versioned element1, Versioned element2) {\n        String version1 = element1.getVersion();\n        String version2 = element2.getVersion();\n\n        /*\n         * The revisions can still be not resolved, so we use the current version matcher to\n         * know if one revision is dynamic, and in this case if it should be considered greater\n         * or lower than the other one. Note that if the version matcher compare method returns\n         * 0, it's because it's not possible to know which revision is greater. In this case we\n         * consider the dynamic one to be greater, because most of the time it will then be\n         * actually resolved and a real comparison will occur.\n         */\n        VersionSelector version1Selector = versionMatcher.createSelector(version1);\n        VersionSelector version2Selector = versionMatcher.createSelector(version2);\n        if (version1Selector.isDynamic()) {\n            int c = version1Selector.compare(version1, version2);\n            return c >= 0 ? 1 : -1;\n        } else if (version2Selector.isDynamic()) {\n            int c = version2Selector.compare(version2, version1);\n            return c >= 0 ? -1 : 1;\n        }\n\n        return versionMatcher.compare(version1, version2);\n    }","commit_id":"97007467ad61329ef03f38d08e1dbc032efa26f2","url":"https://github.com/gradle/gradle"},{"original_method":"public boolean canSelectMultipleComponents(ModuleVersionSelector selector) {\n        return versionMatcher.isDynamic(selector.getVersion());\n    }","id":27709,"modified_method":"public boolean canSelectMultipleComponents(ModuleVersionSelector selector) {\n        return versionMatcher.createSelector(selector.getVersion()).isDynamic();\n    }","commit_id":"97007467ad61329ef03f38d08e1dbc032efa26f2","url":"https://github.com/gradle/gradle"},{"original_method":"public ModuleComponentIdentifier choose(ModuleVersionListing versions, DependencyMetaData dependency, ModuleComponentRepositoryAccess moduleAccess) {\n        ModuleVersionSelector requested = dependency.getRequested();\n        Collection<SpecRuleAction<? super ComponentSelection>> rules = componentSelectionRules.getRules();\n\n        for (Versioned candidate : sortLatestFirst(versions)) {\n            ModuleComponentIdentifier candidateIdentifier = DefaultModuleComponentIdentifier.newId(requested.getGroup(), requested.getName(), candidate.getVersion());\n            MetadataProvider metadataProvider = new MetadataProvider(new MetaDataSupplier(dependency, candidateIdentifier, moduleAccess));\n\n            if (versionMatches(requested, candidateIdentifier, metadataProvider)) {\n                if (!isRejectedByRules(candidateIdentifier, rules, metadataProvider)) {\n                    return candidateIdentifier;\n                }\n\n                if (versionMatcher.matchesUniqueVersion(requested.getVersion())) {\n                    break;\n                }\n            }\n        }\n        return null;\n    }","id":27710,"modified_method":"public ModuleComponentIdentifier choose(ModuleVersionListing versions, DependencyMetaData dependency, ModuleComponentRepositoryAccess moduleAccess) {\n        ModuleVersionSelector requestedModule = dependency.getRequested();\n        VersionSelector requestedVersion = versionMatcher.createSelector(requestedModule.getVersion());\n        Collection<SpecRuleAction<? super ComponentSelection>> rules = componentSelectionRules.getRules();\n\n        for (Versioned candidate : sortLatestFirst(versions)) {\n            ModuleComponentIdentifier candidateIdentifier = DefaultModuleComponentIdentifier.newId(requestedModule.getGroup(), requestedModule.getName(), candidate.getVersion());\n            MetadataProvider metadataProvider = new MetadataProvider(new MetaDataSupplier(dependency, candidateIdentifier, moduleAccess));\n\n            if (versionMatches(requestedVersion, candidateIdentifier, metadataProvider)) {\n                if (!isRejectedByRules(candidateIdentifier, rules, metadataProvider)) {\n                    return candidateIdentifier;\n                }\n\n                if (requestedVersion.matchesUniqueVersion()) {\n                    break;\n                }\n            }\n        }\n        return null;\n    }","commit_id":"97007467ad61329ef03f38d08e1dbc032efa26f2","url":"https://github.com/gradle/gradle"},{"original_method":"private boolean versionMatches(ModuleVersionSelector requested, ModuleComponentIdentifier candidateIdentifier, MetadataProvider metadataProvider) {\n        if (versionMatcher.needModuleMetadata(requested.getVersion())) {\n            return versionMatcher.accept(requested.getVersion(), metadataProvider.getMetaData());\n        } else {\n            return versionMatcher.accept(requested.getVersion(), candidateIdentifier.getVersion());\n        }\n    }","id":27711,"modified_method":"private boolean versionMatches(VersionSelector selector, ModuleComponentIdentifier candidateIdentifier, MetadataProvider metadataProvider) {\n        if (selector.requiresMetadata()) {\n            return selector.accept(metadataProvider.getComponentMetadata());\n        } else {\n            return selector.accept(candidateIdentifier.getVersion());\n        }\n    }","commit_id":"97007467ad61329ef03f38d08e1dbc032efa26f2","url":"https://github.com/gradle/gradle"},{"original_method":"private boolean isDynamicVersion(String version) {\n        return versionMatcher.isDynamic(version);\n    }","id":27712,"modified_method":"private boolean isDynamicVersion(String version) {\n        return versionMatcher.createSelector(version).isDynamic();\n    }","commit_id":"97007467ad61329ef03f38d08e1dbc032efa26f2","url":"https://github.com/gradle/gradle"},{"original_method":"public void resolve(DependencyMetaData dependency, BuildableComponentIdResolveResult result) {\n        ModuleVersionSelector requested = dependency.getRequested();\n        if (versionMatcher.isDynamic(requested.getVersion())) {\n            dynamicRevisionResolver.resolve(dependency, result);\n        } else {\n            DefaultModuleComponentIdentifier id = new DefaultModuleComponentIdentifier(requested.getGroup(), requested.getName(), requested.getVersion());\n            DefaultModuleVersionIdentifier mvId = new DefaultModuleVersionIdentifier(requested.getGroup(), requested.getName(), requested.getVersion());\n            result.resolved(id, mvId);\n        }\n    }","id":27713,"modified_method":"public void resolve(DependencyMetaData dependency, BuildableComponentIdResolveResult result) {\n        ModuleVersionSelector requested = dependency.getRequested();\n        if (versionMatcher.createSelector(requested.getVersion()).isDynamic()) {\n            dynamicRevisionResolver.resolve(dependency, result);\n        } else {\n            DefaultModuleComponentIdentifier id = new DefaultModuleComponentIdentifier(requested.getGroup(), requested.getName(), requested.getVersion());\n            DefaultModuleVersionIdentifier mvId = new DefaultModuleVersionIdentifier(requested.getGroup(), requested.getName(), requested.getVersion());\n            result.resolved(id, mvId);\n        }\n    }","commit_id":"97007467ad61329ef03f38d08e1dbc032efa26f2","url":"https://github.com/gradle/gradle"},{"original_method":"public ResolverStrategy() {\n        ChainVersionMatcher chain = new ChainVersionMatcher();\n        chain.add(new VersionRangeMatcher(new ExactVersionMatcher()));\n        chain.add(new SubVersionMatcher(new ExactVersionMatcher()));\n        chain.add(new LatestVersionMatcher());\n        chain.add(new ExactVersionMatcher());\n        versionMatcher = chain;\n\n        addMatcher(ExactPatternMatcher.INSTANCE);\n        addMatcher(RegexpPatternMatcher.INSTANCE);\n        addMatcher(ExactOrRegexpPatternMatcher.INSTANCE);\n        addMatcher(GlobPatternMatcher.INSTANCE);\n    }","id":27714,"modified_method":"public ResolverStrategy() {\n        versionMatcher = new DefaultVersionMatcher();\n\n        addMatcher(ExactPatternMatcher.INSTANCE);\n        addMatcher(RegexpPatternMatcher.INSTANCE);\n        addMatcher(ExactOrRegexpPatternMatcher.INSTANCE);\n        addMatcher(GlobPatternMatcher.INSTANCE);\n    }","commit_id":"97007467ad61329ef03f38d08e1dbc032efa26f2","url":"https://github.com/gradle/gradle"},{"original_method":"public void onFetchable(ClientPutState state, ObjectContainer container) {\n\n\t\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\n\t\t\tif(logMINOR) Logger.minor(this, \"onFetchable(\"+state+ ')');\n\t\t\t\n\t\t\tboolean meta;\n\t\t\t\n\t\t\tsynchronized(this) {\n\t\t\t\tmeta = (state == metadataPutter);\n\t\t\t\tif(meta) {\n\t\t\t\t\tif(!metaInsertStarted) {\n\t\t\t\t\t\tLogger.error(this, \"Metadata insert not started yet got onFetchable for it: \"+state+\" on \"+this);\n\t\t\t\t\t}\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Metadata fetchable\"+(metaFetchable?\"\":\" already\"));\n\t\t\t\t\tif(metaFetchable) return;\n\t\t\t\t\tmetaFetchable = true;\n\t\t\t\t\tif(persistent)\n\t\t\t\t\t\tcontainer.set(this);\n\t\t\t\t} else {\n\t\t\t\t\tif(state != sfi) {\n\t\t\t\t\t\tLogger.error(this, \"onFetchable for unknown state \"+state);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif(dataFetchable) return;\n\t\t\t\t\tdataFetchable = true;\n\t\t\t\t\tif(persistent)\n\t\t\t\t\t\tcontainer.set(this);\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Data fetchable\");\n\t\t\t\t\tif(metaInsertStarted) return;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(meta)\n\t\t\t\tcb.onFetchable(this, container);\n\t\t}","id":27715,"modified_method":"public void onFetchable(ClientPutState state, ObjectContainer container) {\n\n\t\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\n\t\t\tif(logMINOR) Logger.minor(this, \"onFetchable(\"+state+ ')');\n\t\t\t\n\t\t\tboolean meta;\n\t\t\t\n\t\t\tsynchronized(this) {\n\t\t\t\tmeta = (state == metadataPutter);\n\t\t\t\tif(meta) {\n\t\t\t\t\tif(!metaInsertStarted) {\n\t\t\t\t\t\tLogger.error(this, \"Metadata insert not started yet got onFetchable for it: \"+state+\" on \"+this);\n\t\t\t\t\t}\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Metadata fetchable\"+(metaFetchable?\"\":\" already\"));\n\t\t\t\t\tif(metaFetchable) return;\n\t\t\t\t\tmetaFetchable = true;\n\t\t\t\t\tif(persistent)\n\t\t\t\t\t\tcontainer.set(this);\n\t\t\t\t} else {\n\t\t\t\t\tif(state != sfi) {\n\t\t\t\t\t\tLogger.error(this, \"onFetchable for unknown state \"+state);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif(dataFetchable) return;\n\t\t\t\t\tdataFetchable = true;\n\t\t\t\t\tif(persistent)\n\t\t\t\t\t\tcontainer.set(this);\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Data fetchable\");\n\t\t\t\t\tif(metaInsertStarted) return;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(meta) {\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(cb, 1);\n\t\t\t\tcb.onFetchable(this, container);\n\t\t\t}\n\t\t}","commit_id":"27a2c5b376a023b56b23b92c9a0ca61926972818","url":"https://github.com/freenet/fred"},{"original_method":"private void fail(InsertException e, ObjectContainer container, ClientContext context) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Failing: \"+e, e);\n\t\t\tClientPutState oldSFI = null;\n\t\t\tClientPutState oldMetadataPutter = null;\n\t\t\tsynchronized(this) {\n\t\t\t\tif(finished){\n\t\t\t\t\tif(freeData)\n\t\t\t\t\t\tblock.free(container);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfinished = true;\n\t\t\t\toldSFI = sfi;\n\t\t\t\toldMetadataPutter = metadataPutter;\n\t\t\t}\n\t\t\tif(persistent)\n\t\t\t\tcontainer.set(this);\n\t\t\tif(oldSFI != null)\n\t\t\t\toldSFI.cancel(container, context);\n\t\t\tif(oldMetadataPutter != null)\n\t\t\t\toldMetadataPutter.cancel(container, context);\n\t\t\tfinished = true;\n\t\t\tcb.onFailure(e, this, container, context);\n\t\t}","id":27716,"modified_method":"private void fail(InsertException e, ObjectContainer container, ClientContext context) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Failing: \"+e, e);\n\t\t\tClientPutState oldSFI = null;\n\t\t\tClientPutState oldMetadataPutter = null;\n\t\t\tsynchronized(this) {\n\t\t\t\tif(finished){\n\t\t\t\t\tif(freeData)\n\t\t\t\t\t\tblock.free(container);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfinished = true;\n\t\t\t\toldSFI = sfi;\n\t\t\t\toldMetadataPutter = metadataPutter;\n\t\t\t}\n\t\t\tif(persistent) {\n\t\t\t\tif(oldSFI != null)\n\t\t\t\t\tcontainer.activate(oldSFI, 1);\n\t\t\t\tif(oldMetadataPutter != null)\n\t\t\t\t\tcontainer.activate(oldMetadataPutter, 1);\n\t\t\t\tcontainer.activate(cb, 1);\n\t\t\t}\n\t\t\tif(oldSFI != null)\n\t\t\t\toldSFI.cancel(container, context);\n\t\t\tif(oldMetadataPutter != null)\n\t\t\t\toldMetadataPutter.cancel(container, context);\n\t\t\tfinished = true;\n\t\t\tcb.onFailure(e, this, container, context);\n\t\t\tif(persistent)\n\t\t\t\tcontainer.set(this);\n\t\t}","commit_id":"27a2c5b376a023b56b23b92c9a0ca61926972818","url":"https://github.com/freenet/fred"},{"original_method":"public void onMetadata(Metadata meta, ClientPutState state, ObjectContainer container, ClientContext context) {\n\t\t\tInsertException e = null;\n\t\t\tsynchronized(this) {\n\t\t\t\tif(finished) return;\n\t\t\t\tif(reportMetadataOnly) {\n\t\t\t\t\tif(state != sfi) {\n\t\t\t\t\t\tLogger.error(this, \"Got metadata from unknown object \"+state+\" when expecting to report metadata\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tmetaInsertSuccess = true;\n\t\t\t\t} else if(state == metadataPutter) {\n\t\t\t\t\tLogger.error(this, \"Got metadata for metadata\");\n\t\t\t\t\te = new InsertException(InsertException.INTERNAL_ERROR, \"Did not expect to get metadata for metadata inserter\", null);\n\t\t\t\t} else if(state != sfi) {\n\t\t\t\t\tLogger.error(this, \"Got metadata from unknown state \"+state);\n\t\t\t\t\te = new InsertException(InsertException.INTERNAL_ERROR, \"Got metadata from unknown state\", null);\n\t\t\t\t} else {\n\t\t\t\t\t// Already started metadata putter ? (in which case we've got the metadata twice)\n\t\t\t\t\tif(metadataPutter != null) return;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(reportMetadataOnly) {\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.set(this);\n\t\t\t\tcb.onMetadata(meta, this, container, context);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(e != null) {\n\t\t\t\tonFailure(e, state, container, context);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tbyte[] metaBytes;\n\t\t\ttry {\n\t\t\t\tmetaBytes = meta.writeToByteArray();\n\t\t\t} catch (MetadataUnresolvedException e1) {\n\t\t\t\tLogger.error(this, \"Impossible: \"+e1, e1);\n\t\t\t\tInsertException ex = new InsertException(InsertException.INTERNAL_ERROR, \"MetadataUnresolvedException in SingleFileInserter.SplitHandler: \"+e1, null);\n\t\t\t\tex.initCause(e1);\n\t\t\t\tfail(ex, container, context);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tString metaPutterTargetFilename = targetFilename;\n\t\t\t\n\t\t\tif(targetFilename != null) {\n\t\t\t\t\n\t\t\t\tif(metaBytes.length <= Short.MAX_VALUE) {\n\t\t\t\t\tHashMap hm = new HashMap();\n\t\t\t\t\thm.put(targetFilename, meta);\n\t\t\t\t\tmeta = Metadata.mkRedirectionManifestWithMetadata(hm);\n\t\t\t\t\tmetaPutterTargetFilename = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmetaBytes = meta.writeToByteArray();\n\t\t\t\t\t} catch (MetadataUnresolvedException e1) {\n\t\t\t\t\t\tLogger.error(this, \"Impossible (2): \"+e1, e1);\n\t\t\t\t\t\tInsertException ex = new InsertException(InsertException.INTERNAL_ERROR, \"MetadataUnresolvedException in SingleFileInserter.SplitHandler(2): \"+e1, null);\n\t\t\t\t\t\tex.initCause(e1);\n\t\t\t\t\t\tfail(ex, container, context);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tBucket metadataBucket;\n\t\t\ttry {\n\t\t\t\tmetadataBucket = BucketTools.makeImmutableBucket(context.getBucketFactory(persistent), metaBytes);\n\t\t\t} catch (IOException e1) {\n\t\t\t\tInsertException ex = new InsertException(InsertException.BUCKET_ERROR, e1, null);\n\t\t\t\tfail(ex, container, context);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tInsertBlock newBlock = new InsertBlock(metadataBucket, null, block.desiredURI);\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tmetadataPutter = new SingleFileInserter(parent, this, newBlock, true, ctx, false, getCHKOnly, false, token, false, true, metaPutterTargetFilename, earlyEncode);\n\t\t\t\t\t// If EarlyEncode, then start the metadata insert ASAP, to get the key.\n\t\t\t\t\t// Otherwise, wait until the data is fetchable (to improve persistence).\n\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\tLogger.minor(this, \"Created metadata putter for \"+this+\" : \"+metadataPutter+\" bucket \"+metadataBucket+\" size \"+metadataBucket.size());\n\t\t\t\t\tif(persistent)\n\t\t\t\t\t\tcontainer.set(this);\n\t\t\t\t\tif(!(earlyEncode || splitInsertSuccess)) return;\n\t\t\t\t}\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Putting metadata on \"+metadataPutter+\" from \"+sfi+\" (\"+((SplitFileInserter)sfi).getLength()+ ')');\n\t\t\tstartMetadata(container, context);\n\t\t}","id":27717,"modified_method":"public void onMetadata(Metadata meta, ClientPutState state, ObjectContainer container, ClientContext context) {\n\t\t\tInsertException e = null;\n\t\t\tsynchronized(this) {\n\t\t\t\tif(finished) return;\n\t\t\t\tif(reportMetadataOnly) {\n\t\t\t\t\tif(state != sfi) {\n\t\t\t\t\t\tLogger.error(this, \"Got metadata from unknown object \"+state+\" when expecting to report metadata\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tmetaInsertSuccess = true;\n\t\t\t\t} else if(state == metadataPutter) {\n\t\t\t\t\tLogger.error(this, \"Got metadata for metadata\");\n\t\t\t\t\te = new InsertException(InsertException.INTERNAL_ERROR, \"Did not expect to get metadata for metadata inserter\", null);\n\t\t\t\t} else if(state != sfi) {\n\t\t\t\t\tLogger.error(this, \"Got metadata from unknown state \"+state);\n\t\t\t\t\te = new InsertException(InsertException.INTERNAL_ERROR, \"Got metadata from unknown state\", null);\n\t\t\t\t} else {\n\t\t\t\t\t// Already started metadata putter ? (in which case we've got the metadata twice)\n\t\t\t\t\tif(metadataPutter != null) return;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(reportMetadataOnly) {\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.set(this);\n\t\t\t\tcb.onMetadata(meta, this, container, context);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(e != null) {\n\t\t\t\tonFailure(e, state, container, context);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tbyte[] metaBytes;\n\t\t\tif(persistent)\n\t\t\t\t// Load keys\n\t\t\t\tcontainer.activate(meta, 2);\n\t\t\ttry {\n\t\t\t\tmetaBytes = meta.writeToByteArray();\n\t\t\t} catch (MetadataUnresolvedException e1) {\n\t\t\t\tLogger.error(this, \"Impossible: \"+e1, e1);\n\t\t\t\tInsertException ex = new InsertException(InsertException.INTERNAL_ERROR, \"MetadataUnresolvedException in SingleFileInserter.SplitHandler: \"+e1, null);\n\t\t\t\tex.initCause(e1);\n\t\t\t\tfail(ex, container, context);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tString metaPutterTargetFilename = targetFilename;\n\t\t\t\n\t\t\tif(targetFilename != null) {\n\t\t\t\t\n\t\t\t\tif(metaBytes.length <= Short.MAX_VALUE) {\n\t\t\t\t\tHashMap hm = new HashMap();\n\t\t\t\t\thm.put(targetFilename, meta);\n\t\t\t\t\tmeta = Metadata.mkRedirectionManifestWithMetadata(hm);\n\t\t\t\t\tmetaPutterTargetFilename = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmetaBytes = meta.writeToByteArray();\n\t\t\t\t\t} catch (MetadataUnresolvedException e1) {\n\t\t\t\t\t\tLogger.error(this, \"Impossible (2): \"+e1, e1);\n\t\t\t\t\t\tInsertException ex = new InsertException(InsertException.INTERNAL_ERROR, \"MetadataUnresolvedException in SingleFileInserter.SplitHandler(2): \"+e1, null);\n\t\t\t\t\t\tex.initCause(e1);\n\t\t\t\t\t\tfail(ex, container, context);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tBucket metadataBucket;\n\t\t\ttry {\n\t\t\t\tmetadataBucket = BucketTools.makeImmutableBucket(context.getBucketFactory(persistent), metaBytes);\n\t\t\t} catch (IOException e1) {\n\t\t\t\tInsertException ex = new InsertException(InsertException.BUCKET_ERROR, e1, null);\n\t\t\t\tfail(ex, container, context);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tInsertBlock newBlock = new InsertBlock(metadataBucket, null, block.desiredURI);\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tmetadataPutter = new SingleFileInserter(parent, this, newBlock, true, ctx, false, getCHKOnly, false, token, false, true, metaPutterTargetFilename, earlyEncode);\n\t\t\t\t\t// If EarlyEncode, then start the metadata insert ASAP, to get the key.\n\t\t\t\t\t// Otherwise, wait until the data is fetchable (to improve persistence).\n\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\tLogger.minor(this, \"Created metadata putter for \"+this+\" : \"+metadataPutter+\" bucket \"+metadataBucket+\" size \"+metadataBucket.size());\n\t\t\t\t\tif(persistent)\n\t\t\t\t\t\tcontainer.set(this);\n\t\t\t\t\tif(!(earlyEncode || splitInsertSuccess)) return;\n\t\t\t\t}\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Putting metadata on \"+metadataPutter+\" from \"+sfi+\" (\"+((SplitFileInserter)sfi).getLength()+ ')');\n\t\t\tstartMetadata(container, context);\n\t\t}","commit_id":"27a2c5b376a023b56b23b92c9a0ca61926972818","url":"https://github.com/freenet/fred"},{"original_method":"@Override\n\tpublic void blockSetFinalized(ObjectContainer container, ClientContext context) {\n\t\tsynchronized(this) {\n\t\t\tif(!metadataBlockSetFinalized) return;\n\t\t\tif(persistent())\n\t\t\t\tcontainer.activate(waitingForBlockSets, 2);\n\t\t\tif(waitingForBlockSets.isEmpty()) return;\n\t\t}\n\t\tsuper.blockSetFinalized(container, context);\n\t\tif(persistent())\n\t\t\tcontainer.store(this);\n\t}","id":27718,"modified_method":"@Override\n\tpublic void blockSetFinalized(ObjectContainer container, ClientContext context) {\n\t\tsynchronized(this) {\n\t\t\tif(!metadataBlockSetFinalized) return;\n\t\t\tif(persistent())\n\t\t\t\tcontainer.activate(waitingForBlockSets, 2);\n\t\t\tif(waitingForBlockSets.isEmpty()) {\n\t\t\t\tif(persistent())\n\t\t\t\t\tcontainer.deactivate(waitingForBlockSets, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif(persistent())\n\t\t\tcontainer.deactivate(waitingForBlockSets, 1);\n\t\tsuper.blockSetFinalized(container, context);\n\t\tif(persistent())\n\t\t\tcontainer.store(this);\n\t}","commit_id":"66a7fd507e321ec72b1b6e64a5f9adf23532e79d","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Attempt to insert the base metadata and the container. If the base metadata cannot be resolved,\n\t * try to resolve it: start inserts for each part that cannot be resolved, and wait for them to generate\n\t * URIs that can be incorporated into the metadata. This method will then be called again, and will \n\t * complete, or do more resolutions as necessary.\n\t * @param container\n\t * @param context\n\t */\n\tprivate void resolveAndStartBase(ObjectContainer container, ClientContext context) {\n\t\tBucket bucket = null;\n\t\tsynchronized(this) {\n\t\t\tif(hasResolvedBase) return;\n\t\t}\n\t\twhile(true) {\n\t\t\ttry {\n\t\t\t\tbucket = BucketTools.makeImmutableBucket(context.getBucketFactory(persistent()), baseMetadata.writeToByteArray());\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Metadata bucket is \"+bucket.size()+\" bytes long\");\n\t\t\t\tbreak;\n\t\t\t} catch (IOException e) {\n\t\t\t\tfail(new InsertException(InsertException.BUCKET_ERROR, e, null), container);\n\t\t\t\treturn;\n\t\t\t} catch (MetadataUnresolvedException e) {\n\t\t\t\ttry {\n\t\t\t\t\t// Start the insert for the sub-Metadata.\n\t\t\t\t\t// Eventually it will generate a URI and call onEncode(), which will call back here.\n\t\t\t\t\tresolve(e, container, context);\n\t\t\t\t\treturn;\n\t\t\t\t} catch (IOException e1) {\n\t\t\t\t\tfail(new InsertException(InsertException.BUCKET_ERROR, e, null), container);\n\t\t\t\t\treturn;\n\t\t\t\t} catch (InsertException e2) {\n\t\t\t\t\tfail(e2, container);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(bucket == null) return;\n\t\tsynchronized(this) {\n\t\t\tif(hasResolvedBase) return;\n\t\t\thasResolvedBase = true;\n\t\t}\n\t\tif(persistent()) {\n\t\t\tcontainer.store(this);\n\t\t\tcontainer.activate(elementsToPutInArchive, 2);\n\t\t}\n\t\tInsertBlock block;\n\t\tboolean isMetadata = true;\n\t\tboolean insertAsArchiveManifest = false;\n\t\tARCHIVE_TYPE archiveType = null;\n\t\tif(!(elementsToPutInArchive.isEmpty())) {\n\t\t\t// There is an archive to insert.\n\t\t\t// We want to include the metadata.\n\t\t\t// We have the metadata, fortunately enough, because everything has been resolve()d.\n\t\t\t// So all we need to do is create the actual archive.\n\t\t\ttry {\t\t\t\t\n\t\t\t\tBucket outputBucket = context.getBucketFactory(persistent()).makeBucket(baseMetadata.dataLength());\n\t\t\t\t// TODO: try both ? - maybe not worth it\n\t\t\t\tarchiveType = ARCHIVE_TYPE.getDefault();\n\t\t\t\tString mimeType = (archiveType == ARCHIVE_TYPE.TAR ?\n\t\t\t\t\tcreateTarBucket(bucket, outputBucket) :\n\t\t\t\t\tcreateZipBucket(bucket, outputBucket));\n\t\t\t\tbucket.free();\n\t\t\t\tif(persistent()) bucket.removeFrom(container);\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"We are using \"+archiveType);\n\t\t\t\t\n\t\t\t\t// Now we have to insert the Archive we have generated.\n\t\t\t\t\n\t\t\t\t// Can we just insert it, and not bother with a redirect to it?\n\t\t\t\t// Thereby exploiting implicit manifest support, which will pick up on .metadata??\n\t\t\t\t// We ought to be able to !!\n\t\t\t\tblock = new InsertBlock(outputBucket, new ClientMetadata(mimeType), targetURI);\n\t\t\t\tisMetadata = false;\n\t\t\t\tinsertAsArchiveManifest = true;\n\t\t\t} catch (IOException e) {\n\t\t\t\tfail(new InsertException(InsertException.BUCKET_ERROR, e, null), container);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else\n\t\t\tblock = new InsertBlock(bucket, null, targetURI);\n\t\tSingleFileInserter metadataInserter;\n\t\ttry {\n\t\t\tmetadataInserter = \n\t\t\t\tnew SingleFileInserter(this, this, block, isMetadata, ctx, (archiveType == ARCHIVE_TYPE.ZIP) , getCHKOnly, false, baseMetadata, archiveType, true, null, earlyEncode);\n\t\t\tif(logMINOR) Logger.minor(this, \"Inserting main metadata: \"+metadataInserter);\n\t\t\tif(persistent()) {\n\t\t\t\tcontainer.activate(metadataPuttersByMetadata, 2);\n\t\t\t\tcontainer.activate(metadataPuttersUnfetchable, 2);\n\t\t\t}\n\t\t\tthis.metadataPuttersByMetadata.put(baseMetadata, metadataInserter);\n\t\t\tmetadataPuttersUnfetchable.put(baseMetadata, metadataInserter);\n\t\t\tif(persistent()) {\n\t\t\t\tcontainer.store(metadataPuttersByMetadata);\n\t\t\t\tcontainer.store(metadataPuttersUnfetchable);\n\t\t\t}\n\t\t\tmetadataInserter.start(null, container, context);\n\t\t} catch (InsertException e) {\n\t\t\tfail(e, container);\n\t\t\treturn;\n\t\t}\n\t\tif(persistent()) {\n\t\t\tcontainer.deactivate(metadataInserter, 1);\n\t\t}\n\t}","id":27719,"modified_method":"/**\n\t * Attempt to insert the base metadata and the container. If the base metadata cannot be resolved,\n\t * try to resolve it: start inserts for each part that cannot be resolved, and wait for them to generate\n\t * URIs that can be incorporated into the metadata. This method will then be called again, and will \n\t * complete, or do more resolutions as necessary.\n\t * @param container\n\t * @param context\n\t */\n\tprivate void resolveAndStartBase(ObjectContainer container, ClientContext context) {\n\t\tBucket bucket = null;\n\t\tsynchronized(this) {\n\t\t\tif(hasResolvedBase) return;\n\t\t}\n\t\twhile(true) {\n\t\t\ttry {\n\t\t\t\tbucket = BucketTools.makeImmutableBucket(context.getBucketFactory(persistent()), baseMetadata.writeToByteArray());\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Metadata bucket is \"+bucket.size()+\" bytes long\");\n\t\t\t\tbreak;\n\t\t\t} catch (IOException e) {\n\t\t\t\tfail(new InsertException(InsertException.BUCKET_ERROR, e, null), container);\n\t\t\t\treturn;\n\t\t\t} catch (MetadataUnresolvedException e) {\n\t\t\t\ttry {\n\t\t\t\t\t// Start the insert for the sub-Metadata.\n\t\t\t\t\t// Eventually it will generate a URI and call onEncode(), which will call back here.\n\t\t\t\t\tresolve(e, container, context);\n\t\t\t\t\treturn;\n\t\t\t\t} catch (IOException e1) {\n\t\t\t\t\tfail(new InsertException(InsertException.BUCKET_ERROR, e, null), container);\n\t\t\t\t\treturn;\n\t\t\t\t} catch (InsertException e2) {\n\t\t\t\t\tfail(e2, container);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(bucket == null) return;\n\t\tsynchronized(this) {\n\t\t\tif(hasResolvedBase) return;\n\t\t\thasResolvedBase = true;\n\t\t}\n\t\tif(persistent()) {\n\t\t\tcontainer.store(this);\n\t\t\tcontainer.activate(elementsToPutInArchive, 2);\n\t\t}\n\t\tInsertBlock block;\n\t\tboolean isMetadata = true;\n\t\tboolean insertAsArchiveManifest = false;\n\t\tARCHIVE_TYPE archiveType = null;\n\t\tif(!(elementsToPutInArchive.isEmpty())) {\n\t\t\t// There is an archive to insert.\n\t\t\t// We want to include the metadata.\n\t\t\t// We have the metadata, fortunately enough, because everything has been resolve()d.\n\t\t\t// So all we need to do is create the actual archive.\n\t\t\ttry {\t\t\t\t\n\t\t\t\tBucket outputBucket = context.getBucketFactory(persistent()).makeBucket(baseMetadata.dataLength());\n\t\t\t\t// TODO: try both ? - maybe not worth it\n\t\t\t\tarchiveType = ARCHIVE_TYPE.getDefault();\n\t\t\t\tString mimeType = (archiveType == ARCHIVE_TYPE.TAR ?\n\t\t\t\t\tcreateTarBucket(bucket, outputBucket) :\n\t\t\t\t\tcreateZipBucket(bucket, outputBucket));\n\t\t\t\tbucket.free();\n\t\t\t\tif(persistent()) bucket.removeFrom(container);\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"We are using \"+archiveType);\n\t\t\t\t\n\t\t\t\t// Now we have to insert the Archive we have generated.\n\t\t\t\t\n\t\t\t\t// Can we just insert it, and not bother with a redirect to it?\n\t\t\t\t// Thereby exploiting implicit manifest support, which will pick up on .metadata??\n\t\t\t\t// We ought to be able to !!\n\t\t\t\tblock = new InsertBlock(outputBucket, new ClientMetadata(mimeType), targetURI);\n\t\t\t\tisMetadata = false;\n\t\t\t\tinsertAsArchiveManifest = true;\n\t\t\t} catch (IOException e) {\n\t\t\t\tfail(new InsertException(InsertException.BUCKET_ERROR, e, null), container);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else\n\t\t\tblock = new InsertBlock(bucket, null, targetURI);\n\t\tSingleFileInserter metadataInserter;\n\t\ttry {\n\t\t\tmetadataInserter = \n\t\t\t\tnew SingleFileInserter(this, this, block, isMetadata, ctx, (archiveType == ARCHIVE_TYPE.ZIP) , getCHKOnly, false, baseMetadata, archiveType, true, null, earlyEncode);\n\t\t\tif(logMINOR) Logger.minor(this, \"Inserting main metadata: \"+metadataInserter);\n\t\t\tif(persistent()) {\n\t\t\t\tcontainer.activate(metadataPuttersByMetadata, 2);\n\t\t\t\tcontainer.activate(metadataPuttersUnfetchable, 2);\n\t\t\t}\n\t\t\tthis.metadataPuttersByMetadata.put(baseMetadata, metadataInserter);\n\t\t\tmetadataPuttersUnfetchable.put(baseMetadata, metadataInserter);\n\t\t\tif(persistent()) {\n\t\t\t\tcontainer.store(metadataPuttersByMetadata);\n\t\t\t\tcontainer.store(metadataPuttersUnfetchable);\n\t\t\t\tcontainer.deactivate(metadataPuttersByMetadata, 1);\n\t\t\t\tcontainer.deactivate(metadataPuttersUnfetchable, 1);\n\t\t\t}\n\t\t\tmetadataInserter.start(null, container, context);\n\t\t} catch (InsertException e) {\n\t\t\tfail(e, container);\n\t\t\treturn;\n\t\t}\n\t\tif(persistent()) {\n\t\t\tcontainer.deactivate(metadataInserter, 1);\n\t\t\tcontainer.deactivate(elementsToPutInArchive, 1);\n\t\t}\n\t}","commit_id":"66a7fd507e321ec72b1b6e64a5f9adf23532e79d","url":"https://github.com/freenet/fred"},{"original_method":"protected void onFetchable(PutHandler handler, ObjectContainer container) {\n\t\tif(persistent()) {\n\t\t\tcontainer.activate(putHandlersWaitingForFetchable, 2);\n\t\t\tcontainer.activate(metadataPuttersUnfetchable, 2);\n\t\t\tcontainer.activate(cb, 1);\n\t\t}\n\t\tsynchronized(this) {\n\t\t\tputHandlersWaitingForFetchable.remove(handler);\n\t\t\tif(fetchable) return;\n\t\t\tif(!putHandlersWaitingForFetchable.isEmpty()) return;\n\t\t\tif(!hasResolvedBase) return;\n\t\t\tif(!metadataPuttersUnfetchable.isEmpty()) return;\n\t\t\tfetchable = true;\n\t\t}\n\t\tif(persistent()) {\n\t\t\tcontainer.store(putHandlersWaitingForMetadata);\n\t\t\tcontainer.store(this);\n\t\t}\n\t\tcb.onFetchable(this, container);\n\t}","id":27720,"modified_method":"protected void onFetchable(PutHandler handler, ObjectContainer container) {\n\t\tif(persistent()) {\n\t\t\tcontainer.activate(putHandlersWaitingForFetchable, 2);\n\t\t\tcontainer.activate(metadataPuttersUnfetchable, 2);\n\t\t}\n\t\tif(checkFetchable(handler)) {\n\t\t\tif(persistent()) {\n\t\t\t\tcontainer.store(putHandlersWaitingForMetadata);\n\t\t\t\tcontainer.store(this);\n\t\t\t\tcontainer.deactivate(putHandlersWaitingForFetchable, 1);\n\t\t\t\tcontainer.deactivate(metadataPuttersUnfetchable, 1);\n\t\t\t\tcontainer.activate(cb, 1);\n\t\t\t}\n\t\t\tcb.onFetchable(this, container);\n\t\t} else {\n\t\t\tif(persistent()) {\n\t\t\t\tcontainer.deactivate(putHandlersWaitingForFetchable, 1);\n\t\t\t\tcontainer.deactivate(metadataPuttersUnfetchable, 1);\n\t\t\t}\n\t\t}\n\t}","commit_id":"66a7fd507e321ec72b1b6e64a5f9adf23532e79d","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Start inserts for unresolved (too big) Metadata's. Eventually these will call back with an onEncode(),\n\t * meaning they have the CHK, and we can progress to resolveAndStartBase(). \n\t * @param e\n\t * @param container\n\t * @param context\n\t * @return\n\t * @throws InsertException\n\t * @throws IOException\n\t */\n\tprivate void resolve(MetadataUnresolvedException e, ObjectContainer container, ClientContext context) throws InsertException, IOException {\n\t\tMetadata[] metas = e.mustResolve;\n\t\tif(persistent())\n\t\t\tcontainer.activate(metadataPuttersByMetadata, 2);\n\t\tfor(int i=0;i<metas.length;i++) {\n\t\t\tMetadata m = metas[i];\n\t\t\tsynchronized(this) {\n\t\t\t\tif(metadataPuttersByMetadata.containsKey(m)) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Already started insert for \"+m+\" in resolve() for \"+metas.length+\" Metadata's\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(m.isResolved()) {\n\t\t\t\tLogger.error(this, \"Already resolved: \"+m+\" in resolve() - race condition???\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tBucket b = m.toBucket(context.getBucketFactory(persistent()));\n\t\t\t\t\n\t\t\t\tInsertBlock ib = new InsertBlock(b, null, FreenetURI.EMPTY_CHK_URI);\n\t\t\t\tSingleFileInserter metadataInserter = \n\t\t\t\t\tnew SingleFileInserter(this, this, ib, true, ctx, false, getCHKOnly, false, m, null, true, null, earlyEncode);\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Inserting subsidiary metadata: \"+metadataInserter+\" for \"+m);\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tthis.metadataPuttersByMetadata.put(m, metadataInserter);\n\t\t\t\t}\n\t\t\t\tmetadataInserter.start(null, container, context);\n\t\t\t\tif(persistent())\n\t\t\t\t\tcontainer.deactivate(metadataInserter, 1);\n\t\t\t} catch (MetadataUnresolvedException e1) {\n\t\t\t\tresolve(e1, container, context);\n\t\t\t}\n\t\t}\n\t\tif(persistent()) {\n\t\t\tcontainer.store(metadataPuttersByMetadata);\n\t\t}\n\t}","id":27721,"modified_method":"/**\n\t * Start inserts for unresolved (too big) Metadata's. Eventually these will call back with an onEncode(),\n\t * meaning they have the CHK, and we can progress to resolveAndStartBase(). \n\t * @param e\n\t * @param container\n\t * @param context\n\t * @return\n\t * @throws InsertException\n\t * @throws IOException\n\t */\n\tprivate void resolve(MetadataUnresolvedException e, ObjectContainer container, ClientContext context) throws InsertException, IOException {\n\t\tMetadata[] metas = e.mustResolve;\n\t\tif(persistent())\n\t\t\tcontainer.activate(metadataPuttersByMetadata, 2);\n\t\tfor(int i=0;i<metas.length;i++) {\n\t\t\tMetadata m = metas[i];\n\t\t\tsynchronized(this) {\n\t\t\t\tif(metadataPuttersByMetadata.containsKey(m)) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Already started insert for \"+m+\" in resolve() for \"+metas.length+\" Metadata's\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(m.isResolved()) {\n\t\t\t\tLogger.error(this, \"Already resolved: \"+m+\" in resolve() - race condition???\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tBucket b = m.toBucket(context.getBucketFactory(persistent()));\n\t\t\t\t\n\t\t\t\tInsertBlock ib = new InsertBlock(b, null, FreenetURI.EMPTY_CHK_URI);\n\t\t\t\tSingleFileInserter metadataInserter = \n\t\t\t\t\tnew SingleFileInserter(this, this, ib, true, ctx, false, getCHKOnly, false, m, null, true, null, earlyEncode);\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Inserting subsidiary metadata: \"+metadataInserter+\" for \"+m);\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tthis.metadataPuttersByMetadata.put(m, metadataInserter);\n\t\t\t\t}\n\t\t\t\tmetadataInserter.start(null, container, context);\n\t\t\t\tif(persistent())\n\t\t\t\t\tcontainer.deactivate(metadataInserter, 1);\n\t\t\t} catch (MetadataUnresolvedException e1) {\n\t\t\t\tresolve(e1, container, context);\n\t\t\t}\n\t\t}\n\t\tif(persistent()) {\n\t\t\tcontainer.store(metadataPuttersByMetadata);\n\t\t\tcontainer.deactivate(metadataPuttersByMetadata, 1);\n\t\t}\n\t}","commit_id":"66a7fd507e321ec72b1b6e64a5f9adf23532e79d","url":"https://github.com/freenet/fred"},{"original_method":"public void onBlockSetFinished(ClientPutState state, ObjectContainer container, ClientContext context) {\n\t\tsynchronized(this) {\n\t\t\tthis.metadataBlockSetFinalized = true;\n\t\t\tif(persistent())\n\t\t\t\tcontainer.activate(waitingForBlockSets, 2);\n\t\t\tif(!waitingForBlockSets.isEmpty()) {\n\t\t\t\tif(persistent())\n\t\t\t\t\tcontainer.store(this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.blockSetFinalized(container, context);\n\t\tif(persistent())\n\t\t\tcontainer.store(this);\n\t}","id":27722,"modified_method":"public void onBlockSetFinished(ClientPutState state, ObjectContainer container, ClientContext context) {\n\t\tsynchronized(this) {\n\t\t\tthis.metadataBlockSetFinalized = true;\n\t\t\tif(persistent())\n\t\t\t\tcontainer.activate(waitingForBlockSets, 2);\n\t\t\tif(!waitingForBlockSets.isEmpty()) {\n\t\t\t\tif(persistent()) {\n\t\t\t\t\tcontainer.store(this);\n\t\t\t\t\tcontainer.deactivate(waitingForBlockSets, 1);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.blockSetFinalized(container, context);\n\t\tif(persistent()) {\n\t\t\tcontainer.store(this);\n\t\t\tcontainer.deactivate(waitingForBlockSets, 1);\n\t\t}\n\t}","commit_id":"66a7fd507e321ec72b1b6e64a5f9adf23532e79d","url":"https://github.com/freenet/fred"},{"original_method":"public void onSuccess(ClientPutState state, ObjectContainer container, ClientContext context) {\n\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tif(persistent()) {\n\t\t\tcontainer.activate(metadataPuttersByMetadata, 2);\n\t\t}\n\t\tsynchronized(this) {\n\t\t\tmetadataPuttersByMetadata.remove(state.getToken());\n\t\t\tif(!metadataPuttersByMetadata.isEmpty()) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Still running metadata putters: \"+metadataPuttersByMetadata.size());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tLogger.minor(this, \"Inserted manifest successfully on \"+this);\n\t\t\tinsertedManifest = true;\n\t\t\tif(finished) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Already finished\");\n\t\t\t\tif(persistent())\n\t\t\t\t\tcontainer.store(this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!insertedAllFiles) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not inserted all files\");\n\t\t\t\tif(persistent())\n\t\t\t\t\tcontainer.store(this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfinished = true;\n\t\t}\n\t\tif(persistent()) {\n\t\t\tcontainer.store(metadataPuttersByMetadata);\n\t\t\tcontainer.store(this);\n\t\t}\n\t\tcomplete(container);\n\t}","id":27723,"modified_method":"public void onSuccess(ClientPutState state, ObjectContainer container, ClientContext context) {\n\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tif(persistent()) {\n\t\t\tcontainer.activate(metadataPuttersByMetadata, 2);\n\t\t}\n\t\tsynchronized(this) {\n\t\t\tmetadataPuttersByMetadata.remove(state.getToken());\n\t\t\tif(!metadataPuttersByMetadata.isEmpty()) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Still running metadata putters: \"+metadataPuttersByMetadata.size());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tLogger.minor(this, \"Inserted manifest successfully on \"+this);\n\t\t\tinsertedManifest = true;\n\t\t\tif(finished) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Already finished\");\n\t\t\t\tif(persistent())\n\t\t\t\t\tcontainer.store(this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!insertedAllFiles) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not inserted all files\");\n\t\t\t\tif(persistent())\n\t\t\t\t\tcontainer.store(this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfinished = true;\n\t\t}\n\t\tif(persistent()) {\n\t\t\tcontainer.store(metadataPuttersByMetadata);\n\t\t\tcontainer.store(this);\n\t\t\tcontainer.deactivate(metadataPuttersByMetadata, 1);\n\t\t}\n\t\tcomplete(container);\n\t}","commit_id":"66a7fd507e321ec72b1b6e64a5f9adf23532e79d","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Generate the global metadata, and then call resolveAndStartBase.\n\t * @param container\n\t * @param context\n\t */\n\tprivate void innerGotAllMetadata(ObjectContainer container, ClientContext context) {\n\t\tif(persistent()) {\n\t\t\tcontainer.activate(putHandlersByName, 2);\n\t\t}\n\t\tif(logMINOR) Logger.minor(this, \"Got all metadata\");\n\t\tHashMap<String, Object> namesToByteArrays = new HashMap<String, Object>();\n\t\tnamesToByteArrays(putHandlersByName, namesToByteArrays, container);\n\t\tif(defaultName != null) {\n\t\t\tMetadata meta = (Metadata) namesToByteArrays.get(defaultName);\n\t\t\tif(meta == null) {\n\t\t\t\tfail(new InsertException(InsertException.INVALID_URI, \"Default name \"+defaultName+\" does not exist\", null), container);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnamesToByteArrays.put(\"\", meta);\n\t\t} else {\n\t\t\tfor(int j=0;j<defaultDefaultNames.length;j++) {\n\t\t\t\tString name = defaultDefaultNames[j];\n\t\t\t\tMetadata meta = (Metadata) namesToByteArrays.get(name);\n\t\t\t\tif(meta != null) {\n\t\t\t\t\tnamesToByteArrays.put(\"\", meta);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbaseMetadata =\n\t\t\tMetadata.mkRedirectionManifestWithMetadata(namesToByteArrays);\n\t\tif(persistent()) {\n\t\t\tcontainer.store(baseMetadata);\n\t\t\tcontainer.store(this);\n\t\t}\n\t\tresolveAndStartBase(container, context);\n\t\t\n\t}","id":27724,"modified_method":"/**\n\t * Generate the global metadata, and then call resolveAndStartBase.\n\t * @param container\n\t * @param context\n\t */\n\tprivate void innerGotAllMetadata(ObjectContainer container, ClientContext context) {\n\t\tif(persistent()) {\n\t\t\tcontainer.activate(putHandlersByName, 2);\n\t\t}\n\t\tif(logMINOR) Logger.minor(this, \"Got all metadata\");\n\t\tHashMap<String, Object> namesToByteArrays = new HashMap<String, Object>();\n\t\tnamesToByteArrays(putHandlersByName, namesToByteArrays, container);\n\t\tif(defaultName != null) {\n\t\t\tMetadata meta = (Metadata) namesToByteArrays.get(defaultName);\n\t\t\tif(meta == null) {\n\t\t\t\tfail(new InsertException(InsertException.INVALID_URI, \"Default name \"+defaultName+\" does not exist\", null), container);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnamesToByteArrays.put(\"\", meta);\n\t\t} else {\n\t\t\tfor(int j=0;j<defaultDefaultNames.length;j++) {\n\t\t\t\tString name = defaultDefaultNames[j];\n\t\t\t\tMetadata meta = (Metadata) namesToByteArrays.get(name);\n\t\t\t\tif(meta != null) {\n\t\t\t\t\tnamesToByteArrays.put(\"\", meta);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbaseMetadata =\n\t\t\tMetadata.mkRedirectionManifestWithMetadata(namesToByteArrays);\n\t\tif(persistent()) {\n\t\t\tcontainer.store(baseMetadata);\n\t\t\tcontainer.store(this);\n\t\t}\n\t\tresolveAndStartBase(container, context);\n\t\tif(persistent()) {\n\t\t\tcontainer.deactivate(putHandlersByName, 1);\n\t\t}\n\t\t\n\t}","commit_id":"66a7fd507e321ec72b1b6e64a5f9adf23532e79d","url":"https://github.com/freenet/fred"},{"original_method":"public void onFetchable(ClientPutState state, ObjectContainer container) {\n\t\tMetadata m = (Metadata) state.getToken();\n\t\tif(persistent()) {\n\t\t\tcontainer.activate(m, 100);\n\t\t\tcontainer.activate(metadataPuttersUnfetchable, 2);\n\t\t\tcontainer.activate(putHandlersWaitingForFetchable, 2);\n\t\t\tcontainer.activate(cb, 1);\n\t\t}\n\t\tsynchronized(this) {\n\t\t\tmetadataPuttersUnfetchable.remove(m);\n\t\t\tif(!metadataPuttersUnfetchable.isEmpty()) return;\n\t\t\tif(fetchable) return;\n\t\t\tif(!putHandlersWaitingForFetchable.isEmpty()) return;\n\t\t\tfetchable = true;\n\t\t}\n\t\tif(persistent()) {\n\t\t\tcontainer.store(metadataPuttersUnfetchable);\n\t\t\tcontainer.store(this);\n\t\t}\n\t\tcb.onFetchable(this, container);\n\t}","id":27725,"modified_method":"public void onFetchable(ClientPutState state, ObjectContainer container) {\n\t\tMetadata m = (Metadata) state.getToken();\n\t\tif(persistent()) {\n\t\t\tcontainer.activate(m, 100);\n\t\t\tcontainer.activate(metadataPuttersUnfetchable, 2);\n\t\t\tcontainer.activate(putHandlersWaitingForFetchable, 2);\n\t\t}\n\t\tif(checkFetchable(m)) {\n\t\t\tif(persistent()) {\n\t\t\t\tcontainer.store(metadataPuttersUnfetchable);\n\t\t\t\tcontainer.store(this);\n\t\t\t\tcontainer.activate(cb, 1);\n\t\t\t}\n\t\t\tcb.onFetchable(this, container);\n\t\t}\n\t\tif(persistent()) {\n\t\t\tcontainer.deactivate(metadataPuttersUnfetchable, 1);\n\t\t\tcontainer.deactivate(putHandlersWaitingForFetchable, 1);\n\t\t}\n\t}","commit_id":"66a7fd507e321ec72b1b6e64a5f9adf23532e79d","url":"https://github.com/freenet/fred"},{"original_method":"public void validatePointOfView(){\n\t\tif(lastKnownLocation == null){\n\t\t\tif(pointOfView.isVisible()){\n\t\t\t\tpointOfView.setLocationX(-1);\n\t\t\t\tpointOfView.setLocationY(-1);\n\t\t\t\tpointOfView.setAreaRadius(0);\n\t\t\t\tpointOfView.invalidate();\n\t\t\t}\n\t\t} else {\n\t\t\tint newX = MapUtils.getPixelShiftX(mapView.getZoom(), \n\t\t\t\t\tlastKnownLocation.getLongitude(), mapView.getLongitude(), mapView.getTileSize()) + \n\t\t\t\t\tmapView.getWidth()/2;\n\t\t\tint newY = MapUtils.getPixelShiftY(mapView.getZoom(), \n\t\t\t\t\tlastKnownLocation.getLatitude(), mapView.getLatitude() , mapView.getTileSize()) + \n\t\t\t\t\tmapView.getHeight()/2;\n\t\t\t// TODO clear radius & specify bearing!\n\t\t\tdouble tileNumberX = MapUtils.getTileNumberX(mapView.getZoom(), mapView.getLongitude());\n\t\t\tdouble tileNumberLeft = tileNumberX - ((double)mapView.getWidth()) / (2d * mapView.getTileSize());\n\t\t\tdouble dist = MapUtils.getDistance(mapView.getLatitude(), \n\t\t\t\t\tMapUtils.getLongitudeFromTile(mapView.getZoom(),tileNumberLeft), mapView.getLatitude(), \n\t\t\t\t\tMapUtils.getLongitudeFromTile(mapView.getZoom(),tileNumberX));\n\t\t\t\n\t\t\tint radius = (int) ((mapView.getWidth()/ (2d*dist))* lastKnownLocation.getAccuracy());\n\t\t\t\n\t\t\t\n\t\t\tpointOfView.setLocationX(newX);\n\t\t\tpointOfView.setLocationY(newY);\n\t\t\tpointOfView.setAreaRadius(radius);\n\t\t\tpointOfView.invalidate();\n\t\t}\n\t}","id":27726,"modified_method":"public void validatePointOfView(){\n\t\tif(lastKnownLocation == null){\n\t\t\tif(pointOfView.isVisible()){\n\t\t\t\tpointOfView.setLocationX(-1);\n\t\t\t\tpointOfView.setLocationY(-1);\n\t\t\t\tpointOfView.setAreaRadius(0);\n\t\t\t\tpointOfView.invalidate();\n\t\t\t}\n\t\t} else {\n\t\t\tint newX = MapUtils.getPixelShiftX(mapView.getZoom(), \n\t\t\t\t\tlastKnownLocation.getLongitude(), mapView.getLongitude(), mapView.getTileSize()) + \n\t\t\t\t\tmapView.getWidth()/2;\n\t\t\tint newY = MapUtils.getPixelShiftY(mapView.getZoom(), \n\t\t\t\t\tlastKnownLocation.getLatitude(), mapView.getLatitude() , mapView.getTileSize()) + \n\t\t\t\t\tmapView.getHeight()/2;\n\t\t\t// TODO \tspecify bearing!\n\t\t\tint radius = MapUtils.getLengthXFromMeters(mapView.getZoom(), mapView.getLatitude(), mapView.getLongitude(), \n\t\t\t\t\tlastKnownLocation.getAccuracy(), mapView.getTileSize(), mapView.getWidth());\n\t\t\t\n\t\t\tpointOfView.setLocationX(newX);\n\t\t\tpointOfView.setLocationY(newY);\n\t\t\tpointOfView.setAreaRadius(radius);\n\t\t\tpointOfView.invalidate();\n\t\t}\n\t}","commit_id":"4cec45384ef4603e5bd1b6456ce43e4d14fbb52f","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void updateLocation(boolean centerChanged, boolean locationChanged, boolean compassChanged) {\n\t\tif(compassChanged && !dashboard.isMapLinkedToLocation()) {\n\t\t\tboolean update = false;\n\t\t\tfor (DashLocationView lv : distances) {\n\t\t\t\tif(lv.useOnlyMyLocation) {\n\t\t\t\t\tupdate = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!update) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tupdateAllWidgets();\n\t\t\n\t}","id":27727,"modified_method":"public void updateLocation(boolean centerChanged, boolean locationChanged, boolean compassChanged) {\n\t\tif(compassChanged && !dashboard.isMapLinkedToLocation()) {\n\t\t\treturn;\n\t\t}\n\t\tupdateAllWidgets();\n\t}","commit_id":"26470555fe5f9b93e5a987d39e0db9f4b587a732","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onOpenDash() {\n\t\t//Hardy: getRotation() is the correction if device's screen orientation != the default display's standard orientation\n\t\tscreenOrientation = 0;\n\t\tscreenOrientation = ((WindowManager) getActivity().getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getRotation();\n\t\tswitch (screenOrientation)\n\t\t{\n\t\t\tcase ORIENTATION_0:   // Device default (normally portrait)\n\t\t\t\tscreenOrientation = 0;\n\t\t\t\tbreak;\n\t\t\tcase ORIENTATION_90:  // Landscape right\n\t\t\t\tscreenOrientation = 90;\n\t\t\t\tbreak;\n\t\t\tcase ORIENTATION_270: // Landscape left\n\t\t\t\tscreenOrientation = 270;\n\t\t\t\tbreak;\n\t\t\tcase ORIENTATION_180: // Upside down\n\t\t\t\tscreenOrientation = 180;\n\t\t\t\tbreak;\n\t\t}\n\t\t//Looks like screenOrientation correction must not be applied for devices without compass?\n\t\tSensor compass  = ((SensorManager) getActivity().getSystemService(Context.SENSOR_SERVICE)).getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);\n\t\tif (compass == null) {\n\t\t\tscreenOrientation = 0;\n\t\t}\t\t\n\t}","id":27728,"modified_method":"@Override\n\tpublic void onOpenDash() {\n\t\t//Hardy: getRotation() is the correction if device's screen orientation != the default display's standard orientation\n\t\tscreenOrientation = getScreenOrientation(getActivity());\t\t\n\t}","commit_id":"26470555fe5f9b93e5a987d39e0db9f4b587a732","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void updateAllWidgets() {\n\t\tDashboardOnMap d = dashboard;\n\t\tif(d == null) {\n\t\t\treturn;\n\t\t}\n\t\tfloat head = d.getHeading();\n\t\tfloat mapRotation = d.getMapRotation();\n\t\tLatLon mw = d.getMapViewLocation();\n\t\tLocation l = d.getMyLocation();\n\t\tboolean mapLinked = d.isMapLinkedToLocation() && l != null;\n\t\tLatLon myLoc = l == null ? null : new LatLon(l.getLatitude(), l.getLongitude());\n\t\tfor (DashLocationView lv : distances) {\n\t\t\tboolean useCenter = !mapLinked && !lv.useOnlyMyLocation;\n\t\t\tLatLon loc = (useCenter ? mw : myLoc);\n\t\t\tfloat h = useCenter ? -mapRotation : head;\n\t\t\tfloat[] mes = new float[2];\n\t\t\tif (loc != null) {\n\t\t\t\tLocation.distanceBetween(lv.loc.getLatitude(), lv.loc.getLongitude(), loc.getLatitude(),\n\t\t\t\t\t\tloc.getLongitude(), mes);\n\t\t\t}\n\t\t\tif (lv.arrow != null) {\n\t\t\t\tif (!(lv.arrow.getDrawable() instanceof DirectionDrawable)) {\n\t\t\t\t\tDirectionDrawable dd = new DirectionDrawable(getActivity(), 10, 10);\n\t\t\t\t\tlv.arrow.setImageDrawable(dd);\n\t\t\t\t}\n\t\t\t\tDirectionDrawable dd = (DirectionDrawable) lv.arrow.getDrawable();\n\t\t\t\tdd.setImage(R.drawable.ic_destination_arrow_white, useCenter ? R.color.color_distance\n\t\t\t\t\t\t: R.color.color_myloc_distance);\n\t\t\t\tif (loc == null) {\n\t\t\t\t\tdd.setAngle(0);\n\t\t\t\t} else {\n\t\t\t\t\tdd.setAngle(mes[1] - h + 180 + screenOrientation);\n\t\t\t\t}\n\t\t\t\tlv.arrow.invalidate();\n\t\t\t}\n\t\t\tif (loc != null) {\n\t\t\t\tlv.txt.setTextColor(getActivity().getResources().getColor(useCenter ? R.color.color_distance\n\t\t\t\t\t\t: R.color.color_myloc_distance));\n\t\t\t\tlv.txt.setText(OsmAndFormatter.getFormattedDistance(mes[0], dashboard.getMyApplication()));\n\t\t\t} else {\n\t\t\t\tlv.txt.setText(\"\");\n\t\t\t}\n\t\t}\n\t}","id":27729,"modified_method":"public void updateAllWidgets() {\n\t\tDashboardOnMap d = dashboard;\n\t\tif(d == null) {\n\t\t\treturn;\n\t\t}\n\t\tfloat head = d.getHeading();\n\t\tfloat mapRotation = d.getMapRotation();\n\t\tLatLon mw = d.getMapViewLocation();\n\t\tLocation l = d.getMyLocation();\n\t\tboolean mapLinked = d.isMapLinkedToLocation() && l != null;\n\t\tLatLon myLoc = l == null ? null : new LatLon(l.getLatitude(), l.getLongitude());\n\t\tboolean useCenter = !mapLinked;\n\t\tLatLon loc = (useCenter ? mw : myLoc);\n\t\tfloat h = useCenter ? -mapRotation : head;\n\t\tfor (DashLocationView lv : distances) {\n\t\t\tupdateLocationView(useCenter, loc, h, lv.arrow, lv.txt, lv.loc.getLatitude(), lv.loc.getLongitude(), \n\t\t\t\t\tscreenOrientation, getMyApplication(), getActivity());\n\t\t}\n\t}","commit_id":"26470555fe5f9b93e5a987d39e0db9f4b587a732","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void locationUpdate(LatLon l) {\n\t\tlocation = l;\n\t\tif (favouritesAdapter != null) {\n\t\t\tfavouritesAdapter.updateLocation(l);\n\t\t}\n\t}","id":27730,"modified_method":"@Override\n\tpublic void locationUpdate(LatLon l) {\n\t\tif (getActivity() instanceof SearchActivity) {\n\t\t\tif (((SearchActivity) getActivity()).isSearchAroundCurrentLocation() && l != null) {\n\t\t\t\tif (!compassRegistered) {\n\t\t\t\t\t((OsmandApplication) getActivity().getApplication()).getLocationProvider().addCompassListener(this);\n\t\t\t\t\tcompassRegistered = true;\n\t\t\t\t}\n\t\t\t\tfavouritesAdapter.searchAroundLocation = true;\n\t\t\t} else {\n\t\t\t\tfavouritesAdapter.searchAroundLocation = false;\n\t\t\t}\n\t\t}\n\t\tif (favouritesAdapter != null) {\n\t\t\tfavouritesAdapter.updateLocation(l);\n\t\t}\n\t\t\n\t}","commit_id":"26470555fe5f9b93e5a987d39e0db9f4b587a732","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic View getView(int position, View convertView, ViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif (row == null) {\n\t\t\t\tLayoutInflater inflater = activity.getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.favorites_list_item, parent, false);\n\t\t\t}\n\n\t\t\tTextView name = (TextView) row.findViewById(R.id.favourite_label);\n\t\t\tTextView distanceText = (TextView) row.findViewById(R.id.distance);\n\t\t\tImageView icon = (ImageView) row.findViewById(R.id.favourite_icon);\n\t\t\tImageView direction = (ImageView) row.findViewById(R.id.direction);\n\t\t\tdirection.setImageDrawable(arrowImage);\n\t\t\tdirection.setVisibility(View.VISIBLE);\n\t\t\tfinal FavouritePoint favorite = getItem(position);\n\t\t\tif (!favorite.getCategory().isEmpty()) {\n\t\t\t\trow.findViewById(R.id.group_image).setVisibility(View.VISIBLE);\n\t\t\t} else {\n\t\t\t\trow.findViewById(R.id.group_image).setVisibility(View.GONE);\n\t\t\t}\n\t\t\t((TextView) row.findViewById(R.id.group_name)).setText(favorite.getCategory());\n\n\t\t\ticon.setImageDrawable(FavoriteImageDrawable.getOrCreate(activity, favorite.getColor()));\n\t\t\tString distance = \"\";\n\t\t\tif (location != null) {\n\t\t\t\tint dist = (int) (MapUtils.getDistance(favorite.getLatitude(), favorite.getLongitude(), location.getLatitude(), location\n\t\t\t\t\t\t.getLongitude()));\n\t\t\t\tdistance = OsmAndFormatter.getFormattedDistance(dist, app) + \"  \";\n\t\t\t}\n\t\t\tdistanceText.setText(distance);\n\t\t\tname.setText(getName(favorite));\n\t\t\tfinal CheckBox ch = (CheckBox) row.findViewById(R.id.check_item);\n\t\t\trow.findViewById(R.id.favourite_icon).setVisibility(View.VISIBLE);\n\t\t\tch.setVisibility(View.GONE);\n\t\t\treturn row;\n\t\t}","id":27731,"modified_method":"@Override\n\t\tpublic View getView(int position, View convertView, ViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif (row == null) {\n\t\t\t\tLayoutInflater inflater = activity.getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.favorites_list_item, parent, false);\n\t\t\t}\n\n\t\t\tTextView name = (TextView) row.findViewById(R.id.favourite_label);\n\t\t\tTextView distanceText = (TextView) row.findViewById(R.id.distance);\n\t\t\tImageView icon = (ImageView) row.findViewById(R.id.favourite_icon);\n\t\t\tImageView direction = (ImageView) row.findViewById(R.id.direction);\n\t\t\tdirection.setVisibility(View.VISIBLE);\n\t\t\tfinal FavouritePoint favorite = getItem(position);\n\t\t\tif (!favorite.getCategory().isEmpty()) {\n\t\t\t\trow.findViewById(R.id.group_image).setVisibility(View.VISIBLE);\n\t\t\t} else {\n\t\t\t\trow.findViewById(R.id.group_image).setVisibility(View.GONE);\n\t\t\t}\n\t\t\t((TextView) row.findViewById(R.id.group_name)).setText(favorite.getCategory());\n\n\t\t\ticon.setImageDrawable(FavoriteImageDrawable.getOrCreate(activity, favorite.getColor()));\n\t\t\tDashLocationFragment.updateLocationView(!searchAroundLocation, location, heading, direction, distanceText, \n\t\t\t\t\tfavorite.getLatitude(), favorite.getLongitude(), screenOrientation, app, activity);\n\t\t\t\n\t\t\tname.setText(getName(favorite));\n\t\t\tfinal CheckBox ch = (CheckBox) row.findViewById(R.id.check_item);\n\t\t\trow.findViewById(R.id.favourite_icon).setVisibility(View.VISIBLE);\n\t\t\tch.setVisibility(View.GONE);\n\t\t\treturn row;\n\t\t}","commit_id":"26470555fe5f9b93e5a987d39e0db9f4b587a732","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onResume() {\n\t\tsuper.onResume();\n\t\tIntent intent = getActivity().getIntent();\n\t\tif (intent != null) {\n\t\t\tselectFavoriteMode = intent.hasExtra(SELECT_FAVORITE_POINT_INTENT_KEY);\n\t\t\tif (intent.hasExtra(SearchActivity.SEARCH_LAT) && intent.hasExtra(SearchActivity.SEARCH_LON)) {\n\t\t\t\tdouble lat = intent.getDoubleExtra(SearchActivity.SEARCH_LAT, 0);\n\t\t\t\tdouble lon = intent.getDoubleExtra(SearchActivity.SEARCH_LON, 0);\n\t\t\t\tif (lat != 0 || lon != 0) {\n\t\t\t\t\tfavouritesAdapter.location = new LatLon(lat, lon);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (location == null && getActivity() instanceof SearchActivity) {\n\t\t\tlocation = ((SearchActivity) getActivity()).getSearchPoint();\n\t\t}\n\t\tif (location == null) {\n\t\t\tlocation = settings.getLastKnownMapLocation();\n\t\t}\n\n\t\tlocationUpdate(location);\n\n\t}","id":27732,"modified_method":"@Override\n\tpublic void onResume() {\n\t\tsuper.onResume();\n\t\tIntent intent = getActivity().getIntent();\n\t\tif (intent != null) {\n\t\t\tselectFavoriteMode = intent.hasExtra(SELECT_FAVORITE_POINT_INTENT_KEY);\n\t\t\tif (intent.hasExtra(SearchActivity.SEARCH_LAT) && intent.hasExtra(SearchActivity.SEARCH_LON)) {\n\t\t\t\tdouble lat = intent.getDoubleExtra(SearchActivity.SEARCH_LAT, 0);\n\t\t\t\tdouble lon = intent.getDoubleExtra(SearchActivity.SEARCH_LON, 0);\n\t\t\t\tif (lat != 0 || lon != 0) {\n\t\t\t\t\tfavouritesAdapter.location = new LatLon(lat, lon);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (favouritesAdapter.location == null && getActivity() instanceof SearchActivity) {\n\t\t\tfavouritesAdapter.location = ((SearchActivity) getActivity()).getSearchPoint();\n\t\t}\n\t\tif (favouritesAdapter.location == null) {\n\t\t\tfavouritesAdapter.location = settings.getLastKnownMapLocation();\n\t\t}\n\t\tfavouritesAdapter.screenOrientation = DashLocationFragment.getScreenOrientation(getActivity());\n\t\tlocationUpdate(favouritesAdapter.location);\n\t}","commit_id":"26470555fe5f9b93e5a987d39e0db9f4b587a732","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public FavouritesAdapter(Activity activity, List<FavouritePoint> list) {\n\t\t\tsuper(activity, R.layout.favorites_list_item, list);\n\t\t\tthis.activity = activity;\n\t\t\tthis.app = ((OsmandApplication) activity.getApplication());\n\t\t\tboolean light = app.getSettings().isLightContent();\n\t\t\tarrowImage = activity.getResources().getDrawable(R.drawable.ic_destination_arrow_white);\n\t\t\tarrowImage.mutate();\n\t\t\tif (light) {\n\t\t\t\tarrowImage.setColorFilter(activity.getResources().getColor(R.color.color_distance), PorterDuff.Mode.MULTIPLY);\n\t\t\t} else {\n\t\t\t\tarrowImage.setColorFilter(activity.getResources().getColor(R.color.color_distance), PorterDuff.Mode.MULTIPLY);\n\t\t\t}\n\t\t}","id":27733,"modified_method":"public FavouritesAdapter(Activity activity, List<FavouritePoint> list) {\n\t\t\tsuper(activity, R.layout.favorites_list_item, list);\n\t\t\tthis.activity = activity;\n\t\t\tthis.app = ((OsmandApplication) activity.getApplication());\n\t\t}","commit_id":"26470555fe5f9b93e5a987d39e0db9f4b587a732","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void updateGpxRoutingParameter(OtherLocalRoutingParameter gpxParam) {\n\t\tGPXRouteParamsBuilder rp = mapActivity.getRoutingHelper().getCurrentGPXRoute();\n\t\tboolean selected = gpxParam.isSelected(settings);\n\t\tif (rp != null) {\n\t\t\tif (gpxParam.id == R.string.gpx_option_reverse_route) {\n\t\t\t\trp.setReverse(selected);\n\t\t\t\tTargetPointsHelper tg = mapActivity.getMyApplication().getTargetPointsHelper();\n\t\t\t\tList<Location> ps = rp.getPoints();\n\t\t\t\tif (ps.size() > 0) {\n\t\t\t\t\tLocation first = ps.get(0);\n\t\t\t\t\tLocation end = ps.get(ps.size() - 1);\n\t\t\t\t\tTargetPoint pn = tg.getPointToNavigate();\n\t\t\t\t\tboolean update = false;\n\t\t\t\t\tif (pn == null || \n\t\t\t\t\t\t\tMapUtils.getDistance(pn.point, new LatLon(first.getLatitude(), first.getLongitude())) < 10) {\n\t\t\t\t\t\ttg.navigateToPoint(new LatLon(end.getLatitude(), end.getLongitude()), false, -1);\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (tg.getPointToStart() == null || \n\t\t\t\t\t\t\tMapUtils.getDistance(tg.getPointToStart().point, new LatLon(end.getLatitude(), end.getLongitude())) < 10) {\n\t\t\t\t\t\ttg.setStartPoint(new LatLon(first.getLatitude(), first.getLongitude()), false, null);\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(update) {\n\t\t\t\t\t\ttg.updateRouteAndReferesh(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (gpxParam.id == R.string.gpx_option_calculate_first_last_segment) {\n\t\t\t\trp.setCalculateOsmAndRouteParts(selected);\n\t\t\t\tsettings.GPX_ROUTE_CALC_OSMAND_PARTS.set(selected);\n\t\t\t} else if (gpxParam.id == R.string.gpx_option_from_start_point) {\n\t\t\t\trp.setPassWholeRoute(selected);\n\t\t\t} else if (gpxParam.id == R.string.use_points_as_intermediates) {\n\t\t\t\tsettings.GPX_CALCULATE_RTEPT.set(selected);\n\t\t\t\trp.setUseIntermediatePointsRTE(selected);\n\t\t\t} else if (gpxParam.id == R.string.calculate_osmand_route_gpx) {\n\t\t\t\tsettings.GPX_ROUTE_CALC.set(selected);\n\t\t\t\trp.setCalculateOsmAndRoute(selected);\n\t\t\t\tupdateParameters();\n\t\t\t}\n\t\t}\n\t\tif (gpxParam.id == R.string.calculate_osmand_route_without_internet) {\n\t\t\tsettings.GPX_ROUTE_CALC_OSMAND_PARTS.set(selected);\n\t\t}\n\t\tif (gpxParam.id == R.string.fast_route_mode) {\n\t\t\tsettings.FAST_ROUTE_MODE.set(selected);\n\t\t}\n\t\tif (gpxParam.id\t== R.string.announce_nearby_favorites){\n\t\t\tsettings.ANNOUNCE_NEARBY_FAVORITES.set(selected);\n\t\t}\n\t}","id":27734,"modified_method":"private void updateGpxRoutingParameter(OtherLocalRoutingParameter gpxParam) {\n\t\tGPXRouteParamsBuilder rp = mapActivity.getRoutingHelper().getCurrentGPXRoute();\n\t\tboolean selected = gpxParam.isSelected(settings);\n\t\tif (rp != null) {\n\t\t\tif (gpxParam.id == R.string.gpx_option_reverse_route) {\n\t\t\t\trp.setReverse(selected);\n\t\t\t\tTargetPointsHelper tg = mapActivity.getMyApplication().getTargetPointsHelper();\n\t\t\t\tList<Location> ps = rp.getPoints();\n\t\t\t\tif (ps.size() > 0) {\n\t\t\t\t\tLocation first = ps.get(0);\n\t\t\t\t\tLocation end = ps.get(ps.size() - 1);\n\t\t\t\t\tTargetPoint pn = tg.getPointToNavigate();\n\t\t\t\t\tboolean update = false;\n\t\t\t\t\tif (pn == null || \n\t\t\t\t\t\t\tMapUtils.getDistance(pn.point, new LatLon(first.getLatitude(), first.getLongitude())) < 10) {\n\t\t\t\t\t\ttg.navigateToPoint(new LatLon(end.getLatitude(), end.getLongitude()), false, -1);\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (tg.getPointToStart() == null || \n\t\t\t\t\t\t\tMapUtils.getDistance(tg.getPointToStart().point, new LatLon(end.getLatitude(), end.getLongitude())) < 10) {\n\t\t\t\t\t\ttg.setStartPoint(new LatLon(first.getLatitude(), first.getLongitude()), false, null);\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(update) {\n\t\t\t\t\t\ttg.updateRouteAndReferesh(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (gpxParam.id == R.string.gpx_option_calculate_first_last_segment) {\n\t\t\t\trp.setCalculateOsmAndRouteParts(selected);\n\t\t\t\tsettings.GPX_ROUTE_CALC_OSMAND_PARTS.set(selected);\n\t\t\t} else if (gpxParam.id == R.string.gpx_option_from_start_point) {\n\t\t\t\trp.setPassWholeRoute(selected);\n\t\t\t} else if (gpxParam.id == R.string.use_points_as_intermediates) {\n\t\t\t\tsettings.GPX_CALCULATE_RTEPT.set(selected);\n\t\t\t\trp.setUseIntermediatePointsRTE(selected);\n\t\t\t} else if (gpxParam.id == R.string.calculate_osmand_route_gpx) {\n\t\t\t\tsettings.GPX_ROUTE_CALC.set(selected);\n\t\t\t\trp.setCalculateOsmAndRoute(selected);\n\t\t\t\tupdateParameters();\n\t\t\t}\n\t\t}\n\t\tif (gpxParam.id == R.string.calculate_osmand_route_without_internet) {\n\t\t\tsettings.GPX_ROUTE_CALC_OSMAND_PARTS.set(selected);\n\t\t}\n\t\tif (gpxParam.id == R.string.fast_route_mode) {\n\t\t\tsettings.FAST_ROUTE_MODE.set(selected);\n\t\t}\n\t\tif (gpxParam.id\t== R.string.speak_favorites){\n\t\t\tsettings.ANNOUNCE_NEARBY_FAVORITES.set(selected);\n\t\t}\n\t}","commit_id":"26470555fe5f9b93e5a987d39e0db9f4b587a732","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void setTopSpinner() {\n\t\tspinnerAdapter = new ArrayAdapter<String>(getSupportActionBar().getThemedContext(), android.R.layout.simple_spinner_item,\n\t\t\t\tnew ArrayList<String>(Arrays.asList(new String[]{\n\t\t\t\t\t\tgetString(R.string.search_position_undefined),\n\t\t\t\t\t\tgetString(R.string.search_position_current_location),\n\t\t\t\t\t\tgetString(R.string.search_position_map_view),\n\t\t\t\t\t\tgetString(R.string.search_position_favorites),\n\t\t\t\t\t\tgetString(R.string.search_position_address)\n\t\t\t\t\t}))\n\t\t\t\t);\n\t\tspinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\n        getSupportActionBar().setListNavigationCallbacks(spinnerAdapter, new OnNavigationListener() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic boolean onNavigationItemSelected(int position, long itemId) {\n\t\t\t\tif (position != 0) {\n\t\t\t\t\tif (position == POSITION_CURRENT_LOCATION) {\n\t\t\t\t\t\tnet.osmand.Location loc = getLocationProvider().getLastKnownLocation();\n\t\t\t\t\t\tif(loc != null && System.currentTimeMillis() - loc.getTime() < 10000) {\n\t\t\t\t\t\t\tupdateLocation(loc);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstartSearchCurrentLocation();\n\t\t\t\t\t\t\tsearchAroundCurrentLocation = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsearchAroundCurrentLocation = false;\n\t\t\t\t\t\tendSearchCurrentLocation();\n\t\t\t\t\t\tif (position == POSITION_LAST_MAP_VIEW) {\n\t\t\t\t\t\t\tupdateSearchPoint(settings.getLastKnownMapLocation(), getString(R.string.select_search_position) + \" \" + getString(R.string.search_position_map_view), false);\n\t\t\t\t\t\t} else if (position == POSITION_FAVORITES) {\n\t\t\t\t\t\t\tIntent intent = new Intent(SearchActivity.this, FavoritesListActivity.class);\n\t\t\t\t\t\t\tintent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\t\tintent.putExtra(FavoritesListFragment.SELECT_FAVORITE_POINT_INTENT_KEY, (Serializable) null);\n\t\t\t\t\t\t\tstartActivityForResult(intent, REQUEST_FAVORITE_SELECT);\n\t\t\t\t\t\t\tgetSupportActionBar().setSelectedNavigationItem(0);\n\t\t\t\t\t\t} else if (position == POSITION_ADDRESS) {\n\t\t\t\t\t\t\tIntent intent = new Intent(SearchActivity.this, SearchAddressActivity.class);\n\t\t\t\t\t\t\tintent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\t\tintent.putExtra(SearchAddressFragment.SELECT_ADDRESS_POINT_INTENT_KEY, (String) null);\n\t\t\t\t\t\t\tstartActivityForResult(intent, REQUEST_ADDRESS_SELECT);\n\t\t\t\t\t\t\tgetSupportActionBar().setSelectedNavigationItem(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}","id":27735,"modified_method":"private void setTopSpinner() {\n\t\tspinnerAdapter = new ArrayAdapter<String>(getSupportActionBar().getThemedContext(), android.R.layout.simple_spinner_item,\n\t\t\t\tnew ArrayList<String>(Arrays.asList(new String[]{\n\t\t\t\t\t\tgetString(R.string.search_position_undefined),\n\t\t\t\t\t\tgetString(R.string.search_position_current_location),\n\t\t\t\t\t\tgetString(R.string.search_position_map_view),\n\t\t\t\t\t\tgetString(R.string.search_position_favorites),\n\t\t\t\t\t\tgetString(R.string.search_position_address)\n\t\t\t\t\t}))\n\t\t\t\t);\n\t\tspinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\n        getSupportActionBar().setListNavigationCallbacks(spinnerAdapter, new OnNavigationListener() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic boolean onNavigationItemSelected(int position, long itemId) {\n\t\t\t\tif (position != 0) {\n\t\t\t\t\tif (position == POSITION_CURRENT_LOCATION) {\n\t\t\t\t\t\tnet.osmand.Location loc = getLocationProvider().getLastKnownLocation();\n\t\t\t\t\t\tif(loc != null && System.currentTimeMillis() - loc.getTime() < 10000) {\n\t\t\t\t\t\t\tupdateLocation(loc);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsearchAroundCurrentLocation = true;\n\t\t\t\t\t\t\tstartSearchCurrentLocation();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsearchAroundCurrentLocation = false;\n\t\t\t\t\t\tendSearchCurrentLocation();\n\t\t\t\t\t\tif (position == POSITION_LAST_MAP_VIEW) {\n\t\t\t\t\t\t\tupdateSearchPoint(settings.getLastKnownMapLocation(), getString(R.string.select_search_position) + \" \" + getString(R.string.search_position_map_view), false);\n\t\t\t\t\t\t} else if (position == POSITION_FAVORITES) {\n\t\t\t\t\t\t\tIntent intent = new Intent(SearchActivity.this, FavoritesListActivity.class);\n\t\t\t\t\t\t\tintent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\t\tintent.putExtra(FavoritesListFragment.SELECT_FAVORITE_POINT_INTENT_KEY, (Serializable) null);\n\t\t\t\t\t\t\tstartActivityForResult(intent, REQUEST_FAVORITE_SELECT);\n\t\t\t\t\t\t\tgetSupportActionBar().setSelectedNavigationItem(0);\n\t\t\t\t\t\t} else if (position == POSITION_ADDRESS) {\n\t\t\t\t\t\t\tIntent intent = new Intent(SearchActivity.this, SearchAddressActivity.class);\n\t\t\t\t\t\t\tintent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\t\tintent.putExtra(SearchAddressFragment.SELECT_ADDRESS_POINT_INTENT_KEY, (String) null);\n\t\t\t\t\t\t\tstartActivityForResult(intent, REQUEST_ADDRESS_SELECT);\n\t\t\t\t\t\t\tgetSupportActionBar().setSelectedNavigationItem(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}","commit_id":"26470555fe5f9b93e5a987d39e0db9f4b587a732","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic View getView(final int position, View convertView, ViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif (row == null) {\n\t\t\t\tLayoutInflater inflater = getActivity().getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.search_history_list_item, parent, false);\n\t\t\t}\n\t\t\tfinal HistoryEntry historyEntry = getItem(position);\n\t\t\tudpateHistoryItem(historyEntry, row, location, getActivity(), getMyApplication());\n\t\t\tImageButton options = (ImageButton) row.findViewById(R.id.options);\n\t\t\toptions.setVisibility(View.VISIBLE);\n\t\t\toptions.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\tselectModel(historyEntry, v);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn row;\n\t\t}","id":27736,"modified_method":"@Override\n\t\tpublic View getView(final int position, View convertView, ViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif (row == null) {\n\t\t\t\tLayoutInflater inflater = getActivity().getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.search_history_list_item, parent, false);\n\t\t\t}\n\t\t\tfinal HistoryEntry historyEntry = getItem(position);\n\t\t\tudpateHistoryItem(historyEntry, row, location, getActivity(), getMyApplication());\n\t\t\tTextView distanceText = (TextView) row.findViewById(R.id.distance);\n\t\t\tImageView direction = (ImageView) row.findViewById(R.id.direction);\n\t\t\tDashLocationFragment.updateLocationView(!searchAroundLocation, location, heading, direction, distanceText, \n\t\t\t\t\thistoryEntry.getLat(), historyEntry.getLon(), screenOrientation, getMyApplication(), getActivity()); \n\t\t\tImageButton options = (ImageButton) row.findViewById(R.id.options);\n\t\t\toptions.setVisibility(View.VISIBLE);\n\t\t\toptions.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\tselectModel(historyEntry, v);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn row;\n\t\t}","commit_id":"26470555fe5f9b93e5a987d39e0db9f4b587a732","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onResume() {\n\t\tsuper.onResume();\n\n\t\t//Hardy: onResume() code is needed so that search origin is properly reflected in tab contents when origin has been changed on one tab, then tab is changed to another one.\n\t\tlocation = null;\n\t\tFragmentActivity activity = getActivity();\n\t\tIntent intent = activity.getIntent();\n\t\tif (intent != null) {\n\t\t\tdouble lat = intent.getDoubleExtra(SEARCH_LAT, 0);\n\t\t\tdouble lon = intent.getDoubleExtra(SEARCH_LON, 0);\n\t\t\tif (lat != 0 || lon != 0) {\n\t\t\t\thistoryAdapter.location = new LatLon(lat, lon);\n\t\t\t}\n\t\t}\n\t\tif (location == null && activity instanceof SearchActivity) {\n\t\t\tlocation = ((SearchActivity) activity).getSearchPoint();\n\t\t}\n\t\tif (location == null) {\n\t\t\tlocation = ((OsmandApplication) activity.getApplication()).getSettings().getLastKnownMapLocation();\n\t\t}\n\t\thistoryAdapter.clear();\n\t\tfor (HistoryEntry entry : helper.getHistoryEntries()) {\n\t\t\thistoryAdapter.add(entry);\n\t\t}\n\t\tlocationUpdate(location);\n\t\tclearButton.setVisibility(historyAdapter.isEmpty() ? View.GONE : View.VISIBLE);\n\n\t}","id":27737,"modified_method":"@Override\n\tpublic void onResume() {\n\t\tsuper.onResume();\n\n\t\t//Hardy: onResume() code is needed so that search origin is properly reflected in tab contents when origin has been changed on one tab, then tab is changed to another one.\n\t\tlocation = null;\n\t\tFragmentActivity activity = getActivity();\n\t\tIntent intent = activity.getIntent();\n\t\tif (intent != null) {\n\t\t\tdouble lat = intent.getDoubleExtra(SEARCH_LAT, 0);\n\t\t\tdouble lon = intent.getDoubleExtra(SEARCH_LON, 0);\n\t\t\tif (lat != 0 || lon != 0) {\n\t\t\t\thistoryAdapter.location = new LatLon(lat, lon);\n\t\t\t}\n\t\t}\n\t\tif (location == null && activity instanceof SearchActivity) {\n\t\t\tlocation = ((SearchActivity) activity).getSearchPoint();\n\t\t}\n\t\tif (location == null) {\n\t\t\tlocation = ((OsmandApplication) activity.getApplication()).getSettings().getLastKnownMapLocation();\n\t\t}\n\t\thistoryAdapter.clear();\n\t\tfor (HistoryEntry entry : helper.getHistoryEntries()) {\n\t\t\thistoryAdapter.add(entry);\n\t\t}\n\t\tlocationUpdate(location);\n\t\tclearButton.setVisibility(historyAdapter.isEmpty() ? View.GONE : View.VISIBLE);\n\t\tscreenOrientation = DashLocationFragment.getScreenOrientation(getActivity());\n\t}","commit_id":"26470555fe5f9b93e5a987d39e0db9f4b587a732","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void locationUpdate(LatLon l) {\n\t\t//location = l;\n\t\tif (historyAdapter != null) {\n\t\t\thistoryAdapter.updateLocation(l);\n\t\t}\n\t}","id":27738,"modified_method":"@Override\n\tpublic void locationUpdate(LatLon l) {\n\t\t//location = l;\n\t\tif (getActivity() instanceof SearchActivity) {\n\t\t\tif (((SearchActivity) getActivity()).isSearchAroundCurrentLocation() && l != null) {\n\t\t\t\tif (!compassRegistered) {\n\t\t\t\t\t((OsmandApplication) getActivity().getApplication()).getLocationProvider().addCompassListener(this);\n\t\t\t\t\tcompassRegistered = true;\n\t\t\t\t}\n\t\t\t\tsearchAroundLocation = true;\n\t\t\t} else {\n\t\t\t\tsearchAroundLocation = false;\n\t\t\t}\n\t\t}\n\t\tif (historyAdapter != null) {\n\t\t\thistoryAdapter.updateLocation(l);\n\t\t}\n\t}","commit_id":"26470555fe5f9b93e5a987d39e0db9f4b587a732","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public static String formatLocation(Location loc) {\n\t\tStringBuilder cmd = new StringBuilder();\n\t\tcmd.append(\"L\").append((float) loc.getLatitude()).append(\":\").append((float) loc.getLongitude());\n\t\tif (loc.hasAccuracy()) {\n\t\t\tcmd.append(\"H\").append((int) loc.getAccuracy());\n\t\t}\n\t\tif (loc.hasAltitude()) {\n\t\t\tcmd.append(\"A\").append((int) loc.getAltitude());\n\t\t}\n\t\tif (loc.hasSpeed() && (int) (loc.getSpeed() * 100) != 0) {\n\t\t\tcmd.append(\"S\").append((float) ((int) (loc.getSpeed() * 100)) / 100f);\n\t\t}\n\t\tif (loc.hasBearing()) {\n\t\t\tcmd.append(\"C\").append((int) loc.getBearing());\n\t\t}\n\t\tif ((System.currentTimeMillis() - loc.getTime()) > 30000 && loc.getTime() != 0) {\n\t\t\tcmd.append(\"T\").append(loc.getTime());\n\t\t}\n\t\tLOG.debug(\"formatLocation cmd=\" + cmd);\n\t\treturn cmd.toString();\n\t}","id":27739,"modified_method":"public static String formatLocation(Location loc) {\n\t\tStringBuffer cmd = new StringBuffer();\n\t\tcmd.append(\"L\");\n\t\tfloatingPointFormat.format(loc.getLatitude(), cmd, new FieldPosition(cmd.length()));\n\t\tcmd.append(\":\");\n\t\tfloatingPointFormat.format(loc.getLongitude(), cmd, new FieldPosition(cmd.length()));\n\t\tif (loc.hasAccuracy()) {\n\t\t\tcmd.append(\"H\");\n\t\t\tintegerFormat.format(loc.getAccuracy(), cmd, new FieldPosition(cmd.length()));\n\t\t}\n\t\tif (loc.hasAltitude()) {\n\t\t\tcmd.append(\"A\");\n\t\t\tintegerFormat.format(loc.getAltitude(), cmd, new FieldPosition(cmd.length()));\n\t\t}\n\t\tif (loc.hasSpeed() && (int) (loc.getSpeed() * 100) != 0) {\n\t\t\tcmd.append(\"S\");\n\t\t\ttwoDigitsFormat.format(loc.getSpeed(), cmd, new FieldPosition(cmd.length()));\n\t\t}\n\t\tif (loc.hasBearing()) {\n\t\t\tcmd.append(\"C\");\n\t\t\tintegerFormat.format(loc.getBearing(), cmd, new FieldPosition(cmd.length()));\n\t\t}\n\t\tif ((System.currentTimeMillis() - loc.getTime()) > 30000 && loc.getTime() != 0) {\n\t\t\tcmd.append(\"T\");\n\t\t\tintegerFormat.format(loc.getTime(), cmd, new FieldPosition(cmd.length()));\n\t\t}\n\t\tLOG.debug(\"formatLocation cmd=\" + cmd);\n\t\treturn cmd.toString();\n\t}","commit_id":"040a12b6d48075abdc4cbd6d6468210425b7ece5","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private RenderingRulesStorage loadRenderer(String name, final Set<String> loadedRenderers) throws IOException, SAXException {\n\t\tInputStream is = null;\n\t\tif(externalRenderers.containsKey(name)){\n\t\t\tis = new FileInputStream(externalRenderers.get(name));\n\t\t} else if(internalRenderers.containsKey(name)){\n\t\t\tis = RenderingRulesStorage.class.getResourceAsStream(internalRenderers.get(name));\n\t\t} else {\n\t\t\tthrow new IllegalArgumentException(\"Not found \" + name); //$NON-NLS-1$\n\t\t}\n\t\tRenderingRulesStorage main = new RenderingRulesStorage(name);\n\t\tloadedRenderers.add(name);\n\t\tmain.parseRulesFromXmlInputStream(is, new RenderingRulesStorageResolver() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic RenderingRulesStorage resolve(String name, RenderingRulesStorageResolver ref) throws SAXException {\n\t\t\t\tif(renderers.containsKey(name)){\n\t\t\t\t\treturn renderers.get(name);\n\t\t\t\t}\n\t\t\t\tif (loadedRenderers.contains(name)) {\n\t\t\t\t\tlog.warn(\"Circular dependencies found \" + name); //$NON-NLS-1$\n\t\t\t\t}\n\t\t\t\tRenderingRulesStorage dep = getRenderer(name, loadedRenderers);\n\t\t\t\tif (dep == null) {\n\t\t\t\t\tlog.warn(\"Dependent renderer not found : \"  + name); //$NON-NLS-1$\n\t\t\t\t}\n\t\t\t\treturn dep;\n\t\t\t}\n\t\t});\n\t\trenderers.put(name, main);\n\t\treturn main;\n\t}","id":27740,"modified_method":"private RenderingRulesStorage loadRenderer(String name, final Map<String, RenderingRulesStorage> loadedRenderers, \n\t\t\tfinal Map<String, String> renderingConstants) throws IOException, SAXException {\n\t\tInputStream is = getInputStream(name);\n\t\ttry {\n\t\t\tfinal SAXParser saxParser = SAXParserFactory.newInstance().newSAXParser();\n\t\t\tsaxParser.parse(is, new DefaultHandler() {\n\t\t\t\t@Override\n\t\t\t\tpublic void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {\n\t\t\t\t\tString tagName = saxParser.isNamespaceAware() ? localName : qName;\n\t\t\t\t\tif (\"renderingConstant\".equals(tagName)) { //$NON-NLS-1$\n\t\t\t\t\t\tif (!renderingConstants.containsKey(attributes.getValue(\"name\"))) {\n\t\t\t\t\t\t\trenderingConstants.put(attributes.getValue(\"name\"), attributes.getValue(\"value\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (ParserConfigurationException e1) {\n\t\t\tthrow new IllegalStateException(e1);\n\t\t} finally {\n\t\t\tis.close();\n\t\t}\n\n\t\t// parse content\n\t\tis = getInputStream(name);\n\t\tfinal RenderingRulesStorage main = new RenderingRulesStorage(name, renderingConstants);\n\t\t\n\t\tloadedRenderers.put(name, main);\n\t\ttry {\n\t\t\tmain.parseRulesFromXmlInputStream(is, new RenderingRulesStorageResolver() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic RenderingRulesStorage resolve(String name, RenderingRulesStorageResolver ref) throws SAXException {\n\t\t\t\t\t// reload every time to propogate rendering constants\n\t\t\t\t\tif (loadedRenderers.containsKey(name)) {\n\t\t\t\t\t\tlog.warn(\"Circular dependencies found \" + name); //$NON-NLS-1$\n\t\t\t\t\t}\n\t\t\t\t\tRenderingRulesStorage dep = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdep = loadRenderer(name, loadedRenderers, renderingConstants);\n\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\tlog.warn(\"Dependent renderer not found : \" + e.getMessage(), e); //$NON-NLS-1$\n\t\t\t\t\t}\n\t\t\t\t\tif (dep == null) {\n\t\t\t\t\t\tlog.warn(\"Dependent renderer not found : \" + name); //$NON-NLS-1$\n\t\t\t\t\t}\n\t\t\t\t\treturn dep;\n\t\t\t\t}\n\t\t\t});\n\t\t} finally {\n\t\t\tis.close();\n\t\t}\n\t\trenderers.put(name, main);\n\t\treturn main;\n\t}","commit_id":"c66c916d18c7a029d9841a1b204e3bda33db4247","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public RenderingRulesStorage getRenderer(String name){\n\t\tif(renderers.containsKey(name)){\n\t\t\treturn renderers.get(name);\n\t\t}\n\t\tif(!hasRender(name)){\n\t\t\treturn null;\n\t\t}\n\t\treturn getRenderer(name, new LinkedHashSet<String>());\n\t}","id":27741,"modified_method":"public RenderingRulesStorage getRenderer(String name){\n\t\tif(renderers.containsKey(name)){\n\t\t\treturn renderers.get(name);\n\t\t}\n\t\tif(!hasRender(name)){\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\treturn loadRenderer(name, new LinkedHashMap<String, RenderingRulesStorage>(), new LinkedHashMap<String, String>());\n\t\t} catch (IOException e) {\n\t\t\tlog.error(\"Error loading renderer\", e); //$NON-NLS-1$\n\t\t} catch (SAXException e) {\n\t\t\tlog.error(\"Error loading renderer\", e); //$NON-NLS-1$\n\t\t}\n\t\treturn null;\n\t}","commit_id":"c66c916d18c7a029d9841a1b204e3bda33db4247","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic void startElement(String uri, String localName, String name, Attributes attributes) throws SAXException {\n\t\t\tname = parser.isNamespaceAware() ? localName : name;\n\t\t\tboolean stateChanged = false;\n\t\t\tif(\"filter\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tattrsMap.clear();\n\t\t\t\tif (stack.size() > 0 && stack.peek() instanceof GroupRules) {\n\t\t\t\t\tGroupRules  parent = ((GroupRules) stack.peek());\n\t\t\t\t\tattrsMap.putAll(parent.groupAttributes);\n\t\t\t\t}\n\t\t\t\tparseAttributes(attributes, attrsMap);\n\t\t\t\tRenderingRule renderingRule = new RenderingRule(attrsMap, RenderingRulesStorage.this);\n\t\t\t\t\n\t\t\t\tif (stack.size() > 0 && stack.peek() instanceof GroupRules) {\n\t\t\t\t\tGroupRules parent = ((GroupRules) stack.peek());\n\t\t\t\t\tparent.children.add(renderingRule);\n\t\t\t\t} else if (stack.size() > 0 && stack.peek() instanceof RenderingRule) {\n\t\t\t\t\tRenderingRule parent = ((RenderingRule) stack.peek());\n\t\t\t\t\tparent.addIfElseChildren(renderingRule);\n\t\t\t\t} else {\n\t\t\t\t\tregisterGlobalRule(renderingRule, state, attrsMap);\n\t\t\t\t}\n\t\t\t\tstack.push(renderingRule);\n\t\t\t} else if(\"groupFilter\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tattrsMap.clear();\n\t\t\t\tparseAttributes(attributes, attrsMap);\n\t\t\t\tRenderingRule renderingRule = new RenderingRule(attrsMap, RenderingRulesStorage.this);\n\t\t\t\tif (stack.size() > 0 && stack.peek() instanceof GroupRules) {\n\t\t\t\t\tGroupRules parent = ((GroupRules) stack.peek());\n\t\t\t\t\tparent.addGroupFilter(renderingRule);\n\t\t\t\t} else if (stack.size() > 0 && stack.peek() instanceof RenderingRule) {\n\t\t\t\t\t((RenderingRule) stack.peek()).addIfChildren(renderingRule);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SAXException(\"Group filter without parent\");\n\t\t\t\t}\n\t\t\t\tstack.push(renderingRule);\n\t\t\t} else if(\"group\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tGroupRules groupRules = new GroupRules();\n\t\t\t\tif (stack.size() > 0 && stack.peek() instanceof GroupRules) {\n\t\t\t\t\tGroupRules parent = ((GroupRules) stack.peek());\n\t\t\t\t\tgroupRules.groupAttributes.putAll(parent.groupAttributes);\n\t\t\t\t\tparent.childrenGroups.add(groupRules);\n\t\t\t\t}\n\t\t\t\tparseAttributes(attributes, groupRules.groupAttributes);\n\t\t\t\tstack.push(groupRules);\n\t\t\t} else if(\"order\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tstate = ORDER_RULES;\n\t\t\t\tstateChanged = true;\n\t\t\t} else if(\"text\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tstate = TEXT_RULES;\n\t\t\t\tstateChanged = true;\n\t\t\t} else if(\"point\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tstate = POINT_RULES;\n\t\t\t\tstateChanged = true;\n\t\t\t} else if(\"line\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tstate = LINE_RULES;\n\t\t\t\tstateChanged = true;\n\t\t\t} else if(\"polygon\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tstate = POLYGON_RULES;\n\t\t\t\tstateChanged = true;\n\t\t\t} else if(\"renderingAttribute\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tString attr = attributes.getValue(\"name\");\n\t\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\t\tRenderingRule root = new RenderingRule(Collections.EMPTY_MAP, RenderingRulesStorage.this);\n\t\t\t\trenderingAttributes.put(attr, root);\n\t\t\t\tstack.push(root);\n\t\t\t} else if(\"renderingProperty\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tString attr = attributes.getValue(\"attr\");\n\t\t\t\tRenderingRuleProperty prop;\n\t\t\t\tString type = attributes.getValue(\"type\");\n\t\t\t\tif(\"boolean\".equalsIgnoreCase(type)){\n\t\t\t\t\tprop = RenderingRuleProperty.createInputBooleanProperty(attr);\n\t\t\t\t} else if(\"string\".equalsIgnoreCase(type)){\n\t\t\t\t\tprop = RenderingRuleProperty.createInputStringProperty(attr);\n\t\t\t\t} else {\n\t\t\t\t\tprop = RenderingRuleProperty.createInputIntProperty(attr);\n\t\t\t\t}\n\t\t\t\tprop.setDescription(attributes.getValue(\"description\"));\n\t\t\t\tprop.setName(attributes.getValue(\"name\"));\n\t\t\t\tif(attributes.getValue(\"possibleValues\") != null){\n\t\t\t\t\tprop.setPossibleValues(attributes.getValue(\"possibleValues\").split(\",\"));\n\t\t\t\t}\n\t\t\t\tPROPS.registerRule(prop);\n\t\t\t} else if(\"renderingConstant\".equals(name)){ //$NON-NLS-1$\n\t\t\t\trenderingConstants.put(attributes.getValue(\"name\"), attributes.getValue(\"value\"));\n\t\t\t} else if(\"renderingStyle\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tString depends = attributes.getValue(\"depends\");\n\t\t\t\tif(depends != null && depends.length()> 0){\n\t\t\t\t\tthis.dependsStorage = resolver.resolve(depends, resolver);\n\t\t\t\t}\n\t\t\t\tif(dependsStorage != null){\n\t\t\t\t\t// copy dictionary\n\t\t\t\t\tdictionary = new ArrayList<String>(dependsStorage.dictionary);\n\t\t\t\t\tdictionaryMap = new LinkedHashMap<String, Integer>(dependsStorage.dictionaryMap);\n\t\t\t\t\tPROPS = new RenderingRuleStorageProperties(dependsStorage.PROPS);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tinternalRenderingName = attributes.getValue(\"name\");\n\t\t\t\t\n\t\t\t} else if(\"renderer\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tthrow new SAXException(\"Rendering style is deprecated and no longer supported.\");\n\t\t\t} else {\n\t\t\t\tlog.warn(\"Unknown tag : \" + name); //$NON-NLS-1$\n\t\t\t}\n\t\t\t\n\t\t\tif(stateChanged){\n\t\t\t\ttagValueGlobalRules[state] = new TIntObjectHashMap<RenderingRule>();\n\t\t\t}\n\t\t\t\n\t\t}","id":27742,"modified_method":"@Override\n\t\tpublic void startElement(String uri, String localName, String name, Attributes attributes) throws SAXException {\n\t\t\tname = parser.isNamespaceAware() ? localName : name;\n\t\t\tboolean stateChanged = false;\n\t\t\tif(\"filter\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tattrsMap.clear();\n\t\t\t\tif (stack.size() > 0 && stack.peek() instanceof GroupRules) {\n\t\t\t\t\tGroupRules  parent = ((GroupRules) stack.peek());\n\t\t\t\t\tattrsMap.putAll(parent.groupAttributes);\n\t\t\t\t}\n\t\t\t\tparseAttributes(attributes, attrsMap);\n\t\t\t\tRenderingRule renderingRule = new RenderingRule(attrsMap, RenderingRulesStorage.this);\n\t\t\t\t\n\t\t\t\tif (stack.size() > 0 && stack.peek() instanceof GroupRules) {\n\t\t\t\t\tGroupRules parent = ((GroupRules) stack.peek());\n\t\t\t\t\tparent.children.add(renderingRule);\n\t\t\t\t} else if (stack.size() > 0 && stack.peek() instanceof RenderingRule) {\n\t\t\t\t\tRenderingRule parent = ((RenderingRule) stack.peek());\n\t\t\t\t\tparent.addIfElseChildren(renderingRule);\n\t\t\t\t} else {\n\t\t\t\t\tregisterGlobalRule(renderingRule, state, attrsMap);\n\t\t\t\t}\n\t\t\t\tstack.push(renderingRule);\n\t\t\t} else if(\"groupFilter\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tattrsMap.clear();\n\t\t\t\tparseAttributes(attributes, attrsMap);\n\t\t\t\tRenderingRule renderingRule = new RenderingRule(attrsMap, RenderingRulesStorage.this);\n\t\t\t\tif (stack.size() > 0 && stack.peek() instanceof GroupRules) {\n\t\t\t\t\tGroupRules parent = ((GroupRules) stack.peek());\n\t\t\t\t\tparent.addGroupFilter(renderingRule);\n\t\t\t\t} else if (stack.size() > 0 && stack.peek() instanceof RenderingRule) {\n\t\t\t\t\t((RenderingRule) stack.peek()).addIfChildren(renderingRule);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SAXException(\"Group filter without parent\");\n\t\t\t\t}\n\t\t\t\tstack.push(renderingRule);\n\t\t\t} else if(\"group\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tGroupRules groupRules = new GroupRules();\n\t\t\t\tif (stack.size() > 0 && stack.peek() instanceof GroupRules) {\n\t\t\t\t\tGroupRules parent = ((GroupRules) stack.peek());\n\t\t\t\t\tgroupRules.groupAttributes.putAll(parent.groupAttributes);\n\t\t\t\t\tparent.childrenGroups.add(groupRules);\n\t\t\t\t}\n\t\t\t\tparseAttributes(attributes, groupRules.groupAttributes);\n\t\t\t\tstack.push(groupRules);\n\t\t\t} else if(\"order\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tstate = ORDER_RULES;\n\t\t\t\tstateChanged = true;\n\t\t\t} else if(\"text\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tstate = TEXT_RULES;\n\t\t\t\tstateChanged = true;\n\t\t\t} else if(\"point\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tstate = POINT_RULES;\n\t\t\t\tstateChanged = true;\n\t\t\t} else if(\"line\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tstate = LINE_RULES;\n\t\t\t\tstateChanged = true;\n\t\t\t} else if(\"polygon\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tstate = POLYGON_RULES;\n\t\t\t\tstateChanged = true;\n\t\t\t} else if(\"renderingAttribute\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tString attr = attributes.getValue(\"name\");\n\t\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\t\tRenderingRule root = new RenderingRule(Collections.EMPTY_MAP, RenderingRulesStorage.this);\n\t\t\t\trenderingAttributes.put(attr, root);\n\t\t\t\tstack.push(root);\n\t\t\t} else if(\"renderingProperty\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tString attr = attributes.getValue(\"attr\");\n\t\t\t\tRenderingRuleProperty prop;\n\t\t\t\tString type = attributes.getValue(\"type\");\n\t\t\t\tif(\"boolean\".equalsIgnoreCase(type)){\n\t\t\t\t\tprop = RenderingRuleProperty.createInputBooleanProperty(attr);\n\t\t\t\t} else if(\"string\".equalsIgnoreCase(type)){\n\t\t\t\t\tprop = RenderingRuleProperty.createInputStringProperty(attr);\n\t\t\t\t} else {\n\t\t\t\t\tprop = RenderingRuleProperty.createInputIntProperty(attr);\n\t\t\t\t}\n\t\t\t\tprop.setDescription(attributes.getValue(\"description\"));\n\t\t\t\tprop.setName(attributes.getValue(\"name\"));\n\t\t\t\tif(attributes.getValue(\"possibleValues\") != null){\n\t\t\t\t\tprop.setPossibleValues(attributes.getValue(\"possibleValues\").split(\",\"));\n\t\t\t\t}\n\t\t\t\tPROPS.registerRule(prop);\n\t\t\t} else if(\"renderingConstant\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tif(!renderingConstants.containsKey(attributes.getValue(\"name\"))){\n\t\t\t\t\trenderingConstants.put(attributes.getValue(\"name\"), attributes.getValue(\"value\"));\n\t\t\t\t}\n\t\t\t} else if(\"renderingStyle\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tString depends = attributes.getValue(\"depends\");\n\t\t\t\tif(depends != null && depends.length()> 0){\n\t\t\t\t\tthis.dependsStorage = resolver.resolve(depends, resolver);\n\t\t\t\t}\n\t\t\t\tif(dependsStorage != null){\n\t\t\t\t\t// copy dictionary\n\t\t\t\t\tdictionary = new ArrayList<String>(dependsStorage.dictionary);\n\t\t\t\t\tdictionaryMap = new LinkedHashMap<String, Integer>(dependsStorage.dictionaryMap);\n\t\t\t\t\tPROPS = new RenderingRuleStorageProperties(dependsStorage.PROPS);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tinternalRenderingName = attributes.getValue(\"name\");\n\t\t\t\t\n\t\t\t} else if(\"renderer\".equals(name)){ //$NON-NLS-1$\n\t\t\t\tthrow new SAXException(\"Rendering style is deprecated and no longer supported.\");\n\t\t\t} else {\n\t\t\t\tlog.warn(\"Unknown tag : \" + name); //$NON-NLS-1$\n\t\t\t}\n\t\t\t\n\t\t\tif(stateChanged){\n\t\t\t\ttagValueGlobalRules[state] = new TIntObjectHashMap<RenderingRule>();\n\t\t\t}\n\t\t\t\n\t\t}","commit_id":"c66c916d18c7a029d9841a1b204e3bda33db4247","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void loadRuleStorage(String path, String renderingProperties) throws SAXException, IOException{\n\t\tfinal LinkedHashMap<String, String> renderingAttributes = new LinkedHashMap<String, String>();\n\t\tRenderingRulesStorage storage = new RenderingRulesStorage(\"default\", renderingAttributes);\n\t\tfinal RenderingRulesStorageResolver resolver = new RenderingRulesStorageResolver() {\n\t\t\t@Override\n\t\t\tpublic RenderingRulesStorage resolve(String name, RenderingRulesStorageResolver ref) throws SAXException {\n\t\t\t\tRenderingRulesStorage depends = new RenderingRulesStorage(name, renderingAttributes);\n\t\t\t\ttry {\n\t\t\t\t\tdepends.parseRulesFromXmlInputStream(RenderingRulesStorage.class.getResourceAsStream(name+\".render.xml\"),\n\t\t\t\t\t\t\tref);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new SAXException(e);\n\t\t\t\t}\n\t\t\t\treturn depends;\n\t\t\t}\n\t\t};\n\t\tif(path == null || path.equals(\"default.render.xml\")) {\n\t\t\tstorage.parseRulesFromXmlInputStream(RenderingRulesStorage.class.getResourceAsStream(\"default.render.xml\"), resolver);\n\t\t} else {\n\t\t\tstorage.parseRulesFromXmlInputStream(new FileInputStream(path), resolver);\n\t\t}\n\t\trenderingProps = new HashMap<String, String>();\n\t\tString[] props = renderingProperties.split(\",\");\n\t\tfor (String s : props) {\n\t\t\tint i = s.indexOf('=');\n\t\t\tif (i > 0) {\n\t\t\t\trenderingProps.put(s.substring(0, i).trim(), s.substring(i + 1).trim());\n\t\t\t}\n\t\t}\n\t\tinitRenderingRulesStorage(storage);\n\t\tthis.storage = storage;\n\t\t\n\t}","id":27743,"modified_method":"public void loadRuleStorage(String path, String renderingProperties) throws SAXException, IOException{\n\t\tfinal LinkedHashMap<String, String> renderingConstants = new LinkedHashMap<String, String>();\n\t\t\n\t\tfinal RenderingRulesStorageResolver resolver = new RenderingRulesStorageResolver() {\n\t\t\t@Override\n\t\t\tpublic RenderingRulesStorage resolve(String name, RenderingRulesStorageResolver ref) throws SAXException {\n\t\t\t\tRenderingRulesStorage depends = new RenderingRulesStorage(name, renderingConstants);\n\t\t\t\ttry {\n\t\t\t\t\tdepends.parseRulesFromXmlInputStream(RenderingRulesStorage.class.getResourceAsStream(name+\".render.xml\"),\n\t\t\t\t\t\t\tref);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new SAXException(e);\n\t\t\t\t}\n\t\t\t\treturn depends;\n\t\t\t}\n\t\t};\n\t\tif(path == null || path.equals(\"default.render.xml\")) {\n\t\t\tloadRenderingAttributes(RenderingRulesStorage.class.getResourceAsStream(\"default.render.xml\"), \n\t\t\t\t\trenderingConstants);\n\t\t\tstorage = new RenderingRulesStorage(\"default\", renderingConstants);\n\t\t\tstorage.parseRulesFromXmlInputStream(RenderingRulesStorage.class.getResourceAsStream(\"default.render.xml\"), resolver);\n\t\t} else {\n\t\t\tloadRenderingAttributes(new FileInputStream(path),renderingConstants);\n\t\t\tstorage = new RenderingRulesStorage(\"default\", renderingConstants);\n\t\t\tstorage.parseRulesFromXmlInputStream(new FileInputStream(path), resolver);\n\t\t}\n\t\trenderingProps = new HashMap<String, String>();\n\t\tString[] props = renderingProperties.split(\",\");\n\t\tfor (String s : props) {\n\t\t\tint i = s.indexOf('=');\n\t\t\tif (i > 0) {\n\t\t\t\trenderingProps.put(s.substring(0, i).trim(), s.substring(i + 1).trim());\n\t\t\t}\n\t\t}\n\t\tinitRenderingRulesStorage(storage);\n\t}","commit_id":"cbd4231e5a917e0b2f27cefc7e78e9e1e17506eb","url":"https://github.com/osmandapp/Osmand"},{"original_method":"/**\n     * This method adds the row to the Commit Log associated with this table.\n     * Once this happens the data associated with the individual column families\n     * is also written to the column family store's memtable.\n    */\n    public void apply(RowMutation mutation, boolean writeCommitLog) throws IOException\n    {\n        List<Memtable> memtablesToFlush = Collections.emptyList();\n        if (logger.isDebugEnabled())\n            logger.debug(\"applying mutation of row {}\", ByteBufferUtil.bytesToHex(mutation.key()));\n\n        // write the mutation to the commitlog and memtables\n        switchLock.readLock().lock();\n        try\n        {\n            if (writeCommitLog)\n                CommitLog.instance.add(mutation);\n        \n            DecoratedKey<?> key = StorageService.getPartitioner().decorateKey(mutation.key());\n            for (ColumnFamily cf : mutation.getColumnFamilies())\n            {\n                ColumnFamilyStore cfs = columnFamilyStores.get(cf.id());\n                if (cfs == null)\n                {\n                    logger.error(\"Attempting to mutate non-existant column family \" + cf.id());\n                    continue;\n                }\n\n                SortedSet<ByteBuffer> mutatedIndexedColumns = null;\n                for (ByteBuffer column : cfs.getIndexedColumns())\n                {\n                    if (cf.getColumnNames().contains(column) || cf.isMarkedForDelete())\n                    {\n                        if (mutatedIndexedColumns == null)\n                            mutatedIndexedColumns = new TreeSet<ByteBuffer>();\n                        mutatedIndexedColumns.add(column);\n                        if (logger.isDebugEnabled())\n                        {\n                            // can't actually use validator to print value here, because we overload value\n                            // for deletion timestamp as well (which may not be a well-formed value for the column type)\n                            ByteBuffer value = cf.getColumn(column) == null ? null : cf.getColumn(column).value(); // may be null on row-level deletion\n                            logger.debug(String.format(\"mutating indexed column %s value %s\",\n                                                       cf.getComparator().getString(column),\n                                                       value == null ? \"null\" : ByteBufferUtil.bytesToHex(value)));\n                        }\n                    }\n                }\n\n                synchronized (indexLockFor(mutation.key()))\n                {\n                    ColumnFamily oldIndexedColumns = null;\n                    if (mutatedIndexedColumns != null)\n                    {\n                        // with the raw data CF, we can just apply every update in any order and let\n                        // read-time resolution throw out obsolete versions, thus avoiding read-before-write.\n                        // but for indexed data we need to make sure that we're not creating index entries\n                        // for obsolete writes.\n                        oldIndexedColumns = readCurrentIndexedColumns(key, cfs, mutatedIndexedColumns);\n                        logger.debug(\"Pre-mutation index row is {}\", oldIndexedColumns);\n                        ignoreObsoleteMutations(cf, mutatedIndexedColumns, oldIndexedColumns);\n                    }\n\n                    Memtable fullMemtable = cfs.apply(key, cf);\n                    if (fullMemtable != null)\n                        memtablesToFlush = addFullMemtable(memtablesToFlush, fullMemtable);\n\n                    if (mutatedIndexedColumns != null)\n                    {\n                        // ignore full index memtables -- we flush those when the \"master\" one is full\n                        applyIndexUpdates(mutation.key(), cf, cfs, mutatedIndexedColumns, oldIndexedColumns);\n                    }\n                }\n            }\n        }\n        finally\n        {\n            switchLock.readLock().unlock();\n        }\n\n        // flush memtables that got filled up outside the readlock (maybeSwitchMemtable acquires writeLock).\n        // usually mTF will be empty and this will be a no-op.\n        for (Memtable memtable : memtablesToFlush)\n            memtable.cfs.maybeSwitchMemtable(memtable, writeCommitLog);\n    }","id":27744,"modified_method":"/**\n     * This method adds the row to the Commit Log associated with this table.\n     * Once this happens the data associated with the individual column families\n     * is also written to the column family store's memtable.\n    */\n    public void apply(RowMutation mutation, boolean writeCommitLog) throws IOException\n    {\n        List<Memtable> memtablesToFlush = Collections.emptyList();\n        if (logger.isDebugEnabled())\n            logger.debug(\"applying mutation of row {}\", ByteBufferUtil.bytesToHex(mutation.key()));\n\n        // write the mutation to the commitlog and memtables\n        switchLock.readLock().lock();\n        try\n        {\n            if (writeCommitLog)\n                CommitLog.instance.add(mutation);\n        \n            DecoratedKey<?> key = StorageService.getPartitioner().decorateKey(mutation.key());\n            for (ColumnFamily cf : mutation.getColumnFamilies())\n            {\n                ColumnFamilyStore cfs = columnFamilyStores.get(cf.id());\n                if (cfs == null)\n                {\n                    logger.error(\"Attempting to mutate non-existant column family \" + cf.id());\n                    continue;\n                }\n\n                SortedSet<ByteBuffer> mutatedIndexedColumns = null;\n                for (ByteBuffer column : cfs.getIndexedColumns())\n                {\n                    if (cf.getColumnNames().contains(column) || cf.isMarkedForDelete())\n                    {\n                        if (mutatedIndexedColumns == null)\n                            mutatedIndexedColumns = new TreeSet<ByteBuffer>();\n                        mutatedIndexedColumns.add(column);\n                        if (logger.isDebugEnabled())\n                        {\n                            // can't actually use validator to print value here, because we overload value\n                            // for deletion timestamp as well (which may not be a well-formed value for the column type)\n                            ByteBuffer value = cf.getColumn(column) == null ? null : cf.getColumn(column).value(); // may be null on row-level deletion\n                            logger.debug(String.format(\"mutating indexed column %s value %s\",\n                                                       cf.getComparator().getString(column),\n                                                       value == null ? \"null\" : ByteBufferUtil.bytesToHex(value)));\n                        }\n                    }\n                }\n\n                // Sharding the lock is insufficient to avoid contention when there is a \"hot\" row, e.g., for\n                // hint writes when a node is down (keyed by target IP).  So it is worth special-casing the\n                // no-index case to avoid the synchronization.\n                if (mutatedIndexedColumns == null)\n                {\n                    Memtable fullMemtable = cfs.apply(key, cf);\n                    if (fullMemtable != null)\n                        memtablesToFlush = addFullMemtable(memtablesToFlush, fullMemtable);\n                    continue;\n                }\n                // else mutatedIndexedColumns != null\n                synchronized (indexLockFor(mutation.key()))\n                {\n                    ColumnFamily oldIndexedColumns = null;\n                    // with the raw data CF, we can just apply every update in any order and let\n                    // read-time resolution throw out obsolete versions, thus avoiding read-before-write.\n                    // but for indexed data we need to make sure that we're not creating index entries\n                    // for obsolete writes.\n                    oldIndexedColumns = readCurrentIndexedColumns(key, cfs, mutatedIndexedColumns);\n                    logger.debug(\"Pre-mutation index row is {}\", oldIndexedColumns);\n                    ignoreObsoleteMutations(cf, mutatedIndexedColumns, oldIndexedColumns);\n\n                    Memtable fullMemtable = cfs.apply(key, cf);\n                    if (fullMemtable != null)\n                        memtablesToFlush = addFullMemtable(memtablesToFlush, fullMemtable);\n\n                    // ignore full index memtables -- we flush those when the \"master\" one is full\n                    applyIndexUpdates(mutation.key(), cf, cfs, mutatedIndexedColumns, oldIndexedColumns);\n                }\n            }\n        }\n        finally\n        {\n            switchLock.readLock().unlock();\n        }\n\n        // flush memtables that got filled up outside the readlock (maybeSwitchMemtable acquires writeLock).\n        // usually mTF will be empty and this will be a no-op.\n        for (Memtable memtable : memtablesToFlush)\n            memtable.cfs.maybeSwitchMemtable(memtable, writeCommitLog);\n    }","commit_id":"9bfed83ecfa7af3834a716b694a085cce48013e9","url":"https://github.com/apache/cassandra"},{"original_method":"public void build()\n        {\n            while (iter.hasNext())\n            {\n                DecoratedKey key = iter.next();\n                logger.debug(\"Indexing row {} \", key);\n                HashMap<ColumnFamilyStore,Memtable> memtablesToFlush = new HashMap<ColumnFamilyStore, Memtable>(2);\n                flusherLock.readLock().lock();\n                try\n                {\n                    synchronized (indexLockFor(key.key))\n                    {\n                        ColumnFamily cf = readCurrentIndexedColumns(key, cfs, columns);\n                        if (cf != null)\n                            applyIndexUpdates(key.key, memtablesToFlush, cf, cfs, cf.getColumnNames(), null);\n                    }\n                }\n                finally\n                {\n                    flusherLock.readLock().unlock();\n                }\n\n                for (Map.Entry<ColumnFamilyStore, Memtable> entry : memtablesToFlush.entrySet())\n                    entry.getKey().maybeSwitchMemtable(entry.getValue(), false);\n            }\n\n            try\n            {\n                iter.close();\n            }\n            catch (IOException e)\n            {\n                throw new RuntimeException(e);\n            }\n        }","id":27745,"modified_method":"public void build()\n        {\n            while (iter.hasNext())\n            {\n                DecoratedKey key = iter.next();\n                logger.debug(\"Indexing row {} \", key);\n                List<Memtable> memtablesToFlush = Collections.emptyList();\n                flusherLock.readLock().lock();\n                try\n                {\n                    synchronized (indexLockFor(key.key))\n                    {\n                        ColumnFamily cf = readCurrentIndexedColumns(key, cfs, columns);\n                        if (cf != null)\n                            memtablesToFlush = applyIndexUpdates(key.key, cf, cfs, cf.getColumnNames(), null);\n                    }\n                }\n                finally\n                {\n                    flusherLock.readLock().unlock();\n                }\n\n                // during index build, we do flush index memtables separately from master; otherwise we could OOM\n                for (Memtable memtable : memtablesToFlush)\n                    memtable.cfs.maybeSwitchMemtable(memtable, false);\n            }\n\n            try\n            {\n                iter.close();\n            }\n            catch (IOException e)\n            {\n                throw new RuntimeException(e);\n            }\n        }","commit_id":"df57aee3987e1ccee2ade1a9beb068470b0f9278","url":"https://github.com/apache/cassandra"},{"original_method":"private static void applyIndexUpdates(byte[] key,\n                                          HashMap<ColumnFamilyStore, Memtable> memtablesToFlush,\n                                          ColumnFamily cf,\n                                          ColumnFamilyStore cfs,\n                                          SortedSet<byte[]> mutatedIndexedColumns,\n                                          ColumnFamily oldIndexedColumns)\n    {\n        // add new index entries\n        for (byte[] columnName : mutatedIndexedColumns)\n        {\n            IColumn column = cf.getColumn(columnName);\n            DecoratedKey<LocalToken> valueKey = cfs.getIndexKeyFor(columnName, column.value());\n            ColumnFamily cfi = cfs.newIndexedColumnFamily(columnName);\n            cfi.addColumn(new Column(key, ArrayUtils.EMPTY_BYTE_ARRAY, column.clock()));\n            applyCF(cfs.getIndexedColumnFamilyStore(columnName), valueKey, cfi, memtablesToFlush);\n        }\n\n        // remove the old index entries\n        if (oldIndexedColumns != null)\n        {\n            int localDeletionTime = (int) (System.currentTimeMillis() / 1000);\n            for (Map.Entry<byte[], IColumn> entry : oldIndexedColumns.getColumnsMap().entrySet())\n            {\n                byte[] columnName = entry.getKey();\n                IColumn column = entry.getValue();\n                DecoratedKey<LocalToken> valueKey = cfs.getIndexKeyFor(columnName, column.value());\n                ColumnFamily cfi = cfs.newIndexedColumnFamily(columnName);\n                cfi.deleteColumn(key, localDeletionTime, column.clock());\n                applyCF(cfs.getIndexedColumnFamilyStore(columnName), valueKey, cfi, memtablesToFlush);\n            }\n        }\n    }","id":27746,"modified_method":"private static List<Memtable> applyIndexUpdates(byte[] key,\n                                                    ColumnFamily cf,\n                                                    ColumnFamilyStore cfs,\n                                                    SortedSet<byte[]> mutatedIndexedColumns,\n                                                    ColumnFamily oldIndexedColumns)\n    {\n        List<Memtable> fullMemtables = Collections.emptyList();\n\n        // add new index entries\n        for (byte[] columnName : mutatedIndexedColumns)\n        {\n            IColumn column = cf.getColumn(columnName);\n            DecoratedKey<LocalToken> valueKey = cfs.getIndexKeyFor(columnName, column.value());\n            ColumnFamily cfi = cfs.newIndexedColumnFamily(columnName);\n            cfi.addColumn(new Column(key, ArrayUtils.EMPTY_BYTE_ARRAY, column.clock()));\n            Memtable fullMemtable = cfs.getIndexedColumnFamilyStore(columnName).apply(valueKey, cfi);\n            if (fullMemtable != null)\n                fullMemtables = addFullMemtable(fullMemtables, fullMemtable);\n        }\n\n        // remove the old index entries\n        if (oldIndexedColumns != null)\n        {\n            int localDeletionTime = (int) (System.currentTimeMillis() / 1000);\n            for (Map.Entry<byte[], IColumn> entry : oldIndexedColumns.getColumnsMap().entrySet())\n            {\n                byte[] columnName = entry.getKey();\n                IColumn column = entry.getValue();\n                DecoratedKey<LocalToken> valueKey = cfs.getIndexKeyFor(columnName, column.value());\n                ColumnFamily cfi = cfs.newIndexedColumnFamily(columnName);\n                cfi.deleteColumn(key, localDeletionTime, column.clock());\n                Memtable fullMemtable = cfs.getIndexedColumnFamilyStore(columnName).apply(valueKey, cfi);\n                if (fullMemtable != null)\n                    fullMemtables = addFullMemtable(fullMemtables, fullMemtable);\n            }\n        }\n\n        return fullMemtables;\n    }","commit_id":"df57aee3987e1ccee2ade1a9beb068470b0f9278","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * This method adds the row to the Commit Log associated with this table.\n     * Once this happens the data associated with the individual column families\n     * is also written to the column family store's memtable.\n    */\n    public void apply(RowMutation mutation, Object serializedMutation, boolean writeCommitLog) throws IOException\n    {\n        HashMap<ColumnFamilyStore,Memtable> memtablesToFlush = new HashMap<ColumnFamilyStore, Memtable>(2);\n\n        // write the mutation to the commitlog and memtables\n        flusherLock.readLock().lock();\n        try\n        {\n            if (writeCommitLog)\n                CommitLog.instance().add(mutation, serializedMutation);\n        \n            DecoratedKey key = StorageService.getPartitioner().decorateKey(mutation.key());\n            for (ColumnFamily cf : mutation.getColumnFamilies())\n            {\n                ColumnFamilyStore cfs = columnFamilyStores.get(cf.id());\n                if (cfs == null)\n                {\n                    logger.error(\"Attempting to mutate non-existant column family \" + cf.id());\n                    continue;\n                }\n\n                SortedSet<byte[]> mutatedIndexedColumns = null;\n                for (byte[] column : cfs.getIndexedColumns())\n                {\n                    if (cf.getColumnNames().contains(column))\n                    {\n                        if (mutatedIndexedColumns == null)\n                            mutatedIndexedColumns = new TreeSet<byte[]>(FBUtilities.byteArrayComparator);\n                        mutatedIndexedColumns.add(column);\n                    }\n                }\n\n                if (mutatedIndexedColumns == null)\n                {\n                    // just update the actual value, no extra synchronization\n                    applyCF(cfs, key, cf, memtablesToFlush);\n                }\n                else\n                {\n                    synchronized (indexLockFor(mutation.key()))\n                    {\n                        ColumnFamily oldIndexedColumns = readCurrentIndexedColumns(key, cfs, mutatedIndexedColumns);\n                        ignoreObsoleteMutations(cf, cfs.metadata.reconciler, mutatedIndexedColumns, oldIndexedColumns);\n\n                        applyCF(cfs, key, cf, memtablesToFlush);\n                        applyIndexUpdates(mutation.key(), memtablesToFlush, cf, cfs, mutatedIndexedColumns, oldIndexedColumns);\n                    }\n                }\n\n                ColumnFamily cachedRow = cfs.getRawCachedRow(key);\n                if (cachedRow != null)\n                    cachedRow.addAll(cf);\n            }\n        }\n        finally\n        {\n            flusherLock.readLock().unlock();\n        }\n\n        // flush memtables that got filled up.  usually mTF will be empty and this will be a no-op\n        for (Map.Entry<ColumnFamilyStore, Memtable> entry : memtablesToFlush.entrySet())\n            entry.getKey().maybeSwitchMemtable(entry.getValue(), writeCommitLog);\n    }","id":27747,"modified_method":"/**\n     * This method adds the row to the Commit Log associated with this table.\n     * Once this happens the data associated with the individual column families\n     * is also written to the column family store's memtable.\n    */\n    public void apply(RowMutation mutation, Object serializedMutation, boolean writeCommitLog) throws IOException\n    {\n        List<Memtable> memtablesToFlush = Collections.emptyList();\n\n        // write the mutation to the commitlog and memtables\n        flusherLock.readLock().lock();\n        try\n        {\n            if (writeCommitLog)\n                CommitLog.instance().add(mutation, serializedMutation);\n        \n            DecoratedKey key = StorageService.getPartitioner().decorateKey(mutation.key());\n            for (ColumnFamily cf : mutation.getColumnFamilies())\n            {\n                ColumnFamilyStore cfs = columnFamilyStores.get(cf.id());\n                if (cfs == null)\n                {\n                    logger.error(\"Attempting to mutate non-existant column family \" + cf.id());\n                    continue;\n                }\n\n                SortedSet<byte[]> mutatedIndexedColumns = null;\n                for (byte[] column : cfs.getIndexedColumns())\n                {\n                    if (cf.getColumnNames().contains(column))\n                    {\n                        if (mutatedIndexedColumns == null)\n                            mutatedIndexedColumns = new TreeSet<byte[]>(FBUtilities.byteArrayComparator);\n                        mutatedIndexedColumns.add(column);\n                    }\n                }\n\n                if (mutatedIndexedColumns == null)\n                {\n                    // just update the actual value, no extra synchronization\n                    Memtable fullMemtable = cfs.apply(key, cf);\n                    if (fullMemtable != null)\n                        memtablesToFlush = addFullMemtable(memtablesToFlush, fullMemtable);\n                }\n                else\n                {\n                    synchronized (indexLockFor(mutation.key()))\n                    {\n                        ColumnFamily oldIndexedColumns = readCurrentIndexedColumns(key, cfs, mutatedIndexedColumns);\n                        ignoreObsoleteMutations(cf, cfs.metadata.reconciler, mutatedIndexedColumns, oldIndexedColumns);\n\n                        Memtable fullMemtable = cfs.apply(key, cf);\n                        if (fullMemtable != null)\n                            memtablesToFlush = addFullMemtable(memtablesToFlush, fullMemtable);\n                        // ignore full index memtables -- we flush those when the \"master\" one is full\n                        applyIndexUpdates(mutation.key(), cf, cfs, mutatedIndexedColumns, oldIndexedColumns);\n                    }\n                }\n\n                ColumnFamily cachedRow = cfs.getRawCachedRow(key);\n                if (cachedRow != null)\n                    cachedRow.addAll(cf);\n            }\n        }\n        finally\n        {\n            flusherLock.readLock().unlock();\n        }\n\n        // flush memtables that got filled up outside the readlock (maybeSwitchMemtable acquires writeLock).\n        // usually mTF will be empty and this will be a no-op.\n        for (Memtable memtable : memtablesToFlush)\n            memtable.cfs.maybeSwitchMemtable(memtable, writeCommitLog);\n    }","commit_id":"df57aee3987e1ccee2ade1a9beb068470b0f9278","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * This method adds the row to the Commit Log associated with this table.\n     * Once this happens the data associated with the individual column families\n     * is also written to the column family store's memtable.\n    */\n    public void apply(RowMutation mutation, boolean writeCommitLog) throws IOException\n    {\n        if (logger.isDebugEnabled())\n            logger.debug(\"applying mutation of row {}\", ByteBufferUtil.bytesToHex(mutation.key()));\n\n        // write the mutation to the commitlog and memtables\n        switchLock.readLock().lock();\n        try\n        {\n            if (writeCommitLog)\n                CommitLog.instance.add(mutation);\n        \n            DecoratedKey<?> key = StorageService.getPartitioner().decorateKey(mutation.key());\n            for (ColumnFamily cf : mutation.getColumnFamilies())\n            {\n                ColumnFamilyStore cfs = columnFamilyStores.get(cf.id());\n                if (cfs == null)\n                {\n                    logger.error(\"Attempting to mutate non-existant column family \" + cf.id());\n                    continue;\n                }\n\n                SortedSet<ByteBuffer> mutatedIndexedColumns = null;\n                for (ByteBuffer column : cfs.indexManager.getIndexedColumns())\n                {\n                    if (cf.getColumnNames().contains(column) || cf.isMarkedForDelete())\n                    {\n                        if (mutatedIndexedColumns == null)\n                            mutatedIndexedColumns = new TreeSet<ByteBuffer>();\n                        mutatedIndexedColumns.add(column);\n                        if (logger.isDebugEnabled())\n                        {\n                            // can't actually use validator to print value here, because we overload value\n                            // for deletion timestamp as well (which may not be a well-formed value for the column type)\n                            ByteBuffer value = cf.getColumn(column) == null ? null : cf.getColumn(column).value(); // may be null on row-level deletion\n                            logger.debug(String.format(\"mutating indexed column %s value %s\",\n                                                       cf.getComparator().getString(column),\n                                                       value == null ? \"null\" : ByteBufferUtil.bytesToHex(value)));\n                        }\n                    }\n                }\n\n                synchronized (indexLockFor(mutation.key()))\n                {\n                    ColumnFamily oldIndexedColumns = null;\n                    if (mutatedIndexedColumns != null)\n                    {\n                        // with the raw data CF, we can just apply every update in any order and let\n                        // read-time resolution throw out obsolete versions, thus avoiding read-before-write.\n                        // but for indexed data we need to make sure that we're not creating index entries\n                        // for obsolete writes.\n                        oldIndexedColumns = readCurrentIndexedColumns(key, cfs, mutatedIndexedColumns);\n                        logger.debug(\"Pre-mutation index row is {}\", oldIndexedColumns);\n                        ignoreObsoleteMutations(cf, mutatedIndexedColumns, oldIndexedColumns);\n                    }\n\n                    cfs.apply(key, cf);\n                    if (mutatedIndexedColumns != null)\n                    {\n                        // ignore full index memtables -- we flush those when the \"master\" one is full\n                        cfs.indexManager.applyIndexUpdates(mutation.key(), cf, mutatedIndexedColumns, oldIndexedColumns);\n                    }\n                }\n            }\n        }\n        finally\n        {\n            switchLock.readLock().unlock();\n        }\n\n    }","id":27748,"modified_method":"/**\n     * This method adds the row to the Commit Log associated with this table.\n     * Once this happens the data associated with the individual column families\n     * is also written to the column family store's memtable.\n    */\n    public void apply(RowMutation mutation, boolean writeCommitLog) throws IOException\n    {\n        if (logger.isDebugEnabled())\n            logger.debug(\"applying mutation of row {}\", ByteBufferUtil.bytesToHex(mutation.key()));\n\n        // write the mutation to the commitlog and memtables\n        switchLock.readLock().lock();\n        try\n        {\n            if (writeCommitLog)\n                CommitLog.instance.add(mutation);\n        \n            DecoratedKey<?> key = StorageService.getPartitioner().decorateKey(mutation.key());\n            for (ColumnFamily cf : mutation.getColumnFamilies())\n            {\n                ColumnFamilyStore cfs = columnFamilyStores.get(cf.id());\n                if (cfs == null)\n                {\n                    logger.error(\"Attempting to mutate non-existant column family \" + cf.id());\n                    continue;\n                }\n\n                SortedSet<ByteBuffer> mutatedIndexedColumns = null;\n                for (ByteBuffer column : cfs.indexManager.getIndexedColumns())\n                {\n                    if (cf.getColumnNames().contains(column) || cf.isMarkedForDelete())\n                    {\n                        if (mutatedIndexedColumns == null)\n                            mutatedIndexedColumns = new TreeSet<ByteBuffer>();\n                        mutatedIndexedColumns.add(column);\n                        if (logger.isDebugEnabled())\n                        {\n                            // can't actually use validator to print value here, because we overload value\n                            // for deletion timestamp as well (which may not be a well-formed value for the column type)\n                            ByteBuffer value = cf.getColumn(column) == null ? null : cf.getColumn(column).value(); // may be null on row-level deletion\n                            logger.debug(String.format(\"mutating indexed column %s value %s\",\n                                                       cf.getComparator().getString(column),\n                                                       value == null ? \"null\" : ByteBufferUtil.bytesToHex(value)));\n                        }\n                    }\n                }\n\n                // Sharding the lock is insufficient to avoid contention when there is a \"hot\" row, e.g., for\n                // hint writes when a node is down (keyed by target IP).  So it is worth special-casing the\n                // no-index case to avoid the synchronization.\n                if (mutatedIndexedColumns == null)\n                {\n                    cfs.apply(key, cf);\n                    continue;\n                }\n                // else mutatedIndexedColumns != null\n                synchronized (indexLockFor(mutation.key()))\n                {\n                    // with the raw data CF, we can just apply every update in any order and let\n                    // read-time resolution throw out obsolete versions, thus avoiding read-before-write.\n                    // but for indexed data we need to make sure that we're not creating index entries\n                    // for obsolete writes.\n                    ColumnFamily oldIndexedColumns = readCurrentIndexedColumns(key, cfs, mutatedIndexedColumns);\n                    logger.debug(\"Pre-mutation index row is {}\", oldIndexedColumns);\n                    ignoreObsoleteMutations(cf, mutatedIndexedColumns, oldIndexedColumns);\n\n                    cfs.apply(key, cf);\n\n                    // ignore full index memtables -- we flush those when the \"master\" one is full\n                    applyIndexUpdates(mutation.key(), cf, cfs, mutatedIndexedColumns, oldIndexedColumns);\n                }\n            }\n        }\n        finally\n        {\n            switchLock.readLock().unlock();\n        }\n\n    }","commit_id":"0a2ad5d2b684cc6a0b6a9217f25426b5869be68d","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Removes all nodes that exceed newly defined maxOccurs rules from the list of elements\n     * @param cd the content type definition\n     * @param maxOccurs maximum number of elements allowed\n     * @param typeName name of the element type\n     */\n    private void checkMaxOccurs(List<Element> elements, int maxOccurs, String typeName) {\n        if (elements.size() > maxOccurs) {\n            if (typeName.equals(CmsXmlCategoryValue.TYPE_NAME)) {\n                if (maxOccurs == 1) {\n                    Element category = elements.get(0);\n                    List<Element> categories = new ArrayList<Element>();\n                    for (Element value : elements) {\n                        @SuppressWarnings(\"unchecked\")\n                        Iterator<Element> itLink = value.elementIterator();\n                        while (itLink.hasNext()) {\n                            Element link = itLink.next();\n                            categories.add((Element)link.clone());\n                        }\n                    }\n                    category.clearContent();\n                    for (Element value : categories) {\n                        category.add(value);\n                    }\n                }\n            }\n        \n            // too many nodes of this type appear according to the current schema definition\n            for (int lo = (elements.size() - 1); lo >= maxOccurs; lo--) {\n                elements.remove(lo);\n            }\n        }\n    }","id":27749,"modified_method":"/**\n     * Removes all nodes that exceed newly defined maxOccurs rules from the list of elements.<p>\n     * \n     * @param elements the list of elements to check\n     * @param maxOccurs maximum number of elements allowed\n     * @param typeName name of the element type\n     */\n    private void checkMaxOccurs(List<Element> elements, int maxOccurs, String typeName) {\n\n        if (elements.size() > maxOccurs) {\n            if (typeName.equals(CmsXmlCategoryValue.TYPE_NAME)) {\n                if (maxOccurs == 1) {\n                    Element category = elements.get(0);\n                    List<Element> categories = new ArrayList<Element>();\n                    for (Element value : elements) {\n                        Iterator<Element> itLink = value.elementIterator();\n                        while (itLink.hasNext()) {\n                            Element link = itLink.next();\n                            categories.add((Element)link.clone());\n                        }\n                    }\n                    category.clearContent();\n                    for (Element value : categories) {\n                        category.add(value);\n                    }\n                }\n            }\n\n            // too many nodes of this type appear according to the current schema definition\n            for (int lo = (elements.size() - 1); lo >= maxOccurs; lo--) {\n                elements.remove(lo);\n            }\n        }\n    }","commit_id":"65450018fec1ab00a6327431bec0c328e0e8eac2","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Adjusts the module configuration file and the formatter configurations.<p>\n     *\n     * @param targetModule the target module\n     * @param resTypeMap the resource type mapping\n     *\n     * @throws CmsException if something goes wrong\n     * @throws UnsupportedEncodingException if the file content could not be read with the determined encoding\n     */\n    private void adjustConfigs(CmsModule targetModule, Map<I_CmsResourceType, I_CmsResourceType> resTypeMap)\n    throws CmsException, UnsupportedEncodingException {\n\n        String modPath = CmsWorkplace.VFS_PATH_MODULES + targetModule.getName() + \"/\";\n        CmsObject cms = getCms();\n        if (((m_cloneInfo.getSourceNamePrefix() != null) && (m_cloneInfo.getTargetNamePrefix() != null))\n            || !m_cloneInfo.getSourceNamePrefix().equals(m_cloneInfo.getTargetNamePrefix())) {\n            // replace resource type names in formatter configurations\n            List<CmsResource> resources = cms.readResources(\n                modPath,\n                CmsResourceFilter.requireType(OpenCms.getResourceManager().getResourceType(\n                    CmsFormatterConfigurationCache.TYPE_FORMATTER_CONFIG).getTypeId()));\n            String source = \"<Type><!\\\\[CDATA\\\\[\" + m_cloneInfo.getSourceNamePrefix();\n            String target = \"<Type><!\\\\[CDATA\\\\[\" + m_cloneInfo.getTargetNamePrefix();\n            Function<String, String> replaceType = new ReplaceAll(source, target);\n\n            for (CmsResource resource : resources) {\n                transformResource(resource, replaceType);\n            }\n            resources.clear();\n        }\n\n        // replace resource type names in module configuration\n        try {\n            CmsResource config = cms.readResource(\n                modPath + CmsADEManager.CONFIG_FILE_NAME,\n                CmsResourceFilter.requireType(OpenCms.getResourceManager().getResourceType(\n                    CmsADEManager.MODULE_CONFIG_TYPE).getTypeId()));\n            Function<String, String> substitution = Functions.identity();\n            // compose the substitution functions from simple substitution functions for each type\n\n            for (Map.Entry<I_CmsResourceType, I_CmsResourceType> mapping : resTypeMap.entrySet()) {\n                substitution = Functions.compose(new ReplaceAll(\n                    mapping.getKey().getTypeName(),\n                    mapping.getValue().getTypeName()), substitution);\n            }\n\n            // Either replace prefix in or prepend it to the folder name value\n\n            Function<String, String> replaceFolderName = new ReplaceAll(\"(<Folder>[ \\n]*<Name><!\\\\[CDATA\\\\[)(\"\n                + m_cloneInfo.getSourceNamePrefix()\n                + \")?\", \"$1\" + m_cloneInfo.getTargetNamePrefix());\n            substitution = Functions.compose(replaceFolderName, substitution);\n            transformResource(config, substitution);\n        } catch (CmsVfsResourceNotFoundException e) {\n            LOG.info(e.getLocalizedMessage(), e);\n        }\n    }","id":27750,"modified_method":"/**\n     * Adjusts the module configuration file and the formatter configurations.<p>\n     *\n     * @param targetModule the target module\n     * @param resTypeMap the resource type mapping\n     *\n     * @throws CmsException if something goes wrong\n     * @throws UnsupportedEncodingException if the file content could not be read with the determined encoding\n     */\n    private void adjustConfigs(CmsModule targetModule, Map<I_CmsResourceType, I_CmsResourceType> resTypeMap)\n    throws CmsException, UnsupportedEncodingException {\n\n        String modPath = CmsWorkplace.VFS_PATH_MODULES + targetModule.getName() + \"/\";\n        CmsObject cms = getCms();\n        if (((m_cloneInfo.getSourceNamePrefix() != null) && (m_cloneInfo.getTargetNamePrefix() != null))\n            || !m_cloneInfo.getSourceNamePrefix().equals(m_cloneInfo.getTargetNamePrefix())) {\n            // replace resource type names in formatter configurations\n            List<CmsResource> resources = cms.readResources(\n                modPath,\n                CmsResourceFilter.requireType(OpenCms.getResourceManager().getResourceType(\n                    CmsFormatterConfigurationCache.TYPE_FORMATTER_CONFIG)));\n            String source = \"<Type><!\\\\[CDATA\\\\[\" + m_cloneInfo.getSourceNamePrefix();\n            String target = \"<Type><!\\\\[CDATA\\\\[\" + m_cloneInfo.getTargetNamePrefix();\n            Function<String, String> replaceType = new ReplaceAll(source, target);\n\n            for (CmsResource resource : resources) {\n                transformResource(resource, replaceType);\n            }\n            resources.clear();\n        }\n\n        // replace resource type names in module configuration\n        try {\n            CmsResource config = cms.readResource(\n                modPath + CmsADEManager.CONFIG_FILE_NAME,\n                CmsResourceFilter.requireType(OpenCms.getResourceManager().getResourceType(\n                    CmsADEManager.MODULE_CONFIG_TYPE)));\n            Function<String, String> substitution = Functions.identity();\n            // compose the substitution functions from simple substitution functions for each type\n\n            for (Map.Entry<I_CmsResourceType, I_CmsResourceType> mapping : resTypeMap.entrySet()) {\n                substitution = Functions.compose(new ReplaceAll(\n                    mapping.getKey().getTypeName(),\n                    mapping.getValue().getTypeName()), substitution);\n            }\n\n            // Either replace prefix in or prepend it to the folder name value\n\n            Function<String, String> replaceFolderName = new ReplaceAll(\"(<Folder>[ \\n]*<Name><!\\\\[CDATA\\\\[)(\"\n                + m_cloneInfo.getSourceNamePrefix()\n                + \")?\", \"$1\" + m_cloneInfo.getTargetNamePrefix());\n            substitution = Functions.compose(replaceFolderName, substitution);\n            transformResource(config, substitution);\n        } catch (CmsVfsResourceNotFoundException e) {\n            LOG.info(e.getLocalizedMessage(), e);\n        }\n    }","commit_id":"65450018fec1ab00a6327431bec0c328e0e8eac2","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Changes the resource types and the schema locations of existing content.<p>\n     *\n     * @param resTypeMap a map containing the source types as keys and the target types as values\n     *\n     * @throws CmsException if something goes wrong\n     * @throws UnsupportedEncodingException if the file content could not be read with the determined encoding\n     */\n    private void changeResourceTypes(Map<I_CmsResourceType, I_CmsResourceType> resTypeMap)\n    throws CmsException, UnsupportedEncodingException {\n\n        CmsObject cms = getCms();\n        CmsObject cloneCms = OpenCms.initCmsObject(cms);\n\n        if (isTrue(m_cloneInfo.getApplyChangesEverywhere())) {\n            cloneCms.getRequestContext().setSiteRoot(\"/\");\n        }\n\n        for (Map.Entry<I_CmsResourceType, I_CmsResourceType> mapping : resTypeMap.entrySet()) {\n            CmsResourceFilter filter = CmsResourceFilter.requireType(mapping.getKey().getTypeId());\n            List<CmsResource> resources = cloneCms.readResources(\"/\", filter);\n            String sourceSchemaPath = mapping.getKey().getConfiguration().get(\"schema\");\n            String targetSchemaPath = mapping.getValue().getConfiguration().get(\"schema\");\n            for (CmsResource res : resources) {\n                if (lockResource(cms, res)) {\n                    CmsFile file = cms.readFile(res);\n                    if (CmsResourceTypeXmlContent.isXmlContent(file)) {\n                        CmsXmlContent xmlContent = CmsXmlContentFactory.unmarshal(getCms(), file);\n                        xmlContent.setAutoCorrectionEnabled(true);\n                        file = xmlContent.correctXmlStructure(getCms());\n                    }\n                    String encoding = CmsLocaleManager.getResourceEncoding(cms, file);\n                    String content = new String(file.getContents(), encoding);\n                    content = content.replaceAll(sourceSchemaPath, targetSchemaPath);\n                    file.setContents(content.getBytes(encoding));\n                    try {\n                        cms.writeFile(file);\n                    } catch (CmsXmlException e) {\n                        LOG.error(e.getMessage(), e);\n                    }\n                    res.setType(mapping.getValue().getTypeId());\n                    cms.writeResource(res);\n                }\n            }\n        }\n    }","id":27751,"modified_method":"/**\n     * Changes the resource types and the schema locations of existing content.<p>\n     *\n     * @param resTypeMap a map containing the source types as keys and the target types as values\n     *\n     * @throws CmsException if something goes wrong\n     * @throws UnsupportedEncodingException if the file content could not be read with the determined encoding\n     */\n    private void changeResourceTypes(Map<I_CmsResourceType, I_CmsResourceType> resTypeMap)\n    throws CmsException, UnsupportedEncodingException {\n\n        CmsObject cms = getCms();\n        CmsObject cloneCms = OpenCms.initCmsObject(cms);\n\n        if (isTrue(m_cloneInfo.getApplyChangesEverywhere())) {\n            cloneCms.getRequestContext().setSiteRoot(\"/\");\n        }\n\n        for (Map.Entry<I_CmsResourceType, I_CmsResourceType> mapping : resTypeMap.entrySet()) {\n            CmsResourceFilter filter = CmsResourceFilter.requireType(mapping.getKey());\n            List<CmsResource> resources = cloneCms.readResources(\"/\", filter);\n            String sourceSchemaPath = mapping.getKey().getConfiguration().get(\"schema\");\n            String targetSchemaPath = mapping.getValue().getConfiguration().get(\"schema\");\n            for (CmsResource res : resources) {\n                if (lockResource(cms, res)) {\n                    CmsFile file = cms.readFile(res);\n                    if (CmsResourceTypeXmlContent.isXmlContent(file)) {\n                        CmsXmlContent xmlContent = CmsXmlContentFactory.unmarshal(getCms(), file);\n                        xmlContent.setAutoCorrectionEnabled(true);\n                        file = xmlContent.correctXmlStructure(getCms());\n                    }\n                    String encoding = CmsLocaleManager.getResourceEncoding(cms, file);\n                    String content = new String(file.getContents(), encoding);\n                    content = content.replaceAll(sourceSchemaPath, targetSchemaPath);\n                    file.setContents(content.getBytes(encoding));\n                    try {\n                        cms.writeFile(file);\n                    } catch (CmsXmlException e) {\n                        LOG.error(e.getMessage(), e);\n                    }\n                    res.setType(mapping.getValue().getTypeId());\n                    cms.writeResource(res);\n                }\n            }\n        }\n    }","commit_id":"65450018fec1ab00a6327431bec0c328e0e8eac2","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Combined modification test for simple (non-nested) XML schema.<p>\n     * \n     * @throws Exception in case the test fails\n     */\n    public void testCombinedChangeSchemaNodes() throws Exception {\n\n        echo(\"Combined modification test for simple (non-nested) XML schema\");\n\n        runTestWithChangedSchema(\n            SCHEMA_SYSTEM_ID_1,\n            \"/testCombinedChangeSchemaNodesA.html\",\n            \"xmlcontent-definition-1.xsd\",\n            \"xmlcontent-1.xml\",\n            \"xmlcontent-definition-1.mod4.xsd\",\n            \"xmlcontent-1.mod4.xml\");\n\n        runTestWithChangedSchema(\n            SCHEMA_SYSTEM_ID_1,\n            \"/testCombinedChangeSchemaNodesB.html\",\n            \"xmlcontent-definition-1.mod4.xsd\",\n            \"xmlcontent-1.mod4.xml\",\n            \"xmlcontent-definition-1.mod5.xsd\",\n            \"xmlcontent-1.mod5.xml\");\n\n        // test a schema change where all nodes become invalid\n        runTestWithChangedSchema(\n            SCHEMA_SYSTEM_ID_1,\n            \"/testCombinedChangeSchemaNodesC.html\",\n            \"xmlcontent-definition-5.xsd\",\n            \"xmlcontent-1.mod5.xml\",\n            \"xmlcontent-definition-1.mod6.xsd\",\n            \"xmlcontent-1.mod6.xml\");\n    }","id":27752,"modified_method":"/**\n     * Combined modification test for simple (non-nested) XML schema.<p>\n     * \n     * @throws Exception in case the test fails\n     */\n    public void testCombinedChangeSchemaNodes() throws Exception {\n\n        echo(\"Combined modification test for simple (non-nested) XML schema\");\n\n        runTestWithChangedSchema(\n            SCHEMA_SYSTEM_ID_1,\n            \"/testCombinedChangeSchemaNodesA.html\",\n            \"xmlcontent-definition-1.xsd\",\n            \"xmlcontent-1.xml\",\n            \"xmlcontent-definition-1.mod4.xsd\",\n            \"xmlcontent-1.mod4.xml\");\n\n        runTestWithChangedSchema(\n            SCHEMA_SYSTEM_ID_1,\n            \"/testCombinedChangeSchemaNodesB.html\",\n            \"xmlcontent-definition-1.mod4.xsd\",\n            \"xmlcontent-1.mod4.xml\",\n            \"xmlcontent-definition-1.mod5.xsd\",\n            \"xmlcontent-1.mod5.xml\");\n\n        // test a schema change where all nodes become invalid\n        runTestWithChangedSchema(\n            SCHEMA_SYSTEM_ID_1,\n            \"/testCombinedChangeSchemaNodesC.html\",\n            \"xmlcontent-definition-1.mod5.xsd\",\n            \"xmlcontent-1.mod5.xml\",\n            \"xmlcontent-definition-1.mod6.xsd\",\n            \"xmlcontent-1.mod6.xml\");\n    }","commit_id":"65450018fec1ab00a6327431bec0c328e0e8eac2","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Reads an XML content with the original schema, then changes the schema and corrects the XML content \n     * with the new schema.<p>\n     * \n     * @param schemaId the XML schema id for the schema cache\n     * @param filename the filename to write the XML content to in the OpenCms VFS\n     * @param originalSchema the location of the original schema in the RFS\n     * @param originalFile the location of the original XML file in the RFS\n     * @param changedSchema the location of the changed schema in the RFS\n     * @param changedFile the location of the changed XML file in the RFS (for comparison)\n     * \n     * @throws Exception if something goes wrong\n     */\n    private void runTestWithChangedSchema(\n        String schemaId,\n        String filename,\n        String originalSchema,\n        String originalFile,\n        String changedSchema,\n        String changedFile) throws Exception {\n\n        CmsObject cms = getCmsObject();\n\n        // append default path to the filenames\n        originalSchema = \"org/opencms/xml/content/\" + originalSchema;\n        originalFile = \"org/opencms/xml/content/\" + originalFile;\n        changedSchema = \"org/opencms/xml/content/\" + changedSchema;\n        changedFile = \"org/opencms/xml/content/\" + changedFile;\n\n        CmsXmlEntityResolver resolver = new CmsXmlEntityResolver(cms);\n        // cache the ORIGINAL content definition\n        cacheSchema(resolver, schemaId, originalSchema);\n\n        // now create the XML content\n        String content = CmsFileUtil.readFile(originalFile, CmsEncoder.ENCODING_UTF_8);\n        CmsXmlContent xmlcontent = CmsXmlContentFactory.unmarshal(content, CmsEncoder.ENCODING_UTF_8, resolver);\n\n        // save the XML content to the VFS\n        cms.createResource(\n            filename,\n            OpenCms.getResourceManager().getResourceType(\"xmlcontent\").getTypeId(),\n            xmlcontent.toString().getBytes(xmlcontent.getEncoding()),\n            Collections.<CmsProperty> emptyList());\n\n        CmsFile file = cms.readFile(filename);\n        CmsXmlContent xmlcontent2 = CmsXmlContentFactory.unmarshal(cms, file);\n\n        // enable the XML auto correction mode on save\n        cms.getRequestContext().setAttribute(CmsXmlContent.AUTO_CORRECTION_ATTRIBUTE, Boolean.TRUE);\n\n        // write the file, it should not be changed \n        cms.writeFile(file);\n        assertXmlContent(xmlcontent2, originalFile, resolver);\n        // cache the CHANGED content definition\n        cacheSchema(resolver, schemaId, changedSchema);\n        // write the file again, it should be changed according to the changed schema\n        cms.writeFile(file);\n\n        file = cms.readFile(filename);\n        xmlcontent2 = CmsXmlContentFactory.unmarshal(cms, file);\n        assertXmlContent(xmlcontent2, changedFile, resolver);\n    }","id":27753,"modified_method":"/**\n     * Reads an XML content with the original schema, then changes the schema and corrects the XML content \n     * with the new schema.<p>\n     * \n     * @param schemaId the XML schema id for the schema cache\n     * @param filename the filename to write the XML content to in the OpenCms VFS\n     * @param originalSchema the location of the original schema in the RFS\n     * @param originalFile the location of the original XML file in the RFS\n     * @param changedSchema the location of the changed schema in the RFS\n     * @param changedFile the location of the changed XML file in the RFS (for comparison)\n     * \n     * @throws Exception if something goes wrong\n     */\n    private void runTestWithChangedSchema(\n        String schemaId,\n        String filename,\n        String originalSchema,\n        String originalFile,\n        String changedSchema,\n        String changedFile) throws Exception {\n\n        List<SchemaDef> originalSchemas = new ArrayList<SchemaDef>();\n        List<SchemaDef> changedSchemas = new ArrayList<SchemaDef>();\n\n        originalSchemas.add(new SchemaDef(schemaId, originalSchema));\n        changedSchemas.add(new SchemaDef(schemaId, changedSchema));\n\n        runTestWithChangedSchemas(filename, originalSchemas, originalFile, changedSchemas, changedFile);\n    }","commit_id":"65450018fec1ab00a6327431bec0c328e0e8eac2","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Test suite for this test class.<p>\n     * \n     * @return the test suite\n     */\n    public static Test suite() {\n\n        OpenCmsTestProperties.initialize(org.opencms.test.AllTests.TEST_PROPERTIES_PATH);\n\n        TestSuite suite = new TestSuite();\n        suite.setName(TestCmsXmlContentSchemaModifications.class.getName());\n\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testVfsFile\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testUsageDemo\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testAddSchemaNodes\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testRemoveSchemaNodes\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testReArrangeSchemaNodes\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testCombinedChangeSchemaNodes\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testNestedChangeSchemaNodes\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testXsdTranslation\"));\n\n        TestSetup wrapper = new TestSetup(suite) {\n\n            @Override\n            protected void setUp() {\n\n                setupOpenCms(\"simpletest\", \"/\");\n            }\n\n            @Override\n            protected void tearDown() {\n\n                removeOpenCms();\n            }\n        };\n\n        return wrapper;\n    }","id":27754,"modified_method":"/**\n     * Test suite for this test class.<p>\n     * \n     * @return the test suite\n     */\n    public static Test suite() {\n\n        OpenCmsTestProperties.initialize(org.opencms.test.AllTests.TEST_PROPERTIES_PATH);\n\n        TestSuite suite = new TestSuite();\n        suite.setName(TestCmsXmlContentSchemaModifications.class.getName());\n\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testVfsFile\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testUsageDemo\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testAddSchemaNodes\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testRemoveSchemaNodes\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testReArrangeSchemaNodes\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testCombinedChangeSchemaNodes\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testNestedChangeSchemaNodes\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testXsdTranslation\"));\n        suite.addTest(new TestCmsXmlContentSchemaModifications(\"testMaintainOrderInChoiceAfterSchemaChange\"));\n\n        TestSetup wrapper = new TestSetup(suite) {\n\n            @Override\n            protected void setUp() {\n\n                setupOpenCms(\"simpletest\", \"/\");\n            }\n\n            @Override\n            protected void tearDown() {\n\n                removeOpenCms();\n            }\n        };\n\n        return wrapper;\n    }","commit_id":"65450018fec1ab00a6327431bec0c328e0e8eac2","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Demo test for using the XML content correcting API.<p>\n     * \n     * @throws Exception in case the test fails\n     */\n    public void testUsageDemo() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        CmsXmlEntityResolver resolver = new CmsXmlEntityResolver(cms);\n\n        // setup steps for demo test 1:        \n        // filenames to use\n        String changedSchema = \"org/opencms/xml/content/xmlcontent-definition-1.mod4.xsd\";\n        String originalFile = \"org/opencms/xml/content/xmlcontent-1.xml\";\n        String filename = \"/testUsageDemo.html\";\n        // cache the changed content definition\n        cacheSchema(resolver, SCHEMA_SYSTEM_ID_1, changedSchema);\n        // read the XML content from the test directory, usually this would be from the VFS\n        String content = CmsFileUtil.readFile(originalFile, CmsEncoder.ENCODING_UTF_8);\n\n        // DEMO TEST 1:\n\n        // assumtion: the schema definition of an existing XML content has changed\n        // the XML content is unmarshaled (using the changed schema) and then validated\n        // after validation fails, it is corrected using the API and then saved to the VFS\n\n        // unmarshal the XML content (the schema is already \"wrong\")\n        CmsXmlContent xmlcontent = CmsXmlContentFactory.unmarshal(content, CmsEncoder.ENCODING_UTF_8, resolver);\n\n        // output the XML content (unmodified version)\n        System.out.println(xmlcontent.toString());\n\n        // validate the XML structure - must be invalid because of the schema change\n        Exception ex = null;\n        try {\n            xmlcontent.validateXmlStructure(resolver);\n        } catch (CmsXmlException e) {\n            ex = e;\n        }\n        // required exception must haven been thrown or the test is a failure\n        assertNotNull(ex);\n\n        // enable \"auto correction mode\" - this is required or the XML structure will not be fully corrected\n        xmlcontent.setAutoCorrectionEnabled(true);\n        // now correct the XML        \n        xmlcontent.correctXmlStructure(cms);\n\n        // output the XML content (modified version)\n        System.out.println(xmlcontent.toString());\n\n        // check again if the XML is correct - this time it must work without exception\n        xmlcontent.validateXmlStructure(resolver);\n        // demo test 1 is finished\n\n        // setup steps for demo test 2: \n\n        // write the content to the VFS\n        cms.createResource(\n            filename,\n            OpenCms.getResourceManager().getResourceType(\"xmlcontent\").getTypeId(),\n            xmlcontent.toString().getBytes(xmlcontent.getEncoding()),\n            Collections.<CmsProperty> emptyList());\n        // change the XML schema definition for the XML content \n        // it's important that the schema is changed _before_ the content is unmarshaled\n        // in a \"real world\" use case this should be no problem as the schema will have been changed in another request\n        changedSchema = \"org/opencms/xml/content/xmlcontent-definition-1.mod5.xsd\";\n        // update the XML schema cache\n        cacheSchema(resolver, SCHEMA_SYSTEM_ID_1, changedSchema);\n\n        // DEMO TEST 2:\n\n        // assumption: a file is to be corrected automatically while writing it to the VFS\n        // for this, a special OpenCms request context attribute has been introduced\n        // if this is set to a Boolean.TRUE object, the XML content is always corrected while saving it to the VFS\n        CmsFile file = cms.readFile(filename);\n\n        // this is not normally required, but illustrates the differences in the API behaviour\n        // trying to write the file now (with the changed schema but XML still using the old schema) is not possible \n        // this is because of the build-in validation while writing\n        ex = null;\n        try {\n            file = cms.writeFile(file);\n        } catch (CmsXmlException e) {\n            ex = e;\n        }\n        // required exception must haven been thrown or the test is a failure\n        assertNotNull(ex);\n\n        // now set the \"automatic correction\" request context attribute\n        cms.getRequestContext().setAttribute(CmsXmlContent.AUTO_CORRECTION_ATTRIBUTE, Boolean.TRUE);\n\n        // write the file again - the correction will now be done automatically while writing (no exceptions)\n        file = cms.writeFile(file);\n\n        // output the XML content (modified version)\n        System.out.println(new String(file.getContents()));\n        // demo test 2 is finished\n    }","id":27755,"modified_method":"/**\n     * Demo test for using the XML content correcting API.<p>\n     * \n     * @throws Exception in case the test fails\n     */\n    public void testUsageDemo() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        CmsXmlEntityResolver resolver = new CmsXmlEntityResolver(cms);\n\n        // setup steps for demo test 1:        \n        // filenames to use\n        String changedSchema = \"org/opencms/xml/content/xmlcontent-definition-1.mod4.xsd\";\n        String originalFile = \"org/opencms/xml/content/xmlcontent-1.xml\";\n        String filename = \"/testUsageDemo.html\";\n        // cache the changed content definition\n        cacheSchema(resolver, SCHEMA_SYSTEM_ID_1, changedSchema);\n        // read the XML content from the test directory, usually this would be from the VFS\n        String content = CmsFileUtil.readFile(originalFile, CmsEncoder.ENCODING_UTF_8);\n\n        // DEMO TEST 1:\n\n        // assumtion: the schema definition of an existing XML content has changed\n        // the XML content is unmarshaled (using the changed schema) and then validated\n        // after validation fails, it is corrected using the API and then saved to the VFS\n\n        // unmarshal the XML content (the schema is already \"wrong\")\n        CmsXmlContent xmlcontent = CmsXmlContentFactory.unmarshal(content, CmsEncoder.ENCODING_UTF_8, resolver);\n\n        // output the XML content (unmodified version)\n        System.out.println(xmlcontent.toString());\n\n        // validate the XML structure - must be invalid because of the schema change\n        Exception ex = null;\n        try {\n            xmlcontent.validateXmlStructure(resolver);\n        } catch (CmsXmlException e) {\n            ex = e;\n        }\n        // required exception must haven been thrown or the test is a failure\n        assertNotNull(ex);\n\n        // enable \"auto correction mode\" - this is required or the XML structure will not be fully corrected\n        xmlcontent.setAutoCorrectionEnabled(true);\n        // now correct the XML        \n        xmlcontent.correctXmlStructure(cms);\n\n        // output the XML content (modified version)\n        System.out.println(xmlcontent.toString());\n\n        // check again if the XML is correct - this time it must work without exception\n        xmlcontent.validateXmlStructure(resolver);\n        // demo test 1 is finished\n\n        // setup steps for demo test 2: \n\n        // write the content to the VFS\n        cms.createResource(\n            filename,\n            OpenCms.getResourceManager().getResourceType(\"xmlcontent\"),\n            xmlcontent.toString().getBytes(xmlcontent.getEncoding()),\n            Collections.<CmsProperty> emptyList());\n        // change the XML schema definition for the XML content \n        // it's important that the schema is changed _before_ the content is unmarshaled\n        // in a \"real world\" use case this should be no problem as the schema will have been changed in another request\n        changedSchema = \"org/opencms/xml/content/xmlcontent-definition-1.mod5.xsd\";\n        // update the XML schema cache\n        cacheSchema(resolver, SCHEMA_SYSTEM_ID_1, changedSchema);\n\n        // DEMO TEST 2:\n\n        // assumption: a file is to be corrected automatically while writing it to the VFS\n        // for this, a special OpenCms request context attribute has been introduced\n        // if this is set to a Boolean.TRUE object, the XML content is always corrected while saving it to the VFS\n        CmsFile file = cms.readFile(filename);\n\n        // this is not normally required, but illustrates the differences in the API behaviour\n        // trying to write the file now (with the changed schema but XML still using the old schema) is not possible \n        // this is because of the build-in validation while writing\n        ex = null;\n        try {\n            file = cms.writeFile(file);\n        } catch (CmsXmlException e) {\n            ex = e;\n        }\n        // required exception must haven been thrown or the test is a failure\n        assertNotNull(ex);\n\n        // now set the \"automatic correction\" request context attribute\n        cms.getRequestContext().setAttribute(CmsXmlContent.AUTO_CORRECTION_ATTRIBUTE, Boolean.TRUE);\n\n        // write the file again - the correction will now be done automatically while writing (no exceptions)\n        file = cms.writeFile(file);\n\n        // output the XML content (modified version)\n        System.out.println(new String(file.getContents()));\n        // demo test 2 is finished\n    }","commit_id":"65450018fec1ab00a6327431bec0c328e0e8eac2","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Demo test for using the XML content correcting API.<p>\n     * \n     * @throws Exception in case the test fails\n     */\n    public void testVfsFile() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        CmsXmlEntityResolver resolver = new CmsXmlEntityResolver(cms);\n\n        // filenames to use\n        String changedSchema = \"org/opencms/xml/content/xmlcontent-definition-2.mod.xsd\";\n        String originalFile = \"org/opencms/xml/content/xmlcontent-2.mod.xml\";\n        String filename = \"/testVfsFile.html\";\n        // cache the changed content definition\n        cacheSchema(resolver, \"http://www.opencms.org/test2.xsd\", changedSchema);\n        // read the XML content from the test directory, usually this would be from the VFS\n        String content = CmsFileUtil.readFile(originalFile, CmsEncoder.ENCODING_UTF_8);\n\n        // unmarshal the XML content (the schema is already using the \"filereference\")\n        CmsXmlContent xmlcontent = CmsXmlContentFactory.unmarshal(content, CmsEncoder.ENCODING_UTF_8, resolver);\n\n        // output the XML content (unmodified version)\n        System.out.println(xmlcontent.toString());\n\n        // validate the XML structure - must be invalid because of the schema change\n        try {\n            xmlcontent.validateXmlStructure(resolver);\n            fail(\"xml content should not be valid\");\n        } catch (CmsXmlException e) {\n            // ignore\n        }\n\n        // enable \"auto correction mode\" - this is required or the XML structure will not be fully corrected\n        xmlcontent.setAutoCorrectionEnabled(true);\n        // now correct the XML        \n        xmlcontent.correctXmlStructure(cms);\n\n        // output the XML content (modified version)\n        System.out.println(xmlcontent.toString());\n\n        // check again if the XML is correct - this time it must work without exception\n        xmlcontent.validateXmlStructure(resolver);\n\n        // write the content to the VFS\n        cms.createResource(\n            filename,\n            OpenCms.getResourceManager().getResourceType(\"xmlcontent\").getTypeId(),\n            CmsFileUtil.readFile(originalFile),\n            Collections.<CmsProperty> emptyList());\n\n        // assumption: a file is to be corrected automatically while writing it to the VFS\n        // for this, a special OpenCms request context attribute has been introduced\n        // if this is set to a Boolean.TRUE object, the XML content is always corrected while saving it to the VFS\n        CmsFile file = cms.readFile(filename);\n\n        // this is not normally required, but illustrates the differences in the API behaviour\n        // trying to write the file now (with the changed schema but XML still using the old schema) is not possible \n        // this is because of the build-in validation while writing\n        try {\n            cms.writeFile(file);\n            fail(\"should fail to write the old xml file\");\n        } catch (CmsXmlException e) {\n            // ok, ignore\n        }\n\n        // now set the \"automatic correction\" request context attribute\n        cms.getRequestContext().setAttribute(CmsXmlContent.AUTO_CORRECTION_ATTRIBUTE, Boolean.TRUE);\n\n        // write the file again - the correction will now be done automatically while writing (no exceptions)\n        file = cms.writeFile(file);\n\n        // output the XML content (modified version)\n        System.out.println(new String(file.getContents()));\n    }","id":27756,"modified_method":"/**\n     * Demo test for using the XML content correcting API.<p>\n     * \n     * @throws Exception in case the test fails\n     */\n    public void testVfsFile() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        CmsXmlEntityResolver resolver = new CmsXmlEntityResolver(cms);\n\n        // filenames to use\n        String changedSchema = \"org/opencms/xml/content/xmlcontent-definition-2.mod.xsd\";\n        String originalFile = \"org/opencms/xml/content/xmlcontent-2.mod.xml\";\n        String filename = \"/testVfsFile.html\";\n        // cache the changed content definition\n        cacheSchema(resolver, \"http://www.opencms.org/test2.xsd\", changedSchema);\n        // read the XML content from the test directory, usually this would be from the VFS\n        String content = CmsFileUtil.readFile(originalFile, CmsEncoder.ENCODING_UTF_8);\n\n        // unmarshal the XML content (the schema is already using the \"filereference\")\n        CmsXmlContent xmlcontent = CmsXmlContentFactory.unmarshal(content, CmsEncoder.ENCODING_UTF_8, resolver);\n\n        // output the XML content (unmodified version)\n        System.out.println(xmlcontent.toString());\n\n        // validate the XML structure - must be invalid because of the schema change\n        try {\n            xmlcontent.validateXmlStructure(resolver);\n            fail(\"xml content should not be valid\");\n        } catch (CmsXmlException e) {\n            // ignore\n        }\n\n        // enable \"auto correction mode\" - this is required or the XML structure will not be fully corrected\n        xmlcontent.setAutoCorrectionEnabled(true);\n        // now correct the XML        \n        xmlcontent.correctXmlStructure(cms);\n\n        // output the XML content (modified version)\n        System.out.println(xmlcontent.toString());\n\n        // check again if the XML is correct - this time it must work without exception\n        xmlcontent.validateXmlStructure(resolver);\n\n        // write the content to the VFS\n        cms.createResource(\n            filename,\n            OpenCms.getResourceManager().getResourceType(\"xmlcontent\"),\n            CmsFileUtil.readFile(originalFile),\n            Collections.<CmsProperty> emptyList());\n\n        // assumption: a file is to be corrected automatically while writing it to the VFS\n        // for this, a special OpenCms request context attribute has been introduced\n        // if this is set to a Boolean.TRUE object, the XML content is always corrected while saving it to the VFS\n        CmsFile file = cms.readFile(filename);\n\n        // this is not normally required, but illustrates the differences in the API behaviour\n        // trying to write the file now (with the changed schema but XML still using the old schema) is not possible \n        // this is because of the build-in validation while writing\n        try {\n            cms.writeFile(file);\n            fail(\"should fail to write the old xml file\");\n        } catch (CmsXmlException e) {\n            // ok, ignore\n        }\n\n        // now set the \"automatic correction\" request context attribute\n        cms.getRequestContext().setAttribute(CmsXmlContent.AUTO_CORRECTION_ATTRIBUTE, Boolean.TRUE);\n\n        // write the file again - the correction will now be done automatically while writing (no exceptions)\n        file = cms.writeFile(file);\n\n        // output the XML content (modified version)\n        System.out.println(new String(file.getContents()));\n    }","commit_id":"65450018fec1ab00a6327431bec0c328e0e8eac2","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Initializes the plug-ins.<p>\n     *\n     * @param detectedVersion detected mayor version\n     */\n    public void initialize(double detectedVersion) {\n\n        m_selectedPlugins = new ArrayList<String>();\n        m_plugins = new ArrayList<I_CmsSetupXmlUpdate>();\n        // put the plugins here in chronological order (or first remove then add)\n\n        if (detectedVersion < 7) {\n            // importexport\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveResourcesToRender());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddResourcesToRender());\n\n            // workplace\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlUpdateDefaultProperties());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddAvailabilityContextMenu());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddMultiContextMenu());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlUpdateHistoryContextMenu());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddImgGalleryContextMenues());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddPublishButtonAppearance());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlUpdateDefaultPermissions());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddAutoSetFeatures());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlUpdateLocalizationKeys());\n        }\n\n        // importexport\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveImmutables());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveImportVersions());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveImportHandlers());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddImportVersions());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddImmutables());\n\n        // search\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemovePageSearchIndexSource1());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveSysSearchIndex());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddDEHelpSearchIndex());\n\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddSolrSearch());\n\n        // system\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveResourceHandlers());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddContentNotification());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddResourceHandlers());\n\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddResourceHandlers());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddAdeConfig());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddTimezone());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlUpdateFlexcache());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddSharedFolderConfiguration());\n\n        // vfs\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveResourceLoaders());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveResourceTypes());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlReplaceHtmlAreaWidgets());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddImageLoader());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddImgGalleryParam());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlChangeGalleryClasses());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddXmlContentWidgets());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddXmlSchemaTypes());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddMimeTypes());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddResourceTypes());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddHtmlConverters());\n\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddLoaders());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddJspLoaderParams());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddResourceTypeParams());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddWidgets());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddCollectors());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddTypeMappings());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddTranslationRules());\n        //m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlUpdateSchemaTypes());\n\n        // workplace\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlUpdateDirectEditProvider());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddContextMenuItems());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlFixContextMenuItems());\n\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddUnknownFile());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddWizardETypeDesc());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlUpdateOpenGallery());\n\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddIconRules());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlUpdateMenuRules());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlChangeDefaultDirectEditProvider());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlUpdateContextMenuEntries());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlChangeDefaultUpload());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlUpdateExplorerTypes());\n        if (CmsUpdateInfo.INSTANCE.needToSetCategoryFolder()) {\n            m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlSetCategoryFolder());\n        }\n\n        m_plugins.add(new org.opencms.setup.xml.v9.CmsXmlUpdateDefaultPermissions());\n        m_plugins.add(new org.opencms.setup.xml.v9.CmsXmlCleanUpSearchConfiguration());\n\n        setup();\n    }","id":27757,"modified_method":"/**\n     * Initializes the plug-ins.<p>\n     *\n     * @param detectedVersion detected mayor version\n     */\n    public void initialize(double detectedVersion) {\n\n        m_selectedPlugins = new ArrayList<String>();\n        m_plugins = new ArrayList<I_CmsSetupXmlUpdate>();\n        // put the plugins here in chronological order (or first remove then add)\n\n        if (detectedVersion < 7) {\n            // importexport\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveResourcesToRender());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddResourcesToRender());\n\n            // workplace\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlUpdateDefaultProperties());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddAvailabilityContextMenu());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddMultiContextMenu());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlUpdateHistoryContextMenu());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddImgGalleryContextMenues());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddPublishButtonAppearance());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlUpdateDefaultPermissions());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddAutoSetFeatures());\n            m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlUpdateLocalizationKeys());\n        }\n\n        // importexport\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveImmutables());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveImportVersions());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveImportHandlers());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddImportVersions());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddImmutables());\n\n        // search\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemovePageSearchIndexSource1());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveSysSearchIndex());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddDEHelpSearchIndex());\n\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddSolrSearch());\n\n        // system\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveResourceHandlers());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddContentNotification());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddResourceHandlers());\n\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddResourceHandlers());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddAdeConfig());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddTimezone());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlUpdateFlexcache());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddSharedFolderConfiguration());\n\n        // vfs\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveResourceLoaders());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlRemoveResourceTypes());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlReplaceHtmlAreaWidgets());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddImageLoader());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddImgGalleryParam());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlChangeGalleryClasses());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddXmlContentWidgets());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddXmlSchemaTypes());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddMimeTypes());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddResourceTypes());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddHtmlConverters());\n\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddLoaders());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddJspLoaderParams());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddResourceTypeParams());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddWidgets());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddCollectors());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddTypeMappings());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddTranslationRules());\n        //m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlUpdateSchemaTypes());\n\n        // workplace\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlUpdateDirectEditProvider());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlAddContextMenuItems());\n        m_plugins.add(new org.opencms.setup.xml.v7.CmsXmlFixContextMenuItems());\n\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddUnknownFile());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddWizardETypeDesc());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlUpdateOpenGallery());\n\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlAddIconRules());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlUpdateMenuRules());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlChangeDefaultDirectEditProvider());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlUpdateContextMenuEntries());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlChangeDefaultUpload());\n        m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlUpdateExplorerTypes());\n        if (CmsUpdateInfo.INSTANCE.needToSetCategoryFolder()) {\n            m_plugins.add(new org.opencms.setup.xml.v8.CmsXmlSetCategoryFolder());\n        }\n\n        m_plugins.add(new org.opencms.setup.xml.v9.CmsXmlUpdateDefaultPermissions());\n        m_plugins.add(new org.opencms.setup.xml.v9.CmsXmlCleanUpSearchConfiguration());\n\n        m_plugins.add(new org.opencms.setup.xml.v9.CmsXmlUpdateContextMenuEntries());\n\n        setup();\n    }","commit_id":"bdb90c879da9a8fa91b4a2ff1989a8d9689ca455","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates the shared folder if possible.<p>\n     *\n     * @throws Exception if something goes wrong\n     */\n    public void createSharedFolder() throws Exception {\n\n        String originalSiteRoot = m_cms.getRequestContext().getSiteRoot();\n        CmsProject originalProject = m_cms.getRequestContext().getCurrentProject();\n        try {\n            m_cms.getRequestContext().setSiteRoot(\"\");\n            m_cms.getRequestContext().setCurrentProject(m_cms.createTempfileProject());\n            if (!m_cms.existsResource(\"/shared\")) {\n                m_cms.createResource(\"/shared\", OpenCms.getResourceManager().getResourceType(\"folder\").getTypeId());\n            }\n\n            try {\n                m_cms.lockResourceTemporary(\"/shared\");\n            } catch (CmsException e) {\n                LOG.error(e.getLocalizedMessage(), e);\n            }\n            try {\n                m_cms.chacc(\"/shared\", \"group\", \"Users\", \"+v+w+r+i\");\n            } catch (CmsException e) {\n                LOG.error(e.getLocalizedMessage(), e);\n            }\n            CmsResource shared = m_cms.readResource(\"/shared\");\n            try {\n                OpenCms.getPublishManager().publishProject(\n                    m_cms,\n                    new CmsHtmlReport(m_cms.getRequestContext().getLocale(), m_cms.getRequestContext().getSiteRoot()),\n                    shared,\n                    false);\n                OpenCms.getPublishManager().waitWhileRunning();\n            } catch (CmsException e) {\n                LOG.error(e.getLocalizedMessage(), e);\n            }\n        } finally {\n            m_cms.getRequestContext().setSiteRoot(originalSiteRoot);\n            m_cms.getRequestContext().setCurrentProject(originalProject);\n        }\n\n    }","id":27758,"modified_method":"/**\n     * Creates the shared folder if possible.<p>\n     *\n     * @throws Exception if something goes wrong\n     */\n    public void createSharedFolder() throws Exception {\n\n        String originalSiteRoot = m_cms.getRequestContext().getSiteRoot();\n        CmsProject originalProject = m_cms.getRequestContext().getCurrentProject();\n        try {\n            m_cms.getRequestContext().setSiteRoot(\"\");\n            m_cms.getRequestContext().setCurrentProject(m_cms.createTempfileProject());\n            if (!m_cms.existsResource(\"/shared\")) {\n                m_cms.createResource(\"/shared\", OpenCms.getResourceManager().getResourceType(\"folder\"));\n            }\n\n            try {\n                m_cms.lockResourceTemporary(\"/shared\");\n            } catch (CmsException e) {\n                LOG.error(e.getLocalizedMessage(), e);\n            }\n            try {\n                m_cms.chacc(\"/shared\", \"group\", \"Users\", \"+v+w+r+i\");\n            } catch (CmsException e) {\n                LOG.error(e.getLocalizedMessage(), e);\n            }\n            CmsResource shared = m_cms.readResource(\"/shared\");\n            try {\n                OpenCms.getPublishManager().publishProject(\n                    m_cms,\n                    new CmsHtmlReport(m_cms.getRequestContext().getLocale(), m_cms.getRequestContext().getSiteRoot()),\n                    shared,\n                    false);\n                OpenCms.getPublishManager().waitWhileRunning();\n            } catch (CmsException e) {\n                LOG.error(e.getLocalizedMessage(), e);\n            }\n        } finally {\n            m_cms.getRequestContext().setSiteRoot(originalSiteRoot);\n            m_cms.getRequestContext().setCurrentProject(originalProject);\n        }\n\n    }","commit_id":"bdb90c879da9a8fa91b4a2ff1989a8d9689ca455","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Installed all modules that have been set using {@link #setInstallModules(String)}.<p>\n     *\n     * This method is invoked as a shell command.<p>\n     *\n     * @throws Exception if something goes wrong\n     */\n    public void updateModulesFromUpdateBean() throws Exception {\n\n        // read here how the list of modules to be installed is passed from the setup bean to the\n        // setup thread, and finally to the shell process that executes the setup script:\n        // 1) the list with the package names of the modules to be installed is saved by setInstallModules\n        // 2) the setup thread gets initialized in a JSP of the setup wizard\n        // 3) the instance of the setup bean is passed to the setup thread by setAdditionalShellCommand\n        // 4) the setup bean is passed to the shell by startSetup\n        // 5) because the setup bean implements I_CmsShellCommands, the shell constructor can pass the shell's CmsObject back to the setup bean\n        // 6) thus, the setup bean can do things with the Cms\n\n        if ((m_cms != null) && (m_installModules != null)) {\n            I_CmsReport report = new CmsShellReport(m_cms.getRequestContext().getLocale());\n\n            Set<String> utdModules = new HashSet<String>(getUptodateModules());\n            for (String moduleToRemove : getModulesToDelete()) {\n                removeModule(moduleToRemove, report);\n            }\n\n            List<String> installList = Lists.newArrayList(m_installModules);\n\n            // HACK: Some resources were moved from org.opencms.ade.sitemap to org.opencms.ade.config, but they are located\n            // under /system/workplace/resources, so if org.opencms.ade.config is updated before org.opencms.ade.sitemap, these\n            // resources will be deleted. So just update org.opencms.ade.config again at the end.\n            installList.add(\"org.opencms.ade.config\");\n\n            for (String name : installList) {\n                if (!utdModules.contains(name)) {\n                    String filename = m_moduleFilenames.get(name);\n                    try {\n                        updateModule(name, filename, report);\n                    } catch (Exception e) {\n                        // log a exception during module import, but make sure the next module is still imported\n                        e.printStackTrace(System.err);\n                    }\n                } else {\n                    report.println(\n                        Messages.get().container(Messages.RPT_MODULE_UPTODATE_1, name),\n                        I_CmsReport.FORMAT_HEADLINE);\n                }\n            }\n        }\n    }","id":27759,"modified_method":"/**\n     * Installed all modules that have been set using {@link #setInstallModules(String)}.<p>\n     *\n     * This method is invoked as a shell command.<p>\n     *\n     * @throws Exception if something goes wrong\n     */\n    public void updateModulesFromUpdateBean() throws Exception {\n\n        // read here how the list of modules to be installed is passed from the setup bean to the\n        // setup thread, and finally to the shell process that executes the setup script:\n        // 1) the list with the package names of the modules to be installed is saved by setInstallModules\n        // 2) the setup thread gets initialized in a JSP of the setup wizard\n        // 3) the instance of the setup bean is passed to the setup thread by setAdditionalShellCommand\n        // 4) the setup bean is passed to the shell by startSetup\n        // 5) because the setup bean implements I_CmsShellCommands, the shell constructor can pass the shell's CmsObject back to the setup bean\n        // 6) thus, the setup bean can do things with the Cms\n\n        if ((m_cms != null) && (m_installModules != null)) {\n            I_CmsReport report = new CmsShellReport(m_cms.getRequestContext().getLocale());\n\n            Set<String> utdModules = new HashSet<String>(getUptodateModules());\n            for (String moduleToRemove : getModulesToDelete()) {\n                removeModule(moduleToRemove, report);\n            }\n\n            List<String> installList = Lists.newArrayList(m_installModules);\n            for (String name : installList) {\n                if (!utdModules.contains(name)) {\n                    String filename = m_moduleFilenames.get(name);\n                    try {\n                        updateModule(name, filename, report);\n                    } catch (Exception e) {\n                        // log a exception during module import, but make sure the next module is still imported\n                        e.printStackTrace(System.err);\n                    }\n                } else {\n                    report.println(\n                        Messages.get().container(Messages.RPT_MODULE_UPTODATE_1, name),\n                        I_CmsReport.FORMAT_HEADLINE);\n                }\n            }\n        }\n    }","commit_id":"bdb90c879da9a8fa91b4a2ff1989a8d9689ca455","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Computes a list of modules which need to be removed before updating the other modules, e.g. because of resource type\n     * conflicts.<p>\n     *\n     * @return the list of names of modules which need to be removed\n     */\n    protected List<String> getModulesToDelete() {\n\n        List<String> result = new ArrayList<String>();\n        if (m_installModules.contains(\"org.opencms.ade.config\")) {\n            // some resource types have been moved from org.opencms.ade.containerpage an org.opencms.ade.sitemap\n            // to org.opencms.ade.config in 8.0.3, so we need to remove the former modules to avoid a resource\n            // type conflict.\n            CmsModule containerpageModule = OpenCms.getModuleManager().getModule(\"org.opencms.ade.containerpage\");\n            if (containerpageModule != null) {\n                String version = containerpageModule.getVersion().toString();\n                if (\"8.0.0\".equals(version)\n                    || \"8.0.1\".equals(version)\n                    || \"8.0.2\".equals(version)\n                    || \"8.0.3\".equals(version)\n                    || \"8.0.4\".equals(version)) {\n                    result.add(\"org.opencms.ade.containerpage\");\n                    result.add(\"org.opencms.ade.sitemap\");\n                }\n            }\n        }\n        return result;\n    }","id":27760,"modified_method":"/**\n     * Computes a list of modules which need to be removed before updating the other modules, e.g. because of resource type\n     * conflicts.<p>\n     *\n     * @return the list of names of modules which need to be removed\n     */\n    protected List<String> getModulesToDelete() {\n\n        List<String> result = new ArrayList<String>();\n        if (m_installModules.contains(\"org.opencms.ade.config\")) {\n            for (int i = 0; i < OBSOLETE_MODULES.length; i++) {\n                if (OpenCms.getModuleManager().hasModule(OBSOLETE_MODULES[i])) {\n                    result.add(OBSOLETE_MODULES[i]);\n                }\n            }\n        }\n        return result;\n    }","commit_id":"bdb90c879da9a8fa91b4a2ff1989a8d9689ca455","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.setup.xml.A_CmsSetupXmlUpdate#getXPathsToUpdate()\n     */\n    @Override\n    protected List<String> getXPathsToUpdate() {\n\n        if (m_xpaths == null) {\n            // \"/opencms/vfs/resources/resourceloaders/loader[@class='org.opencms.loader.CmsImageLoader']\";\n            StringBuffer xp = new StringBuffer(256);\n            xp.append(\"/\").append(CmsConfigurationManager.N_ROOT);\n            xp.append(\"/\").append(CmsVfsConfiguration.N_VFS);\n            xp.append(\"/\").append(CmsVfsConfiguration.N_RESOURCES);\n            xp.append(\"/\").append(CmsVfsConfiguration.N_RESOURCELOADERS);\n            xp.append(\"/\").append(CmsVfsConfiguration.N_LOADER);\n            xp.append(\"[@\").append(I_CmsXmlConfiguration.A_CLASS);\n            xp.append(\"='\");\n            m_xpaths = new ArrayList<String>();\n            m_xpaths.add(xp.toString() + CmsXmlContainerPageLoader.class.getName() + \"']\");\n        }\n        return m_xpaths;\n    }","id":27761,"modified_method":"/**\n     * @see org.opencms.setup.xml.A_CmsSetupXmlUpdate#getXPathsToUpdate()\n     */\n    @Override\n    protected List<String> getXPathsToUpdate() {\n\n        if (m_xpaths == null) {\n            // \"/opencms/vfs/resources/resourceloaders/loader[@class='org.opencms.loader.CmsImageLoader']\";\n            StringBuffer xp = new StringBuffer(256);\n            xp.append(\"/\").append(CmsConfigurationManager.N_ROOT);\n            xp.append(\"/\").append(CmsVfsConfiguration.N_VFS);\n            xp.append(\"/\").append(CmsVfsConfiguration.N_RESOURCES);\n            xp.append(\"/\").append(CmsVfsConfiguration.N_RESOURCELOADERS);\n            xp.append(\"/\").append(CmsVfsConfiguration.N_LOADER);\n            xp.append(\"[@\").append(I_CmsXmlConfiguration.A_CLASS);\n            xp.append(\"='\");\n            m_xpaths = new ArrayList<String>();\n            for (int i = 0; i < LOADER_CLASSES.length; i++) {\n                m_xpaths.add(xp.toString() + LOADER_CLASSES[i].getName() + \"']\");\n            }\n        }\n        return m_xpaths;\n    }","commit_id":"bdb90c879da9a8fa91b4a2ff1989a8d9689ca455","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.setup.xml.A_CmsSetupXmlUpdate#executeUpdate(org.dom4j.Document, java.lang.String, boolean)\n     */\n    @Override\n    protected boolean executeUpdate(Document document, String xpath, boolean forReal) {\n\n        Node node = document.selectSingleNode(xpath);\n        if (node == null) {\n            if (xpath.equals(getXPathsToUpdate().get(0))) {\n                CmsSetupXmlHelper.setValue(\n                    document,\n                    xpath + \"/@\" + I_CmsXmlConfiguration.A_CLASS,\n                    CmsXmlContainerPageLoader.class.getName());\n            }\n            return true;\n        }\n        return false;\n    }","id":27762,"modified_method":"/**\n     * @see org.opencms.setup.xml.A_CmsSetupXmlUpdate#executeUpdate(org.dom4j.Document, java.lang.String, boolean)\n     */\n    @Override\n    protected boolean executeUpdate(Document document, String xpath, boolean forReal) {\n\n        Node node = document.selectSingleNode(xpath);\n        if (node == null) {\n            for (int i = 0; i < LOADER_CLASSES.length; i++) {\n\n                if (xpath.contains(LOADER_CLASSES[i].getName())) {\n                    CmsSetupXmlHelper.setValue(\n                        document,\n                        xpath + \"/@\" + I_CmsXmlConfiguration.A_CLASS,\n                        LOADER_CLASSES[i].getName());\n                    return true;\n                }\n            }\n\n        }\n        return false;\n    }","commit_id":"bdb90c879da9a8fa91b4a2ff1989a8d9689ca455","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Helper method for creating the .content folder of a sub-sitemap.<p>\n     *\n     * @param cms the current CMS context\n     * @param subSitemapFolder the sub-sitemap folder in which the .content folder should be created\n     *\n     * @throws CmsException if something goes wrong\n     */\n    private void createSitemapContentFolder(CmsObject cms, CmsResource subSitemapFolder) throws CmsException {\n\n        String sitePath = cms.getSitePath(subSitemapFolder);\n        String folderName = CmsStringUtil.joinPaths(sitePath, CmsADEManager.CONTENT_FOLDER_NAME + \"/\");\n        String sitemapConfigName = CmsStringUtil.joinPaths(folderName, CmsADEManager.CONFIG_FILE_NAME);\n        if (!cms.existsResource(folderName)) {\n            cms.createResource(\n                folderName,\n                OpenCms.getResourceManager().getResourceType(CmsADEManager.CONFIG_FOLDER_TYPE).getTypeId());\n        }\n        I_CmsResourceType configType = OpenCms.getResourceManager().getResourceType(CmsADEManager.CONFIG_TYPE);\n        if (cms.existsResource(sitemapConfigName)) {\n            CmsResource configFile = cms.readResource(sitemapConfigName);\n            if (configFile.getTypeId() != configType.getTypeId()) {\n                throw new CmsException(\n                    Messages.get().container(\n                        Messages.ERR_CREATING_SUB_SITEMAP_WRONG_CONFIG_FILE_TYPE_2,\n                        sitemapConfigName,\n                        CmsADEManager.CONFIG_TYPE));\n            }\n        } else {\n            cms.createResource(\n                sitemapConfigName,\n                OpenCms.getResourceManager().getResourceType(CmsADEManager.CONFIG_TYPE).getTypeId());\n        }\n\n    }","id":27763,"modified_method":"/**\n     * Helper method for creating the .content folder of a sub-sitemap.<p>\n     *\n     * @param cms the current CMS context\n     * @param subSitemapFolder the sub-sitemap folder in which the .content folder should be created\n     *\n     * @throws CmsException if something goes wrong\n     */\n    @SuppressWarnings(\"deprecation\")\n    private void createSitemapContentFolder(CmsObject cms, CmsResource subSitemapFolder) throws CmsException {\n\n        String sitePath = cms.getSitePath(subSitemapFolder);\n        String folderName = CmsStringUtil.joinPaths(sitePath, CmsADEManager.CONTENT_FOLDER_NAME + \"/\");\n        String sitemapConfigName = CmsStringUtil.joinPaths(folderName, CmsADEManager.CONFIG_FILE_NAME);\n        if (!cms.existsResource(folderName)) {\n            cms.createResource(\n                folderName,\n                OpenCms.getResourceManager().getResourceType(CmsADEManager.CONFIG_FOLDER_TYPE));\n        }\n        I_CmsResourceType configType = OpenCms.getResourceManager().getResourceType(CmsADEManager.CONFIG_TYPE);\n        if (cms.existsResource(sitemapConfigName)) {\n            CmsResource configFile = cms.readResource(sitemapConfigName);\n            if (configFile.getTypeId() != configType.getTypeId()) {\n                throw new CmsException(\n                    Messages.get().container(\n                        Messages.ERR_CREATING_SUB_SITEMAP_WRONG_CONFIG_FILE_TYPE_2,\n                        sitemapConfigName,\n                        CmsADEManager.CONFIG_TYPE));\n            }\n        } else {\n            cms.createResource(\n                sitemapConfigName,\n                OpenCms.getResourceManager().getResourceType(CmsADEManager.CONFIG_TYPE));\n        }\n\n    }","commit_id":"8d353b56b96bbdc8416901a8d7a302a1321d5875","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.ade.sitemap.shared.rpc.I_CmsSitemapService#createCategory(java.lang.String, org.opencms.util.CmsUUID, java.lang.String, java.lang.String)\n     */\n    public void createCategory(String entryPoint, CmsUUID id, String title, String name) throws CmsRpcException {\n\n        try {\n            name = OpenCms.getResourceManager().getFileTranslator().translateResource(name.trim().replace('/', '-'));\n            CmsObject cms = getCmsObject();\n            CmsCategoryService catService = CmsCategoryService.getInstance();\n\n            CmsCategory createdCategory = null;\n            if (id.isNullUUID()) {\n                String localRepositoryPath = CmsStringUtil.joinPaths(\n                    entryPoint,\n                    CmsCategoryService.getInstance().getRepositoryBaseFolderName(getCmsObject()));\n\n                // ensure category repository exists\n                if (!cms.existsResource(localRepositoryPath)) {\n                    tryUnlock(\n                        cms.createResource(\n                            localRepositoryPath,\n                            OpenCms.getResourceManager().getResourceType(\n                                CmsResourceTypeFolder.getStaticTypeName()).getTypeId()));\n                }\n                createdCategory = catService.createCategory(cms, null, name, title, \"\", localRepositoryPath);\n            } else {\n                CmsResource parentResource = cms.readResource(id);\n                CmsCategory parent = catService.getCategory(cms, parentResource);\n                createdCategory = catService.createCategory(\n                    cms,\n                    parent,\n                    name,\n                    title,\n                    \"\",\n                    cms.getRequestContext().removeSiteRoot(parentResource.getRootPath()));\n            }\n            tryUnlock(cms.readResource(createdCategory.getId()));\n        } catch (Exception e) {\n            error(e);\n        }\n    }","id":27764,"modified_method":"/**\n     * @see org.opencms.ade.sitemap.shared.rpc.I_CmsSitemapService#createCategory(java.lang.String, org.opencms.util.CmsUUID, java.lang.String, java.lang.String)\n     */\n    public void createCategory(String entryPoint, CmsUUID id, String title, String name) throws CmsRpcException {\n\n        try {\n            name = OpenCms.getResourceManager().getFileTranslator().translateResource(name.trim().replace('/', '-'));\n            CmsObject cms = getCmsObject();\n            CmsCategoryService catService = CmsCategoryService.getInstance();\n\n            CmsCategory createdCategory = null;\n            if (id.isNullUUID()) {\n                String localRepositoryPath = CmsStringUtil.joinPaths(\n                    entryPoint,\n                    CmsCategoryService.getInstance().getRepositoryBaseFolderName(getCmsObject()));\n\n                // ensure category repository exists\n                if (!cms.existsResource(localRepositoryPath)) {\n                    tryUnlock(\n                        cms.createResource(\n                            localRepositoryPath,\n                            OpenCms.getResourceManager().getResourceType(CmsResourceTypeFolder.getStaticTypeName())));\n                }\n                createdCategory = catService.createCategory(cms, null, name, title, \"\", localRepositoryPath);\n            } else {\n                CmsResource parentResource = cms.readResource(id);\n                CmsCategory parent = catService.getCategory(cms, parentResource);\n                createdCategory = catService.createCategory(\n                    cms,\n                    parent,\n                    name,\n                    title,\n                    \"\",\n                    cms.getRequestContext().removeSiteRoot(parentResource.getRootPath()));\n            }\n            tryUnlock(cms.readResource(createdCategory.getId()));\n        } catch (Exception e) {\n            error(e);\n        }\n    }","commit_id":"8d353b56b96bbdc8416901a8d7a302a1321d5875","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.ade.sitemap.shared.rpc.I_CmsSitemapService#createNewGalleryFolder(java.lang.String, java.lang.String, int)\n     */\n    public CmsGalleryFolderEntry createNewGalleryFolder(String parentFolder, String title, int folderTypeId)\n    throws CmsRpcException {\n\n        CmsObject cms = getCmsObject();\n        CmsGalleryFolderEntry folderEntry = null;\n        try {\n            if (!cms.existsResource(parentFolder, CmsResourceFilter.IGNORE_EXPIRATION)) {\n                CmsResource parent = cms.createResource(parentFolder, CmsResourceTypeFolder.getStaticTypeId());\n                tryUnlock(parent);\n            }\n            String folderName = OpenCms.getResourceManager().getFileTranslator().translateResource(title);\n\n            folderName = OpenCms.getResourceManager().getNameGenerator().getUniqueFileName(\n                cms,\n                parentFolder,\n                folderName);\n            String folderPath = CmsStringUtil.joinPaths(parentFolder, folderName);\n\n            CmsResource galleryFolder = cms.createResource(\n                folderPath,\n                folderTypeId,\n                null,\n                Collections.singletonList(new CmsProperty(CmsPropertyDefinition.PROPERTY_TITLE, title, null)));\n            folderEntry = readGalleryFolderEntry(\n                galleryFolder,\n                OpenCms.getResourceManager().getResourceType(galleryFolder).getTypeName());\n            tryUnlock(galleryFolder);\n        } catch (CmsException e) {\n            error(e);\n        }\n        return folderEntry;\n    }","id":27765,"modified_method":"/**\n     * @see org.opencms.ade.sitemap.shared.rpc.I_CmsSitemapService#createNewGalleryFolder(java.lang.String, java.lang.String, int)\n     */\n    public CmsGalleryFolderEntry createNewGalleryFolder(String parentFolder, String title, int folderTypeId)\n    throws CmsRpcException {\n\n        CmsObject cms = getCmsObject();\n        CmsGalleryFolderEntry folderEntry = null;\n        try {\n            if (!cms.existsResource(parentFolder, CmsResourceFilter.IGNORE_EXPIRATION)) {\n                CmsResource parent = cms.createResource(\n                    parentFolder,\n                    OpenCms.getResourceManager().getResourceType(CmsResourceTypeFolder.getStaticTypeName()));\n                tryUnlock(parent);\n            }\n            String folderName = OpenCms.getResourceManager().getFileTranslator().translateResource(title);\n\n            folderName = OpenCms.getResourceManager().getNameGenerator().getUniqueFileName(\n                cms,\n                parentFolder,\n                folderName);\n            String folderPath = CmsStringUtil.joinPaths(parentFolder, folderName);\n\n            @SuppressWarnings(\"deprecation\")\n            CmsResource galleryFolder = cms.createResource(\n                folderPath,\n                folderTypeId,\n                null,\n                Collections.singletonList(new CmsProperty(CmsPropertyDefinition.PROPERTY_TITLE, title, null)));\n            folderEntry = readGalleryFolderEntry(\n                galleryFolder,\n                OpenCms.getResourceManager().getResourceType(galleryFolder).getTypeName());\n            tryUnlock(galleryFolder);\n        } catch (CmsException e) {\n            error(e);\n        }\n        return folderEntry;\n    }","commit_id":"8d353b56b96bbdc8416901a8d7a302a1321d5875","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the galleries of the given sub site for the requested gallery type.<p>\n     *\n     * @param entryPointUri the sub site entry point\n     * @param galleryType the gallery type\n     * @param subSitePaths the sub site paths\n     *\n     * @return the gallery folder entries\n     *\n     * @throws CmsException if reading the resources fails\n     */\n    private List<CmsGalleryFolderEntry> getGalleriesForType(\n        String entryPointUri,\n        CmsGalleryType galleryType,\n        List<String> subSitePaths)\n    throws CmsException {\n\n        List<CmsGalleryFolderEntry> galleries = new ArrayList<CmsGalleryFolderEntry>();\n        List<CmsResource> galleryFolders = getCmsObject().readResources(\n            entryPointUri,\n            CmsResourceFilter.ONLY_VISIBLE_NO_DELETED.addRequireType(galleryType.getTypeId()));\n        for (CmsResource folder : galleryFolders) {\n            try {\n                if (!isInSubsite(subSitePaths, folder.getRootPath())) {\n                    galleries.add(readGalleryFolderEntry(folder, galleryType.getTypeName()));\n                }\n            } catch (CmsException ex) {\n                log(ex.getLocalizedMessage(), ex);\n            }\n        }\n        // create a tree structure\n        Collections.sort(galleries, new Comparator<CmsGalleryFolderEntry>() {\n\n            public int compare(CmsGalleryFolderEntry o1, CmsGalleryFolderEntry o2) {\n\n                return o1.getSitePath().compareTo(o2.getSitePath());\n            }\n        });\n        List<CmsGalleryFolderEntry> galleryTree = new ArrayList<CmsGalleryFolderEntry>();\n        for (int i = 0; i < galleries.size(); i++) {\n            boolean isSubGallery = false;\n            if (i > 0) {\n                for (int j = i - 1; j >= 0; j--) {\n                    if (galleries.get(i).getSitePath().startsWith(galleries.get(j).getSitePath())) {\n                        galleries.get(j).addSubGallery(galleries.get(i));\n                        isSubGallery = true;\n                        break;\n                    }\n                }\n            }\n            if (!isSubGallery) {\n                galleryTree.add(galleries.get(i));\n            }\n        }\n        return galleryTree;\n    }","id":27766,"modified_method":"/**\n     * Returns the galleries of the given sub site for the requested gallery type.<p>\n     *\n     * @param entryPointUri the sub site entry point\n     * @param galleryType the gallery type\n     * @param subSitePaths the sub site paths\n     *\n     * @return the gallery folder entries\n     *\n     * @throws CmsException if reading the resources fails\n     */\n    private List<CmsGalleryFolderEntry> getGalleriesForType(\n        String entryPointUri,\n        CmsGalleryType galleryType,\n        List<String> subSitePaths)\n    throws CmsException {\n\n        List<CmsGalleryFolderEntry> galleries = new ArrayList<CmsGalleryFolderEntry>();\n        @SuppressWarnings(\"deprecation\")\n        List<CmsResource> galleryFolders = getCmsObject().readResources(\n            entryPointUri,\n            CmsResourceFilter.ONLY_VISIBLE_NO_DELETED.addRequireType(galleryType.getTypeId()));\n        for (CmsResource folder : galleryFolders) {\n            try {\n                if (!isInSubsite(subSitePaths, folder.getRootPath())) {\n                    galleries.add(readGalleryFolderEntry(folder, galleryType.getTypeName()));\n                }\n            } catch (CmsException ex) {\n                log(ex.getLocalizedMessage(), ex);\n            }\n        }\n        // create a tree structure\n        Collections.sort(galleries, new Comparator<CmsGalleryFolderEntry>() {\n\n            public int compare(CmsGalleryFolderEntry o1, CmsGalleryFolderEntry o2) {\n\n                return o1.getSitePath().compareTo(o2.getSitePath());\n            }\n        });\n        List<CmsGalleryFolderEntry> galleryTree = new ArrayList<CmsGalleryFolderEntry>();\n        for (int i = 0; i < galleries.size(); i++) {\n            boolean isSubGallery = false;\n            if (i > 0) {\n                for (int j = i - 1; j >= 0; j--) {\n                    if (galleries.get(i).getSitePath().startsWith(galleries.get(j).getSitePath())) {\n                        galleries.get(j).addSubGallery(galleries.get(i));\n                        isSubGallery = true;\n                        break;\n                    }\n                }\n            }\n            if (!isSubGallery) {\n                galleryTree.add(galleries.get(i));\n            }\n        }\n        return galleryTree;\n    }","commit_id":"8d353b56b96bbdc8416901a8d7a302a1321d5875","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.file.types.A_CmsResourceType#initConfiguration(java.lang.String, java.lang.String, String)\n     */\n    @Override\n    public void initConfiguration(String name, String id, String className) throws CmsConfigurationException {\n\n        if (!RESOURCE_TYPE_NAME.equals(name)) {\n            // default resource type MUST have default name\n            throw new CmsConfigurationException(Messages.get().container(\n                Messages.ERR_INVALID_RESTYPE_CONFIG_NAME_3,\n                this.getClass().getName(),\n                RESOURCE_TYPE_NAME,\n                name));\n        }\n        super.initConfiguration(RESOURCE_TYPE_NAME, id, className);\n    }","id":27767,"modified_method":"/**\n     * @see org.opencms.file.types.A_CmsResourceType#initConfiguration(java.lang.String, java.lang.String, String)\n     */\n    @Override\n    public void initConfiguration(String name, String id, String className) throws CmsConfigurationException {\n\n        if (!RESOURCE_TYPE_NAME.equals(name)) {\n            // default resource type MUST have default name\n            throw new CmsConfigurationException(Messages.get().container(\n                Messages.ERR_INVALID_RESTYPE_CONFIG_NAME_3,\n                this.getClass().getName(),\n                RESOURCE_TYPE_NAME,\n                name));\n        }\n        int typeId = Integer.valueOf(id).intValue();\n        if ((containerPageTypeId > 0) && (containerPageTypeId != typeId)) {\n            throw new CmsConfigurationException(Messages.get().container(\n                Messages.ERR_RESOURCE_TYPE_ALREADY_CONFIGURED_3,\n                this.getClass().getName(),\n                RESOURCE_TYPE_NAME,\n                name));\n        }\n        super.initConfiguration(RESOURCE_TYPE_NAME, id, className);\n    }","commit_id":"92ba7d7a3d3ed99fb9081f8576f589db83ff5cb6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the sitemap type id, but returns -1 instead of throwing an exception when an error happens.<p>\n     * \n     * @return the sitemap type id \n     */\n    public static int getContainerPageTypeIdSafely() {\n\n        try {\n            return getContainerPageTypeId();\n        } catch (CmsLoaderException e) {\n            LOG.error(e.getLocalizedMessage(), e);\n            return -1;\n        }\n    }","id":27768,"modified_method":"/**\n     * Returns the container-page type id, but returns -1 instead of throwing an exception when an error happens.<p>\n     * \n     * @return the container-page type id \n     */\n    public static int getContainerPageTypeIdSafely() {\n\n        try {\n            return getContainerPageTypeId();\n        } catch (CmsLoaderException e) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(e.getLocalizedMessage(), e);\n            }\n            return -1;\n        }\n    }","commit_id":"92ba7d7a3d3ed99fb9081f8576f589db83ff5cb6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the sitemap type id.<p>\n     * \n     * @return the sitemap type id\n     * \n     * @throws CmsLoaderException if the type is not configured\n     */\n    public static int getContainerPageTypeId() throws CmsLoaderException {\n\n        if (containerPageTypeId == 0) {\n            containerPageTypeId = OpenCms.getResourceManager().getResourceType(getStaticTypeName()).getTypeId();\n        }\n        return containerPageTypeId;\n    }","id":27769,"modified_method":"/**\n     * Returns the container-page type id.<p>\n     * \n     * @return the container-page type id\n     * \n     * @throws CmsLoaderException if the type is not configured\n     */\n    public static int getContainerPageTypeId() throws CmsLoaderException {\n\n        if (containerPageTypeId == 0) {\n            I_CmsResourceType resType = OpenCms.getResourceManager().getResourceType(getStaticTypeName());\n            if (resType != null) {\n                containerPageTypeId = resType.getTypeId();\n            }\n        }\n        return containerPageTypeId;\n    }","commit_id":"92ba7d7a3d3ed99fb9081f8576f589db83ff5cb6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\r\n     * Helper method for creating the .content folder of a sub-sitemap.<p>\r\n     *\r\n     * @param cms the current CMS context\r\n     * @param subSitemapFolder the sub-sitemap folder in which the .content folder should be created\r\n     *\r\n     * @return the created folder\r\n     *\r\n     * @throws CmsException if something goes wrong\r\n     * @throws CmsLoaderException\r\n     */\r\n    private CmsResource createSitemapContentFolder(CmsObject cms, CmsResource subSitemapFolder)\r\n    throws CmsException, CmsLoaderException {\r\n\r\n        CmsResource configFile = null;\r\n        String sitePath = cms.getSitePath(subSitemapFolder);\r\n        String folderName = CmsStringUtil.joinPaths(sitePath, CmsADEManager.CONTENT_FOLDER_NAME + \"/\");\r\n        String sitemapConfigName = CmsStringUtil.joinPaths(folderName, CmsADEManager.CONFIG_FILE_NAME);\r\n        if (!cms.existsResource(folderName)) {\r\n            cms.createResource(\r\n                folderName,\r\n                OpenCms.getResourceManager().getResourceType(CmsADEManager.CONFIG_FOLDER_TYPE).getTypeId());\r\n        }\r\n        I_CmsResourceType configType = OpenCms.getResourceManager().getResourceType(CmsADEManager.CONFIG_TYPE);\r\n        if (cms.existsResource(sitemapConfigName)) {\r\n            configFile = cms.readResource(sitemapConfigName);\r\n            if (configFile.getTypeId() != configType.getTypeId()) {\r\n                throw new CmsException(\r\n                    Messages.get().container(\r\n                        Messages.ERR_CREATING_SUB_SITEMAP_WRONG_CONFIG_FILE_TYPE_2,\r\n                        sitemapConfigName,\r\n                        CmsADEManager.CONFIG_TYPE));\r\n            }\r\n        } else {\r\n            configFile = cms.createResource(\r\n                sitemapConfigName,\r\n                OpenCms.getResourceManager().getResourceType(CmsADEManager.CONFIG_TYPE).getTypeId());\r\n        }\r\n        return configFile;\r\n    }","id":27770,"modified_method":"/**\n     * Helper method for creating the .content folder of a sub-sitemap.<p>\n     *\n     * @param cms the current CMS context\n     * @param subSitemapFolder the sub-sitemap folder in which the .content folder should be created\n     *\n     * @return the created folder\n     *\n     * @throws CmsException if something goes wrong\n     * @throws CmsLoaderException if something goes wrong\n     */\n    private CmsResource createSitemapContentFolder(CmsObject cms, CmsResource subSitemapFolder)\n    throws CmsException, CmsLoaderException {\n\n        CmsResource configFile = null;\n        String sitePath = cms.getSitePath(subSitemapFolder);\n        String folderName = CmsStringUtil.joinPaths(sitePath, CmsADEManager.CONTENT_FOLDER_NAME + \"/\");\n        String sitemapConfigName = CmsStringUtil.joinPaths(folderName, CmsADEManager.CONFIG_FILE_NAME);\n        if (!cms.existsResource(folderName)) {\n            cms.createResource(\n                folderName,\n                OpenCms.getResourceManager().getResourceType(CmsADEManager.CONFIG_FOLDER_TYPE));\n        }\n        I_CmsResourceType configType = OpenCms.getResourceManager().getResourceType(CmsADEManager.CONFIG_TYPE);\n        if (cms.existsResource(sitemapConfigName)) {\n            configFile = cms.readResource(sitemapConfigName);\n            if (OpenCms.getResourceManager().getResourceType(configFile).getTypeName().equals(\n                configType.getTypeName())) {\n                throw new CmsException(\n                    Messages.get().container(\n                        Messages.ERR_CREATING_SUB_SITEMAP_WRONG_CONFIG_FILE_TYPE_2,\n                        sitemapConfigName,\n                        CmsADEManager.CONFIG_TYPE));\n            }\n        } else {\n            configFile = cms.createResource(\n                sitemapConfigName,\n                OpenCms.getResourceManager().getResourceType(CmsADEManager.CONFIG_TYPE));\n        }\n        return configFile;\n    }","commit_id":"11ec8c5b874bfc3302063b87089c9afd01964ed4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\r\n     * @see org.opencms.workplace.CmsWidgetDialog#actionCommit()\r\n     */\r\n    @Override\r\n    public void actionCommit() {\r\n\r\n        try {\r\n\r\n            // validate the dialog form\r\n            validateDialog();\r\n\r\n            // create a root site clone of the current CMS object.\r\n            CmsObject cms = OpenCms.initCmsObject(getCms());\r\n            cms.getRequestContext().setSiteRoot(\"\");\r\n\r\n            // create the site root path\r\n            String siteRoot = \"/sites\".concat(m_sitename);\r\n            m_site.setSiteRoot(siteRoot);\r\n\r\n            CmsResource siteRootResource = null;\r\n            // check if the site root already exists\r\n            try {\r\n                // take the existing site and do not perform any OU related actions\r\n                siteRootResource = cms.readResource(siteRoot);\r\n            } catch (CmsVfsResourceNotFoundException e) {\r\n                // not create a new site folder and the according OU if option is checked checked\r\n                int typeId = OpenCms.getResourceManager().getResourceType(\r\n                    CmsResourceTypeFolderSubSitemap.TYPE_SUBSITEMAP).getTypeId();\r\n                siteRootResource = cms.createResource(siteRoot, typeId);\r\n                String sitePath = cms.getSitePath(siteRootResource);\r\n                String contentFolder = CmsStringUtil.joinPaths(sitePath, CmsADEManager.CONTENT_FOLDER_NAME + \"/\");\r\n                CmsResource config = createSitemapContentFolder(cms, siteRootResource);\r\n                if (config != null) {\r\n                    CmsResource newFolder = cms.createResource(\r\n                        contentFolder + NEW,\r\n                        CmsResourceTypeFolder.RESOURCE_TYPE_ID);\r\n                    int containerId = OpenCms.getResourceManager().getResourceType(\r\n                        org.opencms.file.types.CmsResourceTypeXmlContainerPage.RESOURCE_TYPE_NAME).getTypeId();\r\n                    CmsResource modelPage = cms.createResource(newFolder.getRootPath() + BLANK_HTML, containerId);\r\n                    String defTitle = Messages.get().container(\r\n                        Messages.GUI_DEFAULT_MODEL_TITLE_1,\r\n                        m_site.getTitle()).getKey();\r\n                    String defDes = Messages.get().container(\r\n                        Messages.GUI_DEFAULT_MODEL_DESCRIPTION_1,\r\n                        m_site.getTitle()).getKey();\r\n                    CmsProperty prop = new CmsProperty(CmsPropertyDefinition.PROPERTY_TITLE, defTitle, defTitle);\r\n                    cms.writePropertyObject(modelPage.getRootPath(), prop);\r\n                    prop = new CmsProperty(CmsPropertyDefinition.PROPERTY_DESCRIPTION, defDes, defDes);\r\n                    cms.writePropertyObject(modelPage.getRootPath(), prop);\r\n                    CmsFile file = cms.readFile(config);\r\n                    CmsXmlContent con = CmsXmlContentFactory.unmarshal(cms, file);\r\n                    con.addValue(cms, MODEL_PAGE, Locale.ENGLISH, 0);\r\n                    I_CmsXmlContentValue val = con.getValue(MODEL_PAGE_PAGE, Locale.ENGLISH);\r\n                    val.setStringValue(cms, modelPage.getRootPath());\r\n                    file.setContents(con.marshal());\r\n                    cms.writeFile(file);\r\n\r\n                }\r\n\r\n                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getTemplate())) {\r\n                    CmsProperty prop = new CmsProperty(\r\n                        CmsPropertyDefinition.PROPERTY_TEMPLATE,\r\n                        getTemplate(),\r\n                        getTemplate());\r\n                    cms.writePropertyObject(siteRoot, prop);\r\n                }\r\n                OpenCms.getPublishManager().publishResource(\r\n                    cms,\r\n                    siteRoot,\r\n                    false,\r\n                    new CmsLogReport(cms.getRequestContext().getLocale(), getClass()));\r\n                if (m_createou) {\r\n                    OpenCms.getOrgUnitManager().createOrganizationalUnit(\r\n                        cms,\r\n                        \"/\" + siteRootResource.getName(),\r\n                        m_ouDescription.replace(\"%(site)\", m_site.getTitle() + \" [\" + m_site.getSiteRoot() + \"]\"),\r\n                        0,\r\n                        siteRootResource.getRootPath());\r\n                }\r\n            }\r\n\r\n            // update the site manager state\r\n            CmsSite newSite = m_site.toCmsSite();\r\n            OpenCms.getSiteManager().updateSite(getCms(), m_site.getOriginalSite(), newSite);\r\n            // update the workplace server if the changed site was the workplace server\r\n            if ((m_site.getOriginalSite() != null)\r\n                && m_site.getOriginalSite().getUrl().equals(OpenCms.getSiteManager().getWorkplaceServer())) {\r\n                OpenCms.getSiteManager().updateGeneralSettings(\r\n                    getCms(),\r\n                    OpenCms.getSiteManager().getDefaultUri(),\r\n                    newSite.getUrl(),\r\n                    OpenCms.getSiteManager().getSharedFolder());\r\n            }\r\n            // write the system configuration\r\n            OpenCms.writeConfiguration(CmsSystemConfiguration.class);\r\n            // refresh the list of sites\r\n            Map<?, ?> objects = (Map<?, ?>)getSettings().getListObject();\r\n            if (objects != null) {\r\n                objects.remove(CmsSitesOverviewList.class.getName());\r\n            }\r\n        } catch (Exception e) {\r\n            addCommitError(e);\r\n        }\r\n    }","id":27771,"modified_method":"/**\n     * @see org.opencms.workplace.CmsWidgetDialog#actionCommit()\n     */\n    @Override\n    public void actionCommit() {\n\n        try {\n\n            // validate the dialog form\n            validateDialog();\n\n            // create a root site clone of the current CMS object.\n            CmsObject cms = OpenCms.initCmsObject(getCms());\n            cms.getRequestContext().setSiteRoot(\"\");\n\n            // create the site root path\n            String siteRoot = \"/sites\".concat(m_sitename);\n            m_site.setSiteRoot(siteRoot);\n\n            CmsResource siteRootResource = null;\n            String sitePath = null;\n            // check if the site root already exists\n            try {\n                // take the existing site and do not perform any OU related actions\n                siteRootResource = cms.readResource(siteRoot);\n                sitePath = cms.getSitePath(siteRootResource);\n            } catch (@SuppressWarnings(\"unused\") CmsVfsResourceNotFoundException e) {\n                // not create a new site folder and the according OU if option is checked checked\n                I_CmsResourceType type = OpenCms.getResourceManager().getResourceType(\n                    CmsResourceTypeFolderSubSitemap.TYPE_SUBSITEMAP);\n                siteRootResource = cms.createResource(siteRoot, type);\n                sitePath = cms.getSitePath(siteRootResource);\n            }\n\n            // add template  property\n            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getTemplate())) {\n                CmsProperty prop = new CmsProperty(\n                    CmsPropertyDefinition.PROPERTY_TEMPLATE,\n                    getTemplate(),\n                    getTemplate());\n                cms.writePropertyObject(siteRoot, prop);\n            }\n            OpenCms.getPublishManager().publishResource(\n                cms,\n                siteRoot,\n                false,\n                new CmsLogReport(cms.getRequestContext().getLocale(), getClass()));\n\n            // create OU\n            if (m_createou) {\n                OpenCms.getOrgUnitManager().createOrganizationalUnit(\n                    cms,\n                    \"/\" + siteRootResource.getName(),\n                    m_ouDescription.replace(\"%(site)\", m_site.getTitle() + \" [\" + m_site.getSiteRoot() + \"]\"),\n                    0,\n                    siteRootResource.getRootPath());\n            }\n\n            // create sitemap configuration\n            String contentFolder = CmsStringUtil.joinPaths(sitePath, CmsADEManager.CONTENT_FOLDER_NAME + \"/\");\n            String sitemapConfig = CmsStringUtil.joinPaths(contentFolder, CmsADEManager.CONFIG_FILE_NAME);\n            if (!cms.existsResource(sitemapConfig)) {\n                CmsResource config = createSitemapContentFolder(cms, siteRootResource);\n                if (config != null) {\n                    try {\n                        CmsResource newFolder = cms.createResource(\n                            contentFolder + NEW,\n                            OpenCms.getResourceManager().getResourceType(CmsResourceTypeFolder.RESOURCE_TYPE_NAME));\n                        I_CmsResourceType containerType = OpenCms.getResourceManager().getResourceType(\n                            org.opencms.file.types.CmsResourceTypeXmlContainerPage.RESOURCE_TYPE_NAME);\n                        CmsResource modelPage = cms.createResource(newFolder.getRootPath() + BLANK_HTML, containerType);\n                        String defTitle = Messages.get().container(\n                            Messages.GUI_DEFAULT_MODEL_TITLE_1,\n                            m_site.getTitle()).getKey();\n                        String defDes = Messages.get().container(\n                            Messages.GUI_DEFAULT_MODEL_DESCRIPTION_1,\n                            m_site.getTitle()).getKey();\n                        CmsProperty prop = new CmsProperty(CmsPropertyDefinition.PROPERTY_TITLE, defTitle, defTitle);\n                        cms.writePropertyObject(modelPage.getRootPath(), prop);\n                        prop = new CmsProperty(CmsPropertyDefinition.PROPERTY_DESCRIPTION, defDes, defDes);\n                        cms.writePropertyObject(modelPage.getRootPath(), prop);\n                        CmsFile file = cms.readFile(config);\n                        CmsXmlContent con = CmsXmlContentFactory.unmarshal(cms, file);\n                        con.addValue(cms, MODEL_PAGE, Locale.ENGLISH, 0);\n                        I_CmsXmlContentValue val = con.getValue(MODEL_PAGE_PAGE, Locale.ENGLISH);\n                        val.setStringValue(cms, modelPage.getRootPath());\n                        file.setContents(con.marshal());\n                        cms.writeFile(file);\n                    } catch (CmsException e) {\n                        addCommitError(e);\n                    }\n                }\n            }\n\n            // update the site manager state\n            CmsSite newSite = m_site.toCmsSite();\n            OpenCms.getSiteManager().updateSite(getCms(), m_site.getOriginalSite(), newSite);\n            // update the workplace server if the changed site was the workplace server\n            if ((m_site.getOriginalSite() != null)\n                && m_site.getOriginalSite().getUrl().equals(OpenCms.getSiteManager().getWorkplaceServer())) {\n                OpenCms.getSiteManager().updateGeneralSettings(\n                    getCms(),\n                    OpenCms.getSiteManager().getDefaultUri(),\n                    newSite.getUrl(),\n                    OpenCms.getSiteManager().getSharedFolder());\n            }\n            // write the system configuration\n            OpenCms.writeConfiguration(CmsSystemConfiguration.class);\n            // refresh the list of sites\n            Map<?, ?> objects = (Map<?, ?>)getSettings().getListObject();\n            if (objects != null) {\n                objects.remove(CmsSitesOverviewList.class.getName());\n            }\n        } catch (Exception e) {\n            addCommitError(e);\n        }\n    }","commit_id":"11ec8c5b874bfc3302063b87089c9afd01964ed4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Starts a rebuild of the whole index.\n     * \n     * @param wiki\n     * @param context\n     * @return Number of documents scheduled for indexing. -1 in case of errors\n     * @deprecated use rebuildIndex without context values\n     */\n    public int rebuildIndex(com.xpn.xwiki.api.XWiki wiki, Context context)\n    {\n        int nbDocuments = -1;\n        if (wiki.hasAdminRights()) {\n            nbDocuments = getProtectedPlugin().rebuildIndex(context.getContext());\n        }\n        return nbDocuments;\n    }","id":27772,"modified_method":"/**\n     * Starts a rebuild of the whole index.\n     * \n     * @param wiki\n     * @param context\n     * @return Number of documents scheduled for indexing. -1 in case of errors\n     * @deprecated use rebuildIndex without context values\n     */\n    public int rebuildIndex(com.xpn.xwiki.api.XWiki wiki, Context context)\n    {\n        if (wiki.hasAdminRights()) {\n            return getProtectedPlugin().rebuildIndex(context.getContext());\n        }\n        return REBUILD_NOT_ALLOWED;\n    }","commit_id":"60a1caa8c531e02651ef782c3831e4bb231a50cd","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Starts a rebuild of the whole index.\n     * \n     * @return Number of documents scheduled for indexing. -1 in case of errors\n     */\n    public int rebuildIndex()\n    {\n        int nbDocuments = -1;\n        if (hasAdminRights()) {\n            nbDocuments = getProtectedPlugin().rebuildIndex(context);\n        }\n        return nbDocuments;\n    }","id":27773,"modified_method":"/**\n     * Starts a rebuild of the whole index.\n     * \n     * @return Number of documents scheduled for indexing. -1 in case of errors\n     */\n    public int rebuildIndex()\n    {\n        if (hasAdminRights()) {\n            return getProtectedPlugin().rebuildIndex(context);\n        }\n        return REBUILD_NOT_ALLOWED;\n    }","commit_id":"60a1caa8c531e02651ef782c3831e4bb231a50cd","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Starts a rebuild of the whole index.\n     * \n     * @return Number of documents scheduled for indexing. -1 in case of errors\n     */\n    public int rebuildIndex()\n    {\n        int nbDocuments = -1;\n        if (hasAdminRights()) {\n            nbDocuments = getProtectedPlugin().rebuildIndex(context);\n        }\n        return nbDocuments;\n    }","id":27774,"modified_method":"/**\n     * Starts a rebuild of the whole index.\n     * \n     * @return Number of documents scheduled for indexing. -1 in case of errors\n     */\n    public int rebuildIndex()\n    {\n        if (hasAdminRights()) {\n            return getProtectedPlugin().rebuildIndex(context);\n        }\n        return REBUILD_NOT_ALLOWED;\n    }","commit_id":"7583c690c53b90e209dd3169dba22763a81df3d0","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Starts a rebuild of the whole index.\n     * \n     * @param wiki\n     * @param context\n     * @return Number of documents scheduled for indexing. -1 in case of errors\n     * @deprecated use rebuildIndex without context values\n     */\n    public int rebuildIndex(com.xpn.xwiki.api.XWiki wiki, Context context)\n    {\n        int nbDocuments = -1;\n        if (wiki.hasAdminRights()) {\n            nbDocuments = getProtectedPlugin().rebuildIndex(context.getContext());\n        }\n        return nbDocuments;\n    }","id":27775,"modified_method":"/**\n     * Starts a rebuild of the whole index.\n     * \n     * @param wiki\n     * @param context\n     * @return Number of documents scheduled for indexing. -1 in case of errors\n     * @deprecated use rebuildIndex without context values\n     */\n    public int rebuildIndex(com.xpn.xwiki.api.XWiki wiki, Context context)\n    {\n        if (wiki.hasAdminRights()) {\n            return getProtectedPlugin().rebuildIndex(context.getContext());\n        }\n        return REBUILD_NOT_ALLOWED;\n    }","commit_id":"7583c690c53b90e209dd3169dba22763a81df3d0","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * First empties the index, then fetches all Documents, their translations and their attachments\n     * for re-addition to the index.\n     *\n     * @return total number of documentes and attachments successfully added to the indexer queue,\n     *         -1 when errors occured.\n     * @todo TODO: give more detailed results\n     */\n    public int rebuildIndex(com.xpn.xwiki.api.XWiki wiki, XWikiContext context)\n    {\n        indexUpdater.cleanIndex();\n        int retval = 0;\n        Collection wikiServers;\n        com.xpn.xwiki.XWiki xwiki = context.getWiki();\n        if (wiki.isVirtual()) {\n            wikiServers = findWikiServers(wiki, context);\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"found \" + wikiServers.size() + \" virtual wikis:\");\n                for (Iterator iter = wikiServers.iterator(); iter.hasNext();) {\n                    LOG.debug(iter.next());\n                }\n            }\n        } else {\n            // no virtual wiki configuration, just index the wiki the context\n            // belongs to\n            wikiServers = new ArrayList();\n            ((ArrayList) wikiServers).add(context.getDatabase());\n        }\n        // Iterate all found virtual wikis\n        for (Iterator iter = wikiServers.iterator(); iter.hasNext();) {\n            int wikiResult = indexWiki(xwiki, (String) iter.next());\n            if (retval != -1) {\n                retval += wikiResult;\n            }\n        }\n        return retval;\n    }","id":27776,"modified_method":"public IndexRebuilder(IndexUpdater indexUpdater)\n    {\n        this.indexUpdater = indexUpdater;\n    }","commit_id":"f7d590914136492aec3ada436f04b9b5688e03fb","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public synchronized int rebuildIndex(com.xpn.xwiki.api.XWiki wiki, XWikiContext context)\n    {\n        return indexRebuilder.rebuildIndex(wiki, context);\n    }","id":27777,"modified_method":"/**\n     * Trigger a rebuild of the whole Lucene index.\n     *\n     * @return Number of documents scheduled for indexing. -1 in case of errors\n     */\n    public synchronized int rebuildIndex(XWiki wiki, XWikiContext context)\n    {\n        return this.indexRebuilder.rebuildIndex(wiki, context);\n    }","commit_id":"f7d590914136492aec3ada436f04b9b5688e03fb","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public synchronized void init(XWikiContext context)\n    {\n        super.init(context);\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"lucene plugin: in init\");\n        }\n        config = context.getWiki().getConfig();\n        try {\n            analyzer = (Analyzer) Class.forName(config.getProperty(PROP_ANALYZER, DEFAULT_ANALYZER))\n                .newInstance();\n        } catch (Exception e) {\n            e.printStackTrace();\n            LOG.error(\"error instantiating analyzer : \", e);\n            LOG.warn(\"using default analyzer class: \" + DEFAULT_ANALYZER);\n            try {\n                analyzer = (Analyzer) Class.forName(DEFAULT_ANALYZER).newInstance();\n            } catch (Exception e1) {\n                e1.printStackTrace();\n                throw new RuntimeException(\"instantiation of default analyzer \" + DEFAULT_ANALYZER\n                    + \" failed\", e1);\n            }\n        }\n        this.indexDirs = config.getProperty(PROP_INDEX_DIR);\n        openSearchers();\n        indexUpdater = new IndexUpdater();\n        indexUpdater.setAnalyzer(analyzer);\n        indexUpdater.init(config, this, context.getWiki());\n        indexUpdaterThread = new Thread(indexUpdater);\n        indexUpdaterThread.start();\n        indexRebuilder = new IndexRebuilder();\n        indexRebuilder.setIndexUpdater(indexUpdater);\n\n        docChangeRule = new DocChangeRule(indexUpdater);\n        xwikiActionRule = new XWikiActionRule(indexUpdater);\n\n        context.getWiki().getNotificationManager().addGeneralRule(docChangeRule);\n        context.getWiki().getNotificationManager().addGeneralRule(xwikiActionRule);\n        LOG.info(\"lucene plugin initialized.\");\n    }","id":27778,"modified_method":"public synchronized void init(XWikiContext context)\n    {\n        super.init(context);\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"lucene plugin: in init\");\n        }\n        config = context.getWiki().getConfig();\n        try {\n            analyzer = (Analyzer) Class.forName(config.getProperty(PROP_ANALYZER, DEFAULT_ANALYZER))\n                .newInstance();\n        } catch (Exception e) {\n            e.printStackTrace();\n            LOG.error(\"error instantiating analyzer : \", e);\n            LOG.warn(\"using default analyzer class: \" + DEFAULT_ANALYZER);\n            try {\n                analyzer = (Analyzer) Class.forName(DEFAULT_ANALYZER).newInstance();\n            } catch (Exception e1) {\n                e1.printStackTrace();\n                throw new RuntimeException(\"instantiation of default analyzer \" + DEFAULT_ANALYZER\n                    + \" failed\", e1);\n            }\n        }\n        this.indexDirs = config.getProperty(PROP_INDEX_DIR);\n        openSearchers();\n        indexUpdater = new IndexUpdater();\n        indexUpdater.setAnalyzer(analyzer);\n        indexUpdater.init(config, this, context.getWiki());\n        indexUpdaterThread = new Thread(indexUpdater);\n        indexUpdaterThread.start();\n        indexRebuilder = new IndexRebuilder(indexUpdater);\n\n        docChangeRule = new DocChangeRule(indexUpdater);\n        xwikiActionRule = new XWikiActionRule(indexUpdater);\n\n        context.getWiki().getNotificationManager().addGeneralRule(docChangeRule);\n        context.getWiki().getNotificationManager().addGeneralRule(xwikiActionRule);\n        LOG.info(\"lucene plugin initialized.\");\n    }","commit_id":"f7d590914136492aec3ada436f04b9b5688e03fb","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Starts a rebuild of the whole index.\n     *\n     * @return Number of documents scheduled for indexing. -1 in case of errors\n     */\n    public int rebuildIndex(com.xpn.xwiki.api.XWiki wiki, Context context)\n    {\n        if (wiki.hasAdminRights()) {\n            return getPlugin().rebuildIndex(wiki, context.getContext());\n        }\n        LOG.info(\"access denied to rebuildIndex: insufficient rights\");\n        return -1;\n    }","id":27779,"modified_method":"/**\n     * Trigger a rebuild of the whole Lucene index.\n     *\n     * @return Number of documents scheduled for indexing. -1 in case of errors\n     */\n    public int rebuildIndex(XWiki wiki, Context context)\n    {\n        int nbDocuments = -1;\n\n        if (wiki.hasAdminRights()) {\n            nbDocuments = getPlugin().rebuildIndex(wiki, context.getContext());\n        } else {\n            LOG.error(\"Access denied for rebuilding the Lucene index. Admin rights are required.\");\n        }\n\n        return nbDocuments;\n    }","commit_id":"f7d590914136492aec3ada436f04b9b5688e03fb","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n\t * Optimized implementation: first checks if a range index is defined\n\t * on the nodes in the left argument. If that fails, check if we can use\n\t * the fulltext index to speed up the search. Otherwise, fall back to\n\t * {@link #nodeSetCompare(NodeSet, Sequence)}.\n\t */\n\tprotected Sequence quickNodeSetCompare(Sequence contextSequence)\n\t\tthrows XPathException {\n\t\t// if the context sequence hasn't changed we can return a cached result\n\t\tif (cached != null && cached.isValid(contextSequence)) {\n//\t\t\tLOG.debug(\"Returning cached result for \" + ExpressionDumper.dump(this));\n\t\t\treturn cached.getResult();\n\t\t}\n\t\t//\tevaluate left expression\n\t\tNodeSet nodes = (NodeSet) getLeft().eval(contextSequence);\n\t\t\n        if (nodes.getLength() == 0)\n            return Sequence.EMPTY_SEQUENCE;\n        \n//\t\tif(nodes.getLength() < 2)\n//\t\t\t// fall back to nodeSetCompare if we just have to check a single node\n//\t\t\treturn nodeSetCompare(nodes, contextSequence);\n\t\t\n\t\t// evaluate right expression\n\t\tSequence rightSeq = getRight().eval(contextSequence);\n\n        if (rightSeq.getLength() == 0)\n            return Sequence.EMPTY_SEQUENCE;\n        \n\t\tif (rightSeq.getLength() > 1)\n\t\t\t// fall back to nodeSetCompare\n\t\t\treturn nodeSetCompare(nodes, contextSequence);\n\t\t\n\t\t// get the type of a possible index\n\t\tint indexType = nodes.getIndexType();\n\t\t\n\t\tDocumentSet docs = nodes.getDocumentSet();\n\t\tNodeSet result = null;\n\t\tItem key = rightSeq.itemAt(0).atomize();\n\t    if(indexType != Type.ITEM) {\n\t        // we have a range index defined on the nodes in this sequence\n\t        if(truncation != Constants.TRUNC_NONE) {\n\t        \t// truncation is only possible on strings\n\t        \tkey = key.convertTo(Type.STRING);\n\t        } else if(key.getType() != indexType) {\n\t            // index type doesn't match. If key is untyped atomic, convert it to string\n\t            if(key.getType() == Type.ATOMIC)\n\t                key = key.convertTo(Type.STRING);\n\t            // If index has a numeric type, we convert to xs:double \n\t            if(Type.subTypeOf(indexType, Type.NUMBER))\n\t                key = key.convertTo(Type.DOUBLE);\n\t        }\n\t        // if key does not implement Indexable, we can't use the index\n\t        if(key instanceof Indexable && Type.subTypeOf(key.getType(), indexType)) {\n\t        \tif(truncation != Constants.TRUNC_NONE) {\n\t        \t    LOG.debug(\"Using value index for key: \" +  Type.getTypeName(key.getType()) + \": \" \n                            + key.getStringValue());\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = context.getBroker().getValueIndex().match(docs, nodes, rightSeq.getStringValue().replace('%', '*'), \n\t\t\t\t\t\t\t\tDBBroker.MATCH_WILDCARDS);\n\t\t\t\t\t} catch (EXistException e) {\n\t\t\t\t\t\tthrow new XPathException(getASTNode(), e.getMessage(), e);\n\t\t\t\t\t}\n\t        \t} else {\n\t\t            LOG.debug(\"Using value index for key: \" + Type.getTypeName(key.getType()) + \": \" \n\t\t\t\t\t\t\t+ key.getStringValue());\n\t\t            result = context.getBroker().getValueIndex().find(relation, docs, nodes, (Indexable)key);\n\t\t\t\t}\n\t        } else\n\t            return nodeSetCompare(nodes, contextSequence);\n\t    } else if (key.getType() == Type.ATOMIC || Type.subTypeOf(key.getType(), Type.STRING)) {\n\t        if (!nodes.hasMixedContent() && relation == Constants.EQ \n\t            && nodes.hasTextIndex()) {\n\t\t        // we can use the fulltext index\n\t\t        String cmp = rightSeq.getStringValue();\n\t\t        if(cmp.length() < NativeTextEngine.MAX_WORD_LENGTH)\n\t\t            nodes = useFulltextIndex(cmp, nodes, docs);\n\t\t        \n\t\t        // now compare the input node set to the search expression\n\t\t\t\tresult =\n\t\t\t\t\tcontext.getBroker().getNodesEqualTo(nodes, docs, relation, truncation, cmp, getCollator(contextSequence));\n\t\n\t\t\t} else {\n\t\t\t    \n\t\t\t    // no usable index found. Fall back to a sequential scan of the nodes\n\t\t\t    result =\n\t\t\t\t\tcontext.getBroker().getNodesEqualTo(nodes, docs, relation, truncation, rightSeq.getStringValue(), \n\t\t\t\t\t        getCollator(contextSequence));\n\t\t\t}\n\t\t} else {\n\t\t    // no usable index found. Fall back to nodeSetCompare\n\t\t    return nodeSetCompare(nodes, contextSequence);\n\t\t}\n\t\t\n\t\t// can this result be cached? Don't cache if the result depends on local variables.\n\t\tboolean canCache = \n\t\t    contextSequence instanceof NodeSet &&\n\t        (getRight().getDependencies() & Dependency.VARS) == 0 &&\n\t        (getLeft().getDependencies() & Dependency.VARS) == 0;\n\t\tif(canCache)\n\t\t\tcached = new CachedResult((NodeSet)contextSequence, result);\n\t\treturn result;\n\t}","id":27780,"modified_method":"/**\n\t * Optimized implementation: first checks if a range index is defined\n\t * on the nodes in the left argument. If that fails, check if we can use\n\t * the fulltext index to speed up the search. Otherwise, fall back to\n\t * {@link #nodeSetCompare(NodeSet, Sequence)}.\n\t */\n\tprotected Sequence quickNodeSetCompare(Sequence contextSequence)\n\t\tthrows XPathException {\n\t\t// if the context sequence hasn't changed we can return a cached result\n\t\tif (cached != null && cached.isValid(contextSequence)) {\n//\t\t\tLOG.debug(\"Returning cached result for \" + ExpressionDumper.dump(this));\n\t\t\treturn cached.getResult();\n\t\t}\n\t\t//\tevaluate left expression\n\t\tNodeSet nodes = (NodeSet) getLeft().eval(contextSequence);\n\t\t\n        if (nodes.getLength() == 0)\n            return Sequence.EMPTY_SEQUENCE;\n        \n//\t\tif(nodes.getLength() < 2)\n//\t\t\t// fall back to nodeSetCompare if we just have to check a single node\n//\t\t\treturn nodeSetCompare(nodes, contextSequence);\n\t\t\n\t\t// evaluate right expression\n\t\tSequence rightSeq = getRight().eval(contextSequence);\n\n        if (rightSeq.getLength() == 0)\n            return Sequence.EMPTY_SEQUENCE;\n        \n\t\tif (rightSeq.getLength() > 1)\n\t\t\t// fall back to nodeSetCompare\n\t\t\treturn nodeSetCompare(nodes, contextSequence);\n\t\t\n\t\t// get the type of a possible index\n\t\tint indexType = nodes.getIndexType();\n\t\t\n\t\tDocumentSet docs = nodes.getDocumentSet();\n\t\tNodeSet result = null;\n\t\tItem key = rightSeq.itemAt(0).atomize();\n\t    if(indexType != Type.ITEM) {\n\t        // we have a range index defined on the nodes in this sequence\n\t        if(truncation != Constants.TRUNC_NONE) {\n\t        \t// truncation is only possible on strings\n\t        \tkey = key.convertTo(Type.STRING);\n\t        } else if(key.getType() != indexType) {\n\t            // index type doesn't match. If key is untyped atomic, convert it to string\n\t            if(key.getType() == Type.ATOMIC)\n\t                key = key.convertTo(Type.STRING);\n\t            // If index has a numeric type, we convert to xs:double \n\t            if(Type.subTypeOf(indexType, Type.NUMBER))\n\t                key = key.convertTo(Type.DOUBLE);\n\t        }\n\t        // if key does not implement Indexable, we can't use the index\n\t        if(key instanceof Indexable && Type.subTypeOf(key.getType(), indexType)) {\n\t        \tif(truncation != Constants.TRUNC_NONE) {\n\t        \t\tif (context.isProfilingEnabled())\n\t        \t\t\tcontext.getProfiler().message(this, \"Using value index for key: \" +  Type.getTypeName(key.getType()) + \": \" \n                            + key.getStringValue());\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = context.getBroker().getValueIndex().match(docs, nodes, rightSeq.getStringValue().replace('%', '*'), \n\t\t\t\t\t\t\t\tDBBroker.MATCH_WILDCARDS);\n\t\t\t\t\t} catch (EXistException e) {\n\t\t\t\t\t\tthrow new XPathException(getASTNode(), e.getMessage(), e);\n\t\t\t\t\t}\n\t        \t} else {\n\t        \t\tif (context.isProfilingEnabled())\n\t        \t\t\tcontext.getProfiler().message(this, \"Using value index for key: \" +  Type.getTypeName(key.getType()) + \": \" \n                            + key.getStringValue());\n\t\t            result = context.getBroker().getValueIndex().find(relation, docs, nodes, (Indexable)key);\n\t\t\t\t}\n\t        } else\n\t            return nodeSetCompare(nodes, contextSequence);\n\t    } else if (key.getType() == Type.ATOMIC || Type.subTypeOf(key.getType(), Type.STRING)) {\n\t        if (!nodes.hasMixedContent() && relation == Constants.EQ \n\t            && nodes.hasTextIndex()) {\n\t\t        // we can use the fulltext index\n\t\t        String cmp = rightSeq.getStringValue();\n\t\t        if(cmp.length() < NativeTextEngine.MAX_WORD_LENGTH)\n\t\t            nodes = useFulltextIndex(cmp, nodes, docs);\n\t\t        \n\t\t        // now compare the input node set to the search expression\n\t\t\t\tresult =\n\t\t\t\t\tcontext.getBroker().getNodesEqualTo(nodes, docs, relation, truncation, cmp, getCollator(contextSequence));\n\t\n\t\t\t} else {\n\t\t\t    \n\t\t\t    // no usable index found. Fall back to a sequential scan of the nodes\n\t\t\t    result =\n\t\t\t\t\tcontext.getBroker().getNodesEqualTo(nodes, docs, relation, truncation, rightSeq.getStringValue(), \n\t\t\t\t\t        getCollator(contextSequence));\n\t\t\t}\n\t\t} else {\n\t\t    // no usable index found. Fall back to nodeSetCompare\n\t\t    return nodeSetCompare(nodes, contextSequence);\n\t\t}\n\t\t\n\t\t// can this result be cached? Don't cache if the result depends on local variables.\n\t\tboolean canCache = \n\t\t    contextSequence instanceof NodeSet &&\n\t        (getRight().getDependencies() & Dependency.VARS) == 0 &&\n\t        (getLeft().getDependencies() & Dependency.VARS) == 0;\n\t\tif(canCache)\n\t\t\tcached = new CachedResult((NodeSet)contextSequence, result);\n\t\treturn result;\n\t}","commit_id":"f53fe4991ceceb3f62973b8e82b92d7eb2e3ef47","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Called by an expression to indicate the end of an operation.\n     * The profiler computes the elapsed time.\n     * \n     * @param expr the expression.\n     * @param message required: a message to be printed to the log.\n     */\n    public final void end(Expression expr, String message) {\n        if (!enabled)\n            return;\n        \n        ProfiledExpr e = (ProfiledExpr) stack.pop();\n        if (e.expr != expr) {\n            log.warn(\"Error: the object passed to end() does not correspond to the expression on top of the stack.\");\n            stack.clear();\n            return;\n        }\n        \n        long elapsed = System.currentTimeMillis() - e.start;\n        buf.setLength(0);\n        printPosition(e);\n        buf.append(\"\\tEND\\t\");\n        buf.append(elapsed);\n        buf.append(\"ms - \");\n        if (message != null)\n            buf.append(message);\n        log.debug(buf.toString());\n    }","id":27781,"modified_method":"/**\n     * Called by an expression to indicate the end of an operation.\n     * The profiler computes the elapsed time.\n     * \n     * @param expr the expression.\n     * @param message required: a message to be printed to the log.\n     */\n    public final void end(Expression expr, String message) {\n        if (!enabled)\n            return;\n        \n        ProfiledExpr e = (ProfiledExpr) stack.pop();\n        if (e.expr != expr) {\n            log.warn(\"Error: the object passed to end() does not correspond to the expression on top of the stack.\");\n            stack.clear();\n            return;\n        }\n        \n        long elapsed = System.currentTimeMillis() - e.start;\n        buf.setLength(0);\n        printPosition(e.expr);\n        buf.append(\"\\tEND\\t\");\n        buf.append(elapsed);\n        buf.append(\"ms - \");\n        if (message != null)\n            buf.append(message);\n        log.debug(buf.toString());\n    }","commit_id":"f53fe4991ceceb3f62973b8e82b92d7eb2e3ef47","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Called by an expression to indicate the start of an operation.\n     * The profiler registers the start time.\n     * \n     * @param expr the expression.\n     * @param message if not null, contains an optional message to print in the log.\n     */\n    public final void start(Expression expr, String message) {\n        if (enabled) {\n            ProfiledExpr e = new ProfiledExpr(expr);\n            stack.push(e);\n        \n            if (!queryStarted) {\n                log.debug(\"QUERY START\");\n                queryStarted = true;\n            }\n            \n            if (message != null) {\n                buf.setLength(0);\n                printPosition(e);\n                buf.append('\\t');\n                buf.append(\"START\\t\\t- \");\n                buf.append(message);\n                log.debug(buf.toString());\n            }\n        }\n    }","id":27782,"modified_method":"/**\n     * Called by an expression to indicate the start of an operation.\n     * The profiler registers the start time.\n     * \n     * @param expr the expression.\n     * @param message if not null, contains an optional message to print in the log.\n     */\n    public final void start(Expression expr, String message) {\n        if (enabled) {\n            ProfiledExpr e = new ProfiledExpr(expr);\n            stack.push(e);\n        \n            if (!queryStarted) {\n                log.debug(\"QUERY START\");\n                queryStarted = true;\n            }\n            \n            if (message != null) {\n                buf.setLength(0);\n                printPosition(e.expr);\n                buf.append('\\t');\n                buf.append(\"START\\t\\t- \");\n                buf.append(message);\n                log.debug(buf.toString());\n            }\n        }\n    }","commit_id":"f53fe4991ceceb3f62973b8e82b92d7eb2e3ef47","url":"https://github.com/eXist-db/exist"},{"original_method":"private ProfiledExpr(Expression expression) {\n            this.expr = expression;\n            this.start = System.currentTimeMillis();\n        }","id":27783,"modified_method":"/**\n     * @param e\n     */\n    private void printPosition(Expression expr) {\n        XQueryAST ast = expr.getASTNode();\n        if (ast != null) {\n            buf.append('[');\n            buf.append(ast.getColumn());\n            buf.append(',');\n            buf.append(ast.getLine());\n            buf.append(\"] \");\n        }\n    }","commit_id":"f53fe4991ceceb3f62973b8e82b92d7eb2e3ef47","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n   * Main method, launching the HTTP services.\n   * Command-line arguments are listed with the {@code -h} argument.\n   * @param args command-line arguments\n   */\n  public static void main(final String... args) {\n    try {\n      new BaseXHTTP(args);\n    } catch(final Exception ex) {\n      Util.debug(ex);\n      Util.errln(ex);\n      System.exit(1);\n    }\n  }","id":27784,"modified_method":"/**\n   * Main method, launching the HTTP services.\n   * Command-line arguments are listed with the {@code -h} argument.\n   * @param args command-line arguments\n   */\n  public static void main(final String... args) {\n    try {\n      new BaseXHTTP(args);\n    } catch(final Exception ex) {\n      Util.errln(ex);\n      System.exit(1);\n    }\n  }","commit_id":"f4e772b1b33bfd002a78798ac51bdaa6d41aa225","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public final void service(final HttpServletRequest req, final HttpServletResponse res)\n      throws IOException {\n\n    final HTTPContext http = new HTTPContext(req, res);\n    try {\n      run(http);\n      http.log(\"\", SC_OK);\n    } catch(final HTTPException ex) {\n      Util.debug(ex);\n      http.status(ex.getStatus(), ex.getMessage());\n    } catch(final LoginException ex) {\n      Util.debug(ex);\n      http.status(SC_UNAUTHORIZED, ex.getMessage());\n    } catch(final IOException ex) {\n      Util.debug(ex);\n      http.status(SC_BAD_REQUEST, Util.message(ex));\n    } catch(final QueryException ex) {\n      Util.debug(ex);\n      http.status(SC_BAD_REQUEST, ex.getMessage());\n    } catch(final Exception ex) {\n      Util.errln(Util.bug(ex));\n      http.status(SC_INTERNAL_SERVER_ERROR, Util.info(UNEXPECTED, ex));\n    } finally {\n      if(Prop.debug) {\n        Util.outln(\"_ REQUEST _________________________________\" + Prop.NL + req);\n        final Enumeration<String> en = req.getHeaderNames();\n        while(en.hasMoreElements()) {\n          final String key = en.nextElement();\n          Util.outln(Text.LI + key + Text.COLS + req.getHeader(key));\n        }\n        Util.out(\"_ RESPONSE ________________________________\" + Prop.NL + res);\n      }\n      http.close();\n    }\n  }","id":27785,"modified_method":"@Override\n  public final void service(final HttpServletRequest req, final HttpServletResponse res)\n      throws IOException {\n\n    final HTTPContext http = new HTTPContext(req, res);\n    try {\n      run(http);\n      http.log(\"\", SC_OK);\n    } catch(final HTTPException ex) {\n      http.status(ex.getStatus(), Util.message(ex));\n    } catch(final LoginException ex) {\n      http.status(SC_UNAUTHORIZED, Util.message(ex));\n    } catch(final IOException ex) {\n      http.status(SC_BAD_REQUEST, Util.message(ex));\n    } catch(final QueryException ex) {\n      http.status(SC_BAD_REQUEST, Util.message(ex));\n    } catch(final Exception ex) {\n      Util.errln(Util.bug(ex));\n      http.status(SC_INTERNAL_SERVER_ERROR, Util.info(UNEXPECTED, ex));\n    } finally {\n      if(Prop.debug) {\n        Util.outln(\"_ REQUEST _________________________________\" + Prop.NL + req);\n        final Enumeration<String> en = req.getHeaderNames();\n        while(en.hasMoreElements()) {\n          final String key = en.nextElement();\n          Util.outln(Text.LI + key + Text.COLS + req.getHeader(key));\n        }\n        Util.out(\"_ RESPONSE ________________________________\" + Prop.NL + res);\n      }\n      http.close();\n    }\n  }","commit_id":"f4e772b1b33bfd002a78798ac51bdaa6d41aa225","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Validates the specified XML input against the POST schema.\n   * @param input input document\n   * @throws HTTPException exception\n   */\n  private static void validate(final byte[] input) throws HTTPException {\n    try {\n      final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setNamespaceAware(true);\n      final DocumentBuilder db = dbf.newDocumentBuilder();\n      RESTSchema.newValidator().validate(new DOMSource(db.parse(new ArrayInput(input))));\n    } catch(final Exception ex) {\n      Util.debug(\"Error while validating \\\"\" + Token.string(input) + '\"');\n      Util.debug(ex);\n      // validation fails\n      HTTPErr.BAD_REQUEST_X.thrw(ex);\n    }\n  }","id":27786,"modified_method":"/**\n   * Validates the specified XML input against the POST schema.\n   * @param input input document\n   * @throws HTTPException exception\n   */\n  private static void validate(final byte[] input) throws HTTPException {\n    try {\n      final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setNamespaceAware(true);\n      final DocumentBuilder db = dbf.newDocumentBuilder();\n      RESTSchema.newValidator().validate(new DOMSource(db.parse(new ArrayInput(input))));\n    } catch(final Exception ex) {\n      Util.debug(\"Error while validating \\\"\" + Token.string(input) + '\"');\n      // validation fails\n      HTTPErr.BAD_REQUEST_X.thrw(ex);\n    }\n  }","commit_id":"f4e772b1b33bfd002a78798ac51bdaa6d41aa225","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Attempt to infer the part of speech of the given preterminal node, which\n   * was created during the expansion of a multi-word token.\n   */\n  private static String inferPOS(Tree t, Tree parent,\n                                 TwoDimensionalCounter<String, String> unigramTagger) {\n    String word = t.firstChild().value();\n    if (unigramTagger.firstKeySet().contains(word))\n      return Counters.argmax(unigramTagger.getCounter(word));\n\n    if (parent == null)\n      return null;\n\n    List<Label> phraseYield = parent.yield();\n    StringBuilder containingPhrase = new StringBuilder();\n    for (Label l : phraseYield)\n      containingPhrase.append(l).append(\" \");\n\n    String containingPhraseStr =\n      containingPhrase.toString().substring(0, containingPhrase.length() - 1);\n    return ManualUWModel.getTag(word, containingPhraseStr);\n  }","id":27787,"modified_method":"/**\n   * Attempt to infer the part of speech of the given preterminal node, which\n   * was created during the expansion of a multi-word token.\n   */\n  private static String inferPOS(Tree t, Tree parent,\n                                 TwoDimensionalCounter<String, String> unigramTagger) {\n    String word = t.firstChild().value();\n    String containingPhraseStr = getContainingPhrase(t, parent);\n\n    // Overrides: let the manual POS model handle a few special cases first\n    String overrideTag = ManualUWModel.getOverrideTag(word, containingPhraseStr);\n    if (overrideTag != null)\n      return overrideTag;\n\n    if (unigramTagger.firstKeySet().contains(word))\n      return Counters.argmax(unigramTagger.getCounter(word));\n\n    return ManualUWModel.getTag(word, containingPhraseStr);\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void updateTagger(TwoDimensionalCounter<String,String> tagger,\n                                  Tree t) {\n    List<CoreLabel> yield = t.taggedLabeledYield();\n    for (CoreLabel cl : yield) {\n      if (cl.tag().equals(SpanishTreeNormalizer.MW_TAG))\n        continue;\n\n      tagger.incrementCount(cl.word(), cl.tag());\n    }\n  }","id":27788,"modified_method":"/**\n   * Source training data for a unigram tagger from the given tree.\n   */\n  public static void updateTagger(TwoDimensionalCounter<String,String> tagger,\n                                  Tree t) {\n    List<CoreLabel> yield = t.taggedLabeledYield();\n    for (CoreLabel cl : yield) {\n      if (cl.tag().equals(SpanishTreeNormalizer.MW_TAG))\n        continue;\n\n      tagger.incrementCount(cl.word(), cl.tag());\n    }\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static void resolveDummyTags(File treeFile,\n                                       TwoDimensionalCounter<String, String> pretermLabel,\n                                       TwoDimensionalCounter<String, String> unigramTagger,\n                                       boolean retainNER, TreeNormalizer tn) {\n    TreeFactory tf = new LabeledScoredTreeFactory();\n\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(treeFile), \"UTF-8\"));\n      TreeReaderFactory trf = new SpanishTreeReaderFactory();\n      TreeReader tr = trf.newTreeReader(br);\n\n      PrintWriter pw = new PrintWriter(new PrintStream(new FileOutputStream(new File(treeFile + \".fixed\")),false,\"UTF-8\"));\n\n      int nTrees = 0;\n      for(Tree t; (t = tr.readTree()) != null;nTrees++) {\n        traverseAndFix(t, null, pretermLabel, unigramTagger, retainNER);\n\n        if (tn != null)\n          t = tn.normalizeWholeTree(t, tf);\n\n        pw.println(t.toString());\n      }\n\n      pw.close();\n      tr.close();\n\n      System.out.println(\"Processed \" +nTrees+ \" trees\");\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    } catch (FileNotFoundException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","id":27789,"modified_method":"private static void resolveDummyTags(File treeFile,\n                                       TwoDimensionalCounter<String, String> pretermLabel,\n                                       TwoDimensionalCounter<String, String> unigramTagger,\n                                       boolean retainNER, TreeNormalizer tn) {\n    TreeFactory tf = new LabeledScoredTreeFactory();\n\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(treeFile), \"UTF-8\"));\n      TreeReaderFactory trf = new SpanishTreeReaderFactory();\n      TreeReader tr = trf.newTreeReader(br);\n\n      PrintWriter pw = new PrintWriter(new PrintStream(new FileOutputStream(new File(treeFile + \".fixed\")),false,\"UTF-8\"));\n\n      int nTrees = 0;\n      for(Tree t; (t = tr.readTree()) != null;nTrees++) {\n        traverseAndFix(t, null, pretermLabel, unigramTagger, retainNER);\n\n        // Now \"decompress\" further the expanded trees formed by\n        // multiword token splitting\n        t = MultiWordTreeExpander.expandPhrases(t);\n\n        if (tn != null)\n          t = tn.normalizeWholeTree(t, tf);\n\n        pw.println(t.toString());\n      }\n\n      pw.close();\n      tr.close();\n\n      System.out.println(\"Processed \" +nTrees+ \" trees\");\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    } catch (FileNotFoundException e) {\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Return the (single or multiple) words which make up the given\n   * token.\n   */\n  private String[] getMultiWords(String token) {\n    Matcher quoteMatcher = pQuoted.matcher(token);\n    if (quoteMatcher.matches()) {\n      String[] ret = new String[3];\n      ret[0] = \"\\\"\";\n      ret[1] = quoteMatcher.group(1);\n      ret[2] = \"\\\"\";\n\n      return ret;\n    }\n\n    // Confusing: we are using a tokenizer to split a token into its\n    // constituent words\n    StringTokenizer splitter = new StringTokenizer(token, WORD_SEPARATORS,\n                                                   true);\n    int remainingTokens = splitter.countTokens();\n\n    List<String> words = new ArrayList<String>();\n\n    while (splitter.hasMoreTokens()) {\n      String word = splitter.nextToken();\n      remainingTokens--;\n\n      if (word.length() == 1\n          && WORD_SEPARATORS_DROP.indexOf(word.charAt(0)) != -1)\n        // This is a delimiter that we should drop\n        continue;\n\n      if (remainingTokens >= 2 && hyphenBoundMorphemes.contains(word)) {\n        String hyphen = splitter.nextToken();\n        remainingTokens--;\n\n        if (!hyphen.equals(\"-\")) {\n          // Ouch. We expected a hyphen here. Clean things up and keep\n          // moving.\n          words.add(word);\n          words.add(hyphen);\n          continue;\n        }\n\n        String freeMorpheme = splitter.nextToken();\n        remainingTokens--;\n\n        words.add(word + hyphen + freeMorpheme);\n        continue;\n      }\n\n      // Otherwise..\n      words.add(word);\n    }\n\n    return words.toArray(new String[words.size()]);\n  }","id":27790,"modified_method":"/**\n   * Return the (single or multiple) words which make up the given\n   * token.\n   */\n  private String[] getMultiWords(String token) {\n    token = prepareForMultiWordExtraction(token);\n\n    Matcher quoteMatcher = pQuoted.matcher(token);\n    if (quoteMatcher.matches()) {\n      String[] ret = new String[3];\n      ret[0] = \"\\\"\";\n      ret[1] = quoteMatcher.group(1);\n      ret[2] = \"\\\"\";\n\n      return ret;\n    }\n\n    // Confusing: we are using a tokenizer to split a token into its\n    // constituent words\n    StringTokenizer splitter = new StringTokenizer(token, WORD_SEPARATORS,\n                                                   true);\n    int remainingTokens = splitter.countTokens();\n\n    List<String> words = new ArrayList<String>();\n\n    while (splitter.hasMoreTokens()) {\n      String word = splitter.nextToken();\n      remainingTokens--;\n\n      if (word.length() == 1\n          && WORD_SEPARATORS_DROP.indexOf(word.charAt(0)) != -1)\n        // This is a delimiter that we should drop\n        continue;\n\n      if (remainingTokens >= 2 && hyphenBoundMorphemes.contains(word)) {\n        String hyphen = splitter.nextToken();\n        remainingTokens--;\n\n        if (!hyphen.equals(\"-\")) {\n          // Ouch. We expected a hyphen here. Clean things up and keep\n          // moving.\n          words.add(word);\n          words.add(hyphen);\n          continue;\n        }\n\n        String freeMorpheme = splitter.nextToken();\n        remainingTokens--;\n\n        words.add(word + hyphen + freeMorpheme);\n        continue;\n      }\n\n      // Otherwise..\n      words.add(word);\n    }\n\n    return words.toArray(new String[words.size()]);\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Expand grandchild tokens which are elided forms of multi-word\n   * expressions ('al,' 'del').\n   *\n   * We perform this expansion separately from multi-word expansion\n   * because we follow special rules about where the expanded tokens\n   * should be placed in the case of elision.\n   *\n   * @param t Tree representing an entire sentence\n   * @param tf\n   */\n  private void expandElisions(Tree t, TreeFactory tf) {\n    Tsurgeon.processPatternsOnTree(elisionExpansions, t);\n  }","id":27791,"modified_method":"/**\n   * Expand grandchild tokens which are elided forms of multi-word\n   * expressions ('al,' 'del').\n   *\n   * We perform this expansion separately from multi-word expansion\n   * because we follow special rules about where the expanded tokens\n   * should be placed in the case of elision.\n   *\n   * @param t Tree representing an entire sentence\n   */\n  private Tree expandElisions(Tree t) {\n    return Tsurgeon.processPatternsOnTree(elisionExpansions, t);\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // Now attack elisions: 'al' and 'del'\n    expandElisions(tree, tf);\n\n    return tree;\n  }","id":27792,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Find all named entities which are not multi-word tokens and nest\n    // them within named entity NP groups\n    if (retainNER)\n      markSimpleNamedEntities(tree);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // More tregex-powered fixes\n    tree = expandElisions(tree);\n    tree = expandCliticPronouns(tree);\n\n    return tree;\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Normalize a pre-pre-terminal tree node by accounting for multi-word\n   * tokens.\n   *\n   * Detects multi-word tokens in leaves below this pre-pre-terminal and\n   * expands their constituent words into separate leaves.\n   */\n  void normalizeForMultiWord(Tree t, TreeFactory tf) {\n    Tree[] preterminals = t.children();\n\n    for (int i = 0; i < preterminals.length; i++) {\n      // This particular child is not actually a preterminal --- skip\n      if (!preterminals[i].isPreTerminal())\n        continue;\n\n      Tree leaf = preterminals[i].firstChild();\n      String leafValue = ((CoreLabel) leaf.label()).value();\n\n      String[] words = getMultiWords(leafValue);\n      if (words.length == 1)\n        continue;\n\n      // Leaf is a multi-word token; build new nodes for each of its\n      // constituent words\n      List<Tree> newNodes = new ArrayList<Tree>(words.length);\n      for (int j = 0; j < words.length; j++) {\n        String word = words[j];\n\n        Tree newLeaf = tf.newLeaf(word);\n        if (newLeaf.label() instanceof HasWord)\n          ((HasWord) newLeaf.label()).setWord(word);\n\n        Tree newNode = tf.newTreeNode(MW_TAG, Arrays.asList(newLeaf));\n        if (newNode.label() instanceof HasTag)\n          ((HasTag) newNode.label()).setTag(MW_TAG);\n\n        newNodes.add(newNode);\n      }\n\n      // Value of the phrase which should head these preterminals. Mark\n      // that this was created from a multiword token, and also retain\n      // the original parts of speech.\n      String phraseValue = MW_PHRASE_TAG + \"_\"\n        + simplifyPOSTag(preterminals[i].value());\n\n      // Should we insert these new nodes as children of the parent `t`\n      // (i.e., \"merge\" the multi-word token phrase into its parent), or\n      // head them with a new node and set that as a child of the\n      // parent?\n      boolean shouldMerge = preterminals.length == 1\n        && mergeWithConstituentWhenPossible.contains(t.value());\n\n      if (shouldMerge) {\n        t.setChildren(newNodes);\n        t.setValue(phraseValue);\n      } else {\n        Tree newHead = tf.newTreeNode(phraseValue, newNodes);\n        t.setChild(i, newHead);\n      }\n    }\n  }","id":27793,"modified_method":"/**\n   * Normalize a pre-pre-terminal tree node by accounting for multi-word\n   * tokens.\n   *\n   * Detects multi-word tokens in leaves below this pre-pre-terminal and\n   * expands their constituent words into separate leaves.\n   */\n  void normalizeForMultiWord(Tree t, TreeFactory tf) {\n    Tree[] preterminals = t.children();\n\n    for (int i = 0; i < preterminals.length; i++) {\n      // This particular child is not actually a preterminal --- skip\n      if (!preterminals[i].isPreTerminal())\n        continue;\n\n      Tree leaf = preterminals[i].firstChild();\n      String leafValue = ((CoreLabel) leaf.label()).value();\n\n      String[] words = getMultiWords(leafValue);\n      if (words.length == 1)\n        continue;\n\n      // Leaf is a multi-word token; build new nodes for each of its\n      // constituent words\n      List<Tree> newNodes = new ArrayList<Tree>(words.length);\n      for (int j = 0; j < words.length; j++) {\n        String word = normalizeTerminal(words[j]);\n\n        Tree newLeaf = tf.newLeaf(word);\n        if (newLeaf.label() instanceof HasWord)\n          ((HasWord) newLeaf.label()).setWord(word);\n\n        Tree newNode = tf.newTreeNode(MW_TAG, Arrays.asList(newLeaf));\n        if (newNode.label() instanceof HasTag)\n          ((HasTag) newNode.label()).setTag(MW_TAG);\n\n        newNodes.add(newNode);\n      }\n\n      // Value of the phrase which should head these preterminals. Mark\n      // that this was created from a multiword token, and also retain\n      // the original parts of speech.\n      String phraseValue = MW_PHRASE_TAG + \"_\"\n        + simplifyPOSTag(preterminals[i].value());\n\n      // Should we insert these new nodes as children of the parent `t`\n      // (i.e., \"merge\" the multi-word token phrase into its parent), or\n      // head them with a new node and set that as a child of the\n      // parent?\n      boolean shouldMerge = preterminals.length == 1\n        && mergeWithConstituentWhenPossible.contains(t.value());\n\n      if (shouldMerge) {\n        t.setChildren(newNodes);\n        t.setValue(phraseValue);\n      } else {\n        Tree newHead = tf.newTreeNode(phraseValue, newNodes);\n        t.setChild(i, newHead);\n      }\n    }\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Strips the suffix matched by @pSuffix off of @word and returns\n   * the stripped word, null if unable to strip.\n   */\n  private static String stripSuffix(String word, Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      System.out.println(m.start());\n      return removeAccents(stripped);\n    }\n    return null;\n  }","id":27794,"modified_method":"/**\n   * Separate attached pronouns from the given verb.\n   *\n   * @param word A valid Spanish verb with clitic pronouns attached.\n   * @param pSuffix A pattern to match these attached pronouns.\n   * @return A pair containing the verb (pronouns removed by the given\n   *           pattern) and a list of the pronouns which were attached\n   *           to the verb.\n   */\n  private static Pair<String, List<String>> stripSuffix(String word,\n                                                        Pattern pSuffix) {\n    Matcher m = pSuffix.matcher(word);\n    if(m.find()) {\n      String stripped = word.substring(0, m.start());\n      stripped = removeAccents(stripped);\n\n      List<String> attached = new ArrayList<String>();\n      for (int i = 0; i < m.groupCount(); i++)\n        attached.add(m.group(i + 1));\n\n      return new Pair<String, List<String>>(stripped, attached);\n    }\n\n    return null;\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   */\n  public static String stripVerb(String verb) {\n    String stripped = stripSuffix(verb, pOneAttachedPronoun);\n    if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n      System.out.println(stripped);\n      stripped = stripSuffix(verb, pTwoAttachedPronouns);\n      if(stripped == null || (!isVerb(stripped) && !isVerb(stripped + \"d\"))) {\n        System.out.println(stripped);\n        return null;\n      }\n    }\n    return stripped;\n  }","id":27795,"modified_method":"/**\n   * Remove attached pronouns from a strippable Spanish verb form. (Use\n   * {@link #isStrippable(String)} to determine if a word is a\n   * strippable verb.)\n   *\n   * Converts e.g.\n   *\n   *   - decírmelo -> decir\n   *   - mudarse -> mudar\n   *   - contándolos -> contando\n   *   - hazlo -> haz\n   *\n   * @return A verb form stripped of attached pronouns, or <tt>null<\/tt>\n   *           if no pronouns were located / stripped.\n   */\n  public static String stripVerb(String verb) {\n    Pair<String, List<String>> separated = separatePronouns(verb);\n    if (separated != null)\n      return separated.first();\n\n    return null;\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static String removeAccents(String word) {\n    String stripped = word;\n    for (Pair<Pattern, String> accentFix : accentFixes)\n      stripped = accentFix.first().matcher(stripped)\n        .replaceAll(accentFix.second());\n    return stripped;\n  }","id":27796,"modified_method":"public static String removeAccents(String word) {\n    // Special case: oír\n    if (word.equalsIgnoreCase(\"oír\"))\n      return word;\n\n    String stripped = word;\n    for (Pair<Pattern, String> accentFix : accentFixes)\n      stripped = accentFix.first().matcher(stripped)\n        .replaceAll(accentFix.second());\n    return stripped;\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void testStripVerb() {\n    assertEquals(\"decir\", SpanishVerbStripper.stripVerb(\"decirme\"));\n    assertEquals(\"decir\", SpanishVerbStripper.stripVerb(\"decirnos\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugarles\"));\n    assertEquals(\"mandar\", SpanishVerbStripper.stripVerb(\"mandarlos\"));\n    assertEquals(\"leer\", SpanishVerbStripper.stripVerb(\"leerlo\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugarla\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugárselos\"));\n    assertEquals(\"decir\", SpanishVerbStripper.stripVerb(\"decírmelo\"));\n    assertEquals(\"contando\", SpanishVerbStripper.stripVerb(\"contándolo\"));\n    assertEquals(\"yendo\", SpanishVerbStripper.stripVerb(\"yéndole\"));\n    assertEquals(\"viviendo\", SpanishVerbStripper.stripVerb(\"viviéndolo\"));\n    assertEquals(\"leyendo\", SpanishVerbStripper.stripVerb(\"leyéndolo\"));\n    assertEquals(\"buscando\", SpanishVerbStripper.stripVerb(\"buscándome\"));\n    assertEquals(\"senta\", SpanishVerbStripper.stripVerb(\"sentaos\"));\n    assertEquals(\"vesti\", SpanishVerbStripper.stripVerb(\"vestíos\"));\n    assertEquals(\"compre\", SpanishVerbStripper.stripVerb(\"cómprelos\"));\n    assertEquals(\"haz\", SpanishVerbStripper.stripVerb(\"házmelo\"));\n  }","id":27797,"modified_method":"public static void testStripVerb() {\n    assertEquals(\"decir\", SpanishVerbStripper.stripVerb(\"decirme\"));\n    assertEquals(\"decir\", SpanishVerbStripper.stripVerb(\"decirnos\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugarles\"));\n    assertEquals(\"mandar\", SpanishVerbStripper.stripVerb(\"mandarlos\"));\n    assertEquals(\"leer\", SpanishVerbStripper.stripVerb(\"leerlo\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugarla\"));\n    assertEquals(\"jugar\", SpanishVerbStripper.stripVerb(\"jugárselos\"));\n    assertEquals(\"decir\", SpanishVerbStripper.stripVerb(\"decírmelo\"));\n    assertEquals(\"contando\", SpanishVerbStripper.stripVerb(\"contándolo\"));\n    assertEquals(\"yendo\", SpanishVerbStripper.stripVerb(\"yéndole\"));\n    assertEquals(\"viviendo\", SpanishVerbStripper.stripVerb(\"viviéndolo\"));\n    assertEquals(\"leyendo\", SpanishVerbStripper.stripVerb(\"leyéndolo\"));\n    assertEquals(\"buscando\", SpanishVerbStripper.stripVerb(\"buscándome\"));\n    assertEquals(\"senta\", SpanishVerbStripper.stripVerb(\"sentaos\"));\n    assertEquals(\"vesti\", SpanishVerbStripper.stripVerb(\"vestíos\"));\n    assertEquals(\"compre\", SpanishVerbStripper.stripVerb(\"cómprelos\"));\n    assertEquals(\"haz\", SpanishVerbStripper.stripVerb(\"házmelo\"));\n    assertEquals(\"oír\", SpanishVerbStripper.stripVerb(\"oírse\"));\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Determine the part of speech of the given leaf node.\n   *\n   * Use some heuristics to make up for missing part-of-speech labels.\n   */\n  private String getPOS(Element node) {\n    String pos = node.getAttribute(ATTR_POS);\n\n    // Make up for some missing part-of-speech tags\n    if (pos.equals(\"\")) {\n      String namedAttribute = node.getAttribute(ATTR_NAMED_ENTITY);\n      if (namedAttribute.equals(\"date\")) {\n        return \"w\";\n      } else if (namedAttribute.equals(\"number\")) {\n        return \"z0\";\n      }\n\n      String tagName = node.getTagName();\n      if (tagName.equals(\"i\")) {\n        return \"i\";\n      } else if (tagName.equals(\"r\")) {\n        return \"rg\";\n      } else if (tagName.equals(\"z\")) {\n        return \"z0\";\n      }\n\n      // Handle icky issues related to \"que\"\n      String posType = node.getAttribute(ATTR_POSTYPE);\n      String word = getWord(node);\n      if (tagName.equals(\"c\") && posType.equals(\"subordinating\")) {\n        return \"cs\";\n      } else if (tagName.equals(\"p\") && posType.equals(\"relative\")\n                 && word.equalsIgnoreCase(\"que\")) {\n        return \"pr0cn000\";\n      }\n\n      if (simplifiedTagset) {\n        // If we are using the simplfied tagset, we can make some more\n        // broad inferences\n        if (tagName.equals(\"a\")) {\n          return \"aq0000\";\n        }\n      }\n\n      if (node.hasAttribute(ATTR_PUNCT)) {\n        return \"f\";\n      }\n    }\n\n    return pos;\n  }","id":27798,"modified_method":"/**\n   * Determine the part of speech of the given leaf node.\n   *\n   * Use some heuristics to make up for missing part-of-speech labels.\n   */\n  private String getPOS(Element node) {\n    String pos = node.getAttribute(ATTR_POS);\n\n    String namedAttribute = node.getAttribute(ATTR_NAMED_ENTITY);\n    if (pos.startsWith(\"np\") && pos.length() == 7\n        && pos.charAt(pos.length() - 1) == '0') {\n      // Some nouns are missing a named entity annotation in the final\n      // character of their POS tags, but still have a proper named\n      // entity annotation in the `ne` attribute. Fix this:\n      char annotation = '0';\n      if (namedAttribute.equals(\"location\")) {\n        annotation = 'l';\n      } else if (namedAttribute.equals(\"person\")) {\n        annotation = 'p';\n      } else if (namedAttribute.equals(\"organization\")) {\n        annotation = 'o';\n      }\n\n      pos = pos.substring(0, 6) + annotation;\n    } else if (pos.equals(\"\")) {\n      // Make up for some missing part-of-speech tags\n      if (namedAttribute.equals(\"date\")) {\n        return \"w\";\n      } else if (namedAttribute.equals(\"number\")) {\n        return \"z0\";\n      }\n\n      String tagName = node.getTagName();\n      if (tagName.equals(\"i\")) {\n        return \"i\";\n      } else if (tagName.equals(\"r\")) {\n        return \"rg\";\n      } else if (tagName.equals(\"z\")) {\n        return \"z0\";\n      }\n\n      // Handle icky issues related to \"que\"\n      String posType = node.getAttribute(ATTR_POSTYPE);\n      String word = getWord(node);\n      if (tagName.equals(\"c\") && posType.equals(\"subordinating\")) {\n        return \"cs\";\n      } else if (tagName.equals(\"p\") && posType.equals(\"relative\")\n                 && word.equalsIgnoreCase(\"que\")) {\n        return \"pr0cn000\";\n      }\n\n      if (simplifiedTagset) {\n        // If we are using the simplfied tagset, we can make some more\n        // broad inferences\n        if (tagName.equals(\"a\")) {\n          return \"aq0000\";\n        } else if (posType.equals(\"proper\")) {\n          return \"np00000\";\n        } else if (posType.equals(\"common\")) {\n          return \"nc0s000\";\n        }\n      }\n\n      if (node.hasAttribute(ATTR_PUNCT)) {\n        return \"f\";\n      }\n    }\n\n    return pos;\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    final Properties options = StringUtils.argsToProperties(args, argOptionDefs());\n    if(args.length < 1 || options.containsKey(\"help\")) {\n      System.err.println(usage());\n      return;\n    }\n\n    final Pattern posPattern = options.containsKey(\"searchPos\")\n      ? Pattern.compile(options.getProperty(\"searchPos\")) : null;\n    final Pattern wordPattern = options.containsKey(\"searchWord\")\n      ? Pattern.compile(options.getProperty(\"searchWord\")) : null;\n    final boolean plainPrint = PropertiesUtils.getBool(options, \"plain\", false);\n\n    String[] remainingArgs = options.getProperty(\"\").split(\" \");\n    List<File> fileList = new ArrayList<File>();\n    for(int i = 0; i < remainingArgs.length; i++)\n      fileList.add(new File(remainingArgs[i]));\n\n    final SpanishXMLTreeReaderFactory trf = new SpanishXMLTreeReaderFactory(true, true);\n    ExecutorService pool =\n      Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n\n    for (final File file : fileList) {\n      pool.execute(new Runnable() {\n          public void run() {\n            try {\n              Reader in = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\"));\n              TreeReader tr = trf.newTreeReader(file.getPath(), in);\n              process(file, tr, posPattern, wordPattern, plainPrint);\n              tr.close();\n            } catch (FileNotFoundException e) {\n              e.printStackTrace();\n            } catch (IOException e) {\n              e.printStackTrace();\n            }\n          }\n        });\n    }\n\n    pool.shutdown();\n    try {\n      pool.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n  }","id":27799,"modified_method":"public static void main(String[] args) {\n    final Properties options = StringUtils.argsToProperties(args, argOptionDefs());\n    if(args.length < 1 || options.containsKey(\"help\")) {\n      System.err.println(usage());\n      return;\n    }\n\n    final Pattern posPattern = options.containsKey(\"searchPos\")\n      ? Pattern.compile(options.getProperty(\"searchPos\")) : null;\n    final Pattern wordPattern = options.containsKey(\"searchWord\")\n      ? Pattern.compile(options.getProperty(\"searchWord\")) : null;\n    final boolean plainPrint = PropertiesUtils.getBool(options, \"plain\", false);\n    final boolean ner = PropertiesUtils.getBool(options, \"ner\", false);\n\n    String[] remainingArgs = options.getProperty(\"\").split(\" \");\n    List<File> fileList = new ArrayList<File>();\n    for(int i = 0; i < remainingArgs.length; i++)\n      fileList.add(new File(remainingArgs[i]));\n\n    final SpanishXMLTreeReaderFactory trf = new SpanishXMLTreeReaderFactory(true, true, ner);\n    ExecutorService pool =\n      Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n\n    for (final File file : fileList) {\n      pool.execute(new Runnable() {\n          public void run() {\n            try {\n              Reader in = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\"));\n              TreeReader tr = trf.newTreeReader(file.getPath(), in);\n              process(file, tr, posPattern, wordPattern, plainPrint);\n              tr.close();\n            } catch (FileNotFoundException e) {\n              e.printStackTrace();\n            } catch (IOException e) {\n              e.printStackTrace();\n            }\n          }\n        });\n    }\n\n    pool.shutdown();\n    try {\n      pool.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static Map<String, Integer> argOptionDefs() {\n    Map<String, Integer> argOptionDefs = Generics.newHashMap();\n    argOptionDefs.put(\"help\", 0);\n    argOptionDefs.put(\"plain\", 0);\n    argOptionDefs.put(\"searchPos\", 1);\n    argOptionDefs.put(\"searchWord\", 1);\n    return argOptionDefs;\n  }","id":27800,"modified_method":"private static Map<String, Integer> argOptionDefs() {\n    Map<String, Integer> argOptionDefs = Generics.newHashMap();\n    argOptionDefs.put(\"help\", 0);\n    argOptionDefs.put(\"ner\", 0);\n    argOptionDefs.put(\"plain\", 0);\n    argOptionDefs.put(\"searchPos\", 1);\n    argOptionDefs.put(\"searchWord\", 1);\n    return argOptionDefs;\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Read parse trees from a Reader.\n   *\n   * @param filename\n   * @param in The <code>Reader<\/code>\n   * @param simplifiedTagset If `true`, convert part-of-speech labels to a\n   *          simplified version of the EAGLES tagset, where the tags do not\n   *          include extensive morphological analysis\n   * @param aggressiveNormalization Perform aggressive \"normalization\"\n   *          on the trees read from the provided corpus documents:\n   *          split multi-word tokens into their constituent words (and\n   *          infer parts of speech of the constituent words).\n   */\n  public SpanishXMLTreeReader(String filename, Reader in, boolean simplifiedTagset,\n                              boolean aggressiveNormalization) {\n    TreebankLanguagePack tlp = new SpanishTreebankLanguagePack();\n\n    this.simplifiedTagset = simplifiedTagset;\n\n    stream = new ReaderInputStream(in, tlp.getEncoding());\n    treeFactory = new LabeledScoredTreeFactory();\n    treeNormalizer =\n      new SpanishTreeNormalizer(simplifiedTagset,\n                                aggressiveNormalization,\n                                true // retain NER information in\n                                     // preterminals\n                                );\n\n    DocumentBuilder parser = XMLUtils.getXmlParser();\n    try {\n      final Document xml = parser.parse(stream);\n      final Element root = xml.getDocumentElement();\n      sentences = root.getElementsByTagName(NODE_SENT);\n      sentIdx = 0;\n\n    } catch (SAXException e) {\n      System.err.println(\"Parse exception while reading \" + filename);\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","id":27801,"modified_method":"/**\n   * Read parse trees from a Reader.\n   *\n   * @param filename\n   * @param in The <code>Reader<\/code>\n   * @param simplifiedTagset If `true`, convert part-of-speech labels to a\n   *          simplified version of the EAGLES tagset, where the tags do not\n   *          include extensive morphological analysis\n   * @param aggressiveNormalization Perform aggressive \"normalization\"\n   *          on the trees read from the provided corpus documents:\n   *          split multi-word tokens into their constituent words (and\n   *          infer parts of speech of the constituent words).\n   * @param retainNER Retain NER information in preterminals (for later\n   *          use in `MultiWordPreprocessor) and add NER-specific\n   *          parents to single-word NE tokens\n   */\n  public SpanishXMLTreeReader(String filename, Reader in, boolean simplifiedTagset,\n                              boolean aggressiveNormalization,\n                              boolean retainNER) {\n    TreebankLanguagePack tlp = new SpanishTreebankLanguagePack();\n\n    this.simplifiedTagset = simplifiedTagset;\n\n    stream = new ReaderInputStream(in, tlp.getEncoding());\n    treeFactory = new LabeledScoredTreeFactory();\n    treeNormalizer =\n      new SpanishTreeNormalizer(simplifiedTagset,\n                                aggressiveNormalization,\n                                retainNER);\n\n    DocumentBuilder parser = XMLUtils.getXmlParser();\n    try {\n      final Document xml = parser.parse(stream);\n      final Element root = xml.getDocumentElement();\n      sentences = root.getElementsByTagName(NODE_SENT);\n      sentIdx = 0;\n\n    } catch (SAXException e) {\n      System.err.println(\"Parse exception while reading \" + filename);\n      e.printStackTrace();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static String usage() {\n    StringBuilder sb = new StringBuilder();\n    String nl = System.getProperty(\"line.separator\");\n    sb.append(String.format(\"Usage: java %s [OPTIONS] file(s)%n%n\", SpanishXMLTreeReader.class.getName()));\n    sb.append(\"Options:\").append(nl);\n    sb.append(\"   -help: Print this message\").append(nl);\n    sb.append(\"   -plain: Output corpus in plaintext rather than as trees\").append(nl);\n    sb.append(\"   -searchPos posRegex: Only print sentences which contain a token whose part of speech matches the given regular expression\").append(nl);\n    sb.append(\"   -searchWord wordRegex: Only print sentences which contain a token which matches the given regular expression\").append(nl);\n    return sb.toString();\n  }","id":27802,"modified_method":"private static String usage() {\n    StringBuilder sb = new StringBuilder();\n    String nl = System.getProperty(\"line.separator\");\n\n    sb.append(String.format(\"Usage: java %s [OPTIONS] file(s)%n%n\", SpanishXMLTreeReader.class.getName()));\n    sb.append(\"Options:\").append(nl);\n    sb.append(\"   -help: Print this message\").append(nl);\n    sb.append(\"   -ner: Add NER-specific information to trees\").append(nl);\n    sb.append(\"   -plain: Output corpus in plaintext rather than as trees\").append(nl);\n    sb.append(\"   -searchPos posRegex: Only print sentences which contain a token whose part of speech matches the given regular expression\").append(nl);\n    sb.append(\"   -searchWord wordRegex: Only print sentences which contain a token which matches the given regular expression\").append(nl);\n\n    return sb.toString();\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public SpanishXMLTreeReaderFactory(boolean simplifiedTagset,\n                                     boolean aggressiveNormalization) {\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n  }","id":27803,"modified_method":"public SpanishXMLTreeReaderFactory(boolean simplifiedTagset,\n                                     boolean aggressiveNormalization,\n                                     boolean retainNER) {\n    this.simplifiedTagset = simplifiedTagset;\n    this.aggressiveNormalization = aggressiveNormalization;\n    this.retainNER = retainNER;\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public TreeReader newTreeReader(String path, Reader in) {\n    return new SpanishXMLTreeReader(path, in, simplifiedTagset, aggressiveNormalization);\n  }","id":27804,"modified_method":"public TreeReader newTreeReader(String path, Reader in) {\n    return new SpanishXMLTreeReader(path, in, simplifiedTagset, aggressiveNormalization, retainNER);\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public TreeReader newTreeReader(Reader in) {\n    return new SpanishXMLTreeReader(null, in, simplifiedTagset, aggressiveNormalization);\n  }","id":27805,"modified_method":"public TreeReader newTreeReader(Reader in) {\n    return new SpanishXMLTreeReader(null, in, simplifiedTagset, aggressiveNormalization,\n                                    retainNER);\n  }","commit_id":"bf176637360b523e8a808fd904ca640a02894119","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Find all named entities which are not multi-word tokens and nest\n    // them within named entity NP groups\n    if (retainNER)\n      markSimpleNamedEntities(tree);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // Now attack elisions: 'al' and 'del'\n    expandElisions(tree, tf);\n\n    return tree;\n  }","id":27806,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    // First filter out nodes we don't like\n    tree = tree.prune(emptyFilter);\n\n    // Find all named entities which are not multi-word tokens and nest\n    // them within named entity NP groups\n    if (retainNER)\n      markSimpleNamedEntities(tree);\n\n    // Counter for part-of-speech statistics\n    TwoDimensionalCounter<String, String> unigramTagger =\n      new TwoDimensionalCounter<String, String>();\n\n    for (Tree t : tree) {\n      if (simplifiedTagset && t.isPreTerminal()) {\n        // This is a part of speech tag. Remove extra morphological\n        // information.\n        CoreLabel label = (CoreLabel) t.label();\n        String pos = label.value();\n\n        pos = simplifyPOSTag(pos).intern();\n        label.setValue(pos);\n        label.setTag(pos);\n      } else if (aggressiveNormalization && isMultiWordCandidate(t)) {\n        // Expand multi-word token if necessary\n        normalizeForMultiWord(t, tf);\n      }\n    }\n\n    // More tregex-powered fixes\n    tree = expandElisions(tree);\n    tree = expandCliticPronouns(tree);\n\n    return tree;\n  }","commit_id":"7108d87630cd2412a5e87a34cc5392fd87199055","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Expand grandchild tokens which are elided forms of multi-word\n   * expressions ('al,' 'del').\n   *\n   * We perform this expansion separately from multi-word expansion\n   * because we follow special rules about where the expanded tokens\n   * should be placed in the case of elision.\n   *\n   * @param t Tree representing an entire sentence\n   * @param tf\n   */\n  private void expandElisions(Tree t, TreeFactory tf) {\n    Tsurgeon.processPatternsOnTree(elisionExpansions, t);\n  }","id":27807,"modified_method":"/**\n   * Expand grandchild tokens which are elided forms of multi-word\n   * expressions ('al,' 'del').\n   *\n   * We perform this expansion separately from multi-word expansion\n   * because we follow special rules about where the expanded tokens\n   * should be placed in the case of elision.\n   *\n   * @param t Tree representing an entire sentence\n   */\n  private Tree expandElisions(Tree t) {\n    return Tsurgeon.processPatternsOnTree(elisionExpansions, t);\n  }","commit_id":"7108d87630cd2412a5e87a34cc5392fd87199055","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Attempt to separate attached pronouns from the given verb.\n   *\n   * @param word Spanish verb\n   * @return A pair containing the verb (pronouns removed) and a list of\n   *           the pronouns which were attached to the verb, or\n   *           <tt>null<\/tt> if no pronouns could be located and\n   *           separated.\n   */\n  static Pair<String, List<String>> separatePronouns(String verb) {\n    Pair<String, List<String>> separated;\n\n    // Try to strip just one pronoun first\n    separated = stripSuffix(verb, pOneAttachedPronoun);\n    // Try `word + 'd'` as well for cases like 'sentaos'; stripped this\n    // becomes 'senta', and we only have the form 'sentad' in the\n    // dictionary\n    if (separated != null && (isVerb(separated.first())\n                              || isVerb(separated.first() + \"d\")))\n      return separated;\n\n    separated = stripSuffix(verb, pTwoAttachedPronouns);\n    if (separated != null && (isVerb(separated.first())\n                              || isVerb(separated.first() + \"d\")))\n      return separated;\n\n    return null;\n  }","id":27808,"modified_method":"/**\n   * Attempt to separate attached pronouns from the given verb.\n   *\n   * @param word Spanish verb\n   * @return A pair containing the verb (pronouns removed) and a list of\n   *           the pronouns which were attached to the verb, or\n   *           <tt>null<\/tt> if no pronouns could be located and\n   *           separated.\n   */\n  public static Pair<String, List<String>> separatePronouns(String verb) {\n    Pair<String, List<String>> separated;\n\n    // Try to strip just one pronoun first\n    separated = stripSuffix(verb, pOneAttachedPronoun);\n    // Try `word + 'd'` as well for cases like 'sentaos'; stripped this\n    // becomes 'senta', and we only have the form 'sentad' in the\n    // dictionary\n    if (separated != null && (isVerb(separated.first())\n                              || isVerb(separated.first() + \"d\")))\n      return separated;\n\n    separated = stripSuffix(verb, pTwoAttachedPronouns);\n    if (separated != null && (isVerb(separated.first())\n                              || isVerb(separated.first() + \"d\")))\n      return separated;\n\n    return null;\n  }","commit_id":"7108d87630cd2412a5e87a34cc5392fd87199055","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n     * our map function, which takes the reads spanning this locus, any associated reference ordered data,\n     * and the reference information.  We output a simple genotype call as the result of this function\n     *\n     * @param tracker the reference ordered data tracker\n     * @param ref     the reference information\n     * @param context the locus context, which contains all of the read information\n     * @return a SimpleCall, which stores the genotype we're calling and the LOD score\n     */\n    public SimpleCall map(RefMetaDataTracker tracker, ReferenceContext ref, AlignmentContext context) {\n        if (ref.getBase() == 'N' || ref.getBase() == 'n') return null; // we don't deal with the N ref base case\n\n        ReadBackedPileup pileup = new ReadBackedPileup(context.getLocation(), ref.getBase(), context.getReads(), context.getOffsets());\n        double likelihoods[] = DiploidGenotypePriors.getReferencePolarizedPriors(ref.getBase(),\n                                                                                 DiploidGenotypePriors.HUMAN_HETEROZYGOSITY,\n                                                                                 DiploidGenotypePriors.PROB_OF_TRISTATE_GENOTYPE);\n\n        for (GENOTYPE genotype : GENOTYPE.values())\n            for (int index = 0; index < pileup.getBases().length; index++) {\n                if (pileup.getQuals()[index] > 0) {\n                    double epsilon = Math.pow(10, pileup.getQuals()[index] / -10.0);\n                    byte pileupBase = pileup.getBases()[index];\n                    for (char genotypeBase : genotype.toString().toCharArray())\n                        if (genotypeBase == pileupBase)\n                            likelihoods[genotype.ordinal()] += Math.log10(0.5 * ((1 - epsilon) + epsilon / 3));\n                        else\n                            likelihoods[genotype.ordinal()] += Math.log10(epsilon / 3);\n                }\n            }\n\n        Integer sortedList[] = Utils.SortPermutation(likelihoods);\n\n        // get our reference genotype\n        String refGenotype = (String.valueOf(ref.getBase()) + String.valueOf(ref.getBase())).toUpperCase();\n\n        // create call using the best genotype (GENOTYPE.values()[sortedList[9]].toString())\n        // and calculate the LOD score from best - ref (likelihoods[sortedList[9]] - likelihoods[sortedList[8])\n        return new SimpleCall(context.getLocation(),\n                              GENOTYPE.values()[sortedList[9]].toString(),\n                              likelihoods[sortedList[9]] - likelihoods[GENOTYPE.valueOf(refGenotype).ordinal()]);\n    }","id":27809,"modified_method":"/**\n     * our map function, which takes the reads spanning this locus, any associated reference ordered data,\n     * and the reference information.  We output a simple genotype call as the result of this function\n     *\n     * @param tracker the reference ordered data tracker\n     * @param ref     the reference information\n     * @param context the locus context, which contains all of the read information\n     * @return a SimpleCall, which stores the genotype we're calling and the LOD score\n     */\n    public SimpleCall map(RefMetaDataTracker tracker, ReferenceContext ref, AlignmentContext context) {\n        if (ref.getBase() == 'N' || ref.getBase() == 'n') return null; // we don't deal with the N ref base case\n\n        ReadBackedPileup pileup = new ReadBackedPileup(context.getLocation(), ref.getBase(), context.getReads(), context.getOffsets());\n        double likelihoods[] = DiploidGenotypePriors.getReferencePolarizedPriors(ref.getBase(),\n                                                                                 DiploidGenotypePriors.HUMAN_HETEROZYGOSITY,\n                                                                                 DiploidGenotypePriors.PROB_OF_TRISTATE_GENOTYPE);\n        byte bases[] = pileup.getBases();\n        byte quals[] = pileup.getQuals();\n        for (GENOTYPE genotype : GENOTYPE.values())\n            for (int index = 0; index < bases.length; index++) {\n                if (quals[index] > 0) {\n                    double epsilon = Math.pow(10, quals[index] / -10.0);\n                    byte pileupBase = bases[index];\n                    for (char genotypeBase : genotype.toString().toCharArray())\n                        if (genotypeBase == pileupBase)\n                            likelihoods[genotype.ordinal()] += Math.log10(0.5 * ((1 - epsilon) + epsilon / 3));\n                        else\n                            likelihoods[genotype.ordinal()] += Math.log10(epsilon / 3);\n                }\n            }\n\n        Integer sortedList[] = Utils.SortPermutation(likelihoods);\n\n        // get our reference genotype\n        String refGenotype = (String.valueOf(ref.getBase()) + String.valueOf(ref.getBase())).toUpperCase();\n\n        // create call using the best genotype (GENOTYPE.values()[sortedList[9]].toString())\n        // and calculate the LOD score from best - ref (likelihoods[sortedList[9]] - likelihoods[sortedList[8])\n        return new SimpleCall(context.getLocation(),\n                              GENOTYPE.values()[sortedList[9]].toString(),\n                              likelihoods[sortedList[9]] - likelihoods[GENOTYPE.valueOf(refGenotype).ordinal()]);\n    }","commit_id":"cfbd9332b03df1312e4f64d3c88adf4b62a313c3","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Provide an initial value for reduce computations. In this case we simply return an empty list\n     *\n     * @return Initial value of reduce.\n     */\n    public SimpleCallList reduceInit() {\n        return new SimpleCallList(LOCATION);\n    }","id":27810,"modified_method":"/**\n     * Provide an initial value for reduce computations. In this case we simply return an empty list\n     *\n     * @return Initial value of reduce.\n     */\n    public Integer reduceInit() {\n        return 0;\n    }","commit_id":"cfbd9332b03df1312e4f64d3c88adf4b62a313c3","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Reduces a single map with the accumulator provided as the ReduceType.\n     *\n     * @param value result of the map.\n     * @param sum   accumulator for the reduce.\n     * @return accumulator with result of the map taken into account.\n     */\n    public SimpleCallList reduce(SimpleCall value, SimpleCallList sum) {\n        if (value != null) sum.add(value);\n        return sum;\n    }","id":27811,"modified_method":"/**\n     * Reduces a single map with the accumulator provided as the ReduceType.\n     *\n     * @param value result of the map.\n     * @param sum   accumulator for the reduce.\n     * @return accumulator with result of the map taken into account.\n     */\n    public Integer reduce(SimpleCall value, Integer sum) {\n        outputStream.println(value.toString());\n        return sum + 1;\n    }","commit_id":"cfbd9332b03df1312e4f64d3c88adf4b62a313c3","url":"https://github.com/broadgsa/gatk"},{"original_method":"public String toString() {\n        return String.format(\"Location %s : %s with LOD %.2f\", loc, genotype, LOD);\n    }","id":27812,"modified_method":"public String toString() {\n        return String.format(\"%s : %s with LOD %.4f\", loc, genotype, LOD);\n    }","commit_id":"cfbd9332b03df1312e4f64d3c88adf4b62a313c3","url":"https://github.com/broadgsa/gatk"},{"original_method":"static ConnectionFactoryConfiguration createConfiguration(final String name, final ModelNode operation) {\n        final ConnectionFactoryConfiguration config = new ConnectionFactoryConfigurationImpl(name, jndiBindings(operation));\n\n        config.setAutoGroup(operation.get(AUTO_GROUP).asBoolean(HornetQClient.DEFAULT_AUTO_GROUP));\n        config.setBlockOnAcknowledge(operation.get(BLOCK_ON_ACK).asBoolean(HornetQClient.DEFAULT_BLOCK_ON_ACKNOWLEDGE));\n        config.setBlockOnDurableSend(operation.get(BLOCK_ON_DURABLE_SEND).asBoolean(HornetQClient.DEFAULT_BLOCK_ON_DURABLE_SEND));\n        config.setBlockOnNonDurableSend(operation.get(BLOCK_ON_NON_DURABLE_SEND).asBoolean(HornetQClient.DEFAULT_BLOCK_ON_NON_DURABLE_SEND));\n        config.setCacheLargeMessagesClient(operation.get(CACHE_LARGE_MESSAGE_CLIENT).asBoolean(HornetQClient.DEFAULT_CACHE_LARGE_MESSAGE_CLIENT));\n        config.setCallTimeout(operation.get(CALL_TIMEOUT).asLong(HornetQClient.DEFAULT_CALL_TIMEOUT));\n        config.setClientFailureCheckPeriod(operation.get(CLIENT_FAILURE_CHECK_PERIOD).asInt((int) HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD));\n        if(operation.hasDefined(CLIENT_ID)) {\n            config.setClientID(operation.get(CLIENT_ID).asString());\n        }\n        config.setConfirmationWindowSize(operation.get(CONFIRMATION_WINDOW_SIZE).asInt(HornetQClient.DEFAULT_CONFIRMATION_WINDOW_SIZE));\n        config.setConnectionTTL(operation.get(CONNECTION_TTL).asLong(HornetQClient.DEFAULT_CONNECTION_TTL));\n        if (operation.hasDefined(CONNECTOR)) {\n            ModelNode connectorRefs = operation.get(CONNECTOR);\n            List<Pair<String, String>> connectorNames = new ArrayList<Pair<String,String>>();\n            for (String connectorName : operation.get(CONNECTOR).keys()) {\n                ModelNode connectorRef = connectorRefs.get(connectorName);\n                String backup = connectorRef.hasDefined(CONNECTOR_BACKUP_NAME) ? connectorRef.get(CONNECTOR_BACKUP_NAME).asString() : null;\n                connectorNames.add( new Pair<String, String>(connectorName, backup));\n            }\n            config.setConnectorNames(connectorNames);\n        }\n        //config.setConnectorConfigs(connectorConfigs)\n        // config.setConnectorNames(connectors);\n        config.setConsumerMaxRate(operation.get(CONSUMER_MAX_RATE).asInt(HornetQClient.DEFAULT_CONSUMER_MAX_RATE));\n        config.setConsumerWindowSize(operation.get(CONSUMER_WINDOW_SIZE).asInt(HornetQClient.DEFAULT_CONSUMER_WINDOW_SIZE));\n        if(operation.hasDefined(DISCOVERY_GROUP_NAME)) {\n            config.setDiscoveryGroupName(operation.get(DISCOVERY_GROUP_NAME).asString());\n        }\n        config.setDupsOKBatchSize(operation.get(DUPS_OK_BATCH_SIZE).asInt(HornetQClient.DEFAULT_ACK_BATCH_SIZE));\n        config.setFailoverOnInitialConnection(operation.get(FAILOVER_ON_INITIAL_CONNECTION).asBoolean(HornetQClient.DEFAULT_FAILOVER_ON_INITIAL_CONNECTION));\n        config.setFailoverOnServerShutdown(operation.get(FAILOVER_ON_SERVER_SHUTDOWN).asBoolean(HornetQClient.DEFAULT_FAILOVER_ON_SERVER_SHUTDOWN));\n        if(operation.hasDefined(GROUP_ID)) {\n            config.setGroupID(operation.get(GROUP_ID).asString());\n        }\n\n        config.setInitialWaitTimeout(operation.get(DISCOVERY_INITIAL_WAIT_TIMEOUT).asLong(HornetQClient.DEFAULT_DISCOVERY_INITIAL_WAIT_TIMEOUT));\n        if (operation.hasDefined(LOAD_BALANCING_CLASS_NAME)) {\n             config.setLoadBalancingPolicyClassName(operation.get(LOAD_BALANCING_CLASS_NAME).asString());\n        }\n        config.setMaxRetryInterval(operation.get(MAX_RETRY_INTERVAL).asLong(HornetQClient.DEFAULT_MAX_RETRY_INTERVAL));\n        config.setMinLargeMessageSize(operation.get(MIN_LARGE_MESSAGE_SIZE).asInt(HornetQClient.DEFAULT_MIN_LARGE_MESSAGE_SIZE));\n        config.setPreAcknowledge(operation.get(PRE_ACK).asBoolean(HornetQClient.DEFAULT_PRE_ACKNOWLEDGE));\n        config.setProducerMaxRate(operation.get(PRODUCER_MAX_RATE).asInt(HornetQClient.DEFAULT_PRODUCER_MAX_RATE));\n        config.setProducerWindowSize(operation.get(PRODUCER_WINDOW_SIZE).asInt(HornetQClient.DEFAULT_PRODUCER_WINDOW_SIZE));\n        config.setReconnectAttempts(operation.get(RECONNECT_ATTEMPTS).asInt(HornetQClient.DEFAULT_RECONNECT_ATTEMPTS));\n        config.setRetryInterval(operation.get(RETRY_INTERVAL).asLong(HornetQClient.DEFAULT_RETRY_INTERVAL));\n        config.setRetryIntervalMultiplier(operation.get(RETRY_INTERVAL_MULTIPLIER).asDouble(HornetQClient.DEFAULT_RETRY_INTERVAL_MULTIPLIER));\n        config.setScheduledThreadPoolMaxSize(operation.get(SCHEDULED_THREAD_POOL_MAX_SIZE).asInt(HornetQClient.DEFAULT_SCHEDULED_THREAD_POOL_MAX_SIZE));\n        config.setThreadPoolMaxSize(operation.get(THREAD_POOL_MAX_SIZE).asInt(HornetQClient.DEFAULT_THREAD_POOL_MAX_SIZE));\n        config.setTransactionBatchSize(operation.get(TRANSACTION_BATCH_SIZE).asInt(HornetQClient.DEFAULT_ACK_BATCH_SIZE));\n        config.setUseGlobalPools(operation.get(USE_GLOBAL_POOLS).asBoolean(HornetQClient.DEFAULT_USE_GLOBAL_POOLS));\n\n        return config;\n    }","id":27813,"modified_method":"static ConnectionFactoryConfiguration createConfiguration(final String name, final ModelNode operation) {\n        final ConnectionFactoryConfiguration config = new ConnectionFactoryConfigurationImpl(name, HornetQClient.DEFAULT_HA, jndiBindings(operation));\n\n        config.setHA(operation.get(HA).asBoolean(HornetQClient.DEFAULT_HA));\n        config.setAutoGroup(operation.get(AUTO_GROUP).asBoolean(HornetQClient.DEFAULT_AUTO_GROUP));\n        config.setBlockOnAcknowledge(operation.get(BLOCK_ON_ACK).asBoolean(HornetQClient.DEFAULT_BLOCK_ON_ACKNOWLEDGE));\n        config.setBlockOnDurableSend(operation.get(BLOCK_ON_DURABLE_SEND).asBoolean(HornetQClient.DEFAULT_BLOCK_ON_DURABLE_SEND));\n        config.setBlockOnNonDurableSend(operation.get(BLOCK_ON_NON_DURABLE_SEND).asBoolean(HornetQClient.DEFAULT_BLOCK_ON_NON_DURABLE_SEND));\n        config.setCacheLargeMessagesClient(operation.get(CACHE_LARGE_MESSAGE_CLIENT).asBoolean(HornetQClient.DEFAULT_CACHE_LARGE_MESSAGE_CLIENT));\n        config.setCallTimeout(operation.get(CALL_TIMEOUT).asLong(HornetQClient.DEFAULT_CALL_TIMEOUT));\n        config.setClientFailureCheckPeriod(operation.get(CLIENT_FAILURE_CHECK_PERIOD).asInt((int) HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD));\n        if(operation.hasDefined(CLIENT_ID)) {\n            config.setClientID(operation.get(CLIENT_ID).asString());\n        }\n        config.setConfirmationWindowSize(operation.get(CONFIRMATION_WINDOW_SIZE).asInt(HornetQClient.DEFAULT_CONFIRMATION_WINDOW_SIZE));\n        config.setConnectionTTL(operation.get(CONNECTION_TTL).asLong(HornetQClient.DEFAULT_CONNECTION_TTL));\n        if (operation.hasDefined(CONNECTOR)) {\n            ModelNode connectorRefs = operation.get(CONNECTOR);\n            List<String> connectorNames = new ArrayList<String>();\n            for (String connectorName : operation.get(CONNECTOR).keys()) {\n                ModelNode connectorRef = connectorRefs.get(connectorName);\n                connectorNames.add(connectorName);\n            }\n            config.setConnectorNames(connectorNames);\n        }\n        //config.setConnectorConfigs(connectorConfigs)\n        // config.setConnectorNames(connectors);\n        config.setConsumerMaxRate(operation.get(CONSUMER_MAX_RATE).asInt(HornetQClient.DEFAULT_CONSUMER_MAX_RATE));\n        config.setConsumerWindowSize(operation.get(CONSUMER_WINDOW_SIZE).asInt(HornetQClient.DEFAULT_CONSUMER_WINDOW_SIZE));\n        if(operation.hasDefined(DISCOVERY_GROUP_NAME)) {\n            config.setDiscoveryGroupName(operation.get(DISCOVERY_GROUP_NAME).asString());\n        }\n        config.setDupsOKBatchSize(operation.get(DUPS_OK_BATCH_SIZE).asInt(HornetQClient.DEFAULT_ACK_BATCH_SIZE));\n        config.setFailoverOnInitialConnection(operation.get(FAILOVER_ON_INITIAL_CONNECTION).asBoolean(HornetQClient.DEFAULT_FAILOVER_ON_INITIAL_CONNECTION));\n        if(operation.hasDefined(GROUP_ID)) {\n            config.setGroupID(operation.get(GROUP_ID).asString());\n        }\n\n        if (operation.hasDefined(LOAD_BALANCING_CLASS_NAME)) {\n             config.setLoadBalancingPolicyClassName(operation.get(LOAD_BALANCING_CLASS_NAME).asString());\n        }\n        config.setMaxRetryInterval(operation.get(MAX_RETRY_INTERVAL).asLong(HornetQClient.DEFAULT_MAX_RETRY_INTERVAL));\n        config.setMinLargeMessageSize(operation.get(MIN_LARGE_MESSAGE_SIZE).asInt(HornetQClient.DEFAULT_MIN_LARGE_MESSAGE_SIZE));\n        config.setPreAcknowledge(operation.get(PRE_ACK).asBoolean(HornetQClient.DEFAULT_PRE_ACKNOWLEDGE));\n        config.setProducerMaxRate(operation.get(PRODUCER_MAX_RATE).asInt(HornetQClient.DEFAULT_PRODUCER_MAX_RATE));\n        config.setProducerWindowSize(operation.get(PRODUCER_WINDOW_SIZE).asInt(HornetQClient.DEFAULT_PRODUCER_WINDOW_SIZE));\n        config.setReconnectAttempts(operation.get(RECONNECT_ATTEMPTS).asInt(HornetQClient.DEFAULT_RECONNECT_ATTEMPTS));\n        config.setRetryInterval(operation.get(RETRY_INTERVAL).asLong(HornetQClient.DEFAULT_RETRY_INTERVAL));\n        config.setRetryIntervalMultiplier(operation.get(RETRY_INTERVAL_MULTIPLIER).asDouble(HornetQClient.DEFAULT_RETRY_INTERVAL_MULTIPLIER));\n        config.setScheduledThreadPoolMaxSize(operation.get(SCHEDULED_THREAD_POOL_MAX_SIZE).asInt(HornetQClient.DEFAULT_SCHEDULED_THREAD_POOL_MAX_SIZE));\n        config.setThreadPoolMaxSize(operation.get(THREAD_POOL_MAX_SIZE).asInt(HornetQClient.DEFAULT_THREAD_POOL_MAX_SIZE));\n        config.setTransactionBatchSize(operation.get(TRANSACTION_BATCH_SIZE).asInt(HornetQClient.DEFAULT_ACK_BATCH_SIZE));\n        config.setUseGlobalPools(operation.get(USE_GLOBAL_POOLS).asBoolean(HornetQClient.DEFAULT_USE_GLOBAL_POOLS));\n\n        return config;\n    }","commit_id":"305d286b24b81bcb0ae017b9790a93066967091d","url":"https://github.com/wildfly/wildfly"},{"original_method":"/** {@inheritDoc} */\n    @Override\n    public OperationResult execute(final OperationContext context, final ModelNode operation, final ResultHandler resultHandler) {\n\n        ModelNode opAddr = operation.require(OP_ADDR);\n        final PathAddress address = PathAddress.pathAddress(opAddr);\n        final String name = address.getLastElement().getValue();\n\n        final ModelNode compensatingOperation = Util.getResourceRemoveOperation(opAddr);\n\n        final ModelNode subModel = context.getSubModel();\n        for(final NodeAttribute attribute : JMSServices.CONNECTION_FACTORY_ATTRS) {\n            final String attrName = attribute.getName();\n            if(operation.hasDefined(attrName)) {\n                subModel.get(attrName).set(operation.get(attrName));\n            }\n        }\n\n        if (context.getRuntimeContext() != null) {\n            context.getRuntimeContext().setRuntimeTask(new RuntimeTask() {\n                public void execute(RuntimeTaskContext context) throws OperationFailedException {\n                    final ConnectionFactoryConfiguration configuration = createConfiguration(name, operation);\n                    final ConnectionFactoryService service = new ConnectionFactoryService(configuration);\n                    final ServiceName serviceName = JMSServices.JMS_CF_BASE.append(name);\n                    context.getServiceTarget().addService(serviceName, service)\n                            .addDependency(JMSServices.JMS_MANAGER, JMSServerManager.class, service.getJmsServer())\n                            .setInitialMode(Mode.ACTIVE)\n                            .install();\n                    resultHandler.handleResultComplete();\n                }\n            });\n        } else {\n            resultHandler.handleResultComplete();\n        }\n        return new BasicOperationResult(compensatingOperation);\n    }","id":27814,"modified_method":"/** {@inheritDoc} */\n    @Override\n    public OperationResult execute(final OperationContext context, final ModelNode operation, final ResultHandler resultHandler) {\n\n        ModelNode opAddr = operation.require(OP_ADDR);\n        final PathAddress address = PathAddress.pathAddress(opAddr);\n        final String name = address.getLastElement().getValue();\n\n        final ModelNode compensatingOperation = Util.getResourceRemoveOperation(opAddr);\n\n        final ModelNode subModel = context.getSubModel();\n        for(final NodeAttribute attribute : JMSServices.CONNECTION_FACTORY_ATTRS) {\n            final String attrName = attribute.getName();\n            if(operation.hasDefined(attrName)) {\n                subModel.get(attrName).set(operation.get(attrName));\n            }\n        }\n\n        if (context.getRuntimeContext() != null) {\n            context.getRuntimeContext().setRuntimeTask(new RuntimeTask() {\n                @Override\n                public void execute(RuntimeTaskContext context) throws OperationFailedException {\n                    final ConnectionFactoryConfiguration configuration = createConfiguration(name, operation);\n                    final ConnectionFactoryService service = new ConnectionFactoryService(configuration);\n                    final ServiceName serviceName = JMSServices.JMS_CF_BASE.append(name);\n                    context.getServiceTarget().addService(serviceName, service)\n                            .addDependency(JMSServices.JMS_MANAGER, JMSServerManager.class, service.getJmsServer())\n                            .setInitialMode(Mode.ACTIVE)\n                            .install();\n                    resultHandler.handleResultComplete();\n                }\n            });\n        } else {\n            resultHandler.handleResultComplete();\n        }\n        return new BasicOperationResult(compensatingOperation);\n    }","commit_id":"305d286b24b81bcb0ae017b9790a93066967091d","url":"https://github.com/wildfly/wildfly"},{"original_method":"static ClientSessionFactory createClientSessionFactory(String host, int port) {\n        final Map<String, Object> properties = new HashMap<String, Object>();\n        properties.put(\"host\", host);\n        properties.put(\"port\", port);\n        final TransportConfiguration configuration = new TransportConfiguration(NettyConnectorFactory.class.getName(), properties);\n        return HornetQClient.createClientSessionFactory(configuration);\n    }","id":27815,"modified_method":"static ClientSessionFactory createClientSessionFactory(String host, int port) throws Exception {\n        final Map<String, Object> properties = new HashMap<String, Object>();\n        properties.put(\"host\", host);\n        properties.put(\"port\", port);\n        final TransportConfiguration configuration = new TransportConfiguration(NettyConnectorFactory.class.getName(), properties);\n        return HornetQClient.createServerLocatorWithoutHA(configuration).createSessionFactory();\n    }","commit_id":"305d286b24b81bcb0ae017b9790a93066967091d","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Transform the detyped operation parameters into the hornetQ configuration.\n     *\n     * @param params the detyped operation parameters\n     * @return the hornetQ configuration\n     */\n    static Configuration transformConfig(final ModelNode params) {\n        final Configuration configuration = new ConfigurationImpl();\n        // --\n        configuration.setBackup(params.get(BACKUP).asBoolean(ConfigurationImpl.DEFAULT_BACKUP));\n        if(params.has(BACKUP_CONNECTOR_REF)) {\n            configuration.setBackupConnectorName(params.get(BACKUP_CONNECTOR_REF).asString());\n        }\n        configuration.setClustered(params.get(CLUSTERED).asBoolean(ConfigurationImpl.DEFAULT_CLUSTERED));\n        configuration.setClusterPassword(params.get(CLUSTER_PASSWORD).asString());\n        configuration.setClusterUser(params.get(CLUSTER_USER).asString());\n        configuration.setConnectionTTLOverride(params.get(CONNECTION_TTL_OVERRIDE).asInt((int) ConfigurationImpl.DEFAULT_CONNECTION_TTL_OVERRIDE));\n        configuration.setCreateBindingsDir(params.get(CREATE_BINDINGS_DIR).asBoolean(ConfigurationImpl.DEFAULT_CREATE_BINDINGS_DIR));\n        configuration.setCreateJournalDir(params.get(CREATE_JOURNAL_DIR).asBoolean(ConfigurationImpl.DEFAULT_CREATE_JOURNAL_DIR));\n        configuration.setEnabledAsyncConnectionExecution(params.get(ASYNC_CONNECTION_EXECUTION_ENABLED).asBoolean(ConfigurationImpl.DEFAULT_ASYNC_CONNECTION_EXECUTION_ENABLED));\n        configuration.setIDCacheSize(params.get(ID_CACHE_SIZE).asInt(ConfigurationImpl.DEFAULT_ID_CACHE_SIZE));\n        // TODO do we want to allow the jmx configuration ?\n        if(params.hasDefined(JMX_DOMAIN)) configuration.setJMXDomain(params.get(JMX_DOMAIN).asString());\n        configuration.setJMXManagementEnabled(params.get(JMX_MANAGEMENT_ENABLED).asBoolean(ConfigurationImpl.DEFAULT_JMX_MANAGEMENT_ENABLED));\n        // Journal\n        final JournalType journalType = params.hasDefined(JOURNAL_TYPE) ? JournalType.valueOf(params.get(JOURNAL_TYPE).asString()) : ConfigurationImpl.DEFAULT_JOURNAL_TYPE;\n        configuration.setJournalType(journalType);\n        // AIO Journal\n        configuration.setJournalBufferSize_AIO(params.get(JOURNAL_BUFFER_SIZE).asInt(ConfigurationImpl.DEFAULT_JOURNAL_BUFFER_SIZE_AIO));\n        configuration.setJournalBufferTimeout_AIO(params.get(JOURNAL_BUFFER_TIMEOUT).asInt(ConfigurationImpl.DEFAULT_JOURNAL_BUFFER_TIMEOUT_AIO));\n        configuration.setJournalMaxIO_AIO(params.get(JOURNAL_MAX_IO).asInt(ConfigurationImpl.DEFAULT_JOURNAL_MAX_IO_AIO));\n        // NIO Journal\n        configuration.setJournalBufferSize_NIO(params.get(JOURNAL_BUFFER_SIZE).asInt(ConfigurationImpl.DEFAULT_JOURNAL_BUFFER_SIZE_NIO));\n        configuration.setJournalBufferTimeout_NIO(params.get(JOURNAL_BUFFER_TIMEOUT).asInt(ConfigurationImpl.DEFAULT_JOURNAL_BUFFER_TIMEOUT_NIO));\n        configuration.setJournalMaxIO_NIO(params.get(JOURNAL_MAX_IO).asInt(ConfigurationImpl.DEFAULT_JOURNAL_MAX_IO_NIO));\n        //\n        configuration.setJournalCompactMinFiles(params.get(JOURNAL_COMPACT_MIN_FILES).asInt(ConfigurationImpl.DEFAULT_JOURNAL_MIN_FILES));\n        configuration.setJournalCompactPercentage(params.get(JOURNAL_COMPACT_PERCENTAGE).asInt(ConfigurationImpl.DEFAULT_JOURNAL_COMPACT_PERCENTAGE));\n        configuration.setJournalFileSize(params.get(JOURNAL_FILE_SIZE).asInt(ConfigurationImpl.DEFAULT_JOURNAL_FILE_SIZE));\n        configuration.setJournalMinFiles(params.get(JOURNAL_MIN_FILES).asInt(ConfigurationImpl.DEFAULT_JOURNAL_MIN_FILES));\n        configuration.setJournalPerfBlastPages(params.get(PERF_BLAST_PAGES).asInt(ConfigurationImpl.DEFAULT_JOURNAL_PERF_BLAST_PAGES));\n        configuration.setJournalSyncNonTransactional(params.get(JOURNAL_SYNC_NON_TRANSACTIONAL).asBoolean(ConfigurationImpl.DEFAULT_JOURNAL_SYNC_NON_TRANSACTIONAL));\n        configuration.setJournalSyncTransactional(params.get(JOURNAL_SYNC_TRANSACTIONAL).asBoolean(ConfigurationImpl.DEFAULT_JOURNAL_SYNC_TRANSACTIONAL));\n        configuration.setLogJournalWriteRate(params.get(LOG_JOURNAL_WRITE_RATE).asBoolean(ConfigurationImpl.DEFAULT_JOURNAL_LOG_WRITE_RATE));\n\n        // configuration.setManagementAddress(address)\n        // configuration.setManagementNotificationAddress(address)\n        // TODO more\n\n        configuration.setPersistDeliveryCountBeforeDelivery(params.get(PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY).asBoolean(ConfigurationImpl.DEFAULT_PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY));\n        configuration.setPersistenceEnabled(params.get(PERSISTENCE_ENABLED).asBoolean(ConfigurationImpl.DEFAULT_PERSISTENCE_ENABLED));\n        configuration.setPersistIDCache(params.get(PERSIST_ID_CACHE).asBoolean(ConfigurationImpl.DEFAULT_PERSIST_ID_CACHE));\n\n        // --\n        processAddressSettings(configuration, params);\n        processCoreQueues(configuration, params);\n        processSecuritySettings(configuration, params);\n        return configuration;\n    }","id":27816,"modified_method":"/**\n     * Transform the detyped operation parameters into the hornetQ configuration.\n     *\n     * @param params the detyped operation parameters\n     * @return the hornetQ configuration\n     */\n    static Configuration transformConfig(final ModelNode params) {\n        final Configuration configuration = new ConfigurationImpl();\n        // --\n        configuration.setBackup(params.get(BACKUP).asBoolean(ConfigurationImpl.DEFAULT_BACKUP));\n        if(params.has(LIVE_CONNECTOR_REF)) {\n            configuration.setLiveConnectorName(params.get(LIVE_CONNECTOR_REF).asString());\n        }\n        configuration.setClustered(params.get(CLUSTERED).asBoolean(ConfigurationImpl.DEFAULT_CLUSTERED));\n        configuration.setClusterPassword(params.get(CLUSTER_PASSWORD).asString());\n        configuration.setClusterUser(params.get(CLUSTER_USER).asString());\n        configuration.setConnectionTTLOverride(params.get(CONNECTION_TTL_OVERRIDE).asInt((int) ConfigurationImpl.DEFAULT_CONNECTION_TTL_OVERRIDE));\n        configuration.setCreateBindingsDir(params.get(CREATE_BINDINGS_DIR).asBoolean(ConfigurationImpl.DEFAULT_CREATE_BINDINGS_DIR));\n        configuration.setCreateJournalDir(params.get(CREATE_JOURNAL_DIR).asBoolean(ConfigurationImpl.DEFAULT_CREATE_JOURNAL_DIR));\n        configuration.setEnabledAsyncConnectionExecution(params.get(ASYNC_CONNECTION_EXECUTION_ENABLED).asBoolean(ConfigurationImpl.DEFAULT_ASYNC_CONNECTION_EXECUTION_ENABLED));\n        configuration.setIDCacheSize(params.get(ID_CACHE_SIZE).asInt(ConfigurationImpl.DEFAULT_ID_CACHE_SIZE));\n        // TODO do we want to allow the jmx configuration ?\n        if(params.hasDefined(JMX_DOMAIN)) configuration.setJMXDomain(params.get(JMX_DOMAIN).asString());\n        configuration.setJMXManagementEnabled(params.get(JMX_MANAGEMENT_ENABLED).asBoolean(ConfigurationImpl.DEFAULT_JMX_MANAGEMENT_ENABLED));\n        // Journal\n        final JournalType journalType = params.hasDefined(JOURNAL_TYPE) ? JournalType.valueOf(params.get(JOURNAL_TYPE).asString()) : ConfigurationImpl.DEFAULT_JOURNAL_TYPE;\n        configuration.setJournalType(journalType);\n        // AIO Journal\n        configuration.setJournalBufferSize_AIO(params.get(JOURNAL_BUFFER_SIZE).asInt(ConfigurationImpl.DEFAULT_JOURNAL_BUFFER_SIZE_AIO));\n        configuration.setJournalBufferTimeout_AIO(params.get(JOURNAL_BUFFER_TIMEOUT).asInt(ConfigurationImpl.DEFAULT_JOURNAL_BUFFER_TIMEOUT_AIO));\n        configuration.setJournalMaxIO_AIO(params.get(JOURNAL_MAX_IO).asInt(ConfigurationImpl.DEFAULT_JOURNAL_MAX_IO_AIO));\n        // NIO Journal\n        configuration.setJournalBufferSize_NIO(params.get(JOURNAL_BUFFER_SIZE).asInt(ConfigurationImpl.DEFAULT_JOURNAL_BUFFER_SIZE_NIO));\n        configuration.setJournalBufferTimeout_NIO(params.get(JOURNAL_BUFFER_TIMEOUT).asInt(ConfigurationImpl.DEFAULT_JOURNAL_BUFFER_TIMEOUT_NIO));\n        configuration.setJournalMaxIO_NIO(params.get(JOURNAL_MAX_IO).asInt(ConfigurationImpl.DEFAULT_JOURNAL_MAX_IO_NIO));\n        //\n        configuration.setJournalCompactMinFiles(params.get(JOURNAL_COMPACT_MIN_FILES).asInt(ConfigurationImpl.DEFAULT_JOURNAL_MIN_FILES));\n        configuration.setJournalCompactPercentage(params.get(JOURNAL_COMPACT_PERCENTAGE).asInt(ConfigurationImpl.DEFAULT_JOURNAL_COMPACT_PERCENTAGE));\n        configuration.setJournalFileSize(params.get(JOURNAL_FILE_SIZE).asInt(ConfigurationImpl.DEFAULT_JOURNAL_FILE_SIZE));\n        configuration.setJournalMinFiles(params.get(JOURNAL_MIN_FILES).asInt(ConfigurationImpl.DEFAULT_JOURNAL_MIN_FILES));\n        configuration.setJournalPerfBlastPages(params.get(PERF_BLAST_PAGES).asInt(ConfigurationImpl.DEFAULT_JOURNAL_PERF_BLAST_PAGES));\n        configuration.setJournalSyncNonTransactional(params.get(JOURNAL_SYNC_NON_TRANSACTIONAL).asBoolean(ConfigurationImpl.DEFAULT_JOURNAL_SYNC_NON_TRANSACTIONAL));\n        configuration.setJournalSyncTransactional(params.get(JOURNAL_SYNC_TRANSACTIONAL).asBoolean(ConfigurationImpl.DEFAULT_JOURNAL_SYNC_TRANSACTIONAL));\n        configuration.setLogJournalWriteRate(params.get(LOG_JOURNAL_WRITE_RATE).asBoolean(ConfigurationImpl.DEFAULT_JOURNAL_LOG_WRITE_RATE));\n\n        // configuration.setManagementAddress(address)\n        // configuration.setManagementNotificationAddress(address)\n        // TODO more\n\n        configuration.setPersistDeliveryCountBeforeDelivery(params.get(PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY).asBoolean(ConfigurationImpl.DEFAULT_PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY));\n        configuration.setPersistenceEnabled(params.get(PERSISTENCE_ENABLED).asBoolean(ConfigurationImpl.DEFAULT_PERSISTENCE_ENABLED));\n        configuration.setPersistIDCache(params.get(PERSIST_ID_CACHE).asBoolean(ConfigurationImpl.DEFAULT_PERSIST_ID_CACHE));\n\n        // --\n        processAddressSettings(configuration, params);\n        processCoreQueues(configuration, params);\n        processSecuritySettings(configuration, params);\n        return configuration;\n    }","commit_id":"305d286b24b81bcb0ae017b9790a93066967091d","url":"https://github.com/wildfly/wildfly"},{"original_method":"/** {@inheritDoc} */\n    @Override\n    public void writeContent(final XMLExtendedStreamWriter writer, final SubsystemMarshallingContext context) throws XMLStreamException {\n        context.startSubsystemElement(Namespace.CURRENT.getUriString(), false);\n        final ModelNode node = context.getModelNode();\n        if (has(node, ACCEPTOR)) {\n            writeAcceptors(writer, node.get(ACCEPTOR));\n        }\n        if (has(node, ADDRESS_SETTING)) {\n            writeAddressSettings(writer, node.get(ADDRESS_SETTING));\n        }\n        if (has(node, ASYNC_CONNECTION_EXECUTION_ENABLED)) {\n            //unhandled\n        }\n        if (has(node, BACKUP)) {\n            writeSimpleElement(writer, Element.BACKUP, node);\n        }\n        if (has(node, BACKUP_CONNECTOR_REF)) {\n            writeSimpleElement(writer, Element.BACKUP_CONNECTOR_REF, node);\n        }\n        if (has(node, BINDINGS_DIRECTORY)) {\n            writeDirectory(writer, Element.BINDINGS_DIRECTORY, node);\n        }\n        if (has(node, BROADCAST_PERIOD)) {\n            writeSimpleElement(writer, Element.BROADCAST_PERIOD, node);\n        }\n        if (has(node, CLUSTERED)) {\n            writeSimpleElement(writer, Element.CLUSTERED, node);\n        }\n        if (has(node, CLUSTER_PASSWORD)){\n            writeSimpleElement(writer, Element.CLUSTER_PASSWORD, node);\n        }\n        if (has(node, CLUSTER_USER)) {\n            writeSimpleElement(writer, Element.CLUSTER_USER, node);\n        }\n        if (has(node, CONNECTION_TTL_OVERRIDE)) {\n            writeSimpleElement(writer, Element.CONNECTION_TTL_OVERRIDE, node);\n        }\n        if (has(node, CONNECTOR)) {\n            writeConnectors(writer, node.get(CONNECTOR));\n        }\n        if (has(node, CONNECTOR_REF)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.CREATE_BINDINGS_DIR)) {\n            writeSimpleElement(writer, Element.CREATE_BINDINGS_DIR, node);\n        }\n        if (has(node, CommonAttributes.CREATE_JOURNAL_DIR)) {\n            writeSimpleElement(writer, Element.CREATE_BINDINGS_DIR, node);\n        }\n        if (has(node, CommonAttributes.FILE_DEPLOYMENT_ENABLED)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.GROUP_ADDRESS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.GROUP_PORT)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.GROUPING_HANDLER)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.ID_CACHE_SIZE)) {\n            writeSimpleElement(writer, Element.ID_CACHE_SIZE, node);\n        }\n        if (has(node, CommonAttributes.JMX_DOMAIN)) {\n            writeSimpleElement(writer, Element.JMX_DOMAIN, node);\n        }\n        if (has(node, CommonAttributes.JMX_MANAGEMENT_ENABLED)) {\n            writeSimpleElement(writer, Element.JMX_MANAGEMENT_ENABLED, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_BUFFER_SIZE)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.JOURNAL_BUFFER_TIMEOUT)) {\n            writeSimpleElement(writer, Element.JOURNAL_BUFFER_TIMEOUT, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_COMPACT_MIN_FILES)) {\n            writeSimpleElement(writer, Element.JOURNAL_COMPACT_MIN_FILES, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_COMPACT_PERCENTAGE)) {\n            writeSimpleElement(writer, Element.JOURNAL_COMPACT_PERCENTAGE, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_COMPACT_PERCENTAGE)) {\n            writeSimpleElement(writer, Element.JOURNAL_COMPACT_PERCENTAGE, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_DIRECTORY)) {\n            writeDirectory(writer, Element.JOURNAL_DIRECTORY, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_MIN_FILES)) {\n            writeSimpleElement(writer, Element.JOURNAL_MIN_FILES, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_SYNC_NON_TRANSACTIONAL)) {\n            writeSimpleElement(writer, Element.JOURNAL_SYNC_TRANSACTIONAL, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_SYNC_TRANSACTIONAL)) {\n            writeSimpleElement(writer, Element.JOURNAL_SYNC_TRANSACTIONAL, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_TYPE)) {\n            writeSimpleElement(writer, Element.JOURNAL_TYPE, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_FILE_SIZE)) {\n            writeSimpleElement(writer, Element.JOURNAL_FILE_SIZE, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_MAX_IO)) {\n            writeSimpleElement(writer, Element.JOURNAL_MAX_IO, node);\n        }\n        if (has(node, CommonAttributes.LARGE_MESSAGES_DIRECTORY)) {\n            writeDirectory(writer, Element.LARGE_MESSAGES_DIRECTORY, node);\n        }\n        if (has(node, CommonAttributes.LOCAL_BIND_ADDRESS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.LOCAL_BIND_PORT)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.LOG_JOURNAL_WRITE_RATE)) {\n            writeSimpleElement(writer, Element.LOG_JOURNAL_WRITE_RATE, node);\n        }\n        if (has(node, CommonAttributes.MANAGEMENT_ADDRESS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MANAGEMENT_NOTIFICATION_ADDRESS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MEMORY_MEASURE_INTERVAL)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MEMORY_WARNING_THRESHOLD)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_COUNTER_ENABLED)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_COUNTER_HISTORY_DAY_LIMIT)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_COUNTER_MAX_DAY_HISTORY)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_COUNTER_SAMPLE_PERIOD)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_EXPIRY_SCAN_PERIOD)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_EXPIRY_THREAD_PRIORITY)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.PAGING_DIRECTORY)) {\n            writeDirectory(writer, Element.PAGING_DIRECTORY, node);\n        }\n        if (has(node, CommonAttributes.PERF_BLAST_PAGES)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.PERSIST_ID_CACHE)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.PERSISTENCE_ENABLED)) {\n            writeSimpleElement(writer, Element.PERSISTENCE_ENABLED, node);\n        }\n        if (has(node, CommonAttributes.REFRESH_TIMEOUT)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.REMOTING_INTERCEPTORS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.RUN_SYNC_SPEED_TEST)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.SECURITY_ENABLED)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.SECURITY_INVALIDATION_INTERVAL)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.SECURITY_SETTING)) {\n            writeSecuritySettings(writer, node.get(CommonAttributes.SECURITY_SETTING));\n        }\n        if (has(node, CommonAttributes.SERVER_DUMP_INTERVAL)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.SHARED_STORE)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.TRANSACTION_TIMEOUT)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.TRANSACTION_TIMEOUT_SCAN_PERIOD)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.WILD_CARD_ROUTING_ENABLED)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.DEAD_LETTER_ADDRESS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.EXPIRY_ADDRESS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.REDELIVERY_DELAY)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MAX_DELIVERY_ATTEMPTS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MAX_SIZE_BYTES_NODE_NAME)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.ADDRESS_FULL_MESSAGE_POLICY)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.PAGE_SIZE_BYTES_NODE_NAME)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_COUNTER_HISTORY_DAY_LIMIT)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.LVQ)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.REDISTRIBUTION_DELAY)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.SEND_TO_DLA_ON_NO_ROUTE)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.QUEUE)) {\n            writeQueues(writer, node.get(CommonAttributes.QUEUE));\n        }\n\n        writer.writeEndElement();\n    }","id":27817,"modified_method":"/** {@inheritDoc} */\n    @Override\n    public void writeContent(final XMLExtendedStreamWriter writer, final SubsystemMarshallingContext context) throws XMLStreamException {\n        context.startSubsystemElement(Namespace.CURRENT.getUriString(), false);\n        final ModelNode node = context.getModelNode();\n        if (has(node, ACCEPTOR)) {\n            writeAcceptors(writer, node.get(ACCEPTOR));\n        }\n        if (has(node, ADDRESS_SETTING)) {\n            writeAddressSettings(writer, node.get(ADDRESS_SETTING));\n        }\n        if (has(node, ASYNC_CONNECTION_EXECUTION_ENABLED)) {\n            //unhandled\n        }\n        if (has(node, BACKUP)) {\n            writeSimpleElement(writer, Element.BACKUP, node);\n        }\n        if (has(node, CONNECTOR_REF)) {\n            writeSimpleElement(writer, Element.CONNECTOR_REF, node);\n        }\n        if (has(node, BINDINGS_DIRECTORY)) {\n            writeDirectory(writer, Element.BINDINGS_DIRECTORY, node);\n        }\n        if (has(node, BROADCAST_PERIOD)) {\n            writeSimpleElement(writer, Element.BROADCAST_PERIOD, node);\n        }\n        if (has(node, CLUSTERED)) {\n            writeSimpleElement(writer, Element.CLUSTERED, node);\n        }\n        if (has(node, CLUSTER_PASSWORD)){\n            writeSimpleElement(writer, Element.CLUSTER_PASSWORD, node);\n        }\n        if (has(node, CLUSTER_USER)) {\n            writeSimpleElement(writer, Element.CLUSTER_USER, node);\n        }\n        if (has(node, CONNECTION_TTL_OVERRIDE)) {\n            writeSimpleElement(writer, Element.CONNECTION_TTL_OVERRIDE, node);\n        }\n        if (has(node, CONNECTOR)) {\n            writeConnectors(writer, node.get(CONNECTOR));\n        }\n        if (has(node, CONNECTOR_REF)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.CREATE_BINDINGS_DIR)) {\n            writeSimpleElement(writer, Element.CREATE_BINDINGS_DIR, node);\n        }\n        if (has(node, CommonAttributes.CREATE_JOURNAL_DIR)) {\n            writeSimpleElement(writer, Element.CREATE_BINDINGS_DIR, node);\n        }\n        if (has(node, CommonAttributes.FILE_DEPLOYMENT_ENABLED)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.GROUP_ADDRESS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.GROUP_PORT)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.GROUPING_HANDLER)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.ID_CACHE_SIZE)) {\n            writeSimpleElement(writer, Element.ID_CACHE_SIZE, node);\n        }\n        if (has(node, CommonAttributes.JMX_DOMAIN)) {\n            writeSimpleElement(writer, Element.JMX_DOMAIN, node);\n        }\n        if (has(node, CommonAttributes.JMX_MANAGEMENT_ENABLED)) {\n            writeSimpleElement(writer, Element.JMX_MANAGEMENT_ENABLED, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_BUFFER_SIZE)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.JOURNAL_BUFFER_TIMEOUT)) {\n            writeSimpleElement(writer, Element.JOURNAL_BUFFER_TIMEOUT, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_COMPACT_MIN_FILES)) {\n            writeSimpleElement(writer, Element.JOURNAL_COMPACT_MIN_FILES, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_COMPACT_PERCENTAGE)) {\n            writeSimpleElement(writer, Element.JOURNAL_COMPACT_PERCENTAGE, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_COMPACT_PERCENTAGE)) {\n            writeSimpleElement(writer, Element.JOURNAL_COMPACT_PERCENTAGE, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_DIRECTORY)) {\n            writeDirectory(writer, Element.JOURNAL_DIRECTORY, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_MIN_FILES)) {\n            writeSimpleElement(writer, Element.JOURNAL_MIN_FILES, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_SYNC_NON_TRANSACTIONAL)) {\n            writeSimpleElement(writer, Element.JOURNAL_SYNC_TRANSACTIONAL, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_SYNC_TRANSACTIONAL)) {\n            writeSimpleElement(writer, Element.JOURNAL_SYNC_TRANSACTIONAL, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_TYPE)) {\n            writeSimpleElement(writer, Element.JOURNAL_TYPE, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_FILE_SIZE)) {\n            writeSimpleElement(writer, Element.JOURNAL_FILE_SIZE, node);\n        }\n        if (has(node, CommonAttributes.JOURNAL_MAX_IO)) {\n            writeSimpleElement(writer, Element.JOURNAL_MAX_IO, node);\n        }\n        if (has(node, CommonAttributes.LARGE_MESSAGES_DIRECTORY)) {\n            writeDirectory(writer, Element.LARGE_MESSAGES_DIRECTORY, node);\n        }\n        if (has(node, CommonAttributes.LOCAL_BIND_ADDRESS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.LOCAL_BIND_PORT)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.LOG_JOURNAL_WRITE_RATE)) {\n            writeSimpleElement(writer, Element.LOG_JOURNAL_WRITE_RATE, node);\n        }\n        if (has(node, CommonAttributes.MANAGEMENT_ADDRESS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MANAGEMENT_NOTIFICATION_ADDRESS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MEMORY_MEASURE_INTERVAL)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MEMORY_WARNING_THRESHOLD)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_COUNTER_ENABLED)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_COUNTER_HISTORY_DAY_LIMIT)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_COUNTER_MAX_DAY_HISTORY)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_COUNTER_SAMPLE_PERIOD)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_EXPIRY_SCAN_PERIOD)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_EXPIRY_THREAD_PRIORITY)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.PAGING_DIRECTORY)) {\n            writeDirectory(writer, Element.PAGING_DIRECTORY, node);\n        }\n        if (has(node, CommonAttributes.PERF_BLAST_PAGES)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.PERSIST_ID_CACHE)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.PERSISTENCE_ENABLED)) {\n            writeSimpleElement(writer, Element.PERSISTENCE_ENABLED, node);\n        }\n        if (has(node, CommonAttributes.REFRESH_TIMEOUT)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.REMOTING_INTERCEPTORS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.RUN_SYNC_SPEED_TEST)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.SECURITY_ENABLED)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.SECURITY_INVALIDATION_INTERVAL)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.SECURITY_SETTING)) {\n            writeSecuritySettings(writer, node.get(CommonAttributes.SECURITY_SETTING));\n        }\n        if (has(node, CommonAttributes.SERVER_DUMP_INTERVAL)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.SHARED_STORE)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.TRANSACTION_TIMEOUT)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.TRANSACTION_TIMEOUT_SCAN_PERIOD)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.WILD_CARD_ROUTING_ENABLED)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.DEAD_LETTER_ADDRESS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.EXPIRY_ADDRESS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.REDELIVERY_DELAY)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MAX_DELIVERY_ATTEMPTS)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MAX_SIZE_BYTES_NODE_NAME)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.ADDRESS_FULL_MESSAGE_POLICY)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.PAGE_SIZE_BYTES_NODE_NAME)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.MESSAGE_COUNTER_HISTORY_DAY_LIMIT)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.LVQ)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.REDISTRIBUTION_DELAY)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.SEND_TO_DLA_ON_NO_ROUTE)) {\n            //unhandled\n        }\n        if (has(node, CommonAttributes.QUEUE)) {\n            writeQueues(writer, node.get(CommonAttributes.QUEUE));\n        }\n\n        writer.writeEndElement();\n    }","commit_id":"305d286b24b81bcb0ae017b9790a93066967091d","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void start() throws Exception {\n        //HornetQ needs the proper TCL\n        ClassLoader cl = Thread.currentThread().getContextClassLoader();\n        Thread.currentThread().setContextClassLoader(this.getClass().getClassLoader());\n\n        try {\n            //HornetQService set up the config and starts the HornetQServer\n\n            //Not using JNDI so we use the core services directly\n            sf = HornetQClient.createClientSessionFactory(new TransportConfiguration(InVMConnectorFactory.class.getName()));\n\n            //Create a queue\n            ClientSession coreSession = sf.createSession(false, true, true);\n            coreSession.createQueue(QUEUE_EXAMPLE_QUEUE, QUEUE_EXAMPLE_QUEUE, true);\n            coreSession.close();\n\n            session = sf.createSession();\n\n            consumer = session.createConsumer(QUEUE_EXAMPLE_QUEUE);\n            session.start();\n\n            new Thread(new Runnable() {\n\n                @Override\n                public void run() {\n                    while (!shutdown.get()) {\n                        try {\n                            ClientMessage message = consumer.receive(500);\n                            if (message == null) {\n                                continue;\n                            }\n                            String s = message.getStringProperty(BODY);\n                            log.info(\"-----> Received: \" + s);\n                            synchronized (receivedMessages) {\n                                receivedMessages.add(s);\n                            }\n                        } catch (HornetQException e) {\n                            log.error(\"Exception, closing receiver\", e);\n                        }\n                    }\n                }\n            }).start();\n\n            System.out.println(\"-----> Started queue and session\");\n        } finally {\n            Thread.currentThread().setContextClassLoader(cl);\n        }\n    }","id":27818,"modified_method":"@Override\n    public void start() throws Exception {\n        //HornetQ needs the proper TCL\n        ClassLoader cl = Thread.currentThread().getContextClassLoader();\n        Thread.currentThread().setContextClassLoader(this.getClass().getClassLoader());\n\n        try {\n            //HornetQService set up the config and starts the HornetQServer\n\n            //Not using JNDI so we use the core services directly\n            sf = HornetQClient.createServerLocatorWithoutHA(new TransportConfiguration(InVMConnectorFactory.class.getName())).createSessionFactory();\n\n            //Create a queue\n            ClientSession coreSession = sf.createSession(false, true, true);\n            coreSession.createQueue(QUEUE_EXAMPLE_QUEUE, QUEUE_EXAMPLE_QUEUE, true);\n            coreSession.close();\n\n            session = sf.createSession();\n\n            consumer = session.createConsumer(QUEUE_EXAMPLE_QUEUE);\n            session.start();\n\n            new Thread(new Runnable() {\n\n                @Override\n                public void run() {\n                    while (!shutdown.get()) {\n                        try {\n                            ClientMessage message = consumer.receive(500);\n                            if (message == null) {\n                                continue;\n                            }\n                            String s = message.getStringProperty(BODY);\n                            log.info(\"-----> Received: \" + s);\n                            synchronized (receivedMessages) {\n                                receivedMessages.add(s);\n                            }\n                        } catch (HornetQException e) {\n                            log.error(\"Exception, closing receiver\", e);\n                        }\n                    }\n                }\n            }).start();\n\n            System.out.println(\"-----> Started queue and session\");\n        } finally {\n            Thread.currentThread().setContextClassLoader(cl);\n        }\n    }","commit_id":"305d286b24b81bcb0ae017b9790a93066967091d","url":"https://github.com/wildfly/wildfly"},{"original_method":"static ClientSessionFactory createClientSessionFactory(String host, int port) {\n        final Map<String, Object> properties = new HashMap<String, Object>();\n        properties.put(\"host\", host);\n        properties.put(\"port\", port);\n        final TransportConfiguration configuration = new TransportConfiguration(NettyConnectorFactory.class.getName(), properties);\n        return HornetQClient.createClientSessionFactory(configuration);\n    }","id":27819,"modified_method":"static ClientSessionFactory createClientSessionFactory(String host, int port) throws Exception {\n        final Map<String, Object> properties = new HashMap<String, Object>();\n        properties.put(\"host\", host);\n        properties.put(\"port\", port);\n        final TransportConfiguration configuration = new TransportConfiguration(NettyConnectorFactory.class.getName(), properties);\n        return HornetQClient.createServerLocatorWithoutHA(configuration).createSessionFactory();\n    }","commit_id":"96a86fff1f6d3affce3bd24bf9bb9fe424134ce1","url":"https://github.com/wildfly/wildfly"},{"original_method":"/** {@inheritDoc} */\n    @Override\n    public void readElement(final XMLExtendedStreamReader reader, final List<ModelNode> list) throws XMLStreamException {\n\n        final ModelNode operation = new ModelNode();\n        operation.get(OP).set(ADD);\n        operation.get(OP_ADDR).add(SUBSYSTEM, MessagingExtension.SUBSYSTEM_NAME);\n        list.add(operation);\n\n        // Handle elements\n        int tag = reader.getEventType();\n        String localName = null;\n        do {\n            tag = reader.nextTag();\n            localName = reader.getLocalName();\n            final Element element = Element.forName(reader.getLocalName());\n            switch (element) {\n                case ACCEPTORS: {\n                    // add acceptors\n                    final ModelNode acceptors = processAcceptors(reader);\n                    operation.get(ACCEPTOR).set(acceptors);\n                    break;\n                } case ADDRESS_SETTINGS: {\n                    // add address settings\n                    final ModelNode addressSettings = processAddressSettings(reader);\n                    operation.get(ADDRESS_SETTING).set(addressSettings);\n                    break;\n                } case ASYNC_CONNECTION_EXECUTION_ENABLED:\n                    unhandledElement(reader, element);\n                    break;\n                case BACKUP:\n                    handleElementText(reader, element, operation);\n                    break;\n                case BACKUP_CONNECTOR_REF:\n                    handleElementText(reader, element, operation);\n                    break;\n                case BINDINGS_DIRECTORY: {\n                    final ModelNode directory = parseDirectory(reader);\n                    operation.get(BINDINGS_DIRECTORY).set(directory);\n                    break;\n                } case BROADCAST_PERIOD:\n                    handleElementText(reader, element, operation);\n                    break;\n                case CLUSTERED:\n                    handleElementText(reader, element, operation);\n                    break;\n                case CLUSTER_PASSWORD:\n                    handleElementText(reader, element, operation);\n                    break;\n                case CLUSTER_USER:\n                    handleElementText(reader, element, operation);\n                    break;\n                case CONNECTION_TTL_OVERRIDE:\n                    handleElementText(reader, element, operation);\n                    break;\n                case CONNECTORS: {\n                    final ModelNode connectors = processConnectors(reader);\n                    operation.get(CONNECTOR).set(connectors);\n                    break;\n                } case CONNECTOR_REF:\n                    unhandledElement(reader, element);\n                    break;\n                case CREATE_BINDINGS_DIR:\n                    handleElementText(reader, element, operation);\n                    break;\n                case CREATE_JOURNAL_DIR:\n                    handleElementText(reader, element, operation);\n                    break;\n                case FILE_DEPLOYMENT_ENABLED:\n                    unhandledElement(reader, element); // no filesystem support in AS\n                    break;\n                case GROUP_ADDRESS:\n                    unhandledElement(reader, element);\n                    break;\n                case GROUP_PORT:\n                    unhandledElement(reader, element);\n                    break;\n                case GROUPING_HANDLER:\n                    unhandledElement(reader, element);\n                    break;\n                case ID_CACHE_SIZE:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JMX_DOMAIN:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JMX_MANAGEMENT_ENABLED:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JOURNAL_BUFFER_SIZE:\n                    unhandledElement(reader, element);\n                    break;\n                case JOURNAL_BUFFER_TIMEOUT:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JOURNAL_COMPACT_MIN_FILES:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JOURNAL_COMPACT_PERCENTAGE:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JOURNAL_DIRECTORY: {\n                    final ModelNode directory = parseDirectory(reader);\n                    operation.get(JOURNAL_DIRECTORY).set(directory);\n                    break;\n                }\n                case JOURNAL_MIN_FILES: {\n                    operation.get(JOURNAL_MIN_FILES).set(reader.getElementText());\n                    break;\n                } case JOURNAL_SYNC_NON_TRANSACTIONAL:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JOURNAL_SYNC_TRANSACTIONAL:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JOURNAL_TYPE: {\n                    String journalType = reader.getElementText();\n                    if (journalType != null && journalType.length() > 0) {\n                        JournalType.valueOf(journalType.trim());\n                        operation.get(JOURNAL_TYPE).set(journalType.trim());\n                    }\n                    break;\n                } case JOURNAL_FILE_SIZE: {\n                    String text = reader.getElementText();\n                    if (text != null && text.length() > 0) {\n                        operation.get(JOURNAL_FILE_SIZE).set(text.trim());\n                    }\n                }\n                    break;\n                case JOURNAL_MAX_IO:\n                    handleElementText(reader, element, operation);\n                    break;\n                case LARGE_MESSAGES_DIRECTORY: {\n                    final ModelNode dir = parseDirectory(reader);\n                    operation.get(LARGE_MESSAGES_DIRECTORY).set(dir);\n                    break;\n                } case LOCAL_BIND_ADDRESS:\n                    unhandledElement(reader, element);\n                    break;\n                case LOCAL_BIND_PORT:\n                    unhandledElement(reader, element);\n                    break;\n                case LOG_JOURNAL_WRITE_RATE:\n                    handleElementText(reader, element, operation);\n                    break;\n                case MANAGEMENT_ADDRESS:\n                    unhandledElement(reader, element);\n                    break;\n                case MANAGEMENT_NOTIFICATION_ADDRESS:\n                    unhandledElement(reader, element);\n                    break;\n                case MEMORY_MEASURE_INTERVAL:\n                    unhandledElement(reader, element);\n                    break;\n                case MEMORY_WARNING_THRESHOLD:\n                    unhandledElement(reader, element);\n                    break;\n                case MESSAGE_COUNTER_ENABLED:\n                    unhandledElement(reader, element);\n                    break;\n                case MESSAGE_COUNTER_MAX_DAY_HISTORY:\n                    unhandledElement(reader, element);\n                    break;\n                case MESSAGE_COUNTER_SAMPLE_PERIOD:\n                    unhandledElement(reader, element);\n                    break;\n                case MESSAGE_EXPIRY_SCAN_PERIOD:\n                    unhandledElement(reader, element);\n                    break;\n                case MESSAGE_EXPIRY_THREAD_PRIORITY:\n                    unhandledElement(reader, element);\n                    break;\n                case PAGING_DIRECTORY: {\n                    final ModelNode directory = parseDirectory(reader);\n                    operation.get(PAGING_DIRECTORY).set(directory);\n                    break;\n                } case PERF_BLAST_PAGES:\n                    unhandledElement(reader, element);\n                    break;\n                case PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY:\n                    unhandledElement(reader, element);\n                    break;\n                case PERSIST_ID_CACHE:\n                    unhandledElement(reader, element);\n                    break;\n                case PERSISTENCE_ENABLED: {\n                    final String value = reader.getElementText();\n                    if(value != null && value.length() > 0) {\n                        boolean enabled = Boolean.valueOf(value.trim());\n                        operation.get(PERSISTENCE_ENABLED).set(enabled);\n                    }\n                    break;\n                } case REFRESH_TIMEOUT:\n                    unhandledElement(reader, element);\n                    break;\n                case REMOTING_INTERCEPTORS:\n                    unhandledElement(reader, element);\n                    break;\n                case RUN_SYNC_SPEED_TEST:\n                    unhandledElement(reader, element);\n                    break;\n                case SECURITY_ENABLED:\n                    unhandledElement(reader, element);\n                    break;\n                case SECURITY_INVALIDATION_INTERVAL:\n                    unhandledElement(reader, element);\n                    break;\n                case SECURITY_SETTINGS: {\n                    // process security settings\n                    final ModelNode securitySettings = processSecuritySettings(reader);\n                    operation.get(SECURITY_SETTING).set(securitySettings);\n                    break;\n                } case SERVER_DUMP_INTERVAL:\n                    unhandledElement(reader, element);\n                    break;\n                case SHARED_STORE:\n                    unhandledElement(reader, element);\n                    break;\n                case TRANSACTION_TIMEOUT:\n                    unhandledElement(reader, element);\n                    break;\n                case TRANSACTION_TIMEOUT_SCAN_PERIOD:\n                    unhandledElement(reader, element);\n                    break;\n                case WILD_CARD_ROUTING_ENABLED:\n                    unhandledElement(reader, element);\n                    break;\n                case DEAD_LETTER_ADDRESS_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case EXPIRY_ADDRESS_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case REDELIVERY_DELAY_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case MAX_DELIVERY_ATTEMPTS:\n                    unhandledElement(reader, element);\n                    break;\n                case MAX_SIZE_BYTES_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case ADDRESS_FULL_MESSAGE_POLICY_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case PAGE_SIZE_BYTES_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case MESSAGE_COUNTER_HISTORY_DAY_LIMIT_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case LVQ_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case REDISTRIBUTION_DELAY_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case SEND_TO_DLA_ON_NO_ROUTE:\n                    unhandledElement(reader, element);\n                    break;\n                case QUEUES: {\n                    final ModelNode queues = parseQueues(reader);\n                    operation.get(QUEUE).set(queues);\n                    break;\n                } case SUBSYSTEM:\n                    // The end of the subsystem element\n                    break;\n                default:\n                    throw ParseUtils.unexpectedElement(reader);\n            }\n        } while (reader.hasNext() && localName.equals(\"subsystem\") == false);\n    }","id":27820,"modified_method":"/** {@inheritDoc} */\n    @Override\n    public void readElement(final XMLExtendedStreamReader reader, final List<ModelNode> list) throws XMLStreamException {\n\n        final ModelNode operation = new ModelNode();\n        operation.get(OP).set(ADD);\n        operation.get(OP_ADDR).add(SUBSYSTEM, MessagingExtension.SUBSYSTEM_NAME);\n        list.add(operation);\n\n        // Handle elements\n        int tag = reader.getEventType();\n        String localName = null;\n        do {\n            tag = reader.nextTag();\n            localName = reader.getLocalName();\n            final Element element = Element.forName(reader.getLocalName());\n            switch (element) {\n                case ACCEPTORS: {\n                    // add acceptors\n                    final ModelNode acceptors = processAcceptors(reader);\n                    operation.get(ACCEPTOR).set(acceptors);\n                    break;\n                } case ADDRESS_SETTINGS: {\n                    // add address settings\n                    final ModelNode addressSettings = processAddressSettings(reader);\n                    operation.get(ADDRESS_SETTING).set(addressSettings);\n                    break;\n                } case ASYNC_CONNECTION_EXECUTION_ENABLED:\n                    unhandledElement(reader, element);\n                    break;\n                case BACKUP:\n                    handleElementText(reader, element, operation);\n                    break;\n                case BINDINGS_DIRECTORY: {\n                    final ModelNode directory = parseDirectory(reader);\n                    operation.get(BINDINGS_DIRECTORY).set(directory);\n                    break;\n                } case BROADCAST_PERIOD:\n                    handleElementText(reader, element, operation);\n                    break;\n                case CLUSTERED:\n                    handleElementText(reader, element, operation);\n                    break;\n                case CLUSTER_PASSWORD:\n                    handleElementText(reader, element, operation);\n                    break;\n                case CLUSTER_USER:\n                    handleElementText(reader, element, operation);\n                    break;\n                case CONNECTION_TTL_OVERRIDE:\n                    handleElementText(reader, element, operation);\n                    break;\n                case CONNECTORS: {\n                    final ModelNode connectors = processConnectors(reader);\n                    operation.get(CONNECTOR).set(connectors);\n                    break;\n                } case CONNECTOR_REF:\n                    unhandledElement(reader, element);\n                    break;\n                case CREATE_BINDINGS_DIR:\n                    handleElementText(reader, element, operation);\n                    break;\n                case CREATE_JOURNAL_DIR:\n                    handleElementText(reader, element, operation);\n                    break;\n                case FILE_DEPLOYMENT_ENABLED:\n                    unhandledElement(reader, element); // no filesystem support in AS\n                    break;\n                case GROUP_ADDRESS:\n                    unhandledElement(reader, element);\n                    break;\n                case GROUP_PORT:\n                    unhandledElement(reader, element);\n                    break;\n                case GROUPING_HANDLER:\n                    unhandledElement(reader, element);\n                    break;\n                case ID_CACHE_SIZE:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JMX_DOMAIN:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JMX_MANAGEMENT_ENABLED:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JOURNAL_BUFFER_SIZE:\n                    unhandledElement(reader, element);\n                    break;\n                case JOURNAL_BUFFER_TIMEOUT:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JOURNAL_COMPACT_MIN_FILES:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JOURNAL_COMPACT_PERCENTAGE:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JOURNAL_DIRECTORY: {\n                    final ModelNode directory = parseDirectory(reader);\n                    operation.get(JOURNAL_DIRECTORY).set(directory);\n                    break;\n                }\n                case JOURNAL_MIN_FILES: {\n                    operation.get(JOURNAL_MIN_FILES).set(reader.getElementText());\n                    break;\n                } case JOURNAL_SYNC_NON_TRANSACTIONAL:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JOURNAL_SYNC_TRANSACTIONAL:\n                    handleElementText(reader, element, operation);\n                    break;\n                case JOURNAL_TYPE: {\n                    String journalType = reader.getElementText();\n                    if (journalType != null && journalType.length() > 0) {\n                        JournalType.valueOf(journalType.trim());\n                        operation.get(JOURNAL_TYPE).set(journalType.trim());\n                    }\n                    break;\n                } case JOURNAL_FILE_SIZE: {\n                    String text = reader.getElementText();\n                    if (text != null && text.length() > 0) {\n                        operation.get(JOURNAL_FILE_SIZE).set(text.trim());\n                    }\n                }\n                    break;\n                case JOURNAL_MAX_IO:\n                    handleElementText(reader, element, operation);\n                    break;\n                case LARGE_MESSAGES_DIRECTORY: {\n                    final ModelNode dir = parseDirectory(reader);\n                    operation.get(LARGE_MESSAGES_DIRECTORY).set(dir);\n                    break;\n                } case LOCAL_BIND_ADDRESS:\n                    unhandledElement(reader, element);\n                    break;\n                case LOCAL_BIND_PORT:\n                    unhandledElement(reader, element);\n                    break;\n                case LOG_JOURNAL_WRITE_RATE:\n                    handleElementText(reader, element, operation);\n                    break;\n                case MANAGEMENT_ADDRESS:\n                    unhandledElement(reader, element);\n                    break;\n                case MANAGEMENT_NOTIFICATION_ADDRESS:\n                    unhandledElement(reader, element);\n                    break;\n                case MEMORY_MEASURE_INTERVAL:\n                    unhandledElement(reader, element);\n                    break;\n                case MEMORY_WARNING_THRESHOLD:\n                    unhandledElement(reader, element);\n                    break;\n                case MESSAGE_COUNTER_ENABLED:\n                    unhandledElement(reader, element);\n                    break;\n                case MESSAGE_COUNTER_MAX_DAY_HISTORY:\n                    unhandledElement(reader, element);\n                    break;\n                case MESSAGE_COUNTER_SAMPLE_PERIOD:\n                    unhandledElement(reader, element);\n                    break;\n                case MESSAGE_EXPIRY_SCAN_PERIOD:\n                    unhandledElement(reader, element);\n                    break;\n                case MESSAGE_EXPIRY_THREAD_PRIORITY:\n                    unhandledElement(reader, element);\n                    break;\n                case PAGING_DIRECTORY: {\n                    final ModelNode directory = parseDirectory(reader);\n                    operation.get(PAGING_DIRECTORY).set(directory);\n                    break;\n                } case PERF_BLAST_PAGES:\n                    unhandledElement(reader, element);\n                    break;\n                case PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY:\n                    unhandledElement(reader, element);\n                    break;\n                case PERSIST_ID_CACHE:\n                    unhandledElement(reader, element);\n                    break;\n                case PERSISTENCE_ENABLED: {\n                    final String value = reader.getElementText();\n                    if(value != null && value.length() > 0) {\n                        boolean enabled = Boolean.valueOf(value.trim());\n                        operation.get(PERSISTENCE_ENABLED).set(enabled);\n                    }\n                    break;\n                } case REFRESH_TIMEOUT:\n                    unhandledElement(reader, element);\n                    break;\n                case REMOTING_INTERCEPTORS:\n                    unhandledElement(reader, element);\n                    break;\n                case RUN_SYNC_SPEED_TEST:\n                    unhandledElement(reader, element);\n                    break;\n                case SECURITY_ENABLED:\n                    unhandledElement(reader, element);\n                    break;\n                case SECURITY_INVALIDATION_INTERVAL:\n                    unhandledElement(reader, element);\n                    break;\n                case SECURITY_SETTINGS: {\n                    // process security settings\n                    final ModelNode securitySettings = processSecuritySettings(reader);\n                    operation.get(SECURITY_SETTING).set(securitySettings);\n                    break;\n                } case SERVER_DUMP_INTERVAL:\n                    unhandledElement(reader, element);\n                    break;\n                case SHARED_STORE:\n                    unhandledElement(reader, element);\n                    break;\n                case TRANSACTION_TIMEOUT:\n                    unhandledElement(reader, element);\n                    break;\n                case TRANSACTION_TIMEOUT_SCAN_PERIOD:\n                    unhandledElement(reader, element);\n                    break;\n                case WILD_CARD_ROUTING_ENABLED:\n                    unhandledElement(reader, element);\n                    break;\n                case DEAD_LETTER_ADDRESS_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case EXPIRY_ADDRESS_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case REDELIVERY_DELAY_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case MAX_DELIVERY_ATTEMPTS:\n                    unhandledElement(reader, element);\n                    break;\n                case MAX_SIZE_BYTES_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case ADDRESS_FULL_MESSAGE_POLICY_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case PAGE_SIZE_BYTES_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case MESSAGE_COUNTER_HISTORY_DAY_LIMIT_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case LVQ_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case REDISTRIBUTION_DELAY_NODE_NAME:\n                    unhandledElement(reader, element);\n                    break;\n                case SEND_TO_DLA_ON_NO_ROUTE:\n                    unhandledElement(reader, element);\n                    break;\n                case QUEUES: {\n                    final ModelNode queues = parseQueues(reader);\n                    operation.get(QUEUE).set(queues);\n                    break;\n                } case SUBSYSTEM:\n                    // The end of the subsystem element\n                    break;\n                default:\n                    throw ParseUtils.unexpectedElement(reader);\n            }\n        } while (reader.hasNext() && localName.equals(\"subsystem\") == false);\n    }","commit_id":"96a86fff1f6d3affce3bd24bf9bb9fe424134ce1","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Before\n    public void start() throws Exception {\n        System.out.println(\"CLASSLOADER \" + this.getClass().getClassLoader());\n        //FIXME Arquillian Alpha bug - it also wants to execute this on the client despite this test being IN_CONTAINER\n        if (!isInContainer()) {\n            return;\n        }\n\n        //HornetQService set up the config and starts the HornetQServer\n\n        //Not using JNDI so we use the core services directly\n        sf = HornetQClient.createClientSessionFactory(new TransportConfiguration(InVMConnectorFactory.class.getName()));\n\n        //Create a queue\n        ClientSession coreSession = sf.createSession(false, true, true);\n        coreSession.createQueue(QUEUE_EXAMPLE_QUEUE, QUEUE_EXAMPLE_QUEUE, true);\n        coreSession.close();\n\n        session = sf.createSession();\n\n        consumer = session.createConsumer(QUEUE_EXAMPLE_QUEUE);\n        session.start();\n\n        new Thread(new Runnable() {\n\n            @Override\n            public void run() {\n                while (!shutdown.get()) {\n                    try {\n                        ClientMessage message = consumer.receive(500);\n                        if (message == null) {\n                            continue;\n                        }\n                        String s = message.getStringProperty(BODY);\n                        log.info(\"-----> Received: \" + s);\n                        receivedMessage = s;\n                        latch.countDown();\n                    } catch (HornetQException e) {\n                        log.error(\"Exception, closing receiver\", e);\n                    }\n                }\n            }\n        }).start();\n\n        log.info(\"-----> Started queue and session\");\n    }","id":27821,"modified_method":"@Before\n    public void start() throws Exception {\n        System.out.println(\"CLASSLOADER \" + this.getClass().getClassLoader());\n        //FIXME Arquillian Alpha bug - it also wants to execute this on the client despite this test being IN_CONTAINER\n        if (!isInContainer()) {\n            return;\n        }\n\n        //HornetQService set up the config and starts the HornetQServer\n\n        //Not using JNDI so we use the core services directly\n        sf = HornetQClient.createServerLocatorWithoutHA(new TransportConfiguration(InVMConnectorFactory.class.getName())).createSessionFactory();\n\n        //Create a queue\n        ClientSession coreSession = sf.createSession(false, true, true);\n        coreSession.createQueue(QUEUE_EXAMPLE_QUEUE, QUEUE_EXAMPLE_QUEUE, true);\n        coreSession.close();\n\n        session = sf.createSession();\n\n        consumer = session.createConsumer(QUEUE_EXAMPLE_QUEUE);\n        session.start();\n\n        new Thread(new Runnable() {\n\n            @Override\n            public void run() {\n                while (!shutdown.get()) {\n                    try {\n                        ClientMessage message = consumer.receive(500);\n                        if (message == null) {\n                            continue;\n                        }\n                        String s = message.getStringProperty(BODY);\n                        log.info(\"-----> Received: \" + s);\n                        receivedMessage = s;\n                        latch.countDown();\n                    } catch (HornetQException e) {\n                        log.error(\"Exception, closing receiver\", e);\n                    }\n                }\n            }\n        }).start();\n\n        log.info(\"-----> Started queue and session\");\n    }","commit_id":"96a86fff1f6d3affce3bd24bf9bb9fe424134ce1","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n  protected void unBufferedWrite(byte[] b, int off, int len) throws IOException {\n    if (mReservedBytes < len) {\n      mReservedBytes += requestSpace(len - mReservedBytes);\n    }\n    mWriter.append(ByteBuffer.wrap(b, off, len));\n    mReservedBytes -= len;\n    mFlushedBytes += len;\n    ClientContext.getClientMetrics().incBytesWrittenLocal(len);\n  }","id":27822,"modified_method":"@Override\n  protected void unBufferedWrite(byte[] b, int off, int len) throws IOException {\n    if (mReservedBytes < len) {\n      long bytesToRequest = len - mReservedBytes;\n      if (mBlockWorkerClient.requestSpace(mBlockId, bytesToRequest)) {\n        mReservedBytes += bytesToRequest;\n      }\n    }\n    mWriter.append(ByteBuffer.wrap(b, off, len));\n    mReservedBytes -= len;\n    mFlushedBytes += len;\n    ClientContext.getClientMetrics().incBytesWrittenLocal(len);\n  }","commit_id":"9191a0a07cbf26c7ec90e00547ad8afab202dcb5","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void flush() throws IOException {\n    int bytesToWrite = mBuffer.position();\n    if (mReservedBytes < bytesToWrite) {\n      mReservedBytes += requestSpace(bytesToWrite - mReservedBytes);\n    }\n    mBuffer.flip();\n    mWriter.append(mBuffer);\n    mBuffer.clear();\n    mReservedBytes -= bytesToWrite;\n    mFlushedBytes += bytesToWrite;\n    ClientContext.getClientMetrics().incBytesWrittenLocal(bytesToWrite);\n  }","id":27823,"modified_method":"@Override\n  public void flush() throws IOException {\n    int bytesToWrite = mBuffer.position();\n    if (mReservedBytes < bytesToWrite) {\n      long bytesToRequest = bytesToWrite - mReservedBytes;\n      if (mBlockWorkerClient.requestSpace(mBlockId, bytesToRequest)) {\n        mReservedBytes += bytesToRequest;\n      }\n    }\n    mBuffer.flip();\n    mWriter.append(mBuffer);\n    mBuffer.clear();\n    mReservedBytes -= bytesToWrite;\n    mFlushedBytes += bytesToWrite;\n    ClientContext.getClientMetrics().incBytesWrittenLocal(bytesToWrite);\n  }","commit_id":"9191a0a07cbf26c7ec90e00547ad8afab202dcb5","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public synchronized boolean requestSpace(final long blockId, final long requestBytes)\n      throws IOException {\n    try {\n      return retryRPC(new RpcCallableThrowsAlluxioTException<Boolean>() {\n        @Override\n        public Boolean call() throws AlluxioTException, TException {\n          return mClient.requestSpace(mSessionId, blockId, requestBytes);\n        }\n      });\n    } catch (AlluxioException e) {\n      throw new IOException(e);\n    }\n  }","id":27824,"modified_method":"@Override\n  public synchronized boolean requestSpace(final long blockId, final long requestBytes)\n      throws IOException {\n    try {\n      boolean requested = retryRPC(new RpcCallableThrowsAlluxioTException<Boolean>() {\n        @Override\n        public Boolean call() throws AlluxioTException, TException {\n          return mClient.requestSpace(mSessionId, blockId, requestBytes);\n        }\n      });\n      if (!requested) {\n        throw new IOException(ExceptionMessage.CANNOT_REQUEST_SPACE.getMessage(mAddress, blockId));\n      }\n      return true;\n    } catch (AlluxioException e) {\n      throw new IOException(e);\n    }\n  }","commit_id":"9191a0a07cbf26c7ec90e00547ad8afab202dcb5","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public synchronized String requestBlockLocation(final long blockId, final long initialBytes)\n      throws IOException {\n    try {\n      return retryRPC(new RpcCallableThrowsAlluxioTException<String>() {\n        @Override\n        public String call() throws AlluxioTException, TException {\n          return mClient.requestBlockLocation(mSessionId, blockId, initialBytes);\n        }\n      });\n    } catch (AlluxioException e) {\n      if (e instanceof WorkerOutOfSpaceException) {\n        throw new IOException(\"Failed to request \" + initialBytes, e);\n      } else {\n        throw new IOException(e);\n      }\n    }\n  }","id":27825,"modified_method":"@Override\n  public synchronized String requestBlockLocation(final long blockId, final long initialBytes)\n      throws IOException {\n    try {\n      return retryRPC(new RpcCallableThrowsAlluxioTException<String>() {\n        @Override\n        public String call() throws AlluxioTException, TException {\n          return mClient.requestBlockLocation(mSessionId, blockId, initialBytes);\n        }\n      });\n    } catch (WorkerOutOfSpaceException e) {\n      throw new IOException(ExceptionMessage.CANNOT_REQUEST_SPACE.getMessage(mAddress, blockId));\n    } catch (AlluxioException e) {\n      throw new IOException(e);\n    }\n  }","commit_id":"9191a0a07cbf26c7ec90e00547ad8afab202dcb5","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Frees a file.\n   *\n   * @param path the path to free\n   * @param options method options\n   * @throws IOException if an I/O error occurs\n   * @throws TachyonException if a Tachyon error occurs\n   */\n  public synchronized void free(final TachyonURI path, final FreeOptions options)\n      throws IOException, TachyonException {\n    retryRPC(new RpcCallableThrowsTachyonTException<Boolean>() {\n      @Override\n      public Boolean call() throws TachyonTException, TException {\n        // TODO(calvin): Look into changing the master side implementation to take a uri\n        return mClient.free(mClient.getFileId(path.getPath()), options.isRecursive());\n      }\n    });\n  }","id":27826,"modified_method":"/**\n   * Frees a file.\n   *\n   * @param path the path to free\n   * @param options method options\n   * @throws IOException if an I/O error occurs\n   * @throws TachyonException if a Tachyon error occurs\n   */\n  public synchronized void free(final TachyonURI path, final FreeOptions options)\n      throws IOException, TachyonException {\n    retryRPC(new RpcCallableThrowsTachyonTException<Void>() {\n      @Override\n      public Void call() throws TachyonTException, TException {\n        // TODO(calvin): Look into changing the master side implementation to take a uri\n        mClient.free(path.getPath(), options.isRecursive());\n        return null;\n      }\n    });\n  }","commit_id":"50446b17fe7875df379bc94486ec2169b4c78241","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Creates a new file.\n   *\n   * @param path the file path\n   * @param options method options\n   * @return the uri referencing the newly created file\n   * @throws IOException if an I/O error occurs\n   * @throws TachyonException if a Tachyon error occurs\n   */\n  public synchronized TachyonURI createFile(final TachyonURI path, final CreateFileOptions options)\n      throws IOException, TachyonException {\n    return retryRPC(new RpcCallableThrowsTachyonTException<TachyonURI>() {\n      @Override\n      public TachyonURI call() throws TachyonTException, TException {\n        mClient.createFile(path.getPath(), options.toThrift());\n        // TODO(calvin): Look into changing the master side implementation\n        return path;\n      }\n    });\n  }","id":27827,"modified_method":"/**\n   * Creates a new file.\n   *\n   * @param path the file path\n   * @param options method options\n   * @throws IOException if an I/O error occurs\n   * @throws TachyonException if a Tachyon error occurs\n   */\n  public synchronized void createFile(final TachyonURI path, final CreateFileOptions options)\n      throws IOException, TachyonException {\n    retryRPC(new RpcCallableThrowsTachyonTException<Void>() {\n      @Override\n      public Void call() throws TachyonTException, TException {\n        mClient.createFile(path.getPath(), options.toThrift());\n        return null;\n      }\n    });\n  }","commit_id":"50446b17fe7875df379bc94486ec2169b4c78241","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Unmounts the given Tachyon path.\n   *\n   * @param tachyonPath the Tachyon path\n   * @return true if the given Tachyon path can be unmounted, false otherwise\n   * @throws TachyonException if a Tachyon error occurs\n   * @throws IOException an I/O error occurs\n   */\n  public synchronized boolean unmount(final TachyonURI tachyonPath)\n      throws TachyonException, IOException {\n    return retryRPC(new RpcCallableThrowsTachyonTException<Boolean>() {\n      @Override\n      public Boolean call() throws TachyonTException, TException {\n        return mClient.unmount(tachyonPath.toString());\n      }\n    });\n  }","id":27828,"modified_method":"/**\n   * Unmounts the given Tachyon path.\n   *\n   * @param tachyonPath the Tachyon path\n   * @throws TachyonException if a Tachyon error occurs\n   * @throws IOException an I/O error occurs\n   */\n  public synchronized void unmount(final TachyonURI tachyonPath)\n      throws TachyonException, IOException {\n    retryRPC(new RpcCallableThrowsTachyonTException<Void>() {\n      @Override\n      public Void call() throws TachyonTException, TException {\n        mClient.unmount(tachyonPath.toString());\n        return null;\n      }\n    });\n  }","commit_id":"50446b17fe7875df379bc94486ec2169b4c78241","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Mounts the given UFS path under the given Tachyon path.\n   *\n   * @param tachyonPath the Tachyon path\n   * @param ufsPath the UFS path\n   * @return true if the given UFS path can be mounted, false otherwise\n   * @throws TachyonException if a Tachyon error occurs\n   * @throws IOException an I/O error occurs\n   */\n  public synchronized boolean mount(final TachyonURI tachyonPath, final TachyonURI ufsPath)\n      throws TachyonException, IOException {\n    return retryRPC(new RpcCallableThrowsTachyonTException<Boolean>() {\n      @Override\n      public Boolean call() throws TachyonTException, TException {\n        return mClient.mount(tachyonPath.toString(), ufsPath.toString());\n      }\n    });\n  }","id":27829,"modified_method":"/**\n   * Mounts the given UFS path under the given Tachyon path.\n   *\n   * @param tachyonPath the Tachyon path\n   * @param ufsPath the UFS path\n   * @throws TachyonException if a Tachyon error occurs\n   * @throws IOException an I/O error occurs\n   */\n  public synchronized void mount(final TachyonURI tachyonPath, final TachyonURI ufsPath)\n      throws TachyonException, IOException {\n    retryRPC(new RpcCallableThrowsTachyonTException<Void>() {\n      @Override\n      public Void call() throws TachyonTException, TException {\n        mClient.mount(tachyonPath.toString(), ufsPath.toString());\n        return null;\n      }\n    });\n  }","commit_id":"50446b17fe7875df379bc94486ec2169b4c78241","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Renames a file or a directory.\n   *\n   * @param src the path to rename\n   * @param dst new file path\n   * @return whether operation succeeded or not\n   * @throws IOException if an I/O error occurs\n   * @throws TachyonException if a Tachyon error occurs\n   */\n  public synchronized boolean rename(final TachyonURI src, final TachyonURI dst)\n      throws IOException, TachyonException {\n    return retryRPC(new RpcCallableThrowsTachyonTException<Boolean>() {\n      @Override\n      public Boolean call() throws TachyonTException, TException {\n        // TODO(calvin): Look into changing the master side implementation to take a uri\n        return mClient.rename(mClient.getFileId(src.getPath()), dst.getPath());\n      }\n    });\n  }","id":27830,"modified_method":"/**\n   * Renames a file or a directory.\n   *\n   * @param src the path to rename\n   * @param dst new file path\n   * @throws IOException if an I/O error occurs\n   * @throws TachyonException if a Tachyon error occurs\n   */\n  public synchronized void rename(final TachyonURI src, final TachyonURI dst)\n      throws IOException, TachyonException {\n    retryRPC(new RpcCallableThrowsTachyonTException<Void>() {\n      @Override\n      public Void call() throws TachyonTException, TException {\n        // TODO(calvin): Look into changing the master side implementation to take a uri\n        mClient.rename(src.getPath(), dst.getPath());\n        return null;\n      }\n    });\n  }","commit_id":"50446b17fe7875df379bc94486ec2169b4c78241","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Sets the file state.\n   *\n   * @param path the file path\n   * @param options the file state options to be set\n   * @throws IOException if an I/O error occurs\n   * @throws TachyonException if a Tachyon error occurs\n   */\n  public synchronized void setAttribute(final TachyonURI path, final SetAttributeOptions options)\n      throws IOException, TachyonException {\n    retryRPC(new RpcCallableThrowsTachyonTException<Void>() {\n      @Override\n      public Void call() throws TachyonTException, TException {\n        // TODO(calvin): Look into changing the master side implementation to take a uri\n        mClient.setState(mClient.getFileId(path.getPath()), options.toThrift());\n        return null;\n      }\n    });\n  }","id":27831,"modified_method":"/**\n   * Sets the file attributes.\n   *\n   * @param path the file path\n   * @param options the file attribute options to be set\n   * @throws IOException if an I/O error occurs\n   * @throws TachyonException if a Tachyon error occurs\n   */\n  public synchronized void setAttribute(final TachyonURI path, final SetAttributeOptions options)\n      throws IOException, TachyonException {\n    retryRPC(new RpcCallableThrowsTachyonTException<Void>() {\n      @Override\n      public Void call() throws TachyonTException, TException {\n        // TODO(calvin): Look into changing the master side implementation to take a uri\n        mClient.setAttribute(path.getPath(), options.toThrift());\n        return null;\n      }\n    });\n  }","commit_id":"50446b17fe7875df379bc94486ec2169b4c78241","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Schedules the async persistence of the given file.\n   *\n   * @param fileId the file id\n   * @return RPC result of the scheduling\n   * @throws TachyonException if a Tachyon error occurs\n   * @throws IOException if an I/O error occurs\n   */\n  public synchronized Void scheduleAsyncPersist(final long fileId)\n      throws TachyonException, IOException {\n    return retryRPC(new RpcCallableThrowsTachyonTException<Void>() {\n      @Override\n      public Void call() throws TachyonTException, TException {\n        mClient.scheduleAsyncPersist(fileId);\n        return null;\n      }\n    });\n  }","id":27832,"modified_method":"/**\n   * Schedules the async persistence of the given file.\n   *\n   * @param fileId the file id\n   * @throws TachyonException if a Tachyon error occurs\n   * @throws IOException if an I/O error occurs\n   */\n  public synchronized void scheduleAsyncPersist(final long fileId)\n      throws TachyonException, IOException {\n    retryRPC(new RpcCallableThrowsTachyonTException<Void>() {\n      @Override\n      public Void call() throws TachyonTException, TException {\n        mClient.scheduleAsyncPersist(fileId);\n        return null;\n      }\n    });\n  }","commit_id":"bb12305bf09097f6d6936ef0cd1052a09fb9d4e2","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void seek(long pos) throws IOException {\n    if (pos == mCurrentPosition) {\n      return;\n    }\n\n    if (pos < 0) {\n      throw new IOException(ExceptionMessage.SEEK_NEGATIVE.getMessage(pos));\n    }\n    if (pos > mFileInfo.getLength()) {\n      throw new IOException(ExceptionMessage.SEEK_PAST_EOF.getMessage(pos, mFileInfo.getLength()));\n    }\n\n    if (mTachyonFileInputStream != null) {\n      mTachyonFileInputStream.seek(pos);\n    } else {\n      getHdfsInputStream(pos);\n      // TODO(calvin): Optimize for the case when the data is still valid in the buffer\n      // Invalidate buffer\n      mBufferLimit = -1;\n    }\n\n    mCurrentPosition = pos;\n  }","id":27833,"modified_method":"/**\n   * Seek to the given offset from the start of the file. The next {@link #read()} will be from that\n   * location. Can't seek past the end of the file.\n   *\n   * @param pos the position to seek to\n   * @throws IOException if the position is negative or exceeds the end of the file\n   */\n  @Override\n  public void seek(long pos) throws IOException {\n    if (pos == mCurrentPosition) {\n      return;\n    }\n\n    if (pos < 0) {\n      throw new IOException(ExceptionMessage.SEEK_NEGATIVE.getMessage(pos));\n    }\n    if (pos > mFileInfo.getLength()) {\n      throw new IOException(ExceptionMessage.SEEK_PAST_EOF.getMessage(pos, mFileInfo.getLength()));\n    }\n\n    if (mTachyonFileInputStream != null) {\n      mTachyonFileInputStream.seek(pos);\n    } else {\n      getHdfsInputStream(pos);\n      // TODO(calvin): Optimize for the case when the data is still valid in the buffer\n      // Invalidate buffer\n      mBufferLimit = -1;\n    }\n\n    mCurrentPosition = pos;\n  }","commit_id":"bb12305bf09097f6d6936ef0cd1052a09fb9d4e2","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @inheritDoc\n   *\n   *\n   * The rename works as follows:\n   * If src path exists: src renamed to dst. src is deleted on the success.\n   * If src path is not exists: src is assumed to be directory.\n   * Both src and dst paths are formatted to a/b/c/\n   * Listing is performed on src.\n   * For each returned object: src in the name is replaced with dst.\n   * Object is deleted if copy was successful.\n   * Directory rename always returns true.\n   *\n   * @param src The source file or folder name\n   * @param dst The destination file or folder name\n   * @return true if succeed, false otherwise\n   * @throws IOException if a non-Tachyon error occurs\n   * @see tachyon.underfs.UnderFileSystem#rename(java.lang.String, java.lang.String)\n   */\n  @Override\n  public boolean rename(String src, String dst) throws IOException {\n    String strippedSrcPath = stripPrefixIfPresent(src);\n    String strippedDstPath = stripPrefixIfPresent(dst);\n    if (exists(src) && copy(strippedSrcPath, strippedDstPath)) {\n      return delete(src, true);\n    }\n    Container c = mAccount.getContainer(mContainerName);\n    strippedSrcPath = makeQualifiedPath(strippedSrcPath);\n    strippedDstPath = makeQualifiedPath(strippedDstPath);\n    PaginationMap paginationMap = c.getPaginationMap(strippedSrcPath, 100);\n    for (int page = 0; page < paginationMap.getNumberOfPages(); page++) {\n      for (StoredObject obj : c.list(paginationMap, page)) {\n        if (obj.exists() && copy(obj.getName(),\n            obj.getName().replace(strippedSrcPath, strippedDstPath))) {\n          delete(obj.getName(), false);\n        }\n      }\n    }\n    return true;\n  }","id":27834,"modified_method":"/**\n   * @inheritDoc\n   */\n  @Override\n  public boolean rename(String src, String dst) throws IOException {\n    String strippedSrcPath = stripPrefixIfPresent(src);\n    String strippedDstPath = stripPrefixIfPresent(dst);\n    if (exists(src) && copy(strippedSrcPath, strippedDstPath)) {\n      return delete(src, true);\n    }\n    Container c = mAccount.getContainer(mContainerName);\n    strippedSrcPath = makeQualifiedPath(strippedSrcPath);\n    strippedDstPath = makeQualifiedPath(strippedDstPath);\n    PaginationMap paginationMap = c.getPaginationMap(strippedSrcPath, 100);\n    for (int page = 0; page < paginationMap.getNumberOfPages(); page++) {\n      for (StoredObject obj : c.list(paginationMap, page)) {\n        if (obj.exists() && copy(obj.getName(),\n            obj.getName().replace(strippedSrcPath, strippedDstPath))) {\n          delete(obj.getName(), false);\n        }\n      }\n    }\n    return true;\n  }","commit_id":"bb12305bf09097f6d6936ef0cd1052a09fb9d4e2","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @inheritDoc\n   *\n   * Parent will not be deleted.\n   *\n   * @param path the file or folder name\n   * @param recursive will delete all objects with given prefix\n   * @return always returns {@code true}\n   * @throws IOException if a non-Tachyon error occurs\n   * @see UnderFileSystem#delete(java.lang.String, boolean)\n   */\n  @Override\n  public boolean delete(String path, boolean recursive) throws IOException {\n    LOG.debug(\"Delete method: {}, recursive {}\", path, recursive);\n    String strippedPath = stripPrefixIfPresent(path);\n    Container c = mAccount.getContainer(mContainerName);\n    if (recursive) {\n      strippedPath = makeQualifiedPath(strippedPath);\n      PaginationMap paginationMap = c.getPaginationMap(strippedPath, 100);\n      for (int page = 0; page < paginationMap.getNumberOfPages(); page++) {\n        for (StoredObject obj : c.list(paginationMap, page)) {\n          if (obj.exists()) {\n            obj.delete();\n          }\n        }\n      }\n    }\n    StoredObject so = c.getObject(strippedPath);\n    if (so.exists()) {\n      so.delete();\n    }\n    return true;\n  }","id":27835,"modified_method":"/**\n   * @inheritDoc\n   */\n  @Override\n  public boolean delete(String path, boolean recursive) throws IOException {\n    LOG.debug(\"Delete method: {}, recursive {}\", path, recursive);\n    String strippedPath = stripPrefixIfPresent(path);\n    Container c = mAccount.getContainer(mContainerName);\n    if (recursive) {\n      strippedPath = makeQualifiedPath(strippedPath);\n      PaginationMap paginationMap = c.getPaginationMap(strippedPath, 100);\n      for (int page = 0; page < paginationMap.getNumberOfPages(); page++) {\n        for (StoredObject obj : c.list(paginationMap, page)) {\n          if (obj.exists()) {\n            obj.delete();\n          }\n        }\n      }\n    }\n    StoredObject so = c.getObject(strippedPath);\n    if (so.exists()) {\n      so.delete();\n    }\n    return true;\n  }","commit_id":"bb12305bf09097f6d6936ef0cd1052a09fb9d4e2","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @inheritDoc\n   *\n   * There is no notion of directories in Swift.\n   * The content of containers are objects.\n   * Object name may contain nested structure like a/b/c/d.data\n   *\n   * @param path the folder to create\n   * @param createParent If true, the method creates any necessary but nonexistent parent\n   *        directories. Otherwise, the method does not create nonexistent parent directories.\n   * @return always returns {@code true}\n   * @throws IOException if a non-Tachyon error occurs\n   * @see tachyon.underfs.UnderFileSystem#mkdirs(java.lang.String, boolean)\n   */\n  @Override\n  public boolean mkdirs(String path, boolean createParent) throws IOException {\n    return true;\n  }","id":27836,"modified_method":"/**\n   * @inheritDoc\n   */\n  @Override\n  public boolean mkdirs(String path, boolean createParent) throws IOException {\n    return true;\n  }","commit_id":"bb12305bf09097f6d6936ef0cd1052a09fb9d4e2","url":"https://github.com/amplab/tachyon"},{"original_method":"public static void publishStagingRequest(HttpPrincipal httpPrincipal,\n\t\tlong stagingRequestId, boolean privateLayout,\n\t\tjava.util.Map<java.lang.String, java.lang.String[]> parameterMap)\n\t\tthrows com.liferay.portal.kernel.exception.PortalException {\n\t\ttry {\n\t\t\tMethodKey methodKey = new MethodKey(StagingServiceUtil.class,\n\t\t\t\t\t\"publishStagingRequest\",\n\t\t\t\t\t_publishStagingRequestParameterTypes2);\n\n\t\t\tMethodHandler methodHandler = new MethodHandler(methodKey,\n\t\t\t\t\tstagingRequestId, privateLayout, parameterMap);\n\n\t\t\ttry {\n\t\t\t\tTunnelUtil.invoke(httpPrincipal, methodHandler);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (e instanceof com.liferay.portal.kernel.exception.PortalException) {\n\t\t\t\t\tthrow (com.liferay.portal.kernel.exception.PortalException)e;\n\t\t\t\t}\n\n\t\t\t\tthrow new com.liferay.portal.kernel.exception.SystemException(e);\n\t\t\t}\n\t\t}\n\t\tcatch (com.liferay.portal.kernel.exception.SystemException se) {\n\t\t\t_log.error(se, se);\n\n\t\t\tthrow se;\n\t\t}\n\t}","id":27837,"modified_method":"public static com.liferay.portal.kernel.lar.MissingReferences publishStagingRequest(\n\t\tHttpPrincipal httpPrincipal, long stagingRequestId,\n\t\tboolean privateLayout,\n\t\tjava.util.Map<java.lang.String, java.lang.String[]> parameterMap)\n\t\tthrows com.liferay.portal.kernel.exception.PortalException {\n\t\ttry {\n\t\t\tMethodKey methodKey = new MethodKey(StagingServiceUtil.class,\n\t\t\t\t\t\"publishStagingRequest\",\n\t\t\t\t\t_publishStagingRequestParameterTypes2);\n\n\t\t\tMethodHandler methodHandler = new MethodHandler(methodKey,\n\t\t\t\t\tstagingRequestId, privateLayout, parameterMap);\n\n\t\t\tObject returnObj = null;\n\n\t\t\ttry {\n\t\t\t\treturnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (e instanceof com.liferay.portal.kernel.exception.PortalException) {\n\t\t\t\t\tthrow (com.liferay.portal.kernel.exception.PortalException)e;\n\t\t\t\t}\n\n\t\t\t\tthrow new com.liferay.portal.kernel.exception.SystemException(e);\n\t\t\t}\n\n\t\t\treturn (com.liferay.portal.kernel.lar.MissingReferences)returnObj;\n\t\t}\n\t\tcatch (com.liferay.portal.kernel.exception.SystemException se) {\n\t\t\t_log.error(se, se);\n\n\t\t\tthrow se;\n\t\t}\n\t}","commit_id":"219054299dbd559dddaa7369fc2827270acec281","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void publishStagingRequest(long stagingRequestId,\n\t\tboolean privateLayout,\n\t\tjava.util.Map<java.lang.String, java.lang.String[]> parameterMap)\n\t\tthrows com.liferay.portal.kernel.exception.PortalException {\n\t\tgetService()\n\t\t\t.publishStagingRequest(stagingRequestId, privateLayout, parameterMap);\n\t}","id":27838,"modified_method":"public static com.liferay.portal.kernel.lar.MissingReferences publishStagingRequest(\n\t\tlong stagingRequestId, boolean privateLayout,\n\t\tjava.util.Map<java.lang.String, java.lang.String[]> parameterMap)\n\t\tthrows com.liferay.portal.kernel.exception.PortalException {\n\t\treturn getService()\n\t\t\t\t   .publishStagingRequest(stagingRequestId, privateLayout,\n\t\t\tparameterMap);\n\t}","commit_id":"219054299dbd559dddaa7369fc2827270acec281","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void publishStagingRequest(long stagingRequestId,\n\t\tboolean privateLayout,\n\t\tjava.util.Map<java.lang.String, java.lang.String[]> parameterMap)\n\t\tthrows com.liferay.portal.kernel.exception.PortalException {\n\t\t_stagingService.publishStagingRequest(stagingRequestId, privateLayout,\n\t\t\tparameterMap);\n\t}","id":27839,"modified_method":"@Override\n\tpublic com.liferay.portal.kernel.lar.MissingReferences publishStagingRequest(\n\t\tlong stagingRequestId, boolean privateLayout,\n\t\tjava.util.Map<java.lang.String, java.lang.String[]> parameterMap)\n\t\tthrows com.liferay.portal.kernel.exception.PortalException {\n\t\treturn _stagingService.publishStagingRequest(stagingRequestId,\n\t\t\tprivateLayout, parameterMap);\n\t}","commit_id":"219054299dbd559dddaa7369fc2827270acec281","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic MissingReferences call() throws PortalException {\n\t\t\tlong stagingRequestId = 0;\n\n\t\t\tFile file = null;\n\t\t\tFileInputStream fileInputStream = null;\n\t\t\tHttpPrincipal httpPrincipal = null;\n\t\t\tMissingReferences missingReferences = null;\n\n\t\t\ttry {\n\t\t\t\tMap<String, Serializable> settingsMap =\n\t\t\t\t\t_exportImportConfiguration.getSettingsMap();\n\n\t\t\t\tlong sourceGroupId = MapUtil.getLong(\n\t\t\t\t\tsettingsMap, \"sourceGroupId\");\n\t\t\t\tboolean privateLayout = MapUtil.getBoolean(\n\t\t\t\t\tsettingsMap, \"privateLayout\");\n\n\t\t\t\tinitThreadLocals(sourceGroupId, privateLayout);\n\n\t\t\t\tMap<Long, Boolean> layoutIdMap =\n\t\t\t\t\t(Map<Long, Boolean>)settingsMap.get(\"layoutIdMap\");\n\t\t\t\tMap<String, String[]> parameterMap =\n\t\t\t\t\t(Map<String, String[]>)settingsMap.get(\"parameterMap\");\n\t\t\t\tlong remoteGroupId = MapUtil.getLong(\n\t\t\t\t\tsettingsMap, \"remoteGroupId\");\n\t\t\t\tDateRange dateRange = ExportImportDateUtil.getDateRange(\n\t\t\t\t\t_exportImportConfiguration);\n\n\t\t\t\tBackgroundTask backgroundTask =\n\t\t\t\t\tBackgroundTaskLocalServiceUtil.getBackgroundTask(\n\t\t\t\t\t\t_backgroundTaskId);\n\n\t\t\t\tMap<String, Serializable> taskContextMap =\n\t\t\t\t\tbackgroundTask.getTaskContextMap();\n\n\t\t\t\thttpPrincipal = (HttpPrincipal)taskContextMap.get(\n\t\t\t\t\t\"httpPrincipal\");\n\n\t\t\t\tfile = exportLayoutsAsFile(\n\t\t\t\t\tsourceGroupId, privateLayout, layoutIdMap, parameterMap,\n\t\t\t\t\tremoteGroupId, dateRange.getStartDate(),\n\t\t\t\t\tdateRange.getEndDate(), httpPrincipal);\n\n\t\t\t\tString checksum = FileUtil.getMD5Checksum(file);\n\n\t\t\t\tfileInputStream = new FileInputStream(file);\n\n\t\t\t\tstagingRequestId = StagingServiceHttp.createStagingRequest(\n\t\t\t\t\thttpPrincipal, remoteGroupId, checksum);\n\n\t\t\t\tbyte[] bytes =\n\t\t\t\t\tnew byte[PropsValues.STAGING_REMOTE_TRANSFER_BUFFER_SIZE];\n\n\t\t\t\tint i = 0;\n\t\t\t\tint j = 0;\n\n\t\t\t\tString numberFormat = String.format(\n\t\t\t\t\t\"%%0%dd\",\n\t\t\t\t\tString.valueOf(\n\t\t\t\t\t\t(int)(file.length() / bytes.length)).length() + 1);\n\n\t\t\t\twhile ((i = fileInputStream.read(bytes)) >= 0) {\n\t\t\t\t\tString fileName =\n\t\t\t\t\t\tfile.getName() + String.format(numberFormat, j++);\n\n\t\t\t\t\tif (i < PropsValues.STAGING_REMOTE_TRANSFER_BUFFER_SIZE) {\n\t\t\t\t\t\tbyte[] tempBytes = new byte[i];\n\n\t\t\t\t\t\tSystem.arraycopy(bytes, 0, tempBytes, 0, i);\n\n\t\t\t\t\t\tStagingServiceHttp.updateStagingRequest(\n\t\t\t\t\t\t\thttpPrincipal, stagingRequestId, fileName,\n\t\t\t\t\t\t\ttempBytes);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tStagingServiceHttp.updateStagingRequest(\n\t\t\t\t\t\t\thttpPrincipal, stagingRequestId, fileName, bytes);\n\t\t\t\t\t}\n\n\t\t\t\t\tbytes =\n\t\t\t\t\t\tnew byte[\n\t\t\t\t\t\t\tPropsValues.STAGING_REMOTE_TRANSFER_BUFFER_SIZE];\n\t\t\t\t}\n\n\t\t\t\tmarkBackgroundTask(_backgroundTaskId, \"exported\");\n\n\t\t\t\tStagingServiceHttp.publishStagingRequest(\n\t\t\t\t\thttpPrincipal, stagingRequestId, privateLayout,\n\t\t\t\t\tparameterMap);\n\t\t\t}\n\t\t\tcatch (IOException ioe) {\n\t\t\t\tdeleteTempLarOnFailure(file);\n\n\t\t\t\tthrow new SystemException(ioe);\n\t\t\t}\n\t\t\tcatch (Throwable t) {\n\t\t\t\tdeleteTempLarOnFailure(file);\n\n\t\t\t\tthrow t;\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tStreamUtil.cleanUp(fileInputStream);\n\n\t\t\t\tif (stagingRequestId > 0) {\n\t\t\t\t\tStagingServiceHttp.cleanUpStagingRequest(\n\t\t\t\t\t\thttpPrincipal, stagingRequestId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdeleteTempLarOnSuccess(file);\n\n\t\t\treturn missingReferences;\n\t\t}","id":27840,"modified_method":"@Override\n\t\tpublic MissingReferences call() throws PortalException {\n\t\t\tlong stagingRequestId = 0;\n\n\t\t\tFile file = null;\n\t\t\tFileInputStream fileInputStream = null;\n\t\t\tHttpPrincipal httpPrincipal = null;\n\t\t\tMissingReferences missingReferences = null;\n\n\t\t\ttry {\n\t\t\t\tMap<String, Serializable> settingsMap =\n\t\t\t\t\t_exportImportConfiguration.getSettingsMap();\n\n\t\t\t\tlong sourceGroupId = MapUtil.getLong(\n\t\t\t\t\tsettingsMap, \"sourceGroupId\");\n\t\t\t\tboolean privateLayout = MapUtil.getBoolean(\n\t\t\t\t\tsettingsMap, \"privateLayout\");\n\n\t\t\t\tinitThreadLocals(sourceGroupId, privateLayout);\n\n\t\t\t\tMap<Long, Boolean> layoutIdMap =\n\t\t\t\t\t(Map<Long, Boolean>)settingsMap.get(\"layoutIdMap\");\n\t\t\t\tMap<String, String[]> parameterMap =\n\t\t\t\t\t(Map<String, String[]>)settingsMap.get(\"parameterMap\");\n\t\t\t\tlong remoteGroupId = MapUtil.getLong(\n\t\t\t\t\tsettingsMap, \"remoteGroupId\");\n\t\t\t\tDateRange dateRange = ExportImportDateUtil.getDateRange(\n\t\t\t\t\t_exportImportConfiguration);\n\n\t\t\t\tBackgroundTask backgroundTask =\n\t\t\t\t\tBackgroundTaskLocalServiceUtil.getBackgroundTask(\n\t\t\t\t\t\t_backgroundTaskId);\n\n\t\t\t\tMap<String, Serializable> taskContextMap =\n\t\t\t\t\tbackgroundTask.getTaskContextMap();\n\n\t\t\t\thttpPrincipal = (HttpPrincipal)taskContextMap.get(\n\t\t\t\t\t\"httpPrincipal\");\n\n\t\t\t\tfile = exportLayoutsAsFile(\n\t\t\t\t\tsourceGroupId, privateLayout, layoutIdMap, parameterMap,\n\t\t\t\t\tremoteGroupId, dateRange.getStartDate(),\n\t\t\t\t\tdateRange.getEndDate(), httpPrincipal);\n\n\t\t\t\tString checksum = FileUtil.getMD5Checksum(file);\n\n\t\t\t\tfileInputStream = new FileInputStream(file);\n\n\t\t\t\tstagingRequestId = StagingServiceHttp.createStagingRequest(\n\t\t\t\t\thttpPrincipal, remoteGroupId, checksum);\n\n\t\t\t\tbyte[] bytes =\n\t\t\t\t\tnew byte[PropsValues.STAGING_REMOTE_TRANSFER_BUFFER_SIZE];\n\n\t\t\t\tint i = 0;\n\t\t\t\tint j = 0;\n\n\t\t\t\tString numberFormat = String.format(\n\t\t\t\t\t\"%%0%dd\",\n\t\t\t\t\tString.valueOf(\n\t\t\t\t\t\t(int)(file.length() / bytes.length)).length() + 1);\n\n\t\t\t\twhile ((i = fileInputStream.read(bytes)) >= 0) {\n\t\t\t\t\tString fileName =\n\t\t\t\t\t\tfile.getName() + String.format(numberFormat, j++);\n\n\t\t\t\t\tif (i < PropsValues.STAGING_REMOTE_TRANSFER_BUFFER_SIZE) {\n\t\t\t\t\t\tbyte[] tempBytes = new byte[i];\n\n\t\t\t\t\t\tSystem.arraycopy(bytes, 0, tempBytes, 0, i);\n\n\t\t\t\t\t\tStagingServiceHttp.updateStagingRequest(\n\t\t\t\t\t\t\thttpPrincipal, stagingRequestId, fileName,\n\t\t\t\t\t\t\ttempBytes);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tStagingServiceHttp.updateStagingRequest(\n\t\t\t\t\t\t\thttpPrincipal, stagingRequestId, fileName, bytes);\n\t\t\t\t\t}\n\n\t\t\t\t\tbytes =\n\t\t\t\t\t\tnew byte[\n\t\t\t\t\t\t\tPropsValues.STAGING_REMOTE_TRANSFER_BUFFER_SIZE];\n\t\t\t\t}\n\n\t\t\t\tmarkBackgroundTask(_backgroundTaskId, \"exported\");\n\n\t\t\t\tmissingReferences = StagingServiceHttp.publishStagingRequest(\n\t\t\t\t\thttpPrincipal, stagingRequestId, privateLayout,\n\t\t\t\t\tparameterMap);\n\t\t\t}\n\t\t\tcatch (IOException ioe) {\n\t\t\t\tdeleteTempLarOnFailure(file);\n\n\t\t\t\tthrow new SystemException(ioe);\n\t\t\t}\n\t\t\tcatch (Throwable t) {\n\t\t\t\tdeleteTempLarOnFailure(file);\n\n\t\t\t\tthrow t;\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tStreamUtil.cleanUp(fileInputStream);\n\n\t\t\t\tif (stagingRequestId > 0) {\n\t\t\t\t\tStagingServiceHttp.cleanUpStagingRequest(\n\t\t\t\t\t\thttpPrincipal, stagingRequestId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdeleteTempLarOnSuccess(file);\n\n\t\t\treturn missingReferences;\n\t\t}","commit_id":"154f40ba4efccc77dd8773dfc2185ca9a36d1a61","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void publishStagingRequest(\n\t\t\tlong stagingRequestId, boolean privateLayout,\n\t\t\tMap<String, String[]> parameterMap)\n\t\tthrows PortalException {\n\n\t\tcheckPermission(stagingRequestId);\n\n\t\tstagingLocalService.publishStagingRequest(\n\t\t\tgetUserId(), stagingRequestId, privateLayout, parameterMap);\n\t}","id":27841,"modified_method":"@Override\n\tpublic MissingReferences publishStagingRequest(\n\t\t\tlong stagingRequestId, boolean privateLayout,\n\t\t\tMap<String, String[]> parameterMap)\n\t\tthrows PortalException {\n\n\t\tcheckPermission(stagingRequestId);\n\n\t\treturn stagingLocalService.publishStagingRequest(\n\t\t\tgetUserId(), stagingRequestId, privateLayout, parameterMap);\n\t}","commit_id":"154f40ba4efccc77dd8773dfc2185ca9a36d1a61","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void writeTransitions(Issue issue, JsonWriter json) {\n    List<Transition> transitions = issueService.listTransitions(issue, UserSession.get());\n    json.name(\"transitions\").beginArray();\n    for (Transition transition : transitions) {\n      json.value(transition.key());\n    }\n    json.endArray();\n  }","id":27842,"modified_method":"private void writeTransitions(Issue issue, JsonWriter json) {\n    json.name(\"transitions\").beginArray();\n    if (UserSession.get().isLoggedIn()) {\n      List<Transition> transitions = issueService.listTransitions(issue, UserSession.get());\n      for (Transition transition : transitions) {\n        json.value(transition.key());\n      }\n    }\n    json.endArray();\n  }","commit_id":"3bc57ee7c5618b278b9ce19846a3e49c56c9a195","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeIssue(IssueQueryResult result, Issue issue, JsonWriter json) {\n    json\n      .prop(\"key\", issue.key())\n      .prop(\"line\", issue.line())\n      .prop(\"message\", issue.message())\n      .prop(\"resolution\", issue.resolution())\n      .prop(\"status\", issue.status())\n      .prop(\"status\", issue.status())\n      .prop(\"severity\", issue.severity());\n    // TODO to be completed\n    if (issue.assignee() != null) {\n      json\n        .prop(\"assignee\", issue.assignee())\n        .prop(\"assigneeName\", result.user(issue.assignee()).name());\n    }\n  }","id":27843,"modified_method":"private void writeIssue(IssueQueryResult result, DefaultIssue issue, JsonWriter json) {\n    json\n      .prop(\"key\", issue.key())\n      .prop(\"component\", issue.componentKey())\n      .prop(\"project\", result.project(issue).key())\n      .prop(\"rule\", issue.ruleKey().toString())\n      .prop(\"line\", issue.line())\n        // TODO\n//      .prop(\"technicalDebt\", effortToFix)\n      .prop(\"message\", issue.message())\n      .prop(\"resolution\", issue.resolution())\n      .prop(\"status\", issue.status())\n      .prop(\"severity\", issue.severity())\n      .prop(\"actionPlan\", issue.actionPlanKey());\n    // TODO to be completed\n\n    addUserField(result, issue.assignee(), \"assignee\", json);\n    addUserField(result, issue.reporter(), \"reporter\", json);\n    addUserField(result, issue.authorLogin(), \"author\", json);\n  }","commit_id":"3bc57ee7c5618b278b9ce19846a3e49c56c9a195","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public IssueShowWsHandler(IssueFinder issueFinder, IssueService issueService) {\n    this.issueFinder = issueFinder;\n    this.issueService = issueService;\n  }","id":27844,"modified_method":"public IssueShowWsHandler(IssueFinder issueFinder, IssueService issueService, ActionService actionService) {\n    this.issueFinder = issueFinder;\n    this.issueService = issueService;\n    this.actionService = actionService;\n  }","commit_id":"3bc57ee7c5618b278b9ce19846a3e49c56c9a195","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void handle(Request request, Response response) {\n    String issueKey = request.requiredParam(\"key\");\n    IssueQueryResult queryResult = issueFinder.find(IssueQuery.builder().issueKeys(Arrays.asList(issueKey)).build());\n    if (queryResult.issues().size() != 1) {\n      throw new NotFoundException(\"Issue not found: \" + issueKey);\n    }\n    Issue issue = queryResult.first();\n\n    JsonWriter json = response.newJsonWriter();\n    json.beginObject().name(\"issue\").beginObject();\n\n    writeIssue(queryResult, issue, json);\n    writeTransitions(issue, json);\n    writeComments(queryResult, issue, json);\n    //TODO write component, changelog and available commands\n\n    json.endObject().endObject().close();\n  }","id":27845,"modified_method":"@Override\n  public void handle(Request request, Response response) {\n    String issueKey = request.requiredParam(\"key\");\n    IssueQueryResult queryResult = issueFinder.find(IssueQuery.builder().issueKeys(Arrays.asList(issueKey)).build());\n    if (queryResult.issues().size() != 1) {\n      throw new NotFoundException(\"Issue not found: \" + issueKey);\n    }\n    DefaultIssue issue = (DefaultIssue) queryResult.first();\n\n    JsonWriter json = response.newJsonWriter();\n    json.beginObject().name(\"issue\").beginObject();\n\n    writeIssue(queryResult, issue, json);\n    writeTransitions(issue, json);\n    writeActions(issue, json);\n    writeComments(queryResult, issue, json);\n    //TODO write changelog\n\n    json.endObject().endObject().close();\n  }","commit_id":"3bc57ee7c5618b278b9ce19846a3e49c56c9a195","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeComments(IssueQueryResult queryResult, Issue issue, JsonWriter json) {\n    json.name(\"comments\").beginArray();\n    for (IssueComment comment : issue.comments()) {\n      json\n        .beginObject()\n        .prop(\"key\", comment.key())\n        .prop(\"userLogin\", comment.userLogin())\n        .prop(\"userName\", queryResult.user(comment.userLogin()).name())\n          // TODO convert markdown to HTML\n        .endObject();\n    }\n    json.endArray();\n  }","id":27846,"modified_method":"private void writeComments(IssueQueryResult queryResult, Issue issue, JsonWriter json) {\n    json.name(\"comments\").beginArray();\n    for (IssueComment comment : issue.comments()) {\n      String userLogin = comment.userLogin();\n      json\n        .beginObject()\n        .prop(\"key\", comment.key())\n        .prop(\"userLogin\", userLogin)\n        .prop(\"userName\", userLogin != null ? queryResult.user(userLogin).name() : null)\n          // TODO convert markdown to HTML\n        .endObject();\n    }\n    json.endArray();\n  }","commit_id":"3bc57ee7c5618b278b9ce19846a3e49c56c9a195","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Result assertJson(Class clazz, String jsonResourcePath) throws Exception {\n      String json = response.outputAsString();\n      URL url = clazz.getResource(clazz.getSimpleName() + \"/\" + jsonResourcePath);\n      JSONAssert.assertEquals(IOUtils.toString(url), json, true);\n      return this;\n    }","id":27847,"modified_method":"public Result assertJson(Class clazz, String jsonResourcePath) throws Exception {\n      String json = response.outputAsString();\n      String path = clazz.getSimpleName() + \"/\" + jsonResourcePath;\n      URL url = clazz.getResource(path);\n      if (url == null) {\n        throw new IllegalStateException(\"Cannot find \" + path);\n      }\n      JSONAssert.assertEquals(IOUtils.toString(url), json, true);\n      return this;\n    }","commit_id":"3bc57ee7c5618b278b9ce19846a3e49c56c9a195","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * @return the list of Walrus configurations for UI display.\n   */\n  public static List<SearchResultRow> getWalrusConfiguration( ) {\n    List<SearchResultRow> results = new ArrayList<SearchResultRow>( );\n    try {\n      for ( ServiceConfiguration c : ServiceConfigurations.list( Walrus.class ) ) {\n        GetWalrusConfigurationType getWalrusConfiguration = new GetWalrusConfigurationType( WalrusProperties.NAME );\n        Dispatcher scDispatch = ServiceDispatcher.lookupSingle( Components.lookup( WALRUS_NAME ) );\n        GetWalrusConfigurationResponseType getWalrusConfigResponse = scDispatch.send( getWalrusConfiguration );\n        results.add( createStorageConfiguration( WALRUS_TYPE, c.getName( ), c.getHostName( ), c.getPort( ), getWalrusConfigResponse.getProperties( ) ) );\n      }\n    } catch ( Exception ex ) {\n      LOG.error( \"Failed to retrieve walrus configuration\", ex );\n      LOG.debug( ex , ex );\n    }\n    return results;    \n  }","id":27848,"modified_method":"/**\n   * @return the list of Walrus configurations for UI display.\n   */\n  public static List<SearchResultRow> getWalrusConfiguration( ) {\n    List<SearchResultRow> results = new ArrayList<SearchResultRow>( );\n    try {\n      for ( ServiceConfiguration c : ServiceConfigurations.list( Walrus.class ) ) {\n        GetWalrusConfigurationType getWalrusConfiguration = new GetWalrusConfigurationType( WalrusProperties.NAME );\n        Dispatcher scDispatch = ServiceDispatcher.lookupSingle( Components.lookup( WALRUS_NAME ) );\n        GetWalrusConfigurationResponseType getWalrusConfigResponse = scDispatch.send( getWalrusConfiguration );\n        results.add( createStorageConfiguration( WALRUS_TYPE, c.getName( ), c.getPartition( ), c.getHostName( ), c.getPort( ), getWalrusConfigResponse.getProperties( ), c.lookupState().toString() ) );\n      }\n    } catch ( Exception ex ) {\n      LOG.error( \"Failed to retrieve walrus configuration\", ex );\n      LOG.debug( ex , ex );\n    }\n    return results;    \n  }","commit_id":"b09fb0e0cc302b6df2cc19bba2facbb5095a13f4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static void serializeClusterConfiguration( ServiceConfiguration serviceConf, SearchResultRow result ) {\n    ClusterConfiguration clusterConf = (ClusterConfiguration) serviceConf;//NOTE:GRZE: depending on referencing the Cluster-specific configuration type is not a safe assumption as that is a component-private type\n    // Common\n    result.addField( makeConfigId( clusterConf.getName( ), CLUSTER_TYPE ) );\n    result.addField( clusterConf.getName( ) );\n    result.addField( CLUSTER_TYPE );\n    result.addField( clusterConf.getHostName( ) );\n    result.addField( clusterConf.getPort( ) == null ? null : clusterConf.getPort( ).toString( ) );\n    // Specific\n    result.addField( clusterConf.getMinNetworkTag( ) == null ? \"0\" : clusterConf.getMinNetworkTag( ).toString( ) );\n    result.addField( clusterConf.getMaxNetworkTag( ) == null ? \"0\" : clusterConf.getMaxNetworkTag( ).toString( ) );\n  }","id":27849,"modified_method":"private static void serializeClusterConfiguration( ServiceConfiguration serviceConf, SearchResultRow result ) {\n    ClusterConfiguration clusterConf = (ClusterConfiguration) serviceConf;//NOTE:GRZE: depending on referencing the Cluster-specific configuration type is not a safe assumption as that is a component-private type\n    // Common\n    result.addField( makeConfigId( clusterConf.getName( ), CLUSTER_TYPE ) );\n    result.addField( clusterConf.getName( ) );\n    result.addField( clusterConf.getPartition( ) );\n    result.addField( CLUSTER_TYPE );\n    result.addField( clusterConf.getHostName( ) );\n    result.addField( clusterConf.getPort( ) == null ? null : clusterConf.getPort( ).toString( ) );\n    result.addField( clusterConf.lookupState().toString( ) );\n    // Specific\n    result.addField( clusterConf.getMinNetworkTag( ) == null ? \"0\" : clusterConf.getMinNetworkTag( ).toString( ) );\n    result.addField( clusterConf.getMaxNetworkTag( ) == null ? \"0\" : clusterConf.getMaxNetworkTag( ).toString( ) );\n  }","commit_id":"b09fb0e0cc302b6df2cc19bba2facbb5095a13f4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * Set properties for a storage controller from UI input.\n   * \n   * @param input\n   */\n  public static void setStorageConfiguration( SearchResultRow input ) throws EucalyptusServiceException  {\n    int i = 0;\n    i++;//id\n    String name = input.getField( i++ );\n    i++;//type\n    String host = input.getField( i++ );\n    Integer port = null;\n    try {\n      port = Integer.parseInt( input.getField( i++ ) );\n    } catch ( Exception e ) {\n      LOG.error( \"Failed to parse port for storage configuration from UI input\" );\n      return;\n    }\n    ArrayList<ComponentProperty> properties = Lists.newArrayList( );\n    deserializeComponentProperties( properties, input, i );\n    \n    StorageControllerConfiguration scConfig = new StorageControllerConfiguration( null/**ASAP: FIXME: GRZE **/, name, host, port);\n    final UpdateStorageConfigurationType updateStorageConfiguration = new UpdateStorageConfigurationType( );\n    updateStorageConfiguration.setName( scConfig.getName( ) );\n    updateStorageConfiguration.setStorageParams( properties );\n    Dispatcher scDispatch = ServiceDispatcher.lookup( scConfig );\n    try {\n      scDispatch.send( updateStorageConfiguration );\n    } catch ( Exception e ) {\n      LOG.error( \"Error sending update configuration message to storage controller: \" + updateStorageConfiguration );\n      LOG.error( \"The storage controller's configuration may be out of sync!\" );\n      LOG.debug( e, e );\n      throw new EucalyptusServiceException( \"Failed to update storage configuration\", e ); \n    }\n  }","id":27850,"modified_method":"/**\n   * Set properties for a storage controller from UI input.\n   * \n   * @param input\n   */\n  public static void setStorageConfiguration( SearchResultRow input ) throws EucalyptusServiceException  {\n    int i = 0;\n    i++;//id\n    String name = input.getField( i++ );\n    String partition = input.getField( i++ );\n    i++;//type\n    String host = input.getField( i++ );\n    Integer port = null;\n    try {\n      port = Integer.parseInt( input.getField( i++ ) );\n    } catch ( Exception e ) {\n      LOG.error( \"Failed to parse port for storage configuration from UI input\" );\n      return;\n    }\n    ArrayList<ComponentProperty> properties = Lists.newArrayList( );\n    deserializeComponentProperties( properties, input, i );\n    \n    ServiceConfiguration scConfig = ServiceConfigurations.lookupByName( Storage.class, name );\n    final UpdateStorageConfigurationType updateStorageConfiguration = new UpdateStorageConfigurationType( );\n    updateStorageConfiguration.setName( scConfig.getPartition( ) );\n    updateStorageConfiguration.setStorageParams( properties );\n\n    Dispatcher scDispatch = ServiceDispatcher.lookup( scConfig );\n    try {\n      scDispatch.send( updateStorageConfiguration );\n    } catch ( Exception e ) {\n      LOG.error( \"Error sending update configuration message to storage controller: \" + updateStorageConfiguration );\n      LOG.error( \"The storage controller's configuration may be out of sync!\" );\n      LOG.debug( e, e );\n      throw new EucalyptusServiceException( \"Failed to update storage configuration\", e ); \n    }\n  }","commit_id":"b09fb0e0cc302b6df2cc19bba2facbb5095a13f4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static GetStorageConfigurationResponseType sendForStorageInfo( ServiceConfiguration cc, ServiceConfiguration c ) throws EucalyptusCloudException {\n    GetStorageConfigurationType getStorageConfiguration = new GetStorageConfigurationType( c.getName( ) );\n    Dispatcher scDispatch = ServiceDispatcher.lookup( c );\n    GetStorageConfigurationResponseType getStorageConfigResponse = scDispatch.send( getStorageConfiguration );\n    return getStorageConfigResponse;\n  }","id":27851,"modified_method":"private static GetStorageConfigurationResponseType sendForStorageInfo( ServiceConfiguration cc, ServiceConfiguration c ) throws EucalyptusCloudException {\n    GetStorageConfigurationType getStorageConfiguration = new GetStorageConfigurationType( c.getPartition( ) );\n    Dispatcher scDispatch = ServiceDispatcher.lookup( c );\n    GetStorageConfigurationResponseType getStorageConfigResponse = scDispatch.send( getStorageConfiguration );\n    return getStorageConfigResponse;\n  }","commit_id":"b09fb0e0cc302b6df2cc19bba2facbb5095a13f4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static void deserializeClusterConfiguration( ServiceConfiguration serviceConf, SearchResultRow input ) {\n    ClusterConfiguration clusterConf = ( ClusterConfiguration ) serviceConf;//NOTE:GRZE: depending on referencing the Cluster-specific configuration type is not a safe assumption as that is a component-private type\n    int i = COMMON_FIELD_DESCS.size( );\n    try {\n      Integer val = Integer.parseInt( input.getField( i++ ) );\n      clusterConf.setMaxNetworkTag( val );\n    } catch ( Exception e ) { }\n    try {\n      Integer val = Integer.parseInt( input.getField( i++ ) );\n      clusterConf.setMinNetworkTag( val );\n    } catch ( Exception e ) { }\n  }","id":27852,"modified_method":"private static void deserializeClusterConfiguration( ServiceConfiguration serviceConf, SearchResultRow input ) {\n    ClusterConfiguration clusterConf = ( ClusterConfiguration ) serviceConf;//NOTE:GRZE: depending on referencing the Cluster-specific configuration type is not a safe assumption as that is a component-private type\n    int i = COMMON_FIELD_DESCS.size( );\n    try {\n      Integer val = Integer.parseInt( input.getField( i++ ) );\n      clusterConf.setMinNetworkTag( val );\n    } catch ( Exception e ) { }\n    try {\n      Integer val = Integer.parseInt( input.getField( i++ ) );\n      clusterConf.setMaxNetworkTag( val );\n    } catch ( Exception e ) { }\n  }","commit_id":"b09fb0e0cc302b6df2cc19bba2facbb5095a13f4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * @return the cloud configuration row with its own specific fields for UI display.\n   */\n  public static SearchResultRow getCloudConfiguration( ) {\n    SystemConfiguration sysConf = SystemConfiguration.getSystemConfiguration( );\n    SearchResultRow result = new SearchResultRow( );\n    // Set the extra field descs\n    result.setExtraFieldDescs( CLOUD_CONFIG_EXTRA_FIELD_DESCS );\n    // Fill the fields\n    serializeSystemConfiguration( sysConf, result );    \n    return result;\n  }","id":27853,"modified_method":"/**\n   * @return the cloud configuration row with its own specific fields for UI display.\n   */\n  public static SearchResultRow getCloudConfiguration( ) {\n\tComponent cloud = Components.lookup(Eucalyptus.class);\n    SystemConfiguration sysConf = SystemConfiguration.getSystemConfiguration( );\n    SearchResultRow result = new SearchResultRow( );\n    // Set the extra field descs\n    result.setExtraFieldDescs( CLOUD_CONFIG_EXTRA_FIELD_DESCS );\n    // Fill the fields\n    serializeSystemConfiguration( sysConf, cloud, result );    \n    return result;\n  }","commit_id":"b09fb0e0cc302b6df2cc19bba2facbb5095a13f4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static void serializeSystemConfiguration( SystemConfiguration sysConf, SearchResultRow result ) {\n    // First fill in the common fields\n    result.addField( makeConfigId( CLOUD_NAME, CLOUD_TYPE ) );// id\n    result.addField( CLOUD_NAME );                            // name  \n    result.addField( CLOUD_TYPE );                            // type\n    result.addField( Internets.localHostAddress( ) );         // host\n    result.addField( \"8773\" );                                // port, hardcoding for now\n    // Then fill in the specific fields\n    result.addField( sysConf.getDnsDomain( ) );               // dns domain\n    result.addField( sysConf.getNameserver( ) );              // dns nameserver\n    result.addField( sysConf.getNameserverAddress( ) );       // dns IP\n    result.addField( ImageConfiguration.getInstance( ).getDefaultKernelId( ) );           // default kernel\n    result.addField( ImageConfiguration.getInstance( ).getDefaultRamdiskId( ) );          // default ramdisk\n    result.addField( AddressingConfiguration.getInstance( ).getDoDynamicPublicAddresses( ).toString( ) );// enable dynamic public addresses\n    result.addField( AddressingConfiguration.getInstance( ).getMaxUserPublicAddresses( ).toString( ) ); // max public addresses per user\n    result.addField( AddressingConfiguration.getInstance( ).getSystemReservedPublicAddresses( ).toString( ) ); // system reserved addresses\n  }","id":27854,"modified_method":"private static void serializeSystemConfiguration( SystemConfiguration sysConf, Component cloud, SearchResultRow result ) {\n    // First fill in the common fields\n    result.addField( makeConfigId( CLOUD_NAME, CLOUD_TYPE ) );// id\n    result.addField( CLOUD_NAME );                            // name  \n    result.addField( CLOUD_NAME );                            // partition  \n    result.addField( CLOUD_TYPE );                            // type\n    result.addField( Internets.localHostAddress( ) );         // host\n    result.addField( \"8773\" );                                // port, hardcoding for now\n    result.addField( cloud.getState( ).toString( ) );\n    // Then fill in the specific fields\n    result.addField( sysConf.getDnsDomain( ) );               // dns domain\n    result.addField( sysConf.getNameserver( ) );              // dns nameserver\n    result.addField( sysConf.getNameserverAddress( ) );       // dns IP\n    result.addField( ImageConfiguration.getInstance( ).getDefaultKernelId( ) );           // default kernel\n    result.addField( ImageConfiguration.getInstance( ).getDefaultRamdiskId( ) );          // default ramdisk\n    result.addField( AddressingConfiguration.getInstance( ).getDoDynamicPublicAddresses( ).toString( ) );// enable dynamic public addresses\n    result.addField( AddressingConfiguration.getInstance( ).getMaxUserPublicAddresses( ).toString( ) ); // max public addresses per user\n    result.addField( AddressingConfiguration.getInstance( ).getSystemReservedPublicAddresses( ).toString( ) ); // system reserved addresses\n  }","commit_id":"b09fb0e0cc302b6df2cc19bba2facbb5095a13f4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * @return the storage configurations for UI display.\n   */\n  public static List<SearchResultRow> getStorageConfiguration( ) {\n    List<SearchResultRow> results = Lists.newArrayList( );\n    for ( final ServiceConfiguration cc : ServiceConfigurations.list( ClusterController.class ) ) {\n      try {\n        if ( Internets.testLocal( cc.getHostName( ) ) && !Components.lookup( \"storage\" ).isEnabledLocally( ) ) {\n          results.add( createStorageConfiguration( STORAGE_TYPE, SC_DEFAULT_NAME, SC_DEFAULT_HOST, SC_DEFAULT_PORT, new ArrayList<ComponentProperty>( ) ) );\n          continue;\n        }\n      } catch ( Exception e ) {\n        LOG.debug( \"Got an error while trying to retrieving storage controller configuration list\", e );\n      }\n      StorageControllerConfiguration c;\n      try {\n        c = ServiceConfigurations.lookup( new StorageControllerConfiguration( cc.getName( ) ) );\n        List<ComponentProperty> properties = Lists.newArrayList( );\n        try {\n          GetStorageConfigurationResponseType getStorageConfigResponse = sendForStorageInfo( cc, c );\n          if ( c.getName( ).equals( getStorageConfigResponse.getName( ) ) ) {\n            properties.addAll( getStorageConfigResponse.getStorageParams( ) );\n          } else {\n            LOG.debug( \"Unexpected storage controller name: \" + getStorageConfigResponse.getName( ), new Exception( ) );\n            LOG.debug( \"Expected configuration for SC related to CC: \" + LogUtil.dumpObject( c ) );\n            LOG.debug( \"Received configuration for SC related to CC: \" + LogUtil.dumpObject( getStorageConfigResponse ) );\n          }\n        } catch ( Exception e ) {\n          LOG.debug( \"Got an error while trying to communicate with remote storage controller\", e );\n        }\n        results.add( createStorageConfiguration( STORAGE_TYPE, c.getName( ), c.getHostName( ), c.getPort( ), properties ) );\n      } catch ( Exception e1 ) {\n        results.add( createStorageConfiguration( STORAGE_TYPE, SC_DEFAULT_NAME, SC_DEFAULT_HOST, SC_DEFAULT_PORT, new ArrayList<ComponentProperty>( ) ) );\n      }\n    }\n    return results;\n  }","id":27855,"modified_method":"/**\n   * @return the storage configurations for UI display.\n   */\n  public static List<SearchResultRow> getStorageConfiguration( ) {\n    List<SearchResultRow> results = Lists.newArrayList( );\n    for ( final ServiceConfiguration cc : ServiceConfigurations.list( ClusterController.class ) ) {\n      StorageControllerConfiguration c;\n      try {\n    \tc = Partitions.lookupService(Storage.class, cc.getPartition());  \n        List<ComponentProperty> properties = Lists.newArrayList( );\n        try {\n          GetStorageConfigurationResponseType getStorageConfigResponse = sendForStorageInfo( cc, c );\n          if ( c.getPartition( ).equals( getStorageConfigResponse.getName( ) ) ) {\n            properties.addAll( getStorageConfigResponse.getStorageParams( ) );\n          } else {\n            LOG.debug( \"Unexpected storage controller name: \" + getStorageConfigResponse.getName( ), new Exception( ) );\n            LOG.debug( \"Expected configuration for SC related to CC: \" + LogUtil.dumpObject( c ) );\n            LOG.debug( \"Received configuration for SC related to CC: \" + LogUtil.dumpObject( getStorageConfigResponse ) );\n          }\n        } catch ( Exception e ) {\n          LOG.debug( \"Got an error while trying to communicate with remote storage controller\", e );\n        }\n        results.add( createStorageConfiguration( STORAGE_TYPE, c.getName( ), c.getPartition( ), c.getHostName( ), c.getPort( ), properties, c.lookupState().toString() ) );\n      } catch ( Exception e1 ) {\n        results.add( createStorageConfiguration( STORAGE_TYPE, SC_DEFAULT_NAME, SC_DEFAULT_NAME, SC_DEFAULT_HOST, SC_DEFAULT_PORT, new ArrayList<ComponentProperty>( ), UNKNOWN_STATE ) );\n      }\n    }\n    return results;\n  }","commit_id":"b09fb0e0cc302b6df2cc19bba2facbb5095a13f4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static void serializeStorageConfiguration( String type, String name, String host, Integer port, List<ComponentProperty> properties, SearchResultRow result ) {\n    // Common fields\n    result.addField( makeConfigId( name, type ) );\n    result.addField( name );\n    result.addField( type );\n    result.addField( host );\n    result.addField( port == null ? null : port.toString( ) );\n    // Dynamic fields\n    serializeComponentProperties( properties, result );\n  }","id":27856,"modified_method":"private static void serializeStorageConfiguration( String type, String name, String partition, String host, Integer port, List<ComponentProperty> properties, String state, SearchResultRow result ) {\n    // Common fields\n    result.addField( makeConfigId( name, type ) );\n    result.addField( name );\n    result.addField( partition );\n    result.addField( type );\n    result.addField( host );\n    result.addField( port == null ? null : port.toString( ) );\n    result.addField(state);\n    // Dynamic fields\n    serializeComponentProperties( properties, result );\n  }","commit_id":"b09fb0e0cc302b6df2cc19bba2facbb5095a13f4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static SearchResultRow createStorageConfiguration( String type, String name, String host, Integer port, List<ComponentProperty> properties ) {\n    SearchResultRow result = new SearchResultRow( );\n    serializeStorageConfiguration( type, name, host, port, properties, result );\n    return result;\n  }","id":27857,"modified_method":"private static SearchResultRow createStorageConfiguration( String type, String name, String partition, String host, Integer port, List<ComponentProperty> properties, String state ) {\n    SearchResultRow result = new SearchResultRow( );\n    serializeStorageConfiguration( type, name, partition, host, port, properties, state, result );\n    return result;\n  }","commit_id":"b09fb0e0cc302b6df2cc19bba2facbb5095a13f4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static ServiceConfiguration lookupService( Class<? extends ComponentId> compClass, Partition partition ) {\n    NavigableSet<ServiceConfiguration> services = Components.lookup( compClass ).enabledPartitionServices( partition );\n    if ( services.isEmpty( ) ) {\n      throw new NoSuchElementException( \"Failed to find service of type: \" + compClass.getSimpleName( ) + \" in partition: \" + partition );\n    } else {\n      return services.first( );\n    }\n  }","id":27858,"modified_method":"@SuppressWarnings(\"unchecked\")\npublic static  <T extends ServiceConfiguration> T lookupService( Class<? extends ComponentId> compClass, Partition partition ) {\n    NavigableSet<ServiceConfiguration> services = Components.lookup( compClass ).enabledPartitionServices( partition );\n    if ( services.isEmpty( ) ) {\n      throw new NoSuchElementException( \"Failed to find service of type: \" + compClass.getSimpleName( ) + \" in partition: \" + partition );\n    } else {\n      return (T) services.first( );\n    }\n  }","commit_id":"b09fb0e0cc302b6df2cc19bba2facbb5095a13f4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Deprecated\n  public static ServiceConfiguration lookupService( Class<? extends ComponentId> compClass, String partition ) {\n    return lookupService( compClass, Partitions.lookupByName( partition ) );\n  }","id":27859,"modified_method":"@Deprecated\n  public static <T extends ServiceConfiguration> T lookupService( Class<? extends ComponentId> compClass, String partition ) {\n    return lookupService( compClass, Partitions.lookupByName( partition ) );\n  }","commit_id":"b09fb0e0cc302b6df2cc19bba2facbb5095a13f4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static SNode call_getSelectPositionParameter_1213877395572(SNode thisNode) {\n    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, \"selectLaterParameter\", true)).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SNodeOperations.isInstanceOf(it, \"jetbrains.mps.lang.editor.structure.SelectPositionParameter\");\n      }\n    }).first();\n  }","id":27860,"modified_method":"public static SNode call_getSelectPositionParameter_1213877395572(SNode thisNode) {\n    return (SNode) ListSequence.fromList(SLinkOperations.getTargets(thisNode, \"selectLaterParameter\", true)).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SNodeOperations.isInstanceOf(it, \"jetbrains.mps.lang.editor.structure.SelectPositionParameter\");\n      }\n    }).first();\n  }","commit_id":"9e24535fcfb3aea725b323e1e412f8c02485dd3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode call_getCaretPositionParameter_1213877395591(SNode thisNode) {\n    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, \"selectLaterParameter\", true)).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SNodeOperations.isInstanceOf(it, \"jetbrains.mps.lang.editor.structure.CaretPositionParameter\");\n      }\n    }).first();\n  }","id":27861,"modified_method":"public static SNode call_getCaretPositionParameter_1213877395591(SNode thisNode) {\n    return (SNode) ListSequence.fromList(SLinkOperations.getTargets(thisNode, \"selectLaterParameter\", true)).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SNodeOperations.isInstanceOf(it, \"jetbrains.mps.lang.editor.structure.CaretPositionParameter\");\n      }\n    }).first();\n  }","commit_id":"9e24535fcfb3aea725b323e1e412f8c02485dd3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode virtual_getOperationConcept_1213877352972(SNode thisNode) {\n    SNode memberOperationConcept = SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getConceptLinkTargets(thisNode, \"operationConcept\")).first(), \"jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation\");\n    if (memberOperationConcept == null) {\n      throw new RuntimeException(\"Please set operationConcept in \" + SNodeOperations.getConceptDeclaration(thisNode) + \" concept\");\n    }\n    return memberOperationConcept;\n  }","id":27862,"modified_method":"public static SNode virtual_getOperationConcept_1213877352972(SNode thisNode) {\n    SNode memberOperationConcept = ((SNode)ListSequence.fromList(SLinkOperations.getConceptLinkTargets(thisNode, \"operationConcept\")).first());\n    if (memberOperationConcept == null) {\n      throw new RuntimeException(\"Please set operationConcept in \" + SNodeOperations.getConceptDeclaration(thisNode) + \" concept\");\n    }\n    return memberOperationConcept;\n  }","commit_id":"bf8a8381d7920e3123bef2db516b95ce28ceca86","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyFix(@NotNull final Project project, @NotNull final ProblemDescriptor descriptor) {\n    PsiFile file = descriptor.getPsiElement().getContainingFile();\n    if (file == null) return;\n    PsiElement firstLine = file.getFirstChild();\n    if (firstLine instanceof PsiComment && firstLine.getText().startsWith(\"#!\")) {\n      firstLine = firstLine.getNextSibling();\n    }\n    PsiComment encodingLine = PyElementGenerator.getInstance(project).createFromText(LanguageLevel.forElement(file), PsiComment.class,\n                                                                                     String.format(PyEncodingUtil.ENCODING_FORMAT_PATTERN[myEncodingFormatIndex], myDefaultEncoding));\n    file.addBefore(encodingLine, firstLine);\n  }","id":27863,"modified_method":"public void applyFix(@NotNull final Project project, @NotNull final ProblemDescriptor descriptor) {\n    final PsiElement element = descriptor.getPsiElement();\n    final PsiFile file = element.getContainingFile();\n    if (file == null) return;\n    PsiElement firstLine = file.getFirstChild();\n    if (firstLine instanceof PsiComment && firstLine.getText().startsWith(\"#!\")) {\n      firstLine = firstLine.getNextSibling();\n    }\n    final String commentText = String.format(PyEncodingUtil.ENCODING_FORMAT_PATTERN[myEncodingFormatIndex], myDefaultEncoding);\n    final PyElementGenerator elementGenerator = PyElementGenerator.getInstance(project);\n    PsiComment encodingComment = elementGenerator.createFromText(LanguageLevel.forElement(file), PsiComment.class, commentText);\n    encodingComment = (PsiComment)file.addBefore(encodingComment, firstLine);\n\n    final FileEditor fileEditor = FileEditorManager.getInstance(project).getSelectedEditor(element.getContainingFile().getVirtualFile());\n    if (fileEditor instanceof TextEditor) {\n      final Editor editor = ((TextEditor)fileEditor).getEditor();\n      final Document document = editor.getDocument();\n      final int insertedLineNumber = document.getLineNumber(encodingComment.getTextOffset());\n      if (insertedLineNumber == document.getLineCount() - 1) {\n        PsiDocumentManager.getInstance(project).doPostponedOperationsAndUnblockDocument(document);\n        document.insertString(document.getLineEndOffset(insertedLineNumber), \"\\n\");\n      }\n      editor.getCaretModel().moveToLogicalPosition(new LogicalPosition(insertedLineNumber + 1, 0));\n    }\n  }","commit_id":"e3faaf04429a1d8a0f3b6c4e136d76f68e2fc04e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitComment(PsiComment element) {\n      if (!myRange.contains(element.getTextRange())) {\n        return;\n      }\n      String text = element.getText();\n      int commentStart = text.indexOf('#');\n      if (commentStart != -1 && (commentStart + 1) < text.length()) {\n        char charAfterDash = text.charAt(commentStart + 1);\n        if (charAfterDash == '!' && element.getTextRange().getStartOffset() == 0) {\n          return; //shebang\n        }\n        if (charAfterDash == '#' || charAfterDash == ':') {\n          return;\n        }\n        String commentText = StringUtil.trimLeading(text.substring(commentStart + 1));\n\n        String newText = \"# \" + commentText;\n        if (!newText.equals(text)) {\n          myDelta += newText.length() - text.length();\n          element.replace(\n            PyElementGenerator.getInstance(myProject).createFromText(LanguageLevel.getDefault(), PsiComment.class, newText));\n        }\n      }\n    }","id":27864,"modified_method":"@Override\n    public void visitComment(PsiComment comment) {\n      if (!myRange.contains(comment.getTextRange())) {\n        return;\n      }\n      final String origText = comment.getText();\n      final int commentStart = origText.indexOf('#');\n      if (commentStart != -1 && (commentStart + 1) < origText.length()) {\n        final char charAfterDash = origText.charAt(commentStart + 1);\n        if (charAfterDash == '!' && comment.getTextRange().getStartOffset() == 0) {\n          return; // shebang\n        }\n        if (charAfterDash == '#' || charAfterDash == ':') {\n          return; // doc comment\n        }\n        if (commentSpansSeveralLines(comment)) {\n          return;\n        }\n\n        final String commentTextWithoutDash = origText.substring(commentStart + 1);\n        final String newText;\n        if (isTrailingComment(comment)) {\n          newText = \"# \" + StringUtil.trimLeading(commentTextWithoutDash);\n        }\n        else if (!StringUtil.isWhiteSpace(charAfterDash)) {\n          newText = \"# \" + commentTextWithoutDash;\n        }\n        else {\n          return;\n        }\n        if (!newText.equals(origText)) {\n          myDelta += newText.length() - origText.length();\n          final PyElementGenerator elementGenerator = PyElementGenerator.getInstance(myProject);\n          final PsiComment newComment = elementGenerator.createFromText(LanguageLevel.forElement(comment), PsiComment.class, newText);\n          myCommentReplacements.add(Couple.of(comment, newComment));\n        }\n      }\n    }","commit_id":"e5f1141929878a1125beb25f0df2919867135a06","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public TextRange process(PsiElement element, TextRange range) {\n      if (!myPyCodeStyleSettings.SPACE_AFTER_NUMBER_SIGN) {\n        return range;\n      }\n      myRange = range;\n      element.accept(this);\n      return TextRange.create(range.getStartOffset(), range.getEndOffset() + myDelta);\n    }","id":27865,"modified_method":"public TextRange process(PsiElement element, TextRange range) {\n      if (!myPyCodeStyleSettings.SPACE_AFTER_NUMBER_SIGN) {\n        return range;\n      }\n      myRange = range;\n      final PsiDocumentManager manager = PsiDocumentManager.getInstance(myProject);\n      final Document document = manager.getDocument(element.getContainingFile());\n      if (document != null) {\n        manager.doPostponedOperationsAndUnblockDocument(document);\n        try {\n          // collect all comments\n          element.accept(this);\n          for (Couple<PsiComment> pair : myCommentReplacements) {\n            pair.getFirst().replace(pair.getSecond());\n          }\n        }\n        finally {\n          manager.commitDocument(document);\n        }\n      }\n      return TextRange.create(range.getStartOffset(), range.getEndOffset() + myDelta);\n    }","commit_id":"e5f1141929878a1125beb25f0df2919867135a06","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void applyFix(@NotNull final Project project, @NotNull final ProblemDescriptor descriptor) {\n    final PyFunction problemFunction = PsiTreeUtil.getParentOfType(descriptor.getPsiElement(), PyFunction.class);\n    if (problemFunction == null) return;\n    final StringBuilder superCall = new StringBuilder();\n    final PyClass klass = problemFunction.getContainingClass();\n    if (klass == null) return;\n    final PyClass[] superClasses = klass.getSuperClasses();\n    if (superClasses.length == 0) return;\n\n    final PyClass superClass = superClasses[0];\n    final PyFunction superInit = superClass.findMethodByName(PyNames.INIT, true);\n    if (superInit == null) return;\n\n    final ParametersInfo origInfo = new ParametersInfo(problemFunction.getParameterList());\n    final ParametersInfo superInfo = new ParametersInfo(superInit.getParameterList());\n    final boolean addSelfToCall;\n\n    if (klass.isNewStyleClass()) {\n      addSelfToCall = false;\n      if (LanguageLevel.forElement(klass).isPy3K()) {\n        superCall.append(\"super().__init__(\");\n      }\n      else {\n        superCall.append(\"super(\").append(klass.getName()).append(\", \").append(getSelfParameterName(origInfo)).append(\").__init__(\");\n      }\n    }\n    else {\n      addSelfToCall = true;\n      superCall.append(superClass.getName()).append(\".__init__(\");\n    }\n    final StringBuilder newFunction = new StringBuilder(\"def __init__(\");\n\n    final Couple<List<String>> couple = buildNewFunctionParamsAndSuperInitCallArgs(origInfo, superInfo, addSelfToCall);\n    StringUtil.join(couple.getFirst(), \", \", newFunction);\n    newFunction.append(\")\");\n\n    if (problemFunction.getAnnotation() != null) {\n      newFunction.append(problemFunction.getAnnotation().getText());\n    }\n    newFunction.append(\":\");\n    final PsiComment comment = getCommentAfterParametersList(problemFunction);\n    if (comment != null) {\n      // two whitespaces are required by PEP 8\n      newFunction.append(\"  \").append(comment.getText());\n    }\n    newFunction.append(\"\\n\\t\");\n\n    StringUtil.join(couple.getSecond(), \", \", superCall);\n    superCall.append(\")\");\n\n    final PyStatementList statementList = problemFunction.getStatementList();\n    final PyExpression docstring = problemFunction.getDocStringExpression();\n    if (docstring != null) {\n      newFunction.append(docstring.getText()).append(\"\\n\\t\");\n    }\n    newFunction.append(superCall).append(\"\\n\\t\");\n    boolean first = true;\n    for (PsiElement child = statementList.getFirstChild(); child != null; child = child.getNextSibling()) {\n      if (child instanceof PyStatement) {\n        if (first && docstring != null || child instanceof PyPassStatement) {\n          first = false;\n          continue;\n        }\n      }\n      if (child instanceof PyStatement || child instanceof PsiComment) {\n        newFunction.append(child.getText()).append(\"\\n\\t\");\n      }\n    }\n\n    final PyElementGenerator generator = PyElementGenerator.getInstance(project);\n    problemFunction.replace(generator.createFromText(LanguageLevel.forElement(problemFunction), PyFunction.class, newFunction.toString()));\n  }","id":27866,"modified_method":"public void applyFix(@NotNull final Project project, @NotNull final ProblemDescriptor descriptor) {\n    final PyFunction problemFunction = PsiTreeUtil.getParentOfType(descriptor.getPsiElement(), PyFunction.class);\n    if (problemFunction == null) return;\n    final StringBuilder superCall = new StringBuilder();\n    final PyClass klass = problemFunction.getContainingClass();\n    if (klass == null) return;\n    final PyClass[] superClasses = klass.getSuperClasses();\n    if (superClasses.length == 0) return;\n\n    final PyClass superClass = superClasses[0];\n    final PyFunction superInit = superClass.findMethodByName(PyNames.INIT, true);\n    if (superInit == null) return;\n\n    final ParametersInfo origInfo = new ParametersInfo(problemFunction.getParameterList());\n    final ParametersInfo superInfo = new ParametersInfo(superInit.getParameterList());\n    final boolean addSelfToCall;\n\n    if (klass.isNewStyleClass()) {\n      addSelfToCall = false;\n      if (LanguageLevel.forElement(klass).isPy3K()) {\n        superCall.append(\"super().__init__(\");\n      }\n      else {\n        superCall.append(\"super(\").append(klass.getName()).append(\", \").append(getSelfParameterName(origInfo)).append(\").__init__(\");\n      }\n    }\n    else {\n      addSelfToCall = true;\n      superCall.append(superClass.getName()).append(\".__init__(\");\n    }\n    final StringBuilder newFunction = new StringBuilder(\"def __init__(\");\n\n    final Couple<List<String>> couple = buildNewFunctionParamsAndSuperInitCallArgs(origInfo, superInfo, addSelfToCall);\n    StringUtil.join(couple.getFirst(), \", \", newFunction);\n    newFunction.append(\")\");\n\n    if (problemFunction.getAnnotation() != null) {\n      newFunction.append(problemFunction.getAnnotation().getText());\n    }\n    newFunction.append(\": pass\");\n\n    StringUtil.join(couple.getSecond(), \", \", superCall);\n    superCall.append(\")\");\n\n    final PyElementGenerator generator = PyElementGenerator.getInstance(project);\n    final LanguageLevel languageLevel = LanguageLevel.forElement(problemFunction);\n    final PyStatement callSuperStatement = generator.createFromText(languageLevel, PyStatement.class, superCall.toString());\n    final PyParameterList newParameterList = generator.createFromText(languageLevel,\n                                                                      PyParameterList.class,\n                                                                      newFunction.toString(),\n                                                                      new int[]{0, 3});\n    problemFunction.getParameterList().replace(newParameterList);\n    final PyStatementList statementList = problemFunction.getStatementList();\n    PyUtil.addElementToStatementList(callSuperStatement, statementList, true);\n    PyPsiUtils.removeRedundantPass(statementList);\n  }","commit_id":"8c7189be4dbe6b0ae4d8d405658a21da180f8deb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void addMethods(final PyClass superClass, final PyElement[] elements, final boolean up) {\n    if (elements.length == 0) return;\n    final Project project = superClass.getProject();\n    final String text = prepareClassText(superClass, elements, up, false, null);\n\n    if (text == null) return;\n\n    final PyClass newClass = PythonLanguage.getInstance().getElementGenerator().createFromText(project, PyClass.class, text);\n    final PyStatementList statements = superClass.getStatementList();\n    if (statements.getStatements().length != 0) {\n      for (PyElement newStatement : newClass.getStatementList().getStatements()) {\n        statements.add(PyExtractMethodUtil.createWhiteSpace(project));\n        statements.add(newStatement);\n      }\n    } else {\n      statements.replace(newClass.getStatementList());\n    }\n  }","id":27867,"modified_method":"public static void addMethods(final PyClass superClass, final PyElement[] elements, final boolean up) {\n    if (elements.length == 0) return;\n    final Project project = superClass.getProject();\n    final String text = prepareClassText(superClass, elements, up, false, null);\n\n    if (text == null) return;\n\n    final PyClass newClass = PythonLanguage.getInstance().getElementGenerator().createFromText(project, PyClass.class, text);\n    final PyStatementList statements = superClass.getStatementList();\n    if (statements.getStatements().length != 0) {\n      for (PyElement newStatement : newClass.getStatementList().getStatements()) {\n        statements.add(PythonLanguage.getInstance().getElementGenerator().createNewLine(project));\n        statements.add(newStatement);\n      }\n    } else {\n      statements.replace(newClass.getStatementList());\n    }\n  }","commit_id":"4477b1acf863736826f1e50f9e1fea106f5c6254","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void insertGeneratedMethod(PsiElement anchor, final PyFunction generatedMethod) {\n    final Pair<PsiElement, TextRange> data = anchor.getUserData(PyPsiUtils.SELECTION_BREAKS_AST_NODE);\n    if (data != null){\n      anchor = data.first;\n    }\n    final PsiNamedElement parent = PsiTreeUtil.getParentOfType(anchor, PyFile.class, PyFunction.class);\n\n    if (parent instanceof PyFile) {\n      final PsiElement statement = PyPsiUtils.getStatement(parent, anchor);\n      PyPsiUtils.addBeforeInParent(statement, generatedMethod, createWhiteSpace(anchor.getProject()));\n      return;\n    }\n    if (parent instanceof PyFunction) {\n      if (parent.getParent() instanceof PyStatementList){\n        parent.getParent().addBefore(generatedMethod, parent);\n        return;\n      }\n      PyPsiUtils.addBeforeInParent(parent, generatedMethod, createWhiteSpace(anchor.getProject()));\n      return;\n    }\n    throw new IllegalStateException(\"Compound statement should not be null\");\n  }","id":27868,"modified_method":"private static PyFunction insertGeneratedMethod(PsiElement anchor, final PyFunction generatedMethod) {\n    final Pair<PsiElement, TextRange> data = anchor.getUserData(PyPsiUtils.SELECTION_BREAKS_AST_NODE);\n    if (data != null){\n      anchor = data.first;\n    }\n    final PsiNamedElement parent = PsiTreeUtil.getParentOfType(anchor, PyFile.class, PyClass.class, PyFunction.class);\n\n    if (parent instanceof PyFile) {\n      final PsiElement statement = PyPsiUtils.getStatement(parent, anchor);\n      return (PyFunction) parent.addBefore(generatedMethod, statement);\n    }\n    return (PyFunction) parent.getParent().addBefore(generatedMethod, parent);\n  }","commit_id":"4477b1acf863736826f1e50f9e1fea106f5c6254","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static PyFunction generateMethodFromElements(final Project project,\n                                                       final String methodName,\n                                                       final AbstractVariableData[] variableData,\n                                                       final List<PsiElement> elementsRange) {\n    assert !elementsRange.isEmpty() : \"Empty statements list was selected!\";\n    final StringBuilder builder = new StringBuilder();\n    builder.append(generateSignature(methodName, variableData, elementsRange.get(0)));\n    builder.append(\"  pass\");\n    final PyFunction method =\n      PythonLanguage.getInstance().getElementGenerator().createFromText(project, PyFunction.class, builder.toString());\n    final PyStatementList statementList = method.getStatementList();\n    for (int i=0; i<elementsRange.size();i++){\n      final PsiElement element = elementsRange.get(i);\n      if (element instanceof PsiWhiteSpace) {\n        continue;\n      }\n      statementList.add(element);\n    }\n    // remove pass\n    statementList.getFirstChild().delete();\n    return method;\n  }","id":27869,"modified_method":"private static PyFunction generateMethodFromElements(final Project project,\n                                                       final String methodName,\n                                                       final AbstractVariableData[] variableData,\n                                                       final List<PsiElement> elementsRange) {\n    assert !elementsRange.isEmpty() : \"Empty statements list was selected!\";\n    final StringBuilder builder = new StringBuilder();\n    builder.append(generateSignature(methodName, variableData, elementsRange.get(0)));\n    builder.append(\"  print(\\\"Питон Зохавает Вас!\\\")\");\n    final PyElementGenerator pyElementGenerator = PythonLanguage.getInstance().getElementGenerator();\n    final PyFunction method =\n      pyElementGenerator.createFromText(project, PyFunction.class, builder.toString());\n    final PyStatementList statementList = method.getStatementList();\n    for (PsiElement element : elementsRange) {\n      if (element instanceof PsiWhiteSpace){\n        continue;\n      }\n      statementList.add(element);\n    }\n    // remove last instruction\n    statementList.getFirstChild().delete();\n    return method;\n  }","commit_id":"4477b1acf863736826f1e50f9e1fea106f5c6254","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void extractFromExpression(final Project project,\n                                           final Editor editor,\n                                           final CodeFragment fragment,\n                                           final PsiElement expression) {\n    if (!fragment.getOutputVariables().isEmpty()){\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          \"Cannot perform refactoring from expression with local variables modifications inside code fragment\",\n                                          RefactoringBundle.message(\"error.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n\n    if (fragment.isReturnInstructonInside()){\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          \"Cannot extract method with return instructions inside code fragment\",\n                                          RefactoringBundle.message(\"error.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n    final Pair<String, AbstractVariableData[]> data = getNameAndVariableData(project, fragment, expression);\n    if (data.first == null || data.second == null) {\n      return;\n    }\n\n    final String methodName = data.first;\n    final AbstractVariableData[] variableData = data.second;\n\n    if (fragment.getOutputVariables().isEmpty()) {\n      CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              // Generate method\n              final PyFunction generatedMethod = generateMethodFromExpression(project, methodName, variableData, expression);\n              insertGeneratedMethod(expression, generatedMethod);\n\n              // Process parameters\n              processParameters(project, generatedMethod, variableData);\n\n              // Generating call element\n              final StringBuilder builder = new StringBuilder();\n              if (fragment.isReturnInstructonInside()) {\n                builder.append(\"return \");\n              }\n              builder.append(methodName);\n              builder.append(\"(\").append(createCallArgsString(variableData)).append(\")\");\n              PsiElement callElement = PythonLanguage.getInstance().getElementGenerator().createFromText(project, PyElement.class, builder.toString());\n\n              // replace statements with call\n              callElement = PyPsiUtils.replaceExpression(project, expression, callElement);\n\n              // Set editor\n              setSelectionAndCaret(editor, callElement);\n            }\n          });\n        }\n      }, \"Extract method\", null);\n    }\n  }","id":27870,"modified_method":"public static void extractFromExpression(final Project project,\n                                           final Editor editor,\n                                           final CodeFragment fragment,\n                                           final PsiElement expression) {\n    if (!fragment.getOutputVariables().isEmpty()){\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          \"Cannot perform refactoring from expression with local variables modifications inside code fragment\",\n                                          RefactoringBundle.message(\"error.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n\n    if (fragment.isReturnInstructonInside()){\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          \"Cannot extract method with return instructions inside code fragment\",\n                                          RefactoringBundle.message(\"error.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n    final Pair<String, AbstractVariableData[]> data = getNameAndVariableData(project, fragment, expression);\n    if (data.first == null || data.second == null) {\n      return;\n    }\n\n    final String methodName = data.first;\n    final AbstractVariableData[] variableData = data.second;\n\n    if (fragment.getOutputVariables().isEmpty()) {\n      CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              // Generate method\n              PyFunction generatedMethod = generateMethodFromExpression(project, methodName, variableData, expression);\n              generatedMethod = insertGeneratedMethod(expression, generatedMethod);\n\n              // Process parameters\n              processParameters(project, generatedMethod, variableData);\n\n              // Generating call element\n              final StringBuilder builder = new StringBuilder();\n              if (fragment.isReturnInstructonInside()) {\n                builder.append(\"return \");\n              }\n              builder.append(methodName);\n              builder.append(\"(\").append(createCallArgsString(variableData)).append(\")\");\n              PsiElement callElement = PythonLanguage.getInstance().getElementGenerator().createFromText(project, PyElement.class, builder.toString());\n\n              // replace statements with call\n              callElement = PyPsiUtils.replaceExpression(project, expression, callElement);\n\n              // Set editor\n              setSelectionAndCaret(editor, callElement);\n            }\n          });\n        }\n      }, \"Extract method\", null);\n    }\n  }","commit_id":"4477b1acf863736826f1e50f9e1fea106f5c6254","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void extractFromStatements(final Project project,\n                                           final Editor editor,\n                                           final CodeFragment fragment,\n                                           final PsiElement statement1,\n                                           final PsiElement statement2) {\n    if (!fragment.getOutputVariables().isEmpty() && fragment.isReturnInstructonInside()) {\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          \"Cannot perform refactoring from expression with local variables modifications and return instructions inside code fragment\",\n                                          RefactoringBundle.message(\"error.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n\n    final Pair<String, AbstractVariableData[]> data = getNameAndVariableData(project, fragment, statement1);\n    if (data.first == null || data.second == null) {\n      return;\n    }\n\n    // collect statements\n    final List<PsiElement> elementsRange = PyPsiUtils.collectElements(statement1, statement2);\n    final String methodName = data.first;\n    final AbstractVariableData[] variableData = data.second;\n\n    if (fragment.getOutputVariables().isEmpty()) {\n      CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              // Generate method\n              final PyFunction generatedMethod = generateMethodFromElements(project, methodName, variableData, elementsRange);\n              insertGeneratedMethod(statement1, generatedMethod);\n\n              // Process parameters\n              processParameters(project, generatedMethod, variableData);\n\n              // Generating call element\n              final StringBuilder builder = new StringBuilder();\n              if (fragment.isReturnInstructonInside()) {\n                builder.append(\"return \");\n              }\n              builder.append(methodName);\n              builder.append(\"(\").append(createCallArgsString(variableData)).append(\")\");\n              PsiElement callElement = PythonLanguage.getInstance().getElementGenerator().createFromText(project, PyCallExpression.class, builder.toString());\n\n              //# replace statements with call\n              callElement = replaceElements(elementsRange, callElement);\n\n              // # Set editor\n              setSelectionAndCaret(editor, callElement);\n            }\n          });\n        }\n      }, \"Extract method\", null);\n    } else {\n      CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              // Generate method\n              final PyFunction generatedMethod = generateMethodFromElements(project, methodName, variableData, elementsRange);\n\n              // Append return modified variables statements\n              final StringBuilder builder = new StringBuilder();\n              for (String s : fragment.getOutputVariables()) {\n                if (builder.length() != 0) {\n                  builder.append(\", \");\n                }\n                builder.append(s);\n              }\n              final PsiElement returnStatement = PythonLanguage.getInstance().getElementGenerator().createFromText(project, PyElement.class, \"return \" + builder.toString());\n              generatedMethod.getStatementList().add(returnStatement);\n\n              insertGeneratedMethod(statement1, generatedMethod);\n\n              // Process parameters\n              processParameters(project, generatedMethod, variableData);\n\n              // Generate call element\n              builder.append(\" = \").append(methodName).append(\"(\");\n              builder.append(createCallArgsString(variableData)).append(\")\");\n              PsiElement callElement = PythonLanguage.getInstance().getElementGenerator().createFromText(project, PyElement.class, builder.toString());\n\n              // replace statements with call\n              callElement = replaceElements(elementsRange, callElement);\n\n              // Set editor\n              setSelectionAndCaret(editor, callElement);\n            }\n          });\n        }\n      }, \"Extract method\", null);\n    }\n  }","id":27871,"modified_method":"public static void extractFromStatements(final Project project,\n                                           final Editor editor,\n                                           final CodeFragment fragment,\n                                           final PsiElement statement1,\n                                           final PsiElement statement2) {\n    if (!fragment.getOutputVariables().isEmpty() && fragment.isReturnInstructonInside()) {\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          \"Cannot perform refactoring from expression with local variables modifications and return instructions inside code fragment\",\n                                          RefactoringBundle.message(\"error.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n\n    final Pair<String, AbstractVariableData[]> data = getNameAndVariableData(project, fragment, statement1);\n    if (data.first == null || data.second == null) {\n      return;\n    }\n\n    // collect statements\n    final List<PsiElement> elementsRange = PyPsiUtils.collectElements(statement1, statement2);\n    final String methodName = data.first;\n    final AbstractVariableData[] variableData = data.second;\n\n    if (fragment.getOutputVariables().isEmpty()) {\n      CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              // Generate method\n              PyFunction generatedMethod = generateMethodFromElements(project, methodName, variableData, elementsRange);\n              generatedMethod = insertGeneratedMethod(statement1, generatedMethod);\n\n              // Process parameters\n              processParameters(project, generatedMethod, variableData);\n\n              // Generating call element\n              final StringBuilder builder = new StringBuilder();\n              if (fragment.isReturnInstructonInside()) {\n                builder.append(\"return \");\n              }\n              builder.append(methodName);\n              builder.append(\"(\").append(createCallArgsString(variableData)).append(\")\");\n              PsiElement callElement = PythonLanguage.getInstance().getElementGenerator().createFromText(project, PyCallExpression.class, builder.toString());\n\n              //# replace statements with call\n              callElement = replaceElements(elementsRange, callElement);\n\n              // # Set editor\n              setSelectionAndCaret(editor, callElement);\n            }\n          });\n        }\n      }, \"Extract method\", null);\n    } else {\n      CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              // Generate return modified variables statements\n              final StringBuilder builder = new StringBuilder();\n              for (String s : fragment.getOutputVariables()) {\n                if (builder.length() != 0) {\n                  builder.append(\", \");\n                }\n                builder.append(s);\n              }\n              final PsiElement returnStatement =\n                PythonLanguage.getInstance().getElementGenerator().createFromText(project, PyElement.class, \"return \" + builder.toString());\n              elementsRange.add(returnStatement);\n\n              // Generate method\n              PyFunction generatedMethod = generateMethodFromElements(project, methodName, variableData, elementsRange);\n              generatedMethod = insertGeneratedMethod(statement1, generatedMethod);\n\n              // Process parameters\n              processParameters(project, generatedMethod, variableData);\n\n              // Generate call element\n              builder.append(\" = \").append(methodName).append(\"(\");\n              builder.append(createCallArgsString(variableData)).append(\")\");\n              PsiElement callElement = PythonLanguage.getInstance().getElementGenerator().createFromText(project, PyElement.class, builder.toString());\n\n              // replace statements with call\n              callElement = replaceElements(elementsRange, callElement);\n\n              // Set editor\n              setSelectionAndCaret(editor, callElement);\n            }\n          });\n        }\n      }, \"Extract method\", null);\n    }\n  }","commit_id":"4477b1acf863736826f1e50f9e1fea106f5c6254","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static PyElement getCompoundStatement(final PsiElement element) {\n    return element instanceof PyFile || element instanceof PyStatementList\n           ? (PyElement) element\n           : PsiTreeUtil.getParentOfType(element, PyFile.class, PyStatementList.class);\n  }","id":27872,"modified_method":"public static PyElement getCompoundStatement(final PsiElement element) {\n    //noinspection ConstantConditions\n    return element instanceof PyFile || element instanceof PyStatementList\n           ? (PyElement) element\n           : PsiTreeUtil.getParentOfType(element, PyFile.class, PyStatementList.class);\n  }","commit_id":"4477b1acf863736826f1e50f9e1fea106f5c6254","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public PsiElement addBefore(@NotNull PsiElement element, PsiElement anchor) throws IncorrectOperationException {\n    final PsiElement[] elements = createElements2Add(element);\n    if (elements != null){\n      return super.addBefore(elements[0], super.addBefore(elements[1], anchor));\n    }\n    return super.addBefore(element, anchor);\n  }","id":27873,"modified_method":"@Override\n  public PsiElement addBefore(@NotNull PsiElement element, PsiElement anchor) throws IncorrectOperationException {\n    final PsiElement preprocessed = preprocessElement(element);\n    if (preprocessed != null){\n      return super.addBefore(preprocessed, anchor);\n    }\n    return super.addBefore(element, anchor);\n  }","commit_id":"4477b1acf863736826f1e50f9e1fea106f5c6254","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public PsiElement addAfter(@NotNull PsiElement element, PsiElement anchor) throws IncorrectOperationException {\n    final PsiElement[] elements = createElements2Add(element);\n    if (elements != null){\n      return super.addAfter(elements[0], super.addAfter(elements[1], anchor));\n    }\n    return super.addAfter(element, anchor);\n  }","id":27874,"modified_method":"@Override\n  public PsiElement addAfter(@NotNull PsiElement element, PsiElement anchor) throws IncorrectOperationException {\n    final PsiElement preprocessed = preprocessElement(element);\n    if (preprocessed != null){\n      return super.addAfter(preprocessed, anchor);\n    }\n    return super.addAfter(element, anchor);\n  }","commit_id":"4477b1acf863736826f1e50f9e1fea106f5c6254","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public PsiElement add(@NotNull PsiElement element) throws IncorrectOperationException {\n    final PsiElement[] elements = createElements2Add(element);\n    if (elements != null){\n      super.add(elements[1]);\n      return super.add(elements[0]);\n    }\n    return super.add(element);\n  }","id":27875,"modified_method":"@Override\n  public PsiElement add(@NotNull PsiElement element) throws IncorrectOperationException {\n    final PsiElement preprocessed = preprocessElement(element);\n    if (preprocessed != null){\n      return super.add(preprocessed);\n    }\n    return super.add(element);\n  }","commit_id":"4477b1acf863736826f1e50f9e1fea106f5c6254","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Creates copy of element without redundant whitespaces within element\n   * @param element\n   * @return\n   */\n  public static PyElement preprocessElement(final PsiElement element) {\n    final int indentLength = getElementIndentation(element);\n    final String indentString = StringUtil.repeatSymbol(' ', indentLength);\n    final String text = element.getText();\n    final StringBuilder builder = new StringBuilder();\n    for (String line : StringUtil.split(text, \"\\n\")) {\n      if (builder.length() != 0){\n        builder.append(\"\\n\");\n      }\n      if (!StringUtil.isEmptyOrSpaces(line)){\n        if (line.startsWith(indentString)){\n          builder.append(line.substring(indentLength));\n        } else {\n          builder.append(line);\n        }\n      }\n    }\n    return PythonLanguage.getInstance().getElementGenerator().createFromText(element.getProject(), PyElement.class, builder.toString());\n  }","id":27876,"modified_method":"/**\n   * Creates copy of element without redundant whitespaces within element\n   * @param element\n   * @return\n   */\n  @NotNull\n  public static PyElement preprocessElement(final PsiElement element) {\n    final int indentLength = getElementIndentation(element);\n    final String indentString = StringUtil.repeatSymbol(' ', indentLength);\n    final String text = element.getText();\n    final StringBuilder builder = new StringBuilder();\n    for (String line : StringUtil.split(text, \"\\n\")) {\n      if (builder.length() != 0){\n        builder.append(\"\\n\");\n      }\n      if (!StringUtil.isEmptyOrSpaces(line)){\n        if (line.startsWith(indentString)){\n          builder.append(line.substring(indentLength));\n        } else {\n          builder.append(line);\n        }\n      }\n    }\n    final PyElementGenerator elementGenerator = PythonLanguage.getInstance().getElementGenerator();\n    final PyElement result = elementGenerator.createFromText(element.getProject(), PyElement.class, builder.toString());\n    if (result == null) {\n      throw new RuntimeException(\"Failed to create element from text \" + builder.toString());\n    }\n    return result;\n  }","commit_id":"d767e18d065b7601ab61befef07ad74043bceea7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  /**\n   * Indents given element and creates pair of indented psiElement and psiWhitespace(indent)\n   */\n  private PsiElement preprocessElement(PsiElement element) {\n    element = PyPsiUtils.preprocessElement(element);\n    final PsiElement sibling = getPrevSibling();\n    final String whitespace = sibling instanceof PsiWhiteSpace ? sibling.getText() : \"\";\n    final int i = whitespace.lastIndexOf(\"\\n\");\n    final int indent = i != -1 ? whitespace.length() - i - 1 : 0;\n    try {\n      final String newElementText = StringUtil.shiftIndentInside(element.getText(), indent, false);\n      final PyClass clazzz = PythonLanguage.getInstance().getElementGenerator().\n        createFromText(getProject(), PyClass.class, \"class PyCharmRulezzzzz():\\n\" + newElementText);\n      final PyStatementList statementList = clazzz.getStatementList();\n      return statementList.getFirstChild();\n    }\n    catch (IOException e) {\n      return null;\n    }\n  }","id":27877,"modified_method":"/**\n   * Indents given element and creates pair of indented psiElement and psiWhitespace(indent)\n   */\n  @Nullable\n  private PsiElement preprocessElement(PsiElement element) {\n    if (element instanceof PsiWhiteSpace) return element;\n    element = PyPsiUtils.preprocessElement(element);\n    final PsiElement sibling = getPrevSibling();\n    final String whitespace = sibling instanceof PsiWhiteSpace ? sibling.getText() : \"\";\n    final int i = whitespace.lastIndexOf(\"\\n\");\n    final int indent = i != -1 ? whitespace.length() - i - 1 : 0;\n    if (indent == 0) return element;\n    try {\n      final String newElementText = StringUtil.shiftIndentInside(element.getText(), indent, false);\n      final PyClass clazzz = PythonLanguage.getInstance().getElementGenerator().\n        createFromText(getProject(), PyClass.class, \"class PyCharmRulezzzzz():\\n\" + newElementText);\n      final PyStatementList statementList = clazzz.getStatementList();\n      return statementList.getFirstChild();\n    }\n    catch (IOException e) {\n      return null;\n    }\n  }","commit_id":"d767e18d065b7601ab61befef07ad74043bceea7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void runTest() throws Exception {\n        String testFileName = name + \".jet\";\n\n        String expectedText = loadFile(testFileName);\n\n        List<TestFile> testFileFiles = JetTestUtils.createTestFiles(testFileName, expectedText, new JetTestUtils.TestFileFactory<TestFile>() {\n            @Override\n            public TestFile create(String fileName, String text) {\n                return new TestFile(fileName, text);\n            }\n        });\n\n        boolean importJdk = expectedText.contains(\"+JDK\");\n//        Configuration configuration = importJdk ? JavaBridgeConfiguration.createJavaBridgeConfiguration(getProject()) : Configuration.EMPTY;\n\n        List<JetFile> jetFiles = Lists.newArrayList();\n        for (TestFile testFileFile : testFileFiles) {\n            jetFiles.add(testFileFile.jetFile);\n        }\n\n        BindingContext bindingContext;\n        if (importJdk) {\n            bindingContext = AnalyzerFacade.analyzeFilesWithJavaIntegration(getProject(), jetFiles, Predicates.<PsiFile>alwaysTrue(), JetControlFlowDataTraceFactory.EMPTY);\n        }\n        else {\n            bindingContext = AnalyzingUtils.analyzeFiles(getProject(), Configuration.EMPTY, jetFiles, Predicates.<PsiFile>alwaysTrue(), JetControlFlowDataTraceFactory.EMPTY);\n        }\n\n        boolean ok = true;\n\n        StringBuilder actualText = new StringBuilder();\n        for (TestFile testFileFile : testFileFiles) {\n            ok &= testFileFile.getActualText(bindingContext, actualText);\n        }\n\n        assertEquals(expectedText, actualText.toString());\n\n        assertTrue(\"something is wrong is this test\", ok);\n    }","id":27878,"modified_method":"@Override\n    public void runTest() throws Exception {\n        String testFileName = name + \".jet\";\n\n        String expectedText = loadFile(testFileName);\n\n        List<TestFile> testFileFiles = JetTestUtils.createTestFiles(testFileName, expectedText, new JetTestUtils.TestFileFactory<TestFile>() {\n            @Override\n            public TestFile create(String fileName, String text) {\n                return new TestFile(fileName, text);\n            }\n        });\n\n        List<JetFile> jetFiles = Lists.newArrayList();\n        for (TestFile testFileFile : testFileFiles) {\n            jetFiles.add(testFileFile.jetFile);\n        }\n\n        BindingContext bindingContext = AnalyzerFacade.analyzeFilesWithJavaIntegration(getProject(), jetFiles, Predicates.<PsiFile>alwaysTrue(), JetControlFlowDataTraceFactory.EMPTY);\n\n        boolean ok = true;\n\n        StringBuilder actualText = new StringBuilder();\n        for (TestFile testFileFile : testFileFiles) {\n            ok &= testFileFile.getActualText(bindingContext, actualText);\n        }\n\n        assertEquals(expectedText, actualText.toString());\n\n        assertTrue(\"something is wrong is this test\", ok);\n    }","commit_id":"8111d5db9765ee917b8ca1bd9aa9990fbbe15498","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public ClassifierDescriptor getClassifier(@NotNull String name) {\n        return semanticServices.getDescriptorResolver().resolveClass(getQualifiedName(packageFQN, name));\n    }","id":27879,"modified_method":"@Override\n    public ClassifierDescriptor getClassifier(@NotNull String name) {\n        ClassDescriptor classDescriptor = semanticServices.getDescriptorResolver().resolveClass(getQualifiedName(packageFQN, name));\n        if (classDescriptor == null || DescriptorUtils.isObject(classDescriptor)) {\n            // TODO: this is a big hack against several things that I barely understand myself and cannot explain\n            // 1. We should not return objects from this method, and maybe JDR.resolveClass should not return too\n            // 2. JDR should not return classes being analyzed\n            return null;\n        }\n        return classDescriptor;\n    }","commit_id":"3748507ac18a9117344e2533b1aec6c3ee836d8a","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public void runTest() throws Exception {\n        javaFilesDir = new File(FileUtil.getTempDirectory(), \"java-files\");\n\n        String testFileName = name + \".jet\";\n\n        String expectedText = loadFile(testFileName);\n\n        List<TestFile> testFileFiles = JetTestUtils.createTestFiles(testFileName, expectedText, new JetTestUtils.TestFileFactory<TestFile>() {\n            @Override\n            public TestFile create(String fileName, String text) {\n                if (fileName.endsWith(\".java\")) {\n                    writeJavaFile(fileName, text);\n                }\n                return new TestFile(fileName, text);\n            }\n        });\n\n        boolean importJdk = expectedText.contains(\"+JDK\");\n//        ModuleConfiguration configuration = importJdk ? JavaBridgeConfiguration.createJavaBridgeConfiguration(getProject()) : ModuleConfiguration.EMPTY;\n        if (hasJavaFiles) {\n            // According to yole@ the only way to import java files is to write them on disk\n            // -- stepan.koltsov@ 2012-02-29\n            myEnvironment.addToClasspath(javaFilesDir);\n        }\n\n        List<JetFile> jetFiles = Lists.newArrayList();\n        for (TestFile testFileFile : testFileFiles) {\n            if (testFileFile.jetFile != null) {\n                jetFiles.add(testFileFile.jetFile);\n            }\n        }\n\n        BindingContext bindingContext;\n        if (importJdk) {\n            bindingContext = AnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(getProject(), jetFiles, Predicates.<PsiFile>alwaysTrue(), JetControlFlowDataTraceFactory.EMPTY);\n        }\n        else {\n            bindingContext = AnalyzingUtils.analyzeFiles(getProject(), ModuleConfiguration.EMPTY, jetFiles, Predicates.<PsiFile>alwaysTrue(), JetControlFlowDataTraceFactory.EMPTY);\n        }\n\n        boolean ok = true;\n\n        StringBuilder actualText = new StringBuilder();\n        for (TestFile testFileFile : testFileFiles) {\n            ok &= testFileFile.getActualText(bindingContext, actualText);\n        }\n\n        assertEquals(expectedText, actualText.toString());\n\n        assertTrue(\"something is wrong is this test\", ok);\n    }","id":27880,"modified_method":"@Override\n    public void runTest() throws Exception {\n        javaFilesDir = new File(FileUtil.getTempDirectory(), \"java-files\");\n\n        String testFileName = name + \".jet\";\n\n        String expectedText = loadFile(testFileName);\n\n        List<TestFile> testFileFiles = JetTestUtils.createTestFiles(testFileName, expectedText, new JetTestUtils.TestFileFactory<TestFile>() {\n            @Override\n            public TestFile create(String fileName, String text) {\n                if (fileName.endsWith(\".java\")) {\n                    writeJavaFile(fileName, text);\n                }\n                return new TestFile(fileName, text);\n            }\n        });\n\n//        ModuleConfiguration configuration = JavaBridgeConfiguration.createJavaBridgeConfiguration(getProject());\n        if (hasJavaFiles) {\n            // According to yole@ the only way to import java files is to write them on disk\n            // -- stepan.koltsov@ 2012-02-29\n            myEnvironment.addToClasspath(javaFilesDir);\n        }\n\n        List<JetFile> jetFiles = Lists.newArrayList();\n        for (TestFile testFileFile : testFileFiles) {\n            if (testFileFile.jetFile != null) {\n                jetFiles.add(testFileFile.jetFile);\n            }\n        }\n\n        BindingContext bindingContext = AnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(getProject(), jetFiles, Predicates.<PsiFile>alwaysTrue(), JetControlFlowDataTraceFactory.EMPTY);\n\n        boolean ok = true;\n\n        StringBuilder actualText = new StringBuilder();\n        for (TestFile testFileFile : testFileFiles) {\n            ok &= testFileFile.getActualText(bindingContext, actualText);\n        }\n\n        assertEquals(expectedText, actualText.toString());\n\n        assertTrue(\"something is wrong is this test\", ok);\n    }","commit_id":"3748507ac18a9117344e2533b1aec6c3ee836d8a","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    protected AnalysisResult analyzeModuleContents(\n            @NotNull ModuleContext moduleContext,\n            @NotNull List<KtFile> files,\n            @NotNull BindingTrace moduleTrace,\n            @Nullable LanguageVersionSettings languageVersionSettings\n    ) {\n        CompilerConfiguration configuration;\n        if (languageVersionSettings != null) {\n            configuration = getEnvironment().getConfiguration().copy();\n            configuration.put(CommonConfigurationKeys.LANGUAGE_VERSION_SETTINGS, languageVersionSettings);\n        }\n        else {\n            configuration = getEnvironment().getConfiguration();\n        }\n\n        // New JavaDescriptorResolver is created for each module, which is good because it emulates different Java libraries for each module,\n        // albeit with same class names\n        return TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(\n                moduleContext, files, moduleTrace, configuration, new JvmPackagePartProvider(getEnvironment())\n        );\n    }","id":27881,"modified_method":"@NotNull\n    protected AnalysisResult analyzeModuleContents(\n            @NotNull ModuleContext moduleContext,\n            @NotNull List<KtFile> files,\n            @NotNull BindingTrace moduleTrace,\n            @Nullable LanguageVersionSettings languageVersionSettings\n    ) {\n        CompilerConfiguration configuration;\n        if (languageVersionSettings != null) {\n            configuration = getEnvironment().getConfiguration().copy();\n            configuration.put(CommonConfigurationKeys.LANGUAGE_VERSION_SETTINGS, languageVersionSettings);\n        }\n        else {\n            configuration = getEnvironment().getConfiguration();\n        }\n\n        // New JavaDescriptorResolver is created for each module, which is good because it emulates different Java libraries for each module,\n        // albeit with same class names\n        // See TopDownAnalyzerFacadeForJVM#analyzeFilesWithJavaIntegration\n        ComponentProvider container = InjectionKt.createContainerForTopDownSingleModuleAnalyzerForJvm(\n                moduleContext,\n                moduleTrace,\n                new FileBasedDeclarationProviderFactory(moduleContext.getStorageManager(), files),\n                GlobalSearchScope.allScope(moduleContext.getProject()),\n                new JvmPackagePartProvider(getEnvironment()),\n                configuration.get(CommonConfigurationKeys.LANGUAGE_VERSION_SETTINGS, LanguageVersionSettingsImpl.DEFAULT)\n        );\n\n        DslKt.getService(container, LazyTopDownAnalyzerForTopLevel.class).analyzeFiles(\n                TopDownAnalysisMode.TopLevelDeclarations, files,\n                Collections.singletonList(DslKt.getService(container, JavaDescriptorResolver.class).getPackageFragmentProvider())\n        );\n\n        return AnalysisResult.success(moduleTrace.getBindingContext(), moduleContext.getModule());\n    }","commit_id":"a5a874f23f3b345512ca98197482256a1a39f779","url":"https://github.com/JetBrains/kotlin"},{"original_method":"protected void doTestJavaAgainstKotlin(String expectedFileName) throws Exception {\n        File expectedFile = new File(expectedFileName);\n        File sourcesDir = new File(expectedFileName.replaceFirst(\"\\\\.txt$\", \"\"));\n\n        FileUtil.copyDir(sourcesDir, new File(tmpdir, \"test\"), new FileFilter() {\n            @Override\n            public boolean accept(@NotNull File pathname) {\n                return pathname.getName().endsWith(\".java\");\n            }\n        });\n\n        CompilerConfiguration configuration = KotlinTestUtils.newConfiguration(ConfigurationKind.JDK_ONLY, getJdkKind());\n        ContentRootsKt.addKotlinSourceRoot(configuration, sourcesDir.getAbsolutePath());\n        JvmContentRootsKt.addJavaSourceRoot(configuration, new File(\"compiler/testData/loadJava/include\"));\n        JvmContentRootsKt.addJavaSourceRoot(configuration, tmpdir);\n        \n        KotlinCoreEnvironment environment =\n                KotlinCoreEnvironment.createForTests(getTestRootDisposable(), configuration, EnvironmentConfigFiles.JVM_CONFIG_FILES);\n\n        BindingTrace trace = new CliLightClassGenerationSupport.NoScopeRecordCliBindingTrace();\n        ModuleContext moduleContext = TopDownAnalyzerFacadeForJVM.createContextWithSealedModule(environment.getProject(), configuration);\n\n        TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(\n                moduleContext, environment.getSourceFiles(), trace, configuration, new JvmPackagePartProvider(environment)\n        );\n\n        PackageViewDescriptor packageView = moduleContext.getModule().getPackage(TEST_PACKAGE_FQNAME);\n        checkJavaPackage(expectedFile, packageView, trace.getBindingContext(), DONT_INCLUDE_METHODS_OF_OBJECT);\n    }","id":27882,"modified_method":"protected void doTestJavaAgainstKotlin(String expectedFileName) throws Exception {\n        File expectedFile = new File(expectedFileName);\n        File sourcesDir = new File(expectedFileName.replaceFirst(\"\\\\.txt$\", \"\"));\n\n        FileUtil.copyDir(sourcesDir, new File(tmpdir, \"test\"), new FileFilter() {\n            @Override\n            public boolean accept(@NotNull File pathname) {\n                return pathname.getName().endsWith(\".java\");\n            }\n        });\n\n        CompilerConfiguration configuration = KotlinTestUtils.newConfiguration(ConfigurationKind.JDK_ONLY, getJdkKind());\n        ContentRootsKt.addKotlinSourceRoot(configuration, sourcesDir.getAbsolutePath());\n        JvmContentRootsKt.addJavaSourceRoot(configuration, new File(\"compiler/testData/loadJava/include\"));\n        JvmContentRootsKt.addJavaSourceRoot(configuration, tmpdir);\n\n        KotlinCoreEnvironment environment =\n                KotlinCoreEnvironment.createForTests(getTestRootDisposable(), configuration, EnvironmentConfigFiles.JVM_CONFIG_FILES);\n\n        AnalysisResult result = TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(\n                environment.getProject(), environment.getSourceFiles(), new CliLightClassGenerationSupport.NoScopeRecordCliBindingTrace(),\n                configuration, new JvmPackagePartProvider(environment)\n        );\n\n        PackageViewDescriptor packageView = result.getModuleDescriptor().getPackage(TEST_PACKAGE_FQNAME);\n        checkJavaPackage(expectedFile, packageView, result.getBindingContext(), DONT_INCLUDE_METHODS_OF_OBJECT);\n    }","commit_id":"a5a874f23f3b345512ca98197482256a1a39f779","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    private static AnalysisResult analyze(\n            @NotNull Project project,\n            @NotNull Collection<KtFile> files,\n            @NotNull CompilerConfiguration configuration,\n            @NotNull PackagePartProvider packagePartProvider\n    ) {\n        return TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(\n                TopDownAnalyzerFacadeForJVM.createContextWithSealedModule(project, configuration),\n                files, new CliLightClassGenerationSupport.CliBindingTrace(), configuration, packagePartProvider\n        );\n    }","id":27883,"modified_method":"@NotNull\n    private static AnalysisResult analyze(\n            @NotNull Project project,\n            @NotNull Collection<KtFile> files,\n            @NotNull CompilerConfiguration configuration,\n            @NotNull PackagePartProvider packagePartProvider\n    ) {\n        return TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(\n                project, files, new CliLightClassGenerationSupport.CliBindingTrace(), configuration, packagePartProvider\n        );\n    }","commit_id":"a5a874f23f3b345512ca98197482256a1a39f779","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Test\n  public void insert_multiple_reports() {\n    db.prepareDbUnit(getClass(), \"empty.xml\");\n\n    AnalysisReportDto report1 = newDefaultAnalysisReport().setUuid(\"UUID_1\");\n    AnalysisReportDto report2 = newDefaultAnalysisReport().setUuid(\"UUID_2\");\n\n    sut.insert(session, report1);\n    sut.insert(session, report2);\n    session.commit();\n\n    db.assertDbUnit(getClass(), \"insert-result.xml\", \"analysis_reports\");\n  }","id":27884,"modified_method":"@Test\n  public void insert_multiple_reports() {\n    db.prepareDbUnit(getClass(), \"empty.xml\");\n\n    AnalysisReportDto report1 = new AnalysisReportDto().setProjectKey(\"ProjectKey1\").setProjectName(\"Project 1\").setUuid(\"UUID_1\").setStatus(PENDING);\n    AnalysisReportDto report2 = new AnalysisReportDto().setProjectKey(\"ProjectKey2\").setProjectName(\"Project 2\").setUuid(\"UUID_2\").setStatus(PENDING);\n\n    sut.insert(session, report1);\n    sut.insert(session, report2);\n    session.commit();\n\n    db.assertDbUnit(getClass(), \"insert-result.xml\", \"analysis_reports\");\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void find_one_report_by_project_key() {\n    db.prepareDbUnit(getClass(), \"select.xml\");\n\n    final String projectKey = \"123456789-987654321\";\n    List<AnalysisReportDto> reports = sut.selectByProjectKey(session, projectKey);\n    AnalysisReportDto report = reports.get(0);\n\n    assertThat(reports).hasSize(1);\n    assertThat(report.getProjectKey()).isEqualTo(projectKey);\n    assertThat(report.getId()).isEqualTo(1);\n  }","id":27885,"modified_method":"@Test\n  public void find_one_report_by_project_key() {\n    db.prepareDbUnit(getClass(), \"select.xml\");\n\n    final String projectKey = \"123456789-987654321\";\n    List<AnalysisReportDto> reports = sut.selectByProjectKey(session, projectKey);\n    AnalysisReportDto report = reports.get(0);\n\n    assertThat(reports).hasSize(1);\n    assertThat(report.getProjectKey()).isEqualTo(projectKey);\n    assertThat(report.getProjectName()).isEqualTo(\"Project 1\");\n    assertThat(report.getStatus()).isEqualTo(AnalysisReportDto.Status.WORKING);\n    assertThat(report.getId()).isEqualTo(1);\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeReports(List<AnalysisReportDto> reports, JsonWriter json) {\n    json.name(\"reports\").beginArray();\n    for (AnalysisReportDto report : reports) {\n      json.beginObject();\n      json.prop(\"key\", report.getId());\n      json.prop(\"projectKey\", report.getProjectKey());\n      json.prop(\"projectName\", report.getProjectKey());\n      json.propDateTime(\"startedAt\", longToDate(report.getStartedAt()));\n      json.propDateTime(\"finishedAt\", longToDate(report.getFinishedAt()));\n      json.propDateTime(\"submittedAt\", longToDate(report.getCreatedAt()));\n      json.prop(\"status\", report.getStatus().toString());\n      json.endObject();\n    }\n    json.endArray();\n  }","id":27886,"modified_method":"private void writeReports(List<AnalysisReportDto> reports, JsonWriter json) {\n    json.name(\"reports\").beginArray();\n    for (AnalysisReportDto report : reports) {\n      json.beginObject();\n      json.prop(\"key\", report.getId());\n      json.prop(\"projectKey\", report.getProjectKey());\n      json.prop(\"projectName\", report.getProjectName());\n      json.propDateTime(\"startedAt\", longToDate(report.getStartedAt()));\n      json.propDateTime(\"finishedAt\", longToDate(report.getFinishedAt()));\n      json.propDateTime(\"submittedAt\", longToDate(report.getCreatedAt()));\n      json.prop(\"status\", report.getStatus().toString());\n      json.endObject();\n    }\n    json.endArray();\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void list_active_reports() throws Exception {\n    AnalysisReportDto report = AnalysisReportDto\n      .newForTests(1L)\n      .setProjectKey(\"project-key\")\n      .setStatus(PENDING)\n      .setUuid(\"PROJECT_UUID\")\n      .setCreatedAt(DateUtils.parseDateTime(\"2014-10-13T00:00:00+0200\").getTime())\n      .setStartedAt(DateUtils.parseDateTime(\"2014-10-13T00:00:00+0200\").getTime())\n      .setFinishedAt(DateUtils.parseDateTime(\"2014-10-13T00:00:00+0200\").getTime());\n    List<AnalysisReportDto> reports = Lists.newArrayList(report);\n    when(queue.all()).thenReturn(reports);\n\n    WsTester.TestRequest request = tester.newGetRequest(ComputationWs.ENDPOINT, \"queue\");\n    request.execute().assertJson(getClass(), \"list_queue_reports.json\");\n  }","id":27887,"modified_method":"@Test\n  public void list_active_reports() throws Exception {\n    AnalysisReportDto report = AnalysisReportDto\n      .newForTests(1L)\n      .setProjectKey(\"project-key\")\n      .setProjectName(\"Project name\")\n      .setStatus(PENDING)\n      .setUuid(\"PROJECT_UUID\")\n      .setCreatedAt(DateUtils.parseDateTime(\"2014-10-13T00:00:00+0200\").getTime())\n      .setStartedAt(DateUtils.parseDateTime(\"2014-10-13T00:00:00+0200\").getTime())\n      .setFinishedAt(DateUtils.parseDateTime(\"2014-10-13T00:00:00+0200\").getTime());\n    List<AnalysisReportDto> reports = Lists.newArrayList(report);\n    when(queue.all()).thenReturn(reports);\n\n    WsTester.TestRequest request = tester.newGetRequest(ComputationWs.ENDPOINT, \"queue\");\n    request.execute().assertJson(getClass(), \"list_queue_reports.json\");\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Item add(String projectKey, InputStream reportData) {\n    String uuid = Uuids.create();\n    File file = reportFileForUuid(uuid);\n\n    DbSession session = dbClient.openSession(false);\n    try {\n      checkThatProjectExistsInDatabase(projectKey, session);\n\n      saveReportOnDisk(reportData, file);\n      AnalysisReportDto dto = saveReportMetadataInDatabase(projectKey, uuid, session);\n\n      return new Item(dto, file);\n    } catch (Exception e) {\n      FileUtils.deleteQuietly(file);\n      throw new IllegalStateException(\"Fail to store analysis report of project \" + projectKey, e);\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":27888,"modified_method":"public Item add(String projectKey, String projectName, InputStream reportData) {\n    String uuid = Uuids.create();\n    File file = reportFileForUuid(uuid);\n\n    DbSession session = dbClient.openSession(false);\n    try {\n      checkThatProjectExistsInDatabase(projectKey, session);\n\n      saveReportOnDisk(reportData, file);\n      AnalysisReportDto dto = saveReportMetadataInDatabase(projectKey, projectName, uuid, session);\n\n      return new Item(dto, file);\n    } catch (Exception e) {\n      FileUtils.deleteQuietly(file);\n      throw new IllegalStateException(\"Fail to store analysis report of project \" + projectKey, e);\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private AnalysisReportDto saveReportMetadataInDatabase(String projectKey, String uuid, DbSession session) {\n    AnalysisReportDto dto = new AnalysisReportDto()\n      .setProjectKey(projectKey)\n      .setStatus(PENDING)\n      .setUuid(uuid);\n    dao().insert(session, dto);\n    session.commit();\n    return dto;\n  }","id":27889,"modified_method":"private AnalysisReportDto saveReportMetadataInDatabase(String projectKey, String projectName, String uuid, DbSession session) {\n    AnalysisReportDto dto = new AnalysisReportDto()\n      .setProjectKey(projectKey)\n      .setProjectName(projectName)\n      .setStatus(PENDING)\n      .setUuid(uuid);\n    dao().insert(session, dto);\n    session.commit();\n    return dto;\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test(expected = IllegalStateException.class)\n  public void add_on_non_existent_project() {\n    sut.add(\"UNKNOWN_PROJECT_KEY\", generateData());\n  }","id":27890,"modified_method":"@Test(expected = IllegalStateException.class)\n  public void add_on_non_existent_project() {\n    sut.add(\"UNKNOWN_PROJECT_KEY\", \"Unknown project\", generateData());\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void reset_to_pending_status() {\n    // 2 pending\n    sut.add(\"P1\", generateData());\n    sut.add(\"P2\", generateData());\n\n    // pop 1 -> 1 pending and 1 working\n    ReportQueue.Item workingItem = sut.pop();\n    assertThat(workingItem.dto.getStatus()).isEqualTo(WORKING);\n    assertThat(sut.all()).extracting(\"status\").contains(PENDING, WORKING);\n\n    sut.resetToPendingStatus();\n    assertThat(sut.all()).extracting(\"status\").containsOnly(PENDING).hasSize(2);\n\n  }","id":27891,"modified_method":"@Test\n  public void reset_to_pending_status() {\n    // 2 pending\n    sut.add(\"P1\", \"Project 1\", generateData());\n    sut.add(\"P2\", \"Project 2\", generateData());\n\n    // pop 1 -> 1 pending and 1 working\n    ReportQueue.Item workingItem = sut.pop();\n    assertThat(workingItem.dto.getStatus()).isEqualTo(WORKING);\n    assertThat(sut.all()).extracting(\"status\").contains(PENDING, WORKING);\n\n    sut.resetToPendingStatus();\n    assertThat(sut.all()).extracting(\"status\").containsOnly(PENDING).hasSize(2);\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void pop_pending_items_in_fifo_order() {\n    sut.add(\"P1\", generateData());\n    sut.add(\"P2\", generateData());\n    sut.add(\"P3\", generateData());\n\n    ReportQueue.Item item = sut.pop();\n    assertThat(item.dto.getProjectKey()).isEqualTo(\"P1\");\n    assertThat(item.zipFile).exists().isFile().hasExtension(\"zip\");\n\n    // status changed from PENDING to WORKING\n    assertThat(item.dto.getStatus()).isEqualTo(WORKING);\n\n    assertThat(sut.pop().dto.getProjectKey()).isEqualTo(\"P2\");\n    assertThat(sut.pop().dto.getProjectKey()).isEqualTo(\"P3\");\n\n    // queue is empty\n    assertThat(sut.pop()).isNull();\n\n    // items are still in db, but in WORKING status\n    List<AnalysisReportDto> reports = sut.all();\n    assertThat(reports).hasSize(3);\n    assertThat(reports).extracting(\"status\").containsOnly(WORKING);\n  }","id":27892,"modified_method":"@Test\n  public void pop_pending_items_in_fifo_order() {\n    sut.add(\"P1\", \"Project 1\", generateData());\n    sut.add(\"P2\", \"Project 2\", generateData());\n    sut.add(\"P3\", \"Project 3\", generateData());\n\n    ReportQueue.Item item = sut.pop();\n    assertThat(item.dto.getProjectKey()).isEqualTo(\"P1\");\n    assertThat(item.zipFile).exists().isFile().hasExtension(\"zip\");\n\n    // status changed from PENDING to WORKING\n    assertThat(item.dto.getStatus()).isEqualTo(WORKING);\n\n    assertThat(sut.pop().dto.getProjectKey()).isEqualTo(\"P2\");\n    assertThat(sut.pop().dto.getProjectKey()).isEqualTo(\"P3\");\n\n    // queue is empty\n    assertThat(sut.pop()).isNull();\n\n    // items are still in db, but in WORKING status\n    List<AnalysisReportDto> reports = sut.all();\n    assertThat(reports).hasSize(3);\n    assertThat(reports).extracting(\"status\").containsOnly(WORKING);\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void do_not_pop_corrupted_item() {\n    ReportQueue.Item item = sut.add(\"P1\", generateData());\n\n    // emulate corruption: file is missing on FS\n    FileUtils.deleteQuietly(item.zipFile);\n\n    assertThat(sut.pop()).isNull();\n\n    // table sanitized\n    assertThat(db.countRowsOfTable(\"analysis_reports\")).isEqualTo(0);\n  }","id":27893,"modified_method":"@Test\n  public void do_not_pop_corrupted_item() {\n    ReportQueue.Item item = sut.add(\"P1\", \"Project 1\", generateData());\n\n    // emulate corruption: file is missing on FS\n    FileUtils.deleteQuietly(item.zipFile);\n\n    assertThat(sut.pop()).isNull();\n\n    // table sanitized\n    assertThat(db.countRowsOfTable(\"analysis_reports\")).isEqualTo(0);\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void add_report_to_queue() {\n    // must:\n    // 1. insert metadata in db\n    // 2. copy report content to directory /data/analysis\n    ReportQueue.Item item = sut.add(\"P1\", generateData());\n\n    assertThat(item).isNotNull();\n    assertThat(item.zipFile).isFile().exists().hasContent(\"some data\").hasParent(new File(dataDir, \"analysis\"));\n    assertThat(item.dto.getUuid()).isNotEmpty();\n    assertThat(item.dto.getId()).isGreaterThan(0L);\n\n    List<AnalysisReportDto> reports = sut.selectByProjectKey(\"P1\");\n    assertThat(reports).hasSize(1);\n    AnalysisReportDto report = reports.get(0);\n\n    assertThat(reports).hasSize(1);\n    assertThat(report.getStatus()).isEqualTo(PENDING);\n    assertThat(report.getProjectKey()).isEqualTo(\"P1\");\n    assertThat(report.getUuid()).isNotEmpty();\n    assertThat(report.getId()).isGreaterThan(0L);\n    assertThat(report.getCreatedAt()).isEqualTo(NOW);\n    assertThat(report.getUpdatedAt()).isEqualTo(NOW);\n    assertThat(report.getStartedAt()).isNull();\n    assertThat(report.getFinishedAt()).isNull();\n\n    assertThat(FileUtils.listFiles(analysisDir(), new String[] {\"zip\"}, false)).hasSize(1);\n  }","id":27894,"modified_method":"@Test\n  public void add_report_to_queue() {\n    // must:\n    // 1. insert metadata in db\n    // 2. copy report content to directory /data/analysis\n    ReportQueue.Item item = sut.add(\"P1\", \"Project 1\", generateData());\n\n    assertThat(item).isNotNull();\n    assertThat(item.zipFile).isFile().exists().hasContent(\"some data\").hasParent(new File(dataDir, \"analysis\"));\n    assertThat(item.dto.getUuid()).isNotEmpty();\n    assertThat(item.dto.getId()).isGreaterThan(0L);\n\n    List<AnalysisReportDto> reports = dbClient.analysisReportDao().selectByProjectKey(session, \"P1\");\n    assertThat(reports).hasSize(1);\n    AnalysisReportDto report = reports.get(0);\n\n    assertThat(reports).hasSize(1);\n    assertThat(report.getStatus()).isEqualTo(PENDING);\n    assertThat(report.getProjectKey()).isEqualTo(\"P1\");\n    assertThat(report.getProjectName()).isEqualTo(\"Project 1\");\n    assertThat(report.getUuid()).isNotEmpty();\n    assertThat(report.getId()).isGreaterThan(0L);\n    assertThat(report.getCreatedAt()).isEqualTo(NOW);\n    assertThat(report.getUpdatedAt()).isEqualTo(NOW);\n    assertThat(report.getStartedAt()).isNull();\n    assertThat(report.getFinishedAt()).isNull();\n\n    assertThat(FileUtils.listFiles(analysisDir(), new String[] {\"zip\"}, false)).hasSize(1);\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void remove() {\n    ReportQueue.Item item = sut.add(\"P1\", generateData());\n    assertThat(db.countRowsOfTable(\"analysis_reports\")).isEqualTo(1);\n\n    sut.remove(item);\n    assertThat(db.countRowsOfTable(\"analysis_reports\")).isEqualTo(0);\n    assertThat(item.zipFile).doesNotExist();\n  }","id":27895,"modified_method":"@Test\n  public void remove() {\n    ReportQueue.Item item = sut.add(\"P1\", \"Project 1\", generateData());\n    assertThat(db.countRowsOfTable(\"analysis_reports\")).isEqualTo(1);\n\n    sut.remove(item);\n    assertThat(db.countRowsOfTable(\"analysis_reports\")).isEqualTo(0);\n    assertThat(item.zipFile).doesNotExist();\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void clear() {\n    sut.add(\"P1\", generateData());\n    sut.add(\"P2\", generateData());\n    assertThat(analysisDir()).exists().isDirectory();\n\n    sut.clear();\n\n    assertThat(db.countRowsOfTable(\"analysis_reports\")).isEqualTo(0);\n    assertThat(analysisDir()).doesNotExist();\n  }","id":27896,"modified_method":"@Test\n  public void clear() {\n    sut.add(\"P1\", \"Project 1\", generateData());\n    sut.add(\"P2\", \"Project 2\", generateData());\n    assertThat(analysisDir()).exists().isDirectory();\n\n    sut.clear();\n\n    assertThat(db.countRowsOfTable(\"analysis_reports\")).isEqualTo(0);\n    assertThat(analysisDir()).doesNotExist();\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void setUp() throws Exception {\n    dataDir = temp.newFolder();\n    settings.setProperty(ProcessProperties.PATH_DATA, dataDir.getAbsolutePath());\n    when(system.now()).thenReturn(NOW);\n\n    DbClient dbClient = new DbClient(db.database(), db.myBatis(), new ComponentDao(), new AnalysisReportDao(system));\n    sut = new ReportQueue(dbClient, settings);\n\n    try (DbSession session = dbClient.openSession(false)) {\n      dbClient.componentDao().insert(session, ComponentTesting.newProjectDto().setKey(\"P1\"));\n      dbClient.componentDao().insert(session, ComponentTesting.newProjectDto().setKey(\"P2\"));\n      dbClient.componentDao().insert(session, ComponentTesting.newProjectDto().setKey(\"P3\"));\n      session.commit();\n    }\n  }","id":27897,"modified_method":"@Before\n  public void setUp() throws Exception {\n    dataDir = temp.newFolder();\n    settings.setProperty(ProcessProperties.PATH_DATA, dataDir.getAbsolutePath());\n    when(system.now()).thenReturn(NOW);\n\n    dbClient = new DbClient(db.database(), db.myBatis(), new ComponentDao(), new AnalysisReportDao(system));\n    sut = new ReportQueue(dbClient, settings);\n\n    session = dbClient.openSession(false);\n      dbClient.componentDao().insert(session, ComponentTesting.newProjectDto().setKey(\"P1\"));\n      dbClient.componentDao().insert(session, ComponentTesting.newProjectDto().setKey(\"P2\"));\n      dbClient.componentDao().insert(session, ComponentTesting.newProjectDto().setKey(\"P3\"));\n      session.commit();\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void handle(Request request, Response response) throws Exception {\n    userSession.checkGlobalPermission(GlobalPermissions.SCAN_EXECUTION);\n    String projectKey = request.mandatoryParam(PARAM_PROJECT_KEY);\n    InputStream reportData = request.paramAsInputStream(PARAM_REPORT_DATA);\n    try {\n      ReportQueue.Item item = queue.add(projectKey, reportData);\n      workerLauncher.startAnalysisTaskNow();\n      response.newJsonWriter()\n        .beginObject()\n        // do not write integer for forward-compatibility, for example\n        // if we want to write UUID later\n        .prop(\"key\", String.valueOf(item.dto.getId()))\n        .endObject()\n        .close();\n    } finally {\n      IOUtils.closeQuietly(reportData);\n    }\n  }","id":27898,"modified_method":"@Override\n  public void handle(Request request, Response response) throws Exception {\n    userSession.checkGlobalPermission(GlobalPermissions.SCAN_EXECUTION);\n    String projectKey = request.mandatoryParam(PARAM_PROJECT_KEY);\n    String projectName = request.mandatoryParam(PARAM_PROJECT_NAME);\n    InputStream reportData = request.paramAsInputStream(PARAM_REPORT_DATA);\n    try {\n      ReportQueue.Item item = queue.add(projectKey, projectName, reportData);\n      workerLauncher.startAnalysisTaskNow();\n      response.newJsonWriter()\n        .beginObject()\n        // do not write integer for forward-compatibility, for example\n        // if we want to write UUID later\n        .prop(\"key\", String.valueOf(item.dto.getId()))\n        .endObject()\n        .close();\n    } finally {\n      IOUtils.closeQuietly(reportData);\n    }\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void define(WebService.NewController controller) {\n    WebService.NewAction action = controller.createAction(ACTION)\n      .setDescription(\"Submit an analysis report to the queue. Report is integrated asynchronously.\")\n      .setPost(true)\n      .setInternal(true)\n      .setHandler(this);\n\n    action\n      .createParam(PARAM_PROJECT_KEY)\n      .setRequired(true)\n      .setDescription(\"Project key\")\n      .setExampleValue(\"org.codehaus.sonar:sonar\");\n\n    action\n      .createParam(PARAM_REPORT_DATA)\n      .setRequired(true)\n      .setDescription(\"Report file. Format is not an API, it changes among SonarQube versions.\");\n  }","id":27899,"modified_method":"@Override\n  public void define(WebService.NewController controller) {\n    WebService.NewAction action = controller.createAction(ACTION)\n      .setDescription(\"Submit an analysis report to the queue. Report is integrated asynchronously.\")\n      .setPost(true)\n      .setInternal(true)\n      .setHandler(this);\n\n    action\n      .createParam(PARAM_PROJECT_KEY)\n      .setRequired(true)\n      .setDescription(\"Project key\")\n      .setExampleValue(\"org.codehaus.sonar:sonar\");\n\n    action\n      .createParam(PARAM_PROJECT_NAME)\n      .setRequired(true)\n      .setDescription(\"Project name\")\n      .setExampleValue(\"SonarQube\");\n\n    action\n      .createParam(PARAM_REPORT_DATA)\n      .setRequired(true)\n      .setDescription(\"Report file. Format is not an API, it changes among SonarQube versions.\");\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void define_metadata() {\n    WebService.Context context = new WebService.Context();\n    WebService.NewController controller = context.createController(\"api/computation\");\n    sut.define(controller);\n    controller.done();\n\n    WebService.Action action = context.controller(\"api/computation\").action(\"submit_report\");\n    assertThat(action).isNotNull();\n    assertThat(action.params()).hasSize(2);\n  }","id":27900,"modified_method":"@Test\n  public void define_metadata() {\n    WebService.Context context = new WebService.Context();\n    WebService.NewController controller = context.createController(\"api/computation\");\n    sut.define(controller);\n    controller.done();\n\n    WebService.Action action = context.controller(\"api/computation\").action(\"submit_report\");\n    assertThat(action).isNotNull();\n    assertThat(action.params()).hasSize(3);\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void add_element_to_queue_and_launch_analysis_task() throws Exception {\n    userSessionRule.setGlobalPermissions(GlobalPermissions.SCAN_EXECUTION);\n    AnalysisReportDto dto = mock(AnalysisReportDto.class);\n    when(dto.getId()).thenReturn(42L);\n    when(queue.add(any(String.class), any(InputStream.class))).thenReturn(new ReportQueue.Item(dto, null));\n\n    WsTester.TestRequest request = wsTester\n      .newPostRequest(ComputationWs.ENDPOINT, \"submit_report\")\n      .setParam(SubmitReportAction.PARAM_PROJECT_KEY, \"P1\")\n      .setParam(SubmitReportAction.PARAM_REPORT_DATA, null);\n    WsTester.Result response = request.execute();\n\n    verify(queue).add(eq(\"P1\"), any(InputStream.class));\n    verify(workerLauncher).startAnalysisTaskNow();\n    assertThat(response.outputAsString()).isEqualTo(\"{\\\"key\\\":\\\"42\\\"}\");\n  }","id":27901,"modified_method":"@Test\n  public void add_element_to_queue_and_launch_analysis_task() throws Exception {\n    userSessionRule.setGlobalPermissions(GlobalPermissions.SCAN_EXECUTION);\n    AnalysisReportDto dto = mock(AnalysisReportDto.class);\n    when(dto.getId()).thenReturn(42L);\n    when(queue.add(any(String.class), any(String.class), any(InputStream.class))).thenReturn(new ReportQueue.Item(dto, null));\n\n    WsTester.TestRequest request = wsTester\n      .newPostRequest(ComputationWs.ENDPOINT, \"submit_report\")\n      .setParam(SubmitReportAction.PARAM_PROJECT_KEY, \"P1\")\n      .setParam(SubmitReportAction.PARAM_PROJECT_NAME, \"Project 1\")\n      .setParam(SubmitReportAction.PARAM_REPORT_DATA, null);\n    WsTester.Result response = request.execute();\n\n    verify(queue).add(eq(\"P1\"), eq(\"Project 1\"), any(InputStream.class));\n    verify(workerLauncher).startAnalysisTaskNow();\n    assertThat(response.outputAsString()).isEqualTo(\"{\\\"key\\\":\\\"42\\\"}\");\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test(expected = ForbiddenException.class)\n  public void requires_scan_permission() throws Exception {\n    userSessionRule.setGlobalPermissions(GlobalPermissions.DASHBOARD_SHARING);\n\n    WsTester.TestRequest request = wsTester\n      .newPostRequest(ComputationWs.ENDPOINT, \"submit_report\")\n      .setParam(SubmitReportAction.PARAM_PROJECT_KEY, \"P1\")\n      .setParam(SubmitReportAction.PARAM_REPORT_DATA, null);\n    request.execute();\n\n  }","id":27902,"modified_method":"@Test(expected = ForbiddenException.class)\n  public void requires_scan_permission() throws Exception {\n    userSessionRule.setGlobalPermissions(GlobalPermissions.DASHBOARD_SHARING);\n\n    WsTester.TestRequest request = wsTester\n      .newPostRequest(ComputationWs.ENDPOINT, \"submit_report\")\n      .setParam(SubmitReportAction.PARAM_PROJECT_KEY, \"P1\")\n      .setParam(SubmitReportAction.PARAM_PROJECT_NAME, \"Project 1\")\n      .setParam(SubmitReportAction.PARAM_REPORT_DATA, null);\n    request.execute();\n\n  }","commit_id":"0a4d5f75f078abd6c6d8d4a58d0b4efc8c5cd512","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void insert_multiple_reports() {\n    AnalysisReportDto report = new AnalysisReportDto()\n      .setProjectKey(DEFAULT_PROJECT_KEY)\n      .setData(\"data-project\")\n      .setStatus(PENDING);\n    report.setCreatedAt(DateUtils.parseDate(\"2014-09-24\"))\n      .setUpdatedAt(DateUtils.parseDate(\"2014-09-25\"));\n\n    dao.insert(session, report);\n    dao.insert(session, report);\n    session.commit();\n\n    db.assertDbUnit(getClass(), \"insert-result.xml\", \"analysis_reports\");\n  }","id":27903,"modified_method":"@Test\n  public void insert_multiple_reports() {\n    AnalysisReportDto report = new AnalysisReportDto()\n      .setProjectKey(DEFAULT_PROJECT_KEY)\n      .setProjectName(DEFAULT_PROJECT_NAME)\n      .setData(\"data-project\")\n      .setStatus(PENDING);\n    report.setCreatedAt(DateUtils.parseDate(\"2014-09-24\"))\n      .setUpdatedAt(DateUtils.parseDate(\"2014-09-25\"));\n\n    dao.insert(session, report);\n    dao.insert(session, report);\n    session.commit();\n\n    db.assertDbUnit(getClass(), \"insert-result.xml\", \"analysis_reports\");\n  }","commit_id":"b2b9654330f54c8951df4e0a5b670659c2a1b5fb","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * @return a booked analysis report if one is available, null otherwise\n   */\n  @CheckForNull\n  public synchronized AnalysisReportDto bookNextAvailable() {\n    DbSession session = dbClient.openSession(false);\n    try {\n      AnalysisReportDto nextAvailableReport = dao.getNextAvailableReport(session);\n      if (nextAvailableReport == null) {\n        return null;\n      }\n\n      AnalysisReportDto report = dao.tryToBookReportAnalysis(session, nextAvailableReport);\n      session.commit();\n\n      return report;\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":27904,"modified_method":"/**\n   * @return a booked analysis report if one is available, null otherwise\n   */\n  @CheckForNull\n  public synchronized AnalysisReportDto bookNextAvailable() {\n    DbSession session = dbClient.openSession(false);\n    try {\n      AnalysisReportDto nextAvailableReport = dao.getNextAvailableReport(session);\n      if (nextAvailableReport == null) {\n        return null;\n      }\n\n      AnalysisReportDto report = dao.bookAnalysisReport(session, nextAvailableReport);\n      session.commit();\n\n      return report;\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"b2b9654330f54c8951df4e0a5b670659c2a1b5fb","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private AnalysisReportDto newPendingAnalysisReport(String projectKey) {\n    return new AnalysisReportDto()\n      .setProjectKey(projectKey)\n      .setStatus(PENDING);\n  }","id":27905,"modified_method":"private AnalysisReportDto newPendingAnalysisReport(String projectKey) {\n    return new AnalysisReportDto()\n      .setProjectKey(projectKey)\n      .setProjectName(projectKey)\n      .setStatus(PENDING);\n  }","commit_id":"b2b9654330f54c8951df4e0a5b670659c2a1b5fb","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public ComputationService(DbClient dbClient, IndexClient index, InternalPermissionService permissionService) {\n    this.dbClient = dbClient;\n    this.dao = this.dbClient.analysisReportDao();\n    this.index = index;\n    this.permissionService = permissionService;\n  }","id":27906,"modified_method":"public ComputationService(DbClient dbClient, IndexClient index, InternalPermissionService permissionService) {\n    this.dbClient = dbClient;\n    this.index = index;\n    this.permissionService = permissionService;\n  }","commit_id":"b2b9654330f54c8951df4e0a5b670659c2a1b5fb","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test(expected = SQLException.class)\n  public void exceptions_thrown_are_transmitted() {\n\n  }","id":27907,"modified_method":"@Test(expected = IllegalStateException.class)\n  public void exceptions_thrown_are_transmitted() {\n    sut.analyzeReport(new AnalysisReportDto());\n  }","commit_id":"b2b9654330f54c8951df4e0a5b670659c2a1b5fb","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void add_issues_in_index() {\n    ComponentDto project = insertPermissionsForProject(DEFAULT_PROJECT_KEY);\n\n    db.issueAuthorizationDao().synchronizeAfter(session, new Date(0));\n\n    ComponentDto file = ComponentTesting.newFileDto(project);\n    db.componentDao().insert(session, file);\n    db.snapshotDao().insert(session, SnapshotTesting.createForComponent(file, project));\n\n    RuleDto rule = RuleTesting.newXooX1();\n    tester.get(RuleDao.class).insert(session, rule);\n\n    IssueDto issue = IssueTesting.newDto(rule, file, project);\n    db.issueDao().insert(session, issue);\n\n    session.commit();\n\n    clearIssueIndexToSimulateBatchInsertWithoutIndexing();\n\n    queue.add(DEFAULT_PROJECT_KEY);\n    List<AnalysisReportDto> reports = queue.findByProjectKey(DEFAULT_PROJECT_KEY);\n\n    sut.analyzeReport(reports.get(0));\n\n    // Check that the issue has well be indexed in E/S\n    assertThat(tester.get(IssueIndex.class).getNullableByKey(issue.getKey())).isNotNull();\n  }","id":27908,"modified_method":"@Test\n  public void add_issues_in_index() {\n    ComponentDto project = insertPermissionsForProject(DEFAULT_PROJECT_KEY);\n\n    db.issueAuthorizationDao().synchronizeAfter(session, new Date(0));\n\n    ComponentDto file = ComponentTesting.newFileDto(project);\n    db.componentDao().insert(session, file);\n    db.snapshotDao().insert(session, SnapshotTesting.createForComponent(file, project));\n\n    RuleDto rule = RuleTesting.newXooX1();\n    tester.get(RuleDao.class).insert(session, rule);\n\n    IssueDto issue = IssueTesting.newDto(rule, file, project);\n    db.issueDao().insert(session, issue);\n\n    session.commit();\n\n    clearIssueIndexToSimulateBatchInsertWithoutIndexing();\n\n    queue.add(DEFAULT_PROJECT_KEY);\n    AnalysisReportDto report = queue.bookNextAvailable();\n\n    sut.analyzeReport(report);\n\n    // Check that the issue has well be indexed in E/S\n    assertThat(tester.get(IssueIndex.class).getNullableByKey(issue.getKey())).isNotNull();\n  }","commit_id":"b2b9654330f54c8951df4e0a5b670659c2a1b5fb","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void handle(Request request, Response response) throws Exception {\n    String projectKey = request.mandatoryParam(PARAM_PROJECT);\n\n    queue.add(projectKey);\n\n    // TODO remove synchronization as soon as it won't break ITs !\n    (new AnalysisReportTask(queue, computationService)).run();\n\n    analysisTaskLauncher.startAnalysisTaskNow();\n  }","id":27909,"modified_method":"@Override\n  public void handle(Request request, Response response) throws Exception {\n    String projectKey = request.mandatoryParam(PARAM_PROJECT_KEY);\n\n    analysisReportQueue.add(projectKey);\n\n    // TODO remove synchronization as soon as it won't break ITs !\n    (new AnalysisReportTask(analysisReportQueue, computationService)).run();\n\n    analysisTaskLauncher.startAnalysisTaskNow();\n  }","commit_id":"b2b9654330f54c8951df4e0a5b670659c2a1b5fb","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"void define(WebService.NewController controller) {\n    WebService.NewAction action = controller.createAction(UPLOAD_REPORT_ACTION)\n      .setDescription(\"Update analysis report\")\n      .setSince(\"5.0\")\n      .setPost(true)\n      .setInternal(true)\n      .setHandler(this);\n\n    action\n      .createParam(PARAM_PROJECT)\n      .setRequired(true)\n      .setDescription(\"Project key\")\n      .setExampleValue(\"org.codehaus.sonar:sonar\");\n  }","id":27910,"modified_method":"void define(WebService.NewController controller) {\n    WebService.NewAction action = controller.createAction(UPLOAD_REPORT_ACTION)\n      .setDescription(\"Update analysis report\")\n      .setSince(\"5.0\")\n      .setPost(true)\n      .setInternal(true)\n      .setHandler(this);\n\n    action\n      .createParam(PARAM_PROJECT_KEY)\n      .setRequired(true)\n      .setDescription(\"Project key\")\n      .setExampleValue(\"org.codehaus.sonar:sonar\");\n  }","commit_id":"b2b9654330f54c8951df4e0a5b670659c2a1b5fb","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public UploadReportAction(AnalysisReportQueue queue, ComputationService computationService, AnalysisReportTaskLauncher analysisTaskLauncher) {\n    this.queue = queue;\n    this.computationService = computationService;\n    this.analysisTaskLauncher = analysisTaskLauncher;\n  }","id":27911,"modified_method":"public UploadReportAction(AnalysisReportQueue analysisReportQueue, ComputationService computationService, AnalysisReportTaskLauncher analysisTaskLauncher) {\n    this.analysisReportQueue = analysisReportQueue;\n    this.computationService = computationService;\n    this.analysisTaskLauncher = analysisTaskLauncher;\n  }","commit_id":"b2b9654330f54c8951df4e0a5b670659c2a1b5fb","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public AppendableBasedTraceRegion(@Nullable AbstractTraceRegion parent, TreeAppendable delegate, int offset, int lineNumber) {\n\t\tsuper(parent);\n\t\tthis.offset = offset;\n\t\tthis.lineNumber = lineNumber;\n\t\tif (parent == null) {\n\t\t\tthis.locations = Lists.newArrayList(delegate.getLocationData());\n\t\t} else {\n\t\t\tURI parentPath = parent.getAssociatedPath();\n\t\t\tif (parentPath == null) {\n\t\t\t\tthis.locations = Lists.newArrayList(delegate.getLocationData());\n\t\t\t} else {\n\t\t\t\tboolean matches = true;\n\t\t\t\tfor(ILocationData locationData: delegate.getLocationData()) {\n\t\t\t\t\tif (!parentPath.equals(locationData.getLocation())) {\n\t\t\t\t\t\tmatches = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (matches) {\n\t\t\t\t\tthis.locations = Lists.newArrayList();\n\t\t\t\t\tfor(ILocationData locationData: delegate.getLocationData()) {\n\t\t\t\t\t\tthis.locations.add(new LocationData(locationData.getOffset(), locationData.getLength(), locationData.getLineNumber(), locationData.getEndLineNumber(), null, null));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.locations = Lists.newArrayList(delegate.getLocationData());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint length = 0;\n\t\tint line = lineNumber;\n\t\tfor (Object child : delegate.getChildren()) {\n\t\t\tif (child instanceof String) {\n\t\t\t\tString s = (String) child;\n\t\t\t\tlength += s.length();\n\t\t\t\tline += Strings.countLineBreaks(s);\n\t\t\t} else {\n\t\t\t\tTreeAppendable castedChild = (TreeAppendable) child;\n\t\t\t\tif (hasVisibleChildren(castedChild)) {\n\t\t\t\t\tAppendableBasedTraceRegion childRegion = new AppendableBasedTraceRegion(\n\t\t\t\t\t\t\tthis, castedChild, offset + length, line);\n\t\t\t\t\tlength += childRegion.getMyLength();\n\t\t\t\t\tline = childRegion.getMyEndLineNumber();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.length = length;\n\t\tthis.endLineNumber = line;\n\t}","id":27912,"modified_method":"public AppendableBasedTraceRegion(@Nullable AbstractTraceRegion parent, TreeAppendable delegate, int offset, int lineNumber) {\n\t\tsuper(parent);\n\t\tthis.offset = offset;\n\t\tthis.lineNumber = lineNumber;\n\t\tboolean useLocationsFromDelegate = true;\n\t\tif (parent != null) {\n\t\t\tURI parentPath = parent.getAssociatedPath();\n\t\t\tif (parentPath != null) {\n\t\t\t\tboolean matches = true;\n\t\t\t\tfor(ILocationData locationData: delegate.getLocationData()) {\n\t\t\t\t\tif (!parentPath.equals(locationData.getLocation())) {\n\t\t\t\t\t\tmatches = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tuseLocationsFromDelegate = !matches;\n\t\t\t}\n\t\t}\n\t\tif (useLocationsFromDelegate) {\n\t\t\tthis.locations = Lists.newArrayList(delegate.getLocationData());\n\t\t} else {\n\t\t\tthis.locations = Lists.newArrayList();\n\t\t\tfor(ILocationData locationData: delegate.getLocationData()) {\n\t\t\t\tthis.locations.add(new LocationData(locationData.getOffset(), locationData.getLength(), locationData.getLineNumber(), locationData.getEndLineNumber(), null, null));\n\t\t\t}\n\t\t}\n\t\tint length = 0;\n\t\tint line = lineNumber;\n\t\tfor (Object child : delegate.getChildren()) {\n\t\t\tif (child instanceof String) {\n\t\t\t\tString s = (String) child;\n\t\t\t\tlength += s.length();\n\t\t\t\tline += Strings.countLineBreaks(s);\n\t\t\t} else {\n\t\t\t\tTreeAppendable castedChild = (TreeAppendable) child;\n\t\t\t\tif (hasVisibleChildren(castedChild)) {\n\t\t\t\t\tAppendableBasedTraceRegion childRegion = new AppendableBasedTraceRegion(\n\t\t\t\t\t\t\tthis, castedChild, offset + length, line);\n\t\t\t\t\tlength += childRegion.getMyLength();\n\t\t\t\t\tline = childRegion.getMyEndLineNumber();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.length = length;\n\t\tthis.endLineNumber = line;\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"protected ITextRegion createRegion(final List<INode> nodes) {\n\t\t// if we've got more than one ID elements, we want to select them all\n\t\tITextRegion result = ITextRegion.EMPTY_REGION;\n\t\tfor (INode node : nodes) {\n\t\t\tif (!isHidden(node)) {\n\t\t\t\tint length = node.getLength();\n\t\t\t\tif (length != 0)\n\t\t\t\t\tresult = result.merge(new TextRegionWithLineInformation(node.getOffset(), length, node.getStartLine(), node.getEndLine()));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","id":27913,"modified_method":"protected ITextRegion createRegion(final List<INode> nodes) {\n\t\t// if we've got more than one ID elements, we want to select them all\n\t\tITextRegion result = ITextRegion.EMPTY_REGION;\n\t\tfor (INode node : nodes) {\n\t\t\tif (!isHidden(node)) {\n\t\t\t\tint length = node.getLength();\n\t\t\t\tif (length != 0)\n\t\t\t\t\tresult = result.merge(new TextRegionWithLineInformation(node.getOffset(), length, node.getStartLine() - 1, node.getEndLine() - 1));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testBug353969_04() throws Exception {\n\t\tBus b = (Bus) model.getComponents().get(1);\n\t\tEList<Mode> modes = b.getMode();\n\t\tassertEquals(2, modes.size());\n\t\tMode mb2 = modes.get(1);\n\t\tITextRegion mb2FullRegion = locationInFileProvider.getFullTextRegion(mb2);\n\t\tassertEquals(modelAsString.indexOf(\"mode mb2;\"), mb2FullRegion.getOffset());\n\t\tassertEquals(\"mode mb2;\".length(), mb2FullRegion.getLength());\n\t\tITextRegion mb2SignificantRegion = locationInFileProvider.getSignificantTextRegion(mb2);\n\t\tassertEquals(modelAsString.indexOf(\"mb2;\"), mb2SignificantRegion.getOffset());\n\t\tassertEquals(\"mb2\".length(), mb2SignificantRegion.getLength());\n\t}","id":27914,"modified_method":"@Test public void testBug353969_04() throws Exception {\n\t\tBus b = (Bus) model.getComponents().get(1);\n\t\tEList<Mode> modes = b.getMode();\n\t\tassertEquals(2, modes.size());\n\t\tMode mb2 = modes.get(1);\n\t\tITextRegionWithLineInformation mb2FullRegion = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(mb2);\n\t\tassertEquals(modelAsString.indexOf(\"mode mb2;\"), mb2FullRegion.getOffset());\n\t\tassertEquals(\"mode mb2;\".length(), mb2FullRegion.getLength());\n\t\tassertEquals(9, mb2FullRegion.getLineNumber());\n\t\tassertEquals(9, mb2FullRegion.getEndLineNumber());\n\t\tITextRegionWithLineInformation mb2SignificantRegion = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(mb2);\n\t\tassertEquals(modelAsString.indexOf(\"mb2;\"), mb2SignificantRegion.getOffset());\n\t\tassertEquals(\"mb2\".length(), mb2SignificantRegion.getLength());\n\t\tassertEquals(9, mb2SignificantRegion.getLineNumber());\n\t\tassertEquals(9, mb2SignificantRegion.getEndLineNumber());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testCrossRefFullLocation() throws Exception {\n\t\t\tassertEquals(2, elements.size());\n\t\tint indexOfFirstY = modelAsString.indexOf(\"y\");\n\t\tint indexOfSecondY = modelAsString.indexOf(\"y\", indexOfFirstY + 1);\n\t\tITextRegion location = locationInFileProvider.getFullTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__SINGLEREF, 0);\n\t\tassertEquals(indexOfFirstY, location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\t// single feature index out of bounds -> ignore index \n\t\tlocation = locationInFileProvider.getFullTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__SINGLEREF, 1);\n\t\tassertEquals(indexOfFirstY, location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tlocation = locationInFileProvider.getFullTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__MULTIREFS, 0);\n\t\tassertEquals(indexOfSecondY, location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\t// multi feature index out of bounds -> return owner's full region \n\t\tlocation = locationInFileProvider.getFullTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__MULTIREFS, 1);\n\t\tassertEquals(0, location.getOffset());\n\t\tassertEquals(modelAsString.indexOf(\" element y\"), location.getLength());\n\t}","id":27915,"modified_method":"@Test public void testCrossRefFullLocation() throws Exception {\n\t\t\tassertEquals(2, elements.size());\n\t\tint indexOfFirstY = modelAsString.indexOf(\"y\");\n\t\tint indexOfSecondY = modelAsString.indexOf(\"y\", indexOfFirstY + 1);\n\t\tITextRegionWithLineInformation location = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__SINGLEREF, 0);\n\t\tassertEquals(indexOfFirstY, location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\t// single feature index out of bounds -> ignore index \n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__SINGLEREF, 1);\n\t\tassertEquals(indexOfFirstY, location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__MULTIREFS, 0);\n\t\tassertEquals(indexOfSecondY, location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\t// multi feature index out of bounds -> return owner's full region \n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__MULTIREFS, 1);\n\t\tassertEquals(0, location.getOffset());\n\t\tassertEquals(modelAsString.indexOf(\" element y\"), location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testAttributeSignificantLocation() {\n\t\tassertEquals(2, elements.size());\n\t\tITextRegion location = locationInFileProvider.getSignificantTextRegion(elements.get(0), LocationprovidertestPackage.Literals.ELEMENT__NAME, 0);\n\t\tassertEquals(modelAsString.indexOf(\"x\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\t// index out of bounds -> return owner's significant region \n\t\tlocation = locationInFileProvider.getSignificantTextRegion(elements.get(1), LocationprovidertestPackage.Literals.ELEMENT__NAME, 1);\n\t\tassertEquals(modelAsString.lastIndexOf(\"y\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\t\t\n\t}","id":27916,"modified_method":"@Test public void testAttributeSignificantLocation() {\n\t\tassertEquals(2, elements.size());\n\t\tITextRegionWithLineInformation location = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(elements.get(0), LocationprovidertestPackage.Literals.ELEMENT__NAME, 0);\n\t\tassertEquals(modelAsString.indexOf(\"x\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\t// index out of bounds -> return owner's significant region \n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(elements.get(1), LocationprovidertestPackage.Literals.ELEMENT__NAME, 1);\n\t\tassertEquals(modelAsString.lastIndexOf(\"y\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testAttributeFullLocation() {\n\t\tassertEquals(2, elements.size());\n\t\tITextRegion location = locationInFileProvider.getFullTextRegion(elements.get(0), LocationprovidertestPackage.Literals.ELEMENT__NAME, 0);\n\t\tassertEquals(modelAsString.indexOf(\"x\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\t// single feature index out of bounds -> ignore index \n\t\tlocation = locationInFileProvider.getFullTextRegion(elements.get(1), LocationprovidertestPackage.Literals.ELEMENT__NAME, 1);\n\t\tassertEquals(modelAsString.lastIndexOf(\"y\"), location.getOffset());\n\t\tassertEquals(\"y\".length(), location.getLength());\t\t\n\t}","id":27917,"modified_method":"@Test public void testAttributeFullLocation() {\n\t\tassertEquals(2, elements.size());\n\t\tITextRegionWithLineInformation location = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(elements.get(0), LocationprovidertestPackage.Literals.ELEMENT__NAME, 0);\n\t\tassertEquals(modelAsString.indexOf(\"x\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\t// single feature index out of bounds -> ignore index \n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(elements.get(1), LocationprovidertestPackage.Literals.ELEMENT__NAME, 1);\n\t\tassertEquals(modelAsString.lastIndexOf(\"y\"), location.getOffset());\n\t\tassertEquals(\"y\".length(), location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testEObjectFullLocation() throws Exception {\n\t\tassertEquals(2, elements.size());\n\t\tITextRegion location = locationInFileProvider.getFullTextRegion(elements.get(0));\n\t\tassertEquals(modelAsString.indexOf(\"element x\"), location.getOffset());\n\t\tassertEquals(modelAsString.indexOf(\" element y\"), location.getLength());\n\t\tlocation = locationInFileProvider.getFullTextRegion(elements.get(1));\n\t\tassertEquals(modelAsString.indexOf(\"element y\"), location.getOffset());\n\t\tassertEquals(\"element y\".length(), location.getLength());\n\t}","id":27918,"modified_method":"@Test public void testEObjectFullLocation() throws Exception {\n\t\tassertEquals(2, elements.size());\n\t\tITextRegionWithLineInformation location = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(elements.get(0));\n\t\tassertEquals(modelAsString.indexOf(\"element x\"), location.getOffset());\n\t\tassertEquals(modelAsString.indexOf(\" element y\"), location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(elements.get(1));\n\t\tassertEquals(modelAsString.indexOf(\"element y\"), location.getOffset());\n\t\tassertEquals(\"element y\".length(), location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testContainmentRefSignificantLocation() throws Exception {\n\t\tassertEquals(2, elements.size());\n\t\tITextRegion location = locationInFileProvider.getSignificantTextRegion(model, LocationprovidertestPackage.Literals.MODEL__ELEMENTS, 0);\n\t\tassertEquals(modelAsString.indexOf(\"x\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tlocation = locationInFileProvider.getSignificantTextRegion(model, LocationprovidertestPackage.Literals.MODEL__ELEMENTS, 1);\n\t\tassertEquals(modelAsString.lastIndexOf(\"y\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\t\t\n\t\t// multi feature index out of bounds -> return owner's significant region \n\t\tlocation = locationInFileProvider.getFullTextRegion(model, LocationprovidertestPackage.Literals.MODEL__ELEMENTS, 2);\n\t\tassertEquals(0, location.getOffset());\n\t\tassertEquals(modelAsString.length(), location.getLength());\t\t\n\t}","id":27919,"modified_method":"@Test public void testContainmentRefSignificantLocation() throws Exception {\n\t\tassertEquals(2, elements.size());\n\t\tITextRegionWithLineInformation location = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(model, LocationprovidertestPackage.Literals.MODEL__ELEMENTS, 0);\n\t\tassertEquals(modelAsString.indexOf(\"x\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(model, LocationprovidertestPackage.Literals.MODEL__ELEMENTS, 1);\n\t\tassertEquals(modelAsString.lastIndexOf(\"y\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\t// multi feature index out of bounds -> return owner's significant region \n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(model, LocationprovidertestPackage.Literals.MODEL__ELEMENTS, 2);\n\t\tassertEquals(0, location.getOffset());\n\t\tassertEquals(modelAsString.length(), location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(10, location.getEndLineNumber());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testEObjectSignificantLocation() throws Exception {\n\t\tassertEquals(2, elements.size());\n\t\tITextRegion location = locationInFileProvider.getSignificantTextRegion(elements.get(0));\n\t\tassertEquals(modelAsString.indexOf(\"x\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tlocation = locationInFileProvider.getSignificantTextRegion(elements.get(1));\n\t\tassertEquals(modelAsString.lastIndexOf(\"y\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t}","id":27920,"modified_method":"@Test public void testEObjectSignificantLocation() throws Exception {\n\t\tassertEquals(2, elements.size());\n\t\tITextRegionWithLineInformation location = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(elements.get(0));\n\t\tassertEquals(modelAsString.indexOf(\"x\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(elements.get(1));\n\t\tassertEquals(modelAsString.lastIndexOf(\"y\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testBug353969_02() throws Exception {\n\t\tProcessor p = (Processor) model.getComponents().get(0);\n\t\tEList<Mode> modes = p.getMode();\n\t\tassertEquals(2, modes.size());\n\t\tMode m2 = modes.get(1);\n\t\tITextRegion m2FullRegion = locationInFileProvider.getFullTextRegion(m2);\n\t\tassertEquals(modelAsString.indexOf(\"mode m2;\"), m2FullRegion.getOffset());\n\t\tassertEquals(\"mode m2;\".length(), m2FullRegion.getLength());\n\t\tITextRegion m2SignificantRegion = locationInFileProvider.getSignificantTextRegion(m2);\n\t\tassertEquals(modelAsString.indexOf(\"m2;\"), m2SignificantRegion.getOffset());\n\t\tassertEquals(\"m2\".length(), m2SignificantRegion.getLength());\n\t}","id":27921,"modified_method":"@Test public void testBug353969_02() throws Exception {\n\t\tProcessor p = (Processor) model.getComponents().get(0);\n\t\tEList<Mode> modes = p.getMode();\n\t\tassertEquals(2, modes.size());\n\t\tMode m2 = modes.get(1);\n\t\tITextRegionWithLineInformation m2FullRegion = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(m2);\n\t\tassertEquals(modelAsString.indexOf(\"mode m2;\"), m2FullRegion.getOffset());\n\t\tassertEquals(\"mode m2;\".length(), m2FullRegion.getLength());\n\t\tassertEquals(4, m2FullRegion.getLineNumber());\n\t\tassertEquals(4, m2FullRegion.getEndLineNumber());\n\t\tITextRegionWithLineInformation m2SignificantRegion = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(m2);\n\t\tassertEquals(modelAsString.indexOf(\"m2;\"), m2SignificantRegion.getOffset());\n\t\tassertEquals(\"m2\".length(), m2SignificantRegion.getLength());\n\t\tassertEquals(4, m2SignificantRegion.getLineNumber());\n\t\tassertEquals(4, m2SignificantRegion.getEndLineNumber());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testCrossRefSignificantLocation() throws Exception {\n\t\t\tassertEquals(2, elements.size());\n\t\tint indexOfFirstY = modelAsString.indexOf(\"y\");\n\t\tint indexOfSecondY = modelAsString.indexOf(\"y\", indexOfFirstY + 1);\n\t\tITextRegion location = locationInFileProvider.getSignificantTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__SINGLEREF, 0);\n\t\tassertEquals(indexOfFirstY, location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\t// single feature index out of bounds -> ignore index \n\t\tlocation = locationInFileProvider.getSignificantTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__SINGLEREF, 1);\n\t\tassertEquals(indexOfFirstY, location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tlocation = locationInFileProvider.getSignificantTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__MULTIREFS, 0);\n\t\tassertEquals(indexOfSecondY, location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\t// multi feature index out of bounds -> return owner's significant region \n\t\tlocation = locationInFileProvider.getSignificantTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__MULTIREFS, 1);\n\t\tassertEquals(modelAsString.indexOf(\"x\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t}","id":27922,"modified_method":"@Test public void testCrossRefSignificantLocation() throws Exception {\n\t\t\tassertEquals(2, elements.size());\n\t\tint indexOfFirstY = modelAsString.indexOf(\"y\");\n\t\tint indexOfSecondY = modelAsString.indexOf(\"y\", indexOfFirstY + 1);\n\t\tITextRegionWithLineInformation location = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__SINGLEREF, 0);\n\t\tassertEquals(indexOfFirstY, location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\t\n\t\t// single feature index out of bounds -> ignore index \n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__SINGLEREF, 1);\n\t\tassertEquals(indexOfFirstY, location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__MULTIREFS, 0);\n\t\tassertEquals(indexOfSecondY, location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\t// multi feature index out of bounds -> return owner's significant region \n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(elements.get(0),\n\t\t\t\tLocationprovidertestPackage.Literals.ELEMENT__MULTIREFS, 1);\n\t\tassertEquals(modelAsString.indexOf(\"x\"), location.getOffset());\n\t\tassertEquals(1, location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testBug353969_01() throws Exception {\n\t\tProcessor p = (Processor) model.getComponents().get(0);\n\t\tEList<Mode> modes = p.getMode();\n\t\tassertEquals(2, modes.size());\n\t\tMode m1 = modes.get(0);\n\t\tITextRegion m1FullRegion = locationInFileProvider.getFullTextRegion(m1);\n\t\tassertEquals(modelAsString.indexOf(\"mode m1;\"), m1FullRegion.getOffset());\n\t\tassertEquals(\"mode m1;\".length(), m1FullRegion.getLength());\n\t\tITextRegion m1SignificantRegion = locationInFileProvider.getSignificantTextRegion(m1);\n\t\tassertEquals(modelAsString.indexOf(\"m1;\"), m1SignificantRegion.getOffset());\n\t\tassertEquals(\"m1\".length(), m1SignificantRegion.getLength());\n\t}","id":27923,"modified_method":"@Test public void testBug353969_01() throws Exception {\n\t\tProcessor p = (Processor) model.getComponents().get(0);\n\t\tEList<Mode> modes = p.getMode();\n\t\tassertEquals(2, modes.size());\n\t\tMode m1 = modes.get(0);\n\t\tITextRegionWithLineInformation m1FullRegion = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(m1);\n\t\tassertEquals(modelAsString.indexOf(\"mode m1;\"), m1FullRegion.getOffset());\n\t\tassertEquals(\"mode m1;\".length(), m1FullRegion.getLength());\n\t\tassertEquals(3, m1FullRegion.getLineNumber());\n\t\tassertEquals(3, m1FullRegion.getEndLineNumber());\n\t\tITextRegionWithLineInformation m1SignificantRegion = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(m1);\n\t\tassertEquals(modelAsString.indexOf(\"m1;\"), m1SignificantRegion.getOffset());\n\t\tassertEquals(\"m1\".length(), m1SignificantRegion.getLength());\n\t\tassertEquals(3, m1SignificantRegion.getLineNumber());\n\t\tassertEquals(3, m1SignificantRegion.getEndLineNumber());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testContainmentRefFullLocation() throws Exception {\n\t\tassertEquals(2, elements.size());\n\t\tITextRegion location = locationInFileProvider.getFullTextRegion(model, LocationprovidertestPackage.Literals.MODEL__ELEMENTS, 0);\n\t\tassertEquals(0, location.getOffset());\n\t\tassertEquals(modelAsString.indexOf(\" element y\"), location.getLength());\n\t\tlocation = locationInFileProvider.getFullTextRegion(model, LocationprovidertestPackage.Literals.MODEL__ELEMENTS, 1);\n\t\tassertEquals(modelAsString.lastIndexOf(\"element\"), location.getOffset());\n\t\tassertEquals(\"element y\".length(), location.getLength());\t\t\n\t\t// multi feature index out of bounds -> return owner's full region \n\t\tlocation = locationInFileProvider.getFullTextRegion(model, LocationprovidertestPackage.Literals.MODEL__ELEMENTS, 2);\n\t\tassertEquals(0, location.getOffset());\n\t\tassertEquals(modelAsString.length(), location.getLength());\t\t\n\t}","id":27924,"modified_method":"@Test public void testContainmentRefFullLocation() throws Exception {\n\t\tassertEquals(2, elements.size());\n\t\tITextRegionWithLineInformation location = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(model, LocationprovidertestPackage.Literals.MODEL__ELEMENTS, 0);\n\t\tassertEquals(0, location.getOffset());\n\t\tassertEquals(modelAsString.indexOf(\" element y\"), location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(model, LocationprovidertestPackage.Literals.MODEL__ELEMENTS, 1);\n\t\tassertEquals(modelAsString.lastIndexOf(\"element\"), location.getOffset());\n\t\tassertEquals(\"element y\".length(), location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(0, location.getEndLineNumber());\n\t\t// multi feature index out of bounds -> return owner's full region \n\t\tlocation = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(model, LocationprovidertestPackage.Literals.MODEL__ELEMENTS, 2);\n\t\tassertEquals(0, location.getOffset());\n\t\tassertEquals(modelAsString.length(), location.getLength());\n\t\tassertEquals(0, location.getLineNumber());\n\t\tassertEquals(10, location.getEndLineNumber());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testBug353969_03() throws Exception {\n\t\tBus b = (Bus) model.getComponents().get(1);\n\t\tEList<Mode> modes = b.getMode();\n\t\tassertEquals(2, modes.size());\n\t\tMode mb1 = modes.get(0);\n\t\tITextRegion mb1FullRegion = locationInFileProvider.getFullTextRegion(mb1);\n\t\tassertEquals(modelAsString.indexOf(\"mode mb1;\"), mb1FullRegion.getOffset());\n\t\tassertEquals(\"mode mb1;\".length(), mb1FullRegion.getLength());\n\t\tITextRegion mb1SignificantRegion = locationInFileProvider.getSignificantTextRegion(mb1);\n\t\tassertEquals(modelAsString.indexOf(\"mb1;\"), mb1SignificantRegion.getOffset());\n\t\tassertEquals(\"mb1\".length(), mb1SignificantRegion.getLength());\n\t}","id":27925,"modified_method":"@Test public void testBug353969_03() throws Exception {\n\t\tBus b = (Bus) model.getComponents().get(1);\n\t\tEList<Mode> modes = b.getMode();\n\t\tassertEquals(2, modes.size());\n\t\tMode mb1 = modes.get(0);\n\t\tITextRegionWithLineInformation mb1FullRegion = (ITextRegionWithLineInformation) locationInFileProvider.getFullTextRegion(mb1);\n\t\tassertEquals(modelAsString.indexOf(\"mode mb1;\"), mb1FullRegion.getOffset());\n\t\tassertEquals(\"mode mb1;\".length(), mb1FullRegion.getLength());\n\t\tassertEquals(8, mb1FullRegion.getLineNumber());\n\t\tassertEquals(8, mb1FullRegion.getEndLineNumber());\n\t\tITextRegionWithLineInformation mb1SignificantRegion = (ITextRegionWithLineInformation) locationInFileProvider.getSignificantTextRegion(mb1);\n\t\tassertEquals(modelAsString.indexOf(\"mb1;\"), mb1SignificantRegion.getOffset());\n\t\tassertEquals(\"mb1\".length(), mb1SignificantRegion.getLength());\n\t\tassertEquals(8, mb1SignificantRegion.getLineNumber());\n\t\tassertEquals(8, mb1SignificantRegion.getEndLineNumber());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testContainsByLocation() {\n\t\tITextRegion location = new TextRegion(3, 4);\n\t\tassertTrue(location.contains(new TextRegion(4,2)));\n\t\tassertTrue(location.contains(new TextRegion(4,3)));\n\t\tassertTrue(location.contains(new TextRegion(3,2)));\n\t\tassertTrue(location.contains(new TextRegion(3,0)));\n\t\tassertFalse(location.contains(new TextRegion(2,4)));\n\t\tassertFalse(location.contains(new TextRegion(1,1)));\n\t\tassertFalse(location.contains(new TextRegion(8,1)));\n\t}","id":27926,"modified_method":"@Test public void testContainsByLocation() {\n\t\tITextRegion location = newTextRegion(3, 4);\n\t\tassertTrue(location.contains(newTextRegion(4,2)));\n\t\tassertTrue(location.contains(newTextRegion(4,3)));\n\t\tassertTrue(location.contains(newTextRegion(3,2)));\n\t\tassertTrue(location.contains(newTextRegion(3,0)));\n\t\tassertFalse(location.contains(newTextRegion(2,4)));\n\t\tassertFalse(location.contains(newTextRegion(1,1)));\n\t\tassertFalse(location.contains(newTextRegion(8,1)));\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testContainsByOffset() {\n\t\tITextRegion location = new TextRegion(3, 4);\n\t\tassertTrue(location.contains(3));\n\t\tassertTrue(location.contains(6));\n\t\tassertFalse(location.contains(2));\n\t\tassertFalse(location.contains(7));\n\t}","id":27927,"modified_method":"@Test public void testContainsByOffset() {\n\t\tITextRegion location = newTextRegion(3, 4);\n\t\tassertTrue(location.contains(3));\n\t\tassertTrue(location.contains(6));\n\t\tassertFalse(location.contains(2));\n\t\tassertFalse(location.contains(7));\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testMerge() {\n\t\tITextRegion location = new TextRegion(2, 4);\n\t\tITextRegion merge = location.merge(ITextRegion.EMPTY_REGION);\n\t\tassertEquals(2, merge.getOffset());\n\t\tassertEquals(4, merge.getLength());\n\t\tmerge = ITextRegion.EMPTY_REGION.merge(location);\n\t\tassertEquals(2, merge.getOffset());\n\t\tassertEquals(4, merge.getLength());\n\t\tmerge = location.merge(new TextRegion(2, 4));\n\t\tassertEquals(2, merge.getOffset());\n\t\tassertEquals(4, merge.getLength());\n\t\tmerge = location.merge(new TextRegion(1, 2));\n\t\tassertEquals(1, merge.getOffset());\n\t\tassertEquals(5, merge.getLength());\n\t\tmerge = location.merge(new TextRegion(5, 2));\n\t\tassertEquals(2, merge.getOffset());\n\t\tassertEquals(5, merge.getLength());\n\t}","id":27928,"modified_method":"@Test public void testMergeNecessary() {\n\t\tITextRegion location = newTextRegion(2, 4);\n\t\tITextRegion merge = location.merge(newTextRegion(1, 2));\n\t\tassertEquals(1, merge.getOffset());\n\t\tassertEquals(5, merge.getLength());\n\t\tmerge = location.merge(newTextRegion(5, 2));\n\t\tassertEquals(2, merge.getOffset());\n\t\tassertEquals(5, merge.getLength());\n\t\tmerge = location.merge(newTextRegion(7, 2));\n\t\tassertEquals(2, merge.getOffset());\n\t\tassertEquals(7, merge.getLength());\n\t}","commit_id":"ced1ce969117b3614bc2a9f908281d331fa434d0","url":"https://github.com/eclipse/xtext"},{"original_method":"public ResponsePdu send(TestAgent agent) {\n        ResponsePdu resp = TestPdu.getResponse();\n\n        try {\n            // first do non repeaters\n            int nonRepeaters = Math.min(size(), getNonRepeaters());\n            for(int i = 0; i < nonRepeaters; i++) {\n                int errIndex = i+1;\n                TestVarBind varBind = (TestVarBind) getVarBindAt(i);\n                SnmpObjId lastOid = varBind.getObjId();\n                TestVarBind newVarBind = getResponseVarBind(agent, lastOid, errIndex);\n                resp.addVarBind(newVarBind);\n                \n                // make sure we haven't exceeded response size\n                validateResponseSize(resp, agent);\n            }\n            \n            // make a list to track the repititions\n            int repeaters = size() - nonRepeaters;\n            List repeaterList = new ArrayList(repeaters);\n            for(int i = nonRepeaters; i < size(); i++) {\n                repeaterList.add(getVarBindAt(i).getObjId());\n            }\n            \n            // now generate varbinds for the repeaters\n            for(int count = 0; count < getMaxRepititions(); count++) {\n                for(int i = 0; i < repeaterList.size(); i++) {\n                    int errIndex = nonRepeaters+i+1;\n                    SnmpObjId lastOid = (SnmpObjId)repeaterList.get(i);\n                    TestVarBind newVarBind = getResponseVarBind(agent, lastOid, errIndex);\n                    resp.addVarBind(newVarBind);\n                    repeaterList.set(i, newVarBind.getObjId());\n                    \n                    // make sure we haven't exceeded response size\n                    validateResponseSize(resp, agent);\n                }\n            }\n            return resp;\n        } catch (AgentIndexException e) {\n            // this happens for GenErr and NoSuchName errs\n            resp.setVarBinds(getVarBinds());\n            resp.setErrorStatus(e.getErrorStatus());\n            resp.setErrorIndex(e.getErrorIndex()); // errorIndex uses indices starting at 1\n            return resp;\n        } catch (AgentTooBigException e) {\n            // when we exceed response size we'll get here\n            return handleTooBig(agent, resp);\n        }\n    }","id":27929,"modified_method":"public ResponsePdu send(TestAgent agent) {\n        ResponsePdu resp = TestPdu.getResponse();\n\n        try {\n            // first do non repeaters\n            int nonRepeaters = Math.min(size(), getNonRepeaters());\n            for(int i = 0; i < nonRepeaters; i++) {\n                int errIndex = i+1;\n                TestVarBind varBind = (TestVarBind) getVarBindAt(i);\n                SnmpObjId lastOid = varBind.getObjId();\n                TestVarBind newVarBind = getResponseVarBind(agent, lastOid, errIndex);\n                resp.addVarBind(newVarBind);\n                \n                // make sure we haven't exceeded response size\n                validateResponseSize(resp, agent);\n            }\n            \n            // make a list to track the repititions\n            int repeaters = size() - nonRepeaters;\n            List<SnmpObjId> repeaterList = new ArrayList<SnmpObjId>(repeaters);\n            for(int i = nonRepeaters; i < size(); i++) {\n                repeaterList.add(getVarBindAt(i).getObjId());\n            }\n            \n            // now generate varbinds for the repeaters\n            for(int count = 0; count < getMaxRepititions(); count++) {\n                for(int i = 0; i < repeaterList.size(); i++) {\n                    int errIndex = nonRepeaters+i+1;\n                    SnmpObjId lastOid = (SnmpObjId)repeaterList.get(i);\n                    TestVarBind newVarBind = getResponseVarBind(agent, lastOid, errIndex);\n                    resp.addVarBind(newVarBind);\n                    repeaterList.set(i, newVarBind.getObjId());\n                    \n                    // make sure we haven't exceeded response size\n                    validateResponseSize(resp, agent);\n                }\n            }\n            return resp;\n        } catch (AgentIndexException e) {\n            // this happens for GenErr and NoSuchName errs\n            resp.setVarBinds(getVarBinds());\n            resp.setErrorStatus(e.getErrorStatus());\n            resp.setErrorIndex(e.getErrorIndex()); // errorIndex uses indices starting at 1\n            return resp;\n        } catch (AgentTooBigException e) {\n            // when we exceed response size we'll get here\n            return handleTooBig(agent, resp);\n        }\n    }","commit_id":"0780854d89173ec0921166891655b29e71194800","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void setAgentData(Properties mibData) {\n        m_agentData = new TreeMap();\n        for (Iterator it = mibData.entrySet().iterator(); it.hasNext();) {\n            Map.Entry entry = (Map.Entry) it.next();\n            SnmpObjId objId = SnmpObjId.get((String)entry.getKey());\n            \n            setAgentValue(objId, TestSnmpValue.parseMibValue((String)entry.getValue()));\n        }\n    }","id":27930,"modified_method":"public void setAgentData(Properties mibData) {\n        m_agentData = new TreeMap<SnmpObjId, Object>();\n        for (Entry<Object, Object> entry : mibData.entrySet()) {\n            SnmpObjId objId = SnmpObjId.get(entry.getKey().toString());\n            \n            setAgentValue(objId, TestSnmpValue.parseMibValue(entry.getValue().toString()));\n        }\n    }","commit_id":"0780854d89173ec0921166891655b29e71194800","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void generateException(SnmpObjId id) {\n        if (m_agentData.isEmpty())\n            throw new AgentNoSuchObjectException();\n        \n        SnmpObjId firstOid = (SnmpObjId)m_agentData.firstKey();\n        SnmpObjId lastOid = (SnmpObjId)m_agentData.lastKey();\n        if (id.compareTo(firstOid) < 0 || id.compareTo(lastOid) > 0)\n            throw new AgentNoSuchObjectException();\n        throw new AgentNoSuchInstanceException();\n    }","id":27931,"modified_method":"private void generateException(SnmpObjId id) {\n        if (m_agentData.isEmpty()) {\n            throw new AgentNoSuchObjectException();\n        }\n        \n        SnmpObjId firstOid = m_agentData.firstKey();\n        SnmpObjId lastOid = m_agentData.lastKey();\n        if (id.compareTo(firstOid) < 0 || id.compareTo(lastOid) > 0)\n            throw new AgentNoSuchObjectException();\n        throw new AgentNoSuchInstanceException();\n    }","commit_id":"0780854d89173ec0921166891655b29e71194800","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public SnmpObjId getFollowingObjId(SnmpObjId id) {\n        try {\n            SnmpObjId nextObjId = (SnmpObjId)m_agentData.tailMap(SnmpObjId.get(id, SnmpInstId.INST_ZERO)).firstKey();\n            Object value = m_agentData.get(nextObjId);\n            if (value instanceof Redirect) {\n                Redirect redirect = (Redirect) value;\n                return redirect.getTargetObjId();\n            }\n            return nextObjId;\n        } catch (NoSuchElementException e) {\n            throw new AgentEndOfMibException();   \n        }\n    }","id":27932,"modified_method":"public SnmpObjId getFollowingObjId(SnmpObjId id) {\n        try {\n            SnmpObjId nextObjId = m_agentData.tailMap(SnmpObjId.get(id, SnmpInstId.INST_ZERO)).firstKey();\n            Object value = m_agentData.get(nextObjId);\n            if (value instanceof Redirect) {\n                Redirect redirect = (Redirect) value;\n                return redirect.getTargetObjId();\n            }\n            return nextObjId;\n        } catch (NoSuchElementException e) {\n            throw new AgentEndOfMibException();   \n        }\n    }","commit_id":"0780854d89173ec0921166891655b29e71194800","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public TestVarBind getVarBindAt(int i) {\n        return (TestVarBind)get(i);\n    }","id":27933,"modified_method":"public TestVarBind getVarBindAt(int i) {\n        return get(i);\n    }","commit_id":"0780854d89173ec0921166891655b29e71194800","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String printSentMsgs() {\n        StringBuilder sb=new StringBuilder();\n        Long min_seqno, max_seqno;\n        synchronized(sent_msgs) {\n            min_seqno=!sent_msgs.isEmpty()? (Long)sent_msgs.firstKey() : new Long(0);\n            max_seqno=!sent_msgs.isEmpty()? (Long)sent_msgs.lastKey() : new Long(0);\n        }\n        sb.append('[').append(min_seqno).append(\" - \").append(max_seqno).append(\"] (\").append(sent_msgs.size()).append(\")\");\n        return sb.toString();\n    }","id":27934,"modified_method":"public String printSentMsgs() {\n        StringBuilder sb=new StringBuilder();\n        Long min_seqno, max_seqno;\n        synchronized(sent_msgs) {\n            min_seqno=!sent_msgs.isEmpty()? sent_msgs.firstKey() : new Long(0);\n            max_seqno=!sent_msgs.isEmpty()? sent_msgs.lastKey() : new Long(0);\n        }\n        sb.append('[').append(min_seqno).append(\" - \").append(max_seqno).append(\"] (\").append(sent_msgs.size()).append(\")\");\n        return sb.toString();\n    }","commit_id":"4a55a6debf1ea4e6d6c3bb3e992e26635f76016d","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Returns a message digest: for each member P the highest seqno received from P is added to the digest.\n     */\n    private Digest getDigest() {\n        Range range;\n\n        Map<Address,Digest.Entry> map=new HashMap(members.size());\n        for(Address sender: members) {\n            range=getLowestAndHighestSeqno(sender, false);  // get the highest received seqno\n            if(range == null) {\n                if(log.isErrorEnabled()) {\n                    log.error(\"range is null\");\n                }\n                continue;\n            }\n            map.put(sender, new Digest.Entry(range.low, range.high));\n        }\n        return new Digest(map);\n    }","id":27935,"modified_method":"/**\n     * Returns a message digest: for each member P the highest seqno received from P is added to the digest.\n     */\n    private Digest getDigest() {\n        Range range;\n\n        Map<Address,Digest.Entry> map=new HashMap<Address,Digest.Entry>(members.size());\n        for(Address sender: members) {\n            range=getLowestAndHighestSeqno(sender, false);  // get the highest received seqno\n            if(range == null) {\n                if(log.isErrorEnabled()) {\n                    log.error(\"range is null\");\n                }\n                continue;\n            }\n            map.put(sender, new Digest.Entry(range.low, range.high));\n        }\n        return new Digest(map);\n    }","commit_id":"4a55a6debf1ea4e6d6c3bb3e992e26635f76016d","url":"https://github.com/belaban/JGroups"},{"original_method":"public Vector providedUpServices() {\n        Vector retval=new Vector(5);\n        retval.addElement(new Integer(Event.GET_DIGEST));\n        retval.addElement(new Integer(Event.GET_DIGEST_STABLE));\n        retval.addElement(new Integer(Event.SET_DIGEST));\n        retval.addElement(new Integer(Event.MERGE_DIGEST));\n        return retval;\n    }","id":27936,"modified_method":"public Vector<Integer> providedUpServices() {\n        Vector<Integer> retval=new Vector<Integer>(5);\n        retval.addElement(new Integer(Event.GET_DIGEST));\n        retval.addElement(new Integer(Event.GET_DIGEST_STABLE));\n        retval.addElement(new Integer(Event.SET_DIGEST));\n        retval.addElement(new Integer(Event.MERGE_DIGEST));\n        return retval;\n    }","commit_id":"4a55a6debf1ea4e6d6c3bb3e992e26635f76016d","url":"https://github.com/belaban/JGroups"},{"original_method":"public Map dumpStats() {\n        Map retval=super.dumpStats();\n        if(retval == null)\n            retval=new HashMap();\n\n        retval.put(\"xmit_reqs_received\", new Long(xmit_reqs_received));\n        retval.put(\"xmit_reqs_sent\", new Long(xmit_reqs_sent));\n        retval.put(\"xmit_rsps_received\", new Long(xmit_rsps_received));\n        retval.put(\"xmit_rsps_sent\", new Long(xmit_rsps_sent));\n        retval.put(\"missing_msgs_received\", new Long(missing_msgs_received));\n        retval.put(\"sent_msgs\", printSentMsgs());\n\n        StringBuilder sb=new StringBuilder();\n        Address addr;\n        Object w;\n\n        for(Map.Entry<Address,NakReceiverWindow> entry: received_msgs.entrySet()) {\n            addr=entry.getKey();\n            w=entry.getValue();\n            sb.append(addr).append(\": \").append(w.toString()).append('\\n');\n        }\n\n        retval.put(\"received_msgs\", sb.toString());\n        return retval;        \n    }","id":27937,"modified_method":"public Map<String,Object> dumpStats() {\n        Map<String,Object> retval=super.dumpStats();\n        if(retval == null)\n            retval=new HashMap<String,Object>();\n\n        retval.put(\"xmit_reqs_received\", new Long(xmit_reqs_received));\n        retval.put(\"xmit_reqs_sent\", new Long(xmit_reqs_sent));\n        retval.put(\"xmit_rsps_received\", new Long(xmit_rsps_received));\n        retval.put(\"xmit_rsps_sent\", new Long(xmit_rsps_sent));\n        retval.put(\"missing_msgs_received\", new Long(missing_msgs_received));\n        retval.put(\"sent_msgs\", printSentMsgs());\n\n        StringBuilder sb=new StringBuilder();\n        Address addr;\n        Object w;\n\n        for(Map.Entry<Address,NakReceiverWindow> entry: received_msgs.entrySet()) {\n            addr=entry.getKey();\n            w=entry.getValue();\n            sb.append(addr).append(\": \").append(w.toString()).append('\\n');\n        }\n\n        retval.put(\"received_msgs\", sb.toString());\n        return retval;        \n    }","commit_id":"4a55a6debf1ea4e6d6c3bb3e992e26635f76016d","url":"https://github.com/belaban/JGroups"},{"original_method":"private static void updateStats(HashMap map, Address key, int req, int rsp, int missing) {\n        StatsEntry entry=(StatsEntry)map.get(key);\n        if(entry == null) {\n            entry=new StatsEntry();\n            map.put(key, entry);\n        }\n        entry.xmit_reqs+=req;\n        entry.xmit_rsps+=rsp;\n        entry.missing_msgs_rcvd+=missing;\n    }","id":27938,"modified_method":"private static void updateStats(HashMap<Address,StatsEntry> map, Address key, int req, int rsp, int missing) {\n        StatsEntry entry=map.get(key);\n        if(entry == null) {\n            entry=new StatsEntry();\n            map.put(key, entry);\n        }\n        entry.xmit_reqs+=req;\n        entry.xmit_rsps+=rsp;\n        entry.missing_msgs_rcvd+=missing;\n    }","commit_id":"4a55a6debf1ea4e6d6c3bb3e992e26635f76016d","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * <b>Callback<\/b>. Called by superclass when event may be handled.<p> <b>Do not use <code>down_prot.down()<\/code> in this\n     * method as the event is passed down by default by the superclass after this method returns !<\/b>\n     */\n    public Object down(Event evt) {\n        switch(evt.getType()) {\n\n            case Event.MSG:\n                Message msg=(Message)evt.getArg();\n                Address dest=msg.getDest();\n                if(dest != null && !dest.isMulticastAddress()) {\n                    break; // unicast address: not null and not mcast, pass down unchanged\n                }\n                send(evt, msg);\n                return null;    // don't pass down the stack\n\n            case Event.STABLE:  // generated by STABLE layer. Delete stable messages passed in arg\n                stable((Digest)evt.getArg());\n                return null;  // do not pass down further (Bela Aug 7 2001)\n\n            case Event.GET_DIGEST:\n                return getDigest();\n\n            case Event.GET_DIGEST_STABLE:\n                return getDigestHighestDeliveredMsgs();\n\n            case Event.SET_DIGEST:\n                setDigest((Digest)evt.getArg());\n                return null;\n\n            case Event.MERGE_DIGEST:\n                mergeDigest((Digest)evt.getArg());\n                return null;\n\n            case Event.CONFIG:\n                Object retval=down_prot.down(evt);\n                if(log.isDebugEnabled())\n                    log.debug(\"received CONFIG event: \" + evt.getArg());\n                handleConfigEvent((HashMap)evt.getArg());\n                return retval;\n\n            case Event.TMP_VIEW:\n                View tmp_view=(View)evt.getArg();\n                Vector mbrs=tmp_view.getMembers();\n                members.clear();\n                members.addAll(mbrs);\n                adjustReceivers(false);\n                break;\n\n            case Event.VIEW_CHANGE:\n                tmp_view=(View)evt.getArg();\n                mbrs=tmp_view.getMembers();\n                members.clear();\n                members.addAll(mbrs);\n                adjustReceivers(true);\n                is_server=true;  // check vids from now on\n\n                Set tmp=new LinkedHashSet(members);\n                tmp.add(null); // for null destination (= mcast)\n                sent.keySet().retainAll(tmp);\n                received.keySet().retainAll(tmp);\n                view=tmp_view;\n                break;\n\n            case Event.BECOME_SERVER:\n                is_server=true;\n                break;\n\n            case Event.DISCONNECT:\n                leaving=true;\n                reset();\n                break;\n\n            case Event.REBROADCAST:\n                rebroadcasting=true;\n                rebroadcast_digest=(Digest)evt.getArg();\n                try {\n                    rebroadcastMessages();\n                }\n                finally {\n                    rebroadcasting=false;\n                    rebroadcast_digest=null;\n                }\n                return null;\n        }\n\n        return down_prot.down(evt);\n    }","id":27939,"modified_method":"/**\n     * <b>Callback<\/b>. Called by superclass when event may be handled.<p> <b>Do not use <code>down_prot.down()<\/code> in this\n     * method as the event is passed down by default by the superclass after this method returns !<\/b>\n     */\n    public Object down(Event evt) {\n        switch(evt.getType()) {\n\n            case Event.MSG:\n                Message msg=(Message)evt.getArg();\n                Address dest=msg.getDest();\n                if(dest != null && !dest.isMulticastAddress()) {\n                    break; // unicast address: not null and not mcast, pass down unchanged\n                }\n                send(evt, msg);\n                return null;    // don't pass down the stack\n\n            case Event.STABLE:  // generated by STABLE layer. Delete stable messages passed in arg\n                stable((Digest)evt.getArg());\n                return null;  // do not pass down further (Bela Aug 7 2001)\n\n            case Event.GET_DIGEST:\n                return getDigest();\n\n            case Event.GET_DIGEST_STABLE:\n                return getDigestHighestDeliveredMsgs();\n\n            case Event.SET_DIGEST:\n                setDigest((Digest)evt.getArg());\n                return null;\n\n            case Event.MERGE_DIGEST:\n                mergeDigest((Digest)evt.getArg());\n                return null;\n\n            case Event.CONFIG:\n                Object retval=down_prot.down(evt);\n                if(log.isDebugEnabled())\n                    log.debug(\"received CONFIG event: \" + evt.getArg());\n                handleConfigEvent((HashMap)evt.getArg());\n                return retval;\n\n            case Event.TMP_VIEW:\n                View tmp_view=(View)evt.getArg();\n                Vector<Address> mbrs=tmp_view.getMembers();\n                members.clear();\n                members.addAll(mbrs);\n                adjustReceivers(false);\n                break;\n\n            case Event.VIEW_CHANGE:\n                tmp_view=(View)evt.getArg();\n                mbrs=tmp_view.getMembers();\n                members.clear();\n                members.addAll(mbrs);\n                adjustReceivers(true);\n                is_server=true;  // check vids from now on\n\n                Set<Address> tmp=new LinkedHashSet<Address>(members);\n                tmp.add(null); // for null destination (= mcast)\n                sent.keySet().retainAll(tmp);\n                received.keySet().retainAll(tmp);\n                view=tmp_view;\n                break;\n\n            case Event.BECOME_SERVER:\n                is_server=true;\n                break;\n\n            case Event.DISCONNECT:\n                leaving=true;\n                reset();\n                break;\n\n            case Event.REBROADCAST:\n                rebroadcasting=true;\n                rebroadcast_digest=(Digest)evt.getArg();\n                try {\n                    rebroadcastMessages();\n                }\n                finally {\n                    rebroadcasting=false;\n                    rebroadcast_digest=null;\n                }\n                return null;\n        }\n\n        return down_prot.down(evt);\n    }","commit_id":"4a55a6debf1ea4e6d6c3bb3e992e26635f76016d","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Returns a message digest: for each member P the highest seqno received from P <em>without a gap<\/em> is added to\n     * the digest. E.g. if the seqnos received from P are [+3 +4 +5 -6 +7 +8], then 5 will be returned. Also, the\n     * highest seqno <em>seen<\/em> is added. The max of all highest seqnos seen will be used (in STABLE) to determine\n     * whether the last seqno from a sender was received (see \"Last Message Dropped\" topic in DESIGN).\n     */\n    private Digest getDigestHighestDeliveredMsgs() {\n        Range range;\n        long high_seqno_seen;\n\n        Map<Address,Digest.Entry> map=new HashMap(members.size());\n        for(Address sender: members) {\n            range=getLowestAndHighestSeqno(sender, true);  // get the highest deliverable seqno\n            if(range == null) {\n                if(log.isErrorEnabled()) {\n                    log.error(\"range is null\");\n                }\n                continue;\n            }\n            high_seqno_seen=getHighSeqnoSeen(sender);\n            map.put(sender, new Digest.Entry(range.low, range.high, high_seqno_seen));\n        }\n\n        return new Digest(map);\n    }","id":27940,"modified_method":"/**\n     * Returns a message digest: for each member P the highest seqno received from P <em>without a gap<\/em> is added to\n     * the digest. E.g. if the seqnos received from P are [+3 +4 +5 -6 +7 +8], then 5 will be returned. Also, the\n     * highest seqno <em>seen<\/em> is added. The max of all highest seqnos seen will be used (in STABLE) to determine\n     * whether the last seqno from a sender was received (see \"Last Message Dropped\" topic in DESIGN).\n     */\n    private Digest getDigestHighestDeliveredMsgs() {\n        Range range;\n        long high_seqno_seen;\n\n        Map<Address,Digest.Entry> map=new HashMap<Address,Digest.Entry>(members.size());\n        for(Address sender: members) {\n            range=getLowestAndHighestSeqno(sender, true);  // get the highest deliverable seqno\n            if(range == null) {\n                if(log.isErrorEnabled()) {\n                    log.error(\"range is null\");\n                }\n                continue;\n            }\n            high_seqno_seen=getHighSeqnoSeen(sender);\n            map.put(sender, new Digest.Entry(range.low, range.high, high_seqno_seen));\n        }\n\n        return new Digest(map);\n    }","commit_id":"4a55a6debf1ea4e6d6c3bb3e992e26635f76016d","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Retransmit from sent-table, called when XMIT_REQ is received. Bundles all messages to be xmitted into one large\n     * message and sends them back with an XMIT_RSP header. Note that since we cannot count on a fragmentation layer\n     * below us, we have to make sure the message doesn't exceed max_xmit_size bytes. If this is the case, we split the\n     * message into multiple, smaller-chunked messages. But in most cases this still yields fewer messages than if each\n     * requested message was retransmitted separately.\n     *\n     * @param xmit_requester        The sender of the XMIT_REQ, we have to send the requested copy of the message to this address\n     * @param first_seqno The first sequence number to be retransmitted (<= last_seqno)\n     * @param last_seqno  The last sequence number to be retransmitted (>= first_seqno)\n     * @param original_sender The member who originally sent the messsage. Guaranteed to be non-null\n     */\n    private void handleXmitReq(Address xmit_requester, long first_seqno, long last_seqno, Address original_sender) {\n        Message m, tmp;\n        LinkedList list;\n        long size=0, marker=first_seqno, len;\n        NakReceiverWindow win=null;\n        boolean      amISender; // am I the original sender ?\n\n        if(trace) {\n            StringBuilder sb=new StringBuilder();\n            sb.append(local_addr).append(\": received xmit request from \").append(xmit_requester).append(\" for \");\n            sb.append(original_sender).append(\" [\").append(first_seqno).append(\" - \").append(last_seqno).append(\"]\");\n            log.trace(sb.toString());\n        }\n\n        if(first_seqno > last_seqno) {\n            if(log.isErrorEnabled())\n                log.error(\"first_seqno (\" + first_seqno + \") > last_seqno (\" + last_seqno + \"): not able to retransmit\");\n            return;\n        }\n\n        if(stats) {\n            xmit_reqs_received+=last_seqno - first_seqno +1;\n            updateStats(received, xmit_requester, 1, 0, 0);\n        }\n\n        amISender=local_addr.equals(original_sender);\n        if(!amISender)\n            win=received_msgs.get(original_sender);\n\n        list=new LinkedList();\n        for(long i=first_seqno; i <= last_seqno; i++) {\n            if(amISender) {\n                m=(Message)sent_msgs.get(new Long(i)); // no need to synchronize\n            }\n            else {\n                m=win != null? win.get(i) : null;\n            }\n            if(m == null) {\n                if(log.isErrorEnabled()) {\n                    StringBuffer sb=new StringBuffer();\n                    sb.append(\"(requester=\").append(xmit_requester).append(\", local_addr=\").append(this.local_addr);\n                    sb.append(\") message \").append(original_sender).append(\"::\").append(i);\n                    sb.append(\" not found in \").append((amISender? \"sent\" : \"received\")).append(\" msgs \");\n                    if(win != null) {\n                        sb.append(\"from \").append(original_sender).append(\": \").append(win.toString());\n                    }\n                    else {\n                        sb.append(printSentMsgs());\n                    }\n                    log.error(sb);\n                }\n                continue;\n            }\n            len=m.size();\n            size+=len;\n            if(size > max_xmit_size && !list.isEmpty()) { // changed from >= to > (yaron-r, bug #943709)\n                // yaronr: added &&listSize()>0 since protocols between FRAG and NAKACK add headers, and message exceeds size.\n\n                // size has reached max_xmit_size. go ahead and send message (excluding the current message)\n                if(trace)\n                    log.trace(\"xmitting msgs [\" + marker + '-' + (i - 1) + \"] to \" + xmit_requester);\n                sendXmitRsp(xmit_requester, (LinkedList)list.clone(), marker, i - 1);\n                marker=i;\n                list.clear();\n                // fixed Dec 15 2003 (bela, patch from Joel Dice (dicej)), see explanantion under\n                // bug report #854887\n                size=len;\n            }\n            tmp=m;\n            // tmp.setDest(xmit_requester);\n            // tmp.setSrc(local_addr);\n            if(tmp.getSrc() == null)\n                tmp.setSrc(local_addr);\n            list.add(tmp);\n        }\n\n        if(!list.isEmpty()) {\n            if(trace)\n                log.trace(\"xmitting msgs [\" + marker + '-' + last_seqno + \"] to \" + xmit_requester);\n            sendXmitRsp(xmit_requester, (LinkedList)list.clone(), marker, last_seqno);\n            list.clear();\n        }\n    }","id":27941,"modified_method":"/**\n     * Retransmit from sent-table, called when XMIT_REQ is received. Bundles all messages to be xmitted into one large\n     * message and sends them back with an XMIT_RSP header. Note that since we cannot count on a fragmentation layer\n     * below us, we have to make sure the message doesn't exceed max_xmit_size bytes. If this is the case, we split the\n     * message into multiple, smaller-chunked messages. But in most cases this still yields fewer messages than if each\n     * requested message was retransmitted separately.\n     *\n     * @param xmit_requester        The sender of the XMIT_REQ, we have to send the requested copy of the message to this address\n     * @param first_seqno The first sequence number to be retransmitted (<= last_seqno)\n     * @param last_seqno  The last sequence number to be retransmitted (>= first_seqno)\n     * @param original_sender The member who originally sent the messsage. Guaranteed to be non-null\n     */\n    private void handleXmitReq(Address xmit_requester, long first_seqno, long last_seqno, Address original_sender) {\n        Message m, tmp;\n        LinkedList<Message> list;\n        long size=0, marker=first_seqno, len;\n        NakReceiverWindow win=null;\n        boolean      amISender; // am I the original sender ?\n\n        if(trace) {\n            StringBuilder sb=new StringBuilder();\n            sb.append(local_addr).append(\": received xmit request from \").append(xmit_requester).append(\" for \");\n            sb.append(original_sender).append(\" [\").append(first_seqno).append(\" - \").append(last_seqno).append(\"]\");\n            log.trace(sb.toString());\n        }\n\n        if(first_seqno > last_seqno) {\n            if(log.isErrorEnabled())\n                log.error(\"first_seqno (\" + first_seqno + \") > last_seqno (\" + last_seqno + \"): not able to retransmit\");\n            return;\n        }\n\n        if(stats) {\n            xmit_reqs_received+=last_seqno - first_seqno +1;\n            updateStats(received, xmit_requester, 1, 0, 0);\n        }\n\n        amISender=local_addr.equals(original_sender);\n        if(!amISender)\n            win=received_msgs.get(original_sender);\n\n        list=new LinkedList<Message>();\n        for(long i=first_seqno; i <= last_seqno; i++) {\n            if(amISender) {\n                m=sent_msgs.get(new Long(i)); // no need to synchronize\n            }\n            else {\n                m=win != null? win.get(i) : null;\n            }\n            if(m == null) {\n                if(log.isErrorEnabled()) {\n                    StringBuffer sb=new StringBuffer();\n                    sb.append(\"(requester=\").append(xmit_requester).append(\", local_addr=\").append(this.local_addr);\n                    sb.append(\") message \").append(original_sender).append(\"::\").append(i);\n                    sb.append(\" not found in \").append((amISender? \"sent\" : \"received\")).append(\" msgs \");\n                    if(win != null) {\n                        sb.append(\"from \").append(original_sender).append(\": \").append(win.toString());\n                    }\n                    else {\n                        sb.append(printSentMsgs());\n                    }\n                    log.error(sb);\n                }\n                continue;\n            }\n            len=m.size();\n            size+=len;\n            if(size > max_xmit_size && !list.isEmpty()) { // changed from >= to > (yaron-r, bug #943709)\n                // yaronr: added &&listSize()>0 since protocols between FRAG and NAKACK add headers, and message exceeds size.\n\n                // size has reached max_xmit_size. go ahead and send message (excluding the current message)\n                if(trace)\n                    log.trace(\"xmitting msgs [\" + marker + '-' + (i - 1) + \"] to \" + xmit_requester);\n                sendXmitRsp(xmit_requester, (LinkedList)list.clone(), marker, i - 1);\n                marker=i;\n                list.clear();\n                // fixed Dec 15 2003 (bela, patch from Joel Dice (dicej)), see explanantion under\n                // bug report #854887\n                size=len;\n            }\n            tmp=m;\n            // tmp.setDest(xmit_requester);\n            // tmp.setSrc(local_addr);\n            if(tmp.getSrc() == null)\n                tmp.setSrc(local_addr);\n            list.add(tmp);\n        }\n\n        if(!list.isEmpty()) {\n            if(trace)\n                log.trace(\"xmitting msgs [\" + marker + '-' + last_seqno + \"] to \" + xmit_requester);\n            sendXmitRsp(xmit_requester, (LinkedList)list.clone(), marker, last_seqno);\n            list.clear();\n        }\n    }","commit_id":"4a55a6debf1ea4e6d6c3bb3e992e26635f76016d","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\r\n     * @param ver - for what version find nearest\r\n     * @return nearest version which contain full information (not patch)\r\n     */\r\n    public Version getNearestFullVersion(Version ver)\r\n    {\r\n        if (fullVersions.contains(ver)) {\r\n            return ver;\r\n        }\r\n        SortedSet headSet = fullVersions.headSet(ver);\r\n        return (Version) ((headSet.size() == 0) ? null : headSet.last());\r\n    }","id":27942,"modified_method":"/**\r\n     * @param ver - for what version find nearest\r\n     * @return nearest version which contain full information (not patch)\r\n     */\r\n    public Version getNearestFullVersion(Version ver)\r\n    {\r\n        if (fullVersions.contains(ver)) {\r\n            return ver;\r\n        }\r\n        SortedSet<Version> headSet = fullVersions.headSet(ver);\r\n        return (headSet.size() == 0) ? null : headSet.last();\r\n    }","commit_id":"8a7f9a541c64eb78c8f4a20980f75b56122dfefd","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\r\n     * @return next version in history. null if none\r\n     * @param ver - current version\r\n     */\r\n    public Version getNextVersion(Version ver)\r\n    {\r\n        // headMap is exclusive\r\n        SortedMap headmap = versionToNode.headMap(ver);\r\n        return (headmap.size() == 0) ? null : (Version) headmap.lastKey();\r\n    }","id":27943,"modified_method":"/**\r\n     * @return next version in history. null if none\r\n     * @param ver - current version\r\n     */\r\n    public Version getNextVersion(Version ver)\r\n    {\r\n        // headMap is exclusive\r\n        SortedMap<Version, XWikiRCSNodeInfo> headmap = versionToNode.headMap(ver);\r\n        return (headmap.size() == 0) ? null : headmap.lastKey();\r\n    }","commit_id":"8a7f9a541c64eb78c8f4a20980f75b56122dfefd","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\r\n     * Remove document versions from vfrom to vto, inclusive.\r\n     * \r\n     * @param context - used for loading nodes content\r\n     * @param vfrom - start version\r\n     * @param vto - end version\r\n     * @throws XWikiException if any error\r\n     */\r\n    public void removeVersions(Version vfrom, Version vto, XWikiContext context)\r\n        throws XWikiException\r\n    {\r\n        Version vfrom0 = vfrom;\r\n        Version vto0 = vto;\r\n        if (vfrom0.compareVersions(vto0) < 0) {\r\n            Version tmp = vfrom0;\r\n            vfrom0 = vto0;\r\n            vto0 = tmp;\r\n        }\r\n        Version vfrom1 = getNextVersion(vfrom0);\r\n        Version vto1 = getPrevVersion(vto0);\r\n        if (vfrom1 == null && vto1 == null) {\r\n            resetArchive();\r\n            return;\r\n        }\r\n        if (vfrom1 == null) {\r\n            // Deleting the most recent version.\r\n            // TODO: update the document to the new \"most recent\" version.\r\n            // Store full version in vto1\r\n            String xmlto1 = getVersionXml(vto1, context);\r\n            XWikiRCSNodeInfo nito1 = getNode(vto1);\r\n            XWikiRCSNodeContent ncto1 = nito1.getContent(context);\r\n            ncto1.getPatch().setFullVersion(xmlto1);\r\n            nito1.setContent(ncto1);\r\n            updateNode(nito1);\r\n            getUpdatedNodeContents().add(ncto1);\r\n        } else if (vto1 != null) {\r\n            // We're not deleting from the first version, so we must make a new diff jumping over\r\n            // the deleted versions.\r\n            String xmlfrom1 = getVersionXml(vfrom1, context);\r\n            String xmlto1 = getVersionXml(vto1, context);\r\n            XWikiRCSNodeInfo nito1 = getNode(vto1);\r\n            XWikiRCSNodeContent ncto1 = nito1.getContent(context);\r\n            ncto1.getPatch().setDiffVersion(xmlfrom1, xmlto1, \"\");\r\n            nito1.setContent(ncto1);\r\n            updateNode(nito1);\r\n            getUpdatedNodeContents().add(ncto1);\r\n        }\r\n        // if (vto1==null) => nothing to do, except delete\r\n        for (Iterator it = getNodes(vfrom0, vto0).iterator(); it.hasNext();) {\r\n            XWikiRCSNodeInfo ni = (XWikiRCSNodeInfo) it.next();\r\n            fullVersions.remove(ni.getId().getVersion());\r\n            deletedNodes.add(ni);\r\n            it.remove();\r\n        }\r\n    }","id":27944,"modified_method":"/**\r\n     * Remove document versions from vfrom to vto, inclusive.\r\n     * \r\n     * @param newerVersion - start version\r\n     * @param olderVersion - end version\r\n     * @param context - used for loading nodes content\r\n     * @throws XWikiException if any error\r\n     */\r\n    public void removeVersions(Version newerVersion, Version olderVersion, XWikiContext context)\r\n        throws XWikiException\r\n    {\r\n        Version upperBound = newerVersion;\r\n        Version lowerBound = olderVersion;\r\n        if (upperBound.compareVersions(lowerBound) < 0) {\r\n            Version tmp = upperBound;\r\n            upperBound = lowerBound;\r\n            lowerBound = tmp;\r\n        }\r\n        Version firstVersionAfter = getNextVersion(upperBound);\r\n        Version firstVersionBefore = getPrevVersion(lowerBound);\r\n        if (firstVersionAfter == null && firstVersionBefore == null) {\r\n            resetArchive();\r\n            return;\r\n        }\r\n        if (firstVersionAfter == null) {\r\n            // Deleting the most recent version.\r\n            // Store full version in firstVersionBefore\r\n            String xmlBefore = getVersionXml(firstVersionBefore, context);\r\n            XWikiRCSNodeInfo niBefore = getNode(firstVersionBefore);\r\n            XWikiRCSNodeContent ncBefore = niBefore.getContent(context);\r\n            ncBefore.getPatch().setFullVersion(xmlBefore);\r\n            niBefore.setContent(ncBefore);\r\n            updateNode(niBefore);\r\n            getUpdatedNodeContents().add(ncBefore);\r\n        } else if (firstVersionBefore != null) {\r\n            // We're not deleting from the first version, so we must make a new diff jumping over\r\n            // the deleted versions.\r\n            String xmlAfter = getVersionXml(firstVersionAfter, context);\r\n            String xmlBefore = getVersionXml(firstVersionBefore, context);\r\n            XWikiRCSNodeInfo niBefore = getNode(firstVersionBefore);\r\n            XWikiRCSNodeContent ncBefore = niBefore.getContent(context);\r\n            ncBefore.getPatch().setDiffVersion(xmlAfter, xmlBefore, \"\");\r\n            niBefore.setContent(ncBefore);\r\n            updateNode(niBefore);\r\n            getUpdatedNodeContents().add(ncBefore);\r\n        }\r\n        // if (firstVersionBefore == null) => nothing else to do, except delete\r\n        for (Iterator<XWikiRCSNodeInfo> it = getNodes(upperBound, lowerBound).iterator(); it.hasNext();) {\r\n            XWikiRCSNodeInfo ni = it.next();\r\n            fullVersions.remove(ni.getId().getVersion());\r\n            deletedNodes.add(ni);\r\n            it.remove();\r\n        }\r\n    }","commit_id":"8a7f9a541c64eb78c8f4a20980f75b56122dfefd","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/** @param versions - collection of XWikiRCSNodeInfo */\r\n    public void setNodes(Collection versions)\r\n    {\r\n        resetArchive();\r\n        for (Iterator it = versions.iterator(); it.hasNext();) {\r\n            updateNode((XWikiRCSNodeInfo) it.next());\r\n        }\r\n        if (getNodes().size() > 0) {\r\n            // ensure latest version is full\r\n            getLatestNode().setDiff(false);\r\n            updateNode(getLatestNode());\r\n        }\r\n    }","id":27945,"modified_method":"/** @param versions - collection of XWikiRCSNodeInfo */\r\n    public void setNodes(Collection<XWikiRCSNodeInfo> versions)\r\n    {\r\n        resetArchive();\r\n        for (XWikiRCSNodeInfo node : versions) {\r\n            updateNode(node);\r\n        }\r\n        if (getNodes().size() > 0) {\r\n            // ensure latest version is full\r\n            getLatestNode().setDiff(false);\r\n            updateNode(getLatestNode());\r\n        }\r\n    }","commit_id":"8a7f9a541c64eb78c8f4a20980f75b56122dfefd","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\r\n     * @return List of {@link XWikiRCSNodeContent} where vfrom<=version<=vto order by version\r\n     * @param vfrom - start version\r\n     * @param vto - end version\r\n     * @param context - used everywhere\r\n     * @throws XWikiException if any error\r\n     */\r\n    private List loadRCSNodeContents(Version vfrom, Version vto, XWikiContext context)\r\n        throws XWikiException\r\n    {\r\n        List result = new ArrayList();\r\n        for (Iterator it = getNodes(vfrom, vto).iterator(); it.hasNext();) {\r\n            XWikiRCSNodeInfo nodeInfo = (XWikiRCSNodeInfo) it.next();\r\n            XWikiRCSNodeContent nodeContent = nodeInfo.getContent(context);\r\n            result.add(nodeContent);\r\n        }\r\n        return result;\r\n    }","id":27946,"modified_method":"/**\r\n     * @return List of {@link XWikiRCSNodeContent} where vfrom<=version<=vto order by version\r\n     * @param vfrom - start version\r\n     * @param vto - end version\r\n     * @param context - used everywhere\r\n     * @throws XWikiException if any error\r\n     */\r\n    private List<XWikiRCSNodeContent> loadRCSNodeContents(Version vfrom, Version vto, XWikiContext context)\r\n        throws XWikiException\r\n    {\r\n        List<XWikiRCSNodeContent> result = new ArrayList<XWikiRCSNodeContent>();\r\n        for (XWikiRCSNodeInfo nodeInfo : getNodes(vfrom, vto)) {\r\n            XWikiRCSNodeContent nodeContent = nodeInfo.getContent(context);\r\n            result.add(nodeContent);\r\n        }\r\n        return result;\r\n    }","commit_id":"8a7f9a541c64eb78c8f4a20980f75b56122dfefd","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\r\n     * Return the XML corresponding to a version. If the version node contains just a diff, then\r\n     * restore the complete XML by applying all patches from the nearest full version to the\r\n     * requested version.\r\n     * \r\n     * @param version The version to retrieve.\r\n     * @param context The {@link com.xpn.xwiki.XWikiContext context}.\r\n     * @return The XML corresponding to the version.\r\n     * @throws XWikiException If any exception occured.\r\n     */\r\n    public String getVersionXml(Version version, XWikiContext context) throws XWikiException\r\n    {\r\n        Version nearestFullVersion = getNearestFullVersion(version);\r\n\r\n        List lstContent = loadRCSNodeContents(nearestFullVersion, version, context);\r\n        List origText = new ArrayList();\r\n        for (Iterator it = lstContent.iterator(); it.hasNext();) {\r\n            XWikiRCSNodeContent nodeContent = (XWikiRCSNodeContent) it.next();\r\n            nodeContent.getPatch().patch(origText);\r\n        }\r\n\r\n        return ToString.arrayToString(origText.toArray());\r\n    }","id":27947,"modified_method":"/**\r\n     * Return the XML corresponding to a version. If the version node contains just a diff, then\r\n     * restore the complete XML by applying all patches from the nearest full version to the\r\n     * requested version.\r\n     * \r\n     * @param version The version to retrieve.\r\n     * @param context The {@link com.xpn.xwiki.XWikiContext context}.\r\n     * @return The XML corresponding to the version.\r\n     * @throws XWikiException If any exception occured.\r\n     */\r\n    public String getVersionXml(Version version, XWikiContext context) throws XWikiException\r\n    {\r\n        Version nearestFullVersion = getNearestFullVersion(version);\r\n\r\n        List<XWikiRCSNodeContent> lstContent = loadRCSNodeContents(nearestFullVersion, version, context);\r\n        List origText = new ArrayList();\r\n        for (Iterator it = lstContent.iterator(); it.hasNext();) {\r\n            XWikiRCSNodeContent nodeContent = (XWikiRCSNodeContent) it.next();\r\n            nodeContent.getPatch().patch(origText);\r\n        }\r\n\r\n        return ToString.arrayToString(origText.toArray());\r\n    }","commit_id":"8a7f9a541c64eb78c8f4a20980f75b56122dfefd","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\r\n     * @return previous version in history. null if none\r\n     * @param ver - current version\r\n     */\r\n    public Version getPrevVersion(Version ver)\r\n    {\r\n        // tailMap is inclusive\r\n        SortedMap tailmap = versionToNode.tailMap(ver);\r\n        if (tailmap.size() <= 1) {\r\n            return null;\r\n        }\r\n        Iterator it = tailmap.keySet().iterator();\r\n        it.next();\r\n        return (Version) it.next();\r\n    }","id":27948,"modified_method":"/**\r\n     * @return previous version in history. null if none\r\n     * @param ver - current version\r\n     */\r\n    public Version getPrevVersion(Version ver)\r\n    {\r\n        // tailMap is inclusive\r\n        SortedMap<Version, XWikiRCSNodeInfo> tailmap = versionToNode.tailMap(ver);\r\n        if (tailmap.size() <= 1) {\r\n            return null;\r\n        }\r\n        Iterator<Version> it = tailmap.keySet().iterator();\r\n        it.next();\r\n        return it.next();\r\n    }","commit_id":"8a7f9a541c64eb78c8f4a20980f75b56122dfefd","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public ResponsePdu send(TestAgent agent) {\n        ResponsePdu resp = TestPdu.getResponse();\n\n        try {\n            // first do non repeaters\n            int nonRepeaters = Math.min(size(), getNonRepeaters());\n            for(int i = 0; i < nonRepeaters; i++) {\n                int errIndex = i+1;\n                TestVarBind varBind = (TestVarBind) getVarBindAt(i);\n                SnmpObjId lastOid = varBind.getObjId();\n                TestVarBind newVarBind = getResponseVarBind(agent, lastOid, errIndex);\n                resp.addVarBind(newVarBind);\n                \n                // make sure we haven't exceeded response size\n                validateResponseSize(resp, agent);\n            }\n            \n            // make a list to track the repititions\n            int repeaters = size() - nonRepeaters;\n            List repeaterList = new ArrayList(repeaters);\n            for(int i = nonRepeaters; i < size(); i++) {\n                repeaterList.add(getVarBindAt(i).getObjId());\n            }\n            \n            // now generate varbinds for the repeaters\n            for(int count = 0; count < getMaxRepititions(); count++) {\n                for(int i = 0; i < repeaterList.size(); i++) {\n                    int errIndex = nonRepeaters+i+1;\n                    SnmpObjId lastOid = (SnmpObjId)repeaterList.get(i);\n                    TestVarBind newVarBind = getResponseVarBind(agent, lastOid, errIndex);\n                    resp.addVarBind(newVarBind);\n                    repeaterList.set(i, newVarBind.getObjId());\n                    \n                    // make sure we haven't exceeded response size\n                    validateResponseSize(resp, agent);\n                }\n            }\n            return resp;\n        } catch (AgentIndexException e) {\n            // this happens for GenErr and NoSuchName errs\n            resp.setVarBinds(getVarBinds());\n            resp.setErrorStatus(e.getErrorStatus());\n            resp.setErrorIndex(e.getErrorIndex()); // errorIndex uses indices starting at 1\n            return resp;\n        } catch (AgentTooBigException e) {\n            // when we exceed response size we'll get here\n            return handleTooBig(agent, resp);\n        }\n    }","id":27949,"modified_method":"public ResponsePdu send(TestAgent agent) {\n        ResponsePdu resp = TestPdu.getResponse();\n\n        try {\n            // first do non repeaters\n            int nonRepeaters = Math.min(size(), getNonRepeaters());\n            for(int i = 0; i < nonRepeaters; i++) {\n                int errIndex = i+1;\n                TestVarBind varBind = (TestVarBind) getVarBindAt(i);\n                SnmpObjId lastOid = varBind.getObjId();\n                TestVarBind newVarBind = getResponseVarBind(agent, lastOid, errIndex);\n                resp.addVarBind(newVarBind);\n                \n                // make sure we haven't exceeded response size\n                validateResponseSize(resp, agent);\n            }\n            \n            // make a list to track the repititions\n            int repeaters = size() - nonRepeaters;\n            List<SnmpObjId> repeaterList = new ArrayList<SnmpObjId>(repeaters);\n            for(int i = nonRepeaters; i < size(); i++) {\n                repeaterList.add(getVarBindAt(i).getObjId());\n            }\n            \n            // now generate varbinds for the repeaters\n            for(int count = 0; count < getMaxRepititions(); count++) {\n                for(int i = 0; i < repeaterList.size(); i++) {\n                    int errIndex = nonRepeaters+i+1;\n                    SnmpObjId lastOid = (SnmpObjId)repeaterList.get(i);\n                    TestVarBind newVarBind = getResponseVarBind(agent, lastOid, errIndex);\n                    resp.addVarBind(newVarBind);\n                    repeaterList.set(i, newVarBind.getObjId());\n                    \n                    // make sure we haven't exceeded response size\n                    validateResponseSize(resp, agent);\n                }\n            }\n            return resp;\n        } catch (AgentIndexException e) {\n            // this happens for GenErr and NoSuchName errs\n            resp.setVarBinds(getVarBinds());\n            resp.setErrorStatus(e.getErrorStatus());\n            resp.setErrorIndex(e.getErrorIndex()); // errorIndex uses indices starting at 1\n            return resp;\n        } catch (AgentTooBigException e) {\n            // when we exceed response size we'll get here\n            return handleTooBig(agent, resp);\n        }\n    }","commit_id":"bd4fb8845a63891c3f6563332c60c33add13e1cc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public SnmpObjId getFollowingObjId(SnmpObjId id) {\n        try {\n            SnmpObjId nextObjId = (SnmpObjId)m_agentData.tailMap(SnmpObjId.get(id, SnmpInstId.INST_ZERO)).firstKey();\n            Object value = m_agentData.get(nextObjId);\n            if (value instanceof Redirect) {\n                Redirect redirect = (Redirect) value;\n                return redirect.getTargetObjId();\n            }\n            return nextObjId;\n        } catch (NoSuchElementException e) {\n            throw new AgentEndOfMibException();   \n        }\n    }","id":27950,"modified_method":"public SnmpObjId getFollowingObjId(SnmpObjId id) {\n        try {\n            SnmpObjId nextObjId = m_agentData.tailMap(SnmpObjId.get(id, SnmpInstId.INST_ZERO)).firstKey();\n            Object value = m_agentData.get(nextObjId);\n            if (value instanceof Redirect) {\n                Redirect redirect = (Redirect) value;\n                return redirect.getTargetObjId();\n            }\n            return nextObjId;\n        } catch (NoSuchElementException e) {\n            throw new AgentEndOfMibException();   \n        }\n    }","commit_id":"bd4fb8845a63891c3f6563332c60c33add13e1cc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void setAgentData(Properties mibData) {\n        m_agentData = new TreeMap();\n        for (Iterator it = mibData.entrySet().iterator(); it.hasNext();) {\n            Map.Entry entry = (Map.Entry) it.next();\n            SnmpObjId objId = SnmpObjId.get((String)entry.getKey());\n            \n            setAgentValue(objId, TestSnmpValue.parseMibValue((String)entry.getValue()));\n        }\n    }","id":27951,"modified_method":"public void setAgentData(Properties mibData) {\n        m_agentData = new TreeMap<SnmpObjId, Object>();\n        for (Entry<Object, Object> entry : mibData.entrySet()) {\n            SnmpObjId objId = SnmpObjId.get(entry.getKey().toString());\n            \n            setAgentValue(objId, TestSnmpValue.parseMibValue(entry.getValue().toString()));\n        }\n    }","commit_id":"bd4fb8845a63891c3f6563332c60c33add13e1cc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void generateException(SnmpObjId id) {\n        if (m_agentData.isEmpty())\n            throw new AgentNoSuchObjectException();\n        \n        SnmpObjId firstOid = (SnmpObjId)m_agentData.firstKey();\n        SnmpObjId lastOid = (SnmpObjId)m_agentData.lastKey();\n        if (id.compareTo(firstOid) < 0 || id.compareTo(lastOid) > 0)\n            throw new AgentNoSuchObjectException();\n        throw new AgentNoSuchInstanceException();\n    }","id":27952,"modified_method":"private void generateException(SnmpObjId id) {\n        if (m_agentData.isEmpty()) {\n            throw new AgentNoSuchObjectException();\n        }\n        \n        SnmpObjId firstOid = m_agentData.firstKey();\n        SnmpObjId lastOid = m_agentData.lastKey();\n        if (id.compareTo(firstOid) < 0 || id.compareTo(lastOid) > 0)\n            throw new AgentNoSuchObjectException();\n        throw new AgentNoSuchInstanceException();\n    }","commit_id":"bd4fb8845a63891c3f6563332c60c33add13e1cc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public TestVarBind getVarBindAt(int i) {\n        return (TestVarBind)get(i);\n    }","id":27953,"modified_method":"public TestVarBind getVarBindAt(int i) {\n        return get(i);\n    }","commit_id":"bd4fb8845a63891c3f6563332c60c33add13e1cc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Returns a message digest: for each member P the highest seqno received from P <em>without a gap<\/em> is added to\n     * the digest. E.g. if the seqnos received from P are [+3 +4 +5 -6 +7 +8], then 5 will be returned. Also, the\n     * highest seqno <em>seen<\/em> is added. The max of all highest seqnos seen will be used (in STABLE) to determine\n     * whether the last seqno from a sender was received (see \"Last Message Dropped\" topic in DESIGN).\n     */\n    private Digest getDigestHighestDeliveredMsgs() {\n        Range range;\n        long high_seqno_seen;\n\n        Map<Address,Digest.Entry> map=new HashMap(members.size());\n        for(Address sender: members) {\n            range=getLowestAndHighestSeqno(sender, true);  // get the highest deliverable seqno\n            if(range == null) {\n                if(log.isErrorEnabled()) {\n                    log.error(\"range is null\");\n                }\n                continue;\n            }\n            high_seqno_seen=getHighSeqnoSeen(sender);\n            map.put(sender, new Digest.Entry(range.low, range.high, high_seqno_seen));\n        }\n\n        return new Digest(map);\n    }","id":27954,"modified_method":"/**\n     * Returns a message digest: for each member P the highest seqno received from P <em>without a gap<\/em> is added to\n     * the digest. E.g. if the seqnos received from P are [+3 +4 +5 -6 +7 +8], then 5 will be returned. Also, the\n     * highest seqno <em>seen<\/em> is added. The max of all highest seqnos seen will be used (in STABLE) to determine\n     * whether the last seqno from a sender was received (see \"Last Message Dropped\" topic in DESIGN).\n     */\n    private Digest getDigestHighestDeliveredMsgs() {\n        Range range;\n        long high_seqno_seen;\n\n        Map<Address,Digest.Entry> map=new HashMap<Address,Digest.Entry>(members.size());\n        for(Address sender: members) {\n            range=getLowestAndHighestSeqno(sender, true);  // get the highest deliverable seqno\n            if(range == null) {\n                if(log.isErrorEnabled()) {\n                    log.error(\"range is null\");\n                }\n                continue;\n            }\n            high_seqno_seen=getHighSeqnoSeen(sender);\n            map.put(sender, new Digest.Entry(range.low, range.high, high_seqno_seen));\n        }\n\n        return new Digest(map);\n    }","commit_id":"84c8c796a472a524a3207d80b4d1724e3d6875dc","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * <b>Callback<\/b>. Called by superclass when event may be handled.<p> <b>Do not use <code>down_prot.down()<\/code> in this\n     * method as the event is passed down by default by the superclass after this method returns !<\/b>\n     */\n    public Object down(Event evt) {\n        switch(evt.getType()) {\n\n            case Event.MSG:\n                Message msg=(Message)evt.getArg();\n                Address dest=msg.getDest();\n                if(dest != null && !dest.isMulticastAddress()) {\n                    break; // unicast address: not null and not mcast, pass down unchanged\n                }\n                send(evt, msg);\n                return null;    // don't pass down the stack\n\n            case Event.STABLE:  // generated by STABLE layer. Delete stable messages passed in arg\n                stable((Digest)evt.getArg());\n                return null;  // do not pass down further (Bela Aug 7 2001)\n\n            case Event.GET_DIGEST:\n                return getDigest();\n\n            case Event.GET_DIGEST_STABLE:\n                return getDigestHighestDeliveredMsgs();\n\n            case Event.SET_DIGEST:\n                setDigest((Digest)evt.getArg());\n                return null;\n\n            case Event.MERGE_DIGEST:\n                mergeDigest((Digest)evt.getArg());\n                return null;\n\n            case Event.CONFIG:\n                Object retval=down_prot.down(evt);\n                if(log.isDebugEnabled())\n                    log.debug(\"received CONFIG event: \" + evt.getArg());\n                handleConfigEvent((HashMap)evt.getArg());\n                return retval;\n\n            case Event.TMP_VIEW:\n                View tmp_view=(View)evt.getArg();\n                Vector mbrs=tmp_view.getMembers();\n                members.clear();\n                members.addAll(mbrs);\n                adjustReceivers(false);\n                break;\n\n            case Event.VIEW_CHANGE:\n                tmp_view=(View)evt.getArg();\n                mbrs=tmp_view.getMembers();\n                members.clear();\n                members.addAll(mbrs);\n                adjustReceivers(true);\n                is_server=true;  // check vids from now on\n\n                Set tmp=new LinkedHashSet(members);\n                tmp.add(null); // for null destination (= mcast)\n                sent.keySet().retainAll(tmp);\n                received.keySet().retainAll(tmp);\n                view=tmp_view;\n                break;\n\n            case Event.BECOME_SERVER:\n                is_server=true;\n                break;\n\n            case Event.DISCONNECT:\n                leaving=true;\n                reset();\n                break;\n\n            case Event.REBROADCAST:\n                rebroadcasting=true;\n                rebroadcast_digest=(Digest)evt.getArg();\n                try {\n                    rebroadcastMessages();\n                }\n                finally {\n                    rebroadcasting=false;\n                    rebroadcast_digest=null;\n                }\n                return null;\n        }\n\n        return down_prot.down(evt);\n    }","id":27955,"modified_method":"/**\n     * <b>Callback<\/b>. Called by superclass when event may be handled.<p> <b>Do not use <code>down_prot.down()<\/code> in this\n     * method as the event is passed down by default by the superclass after this method returns !<\/b>\n     */\n    public Object down(Event evt) {\n        switch(evt.getType()) {\n\n            case Event.MSG:\n                Message msg=(Message)evt.getArg();\n                Address dest=msg.getDest();\n                if(dest != null && !dest.isMulticastAddress()) {\n                    break; // unicast address: not null and not mcast, pass down unchanged\n                }\n                send(evt, msg);\n                return null;    // don't pass down the stack\n\n            case Event.STABLE:  // generated by STABLE layer. Delete stable messages passed in arg\n                stable((Digest)evt.getArg());\n                return null;  // do not pass down further (Bela Aug 7 2001)\n\n            case Event.GET_DIGEST:\n                return getDigest();\n\n            case Event.GET_DIGEST_STABLE:\n                return getDigestHighestDeliveredMsgs();\n\n            case Event.SET_DIGEST:\n                setDigest((Digest)evt.getArg());\n                return null;\n\n            case Event.MERGE_DIGEST:\n                mergeDigest((Digest)evt.getArg());\n                return null;\n\n            case Event.CONFIG:\n                Object retval=down_prot.down(evt);\n                if(log.isDebugEnabled())\n                    log.debug(\"received CONFIG event: \" + evt.getArg());\n                handleConfigEvent((HashMap)evt.getArg());\n                return retval;\n\n            case Event.TMP_VIEW:\n                View tmp_view=(View)evt.getArg();\n                Vector<Address> mbrs=tmp_view.getMembers();\n                members.clear();\n                members.addAll(mbrs);\n                adjustReceivers(false);\n                break;\n\n            case Event.VIEW_CHANGE:\n                tmp_view=(View)evt.getArg();\n                mbrs=tmp_view.getMembers();\n                members.clear();\n                members.addAll(mbrs);\n                adjustReceivers(true);\n                is_server=true;  // check vids from now on\n\n                Set<Address> tmp=new LinkedHashSet<Address>(members);\n                tmp.add(null); // for null destination (= mcast)\n                sent.keySet().retainAll(tmp);\n                received.keySet().retainAll(tmp);\n                view=tmp_view;\n                break;\n\n            case Event.BECOME_SERVER:\n                is_server=true;\n                break;\n\n            case Event.DISCONNECT:\n                leaving=true;\n                reset();\n                break;\n\n            case Event.REBROADCAST:\n                rebroadcasting=true;\n                rebroadcast_digest=(Digest)evt.getArg();\n                try {\n                    rebroadcastMessages();\n                }\n                finally {\n                    rebroadcasting=false;\n                    rebroadcast_digest=null;\n                }\n                return null;\n        }\n\n        return down_prot.down(evt);\n    }","commit_id":"84c8c796a472a524a3207d80b4d1724e3d6875dc","url":"https://github.com/belaban/JGroups"},{"original_method":"public Vector providedUpServices() {\n        Vector retval=new Vector(5);\n        retval.addElement(new Integer(Event.GET_DIGEST));\n        retval.addElement(new Integer(Event.GET_DIGEST_STABLE));\n        retval.addElement(new Integer(Event.SET_DIGEST));\n        retval.addElement(new Integer(Event.MERGE_DIGEST));\n        return retval;\n    }","id":27956,"modified_method":"public Vector<Integer> providedUpServices() {\n        Vector<Integer> retval=new Vector<Integer>(5);\n        retval.addElement(new Integer(Event.GET_DIGEST));\n        retval.addElement(new Integer(Event.GET_DIGEST_STABLE));\n        retval.addElement(new Integer(Event.SET_DIGEST));\n        retval.addElement(new Integer(Event.MERGE_DIGEST));\n        return retval;\n    }","commit_id":"84c8c796a472a524a3207d80b4d1724e3d6875dc","url":"https://github.com/belaban/JGroups"},{"original_method":"public String printSentMsgs() {\n        StringBuilder sb=new StringBuilder();\n        Long min_seqno, max_seqno;\n        synchronized(sent_msgs) {\n            min_seqno=!sent_msgs.isEmpty()? (Long)sent_msgs.firstKey() : new Long(0);\n            max_seqno=!sent_msgs.isEmpty()? (Long)sent_msgs.lastKey() : new Long(0);\n        }\n        sb.append('[').append(min_seqno).append(\" - \").append(max_seqno).append(\"] (\").append(sent_msgs.size()).append(\")\");\n        return sb.toString();\n    }","id":27957,"modified_method":"public String printSentMsgs() {\n        StringBuilder sb=new StringBuilder();\n        Long min_seqno, max_seqno;\n        synchronized(sent_msgs) {\n            min_seqno=!sent_msgs.isEmpty()? sent_msgs.firstKey() : new Long(0);\n            max_seqno=!sent_msgs.isEmpty()? sent_msgs.lastKey() : new Long(0);\n        }\n        sb.append('[').append(min_seqno).append(\" - \").append(max_seqno).append(\"] (\").append(sent_msgs.size()).append(\")\");\n        return sb.toString();\n    }","commit_id":"84c8c796a472a524a3207d80b4d1724e3d6875dc","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Retransmit from sent-table, called when XMIT_REQ is received. Bundles all messages to be xmitted into one large\n     * message and sends them back with an XMIT_RSP header. Note that since we cannot count on a fragmentation layer\n     * below us, we have to make sure the message doesn't exceed max_xmit_size bytes. If this is the case, we split the\n     * message into multiple, smaller-chunked messages. But in most cases this still yields fewer messages than if each\n     * requested message was retransmitted separately.\n     *\n     * @param xmit_requester        The sender of the XMIT_REQ, we have to send the requested copy of the message to this address\n     * @param first_seqno The first sequence number to be retransmitted (<= last_seqno)\n     * @param last_seqno  The last sequence number to be retransmitted (>= first_seqno)\n     * @param original_sender The member who originally sent the messsage. Guaranteed to be non-null\n     */\n    private void handleXmitReq(Address xmit_requester, long first_seqno, long last_seqno, Address original_sender) {\n        Message m, tmp;\n        LinkedList list;\n        long size=0, marker=first_seqno, len;\n        NakReceiverWindow win=null;\n        boolean      amISender; // am I the original sender ?\n\n        if(trace) {\n            StringBuilder sb=new StringBuilder();\n            sb.append(local_addr).append(\": received xmit request from \").append(xmit_requester).append(\" for \");\n            sb.append(original_sender).append(\" [\").append(first_seqno).append(\" - \").append(last_seqno).append(\"]\");\n            log.trace(sb.toString());\n        }\n\n        if(first_seqno > last_seqno) {\n            if(log.isErrorEnabled())\n                log.error(\"first_seqno (\" + first_seqno + \") > last_seqno (\" + last_seqno + \"): not able to retransmit\");\n            return;\n        }\n\n        if(stats) {\n            xmit_reqs_received+=last_seqno - first_seqno +1;\n            updateStats(received, xmit_requester, 1, 0, 0);\n        }\n\n        amISender=local_addr.equals(original_sender);\n        if(!amISender)\n            win=received_msgs.get(original_sender);\n\n        list=new LinkedList();\n        for(long i=first_seqno; i <= last_seqno; i++) {\n            if(amISender) {\n                m=(Message)sent_msgs.get(new Long(i)); // no need to synchronize\n            }\n            else {\n                m=win != null? win.get(i) : null;\n            }\n            if(m == null) {\n                if(log.isErrorEnabled()) {\n                    StringBuffer sb=new StringBuffer();\n                    sb.append(\"(requester=\").append(xmit_requester).append(\", local_addr=\").append(this.local_addr);\n                    sb.append(\") message \").append(original_sender).append(\"::\").append(i);\n                    sb.append(\" not found in \").append((amISender? \"sent\" : \"received\")).append(\" msgs \");\n                    if(win != null) {\n                        sb.append(\"from \").append(original_sender).append(\": \").append(win.toString());\n                    }\n                    else {\n                        sb.append(printSentMsgs());\n                    }\n                    log.error(sb);\n                }\n                continue;\n            }\n            len=m.size();\n            size+=len;\n            if(size > max_xmit_size && !list.isEmpty()) { // changed from >= to > (yaron-r, bug #943709)\n                // yaronr: added &&listSize()>0 since protocols between FRAG and NAKACK add headers, and message exceeds size.\n\n                // size has reached max_xmit_size. go ahead and send message (excluding the current message)\n                if(trace)\n                    log.trace(\"xmitting msgs [\" + marker + '-' + (i - 1) + \"] to \" + xmit_requester);\n                sendXmitRsp(xmit_requester, (LinkedList)list.clone(), marker, i - 1);\n                marker=i;\n                list.clear();\n                // fixed Dec 15 2003 (bela, patch from Joel Dice (dicej)), see explanantion under\n                // bug report #854887\n                size=len;\n            }\n            tmp=m;\n            // tmp.setDest(xmit_requester);\n            // tmp.setSrc(local_addr);\n            if(tmp.getSrc() == null)\n                tmp.setSrc(local_addr);\n            list.add(tmp);\n        }\n\n        if(!list.isEmpty()) {\n            if(trace)\n                log.trace(\"xmitting msgs [\" + marker + '-' + last_seqno + \"] to \" + xmit_requester);\n            sendXmitRsp(xmit_requester, (LinkedList)list.clone(), marker, last_seqno);\n            list.clear();\n        }\n    }","id":27958,"modified_method":"/**\n     * Retransmit from sent-table, called when XMIT_REQ is received. Bundles all messages to be xmitted into one large\n     * message and sends them back with an XMIT_RSP header. Note that since we cannot count on a fragmentation layer\n     * below us, we have to make sure the message doesn't exceed max_xmit_size bytes. If this is the case, we split the\n     * message into multiple, smaller-chunked messages. But in most cases this still yields fewer messages than if each\n     * requested message was retransmitted separately.\n     *\n     * @param xmit_requester        The sender of the XMIT_REQ, we have to send the requested copy of the message to this address\n     * @param first_seqno The first sequence number to be retransmitted (<= last_seqno)\n     * @param last_seqno  The last sequence number to be retransmitted (>= first_seqno)\n     * @param original_sender The member who originally sent the messsage. Guaranteed to be non-null\n     */\n    private void handleXmitReq(Address xmit_requester, long first_seqno, long last_seqno, Address original_sender) {\n        Message m, tmp;\n        LinkedList<Message> list;\n        long size=0, marker=first_seqno, len;\n        NakReceiverWindow win=null;\n        boolean      amISender; // am I the original sender ?\n\n        if(trace) {\n            StringBuilder sb=new StringBuilder();\n            sb.append(local_addr).append(\": received xmit request from \").append(xmit_requester).append(\" for \");\n            sb.append(original_sender).append(\" [\").append(first_seqno).append(\" - \").append(last_seqno).append(\"]\");\n            log.trace(sb.toString());\n        }\n\n        if(first_seqno > last_seqno) {\n            if(log.isErrorEnabled())\n                log.error(\"first_seqno (\" + first_seqno + \") > last_seqno (\" + last_seqno + \"): not able to retransmit\");\n            return;\n        }\n\n        if(stats) {\n            xmit_reqs_received+=last_seqno - first_seqno +1;\n            updateStats(received, xmit_requester, 1, 0, 0);\n        }\n\n        amISender=local_addr.equals(original_sender);\n        if(!amISender)\n            win=received_msgs.get(original_sender);\n\n        list=new LinkedList<Message>();\n        for(long i=first_seqno; i <= last_seqno; i++) {\n            if(amISender) {\n                m=sent_msgs.get(new Long(i)); // no need to synchronize\n            }\n            else {\n                m=win != null? win.get(i) : null;\n            }\n            if(m == null) {\n                if(log.isErrorEnabled()) {\n                    StringBuffer sb=new StringBuffer();\n                    sb.append(\"(requester=\").append(xmit_requester).append(\", local_addr=\").append(this.local_addr);\n                    sb.append(\") message \").append(original_sender).append(\"::\").append(i);\n                    sb.append(\" not found in \").append((amISender? \"sent\" : \"received\")).append(\" msgs \");\n                    if(win != null) {\n                        sb.append(\"from \").append(original_sender).append(\": \").append(win.toString());\n                    }\n                    else {\n                        sb.append(printSentMsgs());\n                    }\n                    log.error(sb);\n                }\n                continue;\n            }\n            len=m.size();\n            size+=len;\n            if(size > max_xmit_size && !list.isEmpty()) { // changed from >= to > (yaron-r, bug #943709)\n                // yaronr: added &&listSize()>0 since protocols between FRAG and NAKACK add headers, and message exceeds size.\n\n                // size has reached max_xmit_size. go ahead and send message (excluding the current message)\n                if(trace)\n                    log.trace(\"xmitting msgs [\" + marker + '-' + (i - 1) + \"] to \" + xmit_requester);\n                sendXmitRsp(xmit_requester, (LinkedList)list.clone(), marker, i - 1);\n                marker=i;\n                list.clear();\n                // fixed Dec 15 2003 (bela, patch from Joel Dice (dicej)), see explanantion under\n                // bug report #854887\n                size=len;\n            }\n            tmp=m;\n            // tmp.setDest(xmit_requester);\n            // tmp.setSrc(local_addr);\n            if(tmp.getSrc() == null)\n                tmp.setSrc(local_addr);\n            list.add(tmp);\n        }\n\n        if(!list.isEmpty()) {\n            if(trace)\n                log.trace(\"xmitting msgs [\" + marker + '-' + last_seqno + \"] to \" + xmit_requester);\n            sendXmitRsp(xmit_requester, (LinkedList)list.clone(), marker, last_seqno);\n            list.clear();\n        }\n    }","commit_id":"84c8c796a472a524a3207d80b4d1724e3d6875dc","url":"https://github.com/belaban/JGroups"},{"original_method":"public Map dumpStats() {\n        Map retval=super.dumpStats();\n        if(retval == null)\n            retval=new HashMap();\n\n        retval.put(\"xmit_reqs_received\", new Long(xmit_reqs_received));\n        retval.put(\"xmit_reqs_sent\", new Long(xmit_reqs_sent));\n        retval.put(\"xmit_rsps_received\", new Long(xmit_rsps_received));\n        retval.put(\"xmit_rsps_sent\", new Long(xmit_rsps_sent));\n        retval.put(\"missing_msgs_received\", new Long(missing_msgs_received));\n        retval.put(\"sent_msgs\", printSentMsgs());\n\n        StringBuilder sb=new StringBuilder();\n        Address addr;\n        Object w;\n\n        for(Map.Entry<Address,NakReceiverWindow> entry: received_msgs.entrySet()) {\n            addr=entry.getKey();\n            w=entry.getValue();\n            sb.append(addr).append(\": \").append(w.toString()).append('\\n');\n        }\n\n        retval.put(\"received_msgs\", sb.toString());\n        return retval;        \n    }","id":27959,"modified_method":"public Map<String,Object> dumpStats() {\n        Map<String,Object> retval=super.dumpStats();\n        if(retval == null)\n            retval=new HashMap<String,Object>();\n\n        retval.put(\"xmit_reqs_received\", new Long(xmit_reqs_received));\n        retval.put(\"xmit_reqs_sent\", new Long(xmit_reqs_sent));\n        retval.put(\"xmit_rsps_received\", new Long(xmit_rsps_received));\n        retval.put(\"xmit_rsps_sent\", new Long(xmit_rsps_sent));\n        retval.put(\"missing_msgs_received\", new Long(missing_msgs_received));\n        retval.put(\"sent_msgs\", printSentMsgs());\n\n        StringBuilder sb=new StringBuilder();\n        Address addr;\n        Object w;\n\n        for(Map.Entry<Address,NakReceiverWindow> entry: received_msgs.entrySet()) {\n            addr=entry.getKey();\n            w=entry.getValue();\n            sb.append(addr).append(\": \").append(w.toString()).append('\\n');\n        }\n\n        retval.put(\"received_msgs\", sb.toString());\n        return retval;        \n    }","commit_id":"84c8c796a472a524a3207d80b4d1724e3d6875dc","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Returns a message digest: for each member P the highest seqno received from P is added to the digest.\n     */\n    private Digest getDigest() {\n        Range range;\n\n        Map<Address,Digest.Entry> map=new HashMap(members.size());\n        for(Address sender: members) {\n            range=getLowestAndHighestSeqno(sender, false);  // get the highest received seqno\n            if(range == null) {\n                if(log.isErrorEnabled()) {\n                    log.error(\"range is null\");\n                }\n                continue;\n            }\n            map.put(sender, new Digest.Entry(range.low, range.high));\n        }\n        return new Digest(map);\n    }","id":27960,"modified_method":"/**\n     * Returns a message digest: for each member P the highest seqno received from P is added to the digest.\n     */\n    private Digest getDigest() {\n        Range range;\n\n        Map<Address,Digest.Entry> map=new HashMap<Address,Digest.Entry>(members.size());\n        for(Address sender: members) {\n            range=getLowestAndHighestSeqno(sender, false);  // get the highest received seqno\n            if(range == null) {\n                if(log.isErrorEnabled()) {\n                    log.error(\"range is null\");\n                }\n                continue;\n            }\n            map.put(sender, new Digest.Entry(range.low, range.high));\n        }\n        return new Digest(map);\n    }","commit_id":"84c8c796a472a524a3207d80b4d1724e3d6875dc","url":"https://github.com/belaban/JGroups"},{"original_method":"private static void updateStats(HashMap map, Address key, int req, int rsp, int missing) {\n        StatsEntry entry=(StatsEntry)map.get(key);\n        if(entry == null) {\n            entry=new StatsEntry();\n            map.put(key, entry);\n        }\n        entry.xmit_reqs+=req;\n        entry.xmit_rsps+=rsp;\n        entry.missing_msgs_rcvd+=missing;\n    }","id":27961,"modified_method":"private static void updateStats(HashMap<Address,StatsEntry> map, Address key, int req, int rsp, int missing) {\n        StatsEntry entry=map.get(key);\n        if(entry == null) {\n            entry=new StatsEntry();\n            map.put(key, entry);\n        }\n        entry.xmit_reqs+=req;\n        entry.xmit_rsps+=rsp;\n        entry.missing_msgs_rcvd+=missing;\n    }","commit_id":"84c8c796a472a524a3207d80b4d1724e3d6875dc","url":"https://github.com/belaban/JGroups"},{"original_method":"protected Node createNode(String name, JSONObject nodeDescriptor) throws JSONException {\n        Node node = new Node();\n        node.setName(name);\n\n        Object primaryType = nodeDescriptor.opt(\"primaryNodeType\");\n        if (primaryType != null) {\n            node.setPrimaryNodeType(String.valueOf(primaryType));\n        }\n\n        Object mixinsObject = nodeDescriptor.opt(\"mixinNodeTypes\");\n        if (mixinsObject instanceof JSONArray) {\n            JSONArray mixins = (JSONArray) mixinsObject;\n            for (int i=0; i < mixins.length(); i++) {\n                node.addMixinNodeType(mixins.getString(i));\n            }\n        }\n\n        Object propertiesObject = nodeDescriptor.opt(\"properties\");\n        if (propertiesObject instanceof JSONObject) {\n            JSONObject properties = (JSONObject) propertiesObject;\n            for (Iterator<String> pi=properties.keys(); pi.hasNext(); ) {\n                String propName = pi.next();\n                Property prop = this.createProperty(propName, properties.get(propName));\n                node.addProperty(prop);\n            }\n        }\n\n        Object nodesObject = nodeDescriptor.opt(\"nodes\");\n        if (nodesObject instanceof JSONArray) {\n            JSONArray nodes = (JSONArray) nodesObject;\n            for (int i=0; i < nodes.length(); i++) {\n                Object entry = nodes.opt(i);\n                if (entry instanceof JSONObject) {\n                    JSONObject nodeObject = (JSONObject) entry;\n                    String nodeName = nodeObject.optString(\"name\", null);\n                    if (nodeName == null) {\n                        nodeName = \"000000\" + i;\n                        nodeName = nodeName.substring(nodeName.length()-6);\n                    }\n                    Node child = this.createNode(nodeName, nodeObject);\n                    node.addChild(child);\n                }\n            }\n        }\n\n        return node;\n    }","id":27962,"modified_method":"protected Node createNode(String name, JSONObject obj) throws JSONException {\n        Node node = new Node();\n        node.setName(name);\n\n        Object primaryType = obj.opt(\"jcr:primaryType\");\n        if (primaryType != null) {\n            node.setPrimaryNodeType(String.valueOf(primaryType));\n        }\n\n        Object mixinsObject = obj.opt(\"jcr:mixinTypes\");\n        if (mixinsObject instanceof JSONArray) {\n            JSONArray mixins = (JSONArray) mixinsObject;\n            for (int i = 0; i < mixins.length(); i++) {\n                node.addMixinNodeType(mixins.getString(i));\n            }\n        }\n\n        // add properties and nodes\n        JSONArray names = obj.names();\n        for (int i = 0; names != null && i < names.length(); i++) {\n            String n = names.getString(i);\n            // skip well known objects\n            if (!ignoredNames.contains(n)) {\n                Object o = obj.get(n);\n                if (o instanceof JSONObject) {\n                    Node child = this.createNode(n, (JSONObject) o);\n                    node.addChild(child);\n                } else if (o instanceof JSONArray) {\n                    Property prop = createProperty(n, o);\n                    node.addProperty(prop);\n                } else {\n                    Property prop = createProperty(n, o);\n                    node.addProperty(prop);\n                }\n            }\n        }\n        return node;\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"protected Property createProperty(String name, Object propDescriptorObject) throws JSONException {\n        if (propDescriptorObject == null) {\n            return null;\n        }\n\n        Property property = new Property();\n        property.setName(name);\n\n        Object value;\n        String type;\n        if (propDescriptorObject instanceof JSONObject) {\n            JSONObject propDescriptor = (JSONObject) propDescriptorObject;\n\n            value = propDescriptor.opt(\"value\");\n            if (value == null) {\n                // check multivalue\n                value = propDescriptor.opt(\"values\");\n                if (value == null) {\n                    // missing value, ignore property\n                    return null;\n                }\n            }\n\n            Object typeObject = propDescriptor.opt(\"type\");\n            type = (typeObject != null)  ? String.valueOf(typeObject) : null;\n\n        } else {\n            value = propDescriptorObject;\n            type = null;\n        }\n\n        // assume simple value\n        if (value instanceof JSONArray) {\n            // multivalue\n            JSONArray array = (JSONArray) value;\n            if (array.length() > 0) {\n                for (int i=0; i < array.length(); i++) {\n                    property.addValue(array.get(i));\n                }\n                value = array.opt(0);\n            } else {\n                property.addValue(null);\n                value = null;\n            }\n\n        } else {\n            // single value\n            property.setValue(String.valueOf(value));\n        }\n\n        property.setType((type != null) ? type : this.getType(value));\n\n        return property;\n    }","id":27963,"modified_method":"protected Property createProperty(String name, Object value)\n            throws JSONException {\n        Property property = new Property();\n        property.setName(name);\n\n        // assume simple value\n        if (value instanceof JSONArray) {\n            // multivalue\n            JSONArray array = (JSONArray) value;\n            if (array.length() > 0) {\n                for (int i = 0; i < array.length(); i++) {\n                    property.addValue(array.get(i));\n                }\n                value = array.opt(0);\n            } else {\n                property.addValue(null);\n                value = null;\n            }\n\n        } else {\n            // single value\n            property.setValue(String.valueOf(value));\n        }\n        // set type\n        property.setType(getType(value));\n\n        return property;\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testPropertiesTwoSingleValue() throws IOException, JSONException {\n        List<Property> properties = new ArrayList<Property>();\n        Property prop = new Property();\n        prop.setName(\"p1\");\n        prop.setValue(\"v1\");\n        properties.add(prop);\n        prop = new Property();\n        prop.setName(\"p2\");\n        prop.setValue(\"v2\");\n        properties.add(prop);\n\n        String json = \"{ \\\"name\\\": \\\"test\\\", \\\"properties\\\": \" + this.toJsonObject(properties) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(new HashSet<Property>(properties), new HashSet<Property>(node.getProperties()));\n    }","id":27964,"modified_method":"public void testPropertiesTwoSingleValue() throws IOException, JSONException {\n        List<Property> properties = new ArrayList<Property>();\n        Property prop = new Property();\n        prop.setName(\"p1\");\n        prop.setValue(\"v1\");\n        properties.add(prop);\n        prop = new Property();\n        prop.setName(\"p2\");\n        prop.setValue(\"v2\");\n        properties.add(prop);\n\n        String json = this.toJsonObject(properties).toString();\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(new HashSet<Property>(properties), new HashSet<Property>(node.getProperties()));\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testPropertiesSingleValue() throws IOException, JSONException {\n        List<Property> properties = new ArrayList<Property>();\n        Property prop = new Property();\n        prop.setName(\"p1\");\n        prop.setValue(\"v1\");\n        properties.add(prop);\n\n        String json = \"{ \\\"name\\\": \\\"test\\\",  \\\"properties\\\": \" + this.toJsonObject(properties) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(new HashSet<Property>(properties), new HashSet<Property>(node.getProperties()));\n    }","id":27965,"modified_method":"public void testPropertiesSingleValue() throws IOException, JSONException {\n        List<Property> properties = new ArrayList<Property>();\n        Property prop = new Property();\n        prop.setName(\"p1\");\n        prop.setValue(\"v1\");\n        properties.add(prop);\n        \n        String json = this.toJsonObject(properties).toString();\n        \n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(new HashSet<Property>(properties), new HashSet<Property>(node.getProperties()));\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testPropertiesMultiValue() throws IOException, JSONException {\n        List<Property> properties = new ArrayList<Property>();\n        Property prop = new Property();\n        prop.setName(\"p1\");\n        prop.addValue(\"v1\");\n        properties.add(prop);\n\n        String json = \"{ \\\"name\\\": \\\"test\\\", \\\"properties\\\": \" + this.toJsonObject(properties) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(new HashSet<Property>(properties), new HashSet<Property>(node.getProperties()));\n    }","id":27966,"modified_method":"public void testPropertiesMultiValue() throws IOException, JSONException {\n        List<Property> properties = new ArrayList<Property>();\n        Property prop = new Property();\n        prop.setName(\"p1\");\n        prop.addValue(\"v1\");\n        properties.add(prop);\n\n        String json = this.toJsonObject(properties).toString();\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(new HashSet<Property>(properties), new HashSet<Property>(node.getProperties()));\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testDefaultPrimaryNodeTypeWithSurroundWhitespace() throws IOException {\n        String name = \"test\";\n        String json = \"     { \\\"name\\\": \\\"\" + name + \"\\\" }     \";\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(name, node.getName());\n        assertNull(node.getPrimaryNodeType());\n        assertNull(\"No mixins expected\", node.getMixinNodeTypes());\n        assertNull(\"No properties expected\", node.getProperties());\n        assertNull(\"No children expected\", node.getChildren());\n    }","id":27967,"modified_method":"public void testDefaultPrimaryNodeTypeWithSurroundWhitespace() throws IOException {\n        String json = \"     {  }     \";\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertNull(node.getPrimaryNodeType());\n        assertNull(\"No mixins expected\", node.getMixinNodeTypes());\n        assertNull(\"No properties expected\", node.getProperties());\n        assertNull(\"No children expected\", node.getChildren());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testChildWithProperty() throws IOException, JSONException {\n        List<Node> nodes = new ArrayList<Node>();\n        Node child = new Node();\n        child.setName(\"c1\");\n        Property prop = new Property();\n        prop.setName(\"c1p1\");\n        prop.setValue(\"c1v1\");\n        child.addProperty(prop);\n        nodes.add(child);\n\n        String json = \"{ \\\"name\\\": \\\"test\\\", \\\"nodes\\\": \" + this.toJsonArray(nodes) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(nodes, node.getChildren());\n    }","id":27968,"modified_method":"public void testChildWithProperty() throws IOException, JSONException {\n        List<Node> nodes = new ArrayList<Node>();\n        Node child = new Node();\n        child.setName(\"c1\");\n        Property prop = new Property();\n        prop.setName(\"c1p1\");\n        prop.setValue(\"c1v1\");\n        child.addProperty(prop);\n        nodes.add(child);\n\n        String json = this.toJsonObject(nodes).toString();\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(nodes, node.getChildren());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testMixinNodeTypes1() throws JSONException, IOException {\n        Set<Object> mixins = this.toSet(new Object[]{ \"xyz:mix1\" });\n        String json = \"{ \\\"name\\\": \\\"test\\\", \\\"mixinNodeTypes\\\": \" + this.toJsonArray(mixins) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(mixins, node.getMixinNodeTypes());\n    }","id":27969,"modified_method":"public void testMixinNodeTypes1() throws JSONException, IOException {\n        Set<Object> mixins = this.toSet(new Object[]{ \"xyz:mix1\" });\n        String json = \"{ \\\"jcr:mixinTypes\\\": \" + this.toJsonArray(mixins) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(mixins, node.getMixinNodeTypes());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"private Object toJsonObject(Property property) throws JSONException {\n        if (!property.isMultiValue() && PropertyType.TYPENAME_STRING.equals(property.getType())) {\n            return this.toJsonObject(property.getValue());\n        }\n        JSONObject obj = new JSONObject();\n        if (property.isMultiValue()) {\n            obj.putOpt(\"value\", this.toJsonArray(property.getValues()));\n        } else {\n            obj.putOpt(\"value\", this.toJsonObject(property.getValue()));\n        }\n        obj.putOpt(\"type\", property.getType());\n\n        return obj;\n    }","id":27970,"modified_method":"private Object toJsonObject(Property property) throws JSONException {\n        if (!property.isMultiValue() && PropertyType.TYPENAME_STRING.equals(property.getType())) {\n            return this.toJsonObject(property.getValue());\n        }\n        Object obj;\n        if (property.isMultiValue()) {\n            obj = this.toJsonArray(property.getValues());\n        } else {\n            obj = this.toJsonObject(property.getValue());\n        }\n\n        return obj;\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testExplicitePrimaryNodeType() throws IOException {\n        String name = \"test\";\n        String type = \"xyz:testType\";\n        String json = \"{ \\\"name\\\": \\\"\" + name + \"\\\", \\\"primaryNodeType\\\": \\\"\" + type + \"\\\" }\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(type, node.getPrimaryNodeType());\n    }","id":27971,"modified_method":"public void testExplicitePrimaryNodeType() throws IOException {\n        String type = \"xyz:testType\";\n        String json = \"{ \\\"jcr:primaryType\\\": \\\"\" + type + \"\\\" }\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(type, node.getPrimaryNodeType());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testPropertiesNone() throws IOException, JSONException {\n        List<Property> properties = null;\n        String json = \"{ \\\"name\\\": \\\"test\\\", \\\"properties\\\": \" + this.toJsonObject(properties) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(properties, node.getProperties());\n    }","id":27972,"modified_method":"public void testPropertiesNone() throws IOException, JSONException {\n        List<Property> properties = null;\n        String json = \"{ \\\"properties\\\": \" + this.toJsonObject(properties) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(properties, node.getProperties());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"private JSONObject toJsonObject(Node node) throws JSONException {\n        JSONObject obj = new JSONObject();\n\n        obj.putOpt(\"name\", node.getName());\n        \n        if (node.getPrimaryNodeType() != null) {\n            obj.putOpt(\"primaryNodeType\", node.getPrimaryNodeType());\n        }\n\n        if (node.getMixinNodeTypes() != null) {\n            obj.putOpt(\"mixinNodeTypes\", this.toJsonArray(node.getMixinNodeTypes()));\n        }\n\n        if (node.getProperties() != null) {\n            obj.putOpt(\"properties\", this.toJsonObject(node.getProperties()));\n        }\n\n        if (node.getChildren() != null) {\n            obj.putOpt(\"nodes\", this.toJsonArray(node.getChildren()));\n        }\n\n        return obj;\n    }","id":27973,"modified_method":"private JSONObject toJsonObject(Node node) throws JSONException {\n        JSONObject obj = new JSONObject();\n\n        if (node.getPrimaryNodeType() != null) {\n            obj.putOpt(\"jcr:primaryType\", node.getPrimaryNodeType());\n        }\n\n        if (node.getMixinNodeTypes() != null) {\n            obj.putOpt(\"jcr:mixinTypes\", this.toJsonArray(node.getMixinNodeTypes()));\n        }\n\n        if (node.getProperties() != null) {\n            for (Property prop : node.getProperties()) {\n                obj.put(prop.getName(), toJsonObject(prop));\n            }\n        }\n\n        if (node.getChildren() != null) {\n            for (Node child : node.getChildren()) {\n                obj.put(child.getName(), toJsonObject(child));\n            }\n        }\n\n        return obj;\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testMixinNodeTypes2() throws JSONException, IOException {\n        Set<Object> mixins = this.toSet(new Object[]{ \"xyz:mix1\", \"abc:mix2\" });\n        String json = \"{ \\\"name\\\": \\\"test\\\", \\\"mixinNodeTypes\\\": \" + this.toJsonArray(mixins) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(mixins, node.getMixinNodeTypes());\n    }","id":27974,"modified_method":"public void testMixinNodeTypes2() throws JSONException, IOException {\n        Set<Object> mixins = this.toSet(new Object[]{ \"xyz:mix1\", \"abc:mix2\" });\n        String json = \"{ \\\"jcr:mixinTypes\\\": \" + this.toJsonArray(mixins) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(mixins, node.getMixinNodeTypes());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testChildrenNone() throws IOException, JSONException {\n        List<Node> nodes = null;\n        String json = \"{ \\\"name\\\": \\\"test\\\", \\\"nodes\\\": \" + this.toJsonObject(nodes) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(nodes, node.getChildren());\n    }","id":27975,"modified_method":"public void testChildrenNone() throws IOException, JSONException {\n        List<Node> nodes = null;\n        String json = this.toJsonObject(nodes).toString();\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(nodes, node.getChildren());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testPropertiesMultiValueEmpty() throws IOException, JSONException {\n        List<Property> properties = new ArrayList<Property>();\n        Property prop = new Property();\n        prop.setName(\"p1\");\n        prop.addValue(null); // empty multivalue property\n        properties.add(prop);\n\n        String json = \"{ \\\"name\\\": \\\"test\\\", \\\"properties\\\": \" + this.toJsonObject(properties) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(new HashSet<Property>(properties), new HashSet<Property>(node.getProperties()));\n    }","id":27976,"modified_method":"public void testPropertiesMultiValueEmpty() throws IOException, JSONException {\n        List<Property> properties = new ArrayList<Property>();\n        Property prop = new Property();\n        prop.setName(\"p1\");\n        prop.addValue(null); // empty multivalue property\n        properties.add(prop);\n\n        String json = this.toJsonObject(properties).toString();\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(new HashSet<Property>(properties), new HashSet<Property>(node.getProperties()));\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testTwoChildren() throws IOException, JSONException {\n        List<Node> nodes = new ArrayList<Node>();\n        Node child = new Node();\n        child.setName(\"p1\");\n        nodes.add(child);\n        child = new Node();\n        child.setName(\"p2\");\n        nodes.add(child);\n\n        String json = \"{ \\\"name\\\": \\\"test\\\", \\\"nodes\\\": \" + this.toJsonArray(nodes) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(nodes, node.getChildren());\n    }","id":27977,"modified_method":"public void testTwoChildren() throws IOException, JSONException {\n        List<Node> nodes = new ArrayList<Node>();\n        Node child = new Node();\n        child.setName(\"p1\");\n        nodes.add(child);\n        child = new Node();\n        child.setName(\"p2\");\n        nodes.add(child);\n\n        String json = this.toJsonObject(nodes).toString();\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(nodes, node.getChildren());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testDefaultPrimaryNodeTypeWithoutEnclosingBracesWithSurroundWhitespace() throws IOException {\n        String name = \"test\";\n        String json = \"       \\\"name\\\": \\\"\" + name + \"\\\"      \";\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(name, node.getName());\n        assertNull(node.getPrimaryNodeType());\n        assertNull(\"No mixins expected\", node.getMixinNodeTypes());\n        assertNull(\"No properties expected\", node.getProperties());\n        assertNull(\"No children expected\", node.getChildren());\n    }","id":27978,"modified_method":"public void testDefaultPrimaryNodeTypeWithoutEnclosingBracesWithSurroundWhitespace() throws IOException {\n        String json = \"             \";\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertNull(node.getPrimaryNodeType());\n        assertNull(\"No mixins expected\", node.getMixinNodeTypes());\n        assertNull(\"No properties expected\", node.getProperties());\n        assertNull(\"No children expected\", node.getChildren());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testChildWithMixin() throws IOException, JSONException {\n        List<Node> nodes = new ArrayList<Node>();\n        Node child = new Node();\n        child.setName(\"p1\");\n        child.addMixinNodeType(\"p1:mix\");\n        nodes.add(child);\n\n        String json = \"{ \\\"name\\\": \\\"test\\\", \\\"nodes\\\": \" + this.toJsonArray(nodes) + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(nodes, node.getChildren());\n    }","id":27979,"modified_method":"public void testChildWithMixin() throws IOException, JSONException {\n        List<Node> nodes = new ArrayList<Node>();\n        Node child = new Node();\n        child.setName(\"p1\");\n        child.addMixinNodeType(\"p1:mix\");\n        nodes.add(child);\n\n        String json = this.toJsonObject(nodes).toString();\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(nodes, node.getChildren());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testChild() throws IOException, JSONException {\n        List<Node> nodes = new ArrayList<Node>();\n        Node child = new Node();\n        child.setName(\"p1\");\n        nodes.add(child);\n\n        String json = \"{ \\\"name\\\": \\\"test\\\", \\\"nodes\\\": \" + this.toJsonArray(nodes).toString() + \"}\";\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(nodes, node.getChildren());\n    }","id":27980,"modified_method":"public void testChild() throws IOException, JSONException {\n        List<Node> nodes = new ArrayList<Node>();\n        Node child = new Node();\n        child.setName(\"p1\");\n        nodes.add(child);\n\n        String json = this.toJsonObject(nodes).toString();\n\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(nodes, node.getChildren());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testDefaultPrimaryNodeTypeWithoutEnclosingBraces() throws IOException {\n        String name = \"test\";\n        String json = \"\\\"name\\\": \\\"\" + name + \"\\\"\";\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(name, node.getName());\n        assertNull(node.getPrimaryNodeType());\n        assertNull(\"No mixins expected\", node.getMixinNodeTypes());\n        assertNull(\"No properties expected\", node.getProperties());\n        assertNull(\"No children expected\", node.getChildren());\n    }","id":27981,"modified_method":"public void testDefaultPrimaryNodeTypeWithoutEnclosingBraces() throws IOException {\n        String json = \"\";\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertNull(node.getPrimaryNodeType());\n        assertNull(\"No mixins expected\", node.getMixinNodeTypes());\n        assertNull(\"No properties expected\", node.getProperties());\n        assertNull(\"No children expected\", node.getChildren());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public void testDefaultPrimaryNodeType() throws IOException {\n        String name = \"test\";\n        String json = \"{ \\\"name\\\": \\\"\" + name + \"\\\" }\";\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertEquals(name, node.getName());\n        assertNull(node.getPrimaryNodeType());\n        assertNull(\"No mixins expected\", node.getMixinNodeTypes());\n        assertNull(\"No properties expected\", node.getProperties());\n        assertNull(\"No children expected\", node.getChildren());\n    }","id":27982,"modified_method":"public void testDefaultPrimaryNodeType() throws IOException {\n        String json = \"{}\";\n        Node node = this.parse(json);\n        assertNotNull(\"Expecting node\", node);\n        assertNull(node.getPrimaryNodeType());\n        assertNull(\"No mixins expected\", node.getMixinNodeTypes());\n        assertNull(\"No properties expected\", node.getProperties());\n        assertNull(\"No children expected\", node.getChildren());\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public Loader(ContentLoaderService jcrContentHelper) {\n        this.jcrContentHelper = jcrContentHelper;\n        this.delayedReferences = new HashMap<String, List<String>>();\n        this.delayedBundles = new LinkedList<Bundle>();\n        \n        importProviders = new LinkedHashMap<String, ImportProvider>();\n        importProviders.put(EXT_JCR_XML, null);\n        importProviders.put(EXT_JSON, JsonReader.PROVIDER);\n        importProviders.put(EXT_XJSON, XJsonReader.PROVIDER);\n        importProviders.put(EXT_XML, XmlReader.PROVIDER);\n    }","id":27983,"modified_method":"public Loader(ContentLoaderService jcrContentHelper) {\n        this.jcrContentHelper = jcrContentHelper;\n        this.delayedReferences = new HashMap<String, List<String>>();\n        this.delayedBundles = new LinkedList<Bundle>();\n        \n        importProviders = new LinkedHashMap<String, ImportProvider>();\n        importProviders.put(EXT_JCR_XML, null);\n        importProviders.put(EXT_JSON, JsonReader.PROVIDER);\n        importProviders.put(EXT_XJSON, JsonReader.PROVIDER);\n        importProviders.put(EXT_XML, XmlReader.PROVIDER);\n    }","commit_id":"928ca67163083cebbac5f52cf0886e796457259d","url":"https://github.com/apache/sling"},{"original_method":"public static PsiClassType[] collectUnhandledExceptions(PsiElement element, PsiElement topElement) {\n    final Set<PsiClassType> set = collectUnhandledExceptions(element, topElement, null);\n    return set == null ? PsiClassType.EMPTY_ARRAY : (PsiClassType[])set.toArray(new PsiClassType[set.size()]);\n  }","id":27984,"modified_method":"public static PsiClassType[] collectUnhandledExceptions(PsiElement element, PsiElement topElement) {\n    final Set<PsiClassType> set = collectUnhandledExceptions(element, topElement, null);\n    return set == null ? PsiClassType.EMPTY_ARRAY : set.toArray(new PsiClassType[set.size()]);\n  }","commit_id":"b53a4b691a6b27b01a7f0b9c5c60c8a347319c03","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean isHandledByMethodThrowsClause(PsiMethod method, PsiClassType exceptionType) {\n    final PsiReferenceList throwsList = method.getThrowsList();\n    if (throwsList == null) return false;\n\n    final PsiClassType[] referencedTypes = throwsList.getReferencedTypes();\n    return isHandledBy(exceptionType, referencedTypes);\n  }","id":27985,"modified_method":"public static boolean isHandledByMethodThrowsClause(PsiMethod method, PsiClassType exceptionType) {\n    final PsiClassType[] referencedTypes = method.getThrowsList().getReferencedTypes();\n    return isHandledBy(exceptionType, referencedTypes);\n  }","commit_id":"b53a4b691a6b27b01a7f0b9c5c60c8a347319c03","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static PsiClassType[] getUnhandledExceptions(PsiMethod method,\n                                                       PsiElement element,\n                                                       PsiElement topElement,\n                                                       PsiSubstitutor substitutor) {\n    if (method == null || isArrayClone(method, element)) {\n      return PsiClassType.EMPTY_ARRAY;\n    }\n    final PsiReferenceList throwsList = method.getThrowsList();\n    if (throwsList == null) {\n      return PsiClassType.EMPTY_ARRAY;\n    }\n    final PsiClassType[] referencedTypes = throwsList.getReferencedTypes();\n    if (referencedTypes != null && referencedTypes.length != 0) {\n      List<PsiClassType> result = new ArrayList<PsiClassType>();\n\n      for (PsiClassType referencedType : referencedTypes) {\n        final PsiType type = substitutor.substitute(referencedType);\n        if (!(type instanceof PsiClassType)) continue;\n        PsiClassType classType = (PsiClassType)type;\n        PsiClass exceptionClass = ((PsiClassType)type).resolve();\n        if (exceptionClass == null) continue;\n\n        if (isUncheckedException(classType)) continue;\n        if (isHandled(element, classType, topElement)) continue;\n\n        result.add((PsiClassType)type);\n      }\n\n      return result.toArray(new PsiClassType[result.size()]);\n    }\n    return PsiClassType.EMPTY_ARRAY;\n  }","id":27986,"modified_method":"private static PsiClassType[] getUnhandledExceptions(PsiMethod method,\n                                                       PsiElement element,\n                                                       PsiElement topElement,\n                                                       PsiSubstitutor substitutor) {\n    if (method == null || isArrayClone(method, element)) {\n      return PsiClassType.EMPTY_ARRAY;\n    }\n    final PsiClassType[] referencedTypes = method.getThrowsList().getReferencedTypes();\n    if (referencedTypes.length > 0) {\n      List<PsiClassType> result = new ArrayList<PsiClassType>();\n\n      for (PsiClassType referencedType : referencedTypes) {\n        final PsiType type = substitutor.substitute(referencedType);\n        if (!(type instanceof PsiClassType)) continue;\n        PsiClassType classType = (PsiClassType)type;\n        PsiClass exceptionClass = ((PsiClassType)type).resolve();\n        if (exceptionClass == null) continue;\n\n        if (isUncheckedException(classType)) continue;\n        if (isHandled(element, classType, topElement)) continue;\n\n        result.add((PsiClassType)type);\n      }\n\n      return result.toArray(new PsiClassType[result.size()]);\n    }\n    return PsiClassType.EMPTY_ARRAY;\n  }","commit_id":"b53a4b691a6b27b01a7f0b9c5c60c8a347319c03","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void appendMethodHeader(@NonNls StringBuffer buffer, final int indentLevel) {\n    ClsDocCommentImpl docComment = (ClsDocCommentImpl)getDocComment();\n    if (docComment != null) {\n      docComment.appendMirrorText(indentLevel, buffer);\n      goNextLine(indentLevel, buffer);\n    }\n    ((ClsElementImpl)getModifierList()).appendMirrorText(indentLevel, buffer);\n    ((ClsElementImpl)getTypeParameterList()).appendMirrorText(indentLevel, buffer);\n    if (!isConstructor()) {\n      ((ClsElementImpl)getReturnTypeElement()).appendMirrorText(indentLevel, buffer);\n      buffer.append(' ');\n    }\n    ((ClsElementImpl)getNameIdentifier()).appendMirrorText(indentLevel, buffer);\n    ((ClsElementImpl)getParameterList()).appendMirrorText(indentLevel, buffer);\n    ((ClsElementImpl)getThrowsList()).appendMirrorText(indentLevel, buffer);\n\n    PsiAnnotationMemberValue defaultValue = getDefaultValue();\n    if (defaultValue != null) {\n      buffer.append(\" default \");\n      ((ClsElementImpl)defaultValue).appendMirrorText(indentLevel, buffer);\n    }\n  }","id":27987,"modified_method":"private void appendMethodHeader(@NonNls StringBuffer buffer, final int indentLevel) {\n    ClsDocCommentImpl docComment = (ClsDocCommentImpl)getDocComment();\n    if (docComment != null) {\n      docComment.appendMirrorText(indentLevel, buffer);\n      goNextLine(indentLevel, buffer);\n    }\n    ((ClsElementImpl)getModifierList()).appendMirrorText(indentLevel, buffer);\n    ((ClsElementImpl)getTypeParameterList()).appendMirrorText(indentLevel, buffer);\n    if (!isConstructor()) {\n      ((ClsElementImpl)getReturnTypeElement()).appendMirrorText(indentLevel, buffer);\n      buffer.append(' ');\n    }\n    ((ClsElementImpl)getNameIdentifier()).appendMirrorText(indentLevel, buffer);\n    ((ClsElementImpl)getParameterList()).appendMirrorText(indentLevel, buffer);\n    final PsiReferenceList throwsList = getThrowsList();\n    if (throwsList.getReferencedTypes().length > 0) {\n      buffer.append(' ');\n      ((ClsElementImpl)throwsList).appendMirrorText(indentLevel, buffer);\n    }\n\n    PsiAnnotationMemberValue defaultValue = getDefaultValue();\n    if (defaultValue != null) {\n      buffer.append(\" default \");\n      ((ClsElementImpl)defaultValue).appendMirrorText(indentLevel, buffer);\n    }\n  }","commit_id":"04f3c9f6b905c548b64408e36ba0871639130905","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static List<PsiClassType> collectSubstituted(PsiSubstitutor substitutor, PsiClassType[] thrownExceptions) {\n    final List<PsiClassType> ex = new ArrayList<PsiClassType>();\n    for (PsiClassType thrownException : thrownExceptions) {\n      final PsiType psiType = substitutor.substitute(thrownException);\n      if (psiType instanceof PsiClassType) {\n        ex.add((PsiClassType)psiType);\n      }\n    }\n    return ex;\n  }","id":27988,"modified_method":"public static List<PsiClassType> collectSubstituted(PsiSubstitutor substitutor, PsiClassType[] thrownExceptions) {\n    final List<PsiClassType> ex = new ArrayList<PsiClassType>();\n    for (PsiClassType thrownException : thrownExceptions) {\n      final PsiType psiType = substitutor.substitute(thrownException);\n      if (psiType instanceof PsiClassType) {\n        ex.add((PsiClassType)psiType);\n      }\n    }\n    return ex;\n  }","commit_id":"59af6284bdf470d6648f3438001c04e2abd04a01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void retainExceptions(List<PsiClassType> ex, List<PsiClassType> thrownEx) {\n    final List<PsiClassType> replacement = new ArrayList<PsiClassType>();\n    for (Iterator<PsiClassType> iterator = ex.iterator(); iterator.hasNext(); ) {\n      PsiClassType classType = iterator.next();\n      boolean found = false;\n      for (PsiClassType psiClassType : thrownEx) {\n        if (psiClassType.isAssignableFrom(classType)) {\n          found = true;\n          break;\n        } else if (classType.isAssignableFrom(psiClassType)) {\n          replacement.add(psiClassType);\n          iterator.remove();\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        iterator.remove();\n      }\n    }\n    ex.addAll(replacement);\n  }","id":27989,"modified_method":"public static void retainExceptions(List<PsiClassType> ex, List<PsiClassType> thrownEx) {\n    final List<PsiClassType> replacement = new ArrayList<PsiClassType>();\n    for (Iterator<PsiClassType> iterator = ex.iterator(); iterator.hasNext(); ) {\n      PsiClassType classType = iterator.next();\n      boolean found = false;\n      for (PsiClassType psiClassType : thrownEx) {\n        if (psiClassType.isAssignableFrom(classType)) {\n          found = true;\n          break;\n        } else if (classType.isAssignableFrom(psiClassType)) {\n          replacement.add(psiClassType);\n          iterator.remove();\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        iterator.remove();\n      }\n    }\n    ex.addAll(replacement);\n  }","commit_id":"59af6284bdf470d6648f3438001c04e2abd04a01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void substituteThrows(@NotNull JVMElementFactory factory,\n                                       @NotNull PsiReferenceList sourceThrowsList,\n                                       @NotNull PsiReferenceList targetThrowsList,\n                                       @NotNull PsiSubstitutor substitutor, \n                                       @NotNull PsiMethod sourceMethod) {\n    for (PsiClassType thrownType : sourceThrowsList.getReferencedTypes()) {\n      targetThrowsList.add(factory.createReferenceElementByType((PsiClassType)substituteType(substitutor, thrownType, sourceMethod)));\n    }\n  }","id":27990,"modified_method":"private static void substituteThrows(@NotNull JVMElementFactory factory,\n                                       @NotNull PsiReferenceList targetThrowsList,\n                                       @NotNull PsiSubstitutor substitutor,\n                                       @NotNull PsiMethod sourceMethod, \n                                       List<PsiClassType> thrownTypes) {\n    for (PsiClassType thrownType : thrownTypes) {\n      targetThrowsList.add(factory.createReferenceElementByType((PsiClassType)substituteType(substitutor, thrownType, sourceMethod)));\n    }\n  }","commit_id":"59af6284bdf470d6648f3438001c04e2abd04a01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static PsiMethod substituteGenericMethod(@NotNull PsiMethod sourceMethod,\n                                                  @NotNull PsiSubstitutor substitutor,\n                                                  @Nullable PsiElement target) {\n    final Project project = sourceMethod.getProject();\n    final JVMElementFactory factory = getFactory(sourceMethod, target);\n    final JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(project);\n\n    try {\n      final PsiMethod resultMethod = createMethod(factory, sourceMethod, target);\n      copyDocComment(sourceMethod, resultMethod);\n      copyModifiers(sourceMethod.getModifierList(), resultMethod.getModifierList());\n      final PsiSubstitutor collisionResolvedSubstitutor =\n        substituteTypeParameters(factory, target, sourceMethod.getTypeParameterList(), resultMethod.getTypeParameterList(), substitutor, sourceMethod);\n      substituteReturnType(PsiManager.getInstance(project), resultMethod, sourceMethod.getReturnType(), collisionResolvedSubstitutor);\n      substituteParameters(factory, codeStyleManager, sourceMethod.getParameterList(), resultMethod.getParameterList(), collisionResolvedSubstitutor, target);\n      substituteThrows(factory, sourceMethod.getThrowsList(), resultMethod.getThrowsList(), collisionResolvedSubstitutor, sourceMethod);\n      return resultMethod;\n    }\n    catch (IncorrectOperationException e) {\n      LOG.error(e);\n      return sourceMethod;\n    }\n  }","id":27991,"modified_method":"public static PsiMethod substituteGenericMethod(@NotNull PsiMethod sourceMethod,\n                                                  @NotNull PsiSubstitutor substitutor,\n                                                  @Nullable PsiElement target) {\n    final Project project = sourceMethod.getProject();\n    final JVMElementFactory factory = getFactory(sourceMethod, target);\n    final JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(project);\n\n    try {\n      final PsiMethod resultMethod = createMethod(factory, sourceMethod, target);\n      copyDocComment(sourceMethod, resultMethod);\n      copyModifiers(sourceMethod.getModifierList(), resultMethod.getModifierList());\n      final PsiSubstitutor collisionResolvedSubstitutor =\n        substituteTypeParameters(factory, target, sourceMethod.getTypeParameterList(), resultMethod.getTypeParameterList(), substitutor, sourceMethod);\n      substituteReturnType(PsiManager.getInstance(project), resultMethod, sourceMethod.getReturnType(), collisionResolvedSubstitutor);\n      substituteParameters(factory, codeStyleManager, sourceMethod.getParameterList(), resultMethod.getParameterList(), collisionResolvedSubstitutor, target);\n      final List<PsiClassType> thrownTypes = ExceptionUtil.collectSubstituted(collisionResolvedSubstitutor, sourceMethod.getThrowsList().getReferencedTypes());\n      if (target instanceof PsiClass) {\n        final PsiClass[] supers = ((PsiClass)target).getSupers();\n        for (PsiClass aSuper : supers) {\n          final PsiMethod psiMethod = aSuper.findMethodBySignature(sourceMethod, true);\n          if (psiMethod != null && psiMethod != sourceMethod) {\n            ExceptionUtil.retainExceptions(thrownTypes, ExceptionUtil.collectSubstituted(TypeConversionUtil.getSuperClassSubstitutor(aSuper, (PsiClass)target, PsiSubstitutor.EMPTY), psiMethod.getThrowsList().getReferencedTypes()));\n          }\n        }\n      }\n      substituteThrows(factory, resultMethod.getThrowsList(), collisionResolvedSubstitutor, sourceMethod, thrownTypes);\n      return resultMethod;\n    }\n    catch (IncorrectOperationException e) {\n      LOG.error(e);\n      return sourceMethod;\n    }\n  }","commit_id":"59af6284bdf470d6648f3438001c04e2abd04a01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n\t * Concrete subclasses can override this for custom sort and filter behavior. Gets called after all completion\n\t * proposals have been collected.\n\t * \n\t * The default behavior of this implementation is to sort duplicates and to trim matching\n\t * <code>ICompletionProposal#displayString<\/code> with matching prefix values.\n\t * \n\t * @see #sortAndFilter(List, EObject, String, IDocument, int, AbstractNode, LeafNode)\n\t */\n\tprotected List<? extends ICompletionProposal> doSortAndFilter(\n\t\t\tList<? extends ICompletionProposal> completionProposalList, EObject model, String prefix,\n\t\t\tIDocument document, int offset) {\n\n\t\tMap<String, ICompletionProposal> displayString2ICompletionProposalMap = new HashMap<String, ICompletionProposal>();\n\n\t\tfor (Iterator<? extends ICompletionProposal> iterator = completionProposalList.iterator(); iterator.hasNext();) {\n\n\t\t\tICompletionProposal completionProposal = iterator.next();\n\n\t\t\t// filter duplicate displayString\n\t\t\tif (!displayString2ICompletionProposalMap.containsKey(completionProposal.getDisplayString())) {\n\n\t\t\t\tdisplayString2ICompletionProposalMap.put(completionProposal.getDisplayString(), completionProposal);\n\n\t\t\t\tif (model != null) {\n\n\t\t\t\t\t// filter by prefix \n\t\t\t\t\t// TODO: this works only if we have access to the corresponding grammarelement \n\t\t\t\t\tif (completionProposal instanceof XtextCompletionProposal) {\n\n\t\t\t\t\t\tXtextCompletionProposal xtextCompletionProposal = (XtextCompletionProposal) completionProposal;\n\n\t\t\t\t\t\tAbstractElement abstractElement = null;\n\n\t\t\t\t\t\tif (xtextCompletionProposal.getAbstractElement() instanceof Keyword ||\n\t\t\t\t\t\t\txtextCompletionProposal.getAbstractElement() instanceof CrossReference) {\n\t\t\t\t\t\t\tabstractElement = GrammarUtil.containingAssignment(xtextCompletionProposal.getAbstractElement());\n\t\t\t\t\t\t} \n\t\t\t\t\t\t\n\t\t\t\t\t\tif (null==abstractElement) {\n\t\t\t\t\t\t\tabstractElement = xtextCompletionProposal.getAbstractElement();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tCompositeNode rootNode = NodeUtil.getRootNode(model);\n\n\t\t\t\t\t\tAbstractNode lastCompleteNode = ParseTreeUtil.getLastCompleteNodeByOffset(rootNode, offset);\n\n\t\t\t\t\t\tLeafNode currentLeafNode = ParseTreeUtil.getCurrentNodeByOffset(rootNode, offset);\n\n\t\t\t\t\t\tEObject grammarElement =  GrammarUtil.containingAssignment(currentLeafNode.getGrammarElement());\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (null==grammarElement) {\n\t\t\t\t\t\t\tgrammarElement = currentLeafNode.getGrammarElement();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tboolean atTheEndOfTheLastCompleteNode = currentLeafNode == lastCompleteNode;\n\t\t\t\t\t\t\n\t\t\t\t\t\tboolean candidateToCompare \t\t\t= false;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// means if we are at the end of a complete token we want to filter only equal grammarelements (not the 'next' ones)\n\t\t\t\t\t\tif (atTheEndOfTheLastCompleteNode && abstractElement.equals(grammarElement)) {\n\t\t\t\t\t\t\tcandidateToCompare = true;\n\t\t\t\t\t\t} else if (!atTheEndOfTheLastCompleteNode ) {\n\t\t\t\t\t\t\tcandidateToCompare = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif ( candidateToCompare && (!\"\".equals(prefix.trim()) && !completionProposal.getDisplayString().toUpperCase().startsWith(prefix.toUpperCase()))) {\n\t\t\t\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\t\t\t\tlogger.debug(\"filter completionProposal '\" + completionProposal + \"'\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titerator.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\tlogger.debug(\"filter duplicate completionProposal '\" + completionProposal + \"'\");\n\t\t\t\t}\n\n\t\t\t\titerator.remove();\n\t\t\t}\n\t\t}\n\n\t\treturn completionProposalList;\n\t}","id":27992,"modified_method":"/**\n\t * Concrete subclasses can override this for custom sort and filter behavior. Called right after all completion\n\t * proposals have been collected.\n\t * \n\t * The default behavior of this implementation is to sort duplicates and to trim matching\n\t * <code>ICompletionProposal#displayString<\/code> with matching prefix values.\n\t * \n\t * @see #sortAndFilter(List, EObject, String, IDocument, int, AbstractNode, LeafNode)\n\t */\n\tprotected List<? extends ICompletionProposal> doSortAndFilter(\n\t\t\tList<? extends ICompletionProposal> completionProposalList, EObject model, String prefix,\n\t\t\tIDocument document, int offset) {\n\n\t\tMap<String, ICompletionProposal> displayString2ICompletionProposalMap = new HashMap<String, ICompletionProposal>();\n\n\t\tfor (Iterator<? extends ICompletionProposal> iterator = completionProposalList.iterator(); iterator.hasNext();) {\n\n\t\t\tICompletionProposal completionProposal = iterator.next();\n\n\t\t\t// filter duplicate\n\t\t\tif (!displayString2ICompletionProposalMap.containsKey(completionProposal.getDisplayString())) {\n\n\t\t\t\tdisplayString2ICompletionProposalMap.put(completionProposal.getDisplayString(), completionProposal);\n\n\t\t\t\t// filter by prefix \n\t\t\t\tif (isFiltered(model, prefix, completionProposal)) {\n\t\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\t\tlogger.debug(\"filter completionProposal '\" + completionProposal + \"'\");\n\t\t\t\t\t}\n\t\t\t\t\titerator.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\tlogger.debug(\"filter duplicate completionProposal '\" + completionProposal + \"'\");\n\t\t\t\t}\n\t\t\t\titerator.remove();\n\t\t\t}\n\t\t}\n\n\t\tCollections.sort(completionProposalList, PROPOSAL_COMPARATOR);\n\t\t\n\t\treturn completionProposalList;\n\t}","commit_id":"683549db652665646a12f40a177cda9c21c15897","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * Concrete subclasses can override this to provide custom lookup behaviour for <code>CrossReference<\/code>. This\n\t * implementation delegates to the injected LinkingService\n\t * \n\t * @return a list of <code>ICompletionProposal<\/code> matching the given assignment\n\t */\n\tprotected List<? extends ICompletionProposal> lookupCrossReference(CrossReference crossReference, EObject model,\n\t\t\tString prefix, int offset) {\n\n\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\tif (linkingCandidatesService != null) {\n\t\t\t\n\t\t\tfinal XtextResource xtextResource = (XtextResource) model.eResource();\n\t\t\tfinal ParserRule containingParserRule = GrammarUtil.containingParserRule(crossReference);\n\t\t\tfinal EClass eClass = xtextResource.getElementFactory().getEClass(GrammarUtil.getReturnTypeName(containingParserRule));\n\t\t\tfinal EReference ref = GrammarUtil.getReference(crossReference, eClass);\n\t\t\tfinal Iterable<IScopedElement> candidates = linkingCandidatesService.getLinkingCandidates(model, ref);\n\t\t\tfinal String trimmedPrefix = prefix.trim();\n\t\t\tfor (IScopedElement candidate : candidates) {\n\t\t\t\tif (isCandidateMatchingPrefix(model, ref, candidate, trimmedPrefix)) {\n\t\t\t\t\tcompletionProposalList.add(createCompletionProposal(crossReference, model, candidate.name(), offset));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn completionProposalList;\n\t}","id":27993,"modified_method":"/**\n\t * Concrete subclasses can override this to provide custom lookup behaviour for <code>CrossReference<\/code>. This\n\t * implementation delegates to the injected LinkingService\n\t * \n\t * @return a list of <code>ICompletionProposal<\/code> matching the given assignment\n\t */\n\tprotected List<? extends ICompletionProposal> lookupCrossReference(CrossReference crossReference, EObject model,\n\t\t\tString prefix, int offset) {\n\n\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\tif (linkingCandidatesService != null) {\n\t\t\t\n\t\t\tXtextResource xtextResource = (XtextResource) model.eResource();\n\t\t\t\n\t\t\tParserRule containingParserRule = GrammarUtil.containingParserRule(crossReference);\n\t\t\t\n\t\t\tEClass eClass = xtextResource.getElementFactory().\n\t\t\t\tgetEClass(GrammarUtil.getReturnTypeName(containingParserRule));\n\t\t\t\n\t\t\tEReference ref = GrammarUtil.getReference(crossReference, eClass);\n\t\t\t\n\t\t\tIterable<IScopedElement> candidates = linkingCandidatesService.getLinkingCandidates(model, ref);\n\t\t\t\n\t\t\tString trimmedPrefix = prefix.trim();\n\t\t\t\n\t\t\tfor (IScopedElement candidate : candidates) {\n\t\t\t\tif (isCandidateMatchingPrefix(model, ref, candidate, trimmedPrefix)) {\n\t\t\t\t\tcompletionProposalList.add(\n\t\t\t\t\t\t\tcreateCompletionProposal(crossReference, model, candidate.name(), offset));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn completionProposalList;\n\t}","commit_id":"683549db652665646a12f40a177cda9c21c15897","url":"https://github.com/eclipse/xtext"},{"original_method":"protected String calculatePrefix(ITextViewer viewer, final int offset, LeafNode currentLeafNode) {\n\n\t\tif (currentLeafNode == null)\n\t\t\treturn \"\";\n\n\t\tString prefix = \"\";\n\t\tStyledText textWidget = viewer.getTextWidget();\n\t\tif (textWidget.getCharCount() > 0) {\n\t\t\tint boundedOffset = Math.min(offset, textWidget.getCharCount()) - 1;\n\t\t\tif (currentLeafNode.getTotalOffset() <= boundedOffset)\n\t\t\t\tprefix = textWidget.getText(currentLeafNode.getTotalOffset(), boundedOffset);\n\t\t}\n\n\t\t// if cursor is behind a complete keyword, accept any input => empty\n\t\t// prefix\n\t\t// TODO: Find a way to distinguish between keywords like \"+\" or \"-\" and\n\t\t// \"extends\" or \"class\"\n\t\t// in the latter case, the prefix \"\" would not always be sufficient\n\t\tif (currentLeafNode.getGrammarElement() instanceof Keyword && currentLeafNode.getText().equals(prefix)) {\n\t\t\tprefix = \"\";\n\t\t}\n\n\t\treturn prefix;\n\t}","id":27994,"modified_method":"protected String calculatePrefix(ITextViewer viewer, final int offset, AbstractNode abstractNode) {\n\n\t\tif (abstractNode == null)\n\t\t\treturn \"\";\n\n\t\tString prefix = \"\";\n\t\tStyledText textWidget = viewer.getTextWidget();\n\t\tif (textWidget.getCharCount() > 0) {\n\t\t\tint boundedOffset = Math.min(offset, textWidget.getCharCount()) - 1;\n\t\t\tif (abstractNode.getTotalOffset() <= boundedOffset)\n\t\t\t\tprefix = textWidget.getText(abstractNode.getTotalOffset(), boundedOffset);\n\t\t}\n\n\t\t// if cursor is behind a complete keyword, accept any input => empty\n\t\t// prefix\n\t\t// TODO: Find a way to distinguish between keywords like \"+\" or \"-\" and\n\t\t// \"extends\" or \"class\"\n\t\t// in the latter case, the prefix \"\" would not always be sufficient\n\t\tif (abstractNode.getGrammarElement() instanceof Keyword && (abstractNode instanceof LeafNode  && ((LeafNode)abstractNode).getText().equals(prefix))) {\n\t\t\tprefix = \"\";\n\t\t}\n\n\t\treturn prefix;\n\t}","commit_id":"683549db652665646a12f40a177cda9c21c15897","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * computes the possible grammar elements following the one at the given offset and calls the respective methods on\n\t * the proposal provider.\n\t */\n\tpublic ICompletionProposal[] computeCompletionProposals(ITextViewer viewer, final int offset) {\n\n\t\tICompletionProposal[] completionProposals = null;\n\n\t\tif (proposalProvider != null) {\n\n\t\t\tIDocument document = viewer.getDocument();\n\n\t\t\tif (document instanceof IXtextDocument) {\n\n\t\t\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\t\t\tIXtextDocument xtextDocument = (IXtextDocument) document;\n\n\t\t\t\tCompositeNode rootNode = xtextDocument.readOnly(new UnitOfWork<CompositeNode>() {\n\t\t\t\t\tpublic CompositeNode exec(XtextResource resource) throws Exception {\n\t\t\t\t\t\tIParseResult parseResult = resource.getParseResult();\n\t\t\t\t\t\tAssert.isNotNull(parseResult);\n\t\t\t\t\t\treturn parseResult.getRootNode();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tAssert.isNotNull(rootNode);\n\n\t\t\t\tAbstractNode lastCompleteNode = ParseTreeUtil.getLastCompleteNodeByOffset(rootNode, offset);\n\n\t\t\t\tLeafNode currentLeafNode = ParseTreeUtil.getCurrentNodeByOffset(rootNode, offset);\n\n\t\t\t\tString prefix = calculatePrefix(viewer, offset, currentLeafNode);\n\n\t\t\t\tEObject model = lastCompleteNode instanceof AbstractNode ? NodeUtil\n\t\t\t\t\t\t.getNearestSemanticObject((AbstractNode) lastCompleteNode) : lastCompleteNode;\n\n\t\t\t\tSet<AbstractElement> nextValidElementSet = new LinkedHashSet<AbstractElement>();\n\t\t\t\t/**\n\t\t\t\t * in case of a crossreference which isnt linked already we evaluate it again and delegate to\n\t\t\t\t * proposalProvider (again)\n\t\t\t\t */\n\t\t\t\tif (lastCompleteNode.getGrammarElement() instanceof CrossReference && !isLinked(lastCompleteNode)) {\n\t\t\t\t\tnextValidElementSet.add((AbstractElement) lastCompleteNode.getGrammarElement());\n\t\t\t\t\tnextValidElementSet.addAll(ParseTreeUtil.getElementSetValidFromOffset(rootNode, lastCompleteNode,\n\t\t\t\t\t\t\toffset));\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * in case of 'at-the-end' of the previous,completed element we evaluate it again for\n\t\t\t\t * 'right-to-left-backtracking' cases (e.g. for keyword 'kind' kind>|< |=cursorpos)\n\t\t\t\t */\n\t\t\t\telse if (currentLeafNode == lastCompleteNode) {\n\t\t\t\t\tAssignment containingAssignment = GrammarUtil.containingAssignment(lastCompleteNode.getGrammarElement());\n\t\t\t\t\t\n\t\t\t\t\tif (lastCompleteNode.getGrammarElement() instanceof RuleCall && containingAssignment!=null) {\n\t\t\t\t\t\tnextValidElementSet.add(containingAssignment);\n\t\t\t\t\t\tnextValidElementSet.addAll(ParseTreeUtil.getElementSetValidFromOffset(rootNode, lastCompleteNode, offset));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextValidElementSet = ParseTreeUtil.getElementSetValidFromOffset(rootNode, lastCompleteNode, offset);\n\t\t\t\t\t\tnextValidElementSet.add((AbstractElement) lastCompleteNode.getGrammarElement());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnextValidElementSet = ParseTreeUtil\n\t\t\t\t\t\t\t.getElementSetValidFromOffset(rootNode, lastCompleteNode, offset);\n\t\t\t\t}\n\n\t\t\t\tProposalProviderInvokerSwitch proposalProviderInvokerSwitch = new ProposalProviderInvokerSwitch(model,\n\t\t\t\t\t\tdocument, offset, prefix, proposalProvider);\n\n\t\t\t\tfor (List<EObject> resolvedElementOrRuleList : new ProposalCandidateResolverSwitch(nextValidElementSet)) {\n\n\t\t\t\t\tList<ICompletionProposal> collectedCompletionProposalList = proposalProviderInvokerSwitch\n\t\t\t\t\t\t\t.collectCompletionProposalList(resolvedElementOrRuleList);\n\n\t\t\t\t\tcompletionProposalList.addAll(collectedCompletionProposalList);\n\t\t\t\t}\n\t\t\t\tif (completionProposalList != null) {\n\t\t\t\t\tList<? extends ICompletionProposal> processedCompletionProposalList = proposalProvider\n\t\t\t\t\t\t\t.sortAndFilter(completionProposalList, model, prefix, document, offset);\n\t\t\t\t\tcompletionProposals = processedCompletionProposalList.toArray(new ICompletionProposal[] {});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn completionProposals;\n\t}","id":27995,"modified_method":"/**\n\t * computes the possible grammar elements following the one at the given offset and calls the respective methods on\n\t * the proposal provider.\n\t */\n\tpublic ICompletionProposal[] computeCompletionProposals(ITextViewer viewer, final int offset) {\n\n\t\tICompletionProposal[] completionProposals = null;\n\n\t\tIDocument document = viewer.getDocument();\n\n\t\tif (document instanceof IXtextDocument) {\n\n\t\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\t\tIXtextDocument xtextDocument = (IXtextDocument) document;\n\n\t\t\tCompositeNode rootNode = xtextDocument.readOnly(new UnitOfWork<CompositeNode>() {\n\t\t\t\tpublic CompositeNode exec(XtextResource resource) throws Exception {\n\t\t\t\t\tIParseResult parseResult = resource.getParseResult();\n\t\t\t\t\tAssert.isNotNull(parseResult);\n\t\t\t\t\treturn parseResult.getRootNode();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tAssert.isNotNull(rootNode);\n\n\t\t\tAbstractNode lastCompleteNode = ParseTreeUtil.getLastCompleteNodeByOffset(rootNode, offset);\n\n\t\t\tAbstractNode currentNode = ParseTreeUtil.getCurrentNodeByOffset(rootNode, offset);\n\n\t\t\tString prefix = calculatePrefix(viewer, offset, currentNode);\n\n\t\t\tEObject model = lastCompleteNode instanceof AbstractNode ? NodeUtil\n\t\t\t\t\t.getNearestSemanticObject((AbstractNode) lastCompleteNode) : lastCompleteNode;\n\t\t\t\t\t\n\t\t\taddOrReplaceCaContextAdapter(model, new ContentAssistContextAdapter(rootNode,currentNode,lastCompleteNode,offset,prefix));\n\n\t\t\tSet<AbstractElement> nextValidElementSet = new LinkedHashSet<AbstractElement>();\n\t\t\t/**\n\t\t\t * in case of a crossreference which isnt linked properly we evaluate or propose it again\n\t\t\t */\n\t\t\tif (lastCompleteNode.getGrammarElement() instanceof CrossReference && !isLinked(lastCompleteNode)) {\n\t\t\t\tnextValidElementSet.add(getAbstractElement(lastCompleteNode));\n\t\t\t\tnextValidElementSet.addAll(ParseTreeUtil.getElementSetValidFromOffset(rootNode, lastCompleteNode,\n\t\t\t\t\t\toffset));\n\t\t\t}\n\t\t\t/**\n\t\t\t * in case of 'at-the-end' of the previous,completed element we evaluate it again for \n\t\t\t * 'right-to-left-backtracking' cases (e.g. for keyword 'kind' kind>|< |=cursorpos)\n\t\t\t */\n\t\t\telse if (lastCompleteNode == currentNode) {\n\t\t\t\t\n\t\t\t\tAssignment containingAssignment = GrammarUtil\n\t\t\t\t\t\t.containingAssignment(lastCompleteNode.getGrammarElement());\n\n\t\t\t\tif (lastCompleteNode.getGrammarElement() instanceof RuleCall && containingAssignment != null) {\n\t\t\t\t\tnextValidElementSet.add(containingAssignment);\n\t\t\t\t\tnextValidElementSet.addAll(ParseTreeUtil.getElementSetValidFromOffset(rootNode, lastCompleteNode,\n\t\t\t\t\t\t\toffset));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnextValidElementSet = ParseTreeUtil.getElementSetValidFromOffset(rootNode, lastCompleteNode, offset);\n\t\t\t\t\tnextValidElementSet.add(getAbstractElement(lastCompleteNode));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnextValidElementSet = ParseTreeUtil.getElementSetValidFromOffset(rootNode, lastCompleteNode, offset);\n\t\t\t}\n\n\t\t\tProposalProviderInvokerSwitch proposalProviderInvokerSwitch = new ProposalProviderInvokerSwitch(model,\n\t\t\t\t\tdocument, offset, prefix, proposalProvider);\n\n\t\t\tfor (List<EObject> resolvedElementOrRuleList : new ProposalCandidateResolverSwitch(nextValidElementSet)) {\n\n\t\t\t\tList<ICompletionProposal> collectedCompletionProposalList = proposalProviderInvokerSwitch\n\t\t\t\t\t\t.collectCompletionProposalList(resolvedElementOrRuleList);\n\n\t\t\t\tcompletionProposalList.addAll(collectedCompletionProposalList);\n\t\t\t}\n\t\t\t\n\t\t\tif (completionProposalList != null) {\n\t\t\t\tList<? extends ICompletionProposal> processedCompletionProposalList = proposalProvider.sortAndFilter(\n\t\t\t\t\t\tcompletionProposalList, model, prefix, document, offset);\n\t\t\t\tcompletionProposals = processedCompletionProposalList.toArray(\n\t\t\t\t\t\tnew ICompletionProposal[processedCompletionProposalList.size()]);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\treturn completionProposals;\n\t}","commit_id":"683549db652665646a12f40a177cda9c21c15897","url":"https://github.com/eclipse/xtext"},{"original_method":"protected LeafNode getCurrentEditorNode() {\n\t\tXtextDocument document = (XtextDocument) editor.getDocument();\n\n\t\tITextSelection selection = (ITextSelection) editor.getSelectionProvider().getSelection();\n\t\tassertNotNull(selection);\n\n\t\tint offset = selection.getOffset();\n\t\tSystem.out.println(\"OFFSET: \" + offset);\n\n\t\tCompositeNode rootNode = document.readOnly(new UnitOfWork<CompositeNode>() {\n\t\t\tpublic CompositeNode exec(XtextResource resource) throws Exception {\n\t\t\t\tIParseResult parseResult = resource.getParseResult();\n\t\t\t\tAssert.isNotNull(parseResult);\n\t\t\t\treturn parseResult.getRootNode();\n\t\t\t}\n\t\t});\n\t\tAssert.isNotNull(rootNode);\n\n\t\tLeafNode currentNodeByOffset = ParseTreeUtil.getCurrentNodeByOffset(rootNode, offset);\n\t\treturn currentNodeByOffset;\n\t}","id":27996,"modified_method":"protected AbstractNode getCurrentEditorNode() {\n\t\tXtextDocument document = (XtextDocument) editor.getDocument();\n\n\t\tITextSelection selection = (ITextSelection) editor.getSelectionProvider().getSelection();\n\t\tassertNotNull(selection);\n\n\t\tint offset = selection.getOffset();\n\t\tSystem.out.println(\"OFFSET: \" + offset);\n\n\t\tCompositeNode rootNode = document.readOnly(new UnitOfWork<CompositeNode>() {\n\t\t\tpublic CompositeNode exec(XtextResource resource) throws Exception {\n\t\t\t\tIParseResult parseResult = resource.getParseResult();\n\t\t\t\tAssert.isNotNull(parseResult);\n\t\t\t\treturn parseResult.getRootNode();\n\t\t\t}\n\t\t});\n\t\tAssert.isNotNull(rootNode);\n\n\t\treturn  ParseTreeUtil.getCurrentNodeByOffset(rootNode, offset);\n\t}","commit_id":"683549db652665646a12f40a177cda9c21c15897","url":"https://github.com/eclipse/xtext"},{"original_method":"public Boolean exec(XtextResource resource) throws Exception {\n\t\t\t// select text fragment in editor and wait until outline syncs\n\t\t\teditor.selectAndReveal(offset, length);\n\t\t\tsleep(1000);\n\n\t\t\t// obtain selected model element in editor\n\t\t\tIStructuredSelection selection = (IStructuredSelection) outlinePage.getSelection();\n\t\t\tURI uri = (URI) selection.getFirstElement();\n\t\t\tList<EObject> contents = EcoreUtil2.eAllContentsAsList(resource);\n\t\t\tEObject objInEditor = contents.get(elementIndex);\n\n\t\t\t// just debugging purposes\n\t\t\tLeafNode currentEditorNode = getCurrentEditorNode();\n\t\t\tSystem.out.println(\"Selection [\" + offset + \";\" + length + \"] yields node text [\"\n\t\t\t\t\t+ currentEditorNode.getText() + \"]\");\n\n\t\t\t// obtain selected model element in outline\n\t\t\tEObject objInOutline = resource.getEObject(uri.fragment());\n\n\t\t\t// they must be equal\n\t\t\treturn Boolean.valueOf(objInEditor.equals(objInOutline));\n\t\t}","id":27997,"modified_method":"public Boolean exec(XtextResource resource) throws Exception {\n\t\t\t// select text fragment in editor and wait until outline syncs\n\t\t\teditor.selectAndReveal(offset, length);\n\t\t\tsleep(1000);\n\n\t\t\t// obtain selected model element in editor\n\t\t\tIStructuredSelection selection = (IStructuredSelection) outlinePage.getSelection();\n\t\t\tURI uri = (URI) selection.getFirstElement();\n\t\t\tList<EObject> contents = EcoreUtil2.eAllContentsAsList(resource);\n\t\t\tEObject objInEditor = contents.get(elementIndex);\n\n\t\t\t// just debugging purposes\n\t\t\tAbstractNode currentEditorNode = getCurrentEditorNode();\n\t\t\tif (currentEditorNode instanceof LeafNode) {\n\t\t\t\tSystem.out.println(\"Selection [\" + offset + \";\" + length + \"] yields node text [\"\n\t\t\t\t\t\t+ ((LeafNode)currentEditorNode).getText() + \"]\");\n\t\t\t}\n\t\t\t\n\n\t\t\t// obtain selected model element in outline\n\t\t\tEObject objInOutline = resource.getEObject(uri.fragment());\n\n\t\t\t// they must be equal\n\t\t\treturn Boolean.valueOf(objInEditor.equals(objInOutline));\n\t\t}","commit_id":"683549db652665646a12f40a177cda9c21c15897","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testGetCurrentNodeByOffset() throws Exception {\n\n\t\tString text = \"spielplatz 1 \\\"junit\\\" { kin  \";\n\t\tCompositeNode rootNode = getRootNode(text);\n\t\tLeafNode currentNodeByOffset = ParseTreeUtil.getCurrentNodeByOffset(rootNode, 26);\n\t\tassertEquals(\"expect leafnode with text 'kin'\", currentNodeByOffset.getText(), \"kin\");\n\n\t\ttext = \"spielplatz 1 \\\"junit\\\" { kind (\";\n\t\trootNode = getRootNode(text);\n\t\tcurrentNodeByOffset = ParseTreeUtil.getCurrentNodeByOffset(rootNode, text.length());\n\t\tassertEquals(\"expect leafnode with text '('\", currentNodeByOffset.getText(), \"(\");\n\n\t\ttext = \"spielplatz 1 \\\"junit\\\" { kind (  \";\n\t\trootNode = getRootNode(text);\n\t\tcurrentNodeByOffset = ParseTreeUtil.getCurrentNodeByOffset(rootNode, text.length());\n\t\tassertEquals(\"expect leafnode with WS text '__'\", currentNodeByOffset.getText(), \"  \");\n\n\t\ttext = \"spielplatz 1 \\\"junit\\\" { kind (\";\n\t\trootNode = getRootNode(text);\n\t\tcurrentNodeByOffset = ParseTreeUtil.getCurrentNodeByOffset(rootNode, text.length() - 1);\n\t\tassertEquals(\"expect leafnode with WS text '_'\", currentNodeByOffset.getText(), \" \");\n\n\t\ttext = \"spielplatz 1 \\\"junit\\\" { kind (\";\n\t\trootNode = getRootNode(text);\n\t\tcurrentNodeByOffset = ParseTreeUtil.getCurrentNodeByOffset(rootNode, 0);\n\t\tassertEquals(\"expect leafnode with WS text 'spielplatz'\", currentNodeByOffset.getText(), \"spielplatz\");\n\n\t}","id":27998,"modified_method":"public void testGetCurrentNodeByOffset() throws Exception {\n\n\t\tString text = \"spielplatz 1 \\\"junit\\\" { kin  \";\n\t\tCompositeNode rootNode = getRootNode(text);\n\t\tLeafNode currentNodeByOffset = (LeafNode) ParseTreeUtil.getCurrentNodeByOffset(rootNode, 26);\n\t\tassertEquals(\"expect leafnode with text 'kin'\", currentNodeByOffset.getText(), \"kin\");\n\n\t\ttext = \"spielplatz 1 \\\"junit\\\" { kind (\";\n\t\trootNode = getRootNode(text);\n\t\tcurrentNodeByOffset = (LeafNode) ParseTreeUtil.getCurrentNodeByOffset(rootNode, text.length());\n\t\tassertEquals(\"expect leafnode with text '('\", currentNodeByOffset.getText(), \"(\");\n\n\t\ttext = \"spielplatz 1 \\\"junit\\\" { kind (  \";\n\t\trootNode = getRootNode(text);\n\t\tcurrentNodeByOffset = (LeafNode) ParseTreeUtil.getCurrentNodeByOffset(rootNode, text.length());\n\t\tassertEquals(\"expect leafnode with WS text '__'\", currentNodeByOffset.getText(), \"  \");\n\n\t\ttext = \"spielplatz 1 \\\"junit\\\" { kind (\";\n\t\trootNode = getRootNode(text);\n\t\tcurrentNodeByOffset = (LeafNode) ParseTreeUtil.getCurrentNodeByOffset(rootNode, text.length() - 1);\n\t\tassertEquals(\"expect leafnode with '('\", currentNodeByOffset.getText(), \"(\");\n\n\t\ttext = \"spielplatz 1 \\\"junit\\\" { kind (\";\n\t\trootNode = getRootNode(text);\n\t\tcurrentNodeByOffset = (LeafNode) ParseTreeUtil.getCurrentNodeByOffset(rootNode, 0);\n\t\tassertEquals(\"expect leafnode with WS text 'spielplatz'\", currentNodeByOffset.getText(), \"spielplatz\");\n\n\t}","commit_id":"683549db652665646a12f40a177cda9c21c15897","url":"https://github.com/eclipse/xtext"},{"original_method":"public void apply(ITextViewer viewer, char trigger, int stateMask,\n\t\t\tint offset) {\n\n\t\ttry {\n\t\t\t\n\t\t\tIDocument document = viewer.getDocument();\n\t\t\t\n\t\t\tint offsetToApply = this.offset;\n\n\t\t\tif (model != null) {\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tCompositeNode parserNode = NodeUtil.getRootNode(model);\n\t\t\t\t\n\t\t\t\tLeafNode currentLeafNode=ParseTreeUtil.getCurrentNodeByOffset(parserNode, offset);\n\t\t\t\t\n\t\t\t\tboolean isCursorAtTheEndOfTheLastElement = offset == (currentLeafNode.getTotalOffset() + currentLeafNode\n\t\t\t\t\t\t.getTotalLength());\n\t\t\t\t\n\t\t\t\tif ((currentLeafNode.isHidden() && !\"\".equals(currentLeafNode.getText().trim()))\n\t\t\t\t\t\t|| isCursorAtTheEndOfTheLastElement) {\n\t\t\t\t\tif (getDisplayString().toUpperCase().startsWith(currentLeafNode.getText().toUpperCase())) {\n\t\t\t\t\t\toffsetToApply-=currentLeafNode.getText().trim().length();\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t\t\n\t\t\t\tif (!currentLeafNode.isHidden() && \n\t\t\t\t\t\tisCursorAtTheEndOfTheLastElement && \n\t\t\t\t\t\toffsetToApply==offset) {\n\n\t\t\t\t\tif (currentLeafNode.getGrammarElement() instanceof CrossReference\n\t\t\t\t\t\t\t&& abstractElement instanceof CrossReference) {\n\t\t\t\t\t\tsetText(\" \" + getText());\n\t\t\t\t\t}\n\t\t\t\t\telse if (currentLeafNode.getGrammarElement() instanceof RuleCall\n\t\t\t\t\t\t\t&& currentLeafNode.getGrammarElement().eContainer() instanceof Assignment\n\t\t\t\t\t\t\t&& abstractElement instanceof Assignment) {\n\t\t\t\t\t\tsetText(\" \" + getText());\n\t\t\t\t\t}\n\t\t\t\t\telse if (!GrammarUtil.containingParserRule(abstractElement).equals(GrammarUtil.containingParserRule(currentLeafNode.getGrammarElement()))) {\n\t\t\t\t\t\tsetText(\" \" + getText());\n\t\t\t\t\t}\n\n\t\t\t\t}\t\n\t\t\t}\n\t\t\t\n\t\t\tdocument.replace(offsetToApply, offset != offsetToApply ? offset\n\t\t\t\t\t- offsetToApply : 0, getText());\n\n\t\t} catch (BadLocationException e) {\n\t\t\tlogger.error(e);\n\t\t}\n\t}","id":27999,"modified_method":"public void apply(ITextViewer viewer, char trigger, int stateMask,\n\t\t\tint offset) {\n\n\t\ttry {\n\t\t\t\n\t\t\tIDocument document = viewer.getDocument();\n\t\t\t\n\t\t\tif (model != null) {\n\t\t\t\t\n\t\t\t\tContentAssistContextAdapter contentAssistContextAdapter = getContextAdapater();\n\t\t\t\t\n\t\t\t\tAbstractNode abstractNode = contentAssistContextAdapter.getCurrentNode();\n\t\t\t\t\n\t\t\t\tif (abstractNode instanceof LeafNode) {\n\t\t\t\t\t\n\t\t\t\t\tLeafNode currentLeafNode = (LeafNode) abstractNode;\n\t\t\t\t\t\n\t\t\t\t\tif (getDisplayString().toUpperCase().startsWith(currentLeafNode.getText().toUpperCase())) {\n\t\t\t\t\t\tsetText(getText().substring(this.offset - currentLeafNode.getTotalOffset()));\n\t\t\t\t\t} else if (contentAssistContextAdapter.isCusorAtEndOfLastCompleteNode()) {\n\n\t\t\t\t\t\tif (currentLeafNode.getGrammarElement() instanceof CrossReference\n\t\t\t\t\t\t\t\t&& abstractElement instanceof CrossReference) {\n\t\t\t\t\t\t\tsetText(\" \" + getText());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (currentLeafNode.getGrammarElement() instanceof RuleCall\n\t\t\t\t\t\t\t\t&& currentLeafNode.getGrammarElement().eContainer() instanceof Assignment\n\t\t\t\t\t\t\t\t&& abstractElement instanceof Assignment) {\n\t\t\t\t\t\t\tsetText(\" \" + getText());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (!GrammarUtil.containingParserRule(abstractElement).equals(\n\t\t\t\t\t\t\t\t  GrammarUtil.containingParserRule(currentLeafNode.getGrammarElement()))) {\n\t\t\t\t\t\t\tsetText(\" \" + getText());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t}\n\t\t\t\n\t\t\tdocument.replace(this.offset, document.getLength()<(this.offset+getText().length()) ? 0:getText().length() , getText());\n\n\t\t} catch (BadLocationException e) {\n\t\t\tlogger.error(e);\n\t\t}\n\t}","commit_id":"683549db652665646a12f40a177cda9c21c15897","url":"https://github.com/eclipse/xtext"}]