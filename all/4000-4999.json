[{"original_method":"public void testSingleValuedField_WithFormatter() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\").setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").format(\"0000.0\").field(\"value\")).execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10) / 10));\n        assertThat(stats.getAvgAsString(), equalTo(\"0005.5\"));\n        assertThat(stats.getMin(), equalTo(1.0));\n        assertThat(stats.getMinAsString(), equalTo(\"0001.0\"));\n        assertThat(stats.getMax(), equalTo(10.0));\n        assertThat(stats.getMaxAsString(), equalTo(\"0010.0\"));\n        assertThat(stats.getSum(), equalTo((double) 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10));\n        assertThat(stats.getSumAsString(), equalTo(\"0055.0\"));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getCountAsString(), equalTo(\"0010.0\"));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100));\n        assertThat(stats.getSumOfSquaresAsString(), equalTo(\"0385.0\"));\n        assertThat(stats.getVariance(), equalTo(variance(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));\n        assertThat(stats.getVarianceAsString(), equalTo(\"0008.2\"));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));\n        assertThat(stats.getStdDeviationAsString(), equalTo(\"0002.9\"));\n    }","id":4000,"modified_method":"public void testSingleValuedField_WithFormatter() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\").setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").format(\"0000.0\").field(\"value\").sigma(sigma)).execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10) / 10));\n        assertThat(stats.getAvgAsString(), equalTo(\"0005.5\"));\n        assertThat(stats.getMin(), equalTo(1.0));\n        assertThat(stats.getMinAsString(), equalTo(\"0001.0\"));\n        assertThat(stats.getMax(), equalTo(10.0));\n        assertThat(stats.getMaxAsString(), equalTo(\"0010.0\"));\n        assertThat(stats.getSum(), equalTo((double) 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10));\n        assertThat(stats.getSumAsString(), equalTo(\"0055.0\"));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getCountAsString(), equalTo(\"0010.0\"));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100));\n        assertThat(stats.getSumOfSquaresAsString(), equalTo(\"0385.0\"));\n        assertThat(stats.getVariance(), equalTo(variance(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));\n        assertThat(stats.getVarianceAsString(), equalTo(\"0008.2\"));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));\n        assertThat(stats.getStdDeviationAsString(), equalTo(\"0002.9\"));\n        checkUpperLowerBounds(stats, sigma);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testScript_SingleValued_WithParams() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").script(\"doc['value'].value + inc\").param(\"inc\", 1))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11) / 10));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(11.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n    }","id":4001,"modified_method":"@Test\n    public void testScript_SingleValued_WithParams() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").script(\"doc['value'].value + inc\").param(\"inc\", 1).sigma(sigma))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11) / 10));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(11.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        checkUpperLowerBounds(stats, sigma);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testSingleValuedField_WithValueScript() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"value\").script(\"_value + 1\"))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11) / 10));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(11.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n    }","id":4002,"modified_method":"@Test\n    public void testSingleValuedField_WithValueScript() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"value\").script(\"_value + 1\").sigma(sigma))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11) / 10));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(11.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8, 9, 10, 11)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8, 9, 10, 11)));\n        checkUpperLowerBounds(stats, sigma);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testSingleValuedField_WithValueScript_WithParams() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"value\").script(\"_value + inc\").param(\"inc\", 1))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11) / 10));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(11.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n    }","id":4003,"modified_method":"@Test\n    public void testSingleValuedField_WithValueScript_WithParams() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"value\").script(\"_value + inc\").param(\"inc\", 1).sigma(sigma))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11) / 10));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(11.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8, 9, 10, 11)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8, 9, 10, 11)));\n        checkUpperLowerBounds(stats, sigma);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testMultiValuedField_WithValueScript_WithParams() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"values\").script(\"_value - dec\").param(\"dec\", 1))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (1+2+3+4+5+6+7+8+9+10+2+3+4+5+6+7+8+9+10+11) / 20));\n        assertThat(stats.getMin(), equalTo(1.0));\n        assertThat(stats.getMax(), equalTo(11.0));\n        assertThat(stats.getSum(), equalTo((double) 1+2+3+4+5+6+7+8+9+10+2+3+4+5+6+7+8+9+10+11));\n        assertThat(stats.getCount(), equalTo(20l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 1+4+9+16+25+36+49+64+81+100+4+9+16+25+36+49+64+81+100+121));\n        assertThat(stats.getVariance(), equalTo(variance(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n    }","id":4004,"modified_method":"@Test\n    public void testMultiValuedField_WithValueScript_WithParams() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"values\").script(\"_value - dec\").param(\"dec\", 1).sigma(sigma))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (1+2+3+4+5+6+7+8+9+10+2+3+4+5+6+7+8+9+10+11) / 20));\n        assertThat(stats.getMin(), equalTo(1.0));\n        assertThat(stats.getMax(), equalTo(11.0));\n        assertThat(stats.getSum(), equalTo((double) 1+2+3+4+5+6+7+8+9+10+2+3+4+5+6+7+8+9+10+11));\n        assertThat(stats.getCount(), equalTo(20l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 1+4+9+16+25+36+49+64+81+100+4+9+16+25+36+49+64+81+100+121));\n        assertThat(stats.getVariance(), equalTo(variance(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        checkUpperLowerBounds(stats, sigma);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testSingleValuedField() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"value\"))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (1+2+3+4+5+6+7+8+9+10) / 10));\n        assertThat(stats.getMin(), equalTo(1.0));\n        assertThat(stats.getMax(), equalTo(10.0));\n        assertThat(stats.getSum(), equalTo((double) 1+2+3+4+5+6+7+8+9+10));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 1+4+9+16+25+36+49+64+81+100));\n        assertThat(stats.getVariance(), equalTo(variance(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10)));\n    }","id":4005,"modified_method":"@Test\n    public void testSingleValuedField() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"value\").sigma(sigma))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (1+2+3+4+5+6+7+8+9+10) / 10));\n        assertThat(stats.getMin(), equalTo(1.0));\n        assertThat(stats.getMax(), equalTo(10.0));\n        assertThat(stats.getSum(), equalTo((double) 1+2+3+4+5+6+7+8+9+10));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 1+4+9+16+25+36+49+64+81+100));\n        assertThat(stats.getVariance(), equalTo(variance(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));\n        checkUpperLowerBounds(stats, sigma);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testEmptyAggregation() throws Exception {\n\n        SearchResponse searchResponse = client().prepareSearch(\"empty_bucket_idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(histogram(\"histo\").field(\"value\").interval(1l).minDocCount(0).subAggregation(extendedStats(\"stats\")))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(2l));\n        Histogram histo = searchResponse.getAggregations().get(\"histo\");\n        assertThat(histo, notNullValue());\n        Histogram.Bucket bucket = histo.getBuckets().get(1);\n        assertThat(bucket, notNullValue());\n\n        ExtendedStats stats = bucket.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getSumOfSquares(), equalTo(0.0));\n        assertThat(stats.getCount(), equalTo(0l));\n        assertThat(stats.getSum(), equalTo(0.0));\n        assertThat(stats.getMin(), equalTo(Double.POSITIVE_INFINITY));\n        assertThat(stats.getMax(), equalTo(Double.NEGATIVE_INFINITY));\n        assertThat(Double.isNaN(stats.getStdDeviation()), is(true));\n        assertThat(Double.isNaN(stats.getAvg()), is(true));\n    }","id":4006,"modified_method":"@Test\n    public void testEmptyAggregation() throws Exception {\n\n        SearchResponse searchResponse = client().prepareSearch(\"empty_bucket_idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(histogram(\"histo\").field(\"value\").interval(1l).minDocCount(0).subAggregation(extendedStats(\"stats\")))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(2l));\n        Histogram histo = searchResponse.getAggregations().get(\"histo\");\n        assertThat(histo, notNullValue());\n        Histogram.Bucket bucket = histo.getBuckets().get(1);\n        assertThat(bucket, notNullValue());\n\n        ExtendedStats stats = bucket.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getSumOfSquares(), equalTo(0.0));\n        assertThat(stats.getCount(), equalTo(0l));\n        assertThat(stats.getSum(), equalTo(0.0));\n        assertThat(stats.getMin(), equalTo(Double.POSITIVE_INFINITY));\n        assertThat(stats.getMax(), equalTo(Double.NEGATIVE_INFINITY));\n        assertThat(Double.isNaN(stats.getStdDeviation()), is(true));\n        assertThat(Double.isNaN(stats.getAvg()), is(true));\n        assertThat(Double.isNaN(stats.getStdDeviationBound(ExtendedStats.Bounds.UPPER)), is(true));\n        assertThat(Double.isNaN(stats.getStdDeviationBound(ExtendedStats.Bounds.LOWER)), is(true));\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testScript_ExplicitSingleValued_WithParams() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").script(\"doc['value'].value + inc\").param(\"inc\", 1))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11) / 10));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(11.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n    }","id":4007,"modified_method":"@Test\n    public void testScript_ExplicitSingleValued_WithParams() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").script(\"doc['value'].value + inc\").param(\"inc\", 1).sigma(sigma))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11) / 10));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(11.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        checkUpperLowerBounds(stats, sigma);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testUnmapped() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx_unmapped\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"value\"))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(0l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo(Double.NaN));\n        assertThat(stats.getMin(), equalTo(Double.POSITIVE_INFINITY));\n        assertThat(stats.getMax(), equalTo(Double.NEGATIVE_INFINITY));\n        assertThat(stats.getSum(), equalTo(0.0));\n        assertThat(stats.getCount(), equalTo(0l));\n        assertThat(stats.getSumOfSquares(), equalTo(0.0));\n        assertThat(stats.getVariance(), equalTo(Double.NaN));\n        assertThat(stats.getStdDeviation(), equalTo(Double.NaN));\n    }","id":4008,"modified_method":"@Test\n    public void testUnmapped() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx_unmapped\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"value\"))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(0l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo(Double.NaN));\n        assertThat(stats.getMin(), equalTo(Double.POSITIVE_INFINITY));\n        assertThat(stats.getMax(), equalTo(Double.NEGATIVE_INFINITY));\n        assertThat(stats.getSum(), equalTo(0.0));\n        assertThat(stats.getCount(), equalTo(0l));\n        assertThat(stats.getSumOfSquares(), equalTo(0.0));\n        assertThat(stats.getVariance(), equalTo(Double.NaN));\n        assertThat(stats.getStdDeviation(), equalTo(Double.NaN));\n        assertThat(Double.isNaN(stats.getStdDeviationBound(ExtendedStats.Bounds.UPPER)), is(true));\n        assertThat(Double.isNaN(stats.getStdDeviationBound(ExtendedStats.Bounds.LOWER)), is(true));\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testScript_MultiValued() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").script(\"doc['values'].values\"))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11+3+4+5+6+7+8+9+10+11+12) / 20));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(12.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11+3+4+5+6+7+8+9+10+11+12));\n        assertThat(stats.getCount(), equalTo(20l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121+9+16+25+36+49+64+81+100+121+144));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 12)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 12)));\n    }","id":4009,"modified_method":"@Test\n    public void testScript_MultiValued() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").script(\"doc['values'].values\").sigma(sigma))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11+3+4+5+6+7+8+9+10+11+12) / 20));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(12.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11+3+4+5+6+7+8+9+10+11+12));\n        assertThat(stats.getCount(), equalTo(20l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121+9+16+25+36+49+64+81+100+121+144));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 12)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 12)));\n        checkUpperLowerBounds(stats, sigma);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testMultiValuedField_WithValueScript() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"values\").script(\"_value - 1\"))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (1+2+3+4+5+6+7+8+9+10+2+3+4+5+6+7+8+9+10+11) / 20));\n        assertThat(stats.getMin(), equalTo(1.0));\n        assertThat(stats.getMax(), equalTo(11.0));\n        assertThat(stats.getSum(), equalTo((double) 1+2+3+4+5+6+7+8+9+10+2+3+4+5+6+7+8+9+10+11));\n        assertThat(stats.getCount(), equalTo(20l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 1+4+9+16+25+36+49+64+81+100+4+9+16+25+36+49+64+81+100+121));\n        assertThat(stats.getVariance(), equalTo(variance(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n    }","id":4010,"modified_method":"@Test\n    public void testMultiValuedField_WithValueScript() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"values\").script(\"_value - 1\").sigma(sigma))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (1+2+3+4+5+6+7+8+9+10+2+3+4+5+6+7+8+9+10+11) / 20));\n        assertThat(stats.getMin(), equalTo(1.0));\n        assertThat(stats.getMax(), equalTo(11.0));\n        assertThat(stats.getSum(), equalTo((double) 1+2+3+4+5+6+7+8+9+10+2+3+4+5+6+7+8+9+10+11));\n        assertThat(stats.getCount(), equalTo(20l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 1+4+9+16+25+36+49+64+81+100+4+9+16+25+36+49+64+81+100+121));\n        assertThat(stats.getVariance(), equalTo(variance(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 11)));\n        checkUpperLowerBounds(stats, sigma);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testScript_SingleValued() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").script(\"doc['value'].value\"))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (1+2+3+4+5+6+7+8+9+10) / 10));\n        assertThat(stats.getMin(), equalTo(1.0));\n        assertThat(stats.getMax(), equalTo(10.0));\n        assertThat(stats.getSum(), equalTo((double) 1+2+3+4+5+6+7+8+9+10));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 1+4+9+16+25+36+49+64+81+100));\n        assertThat(stats.getVariance(), equalTo(variance(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10)));\n    }","id":4011,"modified_method":"@Test\n    public void testScript_SingleValued() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").script(\"doc['value'].value\").sigma(sigma))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (1+2+3+4+5+6+7+8+9+10) / 10));\n        assertThat(stats.getMin(), equalTo(1.0));\n        assertThat(stats.getMax(), equalTo(10.0));\n        assertThat(stats.getSum(), equalTo((double) 1+2+3+4+5+6+7+8+9+10));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 1+4+9+16+25+36+49+64+81+100));\n        assertThat(stats.getVariance(), equalTo(variance(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10)));\n        checkUpperLowerBounds(stats, sigma);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testScript_ExplicitMultiValued() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").script(\"doc['values'].values\"))\n                .execute().actionGet();\n\n        assertShardExecutionState(searchResponse, 0);\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11+3+4+5+6+7+8+9+10+11+12) / 20));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(12.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11+3+4+5+6+7+8+9+10+11+12));\n        assertThat(stats.getCount(), equalTo(20l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121+9+16+25+36+49+64+81+100+121+144));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 12)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 12)));\n\n    }","id":4012,"modified_method":"@Test\n    public void testScript_ExplicitMultiValued() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").script(\"doc['values'].values\").sigma(sigma))\n                .execute().actionGet();\n\n        assertShardExecutionState(searchResponse, 0);\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11+3+4+5+6+7+8+9+10+11+12) / 20));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(12.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11+3+4+5+6+7+8+9+10+11+12));\n        assertThat(stats.getCount(), equalTo(20l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121+9+16+25+36+49+64+81+100+121+144));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 12)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 12)));\n        checkUpperLowerBounds(stats, sigma);\n\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testSingleValuedField_PartiallyUnmapped() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\", \"idx_unmapped\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"value\"))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (1+2+3+4+5+6+7+8+9+10) / 10));\n        assertThat(stats.getMin(), equalTo(1.0));\n        assertThat(stats.getMax(), equalTo(10.0));\n        assertThat(stats.getSum(), equalTo((double) 1+2+3+4+5+6+7+8+9+10));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 1+4+9+16+25+36+49+64+81+100));\n        assertThat(stats.getVariance(), equalTo(variance(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(1, 2, 3, 4, 5, 6, 7, 8 ,9, 10)));\n    }","id":4013,"modified_method":"@Test\n    public void testSingleValuedField_PartiallyUnmapped() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\", \"idx_unmapped\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"value\").sigma(sigma))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (1+2+3+4+5+6+7+8+9+10) / 10));\n        assertThat(stats.getMin(), equalTo(1.0));\n        assertThat(stats.getMax(), equalTo(10.0));\n        assertThat(stats.getSum(), equalTo((double) 1+2+3+4+5+6+7+8+9+10));\n        assertThat(stats.getCount(), equalTo(10l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 1+4+9+16+25+36+49+64+81+100));\n        assertThat(stats.getVariance(), equalTo(variance(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));\n        checkUpperLowerBounds(stats, sigma);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testMultiValuedField() throws Exception {\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"values\"))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11+3+4+5+6+7+8+9+10+11+12) / 20));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(12.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11+3+4+5+6+7+8+9+10+11+12));\n        assertThat(stats.getCount(), equalTo(20l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121+9+16+25+36+49+64+81+100+121+144));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 12)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 12)));\n    }","id":4014,"modified_method":"@Test\n    public void testMultiValuedField() throws Exception {\n        double sigma = randomDouble() * randomIntBetween(1, 10);\n        SearchResponse searchResponse = client().prepareSearch(\"idx\")\n                .setQuery(matchAllQuery())\n                .addAggregation(extendedStats(\"stats\").field(\"values\").sigma(sigma))\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));\n\n        ExtendedStats stats = searchResponse.getAggregations().get(\"stats\");\n        assertThat(stats, notNullValue());\n        assertThat(stats.getName(), equalTo(\"stats\"));\n        assertThat(stats.getAvg(), equalTo((double) (2+3+4+5+6+7+8+9+10+11+3+4+5+6+7+8+9+10+11+12) / 20));\n        assertThat(stats.getMin(), equalTo(2.0));\n        assertThat(stats.getMax(), equalTo(12.0));\n        assertThat(stats.getSum(), equalTo((double) 2+3+4+5+6+7+8+9+10+11+3+4+5+6+7+8+9+10+11+12));\n        assertThat(stats.getCount(), equalTo(20l));\n        assertThat(stats.getSumOfSquares(), equalTo((double) 4+9+16+25+36+49+64+81+100+121+9+16+25+36+49+64+81+100+121+144));\n        assertThat(stats.getVariance(), equalTo(variance(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)));\n        assertThat(stats.getStdDeviation(), equalTo(stdDev(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)));\n        checkUpperLowerBounds(stats, sigma);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public void readOtherStatsFrom(StreamInput in) throws IOException {\n        sumOfSqrs = in.readDouble();\n    }","id":4015,"modified_method":"@Override\n    public void readOtherStatsFrom(StreamInput in) throws IOException {\n        sumOfSqrs = in.readDouble();\n        if (in.getVersion().onOrAfter(Version.V_1_4_3)) {\n            sigma = in.readDouble();\n        } else {\n            sigma = 2.0;\n        }\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    protected XContentBuilder otherStatsToXCotent(XContentBuilder builder, Params params) throws IOException {\n        builder.field(Fields.SUM_OF_SQRS, count != 0 ? sumOfSqrs : null);\n        builder.field(Fields.VARIANCE, count != 0 ? getVariance() : null);\n        builder.field(Fields.STD_DEVIATION, count != 0 ? getStdDeviation() : null);\n        if (count != 0 && valueFormatter != null) {\n            builder.field(Fields.SUM_OF_SQRS_AS_STRING, valueFormatter.format(sumOfSqrs));\n            builder.field(Fields.VARIANCE_AS_STRING, valueFormatter.format(getVariance()));\n            builder.field(Fields.STD_DEVIATION_AS_STRING, valueFormatter.format(getStdDeviation()));\n        }\n        return builder;\n    }","id":4016,"modified_method":"@Override\n    protected XContentBuilder otherStatsToXCotent(XContentBuilder builder, Params params) throws IOException {\n        builder.field(Fields.SUM_OF_SQRS, count != 0 ? sumOfSqrs : null);\n        builder.field(Fields.VARIANCE, count != 0 ? getVariance() : null);\n        builder.field(Fields.STD_DEVIATION, count != 0 ? getStdDeviation() : null);\n        builder.startObject(Fields.STD_DEVIATION_BOUNDS)\n                .field(Fields.UPPER, count != 0 ? getStdDeviationBound(Bounds.UPPER) : null)\n                .field(Fields.LOWER, count != 0 ? getStdDeviationBound(Bounds.LOWER) : null)\n                .endObject();\n\n        if (count != 0 && valueFormatter != null) {\n            builder.field(Fields.SUM_OF_SQRS_AS_STRING, valueFormatter.format(sumOfSqrs));\n            builder.field(Fields.VARIANCE_AS_STRING, valueFormatter.format(getVariance()));\n            builder.field(Fields.STD_DEVIATION_AS_STRING, getStdDeviationAsString());\n\n            builder.startObject(Fields.STD_DEVIATION_BOUNDS_AS_STRING)\n                    .field(Fields.UPPER, getStdDeviationBoundAsString(Bounds.UPPER))\n                    .field(Fields.LOWER, getStdDeviationBoundAsString(Bounds.LOWER))\n                    .endObject();\n\n        }\n        return builder;\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public double value(String name) {\n        if (\"sum_of_squares\".equals(name)) {\n            return sumOfSqrs;\n        }\n        if (\"variance\".equals(name)) {\n            return getVariance();\n        }\n        if (\"std_deviation\".equals(name)) {\n            return getStdDeviation();\n        }\n        return super.value(name);\n    }","id":4017,"modified_method":"@Override\n    public double value(String name) {\n        if (\"sum_of_squares\".equals(name)) {\n            return sumOfSqrs;\n        }\n        if (\"variance\".equals(name)) {\n            return getVariance();\n        }\n        if (\"std_deviation\".equals(name)) {\n            return getStdDeviation();\n        }\n        if (\"std_upper\".equals(name)) {\n            return getStdDeviationBound(Bounds.UPPER);\n        }\n        if (\"std_lower\".equals(name)) {\n            return getStdDeviationBound(Bounds.LOWER);\n        }\n        return super.value(name);\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    protected void writeOtherStatsTo(StreamOutput out) throws IOException {\n        out.writeDouble(sumOfSqrs);\n    }","id":4018,"modified_method":"@Override\n    protected void writeOtherStatsTo(StreamOutput out) throws IOException {\n        out.writeDouble(sumOfSqrs);\n        if (out.getVersion().onOrAfter(Version.V_1_4_3)) {\n            out.writeDouble(sigma);\n        }\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public InternalExtendedStats(String name, long count, double sum, double min, double max, double sumOfSqrs,\n            @Nullable ValueFormatter formatter, Map<String, Object> metaData) {\n        super(name, count, sum, min, max, formatter, metaData);\n        this.sumOfSqrs = sumOfSqrs;\n    }","id":4019,"modified_method":"public InternalExtendedStats(String name, long count, double sum, double min, double max, double sumOfSqrs,\n            double sigma, @Nullable ValueFormatter formatter, Map<String, Object> metaData) {\n        super(name, count, sum, min, max, formatter, metaData);\n        this.sumOfSqrs = sumOfSqrs;\n        this.sigma = sigma;\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public InternalExtendedStats reduce(ReduceContext reduceContext) {\n        double sumOfSqrs = 0;\n        for (InternalAggregation aggregation : reduceContext.aggregations()) {\n            InternalExtendedStats stats = (InternalExtendedStats) aggregation;\n            sumOfSqrs += stats.getSumOfSquares();\n        }\n        final InternalStats stats = super.reduce(reduceContext);\n        return new InternalExtendedStats(name, stats.getCount(), stats.getSum(), stats.getMin(), stats.getMax(), sumOfSqrs, valueFormatter,\n                getMetaData());\n    }","id":4020,"modified_method":"@Override\n    public InternalExtendedStats reduce(ReduceContext reduceContext) {\n        double sumOfSqrs = 0;\n        for (InternalAggregation aggregation : reduceContext.aggregations()) {\n            InternalExtendedStats stats = (InternalExtendedStats) aggregation;\n            sumOfSqrs += stats.getSumOfSquares();\n        }\n        final InternalStats stats = super.reduce(reduceContext);\n        return new InternalExtendedStats(name, stats.getCount(), stats.getSum(), stats.getMin(), stats.getMax(), sumOfSqrs, sigma, valueFormatter, getMetaData());\n    }","commit_id":"a4eb1d55051b4b6671938ae1213a205c106438d0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n\tprotected String getSaveAndContinueRedirect(\n\t\t\tActionRequest actionRequest, DDMStructure structure,\n\t\t\tString redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\tactionRequest, themeDisplay.getPpid(), themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcPath\", \"/copy_structure\");\n\n\t\tlong classNameId = PortalUtil.getClassNameId(DDMStructure.class);\n\n\t\tportletURL.setParameter(\n\t\t\t\"classNameId\", String.valueOf(classNameId), false);\n\n\t\tportletURL.setParameter(\n\t\t\t\"classPK\", String.valueOf(structure.getStructureId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"copyFormTemplates\",\n\t\t\tParamUtil.getString(actionRequest, \"copyFormTemplates\"), false);\n\t\tportletURL.setParameter(\n\t\t\t\"copyDisplayTemplates\",\n\t\t\tParamUtil.getString(actionRequest, \"copyDisplayTemplates\"), false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","id":4021,"modified_method":"@Override\n\tprotected String getSaveAndContinueRedirect(\n\t\t\tActionRequest actionRequest, DDMStructure structure,\n\t\t\tString redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tLiferayPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, themeDisplay.getPpid(), themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcPath\", \"/copy_structure\");\n\n\t\tlong classNameId = PortalUtil.getClassNameId(DDMStructure.class);\n\n\t\tportletURL.setParameter(\n\t\t\t\"classNameId\", String.valueOf(classNameId), false);\n\n\t\tportletURL.setParameter(\n\t\t\t\"classPK\", String.valueOf(structure.getStructureId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"copyFormTemplates\",\n\t\t\tParamUtil.getString(actionRequest, \"copyFormTemplates\"), false);\n\t\tportletURL.setParameter(\n\t\t\t\"copyDisplayTemplates\",\n\t\t\tParamUtil.getString(actionRequest, \"copyDisplayTemplates\"), false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","commit_id":"53ed6c3e81f247e6c06f0419e119e1338168d205","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected String getSaveAndContinueRedirect(\n\t\t\tActionRequest actionRequest, DDMTemplate template, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\tactionRequest, themeDisplay.getPpid(), themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcPath\", \"/copy_template\");\n\t\tportletURL.setParameter(\n\t\t\t\"templateId\", String.valueOf(template.getTemplateId()), false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","id":4022,"modified_method":"@Override\n\tprotected String getSaveAndContinueRedirect(\n\t\t\tActionRequest actionRequest, DDMTemplate template, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tLiferayPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, themeDisplay.getPpid(), themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcPath\", \"/copy_template\");\n\t\tportletURL.setParameter(\n\t\t\t\"templateId\", String.valueOf(template.getTemplateId()), false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","commit_id":"53ed6c3e81f247e6c06f0419e119e1338168d205","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getSaveAndContinueRedirect(\n\t\t\tActionRequest actionRequest, DDMTemplate template, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString portletResourceNamespace = ParamUtil.getString(\n\t\t\tactionRequest, \"portletResourceNamespace\");\n\t\tlong classNameId = ParamUtil.getLong(actionRequest, \"classNameId\");\n\t\tlong classPK = ParamUtil.getLong(actionRequest, \"classPK\");\n\t\tString structureAvailableFields = ParamUtil.getString(\n\t\t\tactionRequest, \"structureAvailableFields\");\n\n\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\tactionRequest, themeDisplay.getPpid(), themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcPath\", \"/edit_template.jsp\");\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"portletResourceNamespace\", portletResourceNamespace, false);\n\t\tportletURL.setParameter(\n\t\t\t\"templateId\", String.valueOf(template.getTemplateId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(template.getGroupId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"classNameId\", String.valueOf(classNameId), false);\n\t\tportletURL.setParameter(\"classPK\", String.valueOf(classPK), false);\n\t\tportletURL.setParameter(\"type\", template.getType(), false);\n\t\tportletURL.setParameter(\n\t\t\t\"structureAvailableFields\", structureAvailableFields, false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","id":4023,"modified_method":"protected String getSaveAndContinueRedirect(\n\t\t\tActionRequest actionRequest, DDMTemplate template, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString portletResourceNamespace = ParamUtil.getString(\n\t\t\tactionRequest, \"portletResourceNamespace\");\n\t\tlong classNameId = ParamUtil.getLong(actionRequest, \"classNameId\");\n\t\tlong classPK = ParamUtil.getLong(actionRequest, \"classPK\");\n\t\tString structureAvailableFields = ParamUtil.getString(\n\t\t\tactionRequest, \"structureAvailableFields\");\n\n\t\tLiferayPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, themeDisplay.getPpid(), themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcPath\", \"/edit_template.jsp\");\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"portletResourceNamespace\", portletResourceNamespace, false);\n\t\tportletURL.setParameter(\n\t\t\t\"templateId\", String.valueOf(template.getTemplateId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(template.getGroupId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"classNameId\", String.valueOf(classNameId), false);\n\t\tportletURL.setParameter(\"classPK\", String.valueOf(classPK), false);\n\t\tportletURL.setParameter(\"type\", template.getType(), false);\n\t\tportletURL.setParameter(\n\t\t\t\"structureAvailableFields\", structureAvailableFields, false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","commit_id":"53ed6c3e81f247e6c06f0419e119e1338168d205","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getSaveAndContinueRedirect(\n\t\t\tActionRequest actionRequest, DDMStructure structure,\n\t\t\tString redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString availableFields = ParamUtil.getString(\n\t\t\tactionRequest, \"availableFields\");\n\t\tString eventName = ParamUtil.getString(actionRequest, \"eventName\");\n\n\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\tactionRequest, themeDisplay.getPpid(), themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcPath\", \"/edit_structure.jsp\");\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(structure.getGroupId()), false);\n\n\t\tlong classNameId = PortalUtil.getClassNameId(DDMStructure.class);\n\n\t\tportletURL.setParameter(\n\t\t\t\"classNameId\", String.valueOf(classNameId), false);\n\n\t\tportletURL.setParameter(\n\t\t\t\"classPK\", String.valueOf(structure.getStructureId()), false);\n\t\tportletURL.setParameter(\"availableFields\", availableFields, false);\n\t\tportletURL.setParameter(\"eventName\", eventName, false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","id":4024,"modified_method":"protected String getSaveAndContinueRedirect(\n\t\t\tActionRequest actionRequest, DDMStructure structure,\n\t\t\tString redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString availableFields = ParamUtil.getString(\n\t\t\tactionRequest, \"availableFields\");\n\t\tString eventName = ParamUtil.getString(actionRequest, \"eventName\");\n\n\t\tLiferayPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, themeDisplay.getPpid(), themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcPath\", \"/edit_structure.jsp\");\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(structure.getGroupId()), false);\n\n\t\tlong classNameId = PortalUtil.getClassNameId(DDMStructure.class);\n\n\t\tportletURL.setParameter(\n\t\t\t\"classNameId\", String.valueOf(classNameId), false);\n\n\t\tportletURL.setParameter(\n\t\t\t\"classPK\", String.valueOf(structure.getStructureId()), false);\n\t\tportletURL.setParameter(\"availableFields\", availableFields, false);\n\t\tportletURL.setParameter(\"eventName\", eventName, false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","commit_id":"53ed6c3e81f247e6c06f0419e119e1338168d205","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getSaveAndContinueRedirect(\n\t\t\tActionRequest actionRequest, BlogsEntry entry, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tPortletConfig portletConfig = (PortletConfig)actionRequest.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcRenderCommandName\", \"/blogs/edit_entry\");\n\n\t\tportletURL.setParameter(Constants.CMD, Constants.UPDATE, false);\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(entry.getGroupId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"entryId\", String.valueOf(entry.getEntryId()), false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","id":4025,"modified_method":"protected String getSaveAndContinueRedirect(\n\t\t\tActionRequest actionRequest, BlogsEntry entry, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tPortletConfig portletConfig = (PortletConfig)actionRequest.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\tLiferayPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcRenderCommandName\", \"/blogs/edit_entry\");\n\n\t\tportletURL.setParameter(Constants.CMD, Constants.UPDATE, false);\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(entry.getGroupId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"entryId\", String.valueOf(entry.getEntryId()), false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","commit_id":"53ed6c3e81f247e6c06f0419e119e1338168d205","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getSaveAndContinueRedirect(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tFileEntry fileEntry, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\n\t\t\t\"mvcRenderCommandName\", \"/document_library/edit_file_entry\");\n\t\tportletURL.setParameter(Constants.CMD, Constants.UPDATE, false);\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(fileEntry.getGroupId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"fileEntryId\", String.valueOf(fileEntry.getFileEntryId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"version\", String.valueOf(fileEntry.getVersion()), false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","id":4026,"modified_method":"protected String getSaveAndContinueRedirect(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tFileEntry fileEntry, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tLiferayPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\n\t\t\t\"mvcRenderCommandName\", \"/document_library/edit_file_entry\");\n\t\tportletURL.setParameter(Constants.CMD, Constants.UPDATE, false);\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(fileEntry.getGroupId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"fileEntryId\", String.valueOf(fileEntry.getFileEntryId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"version\", String.valueOf(fileEntry.getVersion()), false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","commit_id":"53ed6c3e81f247e6c06f0419e119e1338168d205","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doProcessAction(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tPortletConfig portletConfig = getPortletConfig(actionRequest);\n\n\t\ttry {\n\t\t\tlong nodeId = ParamUtil.getLong(actionRequest, \"nodeId\");\n\t\t\tString nodeName = ParamUtil.getString(actionRequest, \"nodeName\");\n\t\t\tString title = ParamUtil.getString(actionRequest, \"title\");\n\t\t\tdouble version = ParamUtil.getDouble(actionRequest, \"version\");\n\n\t\t\tString targetExtension = ParamUtil.getString(\n\t\t\t\tactionRequest, \"targetExtension\");\n\n\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);\n\n\t\t\tPortletURL viewPageURL = new PortletURLImpl(\n\t\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\t\tviewPageURL.setParameter(\"mvcRenderCommandName\", \"/wiki/view\");\n\t\t\tviewPageURL.setParameter(\"nodeName\", nodeName);\n\t\t\tviewPageURL.setParameter(\"title\", title);\n\t\t\tviewPageURL.setPortletMode(PortletMode.VIEW);\n\t\t\tviewPageURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\t\tPortletURL editPageURL = new PortletURLImpl(\n\t\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\t\teditPageURL.setParameter(\"mvcRenderCommandName\", \"/wiki/edit_page\");\n\t\t\teditPageURL.setParameter(\"nodeId\", String.valueOf(nodeId));\n\t\t\teditPageURL.setParameter(\"title\", title);\n\t\t\teditPageURL.setPortletMode(PortletMode.VIEW);\n\t\t\teditPageURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\t\tactionRequest);\n\t\t\tHttpServletResponse response = PortalUtil.getHttpServletResponse(\n\t\t\t\tactionResponse);\n\n\t\t\tgetFile(\n\t\t\t\tnodeId, title, version, targetExtension, viewPageURL,\n\t\t\t\teditPageURL, themeDisplay, request, response);\n\n\t\t\tactionResponse.setRenderParameter(\"mvcPath\", \"/null.jsp\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tString host = PrefsPropsUtil.getString(\n\t\t\t\tPropsKeys.OPENOFFICE_SERVER_HOST);\n\n\t\t\tif (Validator.isNotNull(host) && !host.equals(_LOCALHOST_IP) &&\n\t\t\t\t!host.startsWith(_LOCALHOST)) {\n\n\t\t\t\tStringBundler sb = new StringBundler(3);\n\n\t\t\t\tsb.append(\"Conversion using a remote OpenOffice instance is \");\n\t\t\t\tsb.append(\"not fully supported. Please use a local instance \");\n\t\t\t\tsb.append(\"to prevent any limitations and problems.\");\n\n\t\t\t\t_log.error(sb.toString());\n\t\t\t}\n\n\t\t\tPortalUtil.sendError(e, actionRequest, actionResponse);\n\t\t}\n\t}","id":4027,"modified_method":"@Override\n\tprotected void doProcessAction(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tPortletConfig portletConfig = getPortletConfig(actionRequest);\n\n\t\ttry {\n\t\t\tlong nodeId = ParamUtil.getLong(actionRequest, \"nodeId\");\n\t\t\tString nodeName = ParamUtil.getString(actionRequest, \"nodeName\");\n\t\t\tString title = ParamUtil.getString(actionRequest, \"title\");\n\t\t\tdouble version = ParamUtil.getDouble(actionRequest, \"version\");\n\n\t\t\tString targetExtension = ParamUtil.getString(\n\t\t\t\tactionRequest, \"targetExtension\");\n\n\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);\n\n\t\t\tPortletURL viewPageURL = PortletURLFactoryUtil.create(\n\t\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\t\tviewPageURL.setParameter(\"mvcRenderCommandName\", \"/wiki/view\");\n\t\t\tviewPageURL.setParameter(\"nodeName\", nodeName);\n\t\t\tviewPageURL.setParameter(\"title\", title);\n\t\t\tviewPageURL.setPortletMode(PortletMode.VIEW);\n\t\t\tviewPageURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\t\tPortletURL editPageURL = PortletURLFactoryUtil.create(\n\t\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\t\teditPageURL.setParameter(\"mvcRenderCommandName\", \"/wiki/edit_page\");\n\t\t\teditPageURL.setParameter(\"nodeId\", String.valueOf(nodeId));\n\t\t\teditPageURL.setParameter(\"title\", title);\n\t\t\teditPageURL.setPortletMode(PortletMode.VIEW);\n\t\t\teditPageURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\t\tactionRequest);\n\t\t\tHttpServletResponse response = PortalUtil.getHttpServletResponse(\n\t\t\t\tactionResponse);\n\n\t\t\tgetFile(\n\t\t\t\tnodeId, title, version, targetExtension, viewPageURL,\n\t\t\t\teditPageURL, themeDisplay, request, response);\n\n\t\t\tactionResponse.setRenderParameter(\"mvcPath\", \"/null.jsp\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tString host = PrefsPropsUtil.getString(\n\t\t\t\tPropsKeys.OPENOFFICE_SERVER_HOST);\n\n\t\t\tif (Validator.isNotNull(host) && !host.equals(_LOCALHOST_IP) &&\n\t\t\t\t!host.startsWith(_LOCALHOST)) {\n\n\t\t\t\tStringBundler sb = new StringBundler(3);\n\n\t\t\t\tsb.append(\"Conversion using a remote OpenOffice instance is \");\n\t\t\t\tsb.append(\"not fully supported. Please use a local instance \");\n\t\t\t\tsb.append(\"to prevent any limitations and problems.\");\n\n\t\t\t\t_log.error(sb.toString());\n\t\t\t}\n\n\t\t\tPortalUtil.sendError(e, actionRequest, actionResponse);\n\t\t}\n\t}","commit_id":"53ed6c3e81f247e6c06f0419e119e1338168d205","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String execute(\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, MBPortletKeys.MESSAGE_BOARDS, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"mvcRenderCommandName\", \"/message_boards/view_recent_posts\");\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","id":4028,"modified_method":"@Override\n\tpublic String execute(\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, MBPortletKeys.MESSAGE_BOARDS, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"mvcRenderCommandName\", \"/message_boards/view_recent_posts\");\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"53ed6c3e81f247e6c06f0419e119e1338168d205","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void postProcessAuthFailure(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tLiferayPortletRequest liferayPortletRequest =\n\t\t\tPortalUtil.getLiferayPortletRequest(actionRequest);\n\n\t\tString portletName = liferayPortletRequest.getPortletName();\n\n\t\tLayout layout = (Layout)actionRequest.getAttribute(WebKeys.LAYOUT);\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\tactionRequest, portletName, layout.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"saveLastPath\", Boolean.FALSE.toString());\n\n\t\tString redirect = ParamUtil.getString(actionRequest, \"redirect\");\n\n\t\tif (Validator.isNotNull(redirect)) {\n\t\t\tportletURL.setParameter(\"redirect\", redirect);\n\t\t}\n\n\t\tString login = ParamUtil.getString(actionRequest, \"login\");\n\n\t\tif (Validator.isNotNull(login)) {\n\t\t\tportletURL.setParameter(\"login\", login);\n\t\t}\n\n\t\tif (portletName.equals(LoginPortletKeys.LOGIN)) {\n\t\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\t\t}\n\t\telse {\n\t\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\t\t}\n\n\t\tactionResponse.sendRedirect(portletURL.toString());\n\t}","id":4029,"modified_method":"protected void postProcessAuthFailure(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tLiferayPortletRequest liferayPortletRequest =\n\t\t\tPortalUtil.getLiferayPortletRequest(actionRequest);\n\n\t\tString portletName = liferayPortletRequest.getPortletName();\n\n\t\tLayout layout = (Layout)actionRequest.getAttribute(WebKeys.LAYOUT);\n\n\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, portletName, layout.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"saveLastPath\", Boolean.FALSE.toString());\n\n\t\tString redirect = ParamUtil.getString(actionRequest, \"redirect\");\n\n\t\tif (Validator.isNotNull(redirect)) {\n\t\t\tportletURL.setParameter(\"redirect\", redirect);\n\t\t}\n\n\t\tString login = ParamUtil.getString(actionRequest, \"login\");\n\n\t\tif (Validator.isNotNull(login)) {\n\t\t\tportletURL.setParameter(\"login\", login);\n\t\t}\n\n\t\tif (portletName.equals(LoginPortletKeys.LOGIN)) {\n\t\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\t\t}\n\t\telse {\n\t\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\t\t}\n\n\t\tactionResponse.sendRedirect(portletURL.toString());\n\t}","commit_id":"53ed6c3e81f247e6c06f0419e119e1338168d205","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Asynchronous\n   public <H extends ProcessHandle> void runAsynchronously(RunnableProcess<H> process, H handle)\n   {\n      try\n      {\n         process.run(handle);\n      }\n      catch( Throwable t )\n      {\n         log.error(\"Exception with long running process: \" + t.getMessage());\n         process.handleThrowable(handle, t);\n      }\n      finally\n      {\n         handle.finish();\n      }\n   }","id":4030,"modified_method":"@Asynchronous\n   public <H extends ProcessHandle> void runAsynchronously(RunnableProcess<H> process, H handle)\n   {\n      try\n      {\n         // Authenticate as the provided credentials\n         if( process.getRunAsUsername() != null )\n         {\n            ZanataIdentity identity = ZanataIdentity.instance();\n            identity.getCredentials().setUsername( process.getRunAsUsername() );\n            identity.setApiKey( process.getRunAsApiKey() );\n            identity.login();\n         }\n\n         process.run(handle);\n      }\n      catch( Throwable t )\n      {\n         log.error(\"Exception with long running process: \" + t.getMessage());\n         process.handleThrowable(handle, t);\n      }\n      finally\n      {\n         handle.finish();\n      }\n   }","commit_id":"2c5ef50c198e43b4db9ae89cbdb2f82c8d3cb15d","url":"https://github.com/zanata/zanata-server"},{"original_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                indexService.shutdown();\n                graphDb.shutdown();\n            }\n        } );\n    }","id":4031,"modified_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                graphDb.shutdown();\n            }\n        } );\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node getOrCreateNode( String name )\n    {\n        Node node = indexService.getSingleNode( NAME_KEY, name );\n        if ( node == null )\n        {\n            node = graphDb.createNode();\n            node.setProperty( NAME_KEY, name );\n            indexService.index( node, NAME_KEY, name );\n        }\n        return node;\n    }","id":4032,"modified_method":"private static Node getOrCreateNode( String name )\n    {\n        Node node = indexService.get( NAME_KEY, name ).getSingle();\n        if ( node == null )\n        {\n            node = graphDb.createNode();\n            node.setProperty( NAME_KEY, name );\n            indexService.add( node, NAME_KEY, name );\n        }\n        return node;\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void main( final String[] args )\n    {\n        deleteFileOrDirectory( new File( DB_PATH ) );\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            /*\n             *  (Neo) --> (Trinity)\n             *     \\       ^\n             *      v     /\n             *    (Morpheus) --> (Cypher)\n             *            \\         |\n             *             v        v\n             *            (Agent Smith)\n             */\n            createChain( \"Neo\", \"Trinity\" );\n            createChain( \"Neo\", \"Morpheus\", \"Trinity\" );\n            createChain( \"Morpheus\", \"Cypher\", \"Agent Smith\" );\n            createChain( \"Morpheus\", \"Agent Smith\" );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n\n        // So let's find the shortest path between Neo and Agent Smith\n        Node neo = getOrCreateNode( \"Neo\" );\n        Node agentSmith = getOrCreateNode( \"Agent Smith\" );\n        // START SNIPPET: shortestPathUsage\n        PathFinder<Path> finder = GraphAlgoFactory.shortestPath(\n                Traversal.expanderForTypes( KNOWS, Direction.BOTH ), 4 );\n        Path foundPath = finder.findSinglePath( neo, agentSmith );\n        System.out.println( \"Path from Neo to Agent Smith: \"\n                            + Traversal.simplePathToString( foundPath, NAME_KEY ) );\n        // END SNIPPET: shortestPathUsage\n\n        System.out.println( \"Shutting down database ...\" );\n        indexService.shutdown();\n        graphDb.shutdown();\n    }","id":4033,"modified_method":"public static void main( final String[] args )\n    {\n        deleteFileOrDirectory( new File( DB_PATH ) );\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            /*\n             *  (Neo) --> (Trinity)\n             *     \\       ^\n             *      v     /\n             *    (Morpheus) --> (Cypher)\n             *            \\         |\n             *             v        v\n             *            (Agent Smith)\n             */\n            createChain( \"Neo\", \"Trinity\" );\n            createChain( \"Neo\", \"Morpheus\", \"Trinity\" );\n            createChain( \"Morpheus\", \"Cypher\", \"Agent Smith\" );\n            createChain( \"Morpheus\", \"Agent Smith\" );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n\n        // So let's find the shortest path between Neo and Agent Smith\n        Node neo = getOrCreateNode( \"Neo\" );\n        Node agentSmith = getOrCreateNode( \"Agent Smith\" );\n        // START SNIPPET: shortestPathUsage\n        PathFinder<Path> finder = GraphAlgoFactory.shortestPath(\n                Traversal.expanderForTypes( KNOWS, Direction.BOTH ), 4 );\n        Path foundPath = finder.findSinglePath( neo, agentSmith );\n        System.out.println( \"Path from Neo to Agent Smith: \"\n                            + Traversal.simplePathToString( foundPath, NAME_KEY ) );\n        // END SNIPPET: shortestPathUsage\n\n        System.out.println( \"Shutting down database ...\" );\n        graphDb.shutdown();\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void shutdown()\n    {\n        indexService.shutdown();\n        graphDb.shutdown();\n    }","id":4034,"modified_method":"private static void shutdown()\n    {\n        graphDb.shutdown();\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void main( final String[] args )\n    {\n        // START SNIPPET: startDb\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        // END SNIPPET: startDb\n\n        // START SNIPPET: addUsers\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            // Create users sub reference node (see design guidelines on\n            // http://wiki.neo4j.org/ )\n            Node usersReferenceNode = graphDb.createNode();\n            graphDb.getReferenceNode().createRelationshipTo(\n                usersReferenceNode, RelTypes.USERS_REFERENCE );\n            // Create some users and index their names with the IndexService\n            for ( int id = 0; id < 100; id++ )\n            {\n                Node userNode = createAndIndexUser( idToUserName( id ) );\n                usersReferenceNode.createRelationshipTo( userNode,\n                    RelTypes.USER );\n            }\n            // END SNIPPET: addUsers\n            System.out.println( \"Users created\" );\n\n            // Find a user through the search index\n            // START SNIPPET: findUser\n            int idToFind = 45;\n            Node foundUser = indexService.getSingleNode( USERNAME_KEY,\n                idToUserName( idToFind ) );\n            System.out.println( \"The username of user \" + idToFind + \" is \"\n                + foundUser.getProperty( USERNAME_KEY ) );\n            // END SNIPPET: findUser\n\n            // Delete the persons and remove them from the index\n            for ( Relationship relationship : usersReferenceNode.getRelationships(\n                    RelTypes.USER, Direction.OUTGOING ) )\n            {\n                Node user = relationship.getEndNode();\n                indexService.removeIndex( user, USERNAME_KEY,\n                        user.getProperty( USERNAME_KEY ) );\n                user.delete();\n                relationship.delete();\n            }\n            usersReferenceNode.getSingleRelationship( RelTypes.USERS_REFERENCE,\n                    Direction.INCOMING ).delete();\n            usersReferenceNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n        System.out.println( \"Shutting down database ...\" );\n        shutdown();\n    }","id":4035,"modified_method":"public static void main( final String[] args )\n    {\n        // START SNIPPET: startDb\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        // END SNIPPET: startDb\n\n        // START SNIPPET: addUsers\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            // Create users sub reference node (see design guidelines on\n            // http://wiki.neo4j.org/ )\n            Node usersReferenceNode = graphDb.createNode();\n            graphDb.getReferenceNode().createRelationshipTo(\n                usersReferenceNode, RelTypes.USERS_REFERENCE );\n            // Create some users and index their names with the IndexService\n            for ( int id = 0; id < 100; id++ )\n            {\n                Node userNode = createAndIndexUser( idToUserName( id ) );\n                usersReferenceNode.createRelationshipTo( userNode,\n                    RelTypes.USER );\n            }\n            // END SNIPPET: addUsers\n            System.out.println( \"Users created\" );\n\n            // Find a user through the search index\n            // START SNIPPET: findUser\n            int idToFind = 45;\n            Node foundUser = indexService.get( USERNAME_KEY,\n                idToUserName( idToFind ) ).getSingle();\n            System.out.println( \"The username of user \" + idToFind + \" is \"\n                + foundUser.getProperty( USERNAME_KEY ) );\n            // END SNIPPET: findUser\n\n            // Delete the persons and remove them from the index\n            for ( Relationship relationship : usersReferenceNode.getRelationships(\n                    RelTypes.USER, Direction.OUTGOING ) )\n            {\n                Node user = relationship.getEndNode();\n                indexService.remove(  user, USERNAME_KEY,\n                        user.getProperty( USERNAME_KEY ) );\n                user.delete();\n                relationship.delete();\n            }\n            usersReferenceNode.getSingleRelationship( RelTypes.USERS_REFERENCE,\n                    Direction.INCOMING ).delete();\n            usersReferenceNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n        System.out.println( \"Shutting down database ...\" );\n        shutdown();\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node createAndIndexUser( final String username )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( USERNAME_KEY, username );\n        indexService.index( node, USERNAME_KEY, username );\n        return node;\n    }","id":4036,"modified_method":"private static Node createAndIndexUser( final String username )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( USERNAME_KEY, username );\n        indexService.add( node, USERNAME_KEY, username );\n        return node;\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void deletePerson( Person person )\n    {\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node personNode = person.getUnderlyingNode();\n            index.removeIndex( personNode, Person.NAME, person.getName() );\n            for ( Person friend : person.getFriends() )\n            {\n                person.removeFriend( friend );\n            }\n            personNode.getSingleRelationship( A_PERSON, Direction.INCOMING ).delete();\n\n            for ( StatusUpdate status : person.getStatus() )\n            {\n                Node statusNode = status.getUnderlyingNode();\n                for ( Relationship r : statusNode.getRelationships() )\n                {\n                    r.delete();\n                }\n                statusNode.delete();\n            }\n\n            personNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","id":4037,"modified_method":"public void deletePerson( Person person )\n    {\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node personNode = person.getUnderlyingNode();\n            index.remove( personNode, Person.NAME, person.getName() );\n            for ( Person friend : person.getFriends() )\n            {\n                person.removeFriend( friend );\n            }\n            personNode.getSingleRelationship( A_PERSON, Direction.INCOMING ).delete();\n\n            for ( StatusUpdate status : person.getStatus() )\n            {\n                Node statusNode = status.getUnderlyingNode();\n                for ( Relationship r : statusNode.getRelationships() )\n                {\n                    r.delete();\n                }\n                statusNode.delete();\n            }\n\n            personNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Person getPersonByName( String name )\n    {\n        Node personNode = index.getSingleNode( Person.NAME, name );\n        if ( personNode == null )\n        {\n            throw new IllegalArgumentException( \"Person[\" + name\n                    + \"] not found\" );\n        }\n        return new Person( personNode );\n    }","id":4038,"modified_method":"public Person getPersonByName( String name )\n    {\n        Node personNode = index.get( Person.NAME, name ).getSingle();\n        if ( personNode == null )\n        {\n            throw new IllegalArgumentException( \"Person[\" + name\n                    + \"] not found\" );\n        }\n        return new Person( personNode );\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"public PersonRepository( GraphDatabaseService graphDb, IndexService index )\n    {\n        this.graphDb = graphDb;\n        this.index = index;\n\n        personRefNode = getPersonsRootNode( graphDb );\n    }","id":4039,"modified_method":"public PersonRepository( GraphDatabaseService graphDb, Index<Node> index )\n    {\n        this.graphDb = graphDb;\n        this.index = index;\n\n        personRefNode = getPersonsRootNode( graphDb );\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Person createPerson( String name ) throws Exception\n    {\n        // to guard against duplications we use the lock grabbed on ref node\n        // when\n        // creating a relationship and are optimistic about person not existing\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node newPersonNode = graphDb.createNode();\n            personRefNode.createRelationshipTo( newPersonNode, A_PERSON );\n            // lock now taken, we can check if  already exist in index\n            Node alreadyExist = index.getSingleNode( Person.NAME, name );\n            if ( alreadyExist != null )\n            {\n                tx.failure();\n                throw new Exception( \"Person with this name already exists \" );\n            }\n            newPersonNode.setProperty( Person.NAME, name );\n            index.index( newPersonNode, Person.NAME, name );\n            tx.success();\n            return new Person( newPersonNode );\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","id":4040,"modified_method":"public Person createPerson( String name ) throws Exception\n    {\n        // to guard against duplications we use the lock grabbed on ref node\n        // when\n        // creating a relationship and are optimistic about person not existing\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node newPersonNode = graphDb.createNode();\n            personRefNode.createRelationshipTo( newPersonNode, A_PERSON );\n            // lock now taken, we can check if  already exist in index\n            Node alreadyExist = index.get( Person.NAME, name ).getSingle();\n            if ( alreadyExist != null )\n            {\n                tx.failure();\n                throw new Exception( \"Person with this name already exists \" );\n            }\n            newPersonNode.setProperty( Person.NAME, name );\n            index.add( newPersonNode, Person.NAME, name );\n            tx.success();\n            return new Person( newPersonNode );\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                index.shutdown();\n                graphDb.shutdown();\n            }\n        } );\n    }","id":4041,"modified_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                graphDb.shutdown();\n            }\n        } );\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.getSingleNode( category, name );\n    }","id":4042,"modified_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.get( category, name ).getSingle();\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.index( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","id":4043,"modified_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.add( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"@AfterClass\n    public static void tearDown()\n    {\n        index.shutdown();\n        graphDb.shutdown();\n    }","id":4044,"modified_method":"@AfterClass\n    public static void tearDown()\n    {\n        graphDb.shutdown();\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        createNodespace();\n    }","id":4045,"modified_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        createNodespace();\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.index( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","id":4046,"modified_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.add( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                index.shutdown();\n                graphDb.shutdown();\n            }\n        } );\n    }","id":4047,"modified_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                graphDb.shutdown();\n            }\n        } );\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.getSingleNode( category, name );\n    }","id":4048,"modified_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.get( category, name ).getSingle();\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"@AfterClass\n    public static void tearDown()\n    {\n        index.shutdown();\n        graphDb.shutdown();\n    }","id":4049,"modified_method":"@AfterClass\n    public static void tearDown()\n    {\n        graphDb.shutdown();\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        createNodespace();\n    }","id":4050,"modified_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        createNodespace();\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Before\n    public void setup() throws Exception\n    {\n        graphDb = new EmbeddedGraphDatabase( \"target/socnetdb\" );\n        index = new LuceneIndexService( graphDb );\n        personRepository = new PersonRepository( graphDb, index );\n        deleteSocialGraph();\n\n        nrOfPersons = 20;\n        createPersons();\n        setupFriendsBetweenPeople( 10 );\n    }","id":4051,"modified_method":"@Before\n    public void setup() throws Exception\n    {\n        graphDb = new EmbeddedGraphDatabase( \"target/socnetdb\" );\n        index = graphDb.index().forNodes( \"nodes\" );\n        personRepository = new PersonRepository( graphDb, index );\n        deleteSocialGraph();\n\n        nrOfPersons = 20;\n        createPersons();\n        setupFriendsBetweenPeople( 10 );\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"@After\n    public void teardown()\n    {\n        try\n        {\n            deleteSocialGraph();\n        }\n        finally\n        {\n            index.shutdown();\n            graphDb.shutdown();\n        }\n    }","id":4052,"modified_method":"@After\n    public void teardown()\n    {\n        try\n        {\n            deleteSocialGraph();\n        }\n        finally\n        {\n            graphDb.shutdown();\n        }\n    }","commit_id":"6a7b2e673459da6e693d6c2bbf22a71f4182a802","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node getOrCreateNode( String name )\n    {\n        Node node = indexService.getSingleNode( NAME_KEY, name );\n        if ( node == null )\n        {\n            node = graphDb.createNode();\n            node.setProperty( NAME_KEY, name );\n            indexService.index( node, NAME_KEY, name );\n        }\n        return node;\n    }","id":4053,"modified_method":"private static Node getOrCreateNode( String name )\n    {\n        Node node = indexService.get( NAME_KEY, name ).getSingle();\n        if ( node == null )\n        {\n            node = graphDb.createNode();\n            node.setProperty( NAME_KEY, name );\n            indexService.add( node, NAME_KEY, name );\n        }\n        return node;\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void main( final String[] args )\n    {\n        deleteFileOrDirectory( new File( DB_PATH ) );\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            /*\n             *  (Neo) --> (Trinity)\n             *     \\       ^\n             *      v     /\n             *    (Morpheus) --> (Cypher)\n             *            \\         |\n             *             v        v\n             *            (Agent Smith)\n             */\n            createChain( \"Neo\", \"Trinity\" );\n            createChain( \"Neo\", \"Morpheus\", \"Trinity\" );\n            createChain( \"Morpheus\", \"Cypher\", \"Agent Smith\" );\n            createChain( \"Morpheus\", \"Agent Smith\" );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n\n        // So let's find the shortest path between Neo and Agent Smith\n        Node neo = getOrCreateNode( \"Neo\" );\n        Node agentSmith = getOrCreateNode( \"Agent Smith\" );\n        // START SNIPPET: shortestPathUsage\n        PathFinder<Path> finder = GraphAlgoFactory.shortestPath(\n                Traversal.expanderForTypes( KNOWS, Direction.BOTH ), 4 );\n        Path foundPath = finder.findSinglePath( neo, agentSmith );\n        System.out.println( \"Path from Neo to Agent Smith: \"\n                            + Traversal.simplePathToString( foundPath, NAME_KEY ) );\n        // END SNIPPET: shortestPathUsage\n\n        System.out.println( \"Shutting down database ...\" );\n        indexService.shutdown();\n        graphDb.shutdown();\n    }","id":4054,"modified_method":"public static void main( final String[] args )\n    {\n        deleteFileOrDirectory( new File( DB_PATH ) );\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            /*\n             *  (Neo) --> (Trinity)\n             *     \\       ^\n             *      v     /\n             *    (Morpheus) --> (Cypher)\n             *            \\         |\n             *             v        v\n             *            (Agent Smith)\n             */\n            createChain( \"Neo\", \"Trinity\" );\n            createChain( \"Neo\", \"Morpheus\", \"Trinity\" );\n            createChain( \"Morpheus\", \"Cypher\", \"Agent Smith\" );\n            createChain( \"Morpheus\", \"Agent Smith\" );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n\n        // So let's find the shortest path between Neo and Agent Smith\n        Node neo = getOrCreateNode( \"Neo\" );\n        Node agentSmith = getOrCreateNode( \"Agent Smith\" );\n        // START SNIPPET: shortestPathUsage\n        PathFinder<Path> finder = GraphAlgoFactory.shortestPath(\n                Traversal.expanderForTypes( KNOWS, Direction.BOTH ), 4 );\n        Path foundPath = finder.findSinglePath( neo, agentSmith );\n        System.out.println( \"Path from Neo to Agent Smith: \"\n                            + Traversal.simplePathToString( foundPath, NAME_KEY ) );\n        // END SNIPPET: shortestPathUsage\n\n        System.out.println( \"Shutting down database ...\" );\n        graphDb.shutdown();\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                indexService.shutdown();\n                graphDb.shutdown();\n            }\n        } );\n    }","id":4055,"modified_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                graphDb.shutdown();\n            }\n        } );\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node createAndIndexUser( final String username )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( USERNAME_KEY, username );\n        indexService.index( node, USERNAME_KEY, username );\n        return node;\n    }","id":4056,"modified_method":"private static Node createAndIndexUser( final String username )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( USERNAME_KEY, username );\n        indexService.add( node, USERNAME_KEY, username );\n        return node;\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void shutdown()\n    {\n        indexService.shutdown();\n        graphDb.shutdown();\n    }","id":4057,"modified_method":"private static void shutdown()\n    {\n        graphDb.shutdown();\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void main( final String[] args )\n    {\n        // START SNIPPET: startDb\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        // END SNIPPET: startDb\n\n        // START SNIPPET: addUsers\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            // Create users sub reference node (see design guidelines on\n            // http://wiki.neo4j.org/ )\n            Node usersReferenceNode = graphDb.createNode();\n            graphDb.getReferenceNode().createRelationshipTo(\n                usersReferenceNode, RelTypes.USERS_REFERENCE );\n            // Create some users and index their names with the IndexService\n            for ( int id = 0; id < 100; id++ )\n            {\n                Node userNode = createAndIndexUser( idToUserName( id ) );\n                usersReferenceNode.createRelationshipTo( userNode,\n                    RelTypes.USER );\n            }\n            // END SNIPPET: addUsers\n            System.out.println( \"Users created\" );\n\n            // Find a user through the search index\n            // START SNIPPET: findUser\n            int idToFind = 45;\n            Node foundUser = indexService.getSingleNode( USERNAME_KEY,\n                idToUserName( idToFind ) );\n            System.out.println( \"The username of user \" + idToFind + \" is \"\n                + foundUser.getProperty( USERNAME_KEY ) );\n            // END SNIPPET: findUser\n\n            // Delete the persons and remove them from the index\n            for ( Relationship relationship : usersReferenceNode.getRelationships(\n                    RelTypes.USER, Direction.OUTGOING ) )\n            {\n                Node user = relationship.getEndNode();\n                indexService.removeIndex( user, USERNAME_KEY,\n                        user.getProperty( USERNAME_KEY ) );\n                user.delete();\n                relationship.delete();\n            }\n            usersReferenceNode.getSingleRelationship( RelTypes.USERS_REFERENCE,\n                    Direction.INCOMING ).delete();\n            usersReferenceNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n        System.out.println( \"Shutting down database ...\" );\n        shutdown();\n    }","id":4058,"modified_method":"public static void main( final String[] args )\n    {\n        // START SNIPPET: startDb\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        // END SNIPPET: startDb\n\n        // START SNIPPET: addUsers\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            // Create users sub reference node (see design guidelines on\n            // http://wiki.neo4j.org/ )\n            Node usersReferenceNode = graphDb.createNode();\n            graphDb.getReferenceNode().createRelationshipTo(\n                usersReferenceNode, RelTypes.USERS_REFERENCE );\n            // Create some users and index their names with the IndexService\n            for ( int id = 0; id < 100; id++ )\n            {\n                Node userNode = createAndIndexUser( idToUserName( id ) );\n                usersReferenceNode.createRelationshipTo( userNode,\n                    RelTypes.USER );\n            }\n            // END SNIPPET: addUsers\n            System.out.println( \"Users created\" );\n\n            // Find a user through the search index\n            // START SNIPPET: findUser\n            int idToFind = 45;\n            Node foundUser = indexService.get( USERNAME_KEY,\n                idToUserName( idToFind ) ).getSingle();\n            System.out.println( \"The username of user \" + idToFind + \" is \"\n                + foundUser.getProperty( USERNAME_KEY ) );\n            // END SNIPPET: findUser\n\n            // Delete the persons and remove them from the index\n            for ( Relationship relationship : usersReferenceNode.getRelationships(\n                    RelTypes.USER, Direction.OUTGOING ) )\n            {\n                Node user = relationship.getEndNode();\n                indexService.remove(  user, USERNAME_KEY,\n                        user.getProperty( USERNAME_KEY ) );\n                user.delete();\n                relationship.delete();\n            }\n            usersReferenceNode.getSingleRelationship( RelTypes.USERS_REFERENCE,\n                    Direction.INCOMING ).delete();\n            usersReferenceNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n        System.out.println( \"Shutting down database ...\" );\n        shutdown();\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Person createPerson( String name ) throws Exception\n    {\n        // to guard against duplications we use the lock grabbed on ref node\n        // when\n        // creating a relationship and are optimistic about person not existing\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node newPersonNode = graphDb.createNode();\n            personRefNode.createRelationshipTo( newPersonNode, A_PERSON );\n            // lock now taken, we can check if  already exist in index\n            Node alreadyExist = index.getSingleNode( Person.NAME, name );\n            if ( alreadyExist != null )\n            {\n                tx.failure();\n                throw new Exception( \"Person with this name already exists \" );\n            }\n            newPersonNode.setProperty( Person.NAME, name );\n            index.index( newPersonNode, Person.NAME, name );\n            tx.success();\n            return new Person( newPersonNode );\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","id":4059,"modified_method":"public Person createPerson( String name ) throws Exception\n    {\n        // to guard against duplications we use the lock grabbed on ref node\n        // when\n        // creating a relationship and are optimistic about person not existing\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node newPersonNode = graphDb.createNode();\n            personRefNode.createRelationshipTo( newPersonNode, A_PERSON );\n            // lock now taken, we can check if  already exist in index\n            Node alreadyExist = index.get( Person.NAME, name ).getSingle();\n            if ( alreadyExist != null )\n            {\n                tx.failure();\n                throw new Exception( \"Person with this name already exists \" );\n            }\n            newPersonNode.setProperty( Person.NAME, name );\n            index.add( newPersonNode, Person.NAME, name );\n            tx.success();\n            return new Person( newPersonNode );\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"public PersonRepository( GraphDatabaseService graphDb, IndexService index )\n    {\n        this.graphDb = graphDb;\n        this.index = index;\n\n        personRefNode = getPersonsRootNode( graphDb );\n    }","id":4060,"modified_method":"public PersonRepository( GraphDatabaseService graphDb, Index<Node> index )\n    {\n        this.graphDb = graphDb;\n        this.index = index;\n\n        personRefNode = getPersonsRootNode( graphDb );\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void deletePerson( Person person )\n    {\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node personNode = person.getUnderlyingNode();\n            index.removeIndex( personNode, Person.NAME, person.getName() );\n            for ( Person friend : person.getFriends() )\n            {\n                person.removeFriend( friend );\n            }\n            personNode.getSingleRelationship( A_PERSON, Direction.INCOMING ).delete();\n\n            for ( StatusUpdate status : person.getStatus() )\n            {\n                Node statusNode = status.getUnderlyingNode();\n                for ( Relationship r : statusNode.getRelationships() )\n                {\n                    r.delete();\n                }\n                statusNode.delete();\n            }\n\n            personNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","id":4061,"modified_method":"public void deletePerson( Person person )\n    {\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node personNode = person.getUnderlyingNode();\n            index.remove( personNode, Person.NAME, person.getName() );\n            for ( Person friend : person.getFriends() )\n            {\n                person.removeFriend( friend );\n            }\n            personNode.getSingleRelationship( A_PERSON, Direction.INCOMING ).delete();\n\n            for ( StatusUpdate status : person.getStatus() )\n            {\n                Node statusNode = status.getUnderlyingNode();\n                for ( Relationship r : statusNode.getRelationships() )\n                {\n                    r.delete();\n                }\n                statusNode.delete();\n            }\n\n            personNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Person getPersonByName( String name )\n    {\n        Node personNode = index.getSingleNode( Person.NAME, name );\n        if ( personNode == null )\n        {\n            throw new IllegalArgumentException( \"Person[\" + name\n                    + \"] not found\" );\n        }\n        return new Person( personNode );\n    }","id":4062,"modified_method":"public Person getPersonByName( String name )\n    {\n        Node personNode = index.get( Person.NAME, name ).getSingle();\n        if ( personNode == null )\n        {\n            throw new IllegalArgumentException( \"Person[\" + name\n                    + \"] not found\" );\n        }\n        return new Person( personNode );\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        createNodespace();\n    }","id":4063,"modified_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        createNodespace();\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                index.shutdown();\n                graphDb.shutdown();\n            }\n        } );\n    }","id":4064,"modified_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                graphDb.shutdown();\n            }\n        } );\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.index( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","id":4065,"modified_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.add( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.getSingleNode( category, name );\n    }","id":4066,"modified_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.get( category, name ).getSingle();\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"@AfterClass\n    public static void tearDown()\n    {\n        index.shutdown();\n        graphDb.shutdown();\n    }","id":4067,"modified_method":"@AfterClass\n    public static void tearDown()\n    {\n        graphDb.shutdown();\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                index.shutdown();\n                graphDb.shutdown();\n            }\n        } );\n    }","id":4068,"modified_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                graphDb.shutdown();\n            }\n        } );\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.index( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","id":4069,"modified_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.add( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"@AfterClass\n    public static void tearDown()\n    {\n        index.shutdown();\n        graphDb.shutdown();\n    }","id":4070,"modified_method":"@AfterClass\n    public static void tearDown()\n    {\n        graphDb.shutdown();\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        createNodespace();\n    }","id":4071,"modified_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        createNodespace();\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.getSingleNode( category, name );\n    }","id":4072,"modified_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.get( category, name ).getSingle();\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"@After\n    public void teardown()\n    {\n        try\n        {\n            deleteSocialGraph();\n        }\n        finally\n        {\n            index.shutdown();\n            graphDb.shutdown();\n        }\n    }","id":4073,"modified_method":"@After\n    public void teardown()\n    {\n        try\n        {\n            deleteSocialGraph();\n        }\n        finally\n        {\n            graphDb.shutdown();\n        }\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Before\n    public void setup() throws Exception\n    {\n        graphDb = new EmbeddedGraphDatabase( \"target/socnetdb\" );\n        index = new LuceneIndexService( graphDb );\n        personRepository = new PersonRepository( graphDb, index );\n        deleteSocialGraph();\n\n        nrOfPersons = 20;\n        createPersons();\n        setupFriendsBetweenPeople( 10 );\n    }","id":4074,"modified_method":"@Before\n    public void setup() throws Exception\n    {\n        graphDb = new EmbeddedGraphDatabase( \"target/socnetdb\" );\n        index = graphDb.index().forNodes( \"nodes\" );\n        personRepository = new PersonRepository( graphDb, index );\n        deleteSocialGraph();\n\n        nrOfPersons = 20;\n        createPersons();\n        setupFriendsBetweenPeople( 10 );\n    }","commit_id":"7f8fc926b35d7fa1b4c662971594f9e89f475b17","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                indexService.shutdown();\n                graphDb.shutdown();\n            }\n        } );\n    }","id":4075,"modified_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                graphDb.shutdown();\n            }\n        } );\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void main( final String[] args )\n    {\n        deleteFileOrDirectory( new File( DB_PATH ) );\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            /*\n             *  (Neo) --> (Trinity)\n             *     \\       ^\n             *      v     /\n             *    (Morpheus) --> (Cypher)\n             *            \\         |\n             *             v        v\n             *            (Agent Smith)\n             */\n            createChain( \"Neo\", \"Trinity\" );\n            createChain( \"Neo\", \"Morpheus\", \"Trinity\" );\n            createChain( \"Morpheus\", \"Cypher\", \"Agent Smith\" );\n            createChain( \"Morpheus\", \"Agent Smith\" );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n\n        // So let's find the shortest path between Neo and Agent Smith\n        Node neo = getOrCreateNode( \"Neo\" );\n        Node agentSmith = getOrCreateNode( \"Agent Smith\" );\n        // START SNIPPET: shortestPathUsage\n        PathFinder<Path> finder = GraphAlgoFactory.shortestPath(\n                Traversal.expanderForTypes( KNOWS, Direction.BOTH ), 4 );\n        Path foundPath = finder.findSinglePath( neo, agentSmith );\n        System.out.println( \"Path from Neo to Agent Smith: \"\n                            + Traversal.simplePathToString( foundPath, NAME_KEY ) );\n        // END SNIPPET: shortestPathUsage\n\n        System.out.println( \"Shutting down database ...\" );\n        indexService.shutdown();\n        graphDb.shutdown();\n    }","id":4076,"modified_method":"public static void main( final String[] args )\n    {\n        deleteFileOrDirectory( new File( DB_PATH ) );\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            /*\n             *  (Neo) --> (Trinity)\n             *     \\       ^\n             *      v     /\n             *    (Morpheus) --> (Cypher)\n             *            \\         |\n             *             v        v\n             *            (Agent Smith)\n             */\n            createChain( \"Neo\", \"Trinity\" );\n            createChain( \"Neo\", \"Morpheus\", \"Trinity\" );\n            createChain( \"Morpheus\", \"Cypher\", \"Agent Smith\" );\n            createChain( \"Morpheus\", \"Agent Smith\" );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n\n        // So let's find the shortest path between Neo and Agent Smith\n        Node neo = getOrCreateNode( \"Neo\" );\n        Node agentSmith = getOrCreateNode( \"Agent Smith\" );\n        // START SNIPPET: shortestPathUsage\n        PathFinder<Path> finder = GraphAlgoFactory.shortestPath(\n                Traversal.expanderForTypes( KNOWS, Direction.BOTH ), 4 );\n        Path foundPath = finder.findSinglePath( neo, agentSmith );\n        System.out.println( \"Path from Neo to Agent Smith: \"\n                            + Traversal.simplePathToString( foundPath, NAME_KEY ) );\n        // END SNIPPET: shortestPathUsage\n\n        System.out.println( \"Shutting down database ...\" );\n        graphDb.shutdown();\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node getOrCreateNode( String name )\n    {\n        Node node = indexService.getSingleNode( NAME_KEY, name );\n        if ( node == null )\n        {\n            node = graphDb.createNode();\n            node.setProperty( NAME_KEY, name );\n            indexService.index( node, NAME_KEY, name );\n        }\n        return node;\n    }","id":4077,"modified_method":"private static Node getOrCreateNode( String name )\n    {\n        Node node = indexService.get( NAME_KEY, name ).getSingle();\n        if ( node == null )\n        {\n            node = graphDb.createNode();\n            node.setProperty( NAME_KEY, name );\n            indexService.add( node, NAME_KEY, name );\n        }\n        return node;\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node createAndIndexUser( final String username )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( USERNAME_KEY, username );\n        indexService.index( node, USERNAME_KEY, username );\n        return node;\n    }","id":4078,"modified_method":"private static Node createAndIndexUser( final String username )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( USERNAME_KEY, username );\n        indexService.add( node, USERNAME_KEY, username );\n        return node;\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void main( final String[] args )\n    {\n        // START SNIPPET: startDb\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        // END SNIPPET: startDb\n\n        // START SNIPPET: addUsers\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            // Create users sub reference node (see design guidelines on\n            // http://wiki.neo4j.org/ )\n            Node usersReferenceNode = graphDb.createNode();\n            graphDb.getReferenceNode().createRelationshipTo(\n                usersReferenceNode, RelTypes.USERS_REFERENCE );\n            // Create some users and index their names with the IndexService\n            for ( int id = 0; id < 100; id++ )\n            {\n                Node userNode = createAndIndexUser( idToUserName( id ) );\n                usersReferenceNode.createRelationshipTo( userNode,\n                    RelTypes.USER );\n            }\n            // END SNIPPET: addUsers\n            System.out.println( \"Users created\" );\n\n            // Find a user through the search index\n            // START SNIPPET: findUser\n            int idToFind = 45;\n            Node foundUser = indexService.getSingleNode( USERNAME_KEY,\n                idToUserName( idToFind ) );\n            System.out.println( \"The username of user \" + idToFind + \" is \"\n                + foundUser.getProperty( USERNAME_KEY ) );\n            // END SNIPPET: findUser\n\n            // Delete the persons and remove them from the index\n            for ( Relationship relationship : usersReferenceNode.getRelationships(\n                    RelTypes.USER, Direction.OUTGOING ) )\n            {\n                Node user = relationship.getEndNode();\n                indexService.removeIndex( user, USERNAME_KEY,\n                        user.getProperty( USERNAME_KEY ) );\n                user.delete();\n                relationship.delete();\n            }\n            usersReferenceNode.getSingleRelationship( RelTypes.USERS_REFERENCE,\n                    Direction.INCOMING ).delete();\n            usersReferenceNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n        System.out.println( \"Shutting down database ...\" );\n        shutdown();\n    }","id":4079,"modified_method":"public static void main( final String[] args )\n    {\n        // START SNIPPET: startDb\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        // END SNIPPET: startDb\n\n        // START SNIPPET: addUsers\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            // Create users sub reference node (see design guidelines on\n            // http://wiki.neo4j.org/ )\n            Node usersReferenceNode = graphDb.createNode();\n            graphDb.getReferenceNode().createRelationshipTo(\n                usersReferenceNode, RelTypes.USERS_REFERENCE );\n            // Create some users and index their names with the IndexService\n            for ( int id = 0; id < 100; id++ )\n            {\n                Node userNode = createAndIndexUser( idToUserName( id ) );\n                usersReferenceNode.createRelationshipTo( userNode,\n                    RelTypes.USER );\n            }\n            // END SNIPPET: addUsers\n            System.out.println( \"Users created\" );\n\n            // Find a user through the search index\n            // START SNIPPET: findUser\n            int idToFind = 45;\n            Node foundUser = indexService.get( USERNAME_KEY,\n                idToUserName( idToFind ) ).getSingle();\n            System.out.println( \"The username of user \" + idToFind + \" is \"\n                + foundUser.getProperty( USERNAME_KEY ) );\n            // END SNIPPET: findUser\n\n            // Delete the persons and remove them from the index\n            for ( Relationship relationship : usersReferenceNode.getRelationships(\n                    RelTypes.USER, Direction.OUTGOING ) )\n            {\n                Node user = relationship.getEndNode();\n                indexService.remove(  user, USERNAME_KEY,\n                        user.getProperty( USERNAME_KEY ) );\n                user.delete();\n                relationship.delete();\n            }\n            usersReferenceNode.getSingleRelationship( RelTypes.USERS_REFERENCE,\n                    Direction.INCOMING ).delete();\n            usersReferenceNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n        System.out.println( \"Shutting down database ...\" );\n        shutdown();\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void shutdown()\n    {\n        indexService.shutdown();\n        graphDb.shutdown();\n    }","id":4080,"modified_method":"private static void shutdown()\n    {\n        graphDb.shutdown();\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void deletePerson( Person person )\n    {\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node personNode = person.getUnderlyingNode();\n            index.removeIndex( personNode, Person.NAME, person.getName() );\n            for ( Person friend : person.getFriends() )\n            {\n                person.removeFriend( friend );\n            }\n            personNode.getSingleRelationship( A_PERSON, Direction.INCOMING ).delete();\n\n            for ( StatusUpdate status : person.getStatus() )\n            {\n                Node statusNode = status.getUnderlyingNode();\n                for ( Relationship r : statusNode.getRelationships() )\n                {\n                    r.delete();\n                }\n                statusNode.delete();\n            }\n\n            personNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","id":4081,"modified_method":"public void deletePerson( Person person )\n    {\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node personNode = person.getUnderlyingNode();\n            index.remove( personNode, Person.NAME, person.getName() );\n            for ( Person friend : person.getFriends() )\n            {\n                person.removeFriend( friend );\n            }\n            personNode.getSingleRelationship( A_PERSON, Direction.INCOMING ).delete();\n\n            for ( StatusUpdate status : person.getStatus() )\n            {\n                Node statusNode = status.getUnderlyingNode();\n                for ( Relationship r : statusNode.getRelationships() )\n                {\n                    r.delete();\n                }\n                statusNode.delete();\n            }\n\n            personNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public PersonRepository( GraphDatabaseService graphDb, IndexService index )\n    {\n        this.graphDb = graphDb;\n        this.index = index;\n\n        personRefNode = getPersonsRootNode( graphDb );\n    }","id":4082,"modified_method":"public PersonRepository( GraphDatabaseService graphDb, Index<Node> index )\n    {\n        this.graphDb = graphDb;\n        this.index = index;\n\n        personRefNode = getPersonsRootNode( graphDb );\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Person createPerson( String name ) throws Exception\n    {\n        // to guard against duplications we use the lock grabbed on ref node\n        // when\n        // creating a relationship and are optimistic about person not existing\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node newPersonNode = graphDb.createNode();\n            personRefNode.createRelationshipTo( newPersonNode, A_PERSON );\n            // lock now taken, we can check if  already exist in index\n            Node alreadyExist = index.getSingleNode( Person.NAME, name );\n            if ( alreadyExist != null )\n            {\n                tx.failure();\n                throw new Exception( \"Person with this name already exists \" );\n            }\n            newPersonNode.setProperty( Person.NAME, name );\n            index.index( newPersonNode, Person.NAME, name );\n            tx.success();\n            return new Person( newPersonNode );\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","id":4083,"modified_method":"public Person createPerson( String name ) throws Exception\n    {\n        // to guard against duplications we use the lock grabbed on ref node\n        // when\n        // creating a relationship and are optimistic about person not existing\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node newPersonNode = graphDb.createNode();\n            personRefNode.createRelationshipTo( newPersonNode, A_PERSON );\n            // lock now taken, we can check if  already exist in index\n            Node alreadyExist = index.get( Person.NAME, name ).getSingle();\n            if ( alreadyExist != null )\n            {\n                tx.failure();\n                throw new Exception( \"Person with this name already exists \" );\n            }\n            newPersonNode.setProperty( Person.NAME, name );\n            index.add( newPersonNode, Person.NAME, name );\n            tx.success();\n            return new Person( newPersonNode );\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Person getPersonByName( String name )\n    {\n        Node personNode = index.getSingleNode( Person.NAME, name );\n        if ( personNode == null )\n        {\n            throw new IllegalArgumentException( \"Person[\" + name\n                    + \"] not found\" );\n        }\n        return new Person( personNode );\n    }","id":4084,"modified_method":"public Person getPersonByName( String name )\n    {\n        Node personNode = index.get( Person.NAME, name ).getSingle();\n        if ( personNode == null )\n        {\n            throw new IllegalArgumentException( \"Person[\" + name\n                    + \"] not found\" );\n        }\n        return new Person( personNode );\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                index.shutdown();\n                graphDb.shutdown();\n            }\n        } );\n    }","id":4085,"modified_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                graphDb.shutdown();\n            }\n        } );\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"@AfterClass\n    public static void tearDown()\n    {\n        index.shutdown();\n        graphDb.shutdown();\n    }","id":4086,"modified_method":"@AfterClass\n    public static void tearDown()\n    {\n        graphDb.shutdown();\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.index( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","id":4087,"modified_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.add( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.getSingleNode( category, name );\n    }","id":4088,"modified_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.get( category, name ).getSingle();\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        createNodespace();\n    }","id":4089,"modified_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        createNodespace();\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                index.shutdown();\n                graphDb.shutdown();\n            }\n        } );\n    }","id":4090,"modified_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                graphDb.shutdown();\n            }\n        } );\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.index( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","id":4091,"modified_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.add( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"@AfterClass\n    public static void tearDown()\n    {\n        index.shutdown();\n        graphDb.shutdown();\n    }","id":4092,"modified_method":"@AfterClass\n    public static void tearDown()\n    {\n        graphDb.shutdown();\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        createNodespace();\n    }","id":4093,"modified_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        createNodespace();\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.getSingleNode( category, name );\n    }","id":4094,"modified_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.get( category, name ).getSingle();\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Before\n    public void setup() throws Exception\n    {\n        graphDb = new EmbeddedGraphDatabase( \"target/socnetdb\" );\n        index = new LuceneIndexService( graphDb );\n        personRepository = new PersonRepository( graphDb, index );\n        deleteSocialGraph();\n\n        nrOfPersons = 20;\n        createPersons();\n        setupFriendsBetweenPeople( 10 );\n    }","id":4095,"modified_method":"@Before\n    public void setup() throws Exception\n    {\n        graphDb = new EmbeddedGraphDatabase( \"target/socnetdb\" );\n        index = graphDb.index().forNodes( \"nodes\" );\n        personRepository = new PersonRepository( graphDb, index );\n        deleteSocialGraph();\n\n        nrOfPersons = 20;\n        createPersons();\n        setupFriendsBetweenPeople( 10 );\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"@After\n    public void teardown()\n    {\n        try\n        {\n            deleteSocialGraph();\n        }\n        finally\n        {\n            index.shutdown();\n            graphDb.shutdown();\n        }\n    }","id":4096,"modified_method":"@After\n    public void teardown()\n    {\n        try\n        {\n            deleteSocialGraph();\n        }\n        finally\n        {\n            graphDb.shutdown();\n        }\n    }","commit_id":"3f1f130a77d938bf03bf6839481872ca9cec6d7f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node getOrCreateNode( String name )\n    {\n        Node node = indexService.getSingleNode( NAME_KEY, name );\n        if ( node == null )\n        {\n            node = graphDb.createNode();\n            node.setProperty( NAME_KEY, name );\n            indexService.index( node, NAME_KEY, name );\n        }\n        return node;\n    }","id":4097,"modified_method":"private static Node getOrCreateNode( String name )\n    {\n        Node node = indexService.get( NAME_KEY, name ).getSingle();\n        if ( node == null )\n        {\n            node = graphDb.createNode();\n            node.setProperty( NAME_KEY, name );\n            indexService.add( node, NAME_KEY, name );\n        }\n        return node;\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void main( final String[] args )\n    {\n        deleteFileOrDirectory( new File( DB_PATH ) );\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            /*\n             *  (Neo) --> (Trinity)\n             *     \\       ^\n             *      v     /\n             *    (Morpheus) --> (Cypher)\n             *            \\         |\n             *             v        v\n             *            (Agent Smith)\n             */\n            createChain( \"Neo\", \"Trinity\" );\n            createChain( \"Neo\", \"Morpheus\", \"Trinity\" );\n            createChain( \"Morpheus\", \"Cypher\", \"Agent Smith\" );\n            createChain( \"Morpheus\", \"Agent Smith\" );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n\n        // So let's find the shortest path between Neo and Agent Smith\n        Node neo = getOrCreateNode( \"Neo\" );\n        Node agentSmith = getOrCreateNode( \"Agent Smith\" );\n        // START SNIPPET: shortestPathUsage\n        PathFinder<Path> finder = GraphAlgoFactory.shortestPath(\n                Traversal.expanderForTypes( KNOWS, Direction.BOTH ), 4 );\n        Path foundPath = finder.findSinglePath( neo, agentSmith );\n        System.out.println( \"Path from Neo to Agent Smith: \"\n                            + Traversal.simplePathToString( foundPath, NAME_KEY ) );\n        // END SNIPPET: shortestPathUsage\n\n        System.out.println( \"Shutting down database ...\" );\n        indexService.shutdown();\n        graphDb.shutdown();\n    }","id":4098,"modified_method":"public static void main( final String[] args )\n    {\n        deleteFileOrDirectory( new File( DB_PATH ) );\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            /*\n             *  (Neo) --> (Trinity)\n             *     \\       ^\n             *      v     /\n             *    (Morpheus) --> (Cypher)\n             *            \\         |\n             *             v        v\n             *            (Agent Smith)\n             */\n            createChain( \"Neo\", \"Trinity\" );\n            createChain( \"Neo\", \"Morpheus\", \"Trinity\" );\n            createChain( \"Morpheus\", \"Cypher\", \"Agent Smith\" );\n            createChain( \"Morpheus\", \"Agent Smith\" );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n\n        // So let's find the shortest path between Neo and Agent Smith\n        Node neo = getOrCreateNode( \"Neo\" );\n        Node agentSmith = getOrCreateNode( \"Agent Smith\" );\n        // START SNIPPET: shortestPathUsage\n        PathFinder<Path> finder = GraphAlgoFactory.shortestPath(\n                Traversal.expanderForTypes( KNOWS, Direction.BOTH ), 4 );\n        Path foundPath = finder.findSinglePath( neo, agentSmith );\n        System.out.println( \"Path from Neo to Agent Smith: \"\n                            + Traversal.simplePathToString( foundPath, NAME_KEY ) );\n        // END SNIPPET: shortestPathUsage\n\n        System.out.println( \"Shutting down database ...\" );\n        graphDb.shutdown();\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                indexService.shutdown();\n                graphDb.shutdown();\n            }\n        } );\n    }","id":4099,"modified_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                graphDb.shutdown();\n            }\n        } );\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void shutdown()\n    {\n        indexService.shutdown();\n        graphDb.shutdown();\n    }","id":4100,"modified_method":"private static void shutdown()\n    {\n        graphDb.shutdown();\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node createAndIndexUser( final String username )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( USERNAME_KEY, username );\n        indexService.index( node, USERNAME_KEY, username );\n        return node;\n    }","id":4101,"modified_method":"private static Node createAndIndexUser( final String username )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( USERNAME_KEY, username );\n        indexService.add( node, USERNAME_KEY, username );\n        return node;\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void main( final String[] args )\n    {\n        // START SNIPPET: startDb\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        // END SNIPPET: startDb\n\n        // START SNIPPET: addUsers\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            // Create users sub reference node (see design guidelines on\n            // http://wiki.neo4j.org/ )\n            Node usersReferenceNode = graphDb.createNode();\n            graphDb.getReferenceNode().createRelationshipTo(\n                usersReferenceNode, RelTypes.USERS_REFERENCE );\n            // Create some users and index their names with the IndexService\n            for ( int id = 0; id < 100; id++ )\n            {\n                Node userNode = createAndIndexUser( idToUserName( id ) );\n                usersReferenceNode.createRelationshipTo( userNode,\n                    RelTypes.USER );\n            }\n            // END SNIPPET: addUsers\n            System.out.println( \"Users created\" );\n\n            // Find a user through the search index\n            // START SNIPPET: findUser\n            int idToFind = 45;\n            Node foundUser = indexService.getSingleNode( USERNAME_KEY,\n                idToUserName( idToFind ) );\n            System.out.println( \"The username of user \" + idToFind + \" is \"\n                + foundUser.getProperty( USERNAME_KEY ) );\n            // END SNIPPET: findUser\n\n            // Delete the persons and remove them from the index\n            for ( Relationship relationship : usersReferenceNode.getRelationships(\n                    RelTypes.USER, Direction.OUTGOING ) )\n            {\n                Node user = relationship.getEndNode();\n                indexService.removeIndex( user, USERNAME_KEY,\n                        user.getProperty( USERNAME_KEY ) );\n                user.delete();\n                relationship.delete();\n            }\n            usersReferenceNode.getSingleRelationship( RelTypes.USERS_REFERENCE,\n                    Direction.INCOMING ).delete();\n            usersReferenceNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n        System.out.println( \"Shutting down database ...\" );\n        shutdown();\n    }","id":4102,"modified_method":"public static void main( final String[] args )\n    {\n        // START SNIPPET: startDb\n        graphDb = new EmbeddedGraphDatabase( DB_PATH );\n        indexService = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        // END SNIPPET: startDb\n\n        // START SNIPPET: addUsers\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            // Create users sub reference node (see design guidelines on\n            // http://wiki.neo4j.org/ )\n            Node usersReferenceNode = graphDb.createNode();\n            graphDb.getReferenceNode().createRelationshipTo(\n                usersReferenceNode, RelTypes.USERS_REFERENCE );\n            // Create some users and index their names with the IndexService\n            for ( int id = 0; id < 100; id++ )\n            {\n                Node userNode = createAndIndexUser( idToUserName( id ) );\n                usersReferenceNode.createRelationshipTo( userNode,\n                    RelTypes.USER );\n            }\n            // END SNIPPET: addUsers\n            System.out.println( \"Users created\" );\n\n            // Find a user through the search index\n            // START SNIPPET: findUser\n            int idToFind = 45;\n            Node foundUser = indexService.get( USERNAME_KEY,\n                idToUserName( idToFind ) ).getSingle();\n            System.out.println( \"The username of user \" + idToFind + \" is \"\n                + foundUser.getProperty( USERNAME_KEY ) );\n            // END SNIPPET: findUser\n\n            // Delete the persons and remove them from the index\n            for ( Relationship relationship : usersReferenceNode.getRelationships(\n                    RelTypes.USER, Direction.OUTGOING ) )\n            {\n                Node user = relationship.getEndNode();\n                indexService.remove(  user, USERNAME_KEY,\n                        user.getProperty( USERNAME_KEY ) );\n                user.delete();\n                relationship.delete();\n            }\n            usersReferenceNode.getSingleRelationship( RelTypes.USERS_REFERENCE,\n                    Direction.INCOMING ).delete();\n            usersReferenceNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n        System.out.println( \"Shutting down database ...\" );\n        shutdown();\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"public PersonRepository( GraphDatabaseService graphDb, IndexService index )\n    {\n        this.graphDb = graphDb;\n        this.index = index;\n\n        personRefNode = getPersonsRootNode( graphDb );\n    }","id":4103,"modified_method":"public PersonRepository( GraphDatabaseService graphDb, Index<Node> index )\n    {\n        this.graphDb = graphDb;\n        this.index = index;\n\n        personRefNode = getPersonsRootNode( graphDb );\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Person createPerson( String name ) throws Exception\n    {\n        // to guard against duplications we use the lock grabbed on ref node\n        // when\n        // creating a relationship and are optimistic about person not existing\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node newPersonNode = graphDb.createNode();\n            personRefNode.createRelationshipTo( newPersonNode, A_PERSON );\n            // lock now taken, we can check if  already exist in index\n            Node alreadyExist = index.getSingleNode( Person.NAME, name );\n            if ( alreadyExist != null )\n            {\n                tx.failure();\n                throw new Exception( \"Person with this name already exists \" );\n            }\n            newPersonNode.setProperty( Person.NAME, name );\n            index.index( newPersonNode, Person.NAME, name );\n            tx.success();\n            return new Person( newPersonNode );\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","id":4104,"modified_method":"public Person createPerson( String name ) throws Exception\n    {\n        // to guard against duplications we use the lock grabbed on ref node\n        // when\n        // creating a relationship and are optimistic about person not existing\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node newPersonNode = graphDb.createNode();\n            personRefNode.createRelationshipTo( newPersonNode, A_PERSON );\n            // lock now taken, we can check if  already exist in index\n            Node alreadyExist = index.get( Person.NAME, name ).getSingle();\n            if ( alreadyExist != null )\n            {\n                tx.failure();\n                throw new Exception( \"Person with this name already exists \" );\n            }\n            newPersonNode.setProperty( Person.NAME, name );\n            index.add( newPersonNode, Person.NAME, name );\n            tx.success();\n            return new Person( newPersonNode );\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void deletePerson( Person person )\n    {\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node personNode = person.getUnderlyingNode();\n            index.removeIndex( personNode, Person.NAME, person.getName() );\n            for ( Person friend : person.getFriends() )\n            {\n                person.removeFriend( friend );\n            }\n            personNode.getSingleRelationship( A_PERSON, Direction.INCOMING ).delete();\n\n            for ( StatusUpdate status : person.getStatus() )\n            {\n                Node statusNode = status.getUnderlyingNode();\n                for ( Relationship r : statusNode.getRelationships() )\n                {\n                    r.delete();\n                }\n                statusNode.delete();\n            }\n\n            personNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","id":4105,"modified_method":"public void deletePerson( Person person )\n    {\n        Transaction tx = graphDb.beginTx();\n        try\n        {\n            Node personNode = person.getUnderlyingNode();\n            index.remove( personNode, Person.NAME, person.getName() );\n            for ( Person friend : person.getFriends() )\n            {\n                person.removeFriend( friend );\n            }\n            personNode.getSingleRelationship( A_PERSON, Direction.INCOMING ).delete();\n\n            for ( StatusUpdate status : person.getStatus() )\n            {\n                Node statusNode = status.getUnderlyingNode();\n                for ( Relationship r : statusNode.getRelationships() )\n                {\n                    r.delete();\n                }\n                statusNode.delete();\n            }\n\n            personNode.delete();\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Person getPersonByName( String name )\n    {\n        Node personNode = index.getSingleNode( Person.NAME, name );\n        if ( personNode == null )\n        {\n            throw new IllegalArgumentException( \"Person[\" + name\n                    + \"] not found\" );\n        }\n        return new Person( personNode );\n    }","id":4106,"modified_method":"public Person getPersonByName( String name )\n    {\n        Node personNode = index.get( Person.NAME, name ).getSingle();\n        if ( personNode == null )\n        {\n            throw new IllegalArgumentException( \"Person[\" + name\n                    + \"] not found\" );\n        }\n        return new Person( personNode );\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.index( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","id":4107,"modified_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.add( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"@AfterClass\n    public static void tearDown()\n    {\n        index.shutdown();\n        graphDb.shutdown();\n    }","id":4108,"modified_method":"@AfterClass\n    public static void tearDown()\n    {\n        graphDb.shutdown();\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.getSingleNode( category, name );\n    }","id":4109,"modified_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.get( category, name ).getSingle();\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                index.shutdown();\n                graphDb.shutdown();\n            }\n        } );\n    }","id":4110,"modified_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                graphDb.shutdown();\n            }\n        } );\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        createNodespace();\n    }","id":4111,"modified_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        createNodespace();\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.index( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","id":4112,"modified_method":"private static Node createNode( final String name,\n            final RelationshipType relType, final String category,\n            final Node... containedIn )\n    {\n        Node node = graphDb.createNode();\n        node.setProperty( NAME, name );\n        index.add( node, category, name );\n        for ( Node parent : containedIn )\n        {\n            node.createRelationshipTo( parent, relType );\n        }\n        return node;\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"@AfterClass\n    public static void tearDown()\n    {\n        index.shutdown();\n        graphDb.shutdown();\n    }","id":4113,"modified_method":"@AfterClass\n    public static void tearDown()\n    {\n        graphDb.shutdown();\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                index.shutdown();\n                graphDb.shutdown();\n            }\n        } );\n    }","id":4114,"modified_method":"private static void registerShutdownHook()\n    {\n        // Registers a shutdown hook for the Neo4j instance so that it\n        // shuts down nicely when the VM exits (even if you \"Ctrl-C\" the\n        // running example before it's completed)\n        Runtime.getRuntime().addShutdownHook( new Thread()\n        {\n            @Override\n            public void run()\n            {\n                graphDb.shutdown();\n            }\n        } );\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.getSingleNode( category, name );\n    }","id":4115,"modified_method":"private static Node getNodeByName( final String category, final String name )\n    {\n        return index.get( category, name ).getSingle();\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = new LuceneIndexService( graphDb );\n        registerShutdownHook();\n        createNodespace();\n    }","id":4116,"modified_method":"@BeforeClass\n    public static void setUp()\n    {\n        deleteFileOrDirectory( new File( ROLES_DB ) );\n        graphDb = new EmbeddedGraphDatabase( ROLES_DB );\n        index = graphDb.index().forNodes( \"nodes\" );\n        registerShutdownHook();\n        createNodespace();\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"@After\n    public void teardown()\n    {\n        try\n        {\n            deleteSocialGraph();\n        }\n        finally\n        {\n            index.shutdown();\n            graphDb.shutdown();\n        }\n    }","id":4117,"modified_method":"@After\n    public void teardown()\n    {\n        try\n        {\n            deleteSocialGraph();\n        }\n        finally\n        {\n            graphDb.shutdown();\n        }\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Before\n    public void setup() throws Exception\n    {\n        graphDb = new EmbeddedGraphDatabase( \"target/socnetdb\" );\n        index = new LuceneIndexService( graphDb );\n        personRepository = new PersonRepository( graphDb, index );\n        deleteSocialGraph();\n\n        nrOfPersons = 20;\n        createPersons();\n        setupFriendsBetweenPeople( 10 );\n    }","id":4118,"modified_method":"@Before\n    public void setup() throws Exception\n    {\n        graphDb = new EmbeddedGraphDatabase( \"target/socnetdb\" );\n        index = graphDb.index().forNodes( \"nodes\" );\n        personRepository = new PersonRepository( graphDb, index );\n        deleteSocialGraph();\n\n        nrOfPersons = 20;\n        createPersons();\n        setupFriendsBetweenPeople( 10 );\n    }","commit_id":"65b5f7c0dea520a1d1d90e4e4dfb003f937ff946","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected String getSaveAndContinueRedirect(\n\t\t\tActionRequest actionRequest, JournalArticle article,\n\t\t\tString redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString referringPortletResource = ParamUtil.getString(\n\t\t\tactionRequest, \"referringPortletResource\");\n\n\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\tactionRequest, JournalPortletKeys.JOURNAL, themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcPath\", \"/edit_article.jsp\");\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"referringPortletResource\", referringPortletResource, false);\n\t\tportletURL.setParameter(\n\t\t\t\"resourcePrimKey\", String.valueOf(article.getResourcePrimKey()),\n\t\t\tfalse);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(article.getGroupId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"folderId\", String.valueOf(article.getFolderId()), false);\n\t\tportletURL.setParameter(\"articleId\", article.getArticleId(), false);\n\t\tportletURL.setParameter(\n\t\t\t\"version\", String.valueOf(article.getVersion()), false);\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","id":4119,"modified_method":"protected String getSaveAndContinueRedirect(\n\t\t\tActionRequest actionRequest, JournalArticle article,\n\t\t\tString redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString referringPortletResource = ParamUtil.getString(\n\t\t\tactionRequest, \"referringPortletResource\");\n\n\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, JournalPortletKeys.JOURNAL, themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcPath\", \"/edit_article.jsp\");\n\t\tportletURL.setParameter(\"redirect\", redirect);\n\t\tportletURL.setParameter(\n\t\t\t\"referringPortletResource\", referringPortletResource);\n\t\tportletURL.setParameter(\n\t\t\t\"resourcePrimKey\", String.valueOf(article.getResourcePrimKey()));\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(article.getGroupId()));\n\t\tportletURL.setParameter(\n\t\t\t\"folderId\", String.valueOf(article.getFolderId()));\n\t\tportletURL.setParameter(\"articleId\", article.getArticleId());\n\t\tportletURL.setParameter(\n\t\t\t\"version\", String.valueOf(article.getVersion()));\n\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\treturn portletURL.toString();\n\t}","commit_id":"0dc760cb9a6b4551d23facf242417501c0f9858a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getEntryURL(\n\t\t\tResourceRequest resourceRequest, JournalFeed feed,\n\t\t\tJournalArticle article, Layout layout, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tList<Long> hitLayoutIds =\n\t\t\t_journalContentSearchLocalService.getLayoutIds(\n\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\tarticle.getArticleId());\n\n\t\tif (!hitLayoutIds.isEmpty()) {\n\t\t\tLong hitLayoutId = hitLayoutIds.get(0);\n\n\t\t\tLayout hitLayout = _layoutLocalService.getLayout(\n\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\thitLayoutId.longValue());\n\n\t\t\treturn PortalUtil.getLayoutFriendlyURL(hitLayout, themeDisplay);\n\t\t}\n\n\t\tString portletId = feed.getTargetPortletId();\n\n\t\tif (Validator.isNull(portletId)) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tlong plid = PortalUtil.getPlidFromFriendlyURL(\n\t\t\tfeed.getCompanyId(), feed.getTargetLayoutFriendlyUrl());\n\n\t\tPortletURL entryURL = new PortletURLImpl(\n\t\t\tresourceRequest, portletId, plid, PortletRequest.RENDER_PHASE);\n\n\t\tentryURL.setParameter(\"groupId\", String.valueOf(article.getGroupId()));\n\t\tentryURL.setParameter(\"articleId\", article.getArticleId());\n\n\t\treturn entryURL.toString();\n\t}","id":4120,"modified_method":"protected String getEntryURL(\n\t\t\tResourceRequest resourceRequest, JournalFeed feed,\n\t\t\tJournalArticle article, Layout layout, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tList<Long> hitLayoutIds =\n\t\t\t_journalContentSearchLocalService.getLayoutIds(\n\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\tarticle.getArticleId());\n\n\t\tif (!hitLayoutIds.isEmpty()) {\n\t\t\tLong hitLayoutId = hitLayoutIds.get(0);\n\n\t\t\tLayout hitLayout = _layoutLocalService.getLayout(\n\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\thitLayoutId.longValue());\n\n\t\t\treturn PortalUtil.getLayoutFriendlyURL(hitLayout, themeDisplay);\n\t\t}\n\n\t\tString portletId = feed.getTargetPortletId();\n\n\t\tif (Validator.isNull(portletId)) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tlong plid = PortalUtil.getPlidFromFriendlyURL(\n\t\t\tfeed.getCompanyId(), feed.getTargetLayoutFriendlyUrl());\n\n\t\tPortletURL entryURL = PortletURLFactoryUtil.create(\n\t\t\tresourceRequest, portletId, plid, PortletRequest.RENDER_PHASE);\n\n\t\tentryURL.setParameter(\"groupId\", String.valueOf(article.getGroupId()));\n\t\tentryURL.setParameter(\"articleId\", article.getArticleId());\n\n\t\treturn entryURL.toString();\n\t}","commit_id":"0dc760cb9a6b4551d23facf242417501c0f9858a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tif (actionRequest.getRemoteUser() != null) {\n\t\t\tactionResponse.sendRedirect(themeDisplay.getPathMain());\n\n\t\t\treturn;\n\t\t}\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tString emailAddress = ParamUtil.getString(\n\t\t\tactionRequest, \"emailAddress\");\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t(ActionRequestImpl)actionRequest, PortletKeys.LOGIN,\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setWindowState(LiferayWindowState.POP_UP);\n\n\t\tportletURL.setParameter(\"struts_action\", \"/login/login_redirect\");\n\t\tportletURL.setParameter(\"emailAddress\", emailAddress);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD)) {\n\t\t\t\taddAnonymousUser(actionRequest, actionResponse);\n\n\t\t\t\tsendRedirect(\n\t\t\t\t\tactionRequest, actionResponse, portletURL.toString());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof DuplicateUserEmailAddressException) {\n\t\t\t\tUser user = UserLocalServiceUtil.getUserByEmailAddress(\n\t\t\t\t\tthemeDisplay.getCompanyId(), emailAddress);\n\n\t\t\t\tif (user.getStatus() != WorkflowConstants.STATUS_INCOMPLETE) {\n\t\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsendRedirect(\n\t\t\t\t\t\tactionRequest, actionResponse, portletURL.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (e instanceof CaptchaTextException ||\n\t\t\t\te instanceof CompanyMaxUsersException ||\n\t\t\t\te instanceof ContactFirstNameException ||\n\t\t\t\te instanceof ContactFullNameException ||\n\t\t\t\te instanceof ContactLastNameException ||\n\t\t\t\te instanceof EmailAddressException ||\n\t\t\t\te instanceof ReservedUserEmailAddressException ||\n\t\t\t\te instanceof UserEmailAddressException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.error(\"Error creating anonymous account\", e);\n\n\t\t\t\tPortalUtil.sendError(e, actionRequest, actionResponse);\n\t\t\t}\n\t\t}\n\t}","id":4121,"modified_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tif (actionRequest.getRemoteUser() != null) {\n\t\t\tactionResponse.sendRedirect(themeDisplay.getPathMain());\n\n\t\t\treturn;\n\t\t}\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tString emailAddress = ParamUtil.getString(\n\t\t\tactionRequest, \"emailAddress\");\n\n\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, PortletKeys.LOGIN, themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setWindowState(LiferayWindowState.POP_UP);\n\n\t\tportletURL.setParameter(\"struts_action\", \"/login/login_redirect\");\n\t\tportletURL.setParameter(\"emailAddress\", emailAddress);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD)) {\n\t\t\t\taddAnonymousUser(actionRequest, actionResponse);\n\n\t\t\t\tsendRedirect(\n\t\t\t\t\tactionRequest, actionResponse, portletURL.toString());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof DuplicateUserEmailAddressException) {\n\t\t\t\tUser user = UserLocalServiceUtil.getUserByEmailAddress(\n\t\t\t\t\tthemeDisplay.getCompanyId(), emailAddress);\n\n\t\t\t\tif (user.getStatus() != WorkflowConstants.STATUS_INCOMPLETE) {\n\t\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsendRedirect(\n\t\t\t\t\t\tactionRequest, actionResponse, portletURL.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (e instanceof CaptchaTextException ||\n\t\t\t\t\t e instanceof CompanyMaxUsersException ||\n\t\t\t\t\t e instanceof ContactFirstNameException ||\n\t\t\t\t\t e instanceof ContactFullNameException ||\n\t\t\t\t\t e instanceof ContactLastNameException ||\n\t\t\t\t\t e instanceof EmailAddressException ||\n\t\t\t\t\t e instanceof ReservedUserEmailAddressException ||\n\t\t\t\t\t e instanceof UserEmailAddressException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.error(\"Unable to create anonymous account\", e);\n\n\t\t\t\tPortalUtil.sendError(e, actionRequest, actionResponse);\n\t\t\t}\n\t\t}\n\t}","commit_id":"cdb7b94f05d10f0e58196cb93c8056ebe483beb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected MBMessage updateMessage(ActionRequest actionRequest)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString className = ParamUtil.getString(actionRequest, \"className\");\n\t\tlong classPK = ParamUtil.getLong(actionRequest, \"classPK\");\n\t\tString permissionClassName = ParamUtil.getString(\n\t\t\tactionRequest, \"permissionClassName\");\n\t\tlong permissionClassPK = ParamUtil.getLong(\n\t\t\tactionRequest, \"permissionClassPK\");\n\t\tlong permissionOwnerId = ParamUtil.getLong(\n\t\t\tactionRequest, \"permissionOwnerId\");\n\n\t\tlong messageId = ParamUtil.getLong(actionRequest, \"messageId\");\n\n\t\tlong threadId = ParamUtil.getLong(actionRequest, \"threadId\");\n\t\tlong parentMessageId = ParamUtil.getLong(\n\t\t\tactionRequest, \"parentMessageId\");\n\t\tString subject = ParamUtil.getString(actionRequest, \"subject\");\n\t\tString body = ParamUtil.getString(actionRequest, \"body\");\n\n\t\tString emailAddress = ParamUtil.getString(\n\t\t\tactionRequest, \"emailAddress\");\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tMBMessage.class.getName(), actionRequest);\n\n\t\tMBMessage message = null;\n\n\t\tUser user = null;\n\n\t\tif (themeDisplay.isSignedIn()) {\n\t\t\tuser = themeDisplay.getUser();\n\t\t}\n\t\telse {\n\t\t\tuser = UserLocalServiceUtil.getUserByEmailAddress(\n\t\t\t\tthemeDisplay.getCompanyId(), emailAddress);\n\n\t\t\tif ((user == null) ||\n\t\t\t\t(user.getStatus() != WorkflowConstants.STATUS_INCOMPLETE)) {\n\n\t\t\t\treturn  null;\n\t\t\t}\n\t\t}\n\n\t\tif (messageId <= 0) {\n\n\t\t\t// Add message\n\n\t\t\tPrincipalThreadLocal.setName(user.getUserId());\n\n\t\t\ttry {\n\t\t\t\tmessage = MBMessageServiceUtil.addDiscussionMessage(\n\t\t\t\t\tserviceContext.getScopeGroupId(), className, classPK,\n\t\t\t\t\tpermissionClassName, permissionClassPK, permissionOwnerId,\n\t\t\t\t\tthreadId, parentMessageId, subject, body, serviceContext);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tPrincipalThreadLocal.setName(null);\n\t\t\t}\n\t\t}\n\t\telse {\n\n\t\t\t// Update message\n\n\t\t\tmessage = MBMessageServiceUtil.updateDiscussionMessage(\n\t\t\t\tclassName, classPK, permissionClassName, permissionClassPK,\n\t\t\t\tpermissionOwnerId, messageId, subject, body, serviceContext);\n\t\t}\n\n\t\t// Subscription\n\n\t\tboolean subscribe = ParamUtil.getBoolean(actionRequest, \"subscribe\");\n\n\t\tif (subscribe) {\n\t\t\tSubscriptionLocalServiceUtil.addSubscription(\n\t\t\t\tthemeDisplay.getUserId(), themeDisplay.getScopeGroupId(),\n\t\t\t\tclassName, classPK);\n\t\t}\n\n\t\treturn message;\n\t}","id":4122,"modified_method":"protected MBMessage updateMessage(ActionRequest actionRequest)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString className = ParamUtil.getString(actionRequest, \"className\");\n\t\tlong classPK = ParamUtil.getLong(actionRequest, \"classPK\");\n\t\tString permissionClassName = ParamUtil.getString(\n\t\t\tactionRequest, \"permissionClassName\");\n\t\tlong permissionClassPK = ParamUtil.getLong(\n\t\t\tactionRequest, \"permissionClassPK\");\n\t\tlong permissionOwnerId = ParamUtil.getLong(\n\t\t\tactionRequest, \"permissionOwnerId\");\n\n\t\tlong messageId = ParamUtil.getLong(actionRequest, \"messageId\");\n\n\t\tlong threadId = ParamUtil.getLong(actionRequest, \"threadId\");\n\t\tlong parentMessageId = ParamUtil.getLong(\n\t\t\tactionRequest, \"parentMessageId\");\n\t\tString subject = ParamUtil.getString(actionRequest, \"subject\");\n\t\tString body = ParamUtil.getString(actionRequest, \"body\");\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tMBMessage.class.getName(), actionRequest);\n\n\t\tMBMessage message = null;\n\n\t\tif (messageId <= 0) {\n\n\t\t\t// Add message\n\n\t\t\tUser user = null;\n\n\t\t\tif (themeDisplay.isSignedIn()) {\n\t\t\t\tuser = themeDisplay.getUser();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString emailAddress = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"emailAddress\");\n\n\t\t\t\ttry {\n\t\t\t\t\tuser = UserLocalServiceUtil.getUserByEmailAddress(\n\t\t\t\t\t\tthemeDisplay.getCompanyId(), emailAddress);\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchUserException nsue) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (user.getStatus() != WorkflowConstants.STATUS_INCOMPLETE) {\n\t\t\t\t\treturn  null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tString name = PrincipalThreadLocal.getName();\n\n\t\t\tPrincipalThreadLocal.setName(user.getUserId());\n\n\t\t\ttry {\n\t\t\t\tmessage = MBMessageServiceUtil.addDiscussionMessage(\n\t\t\t\t\tserviceContext.getScopeGroupId(), className, classPK,\n\t\t\t\t\tpermissionClassName, permissionClassPK, permissionOwnerId,\n\t\t\t\t\tthreadId, parentMessageId, subject, body, serviceContext);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tPrincipalThreadLocal.setName(name);\n\t\t\t}\n\t\t}\n\t\telse {\n\n\t\t\t// Update message\n\n\t\t\tmessage = MBMessageServiceUtil.updateDiscussionMessage(\n\t\t\t\tclassName, classPK, permissionClassName, permissionClassPK,\n\t\t\t\tpermissionOwnerId, messageId, subject, body, serviceContext);\n\t\t}\n\n\t\t// Subscription\n\n\t\tboolean subscribe = ParamUtil.getBoolean(actionRequest, \"subscribe\");\n\n\t\tif (subscribe) {\n\t\t\tSubscriptionLocalServiceUtil.addSubscription(\n\t\t\t\tthemeDisplay.getUserId(), themeDisplay.getScopeGroupId(),\n\t\t\t\tclassName, classPK);\n\t\t}\n\n\t\treturn message;\n\t}","commit_id":"cdb7b94f05d10f0e58196cb93c8056ebe483beb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward strutsExecute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong companyId = themeDisplay.getCompanyId();\n\n\t\tif (!FacebookConnectUtil.isEnabled(companyId)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tString redirect = ParamUtil.getString(request, \"redirect\");\n\n\t\tString code = ParamUtil.getString(request, \"code\");\n\n\t\tString token = getAccessToken(companyId, redirect, code);\n\n\t\tif (Validator.isNotNull(token)) {\n\t\t\tHttpSession session = request.getSession();\n\n\t\t\tsession.setAttribute(WebKeys.FACEBOOK_ACCESS_TOKEN, token);\n\n\t\t\tsetFacebookCredentials(session, companyId, token);\n\t\t}\n\n\t\tHttpSession session = request.getSession();\n\n\t\tif ((session.getAttribute(WebKeys.FACEBOOK_ACCESS_TOKEN) == null) ||\n\t\t\t(session.getAttribute(WebKeys.FACEBOOK_USER_EMAIL_ADDRESS) ==\n\t\t\t\tnull)) {\n\n\t\t\taddUser(request, themeDisplay);\n\t\t}\n\n\t\tresponse.sendRedirect(redirect);\n\n\t\treturn null;\n\t}","id":4123,"modified_method":"public ActionForward strutsExecute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tif (!FacebookConnectUtil.isEnabled(themeDisplay.getCompanyId())) {\n\t\t\treturn null;\n\t\t}\n\n\t\tHttpSession session = request.getSession();\n\n\t\tString redirect = ParamUtil.getString(request, \"redirect\");\n\n\t\tString code = ParamUtil.getString(request, \"code\");\n\n\t\tString token = getAccessToken(\n\t\t\tthemeDisplay.getCompanyId(), redirect, code);\n\n\t\tif (Validator.isNotNull(token)) {\n\t\t\tsession.setAttribute(WebKeys.FACEBOOK_ACCESS_TOKEN, token);\n\n\t\t\tsetFacebookCredentials(session, themeDisplay.getCompanyId(), token);\n\t\t}\n\n\t\tif ((session.getAttribute(WebKeys.FACEBOOK_ACCESS_TOKEN) == null) ||\n\t\t\t(session.getAttribute(WebKeys.FACEBOOK_USER_EMAIL_ADDRESS) ==\n\t\t\t\tnull)) {\n\n\t\t\taddUser(request, themeDisplay);\n\t\t}\n\n\t\tresponse.sendRedirect(redirect);\n\n\t\treturn null;\n\t}","commit_id":"cdb7b94f05d10f0e58196cb93c8056ebe483beb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void addUser(\n\t\t\tHttpServletRequest request, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\trequest = PortalUtil.getOriginalServletRequest(request);\n\n\t\tHttpSession session = request.getSession();\n\n\t\tString token = (String)session.getAttribute(\n\t\t\tWebKeys.FACEBOOK_ACCESS_TOKEN);\n\n\t\tlong companyId = themeDisplay.getCompanyId();\n\n\t\tString url = HttpUtil.addParameter(\n\t\t\tFacebookConnectUtil.getGraphURL(companyId) + \"/me\", \"access_token\",\n\t\t\ttoken);\n\n\t\turl = HttpUtil.addParameter(\n\t\t\turl, \"fields\",\n\t\t\t\"email,first_name,last_name,birthday,gender,verified\");\n\n\t\tHttp.Options options = new Http.Options();\n\n\t\toptions.setLocation(url);\n\n\t\tString content = HttpUtil.URLtoString(options);\n\n\t\tif (Validator.isNull(content)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject(content);\n\n\t\tif (!jsonObject.getBoolean(\"verified\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tlong creatorUserId = 0;\n\t\tboolean autoPassword = true;\n\t\tString password1 = StringPool.BLANK;\n\t\tString password2 = StringPool.BLANK;\n\t\tboolean autoScreenName = true;\n\t\tString screenName = StringPool.BLANK;\n\t\tString emailAddress = jsonObject.getString(\"email\");\n\t\tlong facebookId = jsonObject.getLong(\"id\");\n\t\tString openId = StringPool.BLANK;\n\t\tLocale locale = LocaleUtil.getDefault();\n\t\tString firstName = jsonObject.getString(\"first_name\");\n\t\tString middleName = StringPool.BLANK;\n\t\tString lastName = jsonObject.getString(\"last_name\");\n\t\tint prefixId = 0;\n\t\tint suffixId = 0;\n\t\tboolean male = Validator.equals(jsonObject.getString(\"gender\"), \"male\");\n\t\tint birthdayMonth = Calendar.JANUARY;\n\t\tint birthdayDay = 1;\n\t\tint birthdayYear = 1970;\n\t\tString jobTitle = StringPool.BLANK;\n\t\tlong[] groupIds = null;\n\t\tlong[] organizationIds = null;\n\t\tlong[] roleIds = null;\n\t\tlong[] userGroupIds = null;\n\t\tboolean sendEmail = true;\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tUserLocalServiceUtil.addUser(\n\t\t\tcreatorUserId, companyId, autoPassword, password1, password2,\n\t\t\tautoScreenName, screenName, emailAddress, facebookId, openId,\n\t\t\tlocale, firstName, middleName, lastName, prefixId, suffixId, male,\n\t\t\tbirthdayMonth, birthdayDay, birthdayYear, jobTitle, groupIds,\n\t\t\torganizationIds, roleIds, userGroupIds, sendEmail, serviceContext);\n\n\t\tsession.setAttribute(WebKeys.FACEBOOK_USER_EMAIL_ADDRESS, emailAddress);\n\t}","id":4124,"modified_method":"protected void addUser(\n\t\t\tHttpServletRequest request, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\trequest = PortalUtil.getOriginalServletRequest(request);\n\n\t\tHttpSession session = request.getSession();\n\n\t\tString token = (String)session.getAttribute(\n\t\t\tWebKeys.FACEBOOK_ACCESS_TOKEN);\n\n\t\tString url = HttpUtil.addParameter(\n\t\t\tFacebookConnectUtil.getGraphURL(themeDisplay.getCompanyId()) +\n\t\t\t\t\"/me\",\n\t\t\t\"access_token\", token);\n\n\t\turl = HttpUtil.addParameter(\n\t\t\turl, \"fields\",\n\t\t\t\"email,first_name,last_name,birthday,gender,verified\");\n\n\t\tHttp.Options options = new Http.Options();\n\n\t\toptions.setLocation(url);\n\n\t\tString content = HttpUtil.URLtoString(options);\n\n\t\tif (Validator.isNull(content)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject(content);\n\n\t\tif (!jsonObject.getBoolean(\"verified\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tlong creatorUserId = 0;\n\t\tboolean autoPassword = true;\n\t\tString password1 = StringPool.BLANK;\n\t\tString password2 = StringPool.BLANK;\n\t\tboolean autoScreenName = true;\n\t\tString screenName = StringPool.BLANK;\n\t\tString emailAddress = jsonObject.getString(\"email\");\n\t\tlong facebookId = jsonObject.getLong(\"id\");\n\t\tString openId = StringPool.BLANK;\n\t\tLocale locale = LocaleUtil.getDefault();\n\t\tString firstName = jsonObject.getString(\"first_name\");\n\t\tString middleName = StringPool.BLANK;\n\t\tString lastName = jsonObject.getString(\"last_name\");\n\t\tint prefixId = 0;\n\t\tint suffixId = 0;\n\t\tboolean male = Validator.equals(jsonObject.getString(\"gender\"), \"male\");\n\t\tint birthdayMonth = Calendar.JANUARY;\n\t\tint birthdayDay = 1;\n\t\tint birthdayYear = 1970;\n\t\tString jobTitle = StringPool.BLANK;\n\t\tlong[] groupIds = null;\n\t\tlong[] organizationIds = null;\n\t\tlong[] roleIds = null;\n\t\tlong[] userGroupIds = null;\n\t\tboolean sendEmail = true;\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tUserLocalServiceUtil.addUser(\n\t\t\tcreatorUserId, themeDisplay.getCompanyId(), autoPassword, password1,\n\t\t\tpassword2, autoScreenName, screenName, emailAddress, facebookId,\n\t\t\topenId, locale, firstName, middleName, lastName, prefixId, suffixId,\n\t\t\tmale, birthdayMonth, birthdayDay, birthdayYear, jobTitle, groupIds,\n\t\t\torganizationIds, roleIds, userGroupIds, sendEmail, serviceContext);\n\n\t\tsession.setAttribute(WebKeys.FACEBOOK_USER_EMAIL_ADDRESS, emailAddress);\n\t}","commit_id":"cdb7b94f05d10f0e58196cb93c8056ebe483beb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString login = ParamUtil.getString(request, \"login\");\n\t\tString password = request.getParameter(\"password\");\n\t\tboolean rememberMe = ParamUtil.getBoolean(request, \"rememberMe\");\n\t\tString authType = ParamUtil.getString(request, \"authType\");\n\n\t\tif (Validator.isNotNull(login) && Validator.isNotNull(password)) {\n\t\t\tLoginUtil.login(\n\t\t\t\trequest, response, login, password, rememberMe, authType);\n\t\t}\n\n\t\tHttpSession session = request.getSession();\n\n\t\tif ((session.getAttribute(\"j_username\") != null) &&\n\t\t\t(session.getAttribute(\"j_password\") != null)) {\n\n\t\t\tif (PropsValues.PORTAL_JAAS_ENABLE) {\n\t\t\t\treturn mapping.findForward(\"/portal/touch_protected.jsp\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresponse.sendRedirect(themeDisplay.getPathMain());\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tString redirect = PortalUtil.getCommunityLoginURL(themeDisplay);\n\n\t\tif (Validator.isNull(redirect)) {\n\t\t\tredirect = PropsValues.AUTH_LOGIN_URL;\n\t\t}\n\n\t\tif (Validator.isNull(redirect)) {\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, PortletKeys.LOGIN, themeDisplay.getPlid(),\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tWindowState windowState = WindowState.MAXIMIZED;\n\n\t\t\tString windowStateString = ParamUtil.getString(\n\t\t\t\trequest, \"windowState\");\n\n\t\t\tif (Validator.isNotNull(windowStateString)) {\n\t\t\t\twindowState = WindowStateFactory.getWindowState(\n\t\t\t\t\twindowStateString);\n\t\t\t}\n\n\t\t\tportletURL.setWindowState(windowState);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\"saveLastPath\", \"0\");\n\t\t\tportletURL.setParameter(\"struts_action\", \"/login/login\");\n\n\t\t\tredirect = portletURL.toString();\n\t\t}\n\n\t\tif (PropsValues.COMPANY_SECURITY_AUTH_REQUIRES_HTTPS) {\n\t\t\tString portalURL = PortalUtil.getPortalURL(request);\n\n\t\t\tString portalURLSecure = PortalUtil.getPortalURL(request, true);\n\n\t\t\tif (!portalURL.equals(portalURLSecure)) {\n\t\t\t\tredirect = StringUtil.replaceFirst(\n\t\t\t\t\tredirect, portalURL, portalURLSecure);\n\t\t\t}\n\t\t}\n\n\t\tString loginRedirect = ParamUtil.getString(request, \"redirect\");\n\n\t\tif (Validator.isNotNull(loginRedirect)) {\n\t\t\tif (PrefsPropsUtil.getBoolean(\n\t\t\t\t\tthemeDisplay.getCompanyId(), PropsKeys.CAS_AUTH_ENABLED,\n\t\t\t\t\tPropsValues.CAS_AUTH_ENABLED)) {\n\n\t\t\t\tredirect = loginRedirect;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString loginPortletNamespace = PortalUtil.getPortletNamespace(\n\t\t\t\t\tPropsValues.AUTH_LOGIN_PORTLET_NAME);\n\n\t\t\t\tString loginRedirectParameter =\n\t\t\t\t\tloginPortletNamespace + \"redirect\";\n\n\t\t\t\tredirect = HttpUtil.setParameter(\n\t\t\t\t\tredirect, \"p_p_id\", PropsValues.AUTH_LOGIN_PORTLET_NAME);\n\t\t\t\tredirect = HttpUtil.setParameter(\n\t\t\t\t\tredirect, \"p_p_lifecycle\", \"0\");\n\t\t\t\tredirect = HttpUtil.setParameter(\n\t\t\t\t\tredirect, loginRedirectParameter, loginRedirect);\n\t\t\t}\n\t\t}\n\n\t\tresponse.sendRedirect(redirect);\n\n\t\treturn null;\n\t}","id":4125,"modified_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString login = ParamUtil.getString(request, \"login\");\n\t\tString password = request.getParameter(\"password\");\n\t\tboolean rememberMe = ParamUtil.getBoolean(request, \"rememberMe\");\n\t\tString authType = ParamUtil.getString(request, \"authType\");\n\n\t\tif (Validator.isNotNull(login) && Validator.isNotNull(password)) {\n\t\t\tLoginUtil.login(\n\t\t\t\trequest, response, login, password, rememberMe, authType);\n\t\t}\n\n\t\tHttpSession session = request.getSession();\n\n\t\tif ((session.getAttribute(\"j_username\") != null) &&\n\t\t\t(session.getAttribute(\"j_password\") != null)) {\n\n\t\t\tif (PropsValues.PORTAL_JAAS_ENABLE) {\n\t\t\t\treturn mapping.findForward(\"/portal/touch_protected.jsp\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresponse.sendRedirect(themeDisplay.getPathMain());\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tString redirect = PortalUtil.getCommunityLoginURL(themeDisplay);\n\n\t\tif (Validator.isNull(redirect)) {\n\t\t\tredirect = PropsValues.AUTH_LOGIN_URL;\n\t\t}\n\n\t\tif (Validator.isNull(redirect)) {\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, PortletKeys.LOGIN, themeDisplay.getPlid(),\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(getWindowState(request));\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\"saveLastPath\", \"0\");\n\t\t\tportletURL.setParameter(\"struts_action\", \"/login/login\");\n\n\t\t\tredirect = portletURL.toString();\n\t\t}\n\n\t\tif (PropsValues.COMPANY_SECURITY_AUTH_REQUIRES_HTTPS) {\n\t\t\tString portalURL = PortalUtil.getPortalURL(request);\n\n\t\t\tString portalURLSecure = PortalUtil.getPortalURL(request, true);\n\n\t\t\tif (!portalURL.equals(portalURLSecure)) {\n\t\t\t\tredirect = StringUtil.replaceFirst(\n\t\t\t\t\tredirect, portalURL, portalURLSecure);\n\t\t\t}\n\t\t}\n\n\t\tString loginRedirect = ParamUtil.getString(request, \"redirect\");\n\n\t\tif (Validator.isNotNull(loginRedirect)) {\n\t\t\tif (PrefsPropsUtil.getBoolean(\n\t\t\t\t\tthemeDisplay.getCompanyId(), PropsKeys.CAS_AUTH_ENABLED,\n\t\t\t\t\tPropsValues.CAS_AUTH_ENABLED)) {\n\n\t\t\t\tredirect = loginRedirect;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString loginPortletNamespace = PortalUtil.getPortletNamespace(\n\t\t\t\t\tPropsValues.AUTH_LOGIN_PORTLET_NAME);\n\n\t\t\t\tString loginRedirectParameter =\n\t\t\t\t\tloginPortletNamespace + \"redirect\";\n\n\t\t\t\tredirect = HttpUtil.setParameter(\n\t\t\t\t\tredirect, \"p_p_id\", PropsValues.AUTH_LOGIN_PORTLET_NAME);\n\t\t\t\tredirect = HttpUtil.setParameter(\n\t\t\t\t\tredirect, \"p_p_lifecycle\", \"0\");\n\t\t\t\tredirect = HttpUtil.setParameter(\n\t\t\t\t\tredirect, loginRedirectParameter, loginRedirect);\n\t\t\t}\n\t\t}\n\n\t\tresponse.sendRedirect(redirect);\n\n\t\treturn null;\n\t}","commit_id":"cdb7b94f05d10f0e58196cb93c8056ebe483beb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void login(\n\t\t\tThemeDisplay themeDisplay, ActionRequest actionRequest,\n\t\t\tActionResponse actionResponse, PortletPreferences preferences)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tactionRequest);\n\t\tHttpServletResponse response = PortalUtil.getHttpServletResponse(\n\t\t\tactionResponse);\n\n\t\tString login = ParamUtil.getString(actionRequest, \"login\");\n\t\tString password = actionRequest.getParameter(\"password\");\n\t\tboolean rememberMe = ParamUtil.getBoolean(actionRequest, \"rememberMe\");\n\n\t\tString authType = preferences.getValue(\"authType\", null);\n\n\t\tLoginUtil.login(\n\t\t\trequest, response, login, password, rememberMe, authType);\n\n\t\tif (PropsValues.PORTAL_JAAS_ENABLE) {\n\t\t\tactionResponse.sendRedirect(\n\t\t\t\tthemeDisplay.getPathMain() + \"/portal/protected\");\n\t\t}\n\t\telse {\n\t\t\tString redirect = ParamUtil.getString(actionRequest, \"redirect\");\n\n\t\t\tboolean doActionAfterLogin = ParamUtil.getBoolean(\n\t\t\t\tactionRequest, \"doActionAfterLogin\");\n\n\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\tredirect = PortalUtil.escapeRedirect(redirect);\n\n\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t}\n\t\t\telse if (doActionAfterLogin) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tactionResponse.sendRedirect(themeDisplay.getPathMain());\n\t\t\t}\n\t\t}\n\t}","id":4126,"modified_method":"protected void login(\n\t\t\tThemeDisplay themeDisplay, ActionRequest actionRequest,\n\t\t\tActionResponse actionResponse, PortletPreferences preferences)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tactionRequest);\n\t\tHttpServletResponse response = PortalUtil.getHttpServletResponse(\n\t\t\tactionResponse);\n\n\t\tString login = ParamUtil.getString(actionRequest, \"login\");\n\t\tString password = actionRequest.getParameter(\"password\");\n\t\tboolean rememberMe = ParamUtil.getBoolean(actionRequest, \"rememberMe\");\n\n\t\tString authType = preferences.getValue(\"authType\", null);\n\n\t\tLoginUtil.login(\n\t\t\trequest, response, login, password, rememberMe, authType);\n\n\t\tif (PropsValues.PORTAL_JAAS_ENABLE) {\n\t\t\tactionResponse.sendRedirect(\n\t\t\t\tthemeDisplay.getPathMain() + \"/portal/protected\");\n\t\t}\n\t\telse {\n\t\t\tString redirect = ParamUtil.getString(actionRequest, \"redirect\");\n\n\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\tredirect = PortalUtil.escapeRedirect(redirect);\n\n\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tboolean doActionAfterLogin = ParamUtil.getBoolean(\n\t\t\t\t\tactionRequest, \"doActionAfterLogin\");\n\n\t\t\t\tif (doActionAfterLogin) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tactionResponse.sendRedirect(themeDisplay.getPathMain());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"cdb7b94f05d10f0e58196cb93c8056ebe483beb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getSaveAndContinueRedirect(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tJournalArticle article, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString originalRedirect = ParamUtil.getString(\n\t\t\tactionRequest, \"originalRedirect\");\n\n\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\t(ActionRequestImpl)actionRequest, portletConfig.getPortletName(),\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\tportletURL.setParameter(\"struts_action\", \"/journal/edit_article\");\n\t\tportletURL.setParameter(Constants.CMD, Constants.UPDATE, false);\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\"originalRedirect\", originalRedirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(article.getGroupId()), false);\n\t\tportletURL.setParameter(\"articleId\", article.getArticleId(), false);\n\t\tportletURL.setParameter(\n\t\t\t\"version\", String.valueOf(article.getVersion()), false);\n\n\t\treturn portletURL.toString();\n\t}","id":4127,"modified_method":"protected String getSaveAndContinueRedirect(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tJournalArticle article, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString originalRedirect = ParamUtil.getString(\n\t\t\tactionRequest, \"originalRedirect\");\n\n\t\tLiferayPortletURL liferayPortletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tliferayPortletURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"struts_action\", \"/journal/edit_article\");\n\t\tliferayPortletURL.setParameter(Constants.CMD, Constants.UPDATE, false);\n\t\tliferayPortletURL.setParameter(\"redirect\", redirect, false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"originalRedirect\", originalRedirect, false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(article.getGroupId()), false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"articleId\", article.getArticleId(), false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"version\", String.valueOf(article.getVersion()), false);\n\n\t\treturn liferayPortletURL.toString();\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getSaveAndContinueRedirect(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tWikiPage page, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tLayout layout = themeDisplay.getLayout();\n\n\t\tString originalRedirect = ParamUtil.getString(\n\t\t\tactionRequest, \"originalRedirect\");\n\n\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\t(ActionRequestImpl)actionRequest, portletConfig.getPortletName(),\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"struts_action\", \"/wiki/edit_page\");\n\t\tportletURL.setParameter(Constants.CMD, Constants.UPDATE, false);\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\"originalRedirect\", originalRedirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(layout.getGroupId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"nodeId\", String.valueOf(page.getNodeId()), false);\n\t\tportletURL.setParameter(\"title\", page.getTitle(), false);\n\n\t\treturn portletURL.toString();\n\t}","id":4128,"modified_method":"protected String getSaveAndContinueRedirect(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tWikiPage page, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tLayout layout = themeDisplay.getLayout();\n\n\t\tString originalRedirect = ParamUtil.getString(\n\t\t\tactionRequest, \"originalRedirect\");\n\n\t\tLiferayPortletURL liferayPortletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tliferayPortletURL.setParameter(\"struts_action\", \"/wiki/edit_page\");\n\t\tliferayPortletURL.setParameter(Constants.CMD, Constants.UPDATE, false);\n\t\tliferayPortletURL.setParameter(\"redirect\", redirect, false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"originalRedirect\", originalRedirect, false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(layout.getGroupId()), false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"nodeId\", String.valueOf(page.getNodeId()), false);\n\t\tliferayPortletURL.setParameter(\"title\", page.getTitle(), false);\n\n\t\treturn liferayPortletURL.toString();\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString redirect = ParamUtil.getString(actionRequest, \"redirect\");\n\n\t\tlong groupId = ParamUtil.getLong(actionRequest, \"groupId\");\n\t\tboolean privateLayout = ParamUtil.getBoolean(\n\t\t\tactionRequest, \"privateLayout\");\n\n\t\tLayout layout = null;\n\n\t\tList<Layout> layouts = LayoutLocalServiceUtil.getLayouts(\n\t\t\tgroupId, privateLayout, LayoutConstants.DEFAULT_PARENT_LAYOUT_ID, 0,\n\t\t\t1);\n\n\t\tif (layouts.size() > 0) {\n\t\t\tlayout = layouts.get(0);\n\t\t}\n\t\telse {\n\t\t\tlong parentLayoutId = LayoutConstants.DEFAULT_PARENT_LAYOUT_ID;\n\t\t\tString name = \"New Page\";\n\t\t\tString title = StringPool.BLANK;\n\t\t\tString description = StringPool.BLANK;\n\t\t\tString type = LayoutConstants.TYPE_PORTLET;\n\t\t\tboolean hidden = false;\n\t\t\tString friendlyURL = StringPool.BLANK;\n\n\t\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\t\tLayout.class.getName(), actionRequest);\n\n\t\t\tlayout = LayoutServiceUtil.addLayout(\n\t\t\t\tgroupId, privateLayout, parentLayoutId, name, title,\n\t\t\t\tdescription, type, hidden, friendlyURL, serviceContext);\n\t\t}\n\n\t\tif (layout != null) {\n\t\t\tString tabs1 = \"public-pages\";\n\n\t\t\tif (privateLayout) {\n\t\t\t\ttabs1 = \"private-pages\";\n\t\t\t}\n\n\t\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\t\tactionRequest);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, PortletKeys.LAYOUT_MANAGEMENT, layout.getPlid(),\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/layout_management/edit_pages\");\n\t\t\tportletURL.setParameter(\"tabs1\", tabs1);\n\t\t\tportletURL.setParameter(\"redirect\", redirect);\n\t\t\tportletURL.setParameter(\"groupId\", String.valueOf(groupId));\n\n\t\t\tactionResponse.sendRedirect(portletURL.toString());\n\t\t}\n\t}","id":4129,"modified_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString redirect = ParamUtil.getString(actionRequest, \"redirect\");\n\n\t\tlong groupId = ParamUtil.getLong(actionRequest, \"groupId\");\n\t\tboolean privateLayout = ParamUtil.getBoolean(\n\t\t\tactionRequest, \"privateLayout\");\n\n\t\tLayout layout = null;\n\n\t\tList<Layout> layouts = LayoutLocalServiceUtil.getLayouts(\n\t\t\tgroupId, privateLayout, LayoutConstants.DEFAULT_PARENT_LAYOUT_ID, 0,\n\t\t\t1);\n\n\t\tif (layouts.size() > 0) {\n\t\t\tlayout = layouts.get(0);\n\t\t}\n\t\telse {\n\t\t\tlong parentLayoutId = LayoutConstants.DEFAULT_PARENT_LAYOUT_ID;\n\t\t\tString name = \"New Page\";\n\t\t\tString title = StringPool.BLANK;\n\t\t\tString description = StringPool.BLANK;\n\t\t\tString type = LayoutConstants.TYPE_PORTLET;\n\t\t\tboolean hidden = false;\n\t\t\tString friendlyURL = StringPool.BLANK;\n\n\t\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\t\tLayout.class.getName(), actionRequest);\n\n\t\t\tlayout = LayoutServiceUtil.addLayout(\n\t\t\t\tgroupId, privateLayout, parentLayoutId, name, title,\n\t\t\t\tdescription, type, hidden, friendlyURL, serviceContext);\n\t\t}\n\n\t\tif (layout != null) {\n\t\t\tString tabs1 = \"public-pages\";\n\n\t\t\tif (privateLayout) {\n\t\t\t\ttabs1 = \"private-pages\";\n\t\t\t}\n\n\t\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\t\tactionRequest);\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, PortletKeys.LAYOUT_MANAGEMENT, layout.getPlid(),\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/layout_management/edit_pages\");\n\t\t\tportletURL.setParameter(\"tabs1\", tabs1);\n\t\t\tportletURL.setParameter(\"redirect\", redirect);\n\t\t\tportletURL.setParameter(\"groupId\", String.valueOf(groupId));\n\n\t\t\tactionResponse.sendRedirect(portletURL.toString());\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getSaveAndContinueRedirect(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tJournalStructure structure, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString originalRedirect = ParamUtil.getString(\n\t\t\tactionRequest, \"originalRedirect\");\n\n\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\t(ActionRequestImpl)actionRequest, portletConfig.getPortletName(),\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\tportletURL.setParameter(\"struts_action\", \"/journal/edit_structure\");\n\t\tportletURL.setParameter(Constants.CMD, Constants.UPDATE, false);\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\"originalRedirect\", originalRedirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(structure.getGroupId()), false);\n\t\tportletURL.setParameter(\n\t\t\t\"structureId\", structure.getStructureId(), false);\n\n\t\treturn portletURL.toString();\n\t}","id":4130,"modified_method":"protected String getSaveAndContinueRedirect(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tJournalStructure structure, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString originalRedirect = ParamUtil.getString(\n\t\t\tactionRequest, \"originalRedirect\");\n\n\t\tLiferayPortletURL liferayPortletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tliferayPortletURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"struts_action\", \"/journal/edit_structure\");\n\t\tliferayPortletURL.setParameter(Constants.CMD, Constants.UPDATE, false);\n\t\tliferayPortletURL.setParameter(\"redirect\", redirect, false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"originalRedirect\", originalRedirect, false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(structure.getGroupId()), false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"structureId\", structure.getStructureId(), false);\n\n\t\treturn liferayPortletURL.toString();\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getSaveAndContinueRedirect(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tJournalTemplate template, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString originalRedirect = ParamUtil.getString(\n\t\t\tactionRequest, \"originalRedirect\");\n\n\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\t(ActionRequestImpl)actionRequest, portletConfig.getPortletName(),\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\tportletURL.setParameter(\"struts_action\", \"/journal/edit_template\");\n\t\tportletURL.setParameter(Constants.CMD, Constants.UPDATE, false);\n\t\tportletURL.setParameter(\"redirect\", redirect, false);\n\t\tportletURL.setParameter(\"originalRedirect\", originalRedirect, false);\n\t\tportletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(template.getGroupId()), false);\n\t\tportletURL.setParameter(\"templateId\", template.getTemplateId(), false);\n\n\t\treturn portletURL.toString();\n\t}","id":4131,"modified_method":"protected String getSaveAndContinueRedirect(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tJournalTemplate template, String redirect)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString originalRedirect = ParamUtil.getString(\n\t\t\tactionRequest, \"originalRedirect\");\n\n\t\tLiferayPortletURL liferayPortletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\tliferayPortletURL.setWindowState(WindowState.MAXIMIZED);\n\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"struts_action\", \"/journal/edit_template\");\n\t\tliferayPortletURL.setParameter(Constants.CMD, Constants.UPDATE, false);\n\t\tliferayPortletURL.setParameter(\"redirect\", redirect, false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"originalRedirect\", originalRedirect, false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"groupId\", String.valueOf(template.getGroupId()), false);\n\t\tliferayPortletURL.setParameter(\n\t\t\t\"templateId\", template.getTemplateId(), false);\n\n\t\treturn liferayPortletURL.toString();\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong nodeId = ParamUtil.getLong(actionRequest, \"nodeId\");\n\t\t\tString nodeName = ParamUtil.getString(actionRequest, \"nodeName\");\n\t\t\tString title = ParamUtil.getString(actionRequest, \"title\");\n\t\t\tdouble version = ParamUtil.getDouble(actionRequest, \"version\");\n\n\t\t\tString targetExtension = ParamUtil.getString(\n\t\t\t\tactionRequest, \"targetExtension\");\n\n\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);\n\n\t\t\tPortletURL viewPageURL = new PortletURLImpl(\n\t\t\t\t(ActionRequestImpl)actionRequest,\n\t\t\t\tportletConfig.getPortletName(), themeDisplay.getPlid(),\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tviewPageURL.setPortletMode(PortletMode.VIEW);\n\t\t\tviewPageURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\tviewPageURL.setParameter(\"struts_action\", \"/wiki/view\");\n\t\t\tviewPageURL.setParameter(\"nodeName\", nodeName);\n\t\t\tviewPageURL.setParameter(\"title\", title);\n\n\t\t\tPortletURL editPageURL = new PortletURLImpl(\n\t\t\t\t(ActionRequestImpl)actionRequest,\n\t\t\t\tportletConfig.getPortletName(), themeDisplay.getPlid(),\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\teditPageURL.setPortletMode(PortletMode.VIEW);\n\t\t\teditPageURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\teditPageURL.setParameter(\"struts_action\", \"/wiki/edit_page\");\n\t\t\teditPageURL.setParameter(\"nodeId\", String.valueOf(nodeId));\n\t\t\teditPageURL.setParameter(\"title\", title);\n\n\t\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\t\tactionRequest);\n\t\t\tHttpServletResponse response = PortalUtil.getHttpServletResponse(\n\t\t\t\tactionResponse);\n\n\t\t\tgetFile(\n\t\t\t\tnodeId, title, version, targetExtension, viewPageURL,\n\t\t\t\teditPageURL, themeDisplay, request, response);\n\n\t\t\tsetForward(actionRequest, ActionConstants.COMMON_NULL);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, actionRequest, actionResponse);\n\t\t}\n\t}","id":4132,"modified_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong nodeId = ParamUtil.getLong(actionRequest, \"nodeId\");\n\t\t\tString nodeName = ParamUtil.getString(actionRequest, \"nodeName\");\n\t\t\tString title = ParamUtil.getString(actionRequest, \"title\");\n\t\t\tdouble version = ParamUtil.getDouble(actionRequest, \"version\");\n\n\t\t\tString targetExtension = ParamUtil.getString(\n\t\t\t\tactionRequest, \"targetExtension\");\n\n\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);\n\n\t\t\tPortletURL viewPageURL = PortletURLFactoryUtil.create(\n\t\t\t\t(ActionRequestImpl)actionRequest,\n\t\t\t\tportletConfig.getPortletName(), themeDisplay.getPlid(),\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tviewPageURL.setPortletMode(PortletMode.VIEW);\n\t\t\tviewPageURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\tviewPageURL.setParameter(\"struts_action\", \"/wiki/view\");\n\t\t\tviewPageURL.setParameter(\"nodeName\", nodeName);\n\t\t\tviewPageURL.setParameter(\"title\", title);\n\n\t\t\tPortletURL editPageURL = PortletURLFactoryUtil.create(\n\t\t\t\t(ActionRequestImpl)actionRequest,\n\t\t\t\tportletConfig.getPortletName(), themeDisplay.getPlid(),\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\teditPageURL.setPortletMode(PortletMode.VIEW);\n\t\t\teditPageURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\teditPageURL.setParameter(\"struts_action\", \"/wiki/edit_page\");\n\t\t\teditPageURL.setParameter(\"nodeId\", String.valueOf(nodeId));\n\t\t\teditPageURL.setParameter(\"title\", title);\n\n\t\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\t\tactionRequest);\n\t\t\tHttpServletResponse response = PortalUtil.getHttpServletResponse(\n\t\t\t\tactionResponse);\n\n\t\t\tgetFile(\n\t\t\t\tnodeId, title, version, targetExtension, viewPageURL,\n\t\t\t\teditPageURL, themeDisplay, request, response);\n\n\t\t\tsetForward(actionRequest, ActionConstants.COMMON_NULL);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, actionRequest, actionResponse);\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong categoryId = ParamUtil.getLong(request, \"mbCategoryId\");\n\n\t\t\tplid = getPlid(plid, categoryId);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, PortletKeys.MESSAGE_BOARDS, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/message_boards/view\");\n\t\t\tportletURL.setParameter(\"mbCategoryId\", String.valueOf(categoryId));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","id":4133,"modified_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong categoryId = ParamUtil.getLong(request, \"mbCategoryId\");\n\n\t\t\tplid = getPlid(plid, categoryId);\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, PortletKeys.MESSAGE_BOARDS, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/message_boards/view\");\n\t\t\tportletURL.setParameter(\"mbCategoryId\", String.valueOf(categoryId));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tString redirect = ParamUtil.getString(request, \"redirect\");\n\t\t\tlong entryId = ParamUtil.getLong(request, \"entryId\");\n\t\t\tboolean showAllEntries = ParamUtil.getBoolean(\n\t\t\t\trequest, \"showAllEntries\");\n\n\t\t\tString portletId = PortletKeys.BLOGS;\n\n\t\t\ttry {\n\t\t\t\tplid = getPlid(plid, portletId, entryId);\n\t\t\t}\n\t\t\tcatch (NoSuchLayoutException nsle) {\n\t\t\t\tportletId = PortletKeys.BLOGS_AGGREGATOR;\n\n\t\t\t\tplid = getPlid(plid, portletId, entryId);\n\t\t\t}\n\n\t\t\tString urlTitle = getUrlTitle(entryId);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, portletId, plid, PortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\tportletURL.setParameter(\"redirect\", redirect);\n\t\t\t}\n\n\t\t\tString strutsAction = getStrutsAction(portletId, showAllEntries);\n\n\t\t\tportletURL.setParameter(\"struts_action\", strutsAction);\n\n\t\t\tif (!showAllEntries) {\n\t\t\t\tif (Validator.isNotNull(urlTitle)) {\n\t\t\t\t\tportletURL.setParameter(\"urlTitle\", urlTitle);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tportletURL.setParameter(\"entryId\", String.valueOf(entryId));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tString noSuchEntryRedirect = ParamUtil.getString(\n\t\t\t\trequest, \"noSuchEntryRedirect\");\n\n\t\t\tif (e.getClass().equals(NoSuchLayoutException.class) &&\n\t\t\t\tValidator.isNotNull(noSuchEntryRedirect)) {\n\n\t\t\t\tresponse.sendRedirect(noSuchEntryRedirect);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tPortalUtil.sendError(e, request, response);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}","id":4134,"modified_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tString redirect = ParamUtil.getString(request, \"redirect\");\n\t\t\tlong entryId = ParamUtil.getLong(request, \"entryId\");\n\t\t\tboolean showAllEntries = ParamUtil.getBoolean(\n\t\t\t\trequest, \"showAllEntries\");\n\n\t\t\tString portletId = PortletKeys.BLOGS;\n\n\t\t\ttry {\n\t\t\t\tplid = getPlid(plid, portletId, entryId);\n\t\t\t}\n\t\t\tcatch (NoSuchLayoutException nsle) {\n\t\t\t\tportletId = PortletKeys.BLOGS_AGGREGATOR;\n\n\t\t\t\tplid = getPlid(plid, portletId, entryId);\n\t\t\t}\n\n\t\t\tString urlTitle = getUrlTitle(entryId);\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, portletId, plid, PortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\tportletURL.setParameter(\"redirect\", redirect);\n\t\t\t}\n\n\t\t\tString strutsAction = getStrutsAction(portletId, showAllEntries);\n\n\t\t\tportletURL.setParameter(\"struts_action\", strutsAction);\n\n\t\t\tif (!showAllEntries) {\n\t\t\t\tif (Validator.isNotNull(urlTitle)) {\n\t\t\t\t\tportletURL.setParameter(\"urlTitle\", urlTitle);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tportletURL.setParameter(\"entryId\", String.valueOf(entryId));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tString noSuchEntryRedirect = ParamUtil.getString(\n\t\t\t\trequest, \"noSuchEntryRedirect\");\n\n\t\t\tif (e.getClass().equals(NoSuchLayoutException.class) &&\n\t\t\t\tValidator.isNotNull(noSuchEntryRedirect)) {\n\n\t\t\t\tresponse.sendRedirect(noSuchEntryRedirect);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tPortalUtil.sendError(e, request, response);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tString redirect = ParamUtil.getString(request, \"redirect\");\n\t\t\tlong eventId = ParamUtil.getLong(request, \"eventId\");\n\n\t\t\tplid = getPlid(plid, eventId);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, PortletKeys.CALENDAR, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\"struts_action\", \"/calendar/view_event\");\n\n\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\tportletURL.setParameter(\"redirect\", redirect);\n\t\t\t}\n\n\t\t\tportletURL.setParameter(\"eventId\", String.valueOf(eventId));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","id":4135,"modified_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tString redirect = ParamUtil.getString(request, \"redirect\");\n\t\t\tlong eventId = ParamUtil.getLong(request, \"eventId\");\n\n\t\t\tplid = getPlid(plid, eventId);\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, PortletKeys.CALENDAR, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\"struts_action\", \"/calendar/view_event\");\n\n\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\tportletURL.setParameter(\"redirect\", redirect);\n\t\t\t}\n\n\t\t\tportletURL.setParameter(\"eventId\", String.valueOf(eventId));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong fileEntryId = ParamUtil.getLong(request, \"fileEntryId\");\n\n\t\t\tplid = getPlid(plid, fileEntryId);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, PortletKeys.DOCUMENT_LIBRARY, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/view_file_entry\");\n\n\t\t\tDLFileEntry fileEntry = DLFileEntryLocalServiceUtil.getFileEntry(\n\t\t\t\tfileEntryId);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"folderId\", String.valueOf(fileEntry.getFolderId()));\n\t\t\tportletURL.setParameter(\"name\", fileEntry.getName());\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","id":4136,"modified_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong fileEntryId = ParamUtil.getLong(request, \"fileEntryId\");\n\n\t\t\tplid = getPlid(plid, fileEntryId);\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, PortletKeys.DOCUMENT_LIBRARY, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/view_file_entry\");\n\n\t\t\tDLFileEntry fileEntry = DLFileEntryLocalServiceUtil.getFileEntry(\n\t\t\t\tfileEntryId);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"folderId\", String.valueOf(fileEntry.getFolderId()));\n\t\t\tportletURL.setParameter(\"name\", fileEntry.getName());\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong folderId = ParamUtil.getLong(request, \"folderId\");\n\n\t\t\tplid = getPlid(plid, folderId);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, PortletKeys.IMAGE_GALLERY, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\"struts_action\", \"/image_gallery/view\");\n\t\t\tportletURL.setParameter(\"folderId\", String.valueOf(folderId));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","id":4137,"modified_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong folderId = ParamUtil.getLong(request, \"folderId\");\n\n\t\t\tplid = getPlid(plid, folderId);\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, PortletKeys.IMAGE_GALLERY, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\"struts_action\", \"/image_gallery/view\");\n\t\t\tportletURL.setParameter(\"folderId\", String.valueOf(folderId));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong groupId = ParamUtil.getLong(request,\"groupId\");\n\t\t\tlong folderId = ParamUtil.getLong(request, \"folderId\");\n\n\t\t\tplid = getPlid(plid, groupId, folderId);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, PortletKeys.DOCUMENT_LIBRARY, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/view\");\n\t\t\tportletURL.setParameter(\"folderId\", String.valueOf(folderId));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","id":4138,"modified_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong groupId = ParamUtil.getLong(request,\"groupId\");\n\t\t\tlong folderId = ParamUtil.getLong(request, \"folderId\");\n\n\t\t\tplid = getPlid(plid, groupId, folderId);\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, PortletKeys.DOCUMENT_LIBRARY, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/view\");\n\t\t\tportletURL.setParameter(\"folderId\", String.valueOf(folderId));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong imageId = ParamUtil.getLong(request, \"imageId\");\n\n\t\t\tplid = getPlid(plid, imageId);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, PortletKeys.IMAGE_GALLERY, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/image_gallery/edit_image\");\n\t\t\tportletURL.setParameter(\"imageId\", String.valueOf(imageId));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","id":4139,"modified_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong imageId = ParamUtil.getLong(request, \"imageId\");\n\n\t\t\tplid = getPlid(plid, imageId);\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, PortletKeys.IMAGE_GALLERY, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/image_gallery/edit_image\");\n\t\t\tportletURL.setParameter(\"imageId\", String.valueOf(imageId));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong messageId = ParamUtil.getLong(request, \"messageId\");\n\n\t\t\tplid = getPlid(plid, messageId);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, PortletKeys.MESSAGE_BOARDS, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/message_boards/view_message\");\n\t\t\tportletURL.setParameter(\"messageId\", String.valueOf(messageId));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","id":4140,"modified_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong messageId = ParamUtil.getLong(request, \"messageId\");\n\n\t\t\tplid = getPlid(plid, messageId);\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, PortletKeys.MESSAGE_BOARDS, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/message_boards/view_message\");\n\t\t\tportletURL.setParameter(\"messageId\", String.valueOf(messageId));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong pageResourcePrimKey = ParamUtil.getLong(\n\t\t\t\trequest, \"pageResourcePrimKey\");\n\n\t\t\tplid = getPlid(plid, pageResourcePrimKey);\n\n\t\t\tWikiPageResource pageResource =\n\t\t\t\tWikiPageResourceLocalServiceUtil.getPageResource(\n\t\t\t\t\tpageResourcePrimKey);\n\n\t\t\tWikiNode node = WikiNodeLocalServiceUtil.getNode(\n\t\t\t\tpageResource.getNodeId());\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, PortletKeys.WIKI, plid, PortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\"struts_action\", \"/wiki/view\");\n\t\t\tportletURL.setParameter(\"nodeName\", node.getName());\n\t\t\tportletURL.setParameter(\"title\", pageResource.getTitle());\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","id":4141,"modified_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong pageResourcePrimKey = ParamUtil.getLong(\n\t\t\t\trequest, \"pageResourcePrimKey\");\n\n\t\t\tplid = getPlid(plid, pageResourcePrimKey);\n\n\t\t\tWikiPageResource pageResource =\n\t\t\t\tWikiPageResourceLocalServiceUtil.getPageResource(\n\t\t\t\t\tpageResourcePrimKey);\n\n\t\t\tWikiNode node = WikiNodeLocalServiceUtil.getNode(\n\t\t\t\tpageResource.getNodeId());\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, PortletKeys.WIKI, plid, PortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\"struts_action\", \"/wiki/view\");\n\t\t\tportletURL.setParameter(\"nodeName\", node.getName());\n\t\t\tportletURL.setParameter(\"title\", pageResource.getTitle());\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, PortletKeys.MESSAGE_BOARDS, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\"struts_action\", \"/message_boards/view\");\n\t\t\tportletURL.setParameter(\"tabs2\", \"recent-posts\");\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","id":4142,"modified_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, PortletKeys.MESSAGE_BOARDS, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\"struts_action\", \"/message_boards/view\");\n\t\t\tportletURL.setParameter(\"tabs2\", \"recent-posts\");\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong threadId = ParamUtil.getLong(request, \"threadId\");\n\n\t\t\tMBThread thread = MBThreadLocalServiceUtil.getThread(threadId);\n\n\t\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\t\trequest, PortletKeys.MESSAGE_BOARDS, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/message_boards/view_message\");\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"messageId\", String.valueOf(thread.getRootMessageId()));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","id":4143,"modified_method":"public ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\t\t\tlong threadId = ParamUtil.getLong(request, \"threadId\");\n\n\t\t\tMBThread thread = MBThreadLocalServiceUtil.getThread(threadId);\n\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\trequest, PortletKeys.MESSAGE_BOARDS, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setWindowState(WindowState.NORMAL);\n\t\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"struts_action\", \"/message_boards/view_message\");\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"messageId\", String.valueOf(thread.getRootMessageId()));\n\n\t\t\tresponse.sendRedirect(portletURL.toString());\n\n\t\t\treturn null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tPortalUtil.sendError(e, request, response);\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static PortletURL getLoginURL(\n\t\t\tHttpServletRequest request, long plid)\n\t\tthrows PortletModeException, WindowStateException {\n\n\t\tPortletURL portletURL = new PortletURLImpl(\n\t\t\trequest, PortletKeys.LOGIN, plid, PortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\tportletURL.setParameter(\"saveLastPath\", \"0\");\n\t\tportletURL.setParameter(\"struts_action\", \"/login/login\");\n\n\t\treturn portletURL;\n\t}","id":4144,"modified_method":"public static PortletURL getLoginURL(\n\t\t\tHttpServletRequest request, long plid)\n\t\tthrows PortletModeException, WindowStateException {\n\n\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\trequest, PortletKeys.LOGIN, plid, PortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setWindowState(WindowState.MAXIMIZED);\n\t\tportletURL.setPortletMode(PortletMode.VIEW);\n\n\t\tportletURL.setParameter(\"saveLastPath\", \"0\");\n\t\tportletURL.setParameter(\"struts_action\", \"/login/login\");\n\n\t\treturn portletURL;\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getEntryURL(\n\t\t\tResourceRequest resourceRequest, JournalFeed feed,\n\t\t\tJournalArticle article, Layout layout, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tList<Long> hitLayoutIds =\n\t\t\tJournalContentSearchLocalServiceUtil.getLayoutIds(\n\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\tarticle.getArticleId());\n\n\t\tif (hitLayoutIds.size() > 0) {\n\t\t\tLong hitLayoutId = hitLayoutIds.get(0);\n\n\t\t\tLayout hitLayout = LayoutLocalServiceUtil.getLayout(\n\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\thitLayoutId.longValue());\n\n\t\t\treturn PortalUtil.getLayoutFriendlyURL(hitLayout, themeDisplay);\n\t\t}\n\t\telse {\n\t\t\tlong plid = PortalUtil.getPlidFromFriendlyURL(\n\t\t\t\tfeed.getCompanyId(), feed.getTargetLayoutFriendlyUrl());\n\n\t\t\tString portletId = PortletKeys.JOURNAL_CONTENT;\n\n\t\t\tif (Validator.isNotNull(feed.getTargetPortletId())) {\n\t\t\t\tportletId = feed.getTargetPortletId();\n\t\t\t}\n\n\t\t\tPortletURL entryURL = new PortletURLImpl(\n\t\t\t\t(PortletRequestImpl)resourceRequest, portletId, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tentryURL.setParameter(\"struts_action\", \"/journal_content/view\");\n\t\t\tentryURL.setParameter(\n\t\t\t\t\"groupId\", String.valueOf(article.getGroupId()));\n\t\t\tentryURL.setParameter(\"articleId\", article.getArticleId());\n\n\t\t\treturn entryURL.toString();\n\t\t}\n\t}","id":4145,"modified_method":"protected String getEntryURL(\n\t\t\tResourceRequest resourceRequest, JournalFeed feed,\n\t\t\tJournalArticle article, Layout layout, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tList<Long> hitLayoutIds =\n\t\t\tJournalContentSearchLocalServiceUtil.getLayoutIds(\n\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\tarticle.getArticleId());\n\n\t\tif (hitLayoutIds.size() > 0) {\n\t\t\tLong hitLayoutId = hitLayoutIds.get(0);\n\n\t\t\tLayout hitLayout = LayoutLocalServiceUtil.getLayout(\n\t\t\t\tlayout.getGroupId(), layout.isPrivateLayout(),\n\t\t\t\thitLayoutId.longValue());\n\n\t\t\treturn PortalUtil.getLayoutFriendlyURL(hitLayout, themeDisplay);\n\t\t}\n\t\telse {\n\t\t\tlong plid = PortalUtil.getPlidFromFriendlyURL(\n\t\t\t\tfeed.getCompanyId(), feed.getTargetLayoutFriendlyUrl());\n\n\t\t\tString portletId = PortletKeys.JOURNAL_CONTENT;\n\n\t\t\tif (Validator.isNotNull(feed.getTargetPortletId())) {\n\t\t\t\tportletId = feed.getTargetPortletId();\n\t\t\t}\n\n\t\t\tPortletURL entryURL = PortletURLFactoryUtil.create(\n\t\t\t\t(PortletRequestImpl)resourceRequest, portletId, plid,\n\t\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\t\tentryURL.setParameter(\"struts_action\", \"/journal_content/view\");\n\t\t\tentryURL.setParameter(\n\t\t\t\t\"groupId\", String.valueOf(article.getGroupId()));\n\t\t\tentryURL.setParameter(\"articleId\", article.getArticleId());\n\n\t\t\treturn entryURL.toString();\n\t\t}\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected byte[] getRSS(HttpServletRequest request) throws Exception {\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tLayout layout = themeDisplay.getLayout();\n\n\t\tlong companyId = ParamUtil.getLong(request, \"companyId\");\n\t\tlong nodeId = ParamUtil.getLong(request, \"nodeId\");\n\t\tString title = ParamUtil.getString(request, \"title\");\n\t\tint max = ParamUtil.getInteger(\n\t\t\trequest, \"max\", SearchContainer.DEFAULT_DELTA);\n\t\tString type = ParamUtil.getString(\n\t\t\trequest, \"type\", RSSUtil.DEFAULT_TYPE);\n\t\tdouble version = ParamUtil.getDouble(\n\t\t\trequest, \"version\", RSSUtil.DEFAULT_VERSION);\n\t\tString displayStyle = ParamUtil.getString(\n\t\t\trequest, \"displayStyle\", RSSUtil.DISPLAY_STYLE_FULL_CONTENT);\n\n\t\tPortletURL feedURL = new PortletURLImpl(\n\t\t\trequest, PortletKeys.WIKI, layout.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tfeedURL.setParameter(\"nodeId\", String.valueOf(nodeId));\n\n\t\tPortletURL entryURL = new PortletURLImpl(\n\t\t\trequest, PortletKeys.WIKI, layout.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tentryURL.setParameter(\"nodeId\", String.valueOf(nodeId));\n\t\tentryURL.setParameter(\"title\", title);\n\n\t\tLocale locale = themeDisplay.getLocale();\n\n\t\tString rss = StringPool.BLANK;\n\n\t\tif ((nodeId > 0) && (Validator.isNotNull(title))) {\n\t\t\trss = WikiPageServiceUtil.getPagesRSS(\n\t\t\t\tcompanyId, nodeId, title, max, type, version, displayStyle,\n\t\t\t\tfeedURL.toString(), entryURL.toString(), locale);\n\t\t}\n\t\telse if (nodeId > 0) {\n\t\t\trss = WikiPageServiceUtil.getNodePagesRSS(\n\t\t\t\tnodeId, max, type, version, displayStyle, feedURL.toString(),\n\t\t\t\tentryURL.toString());\n\t\t}\n\n\t\treturn rss.getBytes(StringPool.UTF8);\n\t}","id":4146,"modified_method":"protected byte[] getRSS(HttpServletRequest request) throws Exception {\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tLayout layout = themeDisplay.getLayout();\n\n\t\tlong companyId = ParamUtil.getLong(request, \"companyId\");\n\t\tlong nodeId = ParamUtil.getLong(request, \"nodeId\");\n\t\tString title = ParamUtil.getString(request, \"title\");\n\t\tint max = ParamUtil.getInteger(\n\t\t\trequest, \"max\", SearchContainer.DEFAULT_DELTA);\n\t\tString type = ParamUtil.getString(\n\t\t\trequest, \"type\", RSSUtil.DEFAULT_TYPE);\n\t\tdouble version = ParamUtil.getDouble(\n\t\t\trequest, \"version\", RSSUtil.DEFAULT_VERSION);\n\t\tString displayStyle = ParamUtil.getString(\n\t\t\trequest, \"displayStyle\", RSSUtil.DISPLAY_STYLE_FULL_CONTENT);\n\n\t\tPortletURL feedURL = PortletURLFactoryUtil.create(\n\t\t\trequest, PortletKeys.WIKI, layout.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tfeedURL.setParameter(\"nodeId\", String.valueOf(nodeId));\n\n\t\tPortletURL entryURL = PortletURLFactoryUtil.create(\n\t\t\trequest, PortletKeys.WIKI, layout.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tentryURL.setParameter(\"nodeId\", String.valueOf(nodeId));\n\t\tentryURL.setParameter(\"title\", title);\n\n\t\tLocale locale = themeDisplay.getLocale();\n\n\t\tString rss = StringPool.BLANK;\n\n\t\tif ((nodeId > 0) && (Validator.isNotNull(title))) {\n\t\t\trss = WikiPageServiceUtil.getPagesRSS(\n\t\t\t\tcompanyId, nodeId, title, max, type, version, displayStyle,\n\t\t\t\tfeedURL.toString(), entryURL.toString(), locale);\n\t\t}\n\t\telse if (nodeId > 0) {\n\t\t\trss = WikiPageServiceUtil.getNodePagesRSS(\n\t\t\t\tnodeId, max, type, version, displayStyle, feedURL.toString(),\n\t\t\t\tentryURL.toString());\n\t\t}\n\n\t\treturn rss.getBytes(StringPool.UTF8);\n\t}","commit_id":"c22e1e5498d772da18c7f0cbbaba246f20edf71f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void processAction(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tJSONObject userPrefsJsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\tMap<String, UserPref> userPrefs = getUserPrefs(actionRequest);\n\n\t\tfor (UserPref userPref : userPrefs.values()) {\n\t\t\tString name = userPref.getName();\n\n\t\t\tString value = ParamUtil.getString(actionRequest, name);\n\n\t\t\tuserPrefsJsonObject.put(name, value);\n\t\t}\n\n\t\tString namespace = ShindigUtil.getPortletResourceNamespace(\n\t\t\tactionRequest, themeDisplay);\n\n\t\tString columnName = ShindigUtil.getColumnUserPrefs(namespace);\n\n\t\tExpandoValueServiceUtil.addValue(\n\t\t\tthemeDisplay.getCompanyId(), User.class.getName(),\n\t\t\tShindigUtil.getTableOpenSocial(), columnName,\n\t\t\tthemeDisplay.getUserId(), userPrefsJsonObject.toString());\n\n\t\tSessionMessages.add(\n\t\t\tactionRequest, portletConfig.getPortletName() + \".doConfigure\");\n\t}","id":4147,"modified_method":"public void processAction(\n\t\t\tPortletConfig portletConfig, ActionRequest actionRequest,\n\t\t\tActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tJSONObject userPrefsJSONObject = JSONFactoryUtil.createJSONObject();\n\n\t\tMap<String, UserPref> userPrefs = getUserPrefs(actionRequest);\n\n\t\tfor (UserPref userPref : userPrefs.values()) {\n\t\t\tString name = userPref.getName();\n\n\t\t\tString value = ParamUtil.getString(actionRequest, name);\n\n\t\t\tuserPrefsJSONObject.put(name, value);\n\t\t}\n\n\t\tString namespace = ShindigUtil.getPortletResourceNamespace(\n\t\t\tactionRequest, themeDisplay);\n\n\t\tString columnName = ShindigUtil.getColumnUserPrefs(namespace);\n\n\t\tExpandoValueServiceUtil.addValue(\n\t\t\tthemeDisplay.getCompanyId(), User.class.getName(),\n\t\t\tShindigUtil.getTableOpenSocial(), columnName,\n\t\t\tthemeDisplay.getUserId(), userPrefsJSONObject.toString());\n\n\t\tSessionMessages.add(\n\t\t\tactionRequest, portletConfig.getPortletName() + \".doConfigure\");\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected JSONArray getMediaItems(List<MediaItem> mediaItems) {\n\t\tif (mediaItems == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tJSONArray mediaItemsJSONArray = JSONFactoryUtil.createJSONArray();\n\n\t\tfor (MediaItem mediaItem : mediaItems) {\n\t\t\tJSONObject mediaItemJSON = JSONFactoryUtil.createJSONObject();\n\n\t\t\tmediaItemJSON.put(\"mimeType\", mediaItem.getMimeType());\n\t\t\tmediaItemJSON.put(\"type\", mediaItem.getType().toString());\n\t\t\tmediaItemJSON.put(\"url\", mediaItem.getUrl());\n\n\t\t\tmediaItemsJSONArray.put(mediaItemJSON);\n\t\t}\n\n\t\treturn mediaItemsJSONArray;\n\t}","id":4148,"modified_method":"protected JSONArray getMediaItems(List<MediaItem> mediaItems) {\n\t\tif (mediaItems == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tJSONArray mediaItemsJSONArray = JSONFactoryUtil.createJSONArray();\n\n\t\tfor (MediaItem mediaItem : mediaItems) {\n\t\t\tJSONObject mediaItemsJsonObject =\n\t\t\t\tJSONFactoryUtil.createJSONObject();\n\n\t\t\tmediaItemsJsonObject.put(\"mimeType\", mediaItem.getMimeType());\n\t\t\tmediaItemsJsonObject.put(\"type\", mediaItem.getType().toString());\n\t\t\tmediaItemsJsonObject.put(\"url\", mediaItem.getUrl());\n\n\t\t\tmediaItemsJSONArray.put(mediaItemsJsonObject);\n\t\t}\n\n\t\treturn mediaItemsJSONArray;\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void doCreateActivity(\n\t\t\tUserId userId, GroupId groupId, String appId, Set<String> fields,\n\t\t\tActivity activity, SecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tlong userIdLong = GetterUtil.getLong(userId.getUserId(securityToken));\n\n\t\tJSONObject extraDataJSON = JSONFactoryUtil.createJSONObject();\n\n\t\textraDataJSON.put(\"appId\", activity.getAppId());\n\t\textraDataJSON.put(\"body\", activity.getBody());\n\t\textraDataJSON.put(\"bodyId\", activity.getBodyId());\n\t\textraDataJSON.put(\"externalId\", activity.getExternalId());\n\t\textraDataJSON.put(\n\t\t\t\"mediaItems\", getMediaItems(activity.getMediaItems()));\n\t\textraDataJSON.put(\"postedTime\", activity.getPostedTime());\n\t\textraDataJSON.put(\"priority\", activity.getPriority());\n\t\textraDataJSON.put(\"streamFaviconUrl\", activity.getStreamFaviconUrl());\n\t\textraDataJSON.put(\"streamSourceUrl\", activity.getStreamSourceUrl());\n\t\textraDataJSON.put(\"streamTitle\", activity.getStreamTitle());\n\t\textraDataJSON.put(\"streamUrl\", activity.getStreamUrl());\n\t\textraDataJSON.put(\n\t\t\t\"templateParams\", getTemplateParams(activity.getTemplateParams()));\n\t\textraDataJSON.put(\"title\", activity.getTitle());\n\t\textraDataJSON.put(\"titleId\", activity.getTitleId());\n\t\textraDataJSON.put(\"url\", activity.getUrl());\n\n\t\tSocialActivityLocalServiceUtil.addActivity(\n\t\t\tuserIdLong, 0L, Activity.class.getName(),\n\t\t\tactivity.getPostedTime().longValue(),\n\t\t\tactivity.getAppId().hashCode(), extraDataJSON.toString(), 0L);\n\t}","id":4149,"modified_method":"public void doCreateActivity(\n\t\t\tUserId userId, GroupId groupId, String appId, Set<String> fields,\n\t\t\tActivity activity, SecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tlong userIdLong = GetterUtil.getLong(userId.getUserId(securityToken));\n\n\t\tJSONObject extraDataJSONObject = JSONFactoryUtil.createJSONObject();\n\n\t\textraDataJSONObject.put(\"appId\", activity.getAppId());\n\t\textraDataJSONObject.put(\"body\", activity.getBody());\n\t\textraDataJSONObject.put(\"bodyId\", activity.getBodyId());\n\t\textraDataJSONObject.put(\"externalId\", activity.getExternalId());\n\t\textraDataJSONObject.put(\n\t\t\t\"mediaItems\", getMediaItems(activity.getMediaItems()));\n\t\textraDataJSONObject.put(\"postedTime\", activity.getPostedTime());\n\t\textraDataJSONObject.put(\"priority\", activity.getPriority());\n\t\textraDataJSONObject.put(\n\t\t\t\"streamFaviconUrl\", activity.getStreamFaviconUrl());\n\t\textraDataJSONObject.put(\n\t\t\t\"streamSourceUrl\", activity.getStreamSourceUrl());\n\t\textraDataJSONObject.put(\"streamTitle\", activity.getStreamTitle());\n\t\textraDataJSONObject.put(\"streamUrl\", activity.getStreamUrl());\n\t\textraDataJSONObject.put(\n\t\t\t\"templateParams\", getTemplateParams(activity.getTemplateParams()));\n\t\textraDataJSONObject.put(\"title\", activity.getTitle());\n\t\textraDataJSONObject.put(\"titleId\", activity.getTitleId());\n\t\textraDataJSONObject.put(\"url\", activity.getUrl());\n\n\t\tSocialActivityLocalServiceUtil.addActivity(\n\t\t\tuserIdLong, 0L, Activity.class.getName(),\n\t\t\tactivity.getPostedTime().longValue(),\n\t\t\tactivity.getAppId().hashCode(), extraDataJSONObject.toString(), 0L);\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected Map<String, String> getTemplateParams(JSONArray jsonArray) {\n\t\tif (jsonArray == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tMap<String, String> templateParams = new HashMap<String, String>();\n\n\t\tfor (int i = 0; i < jsonArray.length(); i++) {\n\t\t\tJSONObject jsonObject = jsonArray.getJSONObject(i);\n\n\t\t\tJSONArray names = jsonObject.names();\n\n\t\t\tfor (int j = 0; j < names.length(); j++) {\n\t\t\t\tString name = names.getString(j);\n\n\t\t\t\ttemplateParams.put(name, jsonObject.getString(name));\n\t\t\t}\n\t\t}\n\n\t\treturn templateParams;\n\t}","id":4150,"modified_method":"protected Map<String, String> getTemplateParams(\n\t\tJSONArray templateParamsJSONArray) {\n\n\t\tif (templateParamsJSONArray == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tMap<String, String> templateParams = new HashMap<String, String>();\n\n\t\tfor (int i = 0; i < templateParamsJSONArray.length(); i++) {\n\t\t\tJSONObject templateParamJSONObject =\n\t\t\t\ttemplateParamsJSONArray.getJSONObject(i);\n\n\t\t\tJSONArray namesJSONArray = templateParamJSONObject.names();\n\n\t\t\tfor (int j = 0; j < namesJSONArray.length(); j++) {\n\t\t\t\tString name = namesJSONArray.getString(j);\n\n\t\t\t\tString value = templateParamJSONObject.getString(name);\n\n\t\t\t\ttemplateParams.put(name, value);\n\t\t\t}\n\t\t}\n\n\t\treturn templateParams;\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected List<MediaItem> getMediaItems(JSONArray jsonArray) {\n\t\tif (jsonArray == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tList<MediaItem> mediaItems = new ArrayList<MediaItem>();\n\n\t\tfor (int i = 0; i < jsonArray.length(); i++) {\n\t\t\tJSONObject jsonObject = jsonArray.getJSONObject(i);\n\n\t\t\tMediaItem mediaItem = new MediaItemImpl(\n\t\t\t\tjsonObject.getString(\"mimeType\"),\n\t\t\t\tType.valueOf(jsonObject.getString(\"type\")),\n\t\t\t\tjsonObject.getString(\"url\"));\n\n\t\t\tmediaItems.add(mediaItem);\n\t\t}\n\n\t\treturn mediaItems;\n\t}","id":4151,"modified_method":"protected List<MediaItem> getMediaItems(JSONArray mediaItemsJSONArray) {\n\t\tif (mediaItemsJSONArray == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tList<MediaItem> mediaItems = new ArrayList<MediaItem>();\n\n\t\tfor (int i = 0; i < mediaItemsJSONArray.length(); i++) {\n\t\t\tJSONObject mediaItemsJsonObject = mediaItemsJSONArray.getJSONObject(\n\t\t\t\ti);\n\n\t\t\tMediaItem mediaItem = new MediaItemImpl(\n\t\t\t\tmediaItemsJsonObject.getString(\"mimeType\"),\n\t\t\t\tType.valueOf(mediaItemsJsonObject.getString(\"type\")),\n\t\t\t\tmediaItemsJsonObject.getString(\"url\"));\n\n\t\t\tmediaItems.add(mediaItem);\n\t\t}\n\n\t\treturn mediaItems;\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected Activity getExternalActivity(SocialActivity socialActivity)\n\t\tthrows Exception {\n\n\t\tActivity activity = new ActivityImpl(\n\t\t\tString.valueOf(socialActivity.getClassPK()),\n\t\t\tString.valueOf(socialActivity.getUserId()));\n\n\t\tJSONObject extraDataJSON = JSONFactoryUtil.createJSONObject(\n\t\t\tsocialActivity.getExtraData());\n\n\t\tif (extraDataJSON.has(Activity.Field.APP_ID.toString())) {\n\t\t\tactivity.setAppId(extraDataJSON.getString(\"appId\"));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.BODY.toString())) {\n\t\t\tactivity.setBody(extraDataJSON.getString(\"body\"));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.BODY_ID.toString())) {\n\t\t\tactivity.setBodyId(extraDataJSON.getString(\"bodyId\"));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.EXTERNAL_ID.toString())) {\n\t\t\tactivity.setExternalId(extraDataJSON.getString(\"externalId\"));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.MEDIA_ITEMS.toString())) {\n\t\t\tactivity.setMediaItems(\n\t\t\t\tgetMediaItems(extraDataJSON.getJSONArray(\"mediaItems\")));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.POSTED_TIME.toString())) {\n\t\t\tactivity.setPostedTime(extraDataJSON.getLong(\"postedTime\"));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.PRIORITY.toString())) {\n\t\t\tactivity.setPriority(\n\t\t\t\tFloat.parseFloat(extraDataJSON.getString(\"priority\")));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.STREAM_FAVICON_URL.toString())) {\n\t\t\tactivity.setStreamFaviconUrl(\n\t\t\t\textraDataJSON.getString(\"streamFaviconUrl\"));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.STREAM_SOURCE_URL.toString())) {\n\t\t\tactivity.setStreamSourceUrl(\n\t\t\t\textraDataJSON.getString(\"streamSourceUrl\"));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.STREAM_TITLE.toString())) {\n\t\t\tactivity.setStreamTitle(extraDataJSON.getString(\"streamTitle\"));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.STREAM_URL.toString())) {\n\t\t\tactivity.setStreamUrl(extraDataJSON.getString(\"streamUrl\"));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.TEMPLATE_PARAMS.toString())) {\n\t\t\tactivity.setTemplateParams(getTemplateParams(\n\t\t\t\textraDataJSON.getJSONArray(\"templateParams\")));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.TITLE.toString())) {\n\t\t\tactivity.setTitle(extraDataJSON.getString(\"title\"));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.TITLE_ID.toString())) {\n\t\t\tactivity.setTitleId(extraDataJSON.getString(\"titleId\"));\n\t\t}\n\n\t\tif (extraDataJSON.has(Activity.Field.URL.toString())) {\n\t\t\tactivity.setUrl(extraDataJSON.getString(\"url\"));\n\t\t}\n\n\t\treturn activity;\n\t}","id":4152,"modified_method":"protected Activity getExternalActivity(SocialActivity socialActivity)\n\t\tthrows Exception {\n\n\t\tActivity activity = new ActivityImpl(\n\t\t\tString.valueOf(socialActivity.getClassPK()),\n\t\t\tString.valueOf(socialActivity.getUserId()));\n\n\t\tJSONObject extraDataJSONObject = JSONFactoryUtil.createJSONObject(\n\t\t\tsocialActivity.getExtraData());\n\n\t\tif (extraDataJSONObject.has(Activity.Field.APP_ID.toString())) {\n\t\t\tactivity.setAppId(extraDataJSONObject.getString(\"appId\"));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(Activity.Field.BODY.toString())) {\n\t\t\tactivity.setBody(extraDataJSONObject.getString(\"body\"));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(Activity.Field.BODY_ID.toString())) {\n\t\t\tactivity.setBodyId(extraDataJSONObject.getString(\"bodyId\"));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(Activity.Field.EXTERNAL_ID.toString())) {\n\t\t\tactivity.setExternalId(extraDataJSONObject.getString(\"externalId\"));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(Activity.Field.MEDIA_ITEMS.toString())) {\n\t\t\tactivity.setMediaItems(\n\t\t\t\tgetMediaItems(extraDataJSONObject.getJSONArray(\"mediaItems\")));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(Activity.Field.POSTED_TIME.toString())) {\n\t\t\tactivity.setPostedTime(extraDataJSONObject.getLong(\"postedTime\"));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(Activity.Field.PRIORITY.toString())) {\n\t\t\tactivity.setPriority(\n\t\t\t\tFloat.parseFloat(extraDataJSONObject.getString(\"priority\")));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(\n\t\t\tActivity.Field.STREAM_FAVICON_URL.toString())) {\n\n\t\t\tactivity.setStreamFaviconUrl(\n\t\t\t\textraDataJSONObject.getString(\"streamFaviconUrl\"));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(\n\t\t\tActivity.Field.STREAM_SOURCE_URL.toString())) {\n\n\t\t\tactivity.setStreamSourceUrl(\n\t\t\t\textraDataJSONObject.getString(\"streamSourceUrl\"));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(Activity.Field.STREAM_TITLE.toString())) {\n\t\t\tactivity.setStreamTitle(\n\t\t\t\textraDataJSONObject.getString(\"streamTitle\"));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(Activity.Field.STREAM_URL.toString())) {\n\t\t\tactivity.setStreamUrl(extraDataJSONObject.getString(\"streamUrl\"));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(\n\t\t\tActivity.Field.TEMPLATE_PARAMS.toString())) {\n\n\t\t\tactivity.setTemplateParams(getTemplateParams(\n\t\t\t\textraDataJSONObject.getJSONArray(\"templateParams\")));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(Activity.Field.TITLE.toString())) {\n\t\t\tactivity.setTitle(extraDataJSONObject.getString(\"title\"));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(Activity.Field.TITLE_ID.toString())) {\n\t\t\tactivity.setTitleId(extraDataJSONObject.getString(\"titleId\"));\n\t\t}\n\n\t\tif (extraDataJSONObject.has(Activity.Field.URL.toString())) {\n\t\t\tactivity.setUrl(extraDataJSONObject.getString(\"url\"));\n\t\t}\n\n\t\treturn activity;\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected JSONArray getTemplateParams(Map<String, String> map) {\n\t\tif (map == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tJSONArray templateParamsJSONArray = JSONFactoryUtil.createJSONArray();\n\n\t\tfor (Entry<String, String> entry : map.entrySet()) {\n\t\t\tJSONObject entryJSONObject = JSONFactoryUtil.createJSONObject();\n\n\t\t\tentryJSONObject.put(entry.getKey(), entry.getValue());\n\n\t\t\ttemplateParamsJSONArray.put(entryJSONObject);\n\t\t}\n\n\t\treturn templateParamsJSONArray;\n\t}","id":4153,"modified_method":"protected JSONArray getTemplateParams(Map<String, String> map) {\n\t\tif (map == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tJSONArray templateParamsJSONArray = JSONFactoryUtil.createJSONArray();\n\n\t\tfor (Entry<String, String> entry : map.entrySet()) {\n\t\t\tJSONObject templateParamJSONObject =\n\t\t\t\tJSONFactoryUtil.createJSONObject();\n\n\t\t\tString name = entry.getKey();\n\t\t\tString value = entry.getValue();\n\n\t\t\ttemplateParamJSONObject.put(name, value);\n\n\t\t\ttemplateParamsJSONArray.put(templateParamJSONObject);\n\t\t}\n\n\t\treturn templateParamsJSONArray;\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected RestfulCollection<Album> doGetAlbums(\n\t\t\tSet<UserId> userIds, GroupId groupId, String appId,\n\t\t\tSet<String> fields, CollectionOptions collectionOptions,\n\t\t\tSecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tList<Album> albums = new ArrayList<Album>();\n\n\t\tfor (UserId userId : userIds) {\n\t\t\tString userIdString = userId.getUserId(securityToken);\n\n\t\t\tlong userIdLong = GetterUtil.getLong(userIdString);\n\n\t\t\tUser owner = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\t\tList<DLFolder> dlFolders = new ArrayList<DLFolder>();\n\n\t\t\tGroupId.Type groupIdType = groupId.getType();\n\n\t\t\tif (groupIdType.equals(GroupId.Type.all) ||\n\t\t\t\tgroupIdType.equals(GroupId.Type.friends) ||\n\t\t\t\tgroupIdType.equals(GroupId.Type.groupId)) {\n\n\t\t\t\tList<User> friends = UserLocalServiceUtil.getSocialUsers(\n\t\t\t\t\towner.getUserId(), SocialRelationConstants.TYPE_BI_FRIEND,\n\t\t\t\t\tQueryUtil.ALL_POS, QueryUtil.ALL_POS, null);\n\n\t\t\t\tfor (User friend : friends) {\n\t\t\t\t\tList<DLFolder> friendDLFolders =\n\t\t\t\t\t\tDLAppLocalServiceUtil.getFolders(\n\t\t\t\t\t\t\tfriend.getGroup().getGroupId(),\n\t\t\t\t\t\t\tDLFolderConstants.DEFAULT_PARENT_FOLDER_ID);\n\n\t\t\t\t\tdlFolders.addAll(friendDLFolders);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (groupIdType.equals(GroupId.Type.self)) {\n\t\t\t\tdlFolders = DLAppLocalServiceUtil.getFolders(\n\t\t\t\t\towner.getGroup().getGroupId(),\n\t\t\t\t\tDLFolderConstants.DEFAULT_PARENT_FOLDER_ID);\n\t\t\t}\n\n\t\t\tfor (DLFolder dlFolder : dlFolders) {\n\t\t\t\tAlbum album = new AlbumImpl();\n\n\t\t\t\talbum.setDescription(dlFolder.getDescription());\n\t\t\t\talbum.setId(Long.toString(dlFolder.getFolderId()));\n\t\t\t\talbum.setOwnerId(Long.toString(dlFolder.getUserId()));\n\t\t\t\talbum.setTitle(dlFolder.getName());\n\n\t\t\t\talbums.add(album);\n\t\t\t}\n\t\t}\n\n\t\treturn new RestfulCollection<Album>(\n\t\t\talbums, collectionOptions.getFirst(), albums.size(),\n\t\t\tcollectionOptions.getMax());\n\t}","id":4154,"modified_method":"protected RestfulCollection<Album> doGetAlbums(\n\t\t\tSet<UserId> userIds, GroupId groupId, String appId,\n\t\t\tSet<String> fields, CollectionOptions collectionOptions,\n\t\t\tSecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tList<Album> albums = new ArrayList<Album>();\n\n\t\tfor (UserId userId : userIds) {\n\t\t\tString userIdString = userId.getUserId(securityToken);\n\n\t\t\tlong userIdLong = GetterUtil.getLong(userIdString);\n\n\t\t\tUser user = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\t\tList<DLFolder> dlFolders = new ArrayList<DLFolder>();\n\n\t\t\tGroupId.Type groupIdType = groupId.getType();\n\n\t\t\tif (groupIdType.equals(GroupId.Type.all) ||\n\t\t\t\tgroupIdType.equals(GroupId.Type.friends) ||\n\t\t\t\tgroupIdType.equals(GroupId.Type.groupId)) {\n\n\t\t\t\tList<User> socialUsers = UserLocalServiceUtil.getSocialUsers(\n\t\t\t\t\tuser.getUserId(), SocialRelationConstants.TYPE_BI_FRIEND,\n\t\t\t\t\tQueryUtil.ALL_POS, QueryUtil.ALL_POS, null);\n\n\t\t\t\tfor (User socialUser : socialUsers) {\n\t\t\t\t\tGroup group = socialUser.getGroup();\n\n\t\t\t\t\tList<DLFolder> friendDLFolders =\n\t\t\t\t\t\tDLAppLocalServiceUtil.getFolders(\n\t\t\t\t\t\t\tgroup.getGroupId(),\n\t\t\t\t\t\t\tDLFolderConstants.DEFAULT_PARENT_FOLDER_ID);\n\n\t\t\t\t\tdlFolders.addAll(friendDLFolders);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (groupIdType.equals(GroupId.Type.self)) {\n\t\t\t\tGroup group = user.getGroup();\n\n\t\t\t\tdlFolders = DLAppLocalServiceUtil.getFolders(\n\t\t\t\t\tgroup.getGroupId(),\n\t\t\t\t\tDLFolderConstants.DEFAULT_PARENT_FOLDER_ID);\n\t\t\t}\n\n\t\t\tfor (DLFolder dlFolder : dlFolders) {\n\t\t\t\tAlbum album = new AlbumImpl();\n\n\t\t\t\talbum.setDescription(dlFolder.getDescription());\n\t\t\t\talbum.setId(Long.toString(dlFolder.getFolderId()));\n\t\t\t\talbum.setOwnerId(Long.toString(dlFolder.getUserId()));\n\t\t\t\talbum.setTitle(dlFolder.getName());\n\n\t\t\t\talbums.add(album);\n\t\t\t}\n\t\t}\n\n\t\treturn new RestfulCollection<Album>(\n\t\t\talbums, collectionOptions.getFirst(), albums.size(),\n\t\t\tcollectionOptions.getMax());\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void doCreateAlbum(\n\t\t\tUserId userId, String appId, Album album,\n\t\t\tSecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tlong userIdLong = GetterUtil.getLong(userId.getUserId(securityToken));\n\n\t\tUser owner = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\tlong groupIdLong = owner.getGroup().getGroupId();\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\t\tserviceContext.setScopeGroupId(groupIdLong);\n\n\t\tDLAppLocalServiceUtil.addFolder(\n\t\t\tuserIdLong, groupIdLong, DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,\n\t\t\talbum.getTitle(), album.getDescription(), serviceContext);\n\t}","id":4155,"modified_method":"protected void doCreateAlbum(\n\t\t\tUserId userId, String appId, Album album,\n\t\t\tSecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tdoUpdateAlbum(userId, appId, album, null, securityToken);\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void doUpdateAlbum(\n\t\t\tUserId userId, String appId, Album album, String albumId,\n\t\t\tSecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tlong userIdLong = GetterUtil.getLong(userId.getUserId(securityToken));\n\n\t\tUser owner = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\tlong groupIdLong = owner.getGroup().getGroupId();\n\n\t\tDLFolder dlFolder = DLAppLocalServiceUtil.getFolder(\n\t\t\tGetterUtil.getLong(albumId));\n\n\t\tdlFolder.setDescription(album.getDescription());\n\t\tdlFolder.setName(album.getTitle());\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\t\tserviceContext.setScopeGroupId(groupIdLong);\n\n\t\tDLAppLocalServiceUtil.updateFolder(\n\t\t\tdlFolder.getFolderId(), dlFolder.getParentFolderId(),\n\t\t\tdlFolder.getName(), dlFolder.getDescription(), serviceContext);\n\t}","id":4156,"modified_method":"protected void doUpdateAlbum(\n\t\t\tUserId userId, String appId, Album album, String albumId,\n\t\t\tSecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tlong userIdLong = GetterUtil.getLong(userId.getUserId(securityToken));\n\n\t\tUser user = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\tGroup group = user.getGroup();\n\n\t\tlong groupIdLong = group.getGroupId();\n\n\t\tDLFolder dlFolder = DLAppLocalServiceUtil.getFolder(\n\t\t\tGetterUtil.getLong(albumId));\n\n\t\tdlFolder.setDescription(album.getDescription());\n\t\tdlFolder.setName(album.getTitle());\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\t\tserviceContext.setScopeGroupId(groupIdLong);\n\n\t\tif (albumId == null) {\n\t\t\tDLAppLocalServiceUtil.addFolder(\n\t\t\t\tuserIdLong, groupIdLong,\n\t\t\t\tDLFolderConstants.DEFAULT_PARENT_FOLDER_ID,\n\t\t\t\talbum.getTitle(), album.getDescription(), serviceContext);\n\t\t}\n\t\telse {\n\t\t\tDLAppLocalServiceUtil.updateFolder(\n\t\t\t\tdlFolder.getFolderId(), dlFolder.getParentFolderId(),\n\t\t\t\tdlFolder.getName(), dlFolder.getDescription(), serviceContext);\n\t\t}\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected RestfulCollection<MediaItem> doGetMediaItems(\n\t\t\tSet<UserId> userIds, GroupId groupId, String appId,\n\t\t\tSet<String> fields, CollectionOptions collectionOptions,\n\t\t\tSecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tList<MediaItem> mediaItems = new ArrayList<MediaItem>();\n\n\t\tfor (UserId userId : userIds) {\n\t\t\tlong userIdLong = GetterUtil.getLong(\n\t\t\t\tuserId.getUserId(securityToken));\n\n\t\t\tUser owner = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\t\tList<DLFileEntry> dlFileEntries = new ArrayList<DLFileEntry>();\n\n\t\t\tGroupId.Type groupIdType = groupId.getType();\n\n\t\t\tif (groupIdType.equals(GroupId.Type.all) ||\n\t\t\t\tgroupIdType.equals(GroupId.Type.friends) ||\n\t\t\t\tgroupIdType.equals(GroupId.Type.groupId)) {\n\n\t\t\t\tList<User> friends = UserLocalServiceUtil.getSocialUsers(\n\t\t\t\t\towner.getUserId(), SocialRelationConstants.TYPE_BI_FRIEND,\n\t\t\t\t\tQueryUtil.ALL_POS, QueryUtil.ALL_POS, null);\n\n\t\t\t\tfor (User friend : friends) {\n\t\t\t\t\tList<DLFileEntry> friendDLFileEntries =\n\t\t\t\t\t\tDLAppLocalServiceUtil.getGroupFileEntries(\n\t\t\t\t\t\t\tfriend.getGroup().getGroupId(),\n\t\t\t\t\t\t\tcollectionOptions.getFirst(),\n\t\t\t\t\t\t\tcollectionOptions.getMax());\n\n\t\t\t\t\tdlFileEntries.addAll(friendDLFileEntries);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (groupIdType.equals(GroupId.Type.self)) {\n\t\t\t\tdlFileEntries = DLAppLocalServiceUtil.getGroupFileEntries(\n\t\t\t\t\towner.getGroup().getGroupId(), collectionOptions.getFirst(),\n\t\t\t\t\tcollectionOptions.getMax());\n\t\t\t}\n\n\t\t\tfor (DLFileEntry dlFileEntry : dlFileEntries) {\n\t\t\t\tMediaItem.Type mediaItemType = getMediaItemType(dlFileEntry);\n\n\t\t\t\tif (mediaItemType != null) {\n\t\t\t\t\tmediaItems.add(\n\t\t\t\t\t\tgetMediaItem(dlFileEntry, fields, securityToken));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new RestfulCollection<MediaItem>(\n\t\t\tmediaItems, collectionOptions.getFirst(), mediaItems.size(),\n\t\t\tcollectionOptions.getMax());\n\t}","id":4157,"modified_method":"protected RestfulCollection<MediaItem> doGetMediaItems(\n\t\t\tSet<UserId> userIds, GroupId groupId, String appId,\n\t\t\tSet<String> fields, CollectionOptions collectionOptions,\n\t\t\tSecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tList<MediaItem> mediaItems = new ArrayList<MediaItem>();\n\n\t\tfor (UserId userId : userIds) {\n\t\t\tlong userIdLong = GetterUtil.getLong(\n\t\t\t\tuserId.getUserId(securityToken));\n\n\t\t\tUser user = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\t\tList<DLFileEntry> dlFileEntries = new ArrayList<DLFileEntry>();\n\n\t\t\tGroupId.Type groupIdType = groupId.getType();\n\n\t\t\tif (groupIdType.equals(GroupId.Type.all) ||\n\t\t\t\tgroupIdType.equals(GroupId.Type.friends) ||\n\t\t\t\tgroupIdType.equals(GroupId.Type.groupId)) {\n\n\t\t\t\tList<User> socialUsers = UserLocalServiceUtil.getSocialUsers(\n\t\t\t\t\tuser.getUserId(), SocialRelationConstants.TYPE_BI_FRIEND,\n\t\t\t\t\tQueryUtil.ALL_POS, QueryUtil.ALL_POS, null);\n\n\t\t\t\tfor (User socialUser : socialUsers) {\n\t\t\t\t\tGroup group = socialUser.getGroup();\n\n\t\t\t\t\tList<DLFileEntry> friendDLFileEntries =\n\t\t\t\t\t\tDLAppLocalServiceUtil.getGroupFileEntries(\n\t\t\t\t\t\t\tgroup.getGroupId(), collectionOptions.getFirst(),\n\t\t\t\t\t\t\tcollectionOptions.getMax());\n\n\t\t\t\t\tdlFileEntries.addAll(friendDLFileEntries);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (groupIdType.equals(GroupId.Type.self)) {\n\t\t\t\tGroup group = user.getGroup();\n\n\t\t\t\tdlFileEntries = DLAppLocalServiceUtil.getGroupFileEntries(\n\t\t\t\t\tgroup.getGroupId(), collectionOptions.getFirst(),\n\t\t\t\t\tcollectionOptions.getMax());\n\t\t\t}\n\n\t\t\tfor (DLFileEntry dlFileEntry : dlFileEntries) {\n\t\t\t\tMediaItem.Type mediaItemType = getMediaItemType(dlFileEntry);\n\n\t\t\t\tif (mediaItemType == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tMediaItem mediaItem = getMediaItem(\n\t\t\t\t\tdlFileEntry, fields, securityToken);\n\n\t\t\t\tmediaItems.add(mediaItem);\n\t\t\t}\n\t\t}\n\n\t\treturn new RestfulCollection<MediaItem>(\n\t\t\tmediaItems, collectionOptions.getFirst(), mediaItems.size(),\n\t\t\tcollectionOptions.getMax());\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected String getDLFileEntryURL(\n\t\t\tDLFileEntry dlFileEntry, SecurityToken securityToken) {\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(securityToken.getDomain());\n\t\tsb.append(PortalUtil.getPathContext());\n\t\tsb.append(\"/documents/\");\n\t\tsb.append(dlFileEntry.getGroupId());\n\t\tsb.append(StringPool.SLASH);\n\t\tsb.append(dlFileEntry.getUuid());\n\n\t\treturn sb.toString();\n\t}","id":4158,"modified_method":"protected String getDLFileEntryURL(\n\t\tDLFileEntry dlFileEntry, SecurityToken securityToken) {\n\n\t\tStringBuilder sb = new StringBuilder(6);\n\n\t\tsb.append(securityToken.getDomain());\n\t\tsb.append(PortalUtil.getPathContext());\n\t\tsb.append(\"/documents/\");\n\t\tsb.append(dlFileEntry.getGroupId());\n\t\tsb.append(StringPool.SLASH);\n\t\tsb.append(dlFileEntry.getUuid());\n\n\t\treturn sb.toString();\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void doUpdateMediaItem(\n\t\t\tUserId userId, String appId, String albumId, String mediaItemId,\n\t\t\tMediaItem mediaItem, SecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tlong albumIdLong = GetterUtil.getLong(albumId);\n\n\t\tlong userIdLong = GetterUtil.getLong(userId.getUserId(securityToken));\n\n\t\tUser owner = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\tlong groupIdLong = owner.getGroup().getGroupId();\n\n\t\tString fileName;\n\n\t\tHttp.Options options = new Http.Options();\n\n\t\toptions.setLocation(mediaItem.getUrl());\n\n\t\tbyte[] byteArray = HttpUtil.URLtoByteArray(options);\n\n\t\tString contentDisposition = options.getResponse().getHeader(\n\t\t\t\"Content-Disposition\");\n\n\t\tif (contentDisposition != null) {\n\t\t\tMatcher filenameMatcher = _filenamePattern.matcher(\n\t\t\t\tcontentDisposition);\n\n\t\t\tif (filenameMatcher.find()) {\n\t\t\t\tfileName = filenameMatcher.group(1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfileName = mediaItem.getTitle();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfileName = FileUtil.getShortFileName(mediaItem.getUrl());\n\t\t}\n\n\t\tJSONObject extraDataJSON = JSONFactoryUtil.createJSONObject();\n\n\t\textraDataJSON.put(\"DURATION\", mediaItem.getDuration());\n\t\textraDataJSON.put(\"fileSize\", mediaItem.getFileSize());\n\t\textraDataJSON.put(\"language\", mediaItem.getLanguage());\n\t\textraDataJSON.put(\"location\", getLocation(mediaItem.getLocation()));\n\t\textraDataJSON.put(\"numCommments\", mediaItem.getNumComments());\n\t\textraDataJSON.put(\"numVotes\", mediaItem.getNumVotes());\n\t\textraDataJSON.put(\"rating\", mediaItem.getRating());\n\t\textraDataJSON.put(\"startTime\", mediaItem.getStartTime());\n\t\textraDataJSON.put(\"taggedPeople\", mediaItem.getTaggedPeople());\n\t\textraDataJSON.put(\"tags\", mediaItem.getTags());\n\t\textraDataJSON.put(\"thumbnailUrl\", mediaItem.getThumbnailUrl());\n\n\t\tif (mediaItemId == null) {\n\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setAddCommunityPermissions(true);\n\t\t\tserviceContext.setAddGuestPermissions(true);\n\t\t\tserviceContext.setScopeGroupId(groupIdLong);\n\n\t\t\tDLAppLocalServiceUtil.addFileEntry(\n\t\t\t\tuserIdLong, groupIdLong, albumIdLong, fileName,\n\t\t\t\tmediaItem.getDescription(), StringPool.BLANK,\n\t\t\t\textraDataJSON.toString(), byteArray, serviceContext);\n\t\t}\n\t\telse {\n\t\t\tlong mediaItemIdLong = GetterUtil.getLong(mediaItemId);\n\n\t\t\tDLFileEntry dlFileEntry = DLAppLocalServiceUtil.getFileEntry(\n\t\t\t\tmediaItemIdLong);\n\n\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setAddCommunityPermissions(true);\n\t\t\tserviceContext.setAddGuestPermissions(true);\n\t\t\tserviceContext.setCreateDate(dlFileEntry.getCreateDate());\n\t\t\tserviceContext.setModifiedDate(dlFileEntry.getModifiedDate());\n\t\t\tserviceContext.setScopeGroupId(groupIdLong);\n\n\t\t\tDLAppLocalServiceUtil.updateFileEntry(\n\t\t\t\tuserIdLong, dlFileEntry.getFileEntryId(), fileName,\n\t\t\t\tmediaItem.getTitle(), mediaItem.getDescription(), \"\", false,\n\t\t\t\textraDataJSON.toString(), byteArray, serviceContext);\n\t\t}\n\t}","id":4159,"modified_method":"protected void doUpdateMediaItem(\n\t\t\tUserId userId, String appId, String albumId, String mediaItemId,\n\t\t\tMediaItem mediaItem, SecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tlong userIdLong = GetterUtil.getLong(userId.getUserId(securityToken));\n\n\t\tUser user = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\tGroup group = user.getGroup();\n\n\t\tlong groupIdLong = group.getGroupId();\n\n\t\tHttp.Options options = new Http.Options();\n\n\t\toptions.setLocation(mediaItem.getUrl());\n\n\t\tbyte[] byteArray = HttpUtil.URLtoByteArray(options);\n\n\t\tString fileName = getFileName(mediaItem, options);\n\n\t\tJSONObject extraSettingsJSONObject = JSONFactoryUtil.createJSONObject();\n\n\t\textraSettingsJSONObject.put(\"DURATION\", mediaItem.getDuration());\n\n\t\tSerializerUtil.copyProperties(\n\t\t\tmediaItem, extraSettingsJSONObject, _MEDIA_ITEM_FIELDS);\n\n\t\tif (mediaItemId == null) {\n\t\t\tlong albumIdLong = GetterUtil.getLong(albumId);\n\n\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setAddCommunityPermissions(true);\n\t\t\tserviceContext.setAddGuestPermissions(true);\n\t\t\tserviceContext.setScopeGroupId(groupIdLong);\n\n\t\t\tDLAppLocalServiceUtil.addFileEntry(\n\t\t\t\tuserIdLong, groupIdLong, albumIdLong, fileName,\n\t\t\t\tmediaItem.getDescription(), StringPool.BLANK,\n\t\t\t\textraSettingsJSONObject.toString(), byteArray, serviceContext);\n\t\t}\n\t\telse {\n\t\t\tlong mediaItemIdLong = GetterUtil.getLong(mediaItemId);\n\n\t\t\tDLFileEntry dlFileEntry = DLAppLocalServiceUtil.getFileEntry(\n\t\t\t\tmediaItemIdLong);\n\n\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\tserviceContext.setAddCommunityPermissions(true);\n\t\t\tserviceContext.setAddGuestPermissions(true);\n\t\t\tserviceContext.setCreateDate(dlFileEntry.getCreateDate());\n\t\t\tserviceContext.setModifiedDate(dlFileEntry.getModifiedDate());\n\t\t\tserviceContext.setScopeGroupId(groupIdLong);\n\n\t\t\tDLAppLocalServiceUtil.updateFileEntry(\n\t\t\t\tuserIdLong, dlFileEntry.getFileEntryId(), fileName,\n\t\t\t\tmediaItem.getTitle(), mediaItem.getDescription(),\n\t\t\t\tStringPool.BLANK, false, extraSettingsJSONObject.toString(),\n\t\t\t\tbyteArray, serviceContext);\n\t\t}\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected Address getAddress (JSONObject addressJSON) {\n\t\tAddress address = new AddressImpl();\n\n\t\tif (addressJSON.has(Address.Field.COUNTRY.toString())) {\n\t\t\taddress.setCountry(addressJSON.getString(\"country\"));\n\t\t}\n\n\t\tif (addressJSON.has(Address.Field.FORMATTED.toString())) {\n\t\t\taddress.setFormatted(addressJSON.getString(\"formatted\"));\n\t\t}\n\n\t\tif (addressJSON.has(Address.Field.LATITUDE.toString())) {\n\t\t\taddress.setLatitude((float) addressJSON.getDouble(\"latitude\"));\n\t\t}\n\n\t\tif (addressJSON.has(Address.Field.LOCALITY.toString())) {\n\t\t\taddress.setLocality(addressJSON.getString(\"locality\"));\n\t\t}\n\n\t\tif (addressJSON.has(Address.Field.LONGITUDE.toString())) {\n\t\t\taddress.setLongitude((float) addressJSON.getDouble(\"longitude\"));\n\t\t}\n\n\t\tif (addressJSON.has(Address.Field.POSTAL_CODE.toString())) {\n\t\t\taddress.setPostalCode(addressJSON.getString(\"postalCode\"));\n\t\t}\n\n\t\tif (addressJSON.has(Address.Field.PRIMARY.toString())) {\n\t\t\taddress.setPrimary(addressJSON.getBoolean(\"primary\"));\n\t\t}\n\n\t\tif (addressJSON.has(Address.Field.REGION.toString())) {\n\t\t\taddress.setRegion(addressJSON.getString(\"region\"));\n\t\t}\n\n\t\tif (addressJSON.has(Address.Field.STREET_ADDRESS.toString())) {\n\t\t\taddress.setStreetAddress(addressJSON.getString(\"streetAddress\"));\n\t\t}\n\n\t\tif (addressJSON.has(Address.Field.TYPE.toString())) {\n\t\t\taddress.setType(addressJSON.getString(\"type\"));\n\t\t}\n\n\t\treturn address;\n\t}","id":4160,"modified_method":"protected Address getAddress(JSONObject jsonObject) {\n\t\tAddress address = new AddressImpl();\n\n\t\tSerializerUtil.copyProperties(jsonObject, address, _ADDRESS_FIELDS);\n\n\t\treturn address;\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected JSONObject getLocation(Address address) {\n\t\tif (address == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tJSONObject addressJSON = JSONFactoryUtil.createJSONObject();\n\n\t\taddressJSON.put(\"country\", address.getCountry());\n\t\taddressJSON.put(\"formatted\", address.getFormatted());\n\t\taddressJSON.put(\"latitude\", address.getLatitude());\n\t\taddressJSON.put(\"locality\", address.getLocality());\n\t\taddressJSON.put(\"longitude\", address.getLongitude());\n\t\taddressJSON.put(\"postalCode\", address.getPostalCode());\n\t\taddressJSON.put(\"primary\", address.getPrimary());\n\t\taddressJSON.put(\"region\", address.getRegion());\n\t\taddressJSON.put(\"streetAddress\", address.getStreetAddress());\n\t\taddressJSON.put(\"type\", address.getType());\n\n\t\treturn addressJSON;\n\t}","id":4161,"modified_method":"protected JSONObject getLocation(Address address) {\n\t\tif (address == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\tSerializerUtil.copyProperties(address, jsonObject, _ADDRESS_FIELDS);\n\n\t\treturn jsonObject;\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected RestfulCollection<MediaItem> doGetMediaItems(\n\t\t\tUserId userId, String appId, String albumId, Set<String> fields,\n\t\t\tCollectionOptions collectionOptions, SecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tlong albumIdLong = GetterUtil.getLong(albumId);\n\n\t\tlong userIdLong = GetterUtil.getLong(userId.getUserId(securityToken));\n\n\t\tUser owner = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\tlong groupIdLong = owner.getGroup().getGroupId();\n\n\t\tList<DLFileEntry> dLFileEntries =\n\t\t\tDLAppLocalServiceUtil.getFileEntries(groupIdLong, albumIdLong);\n\n\t\tList<MediaItem> mediaItems = new ArrayList<MediaItem>();\n\n\t\tfor (DLFileEntry dlFileEntry : dLFileEntries) {\n\t\t\tMediaItem.Type mediaItemType = getMediaItemType(dlFileEntry);\n\n\t\t\tif (mediaItemType != null) {\n\t\t\t\tmediaItems.add(\n\t\t\t\t\tgetMediaItem(dlFileEntry, fields, securityToken));\n\t\t\t}\n\t\t}\n\n\t\treturn new RestfulCollection<MediaItem>(\n\t\t\tmediaItems, collectionOptions.getFirst(), mediaItems.size(),\n\t\t\tcollectionOptions.getMax());\n\t}","id":4162,"modified_method":"protected RestfulCollection<MediaItem> doGetMediaItems(\n\t\t\tUserId userId, String appId, String albumId, Set<String> fields,\n\t\t\tCollectionOptions collectionOptions, SecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tlong userIdLong = GetterUtil.getLong(userId.getUserId(securityToken));\n\n\t\tUser user = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\tGroup group = user.getGroup();\n\n\t\tlong groupIdLong = group.getGroupId();\n\n\t\tlong albumIdLong = GetterUtil.getLong(albumId);\n\n\t\tList<DLFileEntry> dLFileEntries = DLAppLocalServiceUtil.getFileEntries(\n\t\t\tgroupIdLong, albumIdLong);\n\n\t\tList<MediaItem> mediaItems = new ArrayList<MediaItem>();\n\n\t\tfor (DLFileEntry dlFileEntry : dLFileEntries) {\n\t\t\tMediaItem.Type mediaItemType = getMediaItemType(dlFileEntry);\n\n\t\t\tif (mediaItemType == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tMediaItem mediaItem = getMediaItem(\n\t\t\t\tdlFileEntry, fields, securityToken);\n\n\t\t\tmediaItems.add(mediaItem);\n\t\t}\n\n\t\treturn new RestfulCollection<MediaItem>(\n\t\t\tmediaItems, collectionOptions.getFirst(), mediaItems.size(),\n\t\t\tcollectionOptions.getMax());\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected RestfulCollection<MediaItem> doGetMediaItems(\n\t\t\tUserId userId, String appId, String albumId,\n\t\t\tSet<String> mediaItemIds, Set<String> fields,\n\t\t\tCollectionOptions collectionOptions, SecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tlong albumIdLong = GetterUtil.getLong(albumId);\n\n\t\tlong userIdLong = GetterUtil.getLong(userId.getUserId(securityToken));\n\n\t\tUser owner = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\tlong groupIdLong = owner.getGroup().getGroupId();\n\n\t\tList<DLFileEntry> dLFileEntries =\n\t\t\tDLAppLocalServiceUtil.getFileEntries(groupIdLong, albumIdLong);\n\n\t\tList<MediaItem> mediaItems = new ArrayList<MediaItem>();\n\n\t\tfor (DLFileEntry dlFileEntry : dLFileEntries) {\n\t\t\tMediaItem.Type mediaItemType = getMediaItemType(dlFileEntry);\n\n\t\t\tif (mediaItemType != null) {\n\t\t\t\tMediaItem mediaItem = new MediaItemImpl();\n\n\t\t\t\tmediaItem = getMediaItem(dlFileEntry, fields, securityToken);\n\n\t\t\t\tif (mediaItemIds.contains(mediaItem.getId())) {\n\t\t\t\t\tmediaItems.add(mediaItem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new RestfulCollection<MediaItem>(mediaItems,\n\t\t\tcollectionOptions.getFirst(), mediaItems.size(),\n\t\t\tcollectionOptions.getMax());\n\t}","id":4163,"modified_method":"protected RestfulCollection<MediaItem> doGetMediaItems(\n\t\t\tUserId userId, String appId, String albumId,\n\t\t\tSet<String> mediaItemIds, Set<String> fields,\n\t\t\tCollectionOptions collectionOptions, SecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tlong userIdLong = GetterUtil.getLong(userId.getUserId(securityToken));\n\n\t\tUser user = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\tGroup group = user.getGroup();\n\n\t\tlong groupIdLong = group.getGroupId();\n\n\t\tlong albumIdLong = GetterUtil.getLong(albumId);\n\n\t\tList<DLFileEntry> dLFileEntries = DLAppLocalServiceUtil.getFileEntries(\n\t\t\tgroupIdLong, albumIdLong);\n\n\t\tList<MediaItem> mediaItems = new ArrayList<MediaItem>();\n\n\t\tfor (DLFileEntry dlFileEntry : dLFileEntries) {\n\t\t\tMediaItem.Type mediaItemType = getMediaItemType(dlFileEntry);\n\n\t\t\tif (mediaItemType == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tMediaItem mediaItem = getMediaItem(\n\t\t\t\tdlFileEntry, fields, securityToken);\n\n\t\t\tif (mediaItemIds.contains(mediaItem.getId())) {\n\t\t\t\tmediaItems.add(mediaItem);\n\t\t\t}\n\t\t}\n\n\t\treturn new RestfulCollection<MediaItem>(\n\t\t\tmediaItems, collectionOptions.getFirst(), mediaItems.size(),\n\t\t\tcollectionOptions.getMax());\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected MediaItem getMediaItem(\n\t\t\tDLFileEntry dlFileEntry, Set<String> fields,\n\t\t\tSecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tMediaItem mediaItem = new MediaItemImpl();\n\n\t\tmediaItem.setAlbumId(Long.toString(dlFileEntry.getFolderId()));\n\t\tmediaItem.setCreated(dlFileEntry.getCreateDate().toString());\n\t\tmediaItem.setDescription(dlFileEntry.getDescription());\n\t\tmediaItem.setId(Long.toString(dlFileEntry.getFileEntryId()));\n\t\tmediaItem.setLastUpdated(\n\t\t\tdlFileEntry.getModifiedDate().toString());\n\t\tmediaItem.setMimeType(MimeTypesUtil.getContentType(\n\t\t\tdlFileEntry.getExtension()));\n\t\tmediaItem.setNumViews(Long.toString(\n\t\t\tdlFileEntry.getReadCount()));\n\t\tmediaItem.setTitle(dlFileEntry.getTitle());\n\t\tmediaItem.setType(getMediaItemType(dlFileEntry));\n\t\tmediaItem.setUrl(getDLFileEntryURL(dlFileEntry, securityToken));\n\n\t\tJSONObject extraDataJSON = null;\n\n\t\ttry {\n\t\t\textraDataJSON = JSONFactoryUtil.createJSONObject(\n\t\t\t\tdlFileEntry.getExtraSettings());\n\t\t}\n\t\tcatch (JSONException e) {}\n\n\t\tif (extraDataJSON != null) {\n\t\t\tif (extraDataJSON.has(MediaItem.Field.DURATION.toString())) {\n\t\t\t\tmediaItem.setDuration(extraDataJSON.getString(\"DURATION\"));\n\t\t\t}\n\n\t\t\tif (extraDataJSON.has(MediaItem.Field.FILE_SIZE.toString())) {\n\t\t\t\tmediaItem.setFileSize(extraDataJSON.getString(\"fileSize\"));\n\t\t\t}\n\n\t\t\tif (extraDataJSON.has(MediaItem.Field.LANGUAGE.toString())) {\n\t\t\t\tmediaItem.setLanguage(extraDataJSON.getString(\"language\"));\n\t\t\t}\n\n\t\t\tif (extraDataJSON.has(MediaItem.Field.LOCATION.toString())) {\n\t\t\t\tmediaItem.setLocation(\n\t\t\t\t\tgetAddress(extraDataJSON.getJSONObject(\"location\")));\n\t\t\t}\n\n\t\t\tif (extraDataJSON.has(MediaItem.Field.NUM_COMMENTS.toString())) {\n\t\t\t\tmediaItem.setNumComments(\n\t\t\t\t\textraDataJSON.getString(\"numComments\"));\n\t\t\t}\n\n\t\t\tif (extraDataJSON.has(MediaItem.Field.NUM_VOTES.toString())) {\n\t\t\t\tmediaItem.setNumVotes(extraDataJSON.getString(\"numVotes\"));\n\t\t\t}\n\n\t\t\tif (extraDataJSON.has(MediaItem.Field.RATING.toString())) {\n\t\t\t\tmediaItem.setRating(extraDataJSON.getString(\"rating\"));\n\t\t\t}\n\n\t\t\tif (extraDataJSON.has(MediaItem.Field.START_TIME.toString())) {\n\t\t\t\tmediaItem.setStartTime(extraDataJSON.getString(\"startTime\"));\n\t\t\t}\n\n\t\t\tif (extraDataJSON.has(MediaItem.Field.TAGGED_PEOPLE.toString())) {\n\t\t\t\tmediaItem.setTaggedPeople(\n\t\t\t\t\textraDataJSON.getString(\"taggedPeople\"));\n\t\t\t}\n\n\t\t\tif (extraDataJSON.has(MediaItem.Field.TAGS.toString())) {\n\t\t\t\tmediaItem.setTags(extraDataJSON.getString(\"tags\"));\n\t\t\t}\n\n\t\t\tif (extraDataJSON.has(MediaItem.Field.THUMBNAIL_URL.toString())) {\n\t\t\t\tmediaItem.setThumbnailUrl(\n\t\t\t\t\textraDataJSON.getString(\"thumbnailUrl\"));\n\t\t\t}\n\t\t}\n\n\t\treturn mediaItem;\n\t}","id":4164,"modified_method":"protected MediaItem getMediaItem(\n\t\t\tDLFileEntry dlFileEntry, Set<String> fields,\n\t\t\tSecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tMediaItem mediaItem = new MediaItemImpl();\n\n\t\tmediaItem.setAlbumId(String.valueOf(dlFileEntry.getFolderId()));\n\t\tmediaItem.setCreated(String.valueOf(dlFileEntry.getCreateDate()));\n\t\tmediaItem.setDescription(dlFileEntry.getDescription());\n\t\tmediaItem.setId(String.valueOf(dlFileEntry.getFileEntryId()));\n\t\tmediaItem.setLastUpdated(\n\t\t\tString.valueOf(dlFileEntry.getModifiedDate()));\n\t\tmediaItem.setMimeType(\n\t\t\tMimeTypesUtil.getContentType(dlFileEntry.getExtension()));\n\t\tmediaItem.setNumViews(\n\t\t\tString.valueOf(dlFileEntry.getReadCount()));\n\t\tmediaItem.setTitle(dlFileEntry.getTitle());\n\t\tmediaItem.setType(getMediaItemType(dlFileEntry));\n\t\tmediaItem.setUrl(getDLFileEntryURL(dlFileEntry, securityToken));\n\n\t\tJSONObject extraSettingsJSONObject = null;\n\n\t\ttry {\n\t\t\textraSettingsJSONObject = JSONFactoryUtil.createJSONObject(\n\t\t\t\tdlFileEntry.getExtraSettings());\n\t\t}\n\t\tcatch (JSONException jsone) {\n\t\t}\n\n\t\tif (extraSettingsJSONObject != null) {\n\t\t\tif (extraSettingsJSONObject.has(\n\t\t\t\t\tMediaItem.Field.DURATION.toString())) {\n\n\t\t\t\tmediaItem.setDuration(\n\t\t\t\t\textraSettingsJSONObject.getString(\"DURATION\"));\n\t\t\t}\n\n\t\t\tSerializerUtil.copyProperties(\n\t\t\t\textraSettingsJSONObject, mediaItem, _MEDIA_ITEM_FIELDS);\n\t\t}\n\n\t\treturn mediaItem;\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected RestfulCollection<Person> doGetPeople(\n\t\t\tSet<UserId> userIds, GroupId groupId,\n\t\t\tCollectionOptions collectionOptions, Set<String> fields,\n\t\t\tSecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tList<Person> people =  new ArrayList<Person>();\n\n\t\tfor (UserId userId : userIds) {\n\t\t\tPerson person = null;\n\n\t\t\tString userIdString = userId.getUserId(securityToken);\n\n\t\t\tGroupId.Type groupIdType = groupId.getType();\n\n\t\t\tif (groupIdType.equals(GroupId.Type.all) ||\n\t\t\t\tgroupIdType.equals(GroupId.Type.friends) ||\n\t\t\t\tgroupIdType.equals(GroupId.Type.groupId)) {\n\n\t\t\t\tlong userIdLong = GetterUtil.getLong(userIdString);\n\n\t\t\t\tUser owner = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\t\t\tList<User> friends = UserLocalServiceUtil.getSocialUsers(\n\t\t\t\t\towner.getUserId(), SocialRelationConstants.TYPE_BI_FRIEND,\n\t\t\t\t\tQueryUtil.ALL_POS, QueryUtil.ALL_POS, null);\n\n\t\t\t\tfor (User friend : friends) {\n\t\t\t\t\tperson = getUserPerson(friend, fields, securityToken);\n\n\t\t\t\t\tpeople.add(person);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (groupIdType.equals(GroupId.Type.self)) {\n\t\t\t\tperson = doGetPerson(userId, fields, securityToken);\n\n\t\t\t\tpeople.add(person);\n\t\t\t}\n\t\t}\n\n\t\treturn new RestfulCollection<Person>(\n\t\t\tpeople, collectionOptions.getFirst(), people.size(),\n\t\t\tcollectionOptions.getMax());\n\t}","id":4165,"modified_method":"protected RestfulCollection<Person> doGetPeople(\n\t\t\tSet<UserId> userIds, GroupId groupId,\n\t\t\tCollectionOptions collectionOptions, Set<String> fields,\n\t\t\tSecurityToken securityToken)\n\t\tthrows Exception {\n\n\t\tList<Person> people =  new ArrayList<Person>();\n\n\t\tfor (UserId userId : userIds) {\n\t\t\tPerson person = null;\n\n\t\t\tString userIdString = userId.getUserId(securityToken);\n\n\t\t\tGroupId.Type groupIdType = groupId.getType();\n\n\t\t\tif (groupIdType.equals(GroupId.Type.all) ||\n\t\t\t\tgroupIdType.equals(GroupId.Type.friends) ||\n\t\t\t\tgroupIdType.equals(GroupId.Type.groupId)) {\n\n\t\t\t\tlong userIdLong = GetterUtil.getLong(userIdString);\n\n\t\t\t\tUser user = UserLocalServiceUtil.getUserById(userIdLong);\n\n\t\t\t\tList<User> friends = UserLocalServiceUtil.getSocialUsers(\n\t\t\t\t\tuser.getUserId(), SocialRelationConstants.TYPE_BI_FRIEND,\n\t\t\t\t\tQueryUtil.ALL_POS, QueryUtil.ALL_POS, null);\n\n\t\t\t\tfor (User friend : friends) {\n\t\t\t\t\tperson = getUserPerson(friend, fields, securityToken);\n\n\t\t\t\t\tpeople.add(person);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (groupIdType.equals(GroupId.Type.self)) {\n\t\t\t\tperson = doGetPerson(userId, fields, securityToken);\n\n\t\t\t\tpeople.add(person);\n\t\t\t}\n\t\t}\n\n\t\treturn new RestfulCollection<Person>(\n\t\t\tpeople, collectionOptions.getFirst(), people.size(),\n\t\t\tcollectionOptions.getMax());\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public static GadgetSpec getGadgetSpec(String url) throws Exception {\n\t\tJSONObject gadgetContext = new JSONObject();\n\n\t\tgadgetContext.put(\n\t\t\t\"debug\",\n\t\t\tGetterUtil.getBoolean(PortletPropsValues.SHINDIG_JS_DEBUG));\n\t\tgadgetContext.put(\n\t\t\t\"ignoreCache\",\n\t\t\tGetterUtil.getBoolean(PortletPropsValues.SHINDIG_NO_CACHE));\n\n\t\tJSONObject gadgetRequest = new JSONObject();\n\n\t\tgadgetRequest.put(\"url\", url);\n\n\t\tJsonRpcGadgetContext context = new JsonRpcGadgetContext(\n\t\t\tgadgetContext, gadgetRequest);\n\n\t\tGadget gadget = _processor.process(context);\n\n\t\treturn gadget.getSpec();\n\t}","id":4166,"modified_method":"public static GadgetSpec getGadgetSpec(String url) throws Exception {\n\t\tJSONObject gadgetContextJSONObject = new JSONObject();\n\n\t\tgadgetContextJSONObject.put(\n\t\t\t\"debug\",\n\t\t\tGetterUtil.getBoolean(PortletPropsValues.SHINDIG_JS_DEBUG));\n\t\tgadgetContextJSONObject.put(\n\t\t\t\"ignoreCache\",\n\t\t\tGetterUtil.getBoolean(PortletPropsValues.SHINDIG_NO_CACHE));\n\n\t\tJSONObject gadgetRequestJSONObject = new JSONObject();\n\n\t\tgadgetRequestJSONObject.put(\"url\", url);\n\n\t\tJsonRpcGadgetContext jsonRpcGadgetContext = new JsonRpcGadgetContext(\n\t\t\tgadgetContextJSONObject, gadgetRequestJSONObject);\n\n\t\tGadget gadget = _processor.process(jsonRpcGadgetContext);\n\n\t\treturn gadget.getSpec();\n\t}","commit_id":"24e3fff2f32f877055673a18aa7edd611c66e65f","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void execute()\n        throws MojoExecutionException\n    {\n        if ( skip )\n        {\n            getLog().info( \"Skipping artifact installation\" );\n            return;\n        }\n\n        // TODO: push into transformation\n        boolean isPomArtifact = \"pom\".equals( packaging );\n\n        ArtifactMetadata metadata = null;\n\n        if ( updateReleaseInfo )\n        {\n            artifact.setRelease( true );\n        }\n\n        try\n        {\n            Collection metadataFiles = new LinkedHashSet();\n\n            if ( isPomArtifact )\n            {\n                installer.install( pomFile, artifact, localRepository );\n                installChecksums( artifact, metadataFiles );\n            }\n            else\n            {\n                metadata = new ProjectArtifactMetadata( artifact, pomFile );\n                artifact.addMetadata( metadata );\n\n                File file = artifact.getFile();\n\n                // Here, we have a temporary solution to MINSTALL-3 (isDirectory() is true if it went through compile\n                // but not package). We are designing in a proper solution for Maven 2.1\n                if ( file != null && file.isFile() )\n                {\n                    installer.install( file, artifact, localRepository );\n                    installChecksums( artifact, metadataFiles );\n                }\n                else if ( !attachedArtifacts.isEmpty() )\n                {\n                    getLog().info( \"No primary artifact to install, installing attached artifacts instead.\" );\n\n                    Artifact pomArtifact =\n                        artifactFactory.createProjectArtifact( artifact.getGroupId(), artifact.getArtifactId(),\n                                                               artifact.getBaseVersion() );\n                    pomArtifact.setFile( pomFile );\n                    if ( updateReleaseInfo )\n                    {\n                        pomArtifact.setRelease( true );\n                    }\n\n                    installer.install( pomFile, pomArtifact, localRepository );\n                    installChecksums( pomArtifact, metadataFiles );\n                }\n                else\n                {\n                    throw new MojoExecutionException(\n                        \"The packaging for this project did not assign a file to the build artifact\" );\n                }\n            }\n\n            for ( Iterator i = attachedArtifacts.iterator(); i.hasNext(); )\n            {\n                Artifact attached = (Artifact) i.next();\n\n                installer.install( attached.getFile(), attached, localRepository );\n                installChecksums( attached, metadataFiles );\n            }\n\n            installChecksums( metadataFiles );\n        }\n        catch ( ArtifactInstallationException e )\n        {\n            throw new MojoExecutionException( e.getMessage(), e );\n        }\n    }","id":4167,"modified_method":"public void execute()\n        throws MojoExecutionException\n    {\n        if ( skip )\n        {\n            getLog().info( \"Skipping artifact installation\" );\n            return;\n        }\n\n        if( !installAtEnd )\n        {\n            installProject( project );\n        }\n        else\n        {\n            MavenProject lastProject = reactorProjects.get( reactorProjects.size() - 1 );\n            if( lastProject.equals( project ) )\n            {\n                for( MavenProject reactorProject : reactorProjects )\n                {\n                    installProject( reactorProject );\n                }\n            }\n            else\n            {\n                getLog().info( \"Installing \" + project.getGroupId() + \":\" + project.getArtifactId() + \n                               \":\" + project.getVersion() + \" at end\" );\n            }\n        }\n    }","commit_id":"05726619406f1e4d74176e493a9792909d1a1c66","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testBasicInstallWithAttachedArtifacts()\n        throws Exception\n    {\n        File testPom = new File( getBasedir(), \"target/test-classes/unit/basic-install-test-with-attached-artifacts/\" +\n            \"plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        List attachedArtifacts = (ArrayList) getVariableValueFromObject( mojo, \"attachedArtifacts\" );\n\n        mojo.execute();\n\n        String packaging = getVariableValueFromObject( mojo, \"packaging\" ).toString();\n\n        String groupId = \"\";\n\n        for ( Iterator iter = attachedArtifacts.iterator(); iter.hasNext(); )\n        {\n            AttachedArtifactStub0 attachedArtifact = (AttachedArtifactStub0) iter.next();\n\n            groupId = dotToSlashReplacer( attachedArtifact.getGroupId() );\n\n            File installedArtifact = new File( getBasedir(), LOCAL_REPO + groupId + \"/\" +\n                attachedArtifact.getArtifactId() + \"/\" + attachedArtifact.getVersion() + \"/\" +\n                attachedArtifact.getArtifactId() + \"-\" + attachedArtifact.getVersion() + \".\" + packaging );\n\n            assertTrue( installedArtifact.exists() );\n        }\n    }","id":4168,"modified_method":"public void testBasicInstallWithAttachedArtifacts()\n        throws Exception\n    {\n        File testPom = new File( getBasedir(), \"target/test-classes/unit/basic-install-test-with-attached-artifacts/\" +\n            \"plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n        \n        MavenProject project = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n\n        List attachedArtifacts = project.getAttachedArtifacts();\n\n        mojo.execute();\n\n        String packaging = project.getPackaging();\n\n        String groupId = \"\";\n\n        for ( Iterator iter = attachedArtifacts.iterator(); iter.hasNext(); )\n        {\n            AttachedArtifactStub0 attachedArtifact = (AttachedArtifactStub0) iter.next();\n\n            groupId = dotToSlashReplacer( attachedArtifact.getGroupId() );\n\n            File installedArtifact = new File( getBasedir(), LOCAL_REPO + groupId + \"/\" +\n                attachedArtifact.getArtifactId() + \"/\" + attachedArtifact.getVersion() + \"/\" +\n                attachedArtifact.getArtifactId() + \"-\" + attachedArtifact.getVersion() + \".\" + packaging );\n\n            assertTrue( installedArtifact.exists() );\n        }\n    }","commit_id":"05726619406f1e4d74176e493a9792909d1a1c66","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testBasicInstallAndCreateChecksumIsTrue()\n        throws Exception\n    {\n        File testPom = new File( getBasedir(), \"target/test-classes/unit/basic-install-checksum/plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        File file = new File( getBasedir(), \"target/test-classes/unit/basic-install-checksum/\" + \"maven-test-jar.jar\" );\n\n        artifact = (InstallArtifactStub) getVariableValueFromObject( mojo, \"artifact\" );\n\n        boolean createChecksum = ( (Boolean) getVariableValueFromObject( mojo, \"createChecksum\" ) ).booleanValue();\n\n        assertTrue( createChecksum );\n\n        artifact.setFile( file );\n\n        mojo.execute();\n\n        ArtifactMetadata metadata = null;\n        for ( Iterator iter = artifact.getMetadataList().iterator(); iter.hasNext(); )\n        {\n            metadata = (ArtifactMetadata) iter.next();\n            if ( metadata.getRemoteFilename().endsWith( \"pom\" ) )\n            {\n                break;\n            }\n        }\n\n        ArtifactRepository localRepo = (ArtifactRepository) getVariableValueFromObject( mojo, \"localRepository\" );\n\n        File pom = new File( localRepo.getBasedir(), localRepo.pathOfLocalRepositoryMetadata( metadata, localRepo ) );\n\n        assertTrue( pom.exists() );\n\n        //get the actual checksum of the pom\n        String actualPomMd5Sum = mojo.md5Digester.calc( pom );\n        String actualPomSha1Sum = mojo.sha1Digester.calc( pom );\n\n        //get the actual checksum of the artifact\n        String actualMd5Sum = mojo.md5Digester.calc( file );\n        String actualSha1Sum = mojo.sha1Digester.calc( file );\n\n        String groupId = dotToSlashReplacer( artifact.getGroupId() );\n\n        String packaging = getVariableValueFromObject( mojo, \"packaging\" ).toString();\n\n        String localPath = getBasedir() + \"/\" + LOCAL_REPO + groupId + \"/\" + artifact.getArtifactId() + \"/\" +\n            artifact.getVersion() + \"/\" + artifact.getArtifactId() + \"-\" + artifact.getVersion();\n\n        File installedArtifact = new File( localPath + \".\" + packaging );\n\n        File pomMd5 = new File( localPath + \".pom.md5\" );\n        File pomSha1 = new File( localPath + \".pom.sha1\" );\n\n        File md5 = new File( localPath + \".\" + packaging + \".md5\" );\n        File sha1 = new File( localPath + \".\" + packaging + \".sha1\" );\n\n        assertTrue( pomMd5.exists() );\n        assertTrue( pomSha1.exists() );\n        assertTrue( md5.exists() );\n        assertTrue( sha1.exists() );\n\n        String generatedMd5 = FileUtils.fileRead( md5, \"UTF-8\" );\n        String generatedSha1 = FileUtils.fileRead( sha1, \"UTF-8\" );\n        String generatedPomMd5 = FileUtils.fileRead( pomMd5, \"UTF-8\" );\n        String generatedPomSha1 = FileUtils.fileRead( pomSha1, \"UTF-8\" );\n\n        assertEquals( actualMd5Sum, generatedMd5 );\n        assertEquals( actualSha1Sum, generatedSha1 );\n        assertEquals( actualPomMd5Sum, generatedPomMd5 );\n        assertEquals( actualPomSha1Sum, generatedPomSha1 );\n\n        assertTrue( installedArtifact.exists() );\n    }","id":4169,"modified_method":"public void testBasicInstallAndCreateChecksumIsTrue()\n        throws Exception\n    {\n        File testPom = new File( getBasedir(), \"target/test-classes/unit/basic-install-checksum/plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        File file = new File( getBasedir(), \"target/test-classes/unit/basic-install-checksum/\" + \"maven-test-jar.jar\" );\n\n        MavenProject project = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n\n        artifact = (InstallArtifactStub) project.getArtifact();\n        \n        boolean createChecksum = ( (Boolean) getVariableValueFromObject( mojo, \"createChecksum\" ) ).booleanValue();\n\n        assertTrue( createChecksum );\n\n        artifact.setFile( file );\n\n        mojo.execute();\n\n        ArtifactMetadata metadata = null;\n        for ( Iterator iter = artifact.getMetadataList().iterator(); iter.hasNext(); )\n        {\n            metadata = (ArtifactMetadata) iter.next();\n            if ( metadata.getRemoteFilename().endsWith( \"pom\" ) )\n            {\n                break;\n            }\n        }\n\n        ArtifactRepository localRepo = (ArtifactRepository) getVariableValueFromObject( mojo, \"localRepository\" );\n\n        File pom = new File( localRepo.getBasedir(), localRepo.pathOfLocalRepositoryMetadata( metadata, localRepo ) );\n\n        assertTrue( pom.exists() );\n\n        //get the actual checksum of the pom\n        String actualPomMd5Sum = mojo.md5Digester.calc( pom );\n        String actualPomSha1Sum = mojo.sha1Digester.calc( pom );\n\n        //get the actual checksum of the artifact\n        String actualMd5Sum = mojo.md5Digester.calc( file );\n        String actualSha1Sum = mojo.sha1Digester.calc( file );\n\n        String groupId = dotToSlashReplacer( artifact.getGroupId() );\n\n        String packaging = project.getPackaging();\n\n        String localPath = getBasedir() + \"/\" + LOCAL_REPO + groupId + \"/\" + artifact.getArtifactId() + \"/\" +\n            artifact.getVersion() + \"/\" + artifact.getArtifactId() + \"-\" + artifact.getVersion();\n\n        File installedArtifact = new File( localPath + \".\" + packaging );\n\n        File pomMd5 = new File( localPath + \".pom.md5\" );\n        File pomSha1 = new File( localPath + \".pom.sha1\" );\n\n        File md5 = new File( localPath + \".\" + packaging + \".md5\" );\n        File sha1 = new File( localPath + \".\" + packaging + \".sha1\" );\n\n        assertTrue( pomMd5.exists() );\n        assertTrue( pomSha1.exists() );\n        assertTrue( md5.exists() );\n        assertTrue( sha1.exists() );\n\n        String generatedMd5 = FileUtils.fileRead( md5, \"UTF-8\" );\n        String generatedSha1 = FileUtils.fileRead( sha1, \"UTF-8\" );\n        String generatedPomMd5 = FileUtils.fileRead( pomMd5, \"UTF-8\" );\n        String generatedPomSha1 = FileUtils.fileRead( pomSha1, \"UTF-8\" );\n\n        assertEquals( actualMd5Sum, generatedMd5 );\n        assertEquals( actualSha1Sum, generatedSha1 );\n        assertEquals( actualPomMd5Sum, generatedPomMd5 );\n        assertEquals( actualPomSha1Sum, generatedPomSha1 );\n\n        assertTrue( installedArtifact.exists() );\n    }","commit_id":"05726619406f1e4d74176e493a9792909d1a1c66","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testBasicInstall()\n        throws Exception\n    {\n        File testPom = new File( getBasedir(), \"target/test-classes/unit/basic-install-test/plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        File file = new File( getBasedir(), \"target/test-classes/unit/basic-install-test/target/\" +\n            \"maven-install-test-1.0-SNAPSHOT.jar\" );\n\n        artifact = (InstallArtifactStub) getVariableValueFromObject( mojo, \"artifact\" );\n\n        artifact.setFile( file );\n\n        mojo.execute();\n\n        String groupId = dotToSlashReplacer( artifact.getGroupId() );\n\n        String packaging = getVariableValueFromObject( mojo, \"packaging\" ).toString();\n\n        File installedArtifact = new File( getBasedir(), LOCAL_REPO + groupId + \"/\" + artifact.getArtifactId() + \"/\" +\n            artifact.getVersion() + \"/\" + artifact.getArtifactId() + \"-\" + artifact.getVersion() + \".\" + packaging );\n\n        assertTrue( installedArtifact.exists() );\n    }","id":4170,"modified_method":"public void testBasicInstall()\n        throws Exception\n    {\n        File testPom = new File( getBasedir(), \"target/test-classes/unit/basic-install-test/plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        File file = new File( getBasedir(), \"target/test-classes/unit/basic-install-test/target/\" +\n            \"maven-install-test-1.0-SNAPSHOT.jar\" );\n\n        MavenProject project = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n\n        artifact = (InstallArtifactStub) project.getArtifact();\n\n        artifact.setFile( file );\n\n        mojo.execute();\n\n        String groupId = dotToSlashReplacer( artifact.getGroupId() );\n\n        String packaging = getVariableValueFromObject( mojo, \"packaging\" ).toString();\n\n        File installedArtifact = new File( getBasedir(), LOCAL_REPO + groupId + \"/\" + artifact.getArtifactId() + \"/\" +\n            artifact.getVersion() + \"/\" + artifact.getArtifactId() + \"-\" + artifact.getVersion() + \".\" + packaging );\n\n        assertTrue( installedArtifact.exists() );\n    }","commit_id":"05726619406f1e4d74176e493a9792909d1a1c66","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testSkip()\n    throws Exception\n    {\t\n        File testPom = new File( getBasedir(), \"target/test-classes/unit/basic-install-test/plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        File file = new File( getBasedir(), \"target/test-classes/unit/basic-install-test/target/\" +\n            \"maven-install-test-1.0-SNAPSHOT.jar\" );\n\n        artifact = (InstallArtifactStub) getVariableValueFromObject( mojo, \"artifact\" );\n\n        artifact.setFile( file );\n\n        mojo.setSkip(true);\n            \n        mojo.execute();\n\n        String groupId = dotToSlashReplacer( artifact.getGroupId() );\n\n        String packaging = getVariableValueFromObject( mojo, \"packaging\" ).toString();\n\n        File installedArtifact = new File( getBasedir(), LOCAL_REPO + groupId + \"/\" + artifact.getArtifactId() + \"/\" +\n           artifact.getVersion() + \"/\" + artifact.getArtifactId() + \"-\" + artifact.getVersion() + \".\" + packaging );\n\n        assertFalse( installedArtifact.exists() );\n    }","id":4171,"modified_method":"public void testSkip()\n    throws Exception\n    {\t\n        File testPom = new File( getBasedir(), \"target/test-classes/unit/basic-install-test/plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        File file = new File( getBasedir(), \"target/test-classes/unit/basic-install-test/target/\" +\n            \"maven-install-test-1.0-SNAPSHOT.jar\" );\n\n        MavenProject project = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n\n        artifact = (InstallArtifactStub) project.getArtifact();\n        \n        artifact.setFile( file );\n\n        mojo.setSkip(true);\n            \n        mojo.execute();\n\n        String groupId = dotToSlashReplacer( artifact.getGroupId() );\n\n        String packaging = project.getPackaging();\n\n        File installedArtifact = new File( getBasedir(), LOCAL_REPO + groupId + \"/\" + artifact.getArtifactId() + \"/\" +\n           artifact.getVersion() + \"/\" + artifact.getArtifactId() + \"-\" + artifact.getVersion() + \".\" + packaging );\n\n        assertFalse( installedArtifact.exists() );\n    }","commit_id":"05726619406f1e4d74176e493a9792909d1a1c66","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testUpdateReleaseParamSetToTrue()\n        throws Exception\n    {\n        File testPom = new File( getBasedir(), \"target/test-classes/unit/configured-install-test/plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        File file = new File( getBasedir(), \"target/test-classes/unit/configured-install-test/target/\" +\n            \"maven-install-test-1.0-SNAPSHOT.jar\" );\n\n        artifact = (InstallArtifactStub) getVariableValueFromObject( mojo, \"artifact\" );\n\n        artifact.setFile( file );\n\n        mojo.execute();\n\n        assertTrue( artifact.isRelease() );\n    }","id":4172,"modified_method":"public void testUpdateReleaseParamSetToTrue()\n        throws Exception\n    {\n        File testPom = new File( getBasedir(), \"target/test-classes/unit/configured-install-test/plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        File file = new File( getBasedir(), \"target/test-classes/unit/configured-install-test/target/\" +\n            \"maven-install-test-1.0-SNAPSHOT.jar\" );\n\n        MavenProject project = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n\n        artifact = (InstallArtifactStub) project.getArtifact();\n\n        artifact.setFile( file );\n\n        mojo.execute();\n\n        assertTrue( artifact.isRelease() );\n    }","commit_id":"05726619406f1e4d74176e493a9792909d1a1c66","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testInstallIfArtifactFileIsNull()\n        throws Exception\n    {\n        File testPom = new File( getBasedir(), \"target/test-classes/unit/basic-install-test/plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        artifact = (InstallArtifactStub) getVariableValueFromObject( mojo, \"artifact\" );\n\n        artifact.setFile( null );\n\n        assertNull( artifact.getFile() );\n\n        try\n        {\n            mojo.execute();\n\n            fail( \"Did not throw mojo execution exception\" );\n        }\n        catch ( MojoExecutionException e )\n        {\n            //expected\n        }\n    }","id":4173,"modified_method":"public void testInstallIfArtifactFileIsNull()\n        throws Exception\n    {\n        File testPom = new File( getBasedir(), \"target/test-classes/unit/basic-install-test/plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        MavenProject project = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n\n        artifact = (InstallArtifactStub) project.getArtifact();\n\n        artifact.setFile( null );\n\n        assertNull( artifact.getFile() );\n\n        try\n        {\n            mojo.execute();\n\n            fail( \"Did not throw mojo execution exception\" );\n        }\n        catch ( MojoExecutionException e )\n        {\n            //expected\n        }\n    }","commit_id":"05726619406f1e4d74176e493a9792909d1a1c66","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void testInstallIfPackagingIsPom()\n        throws Exception\n    {\n        File testPom = new File( getBasedir(),\n                                 \"target/test-classes/unit/basic-install-test-packaging-pom/\" + \"plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        String packaging = (String) getVariableValueFromObject( mojo, \"packaging\" );\n\n        assertEquals( \"pom\", packaging );\n\n        artifact = (InstallArtifactStub) getVariableValueFromObject( mojo, \"artifact\" );\n\n        mojo.execute();\n\n        String groupId = dotToSlashReplacer( artifact.getGroupId() );\n\n        File installedArtifact = new File( getBasedir(), LOCAL_REPO + groupId + \"/\" + artifact.getArtifactId() + \"/\" +\n            artifact.getVersion() + \"/\" + artifact.getArtifactId() + \"-\" + artifact.getVersion() + \".\" + \"jar\" );\n\n        assertTrue( installedArtifact.exists() );\n    }","id":4174,"modified_method":"public void testInstallIfPackagingIsPom()\n        throws Exception\n    {\n        File testPom = new File( getBasedir(),\n                                 \"target/test-classes/unit/basic-install-test-packaging-pom/\" + \"plugin-config.xml\" );\n\n        InstallMojo mojo = (InstallMojo) lookupMojo( \"install\", testPom );\n\n        assertNotNull( mojo );\n\n        MavenProject project = (MavenProject) getVariableValueFromObject( mojo, \"project\" );\n\n        String packaging = project.getPackaging();\n\n        assertEquals( \"pom\", packaging );\n\n        artifact = (InstallArtifactStub) project.getArtifact();\n\n        mojo.execute();\n\n        String groupId = dotToSlashReplacer( artifact.getGroupId() );\n\n        File installedArtifact = new File( getBasedir(), LOCAL_REPO + groupId + \"/\" + artifact.getArtifactId() + \"/\" +\n            artifact.getVersion() + \"/\" + artifact.getArtifactId() + \"-\" + artifact.getVersion() + \".\" + \"jar\" );\n\n        assertTrue( installedArtifact.exists() );\n    }","commit_id":"05726619406f1e4d74176e493a9792909d1a1c66","url":"https://github.com/apache/maven-plugins"},{"original_method":"protected JCVariableDecl makeVar(final Parameter param, ProducedType parameterType,\n            Tree.Term forwardCallTo, Naming.SyntheticName name, JCExpression expr) {\n        // store it in a local var\n        int flags = 0;\n        if(!CodegenUtil.isUnBoxed(param.getModel())){\n            flags |= AbstractTransformer.JT_NO_PRIMITIVES;\n        }\n        // Always go raw if we're forwarding, because we're building the call ourselves and we don't get a chance to apply erasure and\n        // casting to parameter expressions when we pass them to the forwarded method. Ideally we could set it up correctly so that\n        // the proper erasure is done when we read from the Callable.call Object param, but since we store it in a variable defined here,\n        // we'd need to duplicate some of the erasure logic here to make or not the type raw, and that would be worse.\n        // Besides, named parameter invocation does the same.\n        // See https://github.com/ceylon/ceylon-compiler/issues/1005\n        if(forwardCallTo != null)\n            flags |= AbstractTransformer.JT_RAW;\n        JCVariableDecl var = gen.make().VarDef(gen.make().Modifiers(Flags.FINAL), \n                name.asName(), \n                gen.makeJavaType(parameterType, flags),\n                expr);\n        return var;\n    }","id":4175,"modified_method":"protected final void makeVar(ListBuffer<JCStatement> stmts,\n            final Parameter param, ProducedType parameterType,\n            Tree.Term forwardCallTo, Naming.SyntheticName name, JCExpression expr) {\n        // store it in a local var\n        int flags = 0;\n        if(!CodegenUtil.isUnBoxed(param.getModel())){\n            flags |= AbstractTransformer.JT_NO_PRIMITIVES;\n        }\n        // Always go raw if we're forwarding, because we're building the call ourselves and we don't get a chance to apply erasure and\n        // casting to parameter expressions when we pass them to the forwarded method. Ideally we could set it up correctly so that\n        // the proper erasure is done when we read from the Callable.call Object param, but since we store it in a variable defined here,\n        // we'd need to duplicate some of the erasure logic here to make or not the type raw, and that would be worse.\n        // Besides, named parameter invocation does the same.\n        // See https://github.com/ceylon/ceylon-compiler/issues/1005\n        if(forwardCallTo != null)\n            flags |= AbstractTransformer.JT_RAW;\n        JCVariableDecl var = gen.make().VarDef(gen.make().Modifiers(param.getModel().isVariable() ? 0 : Flags.FINAL), \n                name.asName(), \n                gen.makeJavaType(parameterType, flags),\n                expr);\n        stmts.append(var);\n        if (ParameterDefinitionBuilder.isBoxedVariableParameter(param)) {\n            stmts.append(gen.makeVariableBoxDecl(Naming.getAttrClassName(param.getModel(), 0), name.makeIdent(), param.getModel()));\n        }\n    }","commit_id":"9761a7f56b626266458f29176edbb2bf34c02861","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private int makeSequencedArgument(final int arity,\n                ListBuffer<JCStatement> stmts, ListBuffer<JCExpression> args,\n                int a) {\n            ListBuffer<JCExpression> varargs = ListBuffer.<JCExpression>lb();\n            for (; a < arity; a++) {\n                Parameter param1 = paramLists.getParameters().get(Math.min(a, numParams-1));\n                if (arity < numParams - 1) {\n                    stmts.append(makeDowncastOrDefaultVar(\n                            getCallableTempVarName(param1, forwardCallTo), param1, a, arity, forwardCallTo));\n                } else {\n                    varargs.append(gen.make().Ident(makeParamName(gen, a)));\n                }\n            }\n            JCExpression varargsSequence;\n            if (varargs.isEmpty()) {\n                varargsSequence = gen.makeEmptyAsSequential(true);\n            } else {\n                varargsSequence = gen.makeSequence(varargs.toList(), \n                        getVariadicIteratedType(), 0);\n            }\n            SyntheticName vname = getCallableTempVarName(getVariadicParameter(), forwardCallTo).suffixedBy(\"$\");\n            args.append(vname.makeIdent());\n            stmts.append(makeVar(getVariadicParameter(), getVariadicType(), \n                    forwardCallTo, vname, varargsSequence));\n            return a;\n        }","id":4176,"modified_method":"private int makeSequencedArgument(final int arity,\n                ListBuffer<JCStatement> stmts, ListBuffer<JCExpression> args,\n                int a) {\n            ListBuffer<JCExpression> varargs = ListBuffer.<JCExpression>lb();\n            for (; a < arity; a++) {\n                Parameter param1 = paramLists.getParameters().get(Math.min(a, numParams-1));\n                if (arity < numParams - 1) {\n                    makeDowncastOrDefaultVar(stmts,\n                            getCallableTempVarName(param1, forwardCallTo), param1, a, arity, forwardCallTo);\n                } else {\n                    varargs.append(gen.make().Ident(makeParamName(gen, a)));\n                }\n            }\n            JCExpression varargsSequence;\n            if (varargs.isEmpty()) {\n                varargsSequence = gen.makeEmptyAsSequential(true);\n            } else {\n                varargsSequence = gen.makeSequence(varargs.toList(), \n                        getVariadicIteratedType(), 0);\n            }\n            SyntheticName vname = getCallableTempVarName(getVariadicParameter(), forwardCallTo).suffixedBy(\"$\");\n            args.append(vname.makeIdent());\n            makeVar(stmts, getVariadicParameter(), getVariadicType(), \n                    forwardCallTo, vname, varargsSequence);\n            return a;\n        }","commit_id":"9761a7f56b626266458f29176edbb2bf34c02861","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"/** \n         * Make the {@code $call()} method, which delegates to the $call$typed() \n         */\n        @Override\n        MethodDefinitionBuilder makeMethod(final int arity) {\n            if (arity < Math.min(getMinimumArguments(), CALLABLE_MAX_FIZED_ARITY+1)) {\n                return null;\n            }\n            ListBuffer<JCStatement> stmts = new ListBuffer<JCStatement>();\n            ListBuffer<JCExpression> args = ListBuffer.lb();\n            /* if arity <= CALLABLE_MAX_FIZED_ARITY\n             *   for each parameter < arity:\n             *     if parameter is the variadic parameter\n             *         wrap it, and any remaining parameters into a sequential\n             *         and append to the args. Break.\n             *     if a < minimumParams: \n             *         append downcastParameter to arguments \n             *   does call$typed take more arguments?\n             *     is the parameter defaulted? append the default value expr to arguments\n             *     is the parameter sequenced (and possibly empty) append empty to arguments\n             * else // if we're generating the ... method\n             *   // isn't this effectively the runtime equivalent of the above?\n             */\n            if (arity <= CALLABLE_MAX_FIZED_ARITY) {\n                int a = 0;\n                for (; a <= arity; a++) {\n                    Parameter param = paramLists.getParameters().get(a);\n                    if (param.isSequenced()) {\n                        // wrap this and all remaining parameters into a sequential\n                        a = makeSequencedArgument(arity, stmts, args, a);\n                        break;\n                    }\n                    if (a < getMinimumArguments()) {\n                        // append the downcast parameter\n                        stmts.append(makeDowncastOrDefaultVar(\n                                getCallableTempVarName(param, forwardCallTo), param, a, arity, forwardCallTo));\n                        args.append(getCallableTempVarName(param, forwardCallTo).makeIdent());\n                    } else {\n                        break;\n                    }\n                }\n                for (; args.size() < numParams; a++) {\n                    Parameter param = paramLists.getParameters().get(a);\n                    if (param.isSequenced()) {\n                        //args.append(gen.makeEmptyAsSequential(true));\n                        a = makeSequencedArgument(arity, stmts, args, a);\n                    } else {\n                        SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                        stmts.append(makeDowncastOrDefaultVar(\n                                name, param, a, arity, forwardCallTo));\n                        args.append(name.makeIdent());\n                    }\n                }\n            } else { // we're generating the $call(Object...) method\n                // THE OLD CODE\n                // pass along the parameters\n                Parameter variadicParameter = getVariadicParameter();\n                int a = 0;\n                for(Parameter param : paramLists.getParameters()){\n                    // don't read default parameter values for forwarded calls\n                    if(param.isSequenced())\n                        break;\n                    stmts.append(makeDowncastOrDefaultVar(\n                            getCallableTempVarName(param, forwardCallTo), param, a, arity, forwardCallTo));\n                    args.append(getCallableTempVarName(param, forwardCallTo).makeIdent());\n                    a++;\n                }\n                ListBuffer<JCExpression> varargs = ListBuffer.<JCExpression>lb();\n                if (arity > CALLABLE_MAX_FIZED_ARITY) {\n                    \n                    args.append(makeRespread( \n                            List.<JCExpression>of(\n                                    gen.makeReifiedTypeArgument(getVariadicIteratedType()),\n                                    gen.make().Literal(numParams-1),\n                                    gen.make().Binary(JCTree.MINUS, gen.naming.makeQualIdent(makeParamIdent(gen,  0), \"length\"), gen.make().Literal(numParams-1)),\n                                    makeParamIdent(gen,  0),\n                                    gen.makeEmpty())));\n                } else {\n                    JCExpression varargsSequence;\n                    for (int j = getMinimumParameters(); j < arity; j++) {\n                        Parameter param = paramLists.getParameters().get(Math.min(j, numParams-1));\n                        if (arity < numParams - 1) {\n                            stmts.append(makeDowncastOrDefaultVar(\n                                    getCallableTempVarName(param, forwardCallTo), param, j, arity, forwardCallTo));\n                        } else {\n                            varargs.append(gen.make().Ident(makeParamName(gen, j)));\n                        }\n                    }\n                    \n                    // TODO Sometimes we need to call Util.sequentialInstance\n                    \n                    if (varargs.isEmpty()) {\n                        varargsSequence = gen.makeEmptyAsSequential(true);\n                    } else {\n                        varargsSequence = gen.makeSequence(varargs.toList(), \n                                getVariadicIteratedType(), 0);\n                    }\n                    SyntheticName vname = getCallableTempVarName(getVariadicParameter(), forwardCallTo).suffixedBy(\"$\");\n                    args.append(vname.makeIdent());\n                    stmts.append(makeVar(variadicParameter, getVariadicType(), \n                            forwardCallTo, vname, varargsSequence));\n                }\n                // /THE OLD CODE\n            }\n            \n            makeCallTypedCall(arity, stmts, args.toList());\n            MethodDefinitionBuilder callMethod = CallableBuilder.this.makeCallMethod(stmts.toList(), arity);\n            return callMethod;\n        }","id":4177,"modified_method":"/** \n         * Make the {@code $call()} method, which delegates to the $call$typed() \n         */\n        @Override\n        MethodDefinitionBuilder makeMethod(final int arity) {\n            if (arity < Math.min(getMinimumArguments(), CALLABLE_MAX_FIZED_ARITY+1)) {\n                return null;\n            }\n            ListBuffer<JCStatement> stmts = new ListBuffer<JCStatement>();\n            ListBuffer<JCExpression> args = ListBuffer.lb();\n            /* if arity <= CALLABLE_MAX_FIZED_ARITY\n             *   for each parameter < arity:\n             *     if parameter is the variadic parameter\n             *         wrap it, and any remaining parameters into a sequential\n             *         and append to the args. Break.\n             *     if a < minimumParams: \n             *         append downcastParameter to arguments \n             *   does call$typed take more arguments?\n             *     is the parameter defaulted? append the default value expr to arguments\n             *     is the parameter sequenced (and possibly empty) append empty to arguments\n             * else // if we're generating the ... method\n             *   // isn't this effectively the runtime equivalent of the above?\n             */\n            if (arity <= CALLABLE_MAX_FIZED_ARITY) {\n                int a = 0;\n                for (; a <= arity; a++) {\n                    Parameter param = paramLists.getParameters().get(a);\n                    if (param.isSequenced()) {\n                        // wrap this and all remaining parameters into a sequential\n                        a = makeSequencedArgument(arity, stmts, args, a);\n                        break;\n                    }\n                    if (a < getMinimumArguments()) {\n                        // append the downcast parameter\n                        makeDowncastOrDefaultVar(stmts, \n                                getCallableTempVarName(param, forwardCallTo), param, a, arity, forwardCallTo);\n                        args.append(getCallableTempVarName(param, forwardCallTo).makeIdent());\n                    } else {\n                        break;\n                    }\n                }\n                for (; args.size() < numParams; a++) {\n                    Parameter param = paramLists.getParameters().get(a);\n                    if (param.isSequenced()) {\n                        //args.append(gen.makeEmptyAsSequential(true));\n                        a = makeSequencedArgument(arity, stmts, args, a);\n                    } else {\n                        SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                        makeDowncastOrDefaultVar(stmts,\n                                name, param, a, arity, forwardCallTo);\n                        args.append(name.makeIdent());\n                    }\n                }\n            } else { // we're generating the $call(Object...) method\n                // THE OLD CODE\n                // pass along the parameters\n                Parameter variadicParameter = getVariadicParameter();\n                int a = 0;\n                for(Parameter param : paramLists.getParameters()){\n                    // don't read default parameter values for forwarded calls\n                    if(param.isSequenced())\n                        break;\n                    makeDowncastOrDefaultVar(stmts,\n                            getCallableTempVarName(param, forwardCallTo), param, a, arity, forwardCallTo);\n                    args.append(getCallableTempVarName(param, forwardCallTo).makeIdent());\n                    a++;\n                }\n                ListBuffer<JCExpression> varargs = ListBuffer.<JCExpression>lb();\n                if (arity > CALLABLE_MAX_FIZED_ARITY) {\n                    \n                    args.append(makeRespread( \n                            List.<JCExpression>of(\n                                    gen.makeReifiedTypeArgument(getVariadicIteratedType()),\n                                    gen.make().Literal(numParams-1),\n                                    gen.make().Binary(JCTree.MINUS, gen.naming.makeQualIdent(makeParamIdent(gen,  0), \"length\"), gen.make().Literal(numParams-1)),\n                                    makeParamIdent(gen,  0),\n                                    gen.makeEmpty())));\n                } else {\n                    JCExpression varargsSequence;\n                    for (int j = getMinimumParameters(); j < arity; j++) {\n                        Parameter param = paramLists.getParameters().get(Math.min(j, numParams-1));\n                        if (arity < numParams - 1) {\n                            makeDowncastOrDefaultVar(stmts,\n                                    getCallableTempVarName(param, forwardCallTo), param, j, arity, forwardCallTo);\n                        } else {\n                            varargs.append(gen.make().Ident(makeParamName(gen, j)));\n                        }\n                    }\n                    \n                    // TODO Sometimes we need to call Util.sequentialInstance\n                    \n                    if (varargs.isEmpty()) {\n                        varargsSequence = gen.makeEmptyAsSequential(true);\n                    } else {\n                        varargsSequence = gen.makeSequence(varargs.toList(), \n                                getVariadicIteratedType(), 0);\n                    }\n                    SyntheticName vname = getCallableTempVarName(getVariadicParameter(), forwardCallTo).suffixedBy(\"$\");\n                    args.append(vname.makeIdent());\n                    makeVar(stmts, variadicParameter, getVariadicType(), \n                            forwardCallTo, vname, varargsSequence);\n                }\n                // /THE OLD CODE\n            }\n            \n            makeCallTypedCall(arity, stmts, args.toList());\n            MethodDefinitionBuilder callMethod = CallableBuilder.this.makeCallMethod(stmts.toList(), arity);\n            return callMethod;\n        }","commit_id":"9761a7f56b626266458f29176edbb2bf34c02861","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"/**\n         * Makes a call to {@code $call$typed()} if required, otherwise uses the \n         * given body.\n         * @return \n         */\n        @Override\n        MethodDefinitionBuilder makeMethod(int arity) {\n            if (arity < Math.min(getMinimumArguments(), CALLABLE_MAX_FIZED_ARITY+1)) {\n                return null;\n            }\n            ListBuffer<JCStatement> stmts = new ListBuffer<JCStatement>();\n            int a = 0;\n            for(Parameter param : paramLists.getParameters()){\n                // don't read default parameter values for forwarded calls\n                stmts.append(makeDowncastOrDefaultVar(\n                        getCallableTempVarName(param, null), param, a, arity, null));\n                a++;\n            }\n            // chain to n param typed method\n            List<JCExpression> args = List.nil();\n            // pass along the parameters\n            for(a=paramLists.getParameters().size()-1;a>=0;a--){\n                Parameter param = paramLists.getParameters().get(a);\n                args = args.prepend(getCallableTempVarName(param, null).makeIdent());\n            }\n            JCMethodInvocation chain = gen.make().Apply(null, gen.makeUnquotedIdent(Naming.getCallableTypedMethodName()), args);\n            stmts.append(gen.make().Return(chain));\n            return makeCallMethod(stmts.toList(), arity);\n        }","id":4178,"modified_method":"/**\n         * Makes a call to {@code $call$typed()} if required, otherwise uses the \n         * given body.\n         * @return \n         */\n        @Override\n        MethodDefinitionBuilder makeMethod(int arity) {\n            if (arity < Math.min(getMinimumArguments(), CALLABLE_MAX_FIZED_ARITY+1)) {\n                return null;\n            }\n            ListBuffer<JCStatement> stmts = new ListBuffer<JCStatement>();\n            int a = 0;\n            for(Parameter param : paramLists.getParameters()){\n                // don't read default parameter values for forwarded calls\n                makeDowncastOrDefaultVar(stmts,\n                        getCallableTempVarName(param, null), param, a, arity, null);\n                a++;\n            }\n            // chain to n param typed method\n            List<JCExpression> args = List.nil();\n            // pass along the parameters\n            for(a=paramLists.getParameters().size()-1;a>=0;a--){\n                Parameter param = paramLists.getParameters().get(a);\n                args = args.prepend(getCallableTempVarName(param, null).makeIdent());\n            }\n            JCMethodInvocation chain = gen.make().Apply(null, gen.makeUnquotedIdent(Naming.getCallableTypedMethodName()), args);\n            stmts.append(gen.make().Return(chain));\n            return makeCallMethod(stmts.toList(), arity);\n        }","commit_id":"9761a7f56b626266458f29176edbb2bf34c02861","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Override\n        MethodDefinitionBuilder makeMethod(int arity) {\n            if (arity < Math.min(getMinimumArguments(), CALLABLE_MAX_FIZED_ARITY+1)) {\n                return null;\n            }\n            ListBuffer<JCStatement> stmts = new ListBuffer<JCStatement>();\n            if (isCallMethod) {\n                int a = 0;\n                for(Parameter param : paramLists.getParameters()){\n                    // don't read default parameter values for forwarded calls\n                    if(forwardCallTo != null && arity == a)\n                        break;\n                    stmts.append(makeDowncastOrDefaultVar(getCallableTempVarName(param, forwardCallTo), param, a, arity, forwardCallTo));\n                    a++;\n                }\n            }\n            \n            ProducedReference target;\n            if (forwardCallTo instanceof Tree.MemberOrTypeExpression) {\n                target = ((Tree.MemberOrTypeExpression)forwardCallTo).getTarget();\n            } else if (forwardCallTo instanceof Tree.FunctionArgument) {\n                Method method = ((Tree.FunctionArgument) forwardCallTo).getDeclarationModel();\n                target = method.getProducedReference(null, Collections.<ProducedType>emptyList());\n            } else {\n                throw new RuntimeException(forwardCallTo.getNodeType());\n            }\n            TypeDeclaration primaryDeclaration = forwardCallTo.getTypeModel().getDeclaration();\n            CallableInvocation invocationBuilder = new CallableInvocation (\n                    gen,\n                    forwardCallTo,\n                    primaryDeclaration,\n                    target,\n                    gen.getReturnTypeOfCallable(forwardCallTo.getTypeModel()),\n                    forwardCallTo, \n                    paramLists,\n                    arity, isCallMethod);\n            boolean prevCallableInv = gen.expressionGen().withinSyntheticClassBody(true);\n            JCExpression invocation;\n            try {\n                invocation = gen.expressionGen().transformInvocation(invocationBuilder);\n            } finally {\n                gen.expressionGen().withinSyntheticClassBody(prevCallableInv);\n            }\n            stmts.append(gen.make().Return(invocation));\n            \n            \n            return isCallMethod ? makeCallMethod(stmts.toList(), arity) : makeCallTypedMethod(stmts.toList());\n        }","id":4179,"modified_method":"@Override\n        MethodDefinitionBuilder makeMethod(int arity) {\n            if (arity < Math.min(getMinimumArguments(), CALLABLE_MAX_FIZED_ARITY+1)) {\n                return null;\n            }\n            ListBuffer<JCStatement> stmts = new ListBuffer<JCStatement>();\n            if (isCallMethod) {\n                int a = 0;\n                for(Parameter param : paramLists.getParameters()){\n                    // don't read default parameter values for forwarded calls\n                    if(forwardCallTo != null && arity == a)\n                        break;\n                    makeDowncastOrDefaultVar(stmts, getCallableTempVarName(param, forwardCallTo), param, a, arity, forwardCallTo);\n                    a++;\n                }\n            }\n            \n            ProducedReference target;\n            if (forwardCallTo instanceof Tree.MemberOrTypeExpression) {\n                target = ((Tree.MemberOrTypeExpression)forwardCallTo).getTarget();\n            } else if (forwardCallTo instanceof Tree.FunctionArgument) {\n                Method method = ((Tree.FunctionArgument) forwardCallTo).getDeclarationModel();\n                target = method.getProducedReference(null, Collections.<ProducedType>emptyList());\n            } else {\n                throw new RuntimeException(forwardCallTo.getNodeType());\n            }\n            TypeDeclaration primaryDeclaration = forwardCallTo.getTypeModel().getDeclaration();\n            CallableInvocation invocationBuilder = new CallableInvocation (\n                    gen,\n                    forwardCallTo,\n                    primaryDeclaration,\n                    target,\n                    gen.getReturnTypeOfCallable(forwardCallTo.getTypeModel()),\n                    forwardCallTo, \n                    paramLists,\n                    arity, isCallMethod);\n            boolean prevCallableInv = gen.expressionGen().withinSyntheticClassBody(true);\n            JCExpression invocation;\n            try {\n                invocation = gen.expressionGen().transformInvocation(invocationBuilder);\n            } finally {\n                gen.expressionGen().withinSyntheticClassBody(prevCallableInv);\n            }\n            stmts.append(gen.make().Return(invocation));\n            \n            \n            return isCallMethod ? makeCallMethod(stmts.toList(), arity) : makeCallTypedMethod(stmts.toList());\n        }","commit_id":"9761a7f56b626266458f29176edbb2bf34c02861","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"/**\n     * <p>Makes a variable declaration for a variable which will be used as an \n     * argument to a call. The variable is initialized to either the \n     * corresponding parameter,<\/p> \n     * <pre>\n     *     Foo foo = (Foo)arg0;\n     * <\/pre>\n     * <p>or the default value for the corresponding parameter<\/p>\n     * <pre>\n     *     Bar bar = $$bar(**previous-args**);\n     * <\/pre>\n     */\n    protected JCVariableDecl makeDowncastOrDefaultVar(\n            Naming.SyntheticName name,\n            final Parameter param, \n            final int a, final int arity, Tree.Term forwardCallTo) {\n        JCExpression varInitialExpression = makeDowncastOrDefault(param, a, arity, forwardCallTo);\n        JCVariableDecl var = makeVar(param, parameterTypes.get(a), forwardCallTo,\n                name, varInitialExpression);\n        return var;\n    }","id":4180,"modified_method":"/**\n     * <p>Makes a variable declaration for a variable which will be used as an \n     * argument to a call. The variable is initialized to either the \n     * corresponding parameter,<\/p> \n     * <pre>\n     *     Foo foo = (Foo)arg0;\n     * <\/pre>\n     * <p>or the default value for the corresponding parameter<\/p>\n     * <pre>\n     *     Bar bar = $$bar(**previous-args**);\n     * <\/pre>\n     */\n    protected void makeDowncastOrDefaultVar(\n            ListBuffer<JCStatement> stmts,\n            Naming.SyntheticName name,\n            final Parameter param, \n            final int a, final int arity, Tree.Term forwardCallTo) {\n        JCExpression varInitialExpression = makeDowncastOrDefault(param, a, arity, forwardCallTo);\n        makeVar(stmts, param, parameterTypes.get(a), forwardCallTo,\n                name, varInitialExpression);\n    }","commit_id":"9761a7f56b626266458f29176edbb2bf34c02861","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Override\n        MethodDefinitionBuilder makeMethod(final int arity) {\n            final int arity1 = arity+1;// The arity including the Sequential parameter\n            if (arity1 < getMinimumArguments()) {\n                return null;\n            }\n            ListBuffer<JCStatement> stmts = new ListBuffer<JCStatement>();\n            ListBuffer<JCExpression> args = ListBuffer.lb();\n            \n            \n            /* if arity <= CALLABLE_MAX_FIZED_ARITY:\n             *   if arity == numParams:\n             *     // we're good\n             *   elseif arity < numParams:\n             *     // we append downcast parameters or defaults\n             *     for each parameter < arity:\n             *       if a < minimumParams: \n             *         append downcast Parameter to arguments\n             *       else if parameter is defaulted:\n             *         append defaulted/empty Parameter to arguments\n             *   else: // arity > numParams\n             *     // we respread\n             *     for each parameter < minimumParameters:\n             *       if parameter is the variadic parameter:\n             *          \n             *       else:\n             *         append downcast Parameter to arguments\n             * else:\n             *   TODO\n             * \n             * \n             * if arity <= CALLABLE_MAX_FIZED_ARITY\n             *   for each parameter < arity:\n             *     if parameter is the variadic parameter\n             *         \"respread\" Break.\n             *     if a < minimumParams: \n             *         append downcastParameter to arguments\n             *     else:\n             *         break \n             *   does call$typed take more arguments?\n             *     is the parameter defaulted? append the default value expr to arguments\n             *     is the parameter sequenced (and possibly empty) append empty to arguments\n             */\n            if (arity <= CALLABLE_MAX_FIZED_ARITY) {\n                if (arity1 <  getMinimumParameters()) {\n                    // destructuring\n                    int a = 0;\n                    for (; a < getMinimumArguments()-1; a++) {\n                        Parameter param = paramLists.getParameters().get(a);\n                        SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                        stmts.append(makeDowncastOrDefaultVar(\n                                name, param, a, arity, forwardCallTo));\n                        args.append(name.makeIdent());\n                    }\n                    for (; a < numParams-1; a++) {\n                        // Extract from the sequential\n                        Parameter param = paramLists.getParameters().get(a);\n                        SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                        JCExpression get = gen.make().Apply(null, \n                                gen.makeQualIdent(makeParamIdent(gen, arity), \"get\"), \n                                List.<JCExpression>of(gen.expressionGen().applyErasureAndBoxing(gen.make().Literal(a), \n                                        gen.typeFact().getIntegerDeclaration().getType(), false, BoxingStrategy.BOXED, gen.typeFact().getIntegerDeclaration().getType())));\n                        get = gen.expressionGen().applyErasureAndBoxing(get, \n                                parameterTypes.get(a), \n                                true, true, BoxingStrategy.UNBOXED, \n                                parameterTypes.get(a), 0);\n                        stmts.append(makeVar(param, parameterTypes.get(a),\n                                forwardCallTo, name, get));\n                        args.append(name.makeIdent());\n                    }\n                    // Get the rest of the sequential using spanFrom()\n                    Parameter param = paramLists.getParameters().get(numParams-1);\n                    SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                    JCExpression spanFrom = gen.make().Apply(null, \n                            gen.makeQualIdent(makeParamIdent(gen, arity), \"spanFrom\"), \n                            List.<JCExpression>of(gen.expressionGen().applyErasureAndBoxing(gen.make().Literal(a), \n                                    gen.typeFact().getIntegerDeclaration().getType(), false, BoxingStrategy.BOXED, gen.typeFact().getIntegerDeclaration().getType())));\n                    spanFrom = gen.expressionGen().applyErasureAndBoxing(spanFrom, \n                            parameterTypes.get(a), \n                            true, true, BoxingStrategy.UNBOXED, \n                            parameterTypes.get(a), 0);\n                    stmts.append(makeVar(param, parameterTypes.get(a),\n                            forwardCallTo, name, spanFrom));\n                    args.append(name.makeIdent());\n                } else if (arity1 == numParams) {\n                    for (int a= 0; a < numParams; a++) {\n                        Parameter param = paramLists.getParameters().get(a);\n                        SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                        stmts.append(makeDowncastOrDefaultVar(\n                                name, param, a, arity, forwardCallTo));\n                        args.append(name.makeIdent());\n                    }\n                } else if (arity1 < numParams) {\n                    int a = 0;\n                    for (; a <= arity; a++) {\n                        Parameter param = paramLists.getParameters().get(a);\n                        if (param.isSequenced()) {\n                            // wrap this and all remaining parameters into a sequential\n                            a = makeSequencedArgument(arity, stmts, args, a);\n                            break;\n                        }\n                        if (a < getMinimumArguments()) {\n                            // append the downcast parameter\n                            stmts.append(makeDowncastOrDefaultVar(\n                                    getCallableTempVarName(param, forwardCallTo), param, a, arity, forwardCallTo));\n                            args.append(getCallableTempVarName(param, forwardCallTo).makeIdent());\n                        } else {\n                            break;\n                        }\n                    }\n                    for (; args.size() < numParams; a++) {\n                        Parameter param = paramLists.getParameters().get(a);\n                        if (param.isSequenced()) {\n                            args.append(gen.makeEmptyAsSequential(true));\n                        } else {\n                            SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                            stmts.append(makeDowncastOrDefaultVar(\n                                    name, param, a, arity, forwardCallTo));\n                            args.append(name.makeIdent());\n                        }\n                    }\n                } else { // arity1 > numParams\n                    // respread\n                    int a = 0;\n                    for (; a < numParams; a++) {\n                        Parameter param = paramLists.getParameters().get(a);\n                        if (param.isSequenced()) {\n                            break;\n                        }\n                        SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                        stmts.append(makeDowncastOrDefaultVar(\n                                name, param, a, arity, forwardCallTo));\n                        args.append(name.makeIdent());\n                    }\n                    ListBuffer<JCExpression> variadicElements = ListBuffer.lb();\n                    for (; a < arity; a++) {\n                        Parameter param = paramLists.getParameters().get(Math.min(a, numParams-1));\n                        variadicElements.append(makeParameterExpr(param, a, getVariadicIteratedType(), false));\n                    }\n                    //if (arity1 > getMinimumArguments() + 1) {\n                        ListBuffer<JCExpression> spreadCallArgs = ListBuffer.lb();\n                        spreadCallArgs.append(gen.makeReifiedTypeArgument(getVariadicIteratedType()));\n                        if (arity > CALLABLE_MAX_FIZED_ARITY) {\n                            spreadCallArgs.append(gen.make().Literal(getMinimumArguments()));\n                            spreadCallArgs.append(makeParamIdent(gen, 0));\n                        } else {\n                            spreadCallArgs.append(gen.make().Literal(0));\n                            spreadCallArgs.append(gen.make().Literal(variadicElements.size()));\n                            spreadCallArgs.append(gen.make().NewArray(gen.make().QualIdent(gen.syms().objectType.tsym), List.<JCExpression>nil(), variadicElements.toList()));\n                            spreadCallArgs.append(makeParamIdent(gen, a));\n                        }\n                        args.append(makeRespread(spreadCallArgs.toList()));\n                    //}\n                }\n                \n            } else {\n                // OLD CODE\n                int a = 0;\n                for(Parameter param : paramLists.getParameters()){\n                    if (param.isSequenced() /*|| arity1 > getMinimumArguments() + 1\n                            && a == getMinimumArguments()*/) {\n                        break;\n                    }\n                    stmts.append(makeDowncastOrDefaultVar(\n                            getCallableTempVarName(param, forwardCallTo),\n                            param, a, arity1, forwardCallTo));\n                    args.append(getCallableTempVarName(param, forwardCallTo).makeIdent());\n                    a++;\n                }\n                ListBuffer<JCExpression> lb = ListBuffer.lb();\n                for (; a < arity1-1 && a < CALLABLE_MAX_FIZED_ARITY; a++) {\n                    Parameter param = paramLists.getParameters().get(Math.min(a, numParams-1));\n                    lb.append(makeParameterExpr(param, a, getVariadicIteratedType(), false));\n                }\n                //if (arity1 > getMinimumArguments() + 1) {\n                    ListBuffer<JCExpression> spreadCallArgs = ListBuffer.lb();\n                    spreadCallArgs.append(gen.makeReifiedTypeArgument(getVariadicIteratedType()));\n                    if (arity1 > CALLABLE_MAX_FIZED_ARITY+1) {\n                        spreadCallArgs.append(gen.make().Literal(getMinimumArguments()));\n                        spreadCallArgs.append(makeParamIdent(gen, 0));\n                    } else {\n                        spreadCallArgs.append(gen.make().Literal(0));\n                        spreadCallArgs.append(gen.make().Literal(lb.size()));\n                        spreadCallArgs.append(gen.make().NewArray(gen.make().QualIdent(gen.syms().objectType.tsym), List.<JCExpression>nil(), lb.toList()));\n                        spreadCallArgs.append(makeParamIdent(gen, a));\n                    }\n                    args.append(makeRespread(spreadCallArgs.toList()));\n                //}\n            }\n            MethodDefinitionBuilder callVaryMethod = MethodDefinitionBuilder.systemMethod(gen, Naming.getCallableVariadicMethodName());\n            callVaryMethod.isOverride(true);\n            callVaryMethod.modifiers(Flags.PUBLIC);\n            ProducedType returnType = gen.getReturnTypeOfCallable(typeModel);\n            callVaryMethod.resultType(gen.makeJavaType(returnType, JT_NO_PRIMITIVES), null);\n            // Now append formal parameters\n            switch (arity1) {\n            case 4:\n                callVaryMethod.parameter(makeCallableCallParam(0, arity1-4));\n                callVaryMethod.parameter(makeCallableCallParam(0, arity1-3));\n                callVaryMethod.parameter(makeCallableCallParam(0, arity1-2));\n                callVaryMethod.parameter(makeCallableVaryParam(0, arity1-1));\n                break;\n            case 3:\n                callVaryMethod.parameter(makeCallableCallParam(0, arity1-3));\n                callVaryMethod.parameter(makeCallableCallParam(0, arity1-2));\n                callVaryMethod.parameter(makeCallableVaryParam(0, arity1-1));\n                break;\n            case 2:\n                callVaryMethod.parameter(makeCallableCallParam(0, arity1-2));\n                callVaryMethod.parameter(makeCallableVaryParam(0, arity1-1));\n                break;\n            case 1:\n                callVaryMethod.parameter(makeCallableVaryParam(0, arity1-1));\n                break;\n            case 0:\n                break;\n            default: // use varargs\n                callVaryMethod.parameter(makeCallableCallParam(Flags.VARARGS, 0));\n            }\n            \n            // Return the call result, or null if a void method\n            makeCallTypedCall(arity1, stmts, args.toList());\n            callVaryMethod.body(stmts.toList());\n            return callVaryMethod;\n        }","id":4181,"modified_method":"@Override\n        MethodDefinitionBuilder makeMethod(final int arity) {\n            final int arity1 = arity+1;// The arity including the Sequential parameter\n            if (arity1 < getMinimumArguments()) {\n                return null;\n            }\n            ListBuffer<JCStatement> stmts = new ListBuffer<JCStatement>();\n            ListBuffer<JCExpression> args = ListBuffer.lb();\n            \n            \n            /* if arity <= CALLABLE_MAX_FIZED_ARITY:\n             *   if arity == numParams:\n             *     // we're good\n             *   elseif arity < numParams:\n             *     // we append downcast parameters or defaults\n             *     for each parameter < arity:\n             *       if a < minimumParams: \n             *         append downcast Parameter to arguments\n             *       else if parameter is defaulted:\n             *         append defaulted/empty Parameter to arguments\n             *   else: // arity > numParams\n             *     // we respread\n             *     for each parameter < minimumParameters:\n             *       if parameter is the variadic parameter:\n             *          \n             *       else:\n             *         append downcast Parameter to arguments\n             * else:\n             *   TODO\n             * \n             * \n             * if arity <= CALLABLE_MAX_FIZED_ARITY\n             *   for each parameter < arity:\n             *     if parameter is the variadic parameter\n             *         \"respread\" Break.\n             *     if a < minimumParams: \n             *         append downcastParameter to arguments\n             *     else:\n             *         break \n             *   does call$typed take more arguments?\n             *     is the parameter defaulted? append the default value expr to arguments\n             *     is the parameter sequenced (and possibly empty) append empty to arguments\n             */\n            if (arity <= CALLABLE_MAX_FIZED_ARITY) {\n                if (arity1 <  getMinimumParameters()) {\n                    // destructuring\n                    int a = 0;\n                    for (; a < getMinimumArguments()-1; a++) {\n                        Parameter param = paramLists.getParameters().get(a);\n                        SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                        makeDowncastOrDefaultVar(stmts, \n                                name, param, a, arity, forwardCallTo);\n                        args.append(name.makeIdent());\n                    }\n                    for (; a < numParams-1; a++) {\n                        // Extract from the sequential\n                        Parameter param = paramLists.getParameters().get(a);\n                        SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                        JCExpression get = gen.make().Apply(null, \n                                gen.makeQualIdent(makeParamIdent(gen, arity), \"get\"), \n                                List.<JCExpression>of(gen.expressionGen().applyErasureAndBoxing(gen.make().Literal(a), \n                                        gen.typeFact().getIntegerDeclaration().getType(), false, BoxingStrategy.BOXED, gen.typeFact().getIntegerDeclaration().getType())));\n                        get = gen.expressionGen().applyErasureAndBoxing(get, \n                                parameterTypes.get(a), \n                                true, true, BoxingStrategy.UNBOXED, \n                                parameterTypes.get(a), 0);\n                        makeVar(stmts, param, parameterTypes.get(a),\n                                forwardCallTo, name, get);\n                        args.append(name.makeIdent());\n                    }\n                    // Get the rest of the sequential using spanFrom()\n                    Parameter param = paramLists.getParameters().get(numParams-1);\n                    SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                    JCExpression spanFrom = gen.make().Apply(null, \n                            gen.makeQualIdent(makeParamIdent(gen, arity), \"spanFrom\"), \n                            List.<JCExpression>of(gen.expressionGen().applyErasureAndBoxing(gen.make().Literal(a), \n                                    gen.typeFact().getIntegerDeclaration().getType(), false, BoxingStrategy.BOXED, gen.typeFact().getIntegerDeclaration().getType())));\n                    spanFrom = gen.expressionGen().applyErasureAndBoxing(spanFrom, \n                            parameterTypes.get(a), \n                            true, true, BoxingStrategy.UNBOXED, \n                            parameterTypes.get(a), 0);\n                    makeVar(stmts, param, parameterTypes.get(a),\n                            forwardCallTo, name, spanFrom);\n                    args.append(name.makeIdent());\n                } else if (arity1 == numParams) {\n                    for (int a= 0; a < numParams; a++) {\n                        Parameter param = paramLists.getParameters().get(a);\n                        SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                        makeDowncastOrDefaultVar(stmts, \n                                name, param, a, arity, forwardCallTo);\n                        args.append(name.makeIdent());\n                    }\n                } else if (arity1 < numParams) {\n                    int a = 0;\n                    for (; a <= arity; a++) {\n                        Parameter param = paramLists.getParameters().get(a);\n                        if (param.isSequenced()) {\n                            // wrap this and all remaining parameters into a sequential\n                            a = makeSequencedArgument(arity, stmts, args, a);\n                            break;\n                        }\n                        if (a < getMinimumArguments()) {\n                            // append the downcast parameter\n                            makeDowncastOrDefaultVar(stmts, \n                                    getCallableTempVarName(param, forwardCallTo), param, a, arity, forwardCallTo);\n                            args.append(getCallableTempVarName(param, forwardCallTo).makeIdent());\n                        } else {\n                            break;\n                        }\n                    }\n                    for (; args.size() < numParams; a++) {\n                        Parameter param = paramLists.getParameters().get(a);\n                        if (param.isSequenced()) {\n                            args.append(gen.makeEmptyAsSequential(true));\n                        } else {\n                            SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                            makeDowncastOrDefaultVar(stmts,\n                                    name, param, a, arity, forwardCallTo);\n                            args.append(name.makeIdent());\n                        }\n                    }\n                } else { // arity1 > numParams\n                    // respread\n                    int a = 0;\n                    for (; a < numParams; a++) {\n                        Parameter param = paramLists.getParameters().get(a);\n                        if (param.isSequenced()) {\n                            break;\n                        }\n                        SyntheticName name = getCallableTempVarName(param, forwardCallTo);\n                        makeDowncastOrDefaultVar(stmts,\n                                name, param, a, arity, forwardCallTo);\n                        args.append(name.makeIdent());\n                    }\n                    ListBuffer<JCExpression> variadicElements = ListBuffer.lb();\n                    for (; a < arity; a++) {\n                        Parameter param = paramLists.getParameters().get(Math.min(a, numParams-1));\n                        variadicElements.append(makeParameterExpr(param, a, getVariadicIteratedType(), false));\n                    }\n                    //if (arity1 > getMinimumArguments() + 1) {\n                        ListBuffer<JCExpression> spreadCallArgs = ListBuffer.lb();\n                        spreadCallArgs.append(gen.makeReifiedTypeArgument(getVariadicIteratedType()));\n                        if (arity > CALLABLE_MAX_FIZED_ARITY) {\n                            spreadCallArgs.append(gen.make().Literal(getMinimumArguments()));\n                            spreadCallArgs.append(makeParamIdent(gen, 0));\n                        } else {\n                            spreadCallArgs.append(gen.make().Literal(0));\n                            spreadCallArgs.append(gen.make().Literal(variadicElements.size()));\n                            spreadCallArgs.append(gen.make().NewArray(gen.make().QualIdent(gen.syms().objectType.tsym), List.<JCExpression>nil(), variadicElements.toList()));\n                            spreadCallArgs.append(makeParamIdent(gen, a));\n                        }\n                        args.append(makeRespread(spreadCallArgs.toList()));\n                    //}\n                }\n                \n            } else {\n                // OLD CODE\n                int a = 0;\n                for(Parameter param : paramLists.getParameters()){\n                    if (param.isSequenced() /*|| arity1 > getMinimumArguments() + 1\n                            && a == getMinimumArguments()*/) {\n                        break;\n                    }\n                    makeDowncastOrDefaultVar(stmts,\n                            getCallableTempVarName(param, forwardCallTo),\n                            param, a, arity1, forwardCallTo);\n                    args.append(getCallableTempVarName(param, forwardCallTo).makeIdent());\n                    a++;\n                }\n                ListBuffer<JCExpression> lb = ListBuffer.lb();\n                for (; a < arity1-1 && a < CALLABLE_MAX_FIZED_ARITY; a++) {\n                    Parameter param = paramLists.getParameters().get(Math.min(a, numParams-1));\n                    lb.append(makeParameterExpr(param, a, getVariadicIteratedType(), false));\n                }\n                //if (arity1 > getMinimumArguments() + 1) {\n                    ListBuffer<JCExpression> spreadCallArgs = ListBuffer.lb();\n                    spreadCallArgs.append(gen.makeReifiedTypeArgument(getVariadicIteratedType()));\n                    if (arity1 > CALLABLE_MAX_FIZED_ARITY+1) {\n                        spreadCallArgs.append(gen.make().Literal(getMinimumArguments()));\n                        spreadCallArgs.append(makeParamIdent(gen, 0));\n                    } else {\n                        spreadCallArgs.append(gen.make().Literal(0));\n                        spreadCallArgs.append(gen.make().Literal(lb.size()));\n                        spreadCallArgs.append(gen.make().NewArray(gen.make().QualIdent(gen.syms().objectType.tsym), List.<JCExpression>nil(), lb.toList()));\n                        spreadCallArgs.append(makeParamIdent(gen, a));\n                    }\n                    args.append(makeRespread(spreadCallArgs.toList()));\n                //}\n            }\n            MethodDefinitionBuilder callVaryMethod = MethodDefinitionBuilder.systemMethod(gen, Naming.getCallableVariadicMethodName());\n            callVaryMethod.isOverride(true);\n            callVaryMethod.modifiers(Flags.PUBLIC);\n            ProducedType returnType = gen.getReturnTypeOfCallable(typeModel);\n            callVaryMethod.resultType(gen.makeJavaType(returnType, JT_NO_PRIMITIVES), null);\n            // Now append formal parameters\n            switch (arity1) {\n            case 4:\n                callVaryMethod.parameter(makeCallableCallParam(0, arity1-4));\n                callVaryMethod.parameter(makeCallableCallParam(0, arity1-3));\n                callVaryMethod.parameter(makeCallableCallParam(0, arity1-2));\n                callVaryMethod.parameter(makeCallableVaryParam(0, arity1-1));\n                break;\n            case 3:\n                callVaryMethod.parameter(makeCallableCallParam(0, arity1-3));\n                callVaryMethod.parameter(makeCallableCallParam(0, arity1-2));\n                callVaryMethod.parameter(makeCallableVaryParam(0, arity1-1));\n                break;\n            case 2:\n                callVaryMethod.parameter(makeCallableCallParam(0, arity1-2));\n                callVaryMethod.parameter(makeCallableVaryParam(0, arity1-1));\n                break;\n            case 1:\n                callVaryMethod.parameter(makeCallableVaryParam(0, arity1-1));\n                break;\n            case 0:\n                break;\n            default: // use varargs\n                callVaryMethod.parameter(makeCallableCallParam(Flags.VARARGS, 0));\n            }\n            \n            // Return the call result, or null if a void method\n            makeCallTypedCall(arity1, stmts, args.toList());\n            callVaryMethod.body(stmts.toList());\n            return callVaryMethod;\n        }","commit_id":"9761a7f56b626266458f29176edbb2bf34c02861","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private int makeSequencedArgument(final int arity,\n                ListBuffer<JCStatement> stmts, ListBuffer<JCExpression> args,\n                int a) {\n            ListBuffer<JCExpression> varargs = ListBuffer.<JCExpression>lb();\n            for (; a < arity; a++) {\n                Parameter param1 = paramLists.getParameters().get(Math.min(a, numParams-1));\n                if (arity < numParams - 1) {\n                    stmts.append(makeDowncastOrDefaultVar(\n                            getCallableTempVarName(param1, forwardCallTo), param1, a, arity, forwardCallTo));\n                } else {\n                    varargs.append(gen.make().Ident(makeParamName(gen, a)));\n                }\n            }\n            JCExpression varargsSequence;\n            if (varargs.isEmpty()) {\n                varargsSequence = gen.makeEmptyAsSequential(true);\n            } else {\n                varargsSequence = gen.makeSequence(varargs.toList(), \n                        getVariadicIteratedType(), 0);\n            }\n            SyntheticName vname = getCallableTempVarName(getVariadicParameter(), forwardCallTo).suffixedBy(\"$\");\n            args.append(vname.makeIdent());\n            stmts.append(makeVar(getVariadicParameter(), getVariadicType(), \n                    forwardCallTo, vname, varargsSequence));\n            return a;\n        }","id":4182,"modified_method":"private int makeSequencedArgument(final int arity,\n                ListBuffer<JCStatement> stmts, ListBuffer<JCExpression> args,\n                int a) {\n            ListBuffer<JCExpression> varargs = ListBuffer.<JCExpression>lb();\n            for (; a < arity; a++) {\n                Parameter param1 = paramLists.getParameters().get(Math.min(a, numParams-1));\n                if (arity < numParams - 1) {\n                    makeDowncastOrDefaultVar(stmts, \n                            getCallableTempVarName(param1, forwardCallTo), param1, a, arity, forwardCallTo);\n                } else {\n                    varargs.append(gen.make().Ident(makeParamName(gen, a)));\n                }\n            }\n            JCExpression varargsSequence;\n            if (varargs.isEmpty()) {\n                varargsSequence = gen.makeEmptyAsSequential(true);\n            } else {\n                varargsSequence = gen.makeSequence(varargs.toList(), \n                        getVariadicIteratedType(), 0);\n            }\n            SyntheticName vname = getCallableTempVarName(getVariadicParameter(), forwardCallTo).suffixedBy(\"$\");\n            args.append(vname.makeIdent());\n            makeVar(stmts, getVariadicParameter(), getVariadicType(), \n                    forwardCallTo, vname, varargsSequence);\n            return a;\n        }","commit_id":"9761a7f56b626266458f29176edbb2bf34c02861","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Override\n        MethodDefinitionBuilder makeMethod(int arity) {\n            if (arity < Math.min(getMinimumArguments(), CALLABLE_MAX_FIZED_ARITY+1)) {\n                return null;\n            }\n            if (usedBody) {\n                body = List.<JCStatement>of(gen.make().Exec(gen.makeErroneous(null, \"compiler bug: tree reuse detected\")));\n            }\n            usedBody = true;\n            ListBuffer<JCStatement> stmts = new ListBuffer<JCStatement>();\n            int a = 0;\n            for(Parameter param : paramLists.getParameters()){\n                // don't read default parameter values for forwarded calls\n                stmts.append(makeDowncastOrDefaultVar(getCallableTempVarName(param, null), param, a, arity, null));\n                a++;\n            }\n            return makeCallMethod(stmts.appendList(body).toList(), arity);\n        }","id":4183,"modified_method":"@Override\n        MethodDefinitionBuilder makeMethod(int arity) {\n            if (arity < Math.min(getMinimumArguments(), CALLABLE_MAX_FIZED_ARITY+1)) {\n                return null;\n            }\n            if (usedBody) {\n                body = List.<JCStatement>of(gen.make().Exec(gen.makeErroneous(null, \"compiler bug: tree reuse detected\")));\n            }\n            usedBody = true;\n            ListBuffer<JCStatement> stmts = new ListBuffer<JCStatement>();\n            int a = 0;\n            for(Parameter param : paramLists.getParameters()){\n                // don't read default parameter values for forwarded calls\n                makeDowncastOrDefaultVar(stmts, getCallableTempVarName(param, null), param, a, arity, null);\n                a++;\n            }\n            return makeCallMethod(stmts.appendList(body).toList(), arity);\n        }","commit_id":"9761a7f56b626266458f29176edbb2bf34c02861","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"/** \n     * Creates a builder for a explicit parameter (anything for which there's \n     * a Parameter model).\n     */\n    static ParameterDefinitionBuilder explicitParameter(AbstractTransformer gen, Parameter parameter) {\n        ParameterDefinitionBuilder pdb = new ParameterDefinitionBuilder(gen, parameter.getName());\n        if (parameter.getModel().isCaptured()\n                && parameter.getModel().isVariable()\n                && (!parameter.getModel().isClassOrInterfaceMember() || Decl.isLocalToInitializer(parameter.getModel()))\n                && !parameter.isHidden()) {\n            pdb.boxedVariable = parameter.getModel();\n        }\n        \n        return pdb;\n    }","id":4184,"modified_method":"/** \n     * Creates a builder for a explicit parameter (anything for which there's \n     * a Parameter model).\n     */\n    static ParameterDefinitionBuilder explicitParameter(AbstractTransformer gen, Parameter parameter) {\n        ParameterDefinitionBuilder pdb = new ParameterDefinitionBuilder(gen, parameter.getName());\n        if (isBoxedVariableParameter(parameter)) {\n            pdb.boxedVariable = parameter.getModel();\n        }\n        \n        return pdb;\n    }","commit_id":"9761a7f56b626266458f29176edbb2bf34c02861","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private void handleStateChange(ConnectionState newState) {\n        switch (newState) {\n            case SUSPENDED:\n            case LOST: {\n                clear();\n                offerOperation(new EventOperation(this, GroupListener.GroupEvent.DISCONNECTED));\n                break;\n            }\n\n            case CONNECTED:\n            case RECONNECTED: {\n                offerOperation(new UpdateOperation<T>(this, state));\n                offerOperation(new RefreshOperation(this, RefreshMode.FORCE_GET_DATA_AND_STAT));\n                offerOperation(new EventOperation(this, GroupListener.GroupEvent.CONNECTED));\n                break;\n            }\n        }\n    }","id":4185,"modified_method":"private void handleStateChange(ConnectionState newState) {\n        switch (newState) {\n            case SUSPENDED:\n            case LOST: {\n                clear();\n                offerOperation(new EventOperation(this, GroupListener.GroupEvent.DISCONNECTED));\n                break;\n            }\n\n            case CONNECTED:\n            case RECONNECTED: {\n                offerOperation(new RefreshOperation(this, RefreshMode.FORCE_GET_DATA_AND_STAT));\n                offerOperation(new UpdateOperation<T>(this, state));\n                offerOperation(new EventOperation(this, GroupListener.GroupEvent.CONNECTED));\n                break;\n            }\n        }\n    }","commit_id":"d365764d0dc19eddbe3594769fa9fe192382e49c","url":"https://github.com/fabric8io/fabric8"},{"original_method":"void getDataAndStat(final String fullPath) throws Exception {\n        BackgroundCallback getDataCallback = new BackgroundCallback() {\n            @Override\n            public void processResult(CuratorFramework client, CuratorEvent event) throws Exception {\n                applyNewData(fullPath, event.getResultCode(), event.getStat(), event.getData());\n            }\n        };\n\n        client.getData().usingWatcher(dataWatcher).inBackground(getDataCallback).forPath(fullPath);\n    }","id":4186,"modified_method":"void getDataAndStat(final String fullPath) throws Exception {\n        Stat stat = new Stat();\n        byte[] data = client.getData().storingStatIn(stat).usingWatcher(dataWatcher).forPath(fullPath);\n        applyNewData(fullPath, KeeperException.Code.OK.intValue(), stat, data);\n    }","commit_id":"d365764d0dc19eddbe3594769fa9fe192382e49c","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\n    public void update(T state) {\n        T oldState = this.state;\n        this.state = state;\n        if (state != null) {\n            this.state.setSession(session);\n        }\n        if (started.get()) {\n            boolean update = state == null && oldState != null\n                        ||   state != null && oldState == null\n                        || !Arrays.equals(encode(state), encode(oldState));\n            if (update) {\n                offerOperation(new UpdateOperation<T>(this, state));\n            }\n        }\n    }","id":4187,"modified_method":"@Override\n    public void update(T state) {\n        T oldState = this.state;\n        this.state = state;\n        if (state != null) {\n            this.state.setSession(session);\n        }\n        if (started.get()) {\n            boolean update = state == null && oldState != null\n                        ||   state != null && oldState == null\n                        || !Arrays.equals(encode(state), encode(oldState));\n            if (update) {\n                offerOperation(new RefreshOperation(this, RefreshMode.FORCE_GET_DATA_AND_STAT));\n                offerOperation(new UpdateOperation<T>(this, state));\n            }\n        }\n    }","commit_id":"d365764d0dc19eddbe3594769fa9fe192382e49c","url":"https://github.com/fabric8io/fabric8"},{"original_method":"protected void doUpdate(T state) throws Exception {\n        if (isConnected()) {\n            if (state == null) {\n                if (id != null) {\n                    try {\n                        client.delete().guaranteed().forPath(id);\n                    } catch (KeeperException.NoNodeException e) {\n                        // Ignore\n                    } finally {\n                        id = null;\n                    }\n                }\n            } else {\n\n                if (id == null) {\n                    // We could have created the sequence, but then have crashed and our entry is already registered,\n                    // find out by looking up entry by the matching uuid.\n                    Map<String, T> members = members();\n                    for (Map.Entry<String, T> entry : members.entrySet()) {\n                        T v = entry.getValue();\n                        if( session.equals(v.getSession()) && state.getContainer().equals(v.getContainer()) ) {\n                            id = entry.getKey();\n                            return;\n                        }\n                    }\n                }\n\n                if (id == null) {\n                    id = client.create().creatingParentsIfNeeded()\n                        .withMode(CreateMode.EPHEMERAL_SEQUENTIAL)\n                        .forPath(path + \"/0\", encode(state));\n                } else {\n                    try {\n                        client.setData().forPath(id, encode(state));\n                    } catch (KeeperException.NoNodeException e) {\n                        id = client.create().creatingParentsIfNeeded()\n                                .withMode(CreateMode.EPHEMERAL_SEQUENTIAL)\n                                .forPath(path + \"/0\", encode(state));\n                    }\n                }\n            }\n        }\n    }","id":4188,"modified_method":"protected void doUpdate(T state) throws Exception {\n        if (isConnected()) {\n            if (state == null) {\n                if (id != null) {\n                    try {\n                        client.delete().guaranteed().forPath(id);\n                    } catch (KeeperException.NoNodeException e) {\n                        // Ignore\n                    } finally {\n                        id = null;\n                    }\n                }\n            } else {\n                if (id == null) {\n                    //We explicitly refresh to prevent members() from returning stale data.\n                    refresh(RefreshMode.FORCE_GET_DATA_AND_STAT);\n                    // We could have created the sequence, but then have crashed and our entry is already registered,\n                    // find out by looking up entry by the matching uuid.\n                    Map<String, T> members = members();\n                    for (Map.Entry<String, T> entry : members.entrySet()) {\n                        T v = entry.getValue();\n                        if( session.equals(v.getSession()) && state.getContainer().equals(v.getContainer()) ) {\n                            id = entry.getKey();\n                            return;\n                        }\n                    }\n                }\n\n                if (id == null) {\n                    id = client.create().creatingParentsIfNeeded()\n                        .withMode(CreateMode.EPHEMERAL_SEQUENTIAL)\n                        .forPath(path + \"/0\", encode(state));\n                } else {\n                    try {\n                        client.setData().forPath(id, encode(state));\n                    } catch (KeeperException.NoNodeException e) {\n                        id = client.create().creatingParentsIfNeeded()\n                                .withMode(CreateMode.EPHEMERAL_SEQUENTIAL)\n                                .forPath(path + \"/0\", encode(state));\n                    }\n                }\n            }\n        }\n    }","commit_id":"d365764d0dc19eddbe3594769fa9fe192382e49c","url":"https://github.com/fabric8io/fabric8"},{"original_method":"void refresh(final String path, final RefreshMode mode) throws Exception\n    {\n        ensurePath.ensure(client.getZookeeperClient());\n\n        final BackgroundCallback callback = new BackgroundCallback()\n        {\n            @Override\n            public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n            {\n                processChildren(path, event.getChildren(), mode);\n                updateIfNeeded(path, event.getStat());\n            }\n        };\n        client.getChildren().usingWatcher(watcher).inBackground(callback).forPath(path);\n    }","id":4189,"modified_method":"void refresh(final String path, final RefreshMode mode) throws Exception\n    {\n        ensurePath.ensure(client.getZookeeperClient());\n        Stat stat = new Stat();\n        List<String> children = client.getChildren().storingStatIn(stat).usingWatcher(watcher).forPath(path);\n        processChildren(path, children, mode);\n        updateIfNeeded(path, stat, children);\n    }","commit_id":"226c8dc83e215e80ffcb4c879b4871af43a36b92","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private void updateIfNeeded(String path, Stat stat) throws Exception {\n        TreeData data = currentData.getIfPresent(path);\n        if (data != null && stat != null) {\n            long cachedId = getZkTxId(data.getStat());\n            long currentId = getZkTxId(stat);\n            if (currentId > cachedId) {\n                getDataAndStat(path);\n                offerOperation(new TreeRefreshOperation(this, path, RefreshMode.FORCE_GET_DATA_AND_STAT));\n            }\n        }\n    }","id":4190,"modified_method":"private void updateIfNeeded(String path, Stat stat, List<String> children) throws Exception {\n        TreeData data = currentData.getIfPresent(path);\n        if (data != null && stat != null) {\n            if (stat.getMzxid() > data.getStat().getMzxid()) {\n                    applyNewData(path, KeeperException.Code.OK.intValue(), stat, data.getData(), children);\n            }\n        }\n    }","commit_id":"226c8dc83e215e80ffcb4c879b4871af43a36b92","url":"https://github.com/fabric8io/fabric8"},{"original_method":"void getDataAndStat(final String fullPath) throws Exception\n    {\n        if (client.checkExists().forPath(fullPath) == null) {\n            return;\n        }\n\n        final List<String> children = client.getChildren().usingWatcher(watcher).forPath(fullPath);\n\n        BackgroundCallback existsCallback = new BackgroundCallback()\n        {\n            @Override\n            public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n            {\n                applyNewData(fullPath, event.getResultCode(), event.getStat(), null, children);\n            }\n        };\n\n        BackgroundCallback getDataCallback = new BackgroundCallback()\n        {\n            @Override\n            public void processResult(CuratorFramework client, CuratorEvent event) throws Exception\n            {\n                applyNewData(fullPath, event.getResultCode(), event.getStat(), event.getData(), children);\n            }\n        };\n\n        if ( cacheData )\n        {\n            if ( dataIsCompressed )\n            {\n                client.getData().decompressed().usingWatcher(watcher).inBackground(getDataCallback).forPath(fullPath);\n            }\n            else\n            {\n                client.getData().usingWatcher(watcher).inBackground(getDataCallback).forPath(fullPath);\n            }\n        }\n        else\n        {\n            client.checkExists().usingWatcher(watcher).inBackground(existsCallback).forPath(fullPath);\n        }\n    }","id":4191,"modified_method":"void getDataAndStat(final String fullPath) throws Exception\n    {\n        if (client.checkExists().forPath(fullPath) == null) {\n            return;\n        }\n\n        final List<String> children = client.getChildren().usingWatcher(watcher).forPath(fullPath);\n        if ( cacheData )\n        {\n            Stat stat = new Stat();\n            byte[] data = null;\n            if ( dataIsCompressed )\n            {\n                data = client.getData().decompressed().storingStatIn(stat).usingWatcher(watcher).forPath(fullPath);\n\n            }\n            else\n            {\n                data = client.getData().storingStatIn(stat).usingWatcher(watcher).forPath(fullPath);\n            }\n            applyNewData(fullPath, KeeperException.Code.OK.intValue(), stat, data, children);\n        }\n        else\n        {\n            Stat stat = client.checkExists().usingWatcher(watcher).forPath(fullPath);\n            applyNewData(fullPath, KeeperException.Code.OK.intValue(), stat, null, children);\n        }\n    }","commit_id":"226c8dc83e215e80ffcb4c879b4871af43a36b92","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private void buildSerializationMethods(ClassWriter cw, ClassDefinition classDef) {\n        MethodVisitor mv;\n        {\n            mv = cw.visitMethod(ACC_PUBLIC, \"writeExternal\", \"(Ljava/io/ObjectOutput;)V\", null, new String[]{\"java/io/IOException\"});\n            mv.visitCode();\n\n            for (  FieldDefinition field : classDef.getFieldsDefinitions() ) {\n\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitVarInsn( ALOAD, 0 );\n                visitFieldOrGetter( mv, classDef, field );\n                mv.visitMethodInsn( INVOKEINTERFACE, \n                                    \"java/io/ObjectOutput\", \n                                    BuildUtils.serializationWriterName( field.getTypeName() ),\n                                    \"(\" + ( BuildUtils.isPrimitive( field.getTypeName() ) ?\n                                            BuildUtils.getTypeDescriptor( BuildUtils.serializationType( field.getTypeName() ) ) :\n                                            \"Ljava/lang/Object;\" ) + \")V\");\n                               \n            }\n\n            if ( classDef.isTraitable() ) {\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( Opcodes.GETFIELD,\n                                   BuildUtils.getInternalType( classDef.getClassName() ),\n                                   TraitableBean.MAP_FIELD_NAME,\n                                   Type.getDescriptor( Map.class ) );\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    \"java/io/ObjectOutput\",\n                                    \"writeObject\",\n                                    \"(Ljava/lang/Object;)V\" );\n\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( Opcodes.GETFIELD,\n                                   BuildUtils.getInternalType( classDef.getClassName() ),\n                                   TraitableBean.TRAITSET_FIELD_NAME,\n                                   Type.getDescriptor( Map.class ) );\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    \"java/io/ObjectOutput\",\n                                    \"writeObject\",\n                                    \"(Ljava/lang/Object;)V\" );\n\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( Opcodes.GETFIELD,\n                                   BuildUtils.getInternalType( classDef.getClassName() ),\n                                   TraitableBean.FIELDTMS_FIELD_NAME,\n                                   Type.getDescriptor( TraitFieldTMS.class ) );\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    \"java/io/ObjectOutput\",\n                                    \"writeObject\",\n                                    \"(Ljava/lang/Object;)V\" );\n            }\n\n            mv.visitInsn(RETURN);\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n        {\n            mv = cw.visitMethod(ACC_PUBLIC, \"readExternal\", \"(Ljava/io/ObjectInput;)V\", null, new String[]{\"java/io/IOException\", \"java/lang/ClassNotFoundException\"});\n            mv.visitCode();\n\n            for (  FieldDefinition field : classDef.getFieldsDefinitions() ) {\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    \"java/io/ObjectInput\",\n                                    BuildUtils.serializationReaderName( field.getTypeName() ),\n                                    \"()\" + ( BuildUtils.isPrimitive( field.getTypeName() ) ?\n                                             BuildUtils.getTypeDescriptor( field.getTypeName() ) :\n                                             \"Ljava/lang/Object;\" ) );\n                if  ( !  BuildUtils.isPrimitive( field.getTypeName() ) ) {\n                    mv.visitTypeInsn( CHECKCAST, BuildUtils.getInternalType( field.getTypeName() ) );\n                }\n                mv.visitMethodInsn( INVOKEVIRTUAL,\n                                    BuildUtils.getInternalType( classDef.getName() ),\n                                    BuildUtils.setterName( field.getName(), field.getTypeName() ),\n                                    \"(\" + BuildUtils.getTypeDescriptor( field.getTypeName() )+ \")V\");\n            }\n\n            if ( classDef.isTraitable() ) {\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    \"java/io/ObjectInput\",\n                                    \"readObject\",\n                                    \"()Ljava/lang/Object;\");\n                mv.visitTypeInsn( CHECKCAST, \"java/util/Map\" );\n                mv.visitFieldInsn( Opcodes.PUTFIELD,\n                                   BuildUtils.getInternalType( classDef.getClassName() ),\n                                   TraitableBean.MAP_FIELD_NAME,\n                                   Type.getDescriptor( Map.class ) );\n//\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    \"java/io/ObjectInput\",\n                                    \"readObject\",\n                                    \"()Ljava/lang/Object;\");\n                mv.visitTypeInsn( CHECKCAST, \"java/util/Map\" );\n                mv.visitFieldInsn( Opcodes.PUTFIELD,\n                                   BuildUtils.getInternalType( classDef.getClassName() ),\n                                   TraitableBean.TRAITSET_FIELD_NAME,\n                                   Type.getDescriptor( Map.class ) );\n\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    \"java/io/ObjectInput\",\n                                    \"readObject\",\n                                    \"()Ljava/lang/Object;\");\n                mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitFieldTMS.class ) );\n                mv.visitFieldInsn( Opcodes.PUTFIELD,\n                                   BuildUtils.getInternalType( classDef.getClassName() ),\n                                   TraitableBean.FIELDTMS_FIELD_NAME,\n                                   Type.getDescriptor( TraitFieldTMS.class ) );\n            }\n\n            mv.visitInsn( RETURN );\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n\n    }","id":4192,"modified_method":"private void buildSerializationMethods(ClassWriter cw, ClassDefinition classDef) {\n        MethodVisitor mv;\n        {\n            mv = cw.visitMethod(ACC_PUBLIC, \"writeExternal\", \"(Ljava/io/ObjectOutput;)V\", null, new String[]{\"java/io/IOException\"});\n            mv.visitCode();\n\n            for (  FieldDefinition field : classDef.getFieldsDefinitions() ) {\n\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitVarInsn( ALOAD, 0 );\n                visitFieldOrGetter( mv, classDef, field );\n                mv.visitMethodInsn( INVOKEINTERFACE, \n                                    \"java/io/ObjectOutput\", \n                                    BuildUtils.serializationWriterName( field.getTypeName() ),\n                                    \"(\" + ( BuildUtils.isPrimitive( field.getTypeName() ) ?\n                                            BuildUtils.getTypeDescriptor( BuildUtils.serializationType( field.getTypeName() ) ) :\n                                            \"Ljava/lang/Object;\" ) + \")V\");\n                               \n            }\n\n            if ( classDef.isTraitable() ) {\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( Opcodes.GETFIELD,\n                                   BuildUtils.getInternalType( classDef.getClassName() ),\n                                   TraitableBean.MAP_FIELD_NAME,\n                                   Type.getDescriptor( Map.class ) );\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    \"java/io/ObjectOutput\",\n                                    \"writeObject\",\n                                    \"(Ljava/lang/Object;)V\" );\n\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( Opcodes.GETFIELD,\n                                   BuildUtils.getInternalType( classDef.getClassName() ),\n                                   TraitableBean.TRAITSET_FIELD_NAME,\n                                   Type.getDescriptor( Map.class ) );\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    \"java/io/ObjectOutput\",\n                                    \"writeObject\",\n                                    \"(Ljava/lang/Object;)V\" );\n\n                if ( classDef.isFullTraiting() ) {\n                    mv.visitVarInsn( ALOAD, 1 );\n                    mv.visitVarInsn( ALOAD, 0 );\n                    mv.visitFieldInsn( Opcodes.GETFIELD,\n                                       BuildUtils.getInternalType( classDef.getClassName() ),\n                                       TraitableBean.FIELDTMS_FIELD_NAME,\n                                       Type.getDescriptor( TraitFieldTMS.class ) );\n                    mv.visitMethodInsn( INVOKEINTERFACE,\n                                        \"java/io/ObjectOutput\",\n                                        \"writeObject\",\n                                        \"(Ljava/lang/Object;)V\" );\n                }\n            }\n\n            mv.visitInsn(RETURN);\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n        {\n            mv = cw.visitMethod(ACC_PUBLIC, \"readExternal\", \"(Ljava/io/ObjectInput;)V\", null, new String[]{\"java/io/IOException\", \"java/lang/ClassNotFoundException\"});\n            mv.visitCode();\n\n            for (  FieldDefinition field : classDef.getFieldsDefinitions() ) {\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    \"java/io/ObjectInput\",\n                                    BuildUtils.serializationReaderName( field.getTypeName() ),\n                                    \"()\" + ( BuildUtils.isPrimitive( field.getTypeName() ) ?\n                                             BuildUtils.getTypeDescriptor( field.getTypeName() ) :\n                                             \"Ljava/lang/Object;\" ) );\n                if  ( !  BuildUtils.isPrimitive( field.getTypeName() ) ) {\n                    mv.visitTypeInsn( CHECKCAST, BuildUtils.getInternalType( field.getTypeName() ) );\n                }\n                mv.visitMethodInsn( INVOKEVIRTUAL,\n                                    BuildUtils.getInternalType( classDef.getName() ),\n                                    BuildUtils.setterName( field.getName(), field.getTypeName() ),\n                                    \"(\" + BuildUtils.getTypeDescriptor( field.getTypeName() )+ \")V\");\n            }\n\n            if ( classDef.isTraitable() ) {\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    \"java/io/ObjectInput\",\n                                    \"readObject\",\n                                    \"()Ljava/lang/Object;\");\n                mv.visitTypeInsn( CHECKCAST, \"java/util/Map\" );\n                mv.visitFieldInsn( Opcodes.PUTFIELD,\n                                   BuildUtils.getInternalType( classDef.getClassName() ),\n                                   TraitableBean.MAP_FIELD_NAME,\n                                   Type.getDescriptor( Map.class ) );\n//\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKEINTERFACE,\n                                    \"java/io/ObjectInput\",\n                                    \"readObject\",\n                                    \"()Ljava/lang/Object;\");\n                mv.visitTypeInsn( CHECKCAST, \"java/util/Map\" );\n                mv.visitFieldInsn( Opcodes.PUTFIELD,\n                                   BuildUtils.getInternalType( classDef.getClassName() ),\n                                   TraitableBean.TRAITSET_FIELD_NAME,\n                                   Type.getDescriptor( Map.class ) );\n\n                if ( classDef.isFullTraiting() ) {\n                    mv.visitVarInsn( ALOAD, 0 );\n                    mv.visitVarInsn( ALOAD, 1 );\n                    mv.visitMethodInsn( INVOKEINTERFACE,\n                                        \"java/io/ObjectInput\",\n                                        \"readObject\",\n                                        \"()Ljava/lang/Object;\");\n                    mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitFieldTMS.class ) );\n                    mv.visitFieldInsn( Opcodes.PUTFIELD,\n                                       BuildUtils.getInternalType( classDef.getClassName() ),\n                                       TraitableBean.FIELDTMS_FIELD_NAME,\n                                       Type.getDescriptor( TraitFieldTMS.class ) );\n                }\n            }\n\n            mv.visitInsn( RETURN );\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n\n    }","commit_id":"b7393433dec4769cfaa49bada2d3bc71eb4bf192","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public byte[] buildClass( ClassDefinition core ) throws IOException,\n            IntrospectionException,\n            SecurityException,\n            IllegalArgumentException,\n            ClassNotFoundException,\n            NoSuchMethodException,\n            IllegalAccessException,\n            InvocationTargetException,\n            InstantiationException,\n            NoSuchFieldException {\n\n\n        Class coreKlazz = core.getDefinedClass();\n        String coreName = coreKlazz.getName();\n        String wrapperName = coreName + \"Wrapper\";\n\n        ClassWriter cw = new ClassWriter( ClassWriter.COMPUTE_MAXS );\n        FieldVisitor fv;\n        MethodVisitor mv;\n\n        cw.visit( ClassGenerator.JAVA_VERSION, ACC_PUBLIC + ACC_SUPER,\n                BuildUtils.getInternalType( wrapperName ),\n                BuildUtils.getTypeDescriptor( coreName ) +\n                        \"Lorg/drools/factmodel/traits/CoreWrapper<\" + BuildUtils.getTypeDescriptor( coreName ) + \">;\",\n                BuildUtils.getInternalType( coreName ),\n                new String[] { Type.getInternalName( CoreWrapper.class ), Type.getInternalName( Externalizable.class ) } );\n\n        {\n            AnnotationVisitor av0 = cw.visitAnnotation( Type.getDescriptor( Traitable.class ), true );\n            av0.visit( \"logical\", core.isFullTraiting() );\n        }\n\n        {\n            fv = cw.visitField( ACC_PRIVATE, \"core\", BuildUtils.getTypeDescriptor( coreName ), null, null);\n            fv.visitEnd();\n        }\n        {\n            fv = cw.visitField( ACC_PRIVATE, TraitableBean.MAP_FIELD_NAME, Type.getDescriptor( Map.class ), \"Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;\", null );\n            fv.visitEnd();\n        }\n        {\n            fv = cw.visitField( ACC_PRIVATE, TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ), \"Ljava/util/Map<Ljava/lang/String;Lorg/drools/factmodel/traits/Thing;>;\", null );\n            fv.visitEnd();\n        }\n        {\n            fv = cw.visitField( ACC_PRIVATE, TraitableBean.FIELDTMS_FIELD_NAME, Type.getDescriptor( TraitFieldTMS.class ), null, null );\n            fv.visitEnd();\n        }\n\n        {\n            mv = cw.visitMethod( ACC_PUBLIC, \"<init>\", \"()V\", null, null );\n            mv.visitCode();\n\n            try {\n                coreKlazz.getConstructor();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn( INVOKESPECIAL, BuildUtils.getInternalType( coreName ), \"<init>\", \"()V\" );\n            } catch ( NoSuchMethodException nsme ) {\n                Constructor con = coreKlazz.getConstructors()[ 0 ];\n                Class[] params = con.getParameterTypes();\n\n                mv.visitVarInsn( ALOAD, 0 );\n                for ( Class param : params ) {\n                    mv.visitInsn( BuildUtils.zero( param.getName() ) );\n                }\n                mv.visitMethodInsn( INVOKESPECIAL,\n                                    BuildUtils.getInternalType( coreName ),\n                                    \"<init>\",\n                                    Type.getConstructorDescriptor( con ) );\n            }\n\n\n//            mv.visitVarInsn( ALOAD, 0 );\n//            mv.visitTypeInsn( NEW, Type.getInternalName( HashMap.class ) );\n//            mv.visitInsn( DUP );\n//            mv.visitMethodInsn( INVOKESPECIAL, Type.getInternalName( HashMap.class ), \"<init>\", \"()V\" );\n//            mv.visitFieldInsn( PUTFIELD,\n//                    BuildUtils.getInternalType( wrapperName ),\n//                    TraitableBean.MAP_FIELD_NAME,\n//                    Type.getDescriptor( Map.class ) );\n\n//            mv.visitVarInsn( ALOAD, 0 );\n//            mv.visitTypeInsn( NEW, Type.getInternalName( VetoableTypedMap.class ) );\n//            mv.visitInsn( DUP );\n//            mv.visitTypeInsn( NEW, Type.getInternalName( HashMap.class ) );\n//            mv.visitInsn( DUP );\n//            mv.visitMethodInsn( INVOKESPECIAL, Type.getInternalName( HashMap.class ), \"<init>\", \"()V\" );\n//            mv.visitMethodInsn( INVOKESPECIAL, Type.getInternalName( VetoableTypedMap.class ), \"<init>\", \"(\" + Type.getDescriptor( Map.class ) + \")V\" );\n//            mv.visitFieldInsn( PUTFIELD,\n//                    BuildUtils.getInternalType( wrapperName ),\n//                    TraitableBean.TRAITSET_FIELD_NAME,\n//                    Type.getDescriptor( Map.class ) );\n\n            mv.visitInsn( RETURN );\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"getCore\" ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"getCore\", \"()\" + Type.getDescriptor( Object.class ), \"()\"+BuildUtils.getTypeDescriptor( coreName ), null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD,\n                        BuildUtils.getInternalType( wrapperName ),\n                        \"core\",\n                        BuildUtils.getTypeDescriptor( coreName ));\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"_getDynamicProperties\" ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"_getDynamicProperties\", \"()\" + Type.getDescriptor( Map.class ), \"()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;\", null);\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD,\n                        BuildUtils.getInternalType( wrapperName ),\n                        TraitableBean.MAP_FIELD_NAME,\n                        Type.getDescriptor( Map.class ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n\n                mv = cw.visitMethod( ACC_PUBLIC,\n                        \"_setDynamicProperties\",\n                        \"(\" + Type.getDescriptor( Map.class ) + \")V\",\n                        \"(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V\",\n                        null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.MAP_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                mv.visitInsn( RETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"_getTraitMap\" ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"_getTraitMap\", \"()\" + Type.getDescriptor( Map.class ),\n                        \"()Ljava/util/Map<Ljava/lang/String;Lorg/drools/factmodel/traits/Thing;>;\", null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                Label l0 = new Label();\n                mv.visitJumpInsn( IFNULL, l0 );\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                mv.visitFieldInsn( GETSTATIC, Type.getInternalName( Collections.class ), \"EMPTY_MAP\", Type.getDescriptor( Map.class ) );\n                Label l1 = new Label();\n                mv.visitJumpInsn( IF_ACMPNE, l1 );\n                mv.visitLabel( l0 );\n\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitTypeInsn( NEW, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitInsn( DUP );\n                mv.visitTypeInsn( NEW, Type.getInternalName( HashMap.class ) );\n                mv.visitInsn( DUP );\n                mv.visitMethodInsn( INVOKESPECIAL, Type.getInternalName( HashMap.class ), \"<init>\", \"()V\" );\n                mv.visitMethodInsn( INVOKESPECIAL, Type.getInternalName( TraitTypeMap.class ), \"<init>\", \"(\" + Type.getDescriptor( Map.class ) + \")V\" );\n                mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                mv.visitLabel( l1 );\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"setTraitMap\", Map.class ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"setTraitMap\", \"(Ljava/util/Map;)V\", null, null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitTypeInsn( NEW, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitInsn( DUP );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKESPECIAL, Type.getInternalName( TraitTypeMap.class ), \"<init>\", \"(\" + Type.getDescriptor( Map.class ) + \")V\" );\n                mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                mv.visitInsn( RETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"addTrait\", String.class, Thing.class ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"addTrait\",\n                        \"(\" + Type.getDescriptor( String.class ) + Type.getDescriptor( Thing.class ) + \")V\",\n                        \"(\" + Type.getDescriptor( String.class ) + Type.getDescriptor( Thing.class ) + \")V\",\n                        null);\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, BuildUtils.getInternalType( wrapperName ), \"_getTraitMap\", \"()\" + Type.getDescriptor( Map.class ) );\n                mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitVarInsn( ALOAD, 2 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, Type.getInternalName( TraitTypeMap.class ), \"putSafe\",\n                        \"(\" + Type.getDescriptor( String.class ) + Type.getDescriptor( Thing.class ) + \")\" + Type.getDescriptor( Thing.class ) );\n                mv.visitInsn( POP );\n                mv.visitInsn( RETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"getTrait\", String.class ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"getTrait\",\n                        \"(\" + Type.getDescriptor( String.class ) + \")\" + Type.getDescriptor( Thing.class ),\n                        \"(\" + Type.getDescriptor( String.class ) + \")\" + Type.getDescriptor( Thing.class ),\n                        null );\n                mv.visitCode();\n                mv.visitVarInsn(ALOAD, 0);\n                mv.visitMethodInsn(INVOKEVIRTUAL, BuildUtils.getInternalType(wrapperName), \"_getTraitMap\", \"()\" + Type.getDescriptor(Map.class));\n                mv.visitVarInsn(ALOAD, 1);\n                mv.visitMethodInsn(INVOKEINTERFACE, Type.getInternalName(Map.class), \"get\",\n                        \"(\" + Type.getDescriptor(Object.class) + \")\" + Type.getDescriptor(Object.class));\n                mv.visitTypeInsn(CHECKCAST, Type.getInternalName(Thing.class));\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"hasTraits\" ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC,\n                                     \"hasTraits\",\n                                     Type.getMethodDescriptor( Type.getType( boolean.class ), new Type[] {} ),\n                                     null,\n                                     null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn(INVOKEVIRTUAL, BuildUtils.getInternalType(wrapperName), \"_getTraitMap\", \"()\" + Type.getDescriptor(Map.class));\n                Label l5 = new Label();\n                mv.visitJumpInsn( IFNULL, l5 );\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn(INVOKEVIRTUAL, BuildUtils.getInternalType(wrapperName), \"_getTraitMap\", \"()\" + Type.getDescriptor(Map.class));\n                mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( Map.class ), \"isEmpty\", Type.getMethodDescriptor( Type.BOOLEAN_TYPE, new Type[] {} ) );\n                mv.visitJumpInsn( IFNE, l5 );\n                mv.visitInsn( ICONST_1 );\n                Label l4 = new Label();\n                mv.visitJumpInsn( GOTO, l4 );\n                mv.visitLabel( l5 );\n                mv.visitInsn( ICONST_0 );\n                mv.visitLabel( l4 );\n                mv.visitInsn( IRETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"hasTrait\", String.class ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"hasTrait\", \"(\" + Type.getDescriptor( String.class )+ \")Z\", null, null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, BuildUtils.getInternalType( wrapperName ), \"_getTraitMap\", \"()\" + Type.getDescriptor( Map.class ) );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( Map.class ), \"containsKey\", \"(\" + Type.getDescriptor( Object.class ) + \")Z\" );\n                mv.visitInsn( IRETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"removeTrait\", String.class ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"removeTrait\",\n                        Type.getMethodDescriptor( Type.getType( Collection.class ), new Type[] { Type.getType( String.class ) } ),\n                        Type.getMethodDescriptor( Type.getType( Collection.class ), new Type[] { Type.getType( String.class ) } ),\n                        null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, BuildUtils.getInternalType( wrapperName ), \"_getTraitMap\", Type.getMethodDescriptor( Type.getType( Map.class ), new Type[] {} ) );\n                mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitVarInsn(ALOAD, 1);\n                mv.visitMethodInsn( INVOKEVIRTUAL, Type.getInternalName( TraitTypeMap.class ), \"removeCascade\",\n                        Type.getMethodDescriptor( Type.getType( Collection.class ), new Type[] { Type.getType( String.class )} ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n\n                mv = cw.visitMethod( ACC_PUBLIC, \"removeTrait\",\n                        Type.getMethodDescriptor( Type.getType( Collection.class ), new Type[] { Type.getType( BitSet.class ) } ),\n                        Type.getMethodDescriptor( Type.getType( Collection.class ), new Type[] { Type.getType( BitSet.class ) } ),\n                        null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, BuildUtils.getInternalType( wrapperName ), \"_getTraitMap\", Type.getMethodDescriptor( Type.getType( Map.class ), new Type[] {} ) );\n                mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitVarInsn(ALOAD, 1);\n                mv.visitMethodInsn( INVOKEVIRTUAL, Type.getInternalName( TraitTypeMap.class ), \"removeCascade\",\n                        Type.getMethodDescriptor( Type.getType( Collection.class ), new Type[] { Type.getType( BitSet.class )} ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"getTraits\" ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"getTraits\", \"()\" + Type.getDescriptor( Collection.class ), \"()Ljava/util/Collection<Ljava/lang/String;>;\", null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, BuildUtils.getInternalType( wrapperName ), \"_getTraitMap\", \"()\" + Type.getDescriptor( Map.class ) );\n                mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( Map.class ), \"keySet\", \"()\" + Type.getDescriptor( Set.class ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"_setBottomTypeCode\" ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"_setBottomTypeCode\", \"(\" + Type.getDescriptor( BitSet.class )+ \")V\", null, null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME , Type.getDescriptor( Map.class ) );\n                mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, Type.getInternalName( TraitTypeMap.class ), \"setBottomCode\", \"(\" + Type.getDescriptor( BitSet.class ) + \")V\");\n                mv.visitInsn( RETURN );\n                mv.visitMaxs( 0,0 );\n                mv.visitEnd();\n            }\n        }\n\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"getCurrentTypeCode\" ) ) {\n\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"getCurrentTypeCode\", \"()\" + Type.getDescriptor( BitSet.class ), null, null );\n                mv.visitCode();\n\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD,\n                                   BuildUtils.getInternalType( wrapperName ),\n                                   TraitableBean.TRAITSET_FIELD_NAME,\n                                   Type.getDescriptor( Map.class ) );\n                Label l3 = new Label();\n                mv.visitJumpInsn( IFNONNULL, l3 );\n                mv.visitInsn( ACONST_NULL );\n                mv.visitInsn( ARETURN );\n                mv.visitLabel( l3 );\n\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD,\n                        BuildUtils.getInternalType( wrapperName ),\n                        TraitableBean.TRAITSET_FIELD_NAME,\n                        Type.getDescriptor( Map.class ) );\n                mv.visitTypeInsn( CHECKCAST,\n                        Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitMethodInsn( INVOKEVIRTUAL,\n                        Type.getInternalName( TraitTypeMap.class ),\n                        \"getCurrentTypeCode\",\n                        \"()\" + Type.getDescriptor( BitSet.class ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"getMostSpecificTraits\" ) ) {\n\n            {\n                mv = cw.visitMethod( ACC_PUBLIC,\n                        \"getMostSpecificTraits\",\n                        \"()\" + Type.getDescriptor( Collection.class ),\n                        \"()Ljava/util/Collection<Lorg/drools/factmodel/traits/Thing;>;\",\n                        null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ),\n                        TraitableBean.TRAITSET_FIELD_NAME ,\n                        Type.getDescriptor( Map.class ) );\n                mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitMethodInsn( INVOKEVIRTUAL,\n                        Type.getInternalName( TraitTypeMap.class ),\n                        \"getMostSpecificTraits\",\n                        \"()\" + Type.getDescriptor( Collection.class ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n\n            }\n        }\n\n\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"_getFieldTMS\", TraitFieldTMS.class ) ) {\n            {\n                mv = cw.visitMethod( Opcodes.ACC_PUBLIC,\n                                     \"_getFieldTMS\",\n                                     Type.getMethodDescriptor( Type.getType( TraitFieldTMS.class ), new Type[] {} ),\n                                     null,\n                                     null);\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.FIELDTMS_FIELD_NAME, Type.getDescriptor( TraitFieldTMS.class ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n\n            }\n        }\n\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"_setFieldTMS\", TraitFieldTMS.class ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC,\n                                     \"_setFieldTMS\",\n                                     Type.getMethodDescriptor( Type.VOID_TYPE, new Type[] { Type.getType( TraitFieldTMS.class ) } ),\n                                     null,\n                                     null);\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitFieldInsn ( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.FIELDTMS_FIELD_NAME, Type.getDescriptor( TraitFieldTMS.class ) );\n                mv.visitInsn( RETURN) ;\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n\n\n\n        {\n            mv = cw.visitMethod( ACC_PUBLIC, \"writeExternal\", \"(\" + Type.getDescriptor( ObjectOutput.class ) + \")V\", null, new String[] { Type.getInternalName( IOException.class ) } );\n            mv.visitCode();\n\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitMethodInsn( INVOKEVIRTUAL, BuildUtils.getInternalType( wrapperName ), \"getCore\", \"()\" + Type.getDescriptor( Object.class ) );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectOutput.class ), \"writeObject\", \"(\" + Type.getDescriptor( Object.class ) + \")V\" );\n\n\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.MAP_FIELD_NAME, Type.getDescriptor( Map.class ) );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectOutput.class ), \"writeObject\", \"(\" + Type.getDescriptor( Object.class ) + \")V\" );\n\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectOutput.class ), \"writeObject\", \"(\" + Type.getDescriptor( Object.class ) + \")V\" );\n\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.FIELDTMS_FIELD_NAME, Type.getDescriptor( Map.class ) );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectOutput.class ), \"writeObject\", \"(\" + Type.getDescriptor( Object.class ) + \")V\" );\n\n            mv.visitInsn( RETURN );\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n        {\n            mv = cw.visitMethod( ACC_PUBLIC, \"readExternal\", \"(\" + Type.getDescriptor( ObjectInput.class ) + \")V\", null,\n                    new String[] { Type.getInternalName( IOException.class ), Type.getInternalName( ClassNotFoundException.class ) } );\n            mv.visitCode();\n\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectInput.class ), \"readObject\", \"()\" + Type.getDescriptor( Object.class ) );\n            mv.visitTypeInsn( CHECKCAST, BuildUtils.getInternalType( coreName ) );\n            mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), \"core\", BuildUtils.getTypeDescriptor( coreName ) );\n\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectInput.class ), \"readObject\", \"()\" + Type.getDescriptor( Object.class ) );\n            mv.visitTypeInsn( CHECKCAST, Type.getInternalName( Map.class ) );\n            mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.MAP_FIELD_NAME, Type.getDescriptor( Map.class ) );\n\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectInput.class ), \"readObject\", \"()\" + Type.getDescriptor( Object.class ) );\n            mv.visitTypeInsn( CHECKCAST, Type.getInternalName( Map.class ) );\n            mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectInput.class ), \"readObject\", \"()\" + Type.getDescriptor( Object.class ) );\n            mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitFieldTMS.class ) );\n            mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.FIELDTMS_FIELD_NAME, Type.getDescriptor( TraitFieldTMS.class ) );\n\n            mv.visitInsn( RETURN );\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n\n        {\n            mv = cw.visitMethod( ACC_PUBLIC, \"init\", \"(\"+ BuildUtils.getTypeDescriptor( coreName ) +\")V\", null, null );\n            mv.visitCode();\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitFieldInsn( PUTFIELD,\n                    BuildUtils.getInternalType( wrapperName ),\n                    \"core\",\n                    BuildUtils.getTypeDescriptor( coreName ) );\n\n            initializeDynamicTypeStructures( mv, wrapperName, core );\n\n            mv.visitInsn( RETURN );\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n\n\n        Method[] ms = coreKlazz.getMethods();\n        for ( Method method : ms ) {\n            if ( Modifier.isFinal( method.getModifiers() ) ) {\n                continue;\n            }\n\n            String signature = TraitFactory.buildSignature( method );\n            {\n                mv = cw.visitMethod( ACC_PUBLIC,\n                        method.getName(),\n                        signature,\n                        null,\n                        null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), \"core\", BuildUtils.getTypeDescriptor( coreName ) );\n\n                Label l0 = new Label();\n                    mv.visitJumpInsn( IFNONNULL, l0 );\n                    if ( method.getReturnType() == void.class ) {\n                        mv.visitInsn( RETURN );\n                    } else {\n                        mv.visitInsn( BuildUtils.zero( method.getReturnType().getName() ) );\n                        mv.visitInsn( BuildUtils.returnType( method.getReturnType().getName() ) );\n                    }\n                mv.visitLabel( l0 );\n\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), \"core\", BuildUtils.getTypeDescriptor( coreName ) );\n\n                int j = 1;\n                for ( Class arg : method.getParameterTypes() ) {\n                    mv.visitVarInsn( BuildUtils.varType( arg.getName() ), j++ );\n                }\n                mv.visitMethodInsn( INVOKEVIRTUAL,\n                        BuildUtils.getInternalType( coreName ),\n                        method.getName(),\n                        signature );\n\n                mv.visitInsn( BuildUtils.returnType( method.getReturnType().getName() ) );\n                int stack = TraitFactory.getStackSize( method );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n\n        }\n\n        {\n            mv = cw.visitMethod( ACC_PUBLIC + ACC_BRIDGE + ACC_SYNTHETIC, \"init\", \"(\" + Type.getDescriptor( Object.class ) + \")V\", null, null );\n            mv.visitCode();\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitTypeInsn( CHECKCAST, BuildUtils.getInternalType( coreName ) );\n            mv.visitMethodInsn( INVOKEVIRTUAL,\n                    BuildUtils.getInternalType( wrapperName ),\n                    \"init\",\n                    \"(\" + BuildUtils.getTypeDescriptor( coreName ) + \")V\" );\n            mv.visitInsn( RETURN );\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n\n        cw.visitEnd();\n\n        return cw.toByteArray();\n    }","id":4193,"modified_method":"public byte[] buildClass( ClassDefinition core ) throws IOException,\n            IntrospectionException,\n            SecurityException,\n            IllegalArgumentException,\n            ClassNotFoundException,\n            NoSuchMethodException,\n            IllegalAccessException,\n            InvocationTargetException,\n            InstantiationException,\n            NoSuchFieldException {\n\n\n        Class coreKlazz = core.getDefinedClass();\n        String coreName = coreKlazz.getName();\n        String wrapperName = coreName + \"Wrapper\";\n\n        ClassWriter cw = new ClassWriter( ClassWriter.COMPUTE_MAXS );\n        FieldVisitor fv;\n        MethodVisitor mv;\n\n        cw.visit( ClassGenerator.JAVA_VERSION, ACC_PUBLIC + ACC_SUPER,\n                BuildUtils.getInternalType( wrapperName ),\n                BuildUtils.getTypeDescriptor( coreName ) +\n                        \"Lorg/drools/factmodel/traits/CoreWrapper<\" + BuildUtils.getTypeDescriptor( coreName ) + \">;\",\n                BuildUtils.getInternalType( coreName ),\n                new String[] { Type.getInternalName( CoreWrapper.class ), Type.getInternalName( Externalizable.class ) } );\n\n        {\n            AnnotationVisitor av0 = cw.visitAnnotation( Type.getDescriptor( Traitable.class ), true );\n            av0.visit( \"logical\", core.isFullTraiting() );\n        }\n\n        {\n            fv = cw.visitField( ACC_PRIVATE, \"core\", BuildUtils.getTypeDescriptor( coreName ), null, null);\n            fv.visitEnd();\n        }\n        {\n            fv = cw.visitField( ACC_PRIVATE, TraitableBean.MAP_FIELD_NAME, Type.getDescriptor( Map.class ), \"Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;\", null );\n            fv.visitEnd();\n        }\n        {\n            fv = cw.visitField( ACC_PRIVATE, TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ), \"Ljava/util/Map<Ljava/lang/String;Lorg/drools/factmodel/traits/Thing;>;\", null );\n            fv.visitEnd();\n        }\n        {\n            fv = cw.visitField( ACC_PRIVATE, TraitableBean.FIELDTMS_FIELD_NAME, Type.getDescriptor( TraitFieldTMS.class ), null, null );\n            fv.visitEnd();\n        }\n\n        {\n            mv = cw.visitMethod( ACC_PUBLIC, \"<init>\", \"()V\", null, null );\n            mv.visitCode();\n\n            try {\n                coreKlazz.getConstructor();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn( INVOKESPECIAL, BuildUtils.getInternalType( coreName ), \"<init>\", \"()V\" );\n            } catch ( NoSuchMethodException nsme ) {\n                Constructor con = coreKlazz.getConstructors()[ 0 ];\n                Class[] params = con.getParameterTypes();\n\n                mv.visitVarInsn( ALOAD, 0 );\n                for ( Class param : params ) {\n                    mv.visitInsn( BuildUtils.zero( param.getName() ) );\n                }\n                mv.visitMethodInsn( INVOKESPECIAL,\n                                    BuildUtils.getInternalType( coreName ),\n                                    \"<init>\",\n                                    Type.getConstructorDescriptor( con ) );\n            }\n\n\n//            mv.visitVarInsn( ALOAD, 0 );\n//            mv.visitTypeInsn( NEW, Type.getInternalName( HashMap.class ) );\n//            mv.visitInsn( DUP );\n//            mv.visitMethodInsn( INVOKESPECIAL, Type.getInternalName( HashMap.class ), \"<init>\", \"()V\" );\n//            mv.visitFieldInsn( PUTFIELD,\n//                    BuildUtils.getInternalType( wrapperName ),\n//                    TraitableBean.MAP_FIELD_NAME,\n//                    Type.getDescriptor( Map.class ) );\n\n//            mv.visitVarInsn( ALOAD, 0 );\n//            mv.visitTypeInsn( NEW, Type.getInternalName( VetoableTypedMap.class ) );\n//            mv.visitInsn( DUP );\n//            mv.visitTypeInsn( NEW, Type.getInternalName( HashMap.class ) );\n//            mv.visitInsn( DUP );\n//            mv.visitMethodInsn( INVOKESPECIAL, Type.getInternalName( HashMap.class ), \"<init>\", \"()V\" );\n//            mv.visitMethodInsn( INVOKESPECIAL, Type.getInternalName( VetoableTypedMap.class ), \"<init>\", \"(\" + Type.getDescriptor( Map.class ) + \")V\" );\n//            mv.visitFieldInsn( PUTFIELD,\n//                    BuildUtils.getInternalType( wrapperName ),\n//                    TraitableBean.TRAITSET_FIELD_NAME,\n//                    Type.getDescriptor( Map.class ) );\n\n            mv.visitInsn( RETURN );\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"getCore\" ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"getCore\", \"()\" + Type.getDescriptor( Object.class ), \"()\"+BuildUtils.getTypeDescriptor( coreName ), null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD,\n                        BuildUtils.getInternalType( wrapperName ),\n                        \"core\",\n                        BuildUtils.getTypeDescriptor( coreName ));\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"_getDynamicProperties\" ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"_getDynamicProperties\", \"()\" + Type.getDescriptor( Map.class ), \"()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;\", null);\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD,\n                        BuildUtils.getInternalType( wrapperName ),\n                        TraitableBean.MAP_FIELD_NAME,\n                        Type.getDescriptor( Map.class ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n\n                mv = cw.visitMethod( ACC_PUBLIC,\n                        \"_setDynamicProperties\",\n                        \"(\" + Type.getDescriptor( Map.class ) + \")V\",\n                        \"(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V\",\n                        null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.MAP_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                mv.visitInsn( RETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"_getTraitMap\" ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"_getTraitMap\", \"()\" + Type.getDescriptor( Map.class ),\n                        \"()Ljava/util/Map<Ljava/lang/String;Lorg/drools/factmodel/traits/Thing;>;\", null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                Label l0 = new Label();\n                mv.visitJumpInsn( IFNULL, l0 );\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                mv.visitFieldInsn( GETSTATIC, Type.getInternalName( Collections.class ), \"EMPTY_MAP\", Type.getDescriptor( Map.class ) );\n                Label l1 = new Label();\n                mv.visitJumpInsn( IF_ACMPNE, l1 );\n                mv.visitLabel( l0 );\n\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitTypeInsn( NEW, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitInsn( DUP );\n                mv.visitTypeInsn( NEW, Type.getInternalName( HashMap.class ) );\n                mv.visitInsn( DUP );\n                mv.visitMethodInsn( INVOKESPECIAL, Type.getInternalName( HashMap.class ), \"<init>\", \"()V\" );\n                mv.visitMethodInsn( INVOKESPECIAL, Type.getInternalName( TraitTypeMap.class ), \"<init>\", \"(\" + Type.getDescriptor( Map.class ) + \")V\" );\n                mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                mv.visitLabel( l1 );\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"setTraitMap\", Map.class ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"setTraitMap\", \"(Ljava/util/Map;)V\", null, null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitTypeInsn( NEW, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitInsn( DUP );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKESPECIAL, Type.getInternalName( TraitTypeMap.class ), \"<init>\", \"(\" + Type.getDescriptor( Map.class ) + \")V\" );\n                mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                mv.visitInsn( RETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"addTrait\", String.class, Thing.class ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"addTrait\",\n                        \"(\" + Type.getDescriptor( String.class ) + Type.getDescriptor( Thing.class ) + \")V\",\n                        \"(\" + Type.getDescriptor( String.class ) + Type.getDescriptor( Thing.class ) + \")V\",\n                        null);\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, BuildUtils.getInternalType( wrapperName ), \"_getTraitMap\", \"()\" + Type.getDescriptor( Map.class ) );\n                mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitVarInsn( ALOAD, 2 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, Type.getInternalName( TraitTypeMap.class ), \"putSafe\",\n                        \"(\" + Type.getDescriptor( String.class ) + Type.getDescriptor( Thing.class ) + \")\" + Type.getDescriptor( Thing.class ) );\n                mv.visitInsn( POP );\n                mv.visitInsn( RETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"getTrait\", String.class ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"getTrait\",\n                        \"(\" + Type.getDescriptor( String.class ) + \")\" + Type.getDescriptor( Thing.class ),\n                        \"(\" + Type.getDescriptor( String.class ) + \")\" + Type.getDescriptor( Thing.class ),\n                        null );\n                mv.visitCode();\n                mv.visitVarInsn(ALOAD, 0);\n                mv.visitMethodInsn(INVOKEVIRTUAL, BuildUtils.getInternalType(wrapperName), \"_getTraitMap\", \"()\" + Type.getDescriptor(Map.class));\n                mv.visitVarInsn(ALOAD, 1);\n                mv.visitMethodInsn(INVOKEINTERFACE, Type.getInternalName(Map.class), \"get\",\n                        \"(\" + Type.getDescriptor(Object.class) + \")\" + Type.getDescriptor(Object.class));\n                mv.visitTypeInsn(CHECKCAST, Type.getInternalName(Thing.class));\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"hasTraits\" ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC,\n                                     \"hasTraits\",\n                                     Type.getMethodDescriptor( Type.getType( boolean.class ), new Type[] {} ),\n                                     null,\n                                     null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn(INVOKEVIRTUAL, BuildUtils.getInternalType(wrapperName), \"_getTraitMap\", \"()\" + Type.getDescriptor(Map.class));\n                Label l5 = new Label();\n                mv.visitJumpInsn( IFNULL, l5 );\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn(INVOKEVIRTUAL, BuildUtils.getInternalType(wrapperName), \"_getTraitMap\", \"()\" + Type.getDescriptor(Map.class));\n                mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( Map.class ), \"isEmpty\", Type.getMethodDescriptor( Type.BOOLEAN_TYPE, new Type[] {} ) );\n                mv.visitJumpInsn( IFNE, l5 );\n                mv.visitInsn( ICONST_1 );\n                Label l4 = new Label();\n                mv.visitJumpInsn( GOTO, l4 );\n                mv.visitLabel( l5 );\n                mv.visitInsn( ICONST_0 );\n                mv.visitLabel( l4 );\n                mv.visitInsn( IRETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"hasTrait\", String.class ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"hasTrait\", \"(\" + Type.getDescriptor( String.class )+ \")Z\", null, null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, BuildUtils.getInternalType( wrapperName ), \"_getTraitMap\", \"()\" + Type.getDescriptor( Map.class ) );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( Map.class ), \"containsKey\", \"(\" + Type.getDescriptor( Object.class ) + \")Z\" );\n                mv.visitInsn( IRETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"removeTrait\", String.class ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"removeTrait\",\n                        Type.getMethodDescriptor( Type.getType( Collection.class ), new Type[] { Type.getType( String.class ) } ),\n                        Type.getMethodDescriptor( Type.getType( Collection.class ), new Type[] { Type.getType( String.class ) } ),\n                        null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, BuildUtils.getInternalType( wrapperName ), \"_getTraitMap\", Type.getMethodDescriptor( Type.getType( Map.class ), new Type[] {} ) );\n                mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitVarInsn(ALOAD, 1);\n                mv.visitMethodInsn( INVOKEVIRTUAL, Type.getInternalName( TraitTypeMap.class ), \"removeCascade\",\n                        Type.getMethodDescriptor( Type.getType( Collection.class ), new Type[] { Type.getType( String.class )} ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n\n                mv = cw.visitMethod( ACC_PUBLIC, \"removeTrait\",\n                        Type.getMethodDescriptor( Type.getType( Collection.class ), new Type[] { Type.getType( BitSet.class ) } ),\n                        Type.getMethodDescriptor( Type.getType( Collection.class ), new Type[] { Type.getType( BitSet.class ) } ),\n                        null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, BuildUtils.getInternalType( wrapperName ), \"_getTraitMap\", Type.getMethodDescriptor( Type.getType( Map.class ), new Type[] {} ) );\n                mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitVarInsn(ALOAD, 1);\n                mv.visitMethodInsn( INVOKEVIRTUAL, Type.getInternalName( TraitTypeMap.class ), \"removeCascade\",\n                        Type.getMethodDescriptor( Type.getType( Collection.class ), new Type[] { Type.getType( BitSet.class )} ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"getTraits\" ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"getTraits\", \"()\" + Type.getDescriptor( Collection.class ), \"()Ljava/util/Collection<Ljava/lang/String;>;\", null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, BuildUtils.getInternalType( wrapperName ), \"_getTraitMap\", \"()\" + Type.getDescriptor( Map.class ) );\n                mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( Map.class ), \"keySet\", \"()\" + Type.getDescriptor( Set.class ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"_setBottomTypeCode\" ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"_setBottomTypeCode\", \"(\" + Type.getDescriptor( BitSet.class )+ \")V\", null, null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME , Type.getDescriptor( Map.class ) );\n                mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKEVIRTUAL, Type.getInternalName( TraitTypeMap.class ), \"setBottomCode\", \"(\" + Type.getDescriptor( BitSet.class ) + \")V\");\n                mv.visitInsn( RETURN );\n                mv.visitMaxs( 0,0 );\n                mv.visitEnd();\n            }\n        }\n\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"getCurrentTypeCode\" ) ) {\n\n            {\n                mv = cw.visitMethod( ACC_PUBLIC, \"getCurrentTypeCode\", \"()\" + Type.getDescriptor( BitSet.class ), null, null );\n                mv.visitCode();\n\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD,\n                                   BuildUtils.getInternalType( wrapperName ),\n                                   TraitableBean.TRAITSET_FIELD_NAME,\n                                   Type.getDescriptor( Map.class ) );\n                Label l3 = new Label();\n                mv.visitJumpInsn( IFNONNULL, l3 );\n                mv.visitInsn( ACONST_NULL );\n                mv.visitInsn( ARETURN );\n                mv.visitLabel( l3 );\n\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD,\n                        BuildUtils.getInternalType( wrapperName ),\n                        TraitableBean.TRAITSET_FIELD_NAME,\n                        Type.getDescriptor( Map.class ) );\n                mv.visitTypeInsn( CHECKCAST,\n                        Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitMethodInsn( INVOKEVIRTUAL,\n                        Type.getInternalName( TraitTypeMap.class ),\n                        \"getCurrentTypeCode\",\n                        \"()\" + Type.getDescriptor( BitSet.class ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"getMostSpecificTraits\" ) ) {\n\n            {\n                mv = cw.visitMethod( ACC_PUBLIC,\n                        \"getMostSpecificTraits\",\n                        \"()\" + Type.getDescriptor( Collection.class ),\n                        \"()Ljava/util/Collection<Lorg/drools/factmodel/traits/Thing;>;\",\n                        null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ),\n                        TraitableBean.TRAITSET_FIELD_NAME ,\n                        Type.getDescriptor( Map.class ) );\n                mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitTypeMap.class ) );\n                mv.visitMethodInsn( INVOKEVIRTUAL,\n                        Type.getInternalName( TraitTypeMap.class ),\n                        \"getMostSpecificTraits\",\n                        \"()\" + Type.getDescriptor( Collection.class ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n\n            }\n        }\n\n\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"_getFieldTMS\", TraitFieldTMS.class ) ) {\n            {\n                mv = cw.visitMethod( Opcodes.ACC_PUBLIC,\n                                     \"_getFieldTMS\",\n                                     Type.getMethodDescriptor( Type.getType( TraitFieldTMS.class ), new Type[] {} ),\n                                     null,\n                                     null);\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.FIELDTMS_FIELD_NAME, Type.getDescriptor( TraitFieldTMS.class ) );\n                mv.visitInsn( ARETURN );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n\n            }\n        }\n\n        if ( coreKlazz == null || needsMethod( coreKlazz, \"_setFieldTMS\", TraitFieldTMS.class ) ) {\n            {\n                mv = cw.visitMethod( ACC_PUBLIC,\n                                     \"_setFieldTMS\",\n                                     Type.getMethodDescriptor( Type.VOID_TYPE, new Type[] { Type.getType( TraitFieldTMS.class ) } ),\n                                     null,\n                                     null);\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitFieldInsn ( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.FIELDTMS_FIELD_NAME, Type.getDescriptor( TraitFieldTMS.class ) );\n                mv.visitInsn( RETURN) ;\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n        }\n\n\n\n        {\n            mv = cw.visitMethod( ACC_PUBLIC, \"writeExternal\", \"(\" + Type.getDescriptor( ObjectOutput.class ) + \")V\", null, new String[] { Type.getInternalName( IOException.class ) } );\n            mv.visitCode();\n\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitMethodInsn( INVOKEVIRTUAL, BuildUtils.getInternalType( wrapperName ), \"getCore\", \"()\" + Type.getDescriptor( Object.class ) );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectOutput.class ), \"writeObject\", \"(\" + Type.getDescriptor( Object.class ) + \")V\" );\n\n\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.MAP_FIELD_NAME, Type.getDescriptor( Map.class ) );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectOutput.class ), \"writeObject\", \"(\" + Type.getDescriptor( Object.class ) + \")V\" );\n\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectOutput.class ), \"writeObject\", \"(\" + Type.getDescriptor( Object.class ) + \")V\" );\n\n            if ( core.isFullTraiting() ) {\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.FIELDTMS_FIELD_NAME, Type.getDescriptor( Map.class ) );\n                mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectOutput.class ), \"writeObject\", \"(\" + Type.getDescriptor( Object.class ) + \")V\" );\n            }\n\n            mv.visitInsn( RETURN );\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n        {\n            mv = cw.visitMethod( ACC_PUBLIC, \"readExternal\", \"(\" + Type.getDescriptor( ObjectInput.class ) + \")V\", null,\n                    new String[] { Type.getInternalName( IOException.class ), Type.getInternalName( ClassNotFoundException.class ) } );\n            mv.visitCode();\n\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectInput.class ), \"readObject\", \"()\" + Type.getDescriptor( Object.class ) );\n            mv.visitTypeInsn( CHECKCAST, BuildUtils.getInternalType( coreName ) );\n            mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), \"core\", BuildUtils.getTypeDescriptor( coreName ) );\n\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectInput.class ), \"readObject\", \"()\" + Type.getDescriptor( Object.class ) );\n            mv.visitTypeInsn( CHECKCAST, Type.getInternalName( Map.class ) );\n            mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.MAP_FIELD_NAME, Type.getDescriptor( Map.class ) );\n\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectInput.class ), \"readObject\", \"()\" + Type.getDescriptor( Object.class ) );\n            mv.visitTypeInsn( CHECKCAST, Type.getInternalName( Map.class ) );\n            mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.TRAITSET_FIELD_NAME, Type.getDescriptor( Map.class ) );\n\n            if ( core.isFullTraiting() ) {\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitVarInsn( ALOAD, 1 );\n                mv.visitMethodInsn( INVOKEINTERFACE, Type.getInternalName( ObjectInput.class ), \"readObject\", \"()\" + Type.getDescriptor( Object.class ) );\n                mv.visitTypeInsn( CHECKCAST, Type.getInternalName( TraitFieldTMS.class ) );\n                mv.visitFieldInsn( PUTFIELD, BuildUtils.getInternalType( wrapperName ), TraitableBean.FIELDTMS_FIELD_NAME, Type.getDescriptor( TraitFieldTMS.class ) );\n            }\n\n            mv.visitInsn( RETURN );\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n\n        {\n            mv = cw.visitMethod( ACC_PUBLIC, \"init\", \"(\"+ BuildUtils.getTypeDescriptor( coreName ) +\")V\", null, null );\n            mv.visitCode();\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitFieldInsn( PUTFIELD,\n                    BuildUtils.getInternalType( wrapperName ),\n                    \"core\",\n                    BuildUtils.getTypeDescriptor( coreName ) );\n\n            initializeDynamicTypeStructures( mv, wrapperName, core );\n\n            mv.visitInsn( RETURN );\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n\n\n        Method[] ms = coreKlazz.getMethods();\n        for ( Method method : ms ) {\n            if ( Modifier.isFinal( method.getModifiers() ) ) {\n                continue;\n            }\n\n            String signature = TraitFactory.buildSignature( method );\n            {\n                mv = cw.visitMethod( ACC_PUBLIC,\n                        method.getName(),\n                        signature,\n                        null,\n                        null );\n                mv.visitCode();\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), \"core\", BuildUtils.getTypeDescriptor( coreName ) );\n\n                Label l0 = new Label();\n                    mv.visitJumpInsn( IFNONNULL, l0 );\n                    if ( method.getReturnType() == void.class ) {\n                        mv.visitInsn( RETURN );\n                    } else {\n                        mv.visitInsn( BuildUtils.zero( method.getReturnType().getName() ) );\n                        mv.visitInsn( BuildUtils.returnType( method.getReturnType().getName() ) );\n                    }\n                mv.visitLabel( l0 );\n\n                mv.visitVarInsn( ALOAD, 0 );\n                mv.visitFieldInsn( GETFIELD, BuildUtils.getInternalType( wrapperName ), \"core\", BuildUtils.getTypeDescriptor( coreName ) );\n\n                int j = 1;\n                for ( Class arg : method.getParameterTypes() ) {\n                    mv.visitVarInsn( BuildUtils.varType( arg.getName() ), j++ );\n                }\n                mv.visitMethodInsn( INVOKEVIRTUAL,\n                        BuildUtils.getInternalType( coreName ),\n                        method.getName(),\n                        signature );\n\n                mv.visitInsn( BuildUtils.returnType( method.getReturnType().getName() ) );\n                int stack = TraitFactory.getStackSize( method );\n                mv.visitMaxs( 0, 0 );\n                mv.visitEnd();\n            }\n\n        }\n\n        {\n            mv = cw.visitMethod( ACC_PUBLIC + ACC_BRIDGE + ACC_SYNTHETIC, \"init\", \"(\" + Type.getDescriptor( Object.class ) + \")V\", null, null );\n            mv.visitCode();\n            mv.visitVarInsn( ALOAD, 0 );\n            mv.visitVarInsn( ALOAD, 1 );\n            mv.visitTypeInsn( CHECKCAST, BuildUtils.getInternalType( coreName ) );\n            mv.visitMethodInsn( INVOKEVIRTUAL,\n                    BuildUtils.getInternalType( wrapperName ),\n                    \"init\",\n                    \"(\" + BuildUtils.getTypeDescriptor( coreName ) + \")V\" );\n            mv.visitInsn( RETURN );\n            mv.visitMaxs( 0, 0 );\n            mv.visitEnd();\n        }\n\n        cw.visitEnd();\n\n        return cw.toByteArray();\n    }","commit_id":"b7393433dec4769cfaa49bada2d3bc71eb4bf192","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private void walk(CollectionTracker c) throws Exception {\n        SnmpAgentConfig config = new SnmpAgentConfig();\n        config.setAddress(InetAddress.getLocalHost());\n        config.setPort(9161);\n        config.setVersion(SnmpAgentConfig.VERSION2C);\n        config.setMaxVarsPerPdu(1);\n        config.setMaxRepetitions(10);\n        SnmpWalker walker = SnmpUtils.createWalker(config, \"test\", c);\n        assertNotNull(walker);\n        walker.start();\n        walker.waitFor();\n    }","id":4194,"modified_method":"private void walk(CollectionTracker c) throws Exception {\n        SnmpAgentConfig config = new SnmpAgentConfig();\n        config.setAddress(InetAddress.getLocalHost());\n        config.setPort(9161);\n        config.setVersion(SnmpAgentConfig.VERSION2C);\n        config.setMaxVarsPerPdu(1);\n        config.setMaxRepetitions(1);\n        SnmpWalker walker = SnmpUtils.createWalker(config, \"test\", c);\n        assertNotNull(walker);\n        walker.start();\n        walker.waitFor();\n    }","commit_id":"7d3c75092c46e104d01e6d55989757320268d22b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public TableResponseProcessor(int columnIndex) {\n            System.err.println(String.format(\"instantiating table response processor for index %d\", columnIndex));\n            m_columnIndex = columnIndex;\n        }","id":4195,"modified_method":"public TableResponseProcessor(int columnIndex, int maxVarsPerPdu) {\n            m_firstColumn = columnIndex;\n            m_lastColumn = columnIndex + maxVarsPerPdu - 1;\n            System.err.println(String.format(\"instantiating table response processor for column(s) %d through %d\", m_firstColumn, m_lastColumn));\n        }","commit_id":"7d3c75092c46e104d01e6d55989757320268d22b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public ResponseProcessor buildNextPdu(PduBuilder pduBuilder) {\n        if (pduBuilder.getMaxVarsPerPdu() < 1) {\n            throw new IllegalArgumentException(\"maxVarsPerPdu < 1\");\n        }\n\n        pduBuilder.addOid(m_lastOid[m_nextColumnIndex]);\n        pduBuilder.setNonRepeaters(0);\n        pduBuilder.setMaxRepetitions(getMaxRepetitions());\n        \n        ResponseProcessor rp = new TableResponseProcessor(m_nextColumnIndex);\n        System.err.println(\"got response processor\");\n\n        m_nextColumnIndex++;\n        return rp;\n    }","id":4196,"modified_method":"@Override\n    public ResponseProcessor buildNextPdu(PduBuilder pduBuilder) {\n        if (pduBuilder.getMaxVarsPerPdu() < 1) {\n            throw new IllegalArgumentException(\"maxVarsPerPdu < 1\");\n        }\n\n        for (int i = 0; i < pduBuilder.getMaxVarsPerPdu(); i++) {\n            pduBuilder.addOid(m_lastOid[m_nextColumnIndex + i]);\n        }\n        pduBuilder.setNonRepeaters(0);\n        pduBuilder.setMaxRepetitions(getMaxRepetitions());\n        \n        ResponseProcessor rp = new TableResponseProcessor(m_nextColumnIndex, pduBuilder.getMaxVarsPerPdu());\n        System.err.println(\"got response processor\");\n\n        m_nextColumnIndex++;\n        return rp;\n    }","commit_id":"7d3c75092c46e104d01e6d55989757320268d22b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void processResponse(SnmpObjId responseObjId, SnmpValue val) {\n            System.err.println(String.format(\"processResponse: %s/%s\", responseObjId, val));\n            \n            if (val.isEndOfMib()) {\n                receivedEndOfMib(m_columnIndex);\n            }\n\n            m_lastOid[m_columnIndex] = responseObjId;\n            SnmpObjId base = m_ids[m_columnIndex];\n            if (base.isPrefixOf(responseObjId) && !base.equals(responseObjId)) {\n                SnmpInstId inst = responseObjId.getInstance(base);\n                if (inst != null) {\n                    storeResult(m_columnIndex, new SnmpResult(base, inst, val));\n                }\n            }\n\n        }","id":4197,"modified_method":"public void processResponse(SnmpObjId responseObjId, SnmpValue val) {\n            System.err.println(String.format(\"processResponse: %s/%s\", responseObjId, val));\n\n            for (int index = m_firstColumn; index <= m_lastColumn; index++) {\n                SnmpObjId base = m_ids[index];\n                if (base.isPrefixOf(responseObjId) && !base.equals(responseObjId)) {\n                    if (val.isEndOfMib()) {\n                        receivedEndOfMib(index);\n                    }\n\n                    m_lastOid[index] = responseObjId;\n                    SnmpInstId inst = responseObjId.getInstance(base);\n                    if (inst != null) {\n                        storeResult(index, new SnmpResult(base, inst, val));\n                    }\n                }\n            }\n\n        }","commit_id":"7d3c75092c46e104d01e6d55989757320268d22b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public boolean processErrors(int errorStatus, int errorIndex) {\n            System.err.println(String.format(\"processing error: errorStatus=%d, errorIndex=%d\", errorStatus, errorIndex));\n            if (errorStatus == NO_ERR) {\n                return false;\n            } else if (errorStatus == TOO_BIG_ERR) {\n                throw new IllegalArgumentException(\"Unable to handle tooBigError for next oid request after \"+m_lastOid[m_columnIndex]);\n            } else if (errorStatus == GEN_ERR) {\n                reportGenErr(\"Received genErr reqeusting next oid after \"+m_lastOid[m_columnIndex]+\". Marking column is finished.\");\n                errorOccurred(m_columnIndex);\n                return true;\n            } else if (errorStatus == NO_SUCH_NAME_ERR) {\n                reportNoSuchNameErr(\"Received noSuchName reqeusting next oid after \"+m_lastOid[m_columnIndex]+\". Marking column is finished.\");\n                errorOccurred(m_columnIndex);\n                return true;\n            } else {\n                throw new IllegalArgumentException(\"Unexpected error processing next oid after \"+m_lastOid[m_columnIndex]+\". Aborting!\");\n            }\n        }","id":4198,"modified_method":"public boolean processErrors(int errorStatus, int errorIndex) {\n            System.err.println(String.format(\"processing error: errorStatus=%d, errorIndex=%d\", errorStatus, errorIndex));\n            if (errorStatus == NO_ERR) {\n                return false;\n/*                \n            } else if (errorStatus == TOO_BIG_ERR) {\n                throw new IllegalArgumentException(\"Unable to handle tooBigError for next oid request after \"+m_lastOid[m_columnIndex]);\n            } else if (errorStatus == GEN_ERR) {\n                reportGenErr(\"Received genErr reqeusting next oid after \"+m_lastOid[m_columnIndex]+\". Marking column is finished.\");\n                errorOccurred(m_columnIndex);\n                return true;\n            } else if (errorStatus == NO_SUCH_NAME_ERR) {\n                reportNoSuchNameErr(\"Received noSuchName reqeusting next oid after \"+m_lastOid[m_columnIndex]+\". Marking column is finished.\");\n                errorOccurred(m_columnIndex);\n                return true;\n            } else {\n                throw new IllegalArgumentException(\"Unexpected error processing next oid after \"+m_lastOid[m_columnIndex]+\". Aborting!\");\n            }\n            */\n            } else {\n                throw new IllegalArgumentException(\"An error occurred processing oids for \" + m_lastOid[m_firstColumn] + \" through \" + m_lastOid[m_lastColumn]);\n            }\n        }","commit_id":"7d3c75092c46e104d01e6d55989757320268d22b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void walk(CollectionTracker c) throws Exception {\n        SnmpAgentConfig config = new SnmpAgentConfig();\n        config.setAddress(InetAddress.getLocalHost());\n        config.setPort(9161);\n        config.setVersion(SnmpAgentConfig.VERSION2C);\n        config.setMaxVarsPerPdu(1);\n        config.setMaxRepetitions(10);\n        SnmpWalker walker = SnmpUtils.createWalker(config, \"test\", c);\n        assertNotNull(walker);\n        walker.start();\n        walker.waitFor();\n    }","id":4199,"modified_method":"private void walk(CollectionTracker c) throws Exception {\n        SnmpAgentConfig config = new SnmpAgentConfig();\n        config.setAddress(InetAddress.getLocalHost());\n        config.setPort(9161);\n        config.setVersion(SnmpAgentConfig.VERSION2C);\n        config.setMaxVarsPerPdu(1);\n        config.setMaxRepetitions(1);\n        SnmpWalker walker = SnmpUtils.createWalker(config, \"test\", c);\n        assertNotNull(walker);\n        walker.start();\n        walker.waitFor();\n    }","commit_id":"3e74031c0744864c4b5994b6e97ac885f0335ee4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public boolean processErrors(int errorStatus, int errorIndex) {\n            System.err.println(String.format(\"processing error: errorStatus=%d, errorIndex=%d\", errorStatus, errorIndex));\n            if (errorStatus == NO_ERR) {\n                return false;\n            } else if (errorStatus == TOO_BIG_ERR) {\n                throw new IllegalArgumentException(\"Unable to handle tooBigError for next oid request after \"+m_lastOid[m_columnIndex]);\n            } else if (errorStatus == GEN_ERR) {\n                reportGenErr(\"Received genErr reqeusting next oid after \"+m_lastOid[m_columnIndex]+\". Marking column is finished.\");\n                errorOccurred(m_columnIndex);\n                return true;\n            } else if (errorStatus == NO_SUCH_NAME_ERR) {\n                reportNoSuchNameErr(\"Received noSuchName reqeusting next oid after \"+m_lastOid[m_columnIndex]+\". Marking column is finished.\");\n                errorOccurred(m_columnIndex);\n                return true;\n            } else {\n                throw new IllegalArgumentException(\"Unexpected error processing next oid after \"+m_lastOid[m_columnIndex]+\". Aborting!\");\n            }\n        }","id":4200,"modified_method":"public boolean processErrors(int errorStatus, int errorIndex) {\n            System.err.println(String.format(\"processing error: errorStatus=%d, errorIndex=%d\", errorStatus, errorIndex));\n            if (errorStatus == NO_ERR) {\n                return false;\n/*                \n            } else if (errorStatus == TOO_BIG_ERR) {\n                throw new IllegalArgumentException(\"Unable to handle tooBigError for next oid request after \"+m_lastOid[m_columnIndex]);\n            } else if (errorStatus == GEN_ERR) {\n                reportGenErr(\"Received genErr reqeusting next oid after \"+m_lastOid[m_columnIndex]+\". Marking column is finished.\");\n                errorOccurred(m_columnIndex);\n                return true;\n            } else if (errorStatus == NO_SUCH_NAME_ERR) {\n                reportNoSuchNameErr(\"Received noSuchName reqeusting next oid after \"+m_lastOid[m_columnIndex]+\". Marking column is finished.\");\n                errorOccurred(m_columnIndex);\n                return true;\n            } else {\n                throw new IllegalArgumentException(\"Unexpected error processing next oid after \"+m_lastOid[m_columnIndex]+\". Aborting!\");\n            }\n            */\n            } else {\n                throw new IllegalArgumentException(\"An error occurred processing oids for \" + m_lastOid[m_firstColumn] + \" through \" + m_lastOid[m_lastColumn]);\n            }\n        }","commit_id":"3e74031c0744864c4b5994b6e97ac885f0335ee4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void processResponse(SnmpObjId responseObjId, SnmpValue val) {\n            System.err.println(String.format(\"processResponse: %s/%s\", responseObjId, val));\n            \n            if (val.isEndOfMib()) {\n                receivedEndOfMib(m_columnIndex);\n            }\n\n            m_lastOid[m_columnIndex] = responseObjId;\n            SnmpObjId base = m_ids[m_columnIndex];\n            if (base.isPrefixOf(responseObjId) && !base.equals(responseObjId)) {\n                SnmpInstId inst = responseObjId.getInstance(base);\n                if (inst != null) {\n                    storeResult(m_columnIndex, new SnmpResult(base, inst, val));\n                }\n            }\n\n        }","id":4201,"modified_method":"public void processResponse(SnmpObjId responseObjId, SnmpValue val) {\n            System.err.println(String.format(\"processResponse: %s/%s\", responseObjId, val));\n\n            for (int index = m_firstColumn; index <= m_lastColumn; index++) {\n                SnmpObjId base = m_ids[index];\n                if (base.isPrefixOf(responseObjId) && !base.equals(responseObjId)) {\n                    if (val.isEndOfMib()) {\n                        receivedEndOfMib(index);\n                    }\n\n                    m_lastOid[index] = responseObjId;\n                    SnmpInstId inst = responseObjId.getInstance(base);\n                    if (inst != null) {\n                        storeResult(index, new SnmpResult(base, inst, val));\n                    }\n                }\n            }\n\n        }","commit_id":"3e74031c0744864c4b5994b6e97ac885f0335ee4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public TableResponseProcessor(int columnIndex) {\n            System.err.println(String.format(\"instantiating table response processor for index %d\", columnIndex));\n            m_columnIndex = columnIndex;\n        }","id":4202,"modified_method":"public TableResponseProcessor(int columnIndex, int maxVarsPerPdu) {\n            m_firstColumn = columnIndex;\n            m_lastColumn = columnIndex + maxVarsPerPdu - 1;\n            System.err.println(String.format(\"instantiating table response processor for column(s) %d through %d\", m_firstColumn, m_lastColumn));\n        }","commit_id":"3e74031c0744864c4b5994b6e97ac885f0335ee4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public ResponseProcessor buildNextPdu(PduBuilder pduBuilder) {\n        if (pduBuilder.getMaxVarsPerPdu() < 1) {\n            throw new IllegalArgumentException(\"maxVarsPerPdu < 1\");\n        }\n\n        pduBuilder.addOid(m_lastOid[m_nextColumnIndex]);\n        pduBuilder.setNonRepeaters(0);\n        pduBuilder.setMaxRepetitions(getMaxRepetitions());\n        \n        ResponseProcessor rp = new TableResponseProcessor(m_nextColumnIndex);\n        System.err.println(\"got response processor\");\n\n        m_nextColumnIndex++;\n        return rp;\n    }","id":4203,"modified_method":"@Override\n    public ResponseProcessor buildNextPdu(PduBuilder pduBuilder) {\n        if (pduBuilder.getMaxVarsPerPdu() < 1) {\n            throw new IllegalArgumentException(\"maxVarsPerPdu < 1\");\n        }\n\n        for (int i = 0; i < pduBuilder.getMaxVarsPerPdu(); i++) {\n            pduBuilder.addOid(m_lastOid[m_nextColumnIndex + i]);\n        }\n        pduBuilder.setNonRepeaters(0);\n        pduBuilder.setMaxRepetitions(getMaxRepetitions());\n        \n        ResponseProcessor rp = new TableResponseProcessor(m_nextColumnIndex, pduBuilder.getMaxVarsPerPdu());\n        System.err.println(\"got response processor\");\n\n        m_nextColumnIndex++;\n        return rp;\n    }","commit_id":"3e74031c0744864c4b5994b6e97ac885f0335ee4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void walk(CollectionTracker c) throws Exception {\n        SnmpAgentConfig config = new SnmpAgentConfig();\n        config.setAddress(InetAddress.getLocalHost());\n        config.setPort(9161);\n        config.setVersion(SnmpAgentConfig.VERSION2C);\n        config.setMaxVarsPerPdu(1);\n        config.setMaxRepetitions(10);\n        SnmpWalker walker = SnmpUtils.createWalker(config, \"test\", c);\n        assertNotNull(walker);\n        walker.start();\n        walker.waitFor();\n    }","id":4204,"modified_method":"private void walk(CollectionTracker c) throws Exception {\n        SnmpAgentConfig config = new SnmpAgentConfig();\n        config.setAddress(InetAddress.getLocalHost());\n        config.setPort(9161);\n        config.setVersion(SnmpAgentConfig.VERSION2C);\n        config.setMaxVarsPerPdu(1);\n        config.setMaxRepetitions(1);\n        SnmpWalker walker = SnmpUtils.createWalker(config, \"test\", c);\n        assertNotNull(walker);\n        walker.start();\n        walker.waitFor();\n    }","commit_id":"221a84c52f169dd8727312c0db0d3eb198f72788","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public TableResponseProcessor(int columnIndex) {\n            System.err.println(String.format(\"instantiating table response processor for index %d\", columnIndex));\n            m_columnIndex = columnIndex;\n        }","id":4205,"modified_method":"public TableResponseProcessor(int columnIndex, int maxVarsPerPdu) {\n            m_firstColumn = columnIndex;\n            m_lastColumn = columnIndex + maxVarsPerPdu - 1;\n            System.err.println(String.format(\"instantiating table response processor for column(s) %d through %d\", m_firstColumn, m_lastColumn));\n        }","commit_id":"221a84c52f169dd8727312c0db0d3eb198f72788","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public boolean processErrors(int errorStatus, int errorIndex) {\n            System.err.println(String.format(\"processing error: errorStatus=%d, errorIndex=%d\", errorStatus, errorIndex));\n            if (errorStatus == NO_ERR) {\n                return false;\n            } else if (errorStatus == TOO_BIG_ERR) {\n                throw new IllegalArgumentException(\"Unable to handle tooBigError for next oid request after \"+m_lastOid[m_columnIndex]);\n            } else if (errorStatus == GEN_ERR) {\n                reportGenErr(\"Received genErr reqeusting next oid after \"+m_lastOid[m_columnIndex]+\". Marking column is finished.\");\n                errorOccurred(m_columnIndex);\n                return true;\n            } else if (errorStatus == NO_SUCH_NAME_ERR) {\n                reportNoSuchNameErr(\"Received noSuchName reqeusting next oid after \"+m_lastOid[m_columnIndex]+\". Marking column is finished.\");\n                errorOccurred(m_columnIndex);\n                return true;\n            } else {\n                throw new IllegalArgumentException(\"Unexpected error processing next oid after \"+m_lastOid[m_columnIndex]+\". Aborting!\");\n            }\n        }","id":4206,"modified_method":"public boolean processErrors(int errorStatus, int errorIndex) {\n            System.err.println(String.format(\"processing error: errorStatus=%d, errorIndex=%d\", errorStatus, errorIndex));\n            if (errorStatus == NO_ERR) {\n                return false;\n/*                \n            } else if (errorStatus == TOO_BIG_ERR) {\n                throw new IllegalArgumentException(\"Unable to handle tooBigError for next oid request after \"+m_lastOid[m_columnIndex]);\n            } else if (errorStatus == GEN_ERR) {\n                reportGenErr(\"Received genErr reqeusting next oid after \"+m_lastOid[m_columnIndex]+\". Marking column is finished.\");\n                errorOccurred(m_columnIndex);\n                return true;\n            } else if (errorStatus == NO_SUCH_NAME_ERR) {\n                reportNoSuchNameErr(\"Received noSuchName reqeusting next oid after \"+m_lastOid[m_columnIndex]+\". Marking column is finished.\");\n                errorOccurred(m_columnIndex);\n                return true;\n            } else {\n                throw new IllegalArgumentException(\"Unexpected error processing next oid after \"+m_lastOid[m_columnIndex]+\". Aborting!\");\n            }\n            */\n            } else {\n                throw new IllegalArgumentException(\"An error occurred processing oids for \" + m_lastOid[m_firstColumn] + \" through \" + m_lastOid[m_lastColumn]);\n            }\n        }","commit_id":"221a84c52f169dd8727312c0db0d3eb198f72788","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public ResponseProcessor buildNextPdu(PduBuilder pduBuilder) {\n        if (pduBuilder.getMaxVarsPerPdu() < 1) {\n            throw new IllegalArgumentException(\"maxVarsPerPdu < 1\");\n        }\n\n        pduBuilder.addOid(m_lastOid[m_nextColumnIndex]);\n        pduBuilder.setNonRepeaters(0);\n        pduBuilder.setMaxRepetitions(getMaxRepetitions());\n        \n        ResponseProcessor rp = new TableResponseProcessor(m_nextColumnIndex);\n        System.err.println(\"got response processor\");\n\n        m_nextColumnIndex++;\n        return rp;\n    }","id":4207,"modified_method":"@Override\n    public ResponseProcessor buildNextPdu(PduBuilder pduBuilder) {\n        if (pduBuilder.getMaxVarsPerPdu() < 1) {\n            throw new IllegalArgumentException(\"maxVarsPerPdu < 1\");\n        }\n\n        for (int i = 0; i < pduBuilder.getMaxVarsPerPdu(); i++) {\n            pduBuilder.addOid(m_lastOid[m_nextColumnIndex + i]);\n        }\n        pduBuilder.setNonRepeaters(0);\n        pduBuilder.setMaxRepetitions(getMaxRepetitions());\n        \n        ResponseProcessor rp = new TableResponseProcessor(m_nextColumnIndex, pduBuilder.getMaxVarsPerPdu());\n        System.err.println(\"got response processor\");\n\n        m_nextColumnIndex++;\n        return rp;\n    }","commit_id":"221a84c52f169dd8727312c0db0d3eb198f72788","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void processResponse(SnmpObjId responseObjId, SnmpValue val) {\n            System.err.println(String.format(\"processResponse: %s/%s\", responseObjId, val));\n            \n            if (val.isEndOfMib()) {\n                receivedEndOfMib(m_columnIndex);\n            }\n\n            m_lastOid[m_columnIndex] = responseObjId;\n            SnmpObjId base = m_ids[m_columnIndex];\n            if (base.isPrefixOf(responseObjId) && !base.equals(responseObjId)) {\n                SnmpInstId inst = responseObjId.getInstance(base);\n                if (inst != null) {\n                    storeResult(m_columnIndex, new SnmpResult(base, inst, val));\n                }\n            }\n\n        }","id":4208,"modified_method":"public void processResponse(SnmpObjId responseObjId, SnmpValue val) {\n            System.err.println(String.format(\"processResponse: %s/%s\", responseObjId, val));\n\n            for (int index = m_firstColumn; index <= m_lastColumn; index++) {\n                SnmpObjId base = m_ids[index];\n                if (base.isPrefixOf(responseObjId) && !base.equals(responseObjId)) {\n                    if (val.isEndOfMib()) {\n                        receivedEndOfMib(index);\n                    }\n\n                    m_lastOid[index] = responseObjId;\n                    SnmpInstId inst = responseObjId.getInstance(base);\n                    if (inst != null) {\n                        storeResult(index, new SnmpResult(base, inst, val));\n                    }\n                }\n            }\n\n        }","commit_id":"221a84c52f169dd8727312c0db0d3eb198f72788","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * {@inheritDoc}\n     */    \n    @Override\n    public Collection getRemovedKeys() {\n        return CollectionUtils.subtract(set, getPreSelected());\n    }","id":4209,"modified_method":"/** {@inheritDoc} */\n    public Collection getRemovedKeys() {\n        Set preSelected = getPreSelected();\n        Collection result = CollectionUtils.subtract(set, preSelected);\n        return result;\n    }","commit_id":"83c67218217b5653fc60684678dc030636203016","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected void syncSelections(List dataSet) {\n        helper.syncSelections(set, dataSet);\n    }","id":4210,"modified_method":"/** {@inheritDoc} */\n    protected void syncSelections(List dataSet) {\n        helper.syncSelections(set, dataSet);\n    }","commit_id":"83c67218217b5653fc60684678dc030636203016","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Objliterates the set from the session\n     */\n    @Override\n    public void  destroy() {\n        SessionSetHelper.obliterate(getContext().getRequest(), getDecl()); \n    }","id":4211,"modified_method":"/** {@inheritDoc} */\n    public void destroy() {\n        SessionSetHelper.obliterate(getContext().getRequest(), getDecl());\n    }","commit_id":"83c67218217b5653fc60684678dc030636203016","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected void add(Set c) {\n        set.addAll(c);\n    }","id":4212,"modified_method":"/** {@inheritDoc} */\n    protected void add(Set c) {\n        set.addAll(c);\n    }","commit_id":"83c67218217b5653fc60684678dc030636203016","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected int size() {\n        return set.size();\n    }","id":4213,"modified_method":"/** {@inheritDoc} */\n    protected int size() {\n        return set.size();\n    }","commit_id":"83c67218217b5653fc60684678dc030636203016","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * {@inheritDoc}\n     */\n    @Override\n    public Collection getAddedKeys() {\n        return CollectionUtils.subtract(getPreSelected(), set);\n    }","id":4214,"modified_method":"/** {@inheritDoc} */\n    public Collection getAddedKeys() {\n        Set preSelected = getPreSelected();\n        Collection result = CollectionUtils.subtract(preSelected, set);\n        return result;\n    }","commit_id":"83c67218217b5653fc60684678dc030636203016","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private void setup(String prefix) {\n        RequestContext context = getContext();\n        helper = new SessionSetHelper(context.getRequest());\n        \n        if (StringUtils.isBlank(prefix)) {\n            prefix = getListable().getClass().getName();\n        }\n        decl =  prefix;\n        \n        Map params = getParamMap(); \n        if (!params.isEmpty()) {\n            decl = decl + params.hashCode();\n        }\n        \n        set = SessionSetHelper.lookupAndBind(context.getRequest(),\n                    decl);\n\n    }","id":4215,"modified_method":"/**\n     * Initializes this instance, determining the name of the set that will be used\n     * and instantiating it.\n     *\n     * @param prefix basis for the generation of a unique set name\n     */\n    private void setup(String prefix) {\n        RequestContext context = getContext();\n        helper = new SessionSetHelper(context.getRequest());\n\n        if (StringUtils.isBlank(prefix)) {\n            prefix = getListable().getClass().getName();\n        }\n        decl = prefix;\n\n        Map params = getParamMap();\n        if (!params.isEmpty()) {\n            decl = decl + params.hashCode();\n        }\n\n        set = SessionSetHelper.lookupAndBind(context.getRequest(),\n            decl);\n\n    }","commit_id":"83c67218217b5653fc60684678dc030636203016","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected void update() {\n        helper.updateSet(set, getListName());\n    }","id":4216,"modified_method":"/** {@inheritDoc} */\n    protected void update() {\n        helper.updateSet(set, getListName());\n    }","commit_id":"83c67218217b5653fc60684678dc030636203016","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected void execute(List dataSet) {\n        helper.execute(set, getListName(), dataSet);\n    }","id":4217,"modified_method":"/** {@inheritDoc} */\n    protected void execute(List dataSet) {\n        helper.execute(set, getListName(), dataSet);\n    }","commit_id":"83c67218217b5653fc60684678dc030636203016","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected Map getSelections() {\n        Map selections = new HashMap<Long, Long>();\n        for (Object id : set) {\n            Long item = Long.valueOf(id.toString());\n            selections.put(item, item);\n        }\n        return selections;\n    }","id":4218,"modified_method":"/** {@inheritDoc} */\n    protected Map getSelections() {\n        Map<Long, Long> selections = new HashMap<Long, Long>();\n        for (Object id : set) {\n            Long item = Long.valueOf(id.toString());\n            selections.put(item, item);\n        }\n        return selections;\n    }","commit_id":"83c67218217b5653fc60684678dc030636203016","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected void clear() {\n        set.clear();\n    }","id":4219,"modified_method":"/** {@inheritDoc} */\n    protected void clear() {\n        set.clear();\n    }","commit_id":"83c67218217b5653fc60684678dc030636203016","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected void clear() {\n        set.clear();\n        RhnSetManager.store(set);\n    }","id":4220,"modified_method":"/** {@inheritDoc} */\n    protected void clear() {\n        set.clear();\n        RhnSetManager.store(set);\n    }","commit_id":"3466909ff9eca28ef7425fea5eef6498e543606c","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * {@inheritDoc}\n     */\n    @Override\n    public Collection getAddedKeys() {\n        return CollectionUtils.subtract(getPreSelected(), set.getElementValues());\n    }","id":4221,"modified_method":"/** {@inheritDoc} */\n    public Collection getAddedKeys() {\n        Set preSelectedValues = getPreSelected();\n        Set setValues = set.getElementValues();\n        Collection result = CollectionUtils.subtract(preSelectedValues, setValues);\n        return result;\n    }","commit_id":"3466909ff9eca28ef7425fea5eef6498e543606c","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected void execute(List dataSet) {\n        helper.execute(set, getListName(), dataSet);\n    }","id":4222,"modified_method":"/** {@inheritDoc} */\n    protected void execute(List dataSet) {\n        helper.execute(set, getListName(), dataSet);\n    }","commit_id":"3466909ff9eca28ef7425fea5eef6498e543606c","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * clears the set\n     * */\n    @Override\n    public void  destroy() {\n        clear();\n    }","id":4223,"modified_method":"/** {@inheritDoc} */\n    public void destroy() {\n        clear();\n    }","commit_id":"3466909ff9eca28ef7425fea5eef6498e543606c","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected Map getSelections() {\n        Map <Long, Long> selections = new HashMap<Long, Long>();\n        for (Long id : set.getElementValues()) {\n            selections.put(id, id);\n        }\n        return selections;\n    }","id":4224,"modified_method":"/** {@inheritDoc} */\n    protected Map getSelections() {\n        Map<Long, Long> selections = new HashMap<Long, Long>();\n        for (Long id : set.getElementValues()) {\n            selections.put(id, id);\n        }\n        return selections;\n    }","commit_id":"3466909ff9eca28ef7425fea5eef6498e543606c","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * {@inheritDoc}\n     */\n    @Override\n    public Collection getRemovedKeys() {\n        return CollectionUtils.subtract(set.getElementValues(), getPreSelected());\n    }","id":4225,"modified_method":"/** {@inheritDoc} */\n    public Collection getRemovedKeys() {\n        Set setValues = set.getElementValues();\n        Set preSelectedValues = getPreSelected();\n        Collection result = CollectionUtils.subtract(setValues, preSelectedValues);\n        return result;\n    }","commit_id":"3466909ff9eca28ef7425fea5eef6498e543606c","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Contructor\n     * @param inp the listable\n     * @param request the servlet request\n     * @param declIn declaration\n     */\n    public ListRhnSetHelper(Listable inp, HttpServletRequest request,\n                                        RhnSetDecl declIn) {    \n        this(inp, request, declIn, Collections.EMPTY_MAP);\n    }","id":4226,"modified_method":"/**\n     * Creates a new <code>ListRhnSetHelper<\/code> that will store its selected items\n     * in an <code>RhnSet<\/code> retrieved from the given <code>RhnSetDecl<\/code>. Care\n     * should be taken in using this call to ensure there will only be one set of data\n     * in this list at a time (see\n     * {@link #ListRhnSetHelper(Listable, HttpServletRequest, RhnSetDecl, Map)} for a\n     * use case in which this constructor would not be applicable).\n     *\n     * @param inp     the listable\n     * @param request the servlet request\n     * @param declIn  declaration\n     */\n    public ListRhnSetHelper(Listable inp, HttpServletRequest request,\n                            RhnSetDecl declIn) {\n        this(inp, request, declIn, Collections.EMPTY_MAP);\n    }","commit_id":"3466909ff9eca28ef7425fea5eef6498e543606c","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected int size() {\n        return set.size();\n    }","id":4227,"modified_method":"/** {@inheritDoc} */\n    protected int size() {\n        return set.size();\n    }","commit_id":"3466909ff9eca28ef7425fea5eef6498e543606c","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected void add(Set c) {\n        for (Object elem :  c) {\n            set.addElement((Long)elem);\n        }\n        RhnSetManager.store(set);\n    }","id":4228,"modified_method":"/** {@inheritDoc} */\n    protected void add(Set c) {\n        for (Object elem : c) {\n            set.addElement((Long) elem);\n        }\n        RhnSetManager.store(set);\n    }","commit_id":"3466909ff9eca28ef7425fea5eef6498e543606c","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected void update() {\n        helper.updateSet(set, getListName());\n    }","id":4229,"modified_method":"/** {@inheritDoc} */\n    protected void update() {\n        helper.updateSet(set, getListName());\n    }","commit_id":"3466909ff9eca28ef7425fea5eef6498e543606c","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private void setup(RhnSetDecl declIn) {\n        RequestContext context = getContext();\n        Map params = getParamMap();\n        if (params.isEmpty()) {\n            decl = declIn;\n        }\n        else {\n            decl = declIn.createCustom(params.entrySet().toArray());    \n        }\n        \n        set = decl.get(context.getLoggedInUser());\n        helper = new RhnListSetHelper(context.getRequest());\n    }","id":4230,"modified_method":"/**\n     * Initializes this instance, determining the name of the set that will be used and\n     * loading it.\n     *\n     * @param declIn basis for the set used to store user selections\n     */\n    private void setup(RhnSetDecl declIn) {\n        RequestContext context = getContext();\n        Map params = getParamMap();\n        if (params.isEmpty()) {\n            decl = declIn;\n        }\n        else {\n            decl = declIn.createCustom(params.entrySet().toArray());\n        }\n\n        set = decl.get(context.getLoggedInUser());\n        helper = new RhnListSetHelper(context.getRequest());\n    }","commit_id":"3466909ff9eca28ef7425fea5eef6498e543606c","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    protected void syncSelections(List dataSet) {\n        helper.syncSelections(set, dataSet);\n        \n    }","id":4231,"modified_method":"/** {@inheritDoc} */\n    protected void syncSelections(List dataSet) {\n        helper.syncSelections(set, dataSet);\n\n    }","commit_id":"3466909ff9eca28ef7425fea5eef6498e543606c","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"protected void updateCaptcha(\n\t\t\tActionRequest actionRequest, PortletPreferences portletPreferences)\n\t\tthrows Exception {\n\n\t\tboolean reCaptchaEnabled = ParamUtil.getBoolean(\n\t\t\tactionRequest, \"reCaptchaEnabled\");\n\t\tString reCaptchaPrivateKey = ParamUtil.getString(\n\t\t\tactionRequest, \"reCaptchaPrivateKey\");\n\t\tString reCaptchaPublicKey = ParamUtil.getString(\n\t\t\tactionRequest, \"reCaptchaPublicKey\");\n\n\t\tCaptcha captcha = null;\n\n\t\tif (reCaptchaEnabled) {\n\t\t\tcaptcha = new ReCaptchaImpl();\n\t\t}\n\t\telse {\n\t\t\tcaptcha = new SimpleCaptchaImpl();\n\t\t}\n\n\t\tvalidateCaptcha(actionRequest);\n\n\t\tif (SessionErrors.isEmpty(actionRequest)) {\n\t\t\tportletPreferences.setValue(\n\t\t\t\tPropsKeys.CAPTCHA_ENGINE_IMPL, captcha.getClass().getName());\n\t\t\tportletPreferences.setValue(\n\t\t\t\tPropsKeys.CAPTCHA_ENGINE_RECAPTCHA_KEY_PRIVATE,\n\t\t\t\treCaptchaPrivateKey);\n\t\t\tportletPreferences.setValue(\n\t\t\t\tPropsKeys.CAPTCHA_ENGINE_RECAPTCHA_KEY_PUBLIC,\n\t\t\t\treCaptchaPublicKey);\n\n\t\t\tportletPreferences.store();\n\n\t\t\tCaptchaImpl captchaImpl = (CaptchaImpl)CaptchaUtil.getCaptcha();\n\n\t\t\tcaptchaImpl.setCaptcha(captcha);\n\t\t}\n\t}","id":4232,"modified_method":"protected void updateCaptcha(\n\t\t\tActionRequest actionRequest, PortletPreferences portletPreferences)\n\t\tthrows Exception {\n\n\t\tboolean reCaptchaEnabled = ParamUtil.getBoolean(\n\t\t\tactionRequest, \"reCaptchaEnabled\");\n\t\tString reCaptchaPrivateKey = ParamUtil.getString(\n\t\t\tactionRequest, \"reCaptchaPrivateKey\");\n\t\tString reCaptchaPublicKey = ParamUtil.getString(\n\t\t\tactionRequest, \"reCaptchaPublicKey\");\n\n\t\tCaptcha captcha = null;\n\n\t\tif (reCaptchaEnabled) {\n\t\t\tcaptcha = new ReCaptchaImpl();\n\t\t}\n\t\telse {\n\t\t\tcaptcha = new SimpleCaptchaImpl();\n\t\t}\n\n\t\tvalidateCaptcha(actionRequest);\n\n\t\tif (SessionErrors.isEmpty(actionRequest)) {\n\t\t\tportletPreferences.setValue(\n\t\t\t\tPropsKeys.CAPTCHA_ENGINE_IMPL, captcha.getClass().getName());\n\t\t\tportletPreferences.setValue(\n\t\t\t\tPropsKeys.CAPTCHA_ENGINE_RECAPTCHA_KEY_PRIVATE,\n\t\t\t\treCaptchaPrivateKey);\n\t\t\tportletPreferences.setValue(\n\t\t\t\tPropsKeys.CAPTCHA_ENGINE_RECAPTCHA_KEY_PUBLIC,\n\t\t\t\treCaptchaPublicKey);\n\n\t\t\tportletPreferences.store();\n\n\t\t\tCaptcha currentCaptcha = CaptchaUtil.getCaptcha();\n\n\t\t\tCaptchaImpl captchaImpl;\n\n\t\t\tif (currentCaptcha instanceof DoPrivilegedBean) {\n\t\t\t\tDoPrivilegedBean doPrivilegedBean =\n\t\t\t\t\t(DoPrivilegedBean)currentCaptcha;\n\n\t\t\t\tcaptchaImpl = (CaptchaImpl)doPrivilegedBean.getActualBean();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcaptchaImpl = (CaptchaImpl)currentCaptcha;\n\t\t\t}\n\n\t\t\tcaptchaImpl.setCaptcha(captcha);\n\t\t}\n\t}","commit_id":"350e0557824e0b404764da481214ec30211adb21","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void destroyPortalProperties(\n\t\t\tString servletContextName, Properties portalProperties)\n\t\tthrows Exception {\n\n\t\tPropsUtil.removeProperties(portalProperties);\n\n\t\tif (_log.isDebugEnabled() && portalProperties.containsKey(LOCALES)) {\n\t\t\t_log.debug(\n\t\t\t\t\"Portlet locales \" + portalProperties.getProperty(LOCALES));\n\t\t\t_log.debug(\"Original locales \" + PropsUtil.get(LOCALES));\n\t\t\t_log.debug(\n\t\t\t\t\"Original locales array length \" +\n\t\t\t\t\tPropsUtil.getArray(LOCALES).length);\n\t\t}\n\n\t\tresetPortalProperties(servletContextName, portalProperties, false);\n\n\t\tif (portalProperties.containsKey(PropsKeys.AUTH_TOKEN_IMPL)) {\n\t\t\tAuthTokenWrapper authTokenWrapper =\n\t\t\t\t(AuthTokenWrapper)AuthTokenUtil.getAuthToken();\n\n\t\t\tauthTokenWrapper.setAuthToken(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.CAPTCHA_ENGINE_IMPL)) {\n\t\t\tCaptchaImpl captchaImpl = (CaptchaImpl)CaptchaUtil.getCaptcha();\n\n\t\t\tcaptchaImpl.setCaptcha(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.CONTROL_PANEL_DEFAULT_ENTRY_CLASS)) {\n\n\t\t\tDefaultControlPanelEntryFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_FILE_ENTRY_PROCESSORS)) {\n\t\t\tDLFileEntryProcessorContainer dlFileEntryProcessorContainer =\n\t\t\t\t_dlFileEntryProcessorContainerMap.remove(servletContextName);\n\n\t\t\tdlFileEntryProcessorContainer.unregisterDLProcessors();\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_REPOSITORY_IMPL)) {\n\t\t\tDLRepositoryContainer dlRepositoryContainer =\n\t\t\t\t_dlRepositoryContainerMap.remove(servletContextName);\n\n\t\t\tdlRepositoryContainer.unregisterRepositoryFactories();\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_STORE_ANTIVIRUS_IMPL)) {\n\t\t\tAntivirusScannerWrapper antivirusScannerWrapper =\n\t\t\t\t(AntivirusScannerWrapper)\n\t\t\t\t\tAntivirusScannerUtil.getAntivirusScanner();\n\n\t\t\tantivirusScannerWrapper.setAntivirusScanner(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_STORE_IMPL)) {\n\t\t\tStoreFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.LDAP_ATTRS_TRANSFORMER_IMPL)) {\n\n\t\t\tAttributesTransformerFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(LOCK_LISTENERS)) {\n\t\t\tLockListenerContainer lockListenerContainer =\n\t\t\t\t_lockListenerContainerMap.remove(servletContextName);\n\n\t\t\tif (lockListenerContainer != null) {\n\t\t\t\tlockListenerContainer.unregisterLockListeners();\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.MAIL_HOOK_IMPL)) {\n\t\t\tcom.liferay.mail.util.HookFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_ORGANIZATIONS)) {\n\n\t\t\tOrganizationMembershipPolicyFactoryImpl\n\t\t\t\torganizationMembershipPolicyFactoryImpl =\n\t\t\t\t\t(OrganizationMembershipPolicyFactoryImpl)\n\t\t\t\t\t\tOrganizationMembershipPolicyFactoryUtil.\n\t\t\t\t\t\t\tgetOrganizationMembershipPolicyFactory();\n\n\t\t\torganizationMembershipPolicyFactoryImpl.\n\t\t\t\tsetOrganizationMembershipPolicy(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.MEMBERSHIP_POLICY_ROLES)) {\n\t\t\tRoleMembershipPolicyFactoryImpl roleMembershipPolicyFactoryImpl =\n\t\t\t\t(RoleMembershipPolicyFactoryImpl)\n\t\t\t\t\tRoleMembershipPolicyFactoryUtil.\n\t\t\t\t\t\tgetRoleMembershipPolicyFactory();\n\n\t\t\troleMembershipPolicyFactoryImpl.setRoleMembershipPolicy(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.MEMBERSHIP_POLICY_SITES)) {\n\t\t\tSiteMembershipPolicyFactoryImpl siteMembershipPolicyFactoryImpl =\n\t\t\t\t(SiteMembershipPolicyFactoryImpl)\n\t\t\t\t\tSiteMembershipPolicyFactoryUtil.\n\t\t\t\t\t\tgetSiteMembershipPolicyFactory();\n\n\t\t\tsiteMembershipPolicyFactoryImpl.setSiteMembershipPolicy(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_USER_GROUPS)) {\n\n\t\t\tUserGroupMembershipPolicyFactoryImpl\n\t\t\t\tuserGroupMembershipPolicyFactoryImpl =\n\t\t\t\t\t(UserGroupMembershipPolicyFactoryImpl)\n\t\t\t\t\t\tUserGroupMembershipPolicyFactoryUtil.\n\t\t\t\t\t\t\tgetUserGroupMembershipPolicyFactory();\n\n\t\t\tuserGroupMembershipPolicyFactoryImpl.setUserGroupMembershipPolicy(\n\t\t\t\tnull);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.PASSWORDS_TOOLKIT)) {\n\t\t\tToolkitWrapper toolkitWrapper =\n\t\t\t\t(ToolkitWrapper)PwdToolkitUtil.getToolkit();\n\n\t\t\ttoolkitWrapper.setToolkit(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.PHONE_NUMBER_FORMAT_IMPL)) {\n\t\t\tPhoneNumberFormatWrapper phoneNumberFormatWrapper =\n\t\t\t\t(PhoneNumberFormatWrapper)\n\t\t\t\t\tPhoneNumberFormatUtil.getPhoneNumberFormat();\n\n\t\t\tphoneNumberFormatWrapper.setPhoneNumberFormat(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.SANITIZER_IMPL)) {\n\t\t\tSanitizerContainer sanitizerContainer =\n\t\t\t\t_sanitizerContainerMap.remove(servletContextName);\n\n\t\t\tif (sanitizerContainer != null) {\n\t\t\t\tsanitizerContainer.unregisterSanitizers();\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_EMAIL_ADDRESS_GENERATOR)) {\n\n\t\t\tEmailAddressGeneratorFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_EMAIL_ADDRESS_VALIDATOR)) {\n\n\t\t\tEmailAddressValidatorFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.USERS_FULL_NAME_GENERATOR)) {\n\t\t\tFullNameGeneratorFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.USERS_FULL_NAME_VALIDATOR)) {\n\t\t\tFullNameValidatorFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_SCREEN_NAME_GENERATOR)) {\n\n\t\t\tScreenNameGeneratorFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_SCREEN_NAME_VALIDATOR)) {\n\n\t\t\tScreenNameValidatorFactory.setInstance(null);\n\t\t}\n\n\t\tSet<String> liferayFilterClassNames =\n\t\t\tLiferayFilterTracker.getClassNames();\n\n\t\tfor (String liferayFilterClassName : liferayFilterClassNames) {\n\t\t\tif (!portalProperties.containsKey(liferayFilterClassName)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tboolean filterEnabled = GetterUtil.getBoolean(\n\t\t\t\tPropsUtil.get(liferayFilterClassName));\n\n\t\t\tSet<LiferayFilter> liferayFilters =\n\t\t\t\tLiferayFilterTracker.getLiferayFilters(liferayFilterClassName);\n\n\t\t\tfor (LiferayFilter liferayFilter : liferayFilters) {\n\t\t\t\tliferayFilter.setFilterEnabled(filterEnabled);\n\t\t\t}\n\t\t}\n\t}","id":4233,"modified_method":"protected void destroyPortalProperties(\n\t\t\tString servletContextName, Properties portalProperties)\n\t\tthrows Exception {\n\n\t\tPropsUtil.removeProperties(portalProperties);\n\n\t\tif (_log.isDebugEnabled() && portalProperties.containsKey(LOCALES)) {\n\t\t\t_log.debug(\n\t\t\t\t\"Portlet locales \" + portalProperties.getProperty(LOCALES));\n\t\t\t_log.debug(\"Original locales \" + PropsUtil.get(LOCALES));\n\t\t\t_log.debug(\n\t\t\t\t\"Original locales array length \" +\n\t\t\t\t\tPropsUtil.getArray(LOCALES).length);\n\t\t}\n\n\t\tresetPortalProperties(servletContextName, portalProperties, false);\n\n\t\tif (portalProperties.containsKey(PropsKeys.AUTH_TOKEN_IMPL)) {\n\t\t\tAuthTokenWrapper authTokenWrapper =\n\t\t\t\t(AuthTokenWrapper)AuthTokenUtil.getAuthToken();\n\n\t\t\tauthTokenWrapper.setAuthToken(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.CAPTCHA_ENGINE_IMPL)) {\n\t\t\tCaptcha captcha = CaptchaUtil.getCaptcha();\n\n\t\t\tCaptchaImpl captchaImpl;\n\n\t\t\tif (captcha instanceof DoPrivilegedBean) {\n\t\t\t\tDoPrivilegedBean doPrivilegedBean = (DoPrivilegedBean)captcha;\n\n\t\t\t\tcaptchaImpl = (CaptchaImpl)doPrivilegedBean.getActualBean();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcaptchaImpl = (CaptchaImpl)captcha;\n\t\t\t}\n\n\t\t\tcaptchaImpl.setCaptcha(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.CONTROL_PANEL_DEFAULT_ENTRY_CLASS)) {\n\n\t\t\tDefaultControlPanelEntryFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_FILE_ENTRY_PROCESSORS)) {\n\t\t\tDLFileEntryProcessorContainer dlFileEntryProcessorContainer =\n\t\t\t\t_dlFileEntryProcessorContainerMap.remove(servletContextName);\n\n\t\t\tdlFileEntryProcessorContainer.unregisterDLProcessors();\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_REPOSITORY_IMPL)) {\n\t\t\tDLRepositoryContainer dlRepositoryContainer =\n\t\t\t\t_dlRepositoryContainerMap.remove(servletContextName);\n\n\t\t\tdlRepositoryContainer.unregisterRepositoryFactories();\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_STORE_ANTIVIRUS_IMPL)) {\n\t\t\tAntivirusScannerWrapper antivirusScannerWrapper =\n\t\t\t\t(AntivirusScannerWrapper)\n\t\t\t\t\tAntivirusScannerUtil.getAntivirusScanner();\n\n\t\t\tantivirusScannerWrapper.setAntivirusScanner(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_STORE_IMPL)) {\n\t\t\tStoreFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.LDAP_ATTRS_TRANSFORMER_IMPL)) {\n\n\t\t\tAttributesTransformerFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(LOCK_LISTENERS)) {\n\t\t\tLockListenerContainer lockListenerContainer =\n\t\t\t\t_lockListenerContainerMap.remove(servletContextName);\n\n\t\t\tif (lockListenerContainer != null) {\n\t\t\t\tlockListenerContainer.unregisterLockListeners();\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.MAIL_HOOK_IMPL)) {\n\t\t\tcom.liferay.mail.util.HookFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_ORGANIZATIONS)) {\n\n\t\t\tOrganizationMembershipPolicyFactoryImpl\n\t\t\t\torganizationMembershipPolicyFactoryImpl =\n\t\t\t\t\t(OrganizationMembershipPolicyFactoryImpl)\n\t\t\t\t\t\tOrganizationMembershipPolicyFactoryUtil.\n\t\t\t\t\t\t\tgetOrganizationMembershipPolicyFactory();\n\n\t\t\torganizationMembershipPolicyFactoryImpl.\n\t\t\t\tsetOrganizationMembershipPolicy(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.MEMBERSHIP_POLICY_ROLES)) {\n\t\t\tRoleMembershipPolicyFactoryImpl roleMembershipPolicyFactoryImpl =\n\t\t\t\t(RoleMembershipPolicyFactoryImpl)\n\t\t\t\t\tRoleMembershipPolicyFactoryUtil.\n\t\t\t\t\t\tgetRoleMembershipPolicyFactory();\n\n\t\t\troleMembershipPolicyFactoryImpl.setRoleMembershipPolicy(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.MEMBERSHIP_POLICY_SITES)) {\n\t\t\tSiteMembershipPolicyFactoryImpl siteMembershipPolicyFactoryImpl =\n\t\t\t\t(SiteMembershipPolicyFactoryImpl)\n\t\t\t\t\tSiteMembershipPolicyFactoryUtil.\n\t\t\t\t\t\tgetSiteMembershipPolicyFactory();\n\n\t\t\tsiteMembershipPolicyFactoryImpl.setSiteMembershipPolicy(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_USER_GROUPS)) {\n\n\t\t\tUserGroupMembershipPolicyFactoryImpl\n\t\t\t\tuserGroupMembershipPolicyFactoryImpl =\n\t\t\t\t\t(UserGroupMembershipPolicyFactoryImpl)\n\t\t\t\t\t\tUserGroupMembershipPolicyFactoryUtil.\n\t\t\t\t\t\t\tgetUserGroupMembershipPolicyFactory();\n\n\t\t\tuserGroupMembershipPolicyFactoryImpl.setUserGroupMembershipPolicy(\n\t\t\t\tnull);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.PASSWORDS_TOOLKIT)) {\n\t\t\tToolkitWrapper toolkitWrapper =\n\t\t\t\t(ToolkitWrapper)PwdToolkitUtil.getToolkit();\n\n\t\t\ttoolkitWrapper.setToolkit(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.PHONE_NUMBER_FORMAT_IMPL)) {\n\t\t\tPhoneNumberFormatWrapper phoneNumberFormatWrapper =\n\t\t\t\t(PhoneNumberFormatWrapper)\n\t\t\t\t\tPhoneNumberFormatUtil.getPhoneNumberFormat();\n\n\t\t\tphoneNumberFormatWrapper.setPhoneNumberFormat(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.SANITIZER_IMPL)) {\n\t\t\tSanitizerContainer sanitizerContainer =\n\t\t\t\t_sanitizerContainerMap.remove(servletContextName);\n\n\t\t\tif (sanitizerContainer != null) {\n\t\t\t\tsanitizerContainer.unregisterSanitizers();\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_EMAIL_ADDRESS_GENERATOR)) {\n\n\t\t\tEmailAddressGeneratorFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_EMAIL_ADDRESS_VALIDATOR)) {\n\n\t\t\tEmailAddressValidatorFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.USERS_FULL_NAME_GENERATOR)) {\n\t\t\tFullNameGeneratorFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.USERS_FULL_NAME_VALIDATOR)) {\n\t\t\tFullNameValidatorFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_SCREEN_NAME_GENERATOR)) {\n\n\t\t\tScreenNameGeneratorFactory.setInstance(null);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_SCREEN_NAME_VALIDATOR)) {\n\n\t\t\tScreenNameValidatorFactory.setInstance(null);\n\t\t}\n\n\t\tSet<String> liferayFilterClassNames =\n\t\t\tLiferayFilterTracker.getClassNames();\n\n\t\tfor (String liferayFilterClassName : liferayFilterClassNames) {\n\t\t\tif (!portalProperties.containsKey(liferayFilterClassName)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tboolean filterEnabled = GetterUtil.getBoolean(\n\t\t\t\tPropsUtil.get(liferayFilterClassName));\n\n\t\t\tSet<LiferayFilter> liferayFilters =\n\t\t\t\tLiferayFilterTracker.getLiferayFilters(liferayFilterClassName);\n\n\t\t\tfor (LiferayFilter liferayFilter : liferayFilters) {\n\t\t\t\tliferayFilter.setFilterEnabled(filterEnabled);\n\t\t\t}\n\t\t}\n\t}","commit_id":"47b75b1518805488621050d7ede23b6a09e868e1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void initPortalProperties(\n\t\t\tString servletContextName, ClassLoader portletClassLoader,\n\t\t\tProperties portalProperties, Properties unfilteredPortalProperties)\n\t\tthrows Exception {\n\n\t\tPropsUtil.addProperties(portalProperties);\n\n\t\tif (_log.isDebugEnabled() && portalProperties.containsKey(LOCALES)) {\n\t\t\t_log.debug(\n\t\t\t\t\"Portlet locales \" + portalProperties.getProperty(LOCALES));\n\t\t\t_log.debug(\"Merged locales \" + PropsUtil.get(LOCALES));\n\t\t\t_log.debug(\n\t\t\t\t\"Merged locales array length \" +\n\t\t\t\t\tPropsUtil.getArray(LOCALES).length);\n\t\t}\n\n\t\tfor (String key : _PROPS_VALUES_OBSOLETE) {\n\t\t\tif (_log.isInfoEnabled() && portalProperties.contains(key)) {\n\t\t\t\t_log.info(\"Portal property \\\"\" + key + \"\\\" is obsolete\");\n\t\t\t}\n\t\t}\n\n\t\tresetPortalProperties(servletContextName, portalProperties, true);\n\n\t\tif (portalProperties.containsKey(PropsKeys.AUTH_PUBLIC_PATHS)) {\n\t\t\tinitAuthPublicPaths(servletContextName, portalProperties);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.AUTH_TOKEN_IMPL)) {\n\t\t\tString authTokenClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.AUTH_TOKEN_IMPL);\n\n\t\t\tAuthToken authToken = (AuthToken)newInstance(\n\t\t\t\tportletClassLoader, AuthToken.class, authTokenClassName);\n\n\t\t\tAuthTokenWrapper authTokenWrapper =\n\t\t\t\t(AuthTokenWrapper)AuthTokenUtil.getAuthToken();\n\n\t\t\tauthTokenWrapper.setAuthToken(authToken);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.CAPTCHA_ENGINE_IMPL)) {\n\t\t\tString captchaClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.CAPTCHA_ENGINE_IMPL);\n\n\t\t\tCaptcha captcha = (Captcha)newInstance(\n\t\t\t\tportletClassLoader, Captcha.class, captchaClassName);\n\n\t\t\tCaptchaImpl captchaImpl = (CaptchaImpl)CaptchaUtil.getCaptcha();\n\n\t\t\tcaptchaImpl.setCaptcha(captcha);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.CONTROL_PANEL_DEFAULT_ENTRY_CLASS)) {\n\n\t\t\tString controlPanelEntryClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.CONTROL_PANEL_DEFAULT_ENTRY_CLASS);\n\n\t\t\tControlPanelEntry controlPanelEntry =\n\t\t\t\t(ControlPanelEntry)newInstance(\n\t\t\t\t\tportletClassLoader, ControlPanelEntry.class,\n\t\t\t\t\tcontrolPanelEntryClassName);\n\n\t\t\tDefaultControlPanelEntryFactory.setInstance(controlPanelEntry);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_FILE_ENTRY_PROCESSORS)) {\n\t\t\tString[] dlProcessorClassNames = StringUtil.split(\n\t\t\t\tportalProperties.getProperty(\n\t\t\t\t\tPropsKeys.DL_FILE_ENTRY_PROCESSORS));\n\n\t\t\tDLFileEntryProcessorContainer dlFileEntryProcessorContainer =\n\t\t\t\tnew DLFileEntryProcessorContainer();\n\n\t\t\t_dlFileEntryProcessorContainerMap.put(\n\t\t\t\tservletContextName, dlFileEntryProcessorContainer);\n\n\t\t\tfor (String dlProcessorClassName : dlProcessorClassNames) {\n\t\t\t\tDLProcessor dlProcessor = (DLProcessor)newInstance(\n\t\t\t\t\tportletClassLoader, DLProcessor.class,\n\t\t\t\t\tdlProcessorClassName);\n\n\t\t\t\tdlFileEntryProcessorContainer.registerDLProcessor(dlProcessor);\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_REPOSITORY_IMPL)) {\n\t\t\tString[] dlRepositoryClassNames = StringUtil.split(\n\t\t\t\tportalProperties.getProperty(PropsKeys.DL_REPOSITORY_IMPL));\n\n\t\t\tDLRepositoryContainer dlRepositoryContainer =\n\t\t\t\tnew DLRepositoryContainer();\n\n\t\t\t_dlRepositoryContainerMap.put(\n\t\t\t\tservletContextName, dlRepositoryContainer);\n\n\t\t\tfor (String dlRepositoryClassName : dlRepositoryClassNames) {\n\t\t\t\tRepositoryFactory repositoryFactory = new RepositoryFactoryImpl(\n\t\t\t\t\tdlRepositoryClassName, portletClassLoader);\n\n\t\t\t\tdlRepositoryContainer.registerRepositoryFactory(\n\t\t\t\t\tdlRepositoryClassName, repositoryFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_STORE_ANTIVIRUS_IMPL)) {\n\t\t\tString antivirusScannerClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.DL_STORE_ANTIVIRUS_IMPL);\n\n\t\t\tAntivirusScanner antivirusScanner = (AntivirusScanner)newInstance(\n\t\t\t\tportletClassLoader, AntivirusScanner.class,\n\t\t\t\tantivirusScannerClassName);\n\n\t\t\tAntivirusScannerWrapper antivirusScannerWrapper =\n\t\t\t\t(AntivirusScannerWrapper)\n\t\t\t\t\tAntivirusScannerUtil.getAntivirusScanner();\n\n\t\t\tantivirusScannerWrapper.setAntivirusScanner(antivirusScanner);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_STORE_IMPL)) {\n\t\t\tString storeClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.DL_STORE_IMPL);\n\n\t\t\tStore store = (Store)newInstance(\n\t\t\t\tportletClassLoader, Store.class, storeClassName);\n\n\t\t\tStoreFactory.setInstance(store);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.LDAP_ATTRS_TRANSFORMER_IMPL)) {\n\n\t\t\tString attributesTransformerClassName =\n\t\t\t\tportalProperties.getProperty(\n\t\t\t\t\tPropsKeys.LDAP_ATTRS_TRANSFORMER_IMPL);\n\n\t\t\tAttributesTransformer attributesTransformer =\n\t\t\t\t(AttributesTransformer)newInstance(\n\t\t\t\t\tportletClassLoader, AttributesTransformer.class,\n\t\t\t\t\tattributesTransformerClassName);\n\n\t\t\tAttributesTransformerFactory.setInstance(attributesTransformer);\n\t\t}\n\n\t\tif (portalProperties.containsKey(LOCK_LISTENERS)) {\n\t\t\tLockListenerContainer lockListenerContainer =\n\t\t\t\t_lockListenerContainerMap.get(servletContextName);\n\n\t\t\tif (lockListenerContainer == null) {\n\t\t\t\tlockListenerContainer = new LockListenerContainer();\n\n\t\t\t\t_lockListenerContainerMap.put(\n\t\t\t\t\tservletContextName, lockListenerContainer);\n\t\t\t}\n\n\t\t\tString[] lockListenerClassNames = StringUtil.split(\n\t\t\t\tportalProperties.getProperty(LOCK_LISTENERS));\n\n\t\t\tfor (String lockListenerClassName : lockListenerClassNames) {\n\t\t\t\tLockListener lockListener = (LockListener)newInstance(\n\t\t\t\t\tportletClassLoader, LockListener.class,\n\t\t\t\t\tlockListenerClassName);\n\n\t\t\t\tlockListenerContainer.registerLockListener(lockListener);\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.MAIL_HOOK_IMPL)) {\n\t\t\tString mailHookClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.MAIL_HOOK_IMPL);\n\n\t\t\tcom.liferay.mail.util.Hook mailHook =\n\t\t\t\t(com.liferay.mail.util.Hook)newInstance(\n\t\t\t\t\tportletClassLoader, com.liferay.mail.util.Hook.class,\n\t\t\t\t\tmailHookClassName);\n\n\t\t\tcom.liferay.mail.util.HookFactory.setInstance(mailHook);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_ORGANIZATIONS)) {\n\n\t\t\tString organizationMembershipPolicyClassName =\n\t\t\t\tportalProperties.getProperty(\n\t\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_ORGANIZATIONS);\n\n\t\t\tOrganizationMembershipPolicyFactoryImpl\n\t\t\t\torganizationMembershipPolicyFactoryImpl =\n\t\t\t\t\t(OrganizationMembershipPolicyFactoryImpl)\n\t\t\t\t\t\tOrganizationMembershipPolicyFactoryUtil.\n\t\t\t\t\t\t\tgetOrganizationMembershipPolicyFactory();\n\n\t\t\tOrganizationMembershipPolicy organizationMembershipPolicy =\n\t\t\t\t(OrganizationMembershipPolicy)newInstance(\n\t\t\t\t\tportletClassLoader, OrganizationMembershipPolicy.class,\n\t\t\t\t\torganizationMembershipPolicyClassName);\n\n\t\t\torganizationMembershipPolicyFactoryImpl.\n\t\t\t\tsetOrganizationMembershipPolicy(organizationMembershipPolicy);\n\n\t\t\tif (PropsValues.MEMBERSHIP_POLICY_AUTO_VERIFY) {\n\t\t\t\torganizationMembershipPolicy.verifyPolicy();\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.MEMBERSHIP_POLICY_ROLES)) {\n\t\t\tString roleMembershipPolicyClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_ROLES);\n\n\t\t\tRoleMembershipPolicyFactoryImpl roleMembershipPolicyFactoryImpl =\n\t\t\t\t(RoleMembershipPolicyFactoryImpl)\n\t\t\t\t\tRoleMembershipPolicyFactoryUtil.\n\t\t\t\t\t\tgetRoleMembershipPolicyFactory();\n\n\t\t\tRoleMembershipPolicy roleMembershipPolicy =\n\t\t\t\t(RoleMembershipPolicy)newInstance(\n\t\t\t\t\tportletClassLoader, RoleMembershipPolicy.class,\n\t\t\t\t\troleMembershipPolicyClassName);\n\n\t\t\troleMembershipPolicyFactoryImpl.setRoleMembershipPolicy(\n\t\t\t\troleMembershipPolicy);\n\n\t\t\tif (PropsValues.MEMBERSHIP_POLICY_AUTO_VERIFY) {\n\t\t\t\troleMembershipPolicy.verifyPolicy();\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.MEMBERSHIP_POLICY_SITES)) {\n\t\t\tString siteMembershipPolicyClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_SITES);\n\n\t\t\tSiteMembershipPolicyFactoryImpl siteMembershipPolicyFactoryImpl =\n\t\t\t\t(SiteMembershipPolicyFactoryImpl)\n\t\t\t\t\tSiteMembershipPolicyFactoryUtil.\n\t\t\t\t\t\tgetSiteMembershipPolicyFactory();\n\n\t\t\tSiteMembershipPolicy siteMembershipPolicy =\n\t\t\t\t(SiteMembershipPolicy)newInstance(\n\t\t\t\t\tportletClassLoader, SiteMembershipPolicy.class,\n\t\t\t\t\tsiteMembershipPolicyClassName);\n\n\t\t\tsiteMembershipPolicyFactoryImpl.setSiteMembershipPolicy(\n\t\t\t\tsiteMembershipPolicy);\n\n\t\t\tif (PropsValues.MEMBERSHIP_POLICY_AUTO_VERIFY) {\n\t\t\t\tsiteMembershipPolicy.verifyPolicy();\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_USER_GROUPS)) {\n\n\t\t\tString userGroupMembershipPolicyClassName =\n\t\t\t\tportalProperties.getProperty(\n\t\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_USER_GROUPS);\n\n\t\t\tUserGroupMembershipPolicyFactoryImpl\n\t\t\t\tuserGroupMembershipPolicyFactoryImpl =\n\t\t\t\t\t(UserGroupMembershipPolicyFactoryImpl)\n\t\t\t\t\t\tUserGroupMembershipPolicyFactoryUtil.\n\t\t\t\t\t\t\tgetUserGroupMembershipPolicyFactory();\n\n\t\t\tUserGroupMembershipPolicy userGroupMembershipPolicy =\n\t\t\t\t(UserGroupMembershipPolicy)newInstance(\n\t\t\t\t\tportletClassLoader, UserGroupMembershipPolicy.class,\n\t\t\t\t\tuserGroupMembershipPolicyClassName);\n\n\t\t\tuserGroupMembershipPolicyFactoryImpl.setUserGroupMembershipPolicy(\n\t\t\t\tuserGroupMembershipPolicy);\n\n\t\t\tif (PropsValues.MEMBERSHIP_POLICY_AUTO_VERIFY) {\n\t\t\t\tuserGroupMembershipPolicy.verifyPolicy();\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.PASSWORDS_TOOLKIT)) {\n\t\t\tString toolkitClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.PASSWORDS_TOOLKIT);\n\n\t\t\tToolkit toolkit = (Toolkit)newInstance(\n\t\t\t\tportletClassLoader, Sanitizer.class, toolkitClassName);\n\n\t\t\tToolkitWrapper toolkitWrapper =\n\t\t\t\t(ToolkitWrapper)PwdToolkitUtil.getToolkit();\n\n\t\t\ttoolkitWrapper.setToolkit(toolkit);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.PHONE_NUMBER_FORMAT_IMPL)) {\n\t\t\tString phoneNumberFormatClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.PHONE_NUMBER_FORMAT_IMPL);\n\n\t\t\tPhoneNumberFormat phoneNumberFormat =\n\t\t\t\t(PhoneNumberFormat)newInstance(\n\t\t\t\t\tportletClassLoader, PhoneNumberFormat.class,\n\t\t\t\t\tphoneNumberFormatClassName);\n\n\t\t\tPhoneNumberFormatWrapper phoneNumberFormatWrapper =\n\t\t\t\t(PhoneNumberFormatWrapper)\n\t\t\t\t\tPhoneNumberFormatUtil.getPhoneNumberFormat();\n\n\t\t\tphoneNumberFormatWrapper.setPhoneNumberFormat(phoneNumberFormat);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.SANITIZER_IMPL)) {\n\t\t\tString[] sanitizerClassNames = StringUtil.split(\n\t\t\t\tportalProperties.getProperty(PropsKeys.SANITIZER_IMPL));\n\n\t\t\tSanitizerContainer sanitizerContainer = new SanitizerContainer();\n\n\t\t\t_sanitizerContainerMap.put(servletContextName, sanitizerContainer);\n\n\t\t\tfor (String sanitizerClassName : sanitizerClassNames) {\n\t\t\t\tSanitizer sanitizer = (Sanitizer)newInstance(\n\t\t\t\t\tportletClassLoader, Sanitizer.class, sanitizerClassName);\n\n\t\t\t\tsanitizerContainer.registerSanitizer(sanitizer);\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_EMAIL_ADDRESS_GENERATOR)) {\n\n\t\t\tString emailAddressGeneratorClassName =\n\t\t\t\tportalProperties.getProperty(\n\t\t\t\t\tPropsKeys.USERS_EMAIL_ADDRESS_GENERATOR);\n\n\t\t\tEmailAddressGenerator emailAddressGenerator =\n\t\t\t\t(EmailAddressGenerator)newInstance(\n\t\t\t\t\tportletClassLoader, EmailAddressGenerator.class,\n\t\t\t\t\temailAddressGeneratorClassName);\n\n\t\t\tEmailAddressGeneratorFactory.setInstance(emailAddressGenerator);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_EMAIL_ADDRESS_VALIDATOR)) {\n\n\t\t\tString emailAddressValidatorClassName =\n\t\t\t\tportalProperties.getProperty(\n\t\t\t\t\tPropsKeys.USERS_EMAIL_ADDRESS_VALIDATOR);\n\n\t\t\tEmailAddressValidator emailAddressValidator =\n\t\t\t\t(EmailAddressValidator)newInstance(\n\t\t\t\t\tportletClassLoader, EmailAddressValidator.class,\n\t\t\t\t\temailAddressValidatorClassName);\n\n\t\t\tEmailAddressValidatorFactory.setInstance(emailAddressValidator);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.USERS_FULL_NAME_GENERATOR)) {\n\t\t\tString fullNameGeneratorClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.USERS_FULL_NAME_GENERATOR);\n\n\t\t\tFullNameGenerator fullNameGenerator =\n\t\t\t\t(FullNameGenerator)newInstance(\n\t\t\t\t\tportletClassLoader, FullNameGenerator.class,\n\t\t\t\t\tfullNameGeneratorClassName);\n\n\t\t\tFullNameGeneratorFactory.setInstance(fullNameGenerator);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.USERS_FULL_NAME_VALIDATOR)) {\n\t\t\tString fullNameValidatorClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.USERS_FULL_NAME_VALIDATOR);\n\n\t\t\tFullNameValidator fullNameValidator =\n\t\t\t\t(FullNameValidator)newInstance(\n\t\t\t\t\tportletClassLoader, FullNameValidator.class,\n\t\t\t\t\tfullNameValidatorClassName);\n\n\t\t\tFullNameValidatorFactory.setInstance(fullNameValidator);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_SCREEN_NAME_GENERATOR)) {\n\n\t\t\tString screenNameGeneratorClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.USERS_SCREEN_NAME_GENERATOR);\n\n\t\t\tScreenNameGenerator screenNameGenerator =\n\t\t\t\t(ScreenNameGenerator)newInstance(\n\t\t\t\t\tportletClassLoader, ScreenNameGenerator.class,\n\t\t\t\t\tscreenNameGeneratorClassName);\n\n\t\t\tScreenNameGeneratorFactory.setInstance(screenNameGenerator);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_SCREEN_NAME_VALIDATOR)) {\n\n\t\t\tString screenNameValidatorClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.USERS_SCREEN_NAME_VALIDATOR);\n\n\t\t\tScreenNameValidator screenNameValidator =\n\t\t\t\t(ScreenNameValidator)newInstance(\n\t\t\t\t\tportletClassLoader, ScreenNameValidator.class,\n\t\t\t\t\tscreenNameValidatorClassName);\n\n\t\t\tScreenNameValidatorFactory.setInstance(screenNameValidator);\n\t\t}\n\n\t\tSet<String> liferayFilterClassNames =\n\t\t\tLiferayFilterTracker.getClassNames();\n\n\t\tfor (String liferayFilterClassName : liferayFilterClassNames) {\n\t\t\tif (!portalProperties.containsKey(liferayFilterClassName)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tboolean filterEnabled = GetterUtil.getBoolean(\n\t\t\t\tportalProperties.getProperty(liferayFilterClassName));\n\n\t\t\tSet<LiferayFilter> liferayFilters =\n\t\t\t\tLiferayFilterTracker.getLiferayFilters(liferayFilterClassName);\n\n\t\t\tfor (LiferayFilter liferayFilter : liferayFilters) {\n\t\t\t\tliferayFilter.setFilterEnabled(filterEnabled);\n\t\t\t}\n\t\t}\n\n\t\tif (unfilteredPortalProperties.containsKey(\n\t\t\t\tPropsKeys.RELEASE_INFO_BUILD_NUMBER) ||\n\t\t\tunfilteredPortalProperties.containsKey(\n\t\t\t\tPropsKeys.UPGRADE_PROCESSES)) {\n\n\t\t\tupdateRelease(\n\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\tunfilteredPortalProperties);\n\t\t}\n\t}","id":4234,"modified_method":"protected void initPortalProperties(\n\t\t\tString servletContextName, ClassLoader portletClassLoader,\n\t\t\tProperties portalProperties, Properties unfilteredPortalProperties)\n\t\tthrows Exception {\n\n\t\tPropsUtil.addProperties(portalProperties);\n\n\t\tif (_log.isDebugEnabled() && portalProperties.containsKey(LOCALES)) {\n\t\t\t_log.debug(\n\t\t\t\t\"Portlet locales \" + portalProperties.getProperty(LOCALES));\n\t\t\t_log.debug(\"Merged locales \" + PropsUtil.get(LOCALES));\n\t\t\t_log.debug(\n\t\t\t\t\"Merged locales array length \" +\n\t\t\t\t\tPropsUtil.getArray(LOCALES).length);\n\t\t}\n\n\t\tfor (String key : _PROPS_VALUES_OBSOLETE) {\n\t\t\tif (_log.isInfoEnabled() && portalProperties.contains(key)) {\n\t\t\t\t_log.info(\"Portal property \\\"\" + key + \"\\\" is obsolete\");\n\t\t\t}\n\t\t}\n\n\t\tresetPortalProperties(servletContextName, portalProperties, true);\n\n\t\tif (portalProperties.containsKey(PropsKeys.AUTH_PUBLIC_PATHS)) {\n\t\t\tinitAuthPublicPaths(servletContextName, portalProperties);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.AUTH_TOKEN_IMPL)) {\n\t\t\tString authTokenClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.AUTH_TOKEN_IMPL);\n\n\t\t\tAuthToken authToken = (AuthToken)newInstance(\n\t\t\t\tportletClassLoader, AuthToken.class, authTokenClassName);\n\n\t\t\tAuthTokenWrapper authTokenWrapper =\n\t\t\t\t(AuthTokenWrapper)AuthTokenUtil.getAuthToken();\n\n\t\t\tauthTokenWrapper.setAuthToken(authToken);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.CAPTCHA_ENGINE_IMPL)) {\n\t\t\tString captchaClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.CAPTCHA_ENGINE_IMPL);\n\n\t\t\tCaptcha captcha = (Captcha)newInstance(\n\t\t\t\tportletClassLoader, Captcha.class, captchaClassName);\n\n\t\t\tCaptcha currentCaptcha = CaptchaUtil.getCaptcha();\n\n\t\t\tCaptchaImpl captchaImpl;\n\n\t\t\tif (currentCaptcha instanceof DoPrivilegedBean) {\n\t\t\t\tDoPrivilegedBean doPrivilegedBean =\n\t\t\t\t\t(DoPrivilegedBean)currentCaptcha;\n\n\t\t\t\tcaptchaImpl = (CaptchaImpl)doPrivilegedBean.getActualBean();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcaptchaImpl = (CaptchaImpl)currentCaptcha;\n\t\t\t}\n\n\t\t\tcaptchaImpl.setCaptcha(captcha);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.CONTROL_PANEL_DEFAULT_ENTRY_CLASS)) {\n\n\t\t\tString controlPanelEntryClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.CONTROL_PANEL_DEFAULT_ENTRY_CLASS);\n\n\t\t\tControlPanelEntry controlPanelEntry =\n\t\t\t\t(ControlPanelEntry)newInstance(\n\t\t\t\t\tportletClassLoader, ControlPanelEntry.class,\n\t\t\t\t\tcontrolPanelEntryClassName);\n\n\t\t\tDefaultControlPanelEntryFactory.setInstance(controlPanelEntry);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_FILE_ENTRY_PROCESSORS)) {\n\t\t\tString[] dlProcessorClassNames = StringUtil.split(\n\t\t\t\tportalProperties.getProperty(\n\t\t\t\t\tPropsKeys.DL_FILE_ENTRY_PROCESSORS));\n\n\t\t\tDLFileEntryProcessorContainer dlFileEntryProcessorContainer =\n\t\t\t\tnew DLFileEntryProcessorContainer();\n\n\t\t\t_dlFileEntryProcessorContainerMap.put(\n\t\t\t\tservletContextName, dlFileEntryProcessorContainer);\n\n\t\t\tfor (String dlProcessorClassName : dlProcessorClassNames) {\n\t\t\t\tDLProcessor dlProcessor = (DLProcessor)newInstance(\n\t\t\t\t\tportletClassLoader, DLProcessor.class,\n\t\t\t\t\tdlProcessorClassName);\n\n\t\t\t\tdlFileEntryProcessorContainer.registerDLProcessor(dlProcessor);\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_REPOSITORY_IMPL)) {\n\t\t\tString[] dlRepositoryClassNames = StringUtil.split(\n\t\t\t\tportalProperties.getProperty(PropsKeys.DL_REPOSITORY_IMPL));\n\n\t\t\tDLRepositoryContainer dlRepositoryContainer =\n\t\t\t\tnew DLRepositoryContainer();\n\n\t\t\t_dlRepositoryContainerMap.put(\n\t\t\t\tservletContextName, dlRepositoryContainer);\n\n\t\t\tfor (String dlRepositoryClassName : dlRepositoryClassNames) {\n\t\t\t\tRepositoryFactory repositoryFactory = new RepositoryFactoryImpl(\n\t\t\t\t\tdlRepositoryClassName, portletClassLoader);\n\n\t\t\t\tdlRepositoryContainer.registerRepositoryFactory(\n\t\t\t\t\tdlRepositoryClassName, repositoryFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_STORE_ANTIVIRUS_IMPL)) {\n\t\t\tString antivirusScannerClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.DL_STORE_ANTIVIRUS_IMPL);\n\n\t\t\tAntivirusScanner antivirusScanner = (AntivirusScanner)newInstance(\n\t\t\t\tportletClassLoader, AntivirusScanner.class,\n\t\t\t\tantivirusScannerClassName);\n\n\t\t\tAntivirusScannerWrapper antivirusScannerWrapper =\n\t\t\t\t(AntivirusScannerWrapper)\n\t\t\t\t\tAntivirusScannerUtil.getAntivirusScanner();\n\n\t\t\tantivirusScannerWrapper.setAntivirusScanner(antivirusScanner);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.DL_STORE_IMPL)) {\n\t\t\tString storeClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.DL_STORE_IMPL);\n\n\t\t\tStore store = (Store)newInstance(\n\t\t\t\tportletClassLoader, Store.class, storeClassName);\n\n\t\t\tStoreFactory.setInstance(store);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.LDAP_ATTRS_TRANSFORMER_IMPL)) {\n\n\t\t\tString attributesTransformerClassName =\n\t\t\t\tportalProperties.getProperty(\n\t\t\t\t\tPropsKeys.LDAP_ATTRS_TRANSFORMER_IMPL);\n\n\t\t\tAttributesTransformer attributesTransformer =\n\t\t\t\t(AttributesTransformer)newInstance(\n\t\t\t\t\tportletClassLoader, AttributesTransformer.class,\n\t\t\t\t\tattributesTransformerClassName);\n\n\t\t\tAttributesTransformerFactory.setInstance(attributesTransformer);\n\t\t}\n\n\t\tif (portalProperties.containsKey(LOCK_LISTENERS)) {\n\t\t\tLockListenerContainer lockListenerContainer =\n\t\t\t\t_lockListenerContainerMap.get(servletContextName);\n\n\t\t\tif (lockListenerContainer == null) {\n\t\t\t\tlockListenerContainer = new LockListenerContainer();\n\n\t\t\t\t_lockListenerContainerMap.put(\n\t\t\t\t\tservletContextName, lockListenerContainer);\n\t\t\t}\n\n\t\t\tString[] lockListenerClassNames = StringUtil.split(\n\t\t\t\tportalProperties.getProperty(LOCK_LISTENERS));\n\n\t\t\tfor (String lockListenerClassName : lockListenerClassNames) {\n\t\t\t\tLockListener lockListener = (LockListener)newInstance(\n\t\t\t\t\tportletClassLoader, LockListener.class,\n\t\t\t\t\tlockListenerClassName);\n\n\t\t\t\tlockListenerContainer.registerLockListener(lockListener);\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.MAIL_HOOK_IMPL)) {\n\t\t\tString mailHookClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.MAIL_HOOK_IMPL);\n\n\t\t\tcom.liferay.mail.util.Hook mailHook =\n\t\t\t\t(com.liferay.mail.util.Hook)newInstance(\n\t\t\t\t\tportletClassLoader, com.liferay.mail.util.Hook.class,\n\t\t\t\t\tmailHookClassName);\n\n\t\t\tcom.liferay.mail.util.HookFactory.setInstance(mailHook);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_ORGANIZATIONS)) {\n\n\t\t\tString organizationMembershipPolicyClassName =\n\t\t\t\tportalProperties.getProperty(\n\t\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_ORGANIZATIONS);\n\n\t\t\tOrganizationMembershipPolicyFactoryImpl\n\t\t\t\torganizationMembershipPolicyFactoryImpl =\n\t\t\t\t\t(OrganizationMembershipPolicyFactoryImpl)\n\t\t\t\t\t\tOrganizationMembershipPolicyFactoryUtil.\n\t\t\t\t\t\t\tgetOrganizationMembershipPolicyFactory();\n\n\t\t\tOrganizationMembershipPolicy organizationMembershipPolicy =\n\t\t\t\t(OrganizationMembershipPolicy)newInstance(\n\t\t\t\t\tportletClassLoader, OrganizationMembershipPolicy.class,\n\t\t\t\t\torganizationMembershipPolicyClassName);\n\n\t\t\torganizationMembershipPolicyFactoryImpl.\n\t\t\t\tsetOrganizationMembershipPolicy(organizationMembershipPolicy);\n\n\t\t\tif (PropsValues.MEMBERSHIP_POLICY_AUTO_VERIFY) {\n\t\t\t\torganizationMembershipPolicy.verifyPolicy();\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.MEMBERSHIP_POLICY_ROLES)) {\n\t\t\tString roleMembershipPolicyClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_ROLES);\n\n\t\t\tRoleMembershipPolicyFactoryImpl roleMembershipPolicyFactoryImpl =\n\t\t\t\t(RoleMembershipPolicyFactoryImpl)\n\t\t\t\t\tRoleMembershipPolicyFactoryUtil.\n\t\t\t\t\t\tgetRoleMembershipPolicyFactory();\n\n\t\t\tRoleMembershipPolicy roleMembershipPolicy =\n\t\t\t\t(RoleMembershipPolicy)newInstance(\n\t\t\t\t\tportletClassLoader, RoleMembershipPolicy.class,\n\t\t\t\t\troleMembershipPolicyClassName);\n\n\t\t\troleMembershipPolicyFactoryImpl.setRoleMembershipPolicy(\n\t\t\t\troleMembershipPolicy);\n\n\t\t\tif (PropsValues.MEMBERSHIP_POLICY_AUTO_VERIFY) {\n\t\t\t\troleMembershipPolicy.verifyPolicy();\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.MEMBERSHIP_POLICY_SITES)) {\n\t\t\tString siteMembershipPolicyClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_SITES);\n\n\t\t\tSiteMembershipPolicyFactoryImpl siteMembershipPolicyFactoryImpl =\n\t\t\t\t(SiteMembershipPolicyFactoryImpl)\n\t\t\t\t\tSiteMembershipPolicyFactoryUtil.\n\t\t\t\t\t\tgetSiteMembershipPolicyFactory();\n\n\t\t\tSiteMembershipPolicy siteMembershipPolicy =\n\t\t\t\t(SiteMembershipPolicy)newInstance(\n\t\t\t\t\tportletClassLoader, SiteMembershipPolicy.class,\n\t\t\t\t\tsiteMembershipPolicyClassName);\n\n\t\t\tsiteMembershipPolicyFactoryImpl.setSiteMembershipPolicy(\n\t\t\t\tsiteMembershipPolicy);\n\n\t\t\tif (PropsValues.MEMBERSHIP_POLICY_AUTO_VERIFY) {\n\t\t\t\tsiteMembershipPolicy.verifyPolicy();\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_USER_GROUPS)) {\n\n\t\t\tString userGroupMembershipPolicyClassName =\n\t\t\t\tportalProperties.getProperty(\n\t\t\t\t\tPropsKeys.MEMBERSHIP_POLICY_USER_GROUPS);\n\n\t\t\tUserGroupMembershipPolicyFactoryImpl\n\t\t\t\tuserGroupMembershipPolicyFactoryImpl =\n\t\t\t\t\t(UserGroupMembershipPolicyFactoryImpl)\n\t\t\t\t\t\tUserGroupMembershipPolicyFactoryUtil.\n\t\t\t\t\t\t\tgetUserGroupMembershipPolicyFactory();\n\n\t\t\tUserGroupMembershipPolicy userGroupMembershipPolicy =\n\t\t\t\t(UserGroupMembershipPolicy)newInstance(\n\t\t\t\t\tportletClassLoader, UserGroupMembershipPolicy.class,\n\t\t\t\t\tuserGroupMembershipPolicyClassName);\n\n\t\t\tuserGroupMembershipPolicyFactoryImpl.setUserGroupMembershipPolicy(\n\t\t\t\tuserGroupMembershipPolicy);\n\n\t\t\tif (PropsValues.MEMBERSHIP_POLICY_AUTO_VERIFY) {\n\t\t\t\tuserGroupMembershipPolicy.verifyPolicy();\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.PASSWORDS_TOOLKIT)) {\n\t\t\tString toolkitClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.PASSWORDS_TOOLKIT);\n\n\t\t\tToolkit toolkit = (Toolkit)newInstance(\n\t\t\t\tportletClassLoader, Sanitizer.class, toolkitClassName);\n\n\t\t\tToolkitWrapper toolkitWrapper =\n\t\t\t\t(ToolkitWrapper)PwdToolkitUtil.getToolkit();\n\n\t\t\ttoolkitWrapper.setToolkit(toolkit);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.PHONE_NUMBER_FORMAT_IMPL)) {\n\t\t\tString phoneNumberFormatClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.PHONE_NUMBER_FORMAT_IMPL);\n\n\t\t\tPhoneNumberFormat phoneNumberFormat =\n\t\t\t\t(PhoneNumberFormat)newInstance(\n\t\t\t\t\tportletClassLoader, PhoneNumberFormat.class,\n\t\t\t\t\tphoneNumberFormatClassName);\n\n\t\t\tPhoneNumberFormatWrapper phoneNumberFormatWrapper =\n\t\t\t\t(PhoneNumberFormatWrapper)\n\t\t\t\t\tPhoneNumberFormatUtil.getPhoneNumberFormat();\n\n\t\t\tphoneNumberFormatWrapper.setPhoneNumberFormat(phoneNumberFormat);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.SANITIZER_IMPL)) {\n\t\t\tString[] sanitizerClassNames = StringUtil.split(\n\t\t\t\tportalProperties.getProperty(PropsKeys.SANITIZER_IMPL));\n\n\t\t\tSanitizerContainer sanitizerContainer = new SanitizerContainer();\n\n\t\t\t_sanitizerContainerMap.put(servletContextName, sanitizerContainer);\n\n\t\t\tfor (String sanitizerClassName : sanitizerClassNames) {\n\t\t\t\tSanitizer sanitizer = (Sanitizer)newInstance(\n\t\t\t\t\tportletClassLoader, Sanitizer.class, sanitizerClassName);\n\n\t\t\t\tsanitizerContainer.registerSanitizer(sanitizer);\n\t\t\t}\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_EMAIL_ADDRESS_GENERATOR)) {\n\n\t\t\tString emailAddressGeneratorClassName =\n\t\t\t\tportalProperties.getProperty(\n\t\t\t\t\tPropsKeys.USERS_EMAIL_ADDRESS_GENERATOR);\n\n\t\t\tEmailAddressGenerator emailAddressGenerator =\n\t\t\t\t(EmailAddressGenerator)newInstance(\n\t\t\t\t\tportletClassLoader, EmailAddressGenerator.class,\n\t\t\t\t\temailAddressGeneratorClassName);\n\n\t\t\tEmailAddressGeneratorFactory.setInstance(emailAddressGenerator);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_EMAIL_ADDRESS_VALIDATOR)) {\n\n\t\t\tString emailAddressValidatorClassName =\n\t\t\t\tportalProperties.getProperty(\n\t\t\t\t\tPropsKeys.USERS_EMAIL_ADDRESS_VALIDATOR);\n\n\t\t\tEmailAddressValidator emailAddressValidator =\n\t\t\t\t(EmailAddressValidator)newInstance(\n\t\t\t\t\tportletClassLoader, EmailAddressValidator.class,\n\t\t\t\t\temailAddressValidatorClassName);\n\n\t\t\tEmailAddressValidatorFactory.setInstance(emailAddressValidator);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.USERS_FULL_NAME_GENERATOR)) {\n\t\t\tString fullNameGeneratorClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.USERS_FULL_NAME_GENERATOR);\n\n\t\t\tFullNameGenerator fullNameGenerator =\n\t\t\t\t(FullNameGenerator)newInstance(\n\t\t\t\t\tportletClassLoader, FullNameGenerator.class,\n\t\t\t\t\tfullNameGeneratorClassName);\n\n\t\t\tFullNameGeneratorFactory.setInstance(fullNameGenerator);\n\t\t}\n\n\t\tif (portalProperties.containsKey(PropsKeys.USERS_FULL_NAME_VALIDATOR)) {\n\t\t\tString fullNameValidatorClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.USERS_FULL_NAME_VALIDATOR);\n\n\t\t\tFullNameValidator fullNameValidator =\n\t\t\t\t(FullNameValidator)newInstance(\n\t\t\t\t\tportletClassLoader, FullNameValidator.class,\n\t\t\t\t\tfullNameValidatorClassName);\n\n\t\t\tFullNameValidatorFactory.setInstance(fullNameValidator);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_SCREEN_NAME_GENERATOR)) {\n\n\t\t\tString screenNameGeneratorClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.USERS_SCREEN_NAME_GENERATOR);\n\n\t\t\tScreenNameGenerator screenNameGenerator =\n\t\t\t\t(ScreenNameGenerator)newInstance(\n\t\t\t\t\tportletClassLoader, ScreenNameGenerator.class,\n\t\t\t\t\tscreenNameGeneratorClassName);\n\n\t\t\tScreenNameGeneratorFactory.setInstance(screenNameGenerator);\n\t\t}\n\n\t\tif (portalProperties.containsKey(\n\t\t\t\tPropsKeys.USERS_SCREEN_NAME_VALIDATOR)) {\n\n\t\t\tString screenNameValidatorClassName = portalProperties.getProperty(\n\t\t\t\tPropsKeys.USERS_SCREEN_NAME_VALIDATOR);\n\n\t\t\tScreenNameValidator screenNameValidator =\n\t\t\t\t(ScreenNameValidator)newInstance(\n\t\t\t\t\tportletClassLoader, ScreenNameValidator.class,\n\t\t\t\t\tscreenNameValidatorClassName);\n\n\t\t\tScreenNameValidatorFactory.setInstance(screenNameValidator);\n\t\t}\n\n\t\tSet<String> liferayFilterClassNames =\n\t\t\tLiferayFilterTracker.getClassNames();\n\n\t\tfor (String liferayFilterClassName : liferayFilterClassNames) {\n\t\t\tif (!portalProperties.containsKey(liferayFilterClassName)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tboolean filterEnabled = GetterUtil.getBoolean(\n\t\t\t\tportalProperties.getProperty(liferayFilterClassName));\n\n\t\t\tSet<LiferayFilter> liferayFilters =\n\t\t\t\tLiferayFilterTracker.getLiferayFilters(liferayFilterClassName);\n\n\t\t\tfor (LiferayFilter liferayFilter : liferayFilters) {\n\t\t\t\tliferayFilter.setFilterEnabled(filterEnabled);\n\t\t\t}\n\t\t}\n\n\t\tif (unfilteredPortalProperties.containsKey(\n\t\t\t\tPropsKeys.RELEASE_INFO_BUILD_NUMBER) ||\n\t\t\tunfilteredPortalProperties.containsKey(\n\t\t\t\tPropsKeys.UPGRADE_PROCESSES)) {\n\n\t\t\tupdateRelease(\n\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\tunfilteredPortalProperties);\n\t\t}\n\t}","commit_id":"47b75b1518805488621050d7ede23b6a09e868e1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n  public void getPathTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      long fileId = mTachyonRawTables.createRawTable(uri, 1);\n      RawTable table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(\"/x/table\" + k, table.getPath());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(\"/x/table\" + k, table.getPath());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      fileId = mTachyonRawTables.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 10));\n      table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(\"/y/tab\" + k, table.getPath());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(\"/y/tab\" + k, table.getPath());\n    }\n  }","id":4235,"modified_method":"@Test\n  public void getPathTest() throws Exception {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      RawTable table = mTachyonRawTables.create(uri, 1);\n      RawTableInfo info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(\"/x/table\" + k, info.getPath());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      table = mTachyonRawTables.create(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 10));\n      info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(\"/y/tab\" + k, info.getPath());\n    }\n  }","commit_id":"fab07cfe9e7b1f9140bc3ec2f77f38d780b5ab36","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getNameTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      long fileId = mTachyonRawTables.createRawTable(uri, 1);\n      RawTable table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(\"table\" + k, table.getName());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(\"table\" + k, table.getName());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      fileId = mTachyonRawTables.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 10));\n      table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(\"tab\" + k, table.getName());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(\"tab\" + k, table.getName());\n    }\n  }","id":4236,"modified_method":"@Test\n  public void getNameTest() throws Exception {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      RawTable table = mTachyonRawTables.create(uri, 1);\n      RawTableInfo info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(\"table\" + k, info.getName());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      table = mTachyonRawTables.create(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 10));\n      info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(\"tab\" + k, info.getName());\n    }\n  }","commit_id":"fab07cfe9e7b1f9140bc3ec2f77f38d780b5ab36","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getIdTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/table\" + k);\n      long fileId = mTachyonRawTables.createRawTable(uri, 1);\n      RawTable table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(fileId, table.getId());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(fileId, table.getId());\n\n      uri = new TachyonURI(\"/tabl\" + k);\n      fileId = mTachyonRawTables.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 10));\n      table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(fileId, table.getId());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(fileId, table.getId());\n    }\n  }","id":4237,"modified_method":"@Test\n  public void getIdTest() throws Exception {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/table\" + k);\n      RawTable table = mTachyonRawTables.create(uri, 1);\n      RawTableInfo info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(table.getRawTableId(), info.getId());\n\n      uri = new TachyonURI(\"/tabl\" + k);\n      table = mTachyonRawTables.create(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 10));\n      info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(table.getRawTableId(), info.getId());\n    }\n  }","commit_id":"fab07cfe9e7b1f9140bc3ec2f77f38d780b5ab36","url":"https://github.com/amplab/tachyon"},{"original_method":"@Before\n  public final void before() throws Exception {\n    mTachyonRawTables = TachyonRawTables.TachyonRawTablesFactory.get();\n    mMaxCols =\n        mLocalTachyonClusterResource.get().getMasterTachyonConf().getInt(Constants.MAX_COLUMNS);\n  }","id":4238,"modified_method":"@Before\n  public final void before() throws Exception {\n    mTachyonFileSystem = TachyonFileSystem.TachyonFileSystemFactory.get();\n    mTachyonRawTables = TachyonRawTables.TachyonRawTablesFactory.get();\n    mMaxCols =\n        mLocalTachyonClusterResource.get().getMasterTachyonConf().getInt(Constants.MAX_COLUMNS);\n  }","commit_id":"fab07cfe9e7b1f9140bc3ec2f77f38d780b5ab36","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void updateMetadataTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      long fileId = mTachyonRawTables.createRawTable(uri, 1);\n      RawTable table = mTachyonRawTables.getRawTable(fileId);\n      table.updateMetadata(BufferUtils.getIncreasingByteBuffer(k % 17));\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 17), table.getMetadata());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 17), table.getMetadata());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      fileId = mTachyonRawTables.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 7));\n      table = mTachyonRawTables.getRawTable(fileId);\n      table.updateMetadata(BufferUtils.getIncreasingByteBuffer(k % 16));\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 16), table.getMetadata());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 16), table.getMetadata());\n    }\n  }","id":4239,"modified_method":"@Test\n  public void updateMetadataTest() throws Exception {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      RawTable table = mTachyonRawTables.create(uri, 1);\n      mTachyonRawTables.updateRawTableMetadata(table, BufferUtils.getIncreasingByteBuffer(k % 17));\n      RawTableInfo info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 17).array(), info.getMetadata());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      table = mTachyonRawTables.create(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 7));\n      mTachyonRawTables.updateRawTableMetadata(table, BufferUtils.getIncreasingByteBuffer(k % 16));\n      info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 16).array(), info.getMetadata());\n    }\n  }","commit_id":"fab07cfe9e7b1f9140bc3ec2f77f38d780b5ab36","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getMetadataTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      long fileId = mTachyonRawTables.createRawTable(uri, 1);\n      RawTable table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(ByteBuffer.allocate(0), table.getMetadata());\n      Assert.assertEquals(ByteBuffer.allocate(0), table.getMetadata());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(ByteBuffer.allocate(0), table.getMetadata());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      fileId = mTachyonRawTables.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 7));\n      table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7), table.getMetadata());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7), table.getMetadata());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7), table.getMetadata());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7), table.getMetadata());\n    }\n  }","id":4240,"modified_method":"@Test\n  public void getMetadataTest() throws Exception {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      RawTable table = mTachyonRawTables.create(uri, 1);\n      RawTableInfo info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(new byte[0], info.getMetadata());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      table = mTachyonRawTables.create(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 7));\n      info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7).array(), info.getMetadata());\n    }\n  }","commit_id":"fab07cfe9e7b1f9140bc3ec2f77f38d780b5ab36","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getColumnsTest() throws Exception {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/table\" + k);\n      RawTable table = mTachyonRawTables.create(uri, k);\n      RawTableInfo info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(k, info.getColumns());\n\n      uri = new TachyonURI(\"/table2\" + k);\n      table = mTachyonRawTables.create(uri, k, BufferUtils.getIncreasingByteBuffer(k % 10));\n      info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(k, table.getColumns());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(k, table.getColumns());\n    }\n  }","id":4241,"modified_method":"@Test\n  public void getColumnsTest() throws Exception {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/table\" + k);\n      RawTable table = mTachyonRawTables.create(uri, k);\n      RawTableInfo info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(k, info.getColumns());\n\n      uri = new TachyonURI(\"/tabl\" + k);\n      table = mTachyonRawTables.create(uri, k, BufferUtils.getIncreasingByteBuffer(k % 10));\n      info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(k, info.getColumns());\n    }\n  }","commit_id":"fab07cfe9e7b1f9140bc3ec2f77f38d780b5ab36","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void rawtablePerfTest() throws IOException {\n    int col = 200;\n\n    TachyonURI uri = new TachyonURI(\"/table\");\n    long fileId = mTachyonRawTables.createRawTable(uri, col);\n\n    RawTable table = mTachyonRawTables.getRawTable(fileId);\n    Assert.assertEquals(col, table.getColumns());\n    table = mTachyonRawTables.getRawTable(uri);\n    Assert.assertEquals(col, table.getColumns());\n\n    for (int k = 0; k < col; k ++) {\n      RawColumn rawCol = table.getRawColumn(k);\n      rawCol.createPartition(0);\n      TachyonFile file = rawCol.getPartition(0);\n      FileOutStream outStream = file.getOutStream();\n      outStream.write(BufferUtils.getIncreasingByteArray(10));\n      outStream.close();\n    }\n\n    for (int k = 0; k < col; k ++) {\n      RawColumn rawCol = table.getRawColumn(k);\n      TachyonFile file = rawCol.getPartition(0, true);\n      FileInStream is = file.getInStream(ReadType.CACHE);\n      ByteBuffer buf = ByteBuffer.allocate(10);\n      is.read(buf.array());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(10), buf);\n      is.close();\n    }\n\n    for (int k = 0; k < col; k ++) {\n      RawColumn rawCol = table.getRawColumn(k);\n      TachyonFile file = rawCol.getPartition(0, true);\n      FileInStream is = file.getInStream(ReadType.CACHE);\n      ByteBuffer buf = ByteBuffer.allocate(10);\n      is.read(buf.array());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(10), buf);\n      is.close();\n    }\n  }","id":4242,"modified_method":"@Test\n  public void rawtablePerfTest() throws Exception {\n    int col = 200;\n\n    TachyonURI uri = new TachyonURI(\"/table\");\n    RawTable table = mTachyonRawTables.create(uri, col);\n    RawTableInfo info = mTachyonRawTables.getInfo(table);\n\n    Assert.assertEquals(col, info.getColumns());\n\n    for (int k = 0; k < col; k ++) {\n      RawColumn rawCol = table.getColumn(k);\n      FileOutStream outStream = mTachyonRawTables.createPartition(rawCol, 0);\n      outStream.write(BufferUtils.getIncreasingByteArray(10));\n      outStream.close();\n    }\n\n    for (int k = 0; k < col; k ++) {\n      RawColumn rawCol = table.getColumn(k);\n      TachyonFile file = mTachyonRawTables.openPartition(rawCol, 0);\n      FileInStream is = mTachyonFileSystem.getInStream(file);\n      ByteBuffer buf = ByteBuffer.allocate(10);\n      is.read(buf.array());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(10), buf);\n      is.close();\n    }\n\n    for (int k = 0; k < col; k ++) {\n      RawColumn rawCol = table.getColumn(k);\n      TachyonFile file = mTachyonRawTables.openPartition(rawCol, 0);\n      FileInStream is = mTachyonFileSystem.getInStream(file);\n      ByteBuffer buf = ByteBuffer.allocate(10);\n      is.read(buf.array());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(10), buf);\n      is.close();\n    }\n  }","commit_id":"fab07cfe9e7b1f9140bc3ec2f77f38d780b5ab36","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n     * Keep requesting to Master until something crashes or fail to create. Record how many\n     * operations are performed successfully.\n     */\n    @Override\n    public void run() {\n      // This infinity loop will be broken when the master is crashed and the client needs to stop.\n      while (true) {\n        synchronized (this) {\n          if (mIsStopped) {\n            break;\n          }\n        }\n        try {\n          TachyonURI testURI = new TachyonURI(mWorkDir + mSuccessNum);\n          if (ClientOpType.CREATE_FILE == mOpType) {\n            sTfs.getOutStream(testURI, sOutStreamOptions).close();\n          } else if (ClientOpType.CREATE_DELETE_FILE == mOpType) {\n            try {\n              sTfs.getOutStream(testURI, sOutStreamOptions).close();\n            } catch (TachyonException e) {\n              // If file already exists, ignore it.\n              if (e.getType() != TachyonExceptionType.FILE_ALREADY_EXISTS) {\n                throw e;\n              }\n            } catch (Exception e) {\n              throw e;\n            }\n            sTfs.delete(sTfs.open(testURI));\n          } else if (ClientOpType.CREATE_RENAME_FILE == mOpType) {\n            try {\n              sTfs.getOutStream(testURI, sOutStreamOptions).close();\n            } catch (TachyonException e) {\n              // If file already exists, ignore it.\n              if (e.getType() != TachyonExceptionType.FILE_ALREADY_EXISTS) {\n                throw e;\n              }\n            } catch (Exception e) {\n              throw e;\n            }\n            sTfs.rename(sTfs.open(testURI), new TachyonURI(testURI + \"-rename\"));\n          } else if (ClientOpType.CREATE_TABLE == mOpType) {\n            if (sOldTfs.createRawTable(new TachyonURI(mWorkDir + mSuccessNum), 1) == -1) {\n              break;\n            }\n          }\n        } catch (Exception e) {\n          // Since master may crash/restart for several times, so this exception is expected.\n          // Ignore the exception and still keep requesting to master.\n          continue;\n        }\n        mSuccessNum ++;\n        CommonUtils.sleepMs(100);\n      }\n    }","id":4243,"modified_method":"/**\n     * Keep requesting to Master until something crashes or fail to create. Record how many\n     * operations are performed successfully.\n     */\n    @Override\n    public void run() {\n      // This infinity loop will be broken when the master is crashed and the client needs to stop.\n      while (true) {\n        synchronized (this) {\n          if (mIsStopped) {\n            break;\n          }\n        }\n        try {\n          TachyonURI testURI = new TachyonURI(mWorkDir + mSuccessNum);\n          if (ClientOpType.CREATE_FILE == mOpType) {\n            sTfs.getOutStream(testURI, sOutStreamOptions).close();\n          } else if (ClientOpType.CREATE_DELETE_FILE == mOpType) {\n            try {\n              sTfs.getOutStream(testURI, sOutStreamOptions).close();\n            } catch (TachyonException e) {\n              // If file already exists, ignore it.\n              if (e.getType() != TachyonExceptionType.FILE_ALREADY_EXISTS) {\n                throw e;\n              }\n            } catch (Exception e) {\n              throw e;\n            }\n            sTfs.delete(sTfs.open(testURI));\n          } else if (ClientOpType.CREATE_RENAME_FILE == mOpType) {\n            try {\n              sTfs.getOutStream(testURI, sOutStreamOptions).close();\n            } catch (TachyonException e) {\n              // If file already exists, ignore it.\n              if (e.getType() != TachyonExceptionType.FILE_ALREADY_EXISTS) {\n                throw e;\n              }\n            } catch (Exception e) {\n              throw e;\n            }\n            sTfs.rename(sTfs.open(testURI), new TachyonURI(testURI + \"-rename\"));\n          } else if (ClientOpType.CREATE_TABLE == mOpType) {\n            try {\n              sTachyonRawTables.create(new TachyonURI(mWorkDir + mSuccessNum), 1, null);\n            } catch (Exception e) {\n              break;\n            }\n          }\n        } catch (Exception e) {\n          // Since master may crash/restart for several times, so this exception is expected.\n          // Ignore the exception and still keep requesting to master.\n          continue;\n        }\n        mSuccessNum ++;\n        CommonUtils.sleepMs(100);\n      }\n    }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"public static void main(String[] args) {\n    // Parse the input args.\n    if (!parseInputArgs(args)) {\n      System.exit(EXIT_FAILED);\n    }\n\n    System.out.println(\"Stop the current Tachyon cluster...\");\n    stopCluster();\n\n    // Set NO_STORE and NO_PERSIST so that this test can work without TachyonWorker.\n    sOutStreamOptions =\n        new OutStreamOptions.Builder(new TachyonConf())\n            .setTachyonStorageType(TachyonStorageType.NO_STORE)\n            .setUnderStorageType(UnderStorageType.NO_PERSIST).build();\n    // Set the max retry to avoid long pending for client disconnect.\n    if (System.getProperty(Constants.MASTER_RETRY_COUNT) == null) {\n      System.setProperty(Constants.MASTER_RETRY_COUNT, \"10\");\n    }\n\n    System.out.println(\"Start Journal Crash Test...\");\n    long startTimeMs = System.currentTimeMillis();\n    boolean ret = true;\n    startMaster();\n\n    int rounds = 0;\n    while (System.currentTimeMillis() - startTimeMs < sTotalTimeMs) {\n      rounds ++;\n      long aliveTimeMs = (long)(Math.random() * sMaxAliveTimeMs) + 100;\n      LOG.info(\"Round {}: Planning Master Alive Time {}ms.\", rounds, aliveTimeMs);\n\n      System.out.println(\"Round \" + rounds + \" : Launch Clients...\");\n      sTfs = TachyonFileSystemFactory.get();\n      sOldTfs = TachyonFS.get(ClientContext.getConf());\n      try {\n        sTfs.delete(sTfs.open(new TachyonURI(sTestDir)));\n      } catch (Exception ioe) {\n        // Test Directory not exist\n      }\n\n      // Launch all the client threads.\n      setupClientThreads();\n      for (Thread thread : sClientThreadList) {\n        thread.start();\n      }\n\n      CommonUtils.sleepMs(LOG, aliveTimeMs);\n      System.out.println(\"Round \" + rounds + \" : Crash Master...\");\n      killMaster();\n      for (ClientThread clientThread : sClientThreadList) {\n        clientThread.setIsStopped(true);\n      }\n      for (Thread thread : sClientThreadList) {\n        try {\n          thread.join();\n        } catch (InterruptedException e) {\n          LOG.error(\"Error when waiting thread\", e);\n        }\n      }\n\n      System.out.println(\"Round \" + rounds + \" : Check Status...\");\n      startMaster();\n      boolean checkSuccess = false;\n      try {\n        checkSuccess = checkStatus();\n      } catch (Exception e) {\n        LOG.error(\"Failed to check status\", e);\n      }\n      Utils.printPassInfo(checkSuccess);\n      ret &= checkSuccess;\n    }\n\n    stopCluster();\n    System.exit(ret ? EXIT_SUCCESS : EXIT_FAILED);\n  }","id":4244,"modified_method":"public static void main(String[] args) {\n    // Parse the input args.\n    if (!parseInputArgs(args)) {\n      System.exit(EXIT_FAILED);\n    }\n\n    System.out.println(\"Stop the current Tachyon cluster...\");\n    stopCluster();\n\n    // Set NO_STORE and NO_PERSIST so that this test can work without TachyonWorker.\n    sOutStreamOptions =\n        new OutStreamOptions.Builder(new TachyonConf())\n            .setTachyonStorageType(TachyonStorageType.NO_STORE)\n            .setUnderStorageType(UnderStorageType.NO_PERSIST).build();\n    // Set the max retry to avoid long pending for client disconnect.\n    if (System.getProperty(Constants.MASTER_RETRY_COUNT) == null) {\n      System.setProperty(Constants.MASTER_RETRY_COUNT, \"10\");\n    }\n\n    System.out.println(\"Start Journal Crash Test...\");\n    long startTimeMs = System.currentTimeMillis();\n    boolean ret = true;\n    startMaster();\n\n    int rounds = 0;\n    while (System.currentTimeMillis() - startTimeMs < sTotalTimeMs) {\n      rounds ++;\n      long aliveTimeMs = (long)(Math.random() * sMaxAliveTimeMs) + 100;\n      LOG.info(\"Round {}: Planning Master Alive Time {}ms.\", rounds, aliveTimeMs);\n\n      System.out.println(\"Round \" + rounds + \" : Launch Clients...\");\n      sTfs = TachyonFileSystem.TachyonFileSystemFactory.get();\n      sTachyonRawTables = TachyonRawTables.TachyonRawTablesFactory.get();\n      try {\n        sTfs.delete(sTfs.open(new TachyonURI(sTestDir)));\n      } catch (Exception ioe) {\n        // Test Directory not exist\n      }\n\n      // Launch all the client threads.\n      setupClientThreads();\n      for (Thread thread : sClientThreadList) {\n        thread.start();\n      }\n\n      CommonUtils.sleepMs(LOG, aliveTimeMs);\n      System.out.println(\"Round \" + rounds + \" : Crash Master...\");\n      killMaster();\n      for (ClientThread clientThread : sClientThreadList) {\n        clientThread.setIsStopped(true);\n      }\n      for (Thread thread : sClientThreadList) {\n        try {\n          thread.join();\n        } catch (InterruptedException e) {\n          LOG.error(\"Error when waiting thread\", e);\n        }\n      }\n\n      System.out.println(\"Round \" + rounds + \" : Check Status...\");\n      startMaster();\n      boolean checkSuccess = false;\n      try {\n        checkSuccess = checkStatus();\n      } catch (Exception e) {\n        LOG.error(\"Failed to check status\", e);\n      }\n      Utils.printPassInfo(checkSuccess);\n      ret &= checkSuccess;\n    }\n\n    stopCluster();\n    System.exit(ret ? EXIT_SUCCESS : EXIT_FAILED);\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"@Before\n  public final void before() throws Exception {\n    mLocalTachyonCluster = mLocalTachyonClusterResource.get();\n    mTfs = mLocalTachyonCluster.getClient();\n    mOldTfs = mLocalTachyonCluster.getOldClient();\n    mMasterTachyonConf = mLocalTachyonCluster.getMasterTachyonConf();\n  }","id":4245,"modified_method":"@Before\n  public final void before() throws Exception {\n    mLocalTachyonCluster = mLocalTachyonClusterResource.get();\n    mTfs = mLocalTachyonCluster.getClient();\n    mTachyonRawTables = TachyonRawTables.TachyonRawTablesFactory.get();\n    mMasterTachyonConf = mLocalTachyonCluster.getMasterTachyonConf();\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Test raw table creation.\n   *\n   * @throws Exception\n   */\n  @Test\n  public void rawTableTest() throws Exception {\n    mOldTfs.createRawTable(new TachyonURI(\"/xyz\"), 10);\n    FileInfo fInfo = mTfs.getInfo(mTfs.open(new TachyonURI(\"/xyz\")));\n    mLocalTachyonCluster.stopTFS();\n    rawTableTestUtil(fInfo);\n    deleteFsMasterJournalLogs();\n    rawTableTestUtil(fInfo);\n  }","id":4246,"modified_method":"/**\n   * Test raw table creation.\n   *\n   * @throws Exception\n   */\n  @Test\n  public void rawTableTest() throws Exception {\n    mTachyonRawTables.create(new TachyonURI(\"/xyz\"), 10);\n    FileInfo fInfo = mTfs.getInfo(mTfs.open(new TachyonURI(\"/xyz\")));\n    mLocalTachyonCluster.stopTFS();\n    rawTableTestUtil(fInfo);\n    deleteFsMasterJournalLogs();\n    rawTableTestUtil(fInfo);\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"@Before\n  public final void before() throws Exception {\n    mTfs = mLocalTachyonClusterResource.get().getOldClient();\n  }","id":4247,"modified_method":"@Before\n  public final void before() throws Exception {\n    mTachyonFileSystem = mLocalTachyonClusterResource.get().getClient();\n    mTachyonRawTables = TachyonRawTables.TachyonRawTablesFactory.get();\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void basicTest() throws IOException, TException {\n    TachyonConf conf = mLocalTachyonClusterResource.get().getMasterTachyonConf();\n    int maxCols = conf.getInt(Constants.MAX_COLUMNS);\n\n    long fileId = mTfs.createRawTable(new TachyonURI(\"/table\"), maxCols / 10);\n    RawTable table = mTfs.getRawTable(fileId);\n\n    for (int col = 0; col < maxCols / 10; col ++) {\n      RawColumn column = table.getRawColumn(col);\n      for (int pid = 0; pid < 5; pid ++) {\n        Assert.assertTrue(column.createPartition(pid));\n        TachyonFile file = column.getPartition(pid);\n        Assert.assertEquals(\"/table\" + TachyonURI.SEPARATOR + Constants.MASTER_COLUMN_FILE_PREFIX\n            + col + TachyonURI.SEPARATOR + pid, file.getPath());\n      }\n      Assert.assertEquals(5, column.partitions());\n    }\n  }","id":4248,"modified_method":"@Test\n  public void basicTest() throws Exception {\n    TachyonConf conf = mLocalTachyonClusterResource.get().getMasterTachyonConf();\n    int maxCols = conf.getInt(Constants.MAX_COLUMNS);\n\n    RawTable table = mTachyonRawTables.create(new TachyonURI(\"/table\"), maxCols / 10);\n\n    for (int col = 0; col < maxCols / 10; col ++) {\n      RawColumn column = table.getColumn(col);\n      for (int pid = 0; pid < 5; pid ++) {\n        // Create an empty partition\n        mTachyonRawTables.createPartition(column, pid).close();\n        TachyonFile file = mTachyonRawTables.openPartition(column, pid);\n        FileInfo partitionInfo = mTachyonFileSystem.getInfo(file);\n        Assert.assertEquals(\"/table\" + TachyonURI.SEPARATOR + Constants.MASTER_COLUMN_FILE_PREFIX\n            + col + TachyonURI.SEPARATOR + pid, partitionInfo.getPath());\n      }\n      Assert.assertEquals(5, mTachyonRawTables.getPartitionCount(column));\n    }\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getNameTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      long fileId = mTfs.createRawTable(uri, 1);\n      RawTable table = mTfs.getRawTable(fileId);\n      Assert.assertEquals(\"table\" + k, table.getName());\n      table = mTfs.getRawTable(uri);\n      Assert.assertEquals(\"table\" + k, table.getName());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      fileId = mTfs.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 10));\n      table = mTfs.getRawTable(fileId);\n      Assert.assertEquals(\"tab\" + k, table.getName());\n      table = mTfs.getRawTable(uri);\n      Assert.assertEquals(\"tab\" + k, table.getName());\n    }\n  }","id":4249,"modified_method":"@Test\n  public void getNameTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      long fileId = mTachyonRawTables.createRawTable(uri, 1);\n      RawTable table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(\"table\" + k, table.getName());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(\"table\" + k, table.getName());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      fileId = mTachyonRawTables.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 10));\n      table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(\"tab\" + k, table.getName());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(\"tab\" + k, table.getName());\n    }\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void updateMetadataTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      long fileId = mTfs.createRawTable(uri, 1);\n      RawTable table = mTfs.getRawTable(fileId);\n      table.updateMetadata(BufferUtils.getIncreasingByteBuffer(k % 17));\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 17), table.getMetadata());\n      table = mTfs.getRawTable(uri);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 17), table.getMetadata());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      fileId = mTfs.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 7));\n      table = mTfs.getRawTable(fileId);\n      table.updateMetadata(BufferUtils.getIncreasingByteBuffer(k % 16));\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 16), table.getMetadata());\n      table = mTfs.getRawTable(uri);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 16), table.getMetadata());\n    }\n  }","id":4250,"modified_method":"@Test\n  public void updateMetadataTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      long fileId = mTachyonRawTables.createRawTable(uri, 1);\n      RawTable table = mTachyonRawTables.getRawTable(fileId);\n      table.updateMetadata(BufferUtils.getIncreasingByteBuffer(k % 17));\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 17), table.getMetadata());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 17), table.getMetadata());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      fileId = mTachyonRawTables.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 7));\n      table = mTachyonRawTables.getRawTable(fileId);\n      table.updateMetadata(BufferUtils.getIncreasingByteBuffer(k % 16));\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 16), table.getMetadata());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 16), table.getMetadata());\n    }\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getColumnsTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/table\" + k);\n      long fileId = mTfs.createRawTable(uri, k);\n      RawTable table = mTfs.getRawTable(fileId);\n      Assert.assertEquals(k, table.getColumns());\n      table = mTfs.getRawTable(uri);\n      Assert.assertEquals(k, table.getColumns());\n\n      uri = new TachyonURI(\"/tabl\" + k);\n      fileId = mTfs.createRawTable(uri, k, BufferUtils.getIncreasingByteBuffer(k % 10));\n      table = mTfs.getRawTable(fileId);\n      Assert.assertEquals(k, table.getColumns());\n      table = mTfs.getRawTable(uri);\n      Assert.assertEquals(k, table.getColumns());\n    }\n  }","id":4251,"modified_method":"@Test\n  public void getColumnsTest() throws Exception {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/table\" + k);\n      RawTable table = mTachyonRawTables.create(uri, k);\n      RawTableInfo info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(k, info.getColumns());\n\n      uri = new TachyonURI(\"/table2\" + k);\n      table = mTachyonRawTables.create(uri, k, BufferUtils.getIncreasingByteBuffer(k % 10));\n      info = mTachyonRawTables.getInfo(table);\n      Assert.assertEquals(k, table.getColumns());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(k, table.getColumns());\n    }\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getIdTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/table\" + k);\n      long fileId = mTfs.createRawTable(uri, 1);\n      RawTable table = mTfs.getRawTable(fileId);\n      Assert.assertEquals(fileId, table.getId());\n      table = mTfs.getRawTable(uri);\n      Assert.assertEquals(fileId, table.getId());\n\n      uri = new TachyonURI(\"/tabl\" + k);\n      fileId = mTfs.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 10));\n      table = mTfs.getRawTable(fileId);\n      Assert.assertEquals(fileId, table.getId());\n      table = mTfs.getRawTable(uri);\n      Assert.assertEquals(fileId, table.getId());\n    }\n  }","id":4252,"modified_method":"@Test\n  public void getIdTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/table\" + k);\n      long fileId = mTachyonRawTables.createRawTable(uri, 1);\n      RawTable table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(fileId, table.getId());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(fileId, table.getId());\n\n      uri = new TachyonURI(\"/tabl\" + k);\n      fileId = mTachyonRawTables.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 10));\n      table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(fileId, table.getId());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(fileId, table.getId());\n    }\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"@Before\n  public final void before() throws Exception {\n    mTfs = mLocalTachyonClusterResource.get().getOldClient();\n    mMaxCols =\n        mLocalTachyonClusterResource.get().getMasterTachyonConf().getInt(Constants.MAX_COLUMNS);\n  }","id":4253,"modified_method":"@Before\n  public final void before() throws Exception {\n    mTachyonRawTables = TachyonRawTables.TachyonRawTablesFactory.get();\n    mMaxCols =\n        mLocalTachyonClusterResource.get().getMasterTachyonConf().getInt(Constants.MAX_COLUMNS);\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getPathTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      long fileId = mTfs.createRawTable(uri, 1);\n      RawTable table = mTfs.getRawTable(fileId);\n      Assert.assertEquals(\"/x/table\" + k, table.getPath());\n      table = mTfs.getRawTable(uri);\n      Assert.assertEquals(\"/x/table\" + k, table.getPath());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      fileId = mTfs.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 10));\n      table = mTfs.getRawTable(fileId);\n      Assert.assertEquals(\"/y/tab\" + k, table.getPath());\n      table = mTfs.getRawTable(uri);\n      Assert.assertEquals(\"/y/tab\" + k, table.getPath());\n    }\n  }","id":4254,"modified_method":"@Test\n  public void getPathTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      long fileId = mTachyonRawTables.createRawTable(uri, 1);\n      RawTable table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(\"/x/table\" + k, table.getPath());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(\"/x/table\" + k, table.getPath());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      fileId = mTachyonRawTables.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 10));\n      table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(\"/y/tab\" + k, table.getPath());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(\"/y/tab\" + k, table.getPath());\n    }\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getMetadataTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      long fileId = mTfs.createRawTable(uri, 1);\n      RawTable table = mTfs.getRawTable(fileId);\n      Assert.assertEquals(ByteBuffer.allocate(0), table.getMetadata());\n      Assert.assertEquals(ByteBuffer.allocate(0), table.getMetadata());\n      table = mTfs.getRawTable(uri);\n      Assert.assertEquals(ByteBuffer.allocate(0), table.getMetadata());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      fileId = mTfs.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 7));\n      table = mTfs.getRawTable(fileId);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7), table.getMetadata());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7), table.getMetadata());\n      table = mTfs.getRawTable(uri);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7), table.getMetadata());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7), table.getMetadata());\n    }\n  }","id":4255,"modified_method":"@Test\n  public void getMetadataTest() throws IOException {\n    for (int k = 1; k < mMaxCols; k += mMaxCols / 5) {\n      TachyonURI uri = new TachyonURI(\"/x/table\" + k);\n      long fileId = mTachyonRawTables.createRawTable(uri, 1);\n      RawTable table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(ByteBuffer.allocate(0), table.getMetadata());\n      Assert.assertEquals(ByteBuffer.allocate(0), table.getMetadata());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(ByteBuffer.allocate(0), table.getMetadata());\n\n      uri = new TachyonURI(\"/y/tab\" + k);\n      fileId = mTachyonRawTables.createRawTable(uri, 1, BufferUtils.getIncreasingByteBuffer(k % 7));\n      table = mTachyonRawTables.getRawTable(fileId);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7), table.getMetadata());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7), table.getMetadata());\n      table = mTachyonRawTables.getRawTable(uri);\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7), table.getMetadata());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(k % 7), table.getMetadata());\n    }\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void rawtablePerfTest() throws IOException {\n    int col = 200;\n\n    TachyonURI uri = new TachyonURI(\"/table\");\n    long fileId = mTfs.createRawTable(uri, col);\n\n    RawTable table = mTfs.getRawTable(fileId);\n    Assert.assertEquals(col, table.getColumns());\n    table = mTfs.getRawTable(uri);\n    Assert.assertEquals(col, table.getColumns());\n\n    for (int k = 0; k < col; k ++) {\n      RawColumn rawCol = table.getRawColumn(k);\n      rawCol.createPartition(0);\n      TachyonFile file = rawCol.getPartition(0);\n      FileOutStream outStream = file.getOutStream();\n      outStream.write(BufferUtils.getIncreasingByteArray(10));\n      outStream.close();\n    }\n\n    for (int k = 0; k < col; k ++) {\n      RawColumn rawCol = table.getRawColumn(k);\n      TachyonFile file = rawCol.getPartition(0, true);\n      FileInStream is = file.getInStream(ReadType.CACHE);\n      ByteBuffer buf = ByteBuffer.allocate(10);\n      is.read(buf.array());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(10), buf);\n      is.close();\n    }\n\n    for (int k = 0; k < col; k ++) {\n      RawColumn rawCol = table.getRawColumn(k);\n      TachyonFile file = rawCol.getPartition(0, true);\n      FileInStream is = file.getInStream(ReadType.CACHE);\n      ByteBuffer buf = ByteBuffer.allocate(10);\n      is.read(buf.array());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(10), buf);\n      is.close();\n    }\n  }","id":4256,"modified_method":"@Test\n  public void rawtablePerfTest() throws IOException {\n    int col = 200;\n\n    TachyonURI uri = new TachyonURI(\"/table\");\n    long fileId = mTachyonRawTables.createRawTable(uri, col);\n\n    RawTable table = mTachyonRawTables.getRawTable(fileId);\n    Assert.assertEquals(col, table.getColumns());\n    table = mTachyonRawTables.getRawTable(uri);\n    Assert.assertEquals(col, table.getColumns());\n\n    for (int k = 0; k < col; k ++) {\n      RawColumn rawCol = table.getRawColumn(k);\n      rawCol.createPartition(0);\n      TachyonFile file = rawCol.getPartition(0);\n      FileOutStream outStream = file.getOutStream();\n      outStream.write(BufferUtils.getIncreasingByteArray(10));\n      outStream.close();\n    }\n\n    for (int k = 0; k < col; k ++) {\n      RawColumn rawCol = table.getRawColumn(k);\n      TachyonFile file = rawCol.getPartition(0, true);\n      FileInStream is = file.getInStream(ReadType.CACHE);\n      ByteBuffer buf = ByteBuffer.allocate(10);\n      is.read(buf.array());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(10), buf);\n      is.close();\n    }\n\n    for (int k = 0; k < col; k ++) {\n      RawColumn rawCol = table.getRawColumn(k);\n      TachyonFile file = rawCol.getPartition(0, true);\n      FileInStream is = file.getInStream(ReadType.CACHE);\n      ByteBuffer buf = ByteBuffer.allocate(10);\n      is.read(buf.array());\n      Assert.assertEquals(BufferUtils.getIncreasingByteBuffer(10), buf);\n      is.close();\n    }\n  }","commit_id":"e5c8d6196e18e7f574b500c845fe9513c01fbec7","url":"https://github.com/amplab/tachyon"},{"original_method":"private void initSlotFinder() {\n\t\tslotFinder = new DBJob() {\n\t\t\n\t\tpublic boolean run(ObjectContainer container, ClientContext context) {\n\t\t\tint added = 0;\n\t\t\t\n\t\t\twhile(true) {\n\t\t\tsynchronized(PersistentBlobTempBucketFactory.this) {\n\t\t\t\tif(freeSlots.size() > MAX_FREE) return false;\n\t\t\t}\n\t\t\tlong blocks = getSize();\n\t\t\tif(blocks == Long.MAX_VALUE) return false;\n\t\t\tlong ptr = blocks - 1;\n\t\t\tboolean changedTags = false;\n\t\t\t\n\t\t\tif(freeBlocksCache != null) {\n\t\t\t\tint first = -1;\nouter:\t\t\twhile(true) {\n\t\t\t\t\tLogger.error(this, \"Maybe found free slot from bitmap \"+first);\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tfirst = freeBlocksCache.firstZero(first+1);\n\t\t\t\t\t\tif(first == -1) break;\n\t\t\t\t\t\tif(first > ptr) break;\n\t\t\t\t\t\tif(freeSlots.containsKey((long)first)) continue;\n\t\t\t\t\t\tif(almostFreeSlots.containsKey((long)first)) continue;\n\t\t\t\t\t\tif(notCommittedBlobs.containsKey((long)first)) continue;\n\t\t\t\t\t}\n\t\t\t\t\tQuery query = container.query();\n\t\t\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\t\t\tquery.descend(\"index\").constrain((long)first);\n\t\t\t\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\t\t\t\t\n\t\t\t\t\twhile(tags.hasNext()) {\n\t\t\t\t\t\tPersistentBlobTempBucketTag tag = tags.next();\n\t\t\t\t\t\tif(tag.factory != PersistentBlobTempBucketFactory.this) continue;\n\t\t\t\t\t\tif(!tag.isFree) continue outer;\n\t\t\t\t\t\tif(tag.bucket != null) {\n\t\t\t\t\t\t\tLogger.error(this, \"Index \"+first+\" has bucket despite free?!\");\n\t\t\t\t\t\t\tcontainer.activate(tag.bucket, 2);\n\t\t\t\t\t\t\tif(!tag.bucket.freed()) {\n\t\t\t\t\t\t\t\tLogger.error(this, \"And the bucket is not free either!\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\t\tfreeSlots.put((long)first, tag);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tadded++;\n\t\t\t\t\t\tchangedTags = true;\n\t\t\t\t\t\tLogger.error(this, \"Found free slot from bitmap \"+first);\n\t\t\t\t\t\tif(added > MAX_FREE) return true;\n\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Not found\n\t\t\t\t\tLogger.error(PersistentBlobTempBucketFactory.this, \"No tag for index \"+first);\n\t\t\t\t\tPersistentBlobTempBucketTag tag = new PersistentBlobTempBucketTag(PersistentBlobTempBucketFactory.this, first);\n\t\t\t\t\tcontainer.store(tag);\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tfreeSlots.put(ptr, tag);\n\t\t\t\t\t}\n\t\t\t\t\tLogger.error(this, \"Found free slot (missing) from bitmap \"+first);\n\t\t\t\t\tadded++;\n\t\t\t\t\tchangedTags = true;\n\t\t\t\t\tif(added > MAX_FREE) return true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(long l = 0; l < blockSize + 16383; l += 16384) {\n\t\t\tQuery query = container.query();\n\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\tquery.descend(\"isFree\").constrain(true).and(query.descend(\"index\").constrain(l).smaller());\n\t\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\t\tLong[] notCommitted;\n\t\t\tsynchronized(PersistentBlobTempBucketFactory.this) {\n\t\t\t\twhile(tags.hasNext()) {\n\t\t\t\t\tPersistentBlobTempBucketTag tag = tags.next();\n\t\t\t\t\tif(!tag.isFree) {\n\t\t\t\t\t\tLogger.error(this, \"Tag not free! \"+tag.index);\n\t\t\t\t\t\tif(tag.bucket == null) {\n\t\t\t\t\t\t\tLogger.error(this, \"Tag flagged non-free yet has no bucket for index \"+tag.index);\n\t\t\t\t\t\t\ttag.isFree = true;\n\t\t\t\t\t\t\tcontainer.store(tag);\n\t\t\t\t\t\t\tchangedTags = true;\n\t\t\t\t\t\t} else continue;\n\t\t\t\t\t}\n\t\t\t\t\tif(tag.bucket != null) {\n\t\t\t\t\t\tLogger.error(this, \"Query returned tag with valid bucket!\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(tag.factory != PersistentBlobTempBucketFactory.this) continue;\n\t\t\t\t\tif(notCommittedBlobs.containsKey(tag.index)) continue;\n\t\t\t\t\tif(almostFreeSlots.containsKey(tag.index)) continue;\n\t\t\t\t\tif(freeSlots.containsKey(tag.index)) continue;\n\t\t\t\t\tif(tag.bucket != null) {\n\t\t\t\t\t\tLogger.error(this, \"Bucket is occupied but not in notCommittedBlobs?!: \"+tag+\" : \"+tag.bucket);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(tag.index > ptr) {\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Not adding slot \"+tag.index+\" to freeSlots because it is past the end of the file (but it is free)\");\n\t\t\t\t\t\tcontainer.delete(tag);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Adding slot \"+tag.index+\" to freeSlots (has a free tag and no taken tag)\");\n\t\t\t\t\tfreeSlots.put(tag.index, tag);\n\t\t\t\t\tadded++;\n\t\t\t\t\tif(added > MAX_FREE) return changedTags;\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t\t/* FIXME: The issue below has been marked as FIXED in the db4o bugtracker. Can this be resolved now? */\n\t\t\t\n\t\t\t// Checking for slots marked occupied with bucket != null is nontrivial,\n\t\t\t// because constraining to null doesn't work - causes an OOM with a large database,\n\t\t\t// because it DOES NOT USE THE INDEX and therefore instantiates every object and OOMs.\n\t\t\t// See http://tracker.db4o.com/browse/COR-1446\n\t\t\t\n\t\t\t// Check that the number of tags is equal to the size of the file.\n\t\t\t\n\t\t\tif(logMINOR) Logger.minor(this, \"Checking number of tags against file size...\");\n\t\t\tQuery query = container.query();\n\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\t\tlong inDB = tags.size();\n\t\t\tif(logMINOR) Logger.minor(this, \"Checked size.\");\n\t\t\ttags = null;\n\t\t\tif(inDB < ptr) {\n\t\t\t\tLogger.error(this, \"Tags in database: \"+inDB+\" but size of file allows: \"+ptr);\n\t\t\t\t// Recover: exhaustive index search. This can cause very long pauses, but should only happen if there is a bug.\n\t\t\t\tfor(long l = ptr-1; l >= 0; l--) {\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tif(freeSlots.containsKey(l)) continue;\n\t\t\t\t\t\tif(notCommittedBlobs.containsKey(l)) continue;\n\t\t\t\t\t\tif(almostFreeSlots.containsKey(l)) continue;\n\t\t\t\t\t}\n\t\t\t\t\tquery = container.query();\n\t\t\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\t\t\tquery.descend(\"index\").constrain(l);\n\t\t\t\t\ttags = query.execute();\n\t\t\t\t\tif(tags.hasNext()) continue;\n\t\t\t\t\tLogger.error(this, \"FOUND EMPTY SLOT: \"+l+\" when scanning the blob file because tags in database < length of file\");\n\t\t\t\t\tPersistentBlobTempBucketTag tag = new PersistentBlobTempBucketTag(PersistentBlobTempBucketFactory.this, l);\n\t\t\t\t\tcontainer.store(tag);\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tfreeSlots.put(ptr, tag);\n\t\t\t\t\t}\n\t\t\t\t\tadded++;\n\t\t\t\t\tchangedTags = true;\n\t\t\t\t\tif(added > MAX_FREE) return true;\n\t\t\t\t\tif(l + added == ptr) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tDBJob freeJob = null;\n\t\t\tsynchronized(this) {\n\t\t\t\tif(!freeJobs.isEmpty()) {\n\t\t\t\t\tfreeJob = freeJobs.iterator().next();\n\t\t\t\t\tfreeJobs.remove(freeJob);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(freeJob != null) {\n\t\t\t\tcontainer.activate(freeJob, 1);\n\t\t\t\tSystem.err.println(\"Freeing some space by running \"+freeJob);\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Freeing some space by running \"+freeJob);\n\t\t\t\tfreeJob.run(container, context);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\t// Lets extend the file.\n\t\t\t// FIXME if physical security is LOW, just set the length, possibly\n\t\t\t// padding will nonrandom nulls on unix.\n\t\t\tlong addBlocks = Math.min(8192, (blocks / 10) + 32);\n\t\t\t\n\t\t\tsynchronized(this) {\n\t\t\t\tif(freeBlocksCache != null)\n\t\t\t\t\tfreeBlocksCache.setSize((int) Math.min(Integer.MAX_VALUE, (ptr + addBlocks)));\n\t\t\t}\n\t\t\t\n\t\t\tlong extendBy = addBlocks * blockSize;\n\t\t\tlong written = 0;\n\t\t\tbyte[] buf = new byte[65536];\n\t\t\tByteBuffer buffer = ByteBuffer.wrap(buf);\n\t\t\twhile(written < extendBy) {\n\t\t\t\tweakRandomSource.nextBytes(buf);\n\t\t\t\tint bytesLeft = (int) Math.min(extendBy - written, Integer.MAX_VALUE);\n\t\t\t\tif(bytesLeft < buf.length)\n\t\t\t\t\tbuffer.limit(bytesLeft);\n\t\t\t\ttry {\n\t\t\t\t\twritten += channel.write(buffer, blocks * blockSize + written);\n\t\t\t\t\tbuffer.clear();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsynchronized(this) {\n\t\t\t\tcachedSize = blocks + addBlocks;\n\t\t\t}\n\t\t\tquery = container.query();\n\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\tquery.descend(\"index\").constrain(blocks-1).greater().and(query.descend(\"factory\").constrain(PersistentBlobTempBucketFactory.this));\n\t\t\tHashSet<Long> taken = null;\n\t\t\tObjectSet<PersistentBlobTempBucketTag> results = query.execute();\n\t\t\twhile(results.hasNext()) {\n\t\t\t\tPersistentBlobTempBucketTag tag = results.next();\n\t\t\t\tif(!tag.isFree) {\n\t\t\t\t\tLogger.error(this, \"Block already exists beyond the end of the file (\"+blocks+\"), yet is occupied: block \"+tag.index);\n\t\t\t\t}\n\t\t\t\tif(taken == null) taken = new HashSet<Long>();\n\t\t\t\ttaken.add(tag.index);\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0;i<addBlocks;i++) {\n\t\t\t\tptr = blocks + i;\n\t\t\t\tif(taken != null && taken.contains(ptr)) continue;\n\t\t\t\tPersistentBlobTempBucketTag tag = new PersistentBlobTempBucketTag(PersistentBlobTempBucketFactory.this, ptr);\n\t\t\t\tcontainer.store(tag);\n\t\t\t\tchangedTags = true;\n\t\t\t\tsynchronized(PersistentBlobTempBucketFactory.this) {\n\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\tLogger.minor(this, \"Adding slot \"+ptr+\" to freeSlots while extending storage file\");\n\t\t\t\t\tfreeSlots.put(ptr, tag);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn changedTags;\n\t\t}\n\t\t}\n\t\t\n\t\tpublic String toString() {\n\t\t\treturn \"PersistentBlobTempBucketFactory.SlotFinder\";\n\t\t}\n\t\t\n\t};\n\t}","id":4257,"modified_method":"private void initSlotFinder() {\n\t\tslotFinder = new DBJob() {\n\t\t\n\t\tpublic boolean run(ObjectContainer container, ClientContext context) {\n\t\t\tint added = 0;\n\t\t\t\n\t\t\twhile(true) {\n\t\t\tsynchronized(PersistentBlobTempBucketFactory.this) {\n\t\t\t\tif(freeSlots.size() > MAX_FREE) return false;\n\t\t\t}\n\t\t\tlong blocks = getSize();\n\t\t\tif(blocks == Long.MAX_VALUE) return false;\n\t\t\tlong ptr = blocks - 1;\n\t\t\tboolean changedTags = false;\n\t\t\t\n\t\t\tint first = -1;\nouter:\t\twhile(true) {\n\t\t\t\tLogger.error(this, \"Maybe found free slot from bitmap \"+first);\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tfirst = freeBlocksCache.firstZero(first+1);\n\t\t\t\t\tif(first == -1) break;\n\t\t\t\t\tif(first > ptr) break;\n\t\t\t\t\tif(freeSlots.containsKey((long)first)) continue;\n\t\t\t\t\tif(almostFreeSlots.containsKey((long)first)) continue;\n\t\t\t\t\tif(notCommittedBlobs.containsKey((long)first)) continue;\n\t\t\t\t}\n\t\t\t\tQuery query = container.query();\n\t\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\t\tquery.descend(\"index\").constrain((long)first);\n\t\t\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\t\t\t\n\t\t\t\twhile(tags.hasNext()) {\n\t\t\t\t\tPersistentBlobTempBucketTag tag = tags.next();\n\t\t\t\t\tif(tag.factory != PersistentBlobTempBucketFactory.this) continue;\n\t\t\t\t\tif(!tag.isFree) continue outer;\n\t\t\t\t\tif(tag.bucket != null) {\n\t\t\t\t\t\tLogger.error(this, \"Index \"+first+\" has bucket despite free?!\");\n\t\t\t\t\t\tcontainer.activate(tag.bucket, 2);\n\t\t\t\t\t\tif(!tag.bucket.freed()) {\n\t\t\t\t\t\t\tLogger.error(this, \"And the bucket is not free either!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t}\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tfreeSlots.put((long)first, tag);\n\t\t\t\t\t}\n\t\t\t\t\tadded++;\n\t\t\t\t\tchangedTags = true;\n\t\t\t\t\tLogger.error(this, \"Found free slot from bitmap \"+first);\n\t\t\t\t\tif(added > MAX_FREE) return true;\n\t\t\t\t\tcontinue outer;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Not found\n\t\t\t\tLogger.error(PersistentBlobTempBucketFactory.this, \"No tag for index \"+first);\n\t\t\t\tPersistentBlobTempBucketTag tag = new PersistentBlobTempBucketTag(PersistentBlobTempBucketFactory.this, first);\n\t\t\t\tcontainer.store(tag);\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tfreeSlots.put(ptr, tag);\n\t\t\t\t}\n\t\t\t\tLogger.error(this, \"Found free slot (missing) from bitmap \"+first);\n\t\t\t\tadded++;\n\t\t\t\tchangedTags = true;\n\t\t\t\tif(added > MAX_FREE) return true;\n\t\t\t}\n\n\t\t\tfor(long l = 0; l < blockSize + 16383; l += 16384) {\n\t\t\tQuery query = container.query();\n\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\tquery.descend(\"isFree\").constrain(true).and(query.descend(\"index\").constrain(l).smaller());\n\t\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\t\tLong[] notCommitted;\n\t\t\tsynchronized(PersistentBlobTempBucketFactory.this) {\n\t\t\t\twhile(tags.hasNext()) {\n\t\t\t\t\tPersistentBlobTempBucketTag tag = tags.next();\n\t\t\t\t\tif(!tag.isFree) {\n\t\t\t\t\t\tLogger.error(this, \"Tag not free! \"+tag.index);\n\t\t\t\t\t\tif(tag.bucket == null) {\n\t\t\t\t\t\t\tLogger.error(this, \"Tag flagged non-free yet has no bucket for index \"+tag.index);\n\t\t\t\t\t\t\ttag.isFree = true;\n\t\t\t\t\t\t\tcontainer.store(tag);\n\t\t\t\t\t\t\tchangedTags = true;\n\t\t\t\t\t\t} else continue;\n\t\t\t\t\t}\n\t\t\t\t\tif(tag.bucket != null) {\n\t\t\t\t\t\tLogger.error(this, \"Query returned tag with valid bucket!\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(tag.factory != PersistentBlobTempBucketFactory.this) continue;\n\t\t\t\t\tif(notCommittedBlobs.containsKey(tag.index)) continue;\n\t\t\t\t\tif(almostFreeSlots.containsKey(tag.index)) continue;\n\t\t\t\t\tif(freeSlots.containsKey(tag.index)) continue;\n\t\t\t\t\tif(tag.bucket != null) {\n\t\t\t\t\t\tLogger.error(this, \"Bucket is occupied but not in notCommittedBlobs?!: \"+tag+\" : \"+tag.bucket);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(tag.index > ptr) {\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Not adding slot \"+tag.index+\" to freeSlots because it is past the end of the file (but it is free)\");\n\t\t\t\t\t\tcontainer.delete(tag);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Adding slot \"+tag.index+\" to freeSlots (has a free tag and no taken tag)\");\n\t\t\t\t\tfreeSlots.put(tag.index, tag);\n\t\t\t\t\tadded++;\n\t\t\t\t\tif(added > MAX_FREE) return changedTags;\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t\t/* FIXME: The issue below has been marked as FIXED in the db4o bugtracker. Can this be resolved now? */\n\t\t\t\n\t\t\t// Checking for slots marked occupied with bucket != null is nontrivial,\n\t\t\t// because constraining to null doesn't work - causes an OOM with a large database,\n\t\t\t// because it DOES NOT USE THE INDEX and therefore instantiates every object and OOMs.\n\t\t\t// See http://tracker.db4o.com/browse/COR-1446\n\t\t\t\n\t\t\t// Check that the number of tags is equal to the size of the file.\n\t\t\t\n\t\t\tif(logMINOR) Logger.minor(this, \"Checking number of tags against file size...\");\n\t\t\tQuery query = container.query();\n\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\t\tlong inDB = tags.size();\n\t\t\tif(logMINOR) Logger.minor(this, \"Checked size.\");\n\t\t\ttags = null;\n\t\t\tif(inDB < ptr) {\n\t\t\t\tLogger.error(this, \"Tags in database: \"+inDB+\" but size of file allows: \"+ptr);\n\t\t\t\t// Recover: exhaustive index search. This can cause very long pauses, but should only happen if there is a bug.\n\t\t\t\tfor(long l = ptr-1; l >= 0; l--) {\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tif(freeSlots.containsKey(l)) continue;\n\t\t\t\t\t\tif(notCommittedBlobs.containsKey(l)) continue;\n\t\t\t\t\t\tif(almostFreeSlots.containsKey(l)) continue;\n\t\t\t\t\t}\n\t\t\t\t\tquery = container.query();\n\t\t\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\t\t\tquery.descend(\"index\").constrain(l);\n\t\t\t\t\ttags = query.execute();\n\t\t\t\t\tif(tags.hasNext()) continue;\n\t\t\t\t\tLogger.error(this, \"FOUND EMPTY SLOT: \"+l+\" when scanning the blob file because tags in database < length of file\");\n\t\t\t\t\tPersistentBlobTempBucketTag tag = new PersistentBlobTempBucketTag(PersistentBlobTempBucketFactory.this, l);\n\t\t\t\t\tcontainer.store(tag);\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tfreeSlots.put(ptr, tag);\n\t\t\t\t\t}\n\t\t\t\t\tadded++;\n\t\t\t\t\tchangedTags = true;\n\t\t\t\t\tif(added > MAX_FREE) return true;\n\t\t\t\t\tif(l + added == ptr) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tDBJob freeJob = null;\n\t\t\tsynchronized(this) {\n\t\t\t\tif(!freeJobs.isEmpty()) {\n\t\t\t\t\tfreeJob = freeJobs.iterator().next();\n\t\t\t\t\tfreeJobs.remove(freeJob);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(freeJob != null) {\n\t\t\t\tcontainer.activate(freeJob, 1);\n\t\t\t\tSystem.err.println(\"Freeing some space by running \"+freeJob);\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Freeing some space by running \"+freeJob);\n\t\t\t\tfreeJob.run(container, context);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\t// Lets extend the file.\n\t\t\t// FIXME if physical security is LOW, just set the length, possibly\n\t\t\t// padding will nonrandom nulls on unix.\n\t\t\tlong addBlocks = Math.min(8192, (blocks / 10) + 32);\n\t\t\t\n\t\t\t// FIXME limit size to Integer.MAX_VALUE entries so that we don't need to worry about freeBlocksCache.\n\t\t\tif(blocks + addBlocks > Integer.MAX_VALUE) {\n\t\t\t\taddBlocks = (blocks + addBlocks) - (long)Integer.MAX_VALUE;\n\t\t\t\tif(addBlocks <= 0) return changedTags;\n\t\t\t}\n\t\t\t\n\t\t\tsynchronized(this) {\n\t\t\t\tfreeBlocksCache.setSize((int) Math.min(Integer.MAX_VALUE, (blocks + addBlocks)));\n\t\t\t}\n\t\t\t\n\t\t\tlong extendBy = addBlocks * blockSize;\n\t\t\tlong written = 0;\n\t\t\tbyte[] buf = new byte[65536];\n\t\t\tByteBuffer buffer = ByteBuffer.wrap(buf);\n\t\t\twhile(written < extendBy) {\n\t\t\t\tweakRandomSource.nextBytes(buf);\n\t\t\t\tint bytesLeft = (int) Math.min(extendBy - written, Integer.MAX_VALUE);\n\t\t\t\tif(bytesLeft < buf.length)\n\t\t\t\t\tbuffer.limit(bytesLeft);\n\t\t\t\ttry {\n\t\t\t\t\twritten += channel.write(buffer, blocks * blockSize + written);\n\t\t\t\t\tbuffer.clear();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsynchronized(this) {\n\t\t\t\tcachedSize = blocks + addBlocks;\n\t\t\t}\n\t\t\tquery = container.query();\n\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\tquery.descend(\"index\").constrain(blocks-1).greater().and(query.descend(\"factory\").constrain(PersistentBlobTempBucketFactory.this));\n\t\t\tHashSet<Long> taken = null;\n\t\t\tObjectSet<PersistentBlobTempBucketTag> results = query.execute();\n\t\t\twhile(results.hasNext()) {\n\t\t\t\tPersistentBlobTempBucketTag tag = results.next();\n\t\t\t\tif(!tag.isFree) {\n\t\t\t\t\tLogger.error(this, \"Block already exists beyond the end of the file (\"+blocks+\"), yet is occupied: block \"+tag.index);\n\t\t\t\t}\n\t\t\t\tif(taken == null) taken = new HashSet<Long>();\n\t\t\t\ttaken.add(tag.index);\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0;i<addBlocks;i++) {\n\t\t\t\tptr = blocks + i;\n\t\t\t\tif(taken != null && taken.contains(ptr)) continue;\n\t\t\t\tPersistentBlobTempBucketTag tag = new PersistentBlobTempBucketTag(PersistentBlobTempBucketFactory.this, ptr);\n\t\t\t\tcontainer.store(tag);\n\t\t\t\tchangedTags = true;\n\t\t\t\tsynchronized(PersistentBlobTempBucketFactory.this) {\n\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\tLogger.minor(this, \"Adding slot \"+ptr+\" to freeSlots while extending storage file\");\n\t\t\t\t\tfreeSlots.put(ptr, tag);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn changedTags;\n\t\t}\n\t\t}\n\t\t\n\t\tpublic String toString() {\n\t\t\treturn \"PersistentBlobTempBucketFactory.SlotFinder\";\n\t\t}\n\t\t\n\t};\n\t}","commit_id":"497636153698bd95f075f80a425cfc5e9cde4f2d","url":"https://github.com/freenet/fred"},{"original_method":"boolean maybeShrink(ObjectContainer container) {\n\t\t\n\t\tif(logMINOR) Logger.minor(this, \"maybeShrink()\");\n\t\t\n\t\tlong now = System.currentTimeMillis();\n\t\t\n\t\tlong newBlocks;\n\t\t\n\t\tsynchronized(this) {\n\t\t\n\t\t\tint blocksMoved = 0;\n\t\t\tif(now - lastCheckedEnd > 60*1000) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"maybeShrink() inner\");\n\t\t\t\t// Check whether there is a big white space at the end of the file.\n\t\t\t\tlong blocks = getSize();\n\t\t\t\tif(blocks == Long.MAX_VALUE) {\n\t\t\t\t\tLogger.error(this, \"Not shrinking, unable to determine size\");\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(blocks <= 32) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, blob file not larger than a megabyte\");\n\t\t\t\t\tlastCheckedEnd = now;\n\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tlong lastNotCommitted = notCommittedBlobs.isEmpty() ? 0 : notCommittedBlobs.lastKey();\n\t\t\t\tlong lastAlmostFreed = almostFreeSlots.isEmpty() ? 0 : almostFreeSlots.lastKey();\n\t\t\t\tif(lastNotCommitted < lastAlmostFreed) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Last almost freed: \"+lastAlmostFreed+\" replacing last not committed: \"+lastNotCommitted);\n\t\t\t\t\tlastNotCommitted = lastAlmostFreed;\n\t\t\t\t}\n\t\t\t\tdouble full = (double)lastNotCommitted / (double)blocks;\n\t\t\t\tif(full > 0.8) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, last not committed block is at \"+full*100+\"% (\"+lastNotCommitted+\" of \"+blocks+\")\");\n\t\t\t\t\tlastCheckedEnd = now;\n\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tlong lastCommitted = -1;\n\t\t\t\tPersistentBlobTempBucketTag lastTag = null;\n\t\t\t\tPersistentBlobTempBucket lastBucket = null;\n\t\t\t\tObjectSet<PersistentBlobTempBucketTag> tags = null;\n\t\t\t\tQuery query = null;\n\t\t\t\tboolean usedFreeBlocksCache = false;\n\t\t\t\tfinal short MOVE_BLOCKS_PER_MINUTE;\n\t\t\t\tif(freeBlocksCache != null && blocks < Integer.MAX_VALUE)\n\t\t\t\t\tMOVE_BLOCKS_PER_MINUTE = 20;\n\t\t\t\telse\n\t\t\t\t\tMOVE_BLOCKS_PER_MINUTE = 10;\nfindloop:\t\twhile(true) {\n\t\t\t\tif(freeBlocksCache != null && blocks < Integer.MAX_VALUE) {\n\t\t\t\t\tusedFreeBlocksCache = true;\n\t\t\t\t\tint last = (int) blocks;\nouter:\t\t\t\twhile(true) {\n\t\t\t\t\t\tlast = freeBlocksCache.lastOne(last-1);\n\t\t\t\t\t\tif(last == -1) break;\n\t\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\t\tif(notCommittedBlobs.containsKey(last)) continue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tquery = container.query();\n\t\t\t\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\t\t\t\tquery.descend(\"index\").constrain((long)last);\n\t\t\t\t\t\ttags = query.execute();\n\t\t\t\t\t\twhile(tags.hasNext()) {\n\t\t\t\t\t\t\tlastTag = tags.next();\n\t\t\t\t\t\t\tif(lastTag.factory != this) continue;\n\t\t\t\t\t\t\tif(lastTag.isFree) continue outer;\n\t\t\t\t\t\t\tif(lastTag.bucket == null) {\n\t\t\t\t\t\t\t\tLogger.error(this, \"Last tag has no bucket! index \"+last);\n\t\t\t\t\t\t\t\tlastTag.isFree = true;\n\t\t\t\t\t\t\t\tcontainer.store(lastTag);\n\t\t\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastCommitted = last;\n\t\t\t\t\t\t\tlastBucket = lastTag.bucket;\n\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tLogger.error(this, \"Last slot has no tag! index \"+last);\n\t\t\t\t\t\tPersistentBlobTempBucketTag tag = new PersistentBlobTempBucketTag(PersistentBlobTempBucketFactory.this, last);\n\t\t\t\t\t\tcontainer.store(tag);\n\t\t\t\t\t\tfreeBlocksCache.setBit((int)last, false);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t/*\n\t\t\t\t\t * Query for the non-free tag with the highest value.\n\t\t\t\t\t * This query can return a vast number of objects! And it's all kept in RAM in IMMEDIATE mode.\n\t\t\t\t\t * FIXME LAZY query mode may help, but would likely require changes to other code.\n\t\t\t\t\t * In the meantime, lets try from the end, going backwards by a manageable number of slots at a time...\n\t\t\t\t\t */\n\t\t\t\t\tfor(long threshold = blocks - 4096; threshold >= -4095; threshold -= 4096) {\n\t\t\t\t\t\tquery = container.query();\n\t\t\t\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\t\t\t\tquery.descend(\"isFree\").constrain(false);\n\t\t\t\t\t\tquery.descend(\"index\").orderDescending();\n\t\t\t\t\t\tquery.descend(\"index\").constrain(threshold).greater();\n\t\t\t\t\t\ttags = query.execute();\n\t\t\t\t\t\tlastTag = null;\n\t\t\t\t\t\twhile(tags.hasNext() && (lastTag = tags.next()).bucket == null) {\n\t\t\t\t\t\t\tLogger.error(this, \"Last tag has no bucket! index \"+lastTag.index);\n\t\t\t\t\t\t\tlastTag.isFree = true;\n\t\t\t\t\t\t\tcontainer.store(lastTag);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(lastTag == null) continue;\n\t\t\t\t\t\tlastBucket = lastTag.bucket;\n\t\t\t\t\t\tlastCommitted = lastTag.index;\n\t\t\t\t\t\tLogger.normal(this, \"Last committed block is \"+lastCommitted);\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(lastCommitted == -1) {\n\t\t\t\t\t// No used slots at all?!\n\t\t\t\t\t// There may be some not committed though\n\t\t\t\t\tLogger.normal(this, \"No used slots in persistent temp file (but last not committed = \"+lastNotCommitted+\")\");\n\t\t\t\t\tlastCommitted = 0;\n\t\t\t\t\tquery = null;\n\t\t\t\t}\n\t\t\t\tfull = (double) lastCommitted / (double) blocks;\n\t\t\t\tif(full > 0.8) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, last committed block is at \"+full*100+\"%\");\n\t\t\t\t\tlastCheckedEnd = now;\n\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\twhile(true) {\n\t\t\t\t\t\tboolean deactivateLastBucket = !container.ext().isActive(lastBucket);\n\t\t\t\t\t\tif(deactivateLastBucket)\n\t\t\t\t\t\t\tcontainer.activate(lastBucket, 1);\n\t\t\t\t\t\tif(freeSlots.isEmpty()) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tjobRunner.queue(slotFinder, NativeThread.LOW_PRIORITY, false);\n\t\t\t\t\t\t\t} catch (DatabaseDisabledException e) {\n\t\t\t\t\t\t\t\t// Doh\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tLong lFirstSlot = freeSlots.firstKey();\n\t\t\t\t\t\tlong firstSlot = lFirstSlot;\n\t\t\t\t\t\tif(firstSlot < lastCommitted) {\n\t\t\t\t\t\t\tblocksMoved++;\n\t\t\t\t\t\t\t// There is some degree of fragmentation.\n\t\t\t\t\t\t\t// Move one key.\n\t\t\t\t\t\t\tPersistentBlobTempBucketTag newTag = freeSlots.remove(lFirstSlot);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(newTag == null)\n\t\t\t\t\t\t\t\tthrow new NullPointerException();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tPersistentBlobTempBucket shadow = null;\n\t\t\t\t\t\t\tif(shadows.containsKey(lastCommitted)) {\n\t\t\t\t\t\t\t\tshadow = shadows.get(lastCommitted);\n\t\t\t\t\t\t\t\tshadows.remove(lastCommitted);\n\t\t\t\t\t\t\t\tshadows.put(newTag.index, shadow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Synchronize on the target.\n\t\t\t\t\t\t\t// We must ensure that the shadow is moved also before we relinquish the lock on either bucket.\n\t\t\t\t\t\t\t// LOCKING: Nested locking of two buckets is bad, but provided we only do it here, we should be fine.\n\t\t\t\t\t\t\tsynchronized(lastBucket) {\n\t\t\t\t\t\t\t\tif(shadow != null) {\n\t\t\t\t\t\t\t\t\tsynchronized(shadow) {\n\t\t\t\t\t\t\t\t\t\tif(!innerDefrag(lastBucket, shadow, lastTag, newTag, container)) return false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif(!innerDefrag(lastBucket, shadow, lastTag, newTag, container)) return false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else break;\n\t\t\t\t\t\tif(deactivateLastBucket)\n\t\t\t\t\t\t\tcontainer.deactivate(lastBucket, 1);\n\t\t\t\t\t\tif(blocksMoved < MOVE_BLOCKS_PER_MINUTE) {\n\t\t\t\t\t\t\tlastTag = null;\n\t\t\t\t\t\t\tif(!usedFreeBlocksCache) {\n\t\t\t\t\t\t\t\twhile(tags.hasNext() && (lastTag = tags.next()).bucket == null) {\n\t\t\t\t\t\t\t\t\tLogger.error(this, \"Last tag has no bucket! index \"+lastTag.index);\n\t\t\t\t\t\t\t\t\tlastTag.isFree = true;\n\t\t\t\t\t\t\t\t\tcontainer.store(lastTag);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(lastTag == null) break;\n\t\t\t\t\t\t\t\tlastBucket = lastTag.bucket;\n\t\t\t\t\t\t\t\tlastCommitted = lastTag.index;\n\t\t\t\t\t\t\t\tLogger.normal(this, \"Last committed block is now \"+lastCommitted);\n\t\t\t\t\t\t\t} else continue findloop;\n\t\t\t\t\t\t} else break;\n\t\t\t\t\t}\n\t\t\t\t\tif(blocksMoved > 0) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\traf.getFD().sync();\n\t\t\t\t\t\t\tLogger.normal(this, \"Moved \"+blocksMoved+\" in defrag and synced to disk\");\n\t\t\t\t\t\t} catch (SyncFailedException e) {\n\t\t\t\t\t\t\tSystem.err.println(\"Failed to sync to disk after defragging: \"+e);\n\t\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\t\tSystem.err.println(\"Failed to sync to disk after defragging: \"+e);\n\t\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjobRunner.setCommitThisTransaction();\n\t\t\t\t\t}\n\t\t\t\t\tquery = null;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlong lastBlock = Math.max(lastCommitted, lastNotCommitted);\n\t\t\t\t// Must be 10% free at end\n\t\t\t\tnewBlocks = (long) ((lastBlock + 32) * 1.1);\n\t\t\t\tnewBlocks = Math.max(newBlocks, 32);\n\t\t\t\tif(newBlocks >= blocks) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, would shrink from \"+blocks+\" to \"+newBlocks);\n\t\t\t\t\tlastCheckedEnd = now;\n\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tLogger.normal(this, \"Shrinking blob file from \"+blocks+\" to \"+newBlocks);\n\t\t\t\t// Not safe to remove from almostFreeSlots here.\n\t\t\t\tfor(long l = newBlocks; l <= blocks; l++) {\n\t\t\t\t\tfreeSlots.remove(l);\n\t\t\t\t}\n\t\t\t\tfor(Long l : freeSlots.keySet()) {\n\t\t\t\t\tif(l > newBlocks) {\n\t\t\t\t\t\tLogger.error(this, \"Removing free slot \"+l+\" over the current block limit\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfreeSlots.tailMap(newBlocks+1).clear();\n\t\t\t\tlastCheckedEnd = now;\n\t\t\t\tqueueMaybeShrink();\n\t\t\t} else return false;\n\t\t\tcachedSize = newBlocks;\n\t\t}\n\t\tsynchronized(this) {\n\t\t\tif(freeBlocksCache != null)\n\t\t\t\tfreeBlocksCache.setSize((int)Math.min(Integer.MAX_VALUE, newBlocks));\n\t\t}\n\t\ttry {\n\t\t\tchannel.truncate(newBlocks * blockSize);\n\t\t} catch (IOException e) {\n\t\t\tSystem.err.println(\"Shrinking blob file failed!\");\n\t\t\tSystem.err.println(e);\n\t\t\te.printStackTrace();\n\t\t\tLogger.error(this, \"Shrinking blob file failed!: \"+e, e);\n\t\t}\n\t\tQuery query = container.query();\n\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\tquery.descend(\"index\").constrain(newBlocks).greater();\n\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\tlong deleted = 0;\n\t\twhile(tags.hasNext()) {\n\t\t\tPersistentBlobTempBucketTag tag = tags.next();\n\t\t\tif(logMINOR) Logger.minor(this, \"Deleting tag \"+tag+\" for index \"+tag.index);\n\t\t\tcontainer.delete(tag);\n\t\t\tdeleted++;\n\t\t\tif(deleted > 1024) break;\n\t\t}\n\t\tif(deleted > 1024) {\n\t\t\ttry {\n\t\t\t\tjobRunner.queue(new DBJob() {\n\n\t\t\t\t\tpublic boolean run(ObjectContainer container, ClientContext context) {\n\t\t\t\t\t\tlong size;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tsize = channel.size();\n\t\t\t\t\t\t} catch (IOException e1) {\n\t\t\t\t\t\t\tLogger.error(this, \"Unable to find size of temp blob storage file: \"+e1, e1);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsize -= size % blockSize;\n\t\t\t\t\t\tlong blocks = size / blockSize;\n\t\t\t\t\t\tQuery query = container.query();\n\t\t\t\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\t\t\t\tquery.descend(\"index\").constrain(blocks).greater();\n\t\t\t\t\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\t\t\t\t\tlong deleted = 0;\n\t\t\t\t\t\twhile(tags.hasNext()) {\n\t\t\t\t\t\t\tPersistentBlobTempBucketTag tag = tags.next();\n\t\t\t\t\t\t\tif(tag.bucket != null) {\n\t\t\t\t\t\t\t\tLogger.error(this, \"Tag with bucket beyond end of file! index=\"+tag.index+\" bucket=\"+tag.bucket);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Deleting tag \"+tag+\" for index \"+tag.index);\n\t\t\t\t\t\t\tcontainer.delete(tag);\n\t\t\t\t\t\t\tdeleted++;\n\t\t\t\t\t\t\tif(deleted > 1024) break;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(deleted > 1024) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tjobRunner.queue(this, NativeThread.LOW_PRIORITY, true);\n\t\t\t\t\t\t\t} catch (DatabaseDisabledException e) {\n\t\t\t\t\t\t\t\t// :(\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpublic String toString() {\n\t\t\t\t\t\treturn \"PersistentBlobTempBucketFactory.PostShrinkCheck\";\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}, NativeThread.LOW_PRIORITY, true);\n\t\t\t} catch (DatabaseDisabledException e) {\n\t\t\t\t// :(\n\t\t\t}\n\t\t}\n\t\tqueueMaybeShrink();\n\t\treturn true;\n\t\t\n\t}","id":4258,"modified_method":"boolean maybeShrink(ObjectContainer container) {\n\t\t\n\t\tif(logMINOR) Logger.minor(this, \"maybeShrink()\");\n\t\t\n\t\tlong now = System.currentTimeMillis();\n\t\t\n\t\tlong newBlocks;\n\t\t\n\t\tsynchronized(this) {\n\t\t\n\t\t\tint blocksMoved = 0;\n\t\t\tif(now - lastCheckedEnd > 60*1000) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"maybeShrink() inner\");\n\t\t\t\t// Check whether there is a big white space at the end of the file.\n\t\t\t\tlong blocks = getSize();\n\t\t\t\tif(blocks == Long.MAX_VALUE) {\n\t\t\t\t\tLogger.error(this, \"Not shrinking, unable to determine size\");\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(blocks <= 32) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, blob file not larger than a megabyte\");\n\t\t\t\t\tlastCheckedEnd = now;\n\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tlong lastNotCommitted = notCommittedBlobs.isEmpty() ? 0 : notCommittedBlobs.lastKey();\n\t\t\t\tlong lastAlmostFreed = almostFreeSlots.isEmpty() ? 0 : almostFreeSlots.lastKey();\n\t\t\t\tif(lastNotCommitted < lastAlmostFreed) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Last almost freed: \"+lastAlmostFreed+\" replacing last not committed: \"+lastNotCommitted);\n\t\t\t\t\tlastNotCommitted = lastAlmostFreed;\n\t\t\t\t}\n\t\t\t\tdouble full = (double)lastNotCommitted / (double)blocks;\n\t\t\t\tif(full > 0.8) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, last not committed block is at \"+full*100+\"% (\"+lastNotCommitted+\" of \"+blocks+\")\");\n\t\t\t\t\tlastCheckedEnd = now;\n\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tlong lastCommitted = -1;\n\t\t\t\tPersistentBlobTempBucketTag lastTag = null;\n\t\t\t\tPersistentBlobTempBucket lastBucket = null;\n\t\t\t\tObjectSet<PersistentBlobTempBucketTag> tags = null;\n\t\t\t\tQuery query = null;\n\t\t\t\tfinal short MOVE_BLOCKS_PER_MINUTE;\n\t\t\t\tif(freeBlocksCache != null && blocks < Integer.MAX_VALUE)\n\t\t\t\t\tMOVE_BLOCKS_PER_MINUTE = 20;\n\t\t\t\telse\n\t\t\t\t\tMOVE_BLOCKS_PER_MINUTE = 10;\nfindloop:\t\twhile(true) {\n\t\t\t\t\tint last = (int) blocks;\nouter:\t\t\t\twhile(true) {\n\t\t\t\t\t\tlast = freeBlocksCache.lastOne(last-1);\n\t\t\t\t\t\tif(last == -1) break;\n\t\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\t\tif(notCommittedBlobs.containsKey(last)) continue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tquery = container.query();\n\t\t\t\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\t\t\t\tquery.descend(\"index\").constrain((long)last);\n\t\t\t\t\t\ttags = query.execute();\n\t\t\t\t\t\twhile(tags.hasNext()) {\n\t\t\t\t\t\t\tlastTag = tags.next();\n\t\t\t\t\t\t\tif(lastTag.factory != this) continue;\n\t\t\t\t\t\t\tif(lastTag.isFree) continue outer;\n\t\t\t\t\t\t\tif(lastTag.bucket == null) {\n\t\t\t\t\t\t\t\tLogger.error(this, \"Last tag has no bucket! index \"+last);\n\t\t\t\t\t\t\t\tlastTag.isFree = true;\n\t\t\t\t\t\t\t\tcontainer.store(lastTag);\n\t\t\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastCommitted = last;\n\t\t\t\t\t\t\tlastBucket = lastTag.bucket;\n\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tLogger.error(this, \"Last slot has no tag! index \"+last);\n\t\t\t\t\t\tPersistentBlobTempBucketTag tag = new PersistentBlobTempBucketTag(PersistentBlobTempBucketFactory.this, last);\n\t\t\t\t\t\tcontainer.store(tag);\n\t\t\t\t\t\tfreeBlocksCache.setBit((int)last, false);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tif(lastCommitted == -1) {\n\t\t\t\t\t// No used slots at all?!\n\t\t\t\t\t// There may be some not committed though\n\t\t\t\t\tLogger.normal(this, \"No used slots in persistent temp file (but last not committed = \"+lastNotCommitted+\")\");\n\t\t\t\t\tlastCommitted = 0;\n\t\t\t\t\tquery = null;\n\t\t\t\t}\n\t\t\t\tfull = (double) lastCommitted / (double) blocks;\n\t\t\t\tif(full > 0.8) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, last committed block is at \"+full*100+\"%\");\n\t\t\t\t\tlastCheckedEnd = now;\n\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\twhile(true) {\n\t\t\t\t\t\tboolean deactivateLastBucket = !container.ext().isActive(lastBucket);\n\t\t\t\t\t\tif(deactivateLastBucket)\n\t\t\t\t\t\t\tcontainer.activate(lastBucket, 1);\n\t\t\t\t\t\tif(freeSlots.isEmpty()) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tjobRunner.queue(slotFinder, NativeThread.LOW_PRIORITY, false);\n\t\t\t\t\t\t\t} catch (DatabaseDisabledException e) {\n\t\t\t\t\t\t\t\t// Doh\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tLong lFirstSlot = freeSlots.firstKey();\n\t\t\t\t\t\tlong firstSlot = lFirstSlot;\n\t\t\t\t\t\tif(firstSlot < lastCommitted) {\n\t\t\t\t\t\t\tblocksMoved++;\n\t\t\t\t\t\t\t// There is some degree of fragmentation.\n\t\t\t\t\t\t\t// Move one key.\n\t\t\t\t\t\t\tPersistentBlobTempBucketTag newTag = freeSlots.remove(lFirstSlot);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(newTag == null)\n\t\t\t\t\t\t\t\tthrow new NullPointerException();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tPersistentBlobTempBucket shadow = null;\n\t\t\t\t\t\t\tif(shadows.containsKey(lastCommitted)) {\n\t\t\t\t\t\t\t\tshadow = shadows.get(lastCommitted);\n\t\t\t\t\t\t\t\tshadows.remove(lastCommitted);\n\t\t\t\t\t\t\t\tshadows.put(newTag.index, shadow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Synchronize on the target.\n\t\t\t\t\t\t\t// We must ensure that the shadow is moved also before we relinquish the lock on either bucket.\n\t\t\t\t\t\t\t// LOCKING: Nested locking of two buckets is bad, but provided we only do it here, we should be fine.\n\t\t\t\t\t\t\tsynchronized(lastBucket) {\n\t\t\t\t\t\t\t\tif(shadow != null) {\n\t\t\t\t\t\t\t\t\tsynchronized(shadow) {\n\t\t\t\t\t\t\t\t\t\tif(!innerDefrag(lastBucket, shadow, lastTag, newTag, container)) return false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif(!innerDefrag(lastBucket, shadow, lastTag, newTag, container)) return false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else break;\n\t\t\t\t\t\tif(deactivateLastBucket)\n\t\t\t\t\t\t\tcontainer.deactivate(lastBucket, 1);\n\t\t\t\t\t\tif(blocksMoved < MOVE_BLOCKS_PER_MINUTE) {\n\t\t\t\t\t\t\tlastTag = null;\n\t\t\t\t\t\t\tcontinue findloop;\n\t\t\t\t\t\t} else break;\n\t\t\t\t\t}\n\t\t\t\t\tif(blocksMoved > 0) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\traf.getFD().sync();\n\t\t\t\t\t\t\tLogger.normal(this, \"Moved \"+blocksMoved+\" in defrag and synced to disk\");\n\t\t\t\t\t\t} catch (SyncFailedException e) {\n\t\t\t\t\t\t\tSystem.err.println(\"Failed to sync to disk after defragging: \"+e);\n\t\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\t\tSystem.err.println(\"Failed to sync to disk after defragging: \"+e);\n\t\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjobRunner.setCommitThisTransaction();\n\t\t\t\t\t}\n\t\t\t\t\tquery = null;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlong lastBlock = Math.max(lastCommitted, lastNotCommitted);\n\t\t\t\t// Must be 10% free at end\n\t\t\t\tnewBlocks = (long) ((lastBlock + 32) * 1.1);\n\t\t\t\tnewBlocks = Math.max(newBlocks, 32);\n\t\t\t\tif(newBlocks >= blocks) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, would shrink from \"+blocks+\" to \"+newBlocks);\n\t\t\t\t\tlastCheckedEnd = now;\n\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tLogger.normal(this, \"Shrinking blob file from \"+blocks+\" to \"+newBlocks);\n\t\t\t\t// Not safe to remove from almostFreeSlots here.\n\t\t\t\tfor(long l = newBlocks; l <= blocks; l++) {\n\t\t\t\t\tfreeSlots.remove(l);\n\t\t\t\t}\n\t\t\t\tfor(Long l : freeSlots.keySet()) {\n\t\t\t\t\tif(l > newBlocks) {\n\t\t\t\t\t\tLogger.error(this, \"Removing free slot \"+l+\" over the current block limit\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfreeSlots.tailMap(newBlocks+1).clear();\n\t\t\t\tlastCheckedEnd = now;\n\t\t\t\tqueueMaybeShrink();\n\t\t\t} else return false;\n\t\t\tcachedSize = newBlocks;\n\t\t}\n\t\tsynchronized(this) {\n\t\t\tfreeBlocksCache.setSize((int)Math.min(Integer.MAX_VALUE, newBlocks));\n\t\t}\n\t\ttry {\n\t\t\tchannel.truncate(newBlocks * blockSize);\n\t\t} catch (IOException e) {\n\t\t\tSystem.err.println(\"Shrinking blob file failed!\");\n\t\t\tSystem.err.println(e);\n\t\t\te.printStackTrace();\n\t\t\tLogger.error(this, \"Shrinking blob file failed!: \"+e, e);\n\t\t}\n\t\tQuery query = container.query();\n\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\tquery.descend(\"index\").constrain(newBlocks).greater();\n\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\tlong deleted = 0;\n\t\twhile(tags.hasNext()) {\n\t\t\tPersistentBlobTempBucketTag tag = tags.next();\n\t\t\tif(logMINOR) Logger.minor(this, \"Deleting tag \"+tag+\" for index \"+tag.index);\n\t\t\tcontainer.delete(tag);\n\t\t\tdeleted++;\n\t\t\tif(deleted > 1024) break;\n\t\t}\n\t\tif(deleted > 1024) {\n\t\t\ttry {\n\t\t\t\tjobRunner.queue(new DBJob() {\n\n\t\t\t\t\tpublic boolean run(ObjectContainer container, ClientContext context) {\n\t\t\t\t\t\tlong size;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tsize = channel.size();\n\t\t\t\t\t\t} catch (IOException e1) {\n\t\t\t\t\t\t\tLogger.error(this, \"Unable to find size of temp blob storage file: \"+e1, e1);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsize -= size % blockSize;\n\t\t\t\t\t\tlong blocks = size / blockSize;\n\t\t\t\t\t\tQuery query = container.query();\n\t\t\t\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\t\t\t\tquery.descend(\"index\").constrain(blocks).greater();\n\t\t\t\t\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\t\t\t\t\tlong deleted = 0;\n\t\t\t\t\t\twhile(tags.hasNext()) {\n\t\t\t\t\t\t\tPersistentBlobTempBucketTag tag = tags.next();\n\t\t\t\t\t\t\tif(tag.bucket != null) {\n\t\t\t\t\t\t\t\tLogger.error(this, \"Tag with bucket beyond end of file! index=\"+tag.index+\" bucket=\"+tag.bucket);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Deleting tag \"+tag+\" for index \"+tag.index);\n\t\t\t\t\t\t\tcontainer.delete(tag);\n\t\t\t\t\t\t\tdeleted++;\n\t\t\t\t\t\t\tif(deleted > 1024) break;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(deleted > 1024) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tjobRunner.queue(this, NativeThread.LOW_PRIORITY, true);\n\t\t\t\t\t\t\t} catch (DatabaseDisabledException e) {\n\t\t\t\t\t\t\t\t// :(\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpublic String toString() {\n\t\t\t\t\t\treturn \"PersistentBlobTempBucketFactory.PostShrinkCheck\";\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}, NativeThread.LOW_PRIORITY, true);\n\t\t\t} catch (DatabaseDisabledException e) {\n\t\t\t\t// :(\n\t\t\t}\n\t\t}\n\t\tqueueMaybeShrink();\n\t\treturn true;\n\t\t\n\t}","commit_id":"497636153698bd95f075f80a425cfc5e9cde4f2d","url":"https://github.com/freenet/fred"},{"original_method":"void onInit(ObjectContainer container, DBJobRunner jobRunner2, Random fastWeakRandom, File storageFile2, long blockSize2, Ticker ticker) throws IOException {\n\t\tcontainer.activate(storageFile, 100);\n\t\tinitSlotFinder();\n\t\tFile oldFile = FileUtil.getCanonicalFile(new File(storageFile.getPath())); // db4o argh\n\t\tFile newFile = FileUtil.getCanonicalFile(new File(storageFile2.getPath()));\n\t\tif(blockSize != blockSize2)\n\t\t\tthrow new IllegalStateException(\"My block size is \"+blockSize2+\n\t\t\t\t\t\" but stored block size is \"+blockSize+\n\t\t\t\t\t\" for same file \"+storageFile);\n\t\tif(!(oldFile.equals(newFile) || \n\t\t\t\t(File.separatorChar == '\\\\' ? oldFile.getPath().toLowerCase().equals(newFile.getPath().toLowerCase()) : oldFile.getPath().equals(newFile.getPath())))) {\n\t\t\tif(storageFile.exists() && !FileUtil.moveTo(storageFile, storageFile2, false))\n\t\t\t\tthrow new IOException(\"Unable to move temp blob file from \"+storageFile+\" to \"+storageFile2);\n\t\t\tthis.storageFile = storageFile2;\n\t\t\tcontainer.store(this);\n\t\t}\n\t\traf = new RandomAccessFile(storageFile, \"rw\");\n\t\tchannel = raf.getChannel();\n\t\tnotCommittedBlobs = new TreeMap<Long,PersistentBlobTempBucket>();\n\t\tfreeSlots = new TreeMap<Long,PersistentBlobTempBucketTag>();\n\t\talmostFreeSlots = new TreeMap<Long,PersistentBlobTempBucketTag>();\n\t\tshadows = new TreeMap<Long,PersistentBlobTempBucket>();\n\t\tjobRunner = jobRunner2;\n\t\tweakRandomSource = fastWeakRandom;\n\t\tfreeJobs = new HashSet<DBJob>();\n\t\tthis.ticker = ticker;\n\t\t\n//\t\tif(freeBlocksCache != null)\n//\t\t\tcontainer.activate(freeBlocksCache, 2);\n//\t\telse {\n\t\t\tcreateFreeBlocksCache(container);\n//\t\t}\n\t\t\n\t\tmaybeShrink(container);\n\t\t\n\t\t// Diagnostics\n\t\t\n\t\tif(logDEBUG)\n\t\t\tinitRangeDump(container);\n\t}","id":4259,"modified_method":"void onInit(ObjectContainer container, DBJobRunner jobRunner2, Random fastWeakRandom, File storageFile2, long blockSize2, Ticker ticker) throws IOException {\n\t\tcontainer.activate(storageFile, 100);\n\t\tinitSlotFinder();\n\t\tFile oldFile = FileUtil.getCanonicalFile(new File(storageFile.getPath())); // db4o argh\n\t\tFile newFile = FileUtil.getCanonicalFile(new File(storageFile2.getPath()));\n\t\tif(blockSize != blockSize2)\n\t\t\tthrow new IllegalStateException(\"My block size is \"+blockSize2+\n\t\t\t\t\t\" but stored block size is \"+blockSize+\n\t\t\t\t\t\" for same file \"+storageFile);\n\t\tif(!(oldFile.equals(newFile) || \n\t\t\t\t(File.separatorChar == '\\\\' ? oldFile.getPath().toLowerCase().equals(newFile.getPath().toLowerCase()) : oldFile.getPath().equals(newFile.getPath())))) {\n\t\t\tif(storageFile.exists() && !FileUtil.moveTo(storageFile, storageFile2, false))\n\t\t\t\tthrow new IOException(\"Unable to move temp blob file from \"+storageFile+\" to \"+storageFile2);\n\t\t\tthis.storageFile = storageFile2;\n\t\t\tcontainer.store(this);\n\t\t}\n\t\traf = new RandomAccessFile(storageFile, \"rw\");\n\t\tchannel = raf.getChannel();\n\t\tnotCommittedBlobs = new TreeMap<Long,PersistentBlobTempBucket>();\n\t\tfreeSlots = new TreeMap<Long,PersistentBlobTempBucketTag>();\n\t\talmostFreeSlots = new TreeMap<Long,PersistentBlobTempBucketTag>();\n\t\tshadows = new TreeMap<Long,PersistentBlobTempBucket>();\n\t\tjobRunner = jobRunner2;\n\t\tweakRandomSource = fastWeakRandom;\n\t\tfreeJobs = new HashSet<DBJob>();\n\t\tthis.ticker = ticker;\n\t\t\n//\t\tif(freeBlocksCache != null)\n//\t\t\tcontainer.activate(freeBlocksCache, 2);\n//\t\telse {\n\t\t\tfreeBlocksCache = createFreeBlocksCache(container);\n//\t\t}\n\t\t\n\t\tmaybeShrink(container);\n\t\t\n\t\t// Diagnostics\n\t\t\n\t\tif(logDEBUG)\n\t\t\tinitRangeDump(container);\n\t}","commit_id":"497636153698bd95f075f80a425cfc5e9cde4f2d","url":"https://github.com/freenet/fred"},{"original_method":"public void store(PersistentBlobTempBucket bucket, ObjectContainer container) {\n\t\tif(logMINOR)\n\t\t\tLogger.minor(this, \"Storing bucket \"+bucket+\" for slot \"+bucket.getIndex()+\" to database\");\n\t\tlong index = bucket.getIndex();\n\t\tPersistentBlobTempBucketTag tag = bucket.getTag();\n\t\tcontainer.activate(tag, 1);\n\t\tif(tag.bucket != null && tag.bucket != bucket) {\n\t\t\tLogger.error(this, \"Slot \"+index+\" already occupied!: \"+tag.bucket+\" for \"+tag.index);\n\t\t\tthrow new IllegalStateException(\"Slot \"+index+\" already occupied!\");\n\t\t}\n\t\ttag.bucket = bucket;\n\t\ttag.isFree = false;\n\t\tcontainer.store(tag);\n\t\tcontainer.store(bucket);\n\t\tsynchronized(this) {\n\t\t\tnotCommittedBlobs.remove(index);\n\t\t\tif(freeBlocksCache != null && index < Integer.MAX_VALUE)\n\t\t\t\tfreeBlocksCache.setBit((int)index, true);\n\t\t}\n\t}","id":4260,"modified_method":"public void store(PersistentBlobTempBucket bucket, ObjectContainer container) {\n\t\tif(logMINOR)\n\t\t\tLogger.minor(this, \"Storing bucket \"+bucket+\" for slot \"+bucket.getIndex()+\" to database\");\n\t\tlong index = bucket.getIndex();\n\t\tPersistentBlobTempBucketTag tag = bucket.getTag();\n\t\tcontainer.activate(tag, 1);\n\t\tif(tag.bucket != null && tag.bucket != bucket) {\n\t\t\tLogger.error(this, \"Slot \"+index+\" already occupied!: \"+tag.bucket+\" for \"+tag.index);\n\t\t\tthrow new IllegalStateException(\"Slot \"+index+\" already occupied!\");\n\t\t}\n\t\ttag.bucket = bucket;\n\t\ttag.isFree = false;\n\t\tcontainer.store(tag);\n\t\tcontainer.store(bucket);\n\t\tsynchronized(this) {\n\t\t\tnotCommittedBlobs.remove(index);\n\t\t\tfreeBlocksCache.setBit((int)index, true);\n\t\t}\n\t}","commit_id":"497636153698bd95f075f80a425cfc5e9cde4f2d","url":"https://github.com/freenet/fred"},{"original_method":"private void createFreeBlocksCache(ObjectContainer container) {\n\t\tSystem.err.println(\"Creating free blocks cache...\");\n\t\tlong size;\n\t\ttry {\n\t\t\tsize = channel.size();\n\t\t} catch (IOException e1) {\n\t\t\tLogger.error(this, \"Unable to find size of temp blob storage file: \"+e1, e1);\n\t\t\treturn;\n\t\t}\n\t\tsize -= size % blockSize;\n\t\tlong blocks = size / blockSize;\n\t\tWrapperManager.signalStarting((int) Math.max(blocks * 100, 24*60*60*1000));\n\t\tif(blocks > Integer.MAX_VALUE) {\n\t\t\tLogger.error(this, \"Unable to create free blocks cache!\");\n\t\t\treturn;\n\t\t}\n\t\tfreeBlocksCache = new BitArray((int)blocks);\n\t\t//container.store(freeBlocksCache);\n\t\t//container.store(this);\n\t\t\n\t\tQuery query = container.query();\n\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\t\n\t\tint counter = 0;\n\t\tint buckets = 0;\n\t\t\n\t\twhile(tags.hasNext()) {\n\t\t\tif(counter % 1024 == 0)\n\t\t\t\tSystem.out.println(\"Creating free blocks cache: \"+counter+\" / \"+blocks);\n\t\t\tPersistentBlobTempBucketTag tag = tags.next();\n\t\t\tcounter++;\n\t\t\tif(tag.factory != this) continue;\n\t\t\tif(tag.isFree) {\n\t\t\t\tif(tag.bucket != null) {\n\t\t\t\t\tcontainer.activate(tag.bucket, 1);\n\t\t\t\t\tif(!tag.bucket.freed())\n\t\t\t\t\t\tLogger.error(this, \"Bucket \"+tag.bucket+\" for index \"+tag.index+\" is not free even though tag is!\");\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(tag.bucket == null) {\n\t\t\t\tLogger.error(this, \"Tag for index \"+tag.index+\" has no bucket yet is not free?!\");\n\t\t\t\ttag.isFree = true;\n\t\t\t\tcontainer.store(tag);\n\t\t\t}\n\t\t\tbuckets++;\n\t\t\tif(tag.index > Integer.MAX_VALUE) {\n\t\t\t\tLogger.error(this, \"Tag for index \"+tag.index+\" is over MAXINT yet the file length is not?!\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfreeBlocksCache.setBit((int)tag.index, true);\n\t\t}\n\t\tSystem.out.println(\"Created free blocks cache: \"+buckets+\" used of \"+counter);\n\t}","id":4261,"modified_method":"private BitArray createFreeBlocksCache(ObjectContainer container) throws IOException {\n\t\tSystem.err.println(\"Creating free blocks cache...\");\n\t\tlong size;\n\t\ttry {\n\t\t\tsize = channel.size();\n\t\t} catch (IOException e1) {\n\t\t\tLogger.error(this, \"Unable to find size of temp blob storage file: \"+e1, e1);\n\t\t\tthrow e1;\n\t\t}\n\t\tsize -= size % blockSize;\n\t\tlong blocks = size / blockSize;\n\t\tWrapperManager.signalStarting((int) Math.max(blocks * 100, 24*60*60*1000));\n\t\tif(blocks > Integer.MAX_VALUE) {\n\t\t\tLogger.error(this, \"Unable to create free blocks cache!\");\n\t\t\tthrow new IOException(\"Blob file already too big!\");\n\t\t}\n\t\tBitArray freeBlocksCache = new BitArray((int)blocks);\n\t\t//container.store(freeBlocksCache);\n\t\t//container.store(this);\n\t\t\n\t\tQuery query = container.query();\n\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\t\n\t\tint counter = 0;\n\t\tint buckets = 0;\n\t\t\n\t\twhile(tags.hasNext()) {\n\t\t\tif(counter % 1024 == 0)\n\t\t\t\tSystem.out.println(\"Creating free blocks cache: \"+counter+\" / \"+blocks);\n\t\t\tPersistentBlobTempBucketTag tag = tags.next();\n\t\t\tcounter++;\n\t\t\tif(tag.factory != this) continue;\n\t\t\tif(tag.isFree) {\n\t\t\t\tif(tag.bucket != null) {\n\t\t\t\t\tcontainer.activate(tag.bucket, 1);\n\t\t\t\t\tif(!tag.bucket.freed())\n\t\t\t\t\t\tLogger.error(this, \"Bucket \"+tag.bucket+\" for index \"+tag.index+\" is not free even though tag is!\");\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(tag.bucket == null) {\n\t\t\t\tLogger.error(this, \"Tag for index \"+tag.index+\" has no bucket yet is not free?!\");\n\t\t\t\ttag.isFree = true;\n\t\t\t\tcontainer.store(tag);\n\t\t\t}\n\t\t\tbuckets++;\n\t\t\tif(tag.index > Integer.MAX_VALUE) {\n\t\t\t\tLogger.error(this, \"Tag for index \"+tag.index+\" is over MAXINT yet the file length is not?!\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfreeBlocksCache.setBit((int)tag.index, true);\n\t\t}\n\t\tSystem.out.println(\"Created free blocks cache: \"+buckets+\" used of \"+counter);\n\t\treturn freeBlocksCache;\n\t}","commit_id":"497636153698bd95f075f80a425cfc5e9cde4f2d","url":"https://github.com/freenet/fred"},{"original_method":"public synchronized void freeBucket(long index, PersistentBlobTempBucket bucket) {\n\t\tif(logMINOR) Logger.minor(this, \"Freeing index \"+index+\" for \"+bucket, new Exception(\"debug\"));\n\t\tnotCommittedBlobs.remove(index);\n\t\tbucket.onFree();\n\t\tif(!bucket.persisted()) {\n\t\t\tif(bucket.getTag() == null) {\n\t\t\t\tLogger.error(this, \"freeBucket but tag is null for \"+bucket+\" - not activated???\", new Exception(\"error\"));\n\t\t\t} else {\n\t\t\t\t// If it hasn't been written to the database, it doesn't need to be removed, so removeFrom() won't be called.\n\t\t\t\tfreeSlots.put(index, bucket.getTag());\n\t\t\t}\n\t\t}\n\t\tPersistentBlobTempBucket shadow = shadows.get(index);\n\t\tif(shadow != null) {\n\t\t\tshadow.freed();\n\t\t}\n\t\tif(freeBlocksCache != null && index < Integer.MAX_VALUE)\n\t\t\tfreeBlocksCache.setBit((int)index, false);\n\t}","id":4262,"modified_method":"public synchronized void freeBucket(long index, PersistentBlobTempBucket bucket) {\n\t\tif(logMINOR) Logger.minor(this, \"Freeing index \"+index+\" for \"+bucket, new Exception(\"debug\"));\n\t\tnotCommittedBlobs.remove(index);\n\t\tbucket.onFree();\n\t\tif(!bucket.persisted()) {\n\t\t\tif(bucket.getTag() == null) {\n\t\t\t\tLogger.error(this, \"freeBucket but tag is null for \"+bucket+\" - not activated???\", new Exception(\"error\"));\n\t\t\t} else {\n\t\t\t\t// If it hasn't been written to the database, it doesn't need to be removed, so removeFrom() won't be called.\n\t\t\t\tfreeSlots.put(index, bucket.getTag());\n\t\t\t}\n\t\t}\n\t\tPersistentBlobTempBucket shadow = shadows.get(index);\n\t\tif(shadow != null) {\n\t\t\tshadow.freed();\n\t\t}\n\t\tfreeBlocksCache.setBit((int)index, false);\n\t}","commit_id":"497636153698bd95f075f80a425cfc5e9cde4f2d","url":"https://github.com/freenet/fred"},{"original_method":"private boolean innerDefrag(PersistentBlobTempBucket lastBucket, PersistentBlobTempBucket shadow, PersistentBlobTempBucketTag lastTag, PersistentBlobTempBucketTag newTag, ObjectContainer container) {\n\t\t// Do the move.\n\t\tLogger.minor(this, \"Attempting to defragment: moving \"+lastTag.index+\" to \"+newTag.index);\n\t\ttry {\n\t\t\tbyte[] blob = readSlot(lastTag.index);\n\t\t\twriteSlot(newTag.index, blob);\n\t\t} catch (IOException e) {\n\t\t\tSystem.err.println(\"Failed to move bucket in defrag: \"+e);\n\t\t\te.printStackTrace();\n\t\t\tLogger.error(this, \"Failed to move bucket in defrag: \"+e, e);\n\t\t\tqueueMaybeShrink();\n\t\t\treturn false;\n\t\t}\n\t\tlastBucket.setIndex(newTag.index);\n\t\tlastBucket.setTag(newTag);\n\t\tnewTag.bucket = lastBucket;\n\t\tnewTag.isFree = false;\n\t\tlastTag.bucket = null;\n\t\tlastTag.isFree = true;\n\t\tif(shadow != null)\n\t\t\tshadow.setIndex(newTag.index);\n\t\t// shadow has no tag\n\t\tcontainer.store(newTag);\n\t\tcontainer.store(lastTag);\n\t\tcontainer.store(lastBucket);\n\t\tsynchronized(this) {\n\t\t\t// Ensure that even in wierd cases it won't be reused before commit and therefore won't cause problems.\n\t\t\talmostFreeSlots.put(lastTag.index, lastTag);\n\t\t\tif(freeBlocksCache != null && lastTag.index < Integer.MAX_VALUE)\n\t\t\t\tfreeBlocksCache.setBit((int)lastTag.index, false);\n\t\t}\n\t\treturn true;\n\t}","id":4263,"modified_method":"private boolean innerDefrag(PersistentBlobTempBucket lastBucket, PersistentBlobTempBucket shadow, PersistentBlobTempBucketTag lastTag, PersistentBlobTempBucketTag newTag, ObjectContainer container) {\n\t\t// Do the move.\n\t\tLogger.minor(this, \"Attempting to defragment: moving \"+lastTag.index+\" to \"+newTag.index);\n\t\ttry {\n\t\t\tbyte[] blob = readSlot(lastTag.index);\n\t\t\twriteSlot(newTag.index, blob);\n\t\t} catch (IOException e) {\n\t\t\tSystem.err.println(\"Failed to move bucket in defrag: \"+e);\n\t\t\te.printStackTrace();\n\t\t\tLogger.error(this, \"Failed to move bucket in defrag: \"+e, e);\n\t\t\tqueueMaybeShrink();\n\t\t\treturn false;\n\t\t}\n\t\tlastBucket.setIndex(newTag.index);\n\t\tlastBucket.setTag(newTag);\n\t\tnewTag.bucket = lastBucket;\n\t\tnewTag.isFree = false;\n\t\tlastTag.bucket = null;\n\t\tlastTag.isFree = true;\n\t\tif(shadow != null)\n\t\t\tshadow.setIndex(newTag.index);\n\t\t// shadow has no tag\n\t\tcontainer.store(newTag);\n\t\tcontainer.store(lastTag);\n\t\tcontainer.store(lastBucket);\n\t\tsynchronized(this) {\n\t\t\t// Ensure that even in wierd cases it won't be reused before commit and therefore won't cause problems.\n\t\t\talmostFreeSlots.put(lastTag.index, lastTag);\n\t\t\tfreeBlocksCache.setBit((int)lastTag.index, false);\n\t\t}\n\t\treturn true;\n\t}","commit_id":"497636153698bd95f075f80a425cfc5e9cde4f2d","url":"https://github.com/freenet/fred"},{"original_method":"public String getSiteURL() {\n\t\t\ttry{\n\t\t\t\t// return M_ss.getSite(siteId).getUrl();\n\t\t\t\tif(site != null) return site.getUrl();\n\t\t\t\telse return portalURL + \"/site/\" + siteId;\n\t\t\t}catch(Exception e){\n\t\t\t\tLOG.warn(\"Unable to generate URL for site id: \" + siteId);\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t}","id":4264,"modified_method":"public String getSiteURL() {\n\t\t\tStringBuilder siteUrl = new StringBuilder();\n\t\t\tsiteUrl.append(portalURL);\n\t\t\tsiteUrl.append(\"/site/\");\n\t\t\tsiteUrl.append(siteId);\n\t\t\treturn siteUrl.toString();\n\t\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public String getInitValues() {\n\t\tif(isAllowed()){\n\t\t\tif(userId == null){\n\t\t\t\tString param = (String) FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap().get(\"userId\");\n\t\t\t\tif(param != null){\n\t\t\t\t\tuserId = param;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif(refreshQuery){\n\t\t\t\tLOG.debug(\"Refreshing query...\");\n\t\t\t\tdoSearch();\n\t\t\t\trefreshQuery = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(userSitesRows != null && userSitesRows.size() > 0) Collections.sort(userSitesRows, getUserSitesRowComparator(sitesSortColumn, sitesSortAscending, collator));\n\t\t}\n\t\treturn \"\";\n\t}","id":4265,"modified_method":"public String getInitValues() {\n\t\tif(isAllowed()){\n\t\t\tif(userId == null){\n\t\t\t\tString param = (String) FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap().get(\"userId\");\n\t\t\t\tif(param != null){\n\t\t\t\t\tuserId = param;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif(refreshQuery){\n\t\t\t\tLOG.debug(\"Refreshing query...\");\n\t\t\t\ttry{\n\t\t\t\t\tdoSearch();\n\t\t\t\t}catch(SQLException e){\n\t\t\t\t\tLOG.warn(\"Failed to perform search on usermembership\", e);\n\t\t\t\t}\n\t\t\t\trefreshQuery = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(userSitesRows != null && userSitesRows.size() > 0) Collections.sort(userSitesRows, getUserSitesRowComparator(sitesSortColumn, sitesSortAscending, collator));\n\t\t}\n\t\treturn \"\";\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public boolean getSitesSortAscending() {\n\t\treturn this.sitesSortAscending;\n\t}","id":4266,"modified_method":"public boolean isSitesSortAscending() {\n\t\treturn this.sitesSortAscending;\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Uses ONLY Sakai API for site membership, user role and group membership.\n\t */\n\tprivate void doSearch2() {\n\t\tlong start = (new Date()).getTime();\n\t\tuserSitesRows = new ArrayList();\n\t\tthisUserId = M_session.getCurrentSessionUserId();\n\t\tsetSakaiSessionUser(userId);\n\t\tLOG.debug(\"Switched CurrentSessionUserId: \" + M_session.getCurrentSessionUserId());\n\t\tList siteList = org.sakaiproject.site.cover.SiteService.getSites(SelectionType.ACCESS, null, null, null, SortType.TITLE_ASC, null);\n\t\tsetSakaiSessionUser(thisUserId);\n\n\t\tIterator i = siteList.iterator();\n\t\twhile (i.hasNext()){\n\t\t\tSite s = (Site) i.next();\n\t\t\tUserSitesRow row = new UserSitesRow(s, getGroups(userId, s.getId()), getActiveUserRoleInSite(userId, s));\n\t\t\tuserSitesRows.add(row);\n\t\t}\n\t\tlong end = (new Date()).getTime();\n\t\tLOG.debug(\"doSearch2() took total of \"+((end - start)/1000)+\" sec.\");\n\t}","id":4267,"modified_method":"/**\n\t * Uses ONLY Sakai API for site membership, user role and group membership.\n\t * @throws SQLException \n\t */\n\tprivate void doSearch2() throws SQLException {\n\t\tlong start = (new Date()).getTime();\n\t\tuserSitesRows = new ArrayList();\n\t\tthisUserId = M_session.getCurrentSessionUserId();\n\t\tsetSakaiSessionUser(userId);\n\t\tLOG.debug(\"Switched CurrentSessionUserId: \" + M_session.getCurrentSessionUserId());\n\t\tList siteList = org.sakaiproject.site.cover.SiteService.getSites(SelectionType.ACCESS, null, null, null, SortType.TITLE_ASC, null);\n\t\tsetSakaiSessionUser(thisUserId);\n\n\t\tIterator i = siteList.iterator();\n\t\twhile (i.hasNext()){\n\t\t\tSite s = (Site) i.next();\n\t\t\tUserSitesRow row = new UserSitesRow(s, getGroups(userId, s.getId()), getActiveUserRoleInSite(userId, s));\n\t\t\tuserSitesRows.add(row);\n\t\t}\n\t\tlong end = (new Date()).getTime();\n\t\tLOG.debug(\"doSearch2() took total of \"+((end - start)/1000)+\" sec.\");\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Uses single simple SQL for site membership, uses API for user role and\n\t * group membership.<br>\n\t * For a 12 site users it takes ~30secs!\n\t * @deprecated\n\t */\n\tprivate void doSearch3() {\n\t\tuserSitesRows = new ArrayList();\n\t\ttimeSpentInGroups = 0;\n\t\ttry{\n\t\t\tConnection c = M_sql.borrowConnection();\n\t\t\tString sql = \"select distinct(SAKAI_SITE_USER.SITE_ID) from SAKAI_SITE_USER,SAKAI_SITE where SAKAI_SITE.SITE_ID=SAKAI_SITE_USER.SITE_ID and IS_USER=0 and IS_SPECIAL=0 and USER_ID=?\";\n\t\t\tPreparedStatement pst = c.prepareStatement(sql);\n\t\t\tpst.setString(1, userId);\n\t\t\tResultSet rs = pst.executeQuery();\n\t\t\twhile (rs.next()){\n\t\t\t\tString id = rs.getString(\"SITE_ID\");\n\t\t\t\ttry{\n\t\t\t\t\tSite site = M_site.getSite(id);\n\t\t\t\t\tUserSitesRow row = new UserSitesRow(site, getGroups(userId, site), getActiveUserRoleInSite(userId, site));\n\t\t\t\t\tuserSitesRows.add(row);\n\t\t\t\t}catch(IdUnusedException e){\n\t\t\t\t\tLOG.warn(\"Unable to retrieve site for site id: \" + id, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\trs.close();\n\t\t\tpst.close();\n\t\t\tM_sql.returnConnection(c);\n\t\t}catch(SQLException e){\n\t\t\tLOG.warn(\"SQL error occurred while retrieving user memberships for user: \" + userId, e);\n\t\t\tLOG.warn(\"UserMembership will use alternative methods for retrieving user memberships (ONLY Published sites will be listed).\");\n\t\t\tdoSearch2();\n\t\t}\n\t\tLOG.debug(\"Group ops took \" + (timeSpentInGroups / 1000) + \" secs\");\n\t}","id":4268,"modified_method":"/**\n\t * Uses single simple SQL for site membership, uses API for user role and\n\t * group membership.<br>\n\t * For a 12 site users it takes ~30secs!\n\t * @throws SQLException \n\t * @deprecated\n\t */\n\tprivate void doSearch3() throws SQLException {\n\t\tuserSitesRows = new ArrayList();\n\t\ttimeSpentInGroups = 0;\n\t\tConnection c = null;\n\t\tPreparedStatement pst = null;\n\t\tResultSet rs = null;\n\t\ttry{\n\t\t\tc = M_sql.borrowConnection();\n\t\t\tString sql = \"select distinct(SAKAI_SITE_USER.SITE_ID) from SAKAI_SITE_USER,SAKAI_SITE where SAKAI_SITE.SITE_ID=SAKAI_SITE_USER.SITE_ID and IS_USER=0 and IS_SPECIAL=0 and USER_ID=?\";\n\t\t\tpst = c.prepareStatement(sql);\n\t\t\tpst.setString(1, userId);\n\t\t\trs = pst.executeQuery();\n\t\t\twhile (rs.next()){\n\t\t\t\tString id = rs.getString(\"SITE_ID\");\n\t\t\t\ttry{\n\t\t\t\t\tSite site = M_site.getSite(id);\n\t\t\t\t\tUserSitesRow row = new UserSitesRow(site, getGroups(userId, site), getActiveUserRoleInSite(userId, site));\n\t\t\t\t\tuserSitesRows.add(row);\n\t\t\t\t}catch(IdUnusedException e){\n\t\t\t\t\tLOG.warn(\"Unable to retrieve site for site id: \" + id, e);\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(SQLException e){\n\t\t\tLOG.warn(\"SQL error occurred while retrieving user memberships for user: \" + userId, e);\n\t\t\tLOG.warn(\"UserMembership will use alternative methods for retrieving user memberships (ONLY Published sites will be listed).\");\n\t\t\tdoSearch2();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(rs != null)\n\t\t\t\t\trs.close();\n\t\t\t}finally{\n\t\t\t\ttry{\n\t\t\t\t\tif(pst != null)\n\t\t\t\t\t\tpst.close();\n\t\t\t\t}finally{\n\t\t\t\t\tif(c != null)\n\t\t\t\t\t\tM_sql.returnConnection(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tLOG.debug(\"Group ops took \" + (timeSpentInGroups / 1000) + \" secs\");\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public String getGroups(String userId, String siteId) {\n\t\tlong start = (new Date()).getTime();\n\t\tStringBuilder groups = new StringBuilder();\n\t\tString siteReference = M_site.siteReference(siteId);\n\t\ttry{\n\t\t\tConnection c = M_sql.borrowConnection();\n\t\t\tString sql = \"select SS.GROUP_ID, SS.TITLE TITLE, SS.DESCRIPTION \" \n\t\t\t\t\t+ \"from SAKAI_SITE_GROUP SS, SAKAI_REALM R, SAKAI_REALM_RL_GR RRG \" \n\t\t\t\t\t+ \"where R.REALM_ID = concat(concat('\"+siteReference+\"','/group/'), SS.GROUP_ID) \"\n\t\t\t\t\t+ \"and R.REALM_KEY = RRG.REALM_KEY \" \n\t\t\t\t\t+ \"and RRG.USER_ID = ? \"\n\t\t\t\t\t+ \"and SS.SITE_ID = ? \"\n\t\t\t\t\t+ \"ORDER BY TITLE\";\n\t\t\tPreparedStatement pst = c.prepareStatement(sql);\n\t\t\tpst.setString(1, userId);\n\t\t\tpst.setString(2, siteId);\n\t\t\tResultSet rs = pst.executeQuery();\n\t\t\twhile (rs.next()){\n\t\t\t\tString t = rs.getString(\"TITLE\");\n\t\t\t\tif(groups.length() != 0) groups.append(\", \");\n\t\t\t\tgroups.append(t);\n\t\t\t}\n\t\t\trs.close();\n\t\t\tpst.close();\n\t\t\tM_sql.returnConnection(c);\n\t\t}catch(SQLException e){\n\t\t\tLOG.error(\"SQL error occurred while retrieving group memberships for user: \" + userId, e);\n\t\t}\n\t\tlong end = (new Date()).getTime();\n\t\ttimeSpentInGroups += (end - start);\n\t\tLOG.debug(\"getGroups(\"+userId+\", \"+siteId+\") took \"+((end - start)/1000)+\" sec.\");\n\t\treturn groups.toString();\n\t}","id":4269,"modified_method":"public String getGroups(String userId, String siteId) throws SQLException {\n\t\tlong start = (new Date()).getTime();\n\t\tStringBuilder groups = new StringBuilder();\n\t\tString siteReference = M_site.siteReference(siteId);\n\t\tConnection c = null;\n\t\tPreparedStatement pst = null;\n\t\tResultSet rs = null;\n\t\ttry{\n\t\t\tc = M_sql.borrowConnection();\n\t\t\tString sql = \"select SS.GROUP_ID, SS.TITLE TITLE, SS.DESCRIPTION \" \n\t\t\t\t\t+ \"from SAKAI_SITE_GROUP SS, SAKAI_REALM R, SAKAI_REALM_RL_GR RRG \" \n\t\t\t\t\t+ \"where R.REALM_ID = concat(concat('\"+siteReference+\"','/group/'), SS.GROUP_ID) \"\n\t\t\t\t\t+ \"and R.REALM_KEY = RRG.REALM_KEY \" \n\t\t\t\t\t+ \"and RRG.USER_ID = ? \"\n\t\t\t\t\t+ \"and SS.SITE_ID = ? \"\n\t\t\t\t\t+ \"ORDER BY TITLE\";\n\t\t\tpst = c.prepareStatement(sql);\n\t\t\tpst.setString(1, userId);\n\t\t\tpst.setString(2, siteId);\n\t\t\trs = pst.executeQuery();\n\t\t\twhile (rs.next()){\n\t\t\t\tString t = rs.getString(\"TITLE\");\n\t\t\t\tif(groups.length() != 0) groups.append(\", \");\n\t\t\t\tgroups.append(t);\n\t\t\t}\n\t\t}catch(SQLException e){\n\t\t\tLOG.error(\"SQL error occurred while retrieving group memberships for user: \" + userId, e);\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(rs != null)\n\t\t\t\t\trs.close();\n\t\t\t}finally{\n\t\t\t\ttry{\n\t\t\t\t\tif(pst != null)\n\t\t\t\t\t\tpst.close();\n\t\t\t\t}finally{\n\t\t\t\t\tif(c != null)\n\t\t\t\t\t\tM_sql.returnConnection(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong end = (new Date()).getTime();\n\t\ttimeSpentInGroups += (end - start);\n\t\tLOG.debug(\"getGroups(\"+userId+\", \"+siteId+\") took \"+((end - start)/1000)+\" sec.\");\n\t\treturn groups.toString();\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Uses complex SQL for site membership, user role and group membership.<br>\n\t * For a 12 site users it takes < 1 secs!\n\t */\n\tprivate void doSearch() {\n\t\tuserSitesRows = new ArrayList();\n\t\ttry{\n\t\t\tConnection c = M_sql.borrowConnection();\n\t\t\tString sql = \"select ss.SITE_ID, ss.TITLE, ss.TYPE, ss.PUBLISHED, srr.ROLE_NAME, srrg.ACTIVE, \"+\n\t\t\t\t\t\t\" (select VALUE from SAKAI_SITE_PROPERTY ssp where ss.SITE_ID = ssp.SITE_ID and ssp.NAME = 'term') TERM \" +\n\t\t\t\t\t\t\"from SAKAI_SITE ss, SAKAI_REALM sr, SAKAI_REALM_RL_GR srrg, SAKAI_REALM_ROLE srr \" +\n\t\t\t\t\t\t\"where sr.REALM_ID = CONCAT('/site/',ss.SITE_ID) \" +\n\t\t\t\t\t\t\"and sr.REALM_KEY = srrg.REALM_KEY \" +\n\t\t\t\t\t\t\"and srrg.ROLE_KEY = srr.ROLE_KEY \" +\n\t\t\t\t\t\t\"and srrg.USER_ID = ? \" +\n\t\t\t\t\t\t\"and ss.IS_USER = 0 \" + \n\t\t\t\t\t\t\"and ss.IS_SPECIAL = 0 \" +\n\t\t\t\t\t\t\"ORDER BY ss.TITLE\";\n\t\t\tPreparedStatement pst = c.prepareStatement(sql);\n\t\t\tpst.setString(1, userId);\n\t\t\tResultSet rs = pst.executeQuery();\n\t\t\twhile (rs.next()){\n\t\t\t\tString id = rs.getString(\"SITE_ID\");\n\t\t\t\tString t = rs.getString(\"TITLE\");\n\t\t\t\tString tp = rs.getString(\"TYPE\");\n\t\t\t\tString pv = rs.getString(\"PUBLISHED\").equals(\"1\")? msgs.getString(\"status_published\") : msgs.getString(\"status_unpublished\");;\n\t\t\t\tString rn = rs.getString(\"ROLE_NAME\");\n\t\t\t\tString grps = getGroups(userId, id);\n\t\t\t\tString active = rs.getString(\"ACTIVE\").trim().equals(\"1\")? msgs.getString(\"site_user_status_active\") : msgs.getString(\"site_user_status_inactive\");\n\t\t\t\tString term = rs.getString(\"TERM\");\n\t\t\t\tterm = term == null? \"\" : term;\n\t\t\t\tUserSitesRow row = new UserSitesRow(id, t, tp, grps, rn, pv, active, term);\n\t\t\t\tuserSitesRows.add(row);\n\t\t\t}\n\t\t\trs.close();\n\t\t\tpst.close();\n\t\t\tM_sql.returnConnection(c);\n\t\t}catch(SQLException e){\n\t\t\tLOG.warn(\"SQL error occurred while retrieving user memberships for user: \" + userId, e);\n\t\t\tLOG.warn(\"UserMembership will use alternative methods for retrieving user memberships.\");\n\t\t\tdoSearch3();\n\t\t}\n\t}","id":4270,"modified_method":"/**\n\t * Uses complex SQL for site membership, user role and group membership.<br>\n\t * For a 12 site users it takes < 1 secs!\n\t * @throws SQLException \n\t */\n\tprivate void doSearch() throws SQLException {\n\t\tuserSitesRows = new ArrayList();\n\t\tConnection c = null;\n\t\tPreparedStatement pst = null;\n\t\tResultSet rs = null;\n\t\ttry{\n\t\t\tc = M_sql.borrowConnection();\n\t\t\tString sql = \"select ss.SITE_ID, ss.TITLE, ss.TYPE, ss.PUBLISHED, srr.ROLE_NAME, srrg.ACTIVE, \"+\n\t\t\t\t\t\t\" (select VALUE from SAKAI_SITE_PROPERTY ssp where ss.SITE_ID = ssp.SITE_ID and ssp.NAME = 'term') TERM \" +\n\t\t\t\t\t\t\"from SAKAI_SITE ss, SAKAI_REALM sr, SAKAI_REALM_RL_GR srrg, SAKAI_REALM_ROLE srr \" +\n\t\t\t\t\t\t\"where sr.REALM_ID = CONCAT('/site/',ss.SITE_ID) \" +\n\t\t\t\t\t\t\"and sr.REALM_KEY = srrg.REALM_KEY \" +\n\t\t\t\t\t\t\"and srrg.ROLE_KEY = srr.ROLE_KEY \" +\n\t\t\t\t\t\t\"and srrg.USER_ID = ? \" +\n\t\t\t\t\t\t\"and ss.IS_USER = 0 \" + \n\t\t\t\t\t\t\"and ss.IS_SPECIAL = 0 \" +\n\t\t\t\t\t\t\"ORDER BY ss.TITLE\";\n\t\t\tpst = c.prepareStatement(sql);\n\t\t\tpst.setString(1, userId);\n\t\t\trs = pst.executeQuery();\n\t\t\twhile (rs.next()){\n\t\t\t\tString id = rs.getString(\"SITE_ID\");\n\t\t\t\tString t = rs.getString(\"TITLE\");\n\t\t\t\tString tp = rs.getString(\"TYPE\");\n\t\t\t\tString pv = rs.getString(\"PUBLISHED\");\n\t\t\t\tif(\"1\".equals(pv)) {\n\t\t\t\t\tpv = msgs.getString(\"status_published\");\n\t\t\t\t}else{\n\t\t\t\t\tpv = msgs.getString(\"status_unpublished\"); \n\t\t\t\t}\n\t\t\t\tString rn = rs.getString(\"ROLE_NAME\");\n\t\t\t\tString grps = getGroups(userId, id);\n\t\t\t\tString active = rs.getString(\"ACTIVE\").trim().equals(\"1\")? msgs.getString(\"site_user_status_active\") : msgs.getString(\"site_user_status_inactive\");\n\t\t\t\tString term = rs.getString(\"TERM\");\n\t\t\t\tif(term == null)\n\t\t\t\t\tterm = \"\";\n\t\t\t\tuserSitesRows.add(new UserSitesRow(id, t, tp, grps, rn, pv, active, term));\n\t\t\t}\n\t\t}catch(SQLException e){\n\t\t\tLOG.warn(\"SQL error occurred while retrieving user memberships for user: \" + userId, e);\n\t\t\tLOG.warn(\"UserMembership will use alternative methods for retrieving user memberships.\");\n\t\t\tdoSearch3();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(rs != null)\n\t\t\t\t\trs.close();\n\t\t\t}finally{\n\t\t\t\ttry{\n\t\t\t\t\tif(pst != null)\n\t\t\t\t\t\tpst.close();\n\t\t\t\t}finally{\n\t\t\t\t\tif(c != null)\n\t\t\t\t\t\tM_sql.returnConnection(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public String getUserDisplayId() {\n\t\ttry{\n\t\t\treturn UserDirectoryService.getUser(userId).getDisplayId();\n\t\t}catch(UserNotDefinedException e){\n\t\t\treturn userId;\n\t\t}\n\t}","id":4271,"modified_method":"public String getUserDisplayId() {\n\t\tString displayId = null;\n\t\ttry{\n\t\t\tdisplayId = UserDirectoryService.getUser(userId).getDisplayId();\n\t\t}catch(UserNotDefinedException e){\n\t\t\tdisplayId = userId;\n\t\t}\n\t\treturn displayId;\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void processActionSearchChangeListener(ValueChangeEvent event) {\n\t\tString newValue = (String) event.getNewValue();\n\t\tnewValue = (newValue == null) ? \"\" : newValue;\n\t\tsearchKeyword = (searchKeyword == null) ? \"\" : searchKeyword.trim();\n\t}","id":4272,"modified_method":"public void processActionSearchChangeListener(ValueChangeEvent event) {\n\t\tsearchKeyword = (searchKeyword == null) ? \"\" : searchKeyword.trim();\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public List getUserTypes() {\n\t\tif(userTypes == null){\n\t\t\tProperties config = M_tm.getCurrentPlacement().getConfig();\n\t\t\tBoolean userTypeLimitToSelf = Boolean.parseBoolean(config.getProperty(CFG_USER_TYPE_LIMIT_TO_SELF, \"false\"));\n\t\t\tString userTypeLimitToListStr = config.getProperty(CFG_USER_TYPE_LIMIT_TO_LIST, \"\");\n\t\t\tString[] userTypeLimitToList = null;\n\t\t\tuserTypes = new ArrayList();\n\t\t\t\n\t\t\tif(userTypeLimitToSelf){\n\t\t\t\tuserTypes.add(new SelectItem(M_uds.getCurrentUser().getType()));\t\t\t\t\n\t\t\t}else if(!\"\".equals(userTypeLimitToListStr)){\n\t\t\t\tuserTypeLimitToList = userTypeLimitToListStr.split(\",\");\n\t\t\t\tString all = \"\";\n\t\t\t\tfor(int i=0; i<userTypeLimitToList.length; i++){\n\t\t\t\t\tuserTypes.add(new SelectItem(userTypeLimitToList[i]));\n\t\t\t\t\tall += \"'\"+ userTypeLimitToList[i] +\"'\";\n\t\t\t\t\tif(i<userTypeLimitToList.length-1)\n\t\t\t\t\t\tall += \",\";\n\t\t\t\t}\n\t\t\t\tuserTypes.add(0,new SelectItem(all,USER_TYPE_ALL));\n\t\t\t}else\n\t\t\t{\t\t\t\t\t\n\t\t\t\tuserTypes.add(new SelectItem(USER_TYPE_ALL));\n\t\t\t\ttry{\n\t\t\t\t\tConnection c = M_sql.borrowConnection();\n\t\t\t\t\tString vendor = M_sql.getVendor();\n\t\t\t\t\tString sql = null;\n\t\t\t\t\tif(vendor.equalsIgnoreCase(\"oracle\")){\n\t\t\t\t\t\tsql = \"select distinct TYPE from SAKAI_USER where TYPE is not null\";\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsql = \"select distinct TYPE from SAKAI_USER where TYPE!='' and TYPE is not null;\";\n\t\t\t\t\t}\n\t\t\t\t\tStatement st = c.createStatement();\n\t\t\t\t\tResultSet rs = st.executeQuery(sql);\n\t\t\t\t\twhile (rs.next()){\n\t\t\t\t\t\tString type = rs.getString(1);\n\t\t\t\t\t\tuserTypes.add(new SelectItem(type));\n\t\t\t\t\t}\n\t\t\t\t\trs.close();\n\t\t\t\t\tst.close();\n\t\t\t\t\tM_sql.returnConnection(c);\n\t\t\t\t}catch(SQLException e){\n\t\t\t\t\tLOG.error(\"SQL error occurred while retrieving user types: \" + e.getMessage(), e);\n\t\t\t\t}\n\t\t\t\tuserTypes.add(new SelectItem(USER_TYPE_NONE));\n\t\t\t}\n\t\t}\n\t\treturn userTypes;\n\t}","id":4273,"modified_method":"public List getUserTypes() throws SQLException {\n\t\tif(userTypes == null){\n\t\t\tProperties config = M_tm.getCurrentPlacement().getConfig();\n\t\t\tBoolean userTypeLimitToSelf = Boolean.parseBoolean(config.getProperty(CFG_USER_TYPE_LIMIT_TO_SELF, \"false\"));\n\t\t\tString userTypeLimitToListStr = config.getProperty(CFG_USER_TYPE_LIMIT_TO_LIST, \"\");\n\t\t\tString[] userTypeLimitToList = null;\n\t\t\tuserTypes = new ArrayList();\n\t\t\t\n\t\t\tif(userTypeLimitToSelf){\n\t\t\t\tuserTypes.add(new SelectItem(M_uds.getCurrentUser().getType()));\t\t\t\t\n\t\t\t}else if(!\"\".equals(userTypeLimitToListStr)){\n\t\t\t\tuserTypeLimitToList = userTypeLimitToListStr.split(\",\");\n\t\t\t\tStringBuilder all = new StringBuilder();\n\t\t\t\tfor(int i=0; i<userTypeLimitToList.length; i++){\n\t\t\t\t\tuserTypes.add(new SelectItem(userTypeLimitToList[i]));\n\t\t\t\t\tall.append(\"'\");\n\t\t\t\t\tall.append(userTypeLimitToList[i]);\n\t\t\t\t\tall.append(\"'\");\n\t\t\t\t\tif(i<userTypeLimitToList.length-1)\n\t\t\t\t\t\tall.append(\",\");\n\t\t\t\t}\n\t\t\t\tuserTypes.add(0,new SelectItem(all.toString(),USER_TYPE_ALL));\n\t\t\t}else\n\t\t\t{\t\t\t\t\t\n\t\t\t\tuserTypes.add(new SelectItem(USER_TYPE_ALL));\n\t\t\t\tConnection c = null;\n\t\t\t\tStatement st = null;\n\t\t\t\tResultSet rs = null;\n\t\t\t\ttry{\n\t\t\t\t\tc = M_sql.borrowConnection();\n\t\t\t\t\tString vendor = M_sql.getVendor();\n\t\t\t\t\tString sql = null;\n\t\t\t\t\tif(vendor.equalsIgnoreCase(\"oracle\")){\n\t\t\t\t\t\tsql = \"select distinct TYPE from SAKAI_USER where TYPE is not null\";\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsql = \"select distinct TYPE from SAKAI_USER where TYPE!='' and TYPE is not null;\";\n\t\t\t\t\t}\n\t\t\t\t\tst = c.createStatement();\n\t\t\t\t\trs = st.executeQuery(sql);\n\t\t\t\t\twhile (rs.next()){\n\t\t\t\t\t\tString type = rs.getString(1);\n\t\t\t\t\t\tuserTypes.add(new SelectItem(type));\n\t\t\t\t\t}\n\t\t\t\t}catch(SQLException e){\n\t\t\t\t\tLOG.error(\"SQL error occurred while retrieving user types: \" + e.getMessage(), e);\n\t\t\t\t}finally{\n\t\t\t\t\ttry{\n\t\t\t\t\t\tif(rs != null)\n\t\t\t\t\t\t\trs.close();\n\t\t\t\t\t}finally{\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tif(st != null)\n\t\t\t\t\t\t\t\tst.close();\n\t\t\t\t\t\t}finally{\n\t\t\t\t\t\t\tif(c != null)\n\t\t\t\t\t\t\t\tM_sql.returnConnection(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tuserTypes.add(new SelectItem(USER_TYPE_NONE));\n\t\t\t}\n\t\t}\n\t\treturn userTypes;\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"private String getFullName(String fName, String lName){\n\t\tfName = fName == null ? \"\" : fName;\n\t\tlName = lName == null ? \"\" : lName;\n\t\tString firstName = fName.equals(\"\") ? \"\" : fName;\n\t\treturn lName.equals(\"\") ? firstName : (fName.equals(\"\") ? lName : lName+\", \"+fName);\n\t}","id":4274,"modified_method":"private String getFullName(String id, String firstName, String lastName){\n\t\tString fullName = \"\";\n\t\ttry{\n\t\t\tfullName = M_uds.getUser(id).getDisplayName();\n\t\t}catch(UserNotDefinedException e){\n\t\t\tString _firstName = firstName == null ? \"\" : firstName;\n\t\t\tString _lastName = lastName == null ? \"\" : lastName;\n\t\t\tfullName = \"\".equals(_lastName) ? _firstName : (\"\".equals(_firstName) ? _lastName : _lastName+\", \"+_firstName);\n\t\t}\n\t\treturn fullName;\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"private void doSearch() {\n\t\t/**\n\t\t * 1. Query internal users from SAKAI_USER (filter by type and search)\n\t\t * 2. Query external users from SAKAI_REALM_RL_GR\n\t\t * 3. Get info and filter external users from UserDirectoryProvider\n\t\t * 4. Sort resulting list\n\t\t * 5. Update pager\n\t\t*/\t\n\t\tLOG.debug(\"Refreshing query...\");\n\t\tselectedUserType = newUserType;\n\t\tselectedAuthority = newAuthority;\n\t\tsearchKeyword = searchKeyword.trim();\n\t\tboolean filtering = (selectedUserType != null && userTypes != null && !selectedUserType.equals(USER_TYPE_ALL));\n\t\tboolean searching = (searchKeyword != null && !searchKeyword.equals(\"\") && !searchKeyword.equals(msgs.getString(\"bar_input_search_inst\")) );\n\t\tuserRows = new ArrayList();\n\t\t\t\n\t\ttry{\n\t\t\tif(selectedAuthority.equals(USER_AUTH_ALL) || selectedAuthority.equals(USER_AUTH_INTERNAL)){\n\t\t\t\t// 1. Query internal users from SAKAI_USER\n\t\t\t\tString sql = \"SELECT EID,EMAIL,FIRST_NAME,LAST_NAME,TYPE, CREATEDON, \"\n\t\t\t\t\t        +\"MODIFIEDON, SAKAI_USER_ID_MAP.USER_ID as USER_ID FROM SAKAI_USER LEFT JOIN SAKAI_USER_ID_MAP \" \n\t\t\t\t\t        +\"ON SAKAI_USER.USER_ID=SAKAI_USER_ID_MAP.USER_ID\";\n\t\t\t\tif(searching || filtering){\n\t\t\t\t\tsql += \" WHERE \";\n\t\t\t\t\tif(searching)\n\t\t\t\t\t\tsql += \" (EID LIKE '%\"+searchKeyword+\"%' OR SAKAI_USER.USER_ID LIKE '%\"+searchKeyword+\"%' OR FIRST_NAME LIKE '%\"+searchKeyword+\"%' OR LAST_NAME LIKE '%\"+searchKeyword+\"%' OR EMAIL LIKE '%\"+searchKeyword+\"%') \";\n\t\t\t\t\tif(filtering && searching)\n\t\t\t\t\t\tsql += \" AND \";\n\t\t\t\t\tif(filtering){\n\t\t\t\t\t\tif(selectedUserType.equals(USER_TYPE_NONE))\n\t\t\t\t\t\t\tsql += \" (TYPE='' or TYPE IS NULL) \";\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif(selectedUserType.indexOf(\",\") == -1)\n\t\t\t\t\t\t\t\tsql += \" (TYPE='\"+selectedUserType+\"') \";\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tsql += \" (TYPE in (\"+selectedUserType+\") ) \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\t\n\t\t\t\t\n\t\t\t\ttry{\n\t\t\t\t\tConnection c = M_sql.borrowConnection();\n\t\t\t\t\tStatement st = c.createStatement();\n\t\t\t\t\tResultSet rs = st.executeQuery(sql);\n\t\t\t\t\twhile (rs.next()){\n\t\t\t\t\t\tString id = rs.getString(\"USER_ID\");\n\t\t\t\t\t\tString eid = rs.getString(\"EID\");\n\t\t\t\t\t\teid = eid == null? id : eid;\n\t\t\t\t\t\tString e = rs.getString(\"EMAIL\");\n\t\t\t\t\t\tString f = rs.getString(\"FIRST_NAME\");\n\t\t\t\t\t\tString l = rs.getString(\"LAST_NAME\");\n\t\t\t\t\t\tString t = rs.getString(\"TYPE\");\n\t\t\t\t\t\tTimestamp createdOn = rs.getTimestamp(\"CREATEDON\");\n\t\t\t\t\t\tString co = createdOn.toString();\n\t\t\t\t\t\tTimestamp modifiedOn = rs.getTimestamp(\"MODIFIEDON\");\n\t\t\t\t\t\tString mo = modifiedOn.toString();\n\t\t\t\t\t\t// For internal users, making the assumption that eid will do for displayId\n\t\t\t\t\t\tuserRows.add(new UserRow(id, eid, eid, getFullName(f, l), e, t, \n\t\t\t\t\t\t\t\t     USER_AUTH_INTERNAL, co, mo));\n\t\t\t\t\t}\n\t\t\t\t\trs.close();\n\t\t\t\t\tst.close();\n\t\t\t\t\tM_sql.returnConnection(c);\n\t\t\t\t}catch(SQLException e){\n\t\t\t\t\tLOG.error(\"SQL error occurred while retrieving list of internal users: \"+e.getMessage());\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\tLOG.warn(\"Exception occurred while querying internal users: \" + e.getMessage());\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\t\n\t\t// 2. Query external users from SAKAI_REALM_RL_GR\n\t\ttry{\n\t\t\tif(selectedAuthority.equals(USER_AUTH_ALL) || selectedAuthority.equals(USER_AUTH_EXTERNAL)){\n\t\t\t\tList eUsers = new ArrayList();\n\t\t\t\ttry{\n\t\t\t\t\tConnection c = M_sql.borrowConnection();\n\t\t\t\t\tString sqlE = \"SELECT DISTINCT USER_ID FROM SAKAI_REALM_RL_GR WHERE USER_ID NOT IN (SELECT USER_ID FROM SAKAI_USER)\";\n\t\t\t\t\tStatement st = c.createStatement();\n\t\t\t\t\tResultSet rs = st.executeQuery(sqlE);\n\t\t\t\t\twhile (rs.next()){\n\t\t\t\t\t\tString id = rs.getString(\"USER_ID\");\n\t\t\t\t\t\teUsers.add(id);\n\t\t\t\t\t}\n\t\t\t\t\trs.close();\n\t\t\t\t\tst.close();\n\t\t\t\t\tM_sql.returnConnection(c);\n\t\t\t\t}catch(SQLException e){\n\t\t\t\t\tLOG.error(\"SQL error occurred while retrieving list of external users: \"+e.getMessage());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 3. Get info and filter external users from UserDirectoryProvider\n\t\t\t\tString id;\n\t\t\t\tString eid;\n\t\t\t\tString dispId; \n\t\t\t\tString e;\n\t\t\t\tString n;\n\t\t\t\tString t;\n\t\t\t\tString regexp = null;\n\t\t\t\tString co;\n\t\t\t\tString mo;\n\t\t\t\tList pUsers = M_uds.getUsers(eUsers);\n\t\t\t\tIterator it = pUsers.iterator();\n\t\t\t\tif(searching)\n\t\t\t\t\tregexp = \".*\"+searchKeyword.toLowerCase()+\".*\";\n\t\t\t\twhile(it.hasNext()){\n\t\t\t\t\tUser u = (User) it.next();\n\t\t\t\t\tid = u.getId();\n\t\t\t\t\teid = u.getEid();\n\t\t\t\t\tdispId = u.getDisplayId();\n\t\t\t\t\te = u.getEmail();\n\t\t\t\t\tn = getFullName(u.getFirstName(), u.getLastName());\n\t\t\t\t\tt = u.getType();\n\t\t\t\t\tt = (t == null) ? \"\" : t;\n\t\t\t\t\tif(!t.equals(\"\")) addExtraUserType(t);\n\t\t\t\t\tco = (u.getCreatedTime() == null) ? \"\" : u.getCreatedTime().toStringLocalDate();\n                    mo = (u.getModifiedTime() == null) ? \"\" : u.getModifiedTime().toStringLocalDate();\n\t\t\t\t\tboolean add = false;\n\t\t\t\t\tif(filtering && !searching){\n\t\t\t\t\t\tif((!selectedUserType.equals(USER_TYPE_NONE) && t.equals(selectedUserType)) || (selectedUserType.equals(USER_TYPE_NONE) && t.equals(\"\"))) add = true;\n\t\t\t\t\t}else if(!filtering && searching){\n\t\t\t\t\t\tif(n.toLowerCase().matches(regexp) || e.toLowerCase().matches(regexp) || id.toLowerCase().matches(regexp)) add = true;\n\t\t\t\t\t}else if(filtering && searching){\n\t\t\t\t\t\tif((!selectedUserType.equals(USER_TYPE_NONE) && t.equals(selectedUserType)) || (selectedUserType.equals(USER_TYPE_NONE) && t.equals(\"\"))){\n\t\t\t\t\t\t\tif(n.toLowerCase().matches(regexp) || e.toLowerCase().matches(regexp) || id.toLowerCase().matches(regexp)) add = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tadd = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(add) userRows.add(new UserRow(id, eid, dispId, n, e, t, USER_AUTH_EXTERNAL, co, mo));\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\tLOG.warn(\"Exception occurred while querying external users: \" + e.getMessage());\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\t// 4. Update pager\n\t\tthis.totalItems = userRows.size();\n\t\tif(totalItems > 0) \n\t\t\trenderPager = true;\n\t\telse\n\t\t\trenderPager = false;\n//\t\tif(totalItems <= pageSize){\n//\t\t\trenderPager = false;\n//\t\t}\n//\t\telse renderPager = true;\n\t\tfirstItem = 0;\n\t}","id":4275,"modified_method":"private void doSearch() {\n\t\t/**\n\t\t * 1. Query internal users from SAKAI_USER (filter by type and search)\n\t\t * 2. Query external users from SAKAI_REALM_RL_GR\n\t\t * 3. Get info and filter external users from UserDirectoryProvider\n\t\t * 4. Sort resulting list\n\t\t * 5. Update pager\n\t\t*/\t\n\t\tLOG.debug(\"Refreshing query...\");\n\t\tselectedUserType = newUserType;\n\t\tselectedAuthority = newAuthority;\n\t\tsearchKeyword = searchKeyword.trim();\n\t\tboolean filtering = (selectedUserType != null && userTypes != null && !selectedUserType.equals(USER_TYPE_ALL));\n\t\tboolean searching = (searchKeyword != null && !searchKeyword.equals(\"\") && !searchKeyword.equals(msgs.getString(\"bar_input_search_inst\")) );\n\t\tuserRows = new ArrayList();\n\t\t\t\n\t\ttry{\n\t\t\tif(selectedAuthority.equals(USER_AUTH_ALL) || selectedAuthority.equals(USER_AUTH_INTERNAL)){\n\t\t\t\t// 1. Query internal users from SAKAI_USER\n\t\t\t\tString sql = \"SELECT EID,EMAIL,FIRST_NAME,LAST_NAME,TYPE, CREATEDON, \"\n\t\t\t\t\t        +\"MODIFIEDON, SAKAI_USER_ID_MAP.USER_ID as USER_ID FROM SAKAI_USER LEFT JOIN SAKAI_USER_ID_MAP \" \n\t\t\t\t\t        +\"ON SAKAI_USER.USER_ID=SAKAI_USER_ID_MAP.USER_ID\";\n\t\t\t\tif(searching || filtering){\n\t\t\t\t\tsql += \" WHERE \";\n\t\t\t\t\tif(searching)\n\t\t\t\t\t\tsql += \" (EID LIKE '%\"+searchKeyword+\"%' OR SAKAI_USER.USER_ID LIKE '%\"+searchKeyword+\"%' OR FIRST_NAME LIKE '%\"+searchKeyword+\"%' OR LAST_NAME LIKE '%\"+searchKeyword+\"%' OR EMAIL LIKE '%\"+searchKeyword+\"%') \";\n\t\t\t\t\tif(filtering && searching)\n\t\t\t\t\t\tsql += \" AND \";\n\t\t\t\t\tif(filtering){\n\t\t\t\t\t\tif(selectedUserType.equals(USER_TYPE_NONE))\n\t\t\t\t\t\t\tsql += \" (TYPE='' or TYPE IS NULL) \";\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif(selectedUserType.indexOf(\",\") == -1)\n\t\t\t\t\t\t\t\tsql += \" (TYPE='\"+selectedUserType+\"') \";\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tsql += \" (TYPE in (\"+selectedUserType+\") ) \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\t\n\n\t\t\t\tConnection c = null;\n\t\t\t\tStatement st = null;\n\t\t\t\tResultSet rs = null;\n\t\t\t\ttry{\n\t\t\t\t\tc = M_sql.borrowConnection();\n\t\t\t\t\tst = c.createStatement();\n\t\t\t\t\trs = st.executeQuery(sql);\n\t\t\t\t\twhile (rs.next()){\n\t\t\t\t\t\tString id = rs.getString(\"USER_ID\");\n\t\t\t\t\t\tString eid = rs.getString(\"EID\");\n\t\t\t\t\t\teid = eid == null? id : eid;\n\t\t\t\t\t\tString e = rs.getString(\"EMAIL\");\n\t\t\t\t\t\tString f = rs.getString(\"FIRST_NAME\");\n\t\t\t\t\t\tString l = rs.getString(\"LAST_NAME\");\n\t\t\t\t\t\tString t = rs.getString(\"TYPE\");\n\t\t\t\t\t\tTimestamp createdOn = rs.getTimestamp(\"CREATEDON\");\n\t\t\t\t\t\tString co = createdOn.toString();\n\t\t\t\t\t\tTimestamp modifiedOn = rs.getTimestamp(\"MODIFIEDON\");\n\t\t\t\t\t\tString mo = modifiedOn.toString();\n\t\t\t\t\t\t// For internal users, making the assumption that eid will do for displayId\n\t\t\t\t\t\tuserRows.add(new UserRow(id, eid, eid, getFullName(id, f, l), e, t, \n\t\t\t\t\t\t\t\t     USER_AUTH_INTERNAL, co, mo));\n\t\t\t\t\t}\n\t\t\t\t}catch(SQLException e){\n\t\t\t\t\tLOG.error(\"SQL error occurred while retrieving list of internal users: \"+e.getMessage());\n\t\t\t\t}finally{\n\t\t\t\t\ttry{\n\t\t\t\t\t\tif(rs != null)\n\t\t\t\t\t\t\trs.close();\n\t\t\t\t\t}finally{\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tif(st != null)\n\t\t\t\t\t\t\t\tst.close();\n\t\t\t\t\t\t}finally{\n\t\t\t\t\t\t\tif(c != null)\n\t\t\t\t\t\t\t\tM_sql.returnConnection(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\tLOG.warn(\"Exception occurred while querying internal users: \" + e.getMessage());\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\t\n\t\t// 2. Query external users from SAKAI_REALM_RL_GR\n\t\ttry{\n\t\t\tif(selectedAuthority.equals(USER_AUTH_ALL) || selectedAuthority.equals(USER_AUTH_EXTERNAL)){\n\t\t\t\tList eUsers = new ArrayList();\n\t\t\t\tConnection c = null;\n\t\t\t\tStatement st = null;\n\t\t\t\tResultSet rs = null;\n\t\t\t\ttry{\n\t\t\t\t\tc = M_sql.borrowConnection();\n\t\t\t\t\tString sqlE = \"SELECT DISTINCT USER_ID FROM SAKAI_REALM_RL_GR WHERE USER_ID NOT IN (SELECT USER_ID FROM SAKAI_USER)\";\n\t\t\t\t\tst = c.createStatement();\n\t\t\t\t\trs = st.executeQuery(sqlE);\n\t\t\t\t\twhile (rs.next()){\n\t\t\t\t\t\tString id = rs.getString(\"USER_ID\");\n\t\t\t\t\t\teUsers.add(id);\n\t\t\t\t\t}\n\t\t\t\t}catch(SQLException e){\n\t\t\t\t\tLOG.error(\"SQL error occurred while retrieving list of external users: \"+e.getMessage());\n\t\t\t\t}finally{\n\t\t\t\t\ttry{\n\t\t\t\t\t\tif(rs != null)\n\t\t\t\t\t\t\trs.close();\n\t\t\t\t\t}finally{\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tif(st != null)\n\t\t\t\t\t\t\t\tst.close();\n\t\t\t\t\t\t}finally{\n\t\t\t\t\t\t\tif(c != null)\n\t\t\t\t\t\t\t\tM_sql.returnConnection(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 3. Get info and filter external users from UserDirectoryProvider\n\t\t\t\tString id;\n\t\t\t\tString eid;\n\t\t\t\tString dispId; \n\t\t\t\tString e;\n\t\t\t\tString n;\n\t\t\t\tString t;\n\t\t\t\tString regexp = null;\n\t\t\t\tString co;\n\t\t\t\tString mo;\n\t\t\t\tList pUsers = M_uds.getUsers(eUsers);\n\t\t\t\tIterator it = pUsers.iterator();\n\t\t\t\tif(searching)\n\t\t\t\t\tregexp = \".*\"+searchKeyword.toLowerCase()+\".*\";\n\t\t\t\twhile(it.hasNext()){\n\t\t\t\t\tUser u = (User) it.next();\n\t\t\t\t\tid = u.getId();\n\t\t\t\t\teid = u.getEid();\n\t\t\t\t\tdispId = u.getDisplayId();\n\t\t\t\t\te = u.getEmail();\n\t\t\t\t\tn = getFullName(id, u.getFirstName(), u.getLastName());\n\t\t\t\t\tt = u.getType();\n\t\t\t\t\tt = (t == null) ? \"\" : t;\n\t\t\t\t\tif(!\"\".equals(t)) addExtraUserType(t);\n\t\t\t\t\tco = (u.getCreatedTime() == null) ? \"\" : u.getCreatedTime().toStringLocalDate();\n                    mo = (u.getModifiedTime() == null) ? \"\" : u.getModifiedTime().toStringLocalDate();\n\t\t\t\t\tboolean add = false;\n\t\t\t\t\tif(filtering && !searching){\n\t\t\t\t\t\tif((!selectedUserType.equals(USER_TYPE_NONE) && t.equals(selectedUserType)) || (selectedUserType.equals(USER_TYPE_NONE) && \"\".equals(t))) add = true;\n\t\t\t\t\t}else if(!filtering && searching){\n\t\t\t\t\t\tif(n.toLowerCase().matches(regexp) || e.toLowerCase().matches(regexp) || id.toLowerCase().matches(regexp)) add = true;\n\t\t\t\t\t}else if(filtering && searching){\n\t\t\t\t\t\tif((!selectedUserType.equals(USER_TYPE_NONE) && t.equals(selectedUserType)) || (selectedUserType.equals(USER_TYPE_NONE) && \"\".equals(t))){\n\t\t\t\t\t\t\tif(n.toLowerCase().matches(regexp) || e.toLowerCase().matches(regexp) || id.toLowerCase().matches(regexp)) add = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tadd = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(add) userRows.add(new UserRow(id, eid, dispId, n, e, t, USER_AUTH_EXTERNAL, co, mo));\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(RuntimeException e){\n\t\t\tLOG.warn(\"Exception occurred while querying external users: \" + e.getMessage(), e);\n\t\t}catch(SQLException e){\n\t\t\tLOG.warn(\"SQL error occurred while querying external users: \" + e.getMessage(), e);\n\t\t}\n\n\t\t// 4. Update pager\n\t\tthis.totalItems = userRows.size();\n\t\tif(totalItems > 0) \n\t\t\trenderPager = true;\n\t\telse\n\t\t\trenderPager = false;\n\t\tfirstItem = 0;\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void exportAsCsv(ActionEvent event) {\n\t\tString prefix = new String(\"UserListing\");\n\t\tExport.writeAsCsv(getAsCsv(userRows), prefix);\n\t\tFacesContext faces = FacesContext.getCurrentInstance();\n\t}","id":4276,"modified_method":"public void exportAsCsv(ActionEvent event) {\n\t\tExport.writeAsCsv(getAsCsv(userRows), \"UserListing\");\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public static final Comparator getUserRowComparator(final String fieldName, final boolean sortAscending, final Collator collator) {\n\t\treturn new Comparator() {\n\n\t\t\tpublic int compare(Object o1, Object o2) {\n\t\t\t\tif(o1 instanceof UserRow && o2 instanceof UserRow){\n\t\t\t\t\tUserRow r1 = (UserRow) o1;\n\t\t\t\t\tUserRow r2 = (UserRow) o2;\n\t\t\t\t\ttry{\n\t\t\t\t\t\tif(fieldName.equals(SORT_USER_NAME)){\n\t\t\t\t\t\t\tString s1 = r1.getUserName();\n\t\t\t\t\t\t\tString s2 = r2.getUserName();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_USER_ID)){\n\t\t\t\t\t\t\tString s1 = r1.getUserEID().toLowerCase();\n\t\t\t\t\t\t\tString s2 = r2.getUserEID();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_USER_EMAIL)){\n\t\t\t\t\t\t\tString s1 = r1.getUserEmail();\n\t\t\t\t\t\t\tString s2 = r2.getUserEmail();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_USER_TYPE)){\n\t\t\t\t\t\t\tString s1 = r1.getUserType();\n\t\t\t\t\t\t\tString s2 = r2.getUserType();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_USER_AUTHORITY)){\n\t\t\t\t\t\t\tString s1 = r1.getAuthority();\n\t\t\t\t\t\t\tString s2 = r2.getAuthority();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_USER_CREATED_ON)){\n\t\t\t\t\t\t\tString s1 = r1.getCreatedOn();\n\t\t\t\t\t\t\tString s2 = r2.getCreatedOn();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_USER_MODIFIED_ON)){\n\t\t\t\t\t\t\tString s1 = r1.getModifiedOn();\n\t\t\t\t\t\t\tString s2 = r2.getModifiedOn();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_INTERNAL_USER_ID)){\n\t\t\t\t\t\t\tString s1 = r1.getUserID().toLowerCase();\n\t\t\t\t\t\t\tString s2 = r2.getUserID();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}\n\t\t\t\t\t}catch(Exception e){\n\t\t\t\t\t\tLOG.warn(\"Error occurred while sorting by: \"+fieldName, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t};\n\t}","id":4277,"modified_method":"public static final Comparator getUserRowComparator(final String fieldName, final boolean sortAscending, final Collator collator) {\n\t\treturn new Comparator() {\n\n\t\t\tpublic int compare(Object o1, Object o2) {\n\t\t\t\tif(o1 instanceof UserRow && o2 instanceof UserRow){\n\t\t\t\t\tUserRow r1 = (UserRow) o1;\n\t\t\t\t\tUserRow r2 = (UserRow) o2;\n\t\t\t\t\ttry{\n\t\t\t\t\t\tif(fieldName.equals(SORT_USER_NAME)){\n\t\t\t\t\t\t\tString s1 = r1.getUserName();\n\t\t\t\t\t\t\tString s2 = r2.getUserName();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_USER_ID)){\n\t\t\t\t\t\t\tString s1 = r1.getUserEID();\n\t\t\t\t\t\t\tString s2 = r2.getUserEID();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_USER_EMAIL)){\n\t\t\t\t\t\t\tString s1 = r1.getUserEmail();\n\t\t\t\t\t\t\tString s2 = r2.getUserEmail();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_USER_TYPE)){\n\t\t\t\t\t\t\tString s1 = r1.getUserType();\n\t\t\t\t\t\t\tString s2 = r2.getUserType();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_USER_AUTHORITY)){\n\t\t\t\t\t\t\tString s1 = r1.getAuthority();\n\t\t\t\t\t\t\tString s2 = r2.getAuthority();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_USER_CREATED_ON)){\n\t\t\t\t\t\t\tString s1 = r1.getCreatedOn();\n\t\t\t\t\t\t\tString s2 = r2.getCreatedOn();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_USER_MODIFIED_ON)){\n\t\t\t\t\t\t\tString s1 = r1.getModifiedOn();\n\t\t\t\t\t\t\tString s2 = r2.getModifiedOn();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}else if(fieldName.equals(SORT_INTERNAL_USER_ID)){\n\t\t\t\t\t\t\tString s1 = r1.getUserID();\n\t\t\t\t\t\t\tString s2 = r2.getUserID();\n\t\t\t\t\t\t\tint res = collator.compare(s1!=null? s1.toLowerCase():\"\", s2!=null? s2.toLowerCase():\"\");\n\t\t\t\t\t\t\tif(sortAscending) return res;\n\t\t\t\t\t\t\telse return -res;\n\t\t\t\t\t\t}\n\t\t\t\t\t}catch(Exception e){\n\t\t\t\t\t\tLOG.warn(\"Error occurred while sorting by: \"+fieldName, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t};\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"private void addExtraUserType(String newType){\n\t\tboolean found = false;\n\t\tIterator it = userTypes.iterator();\n\t\twhile(it.hasNext()){\n\t\t\tif(((SelectItem) it.next()).getLabel().equals(newType))\n\t\t\t\tfound = true;\n\t\t}\n\t\tif(!found){\n\t\t\tif(userTypes == null)\n\t\t\t\tgetUserTypes();\n\t\t\tuserTypes.add(userTypes.size()-1,new SelectItem(newType));\n\t\t}\n\t}","id":4278,"modified_method":"private void addExtraUserType(String newType) throws SQLException{\n\t\tboolean found = false;\n\t\tif(userTypes == null)\n\t\t\tuserTypes = getUserTypes();\n\t\tIterator it = userTypes.iterator();\n\t\twhile(it.hasNext()){\n\t\t\tif(((SelectItem) it.next()).getLabel().equals(newType))\n\t\t\t\tfound = true;\n\t\t}\n\t\tif(!found){\n\t\t\tuserTypes.add(userTypes.size()-1,new SelectItem(newType));\n\t\t}\n\t}","commit_id":"0deea85804479ef8dca199d502d6f534e8419026","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void saveXWikiDoc(XWikiDocument doc, XWikiContext context, boolean bTransaction) throws XWikiException\n    {\n        MonitorPlugin monitor = Util.getMonitorPlugin(context);\n        try {\n            // Start monitoring timer\n            if (monitor != null) {\n                monitor.startTimer(\"hibernate\");\n            }\n            doc.setStore(this);\n            // Make sure the database name is stored\n            doc.getDocumentReference().setWikiReference(new WikiReference(context.getDatabase()));\n\n            if (bTransaction) {\n                checkHibernate(context);\n                SessionFactory sfactory = injectCustomMappingsInSessionFactory(doc, context);\n                bTransaction = beginTransaction(sfactory, context);\n            }\n            Session session = getSession(context);\n            session.setFlushMode(FlushMode.COMMIT);\n\n            // These informations will allow to not look for attachments and objects on loading\n            doc.setElement(XWikiDocument.HAS_ATTACHMENTS, (doc.getAttachmentList().size() != 0));\n            doc.setElement(XWikiDocument.HAS_OBJECTS, (doc.getXObjects().size() != 0));\n\n            // Let's update the class XML since this is the new way to store it\n            // TODO If all the properties are removed, the old xml stays?\n            BaseClass bclass = doc.getXClass();\n            if (bclass != null) {\n                if (bclass.getFieldList().size() > 0) {\n                    doc.setXClassXML(bclass.toXMLString());\n                } else {\n                    doc.setXClassXML(\"\");\n                }\n            }\n\n            if (doc.hasElement(XWikiDocument.HAS_ATTACHMENTS)) {\n                saveAttachmentList(doc, context, false);\n            }\n\n            // Handle the latest text file\n            if (doc.isContentDirty() || doc.isMetaDataDirty()) {\n                Date ndate = new Date();\n                doc.setDate(ndate);\n                if (doc.isContentDirty()) {\n                    doc.setContentUpdateDate(ndate);\n                    doc.setContentAuthor(doc.getAuthor());\n                }\n                doc.incrementVersion();\n                if (context.getWiki().hasVersioning(context)) {\n                    context.getWiki().getVersioningStore().updateXWikiDocArchive(doc, false, context);\n                }\n\n                doc.setContentDirty(false);\n                doc.setMetaDataDirty(false);\n            } else {\n                if (doc.getDocumentArchive() != null) {\n                    // Let's make sure we save the archive if we have one\n                    // This is especially needed if we load a document from XML\n                    if (context.getWiki().hasVersioning(context)) {\n                        context.getWiki().getVersioningStore().saveXWikiDocArchive(doc.getDocumentArchive(), false,\n                            context);\n                    }\n                } else {\n                    // Make sure the getArchive call has been made once\n                    // with a valid context\n                    try {\n                        if (context.getWiki().hasVersioning(context)) {\n                            doc.getDocumentArchive(context);\n                        }\n                    } catch (XWikiException e) {\n                        // this is a non critical error\n                    }\n                }\n            }\n\n            // Verify if the document already exists\n            Query query = session.createQuery(\n                \"select xwikidoc.id from XWikiDocument as xwikidoc where xwikidoc.id = :id\");\n            query.setLong(\"id\", doc.getId());\n            if (query.uniqueResult() == null) {\n                session.save(doc);\n            } else {\n                session.update(doc);\n                // TODO: this is slower!! How can it be improved?\n                // session.saveOrUpdate(doc);\n            }\n\n            // Remove objects planned for removal\n            if (doc.getXObjectsToRemove().size() > 0) {\n                for (BaseObject removedObject : doc.getXObjectsToRemove()) {\n                    deleteXWikiObject(removedObject, context, false);\n                }\n                doc.setXObjectsToRemove(new ArrayList<BaseObject>());\n            }\n\n            // We should only save the class if we are using the class table mode\n            if (bclass != null) {\n                bclass.setDocumentReference(doc.getDocumentReference());\n                if ((bclass.getFieldList().size() > 0) && (useClassesTable(true, context))) {\n                    saveXWikiClass(bclass, context, false);\n                }\n                // Store this XWikiClass in the context so that we can use it in case of recursive\n                // usage of classes\n                context.addBaseClass(bclass);\n                // update objects of the class\n                for (Iterator itf = bclass.getFieldList().iterator(); itf.hasNext();) {\n                    PropertyClass prop = (PropertyClass) itf.next();\n                    // migrate values of list properties\n                    if (prop instanceof StaticListClass || prop instanceof DBListClass) {\n                        ListClass lc = (ListClass) prop;\n                        String[] classes = {DBStringListProperty.class.getName(), StringListProperty.class.getName(),\n                            StringProperty.class.getName()}; // @see ListClass#newProperty()\n                        for (int i = 0; i < classes.length; i++) {\n                            String oldclass = classes[i];\n                            if (!oldclass.equals(lc.newProperty().getClass().getName())) {\n                                Query q = session.createQuery(\"select p from \" + oldclass + \" as p, BaseObject as o\"\n                                    + \" where o.className=? and p.id=o.id and p.name=?\").setString(0,\n                                    bclass.getName()).setString(1, lc.getName());\n                                for (Iterator it = q.list().iterator(); it.hasNext();) {\n                                    BaseProperty lp = (BaseProperty) it.next();\n                                    BaseProperty lp1 = lc.newProperty();\n                                    lp1.setId(lp.getId());\n                                    lp1.setName(lp.getName());\n                                    if (lc.isMultiSelect()) {\n                                        List tmp;\n                                        if (lp.getValue() instanceof List) {\n                                            tmp = (List) lp.getValue();\n                                        } else {\n                                            tmp = new ArrayList(1);\n                                            tmp.add(lp.getValue());\n                                        }\n                                        lp1.setValue(tmp);\n                                    } else {\n                                        Object tmp = lp.getValue();\n                                        if (tmp instanceof List && ((List) tmp).size() > 0) {\n                                            tmp = ((List) tmp).get(0);\n                                        }\n                                        lp1.setValue(tmp);\n                                    }\n                                    session.delete(lp);\n                                    session.save(lp1);\n                                }\n                            }\n                        }\n                    }\n                    // migrate values of list properties\n                    else if (prop instanceof NumberClass) {\n                        NumberClass nc = (NumberClass) prop;\n                        // @see NumberClass#newProperty()\n                        String[] classes =\n                            {IntegerProperty.class.getName(), LongProperty.class.getName(),\n                            FloatProperty.class.getName(), DoubleProperty.class.getName()};\n                        for (int i = 0; i < classes.length; i++) {\n                            String oldclass = classes[i];\n                            if (!oldclass.equals(nc.newProperty().getClass().getName())) {\n                                Query q = session.createQuery(\n                                    \"select p from \" + oldclass + \" as p, BaseObject as o\" + \" where o.className=?\"\n                                    + \"  and p.id=o.id and p.name=?\").setString(0, bclass.getName()).setString(\n                                    1, nc.getName());\n                                for (BaseProperty np : (List<BaseProperty>) q.list()) {\n                                    BaseProperty np1 = nc.newProperty();\n                                    np1.setId(np.getId());\n                                    np1.setName(np.getName());\n                                    if (nc.getNumberType().equals(\"integer\")) {\n                                        np1.setValue(Integer.valueOf(((Number) np.getValue()).intValue()));\n                                    } else if (nc.getNumberType().equals(\"float\")) {\n                                        np1.setValue(Float.valueOf(((Number) np.getValue()).floatValue()));\n                                    } else if (nc.getNumberType().equals(\"double\")) {\n                                        np1.setValue(Double.valueOf(((Number) np.getValue()).doubleValue()));\n                                    } else if (nc.getNumberType().equals(\"long\")) {\n                                        np1.setValue(Long.valueOf(((Number) np.getValue()).longValue()));\n                                    }\n                                    session.delete(np);\n                                    session.save(np1);\n                                }\n                            }\n                        }\n                    }\n                }\n            } else {\n                // TODO: Remove existing class\n            }\n\n            if (doc.hasElement(XWikiDocument.HAS_OBJECTS)) {\n                // TODO: Delete all objects for which we don't have a name in the Map\n                for (List<BaseObject> objects : doc.getXObjects().values()) {\n                    for (BaseObject obj : objects) {\n                        if (obj != null) {\n                            obj.setDocumentReference(doc.getDocumentReference());\n                            /* If the object doesn't have a GUID, create it before saving */\n                            if (StringUtils.isEmpty(obj.getGuid())) {\n                                obj.setGuid(UUID.randomUUID().toString());\n                            }\n                            saveXWikiCollection(obj, context, false);\n                        }\n                    }\n                }\n            }\n\n            if (context.getWiki().hasBacklinks(context)) {\n                saveLinks(doc, context, true);\n            }\n\n            if (bTransaction) {\n                endTransaction(context, true);\n            }\n\n            doc.setNew(false);\n\n            // We need to ensure that the saved document becomes the original document\n            doc.setOriginalDocument(doc.clone());\n\n        } catch (Exception e) {\n            Object[] args = {this.defaultEntityReferenceSerializer.serialize(doc.getDocumentReference())};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SAVING_DOC, \"Exception while saving document {0}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n\n            // End monitoring timer\n            if (monitor != null) {\n                monitor.endTimer(\"hibernate\");\n            }\n        }\n    }","id":4279,"modified_method":"public void saveXWikiDoc(XWikiDocument doc, XWikiContext context, boolean bTransaction) throws XWikiException\n    {\n        MonitorPlugin monitor = Util.getMonitorPlugin(context);\n        try {\n            // Start monitoring timer\n            if (monitor != null) {\n                monitor.startTimer(\"hibernate\");\n            }\n            doc.setStore(this);\n            // Make sure the database name is stored\n            doc.getDocumentReference().setWikiReference(new WikiReference(context.getDatabase()));\n\n            if (bTransaction) {\n                checkHibernate(context);\n                SessionFactory sfactory = injectCustomMappingsInSessionFactory(doc, context);\n                bTransaction = beginTransaction(sfactory, context);\n            }\n            Session session = getSession(context);\n            session.setFlushMode(FlushMode.COMMIT);\n\n            // These informations will allow to not look for attachments and objects on loading\n            doc.setElement(XWikiDocument.HAS_ATTACHMENTS, (doc.getAttachmentList().size() != 0));\n            doc.setElement(XWikiDocument.HAS_OBJECTS, (doc.getXObjects().size() != 0));\n\n            // Let's update the class XML since this is the new way to store it\n            // TODO If all the properties are removed, the old xml stays?\n            BaseClass bclass = doc.getXClass();\n            if (bclass != null) {\n                if (bclass.getFieldList().size() > 0) {\n                    doc.setXClassXML(bclass.toXMLString());\n                } else {\n                    doc.setXClassXML(\"\");\n                }\n            }\n\n            if (doc.hasElement(XWikiDocument.HAS_ATTACHMENTS)) {\n                saveAttachmentList(doc, context, false);\n            }\n\n            // Handle the latest text file\n            if (doc.isContentDirty() || doc.isMetaDataDirty()) {\n                Date ndate = new Date();\n                doc.setDate(ndate);\n                if (doc.isContentDirty()) {\n                    doc.setContentUpdateDate(ndate);\n                    doc.setContentAuthorReference(doc.getAuthorReference());\n                }\n                doc.incrementVersion();\n                if (context.getWiki().hasVersioning(context)) {\n                    context.getWiki().getVersioningStore().updateXWikiDocArchive(doc, false, context);\n                }\n\n                doc.setContentDirty(false);\n                doc.setMetaDataDirty(false);\n            } else {\n                if (doc.getDocumentArchive() != null) {\n                    // Let's make sure we save the archive if we have one\n                    // This is especially needed if we load a document from XML\n                    if (context.getWiki().hasVersioning(context)) {\n                        context.getWiki().getVersioningStore().saveXWikiDocArchive(doc.getDocumentArchive(), false,\n                            context);\n                    }\n                } else {\n                    // Make sure the getArchive call has been made once\n                    // with a valid context\n                    try {\n                        if (context.getWiki().hasVersioning(context)) {\n                            doc.getDocumentArchive(context);\n                        }\n                    } catch (XWikiException e) {\n                        // this is a non critical error\n                    }\n                }\n            }\n\n            // Verify if the document already exists\n            Query query = session.createQuery(\n                \"select xwikidoc.id from XWikiDocument as xwikidoc where xwikidoc.id = :id\");\n            query.setLong(\"id\", doc.getId());\n            if (query.uniqueResult() == null) {\n                session.save(doc);\n            } else {\n                session.update(doc);\n                // TODO: this is slower!! How can it be improved?\n                // session.saveOrUpdate(doc);\n            }\n\n            // Remove objects planned for removal\n            if (doc.getXObjectsToRemove().size() > 0) {\n                for (BaseObject removedObject : doc.getXObjectsToRemove()) {\n                    deleteXWikiObject(removedObject, context, false);\n                }\n                doc.setXObjectsToRemove(new ArrayList<BaseObject>());\n            }\n\n            // We should only save the class if we are using the class table mode\n            if (bclass != null) {\n                bclass.setDocumentReference(doc.getDocumentReference());\n                if ((bclass.getFieldList().size() > 0) && (useClassesTable(true, context))) {\n                    saveXWikiClass(bclass, context, false);\n                }\n                // Store this XWikiClass in the context so that we can use it in case of recursive\n                // usage of classes\n                context.addBaseClass(bclass);\n                // update objects of the class\n                for (Iterator itf = bclass.getFieldList().iterator(); itf.hasNext();) {\n                    PropertyClass prop = (PropertyClass) itf.next();\n                    // migrate values of list properties\n                    if (prop instanceof StaticListClass || prop instanceof DBListClass) {\n                        ListClass lc = (ListClass) prop;\n                        String[] classes = {DBStringListProperty.class.getName(), StringListProperty.class.getName(),\n                            StringProperty.class.getName()}; // @see ListClass#newProperty()\n                        for (int i = 0; i < classes.length; i++) {\n                            String oldclass = classes[i];\n                            if (!oldclass.equals(lc.newProperty().getClass().getName())) {\n                                Query q = session.createQuery(\"select p from \" + oldclass + \" as p, BaseObject as o\"\n                                    + \" where o.className=? and p.id=o.id and p.name=?\").setString(0,\n                                    bclass.getName()).setString(1, lc.getName());\n                                for (Iterator it = q.list().iterator(); it.hasNext();) {\n                                    BaseProperty lp = (BaseProperty) it.next();\n                                    BaseProperty lp1 = lc.newProperty();\n                                    lp1.setId(lp.getId());\n                                    lp1.setName(lp.getName());\n                                    if (lc.isMultiSelect()) {\n                                        List tmp;\n                                        if (lp.getValue() instanceof List) {\n                                            tmp = (List) lp.getValue();\n                                        } else {\n                                            tmp = new ArrayList<String>(1);\n                                            tmp.add(lp.getValue());\n                                        }\n                                        lp1.setValue(tmp);\n                                    } else {\n                                        Object tmp = lp.getValue();\n                                        if (tmp instanceof List && ((List) tmp).size() > 0) {\n                                            tmp = ((List) tmp).get(0);\n                                        }\n                                        lp1.setValue(tmp);\n                                    }\n                                    session.delete(lp);\n                                    session.save(lp1);\n                                }\n                            }\n                        }\n                    }\n                    // migrate values of list properties\n                    else if (prop instanceof NumberClass) {\n                        NumberClass nc = (NumberClass) prop;\n                        // @see NumberClass#newProperty()\n                        String[] classes =\n                            {IntegerProperty.class.getName(), LongProperty.class.getName(),\n                            FloatProperty.class.getName(), DoubleProperty.class.getName()};\n                        for (int i = 0; i < classes.length; i++) {\n                            String oldclass = classes[i];\n                            if (!oldclass.equals(nc.newProperty().getClass().getName())) {\n                                Query q = session.createQuery(\n                                    \"select p from \" + oldclass + \" as p, BaseObject as o\" + \" where o.className=?\"\n                                    + \"  and p.id=o.id and p.name=?\").setString(0, bclass.getName()).setString(\n                                    1, nc.getName());\n                                for (BaseProperty np : (List<BaseProperty>) q.list()) {\n                                    BaseProperty np1 = nc.newProperty();\n                                    np1.setId(np.getId());\n                                    np1.setName(np.getName());\n                                    if (nc.getNumberType().equals(\"integer\")) {\n                                        np1.setValue(Integer.valueOf(((Number) np.getValue()).intValue()));\n                                    } else if (nc.getNumberType().equals(\"float\")) {\n                                        np1.setValue(Float.valueOf(((Number) np.getValue()).floatValue()));\n                                    } else if (nc.getNumberType().equals(\"double\")) {\n                                        np1.setValue(Double.valueOf(((Number) np.getValue()).doubleValue()));\n                                    } else if (nc.getNumberType().equals(\"long\")) {\n                                        np1.setValue(Long.valueOf(((Number) np.getValue()).longValue()));\n                                    }\n                                    session.delete(np);\n                                    session.save(np1);\n                                }\n                            }\n                        }\n                    }\n                }\n            } else {\n                // TODO: Remove existing class\n            }\n\n            if (doc.hasElement(XWikiDocument.HAS_OBJECTS)) {\n                // TODO: Delete all objects for which we don't have a name in the Map\n                for (List<BaseObject> objects : doc.getXObjects().values()) {\n                    for (BaseObject obj : objects) {\n                        if (obj != null) {\n                            obj.setDocumentReference(doc.getDocumentReference());\n                            /* If the object doesn't have a GUID, create it before saving */\n                            if (StringUtils.isEmpty(obj.getGuid())) {\n                                obj.setGuid(UUID.randomUUID().toString());\n                            }\n                            saveXWikiCollection(obj, context, false);\n                        }\n                    }\n                }\n            }\n\n            if (context.getWiki().hasBacklinks(context)) {\n                saveLinks(doc, context, true);\n            }\n\n            if (bTransaction) {\n                endTransaction(context, true);\n            }\n\n            doc.setNew(false);\n\n            // We need to ensure that the saved document becomes the original document\n            doc.setOriginalDocument(doc.clone());\n\n        } catch (Exception e) {\n            Object[] args = {this.defaultEntityReferenceSerializer.serialize(doc.getDocumentReference())};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SAVING_DOC, \"Exception while saving document {0}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n\n            // End monitoring timer\n            if (monitor != null) {\n                monitor.endTimer(\"hibernate\");\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @since 2.2M1\n     */\n    private List<Object[]> searchGenericInternal(String sql, int nb, int start,\n        List parameterValues, XWikiContext context) throws XWikiException\n    {\n        boolean bTransaction = false;\n        MonitorPlugin monitor = Util.getMonitorPlugin(context);\n        try {\n            // Start monitoring timer\n            if (monitor != null) {\n                monitor.startTimer(\"hibernate\", sql);\n            }\n\n            checkHibernate(context);\n            bTransaction = beginTransaction(false, context);\n            Session session = getSession(context);\n            Query query = session.createQuery(filterSQL(sql));\n\n            injectParameterListToQuery(0, query, parameterValues);\n\n            if (start != 0) {\n                query.setFirstResult(start);\n            }\n            if (nb != 0) {\n                query.setMaxResults(nb);\n            }\n            Iterator it = query.list().iterator();\n            List<Object[]> list = new ArrayList<Object[]>();\n            while (it.hasNext()) {\n                list.add((Object[]) it.next());\n            }\n            return list;\n        } catch (Exception e) {\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SEARCH,\n                \"Exception while searching documents with SQL [{0}]\", e, new Object[] {sql});\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n\n            // End monitoring timer\n            if (monitor != null) {\n                monitor.endTimer(\"hibernate\");\n            }\n        }\n    }","id":4280,"modified_method":"/**\n     * @since 2.2M1\n     */\n    private List<Object[]> searchGenericInternal(String sql, int nb, int start, List< ? > parameterValues,\n        XWikiContext context) throws XWikiException\n    {\n        boolean bTransaction = false;\n        MonitorPlugin monitor = Util.getMonitorPlugin(context);\n        try {\n            // Start monitoring timer\n            if (monitor != null) {\n                monitor.startTimer(\"hibernate\", sql);\n            }\n\n            checkHibernate(context);\n            bTransaction = beginTransaction(false, context);\n            Session session = getSession(context);\n            Query query = session.createQuery(filterSQL(sql));\n\n            injectParameterListToQuery(0, query, parameterValues);\n\n            if (start != 0) {\n                query.setFirstResult(start);\n            }\n            if (nb != 0) {\n                query.setMaxResults(nb);\n            }\n            Iterator it = query.list().iterator();\n            List<Object[]> list = new ArrayList<Object[]>();\n            while (it.hasNext()) {\n                list.add((Object[]) it.next());\n            }\n            return list;\n        } catch (Exception e) {\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SEARCH,\n                \"Exception while searching documents with SQL [{0}]\", e, new Object[] {sql});\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n\n            // End monitoring timer\n            if (monitor != null) {\n                monitor.endTimer(\"hibernate\");\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @since 2.2M2\n     */\n    public List<DocumentReference> loadBacklinks(DocumentReference documentReference, boolean bTransaction,\n        XWikiContext context) throws XWikiException\n    {\n        List<DocumentReference> backlinkReferences = new ArrayList<DocumentReference>();\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(false, context);\n            }\n            Session session = getSession(context);\n\n            // the select clause is compulsory to reach the fullName i.e. the page pointed\n            Query query = session.createQuery(\"select backlink.fullName from XWikiLink as backlink where \"\n                + \"backlink.id.link = :backlink\");\n            query.setString(\"backlink\", this.localEntityReferenceSerializer.serialize(documentReference));\n\n            List<String> backlinkNames = query.list();\n\n            // Convert strings into references\n            for (String backlinkName : backlinkNames) {\n                backlinkReferences.add(this.currentMixedDocumentReferenceResolver.resolve(backlinkName));\n            }\n\n            if (bTransaction) {\n                endTransaction(context, false, false);\n            }\n        } catch (Exception e) {\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_LOADING_BACKLINKS, \"Exception while loading backlinks\", e);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n        return backlinkReferences;\n    }","id":4281,"modified_method":"/**\n     * @since 2.2M2\n     */\n    public List<DocumentReference> loadBacklinks(DocumentReference documentReference, boolean bTransaction,\n        XWikiContext context) throws XWikiException\n    {\n        List<DocumentReference> backlinkReferences = new ArrayList<DocumentReference>();\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(false, context);\n            }\n            Session session = getSession(context);\n\n            // the select clause is compulsory to reach the fullName i.e. the page pointed\n            Query query = session.createQuery(\"select backlink.fullName from XWikiLink as backlink where \"\n                + \"backlink.id.link = :backlink\");\n            query.setString(\"backlink\", this.localEntityReferenceSerializer.serialize(documentReference));\n\n            @SuppressWarnings(\"unchecked\")\n            List<String> backlinkNames = query.list();\n\n            // Convert strings into references\n            for (String backlinkName : backlinkNames) {\n                backlinkReferences.add(this.currentMixedDocumentReferenceResolver.resolve(backlinkName));\n            }\n\n            if (bTransaction) {\n                endTransaction(context, false, false);\n            }\n        } catch (Exception e) {\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_LOADING_BACKLINKS, \"Exception while loading backlinks\", e);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n        return backlinkReferences;\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Add values into named query.\n     * \n     * @param parameterId the parameter id to increment.\n     * @param query the query to fill.\n     * @param parameterValues the values to add to query.\n     * @return the id of the next parameter to add.\n     */\n    private int injectParameterListToQuery(int parameterId, Query query, Collection parameterValues)\n    {\n        int index = parameterId;\n\n        if (parameterValues != null) {\n            for (Iterator valueIt = parameterValues.iterator(); valueIt.hasNext(); ++index) {\n                injectParameterToQuery(index, query, valueIt.next());\n            }\n        }\n\n        return index;\n    }","id":4282,"modified_method":"/**\n     * Add values into named query.\n     * \n     * @param parameterId the parameter id to increment.\n     * @param query the query to fill.\n     * @param parameterValues the values to add to query.\n     * @return the id of the next parameter to add.\n     */\n    private int injectParameterListToQuery(int parameterId, Query query, Collection< ? > parameterValues)\n    {\n        int index = parameterId;\n\n        if (parameterValues != null) {\n            for (Iterator< ? > valueIt = parameterValues.iterator(); valueIt.hasNext(); ++index) {\n                injectParameterToQuery(index, query, valueIt.next());\n            }\n        }\n\n        return index;\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void saveLinks(XWikiDocument doc, XWikiContext context, boolean bTransaction) throws XWikiException\n    {\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(context);\n            }\n            Session session = getSession(context);\n\n            // need to delete existing links before saving the page's one\n            deleteLinks(doc.getId(), context, bTransaction);\n\n            // necessary to blank links from doc\n            context.remove(\"links\");\n\n            if (doc.getSyntaxId().equals(\"xwiki/1.0\")) {\n                saveLinks10(doc, context, session);\n            } else {\n                // When not in 1.0 content get WikiLinks directly from XDOM\n                Set<XWikiLink> links = doc.getUniqueWikiLinkedPages(context);\n                for (XWikiLink wikiLink : links) {\n                    session.save(wikiLink);\n                }\n            }\n        } catch (Exception e) {\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SAVING_LINKS, \"Exception while saving links\", e);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","id":4283,"modified_method":"public void saveLinks(XWikiDocument doc, XWikiContext context, boolean bTransaction) throws XWikiException\n    {\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(context);\n            }\n            Session session = getSession(context);\n\n            // need to delete existing links before saving the page's one\n            deleteLinks(doc.getId(), context, bTransaction);\n\n            // necessary to blank links from doc\n            context.remove(\"links\");\n\n            if (doc.getSyntax() == Syntax.XWIKI_1_0) {\n                saveLinks10(doc, context, session);\n            } else {\n                // When not in 1.0 content get WikiLinks directly from XDOM\n                Set<XWikiLink> links = doc.getUniqueWikiLinkedPages(context);\n                for (XWikiLink wikiLink : links) {\n                    session.save(wikiLink);\n                }\n            }\n        } catch (Exception e) {\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SAVING_LINKS, \"Exception while saving links\", e);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @since 2.2M1\n     */\n    private List<DocumentReference> searchDocumentReferencesInternal(String sql, int nb, int start,\n        List parameterValues, XWikiContext context) throws XWikiException\n    {\n        List<DocumentReference> documentReferences = new ArrayList<DocumentReference>();\n        for (Object[] result : searchGenericInternal(sql, nb, start, parameterValues, context)) {\n            // Construct a reference, using the current wiki as the wiki reference name. This is because the wiki\n            // name is not stored in the database for document references.\n            DocumentReference reference = new DocumentReference((String) result[1],\n                new SpaceReference((String) result[0], new WikiReference(context.getDatabase())));\n            documentReferences.add(reference);\n        }\n        return documentReferences;\n    }","id":4284,"modified_method":"/**\n     * @since 2.2M1\n     */\n    private List<DocumentReference> searchDocumentReferencesInternal(String sql, int nb, int start,\n        List< ? > parameterValues, XWikiContext context) throws XWikiException\n    {\n        List<DocumentReference> documentReferences = new ArrayList<DocumentReference>();\n        for (Object[] result : searchGenericInternal(sql, nb, start, parameterValues, context)) {\n            // Construct a reference, using the current wiki as the wiki reference name. This is because the wiki\n            // name is not stored in the database for document references.\n            DocumentReference reference = new DocumentReference((String) result[1],\n                new SpaceReference((String) result[0], new WikiReference(context.getDatabase())));\n            documentReferences.add(reference);\n        }\n        return documentReferences;\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void deleteXWikiDoc(XWikiDocument doc, XWikiContext context) throws XWikiException\n    {\n        boolean bTransaction = true;\n        MonitorPlugin monitor = Util.getMonitorPlugin(context);\n        try {\n            // Start monitoring timer\n            if (monitor != null) {\n                monitor.startTimer(\"hibernate\");\n            }\n            checkHibernate(context);\n            SessionFactory sfactory = injectCustomMappingsInSessionFactory(doc, context);\n            bTransaction = bTransaction && beginTransaction(sfactory, context);\n            Session session = getSession(context);\n            session.setFlushMode(FlushMode.COMMIT);\n\n            if (doc.getStore() == null) {\n                Object[] args = {doc.getFullName()};\n                throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                    XWikiException.ERROR_XWIKI_STORE_HIBERNATE_CANNOT_DELETE_UNLOADED_DOC,\n                    \"Impossible to delete document {0} if it is not loaded\", null, args);\n            }\n\n            // Let's delete any attachment this document might have\n            List attachlist = doc.getAttachmentList();\n            for (int i = 0; i < attachlist.size(); i++) {\n                XWikiAttachment attachment = (XWikiAttachment) attachlist.get(i);\n                context.getWiki().getAttachmentStore().deleteXWikiAttachment(attachment, false, context, false);\n            }\n\n            // deleting XWikiLinks\n            if (context.getWiki().hasBacklinks(context)) {\n                deleteLinks(doc.getId(), context, true);\n            }\n\n            BaseClass bclass = doc.getXClass();\n            if ((bclass.getFieldList().size() > 0) && (useClassesTable(true, context))) {\n                deleteXWikiClass(bclass, context, false);\n            }\n\n            // Find the list of classes for which we have an object\n            // Remove properties planned for removal\n            if (doc.getObjectsToRemove().size() > 0) {\n                for (int i = 0; i < doc.getObjectsToRemove().size(); i++) {\n                    BaseObject bobj = doc.getObjectsToRemove().get(i);\n                    if (bobj != null) {\n                        deleteXWikiObject(bobj, context, false);\n                    }\n                }\n                doc.setObjectsToRemove(new ArrayList<BaseObject>());\n            }\n            for (List<BaseObject> objects : doc.getXObjects().values()) {\n                for (BaseObject obj : objects) {\n                    if (obj != null) {\n                        deleteXWikiObject(obj, context, false);\n                    }\n                }\n            }\n            context.getWiki().getVersioningStore().deleteArchive(doc, false, context);\n\n            session.delete(doc);\n\n            // We need to ensure that the deleted document becomes the original document\n            doc.setOriginalDocument(doc.clone());\n\n            if (bTransaction) {\n                endTransaction(context, true);\n            }\n        } catch (Exception e) {\n            Object[] args = {doc.getFullName()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_DELETING_DOC, \"Exception while deleting document {0}\", e,\n                args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n\n            // End monitoring timer\n            if (monitor != null) {\n                monitor.endTimer(\"hibernate\");\n            }\n        }\n    }","id":4285,"modified_method":"public void deleteXWikiDoc(XWikiDocument doc, XWikiContext context) throws XWikiException\n    {\n        boolean bTransaction = true;\n        MonitorPlugin monitor = Util.getMonitorPlugin(context);\n        try {\n            // Start monitoring timer\n            if (monitor != null) {\n                monitor.startTimer(\"hibernate\");\n            }\n            checkHibernate(context);\n            SessionFactory sfactory = injectCustomMappingsInSessionFactory(doc, context);\n            bTransaction = bTransaction && beginTransaction(sfactory, context);\n            Session session = getSession(context);\n            session.setFlushMode(FlushMode.COMMIT);\n\n            if (doc.getStore() == null) {\n                Object[] args = {doc.getDocumentReference()};\n                throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                    XWikiException.ERROR_XWIKI_STORE_HIBERNATE_CANNOT_DELETE_UNLOADED_DOC,\n                    \"Impossible to delete document {0} if it is not loaded\", null, args);\n            }\n\n            // Let's delete any attachment this document might have\n            for (XWikiAttachment attachment : doc.getAttachmentList()) {\n                context.getWiki().getAttachmentStore().deleteXWikiAttachment(attachment, false, context, false);\n            }\n\n            // deleting XWikiLinks\n            if (context.getWiki().hasBacklinks(context)) {\n                deleteLinks(doc.getId(), context, true);\n            }\n\n            BaseClass bclass = doc.getXClass();\n            if ((bclass.getFieldList().size() > 0) && (useClassesTable(true, context))) {\n                deleteXWikiClass(bclass, context, false);\n            }\n\n            // Find the list of classes for which we have an object\n            // Remove properties planned for removal\n            if (doc.getXObjectsToRemove().size() > 0) {\n                for (BaseObject bobj : doc.getXObjectsToRemove()) {\n                    if (bobj != null) {\n                        deleteXWikiObject(bobj, context, false);\n                    }\n                }\n                doc.setXObjectsToRemove(new ArrayList<BaseObject>());\n            }\n            for (List<BaseObject> objects : doc.getXObjects().values()) {\n                for (BaseObject obj : objects) {\n                    if (obj != null) {\n                        deleteXWikiObject(obj, context, false);\n                    }\n                }\n            }\n            context.getWiki().getVersioningStore().deleteArchive(doc, false, context);\n\n            session.delete(doc);\n\n            // We need to ensure that the deleted document becomes the original document\n            doc.setOriginalDocument(doc.clone());\n\n            if (bTransaction) {\n                endTransaction(context, true);\n            }\n        } catch (Exception e) {\n            Object[] args = {doc.getDocumentReference()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_DELETING_DOC, \"Exception while deleting document {0}\", e,\n                args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n\n            // End monitoring timer\n            if (monitor != null) {\n                monitor.endTimer(\"hibernate\");\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public XWikiDocument loadXWikiDoc(XWikiDocument doc, XWikiContext context) throws XWikiException\n    {\n        // To change body of implemented methods use Options | File Templates.\n        boolean bTransaction = true;\n        MonitorPlugin monitor = Util.getMonitorPlugin(context);\n        try {\n            // Start monitoring timer\n            if (monitor != null) {\n                monitor.startTimer(\"hibernate\");\n            }\n            doc.setStore(this);\n            checkHibernate(context);\n\n            SessionFactory sfactory = injectCustomMappingsInSessionFactory(doc, context);\n            bTransaction = bTransaction && beginTransaction(sfactory, false, context);\n            Session session = getSession(context);\n            session.setFlushMode(FlushMode.MANUAL);\n\n            try {\n                session.load(doc, new Long(doc.getId()));\n                doc.setDatabase(context.getDatabase());\n                doc.setNew(false);\n                doc.setMostRecent(true);\n                // Fix for XWIKI-1651\n                doc.setDate(new Date(doc.getDate().getTime()));\n                doc.setCreationDate(new Date(doc.getCreationDate().getTime()));\n                doc.setContentUpdateDate(new Date(doc.getContentUpdateDate().getTime()));\n            } catch (ObjectNotFoundException e) { // No document\n                doc.setNew(true);\n                return doc;\n            }\n\n            // Loading the attachment list\n            if (doc.hasElement(XWikiDocument.HAS_ATTACHMENTS)) {\n                loadAttachmentList(doc, context, false);\n            }\n\n            // TODO: handle the case where there are no xWikiClass and xWikiObject in the Database\n            BaseClass bclass = new BaseClass();\n            String cxml = doc.getXClassXML();\n            if (cxml != null) {\n                bclass.fromXML(cxml);\n                bclass.setDocumentReference(doc.getDocumentReference());\n                doc.setXClass(bclass);\n            } else if (useClassesTable(false, context)) {\n                bclass.setDocumentReference(doc.getDocumentReference());\n                bclass = loadXWikiClass(bclass, context, false);\n                doc.setXClass(bclass);\n            }\n\n            // Store this XWikiClass in the context so that we can use it in case of recursive usage\n            // of classes\n            context.addBaseClass(bclass);\n\n            if (doc.hasElement(XWikiDocument.HAS_OBJECTS)) {\n                Query query = session.createQuery(\"from BaseObject as bobject where bobject.name = :name order by \"\n                    + \"bobject.number\");\n                query.setText(\"name\", doc.getFullName());\n                Iterator it = query.list().iterator();\n\n                EntityReference localGroupEntityReference = new EntityReference(\"XWikiGroups\", EntityType.DOCUMENT,\n                    new EntityReference(\"XWiki\", EntityType.SPACE));\n                DocumentReference groupsDocumentReference = new DocumentReference(context.getDatabase(),\n                    localGroupEntityReference.getParent().getName(), localGroupEntityReference.getName());\n\n                boolean hasGroups = false;\n                while (it.hasNext()) {\n                    BaseObject object = (BaseObject) it.next();\n                    DocumentReference classReference = object.getXClassReference();\n\n                    if (classReference == null) {\n                        continue;\n                    }\n\n                    // It seems to search before is case insensitive. And this would break the loading if we get an\n                    // object which doesn't really belong to this document\n                    if (!object.getDocumentReference().equals(doc.getDocumentReference())) {\n                        continue;\n                    }\n\n                    BaseObject newobject;\n                    if (classReference.equals(doc.getDocumentReference())) {\n                        newobject = bclass.newCustomClassInstance(context);\n                    } else {\n                        newobject = BaseClass.newCustomClassInstance(classReference, context);\n                    }\n                    if (newobject != null) {\n                        newobject.setId(object.getId());\n                        newobject.setClassName(object.getClassName());\n                        newobject.setDocumentReference(object.getDocumentReference());\n                        newobject.setNumber(object.getNumber());\n                        newobject.setGuid(object.getGuid());\n                        object = newobject;\n                    }\n\n                    if (classReference.equals(groupsDocumentReference)) {\n                        // Groups objects are handled differently.\n                        hasGroups = true;\n                    } else {\n                        loadXWikiCollection(object, doc, context, false, true);\n                    }\n                    doc.setXObject(object.getNumber(), object);\n                }\n\n                // AFAICT this was added as an emergency patch because loading of objects has proven\n                // too slow and the objects which cause the most overhead are the XWikiGroups objects\n                // as each group object (each group member) would otherwise cost 2 database queries.\n                // This will do every group member in a single query.\n                if (hasGroups) {\n                    Query query2 = session.createQuery(\"select bobject.number, prop.value from StringProperty as prop, \"\n                        + \"BaseObject as bobject where bobject.name = :name and bobject.className='XWiki.XWikiGroups' \"\n                        + \"and bobject.id=prop.id.id and prop.id.name='member' order by bobject.number\");\n                    query2.setText(\"name\", doc.getFullName());\n                    Iterator it2 = query2.list().iterator();\n                    while (it2.hasNext()) {\n                        Object[] result = (Object[]) it2.next();\n                        Integer number = (Integer) result[0];\n                        String member = (String) result[1];\n                        BaseObject obj = BaseClass.newCustomClassInstance(groupsDocumentReference, context);\n                        obj.setDocumentReference(doc.getDocumentReference());\n                        obj.setXClassReference(localGroupEntityReference);\n                        obj.setNumber(number.intValue());\n                        obj.setStringValue(\"member\", member);\n                        doc.setXObject(obj.getNumber(), obj);\n                    }\n                }\n            }\n\n            // We need to ensure that the loaded document becomes the original document\n            doc.setOriginalDocument(doc.clone());\n\n            if (bTransaction) {\n                endTransaction(context, false, false);\n            }\n        } catch (Exception e) {\n            Object[] args = {doc.getFullName()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_READING_DOC, \"Exception while reading document {0}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n\n            // End monitoring timer\n            if (monitor != null) {\n                monitor.endTimer(\"hibernate\");\n            }\n        }\n\n        log.debug(\"Loaded XWikiDocument: \" + doc.getFullName());\n\n        return doc;\n    }","id":4286,"modified_method":"public XWikiDocument loadXWikiDoc(XWikiDocument doc, XWikiContext context) throws XWikiException\n    {\n        // To change body of implemented methods use Options | File Templates.\n        boolean bTransaction = true;\n        MonitorPlugin monitor = Util.getMonitorPlugin(context);\n        try {\n            // Start monitoring timer\n            if (monitor != null) {\n                monitor.startTimer(\"hibernate\");\n            }\n            doc.setStore(this);\n            checkHibernate(context);\n\n            SessionFactory sfactory = injectCustomMappingsInSessionFactory(doc, context);\n            bTransaction = bTransaction && beginTransaction(sfactory, false, context);\n            Session session = getSession(context);\n            session.setFlushMode(FlushMode.MANUAL);\n\n            try {\n                session.load(doc, new Long(doc.getId()));\n                doc.setDatabase(context.getDatabase());\n                doc.setNew(false);\n                doc.setMostRecent(true);\n                // Fix for XWIKI-1651\n                doc.setDate(new Date(doc.getDate().getTime()));\n                doc.setCreationDate(new Date(doc.getCreationDate().getTime()));\n                doc.setContentUpdateDate(new Date(doc.getContentUpdateDate().getTime()));\n            } catch (ObjectNotFoundException e) { // No document\n                doc.setNew(true);\n                return doc;\n            }\n\n            // Loading the attachment list\n            if (doc.hasElement(XWikiDocument.HAS_ATTACHMENTS)) {\n                loadAttachmentList(doc, context, false);\n            }\n\n            // TODO: handle the case where there are no xWikiClass and xWikiObject in the Database\n            BaseClass bclass = new BaseClass();\n            String cxml = doc.getXClassXML();\n            if (cxml != null) {\n                bclass.fromXML(cxml);\n                bclass.setDocumentReference(doc.getDocumentReference());\n                doc.setXClass(bclass);\n            } else if (useClassesTable(false, context)) {\n                bclass.setDocumentReference(doc.getDocumentReference());\n                bclass = loadXWikiClass(bclass, context, false);\n                doc.setXClass(bclass);\n            }\n\n            // Store this XWikiClass in the context so that we can use it in case of recursive usage\n            // of classes\n            context.addBaseClass(bclass);\n\n            if (doc.hasElement(XWikiDocument.HAS_OBJECTS)) {\n                Query query = session.createQuery(\"from BaseObject as bobject where bobject.name = :name order by \"\n                    + \"bobject.number\");\n                query.setText(\"name\", doc.getFullName());\n                @SuppressWarnings(\"unchecked\")\n                Iterator<BaseObject> it = query.list().iterator();\n\n                EntityReference localGroupEntityReference = new EntityReference(\"XWikiGroups\", EntityType.DOCUMENT,\n                    new EntityReference(\"XWiki\", EntityType.SPACE));\n                DocumentReference groupsDocumentReference = new DocumentReference(context.getDatabase(),\n                    localGroupEntityReference.getParent().getName(), localGroupEntityReference.getName());\n\n                boolean hasGroups = false;\n                while (it.hasNext()) {\n                    BaseObject object = it.next();\n                    DocumentReference classReference = object.getXClassReference();\n\n                    if (classReference == null) {\n                        continue;\n                    }\n\n                    // It seems to search before is case insensitive. And this would break the loading if we get an\n                    // object which doesn't really belong to this document\n                    if (!object.getDocumentReference().equals(doc.getDocumentReference())) {\n                        continue;\n                    }\n\n                    BaseObject newobject;\n                    if (classReference.equals(doc.getDocumentReference())) {\n                        newobject = bclass.newCustomClassInstance(context);\n                    } else {\n                        newobject = BaseClass.newCustomClassInstance(classReference, context);\n                    }\n                    if (newobject != null) {\n                        newobject.setId(object.getId());\n                        newobject.setXClassReference(object.getXClassReference());\n                        newobject.setDocumentReference(object.getDocumentReference());\n                        newobject.setNumber(object.getNumber());\n                        newobject.setGuid(object.getGuid());\n                        object = newobject;\n                    }\n\n                    if (classReference.equals(groupsDocumentReference)) {\n                        // Groups objects are handled differently.\n                        hasGroups = true;\n                    } else {\n                        loadXWikiCollection(object, doc, context, false, true);\n                    }\n                    doc.setXObject(object.getNumber(), object);\n                }\n\n                // AFAICT this was added as an emergency patch because loading of objects has proven\n                // too slow and the objects which cause the most overhead are the XWikiGroups objects\n                // as each group object (each group member) would otherwise cost 2 database queries.\n                // This will do every group member in a single query.\n                if (hasGroups) {\n                    Query query2 = session.createQuery(\"select bobject.number, prop.value from StringProperty as prop,\"\n                        + \"BaseObject as bobject where bobject.name = :name and bobject.className='XWiki.XWikiGroups' \"\n                        + \"and bobject.id=prop.id.id and prop.id.name='member' order by bobject.number\");\n                    query2.setText(\"name\", doc.getFullName());\n                    @SuppressWarnings(\"unchecked\")\n                    Iterator<Object[]> it2 = query2.list().iterator();\n                    while (it2.hasNext()) {\n                        Object[] result = it2.next();\n                        Integer number = (Integer) result[0];\n                        String member = (String) result[1];\n                        BaseObject obj = BaseClass.newCustomClassInstance(groupsDocumentReference, context);\n                        obj.setDocumentReference(doc.getDocumentReference());\n                        obj.setXClassReference(localGroupEntityReference);\n                        obj.setNumber(number.intValue());\n                        obj.setStringValue(\"member\", member);\n                        doc.setXObject(obj.getNumber(), obj);\n                    }\n                }\n            }\n\n            // We need to ensure that the loaded document becomes the original document\n            doc.setOriginalDocument(doc.clone());\n\n            if (bTransaction) {\n                endTransaction(context, false, false);\n            }\n        } catch (Exception e) {\n            Object[] args = {doc.getDocumentReference()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_READING_DOC, \"Exception while reading document {0}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n\n            // End monitoring timer\n            if (monitor != null) {\n                monitor.endTimer(\"hibernate\");\n            }\n        }\n\n        log.debug(\"Loaded XWikiDocument: \" + doc.getDocumentReference());\n\n        return doc;\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.store.XWikiStoreInterface#search(java.lang.String, int, int, com.xpn.xwiki.XWikiContext)\n     */\n    public <T> List<T> search(String sql, int nb, int start, XWikiContext context) throws XWikiException\n    {\n        return search(sql, nb, start, (List) null, context);\n    }","id":4287,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.store.XWikiStoreInterface#search(java.lang.String, int, int, com.xpn.xwiki.XWikiContext)\n     */\n    public <T> List<T> search(String sql, int nb, int start, XWikiContext context) throws XWikiException\n    {\n        return search(sql, nb, start, (List< ? >) null, context);\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public SessionFactory injectCustomMappingsInSessionFactory(XWikiContext context) throws XWikiException\n    {\n        // If we haven't turned of dynamic custom mappings we should not inject them\n        if (context.getWiki().hasDynamicCustomMappings() == false) {\n            return getSessionFactory();\n        }\n\n        List list;\n        if (useClassesTable(true, context)) {\n            list =\n                searchDocuments(\n                    \", BaseClass as bclass where bclass.name=doc.fullName and bclass.customMapping is not null\", true,\n                    false, false, 0, 0, context);\n        }\n        list = searchDocuments(\"\", true, false, false, 0, 0, context);\n        boolean result = false;\n\n        for (int i = 0; i < list.size(); i++) {\n            XWikiDocument doc = (XWikiDocument) list.get(i);\n            if (doc.getXClass().getFieldList().size() > 0) {\n                result |= injectCustomMapping(doc.getXClass(), context);\n            }\n        }\n\n        if (result == false) {\n            return getSessionFactory();\n        }\n\n        Configuration config = getConfiguration();\n        return injectInSessionFactory(config);\n    }","id":4288,"modified_method":"public SessionFactory injectCustomMappingsInSessionFactory(XWikiContext context) throws XWikiException\n    {\n        // If we haven't turned of dynamic custom mappings we should not inject them\n        if (context.getWiki().hasDynamicCustomMappings() == false) {\n            return getSessionFactory();\n        }\n\n        List<XWikiDocument> list;\n        if (useClassesTable(true, context)) {\n            list = searchDocuments(\n                \", BaseClass as bclass where bclass.name=doc.fullName and bclass.customMapping is not null\", true,\n                false, false, 0, 0, context);\n        }\n        list = searchDocuments(\"\", true, false, false, 0, 0, context);\n        boolean result = false;\n\n        for (XWikiDocument doc : list) {\n            if (doc.getXClass().getFieldList().size() > 0) {\n                result |= injectCustomMapping(doc.getXClass(), context);\n            }\n        }\n\n        if (result == false) {\n            return getSessionFactory();\n        }\n\n        Configuration config = getConfiguration();\n        return injectInSessionFactory(config);\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.store.XWikiStoreInterface#search(java.lang.String, int, int, java.lang.Object[][],\n     *      java.util.List, com.xpn.xwiki.XWikiContext)\n     */\n    public <T> List<T> search(String sql, int nb, int start, Object[][] whereParams, List< ? > parameterValues,\n        XWikiContext context)\n        throws XWikiException\n    {\n        boolean bTransaction = true;\n\n        if (sql == null) {\n            return null;\n        }\n\n        MonitorPlugin monitor = Util.getMonitorPlugin(context);\n        try {\n            // Start monitoring timer\n            if (monitor != null) {\n                monitor.startTimer(\"hibernate\");\n            }\n            checkHibernate(context);\n            bTransaction = beginTransaction(false, context);\n            Session session = getSession(context);\n\n            if (whereParams != null) {\n                sql += generateWhereStatement(whereParams);\n            }\n\n            Query query = session.createQuery(filterSQL(sql));\n\n            // Add values for provided HQL request containing \"?\" characters where to insert real\n            // values.\n            int parameterId = injectParameterListToQuery(0, query, parameterValues);\n\n            if (whereParams != null) {\n                for (int i = 0; i < whereParams.length; i++) {\n                    query.setString(parameterId++, (String) whereParams[i][1]);\n                }\n            }\n\n            if (start != 0) {\n                query.setFirstResult(start);\n            }\n            if (nb != 0) {\n                query.setMaxResults(nb);\n            }\n            Iterator it = query.list().iterator();\n            List list = new ArrayList();\n            while (it.hasNext()) {\n                list.add(it.next());\n            }\n            return list;\n        } catch (Exception e) {\n            Object[] args = {sql};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SEARCH, \"Exception while searching documents with sql {0}\",\n                e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n\n            // End monitoring timer\n            if (monitor != null) {\n                monitor.endTimer(\"hibernate\");\n            }\n        }\n    }","id":4289,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.store.XWikiStoreInterface#search(java.lang.String, int, int, java.lang.Object[][],\n     *      java.util.List, com.xpn.xwiki.XWikiContext)\n     */\n    public <T> List<T> search(String sql, int nb, int start, Object[][] whereParams, List< ? > parameterValues,\n        XWikiContext context)\n        throws XWikiException\n    {\n        boolean bTransaction = true;\n\n        if (sql == null) {\n            return null;\n        }\n\n        MonitorPlugin monitor = Util.getMonitorPlugin(context);\n        try {\n            // Start monitoring timer\n            if (monitor != null) {\n                monitor.startTimer(\"hibernate\");\n            }\n            checkHibernate(context);\n            bTransaction = beginTransaction(false, context);\n            Session session = getSession(context);\n\n            if (whereParams != null) {\n                sql += generateWhereStatement(whereParams);\n            }\n\n            Query query = session.createQuery(filterSQL(sql));\n\n            // Add values for provided HQL request containing \"?\" characters where to insert real\n            // values.\n            int parameterId = injectParameterListToQuery(0, query, parameterValues);\n\n            if (whereParams != null) {\n                for (int i = 0; i < whereParams.length; i++) {\n                    query.setString(parameterId++, (String) whereParams[i][1]);\n                }\n            }\n\n            if (start != 0) {\n                query.setFirstResult(start);\n            }\n            if (nb != 0) {\n                query.setMaxResults(nb);\n            }\n            List<T> list = new ArrayList<T>();\n            list.addAll(query.list());\n            return list;\n        } catch (Exception e) {\n            Object[] args = {sql};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SEARCH, \"Exception while searching documents with sql {0}\",\n                e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n\n            // End monitoring timer\n            if (monitor != null) {\n                monitor.endTimer(\"hibernate\");\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private BaseClass loadXWikiClass(BaseClass bclass, XWikiContext context, boolean bTransaction) throws XWikiException\n    {\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(false, context);\n            }\n            Session session = getSession(context);\n\n            try {\n                session.load(bclass, Integer.valueOf(bclass.getId()));\n\n                Query query =\n                    session\n                        .createQuery(\"select prop.name, prop.classType from PropertyClass as prop where prop.id.id = :id order by prop.number asc\");\n                query.setInteger(\"id\", bclass.getId());\n                Iterator it = query.list().iterator();\n                while (it.hasNext()) {\n                    Object obj = it.next();\n                    Object[] result = (Object[]) obj;\n                    String name = (String) result[0];\n                    String classType = (String) result[1];\n                    PropertyClass property = (PropertyClass) Class.forName(classType).newInstance();\n                    property.setName(name);\n                    property.setObject(bclass);\n                    session.load(property, property);\n                    bclass.addField(name, property);\n                }\n            } catch (ObjectNotFoundException e) {\n            }\n\n            if (bTransaction) {\n                endTransaction(context, false, false);\n            }\n\n            if ((bclass != null) && (bclass.hasExternalCustomMapping())) {\n                setSessionFactory(injectCustomMappingsInSessionFactory(bclass, context));\n            }\n\n            return bclass;\n        } catch (Exception e) {\n            Object[] args = {bclass.getName()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_LOADING_CLASS, \"Exception while loading class {0}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","id":4290,"modified_method":"private BaseClass loadXWikiClass(BaseClass bclass, XWikiContext context, boolean bTransaction)\n        throws XWikiException\n    {\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(false, context);\n            }\n            Session session = getSession(context);\n\n            try {\n                session.load(bclass, Integer.valueOf(bclass.getId()));\n\n                Query query =\n                    session\n                        .createQuery(\"select prop.name, prop.classType from PropertyClass as prop where prop.id.id = :id order by prop.number asc\");\n                query.setInteger(\"id\", bclass.getId());\n                for (Object[] result : (List<Object[]>) query.list()) {\n                    String name = (String) result[0];\n                    String classType = (String) result[1];\n                    PropertyClass property = (PropertyClass) Class.forName(classType).newInstance();\n                    property.setName(name);\n                    property.setObject(bclass);\n                    session.load(property, property);\n                    bclass.addField(name, property);\n                }\n            } catch (ObjectNotFoundException e) {\n            }\n\n            if (bTransaction) {\n                endTransaction(context, false, false);\n            }\n\n            if ((bclass != null) && (bclass.hasExternalCustomMapping())) {\n                setSessionFactory(injectCustomMappingsInSessionFactory(bclass, context));\n            }\n\n            return bclass;\n        } catch (Exception e) {\n            Object[] args = {bclass.getDocumentReference()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_LOADING_CLASS, \"Exception while loading class {0}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public List getCustomMappingPropertyList(BaseClass bclass)\n    {\n        List list = new ArrayList();\n        Configuration hibconfig;\n        if (bclass.hasExternalCustomMapping()) {\n            hibconfig = makeMapping(bclass.getName(), bclass.getCustomMapping());\n        } else {\n            hibconfig = getConfiguration();\n        }\n        PersistentClass mapping = hibconfig.getClassMapping(bclass.getName());\n        if (mapping == null) {\n            return null;\n        }\n\n        Iterator it = mapping.getPropertyIterator();\n        while (it.hasNext()) {\n            Property hibprop = (Property) it.next();\n            String propname = hibprop.getName();\n            list.add(propname);\n        }\n        return list;\n    }","id":4291,"modified_method":"public List<String> getCustomMappingPropertyList(BaseClass bclass)\n    {\n        List<String> list = new ArrayList<String>();\n        Configuration hibconfig;\n        if (bclass.hasExternalCustomMapping()) {\n            hibconfig = makeMapping(bclass.getName(), bclass.getCustomMapping());\n        } else {\n            hibconfig = getConfiguration();\n        }\n        PersistentClass mapping = hibconfig.getClassMapping(bclass.getName());\n        if (mapping == null) {\n            return null;\n        }\n\n        Iterator it = mapping.getPropertyIterator();\n        while (it.hasNext()) {\n            Property hibprop = (Property) it.next();\n            String propname = hibprop.getName();\n            list.add(propname);\n        }\n        return list;\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void saveXWikiClass(BaseClass bclass, XWikiContext context, boolean bTransaction) throws XWikiException\n    {\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(context);\n            }\n            Session session = getSession(context);\n\n            // Verify if the property already exists\n            Query query = session.createQuery(\"select obj.id from BaseClass as obj where obj.id = :id\");\n            query.setInteger(\"id\", bclass.getId());\n            if (query.uniqueResult() == null) {\n                session.save(bclass);\n            } else {\n                session.update(bclass);\n            }\n\n            // Remove all existing properties\n            if (bclass.getFieldsToRemove().size() > 0) {\n                for (int i = 0; i < bclass.getFieldsToRemove().size(); i++) {\n                    session.delete(bclass.getFieldsToRemove().get(i));\n                }\n                bclass.setFieldsToRemove(new ArrayList());\n            }\n\n            Collection coll = bclass.getFieldList();\n            Iterator it = coll.iterator();\n            while (it.hasNext()) {\n                PropertyClass prop = (PropertyClass) it.next();\n                String pname = prop.getName();\n                if (pname != null && !pname.trim().equals(\"\")) {\n                    saveXWikiClassProperty(prop, context, false);\n                }\n            }\n\n            if (bTransaction) {\n                endTransaction(context, true);\n            }\n        } catch (Exception e) {\n            Object[] args = {bclass.getName()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SAVING_CLASS, \"Exception while saving class {0}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","id":4292,"modified_method":"private void saveXWikiClass(BaseClass bclass, XWikiContext context, boolean bTransaction) throws XWikiException\n    {\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(context);\n            }\n            Session session = getSession(context);\n\n            // Verify if the property already exists\n            Query query = session.createQuery(\"select obj.id from BaseClass as obj where obj.id = :id\");\n            query.setInteger(\"id\", bclass.getId());\n            if (query.uniqueResult() == null) {\n                session.save(bclass);\n            } else {\n                session.update(bclass);\n            }\n\n            // Remove all existing properties\n            if (bclass.getFieldsToRemove().size() > 0) {\n                for (int i = 0; i < bclass.getFieldsToRemove().size(); i++) {\n                    session.delete(bclass.getFieldsToRemove().get(i));\n                }\n                bclass.setFieldsToRemove(new ArrayList());\n            }\n\n            for (PropertyClass prop : (Collection<PropertyClass>) bclass.getFieldList()) {\n                String pname = prop.getName();\n                if (pname != null && !pname.trim().equals(\"\")) {\n                    saveXWikiClassProperty(prop, context, false);\n                }\n            }\n\n            if (bTransaction) {\n                endTransaction(context, true);\n            }\n        } catch (Exception e) {\n            Object[] args = {bclass.getDocumentReference()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SAVING_CLASS, \"Exception while saving class {0}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void loadAttachmentList(XWikiDocument doc, XWikiContext context, boolean bTransaction) throws XWikiException\n    {\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(false, context);\n            }\n            Session session = getSession(context);\n\n            Query query = session.createQuery(\"from XWikiAttachment as attach where attach.docId=:docid\");\n            query.setLong(\"docid\", doc.getId());\n            List<XWikiAttachment> list = query.list();\n            for (XWikiAttachment attachment : list) {\n                attachment.setDoc(doc);\n            }\n            doc.setAttachmentList(list);\n            if (bTransaction) {\n                endTransaction(context, false, false);\n                bTransaction = false;\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n            Object[] args = {doc.getFullName()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SEARCHING_ATTACHMENT,\n                \"Exception while searching attachments for documents {0}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","id":4293,"modified_method":"private void loadAttachmentList(XWikiDocument doc, XWikiContext context, boolean bTransaction)\n        throws XWikiException\n    {\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(false, context);\n            }\n            Session session = getSession(context);\n\n            Query query = session.createQuery(\"from XWikiAttachment as attach where attach.docId=:docid\");\n            query.setLong(\"docid\", doc.getId());\n            @SuppressWarnings(\"unchecked\")\n            List<XWikiAttachment> list = query.list();\n            for (XWikiAttachment attachment : list) {\n                attachment.setDoc(doc);\n            }\n            doc.setAttachmentList(list);\n            if (bTransaction) {\n                endTransaction(context, false, false);\n                bTransaction = false;\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n            Object[] args = {doc.getDocumentReference()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SEARCHING_ATTACHMENT,\n                \"Exception while searching attachments for documents {0}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void saveAttachmentList(XWikiDocument doc, XWikiContext context, boolean bTransaction) throws XWikiException\n    {\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(context);\n            }\n            getSession(context);\n\n            List<XWikiAttachment> list = doc.getAttachmentList();\n            for (XWikiAttachment attachment : list) {\n                attachment.setDoc(doc);\n                saveAttachment(attachment, false, context, false);\n            }\n\n            if (bTransaction) {\n                // The session is closed here, too.\n                endTransaction(context, true);\n            }\n        } catch (Exception e) {\n            Object[] args = {doc.getFullName()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SAVING_ATTACHMENT_LIST,\n                \"Exception while saving attachments attachment list of document {0}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","id":4294,"modified_method":"private void saveAttachmentList(XWikiDocument doc, XWikiContext context, boolean bTransaction)\n        throws XWikiException\n    {\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(context);\n            }\n            getSession(context);\n\n            List<XWikiAttachment> list = doc.getAttachmentList();\n            for (XWikiAttachment attachment : list) {\n                attachment.setDoc(doc);\n                saveAttachment(attachment, false, context, false);\n            }\n\n            if (bTransaction) {\n                // The session is closed here, too.\n                endTransaction(context, true);\n            }\n        } catch (Exception e) {\n            Object[] args = {doc.getDocumentReference()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SAVING_ATTACHMENT_LIST,\n                \"Exception while saving attachments attachment list of document {0}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public List<String> getClassList(XWikiContext context) throws XWikiException\n    {\n        boolean bTransaction = true;\n        try {\n            checkHibernate(context);\n            bTransaction = beginTransaction(false, context);\n            Session session = getSession(context);\n\n            Query query =\n                session.createQuery(\"select doc.fullName from XWikiDocument as doc \"\n                + \"where (doc.xWikiClassXML is not null and doc.xWikiClassXML like '<%')\");\n            Iterator<String> it = query.list().iterator();\n            List<String> list = new ArrayList<String>();\n            while (it.hasNext()) {\n                String name = it.next();\n                list.add(name);\n            }\n\n            if (useClassesTable(false, context)) {\n                query = session.createQuery(\"select bclass.name from BaseClass as bclass\");\n                it = query.list().iterator();\n                while (it.hasNext()) {\n                    String name = it.next();\n                    if (!list.contains(name)) {\n                        list.add(name);\n                    }\n                }\n            }\n            if (bTransaction) {\n                endTransaction(context, false, false);\n            }\n            return list;\n        } catch (Exception e) {\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SEARCH, \"Exception while searching class list\", e);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","id":4295,"modified_method":"public List<String> getClassList(XWikiContext context) throws XWikiException\n    {\n        boolean bTransaction = true;\n        try {\n            checkHibernate(context);\n            bTransaction = beginTransaction(false, context);\n            Session session = getSession(context);\n\n            Query query =\n                session.createQuery(\"select doc.fullName from XWikiDocument as doc \"\n                + \"where (doc.xWikiClassXML is not null and doc.xWikiClassXML like '<%')\");\n            List<String> list = new ArrayList<String>();\n            list.addAll(query.list());\n\n            if (useClassesTable(false, context)) {\n                query = session.createQuery(\"select bclass.name from BaseClass as bclass\");\n                for (String name : (List<String>) query.list()) {\n                    if (!list.contains(name)) {\n                        list.add(name);\n                    }\n                }\n            }\n            if (bTransaction) {\n                endTransaction(context, false, false);\n            }\n            return list;\n        } catch (Exception e) {\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SEARCH, \"Exception while searching class list\", e);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @deprecated This is internal to XWikiHibernateStore and may be removed in the future.\n     */\n    @Deprecated\n    public void saveXWikiCollection(BaseCollection object, XWikiContext context, boolean bTransaction)\n        throws XWikiException\n    {\n        try {\n            if (object == null) {\n                return;\n            }\n            // We need a slightly different behavior here\n            boolean stats = (object instanceof XWikiStats);\n\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(context);\n            }\n            Session session = getSession(context);\n\n            // Verify if the property already exists\n            Query query;\n            if (stats) {\n                query =\n                    session.createQuery(\"select obj.id from \" + object.getClass().getName()\n                    + \" as obj where obj.id = :id\");\n            } else {\n                query = session.createQuery(\"select obj.id from BaseObject as obj where obj.id = :id\");\n            }\n            query.setInteger(\"id\", object.getId());\n            if (query.uniqueResult() == null) {\n                if (stats) {\n                    session.save(object);\n                } else {\n                    session.save(\"com.xpn.xwiki.objects.BaseObject\", object);\n                }\n            } else {\n                if (stats) {\n                    session.update(object);\n                } else {\n                    session.update(\"com.xpn.xwiki.objects.BaseObject\", object);\n                }\n            }\n            /*\n             * if (stats) session.saveOrUpdate(object); else\n             * session.saveOrUpdate((String)\"com.xpn.xwiki.objects.BaseObject\", (Object)object);\n             */\n            BaseClass bclass = object.getXClass(context);\n            List<String> handledProps = new ArrayList<String>();\n            if ((bclass != null) && (bclass.hasCustomMapping()) && context.getWiki().hasCustomMappings()) {\n                // save object using the custom mapping\n                Map objmap = object.getCustomMappingMap();\n                handledProps = bclass.getCustomMappingPropertyList(context);\n                Session dynamicSession = session.getSession(EntityMode.MAP);\n                query = session.createQuery(\"select obj.id from \" + bclass.getName() + \" as obj where obj.id = :id\");\n                query.setInteger(\"id\", object.getId());\n                if (query.uniqueResult() == null) {\n                    dynamicSession.save(bclass.getName(), objmap);\n                } else {\n                    dynamicSession.update(bclass.getName(), objmap);\n                }\n\n                // dynamicSession.saveOrUpdate((String) bclass.getName(), objmap);\n            }\n\n            if (object.getXClassReference() != null) {\n                // Remove all existing properties\n                if (object.getFieldsToRemove().size() > 0) {\n                    for (int i = 0; i < object.getFieldsToRemove().size(); i++) {\n                        BaseProperty prop = (BaseProperty) object.getFieldsToRemove().get(i);\n                        if (!handledProps.contains(prop.getName())) {\n                            session.delete(prop);\n                        }\n                    }\n                    object.setFieldsToRemove(new ArrayList<BaseProperty>());\n                }\n\n                Iterator it = object.getPropertyList().iterator();\n                while (it.hasNext()) {\n                    String key = (String) it.next();\n                    BaseProperty prop = (BaseProperty) object.getField(key);\n                    if (!prop.getName().equals(key)) {\n                        Object[] args = {key, object.getName()};\n                        throw new XWikiException(XWikiException.MODULE_XWIKI_CLASSES,\n                            XWikiException.ERROR_XWIKI_CLASSES_FIELD_INVALID,\n                            \"Field {0} in object {1} has an invalid name\", null, args);\n                    }\n\n                    String pname = prop.getName();\n                    if (pname != null && !pname.trim().equals(\"\") && !handledProps.contains(pname)) {\n                        saveXWikiProperty(prop, context, false);\n                    }\n                }\n            }\n\n            if (bTransaction) {\n                endTransaction(context, true);\n            }\n        } catch (XWikiException xe) {\n            throw xe;\n        } catch (Exception e) {\n            Object[] args = {object.getName()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SAVING_OBJECT, \"Exception while saving object {0}\", e, args);\n\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, true);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","id":4296,"modified_method":"/**\n     * @deprecated This is internal to XWikiHibernateStore and may be removed in the future.\n     */\n    @Deprecated\n    public void saveXWikiCollection(BaseCollection object, XWikiContext context, boolean bTransaction)\n        throws XWikiException\n    {\n        try {\n            if (object == null) {\n                return;\n            }\n            // We need a slightly different behavior here\n            boolean stats = (object instanceof XWikiStats);\n\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(context);\n            }\n            Session session = getSession(context);\n\n            // Verify if the property already exists\n            Query query;\n            if (stats) {\n                query =\n                    session.createQuery(\"select obj.id from \" + object.getClass().getName()\n                    + \" as obj where obj.id = :id\");\n            } else {\n                query = session.createQuery(\"select obj.id from BaseObject as obj where obj.id = :id\");\n            }\n            query.setInteger(\"id\", object.getId());\n            if (query.uniqueResult() == null) {\n                if (stats) {\n                    session.save(object);\n                } else {\n                    session.save(\"com.xpn.xwiki.objects.BaseObject\", object);\n                }\n            } else {\n                if (stats) {\n                    session.update(object);\n                } else {\n                    session.update(\"com.xpn.xwiki.objects.BaseObject\", object);\n                }\n            }\n            /*\n             * if (stats) session.saveOrUpdate(object); else\n             * session.saveOrUpdate((String)\"com.xpn.xwiki.objects.BaseObject\", (Object)object);\n             */\n            BaseClass bclass = object.getXClass(context);\n            List<String> handledProps = new ArrayList<String>();\n            if ((bclass != null) && (bclass.hasCustomMapping()) && context.getWiki().hasCustomMappings()) {\n                // save object using the custom mapping\n                Map<String, Object> objmap = object.getCustomMappingMap();\n                handledProps = bclass.getCustomMappingPropertyList(context);\n                Session dynamicSession = session.getSession(EntityMode.MAP);\n                query = session.createQuery(\"select obj.id from \" + bclass.getName() + \" as obj where obj.id = :id\");\n                query.setInteger(\"id\", object.getId());\n                if (query.uniqueResult() == null) {\n                    dynamicSession.save(bclass.getName(), objmap);\n                } else {\n                    dynamicSession.update(bclass.getName(), objmap);\n                }\n\n                // dynamicSession.saveOrUpdate((String) bclass.getName(), objmap);\n            }\n\n            if (object.getXClassReference() != null) {\n                // Remove all existing properties\n                if (object.getFieldsToRemove().size() > 0) {\n                    for (int i = 0; i < object.getFieldsToRemove().size(); i++) {\n                        BaseProperty prop = (BaseProperty) object.getFieldsToRemove().get(i);\n                        if (!handledProps.contains(prop.getName())) {\n                            session.delete(prop);\n                        }\n                    }\n                    object.setFieldsToRemove(new ArrayList<BaseProperty>());\n                }\n\n                Iterator<String> it = object.getPropertyList().iterator();\n                while (it.hasNext()) {\n                    String key = it.next();\n                    BaseProperty prop = (BaseProperty) object.getField(key);\n                    if (!prop.getName().equals(key)) {\n                        Object[] args = {key, object.getName()};\n                        throw new XWikiException(XWikiException.MODULE_XWIKI_CLASSES,\n                            XWikiException.ERROR_XWIKI_CLASSES_FIELD_INVALID,\n                            \"Field {0} in object {1} has an invalid name\", null, args);\n                    }\n\n                    String pname = prop.getName();\n                    if (pname != null && !pname.trim().equals(\"\") && !handledProps.contains(pname)) {\n                        saveXWikiProperty(prop, context, false);\n                    }\n                }\n            }\n\n            if (bTransaction) {\n                endTransaction(context, true);\n            }\n        } catch (XWikiException xe) {\n            throw xe;\n        } catch (Exception e) {\n            Object[] args = {object.getName()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SAVING_OBJECT, \"Exception while saving object {0}\", e, args);\n\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, true);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void saveAttachment(XWikiAttachment attachment, boolean parentUpdate, XWikiContext context,\n        boolean bTransaction) throws XWikiException\n    {\n        try {\n            // The version number must be bumped and the date must be set before the attachment\n            // metadata is saved. Changing the version and date after calling\n            // session.save()/session.update() \"worked\" (the altered version was what Hibernate saved)\n            // but only if everything is done in the same transaction and as far as I know it\n            // depended on undefined behavior.\n            if (attachment.isContentDirty()) {\n                attachment.updateContentArchive(context);\n            }\n\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(context);\n            }\n            Session session = getSession(context);\n\n            Query query = session.createQuery(\"select attach.id from XWikiAttachment as attach where attach.id = :id\");\n            query.setLong(\"id\", attachment.getId());\n            if (query.uniqueResult() == null) {\n                session.save(attachment);\n            } else {\n                session.update(attachment);\n            }\n\n            // If the attachment content is \"dirty\" (out of sync with the database)\n            if (attachment.isContentDirty()) {\n                // We must save the content of the attachment.\n                // updateParent and bTransaction must be false because the content should be saved in the same\n                // transation as the attachment and if the parent doc needs to be updated, this function will do it.\n                context.getWiki().getAttachmentStore().saveAttachmentContent(attachment, false, context, false);\n            }\n\n            if (parentUpdate) {\n                context.getWiki().getStore().saveXWikiDoc(attachment.getDoc(), context, false);\n            }\n\n            if (bTransaction) {\n                endTransaction(context, true);\n            }\n\n            // Mark the attachment content and metadata as not dirty.\n            // Ideally this would only happen if the transaction is committed successfully but since an unsuccessful\n            // transaction will most likely be accompanied by an exception, the cache will not have a chance to save\n            // the copy of the document with erronious information. If this is not set here, the cache will return\n            // a copy of the attachment which claims to be dirty although it isn't.\n            attachment.setMetaDataDirty(false);\n            if (attachment.isContentDirty()) {\n                attachment.getAttachment_content().setContentDirty(false);\n            }\n\n        } catch (Exception e) {\n            Object[] args = {attachment.getFilename(), attachment.getDoc().getFullName()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SAVING_ATTACHMENT,\n                \"Exception while saving attachments for attachment {0} of document {1}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","id":4297,"modified_method":"private void saveAttachment(XWikiAttachment attachment, boolean parentUpdate, XWikiContext context,\n        boolean bTransaction) throws XWikiException\n    {\n        try {\n            // The version number must be bumped and the date must be set before the attachment\n            // metadata is saved. Changing the version and date after calling\n            // session.save()/session.update() \"worked\" (the altered version was what Hibernate saved)\n            // but only if everything is done in the same transaction and as far as I know it\n            // depended on undefined behavior.\n            if (attachment.isContentDirty()) {\n                attachment.updateContentArchive(context);\n            }\n\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(context);\n            }\n            Session session = getSession(context);\n\n            Query query = session.createQuery(\"select attach.id from XWikiAttachment as attach where attach.id = :id\");\n            query.setLong(\"id\", attachment.getId());\n            if (query.uniqueResult() == null) {\n                session.save(attachment);\n            } else {\n                session.update(attachment);\n            }\n\n            // If the attachment content is \"dirty\" (out of sync with the database)\n            if (attachment.isContentDirty()) {\n                // We must save the content of the attachment.\n                // updateParent and bTransaction must be false because the content should be saved in the same\n                // transation as the attachment and if the parent doc needs to be updated, this function will do it.\n                context.getWiki().getAttachmentStore().saveAttachmentContent(attachment, false, context, false);\n            }\n\n            if (parentUpdate) {\n                context.getWiki().getStore().saveXWikiDoc(attachment.getDoc(), context, false);\n            }\n\n            if (bTransaction) {\n                endTransaction(context, true);\n            }\n\n            // Mark the attachment content and metadata as not dirty.\n            // Ideally this would only happen if the transaction is committed successfully but since an unsuccessful\n            // transaction will most likely be accompanied by an exception, the cache will not have a chance to save\n            // the copy of the document with erronious information. If this is not set here, the cache will return\n            // a copy of the attachment which claims to be dirty although it isn't.\n            attachment.setMetaDataDirty(false);\n            if (attachment.isContentDirty()) {\n                attachment.getAttachment_content().setContentDirty(false);\n            }\n\n        } catch (Exception e) {\n            Object[] args = {attachment.getFilename(), attachment.getDoc().getDocumentReference()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_SAVING_ATTACHMENT,\n                \"Exception while saving attachments for attachment {0} of document {1}\", e, args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @deprecated This is internal to XWikiHibernateStore and may be removed in the future.\n     */\n    @Deprecated\n    public void loadXWikiCollection(BaseCollection object1, XWikiDocument doc, XWikiContext context,\n        boolean bTransaction, boolean alreadyLoaded) throws XWikiException\n    {\n        BaseCollection object = object1;\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(false, context);\n            }\n            Session session = getSession(context);\n\n            if (!alreadyLoaded) {\n                try {\n                    session.load(object, Integer.valueOf(object1.getId()));\n                } catch (ObjectNotFoundException e) {\n                    // There is no object data saved\n                    object = null;\n                    return;\n                }\n            }\n\n            DocumentReference classReference = object.getXClassReference();\n\n            // If the class reference is null in the loaded object then skip loading properties\n            if (classReference != null) {\n\n                BaseClass bclass = null;\n                if (!classReference.equals(object.getDocumentReference())) {\n                    // Let's check if the class has a custom mapping\n                    bclass = object.getXClass(context);\n                } else {\n                    // We need to get it from the document otherwise\n                    // we will go in an endless loop\n                    if (doc != null) {\n                        bclass = doc.getXClass();\n                    }\n                }\n\n                List handledProps = new ArrayList();\n                try {\n                    if ((bclass != null) && (bclass.hasCustomMapping()) && context.getWiki().hasCustomMappings()) {\n                        Session dynamicSession = session.getSession(EntityMode.MAP);\n                        Object map = dynamicSession.load(bclass.getName(), Integer.valueOf(object.getId()));\n                        // Let's make sure to look for null fields in the dynamic mapping\n                        bclass.fromValueMap((Map) map, object);\n                        handledProps = bclass.getCustomMappingPropertyList(context);\n                        for (Iterator it = handledProps.iterator(); it.hasNext();) {\n                            String prop = (String) it.next();\n                            if (((Map) map).get(prop) == null) {\n                                handledProps.remove(prop);\n                            }\n                        }\n                    }\n                } catch (Exception e) {\n                }\n\n                // Load strings, integers, dates all at once\n\n                Query query = session.createQuery(\"select prop.name, prop.classType from BaseProperty as prop where \"\n                    + \"prop.id.id = :id\");\n                query.setInteger(\"id\", object.getId());\n                for (Object[] result : (List<Object[]>) query.list()) {\n                    String name = (String) result[0];\n                    // No need to load fields already loaded from\n                    // custom mapping\n                    if (handledProps.contains(name)) {\n                        continue;\n                    }\n                    String classType = (String) result[1];\n                    BaseProperty property = null;\n\n                    try {\n                        property = (BaseProperty) Class.forName(classType).newInstance();\n                        property.setObject(object);\n                        property.setName(name);\n                        loadXWikiProperty(property, context, false);\n                    } catch (Exception e) {\n                        // WORKAROUND IN CASE OF MIXMATCH BETWEEN STRING AND LARGESTRING\n                        try {\n                            if (property instanceof StringProperty) {\n                                LargeStringProperty property2 = new LargeStringProperty();\n                                property2.setObject(object);\n                                property2.setName(name);\n                                loadXWikiProperty(property2, context, false);\n                                property.setValue(property2.getValue());\n\n                                if (bclass != null) {\n                                    if (bclass.get(name) instanceof TextAreaClass) {\n                                        property = property2;\n                                    }\n                                }\n\n                            } else if (property instanceof LargeStringProperty) {\n                                StringProperty property2 = new StringProperty();\n                                property2.setObject(object);\n                                property2.setName(name);\n                                loadXWikiProperty(property2, context, false);\n                                property.setValue(property2.getValue());\n\n                                if (bclass != null) {\n                                    if (bclass.get(name) instanceof StringClass) {\n                                        property = property2;\n                                    }\n                                }\n                            } else {\n                                throw e;\n                            }\n                        } catch (Throwable e2) {\n                            Object[] args =\n                                {object.getName(), object.getClass(), Integer.valueOf(object.getNumber() + \"\"), name};\n                            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_LOADING_OBJECT,\n                                \"Exception while loading object '{0}' of class '{1}', number '{2}' and property '{3}'\",\n                                e, args);\n                        }\n                    }\n\n                    object.addField(name, property);\n                }\n            }\n\n            if (bTransaction) {\n                endTransaction(context, false, false);\n            }\n        } catch (Exception e) {\n            Object[] args = {object.getName(), object.getClass(), Integer.valueOf(object.getNumber() + \"\")};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_LOADING_OBJECT,\n                \"Exception while loading object '{0}' of class '{1}' and number '{2}'\", e, args);\n\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n\n    }","id":4298,"modified_method":"/**\n     * @deprecated This is internal to XWikiHibernateStore and may be removed in the future.\n     */\n    @Deprecated\n    public void loadXWikiCollection(BaseCollection object1, XWikiDocument doc, XWikiContext context,\n        boolean bTransaction, boolean alreadyLoaded) throws XWikiException\n    {\n        BaseCollection object = object1;\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(false, context);\n            }\n            Session session = getSession(context);\n\n            if (!alreadyLoaded) {\n                try {\n                    session.load(object, Integer.valueOf(object1.getId()));\n                } catch (ObjectNotFoundException e) {\n                    // There is no object data saved\n                    object = null;\n                    return;\n                }\n            }\n\n            DocumentReference classReference = object.getXClassReference();\n\n            // If the class reference is null in the loaded object then skip loading properties\n            if (classReference != null) {\n\n                BaseClass bclass = null;\n                if (!classReference.equals(object.getDocumentReference())) {\n                    // Let's check if the class has a custom mapping\n                    bclass = object.getXClass(context);\n                } else {\n                    // We need to get it from the document otherwise\n                    // we will go in an endless loop\n                    if (doc != null) {\n                        bclass = doc.getXClass();\n                    }\n                }\n\n                List<String> handledProps = new ArrayList<String>();\n                try {\n                    if ((bclass != null) && (bclass.hasCustomMapping()) && context.getWiki().hasCustomMappings()) {\n                        Session dynamicSession = session.getSession(EntityMode.MAP);\n                        Object map = dynamicSession.load(bclass.getName(), Integer.valueOf(object.getId()));\n                        // Let's make sure to look for null fields in the dynamic mapping\n                        bclass.fromValueMap((Map) map, object);\n                        handledProps = bclass.getCustomMappingPropertyList(context);\n                        for (String prop : handledProps) {\n                            if (((Map) map).get(prop) == null) {\n                                handledProps.remove(prop);\n                            }\n                        }\n                    }\n                } catch (Exception e) {\n                }\n\n                // Load strings, integers, dates all at once\n\n                Query query = session.createQuery(\"select prop.name, prop.classType from BaseProperty as prop where \"\n                    + \"prop.id.id = :id\");\n                query.setInteger(\"id\", object.getId());\n                for (Object[] result : (List<Object[]>) query.list()) {\n                    String name = (String) result[0];\n                    // No need to load fields already loaded from\n                    // custom mapping\n                    if (handledProps.contains(name)) {\n                        continue;\n                    }\n                    String classType = (String) result[1];\n                    BaseProperty property = null;\n\n                    try {\n                        property = (BaseProperty) Class.forName(classType).newInstance();\n                        property.setObject(object);\n                        property.setName(name);\n                        loadXWikiProperty(property, context, false);\n                    } catch (Exception e) {\n                        // WORKAROUND IN CASE OF MIXMATCH BETWEEN STRING AND LARGESTRING\n                        try {\n                            if (property instanceof StringProperty) {\n                                LargeStringProperty property2 = new LargeStringProperty();\n                                property2.setObject(object);\n                                property2.setName(name);\n                                loadXWikiProperty(property2, context, false);\n                                property.setValue(property2.getValue());\n\n                                if (bclass != null) {\n                                    if (bclass.get(name) instanceof TextAreaClass) {\n                                        property = property2;\n                                    }\n                                }\n\n                            } else if (property instanceof LargeStringProperty) {\n                                StringProperty property2 = new StringProperty();\n                                property2.setObject(object);\n                                property2.setName(name);\n                                loadXWikiProperty(property2, context, false);\n                                property.setValue(property2.getValue());\n\n                                if (bclass != null) {\n                                    if (bclass.get(name) instanceof StringClass) {\n                                        property = property2;\n                                    }\n                                }\n                            } else {\n                                throw e;\n                            }\n                        } catch (Throwable e2) {\n                            Object[] args =\n                                {object.getName(), object.getClass(), Integer.valueOf(object.getNumber() + \"\"), name};\n                            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_LOADING_OBJECT,\n                                \"Exception while loading object '{0}' of class '{1}', number '{2}' and property '{3}'\",\n                                e, args);\n                        }\n                    }\n\n                    object.addField(name, property);\n                }\n            }\n\n            if (bTransaction) {\n                endTransaction(context, false, false);\n            }\n        } catch (Exception e) {\n            Object[] args = {object.getName(), object.getClass(), Integer.valueOf(object.getNumber() + \"\")};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_LOADING_OBJECT,\n                \"Exception while loading object '{0}' of class '{1}' and number '{2}'\", e, args);\n\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @deprecated This is internal to XWikiHibernateStore and may be removed in the future.\n     */\n    @Deprecated\n    public void deleteXWikiCollection(BaseCollection object, XWikiContext context, boolean bTransaction, boolean evict)\n        throws XWikiException\n    {\n        if (object == null) {\n            return;\n        }\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(context);\n            }\n            Session session = getSession(context);\n\n            // Let's check if the class has a custom mapping\n            BaseClass bclass = object.getXClass(context);\n            List handledProps = new ArrayList();\n            if ((bclass != null) && (bclass.hasCustomMapping()) && context.getWiki().hasCustomMappings()) {\n                handledProps = bclass.getCustomMappingPropertyList(context);\n                Session dynamicSession = session.getSession(EntityMode.MAP);\n                Object map = dynamicSession.get(bclass.getName(), Integer.valueOf(object.getId()));\n                if (map != null) {\n                    if (evict) {\n                        dynamicSession.evict(map);\n                    }\n                    dynamicSession.delete(map);\n                }\n            }\n\n            if (object.getXClassReference() != null) {\n                for (Iterator it = object.getFieldList().iterator(); it.hasNext();) {\n                    BaseElement property = (BaseElement) it.next();\n                    if (!handledProps.contains(property.getName())) {\n                        if (evict) {\n                            session.evict(property);\n                        }\n                        if (session.get(property.getClass(), property) != null) {\n                            session.delete(property);\n                        }\n                    }\n                }\n            }\n\n            // In case of custom class we need to force it as BaseObject to delete the xwikiobject row\n            if (!\"\".equals(bclass.getCustomClass())) {\n                BaseObject cobject = new BaseObject();\n                cobject.setDocumentReference(object.getDocumentReference());\n                cobject.setClassName(object.getClassName());\n                cobject.setNumber(object.getNumber());\n                if (object instanceof BaseObject) {\n                    cobject.setGuid(((BaseObject) object).getGuid());\n                }\n                cobject.setId(object.getId());\n                if (evict) {\n                    session.evict(cobject);\n                }\n                session.delete(cobject);\n            } else {\n                if (evict) {\n                    session.evict(object);\n                }\n                session.delete(object);\n            }\n\n            if (bTransaction) {\n                endTransaction(context, true);\n            }\n        } catch (Exception e) {\n            Object[] args = {object.getName()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_DELETING_OBJECT, \"Exception while deleting object {0}\", e,\n                args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","id":4299,"modified_method":"/**\n     * @deprecated This is internal to XWikiHibernateStore and may be removed in the future.\n     */\n    @Deprecated\n    public void deleteXWikiCollection(BaseCollection object, XWikiContext context, boolean bTransaction, boolean evict)\n        throws XWikiException\n    {\n        if (object == null) {\n            return;\n        }\n        try {\n            if (bTransaction) {\n                checkHibernate(context);\n                bTransaction = beginTransaction(context);\n            }\n            Session session = getSession(context);\n\n            // Let's check if the class has a custom mapping\n            BaseClass bclass = object.getXClass(context);\n            List<String> handledProps = new ArrayList<String>();\n            if ((bclass != null) && (bclass.hasCustomMapping()) && context.getWiki().hasCustomMappings()) {\n                handledProps = bclass.getCustomMappingPropertyList(context);\n                Session dynamicSession = session.getSession(EntityMode.MAP);\n                Object map = dynamicSession.get(bclass.getName(), Integer.valueOf(object.getId()));\n                if (map != null) {\n                    if (evict) {\n                        dynamicSession.evict(map);\n                    }\n                    dynamicSession.delete(map);\n                }\n            }\n\n            if (object.getXClassReference() != null) {\n                for (BaseElement property : (List<BaseElement>) object.getFieldList()) {\n                    if (!handledProps.contains(property.getName())) {\n                        if (evict) {\n                            session.evict(property);\n                        }\n                        if (session.get(property.getClass(), property) != null) {\n                            session.delete(property);\n                        }\n                    }\n                }\n            }\n\n            // In case of custom class we need to force it as BaseObject to delete the xwikiobject row\n            if (!\"\".equals(bclass.getCustomClass())) {\n                BaseObject cobject = new BaseObject();\n                cobject.setDocumentReference(object.getDocumentReference());\n                cobject.setClassName(object.getClassName());\n                cobject.setNumber(object.getNumber());\n                if (object instanceof BaseObject) {\n                    cobject.setGuid(((BaseObject) object).getGuid());\n                }\n                cobject.setId(object.getId());\n                if (evict) {\n                    session.evict(cobject);\n                }\n                session.delete(cobject);\n            } else {\n                if (evict) {\n                    session.evict(object);\n                }\n                session.delete(object);\n            }\n\n            if (bTransaction) {\n                endTransaction(context, true);\n            }\n        } catch (Exception e) {\n            Object[] args = {object.getName()};\n            throw new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n                XWikiException.ERROR_XWIKI_STORE_HIBERNATE_DELETING_OBJECT, \"Exception while deleting object {0}\", e,\n                args);\n        } finally {\n            try {\n                if (bTransaction) {\n                    endTransaction(context, false);\n                }\n            } catch (Exception e) {\n            }\n        }\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see XWikiStoreInterface#countDocuments(String, XWikiContext)\n     */\n    public int countDocuments(String wheresql, XWikiContext context) throws XWikiException\n    {\n        String sql = createSQLQuery(\"select count(distinct doc.fullName)\", wheresql);\n        List l = search(sql, 0, 0, context);\n        return ((Number) l.get(0)).intValue();\n    }","id":4300,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see XWikiStoreInterface#countDocuments(String, XWikiContext)\n     */\n    public int countDocuments(String wheresql, XWikiContext context) throws XWikiException\n    {\n        String sql = createSQLQuery(\"select count(distinct doc.fullName)\", wheresql);\n        List<Number> l = search(sql, 0, 0, context);\n        return l.get(0).intValue();\n    }","commit_id":"800178146d80613463801705fe692278838cc4a4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public boolean equals(Object obj) {\n        if (!super.equals(obj))\n            return false;\n\n        BaseClass bclass = (BaseClass) obj;\n\n        if (!getCustomClass().equals(bclass.getCustomClass()))\n            return false;\n\n        if (!getCustomMapping().equals(bclass.getCustomMapping()))\n            return false;\n\n        if (!getDefaultViewSheet().equals(bclass.getDefaultViewSheet()))\n            return false;\n\n        if (!getDefaultEditSheet().equals(bclass.getDefaultEditSheet()))\n            return false;\n\n        if (!getDefaultWeb().equals(bclass.getDefaultWeb()))\n            return false;\n\n        if (!getValidationScript().equals(bclass.getValidationScript()))\n            return false;\n\n        if (!getNameField().equals(bclass.getNameField()))\n            return false;\n        \n        return true;\n    }","id":4301,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.objects.BaseCollection#equals(java.lang.Object)\n     */\n    @Override\n    public boolean equals(Object obj)\n    {\n        if (!super.equals(obj)) {\n            return false;\n        }\n\n        BaseClass bclass = (BaseClass) obj;\n\n        if (!getCustomClass().equals(bclass.getCustomClass())) {\n            return false;\n        }\n\n        if (!getCustomMapping().equals(bclass.getCustomMapping())) {\n            return false;\n        }\n\n        if (!getDefaultViewSheet().equals(bclass.getDefaultViewSheet())) {\n            return false;\n        }\n\n        if (!getDefaultEditSheet().equals(bclass.getDefaultEditSheet())) {\n            return false;\n        }\n\n        if (!getDefaultWeb().equals(bclass.getDefaultWeb())) {\n            return false;\n        }\n\n        if (!getValidationScript().equals(bclass.getValidationScript())) {\n            return false;\n        }\n\n        if (!getNameField().equals(bclass.getNameField())) {\n            return false;\n        }\n\n        return true;\n    }","commit_id":"c893e7eec13ef8c40379224ab495540339922516","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public PropertyInterface get(String name) {\n        return safeget(name);\n    }","id":4302,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.objects.BaseCollection#get(java.lang.String)\n     */\n    @Override\n    public PropertyInterface get(String name)\n    {\n        return safeget(name);\n    }","commit_id":"c893e7eec13ef8c40379224ab495540339922516","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public List<ObjectDiff> getDiff(Object oldObject, XWikiContext context) {\n        ArrayList<ObjectDiff> difflist = new ArrayList<ObjectDiff>();\n        BaseClass oldClass = (BaseClass) oldObject;\n        Iterator itfields = this.getFieldList().iterator();\n        while (itfields.hasNext()) {\n            PropertyClass newProperty = (PropertyClass) itfields.next();\n            String propertyName = newProperty.getName();\n            PropertyClass oldProperty = (PropertyClass) oldClass.get(propertyName);\n\n            if (oldProperty == null) {\n                    difflist.add(new ObjectDiff(getClassName(), getNumber(), \"added\",\n                            propertyName, \"\" , \"\"));\n            } else if (!oldProperty.equals(newProperty)) {\n                    difflist.add(new ObjectDiff(getClassName(), getNumber(), \"changed\",\n                            propertyName, \"\", \"\"));\n            }\n        }\n\n        itfields = oldClass.getFieldList().iterator();\n        while (itfields.hasNext()) {\n            PropertyClass oldProperty = (PropertyClass) itfields.next();\n            String propertyName = oldProperty.getName();\n            PropertyClass newProperty = (PropertyClass) get(propertyName);\n\n            if (newProperty == null) {\n                difflist.add(new ObjectDiff(getClassName(), getNumber(), \"removed\",\n                        propertyName, \"\" , \"\"));\n            }\n        }\n\n        return difflist;\n    }","id":4303,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.objects.BaseCollection#getDiff(java.lang.Object, com.xpn.xwiki.XWikiContext)\n     */\n    @Override\n    public List<ObjectDiff> getDiff(Object oldObject, XWikiContext context)\n    {\n        ArrayList<ObjectDiff> difflist = new ArrayList<ObjectDiff>();\n        BaseClass oldClass = (BaseClass) oldObject;\n        for (PropertyClass newProperty : (Collection<PropertyClass>) getFieldList()) {\n            String propertyName = newProperty.getName();\n            PropertyClass oldProperty = (PropertyClass) oldClass.get(propertyName);\n\n            if (oldProperty == null) {\n                difflist.add(new ObjectDiff(getClassName(), getNumber(), \"added\", propertyName, \"\", \"\"));\n            } else if (!oldProperty.equals(newProperty)) {\n                difflist.add(new ObjectDiff(getClassName(), getNumber(), \"changed\", propertyName, \"\", \"\"));\n            }\n        }\n\n        for (PropertyClass oldProperty : (Collection<PropertyClass>) oldClass.getFieldList()) {\n            String propertyName = oldProperty.getName();\n            PropertyClass newProperty = (PropertyClass) get(propertyName);\n\n            if (newProperty == null) {\n                difflist.add(new ObjectDiff(getClassName(), getNumber(), \"removed\", propertyName, \"\", \"\"));\n            }\n        }\n\n        return difflist;\n    }","commit_id":"c893e7eec13ef8c40379224ab495540339922516","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public Object clone() {\n        BaseClass bclass = (BaseClass) super.clone();\n        bclass.setCustomClass(getCustomClass());\n        bclass.setCustomMapping(getCustomMapping());\n        bclass.setDefaultWeb(getDefaultWeb());\n        bclass.setDefaultViewSheet(getDefaultViewSheet());\n        bclass.setDefaultEditSheet(getDefaultEditSheet());\n        bclass.setNameField(getNameField());\n        return bclass;\n    }","id":4304,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.objects.BaseCollection#clone()\n     */\n    @Override\n    public Object clone()\n    {\n        BaseClass bclass = (BaseClass) super.clone();\n        bclass.setCustomClass(getCustomClass());\n        bclass.setCustomMapping(getCustomMapping());\n        bclass.setDefaultWeb(getDefaultWeb());\n        bclass.setDefaultViewSheet(getDefaultViewSheet());\n        bclass.setDefaultEditSheet(getDefaultEditSheet());\n        bclass.setNameField(getNameField());\n\n        return bclass;\n    }","commit_id":"c893e7eec13ef8c40379224ab495540339922516","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public String makeQuery(XWikiCriteria query) {\n        List criteriaList = new ArrayList();\n        Iterator classit = getFieldList().iterator();\n        while (classit.hasNext()) {\n            PropertyClass property = (PropertyClass) classit.next();\n            String name = property.getName();\n            Map map = query.getParameters(getName() + \"_\" + name);\n            if (map.size()>0) {\n              property.makeQuery(map, \"\", query, criteriaList);\n            }\n        }\n        return StringUtils.join(criteriaList.toArray(), \" and \");\n    }","id":4305,"modified_method":"public String makeQuery(XWikiCriteria query)\n    {\n        List criteriaList = new ArrayList();\n        for (PropertyClass property : (Collection<PropertyClass>) getFieldList()) {\n            String name = property.getName();\n            Map map = query.getParameters(getName() + \"_\" + name);\n            if (map.size() > 0) {\n                property.makeQuery(map, \"\", query, criteriaList);\n            }\n        }\n\n        return StringUtils.join(criteriaList.toArray(), \" and \");\n    }","commit_id":"c893e7eec13ef8c40379224ab495540339922516","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void addField(String name, PropertyInterface element) {\n        Set properties = getPropertyList();\n        if (!properties.contains(name)) {\n            if (((BaseCollection)element).getNumber()==0)\n                ((BaseCollection)element).setNumber(properties.size()+1);\n        }\n        super.addField(name, element);\n    }","id":4306,"modified_method":"/**\n     * {@inheritDoc}\n     * <p>\n     * This insures natural ordering between properties.\n     * \n     * @see com.xpn.xwiki.objects.BaseCollection#addField(java.lang.String, com.xpn.xwiki.objects.PropertyInterface)\n     */\n    @Override\n    public void addField(String name, PropertyInterface element)\n    {\n        Set properties = getPropertyList();\n        if (!properties.contains(name)) {\n            if (((BaseCollection) element).getNumber() == 0) {\n                ((BaseCollection) element).setNumber(properties.size() + 1);\n            }\n        }\n\n        super.addField(name, element);\n    }","commit_id":"c893e7eec13ef8c40379224ab495540339922516","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public Element toXML(BaseClass bclass) {\n        return toXML();\n    }","id":4307,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.objects.BaseCollection#toXML(com.xpn.xwiki.objects.classes.BaseClass)\n     */\n    @Override\n    public Element toXML(BaseClass bclass)\n    {\n        return toXML();\n    }","commit_id":"c893e7eec13ef8c40379224ab495540339922516","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void put(String name, PropertyInterface property) {\n        safeput(name, property);\n    }","id":4308,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.objects.BaseCollection#put(java.lang.String, com.xpn.xwiki.objects.PropertyInterface)\n     */\n    @Override\n    public void put(String name, PropertyInterface property)\n    {\n        safeput(name, property);\n    }","commit_id":"c893e7eec13ef8c40379224ab495540339922516","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public BaseCollection fromMap(Map map, BaseCollection object) {\n        object.setClassName(getName());\n        Iterator classit = getFieldList().iterator();\n        while (classit.hasNext()) {\n            PropertyClass property = (PropertyClass) classit.next();\n            String name = property.getName();\n            Object formvalues = map.get(name);\n            if (formvalues!=null) {\n                BaseProperty objprop;\n                if (formvalues instanceof String[]) {\n                    objprop = property.fromStringArray(((String[])formvalues));\n                } else {\n                    objprop = property.fromString(formvalues.toString());\n                }\n                if (objprop!=null) {\n                    objprop.setObject(object);\n                    object.safeput(name, objprop);\n                }\n            }\n        }\n        return object;\n    }","id":4309,"modified_method":"public BaseCollection fromMap(Map map, BaseCollection object)\n    {\n        object.setClassName(getName());\n        for (PropertyClass property : (Collection<PropertyClass>) getFieldList()) {\n            String name = property.getName();\n            Object formvalues = map.get(name);\n            if (formvalues != null) {\n                BaseProperty objprop;\n                if (formvalues instanceof String[]) {\n                    objprop = property.fromStringArray(((String[]) formvalues));\n                } else {\n                    objprop = property.fromString(formvalues.toString());\n                }\n\n                if (objprop != null) {\n                    objprop.setObject(object);\n                    object.safeput(name, objprop);\n                }\n            }\n        }\n\n        return object;\n    }","commit_id":"c893e7eec13ef8c40379224ab495540339922516","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public BaseCollection fromValueMap(Map map, BaseCollection object) {\n        object.setClassName(getName());\n        Iterator classit = getFieldList().iterator();\n        while (classit.hasNext()) {\n            PropertyClass property = (PropertyClass) classit.next();\n            String name = property.getName();\n            Object formvalue = map.get(name);\n            if (formvalue!=null) {\n                BaseProperty objprop;\n                objprop = property.fromValue(formvalue);\n                if (objprop!=null) {\n                    objprop.setObject(object);\n                    object.safeput(name, objprop);\n                }\n            }\n        }\n        return object;\n    }","id":4310,"modified_method":"public BaseCollection fromValueMap(Map map, BaseCollection object)\n    {\n        object.setClassName(getName());\n        for (PropertyClass property : (Collection<PropertyClass>) getFieldList()) {\n            String name = property.getName();\n            Object formvalue = map.get(name);\n            if (formvalue != null) {\n                BaseProperty objprop;\n                objprop = property.fromValue(formvalue);\n                if (objprop != null) {\n                    objprop.setObject(object);\n                    object.safeput(name, objprop);\n                }\n            }\n        }\n\n        return object;\n    }","commit_id":"c893e7eec13ef8c40379224ab495540339922516","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public boolean action(XWikiContext context) throws XWikiException\n    {\n        try {\n            if (propUpdate(context)) {\n                return true;\n            }\n        } catch (XWikiException ex) {\n            context.put(\"exception\", ex);\n            return true;\n        }\n        // forward to view\n        String redirect = Utils.getRedirect(\"view\", context);\n        sendRedirect(context.getResponse(), redirect);\n        return false;\n    }","id":4311,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see XWikiAction#action(XWikiContext)\n     */\n    @Override\n    public boolean action(XWikiContext context) throws XWikiException\n    {\n        try {\n            if (propUpdate(context)) {\n                return true;\n            }\n        } catch (XWikiException ex) {\n            context.put(\"exception\", ex);\n            return true;\n        }\n        // forward to view\n        String redirect = Utils.getRedirect(\"view\", context);\n        sendRedirect(context.getResponse(), redirect);\n        return false;\n    }","commit_id":"5d3540509de4deac080bf75e3d73f97e59b74779","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public boolean propUpdate(XWikiContext context) throws XWikiException\n    {\n        XWiki xwiki = context.getWiki();\n        XWikiDocument doc = context.getDoc();\n        XWikiForm form = context.getForm();\n\n        // Prepare new class\n        BaseClass bclass = doc.getxWikiClass();\n        BaseClass bclass2 = (BaseClass) bclass.clone();\n        bclass2.setFields(new HashMap());\n\n        // Prepare a Map for field renames\n        Map fieldsToRename = new HashMap();\n\n        Iterator it = bclass.getFieldList().iterator();\n        while (it.hasNext()) {\n            PropertyClass origproperty = (PropertyClass) it.next();\n            PropertyClass property = (PropertyClass) origproperty.clone();\n            String name = property.getName();\n            Map map = ((EditForm) form).getObject(name);\n            property.getxWikiClass(context).fromMap(map, property);\n            String newname = property.getName();\n\n            if (newname == null || newname.equals(\"\") || !newname.matches(\"[\\\\w\\\\.\\\\-\\\\_]+\")) {\n                context.put(\"message\", \"propertynamenotcorrect\");\n                return true;\n            }\n\n            if (newname.indexOf(\" \") != -1) {\n                newname = newname.replaceAll(\" \", \"\");\n                property.setName(newname);\n            }\n            bclass2.addField(newname, property);\n            if (!newname.equals(name)) {\n                fieldsToRename.put(name, newname);\n                bclass2.addPropertyForRemoval(origproperty);\n            }\n        }\n\n        doc.setxWikiClass(bclass2);\n        doc.renameProperties(bclass.getName(), fieldsToRename);\n        doc.setMetaDataDirty(true);\n        xwiki.saveDocument(doc, context.getMessageTool().get(\"core.comment.updateClassProperty\"), true, context);\n\n        // We need to load all documents that use this property and rename it\n        if (fieldsToRename.size() > 0) {\n            List list =\n                xwiki.getStore().searchDocumentsNames(\n                    \", BaseObject as obj where obj.name=\" + xwiki.getFullNameSQL() + \" and obj.className='\"\n                        + Utils.SQLFilter(bclass.getName()) + \"' and \" + xwiki.getFullNameSQL() + \"<> '\"\n                        + Utils.SQLFilter(bclass.getName()) + \"'\", context);\n            for (int i = 0; i < list.size(); i++) {\n                XWikiDocument doc2 = xwiki.getDocument((String) list.get(i), context);\n                doc2.renameProperties(bclass.getName(), fieldsToRename);\n                xwiki.saveDocument(doc2, context.getMessageTool().get(\"core.comment.updateClassPropertyName\"), true,\n                    context);\n            }\n        }\n        xwiki.flushCache();\n        return false;\n    }","id":4312,"modified_method":"public boolean propUpdate(XWikiContext context) throws XWikiException\n    {\n        XWiki xwiki = context.getWiki();\n        XWikiDocument doc = context.getDoc();\n        XWikiForm form = context.getForm();\n        XWikiMessageTool msg = context.getMessageTool();\n\n        // Prepare new class\n        BaseClass bclass = doc.getxWikiClass();\n        BaseClass bclass2 = (BaseClass) bclass.clone();\n        bclass2.setFields(new HashMap());\n\n        // Prepare a Map for field renames\n        Map<String, String> fieldsToRename = new HashMap<String, String>();\n\n        for (PropertyClass originalProperty : (Collection<PropertyClass>) bclass.getFieldList()) {\n            PropertyClass newProperty = (PropertyClass) originalProperty.clone();\n            String name = newProperty.getName();\n            Map<String, ? > map = ((EditForm) form).getObject(name);\n            newProperty.getxWikiClass(context).fromMap(map, newProperty);\n            String newName = newProperty.getName();\n\n            if (StringUtils.isBlank(newName) || !newName.matches(\"[\\\\w\\\\.\\\\-\\\\_]+\")) {\n                context.put(\"message\", \"propertynamenotcorrect\");\n                return true;\n            }\n\n            if (newName.indexOf(\" \") != -1) {\n                newName = newName.replaceAll(\" \", \"\");\n                newProperty.setName(newName);\n            }\n            bclass2.addField(newName, newProperty);\n            if (!newName.equals(name)) {\n                fieldsToRename.put(name, newName);\n                bclass2.addPropertyForRemoval(originalProperty);\n            }\n        }\n\n        doc.setxWikiClass(bclass2);\n        doc.renameProperties(bclass.getName(), fieldsToRename);\n        doc.setMetaDataDirty(true);\n        xwiki.saveDocument(doc, msg.get(\"core.comment.updateClassProperty\"), true, context);\n\n        // We need to load all documents that use this property and rename it\n        if (fieldsToRename.size() > 0) {\n            List<String> list =\n                xwiki.getStore().searchDocumentsNames(\n                    \", BaseObject as obj where obj.name=doc.fullName and obj.className='\"\n                        + Utils.SQLFilter(bclass.getName()) + \"' and doc.fullName <> '\"\n                        + Utils.SQLFilter(bclass.getName()) + \"'\", context);\n            for (String docName : list) {\n                XWikiDocument doc2 = xwiki.getDocument(docName, context);\n                doc2.renameProperties(bclass.getName(), fieldsToRename);\n                xwiki.saveDocument(doc2, msg.get(\"core.comment.updateClassPropertyName\"), true, context);\n            }\n        }\n        xwiki.flushCache();\n        return false;\n    }","commit_id":"5d3540509de4deac080bf75e3d73f97e59b74779","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public String render(XWikiContext context) throws XWikiException\n    {\n        return \"exception\";\n    }","id":4313,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see XWikiAction#render(XWikiContext)\n     */\n    @Override\n    public String render(XWikiContext context) throws XWikiException\n    {\n        return \"exception\";\n    }","commit_id":"5d3540509de4deac080bf75e3d73f97e59b74779","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Before\n    public void setUp() throws Exception\n    {\n        super.setUp();\n\n        // Statically store the component manager in {@link Utils} to be able to access it without\n        // the context.\n        Utils.setComponentManager(getComponentManager());\n\n        this.context = new XWikiContext();\n\n        this.context.setDatabase(\"xwiki\");\n        this.context.setMainXWiki(\"xwiki\");\n\n        // We need to initialize the Component Manager so that the components can be looked up\n        getContext().put(ComponentManager.class.getName(), getComponentManager());\n\n        // Bridge with old XWiki Context, required for old code.\n        Execution execution = getComponentManager().lookup(Execution.class);\n        execution.getContext().setProperty(\"xwikicontext\", this.context);\n        getComponentManager().lookup(XWikiStubContextProvider.class).initialize(this.context);\n\n        // Set a simple application context, as some components fail to start without one.\n        Container c = getComponentManager().lookup(Container.class);\n        c.setApplicationContext(new TestApplicationContext());\n\n        final CoreConfiguration mockCoreConfiguration = this.mockery.mock(CoreConfiguration.class);\n        this.mockery.checking(new Expectations() {{\n            allowing(mockCoreConfiguration).getDefaultDocumentSyntax(); will(returnValue(Syntax.XWIKI_1_0));\n        }});\n\n        DefaultComponentDescriptor<CoreConfiguration> descriptor = new DefaultComponentDescriptor<CoreConfiguration>();\n        descriptor.setRole(CoreConfiguration.class);\n        getComponentManager().registerComponent(descriptor, mockCoreConfiguration);\n    }","id":4314,"modified_method":"@Before\n    public void setUp() throws Exception\n    {\n        super.setUp();\n\n        // Statically store the component manager in {@link Utils} to be able to access it without\n        // the context.\n        Utils.setComponentManager(getComponentManager());\n\n        this.context = new XWikiContext();\n\n        this.context.setDatabase(\"xwiki\");\n        this.context.setMainXWiki(\"xwiki\");\n\n        // We need to initialize the Component Manager so that the components can be looked up\n        getContext().put(ComponentManager.class.getName(), getComponentManager());\n\n        // Bridge with old XWiki Context, required for old code.\n        Execution execution = getComponentManager().lookup(Execution.class);\n        execution.getContext().setProperty(\"xwikicontext\", this.context);\n        getComponentManager().lookup(XWikiStubContextProvider.class).initialize(this.context);\n\n        // Set a simple application context, as some components fail to start without one.\n        Container c = getComponentManager().lookup(Container.class);\n        c.setApplicationContext(new TestApplicationContext());\n\n        final CoreConfiguration mockCoreConfiguration = registerMockComponent(CoreConfiguration.class);\n        this.mockery.checking(new Expectations() {{\n            allowing(mockCoreConfiguration).getDefaultDocumentSyntax(); will(returnValue(Syntax.XWIKI_1_0));\n        }});\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    protected void setUp() throws Exception\n    {\n        super.setUp();\n\n        // Statically store the component manager in {@link Utils} to be able to access it without\n        // the context.\n        Utils.setComponentManager(getComponentManager());\n        \n        this.context = new XWikiContext();\n\n        this.context.setDatabase(\"xwiki\");\n        this.context.setMainXWiki(\"xwiki\");\n\n        // We need to initialize the Component Manager so that the components can be looked up\n        getContext().put(ComponentManager.class.getName(), getComponentManager());\n\n        // Bridge with old XWiki Context, required for old code.\n        Execution execution = getComponentManager().lookup(Execution.class);\n        execution.getContext().setProperty(\"xwikicontext\", this.context);\n        getComponentManager().lookup(XWikiStubContextProvider.class).initialize(this.context);\n\n        // Set a simple application context, as some components fail to start without one.\n        Container c = getComponentManager().lookup(Container.class);\n        c.setApplicationContext(new TestApplicationContext());\n\n        Mock mockCoreConfiguration = mock(CoreConfiguration.class);\n        mockCoreConfiguration.stubs().method(\"getDefaultDocumentSyntax\").will(returnValue(Syntax.XWIKI_1_0));\n        DefaultComponentDescriptor<CoreConfiguration> descriptor = new DefaultComponentDescriptor<CoreConfiguration>();\n        descriptor.setRole(CoreConfiguration.class);\n        getComponentManager().registerComponent(descriptor, (CoreConfiguration) mockCoreConfiguration.proxy());\n    }","id":4315,"modified_method":"@Override\n    protected void setUp() throws Exception\n    {\n        super.setUp();\n\n        // Statically store the component manager in {@link Utils} to be able to access it without\n        // the context.\n        Utils.setComponentManager(getComponentManager());\n        \n        this.context = new XWikiContext();\n\n        this.context.setDatabase(\"xwiki\");\n        this.context.setMainXWiki(\"xwiki\");\n\n        // We need to initialize the Component Manager so that the components can be looked up\n        getContext().put(ComponentManager.class.getName(), getComponentManager());\n\n        // Bridge with old XWiki Context, required for old code.\n        Execution execution = getComponentManager().lookup(Execution.class);\n        execution.getContext().setProperty(\"xwikicontext\", this.context);\n        getComponentManager().lookup(XWikiStubContextProvider.class).initialize(this.context);\n\n        // Set a simple application context, as some components fail to start without one.\n        Container c = getComponentManager().lookup(Container.class);\n        c.setApplicationContext(new TestApplicationContext());\n\n        Mock mockCoreConfiguration = registerMockComponent(CoreConfiguration.class);\n        mockCoreConfiguration.stubs().method(\"getDefaultDocumentSyntax\").will(returnValue(Syntax.XWIKI_1_0));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     */\n    protected void registerComponents() throws Exception\n    {\n        super.registerComponents();\n\n        // Document Access Bridge Mock\n        mockDocumentAccessBridge = mockery.mock(DocumentAccessBridge.class);\n        DefaultComponentDescriptor<DocumentAccessBridge> descriptorDAB =\n            new DefaultComponentDescriptor<DocumentAccessBridge>();\n        descriptorDAB.setRole(DocumentAccessBridge.class);\n        getComponentManager().registerComponent(descriptorDAB, mockDocumentAccessBridge);\n\n        // Mock (default) string document name serializer.\n        mockDefaultStringEntityReferenceSerializer = this.mockery.mock(EntityReferenceSerializer.class, \"s1\");\n        DefaultComponentDescriptor<EntityReferenceSerializer> descriptorDSRS =\n            new DefaultComponentDescriptor<EntityReferenceSerializer>();\n        descriptorDSRS.setRole(EntityReferenceSerializer.class);\n        getComponentManager().registerComponent(descriptorDSRS, mockDefaultStringEntityReferenceSerializer);\n        \n        // Mock (compactwiki) string document name serializer.\n        mockCompactWikiStringEntityReferenceSerializer = this.mockery.mock(EntityReferenceSerializer.class, \"s2\");\n        DefaultComponentDescriptor<EntityReferenceSerializer> descriptorCWSRS =\n            new DefaultComponentDescriptor<EntityReferenceSerializer>();\n        descriptorCWSRS.setRole(EntityReferenceSerializer.class);\n        descriptorCWSRS.setRoleHint(\"compactwiki\");\n        getComponentManager().registerComponent(descriptorCWSRS, mockCompactWikiStringEntityReferenceSerializer);\n\n        // Document name factory.\n        mockDocumentReferenceResolver = this.mockery.mock(DocumentReferenceResolver.class);\n        DefaultComponentDescriptor<DocumentReferenceResolver> descriptorDRF =\n            new DefaultComponentDescriptor<DocumentReferenceResolver>();\n        descriptorDRF.setRole(DocumentReferenceResolver.class);\n        descriptorDRF.setRoleHint(\"currentmixed\");\n        getComponentManager().registerComponent(descriptorDRF, mockDocumentReferenceResolver);\n        \n        // Mock OpenOffice manager.\n        mockOpenOfficeManager = this.mockery.mock(OpenOfficeManager.class);\n        DefaultComponentDescriptor<OpenOfficeManager> descriptorOOM =\n            new DefaultComponentDescriptor<OpenOfficeManager>();\n        descriptorOOM.setRole(OpenOfficeManager.class);\n        getComponentManager().registerComponent(descriptorOOM, mockOpenOfficeManager);                \n    }","id":4316,"modified_method":"/**\n     * {@inheritDoc}\n     */\n    protected void registerComponents() throws Exception\n    {\n        super.registerComponents();\n\n        // Document Access Bridge Mock\n        this.mockDocumentAccessBridge = registerMockComponent(DocumentAccessBridge.class);\n\n        // Mock (default) string document name serializer.\n        this.mockDefaultStringEntityReferenceSerializer = getMockery().mock(EntityReferenceSerializer.class, \"s1\");\n        DefaultComponentDescriptor<EntityReferenceSerializer> descriptorDSRS =\n            new DefaultComponentDescriptor<EntityReferenceSerializer>();\n        descriptorDSRS.setRole(EntityReferenceSerializer.class);\n        getComponentManager().registerComponent(descriptorDSRS, mockDefaultStringEntityReferenceSerializer);\n        \n        // Mock (compactwiki) string document name serializer.\n        mockCompactWikiStringEntityReferenceSerializer = getMockery().mock(EntityReferenceSerializer.class, \"s2\");\n        DefaultComponentDescriptor<EntityReferenceSerializer> descriptorCWSRS =\n            new DefaultComponentDescriptor<EntityReferenceSerializer>();\n        descriptorCWSRS.setRole(EntityReferenceSerializer.class);\n        descriptorCWSRS.setRoleHint(\"compactwiki\");\n        getComponentManager().registerComponent(descriptorCWSRS, mockCompactWikiStringEntityReferenceSerializer);\n\n        // Document name factory.\n        this.mockDocumentReferenceResolver = registerMockComponent(DocumentReferenceResolver.class, \"currentmixed\");\n\n        // Mock OpenOffice manager.\n        this.mockOpenOfficeManager = registerMockComponent(OpenOfficeManager.class);\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Verify that URL-encoded chars are decoded.\n     */\n    @Test\n    public void testAttachmentJarURLWithEncodedChars() throws Exception\n    {\n        URL url = new URL(null, \"attachmentjar://some%20page\", (URLStreamHandler) this.handler);\n        \n        mockery.checking(new Expectations() {{\n            oneOf(arf).resolve(\"some page\");\n        }});\n        \n        url.openConnection();\n    }","id":4317,"modified_method":"/**\n     * Verify that URL-encoded chars are decoded.\n     */\n    @Test\n    public void testAttachmentJarURLWithEncodedChars() throws Exception\n    {\n        URL url = new URL(null, \"attachmentjar://some%20page\", (URLStreamHandler) this.handler);\n        \n        getMockery().checking(new Expectations() {{\n            oneOf(arf).resolve(\"some page\");\n        }});\n        \n        url.openConnection();\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testAttachmentJarURL() throws Exception\n    {\n        URL url = new URL(null, \"attachmentjar://Space.Page@filename\", (URLStreamHandler) this.handler);\n        \n        final AttachmentReference attachmentReference = new AttachmentReference(\"filename\",\n            new DocumentReference(\"wiki\", \"space\", \"page\"));\n        mockery.checking(new Expectations() {{\n            oneOf(arf).resolve(\"Space.Page@filename\"); will(returnValue(attachmentReference));\n            oneOf(dab).getAttachmentContent(attachmentReference);\n                will(returnValue(new ByteArrayInputStream(\"content\".getBytes())));\n        }});\n        \n        URLConnection connection = url.openConnection();\n        InputStream input = null;\n        try {\n            connection.connect();\n            input = connection.getInputStream();\n            Assert.assertEquals(\"content\", IOUtils.toString(input));\n        } finally {\n            if (input != null) {\n                input.close();\n            }\n        }\n    }","id":4318,"modified_method":"@Test\n    public void testAttachmentJarURL() throws Exception\n    {\n        URL url = new URL(null, \"attachmentjar://Space.Page@filename\", (URLStreamHandler) this.handler);\n        \n        final AttachmentReference attachmentReference = new AttachmentReference(\"filename\",\n            new DocumentReference(\"wiki\", \"space\", \"page\"));\n        getMockery().checking(new Expectations() {{\n            oneOf(arf).resolve(\"Space.Page@filename\"); will(returnValue(attachmentReference));\n            oneOf(dab).getAttachmentContent(attachmentReference);\n                will(returnValue(new ByteArrayInputStream(\"content\".getBytes())));\n        }});\n        \n        URLConnection connection = url.openConnection();\n        InputStream input = null;\n        try {\n            connection.connect();\n            input = connection.getInputStream();\n            Assert.assertEquals(\"content\", IOUtils.toString(input));\n        } finally {\n            if (input != null) {\n                input.close();\n            }\n        }\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    protected void registerComponents() throws Exception\n    {\n        super.registerComponents();\n\n        this.arf = this.mockery.mock(AttachmentReferenceResolver.class);\n        DefaultComponentDescriptor<AttachmentReferenceResolver> descriptorARF =\n            new DefaultComponentDescriptor<AttachmentReferenceResolver>();\n        descriptorARF.setRole(AttachmentReferenceResolver.class);\n        descriptorARF.setRoleHint(\"current\");\n        getComponentManager().registerComponent(descriptorARF, this.arf);\n\n        this.dab = this.mockery.mock(DocumentAccessBridge.class);\n        DefaultComponentDescriptor<DocumentAccessBridge> descriptorDAB =\n            new DefaultComponentDescriptor<DocumentAccessBridge>();\n        descriptorDAB.setRole(DocumentAccessBridge.class);\n        getComponentManager().registerComponent(descriptorDAB, this.dab);\n        \n        this.handler = getComponentManager().lookup(ExtendedURLStreamHandler.class, \"attachmentjar\");\n    }","id":4319,"modified_method":"@Override\n    protected void registerComponents() throws Exception\n    {\n        super.registerComponents();\n\n        this.arf = registerMockComponent(AttachmentReferenceResolver.class, \"current\");\n        this.dab = registerMockComponent(DocumentAccessBridge.class);\n        \n        this.handler = getComponentManager().lookup(ExtendedURLStreamHandler.class, \"attachmentjar\");\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    protected void registerComponents() throws Exception\n    {\n        super.registerComponents();\n\n        this.mockModelContext = mockery.mock(ModelContext.class);\n        DefaultComponentDescriptor<ModelContext> descriptor = new DefaultComponentDescriptor<ModelContext>();\n        descriptor.setRole(ModelContext.class);\n        getComponentManager().registerComponent(descriptor, this.mockModelContext);\n\n        this.serializer = getComponentManager().lookup(EntityReferenceSerializer.class, \"compactwiki\");\n    }","id":4320,"modified_method":"@Override\n    protected void registerComponents() throws Exception\n    {\n        super.registerComponents();\n\n        this.mockModelContext = registerMockComponent(ModelContext.class);\n        this.serializer = getComponentManager().lookup(EntityReferenceSerializer.class, \"compactwiki\");\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@org.junit.Test\n    public void testSerializeWhenNotInSameWiki() throws Exception\n    {\n        DocumentReference reference = new DocumentReference(\"wiki\", \"space\", \"page\");\n\n        this.mockery.checking(new Expectations() {{\n            allowing(mockModelContext).getCurrentEntityReference(); will(returnValue(new WikiReference(\"otherwiki\")));\n        }});\n\n        Assert.assertEquals(\"wiki:space.page\", this.serializer.serialize(reference));\n        Assert.assertEquals(\"wiki:space\", this.serializer.serialize(reference.getParent()));\n    }","id":4321,"modified_method":"@org.junit.Test\n    public void testSerializeWhenNotInSameWiki() throws Exception\n    {\n        DocumentReference reference = new DocumentReference(\"wiki\", \"space\", \"page\");\n\n        getMockery().checking(new Expectations() {{\n            allowing(mockModelContext).getCurrentEntityReference(); will(returnValue(new WikiReference(\"otherwiki\")));\n        }});\n\n        Assert.assertEquals(\"wiki:space.page\", this.serializer.serialize(reference));\n        Assert.assertEquals(\"wiki:space\", this.serializer.serialize(reference.getParent()));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@org.junit.Test\n    public void testSerializeWhenInSameWiki() throws Exception\n    {\n        DocumentReference reference = new DocumentReference(\"wiki\", \"space\", \"page\");\n\n        this.mockery.checking(new Expectations() {{\n            allowing(mockModelContext).getCurrentEntityReference(); will(returnValue(new WikiReference(\"wiki\")));\n        }});\n\n        Assert.assertEquals(\"space.page\", this.serializer.serialize(reference));\n        Assert.assertEquals(\"space\", this.serializer.serialize(reference.getParent()));\n    }","id":4322,"modified_method":"@org.junit.Test\n    public void testSerializeWhenInSameWiki() throws Exception\n    {\n        DocumentReference reference = new DocumentReference(\"wiki\", \"space\", \"page\");\n\n        getMockery().checking(new Expectations() {{\n            allowing(mockModelContext).getCurrentEntityReference(); will(returnValue(new WikiReference(\"wiki\")));\n        }});\n\n        Assert.assertEquals(\"space.page\", this.serializer.serialize(reference));\n        Assert.assertEquals(\"space\", this.serializer.serialize(reference.getParent()));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testRegisterComponentInWikiComponentManager() throws Exception\n    {\n        final States state  = mockery.states(\"test\");\n\n        mockery.checking(new Expectations() {{\n            allowing(mockDocumentAccessBridge).getCurrentWiki();  when(state.isNot(\"otherwiki\"));\n                will(returnValue(\"wiki1\"));\n            allowing(mockDocumentAccessBridge).getCurrentUser(); when(state.isNot(\"otherwiki\"));\n                will(returnValue(\"user\")); \n        }});\n        \n        // Register in the current wiki.\n        ComponentManager wikiCM = getComponentManager().lookup(ComponentManager.class, \"wiki\");\n        DefaultComponentDescriptor<Role> cd = new DefaultComponentDescriptor<Role>();\n        cd.setRole(Role.class);\n        cd.setImplementation(RoleImpl.class);\n        wikiCM.registerComponent(cd);\n\n        // Verify we can lookup the component from the context CM.\n        ComponentManager contextCM = getComponentManager().lookup(ComponentManager.class, \"context\");\n        Assert.assertNotNull(contextCM.lookup(Role.class));\n        \n        // Now verify that we cannot look it up anymore if there's another wiki in the context\n        state.become(\"otherwiki\");\n        mockery.checking(new Expectations() {{\n            oneOf(mockDocumentAccessBridge).getCurrentUser(); will(returnValue(\"user\")); \n            allowing(mockDocumentAccessBridge).getCurrentWiki(); will(returnValue(\"wiki2\"));\n        }});\n        try {\n            contextCM.lookup(Role.class);\n            Assert.fail(\"Should have raised an exception\");\n        } catch (ComponentLookupException expected) {\n            // No need to assert the message, we just want to ensure an exception is raised.\n        }        \n    }","id":4323,"modified_method":"@Test\n    public void testRegisterComponentInWikiComponentManager() throws Exception\n    {\n        final States state  = getMockery().states(\"test\");\n\n        getMockery().checking(new Expectations() {{\n            allowing(mockDocumentAccessBridge).getCurrentWiki();  when(state.isNot(\"otherwiki\"));\n                will(returnValue(\"wiki1\"));\n            allowing(mockDocumentAccessBridge).getCurrentUser(); when(state.isNot(\"otherwiki\"));\n                will(returnValue(\"user\")); \n        }});\n        \n        // Register in the current wiki.\n        ComponentManager wikiCM = getComponentManager().lookup(ComponentManager.class, \"wiki\");\n        DefaultComponentDescriptor<Role> cd = new DefaultComponentDescriptor<Role>();\n        cd.setRole(Role.class);\n        cd.setImplementation(RoleImpl.class);\n        wikiCM.registerComponent(cd);\n\n        // Verify we can lookup the component from the context CM.\n        ComponentManager contextCM = getComponentManager().lookup(ComponentManager.class, \"context\");\n        Assert.assertNotNull(contextCM.lookup(Role.class));\n        \n        // Now verify that we cannot look it up anymore if there's another wiki in the context\n        state.become(\"otherwiki\");\n        getMockery().checking(new Expectations() {{\n            oneOf(mockDocumentAccessBridge).getCurrentUser(); will(returnValue(\"user\")); \n            allowing(mockDocumentAccessBridge).getCurrentWiki(); will(returnValue(\"wiki2\"));\n        }});\n        try {\n            contextCM.lookup(Role.class);\n            Assert.fail(\"Should have raised an exception\");\n        } catch (ComponentLookupException expected) {\n            // No need to assert the message, we just want to ensure an exception is raised.\n        }        \n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * @see AbstractComponentTestCase#registerComponents()\n     */\n    @Override\n    protected void registerComponents() throws Exception\n    {\n        super.registerComponents();\n\n        // Document Access Bridge Mock\n        mockDocumentAccessBridge = mockery.mock(DocumentAccessBridge.class);\n        DefaultComponentDescriptor<DocumentAccessBridge> descriptorDAB =\n            new DefaultComponentDescriptor<DocumentAccessBridge>();\n        descriptorDAB.setRole(DocumentAccessBridge.class);\n        getComponentManager().registerComponent(descriptorDAB, mockDocumentAccessBridge);\n    }","id":4324,"modified_method":"/**\n     * {@inheritDoc}\n     * @see AbstractComponentTestCase#registerComponents()\n     */\n    @Override\n    protected void registerComponents() throws Exception\n    {\n        super.registerComponents();\n\n        // Document Access Bridge Mock\n        this.mockDocumentAccessBridge = registerMockComponent(DocumentAccessBridge.class);\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testRegisterComponentInRootComponentManager() throws Exception\n    {\n        final States state  = mockery.states(\"test\");\n\n        mockery.checking(new Expectations() {{\n            allowing(mockDocumentAccessBridge).getCurrentWiki();  when(state.isNot(\"otherwiki\"));\n                will(returnValue(\"wiki\"));\n            allowing(mockDocumentAccessBridge).getCurrentUser(); when(state.isNot(\"otherwiki\"));\n                will(returnValue(\"user\")); \n        }});\n        \n        // Register in the current wiki.\n        DefaultComponentDescriptor<Role> cd = new DefaultComponentDescriptor<Role>();\n        cd.setRole(Role.class);\n        cd.setImplementation(RoleImpl.class);\n        getComponentManager().registerComponent(cd);\n\n        // Verify we can lookup the component from the context CM.\n        ComponentManager contextCM = getComponentManager().lookup(ComponentManager.class, \"context\");\n        Assert.assertNotNull(contextCM.lookup(Role.class));\n    }","id":4325,"modified_method":"@Test\n    public void testRegisterComponentInRootComponentManager() throws Exception\n    {\n        final States state  = getMockery().states(\"test\");\n\n        getMockery().checking(new Expectations() {{\n            allowing(mockDocumentAccessBridge).getCurrentWiki();  when(state.isNot(\"otherwiki\"));\n                will(returnValue(\"wiki\"));\n            allowing(mockDocumentAccessBridge).getCurrentUser(); when(state.isNot(\"otherwiki\"));\n                will(returnValue(\"user\")); \n        }});\n        \n        // Register in the current wiki.\n        DefaultComponentDescriptor<Role> cd = new DefaultComponentDescriptor<Role>();\n        cd.setRole(Role.class);\n        cd.setImplementation(RoleImpl.class);\n        getComponentManager().registerComponent(cd);\n\n        // Verify we can lookup the component from the context CM.\n        ComponentManager contextCM = getComponentManager().lookup(ComponentManager.class, \"context\");\n        Assert.assertNotNull(contextCM.lookup(Role.class));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testRegisterComponentInUserComponentManager() throws Exception\n    {\n        final States state  = mockery.states(\"test\");\n\n        mockery.checking(new Expectations() {{\n            allowing(mockDocumentAccessBridge).getCurrentUser(); when(state.isNot(\"otheruser\"));\n                will(returnValue(\"user1\")); \n        }});\n        \n        ComponentManager userCM = getComponentManager().lookup(ComponentManager.class, \"user\");\n        DefaultComponentDescriptor<Role> cd = new DefaultComponentDescriptor<Role>();\n        cd.setRole(Role.class);\n        cd.setImplementation(RoleImpl.class);\n\n        // Register component for the current user \n        userCM.registerComponent(cd);\n\n        // Verify we can lookup the component from the Context CM\n        ComponentManager contextCM = getComponentManager().lookup(ComponentManager.class, \"context\");\n        Assert.assertNotNull(contextCM.lookup(Role.class));\n        \n        // Now verify that we cannot look it up anymore if there's another user in the context\n        state.become(\"otheruser\");\n        mockery.checking(new Expectations() {{\n            oneOf(mockDocumentAccessBridge).getCurrentUser(); will(returnValue(\"user2\")); \n            oneOf(mockDocumentAccessBridge).getCurrentWiki(); will(returnValue(\"wiki\"));\n        }});\n\n        try {\n            contextCM.lookup(Role.class);\n            Assert.fail(\"Should have raised an exception\");\n        } catch (ComponentLookupException expected) {\n            // No need to assert the message, we just want to ensure an exception is raised.\n        }\n    }","id":4326,"modified_method":"@Test\n    public void testRegisterComponentInUserComponentManager() throws Exception\n    {\n        final States state  = getMockery().states(\"test\");\n\n        getMockery().checking(new Expectations() {{\n            allowing(mockDocumentAccessBridge).getCurrentUser(); when(state.isNot(\"otheruser\"));\n                will(returnValue(\"user1\")); \n        }});\n        \n        ComponentManager userCM = getComponentManager().lookup(ComponentManager.class, \"user\");\n        DefaultComponentDescriptor<Role> cd = new DefaultComponentDescriptor<Role>();\n        cd.setRole(Role.class);\n        cd.setImplementation(RoleImpl.class);\n\n        // Register component for the current user \n        userCM.registerComponent(cd);\n\n        // Verify we can lookup the component from the Context CM\n        ComponentManager contextCM = getComponentManager().lookup(ComponentManager.class, \"context\");\n        Assert.assertNotNull(contextCM.lookup(Role.class));\n        \n        // Now verify that we cannot look it up anymore if there's another user in the context\n        state.become(\"otheruser\");\n        getMockery().checking(new Expectations() {{\n            oneOf(mockDocumentAccessBridge).getCurrentUser(); will(returnValue(\"user2\")); \n            oneOf(mockDocumentAccessBridge).getCurrentWiki(); will(returnValue(\"wiki\"));\n        }});\n\n        try {\n            contextCM.lookup(Role.class);\n            Assert.fail(\"Should have raised an exception\");\n        } catch (ComponentLookupException expected) {\n            // No need to assert the message, we just want to ensure an exception is raised.\n        }\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testGetterWhenTargetIsNonTypedObjectProperty() throws Exception\n    {\n        mockery.checking(new Expectations()\n        {\n            {\n                // target will be parsed as document, because document is the default\n                oneOf(dabMock).getDocumentContent(\"wiki:Space\\\\.Page^XWiki\\\\.Class.property\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"wiki:Space\\\\.Page^XWiki\\\\.Class.property\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"wiki:Space.Page^XWiki.Class.property\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","id":4327,"modified_method":"@Test\n    public void testGetterWhenTargetIsNonTypedObjectProperty() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                // target will be parsed as document, because document is the default\n                oneOf(dabMock).getDocumentContent(\"wiki:Space\\\\.Page^XWiki\\\\.Class.property\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"wiki:Space\\\\.Page^XWiki\\\\.Class.property\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"wiki:Space.Page^XWiki.Class.property\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testGetterWhenTargetIsTypedDefaultObjectProperty() throws Exception\n    {\n        mockery.checking(new Expectations()\n        {\n            {\n                oneOf(dabMock).getProperty(\"wiki:Space.Page\", \"XWiki.Class\", \"property\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"wiki:Space.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"OBJECT_PROPERTY://wiki:Space.Page^XWiki.Class.property\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","id":4328,"modified_method":"@Test\n    public void testGetterWhenTargetIsTypedDefaultObjectProperty() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(dabMock).getProperty(\"wiki:Space.Page\", \"XWiki.Class\", \"property\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"wiki:Space.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"OBJECT_PROPERTY://wiki:Space.Page^XWiki.Class.property\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testGettersWhenTargetIsNonTypedRelativeDocument() throws Exception\n    {\n        mockery.checking(new Expectations()\n        {\n            {\n                // default resolver should be used\n                oneOf(dabMock).getDocumentContent(\"xwiki:Space.Page\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"xwiki:Space.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"Space.Page\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","id":4329,"modified_method":"@Test\n    public void testGettersWhenTargetIsNonTypedRelativeDocument() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                // default resolver should be used\n                oneOf(dabMock).getDocumentContent(\"xwiki:Space.Page\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"xwiki:Space.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"Space.Page\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.test.AbstractComponentTestCase#registerComponents()\n     */\n    @Override\n    protected void registerComponents() throws Exception\n    {\n        super.registerComponents();\n\n        // register the dab\n        dabMock = mockery.mock(DocumentAccessBridge.class);\n        DefaultComponentDescriptor<DocumentAccessBridge> descriptor =\n            new DefaultComponentDescriptor<DocumentAccessBridge>();\n        descriptor.setRole(DocumentAccessBridge.class);\n        getComponentManager().registerComponent(descriptor, dabMock);\n    }","id":4330,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.test.AbstractComponentTestCase#registerComponents()\n     */\n    @Override\n    protected void registerComponents() throws Exception\n    {\n        super.registerComponents();\n\n        // register the dab\n        this.dabMock = registerMockComponent(DocumentAccessBridge.class);\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testGetterWhenTargetIsTypedObjectPropertyInRelativeDocument() throws Exception\n    {\n        mockery.checking(new Expectations()\n        {\n            {\n                oneOf(dabMock).getProperty(\"xwiki:Main.Page\", \"XWiki.Class\", \"property\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"xwiki:Main.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"OBJECT_PROPERTY://Page^XWiki.Class.property\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","id":4331,"modified_method":"@Test\n    public void testGetterWhenTargetIsTypedObjectPropertyInRelativeDocument() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(dabMock).getProperty(\"xwiki:Main.Page\", \"XWiki.Class\", \"property\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"xwiki:Main.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"OBJECT_PROPERTY://Page^XWiki.Class.property\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testGettersWhenTargetIsTypedRelativeDocument() throws Exception\n    {\n        mockery.checking(new Expectations()\n        {\n            {\n                // default resolver should be used\n                oneOf(dabMock).getDocumentContent(\"xwiki:Space.Page\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"xwiki:Space.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"DOCUMENT://Space.Page\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","id":4332,"modified_method":"@Test\n    public void testGettersWhenTargetIsTypedRelativeDocument() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                // default resolver should be used\n                oneOf(dabMock).getDocumentContent(\"xwiki:Space.Page\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"xwiki:Space.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"DOCUMENT://Space.Page\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testGetterWhenTargetIsTypedIndexedObjectProperty() throws Exception\n    {\n        mockery.checking(new Expectations()\n        {\n            {\n                oneOf(dabMock).getProperty(\"wiki:Space.Page\", \"XWiki.Class\", 1, \"property\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"wiki:Space.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"OBJECT_PROPERTY://wiki:Space.Page^XWiki.Class[1].property\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","id":4333,"modified_method":"@Test\n    public void testGetterWhenTargetIsTypedIndexedObjectProperty() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(dabMock).getProperty(\"wiki:Space.Page\", \"XWiki.Class\", 1, \"property\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"wiki:Space.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"OBJECT_PROPERTY://wiki:Space.Page^XWiki.Class[1].property\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testGettersWhenTargetIsEmptyString() throws Exception\n    {\n        mockery.checking(new Expectations()\n        {\n            {\n                // default resolver should be used. Note that this will fail if default values change, not very well\n                // isolated\n                oneOf(dabMock).getDocumentContent(\"xwiki:Main.WebHome\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"xwiki:Main.WebHome\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        // expect source ref to be used as is, as it doesn't parse to something acceptable\n        String reference = \"\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","id":4334,"modified_method":"@Test\n    public void testGettersWhenTargetIsEmptyString() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                // default resolver should be used. Note that this will fail if default values change, not very well\n                // isolated\n                oneOf(dabMock).getDocumentContent(\"xwiki:Main.WebHome\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"xwiki:Main.WebHome\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        // expect source ref to be used as is, as it doesn't parse to something acceptable\n        String reference = \"\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testGetterWhenTargetIsTypedIndexedRelativeObjectProperty() throws Exception\n    {\n        mockery.checking(new Expectations()\n        {\n            {\n                // this will fail if defaults fail, not very well isolated\n                oneOf(dabMock).getProperty(\"xwiki:Main.WebHome\", \"Classes.Class\", 3, \"property\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"xwiki:Main.WebHome\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"OBJECT_PROPERTY://Classes.Class[3].property\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","id":4335,"modified_method":"@Test\n    public void testGetterWhenTargetIsTypedIndexedRelativeObjectProperty() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                // this will fail if defaults fail, not very well isolated\n                oneOf(dabMock).getProperty(\"xwiki:Main.WebHome\", \"Classes.Class\", 3, \"property\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"xwiki:Main.WebHome\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"OBJECT_PROPERTY://Classes.Class[3].property\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testGettersWhenTargetIsTypedSpace() throws Exception\n    {\n        mockery.checking(new Expectations()\n        {\n            {\n                // default resolver should be used\n                oneOf(dabMock).getDocumentContent(\"SPACE://wiki:Space\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"SPACE://wiki:Space\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        // expect source ref to be used as is, as it doesn't parse to something acceptable\n        String reference = \"SPACE://wiki:Space\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","id":4336,"modified_method":"@Test\n    public void testGettersWhenTargetIsTypedSpace() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                // default resolver should be used\n                oneOf(dabMock).getDocumentContent(\"SPACE://wiki:Space\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"SPACE://wiki:Space\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        // expect source ref to be used as is, as it doesn't parse to something acceptable\n        String reference = \"SPACE://wiki:Space\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testGettersWhenTargetIsTypedDocument() throws Exception\n    {\n        mockery.checking(new Expectations()\n        {\n            {\n                oneOf(dabMock).getDocumentContent(\"wiki:Space.Page\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"wiki:Space.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"DOCUMENT://wiki:Space.Page\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","id":4337,"modified_method":"@Test\n    public void testGettersWhenTargetIsTypedDocument() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(dabMock).getDocumentContent(\"wiki:Space.Page\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"wiki:Space.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"DOCUMENT://wiki:Space.Page\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testGettersWhenTargetIsNonTypedDocument() throws Exception\n    {\n        mockery.checking(new Expectations()\n        {\n            {\n                oneOf(dabMock).getDocumentContent(\"wiki:Space.Page\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"wiki:Space.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"wiki:Space.Page\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","id":4338,"modified_method":"@Test\n    public void testGettersWhenTargetIsNonTypedDocument() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(dabMock).getDocumentContent(\"wiki:Space.Page\");\n                will(returnValue(\"defcontent\"));\n                oneOf(dabMock).getDocumentSyntaxId(\"wiki:Space.Page\");\n                will(returnValue(\"xwiki/2.0\"));\n            }\n        });\n\n        String reference = \"wiki:Space.Page\";\n        assertEquals(\"defcontent\", ioTargetService.getSource(reference));\n        assertEquals(\"xwiki/2.0\", ioTargetService.getSourceSyntax(reference));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     */\n    @Before\n    public void setUp() throws Exception\n    {\n        super.setUp();\n\n        this.presentationBuilder = getComponentManager().lookup(PresentationBuilder.class);\n        this.officeManager = getComponentManager().lookup(OpenOfficeManager.class);\n        \n        // TODO : Remove when DefaultPresentationBuilder#buildPresentationXDOM() is fixed\n        this.mockVelocityMacro = this.mockery.mock(Macro.class);\n        DefaultComponentDescriptor<Macro> descriptor = new DefaultComponentDescriptor<Macro>();\n        descriptor.setRole(Macro.class);\n        descriptor.setRoleHint(\"velocity\");\n        getComponentManager().registerComponent(descriptor, this.mockVelocityMacro);\n    }","id":4339,"modified_method":"/**\n     * {@inheritDoc}\n     */\n    @Before\n    public void setUp() throws Exception\n    {\n        super.setUp();\n\n        this.presentationBuilder = getComponentManager().lookup(PresentationBuilder.class);\n        this.officeManager = getComponentManager().lookup(OpenOfficeManager.class);\n        \n        // TODO : Remove when DefaultPresentationBuilder#buildPresentationXDOM() is fixed\n        this.mockVelocityMacro = registerMockComponent(Macro.class, \"velocity\");\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Test presentation {@link XDOMOfficeDocument} building.\n     * \n     * @throws Exception\n     */\n    @org.junit.Test\n    public void testPresentationBuilding() throws  Exception\n    {\n        // Create & register a mock document converter to by-pass openoffice server.\n        final InputStream mockOfficeFileStream = new ByteArrayInputStream(new byte[1024]);\n        final Map<String, InputStream> mockInput = new HashMap<String, InputStream>();\n        mockInput.put(\"input.ppt\", mockOfficeFileStream);\n        final Map<String, byte[]> mockOutput = new HashMap<String, byte[]>();\n        mockOutput.put(\"output.html\", \"<html><head><title><\/tile><\/head><body><p>Slide1<\/p><\/body><\/html>\".getBytes());\n\n        final OpenOfficeConverter mockDocumentConverter = this.mockery.mock(OpenOfficeConverter.class);\n        final EntityReferenceSerializer mockSerializer = this.mockery.mock(EntityReferenceSerializer.class);\n        final DocumentReference reference = new DocumentReference(\"xwiki\", \"Main\", \"Test\");\n        this.mockery.checking(new Expectations() {{\n            oneOf(mockOpenOfficeManager).getConverter();\n            will(returnValue(mockDocumentConverter));\n            oneOf(mockDocumentConverter).convert(mockInput, \"input.ppt\", \"output.html\");\n            will(returnValue(mockOutput));\n            oneOf(mockSerializer).serialize(with(aNonNull(DocumentReference.class)), with(any(Object[].class)));\n            will(returnValue(\"xwiki:Main.Test\"));\n            // TODO : Remove when DefaultPresentationBuilder#buildPresentationXDOM() is fixed\n            oneOf(mockVelocityMacro).execute(with(any(Object.class)), with(any(String.class)), with(any(MacroTransformationContext.class)));\n            will(returnValue(Arrays.<Block>asList(new WordBlock(\"presentationcontent\"))));\n        }});\n        ReflectionUtils.setFieldValue(presentationBuilder, \"serializer\", mockSerializer);\n\n        XDOMOfficeDocument presentation = presentationBuilder.build(mockOfficeFileStream, \"input.ppt\", reference);\n        Assert.assertNotNull(presentation.getContentDocument());\n        // Make sure provided XDOM is a final XDOM (transformations are executed)\n        // TODO : Remove when DefaultPresentationBuilder#buildPresentationXDOM() is fixed\n        Assert.assertSame(presentation.getContentDocument().getChildren().get(0).getClass(), MacroMarkerBlock.class);\n        Assert.assertEquals(1, presentation.getArtifacts().size());\n        Assert.assertTrue(presentation.getArtifacts().containsKey(\"presentation.zip\"));\n    }","id":4340,"modified_method":"/**\n     * Test presentation {@link XDOMOfficeDocument} building.\n     * \n     * @throws Exception\n     */\n    @org.junit.Test\n    public void testPresentationBuilding() throws  Exception\n    {\n        // Create & register a mock document converter to by-pass openoffice server.\n        final InputStream mockOfficeFileStream = new ByteArrayInputStream(new byte[1024]);\n        final Map<String, InputStream> mockInput = new HashMap<String, InputStream>();\n        mockInput.put(\"input.ppt\", mockOfficeFileStream);\n        final Map<String, byte[]> mockOutput = new HashMap<String, byte[]>();\n        mockOutput.put(\"output.html\", \"<html><head><title><\/tile><\/head><body><p>Slide1<\/p><\/body><\/html>\".getBytes());\n\n        final OpenOfficeConverter mockDocumentConverter = getMockery().mock(OpenOfficeConverter.class);\n        final EntityReferenceSerializer mockSerializer = getMockery().mock(EntityReferenceSerializer.class);\n        final DocumentReference reference = new DocumentReference(\"xwiki\", \"Main\", \"Test\");\n        getMockery().checking(new Expectations() {{\n            oneOf(mockOpenOfficeManager).getConverter();\n            will(returnValue(mockDocumentConverter));\n            oneOf(mockDocumentConverter).convert(mockInput, \"input.ppt\", \"output.html\");\n            will(returnValue(mockOutput));\n            oneOf(mockSerializer).serialize(with(aNonNull(DocumentReference.class)), with(any(Object[].class)));\n            will(returnValue(\"xwiki:Main.Test\"));\n            // TODO : Remove when DefaultPresentationBuilder#buildPresentationXDOM() is fixed\n            oneOf(mockVelocityMacro).execute(with(any(Object.class)), with(any(String.class)), with(any(MacroTransformationContext.class)));\n            will(returnValue(Arrays.<Block>asList(new WordBlock(\"presentationcontent\"))));\n        }});\n        ReflectionUtils.setFieldValue(presentationBuilder, \"serializer\", mockSerializer);\n\n        XDOMOfficeDocument presentation = presentationBuilder.build(mockOfficeFileStream, \"input.ppt\", reference);\n        Assert.assertNotNull(presentation.getContentDocument());\n        // Make sure provided XDOM is a final XDOM (transformations are executed)\n        // TODO : Remove when DefaultPresentationBuilder#buildPresentationXDOM() is fixed\n        Assert.assertSame(presentation.getContentDocument().getChildren().get(0).getClass(), MacroMarkerBlock.class);\n        Assert.assertEquals(1, presentation.getArtifacts().size());\n        Assert.assertTrue(presentation.getArtifacts().containsKey(\"presentation.zip\"));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Test {@link XDOMOfficeDocument} building.\n     * \n     * @throws Exception\n     */\n    @org.junit.Test\n    public void testXDOMOfficeDocumentBuilding() throws Exception\n    {\n        // Create & register a mock document converter to by-pass openoffice server.        \n        final InputStream mockOfficeFileStream = new ByteArrayInputStream(new byte[1024]);\n        final Map<String, InputStream> mockInput = new HashMap<String, InputStream>();\n        mockInput.put(\"input.doc\", mockOfficeFileStream);\n        final Map<String, byte[]> mockOutput = new HashMap<String, byte[]>();\n        mockOutput.put(\"output.html\",\n            \"<html><head><title><\/tile><\/head><body><p><strong>Hello There<\/strong><\/p><\/body><\/html>\".getBytes());\n\n        final OpenOfficeConverter mockDocumentConverter = this.mockery.mock(OpenOfficeConverter.class);\n        this.mockery.checking(new Expectations() {{\n            oneOf(mockOpenOfficeManager).getConverter();\n            will(returnValue(mockDocumentConverter));\n            allowing(mockDocumentConverter).convert(mockInput, \"input.doc\", \"output.html\");\n            will(returnValue(mockOutput));            \n        }});\n\n        // Create & register a mock document name serializer.\n        final DocumentReference documentReference = new DocumentReference(\"xwiki\", \"Main\", \"Test\");\n        final EntityReferenceSerializer referenceSerializer =\n            this.mockery.mock(EntityReferenceSerializer.class, \"test\");\n        this.mockery.checking(new Expectations() {{\n            allowing(mockDefaultStringEntityReferenceSerializer).serialize(documentReference);\n            will(returnValue(\"xwiki:Main.Test\"));\n        }});\n\n        XDOMOfficeDocument document =\n            xdomOfficeDocumentBuilder.build(mockOfficeFileStream, \"input.doc\", documentReference, true);\n        Assert.assertNotNull(document.getContentDocument());\n        Assert.assertEquals(\"**Hello There**\", document.getContentAsString());\n        Assert.assertEquals(0, document.getArtifacts().size());\n    }","id":4341,"modified_method":"/**\n     * Test {@link XDOMOfficeDocument} building.\n     * \n     * @throws Exception\n     */\n    @org.junit.Test\n    public void testXDOMOfficeDocumentBuilding() throws Exception\n    {\n        // Create & register a mock document converter to by-pass openoffice server.        \n        final InputStream mockOfficeFileStream = new ByteArrayInputStream(new byte[1024]);\n        final Map<String, InputStream> mockInput = new HashMap<String, InputStream>();\n        mockInput.put(\"input.doc\", mockOfficeFileStream);\n        final Map<String, byte[]> mockOutput = new HashMap<String, byte[]>();\n        mockOutput.put(\"output.html\",\n            \"<html><head><title><\/tile><\/head><body><p><strong>Hello There<\/strong><\/p><\/body><\/html>\".getBytes());\n\n        final OpenOfficeConverter mockDocumentConverter = getMockery().mock(OpenOfficeConverter.class);\n        getMockery().checking(new Expectations() {{\n            oneOf(mockOpenOfficeManager).getConverter();\n            will(returnValue(mockDocumentConverter));\n            allowing(mockDocumentConverter).convert(mockInput, \"input.doc\", \"output.html\");\n            will(returnValue(mockOutput));            \n        }});\n\n        // Create & register a mock document name serializer.\n        final DocumentReference documentReference = new DocumentReference(\"xwiki\", \"Main\", \"Test\");\n        final EntityReferenceSerializer referenceSerializer =\n            getMockery().mock(EntityReferenceSerializer.class, \"test\");\n        getMockery().checking(new Expectations() {{\n            allowing(mockDefaultStringEntityReferenceSerializer).serialize(documentReference);\n            will(returnValue(\"xwiki:Main.Test\"));\n        }});\n\n        XDOMOfficeDocument document =\n            xdomOfficeDocumentBuilder.build(mockOfficeFileStream, \"input.doc\", documentReference, true);\n        Assert.assertNotNull(document.getContentDocument());\n        Assert.assertEquals(\"**Hello There**\", document.getContentAsString());\n        Assert.assertEquals(0, document.getArtifacts().size());\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Test basic document splitting.\n     */\n    @org.junit.Test\n    public void testDocumentSplitting() throws Exception\n    {\n        // Create xwiki/2.0 document.\n        StringBuffer buffer = new StringBuffer();\n        buffer.append(\"=Heading1=\").append(\"\\n\");\n        buffer.append(\"Content\").append(\"\\n\");\n        buffer.append(\"==Heading11==\").append(\"\\n\");\n        buffer.append(\"Content\").append(\"\\n\");\n        buffer.append(\"==Heading12==\").append(\"\\n\");\n        buffer.append(\"Content\").append(\"\\n\");\n        buffer.append(\"=Heading2=\").append(\"\\n\");\n        buffer.append(\"Content\").append(\"\\n\");\n        XDOM xdom = xwikiSyntaxParser.parse(new StringReader(buffer.toString()));\n\n        // Create xdom office document.\n        XDOMOfficeDocument officeDocument =\n            new XDOMOfficeDocument(xdom, new HashMap<String, byte[]>(), getComponentManager());\n        final DocumentReference baseDocument = new DocumentReference(\"xwiki\", \"Test\", \"Test\");\n\n        // Add expectations to mock document name serializer. \n        this.mockery.checking(new Expectations() {{\n            allowing(mockCompactWikiStringEntityReferenceSerializer).serialize(baseDocument);\n            will(returnValue(\"Test.Test\"));\n            allowing(mockCompactWikiStringEntityReferenceSerializer).serialize(new DocumentReference(\"xwiki\", \"Test\", \"Heading1\"));\n            will(returnValue(\"Test.Heading1\"));\n            allowing(mockCompactWikiStringEntityReferenceSerializer).serialize(new DocumentReference(\"xwiki\", \"Test\", \"Heading11\"));\n            will(returnValue(\"Test.Heading11\"));\n            allowing(mockCompactWikiStringEntityReferenceSerializer).serialize(new DocumentReference(\"xwiki\", \"Test\", \"Heading12\"));\n            will(returnValue(\"Test.Heading12\"));\n            allowing(mockCompactWikiStringEntityReferenceSerializer).serialize(new DocumentReference(\"xwiki\", \"Test\", \"Heading2\"));\n            will(returnValue(\"Test.Heading2\"));\n        }});\n        \n        // Add expectations to mock document name factory.         \n        this.mockery.checking(new Expectations() {{\n            allowing(mockDocumentReferenceResolver).resolve(\"Test.Test\");\n            will(returnValue(new DocumentReference(\"xwiki\", \"Test\", \"Test\")));\n            allowing(mockDocumentReferenceResolver).resolve(\"Test.Heading1\");\n            will(returnValue(new DocumentReference(\"xwiki\", \"Test\", \"Heading1\")));\n            allowing(mockDocumentReferenceResolver).resolve(\"Test.Heading11\");\n            will(returnValue(new DocumentReference(\"xwiki\", \"Test\", \"Heading11\")));\n            allowing(mockDocumentReferenceResolver).resolve(\"Test.Heading12\");\n            will(returnValue(new DocumentReference(\"xwiki\", \"Test\", \"Heading12\")));\n            allowing(mockDocumentReferenceResolver).resolve(\"Test.Heading2\");\n            will(returnValue(new DocumentReference(\"xwiki\", \"Test\", \"Heading2\")));\n        }});\n        \n        // Add expectations to mock document access bridge.\n        this.mockery.checking(new Expectations() {{\n            allowing(mockDocumentAccessBridge).exists(\"Test.Heading1\");\n            will(returnValue(false));\n            allowing(mockDocumentAccessBridge).exists(\"Test.Heading11\");\n            will(returnValue(false));\n            allowing(mockDocumentAccessBridge).exists(\"Test.Heading12\");\n            will(returnValue(false));\n            allowing(mockDocumentAccessBridge).exists(\"Test.Heading2\");\n            will(returnValue(false));\n        }});\n\n        // Perform the split operation.\n        Map<TargetDocumentDescriptor, XDOMOfficeDocument> result =\n            officeDocumentSplitter.split(officeDocument, new int[] {1, 2, 3, 4, 5, 6}, \"headingNames\", baseDocument);\n        \n        // There should be five xdom office documents.\n        Assert.assertEquals(5, result.size());\n    }","id":4342,"modified_method":"/**\n     * Test basic document splitting.\n     */\n    @org.junit.Test\n    public void testDocumentSplitting() throws Exception\n    {\n        // Create xwiki/2.0 document.\n        StringBuffer buffer = new StringBuffer();\n        buffer.append(\"=Heading1=\").append(\"\\n\");\n        buffer.append(\"Content\").append(\"\\n\");\n        buffer.append(\"==Heading11==\").append(\"\\n\");\n        buffer.append(\"Content\").append(\"\\n\");\n        buffer.append(\"==Heading12==\").append(\"\\n\");\n        buffer.append(\"Content\").append(\"\\n\");\n        buffer.append(\"=Heading2=\").append(\"\\n\");\n        buffer.append(\"Content\").append(\"\\n\");\n        XDOM xdom = xwikiSyntaxParser.parse(new StringReader(buffer.toString()));\n\n        // Create xdom office document.\n        XDOMOfficeDocument officeDocument =\n            new XDOMOfficeDocument(xdom, new HashMap<String, byte[]>(), getComponentManager());\n        final DocumentReference baseDocument = new DocumentReference(\"xwiki\", \"Test\", \"Test\");\n\n        // Add expectations to mock document name serializer. \n        getMockery().checking(new Expectations() {{\n            allowing(mockCompactWikiStringEntityReferenceSerializer).serialize(baseDocument);\n            will(returnValue(\"Test.Test\"));\n            allowing(mockCompactWikiStringEntityReferenceSerializer).serialize(new DocumentReference(\"xwiki\", \"Test\", \"Heading1\"));\n            will(returnValue(\"Test.Heading1\"));\n            allowing(mockCompactWikiStringEntityReferenceSerializer).serialize(new DocumentReference(\"xwiki\", \"Test\", \"Heading11\"));\n            will(returnValue(\"Test.Heading11\"));\n            allowing(mockCompactWikiStringEntityReferenceSerializer).serialize(new DocumentReference(\"xwiki\", \"Test\", \"Heading12\"));\n            will(returnValue(\"Test.Heading12\"));\n            allowing(mockCompactWikiStringEntityReferenceSerializer).serialize(new DocumentReference(\"xwiki\", \"Test\", \"Heading2\"));\n            will(returnValue(\"Test.Heading2\"));\n        }});\n        \n        // Add expectations to mock document name factory.         \n        getMockery().checking(new Expectations() {{\n            allowing(mockDocumentReferenceResolver).resolve(\"Test.Test\");\n            will(returnValue(new DocumentReference(\"xwiki\", \"Test\", \"Test\")));\n            allowing(mockDocumentReferenceResolver).resolve(\"Test.Heading1\");\n            will(returnValue(new DocumentReference(\"xwiki\", \"Test\", \"Heading1\")));\n            allowing(mockDocumentReferenceResolver).resolve(\"Test.Heading11\");\n            will(returnValue(new DocumentReference(\"xwiki\", \"Test\", \"Heading11\")));\n            allowing(mockDocumentReferenceResolver).resolve(\"Test.Heading12\");\n            will(returnValue(new DocumentReference(\"xwiki\", \"Test\", \"Heading12\")));\n            allowing(mockDocumentReferenceResolver).resolve(\"Test.Heading2\");\n            will(returnValue(new DocumentReference(\"xwiki\", \"Test\", \"Heading2\")));\n        }});\n        \n        // Add expectations to mock document access bridge.\n        getMockery().checking(new Expectations() {{\n            allowing(mockDocumentAccessBridge).exists(\"Test.Heading1\");\n            will(returnValue(false));\n            allowing(mockDocumentAccessBridge).exists(\"Test.Heading11\");\n            will(returnValue(false));\n            allowing(mockDocumentAccessBridge).exists(\"Test.Heading12\");\n            will(returnValue(false));\n            allowing(mockDocumentAccessBridge).exists(\"Test.Heading2\");\n            will(returnValue(false));\n        }});\n\n        // Perform the split operation.\n        Map<TargetDocumentDescriptor, XDOMOfficeDocument> result =\n            officeDocumentSplitter.split(officeDocument, new int[] {1, 2, 3, 4, 5, 6}, \"headingNames\", baseDocument);\n        \n        // There should be five xdom office documents.\n        Assert.assertEquals(5, result.size());\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Tests {@link XHTMLOfficeDocument} building.\n     * \n     * @throws Exception\n     */\n    @org.junit.Test\n    public void testXHTMLOfficeDocumentBuilding() throws Exception\n    {\n        // Create & register a mock document converter to by-pass openoffice server.\n        final InputStream mockOfficeFileStream = new ByteArrayInputStream(new byte[1024]);\n        final Map<String, InputStream> mockInput = new HashMap<String, InputStream>();\n        mockInput.put(\"input.doc\", mockOfficeFileStream);\n        final Map<String, byte[]> mockOutput = new HashMap<String, byte[]>();\n        mockOutput.put(\"output.html\", \"<html><head><title><\/tile><\/head><body><\/body><\/html>\".getBytes());\n\n        final OpenOfficeConverter mockDocumentConverter = this.mockery.mock(OpenOfficeConverter.class);\n        this.mockery.checking(new Expectations() {{\n            oneOf(mockOpenOfficeManager).getConverter();\n            will(returnValue(mockDocumentConverter));\n            allowing(mockDocumentConverter).convert(mockInput, \"input.doc\", \"output.html\");\n            will(returnValue(mockOutput));\n        }});\n        ReflectionUtils.setFieldValue(officeManager, \"converter\", mockDocumentConverter);\n\n        // Create & register a mock entity reference serializer.\n        final DocumentReference documentReference = new DocumentReference(\"xwiki\", \"Main\", \"Test\");\n        this.mockery.checking(new Expectations() {{\n            allowing(mockDefaultStringEntityReferenceSerializer).serialize(documentReference);\n            will(returnValue(\"xwiki:Main.Test\"));\n        }});\n\n        XHTMLOfficeDocument document =\n            xhtmlDocumentBuilder.build(mockOfficeFileStream, \"input.doc\", documentReference, true);\n        Assert.assertNotNull(document.getContentDocument());\n        Assert.assertEquals(0, document.getArtifacts().size());\n    }","id":4343,"modified_method":"/**\n     * Tests {@link XHTMLOfficeDocument} building.\n     * \n     * @throws Exception\n     */\n    @org.junit.Test\n    public void testXHTMLOfficeDocumentBuilding() throws Exception\n    {\n        // Create & register a mock document converter to by-pass openoffice server.\n        final InputStream mockOfficeFileStream = new ByteArrayInputStream(new byte[1024]);\n        final Map<String, InputStream> mockInput = new HashMap<String, InputStream>();\n        mockInput.put(\"input.doc\", mockOfficeFileStream);\n        final Map<String, byte[]> mockOutput = new HashMap<String, byte[]>();\n        mockOutput.put(\"output.html\", \"<html><head><title><\/tile><\/head><body><\/body><\/html>\".getBytes());\n\n        final OpenOfficeConverter mockDocumentConverter = getMockery().mock(OpenOfficeConverter.class);\n        getMockery().checking(new Expectations() {{\n            oneOf(mockOpenOfficeManager).getConverter();\n            will(returnValue(mockDocumentConverter));\n            allowing(mockDocumentConverter).convert(mockInput, \"input.doc\", \"output.html\");\n            will(returnValue(mockOutput));\n        }});\n        ReflectionUtils.setFieldValue(officeManager, \"converter\", mockDocumentConverter);\n\n        // Create & register a mock entity reference serializer.\n        final DocumentReference documentReference = new DocumentReference(\"xwiki\", \"Main\", \"Test\");\n        getMockery().checking(new Expectations() {{\n            allowing(mockDefaultStringEntityReferenceSerializer).serialize(documentReference);\n            will(returnValue(\"xwiki:Main.Test\"));\n        }});\n\n        XHTMLOfficeDocument document =\n            xhtmlDocumentBuilder.build(mockOfficeFileStream, \"input.doc\", documentReference, true);\n        Assert.assertNotNull(document.getContentDocument());\n        Assert.assertEquals(0, document.getArtifacts().size());\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@code <img/>} links should be wrapped in xwiki specific html elements so that they are recognized by the XHTML\n     * parser.\n     */\n    @org.junit.Test\n    public void testImageWrapping() throws Exception\n    {\n        String html = header + \"<img src=\\\"foo.png\\\"/>\" + footer;\n        HTMLCleanerConfiguration configuration = this.openOfficeHTMLCleaner.getDefaultConfiguration();\n        configuration.setParameters(Collections.singletonMap(\"targetDocument\", \"Import.Test\"));\n\n        this.mockery.checking(new Expectations() {{\n            allowing(mockDAB).getAttachmentURL(\"Import.Test\", \"foo.png\");\n            will(returnValue(\"/bridge/foo.png\"));\n        }});\n        \n        Document doc = openOfficeHTMLCleaner.clean(new StringReader(html), configuration);\n\n        NodeList nodes = doc.getElementsByTagName(\"img\");\n        Assert.assertEquals(1, nodes.getLength());\n        Element image = (Element) nodes.item(0);\n        Node startComment = image.getPreviousSibling();\n        Node stopComment = image.getNextSibling();\n        Assert.assertEquals(Node.COMMENT_NODE, startComment.getNodeType());\n        Assert.assertTrue(startComment.getNodeValue().equals(\"startimage:foo.png\"));\n        Assert.assertEquals(\"/bridge/foo.png\", image.getAttribute(\"src\"));\n        Assert.assertEquals(Node.COMMENT_NODE, stopComment.getNodeType());\n        Assert.assertTrue(stopComment.getNodeValue().equals(\"stopimage\"));\n    }","id":4344,"modified_method":"/**\n     * {@code <img/>} links should be wrapped in xwiki specific html elements so that they are recognized by the XHTML\n     * parser.\n     */\n    @org.junit.Test\n    public void testImageWrapping() throws Exception\n    {\n        String html = header + \"<img src=\\\"foo.png\\\"/>\" + footer;\n        HTMLCleanerConfiguration configuration = this.openOfficeHTMLCleaner.getDefaultConfiguration();\n        configuration.setParameters(Collections.singletonMap(\"targetDocument\", \"Import.Test\"));\n\n        getMockery().checking(new Expectations() {{\n            allowing(mockDAB).getAttachmentURL(\"Import.Test\", \"foo.png\");\n            will(returnValue(\"/bridge/foo.png\"));\n        }});\n        \n        Document doc = openOfficeHTMLCleaner.clean(new StringReader(html), configuration);\n\n        NodeList nodes = doc.getElementsByTagName(\"img\");\n        Assert.assertEquals(1, nodes.getLength());\n        Element image = (Element) nodes.item(0);\n        Node startComment = image.getPreviousSibling();\n        Node stopComment = image.getNextSibling();\n        Assert.assertEquals(Node.COMMENT_NODE, startComment.getNodeType());\n        Assert.assertTrue(startComment.getNodeValue().equals(\"startimage:foo.png\"));\n        Assert.assertEquals(\"/bridge/foo.png\", image.getAttribute(\"src\"));\n        Assert.assertEquals(Node.COMMENT_NODE, stopComment.getNodeType());\n        Assert.assertTrue(stopComment.getNodeValue().equals(\"stopimage\"));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Sometimes images are used inside links. In such cases, both the html link and the image need to be wrapped\n     * properly.\n     */\n    @org.junit.Test\n    public void testCompoundImageLinkWrapping()\n    {\n        String html = header + \"<a href=\\\"http://www.xwiki.org\\\"><img src=\\\"foo.png\\\"/><\/a>\" + footer;\n        HTMLCleanerConfiguration configuration = this.openOfficeHTMLCleaner.getDefaultConfiguration();\n        configuration.setParameters(Collections.singletonMap(\"targetDocument\", \"Import.Test\"));\n\n        this.mockery.checking(new Expectations() {{\n            allowing(mockDAB).getAttachmentURL(\"Import.Test\", \"foo.png\");\n            will(returnValue(\"/bridge/foo.png\"));\n        }});\n        \n        Document doc = openOfficeHTMLCleaner.clean(new StringReader(html), configuration);\n\n        NodeList nodes = doc.getElementsByTagName(\"img\");\n        Assert.assertEquals(1, nodes.getLength());\n        Element image = (Element) nodes.item(0);\n        Node startImageComment = image.getPreviousSibling();\n        Node stopImageComment = image.getNextSibling();\n        Assert.assertEquals(Node.COMMENT_NODE, startImageComment.getNodeType());\n        Assert.assertTrue(startImageComment.getNodeValue().equals(\"startimage:foo.png\"));\n        Assert.assertEquals(\"/bridge/foo.png\", image.getAttribute(\"src\"));\n        Assert.assertEquals(Node.COMMENT_NODE, stopImageComment.getNodeType());\n        Assert.assertTrue(stopImageComment.getNodeValue().equals(\"stopimage\"));\n        Element link = (Element) image.getParentNode();\n        Assert.assertEquals(\"a\", link.getNodeName());\n        Assert.assertEquals(\"http://www.xwiki.org\", link.getAttribute(\"href\"));\n        Element span = (Element) link.getParentNode();\n        Assert.assertEquals(\"span\", span.getNodeName());\n        Assert.assertEquals(\"wikiexternallink\", span.getAttribute(\"class\"));\n        Node startLinkComment = span.getPreviousSibling();\n        Assert.assertEquals(Node.COMMENT_NODE, startLinkComment.getNodeType());\n        Assert.assertTrue(startLinkComment.getNodeValue().startsWith(\"startwikilink\"));\n        Node stopLinkComment = span.getNextSibling();\n        Assert.assertEquals(Node.COMMENT_NODE, stopLinkComment.getNodeType());\n        Assert.assertTrue(stopLinkComment.getNodeValue().startsWith(\"stopwikilink\"));\n    }","id":4345,"modified_method":"/**\n     * Sometimes images are used inside links. In such cases, both the html link and the image need to be wrapped\n     * properly.\n     */\n    @org.junit.Test\n    public void testCompoundImageLinkWrapping()\n    {\n        String html = header + \"<a href=\\\"http://www.xwiki.org\\\"><img src=\\\"foo.png\\\"/><\/a>\" + footer;\n        HTMLCleanerConfiguration configuration = this.openOfficeHTMLCleaner.getDefaultConfiguration();\n        configuration.setParameters(Collections.singletonMap(\"targetDocument\", \"Import.Test\"));\n\n        getMockery().checking(new Expectations() {{\n            allowing(mockDAB).getAttachmentURL(\"Import.Test\", \"foo.png\");\n            will(returnValue(\"/bridge/foo.png\"));\n        }});\n        \n        Document doc = openOfficeHTMLCleaner.clean(new StringReader(html), configuration);\n\n        NodeList nodes = doc.getElementsByTagName(\"img\");\n        Assert.assertEquals(1, nodes.getLength());\n        Element image = (Element) nodes.item(0);\n        Node startImageComment = image.getPreviousSibling();\n        Node stopImageComment = image.getNextSibling();\n        Assert.assertEquals(Node.COMMENT_NODE, startImageComment.getNodeType());\n        Assert.assertTrue(startImageComment.getNodeValue().equals(\"startimage:foo.png\"));\n        Assert.assertEquals(\"/bridge/foo.png\", image.getAttribute(\"src\"));\n        Assert.assertEquals(Node.COMMENT_NODE, stopImageComment.getNodeType());\n        Assert.assertTrue(stopImageComment.getNodeValue().equals(\"stopimage\"));\n        Element link = (Element) image.getParentNode();\n        Assert.assertEquals(\"a\", link.getNodeName());\n        Assert.assertEquals(\"http://www.xwiki.org\", link.getAttribute(\"href\"));\n        Element span = (Element) link.getParentNode();\n        Assert.assertEquals(\"span\", span.getNodeName());\n        Assert.assertEquals(\"wikiexternallink\", span.getAttribute(\"class\"));\n        Node startLinkComment = span.getPreviousSibling();\n        Assert.assertEquals(Node.COMMENT_NODE, startLinkComment.getNodeType());\n        Assert.assertTrue(startLinkComment.getNodeValue().startsWith(\"startwikilink\"));\n        Node stopLinkComment = span.getNextSibling();\n        Assert.assertEquals(Node.COMMENT_NODE, stopLinkComment.getNodeType());\n        Assert.assertTrue(stopLinkComment.getNodeValue().startsWith(\"stopwikilink\"));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * OpenOffice 3.2 server generates relative paths for embedded images. These relative paths should be cleaned and\n     * the image name extracted.\n     */\n    @org.junit.Test\n    public void testRelativePathCleaning()\n    {\n        String html = header + \"<img src=\\\"../../some/path/foo.png\\\"/>\" + footer;\n        HTMLCleanerConfiguration configuration = this.openOfficeHTMLCleaner.getDefaultConfiguration();\n        configuration.setParameters(Collections.singletonMap(\"targetDocument\", \"Import.Test\"));\n\n        this.mockery.checking(new Expectations() {{\n            allowing(mockDAB).getAttachmentURL(\"Import.Test\", \"foo.png\");\n            will(returnValue(\"/bridge/foo.png\"));\n        }});\n        \n        Document doc = openOfficeHTMLCleaner.clean(new StringReader(html), configuration);\n        \n        NodeList nodes = doc.getElementsByTagName(\"img\");\n        Assert.assertEquals(1, nodes.getLength());\n        Element image = (Element) nodes.item(0);\n        Assert.assertEquals(\"/bridge/foo.png\", image.getAttribute(\"src\"));\n    }","id":4346,"modified_method":"/**\n     * OpenOffice 3.2 server generates relative paths for embedded images. These relative paths should be cleaned and\n     * the image name extracted.\n     */\n    @org.junit.Test\n    public void testRelativePathCleaning()\n    {\n        String html = header + \"<img src=\\\"../../some/path/foo.png\\\"/>\" + footer;\n        HTMLCleanerConfiguration configuration = this.openOfficeHTMLCleaner.getDefaultConfiguration();\n        configuration.setParameters(Collections.singletonMap(\"targetDocument\", \"Import.Test\"));\n\n        getMockery().checking(new Expectations() {{\n            allowing(mockDAB).getAttachmentURL(\"Import.Test\", \"foo.png\");\n            will(returnValue(\"/bridge/foo.png\"));\n        }});\n        \n        Document doc = openOfficeHTMLCleaner.clean(new StringReader(html), configuration);\n        \n        NodeList nodes = doc.getElementsByTagName(\"img\");\n        Assert.assertEquals(1, nodes.getLength());\n        Element image = (Element) nodes.item(0);\n        Assert.assertEquals(\"/bridge/foo.png\", image.getAttribute(\"src\"));\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Verify that resource located in a URI with an attachmentjar protocol can be found.\n     */\n    @Test\n    public void testFindResource() throws Exception\n    {\n        URIClassLoader cl =\n            new URIClassLoader(new URI[] {new URI(\"attachmentjar://page%40filename1\"), new URI(\"http://some/url\"),\n            new URI(\"attachmentjar://filename2\")}, getComponentManager().lookup(URLStreamHandlerFactory.class));\n\n        Assert.assertEquals(3, cl.getURLs().length);\n        Assert.assertEquals(\"attachmentjar://page%40filename1\", cl.getURLs()[0].toString());\n        Assert.assertEquals(\"http://some/url\", cl.getURLs()[1].toString());\n        Assert.assertEquals(\"attachmentjar://filename2\", cl.getURLs()[2].toString());\n\n        final AttachmentReference attachmentName1 = new AttachmentReference(\"filename1\",\n            new DocumentReference(\"wiki\", \"space\", \"page\"));\n        final AttachmentReference attachmentName2 = new AttachmentReference(\"filename2\",\n            new DocumentReference(\"wiki\", \"space\", \"page\"));\n\n        mockery.checking(new Expectations() {{\n            allowing(arf).resolve(\"page@filename1\"); will(returnValue(attachmentName1));\n            oneOf(dab).getAttachmentContent(attachmentName1);\n                will(returnValue(new ByteArrayInputStream(createJarFile(\"/nomatch\"))));\n            allowing(arf).resolve(\"filename2\"); will(returnValue(attachmentName2));\n            oneOf(dab).getAttachmentContent(attachmentName2);\n                will(returnValue(new ByteArrayInputStream(createJarFile(\"/something\"))));\n        }});\n\n        Assert.assertEquals(\"jar:attachmentjar://filename2!/something\", cl.findResource(\"/something\").toString());\n    }","id":4347,"modified_method":"/**\n     * Verify that resource located in a URI with an attachmentjar protocol can be found.\n     */\n    @Test\n    public void testFindResource() throws Exception\n    {\n        URIClassLoader cl =\n            new URIClassLoader(new URI[] {new URI(\"attachmentjar://page%40filename1\"), new URI(\"http://some/url\"),\n            new URI(\"attachmentjar://filename2\")}, getComponentManager().lookup(URLStreamHandlerFactory.class));\n\n        Assert.assertEquals(3, cl.getURLs().length);\n        Assert.assertEquals(\"attachmentjar://page%40filename1\", cl.getURLs()[0].toString());\n        Assert.assertEquals(\"http://some/url\", cl.getURLs()[1].toString());\n        Assert.assertEquals(\"attachmentjar://filename2\", cl.getURLs()[2].toString());\n\n        final AttachmentReference attachmentName1 = new AttachmentReference(\"filename1\",\n            new DocumentReference(\"wiki\", \"space\", \"page\"));\n        final AttachmentReference attachmentName2 = new AttachmentReference(\"filename2\",\n            new DocumentReference(\"wiki\", \"space\", \"page\"));\n\n        getMockery().checking(new Expectations() {{\n            allowing(arf).resolve(\"page@filename1\"); will(returnValue(attachmentName1));\n            oneOf(dab).getAttachmentContent(attachmentName1);\n                will(returnValue(new ByteArrayInputStream(createJarFile(\"/nomatch\"))));\n            allowing(arf).resolve(\"filename2\"); will(returnValue(attachmentName2));\n            oneOf(dab).getAttachmentContent(attachmentName2);\n                will(returnValue(new ByteArrayInputStream(createJarFile(\"/something\"))));\n        }});\n\n        Assert.assertEquals(\"jar:attachmentjar://filename2!/something\", cl.findResource(\"/something\").toString());\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    protected void registerComponents() throws Exception\n    {\n        super.registerComponents();\n\n        this.arf = this.mockery.mock(AttachmentReferenceResolver.class);\n        DefaultComponentDescriptor<AttachmentReferenceResolver> descriptorARF =\n            new DefaultComponentDescriptor<AttachmentReferenceResolver>();\n        descriptorARF.setRole(AttachmentReferenceResolver.class);\n        descriptorARF.setRoleHint(\"current\");\n        getComponentManager().registerComponent(descriptorARF, this.arf);\n\n        this.dab = this.mockery.mock(DocumentAccessBridge.class);\n        DefaultComponentDescriptor<DocumentAccessBridge> descriptorDAB =\n            new DefaultComponentDescriptor<DocumentAccessBridge>();\n        descriptorDAB.setRole(DocumentAccessBridge.class);\n        getComponentManager().registerComponent(descriptorDAB, this.dab);\n    }","id":4348,"modified_method":"@Override\n    protected void registerComponents() throws Exception\n    {\n        super.registerComponents();\n\n        this.arf = registerMockComponent(AttachmentReferenceResolver.class, \"current\");\n        this.dab = registerMockComponent(DocumentAccessBridge.class);\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * See XWIKI-5277 for details.\n     */\n    public void testGetRenderedContentCleansVelocityMacroCache() throws Exception\n    {\n        // Make sure we start not in the rendering engine since this is what happens in real: a document is\n        // called by a template thus outside of the rendering engine.\n        getContext().remove(\"isInRenderingEngine\");\n\n        // We display a text area since we know that rendering a text area will call getRenderedContent inside our top\n        // level getRenderedContent call, thus testing that velocity macros are not removed during nested calls to\n        // getRenderedContent.\n        this.baseObject.setLargeStringValue(\"area\", \"{{velocity}}#macro(testmacrocache)ok#end{{/velocity}}\");\n        this.document.setContent(\"{{velocity}}$doc.display(\\\"area\\\")#testmacrocache{{/velocity}}\");\n        this.document.setSyntax(Syntax.XWIKI_2_0);\n\n        // Register a Mock for the VelocityManager to bypass skin APIs that we would need to mock otherwise.\n        VelocityManager originalVelocityManager = getComponentManager().lookup(VelocityManager.class);\n        Mock mockVelocityManager = mock(VelocityManager.class);\n        DefaultComponentDescriptor<VelocityManager> descriptor = new DefaultComponentDescriptor<VelocityManager>();\n        descriptor.setRole(VelocityManager.class);\n\n        // We need to put the current doc in the Velocity Context since it's normally set before the rendering is\n        // called in the execution flow.\n        VelocityContext vcontext = originalVelocityManager.getVelocityContext();\n        vcontext.put(\"doc\", new Document(this.document, getContext()));\n\n        getComponentManager().registerComponent(descriptor, (VelocityManager) mockVelocityManager.proxy());\n        mockVelocityManager.stubs().method(\"getVelocityContext\").will(returnValue(vcontext));\n\n        VelocityEngine vengine =\n            getComponentManager().lookup(VelocityFactory.class).createVelocityEngine(\"default\", new Properties());\n        // Save the number of cached macro templates in the Velocity engine so that we can compare after the\n        // document is rendered.\n        JMXVelocityEngineMBean mbean = new JMXVelocityEngine(vengine);\n        int cachedMacroNamespaceSize = mbean.getTemplates().values().size();\n\n        mockVelocityManager.stubs().method(\"getVelocityEngine\").will(returnValue(vengine));\n\n        // $doc.display will ask for the syntax of the current document so we need to mock it.\n        this.mockXWiki.stubs().method(\"getCurrentContentSyntaxId\").with(eq(\"xwiki/2.0\"), ANYTHING).will(returnValue(\n            \"xwiki/2.0\"));\n\n        // Verify that the macro located inside the TextArea has been taken into account when executing the doc's\n        // content.\n        assertEquals(\"<p>ok<\/p>\", this.document.getRenderedContent(getContext()));\n\n        // Now verify that the Velocity Engine doesn't contain any more cached macro namespace to prove that\n        // getRenderedContent has correctly cleaned the Velocity macro cache.\n        assertEquals(cachedMacroNamespaceSize, mbean.getTemplates().values().size());\n    }","id":4349,"modified_method":"/**\n     * See XWIKI-5277 for details.\n     */\n    public void testGetRenderedContentCleansVelocityMacroCache() throws Exception\n    {\n        // Make sure we start not in the rendering engine since this is what happens in real: a document is\n        // called by a template thus outside of the rendering engine.\n        getContext().remove(\"isInRenderingEngine\");\n\n        // We display a text area since we know that rendering a text area will call getRenderedContent inside our top\n        // level getRenderedContent call, thus testing that velocity macros are not removed during nested calls to\n        // getRenderedContent.\n        this.baseObject.setLargeStringValue(\"area\", \"{{velocity}}#macro(testmacrocache)ok#end{{/velocity}}\");\n        this.document.setContent(\"{{velocity}}$doc.display(\\\"area\\\")#testmacrocache{{/velocity}}\");\n        this.document.setSyntax(Syntax.XWIKI_2_0);\n\n        // We need to put the current doc in the Velocity Context since it's normally set before the rendering is\n        // called in the execution flow.\n        VelocityManager originalVelocityManager = getComponentManager().lookup(VelocityManager.class);\n        VelocityContext vcontext = originalVelocityManager.getVelocityContext();\n        vcontext.put(\"doc\", new Document(this.document, getContext()));\n\n        // Register a Mock for the VelocityManager to bypass skin APIs that we would need to mock otherwise.\n        Mock mockVelocityManager = registerMockComponent(VelocityManager.class);\n        mockVelocityManager.stubs().method(\"getVelocityContext\").will(returnValue(vcontext));\n\n        VelocityEngine vengine =\n            getComponentManager().lookup(VelocityFactory.class).createVelocityEngine(\"default\", new Properties());\n        // Save the number of cached macro templates in the Velocity engine so that we can compare after the\n        // document is rendered.\n        JMXVelocityEngineMBean mbean = new JMXVelocityEngine(vengine);\n        int cachedMacroNamespaceSize = mbean.getTemplates().values().size();\n\n        mockVelocityManager.stubs().method(\"getVelocityEngine\").will(returnValue(vengine));\n\n        // $doc.display will ask for the syntax of the current document so we need to mock it.\n        this.mockXWiki.stubs().method(\"getCurrentContentSyntaxId\").with(eq(\"xwiki/2.0\"), ANYTHING).will(returnValue(\n            \"xwiki/2.0\"));\n\n        // Verify that the macro located inside the TextArea has been taken into account when executing the doc's\n        // content.\n        assertEquals(\"<p>ok<\/p>\", this.document.getRenderedContent(getContext()));\n\n        // Now verify that the Velocity Engine doesn't contain any more cached macro namespace to prove that\n        // getRenderedContent has correctly cleaned the Velocity macro cache.\n        assertEquals(cachedMacroNamespaceSize, mbean.getTemplates().values().size());\n    }","commit_id":"21711bf815184590d5d732ac7f4902a7b0d9b55d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public long updateAccountResourceCount(long accountId, ResourceType type) {\n        long count=0;\n\n        // this lock guards against the updates to user_vm, volume, snapshot, public _ip and template\n        // table as any resource creation precedes with the resourceLimitExceeded check which needs this lock too\n        if (m_resourceCountLock.lock(120)) { // 2 minutes\n            try {\n                switch (type) {\n                case user_vm:\n                    count = _userVmDao.countAllocatedVMsForAccount(accountId);\n                    break;\n                case volume:\n                    count = _volumeDao.countAllocatedVolumesForAccount(accountId);\n                    long virtualRouterCount = _vmDao.countAllocatedVirtualRoutersForAccount(accountId);\n                    count = count - virtualRouterCount;  // don't count the volumes of virtual router\n                    break;\n                case snapshot:\n                    count = _snapshotDao.countSnapshotsForAccount(accountId);\n                    break;\n                case public_ip:\n                    count = _ipAddressDao.countAllocatedIPsForAccount(accountId);\n                    break;\n                case template:\n                    count = _vmTemplateDao.countTemplatesForAccount(accountId);\n                    break;\n                }\n                _resourceCountDao.setAccountCount(accountId, type, count);\n            } catch (Exception e) {\n                throw new CloudRuntimeException(\"Failed to update resource count for account with Id\" + accountId);\n            } finally {\n                m_resourceCountLock.unlock();\n            }\n        }\n\n        return count;\n    }","id":4350,"modified_method":"@Override\n    public long updateAccountResourceCount(long accountId, ResourceType type) {\n        Long count=null;\n\n        // this lock guards against the updates to user_vm, volume, snapshot, public _ip and template table \n        // as any resource creation precedes with the resourceLimitExceeded check which needs this lock too\n        if (m_resourceCountLock.lock(120)) { // 2 minutes\n            try {\n                switch (type) {\n                case user_vm:\n                    count = _userVmDao.countAllocatedVMsForAccount(accountId);\n                    break;\n                case volume:\n                    count = _volumeDao.countAllocatedVolumesForAccount(accountId);\n                    long virtualRouterCount = _vmDao.countAllocatedVirtualRoutersForAccount(accountId);\n                    count = count - virtualRouterCount;  // don't count the volumes of virtual router\n                    break;\n                case snapshot:\n                    count = _snapshotDao.countSnapshotsForAccount(accountId);\n                    break;\n                case public_ip:\n                    count = _ipAddressDao.countAllocatedIPsForAccount(accountId);\n                    break;\n                case template:\n                    count = _vmTemplateDao.countTemplatesForAccount(accountId);\n                    break;\n                }\n                _resourceCountDao.setAccountCount(accountId, type, (count == null) ? 0 : count.longValue());\n            } catch (Exception e) {\n                throw new CloudRuntimeException(\"Failed to update resource count for account with Id\" + accountId);\n            } finally {\n                m_resourceCountLock.unlock();\n            }\n        }\n\n        return (count==null)?0:count.longValue();\n    }","commit_id":"00bd79ffeed99f503b9fe93ea584b48b9d9a0a82","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public ResourceCountVO updateResourceCount(UpdateResourceCountCmd cmd) throws InvalidParameterValueException, CloudRuntimeException, PermissionDeniedException{\n        Account currentAccount = UserContext.current().getCaller();\n        String accountName = cmd.getAccountName();\n        Long domainId = cmd.getDomainId();\n        Long accountId = null;\n        long count=0;\n\n        ResourceType resourceType;\n        Integer type = cmd.getResourceType();\n        try {\n            resourceType = ResourceType.values()[type];\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new InvalidParameterValueException(\"Please specify a valid resource type.\");\n        }\n\n        // Either a domainId or an account name with domainId must be passed in\n        if ((domainId == null) && (accountName == null)) {\n            throw new InvalidParameterValueException(\"Either a domainId or account name with domainId must be passed in.\");\n        }\n\n        if (domainId != null) {\n            DomainVO domain = _domainDao.findById(domainId);\n        \tif (domain == null) {\n                throw new InvalidParameterValueException(\"Please specify a valid domain ID.\");\n            } else if (domain.getRemoved() != null) {\n                throw new InvalidParameterValueException(\"Please specify an active domain.\");\n            }\n            checkAccess(currentAccount, domain);\n        }\n\n        if (accountName != null) {\n            if (domainId == null) {\n                throw new InvalidParameterValueException(\"domainId parameter is required if account name is specified\");\n            }\n            Account userAccount = _accountDao.findActiveAccount(accountName, domainId);\n            if (userAccount == null) {\n                throw new InvalidParameterValueException(\"unable to find account by name \" + accountName + \" in domain with id \" + domainId);\n            }\n            accountId = userAccount.getId();\n            checkAccess(currentAccount, userAccount);\n        }\n\n        try {\n            if (accountId != null) {\n                count = updateAccountResourceCount(accountId, resourceType);\n            } else {\n                count = updateDomainResourceCount(domainId, resourceType);\n            }\n        } catch (Exception e) {\n            throw new CloudRuntimeException(e.getMessage());\n        }\n\n        return new ResourceCountVO(accountId, domainId, resourceType, count);\n    }","id":4351,"modified_method":"@Override\n    public List<ResourceCountVO> updateResourceCount(UpdateResourceCountCmd cmd) throws InvalidParameterValueException, CloudRuntimeException, PermissionDeniedException{\n        Account callerAccount = UserContext.current().getCaller();\n        String accountName = cmd.getAccountName();\n        Long domainId = cmd.getDomainId();\n        Long accountId = null;\n        long count=0;\n        List<ResourceCountVO> counts = new ArrayList<ResourceCountVO>();\n        List<ResourceType> resourceTypes = new ArrayList<ResourceType>();\n\n        ResourceType resourceType=null;\n        Integer typeId = cmd.getResourceType();\n\n        if (typeId != null) {\n            try {\n                resourceType = ResourceType.values()[typeId];\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new InvalidParameterValueException(\"Please specify a valid resource type.\");\n            }\n        }\n\n        DomainVO domain = _domainDao.findById(domainId);\n        if (domain == null) {\n            throw new InvalidParameterValueException(\"Please specify a valid domain ID.\");\n        }\n        checkAccess(callerAccount, domain);\n\n        if (accountName != null) {\n            Account userAccount = _accountDao.findActiveAccount(accountName, domainId);\n            if (userAccount == null) {\n                throw new InvalidParameterValueException(\"unable to find account by name \" + accountName + \" in domain with id \" + domainId);\n            }\n            accountId = userAccount.getId();\n        }\n\n        try {\n            if (resourceType != null) {\n            \tresourceTypes.add(resourceType);\n            } else {\n            \tresourceTypes = Arrays.asList(ResourceType.values());\n            }\n\n            for (ResourceType type : resourceTypes) {\n                if (accountId != null) {\n                    count = updateAccountResourceCount(accountId, type);\n                    counts.add(new ResourceCountVO(accountId, domainId, type, count));\n                } else {\n                    count = updateDomainResourceCount(domainId, type);\n                    counts.add(new ResourceCountVO(accountId, domainId, type, count));\n                }\n            }\n        } catch (Exception e) {\n            throw new CloudRuntimeException(e.getMessage());\n        }\n\n        return counts;\n    }","commit_id":"00bd79ffeed99f503b9fe93ea584b48b9d9a0a82","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public long updateDomainResourceCount(long domainId, ResourceType type) {\n        long count=0;\n        Domain domain =_domainDao.findById(domainId);\n\n        if (m_resourceCountLock.lock(120)) { // 2 minutes\n            try {\n                List<DomainVO> domainChildren = _domainDao.findImmediateChildrenForParent(domain.getId());\n                // for each child domain update the resource count\n                for (DomainVO domainChild : domainChildren) {\n                    long domainCount = updateDomainResourceCount(domainChild.getId(), type);\n                    count = count + domainCount; // add the child domain count to parent domain count\n                }\n\n                List<AccountVO> accounts = _accountDao.findActiveAccountsForDomain(domain.getId());\n                for (AccountVO account : accounts) {\n                    long accountCount = updateAccountResourceCount(account.getId(), type);\n                    count = count + accountCount; // add account's resource count to parent domain count\n                }\n\n                _resourceCountDao.setDomainCount(domainId, type, count);\n           } catch (Exception e) {\n               throw new CloudRuntimeException(\"Failed to update resource count for domain with Id \" + domainId);\n           } finally {\n              m_resourceCountLock.unlock();\n           }\n       }\n\n       return count;\n    }","id":4352,"modified_method":"@Override\n    public long updateDomainResourceCount(long domainId, ResourceType type) {\n        long count=0;\n\n        if (m_resourceCountLock.lock(120)) { // 2 minutes\n            try {\n                List<DomainVO> domainChildren = _domainDao.findImmediateChildrenForParent(domainId);\n                // for each child domain update the resource count\n                for (DomainVO domainChild : domainChildren) {\n                    long domainCount = updateDomainResourceCount(domainChild.getId(), type);\n                    count = count + domainCount; // add the child domain count to parent domain count\n                }\n\n                List<AccountVO> accounts = _accountDao.findActiveAccountsForDomain(domainId);\n                for (AccountVO account : accounts) {\n                    long accountCount = updateAccountResourceCount(account.getId(), type);\n                    count = count + accountCount; // add account's resource count to parent domain count\n                }\n\n                _resourceCountDao.setDomainCount(domainId, type, count);\n           } catch (Exception e) {\n               throw new CloudRuntimeException(\"Failed to update resource count for domain with Id \" + domainId);\n           } finally {\n              m_resourceCountLock.unlock();\n           }\n       }\n\n       return count;\n    }","commit_id":"00bd79ffeed99f503b9fe93ea584b48b9d9a0a82","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n\tpublic void setAccountCount(long accountId, ResourceType type, long count) {\n\t\tResourceCountVO resourceCountVO = findByAccountIdAndType(accountId, type);\n\t\tif (resourceCountVO == null) {\n\t\t\tif (count != 0) {\n\t\t\t    resourceCountVO = new ResourceCountVO(accountId, null, type, count);\n\t\t\t    persist(resourceCountVO);\n\t\t\t}\n\t\t} else {\n\t\t\tresourceCountVO.setCount(count);\n\t\t\tupdate(resourceCountVO.getId(), resourceCountVO);\n\t\t}\n\t}","id":4353,"modified_method":"@Override\n\tpublic void setAccountCount(long accountId, ResourceType type, long count) {\n\t\tResourceCountVO resourceCountVO = findByAccountIdAndType(accountId, type);\n\t\tif (resourceCountVO == null) {\n\t\t\tif (count != 0) {\n\t\t\t    resourceCountVO = new ResourceCountVO(accountId, null, type, count);\n\t\t\t    persist(resourceCountVO);\n\t\t\t}\n\t\t} else {\n\t\t\tif (count != resourceCountVO.getCount()) {\n\t\t\t\tresourceCountVO.setCount(count);\n\t\t\t\tupdate(resourceCountVO.getId(), resourceCountVO);\n\t\t\t}\n\t\t}\n\t}","commit_id":"00bd79ffeed99f503b9fe93ea584b48b9d9a0a82","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n\tpublic void setDomainCount(long domainId, ResourceType type, long count) {\n\t\tResourceCountVO resourceCountVO = findByDomainIdAndType(domainId, type);\n\t\tif (resourceCountVO == null) {\n\t\t\tif (count != 0) {\n\t\t\t    resourceCountVO = new ResourceCountVO(null, domainId, type, count);\n\t\t\t    persist(resourceCountVO);\n\t\t    }\n\t\t} else {\n\t\t\tresourceCountVO.setCount(count);\n\t\t\tupdate(resourceCountVO.getId(), resourceCountVO);\n\t\t}\n\t}","id":4354,"modified_method":"@Override\n\tpublic void setDomainCount(long domainId, ResourceType type, long count) {\n\t\tResourceCountVO resourceCountVO = findByDomainIdAndType(domainId, type);\n\t\tif (resourceCountVO == null) {\n\t\t\tif (count != 0) {\n\t\t\t    resourceCountVO = new ResourceCountVO(null, domainId, type, count);\n\t\t\t    persist(resourceCountVO);\n\t\t    }\n\t\t} else {\n\t\t\tif (count != resourceCountVO.getCount()) {\n\t\t\t\tresourceCountVO.setCount(count);\n\t\t\t\tupdate(resourceCountVO.getId(), resourceCountVO);\n\t\t\t}\n\t\t}\n\t}","commit_id":"00bd79ffeed99f503b9fe93ea584b48b9d9a0a82","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void execute(){\n        ResourceCount result = _accountService.updateResourceCount(this);\n        if (result != null){\n            ResourceCountResponse response = _responseGenerator.createResourceCountResponse(result);\n            response.setResponseName(getCommandName());\n            this.setResponseObject(response);\n        } else {\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Failed to recalculate resource counts\");\n        }\n    }","id":4355,"modified_method":"@Override\n    public void execute(){\n    \tList<? extends ResourceCount> result = _accountService.updateResourceCount(this);\n\n        if ((result != null) && (result.size()>0)){\n            ListResponse<ResourceCountResponse> response = new ListResponse<ResourceCountResponse>();\n            List<ResourceCountResponse> countResponses = new ArrayList<ResourceCountResponse>();\n\n            for (ResourceCount count : result) {\n                ResourceCountResponse resourceCountResponse = _responseGenerator.createResourceCountResponse(count);\n                resourceCountResponse.setObjectName(\"resourcecount\");\n                countResponses.add(resourceCountResponse);\n            }\n\n            response.setResponses(countResponses);\n            response.setResponseName(getCommandName());\n            this.setResponseObject(response);\n        } else {\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Failed to recalculate resource counts\");\n        }\n    }","commit_id":"00bd79ffeed99f503b9fe93ea584b48b9d9a0a82","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n\tpublic Long countAllocatedVolumesForAccount(long accountId) {\n\t  \tSearchCriteria<Long> sc = CountByAccount.create();\n        sc.setParameters(\"account\", accountId);\n\t\tsc.setParameters(\"state\", new Object[] {Volume.State.Destroy, State.Expunging});\n        return customSearch(sc, null).get(0);\t\t\n\t}","id":4356,"modified_method":"@Override\n\tpublic Long countAllocatedVolumesForAccount(long accountId) {\n\t  \tSearchCriteria<Long> sc = CountByAccount.create();\n        sc.setParameters(\"account\", accountId);\n\t\tsc.setParameters(\"state\", Volume.State.Destroy);\n        return customSearch(sc, null).get(0);\t\t\n\t}","commit_id":"00bd79ffeed99f503b9fe93ea584b48b9d9a0a82","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public long updateAccountResourceCount(long accountId, ResourceType type) {\n        long count=0;\n\n        // this lock guards against the updates to user_vm, volume, snapshot, public _ip and template\n        // table as any resource creation precedes with the resourceLimitExceeded check which needs this lock too\n        if (m_resourceCountLock.lock(120)) { // 2 minutes\n            try {\n                switch (type) {\n                case user_vm:\n                    count = _userVmDao.countAllocatedVMsForAccount(accountId);\n                    break;\n                case volume:\n                    count = _volumeDao.countAllocatedVolumesForAccount(accountId);\n                    long virtualRouterCount = _vmDao.countAllocatedVirtualRoutersForAccount(accountId);\n                    count = count - virtualRouterCount;  // don't count the volumes of virtual router\n                    break;\n                case snapshot:\n                    count = _snapshotDao.countSnapshotsForAccount(accountId);\n                    break;\n                case public_ip:\n                    count = _ipAddressDao.countAllocatedIPsForAccount(accountId);\n                    break;\n                case template:\n                    count = _vmTemplateDao.countTemplatesForAccount(accountId);\n                    break;\n                }\n                _resourceCountDao.setAccountCount(accountId, type, count);\n            } catch (Exception e) {\n                throw new CloudRuntimeException(\"Failed to update resource count for account with Id\" + accountId);\n            } finally {\n                m_resourceCountLock.unlock();\n            }\n        }\n\n        return count;\n    }","id":4357,"modified_method":"@Override\n    public long updateAccountResourceCount(long accountId, ResourceType type) {\n        Long count=null;\n\n        // this lock guards against the updates to user_vm, volume, snapshot, public _ip and template table \n        // as any resource creation precedes with the resourceLimitExceeded check which needs this lock too\n        if (m_resourceCountLock.lock(120)) { // 2 minutes\n            try {\n                switch (type) {\n                case user_vm:\n                    count = _userVmDao.countAllocatedVMsForAccount(accountId);\n                    break;\n                case volume:\n                    count = _volumeDao.countAllocatedVolumesForAccount(accountId);\n                    long virtualRouterCount = _vmDao.countAllocatedVirtualRoutersForAccount(accountId);\n                    count = count - virtualRouterCount;  // don't count the volumes of virtual router\n                    break;\n                case snapshot:\n                    count = _snapshotDao.countSnapshotsForAccount(accountId);\n                    break;\n                case public_ip:\n                    count = _ipAddressDao.countAllocatedIPsForAccount(accountId);\n                    break;\n                case template:\n                    count = _vmTemplateDao.countTemplatesForAccount(accountId);\n                    break;\n                }\n                _resourceCountDao.setAccountCount(accountId, type, (count == null) ? 0 : count.longValue());\n            } catch (Exception e) {\n                throw new CloudRuntimeException(\"Failed to update resource count for account with Id\" + accountId);\n            } finally {\n                m_resourceCountLock.unlock();\n            }\n        }\n\n        return (count==null)?0:count.longValue();\n    }","commit_id":"7ce2f0362f555e958b6c501a8bc8740daef349c2","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public ResourceCountVO updateResourceCount(UpdateResourceCountCmd cmd) throws InvalidParameterValueException, CloudRuntimeException, PermissionDeniedException{\n        Account currentAccount = UserContext.current().getCaller();\n        String accountName = cmd.getAccountName();\n        Long domainId = cmd.getDomainId();\n        Long accountId = null;\n        long count=0;\n\n        ResourceType resourceType;\n        Integer type = cmd.getResourceType();\n        try {\n            resourceType = ResourceType.values()[type];\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new InvalidParameterValueException(\"Please specify a valid resource type.\");\n        }\n\n        // Either a domainId or an account name with domainId must be passed in\n        if ((domainId == null) && (accountName == null)) {\n            throw new InvalidParameterValueException(\"Either a domainId or account name with domainId must be passed in.\");\n        }\n\n        if (domainId != null) {\n            DomainVO domain = _domainDao.findById(domainId);\n        \tif (domain == null) {\n                throw new InvalidParameterValueException(\"Please specify a valid domain ID.\");\n            } else if (domain.getRemoved() != null) {\n                throw new InvalidParameterValueException(\"Please specify an active domain.\");\n            }\n            checkAccess(currentAccount, domain);\n        }\n\n        if (accountName != null) {\n            if (domainId == null) {\n                throw new InvalidParameterValueException(\"domainId parameter is required if account name is specified\");\n            }\n            Account userAccount = _accountDao.findActiveAccount(accountName, domainId);\n            if (userAccount == null) {\n                throw new InvalidParameterValueException(\"unable to find account by name \" + accountName + \" in domain with id \" + domainId);\n            }\n            accountId = userAccount.getId();\n            checkAccess(currentAccount, userAccount);\n        }\n\n        try {\n            if (accountId != null) {\n                count = updateAccountResourceCount(accountId, resourceType);\n            } else {\n                count = updateDomainResourceCount(domainId, resourceType);\n            }\n        } catch (Exception e) {\n            throw new CloudRuntimeException(e.getMessage());\n        }\n\n        return new ResourceCountVO(accountId, domainId, resourceType, count);\n    }","id":4358,"modified_method":"@Override\n    public List<ResourceCountVO> updateResourceCount(UpdateResourceCountCmd cmd) throws InvalidParameterValueException, CloudRuntimeException, PermissionDeniedException{\n        Account callerAccount = UserContext.current().getCaller();\n        String accountName = cmd.getAccountName();\n        Long domainId = cmd.getDomainId();\n        Long accountId = null;\n        long count=0;\n        List<ResourceCountVO> counts = new ArrayList<ResourceCountVO>();\n        List<ResourceType> resourceTypes = new ArrayList<ResourceType>();\n\n        ResourceType resourceType=null;\n        Integer typeId = cmd.getResourceType();\n\n        if (typeId != null) {\n            try {\n                resourceType = ResourceType.values()[typeId];\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new InvalidParameterValueException(\"Please specify a valid resource type.\");\n            }\n        }\n\n        DomainVO domain = _domainDao.findById(domainId);\n        if (domain == null) {\n            throw new InvalidParameterValueException(\"Please specify a valid domain ID.\");\n        }\n        checkAccess(callerAccount, domain);\n\n        if (accountName != null) {\n            Account userAccount = _accountDao.findActiveAccount(accountName, domainId);\n            if (userAccount == null) {\n                throw new InvalidParameterValueException(\"unable to find account by name \" + accountName + \" in domain with id \" + domainId);\n            }\n            accountId = userAccount.getId();\n        }\n\n        try {\n            if (resourceType != null) {\n            \tresourceTypes.add(resourceType);\n            } else {\n            \tresourceTypes = Arrays.asList(ResourceType.values());\n            }\n\n            for (ResourceType type : resourceTypes) {\n                if (accountId != null) {\n                    count = updateAccountResourceCount(accountId, type);\n                    counts.add(new ResourceCountVO(accountId, domainId, type, count));\n                } else {\n                    count = updateDomainResourceCount(domainId, type);\n                    counts.add(new ResourceCountVO(accountId, domainId, type, count));\n                }\n            }\n        } catch (Exception e) {\n            throw new CloudRuntimeException(e.getMessage());\n        }\n\n        return counts;\n    }","commit_id":"7ce2f0362f555e958b6c501a8bc8740daef349c2","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public long updateDomainResourceCount(long domainId, ResourceType type) {\n        long count=0;\n        Domain domain =_domainDao.findById(domainId);\n\n        if (m_resourceCountLock.lock(120)) { // 2 minutes\n            try {\n                List<DomainVO> domainChildren = _domainDao.findImmediateChildrenForParent(domain.getId());\n                // for each child domain update the resource count\n                for (DomainVO domainChild : domainChildren) {\n                    long domainCount = updateDomainResourceCount(domainChild.getId(), type);\n                    count = count + domainCount; // add the child domain count to parent domain count\n                }\n\n                List<AccountVO> accounts = _accountDao.findActiveAccountsForDomain(domain.getId());\n                for (AccountVO account : accounts) {\n                    long accountCount = updateAccountResourceCount(account.getId(), type);\n                    count = count + accountCount; // add account's resource count to parent domain count\n                }\n\n                _resourceCountDao.setDomainCount(domainId, type, count);\n           } catch (Exception e) {\n               throw new CloudRuntimeException(\"Failed to update resource count for domain with Id \" + domainId);\n           } finally {\n              m_resourceCountLock.unlock();\n           }\n       }\n\n       return count;\n    }","id":4359,"modified_method":"@Override\n    public long updateDomainResourceCount(long domainId, ResourceType type) {\n        long count=0;\n\n        if (m_resourceCountLock.lock(120)) { // 2 minutes\n            try {\n                List<DomainVO> domainChildren = _domainDao.findImmediateChildrenForParent(domainId);\n                // for each child domain update the resource count\n                for (DomainVO domainChild : domainChildren) {\n                    long domainCount = updateDomainResourceCount(domainChild.getId(), type);\n                    count = count + domainCount; // add the child domain count to parent domain count\n                }\n\n                List<AccountVO> accounts = _accountDao.findActiveAccountsForDomain(domainId);\n                for (AccountVO account : accounts) {\n                    long accountCount = updateAccountResourceCount(account.getId(), type);\n                    count = count + accountCount; // add account's resource count to parent domain count\n                }\n\n                _resourceCountDao.setDomainCount(domainId, type, count);\n           } catch (Exception e) {\n               throw new CloudRuntimeException(\"Failed to update resource count for domain with Id \" + domainId);\n           } finally {\n              m_resourceCountLock.unlock();\n           }\n       }\n\n       return count;\n    }","commit_id":"7ce2f0362f555e958b6c501a8bc8740daef349c2","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n\tpublic void setAccountCount(long accountId, ResourceType type, long count) {\n\t\tResourceCountVO resourceCountVO = findByAccountIdAndType(accountId, type);\n\t\tif (resourceCountVO == null) {\n\t\t\tif (count != 0) {\n\t\t\t    resourceCountVO = new ResourceCountVO(accountId, null, type, count);\n\t\t\t    persist(resourceCountVO);\n\t\t\t}\n\t\t} else {\n\t\t\tresourceCountVO.setCount(count);\n\t\t\tupdate(resourceCountVO.getId(), resourceCountVO);\n\t\t}\n\t}","id":4360,"modified_method":"@Override\n\tpublic void setAccountCount(long accountId, ResourceType type, long count) {\n\t\tResourceCountVO resourceCountVO = findByAccountIdAndType(accountId, type);\n\t\tif (resourceCountVO == null) {\n\t\t\tif (count != 0) {\n\t\t\t    resourceCountVO = new ResourceCountVO(accountId, null, type, count);\n\t\t\t    persist(resourceCountVO);\n\t\t\t}\n\t\t} else {\n\t\t\tif (count != resourceCountVO.getCount()) {\n\t\t\t\tresourceCountVO.setCount(count);\n\t\t\t\tupdate(resourceCountVO.getId(), resourceCountVO);\n\t\t\t}\n\t\t}\n\t}","commit_id":"7ce2f0362f555e958b6c501a8bc8740daef349c2","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n\tpublic void setDomainCount(long domainId, ResourceType type, long count) {\n\t\tResourceCountVO resourceCountVO = findByDomainIdAndType(domainId, type);\n\t\tif (resourceCountVO == null) {\n\t\t\tif (count != 0) {\n\t\t\t    resourceCountVO = new ResourceCountVO(null, domainId, type, count);\n\t\t\t    persist(resourceCountVO);\n\t\t    }\n\t\t} else {\n\t\t\tresourceCountVO.setCount(count);\n\t\t\tupdate(resourceCountVO.getId(), resourceCountVO);\n\t\t}\n\t}","id":4361,"modified_method":"@Override\n\tpublic void setDomainCount(long domainId, ResourceType type, long count) {\n\t\tResourceCountVO resourceCountVO = findByDomainIdAndType(domainId, type);\n\t\tif (resourceCountVO == null) {\n\t\t\tif (count != 0) {\n\t\t\t    resourceCountVO = new ResourceCountVO(null, domainId, type, count);\n\t\t\t    persist(resourceCountVO);\n\t\t    }\n\t\t} else {\n\t\t\tif (count != resourceCountVO.getCount()) {\n\t\t\t\tresourceCountVO.setCount(count);\n\t\t\t\tupdate(resourceCountVO.getId(), resourceCountVO);\n\t\t\t}\n\t\t}\n\t}","commit_id":"7ce2f0362f555e958b6c501a8bc8740daef349c2","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void execute(){\n        ResourceCount result = _accountService.updateResourceCount(this);\n        if (result != null){\n            ResourceCountResponse response = _responseGenerator.createResourceCountResponse(result);\n            response.setResponseName(getCommandName());\n            this.setResponseObject(response);\n        } else {\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Failed to recalculate resource counts\");\n        }\n    }","id":4362,"modified_method":"@Override\n    public void execute(){\n    \tList<? extends ResourceCount> result = _accountService.updateResourceCount(this);\n\n        if ((result != null) && (result.size()>0)){\n            ListResponse<ResourceCountResponse> response = new ListResponse<ResourceCountResponse>();\n            List<ResourceCountResponse> countResponses = new ArrayList<ResourceCountResponse>();\n\n            for (ResourceCount count : result) {\n                ResourceCountResponse resourceCountResponse = _responseGenerator.createResourceCountResponse(count);\n                resourceCountResponse.setObjectName(\"resourcecount\");\n                countResponses.add(resourceCountResponse);\n            }\n\n            response.setResponses(countResponses);\n            response.setResponseName(getCommandName());\n            this.setResponseObject(response);\n        } else {\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Failed to recalculate resource counts\");\n        }\n    }","commit_id":"7ce2f0362f555e958b6c501a8bc8740daef349c2","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n\tpublic Long countAllocatedVolumesForAccount(long accountId) {\n\t  \tSearchCriteria<Long> sc = CountByAccount.create();\n        sc.setParameters(\"account\", accountId);\n\t\tsc.setParameters(\"state\", new Object[] {Volume.State.Destroy, State.Expunging});\n        return customSearch(sc, null).get(0);\t\t\n\t}","id":4363,"modified_method":"@Override\n\tpublic Long countAllocatedVolumesForAccount(long accountId) {\n\t  \tSearchCriteria<Long> sc = CountByAccount.create();\n        sc.setParameters(\"account\", accountId);\n\t\tsc.setParameters(\"state\", Volume.State.Destroy);\n        return customSearch(sc, null).get(0);\t\t\n\t}","commit_id":"7ce2f0362f555e958b6c501a8bc8740daef349c2","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void execute() throws ResourceUnavailableException,\n            InsufficientCapacityException, ServerApiException,\n            ConcurrentOperationException, ResourceAllocationException {\n          try {\n              if (getListAll()){\n                  // return the existing conf\n                  LDAPConfigCmd cmd = _configService.listLDAPConfig(this);\n                  LDAPConfigResponse lr = _responseGenerator.createLDAPConfigResponse(cmd.getHostname(), cmd.getPort(), cmd.getUseSSL(), cmd.getQueryFilter(), cmd.getSearchBase(), cmd.getBindDN());\n                  lr.setResponseName(getCommandName());\n                  this.setResponseObject(lr);\n              }\n              else if (getHostname()==null || getSearchBase() == null || getQueryFilter() == null) {\n                  throw new InvalidParameterValueException(\"You need to provide hostname, searchbase and queryfilter to configure your LDAP server\");\n              }\n              else {\n                  boolean result = _configService.updateLDAP(this);\n                  if (result){\n                      LDAPConfigResponse lr = _responseGenerator.createLDAPConfigResponse(getHostname(), getPort(), getUseSSL(), getQueryFilter(), getSearchBase(), getBindDN());\n                      lr.setResponseName(getCommandName());\n                      this.setResponseObject(lr);\n                  }\n              }\n          }\n          catch (NamingException ne){\n              ne.printStackTrace();\n          }\n\n    }","id":4364,"modified_method":"@Override\n    public void execute() throws ResourceUnavailableException,\n            InsufficientCapacityException, ServerApiException,\n            ConcurrentOperationException, ResourceAllocationException {\n          try {\n              if (getListAll()){\n                  // return the existing conf\n                  LDAPConfigCmd cmd = _configService.listLDAPConfig(this);\n                  ListResponse<LDAPConfigResponse> response = new ListResponse<LDAPConfigResponse>();\n                  List<LDAPConfigResponse> responses = new ArrayList<LDAPConfigResponse>();\n\n                  if(!cmd.getHostname().equals(\"\")) {\n                  \tresponses.add(_responseGenerator.createLDAPConfigResponse(cmd.getHostname(), cmd.getPort(), cmd.getUseSSL(), cmd.getQueryFilter(), cmd.getSearchBase(), cmd.getBindDN()));\n                  }\n                  \n                  response.setResponses(responses);\n                  response.setResponseName(getCommandName());\n                  this.setResponseObject(response);\n              }\n              else if (getHostname()==null || getSearchBase() == null || getQueryFilter() == null) {\n                  throw new InvalidParameterValueException(\"You need to provide hostname, searchbase and queryfilter to configure your LDAP server\");\n              }\n              else {\n                  boolean result = _configService.updateLDAP(this);\n                  if (result){\n                      LDAPConfigResponse lr = _responseGenerator.createLDAPConfigResponse(getHostname(), getPort(), getUseSSL(), getQueryFilter(), getSearchBase(), getBindDN());\n                      lr.setResponseName(getCommandName());\n                      this.setResponseObject(lr);\n                  }\n              }\n          }\n          catch (NamingException ne){\n              ne.printStackTrace();\n          }\n\n    }","commit_id":"576884ec10b4a46b243b8138926c0fc650bcdaba","url":"https://github.com/apache/cloudstack"},{"original_method":"/**\n   * @param runId for which information will be returned.\n   * @return a {@link MRJobInfo} containing information about a particular MapReduce program run.\n   */\n  public MRJobInfo getMRJobInfo(Id.Run runId) throws Exception {\n    Preconditions.checkArgument(ProgramType.MAPREDUCE.equals(runId.getProgram().getType()));\n\n    // baseTags has tag keys: ns.app.mr.runid\n    Map<String, String> baseTags = Maps.newHashMap();\n    baseTags.put(Constants.Metrics.Tag.NAMESPACE, runId.getNamespace().getId());\n    baseTags.put(Constants.Metrics.Tag.APP, runId.getProgram().getApplicationId());\n    baseTags.put(Constants.Metrics.Tag.MAPREDUCE, runId.getProgram().getId());\n    baseTags.put(Constants.Metrics.Tag.RUN_ID, runId.getId());\n\n    Map<String, String> mapTags = Maps.newHashMap(baseTags);\n    mapTags.put(Constants.Metrics.Tag.MR_TASK_TYPE, MapReduceMetrics.TaskType.Mapper.getId());\n\n    Map<String, String> reduceTags = Maps.newHashMap(baseTags);\n    reduceTags.put(Constants.Metrics.Tag.MR_TASK_TYPE, MapReduceMetrics.TaskType.Reducer.getId());\n\n    // map from RunId -> (CounterName -> CounterValue)\n    Table<String, String, Long> mapTaskMetrics = HashBasedTable.create();\n    Table<String, String, Long> reduceTaskMetrics = HashBasedTable.create();\n\n\n    // Populate mapTaskMetrics and reduce Task Metrics via MetricStore. Used to construct MRTaskInfo below.\n    // Use batch-querying when it is available on the MetricStore. https://issues.cask.co/browse/CDAP-2045\n    putMetrics(queryGroupedAggregates(mapTags, MapReduceMetrics.METRIC_INPUT_RECORDS),\n               mapTaskMetrics, TaskCounter.MAP_INPUT_RECORDS.name());\n    putMetrics(queryGroupedAggregates(mapTags, MapReduceMetrics.METRIC_OUTPUT_RECORDS),\n               mapTaskMetrics, TaskCounter.MAP_OUTPUT_RECORDS.name());\n    putMetrics(queryGroupedAggregates(mapTags, MapReduceMetrics.METRIC_BYTES),\n               mapTaskMetrics, TaskCounter.MAP_OUTPUT_BYTES.name());\n\n    Map<String, Long> mapProgress = queryGroupedAggregates(mapTags, MapReduceMetrics.METRIC_TASK_COMPLETION);\n\n    putMetrics(queryGroupedAggregates(reduceTags, MapReduceMetrics.METRIC_INPUT_RECORDS),\n               reduceTaskMetrics, TaskCounter.REDUCE_INPUT_RECORDS.name());\n    putMetrics(queryGroupedAggregates(reduceTags, MapReduceMetrics.METRIC_OUTPUT_RECORDS),\n               reduceTaskMetrics, TaskCounter.REDUCE_OUTPUT_RECORDS.name());\n\n    Map<String, Long> reduceProgress = queryGroupedAggregates(reduceTags, MapReduceMetrics.METRIC_TASK_COMPLETION);\n\n    // Construct MRTaskInfos from the information we can get from Metric system.\n    List<MRTaskInfo> mapTaskInfos = Lists.newArrayList();\n    for (Map.Entry<String, Map<String, Long>> taskEntry : mapTaskMetrics.rowMap().entrySet()) {\n      String mapTaskId = taskEntry.getKey();\n      mapTaskInfos.add(new MRTaskInfo(mapTaskId, null, null, null,\n                                      mapProgress.get(mapTaskId) / 100.0F, taskEntry.getValue()));\n    }\n\n    List<MRTaskInfo> reduceTaskInfos = Lists.newArrayList();\n    for (Map.Entry<String, Map<String, Long>> taskEntry : reduceTaskMetrics.rowMap().entrySet()) {\n      String reduceTaskId = taskEntry.getKey();\n      reduceTaskInfos.add(new MRTaskInfo(reduceTaskId, null, null, null,\n                                         reduceProgress.get(reduceTaskId) / 100.0F, taskEntry.getValue()));\n    }\n\n    return getJobCounters(mapTags, reduceTags, mapTaskInfos, reduceTaskInfos);\n  }","id":4365,"modified_method":"/**\n   * @param runId for which information will be returned.\n   * @return a {@link MRJobInfo} containing information about a particular MapReduce program run.\n   */\n  public MRJobInfo getMRJobInfo(Id.Run runId) throws Exception {\n    Preconditions.checkArgument(ProgramType.MAPREDUCE.equals(runId.getProgram().getType()));\n\n    // baseTags has tag keys: ns.app.mr.runid\n    Map<String, String> baseTags = Maps.newHashMap();\n    baseTags.put(Constants.Metrics.Tag.NAMESPACE, runId.getNamespace().getId());\n    baseTags.put(Constants.Metrics.Tag.APP, runId.getProgram().getApplicationId());\n    baseTags.put(Constants.Metrics.Tag.MAPREDUCE, runId.getProgram().getId());\n    baseTags.put(Constants.Metrics.Tag.RUN_ID, runId.getId());\n\n    Map<String, String> mapTags = Maps.newHashMap(baseTags);\n    mapTags.put(Constants.Metrics.Tag.MR_TASK_TYPE, MapReduceMetrics.TaskType.Mapper.getId());\n\n    Map<String, String> reduceTags = Maps.newHashMap(baseTags);\n    reduceTags.put(Constants.Metrics.Tag.MR_TASK_TYPE, MapReduceMetrics.TaskType.Reducer.getId());\n\n    // map from RunId -> (CounterName -> CounterValue)\n    Table<String, String, Long> mapTaskMetrics = HashBasedTable.create();\n    Table<String, String, Long> reduceTaskMetrics = HashBasedTable.create();\n\n\n    // Populate mapTaskMetrics and reduce Task Metrics via MetricStore. Used to construct MRTaskInfo below.\n    Map<String, String> metricNamesToCounters = Maps.newHashMap();\n    metricNamesToCounters.put(prependSystem(MapReduceMetrics.METRIC_TASK_INPUT_RECORDS),\n                             TaskCounter.MAP_INPUT_RECORDS.name());\n    metricNamesToCounters.put(prependSystem(MapReduceMetrics.METRIC_TASK_OUTPUT_RECORDS),\n                             TaskCounter.MAP_OUTPUT_RECORDS.name());\n    metricNamesToCounters.put(prependSystem(MapReduceMetrics.METRIC_TASK_BYTES),\n                             TaskCounter.MAP_OUTPUT_BYTES.name());\n    metricNamesToCounters.put(prependSystem(MapReduceMetrics.METRIC_TASK_COMPLETION),\n                             MapReduceMetrics.METRIC_TASK_COMPLETION);\n\n    // get metrics grouped by instance-id for the map tasks\n    queryGroupedAggregates(mapTags, mapTaskMetrics, metricNamesToCounters);\n\n    Map<String, Long> mapProgress = Maps.newHashMap();\n    if (mapTaskMetrics.columnMap().containsKey(MapReduceMetrics.METRIC_TASK_COMPLETION)) {\n      mapProgress = Maps.newHashMap(mapTaskMetrics.columnMap().remove(MapReduceMetrics.METRIC_TASK_COMPLETION));\n    }\n\n    Map<String, String> reduceMetricsToCounters = Maps.newHashMap();\n    reduceMetricsToCounters.put(prependSystem(MapReduceMetrics.METRIC_TASK_INPUT_RECORDS),\n                                TaskCounter.REDUCE_INPUT_RECORDS.name());\n    reduceMetricsToCounters.put(prependSystem(MapReduceMetrics.METRIC_TASK_OUTPUT_RECORDS),\n                                TaskCounter.REDUCE_OUTPUT_RECORDS.name());\n    reduceMetricsToCounters.put(prependSystem(MapReduceMetrics.METRIC_TASK_COMPLETION),\n                                MapReduceMetrics.METRIC_TASK_COMPLETION);\n\n    // get metrics grouped by instance-id for the map tasks\n    queryGroupedAggregates(reduceTags, reduceTaskMetrics, reduceMetricsToCounters);\n\n    Map<String, Long> reduceProgress = Maps.newHashMap();\n    if (reduceTaskMetrics.columnMap().containsKey(MapReduceMetrics.METRIC_TASK_COMPLETION)) {\n      reduceProgress = Maps.newHashMap(reduceTaskMetrics.columnMap().remove(MapReduceMetrics.METRIC_TASK_COMPLETION));\n    }\n\n    // Construct MRTaskInfos from the information we can get from Metric system.\n    List<MRTaskInfo> mapTaskInfos = Lists.newArrayList();\n    for (Map.Entry<String, Map<String, Long>> taskEntry : mapTaskMetrics.rowMap().entrySet()) {\n      String mapTaskId = taskEntry.getKey();\n      mapTaskInfos.add(new MRTaskInfo(mapTaskId, null, null, null,\n                                      mapProgress.get(mapTaskId) / 100.0F, taskEntry.getValue()));\n    }\n\n    List<MRTaskInfo> reduceTaskInfos = Lists.newArrayList();\n    for (Map.Entry<String, Map<String, Long>> taskEntry : reduceTaskMetrics.rowMap().entrySet()) {\n      String reduceTaskId = taskEntry.getKey();\n      reduceTaskInfos.add(new MRTaskInfo(reduceTaskId, null, null, null,\n                                         reduceProgress.get(reduceTaskId) / 100.0F, taskEntry.getValue()));\n    }\n\n    return getJobCounters(mapTags, reduceTags, mapTaskInfos, reduceTaskInfos);\n  }","commit_id":"67317cfa37bcb3d90fd7cc3213c04f740e97900d","url":"https://github.com/caskdata/cdap"},{"original_method":"private Map<String, Long> queryGroupedAggregates(Map<String, String> tags, String metric) throws Exception {\n    MetricDataQuery metricDataQuery =\n      new MetricDataQuery(0, Integer.MAX_VALUE, Integer.MAX_VALUE, ImmutableList.of(prependSystem(metric)),\n                          MetricType.GAUGE, tags, ImmutableList.of(Constants.Metrics.Tag.INSTANCE_ID));\n    Collection<MetricTimeSeries> query = metricStore.query(metricDataQuery);\n\n    // runId -> metricValue\n    Map<String, Long> taskMetrics = Maps.newHashMap();\n    for (MetricTimeSeries metricTimeSeries : query) {\n      List<TimeValue> timeValues = metricTimeSeries.getTimeValues();\n      TimeValue timeValue = Iterables.getOnlyElement(timeValues);\n      String taskId = metricTimeSeries.getTagValues().get(Constants.Metrics.Tag.INSTANCE_ID);\n      taskMetrics.put(taskId, timeValue.getValue());\n    }\n    return taskMetrics;\n  }","id":4366,"modified_method":"private void queryGroupedAggregates(Map<String, String> tags, Table<String, String, Long> allTaskMetrics,\n                                                   Map<String, String> metricsToCounters) throws Exception {\n    MetricDataQuery metricDataQuery =\n      new MetricDataQuery(0, Integer.MAX_VALUE, Integer.MAX_VALUE, metricsToCounters.keySet(),\n                          MetricType.GAUGE, tags, ImmutableList.of(Constants.Metrics.Tag.INSTANCE_ID));\n    Collection<MetricTimeSeries> query = metricStore.query(metricDataQuery);\n\n    for (MetricTimeSeries metricTimeSeries : query) {\n      List<TimeValue> timeValues = metricTimeSeries.getTimeValues();\n      TimeValue timeValue = Iterables.getOnlyElement(timeValues);\n      String taskId = metricTimeSeries.getTagValues().get(Constants.Metrics.Tag.INSTANCE_ID);\n      allTaskMetrics.put(taskId, metricsToCounters.get(metricTimeSeries.getMetricName()), timeValue.getValue());\n    }\n  }","commit_id":"67317cfa37bcb3d90fd7cc3213c04f740e97900d","url":"https://github.com/caskdata/cdap"},{"original_method":"private long getAggregates(Map<String, String> tags, String metric) throws Exception {\n    MetricDataQuery metricDataQuery =\n      new MetricDataQuery(0, Integer.MAX_VALUE, Integer.MAX_VALUE, prependSystem(metric),\n                          MetricType.COUNTER, tags, ImmutableList.<String>of());\n    Collection<MetricTimeSeries> query = metricStore.query(metricDataQuery);\n    if (query.isEmpty()) {\n      return 0;\n    }\n    MetricTimeSeries timeSeries = Iterables.getOnlyElement(query);\n    List<TimeValue> timeValues = timeSeries.getTimeValues();\n    TimeValue timeValue = Iterables.getOnlyElement(timeValues);\n    return timeValue.getValue();\n  }","id":4367,"modified_method":"private void getAggregates(Map<String, String> tags, Map<String, String> metricsToCounters,\n                             Map<String, Long> result) throws Exception {\n    MetricDataQuery metricDataQuery =\n      new MetricDataQuery(0, Integer.MAX_VALUE, Integer.MAX_VALUE, metricsToCounters.keySet(),\n                          MetricType.COUNTER, tags, ImmutableList.<String>of());\n    Collection<MetricTimeSeries> query = metricStore.query(metricDataQuery);\n    // initialize elements to zero\n    for (String counterName : metricsToCounters.values()) {\n      result.put(counterName, 0L);\n    }\n    for (MetricTimeSeries metricTimeSeries : query) {\n      List<TimeValue> timeValues = metricTimeSeries.getTimeValues();\n      TimeValue timeValue = Iterables.getOnlyElement(timeValues);\n      result.put(metricsToCounters.get(metricTimeSeries.getMetricName()), timeValue.getValue());\n    }\n  }","commit_id":"67317cfa37bcb3d90fd7cc3213c04f740e97900d","url":"https://github.com/caskdata/cdap"},{"original_method":"private MRJobInfo getJobCounters(Map<String, String> mapTags, Map<String, String> reduceTags,\n                                   List<MRTaskInfo> mapTaskInfos, List<MRTaskInfo> reduceTaskInfos) throws Exception {\n    HashMap<String, Long> metrics = Maps.newHashMap();\n    // Use batch-querying when it is available on the MetricStore. https://issues.cask.co/browse/CDAP-2045\n    metrics.put(TaskCounter.MAP_INPUT_RECORDS.name(),\n                getAggregates(mapTags, MapReduceMetrics.METRIC_INPUT_RECORDS));\n    metrics.put(TaskCounter.MAP_OUTPUT_RECORDS.name(),\n                getAggregates(mapTags, MapReduceMetrics.METRIC_OUTPUT_RECORDS));\n    metrics.put(TaskCounter.MAP_OUTPUT_BYTES.name(),\n                getAggregates(mapTags, MapReduceMetrics.METRIC_BYTES));\n\n    metrics.put(TaskCounter.REDUCE_INPUT_RECORDS.name(),\n                getAggregates(reduceTags, MapReduceMetrics.METRIC_INPUT_RECORDS));\n    metrics.put(TaskCounter.REDUCE_OUTPUT_RECORDS.name(),\n                getAggregates(reduceTags, MapReduceMetrics.METRIC_OUTPUT_RECORDS));\n\n    float mapProgress = getAggregates(mapTags, MapReduceMetrics.METRIC_COMPLETION) / 100.0F;\n    float reduceProgress = getAggregates(reduceTags, MapReduceMetrics.METRIC_COMPLETION) / 100.0F;\n\n\n    return new MRJobInfo(mapProgress, reduceProgress, metrics, mapTaskInfos, reduceTaskInfos, false);\n  }","id":4368,"modified_method":"private MRJobInfo getJobCounters(Map<String, String> mapTags, Map<String, String> reduceTags,\n                                   List<MRTaskInfo> mapTaskInfos, List<MRTaskInfo> reduceTaskInfos) throws Exception {\n    HashMap<String, Long> metrics = Maps.newHashMap();\n\n    Map<String, String> mapMetricsToCounters =\n      ImmutableMap.of(prependSystem(MapReduceMetrics.METRIC_INPUT_RECORDS), TaskCounter.MAP_INPUT_RECORDS.name(),\n                      prependSystem(MapReduceMetrics.METRIC_OUTPUT_RECORDS), TaskCounter.MAP_OUTPUT_RECORDS.name(),\n                      prependSystem(MapReduceMetrics.METRIC_BYTES), TaskCounter.MAP_OUTPUT_BYTES.name(),\n                      prependSystem(MapReduceMetrics.METRIC_COMPLETION), MapReduceMetrics.METRIC_COMPLETION);\n\n    getAggregates(mapTags, mapMetricsToCounters, metrics);\n    float mapProgress = metrics.remove(MapReduceMetrics.METRIC_COMPLETION) / 100.0F;\n\n    Map<String, String> reduceMetricsToCounters =\n      ImmutableMap.of(prependSystem(MapReduceMetrics.METRIC_INPUT_RECORDS), TaskCounter.REDUCE_INPUT_RECORDS.name(),\n                      prependSystem(MapReduceMetrics.METRIC_OUTPUT_RECORDS), TaskCounter.REDUCE_OUTPUT_RECORDS.name(),\n                      prependSystem(MapReduceMetrics.METRIC_COMPLETION), MapReduceMetrics.METRIC_COMPLETION);\n\n    getAggregates(reduceTags, reduceMetricsToCounters, metrics);\n    float reduceProgress = metrics.remove(MapReduceMetrics.METRIC_COMPLETION) / 100.0F;\n    return new MRJobInfo(mapProgress, reduceProgress, metrics, mapTaskInfos, reduceTaskInfos, false);\n  }","commit_id":"67317cfa37bcb3d90fd7cc3213c04f740e97900d","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testGetMRJobInfo() throws Exception {\n    Id.Program programId = Id.Program.from(\"fooNamespace\", \"testApp\", ProgramType.MAPREDUCE, \"fooMapReduce\");\n    Id.Run runId = new Id.Run(programId, \"run10878\");\n\n    Map<String, String> runContext = ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, programId.getNamespaceId(),\n                                                     Constants.Metrics.Tag.APP, programId.getApplicationId(),\n                                                     Constants.Metrics.Tag.MAPREDUCE, programId.getId(),\n                                                     Constants.Metrics.Tag.RUN_ID, runId.getId());\n\n    Map<String, String> mapTypeContext =\n      addToContext(runContext, Constants.Metrics.Tag.MR_TASK_TYPE, MapReduceMetrics.TaskType.Mapper.getId());\n\n    Map<String, String> reduceTypeContext =\n      addToContext(runContext, Constants.Metrics.Tag.MR_TASK_TYPE, MapReduceMetrics.TaskType.Reducer.getId());\n\n    String mapTask1Name = \"task_m_01\";\n    Map<String, String> mapTask1Context = addToContext(mapTypeContext, Constants.Metrics.Tag.INSTANCE_ID, mapTask1Name);\n\n    String mapTask2Name = \"task_m_02\";\n    Map<String, String> mapTask2Context = addToContext(mapTypeContext, Constants.Metrics.Tag.INSTANCE_ID, mapTask2Name);\n\n    String reduceTaskName = \"task_r_01\";\n    Map<String, String> reduceTaskContext =\n      addToContext(reduceTypeContext, Constants.Metrics.Tag.INSTANCE_ID, reduceTaskName);\n\n\n    // Imitate a MapReduce Job running (gauge mapper and reducer metrics)\n    long measureTime = System.currentTimeMillis() / 1000;\n    gauge(mapTypeContext, MapReduceMetrics.METRIC_COMPLETION, measureTime, 76L);\n    gauge(reduceTypeContext, MapReduceMetrics.METRIC_COMPLETION, measureTime, 52L);\n\n    gauge(mapTask1Context, MapReduceMetrics.METRIC_TASK_COMPLETION, measureTime, 100L);\n    gauge(mapTask1Context, MapReduceMetrics.METRIC_INPUT_RECORDS, measureTime, 32L);\n    gauge(mapTask1Context, MapReduceMetrics.METRIC_OUTPUT_RECORDS, measureTime, 320L);\n\n    gauge(mapTask2Context, MapReduceMetrics.METRIC_TASK_COMPLETION, measureTime, 12L);\n    gauge(mapTask2Context, MapReduceMetrics.METRIC_INPUT_RECORDS, measureTime, 6L);\n    gauge(mapTask2Context, MapReduceMetrics.METRIC_OUTPUT_RECORDS, measureTime, 60L);\n\n\n    gauge(reduceTaskContext, MapReduceMetrics.METRIC_TASK_COMPLETION, measureTime, 76L);\n    gauge(reduceTaskContext, MapReduceMetrics.METRIC_INPUT_RECORDS, measureTime, 320L);\n    gauge(reduceTaskContext, MapReduceMetrics.METRIC_OUTPUT_RECORDS, measureTime, 1L);\n\n\n    MapReduceMetricsInfo mapReduceMetricsInfo = injector.getInstance(MapReduceMetricsInfo.class);\n    MRJobInfo mrJobInfo = mapReduceMetricsInfo.getMRJobInfo(runId);\n\n\n    // Incomplete because MapReduceMetricsInfo does not provide task-level state and start/end times.\n    Assert.assertFalse(mrJobInfo.isComplete());\n\n    // Check job-level counters\n    Map<String, Long> jobCounters = mrJobInfo.getCounters();\n    Assert.assertEquals((Long) 38L, jobCounters.get(TaskCounter.MAP_INPUT_RECORDS.name()));\n    Assert.assertEquals((Long) 380L, jobCounters.get(TaskCounter.MAP_OUTPUT_RECORDS.name()));\n    Assert.assertEquals((Long) 320L, jobCounters.get(TaskCounter.REDUCE_INPUT_RECORDS.name()));\n    Assert.assertEquals((Long) 1L, jobCounters.get(TaskCounter.REDUCE_OUTPUT_RECORDS.name()));\n\n\n    // Ensure all tasks show up\n    List<MRTaskInfo> mapTasks = mrJobInfo.getMapTasks();\n    List<MRTaskInfo> reduceTasks = mrJobInfo.getReduceTasks();\n    Assert.assertEquals(2, mapTasks.size());\n    Assert.assertEquals(1, reduceTasks.size());\n\n    MRTaskInfo mapTask1 = findByTaskId(mapTasks, mapTask1Name);\n    MRTaskInfo mapTask2 = findByTaskId(mapTasks, mapTask2Name);\n    MRTaskInfo reduceTask = findByTaskId(reduceTasks, reduceTaskName);\n\n    // Check task-level counters\n    Map<String, Long> mapTask1Counters = mapTask1.getCounters();\n    Assert.assertEquals((Long) 32L, mapTask1Counters.get(TaskCounter.MAP_INPUT_RECORDS.name()));\n    Assert.assertEquals((Long) 320L, mapTask1Counters.get(TaskCounter.MAP_OUTPUT_RECORDS.name()));\n\n    Map<String, Long> mapTask2Counters = mapTask2.getCounters();\n    Assert.assertEquals((Long) 6L, mapTask2Counters.get(TaskCounter.MAP_INPUT_RECORDS.name()));\n    Assert.assertEquals((Long) 60L, mapTask2Counters.get(TaskCounter.MAP_OUTPUT_RECORDS.name()));\n\n    Map<String, Long> reduceTaskCounters = reduceTask.getCounters();\n    Assert.assertEquals((Long) 320L, reduceTaskCounters.get(TaskCounter.REDUCE_INPUT_RECORDS.name()));\n    Assert.assertEquals((Long) 1L, reduceTaskCounters.get(TaskCounter.REDUCE_OUTPUT_RECORDS.name()));\n\n    // Checking progress\n    float permittedProgressDelta = 0.01F;\n    Assert.assertEquals(0.76F, mrJobInfo.getMapProgress(), permittedProgressDelta);\n    Assert.assertEquals(0.52F, mrJobInfo.getReduceProgress(), permittedProgressDelta);\n\n    Assert.assertEquals(1.0F, mapTask1.getProgress(), permittedProgressDelta);\n    Assert.assertEquals(0.12F, mapTask2.getProgress(), permittedProgressDelta);\n    Assert.assertEquals(0.76F, reduceTask.getProgress(), permittedProgressDelta);\n\n  }","id":4369,"modified_method":"@Test\n  public void testGetMRJobInfo() throws Exception {\n    Id.Program programId = Id.Program.from(\"fooNamespace\", \"testApp\", ProgramType.MAPREDUCE, \"fooMapReduce\");\n    Id.Run runId = new Id.Run(programId, \"run10878\");\n\n    Map<String, String> runContext = ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, programId.getNamespaceId(),\n                                                     Constants.Metrics.Tag.APP, programId.getApplicationId(),\n                                                     Constants.Metrics.Tag.MAPREDUCE, programId.getId(),\n                                                     Constants.Metrics.Tag.RUN_ID, runId.getId());\n\n    Map<String, String> mapTypeContext =\n      addToContext(runContext, Constants.Metrics.Tag.MR_TASK_TYPE, MapReduceMetrics.TaskType.Mapper.getId());\n\n    Map<String, String> reduceTypeContext =\n      addToContext(runContext, Constants.Metrics.Tag.MR_TASK_TYPE, MapReduceMetrics.TaskType.Reducer.getId());\n\n    String mapTask1Name = \"task_m_01\";\n    Map<String, String> mapTask1Context = addToContext(mapTypeContext, Constants.Metrics.Tag.INSTANCE_ID, mapTask1Name);\n\n    String mapTask2Name = \"task_m_02\";\n    Map<String, String> mapTask2Context = addToContext(mapTypeContext, Constants.Metrics.Tag.INSTANCE_ID, mapTask2Name);\n\n    String reduceTaskName = \"task_r_01\";\n    Map<String, String> reduceTaskContext =\n      addToContext(reduceTypeContext, Constants.Metrics.Tag.INSTANCE_ID, reduceTaskName);\n\n\n    // Imitate a MapReduce Job running (gauge mapper and reducer metrics)\n    long measureTime = System.currentTimeMillis() / 1000;\n    gauge(mapTypeContext, MapReduceMetrics.METRIC_COMPLETION, measureTime, 76L);\n    gauge(reduceTypeContext, MapReduceMetrics.METRIC_COMPLETION, measureTime, 52L);\n\n    gauge(mapTask1Context, MapReduceMetrics.METRIC_TASK_COMPLETION, measureTime, 100L);\n    gauge(mapTask1Context, MapReduceMetrics.METRIC_TASK_INPUT_RECORDS, measureTime, 32L);\n    gauge(mapTask1Context, MapReduceMetrics.METRIC_TASK_OUTPUT_RECORDS, measureTime, 320L);\n\n    gauge(mapTask2Context, MapReduceMetrics.METRIC_TASK_COMPLETION, measureTime, 12L);\n    gauge(mapTask2Context, MapReduceMetrics.METRIC_TASK_INPUT_RECORDS, measureTime, 6L);\n    gauge(mapTask2Context, MapReduceMetrics.METRIC_TASK_OUTPUT_RECORDS, measureTime, 60L);\n\n    // gauge job-level counters for mappers\n    gauge(mapTypeContext, MapReduceMetrics.METRIC_INPUT_RECORDS, measureTime, 38L);\n    gauge(mapTypeContext, MapReduceMetrics.METRIC_OUTPUT_RECORDS, measureTime, 380L);\n\n    gauge(reduceTaskContext, MapReduceMetrics.METRIC_TASK_COMPLETION, measureTime, 76L);\n    gauge(reduceTaskContext, MapReduceMetrics.METRIC_TASK_INPUT_RECORDS, measureTime, 320L);\n    gauge(reduceTaskContext, MapReduceMetrics.METRIC_TASK_OUTPUT_RECORDS, measureTime, 1L);\n\n    // gauge job-level counters for reducers\n    gauge(reduceTypeContext, MapReduceMetrics.METRIC_INPUT_RECORDS, measureTime, 320L);\n    gauge(reduceTypeContext, MapReduceMetrics.METRIC_OUTPUT_RECORDS, measureTime, 1L);\n\n\n\n    MapReduceMetricsInfo mapReduceMetricsInfo = injector.getInstance(MapReduceMetricsInfo.class);\n    MRJobInfo mrJobInfo = mapReduceMetricsInfo.getMRJobInfo(runId);\n\n\n    // Incomplete because MapReduceMetricsInfo does not provide task-level state and start/end times.\n    Assert.assertFalse(mrJobInfo.isComplete());\n\n    // Check job-level counters\n    Map<String, Long> jobCounters = mrJobInfo.getCounters();\n    Assert.assertEquals((Long) 38L, jobCounters.get(TaskCounter.MAP_INPUT_RECORDS.name()));\n    Assert.assertEquals((Long) 380L, jobCounters.get(TaskCounter.MAP_OUTPUT_RECORDS.name()));\n    Assert.assertEquals((Long) 320L, jobCounters.get(TaskCounter.REDUCE_INPUT_RECORDS.name()));\n    Assert.assertEquals((Long) 1L, jobCounters.get(TaskCounter.REDUCE_OUTPUT_RECORDS.name()));\n\n\n    // Ensure all tasks show up\n    List<MRTaskInfo> mapTasks = mrJobInfo.getMapTasks();\n    List<MRTaskInfo> reduceTasks = mrJobInfo.getReduceTasks();\n    Assert.assertEquals(2, mapTasks.size());\n    Assert.assertEquals(1, reduceTasks.size());\n\n    MRTaskInfo mapTask1 = findByTaskId(mapTasks, mapTask1Name);\n    MRTaskInfo mapTask2 = findByTaskId(mapTasks, mapTask2Name);\n    MRTaskInfo reduceTask = findByTaskId(reduceTasks, reduceTaskName);\n\n    // Check task-level counters\n    Map<String, Long> mapTask1Counters = mapTask1.getCounters();\n    Assert.assertEquals((Long) 32L, mapTask1Counters.get(TaskCounter.MAP_INPUT_RECORDS.name()));\n    Assert.assertEquals((Long) 320L, mapTask1Counters.get(TaskCounter.MAP_OUTPUT_RECORDS.name()));\n\n    Map<String, Long> mapTask2Counters = mapTask2.getCounters();\n    Assert.assertEquals((Long) 6L, mapTask2Counters.get(TaskCounter.MAP_INPUT_RECORDS.name()));\n    Assert.assertEquals((Long) 60L, mapTask2Counters.get(TaskCounter.MAP_OUTPUT_RECORDS.name()));\n\n    Map<String, Long> reduceTaskCounters = reduceTask.getCounters();\n    Assert.assertEquals((Long) 320L, reduceTaskCounters.get(TaskCounter.REDUCE_INPUT_RECORDS.name()));\n    Assert.assertEquals((Long) 1L, reduceTaskCounters.get(TaskCounter.REDUCE_OUTPUT_RECORDS.name()));\n\n    // Checking progress\n    float permittedProgressDelta = 0.01F;\n    Assert.assertEquals(0.76F, mrJobInfo.getMapProgress(), permittedProgressDelta);\n    Assert.assertEquals(0.52F, mrJobInfo.getReduceProgress(), permittedProgressDelta);\n\n    Assert.assertEquals(1.0F, mapTask1.getProgress(), permittedProgressDelta);\n    Assert.assertEquals(0.12F, mapTask2.getProgress(), permittedProgressDelta);\n    Assert.assertEquals(0.76F, reduceTask.getProgress(), permittedProgressDelta);\n\n  }","commit_id":"67317cfa37bcb3d90fd7cc3213c04f740e97900d","url":"https://github.com/caskdata/cdap"},{"original_method":"private static void replaceDiscoveryProtocol(JChannel ch) throws Exception {\n        ProtocolStack stack=ch.getProtocolStack();\n        Protocol discovery=stack.removeProtocol(\"TCPPING\");\n        if(discovery != null){\n            Protocol transport = stack.getTransport();\n            MPING mping=new MPING();\n            mping.setMcastPort(8888);\n            mping.setBindAddr(InetAddress.getLocalHost());\n            stack.insertProtocol(mping, ProtocolStack.ABOVE, transport.getName());\n            mping.setProtocolStack(ch.getProtocolStack());\n            mping.init();\n            mping.start();            \n            System.out.println(\"Replaced TCPPING with MPING. See http://wiki.jboss.org/wiki/Wiki.jsp?page=JGroupsMERGE2\");            \n        }        \n    }","id":4370,"modified_method":"private static void replaceDiscoveryProtocol(JChannel ch) throws Exception {\n        ProtocolStack stack=ch.getProtocolStack();\n        Protocol discovery=stack.removeProtocol(\"TCPPING\");\n        if(discovery != null){\n            Protocol transport = stack.getTransport();\n            MPING mping=new MPING();\n            InetAddress bindAddress=Util.getBindAddress(new Properties());\n            mping.setBindAddr(bindAddress);\n            mping.setMulticastAddress(\"230.1.2.3\");\n            mping.setMcastPort(8888);            \n            stack.insertProtocol(mping, ProtocolStack.ABOVE, transport.getName());\n            mping.setProtocolStack(ch.getProtocolStack());\n            mping.init();\n            mping.start();            \n            System.out.println(\"Replaced TCPPING with MPING. See http://wiki.jboss.org/wiki/Wiki.jsp?page=JGroupsMERGE2\");            \n        }        \n    }","commit_id":"96b81fb870b5dda288836629bb40686be650600c","url":"https://github.com/belaban/JGroups"},{"original_method":"private void replaceDiscoveryProtocol(JChannel ch) throws Exception {\n        ProtocolStack stack=ch.getProtocolStack();\n        Protocol discovery=stack.removeProtocol(\"TCPPING\");\n        if(discovery != null){\n            Protocol transport = stack.getTransport();\n            MPING mping=new MPING();\n            mping.setMcastPort(7777);\n            mping.setBindAddr(InetAddress.getLocalHost());\n            stack.insertProtocol(mping, ProtocolStack.ABOVE, transport.getName());\n            mping.setProtocolStack(ch.getProtocolStack());\n            mping.init();\n            mping.start();            \n            log.info(\"Replaced TCPPING with MPING. See http://wiki.jboss.org/wiki/Wiki.jsp?page=JGroupsMERGE2\");            \n        }        \n    }","id":4371,"modified_method":"private void replaceDiscoveryProtocol(JChannel ch) throws Exception {\n        ProtocolStack stack=ch.getProtocolStack();\n        Protocol discovery=stack.removeProtocol(\"TCPPING\");\n        if(discovery != null){\n            Protocol transport = stack.getTransport();\n            MPING mping=new MPING();\n            InetAddress bindAddress=Util.getBindAddress(new Properties());\n            mping.setBindAddr(bindAddress);\n            mping.setMulticastAddress(\"230.3.3.3\");\n            mping.setMcastPort(7777);            \n            stack.insertProtocol(mping, ProtocolStack.ABOVE, transport.getName());\n            mping.setProtocolStack(ch.getProtocolStack());\n            mping.init();\n            mping.start();            \n            log.info(\"Replaced TCPPING with MPING. See http://wiki.jboss.org/wiki/Wiki.jsp?page=JGroupsMERGE2\");            \n        }        \n    }","commit_id":"96b81fb870b5dda288836629bb40686be650600c","url":"https://github.com/belaban/JGroups"},{"original_method":"private static void replaceDiscoveryProtocol(JChannel ch) throws Exception {\n        ProtocolStack stack=ch.getProtocolStack();\n        Protocol discovery=stack.removeProtocol(\"TCPPING\");\n        if(discovery != null){\n            Protocol transport = stack.getTransport();\n            MPING mping=new MPING();\n            mping.setMcastPort(8888);\n            mping.setBindAddr(InetAddress.getLocalHost());\n            stack.insertProtocol(mping, ProtocolStack.ABOVE, transport.getName());\n            mping.setProtocolStack(ch.getProtocolStack());\n            mping.init();\n            mping.start();            \n            System.out.println(\"Replaced TCPPING with MPING. See http://wiki.jboss.org/wiki/Wiki.jsp?page=JGroupsMERGE2\");            \n        }        \n    }","id":4372,"modified_method":"private static void replaceDiscoveryProtocol(JChannel ch) throws Exception {\n        ProtocolStack stack=ch.getProtocolStack();\n        Protocol discovery=stack.removeProtocol(\"TCPPING\");\n        if(discovery != null){\n            Protocol transport = stack.getTransport();\n            MPING mping=new MPING();\n            InetAddress bindAddress=Util.getBindAddress(new Properties());\n            mping.setBindAddr(bindAddress);\n            mping.setMulticastAddress(\"230.1.2.3\");\n            mping.setMcastPort(8888);            \n            stack.insertProtocol(mping, ProtocolStack.ABOVE, transport.getName());\n            mping.setProtocolStack(ch.getProtocolStack());\n            mping.init();\n            mping.start();            \n            System.out.println(\"Replaced TCPPING with MPING. See http://wiki.jboss.org/wiki/Wiki.jsp?page=JGroupsMERGE2\");            \n        }        \n    }","commit_id":"bbca7c6c1c40139e8f1d994b0a7a3f7cc3e31b7b","url":"https://github.com/belaban/JGroups"},{"original_method":"private void replaceDiscoveryProtocol(JChannel ch) throws Exception {\n        ProtocolStack stack=ch.getProtocolStack();\n        Protocol discovery=stack.removeProtocol(\"TCPPING\");\n        if(discovery != null){\n            Protocol transport = stack.getTransport();\n            MPING mping=new MPING();\n            mping.setMcastPort(7777);\n            mping.setBindAddr(InetAddress.getLocalHost());\n            stack.insertProtocol(mping, ProtocolStack.ABOVE, transport.getName());\n            mping.setProtocolStack(ch.getProtocolStack());\n            mping.init();\n            mping.start();            \n            log.info(\"Replaced TCPPING with MPING. See http://wiki.jboss.org/wiki/Wiki.jsp?page=JGroupsMERGE2\");            \n        }        \n    }","id":4373,"modified_method":"private void replaceDiscoveryProtocol(JChannel ch) throws Exception {\n        ProtocolStack stack=ch.getProtocolStack();\n        Protocol discovery=stack.removeProtocol(\"TCPPING\");\n        if(discovery != null){\n            Protocol transport = stack.getTransport();\n            MPING mping=new MPING();\n            InetAddress bindAddress=Util.getBindAddress(new Properties());\n            mping.setBindAddr(bindAddress);\n            mping.setMulticastAddress(\"230.3.3.3\");\n            mping.setMcastPort(7777);            \n            stack.insertProtocol(mping, ProtocolStack.ABOVE, transport.getName());\n            mping.setProtocolStack(ch.getProtocolStack());\n            mping.init();\n            mping.start();            \n            log.info(\"Replaced TCPPING with MPING. See http://wiki.jboss.org/wiki/Wiki.jsp?page=JGroupsMERGE2\");            \n        }        \n    }","commit_id":"bbca7c6c1c40139e8f1d994b0a7a3f7cc3e31b7b","url":"https://github.com/belaban/JGroups"},{"original_method":"public void unlockLayout(String meetingID) {\n\t\tLayoutRoom r = getRoom(meetingID);\n\t\tif (r != null) {\n\t\t\tr.unlockLayout();\n\t\t\tsender.updateLayout(r.getMeetingID(), r.isLocked(), r.getSetByUserID(), r.getCurrentLayout());\n\t\t} \n\t}","id":4374,"modified_method":"public void unlockLayout(String meetingID) {\n\t\tLayoutRoom r = getRoom(meetingID);\n\t\tif (r != null) {\n\t\t\tr.unlockLayout();\n\t\t\tUpdateLayoutMessage msg = new UpdateLayoutMessage(r.getMeetingID(), r.isRecorded(), r.isLocked(), r.getSetByUserID(), r.getCurrentLayout());\n\t\t\toutMessageGateway.send(msg);\t\t\t\n\t\t} \n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public void getCurrentLayout(String meetingID, String requesterID) {\n\t\tLayoutRoom r = getRoom(meetingID);\n\t\tif (r != null) {\n\t\t\tsender.sendGetCurrentLayoutResponse(r.getMeetingID(), requesterID, r.isLocked(), r.getSetByUserID(), r.getCurrentLayout());\n\t\t}\n\t}","id":4375,"modified_method":"public void getCurrentLayout(String meetingID, String requesterID) {\n\t\tLayoutRoom r = getRoom(meetingID);\n\t\tif (r != null) {\n\t\t\tGetCurrentLayoutResponseMessage msg = new GetCurrentLayoutResponseMessage(meetingID, r.isRecorded(), requesterID, r.isLocked(), r.getSetByUserID(), r.getCurrentLayout());\n\t\t\toutMessageGateway.send(msg);\n\t\t}\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public void lockLayout(String meetingID, String userId, String layout) {\n\t\tLayoutRoom r = getRoom(meetingID);\n\t\tif (r != null) {\n\t\t\tr.lockLayout(userId, layout);\n\t\t\tsender.updateLayout(r.getMeetingID(), r.isLocked(), r.getSetByUserID(), r.getCurrentLayout());\n\t\t} \n\t}","id":4376,"modified_method":"public void lockLayout(String meetingID, String userId, String layout) {\n\t\tLayoutRoom r = getRoom(meetingID);\n\t\tif (r != null) {\n\t\t\tr.lockLayout(userId, layout);\n\t\t\tUpdateLayoutMessage msg = new UpdateLayoutMessage(r.getMeetingID(), r.isRecorded(), r.isLocked(), r.getSetByUserID(), r.getCurrentLayout());\n\t\t\toutMessageGateway.send(msg);\n\t\t} \n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public boolean createRoom(String meetingID) {\n\t\tLayoutRoom room = new LayoutRoom(meetingID);\n\t\trooms.put(room.getMeetingID(), room);\n\t\t\n\t\treturn true;\n\t}","id":4377,"modified_method":"public boolean createRoom(String meetingID, Boolean recorded) {\n\t\tif (!hasRoom(meetingID)) {\n\t\t\tLayoutRoom room = new LayoutRoom(meetingID, recorded);\n\t\t\trooms.put(room.getMeetingID(), room);\t\t\t\n\t\t}\t\t\n\t\treturn true;\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public void sendGetCurrentLayoutResponse(String meetingID, String requesterID, Boolean locked, String setByUserID, String layout) {\r\n\t\tMap<String, Object> message = new HashMap<String, Object>();\r\n\t\tmessage.put(\"locked\", locked);\r\n\t\tmessage.put(\"setByUserID\", setByUserID);\r\n\t\tmessage.put(\"layout\", layout);\r\n\t\tDirectClientMessage m = new DirectClientMessage(meetingID, requesterID, \"getCurrentLayoutResponse\", message);\r\n\t\tservice.sendMessage(m);\t\r\n\t}","id":4378,"modified_method":"private void sendGetCurrentLayoutResponse(GetCurrentLayoutResponseMessage msg) {\r\n\t\tMap<String, Object> message = new HashMap<String, Object>();\r\n\t\tmessage.put(\"locked\", msg.isLocked());\r\n\t\tmessage.put(\"setByUserID\", msg.getSetByUserID());\r\n\t\tmessage.put(\"layout\", msg.getLayout());\r\n\t\t\r\n\t\tDirectClientMessage m = new DirectClientMessage(msg.getMeetingID(), msg.getRequesterID(), \"getCurrentLayoutResponse\", message);\r\n\t\tservice.sendMessage(m);\t\r\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"@Override\n\tpublic boolean roomStart(IScope scope) {\n\t\tlog.debug(\"***** \" + APP + \" [ \" + \" roomStart [ \" + scope.getName() + \"] *********\");\n\t\tlayoutApplication.createRoom(scope.getName());\n\n    \treturn true;\n\t}","id":4379,"modified_method":"@Override\n\tpublic boolean roomStart(IScope scope) {\n\t\tlog.debug(\"***** \" + APP + \" [ \" + \" roomStart [ \" + scope.getName() + \"] *********\");\n\t\t\n\n    \treturn true;\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"@Override\n\tpublic boolean roomConnect(IConnection connection, Object[] params) {\n\t\tlog.debug(\"***** \" + APP + \" [ \" + \" roomConnect [ \" + connection.getScope().getName() + \"] *********\");\n\t\t\n    \treturn true;\n\t}","id":4380,"modified_method":"@Override\n\tpublic boolean roomConnect(IConnection connection, Object[] params) {\n\t\tlog.debug(\"***** \" + APP + \" [ \" + \" roomConnect [ \" + connection.getScope().getName() + \"] *********\");\n\t\tlayoutApplication.createRoom(scope.getName(), getBbbSession().getRecord());\n    \treturn true;\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public LayoutRoom(String meetingID) {\n\t\tthis.meetingID = meetingID;\n\t}","id":4381,"modified_method":"public LayoutRoom(String meetingID, Boolean recorded) {\n\t\tthis.meetingID = meetingID;\n\t\tthis.recorded = recorded;\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public ArrayList<String> getPresentations(String room){\n\t   if (roomsManager.hasRoom(room)){\n            return roomsManager.getPresentations(room);           \n        }\n        log.warn(\"Getting presentations on a non-existant room \" + room);\n        return null;\n\t}","id":4382,"modified_method":"public void getPresentations(String room){\n\t   if (hasRoom(room)){\n\t        PresentationRoom r = getRoom(room);\n\t        if (r != null) {\n\t        \tArrayList<String> pres = r.getPresentationNames();\n\t        \t\n\t        }            \n        }\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tpublic void sendUpdateMessage(Map message){\n\t\n\t\tString room = (String) message.get(\"room\");\n\t\tif (roomsManager.hasRoom(room)){\n\t\t\troomsManager.sendUpdateMessage(message);\n\t\t\treturn;\n\t\t}\n\t\tlog.warn(\"Sending update message to a non-existant room \" + room);\t\n\t}","id":4383,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tpublic void sendUpdateMessage(Map<String, Object> message){\n\t\n\t\tString room = (String) message.get(\"room\");\n\t\tif (hasRoom(room)){\n\t\t\tPresentationRoom r = getRoom(room);\n\t\t\tr.storePresentationNames(message);\n\t\t\treturn;\n\t\t}\n\t\tlog.warn(\"Sending update message to a non-existant room \" + room);\t\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public boolean destroyRoom(String name) {\n\t\tif (roomsManager.hasRoom(name)) {\n\t\t\troomsManager.removeRoom(name);\n\t\t}\n\t\treturn true;\n\t}","id":4384,"modified_method":"public boolean destroyRoom(String name) {\n\t\tif (hasRoom(name)) {\n\t\t\trooms.remove(name);\n\t\t}\n\t\treturn true;\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public void removePresentation(String room, String name){\n       if (roomsManager.hasRoom(room)){\n            roomsManager.removePresentation(room, name);           \n        } else {\n        \tlog.warn(\"Removing presentation from a non-existant room \" + room);\n        }\n    }","id":4385,"modified_method":"public void removePresentation(String room, String name){\n       if (hasRoom(room)){\n\t        PresentationRoom r = getRoom(room);\n\t        if (r != null) {\n\t     \t   r.removePresentation(name); \t        \t\n\t        }       \n        }\n    }","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public boolean hasRoom(String name) {\n\t\treturn roomsManager.hasRoom(name);\n\t}","id":4386,"modified_method":"public boolean hasRoom(String name) {\n\t\treturn rooms.containsKey(name);\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public boolean createRoom(String name) {\n\t\troomsManager.addRoom(new PresentationRoom(name));\n\t\treturn true;\n\t}","id":4387,"modified_method":"public boolean createRoom(String name, Boolean recorded) {\n\t\tPresentationRoom room = new PresentationRoom(name);\n\t\trooms.put(room.getName(), room);\n\t\treturn true;\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"@Override\n\tpublic boolean roomConnect(IConnection connection, Object[] params) {\n\t\tlog.debug(\"***** \" + APP + \" [ \" + \" roomConnect [ \" + connection.getScope().getName() + \"] *********\");\n\t\t\n\t\tISharedObject so = getSharedObject(connection.getScope(), PRESENTATION_SO, false);\n\t\tPresentationEventSender sender = new PresentationEventSender(so);\n\t\tPresentationEventRecorder recorder = new PresentationEventRecorder(connection.getScope().getName(), recorderApplication);\n    \tpresentationApplication.addRoomListener(connection.getScope().getName(), recorder);\n    \tpresentationApplication.addRoomListener(connection.getScope().getName(), sender);\n    \t\n    \treturn true;\n\t}","id":4388,"modified_method":"@Override\n\tpublic boolean roomConnect(IConnection connection, Object[] params) {\n\t\tlog.debug(\"***** \" + APP + \" [ \" + \" roomConnect [ \" + connection.getScope().getName() + \"] *********\");\n\t\t\n\t\tpresentationApplication.createRoom(scope.getName(), getBbbSession().getRecord());\n    \t\n    \treturn true;\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"@Override\n\tpublic boolean roomStart(IScope scope) {\n\t\tlog.debug(\"***** \" + APP + \" [ \" + \" roomStart [ \" + scope.getName() + \"] *********\");\n\t\t\n\t\tpresentationApplication.createRoom(scope.getName());\n \t\t\t\n\t\tlog.debug(APP + \" - scanning for presentations - \" + scope.getName());\n\t\ttry {\n\t\t\t// TODO: this is hard-coded, and not really a great abstraction.  need to fix this up later\n\t\t\tString folderPath = \"/var/bigbluebutton/\" + scope.getName() + \"/\" + scope.getName();\n\t\t\tFile folder = new File(folderPath);\n\t\t\t//log.debug(\"folder: {} - exists: {} - isDir: {}\", folder.getAbsolutePath(), folder.exists(), folder.isDirectory());\n\t\t\tif (folder.exists() && folder.isDirectory()) {\n\t\t\t\tFile[] presentations = folder.listFiles(new FileFilter() {\n\t\t\t\t\tpublic boolean accept(File path) {\n\t\t\t\t\t\tlog.debug(\"\\tfound: \" + path.getAbsolutePath());\n\t\t\t\t\t\treturn path.isDirectory();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfor (File presFile : presentations) {\n\t\t\t\t\tlog.debug(\"\\tshare: \" + presFile.getName());\n\t\t\t\t\tpresentationApplication.sharePresentation(scope.getName(), presFile.getName(), true);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception ex) {\n\t\t\tlog.error(scope.getName() + \": error scanning for existing presentations [\" + ex.getMessage() + \"]\", ex);\n\t\t}\n    \treturn true; \t\t\t\n\t}","id":4389,"modified_method":"@Override\n\tpublic boolean roomStart(IScope scope) {\n\t\tlog.debug(\"***** \" + APP + \" [ \" + \" roomStart [ \" + scope.getName() + \"] *********\");\n\t\t\n\t\t\n \t\t\t\n\t\tlog.debug(APP + \" - scanning for presentations - \" + scope.getName());\n\t\ttry {\n\t\t\t// TODO: this is hard-coded, and not really a great abstraction.  need to fix this up later\n\t\t\tString folderPath = \"/var/bigbluebutton/\" + scope.getName() + \"/\" + scope.getName();\n\t\t\tFile folder = new File(folderPath);\n\t\t\t//log.debug(\"folder: {} - exists: {} - isDir: {}\", folder.getAbsolutePath(), folder.exists(), folder.isDirectory());\n\t\t\tif (folder.exists() && folder.isDirectory()) {\n\t\t\t\tFile[] presentations = folder.listFiles(new FileFilter() {\n\t\t\t\t\tpublic boolean accept(File path) {\n\t\t\t\t\t\tlog.debug(\"\\tfound: \" + path.getAbsolutePath());\n\t\t\t\t\t\treturn path.isDirectory();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfor (File presFile : presentations) {\n\t\t\t\t\tlog.debug(\"\\tshare: \" + presFile.getName());\n\t\t\t\t\tpresentationApplication.sharePresentation(scope.getName(), presFile.getName(), true);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception ex) {\n\t\t\tlog.error(scope.getName() + \": error scanning for existing presentations [\" + ex.getMessage() + \"]\", ex);\n\t\t}\n    \treturn true; \t\t\t\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public void resizeAndMoveSlide(Double xOffset, Double yOffset, Double widthRatio, Double heightRatio) {\n\t\tthis.xOffset = xOffset;\n\t\tthis.yOffset = yOffset;\n\t\tthis.widthRatio = widthRatio;\n\t\tthis.heightRatio = heightRatio;\n\t\t\n\t\tfor (Iterator iter = listeners.values().iterator(); iter.hasNext();) {\n\t\t\tlog.debug(\"calling on listener\");\n\t\t\tIPresentationRoomListener listener = (IPresentationRoomListener) iter.next();\n\t\t\tlog.debug(\"calling sendUpdateMessage on listener \" + listener.getName());\n\t\t\tlistener.resizeAndMoveSlide(xOffset, yOffset, widthRatio, heightRatio);\n\t\t}\t\t\n\t}","id":4390,"modified_method":"public void resizeAndMoveSlide(Double xOffset, Double yOffset, Double widthRatio, Double heightRatio) {\n\t\tthis.xOffset = xOffset;\n\t\tthis.yOffset = yOffset;\n\t\tthis.widthRatio = widthRatio;\n\t\tthis.heightRatio = heightRatio;\n\t\t\t\t\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public void removePresentation(String presentationName){\n        log.debug(\"Request remove presentation \" + presentationName);\n        int index = presentationNames.indexOf(presentationName);\n        \n        if (index < 0) {\n            log.warn(\"Request remove presentation \" + presentationName + \". Presentation not found.\");\n            return;\n        }\n        \n        presentationNames.remove(index);\n        \n        for (Iterator iter = listeners.values().iterator(); iter.hasNext();) {\n            log.debug(\"calling on listener\");\n            IPresentationRoomListener listener = (IPresentationRoomListener) iter.next();\n            log.debug(\"calling removePresentation on listener \" + listener.getName());\n            listener.removePresentation(presentationName);\n        }   \n        \n        if (currentPresentation == presentationName) {\n            sharePresentation(presentationName, false);\n        }        \n    }","id":4391,"modified_method":"public void removePresentation(String presentationName){\n        log.debug(\"Request remove presentation \" + presentationName);\n        int index = presentationNames.indexOf(presentationName);\n        \n        if (index < 0) {\n            log.warn(\"Request remove presentation \" + presentationName + \". Presentation not found.\");\n            return;\n        }\n        \n        presentationNames.remove(index);\n        \n        \n        if (currentPresentation == presentationName) {\n            sharePresentation(presentationName, false);\n        }        \n    }","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tpublic void gotoSlide(int curslide){\n\t\tlog.debug(\"Request to go to slide \" + curslide + \"for room \" + name);\n\t\tcurrentSlide = curslide;\n\t\tfor (Iterator iter = listeners.values().iterator(); iter.hasNext();) {\n\t\t\tlog.debug(\"calling on listener\");\n\t\t\tIPresentationRoomListener listener = (IPresentationRoomListener) iter.next();\n\t\t\tlog.debug(\"calling sendUpdateMessage on listener \" + listener.getName());\n\t\t\tlistener.gotoSlide(curslide);\n\t\t}\t\t\t\n\t}","id":4392,"modified_method":"public void gotoSlide(int curslide){\n\t\tlog.debug(\"Request to go to slide \" + curslide + \"for room \" + name);\n\t\tcurrentSlide = curslide;\t\t\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tpublic void sharePresentation(String presentationName, Boolean share){\n\t\tlog.debug(\"Request share presentation \" + presentationName + \" \" + share + \" for room \" + name);\n\t\tsharing = share;\n\t\tif (share) {\n\t\t  currentPresentation = presentationName;\n\t\t  presentationNames.add(presentationName);   \n\t\t} else {\n\t\t  currentPresentation = \"\";\n\t\t}\n\t\t \n\t\tfor (Iterator iter = listeners.values().iterator(); iter.hasNext();) {\n\t\t\tlog.debug(\"calling on listener\");\n\t\t\tIPresentationRoomListener listener = (IPresentationRoomListener) iter.next();\n\t\t\tlog.debug(\"calling sharePresentation on listener \" + listener.getName());\n\t\t\tlistener.sharePresentation(presentationName, share);\n\t\t}\t\t\t\n\t}","id":4393,"modified_method":"public void sharePresentation(String presentationName, Boolean share){\n\t\tlog.debug(\"Request share presentation \" + presentationName + \" \" + share + \" for room \" + name);\n\t\tsharing = share;\n\t\tif (share) {\n\t\t  currentPresentation = presentationName;\n\t\t  presentationNames.add(presentationName);   \n\t\t} else {\n\t\t  currentPresentation = \"\";\n\t\t}\t\t\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tprivate void storePresentationNames(Map message){\n        String presentationName = (String) message.get(\"presentationName\");\n        String messageKey = (String) message.get(\"messageKey\");\n             \n        if (messageKey.equalsIgnoreCase(\"CONVERSION_COMPLETED\")) {            \n            log.debug(messageKey + \"[\" + presentationName + \"]\");\n            presentationNames.add(presentationName);                                \n        }           \n    }","id":4394,"modified_method":"public void storePresentationNames(Map<String, Object> message){\n        String presentationName = (String) message.get(\"presentationName\");\n        String messageKey = (String) message.get(\"messageKey\");\n             \n        if (messageKey.equalsIgnoreCase(\"CONVERSION_COMPLETED\")) {            \n            log.debug(messageKey + \"[\" + presentationName + \"]\");\n            presentationNames.add(presentationName);                                \n        }           \n    }","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public PresentationRoom(String name) {\n\t\tthis.name = name;\n\t\tlisteners   = new ConcurrentHashMap<String, IPresentationRoomListener>();\n\t}","id":4395,"modified_method":"public PresentationRoom(String name) {\n\t\tthis.name = name;\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public void sendCursorUpdate(Double xPercent, Double yPercent) {\n\t\tthis.xPercent = xPercent;\n\t\tthis.yPercent = yPercent;\n\t\t\n\t\tfor (Iterator iter = listeners.values().iterator(); iter.hasNext();) {\n\t\t\tlog.debug(\"calling on listener\");\n\t\t\tIPresentationRoomListener listener = (IPresentationRoomListener) iter.next();\n\t\t\tlog.debug(\"calling sendCursorUpdate on listener \" + listener.getName());\n\t\t\tlistener.sendCursorUpdate(xPercent,yPercent);\n\t\t}\n\t}","id":4396,"modified_method":"public void sendCursorUpdate(Double xPercent, Double yPercent) {\n\t\tthis.xPercent = xPercent;\n\t\tthis.yPercent = yPercent;\n\t}","commit_id":"e347942134408fd6f0342d8e743a097e208ea8c5","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"@Nonnull\n    @Override\n    public String startBlobGC() {\n        if (gcOp != null && !gcOp.isDone()) {\n            return \"Garbage collection already running\";\n        } else {\n            gcOp = new FutureTask<Long>(new Callable<Long>() {\n                @Override\n                public Long call() throws Exception {\n                    long t0 = System.nanoTime();\n                    blobGarbageCollector.collectGarbage();\n                    return System.nanoTime() - t0;\n                }\n            });\n            executor.execute(gcOp);\n            return getBlobGCStatus();\n        }\n    }","id":4397,"modified_method":"@Nonnull\n    @Override\n    public CompositeData startBlobGC() {\n        if (gcOp.isDone()) {\n            gcOp = new ManagementOperation(OP_NAME, new Callable<Long>() {\n                @Override\n                public Long call() throws Exception {\n                    long t0 = nanoTime();\n                    blobGarbageCollector.collectGarbage();\n                    return nanoTime() - t0;\n                }\n            });\n            executor.execute(gcOp);\n        }\n        return getBlobGCStatus();\n    }","commit_id":"a7cca09310c97271e989871c761d663e3a175071","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Nonnull\n    @Override\n    public String getBlobGCStatus() {\n        if (gcOp == null) {\n            return \"Garbage collection not started\";\n        } else if (gcOp.isCancelled()) {\n            return \"Garbage collection cancelled\";\n        } else if (gcOp.isDone()) {\n            try {\n                return \"Garbage collection completed in \" + formatTime(gcOp.get());\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n                return \"Garbage Collection status unknown: \" + e.getMessage();\n            } catch (ExecutionException e) {\n                log.error(\"Garbage collection failed\", e.getCause());\n                return \"Garbage collection failed: \" + e.getCause().getMessage();\n            }\n        } else {\n            return \"Garbage collection running\";\n        }\n    }","id":4398,"modified_method":"@Nonnull\n    @Override\n    public CompositeData getBlobGCStatus() {\n        return gcOp.getStatus().toCompositeData();\n    }","commit_id":"a7cca09310c97271e989871c761d663e3a175071","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public synchronized String startRestore() {\n        if (restoreOp != null && !restoreOp.isDone()) {\n            return \"Restore already running\";\n        } else {\n            restoreOp = new FutureTask<Long>(new Callable<Long>() {\n                @Override\n                public Long call() throws Exception {\n                    long t0 = System.nanoTime();\n                    FileStoreRestore.restore(file, store);\n                    return System.nanoTime() - t0;\n                }\n            });\n            executor.execute(restoreOp);\n            return getRestoreStatus();\n        }\n    }","id":4399,"modified_method":"@Override\n    public synchronized CompositeData startRestore() {\n        if (restoreOp.isDone()) {\n            restoreOp = new ManagementOperation(\"Restore\", new Callable<Long>() {\n                @Override\n                public Long call() throws Exception {\n                    long t0 = nanoTime();\n                    restore(file, store);\n                    return nanoTime() - t0;\n                }\n            });\n            executor.execute(restoreOp);\n        }\n        return getRestoreStatus();\n    }","commit_id":"a7cca09310c97271e989871c761d663e3a175071","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public synchronized String startBackup() {\n        if (backupOp != null && !backupOp.isDone()) {\n            return \"Backup already running\";\n        } else {\n            backupOp = new FutureTask<Long>(new Callable<Long>() {\n                @Override\n                public Long call() throws Exception {\n                    long t0 = System.nanoTime();\n                    FileStoreBackup.backup(store, file);\n                    return System.nanoTime() - t0;\n                }\n            });\n            executor.execute(backupOp);\n            return getBackupStatus();\n        }\n    }","id":4400,"modified_method":"@Override\n    public synchronized CompositeData startBackup() {\n        if (backupOp.isDone()) {\n            backupOp = new ManagementOperation(\"Backup\", new Callable<Long>() {\n                @Override\n                public Long call() throws Exception {\n                    long t0 = nanoTime();\n                    backup(store, file);\n                    return nanoTime() - t0;\n                }\n            });\n            executor.execute(backupOp);\n        }\n        return getBackupStatus();\n    }","commit_id":"a7cca09310c97271e989871c761d663e3a175071","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public synchronized String getBackupStatus() {\n        if (backupOp == null) {\n            return \"Backup not started\";\n        } else if (backupOp.isCancelled()) {\n            return \"Backup cancelled\";\n        } else if (backupOp.isDone()) {\n            try {\n                return \"Backup completed in \" + formatTime(backupOp.get());\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n                return \"Backup status unknown: \" + e.getMessage();\n            } catch (ExecutionException e) {\n                log.error(\"Backup failed\", e.getCause());\n                return \"Backup failed: \" + e.getCause().getMessage();\n            }\n        } else {\n            return \"Backup running\";\n        }\n    }","id":4401,"modified_method":"@Override\n    public synchronized CompositeData getBackupStatus() {\n        return backupOp.getStatus().toCompositeData();\n    }","commit_id":"a7cca09310c97271e989871c761d663e3a175071","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public synchronized String getRestoreStatus() {\n        if (restoreOp == null) {\n            return \"Restore not started\";\n        } else if (restoreOp.isCancelled()) {\n            return \"Restore cancelled\";\n        } else if (restoreOp.isDone()) {\n            try {\n                return \"Restore completed in \" + formatTime(restoreOp.get());\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n                return \"Restore status unknown: \" + e.getMessage();\n            } catch (ExecutionException e) {\n                log.error(\"Restore failed\", e.getCause());\n                return \"Restore failed: \" + e.getCause().getMessage();\n            }\n        } else {\n            return \"Restore running\";\n        }\n    }","id":4402,"modified_method":"@Override\n    public synchronized CompositeData getRestoreStatus() {\n        return restoreOp.getStatus().toCompositeData();\n    }","commit_id":"a7cca09310c97271e989871c761d663e3a175071","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Nonnull\n    @Override\n    public String startRevisionGC() {\n        if (gcOp != null && !gcOp.isDone()) {\n            return \"Garbage collection already running\";\n        } else {\n            gcOp = new FutureTask<Long>(new Callable<Long>() {\n                @Override\n                public Long call() throws Exception {\n                    long t0 = System.nanoTime();\n                    gc.run();\n                    return System.nanoTime() - t0;\n                }\n            });\n            executor.execute(gcOp);\n            return getRevisionGCStatus();\n        }\n    }","id":4403,"modified_method":"@Nonnull\n    @Override\n    public CompositeData startRevisionGC() {\n        if (gcOp.isDone()) {\n            gcOp = new ManagementOperation(OP_NAME, new Callable<Long>() {\n                @Override\n                public Long call() throws Exception {\n                    long t0 = nanoTime();\n                    gc.run();\n                    return nanoTime() - t0;\n                }\n            });\n            executor.execute(gcOp);\n        }\n        return getRevisionGCStatus();\n    }","commit_id":"a7cca09310c97271e989871c761d663e3a175071","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Nonnull\n    @Override\n    public String getRevisionGCStatus() {\n        if (gcOp == null) {\n            return \"Garbage collection not started\";\n        } else if (gcOp.isCancelled()) {\n            return \"Garbage collection cancelled\";\n        } else if (gcOp.isDone()) {\n            try {\n                return \"Garbage collection completed in \" + formatTime(gcOp.get());\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n                return \"Garbage Collection status unknown: \" + e.getMessage();\n            } catch (ExecutionException e) {\n                log.error(\"Garbage collection failed\", e.getCause());\n                return \"Garbage collection failed: \" + e.getCause().getMessage();\n            }\n        } else {\n            return \"Garbage collection running\";\n        }\n    }","id":4404,"modified_method":"@Nonnull\n    @Override\n    public CompositeData getRevisionGCStatus() {\n        return gcOp.getStatus().toCompositeData();\n    }","commit_id":"a7cca09310c97271e989871c761d663e3a175071","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     * @throws Exception If any error occurs.\n     */\n    public void testThreeNodesStartStop() throws Exception {\n        try {\n            startGrid(1);\n            startGrid(2);\n            startGrid(3);\n        }\n        finally {\n            stopAllGrids();\n        }\n    }","id":4405,"modified_method":"/**\n     * @throws Exception If any error occurs.\n     */\n    public void testThreeNodesStartStop() throws Exception {\n        try {\n            IgniteEx ignite1 = startGrid(1);\n            IgniteEx ignite2 = startGrid(2);\n            IgniteEx ignite3 = startGrid(3);\n\n            TcpDiscoverySpi spi1 = (TcpDiscoverySpi)ignite1.configuration().getDiscoverySpi();\n            TcpDiscoverySpi spi2 = (TcpDiscoverySpi)ignite2.configuration().getDiscoverySpi();\n            TcpDiscoverySpi spi3 = (TcpDiscoverySpi)ignite3.configuration().getDiscoverySpi();\n\n            TcpDiscoveryNode node = (TcpDiscoveryNode)spi1.getNode(ignite2.localNode().id());\n\n            assertNotNull(node);\n            assertNotNull(node.lastSuccessfulAddress());\n\n            LinkedHashSet<InetSocketAddress> addrs = spi1.getNodeAddresses(node);\n\n            assertEquals(addrs.iterator().next(), node.lastSuccessfulAddress());\n\n            assertTrue(spi1.pingNode(ignite3.localNode().id()));\n\n            node = (TcpDiscoveryNode)spi1.getNode(ignite3.localNode().id());\n\n            assertNotNull(node);\n            assertNotNull(node.lastSuccessfulAddress());\n\n            addrs = spi1.getNodeAddresses(node);\n            assertEquals(addrs.iterator().next(), node.lastSuccessfulAddress());\n\n            node = (TcpDiscoveryNode)spi2.getNode(ignite1.localNode().id());\n\n            assertNotNull(node);\n            assertNotNull(node.lastSuccessfulAddress());\n\n            node = (TcpDiscoveryNode)spi2.getNode(ignite3.localNode().id());\n\n            assertNotNull(node);\n            assertNotNull(node.lastSuccessfulAddress());\n\n            node = (TcpDiscoveryNode)spi3.getNode(ignite1.localNode().id());\n\n            assertNotNull(node);\n            assertNotNull(node.lastSuccessfulAddress());\n        }\n        finally {\n            stopAllGrids();\n        }\n    }","commit_id":"d699faa34d66b8e5f1487daf3386c4d677d8c1e5","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Verify that the preprocessed data hasn't been modified by checking the \n     * H(payload+IV)[0:3] vs preprocessed[16:19], where payload is the data \n     * after the padding.  Remember, the preprocessed data is formatted as\n     * { IV + H[0:3] + padding + {instructions, fragment}* }.  This function is\n     * very wasteful of memory usage as it doesn't operate inline (since IV and\n     * payload are mixed up).  Later it may be worthwhile to explore optimizing\n     * this.\n     */\n    private boolean verifyPreprocessed(byte preprocessed[], int offset, int length) {\n        // ByteCache/ByteArray corruption detection\n        //byte[] orig = new byte[length];\n        //System.arraycopy(preprocessed, 0, orig, 0, length);\n        //try {\n        //    Thread.sleep(75);\n        //} catch (InterruptedException ie) {}\n\n        // now we need to verify that the message was received correctly\n        int paddingEnd = HopProcessor.IV_LENGTH + 4;\n        while (preprocessed[offset+paddingEnd] != (byte)0x00) {\n            paddingEnd++;\n            if (offset+paddingEnd >= length) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"cannot verify, going past the end [off=\" \n                              + offset + \" len=\" + length + \" paddingEnd=\" \n                              + paddingEnd + \" data: \"\n                              + Base64.encode(preprocessed, offset, length));\n                return false;\n            }\n        }\n        paddingEnd++; // skip the last\n        \n        ByteArray ba = _validateCache.acquire(); // larger than necessary, but always sufficient\n        byte preV[] = ba.getData();\n        int validLength = length - offset - paddingEnd + HopProcessor.IV_LENGTH;\n        System.arraycopy(preprocessed, offset + paddingEnd, preV, 0, validLength - HopProcessor.IV_LENGTH);\n        System.arraycopy(preprocessed, 0, preV, validLength - HopProcessor.IV_LENGTH, HopProcessor.IV_LENGTH);\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"endpoint IV: \" + Base64.encode(preV, validLength - HopProcessor.IV_LENGTH, HopProcessor.IV_LENGTH));\n        \n        Hash v = _context.sha().calculateHash(preV, 0, validLength);\n        _validateCache.release(ba);\n        \n        boolean eq = DataHelper.eq(v.getData(), 0, preprocessed, offset + HopProcessor.IV_LENGTH, 4);\n        if (!eq) {\n            if (_log.shouldLog(Log.WARN)) {\n                _log.warn(\"Corrupt tunnel message - verification fails: \" + Base64.encode(preprocessed, offset+HopProcessor.IV_LENGTH, 4)\n                           + \" != \" + Base64.encode(v.getData(), 0, 4));\n                _log.warn(\"No matching endpoint: # pad bytes: \" + (paddingEnd-(HopProcessor.IV_LENGTH+4)-1)\n                           + \" offset=\" + offset + \" length=\" + length + \" paddingEnd=\" + paddingEnd + ' '\n                           + Base64.encode(preprocessed, offset, length), new Exception(\"trace\"));\n            }\n        }\n        \n        if (eq) {\n            int excessPadding = paddingEnd - (HopProcessor.IV_LENGTH + 4 + 1);\n            if (excessPadding > 0) // suboptimal fragmentation\n                _context.statManager().addRateData(\"tunnel.smallFragments\", excessPadding, 0);\n            else\n                _context.statManager().addRateData(\"tunnel.fullFragments\", 1, 0);\n        }\n        \n        // ByteCache/ByteArray corruption detection\n        //if (!DataHelper.eq(preprocessed, 0, orig, 0, length)) {\n        //    _log.log(Log.CRIT, \"Not equal! orig =\\n\" + Base64.encode(orig, 0, length) +\n        //             \"\\nprep =\\n\" + Base64.encode(preprocessed, 0, length),\n        //             new Exception(\"hosed\"));\n        //}\n\n        return eq;\n    }","id":4406,"modified_method":"/**\n     * Verify that the preprocessed data hasn't been modified by checking the \n     * H(payload+IV)[0:3] vs preprocessed[16:19], where payload is the data \n     * after the padding.  Remember, the preprocessed data is formatted as\n     * { IV + H[0:3] + padding + {instructions, fragment}* }.  This function is\n     * very wasteful of memory usage as it doesn't operate inline (since IV and\n     * payload are mixed up).  Later it may be worthwhile to explore optimizing\n     * this.\n     */\n    private boolean verifyPreprocessed(byte preprocessed[], int offset, int length) {\n        // ByteCache/ByteArray corruption detection\n        //byte[] orig = new byte[length];\n        //System.arraycopy(preprocessed, 0, orig, 0, length);\n        //try {\n        //    Thread.sleep(75);\n        //} catch (InterruptedException ie) {}\n\n        // now we need to verify that the message was received correctly\n        int paddingEnd = HopProcessor.IV_LENGTH + 4;\n        while (preprocessed[offset+paddingEnd] != (byte)0x00) {\n            paddingEnd++;\n            if (offset+paddingEnd >= length) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"cannot verify, going past the end [off=\" \n                              + offset + \" len=\" + length + \" paddingEnd=\" \n                              + paddingEnd + \" data: \"\n                              + Base64.encode(preprocessed, offset, length));\n                return false;\n            }\n        }\n        paddingEnd++; // skip the last\n        \n        ByteArray ba = _validateCache.acquire(); // larger than necessary, but always sufficient\n        byte preV[] = ba.getData();\n        int validLength = length - offset - paddingEnd + HopProcessor.IV_LENGTH;\n        System.arraycopy(preprocessed, offset + paddingEnd, preV, 0, validLength - HopProcessor.IV_LENGTH);\n        System.arraycopy(preprocessed, 0, preV, validLength - HopProcessor.IV_LENGTH, HopProcessor.IV_LENGTH);\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"endpoint IV: \" + Base64.encode(preV, validLength - HopProcessor.IV_LENGTH, HopProcessor.IV_LENGTH));\n        \n        byte[] v = SimpleByteCache.acquire(Hash.HASH_LENGTH);\n        _context.sha().calculateHash(preV, 0, validLength, v, 0);\n        _validateCache.release(ba);\n        \n        boolean eq = DataHelper.eq(v, 0, preprocessed, offset + HopProcessor.IV_LENGTH, 4);\n        if (!eq) {\n            if (_log.shouldLog(Log.WARN)) {\n                _log.warn(\"Corrupt tunnel message - verification fails: \" + Base64.encode(preprocessed, offset+HopProcessor.IV_LENGTH, 4)\n                           + \" != \" + Base64.encode(v, 0, 4));\n                _log.warn(\"No matching endpoint: # pad bytes: \" + (paddingEnd-(HopProcessor.IV_LENGTH+4)-1)\n                           + \" offset=\" + offset + \" length=\" + length + \" paddingEnd=\" + paddingEnd + ' '\n                           + Base64.encode(preprocessed, offset, length), new Exception(\"trace\"));\n            }\n        }\n        SimpleByteCache.release(v);\n        \n        if (eq) {\n            int excessPadding = paddingEnd - (HopProcessor.IV_LENGTH + 4 + 1);\n            if (excessPadding > 0) // suboptimal fragmentation\n                _context.statManager().addRateData(\"tunnel.smallFragments\", excessPadding, 0);\n            else\n                _context.statManager().addRateData(\"tunnel.fullFragments\", 1, 0);\n        }\n        \n        // ByteCache/ByteArray corruption detection\n        //if (!DataHelper.eq(preprocessed, 0, orig, 0, length)) {\n        //    _log.log(Log.CRIT, \"Not equal! orig =\\n\" + Base64.encode(orig, 0, length) +\n        //             \"\\nprep =\\n\" + Base64.encode(preprocessed, 0, length),\n        //             new Exception(\"hosed\"));\n        //}\n\n        return eq;\n    }","commit_id":"fd4e4fbc64d665b1f05fc4388a693121f58c006f","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public int readBytes(byte data[], int type, int offset) throws I2NPMessageException, IOException {\n        int cur = offset;\n        if (type < 0) {\n            type = (int)DataHelper.fromLong(data, cur, 1);\n            cur++;\n        }\n        _uniqueId = DataHelper.fromLong(data, cur, 4);\n        cur += 4;\n        _expiration = DataHelper.fromLong(data, cur, DataHelper.DATE_LENGTH);\n        cur += DataHelper.DATE_LENGTH;\n        int size = (int)DataHelper.fromLong(data, cur, 2);\n        cur += 2;\n        //Hash h = new Hash();\n        byte hdata[] = new byte[CHECKSUM_LENGTH];\n        System.arraycopy(data, cur, hdata, 0, CHECKSUM_LENGTH);\n        cur += CHECKSUM_LENGTH;\n        //h.setData(hdata);\n\n        if (cur + size > data.length)\n            throw new I2NPMessageException(\"Payload is too short [\" \n                                           + \"data.len=\" + data.length\n                                           + \" offset=\" + offset\n                                           + \" cur=\" + cur \n                                           + \" wanted=\" + size + \"]: \" + getClass().getName());\n\n        Hash calc = _context.sha().calculateHash(data, cur, size);\n        //boolean eq = calc.equals(h);\n        boolean eq = DataHelper.eq(hdata, 0, calc.getData(), 0, CHECKSUM_LENGTH);\n        if (!eq)\n            throw new I2NPMessageException(\"Hash does not match for \" + getClass().getName());\n\n        long start = _context.clock().now();\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Reading bytes: type = \" + type + \" / uniqueId : \" + _uniqueId + \" / expiration : \" + _expiration);\n        readMessage(data, cur, size, type);\n        cur += size;\n        //long time = _context.clock().now() - start;\n        //if (time > 50)\n        //    _context.statManager().addRateData(\"i2np.readTime\", time, time);\n        return cur - offset;\n    }","id":4407,"modified_method":"/**\n     *  Read the header, then read the rest into buffer, then call\n     *  readMessage in the implemented message type\n     *\n     *<pre>\n     *  Specifically:\n     *    1 byte type (if caller didn't read already, as specified by the type param\n     *    4 byte ID\n     *    8 byte expiration\n     *    2 byte size\n     *    1 byte checksum\n     *    size bytes of payload (read by readMessage() in implementation)\n     *<\/pre>\n     *\n     *  @param type the message type or -1 if we should read it here\n     *  @return total length of the message\n     */\n    public int readBytes(byte data[], int type, int offset) throws I2NPMessageException, IOException {\n        int cur = offset;\n        if (type < 0) {\n            type = (int)DataHelper.fromLong(data, cur, 1);\n            cur++;\n        }\n        _uniqueId = DataHelper.fromLong(data, cur, 4);\n        cur += 4;\n        _expiration = DataHelper.fromLong(data, cur, DataHelper.DATE_LENGTH);\n        cur += DataHelper.DATE_LENGTH;\n        int size = (int)DataHelper.fromLong(data, cur, 2);\n        cur += 2;\n        //Hash h = new Hash();\n        byte hdata[] = new byte[CHECKSUM_LENGTH];\n        System.arraycopy(data, cur, hdata, 0, CHECKSUM_LENGTH);\n        cur += CHECKSUM_LENGTH;\n        //h.setData(hdata);\n\n        if (cur + size > data.length)\n            throw new I2NPMessageException(\"Payload is too short [\" \n                                           + \"data.len=\" + data.length\n                                           + \" offset=\" + offset\n                                           + \" cur=\" + cur \n                                           + \" wanted=\" + size + \"]: \" + getClass().getName());\n\n        byte[] calc = SimpleByteCache.acquire(Hash.HASH_LENGTH);\n        _context.sha().calculateHash(data, cur, size, calc, 0);\n        boolean eq = DataHelper.eq(hdata, 0, calc, 0, CHECKSUM_LENGTH);\n        SimpleByteCache.release(calc);\n        if (!eq)\n            throw new I2NPMessageException(\"Hash does not match for \" + getClass().getName());\n\n        long start = _context.clock().now();\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Reading bytes: type = \" + type + \" / uniqueId : \" + _uniqueId + \" / expiration : \" + _expiration);\n        readMessage(data, cur, size, type);\n        cur += size;\n        //long time = _context.clock().now() - start;\n        //if (time > 50)\n        //    _context.statManager().addRateData(\"i2np.readTime\", time, time);\n        return cur - offset;\n    }","commit_id":"fd4e4fbc64d665b1f05fc4388a693121f58c006f","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     *  Read the header, then read the rest into buffer, then call\n     *  readMessage in the implemented message type\n     *\n     *  Specifically:\n     *    1 byte type (if caller didn't read already, as specified by the type param\n     *    4 byte ID\n     *    8 byte expiration\n     *    2 byte size\n     *    1 byte checksum\n     *    size bytes of payload (read by readMessage() in implementation)\n     *\n     *  @param type the message type or -1 if we should read it here\n     *  @param buffer temp buffer to use\n     */\n    public int readBytes(InputStream in, int type, byte buffer[]) throws I2NPMessageException, IOException {\n        try {\n            if (type < 0)\n                type = (int)DataHelper.readLong(in, 1);\n            _uniqueId = DataHelper.readLong(in, 4);\n            _expiration = DataHelper.readLong(in, DataHelper.DATE_LENGTH);\n            int size = (int)DataHelper.readLong(in, 2);\n            byte checksum[] = new byte[CHECKSUM_LENGTH];\n            int read = DataHelper.read(in, checksum);\n            if (read != CHECKSUM_LENGTH)\n                throw new I2NPMessageException(\"checksum is too small [\" + read + \"]\");\n            //Hash h = new Hash();\n            //h.readBytes(in);\n            if (buffer.length < size) {\n                if (size > MAX_SIZE) throw new I2NPMessageException(\"size=\" + size);\n                buffer = new byte[size];\n            }\n            \n            int cur = 0;\n            while (cur < size) {\n                int numRead = in.read(buffer, cur, size- cur);\n                if (numRead == -1) {\n                    throw new I2NPMessageException(\"Payload is too short [\" + numRead + \", wanted \" + size + \"]\");\n                }\n                cur += numRead;\n            }\n            \n            Hash calc = _context.sha().calculateHash(buffer, 0, size);\n            //boolean eq = calc.equals(h);\n            boolean eq = DataHelper.eq(checksum, 0, calc.getData(), 0, CHECKSUM_LENGTH);\n            if (!eq)\n                throw new I2NPMessageException(\"Hash does not match for \" + getClass().getName());\n\n            long start = _context.clock().now();\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"Reading bytes: type = \" + type + \" / uniqueId : \" + _uniqueId + \" / expiration : \" + _expiration);\n            readMessage(buffer, 0, size, type);\n            //long time = _context.clock().now() - start;\n            //if (time > 50)\n            //    _context.statManager().addRateData(\"i2np.readTime\", time, time);\n            return size + Hash.HASH_LENGTH + 1 + 4 + DataHelper.DATE_LENGTH;\n        } catch (DataFormatException dfe) {\n            throw new I2NPMessageException(\"Error reading the message header\", dfe);\n        }\n    }","id":4408,"modified_method":"/**\n     *  Read the header, then read the rest into buffer, then call\n     *  readMessage in the implemented message type\n     *\n     *<pre>\n     *  Specifically:\n     *    1 byte type (if caller didn't read already, as specified by the type param\n     *    4 byte ID\n     *    8 byte expiration\n     *    2 byte size\n     *    1 byte checksum\n     *    size bytes of payload (read by readMessage() in implementation)\n     *<\/pre>\n     *\n     *  @param type the message type or -1 if we should read it here\n     *  @param buffer temp buffer to use\n     *  @return total length of the message\n     */\n    public int readBytes(InputStream in, int type, byte buffer[]) throws I2NPMessageException, IOException {\n        try {\n            if (type < 0)\n                type = (int)DataHelper.readLong(in, 1);\n            _uniqueId = DataHelper.readLong(in, 4);\n            _expiration = DataHelper.readLong(in, DataHelper.DATE_LENGTH);\n            int size = (int)DataHelper.readLong(in, 2);\n            byte checksum[] = new byte[CHECKSUM_LENGTH];\n            int read = DataHelper.read(in, checksum);\n            if (read != CHECKSUM_LENGTH)\n                throw new I2NPMessageException(\"checksum is too small [\" + read + \"]\");\n            //Hash h = new Hash();\n            //h.readBytes(in);\n            if (buffer.length < size) {\n                if (size > MAX_SIZE) throw new I2NPMessageException(\"size=\" + size);\n                buffer = new byte[size];\n            }\n            \n            int cur = 0;\n            while (cur < size) {\n                int numRead = in.read(buffer, cur, size- cur);\n                if (numRead == -1) {\n                    throw new I2NPMessageException(\"Payload is too short [\" + numRead + \", wanted \" + size + \"]\");\n                }\n                cur += numRead;\n            }\n            \n            byte[] calc = SimpleByteCache.acquire(Hash.HASH_LENGTH);\n            _context.sha().calculateHash(buffer, 0, size, calc, 0);\n            //boolean eq = calc.equals(h);\n            boolean eq = DataHelper.eq(checksum, 0, calc, 0, CHECKSUM_LENGTH);\n            SimpleByteCache.release(calc);\n            if (!eq)\n                throw new I2NPMessageException(\"Hash does not match for \" + getClass().getName());\n\n            long start = _context.clock().now();\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"Reading bytes: type = \" + type + \" / uniqueId : \" + _uniqueId + \" / expiration : \" + _expiration);\n            readMessage(buffer, 0, size, type);\n            //long time = _context.clock().now() - start;\n            //if (time > 50)\n            //    _context.statManager().addRateData(\"i2np.readTime\", time, time);\n            return CHECKSUM_LENGTH + 1 + 2 + 4 + DataHelper.DATE_LENGTH + size;\n        } catch (DataFormatException dfe) {\n            throw new I2NPMessageException(\"Error reading the message header\", dfe);\n        }\n    }","commit_id":"fd4e4fbc64d665b1f05fc4388a693121f58c006f","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public int toByteArray(byte buffer[]) {\n        long start = _context.clock().now();\n\n        int prefixLen = 1 // type\n                        + 4 // uniqueId\n                        + DataHelper.DATE_LENGTH // expiration\n                        + 2 // payload length\n                        + CHECKSUM_LENGTH; // walnuts\n        //byte prefix[][] = new byte[][] { DataHelper.toLong(1, getType()), \n        //                                 DataHelper.toLong(4, _uniqueId),\n        //                                 DataHelper.toLong(DataHelper.DATE_LENGTH, _expiration),\n        //                                 new byte[2], \n        //                                 new byte[CHECKSUM_LENGTH]};\n        //byte suffix[][] = new byte[][] { };\n        try {\n            int writtenLen = writeMessageBody(buffer, prefixLen);\n            int payloadLen = writtenLen - prefixLen;\n            Hash h = _context.sha().calculateHash(buffer, prefixLen, payloadLen);\n\n            int off = 0;\n            DataHelper.toLong(buffer, off, 1, getType());\n            off += 1;\n            DataHelper.toLong(buffer, off, 4, _uniqueId);\n            off += 4;\n            DataHelper.toLong(buffer, off, DataHelper.DATE_LENGTH, _expiration);\n            off += DataHelper.DATE_LENGTH;\n            DataHelper.toLong(buffer, off, 2, payloadLen);\n            off += 2;\n            System.arraycopy(h.getData(), 0, buffer, off, CHECKSUM_LENGTH);\n\n            //long time = _context.clock().now() - start;\n            //if (time > 50)\n            //    _context.statManager().addRateData(\"i2np.writeTime\", time, time);\n\n            return writtenLen;                     \n        } catch (I2NPMessageException ime) {\n            _context.logManager().getLog(getClass()).log(Log.CRIT, \"Error writing\", ime);\n            throw new IllegalStateException(\"Unable to serialize the message (\" + getClass().getName() \n                                            + \"): \" + ime.getMessage());\n        }\n    }","id":4409,"modified_method":"public int toByteArray(byte buffer[]) {\n        long start = _context.clock().now();\n\n        int prefixLen = 1 // type\n                        + 4 // uniqueId\n                        + DataHelper.DATE_LENGTH // expiration\n                        + 2 // payload length\n                        + CHECKSUM_LENGTH; // walnuts\n        //byte prefix[][] = new byte[][] { DataHelper.toLong(1, getType()), \n        //                                 DataHelper.toLong(4, _uniqueId),\n        //                                 DataHelper.toLong(DataHelper.DATE_LENGTH, _expiration),\n        //                                 new byte[2], \n        //                                 new byte[CHECKSUM_LENGTH]};\n        //byte suffix[][] = new byte[][] { };\n        try {\n            int writtenLen = writeMessageBody(buffer, prefixLen);\n            int payloadLen = writtenLen - prefixLen;\n            byte[] h = SimpleByteCache.acquire(Hash.HASH_LENGTH);\n            _context.sha().calculateHash(buffer, prefixLen, payloadLen, h, 0);\n\n            int off = 0;\n            DataHelper.toLong(buffer, off, 1, getType());\n            off += 1;\n            DataHelper.toLong(buffer, off, 4, _uniqueId);\n            off += 4;\n            DataHelper.toLong(buffer, off, DataHelper.DATE_LENGTH, _expiration);\n            off += DataHelper.DATE_LENGTH;\n            DataHelper.toLong(buffer, off, 2, payloadLen);\n            off += 2;\n            System.arraycopy(h, 0, buffer, off, CHECKSUM_LENGTH);\n            SimpleByteCache.release(h);\n\n            //long time = _context.clock().now() - start;\n            //if (time > 50)\n            //    _context.statManager().addRateData(\"i2np.writeTime\", time, time);\n\n            return writtenLen;                     \n        } catch (I2NPMessageException ime) {\n            _context.logManager().getLog(getClass()).log(Log.CRIT, \"Error writing\", ime);\n            throw new IllegalStateException(\"Unable to serialize the message (\" + getClass().getName() \n                                            + \"): \" + ime.getMessage());\n        }\n    }","commit_id":"fd4e4fbc64d665b1f05fc4388a693121f58c006f","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public final void calculateHash(byte[] source, int start, int len, byte out[], int outOffset) {\n        Sha256Standalone digest = acquireGnu();\n        digest.update(source, start, len);\n        byte rv[] = digest.digest();\n        releaseGnu(digest);\n        System.arraycopy(rv, 0, out, outOffset, rv.length);\n    }","id":4410,"modified_method":"/**\n     * Use this if you only need the data, not a Hash object.\n     * Does not cache.\n     */\n    public final void calculateHash(byte[] source, int start, int len, byte out[], int outOffset) {\n        Sha256Standalone digest = acquireGnu();\n        digest.update(source, start, len);\n        byte rv[] = digest.digest();\n        releaseGnu(digest);\n        System.arraycopy(rv, 0, out, outOffset, rv.length);\n    }","commit_id":"fd4e4fbc64d665b1f05fc4388a693121f58c006f","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public final Hash calculateHash(byte[] source, int start, int len) {\n        Sha256Standalone digest = acquireGnu();\n        digest.update(source, start, len);\n        byte rv[] = digest.digest();\n        releaseGnu(digest);\n        //return new Hash(rv);\n        return Hash.create(rv);\n    }","id":4411,"modified_method":"/**\n     * Calculate the hash and cache the result.\n     */\n    public final Hash calculateHash(byte[] source, int start, int len) {\n        Sha256Standalone digest = acquireGnu();\n        digest.update(source, start, len);\n        byte rv[] = digest.digest();\n        releaseGnu(digest);\n        //return new Hash(rv);\n        return Hash.create(rv);\n    }","commit_id":"fd4e4fbc64d665b1f05fc4388a693121f58c006f","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"@Override\n         public void visit(Code obj) {\n\t\tpreviousLoadOf = -1;\n\t\tpreviousGotoTarget = -1;\n\t\tgotoCount = 0;\n\t\tsuper.visit(obj);\n\t}","id":4412,"modified_method":"@Override\n       public void visit(Code obj) {\n\t\tpreviousLoadOf = -1;\n\t\tpreviousGotoTarget = -1;\n\t\tgotoCount = 0;\n\t\tpreviousStores.clear();\n\t\tsuper.visit(obj);\n\t}","commit_id":"4d5b38c4c3a94ad99c42eff7b758519e5b042ad6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n    public void sawOpcode(int seen) {\n\t\tif (seen == GOTO) {\n\t\t\tpreviousGotoTarget = getBranchTarget();\n\t\t\tgotoCount++;\n\t\t\tif (previousGotoTarget < getPC())\n\t\t\t\tpreviousLoadOf = -1;\n\t\t} else {\n\t\t\tif (isRegisterLoad()) \n\t\t\t\tpreviousLoadOf = getRegisterOperand();\n\t\t\telse {\n\t\t\t\tif (isRegisterStore() && previousLoadOf == getRegisterOperand() && gotoCount < 2 && getPC() != previousGotoTarget)\n\t\t\t\t       bugReporter.reportBug(\n\t\t\t\t\tnew BugInstance(this, \n\t\t\t\t\t\t\t\"SA_LOCAL_SELF_ASSIGNMENT\", getMethodName().equals(\"<init>\") ? HIGH_PRIORITY : NORMAL_PRIORITY)\n\t                                        .addClassAndMethod(this)\n\t                                        .add(LocalVariableAnnotation.getLocalVariableAnnotation(getMethod(), getRegisterOperand(), getPC(), getPC()))\n\t                                        .addSourceLine(this));\n\t\n\t\t\t\tpreviousLoadOf = -1;\n\t\t\t\tgotoCount = 0;\n\t\t\t}\n\t\t}\n\t}","id":4413,"modified_method":"@Override\n    public void sawOpcode(int seen) {\n\t\tif (seen == GOTO) {\n\t\t\tpreviousGotoTarget = getBranchTarget();\n\t\t\tgotoCount++;\n\t\t\tif (previousGotoTarget < getPC())\n\t\t\t\tpreviousLoadOf = -1;\n\t\t} else {\n\t\t\tif (isRegisterLoad()) \n\t\t\t\tpreviousLoadOf = getRegisterOperand();\n\t\t\telse {\n\t\t\t\tif (isRegisterStore()) {\n\t\t\t\t\tif (previousLoadOf == getRegisterOperand() && gotoCount < 2 && getPC() != previousGotoTarget) {\n\t\t\t\t\tint priority = NORMAL_PRIORITY;\n\t\t\t\t\tString methodName = getMethodName();\n\t\t\t\t\tif (methodName.equals(\"<init>\") || methodName.startsWith(\"set\") && getCode().getCode().length <= 5 ||\n\t\t\t\t\t\t\t!previousStores.get(getRegisterOperand())) priority = HIGH_PRIORITY;\n\t\t\t\t       bugReporter.reportBug(\n\t\t\t\t\tnew BugInstance(this, \n\t\t\t\t\t\t\t\"SA_LOCAL_SELF_ASSIGNMENT\", priority)\n\t                                        .addClassAndMethod(this)\n\t                                        .add(LocalVariableAnnotation.getLocalVariableAnnotation(getMethod(), getRegisterOperand(), getPC(), getPC()))\n\t                                        \n\t                                        .addSourceLine(this));\n\t\t\t\t\t}\n\t\t\t\t\tpreviousStores.set(getRegisterOperand());\n\t\t\t\t}\n\t\t\t\t\n\t\n\t\t\t\tpreviousLoadOf = -1;\n\t\t\t\tgotoCount = 0;\n\t\t\t}\n\t\t}\n\t}","commit_id":"4d5b38c4c3a94ad99c42eff7b758519e5b042ad6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n         public void sawOpcode(int seen) {\n\t\tif (ifInstructionSet.get(seen)) {\n\t\t\tif (getBranchTarget() == getBranchFallThrough()) {\n\t\t\t\tint priority = NORMAL_PRIORITY;\n\t\t\t\t\n\t\t\t\tLineNumberTable lineNumbers = getCode().getLineNumberTable();\n\t\t\t\tif (lineNumbers != null) {\n\t\t\t\t\tint branchLineNumber = lineNumbers.getSourceLine(getPC());\n\t\t\t\t\tint targetLineNumber = lineNumbers.getSourceLine(getBranchFallThrough());\n\t\t\t\t\tif (branchLineNumber +1 >= targetLineNumber) priority = HIGH_PRIORITY;\n\t\t\t\t\telse if (branchLineNumber +2 < targetLineNumber) priority = LOW_PRIORITY;\n\t\t\t\t} else priority = LOW_PRIORITY;\n\t\t\t\tbugReporter.reportBug(new BugInstance(this, \"UCF_USELESS_CONTROL_FLOW\", priority)\n\t\t\t\t        .addClassAndMethod(this)\n\t\t\t\t        .addSourceLine(this));\n\t\t\t}\n\t\t}\n\t}","id":4414,"modified_method":"@Override\n         public void sawOpcode(int seen) {\n\t\tif (ifInstructionSet.get(seen)) {\n\t\t\tif (getBranchTarget() == getBranchFallThrough()) {\n\t\t\t\tint priority = NORMAL_PRIORITY;\n\t\t\t\t\n\t\t\t\tLineNumberTable lineNumbers = getCode().getLineNumberTable();\n\t\t\t\tif (lineNumbers != null) {\n\t\t\t\t\tint branchLineNumber = lineNumbers.getSourceLine(getPC());\n\t\t\t\t\tint targetLineNumber = lineNumbers.getSourceLine(getBranchFallThrough());\n\t\t\t\t\tif (branchLineNumber +1 == targetLineNumber || branchLineNumber  == targetLineNumber ) priority = HIGH_PRIORITY;\n\t\t\t\t\telse if (branchLineNumber +2 < targetLineNumber) priority = LOW_PRIORITY;\n\t\t\t\t} else priority = LOW_PRIORITY;\n\t\t\t\tbugReporter.reportBug(new BugInstance(this, \"UCF_USELESS_CONTROL_FLOW\", priority)\n\t\t\t\t        .addClassAndMethod(this)\n\t\t\t\t        .addSourceLine(this));\n\t\t\t}\n\t\t}\n\t}","commit_id":"4d5b38c4c3a94ad99c42eff7b758519e5b042ad6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n\tpublic void visitClassContext(ClassContext classContext) {\n\t\tJavaClass jclass = classContext.getJavaClass();\n\t\t\n\t\t// We can ignore classes that were compiled for anything\n\t\t// less than JDK 1.5.  This should avoid lots of unnecessary work\n\t\t// when analyzing code for older VM targets.\n\t\t\n\t\tif (jclass.getMajor() < JDK15_MAJOR ||\n\t\t\t(jclass.getMajor() == JDK15_MAJOR && jclass.getMinor() < JDK15_MINOR))  return;\n\t\t\n\t\tboolean  sawUtilConcurrentLocks = false;\n\t\tfor(Constant c :  jclass.getConstantPool().getConstantPool()) \n\t\t\tif (c instanceof ConstantMethodref) {\n\t\t\t\tConstantMethodref m = (ConstantMethodref) c;\n\t\t\t\tConstantClass cl = (ConstantClass) jclass.getConstantPool().getConstant(m.getClassIndex());\n\t\t\t\tConstantUtf8 name =  (ConstantUtf8) jclass.getConstantPool().getConstant(cl.getNameIndex());\n\t\t\t\tString nameAsString = name.getBytes();\n\t\t\t\tif (nameAsString.startsWith(\"java/util/concurrent/locks\")) sawUtilConcurrentLocks = true;\n\t\t\t\t\n\t\t\t}\n\t\tif (sawUtilConcurrentLocks) super.visitClassContext(classContext);\n\t}","id":4415,"modified_method":"@Override\n\tpublic void visitClassContext(ClassContext classContext) {\n\t\tJavaClass jclass = classContext.getJavaClass();\n\t\t\n\t\t// We can ignore classes that were compiled for anything\n\t\t// less than JDK 1.5.  This should avoid lots of unnecessary work\n\t\t// when analyzing code for older VM targets.\n\t\tif (preTiger(jclass)) return;\n\t\t\n\t\tboolean  sawUtilConcurrentLocks = false;\n\t\tfor(Constant c :  jclass.getConstantPool().getConstantPool()) \n\t\t\tif (c instanceof ConstantMethodref) {\n\t\t\t\tConstantMethodref m = (ConstantMethodref) c;\n\t\t\t\tConstantClass cl = (ConstantClass) jclass.getConstantPool().getConstant(m.getClassIndex());\n\t\t\t\tConstantUtf8 name =  (ConstantUtf8) jclass.getConstantPool().getConstant(cl.getNameIndex());\n\t\t\t\tString nameAsString = name.getBytes();\n\t\t\t\tif (nameAsString.startsWith(\"java/util/concurrent/locks\")) sawUtilConcurrentLocks = true;\n\t\t\t\t\n\t\t\t}\n\t\tif (sawUtilConcurrentLocks) super.visitClassContext(classContext);\n\t}","commit_id":"4d5b38c4c3a94ad99c42eff7b758519e5b042ad6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void visitClassContext(ClassContext classContext) {\n\t\tclassContext.getJavaClass().accept(this);\n\t\t\n\t}","id":4416,"modified_method":"public void visitClassContext(ClassContext classContext) {\n\t\tJavaClass javaClass = classContext.getJavaClass();\n\t\tif  (!FindUnreleasedLock.preTiger(javaClass)) javaClass.accept(this);\n\t\t\n\t}","commit_id":"4d5b38c4c3a94ad99c42eff7b758519e5b042ad6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void visitClassContext(ClassContext classContext) {\n\t\tif (LOAD_TRAINING != null && !checkLoad) {\n\t\t\tloadTraining();\n\t\t\tcheckLoad = true;\n\t\t}\n\t\tclassContext.getJavaClass().accept(this);\n\t}","id":4417,"modified_method":"public void visitClassContext(ClassContext classContext) {\n\t\tif (LOAD_TRAINING != null && !checkLoad) {\n\t\t\tloadTraining();\n\t\t\tcheckLoad = true;\n\t\t}\n\t\tJavaClass javaClass = classContext.getJavaClass();\n\t\tif  (!FindUnreleasedLock.preTiger(javaClass)) javaClass.accept(this);\n\t}","commit_id":"4d5b38c4c3a94ad99c42eff7b758519e5b042ad6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void visitClassContext(ClassContext classContext) {\n\t\t\n\t\tclassContext.getJavaClass().accept(this);\n\t}","id":4418,"modified_method":"public void visitClassContext(ClassContext classContext) {\n\t\t\n\t\tJavaClass javaClass = classContext.getJavaClass();\n\t\tif  (!FindUnreleasedLock.preTiger(javaClass)) javaClass.accept(this);\n\t}","commit_id":"4d5b38c4c3a94ad99c42eff7b758519e5b042ad6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void visitClassContext(ClassContext classContext) {\n\t\tclassContext.getJavaClass().accept(this);\n\n\t}","id":4419,"modified_method":"public void visitClassContext(ClassContext classContext) {\n\t\tJavaClass javaClass = classContext.getJavaClass();\n\t\tif  (!FindUnreleasedLock.preTiger(javaClass)) javaClass.accept(this);\n\n\t}","commit_id":"4d5b38c4c3a94ad99c42eff7b758519e5b042ad6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void visitClassContext(ClassContext classContext) {\n\t\t\n\t\tclassContext.getJavaClass().accept(this);\n\t}","id":4420,"modified_method":"public void visitClassContext(ClassContext classContext) {\n\t\t\n\t\tJavaClass javaClass = classContext.getJavaClass();\n\t\tif  (!FindUnreleasedLock.preTiger(javaClass)) javaClass.accept(this);\n\t}","commit_id":"4d5b38c4c3a94ad99c42eff7b758519e5b042ad6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void visitClassContext(ClassContext classContext) {\n\t\tclassContext.getJavaClass().accept(this);\n\t}","id":4421,"modified_method":"public void visitClassContext(ClassContext classContext) {\n\t\tJavaClass javaClass = classContext.getJavaClass();\n\t\tif  (!FindUnreleasedLock.preTiger(javaClass)) javaClass.accept(this);\n\t}","commit_id":"4d5b38c4c3a94ad99c42eff7b758519e5b042ad6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n         public void sawOpcode(int seen) {\n\t\tif (reachable && switchHdlr.isOnSwitchOffset(this)) {\n\t\t\tif (!hasFallThruComment(lastPC + 1, getPC() - 1)) {\n\t\t\t\tSourceLineAnnotation sourceLineAnnotation =\n\t\t\t\t\tSourceLineAnnotation.fromVisitedInstructionRange(getClassContext(), this, lastPC, getPC());\n\t\t\t\tif (sourceLineAnnotation != null)\n\t\t\t\t\tfound.add(sourceLineAnnotation);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (seen) {\n\t\t\tcase TABLESWITCH:\n\t\t\tcase LOOKUPSWITCH:\n\t\t\t\treachable = false;\n\t\t\t\tswitchHdlr.enterSwitch(this);\n\t\t\t\tbreak;\t\t\n\n\t\t\tcase ATHROW:\n\t\t\tcase RETURN:\n\t\t\tcase ARETURN:\n\t\t\tcase IRETURN:\n\t\t\tcase LRETURN:\n\t\t\tcase DRETURN:\n\t\t\tcase FRETURN:\n\t\t\tcase GOTO_W:\n\t\t\tcase GOTO:\n\t\t\t\treachable = false;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\tcase INVOKESTATIC:\n\t\t\t\treachable = !(\"exit\".equals(getNameConstantOperand()) && \"java/lang/System\".equals(getClassConstantOperand()));\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\treachable = true;\n\t\t}\n\t\t\n\t\tlastPC = getPC();\n\t}","id":4422,"modified_method":"@Override\n         public void sawOpcode(int seen) {\n\t\tif (reachable && switchHdlr.isOnSwitchOffset(this)) {\n\t\t\tif (!hasFallThruComment(lastPC + 1, getPC() - 1)) {\n\t\t\t\tSourceLineAnnotation sourceLineAnnotation =\n\t\t\t\t\tSourceLineAnnotation.fromVisitedInstructionRange(getClassContext(), this, lastPC, getPC());\n\t\t\t\tif (sourceLineAnnotation != null) {\n\t\t\t\t\tfound.add(sourceLineAnnotation);\n\t\t\t\t\tfallthroughDistance = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif (isRegisterLoad())\n\t\t\tpotentiallyDeadStores.clear(getRegisterOperand());\n\n\t\telse if (isRegisterStore()) {\n\t\t\tif (potentiallyDeadStores.get(getRegisterOperand())){\n\t\t\t\t// killed store\n\t\t\t\tif (fallthroughDistance < 8) priority = HIGH_PRIORITY;\n\t\t\t}\n\t\t\telse potentiallyDeadStores.set(getRegisterOperand());\n\t\t}\n\t\t\t\n\t\tswitch (seen) {\n\t\t\tcase TABLESWITCH:\n\t\t\tcase LOOKUPSWITCH:\n\t\t\t\treachable = false;\n\t\t\t\tswitchHdlr.enterSwitch(this);\n\t\t\t\tbreak;\t\t\n\n\t\t\tcase ATHROW:\n\t\t\tcase RETURN:\n\t\t\tcase ARETURN:\n\t\t\tcase IRETURN:\n\t\t\tcase LRETURN:\n\t\t\tcase DRETURN:\n\t\t\tcase FRETURN:\n\t\t\tcase GOTO_W:\n\t\t\tcase GOTO:\n\t\t\t\treachable = false;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\tcase INVOKESTATIC:\n\t\t\t\treachable = !(\"exit\".equals(getNameConstantOperand()) && \"java/lang/System\".equals(getClassConstantOperand()));\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\treachable = true;\n\t\t}\n\t\t\n\t\tlastPC = getPC();\n\t\tfallthroughDistance++;\n\t}","commit_id":"4d5b38c4c3a94ad99c42eff7b758519e5b042ad6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n         public void visit(Code obj) {\n\t\treachable = false;\n\t\tlastPC = 0;\n\t\tfound.clear();\n\t\tswitchHdlr = new SwitchHandler();\n\t\tsuper.visit(obj);\n\t\tif (!found.isEmpty() && found.size() < 4) {\n\t\t\tBugInstance bug = new BugInstance(this, \"SF_SWITCH_FALLTHROUGH\", NORMAL_PRIORITY)\n        \t\t\t.addClassAndMethod(this).addAnnotations(found);\n\t\t\tbugReporter.reportBug(bug);\n\t\t\t\n\t\t}\n\t}","id":4423,"modified_method":"@Override\n         public void visit(Code obj) {\n\t\treachable = false;\n\t\tlastPC = 0;\n\t\tfound.clear();\n\t\tswitchHdlr = new SwitchHandler();\n\t\tpotentiallyDeadStores.clear();\n\t\tpriority = NORMAL_PRIORITY;\n\t\tfallthroughDistance = 1000;\n\t\tsuper.visit(obj);\n\t\tif (!found.isEmpty() && found.size() < 4) {\n\t\t\tBugInstance bug = new BugInstance(this, \"SF_SWITCH_FALLTHROUGH\", priority)\n        \t\t\t.addClassAndMethod(this).addAnnotations(found);\n\t\t\tbugReporter.reportBug(bug);\n\t\t\t\n\t\t}\n\t}","commit_id":"4d5b38c4c3a94ad99c42eff7b758519e5b042ad6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public TwosideSyncScrollSupport(@NotNull List<? extends Editor> editors, @NotNull SyncScrollable scrollable) {\n      this(Side.LEFT.select(editors), Side.RIGHT.select(editors), scrollable);\n    }","id":4424,"modified_method":"public TwosideSyncScrollSupport(@NotNull List<? extends Editor> editors, @NotNull SyncScrollable scrollable) {\n      myEditors = editors;\n      myScrollable = scrollable;\n\n      myHelper1 = create(Side.LEFT);\n      myHelper2 = create(Side.RIGHT);\n    }","commit_id":"044b19810d3111127cd638d9182dad26263be0a3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visibleAreaChanged(VisibleAreaEvent e) {\n      if (!myScrollable.isSyncScrollEnabled() || myDuringSyncScroll || myDisabled) return;\n\n      myDuringSyncScroll = true;\n      try {\n        if (e.getEditor() == myEditor1) {\n          myHelper1.visibleAreaChanged(e);\n        }\n        else if (e.getEditor() == myEditor2) {\n          myHelper2.visibleAreaChanged(e);\n        }\n      }\n      finally {\n        myDuringSyncScroll = false;\n      }\n    }","id":4425,"modified_method":"public void visibleAreaChanged(VisibleAreaEvent e) {\n      if (!myScrollable.isSyncScrollEnabled() || isDuringSyncScroll()) return;\n\n      enterDisableScrollSection();\n      try {\n        if (e.getEditor() == Side.LEFT.select(myEditors)) {\n          myHelper1.visibleAreaChanged(e);\n        }\n        else if (e.getEditor() == Side.RIGHT.select(myEditors)) {\n          myHelper2.visibleAreaChanged(e);\n        }\n      }\n      finally {\n        exitDisableScrollSection();\n      }\n    }","commit_id":"044b19810d3111127cd638d9182dad26263be0a3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visibleAreaChanged(VisibleAreaEvent e) {\n      if (myDuringSyncScroll || myDisabled) return;\n\n      myDuringSyncScroll = true;\n      try {\n        if (e.getEditor() == myEditors.get(0)) {\n          if (myScrollable1.isSyncScrollEnabled()) myHelper11.visibleAreaChanged(e);\n          if (myScrollable1.isSyncScrollEnabled() && myScrollable2.isSyncScrollEnabled()) myHelper21.visibleAreaChanged(e);\n        }\n        else if (e.getEditor() == myEditors.get(1)) {\n          if (myScrollable1.isSyncScrollEnabled()) myHelper12.visibleAreaChanged(e);\n          if (myScrollable2.isSyncScrollEnabled()) myHelper21.visibleAreaChanged(e);\n        }\n        else if (e.getEditor() == myEditors.get(2)) {\n          if (myScrollable2.isSyncScrollEnabled()) myHelper22.visibleAreaChanged(e);\n          if (myScrollable2.isSyncScrollEnabled() && myScrollable1.isSyncScrollEnabled()) myHelper12.visibleAreaChanged(e);\n        }\n      }\n      finally {\n        myDuringSyncScroll = false;\n      }\n    }","id":4426,"modified_method":"public void visibleAreaChanged(VisibleAreaEvent e) {\n      if (isDuringSyncScroll()) return;\n\n      enterDisableScrollSection();\n      try {\n        if (e.getEditor() == ThreeSide.LEFT.select(myEditors)) {\n          if (myScrollable12.isSyncScrollEnabled()) {\n            myHelper12.visibleAreaChanged(e);\n            if (myScrollable23.isSyncScrollEnabled()) myHelper23.visibleAreaChanged(e);\n          }\n        }\n        else if (e.getEditor() == ThreeSide.BASE.select(myEditors)) {\n          if (myScrollable12.isSyncScrollEnabled()) myHelper21.visibleAreaChanged(e);\n          if (myScrollable23.isSyncScrollEnabled()) myHelper23.visibleAreaChanged(e);\n        }\n        else if (e.getEditor() == ThreeSide.RIGHT.select(myEditors)) {\n          if (myScrollable23.isSyncScrollEnabled()) {\n            myHelper32.visibleAreaChanged(e);\n            if (myScrollable12.isSyncScrollEnabled()) myHelper21.visibleAreaChanged(e);\n          }\n        }\n      }\n      finally {\n        exitDisableScrollSection();\n      }\n    }","commit_id":"044b19810d3111127cd638d9182dad26263be0a3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void makeVisible(@NotNull Side masterSide,\n                            int startLine1, int endLine1, int startLine2, int endLine2,\n                            final boolean animate) {\n      Side slaveSide = masterSide.other();\n\n      final int[] offsets = getTargetOffsets(myEditor1, myEditor2, startLine1, endLine1, startLine2, endLine2);\n\n      final Editor masterEditor = masterSide.select(myEditor1, myEditor2);\n      final Editor slaveEditor = slaveSide.select(myEditor1, myEditor2);\n\n      final int masterOffset = masterSide.select(offsets);\n      final int slaveOffset = slaveSide.select(offsets);\n\n      int startOffset1 = myEditor1.getScrollingModel().getVisibleArea().y;\n      int startOffset2 = myEditor2.getScrollingModel().getVisibleArea().y;\n      final int masterStartOffset = masterSide.select(startOffset1, startOffset2);\n\n      myHelper1.setAnchor(startOffset1, offsets[0], startOffset2, offsets[1]);\n      myHelper2.setAnchor(startOffset2, offsets[1], startOffset1, offsets[0]);\n\n      doScrollHorizontally(masterEditor, 0, false); // animation will be canceled by \"scroll vertically\" anyway\n      doScrollVertically(masterEditor, masterOffset, animate);\n\n      masterEditor.getScrollingModel().runActionOnScrollingFinished(new Runnable() {\n        @Override\n        public void run() {\n          myHelper1.removeAnchor();\n          myHelper2.removeAnchor();\n\n          int masterFinalOffset = masterEditor.getScrollingModel().getVisibleArea().y;\n          int slaveFinalOffset = slaveEditor.getScrollingModel().getVisibleArea().y;\n          if (slaveFinalOffset != slaveOffset) {\n            myDuringSyncScroll = true;\n\n            doScrollVertically(slaveEditor, slaveOffset, animate && masterFinalOffset == masterStartOffset);\n\n            slaveEditor.getScrollingModel().runActionOnScrollingFinished(new Runnable() {\n              @Override\n              public void run() {\n                myDuringSyncScroll = false;\n              }\n            });\n          }\n        }\n      });\n    }","id":4427,"modified_method":"public void makeVisible(@NotNull Side masterSide,\n                            int startLine1, int endLine1, int startLine2, int endLine2,\n                            final boolean animate) {\n      Side slaveSide = masterSide.other();\n\n      final int[] offsets = getTargetOffsets(myEditors.get(0), myEditors.get(1), startLine1, endLine1, startLine2, endLine2);\n\n      final Editor masterEditor = masterSide.select(myEditors);\n      final Editor slaveEditor = slaveSide.select(myEditors);\n\n      final int masterOffset = masterSide.select(offsets);\n      final int slaveOffset = slaveSide.select(offsets);\n\n      int startOffset1 = myEditors.get(0).getScrollingModel().getVisibleArea().y;\n      int startOffset2 = myEditors.get(1).getScrollingModel().getVisibleArea().y;\n      final int masterStartOffset = masterSide.select(startOffset1, startOffset2);\n\n      myHelper1.setAnchor(startOffset1, offsets[0], startOffset2, offsets[1]);\n      myHelper2.setAnchor(startOffset2, offsets[1], startOffset1, offsets[0]);\n\n      doScrollHorizontally(masterEditor, 0, false); // animation will be canceled by \"scroll vertically\" anyway\n      doScrollVertically(masterEditor, masterOffset, animate);\n\n      masterEditor.getScrollingModel().runActionOnScrollingFinished(new Runnable() {\n        @Override\n        public void run() {\n          myHelper1.removeAnchor();\n          myHelper2.removeAnchor();\n\n          int masterFinalOffset = masterEditor.getScrollingModel().getVisibleArea().y;\n          int slaveFinalOffset = slaveEditor.getScrollingModel().getVisibleArea().y;\n          if (slaveFinalOffset != slaveOffset) {\n            enterDisableScrollSection();\n\n            doScrollVertically(slaveEditor, slaveOffset, animate && masterFinalOffset == masterStartOffset);\n\n            slaveEditor.getScrollingModel().runActionOnScrollingFinished(new Runnable() {\n              @Override\n              public void run() {\n                exitDisableScrollSection();\n              }\n            });\n          }\n        }\n      });\n    }","commit_id":"044b19810d3111127cd638d9182dad26263be0a3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ThreesideSyncScrollSupport(@NotNull List<? extends Editor> editors,\n                                      @NotNull SyncScrollable scrollable1,\n                                      @NotNull SyncScrollable scrollable2) {\n      assert editors.size() == 3;\n\n      myEditors = editors;\n      myScrollable1 = scrollable1;\n      myScrollable2 = scrollable2;\n\n      myHelper11 = create(editors.get(0), editors.get(1), myScrollable1, Side.LEFT);\n      myHelper12 = create(editors.get(1), editors.get(0), myScrollable1, Side.RIGHT);\n\n      myHelper21 = create(editors.get(1), editors.get(2), myScrollable2, Side.LEFT);\n      myHelper22 = create(editors.get(2), editors.get(1), myScrollable2, Side.RIGHT);\n    }","id":4428,"modified_method":"public ThreesideSyncScrollSupport(@NotNull List<? extends Editor> editors,\n                                      @NotNull SyncScrollable scrollable12,\n                                      @NotNull SyncScrollable scrollable23) {\n      assert editors.size() == 3;\n\n      myEditors = editors;\n      myScrollable12 = scrollable12;\n      myScrollable23 = scrollable23;\n\n      myHelper12 = create(ThreeSide.LEFT, ThreeSide.BASE);\n      myHelper21 = create(ThreeSide.BASE, ThreeSide.LEFT);\n\n      myHelper23 = create(ThreeSide.BASE, ThreeSide.RIGHT);\n      myHelper32 = create(ThreeSide.RIGHT, ThreeSide.BASE);\n    }","commit_id":"044b19810d3111127cd638d9182dad26263be0a3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void disableSyncScrollSupport(boolean disable) {\n    if (mySyncScrollSupport != null) {\n      mySyncScrollSupport.setDisabled(disable);\n    }\n  }","id":4429,"modified_method":"protected void disableSyncScrollSupport(boolean disable) {\n    if (mySyncScrollSupport != null) {\n      if (disable) {\n        mySyncScrollSupport.enterDisableScrollSection();\n      }\n      else {\n        mySyncScrollSupport.exitDisableScrollSection();\n      }\n    }\n  }","commit_id":"044b19810d3111127cd638d9182dad26263be0a3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void disableSyncScrollSupport(boolean disable) {\n    if (mySyncScrollSupport != null) {\n      mySyncScrollSupport.setDisabled(disable);\n    }\n  }","id":4430,"modified_method":"protected void disableSyncScrollSupport(boolean disable) {\n    if (mySyncScrollSupport != null) {\n      if (disable) {\n        mySyncScrollSupport.enterDisableScrollSection();\n      }\n      else {\n        mySyncScrollSupport.exitDisableScrollSection();\n      }\n    }\n  }","commit_id":"044b19810d3111127cd638d9182dad26263be0a3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public WebDriver getWebDriver() throws InvocationTargetException, IllegalAccessException, InstantiationException {\n        if (browser == null) {\n            browser = driverConstructor.newInstance();\n        }\n        return browser;\n    }","id":4431,"modified_method":"public WebDriver getWebDriver() throws InvocationTargetException, IllegalAccessException, InstantiationException {\n        if (browser == null) {\n            browser = getDriverConstructor().newInstance();\n        }\n        return browser;\n    }","commit_id":"233741e7b929bcaae4944584a071c2f532d9cb92","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    private static Constructor<WebDriver> getDriverConstructor() {\n        String driverName = System.getProperty(\"webdriver.impl\", \"org.openqa.selenium.htmlunit.HtmlUnitDriver\");\n        try {\n            return (Constructor<WebDriver>) Thread.currentThread().getContextClassLoader().loadClass(driverName).getConstructor();\n        } catch (Throwable problem) {\n            throw new RuntimeException(\"Couldn't load \" + driverName, problem);\n        }\n    }","id":4432,"modified_method":"@SuppressWarnings(\"unchecked\")\n    private Constructor<WebDriver> getDriverConstructor() {\n        String driverName = System.getProperty(\"webdriver.impl\", \"org.openqa.selenium.htmlunit.HtmlUnitDriver\");\n        try {\n            return (Constructor<WebDriver>) Thread.currentThread().getContextClassLoader().loadClass(driverName).getConstructor();\n        } catch (Throwable problem) {\n            throw new RuntimeException(\"Couldn't load \" + driverName, problem);\n        }\n    }","commit_id":"233741e7b929bcaae4944584a071c2f532d9cb92","url":"https://github.com/neo4j/neo4j"},{"original_method":"@When(\"^I type (.+) into the element found by the xpath (.+)$\")\n    public void iTypeIntoElementByXpath(String toType, String xPath) {\n        d.findElement( By.xpath( xPath ) ).sendKeys( toType );\n    }","id":4433,"modified_method":"@When(\"^I type (.+) into the element found by the xpath (.+)$\")\n    public void iTypeIntoElementByXpath(String toType, String xPath) {\n        ElementReference el = wl.getElement( By.xpath( xPath ) );\n        wl.clearInput( el );\n        el.sendKeys( toType );\n    }","commit_id":"233741e7b929bcaae4944584a071c2f532d9cb92","url":"https://github.com/neo4j/neo4j"},{"original_method":"public WebadminSteps( WebDriverFacade facade, WebadminWebdriverLibrary wl ) throws InvocationTargetException, InstantiationException, IllegalAccessException\n    {\n        d = facade.getWebDriver();\n        this.wl = wl;\n    }","id":4434,"modified_method":"public WebadminSteps( WebDriverFacade facade, WebadminWebdriverLibrary wl ) throws Exception\n    {\n        d = facade.getWebDriver();\n        this.wl = wl;\n    }","commit_id":"233741e7b929bcaae4944584a071c2f532d9cb92","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void searchForInDataBrowser(CharSequence ... keysToSend) throws Exception {\n        dataBrowserSearchField.sendKeys( keysToSend );\n    }","id":4435,"modified_method":"public void searchForInDataBrowser(CharSequence ... keysToSend) throws Exception {\n        clearInput( dataBrowserSearchField );\n        dataBrowserSearchField.sendKeys( keysToSend );\n    }","commit_id":"233741e7b929bcaae4944584a071c2f532d9cb92","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    private static Constructor<WebDriver> getDriverConstructor() {\n        String driverName = System.getProperty(\"webdriver.impl\", \"org.openqa.selenium.htmlunit.HtmlUnitDriver\");\n        try {\n            return (Constructor<WebDriver>) Thread.currentThread().getContextClassLoader().loadClass(driverName).getConstructor();\n        } catch (Throwable problem) {\n            throw new RuntimeException(\"Couldn't load \" + driverName, problem);\n        }\n    }","id":4436,"modified_method":"@SuppressWarnings(\"unchecked\")\n    private Constructor<WebDriver> getDriverConstructor() {\n        String driverName = System.getProperty(\"webdriver.impl\", \"org.openqa.selenium.htmlunit.HtmlUnitDriver\");\n        try {\n            return (Constructor<WebDriver>) Thread.currentThread().getContextClassLoader().loadClass(driverName).getConstructor();\n        } catch (Throwable problem) {\n            throw new RuntimeException(\"Couldn't load \" + driverName, problem);\n        }\n    }","commit_id":"94842760f681a4be33b88f2739951d649e90fff1","url":"https://github.com/neo4j/neo4j"},{"original_method":"public WebDriver getWebDriver() throws InvocationTargetException, IllegalAccessException, InstantiationException {\n        if (browser == null) {\n            browser = driverConstructor.newInstance();\n        }\n        return browser;\n    }","id":4437,"modified_method":"public WebDriver getWebDriver() throws InvocationTargetException, IllegalAccessException, InstantiationException {\n        if (browser == null) {\n            browser = getDriverConstructor().newInstance();\n        }\n        return browser;\n    }","commit_id":"94842760f681a4be33b88f2739951d649e90fff1","url":"https://github.com/neo4j/neo4j"},{"original_method":"public WebadminSteps( WebDriverFacade facade, WebadminWebdriverLibrary wl ) throws InvocationTargetException, InstantiationException, IllegalAccessException\n    {\n        d = facade.getWebDriver();\n        this.wl = wl;\n    }","id":4438,"modified_method":"public WebadminSteps( WebDriverFacade facade, WebadminWebdriverLibrary wl ) throws Exception\n    {\n        d = facade.getWebDriver();\n        this.wl = wl;\n    }","commit_id":"94842760f681a4be33b88f2739951d649e90fff1","url":"https://github.com/neo4j/neo4j"},{"original_method":"@When(\"^I type (.+) into the element found by the xpath (.+)$\")\n    public void iTypeIntoElementByXpath(String toType, String xPath) {\n        d.findElement( By.xpath( xPath ) ).sendKeys( toType );\n    }","id":4439,"modified_method":"@When(\"^I type (.+) into the element found by the xpath (.+)$\")\n    public void iTypeIntoElementByXpath(String toType, String xPath) {\n        ElementReference el = wl.getElement( By.xpath( xPath ) );\n        wl.clearInput( el );\n        el.sendKeys( toType );\n    }","commit_id":"94842760f681a4be33b88f2739951d649e90fff1","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void searchForInDataBrowser(CharSequence ... keysToSend) throws Exception {\n        dataBrowserSearchField.sendKeys( keysToSend );\n    }","id":4440,"modified_method":"public void searchForInDataBrowser(CharSequence ... keysToSend) throws Exception {\n        clearInput( dataBrowserSearchField );\n        dataBrowserSearchField.sendKeys( keysToSend );\n    }","commit_id":"94842760f681a4be33b88f2739951d649e90fff1","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    private static Constructor<WebDriver> getDriverConstructor() {\n        String driverName = System.getProperty(\"webdriver.impl\", \"org.openqa.selenium.htmlunit.HtmlUnitDriver\");\n        try {\n            return (Constructor<WebDriver>) Thread.currentThread().getContextClassLoader().loadClass(driverName).getConstructor();\n        } catch (Throwable problem) {\n            throw new RuntimeException(\"Couldn't load \" + driverName, problem);\n        }\n    }","id":4441,"modified_method":"@SuppressWarnings(\"unchecked\")\n    private Constructor<WebDriver> getDriverConstructor() {\n        String driverName = System.getProperty(\"webdriver.impl\", \"org.openqa.selenium.htmlunit.HtmlUnitDriver\");\n        try {\n            return (Constructor<WebDriver>) Thread.currentThread().getContextClassLoader().loadClass(driverName).getConstructor();\n        } catch (Throwable problem) {\n            throw new RuntimeException(\"Couldn't load \" + driverName, problem);\n        }\n    }","commit_id":"caae0a6bebc9f7753329eb777f6c8f6accd3729f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public WebDriver getWebDriver() throws InvocationTargetException, IllegalAccessException, InstantiationException {\n        if (browser == null) {\n            browser = driverConstructor.newInstance();\n        }\n        return browser;\n    }","id":4442,"modified_method":"public WebDriver getWebDriver() throws InvocationTargetException, IllegalAccessException, InstantiationException {\n        if (browser == null) {\n            browser = getDriverConstructor().newInstance();\n        }\n        return browser;\n    }","commit_id":"caae0a6bebc9f7753329eb777f6c8f6accd3729f","url":"https://github.com/neo4j/neo4j"},{"original_method":"@When(\"^I type (.+) into the element found by the xpath (.+)$\")\n    public void iTypeIntoElementByXpath(String toType, String xPath) {\n        d.findElement( By.xpath( xPath ) ).sendKeys( toType );\n    }","id":4443,"modified_method":"@When(\"^I type (.+) into the element found by the xpath (.+)$\")\n    public void iTypeIntoElementByXpath(String toType, String xPath) {\n        ElementReference el = wl.getElement( By.xpath( xPath ) );\n        wl.clearInput( el );\n        el.sendKeys( toType );\n    }","commit_id":"caae0a6bebc9f7753329eb777f6c8f6accd3729f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public WebadminSteps( WebDriverFacade facade, WebadminWebdriverLibrary wl ) throws InvocationTargetException, InstantiationException, IllegalAccessException\n    {\n        d = facade.getWebDriver();\n        this.wl = wl;\n    }","id":4444,"modified_method":"public WebadminSteps( WebDriverFacade facade, WebadminWebdriverLibrary wl ) throws Exception\n    {\n        d = facade.getWebDriver();\n        this.wl = wl;\n    }","commit_id":"caae0a6bebc9f7753329eb777f6c8f6accd3729f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void searchForInDataBrowser(CharSequence ... keysToSend) throws Exception {\n        dataBrowserSearchField.sendKeys( keysToSend );\n    }","id":4445,"modified_method":"public void searchForInDataBrowser(CharSequence ... keysToSend) throws Exception {\n        clearInput( dataBrowserSearchField );\n        dataBrowserSearchField.sendKeys( keysToSend );\n    }","commit_id":"caae0a6bebc9f7753329eb777f6c8f6accd3729f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public WebDriver getWebDriver() throws InvocationTargetException, IllegalAccessException, InstantiationException {\n        if (browser == null) {\n            browser = driverConstructor.newInstance();\n        }\n        return browser;\n    }","id":4446,"modified_method":"public WebDriver getWebDriver() throws InvocationTargetException, IllegalAccessException, InstantiationException {\n        if (browser == null) {\n            browser = getDriverConstructor().newInstance();\n        }\n        return browser;\n    }","commit_id":"0d406d7e69af5156d508457597bd2b33a9601bf6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    private static Constructor<WebDriver> getDriverConstructor() {\n        String driverName = System.getProperty(\"webdriver.impl\", \"org.openqa.selenium.htmlunit.HtmlUnitDriver\");\n        try {\n            return (Constructor<WebDriver>) Thread.currentThread().getContextClassLoader().loadClass(driverName).getConstructor();\n        } catch (Throwable problem) {\n            throw new RuntimeException(\"Couldn't load \" + driverName, problem);\n        }\n    }","id":4447,"modified_method":"@SuppressWarnings(\"unchecked\")\n    private Constructor<WebDriver> getDriverConstructor() {\n        String driverName = System.getProperty(\"webdriver.impl\", \"org.openqa.selenium.htmlunit.HtmlUnitDriver\");\n        try {\n            return (Constructor<WebDriver>) Thread.currentThread().getContextClassLoader().loadClass(driverName).getConstructor();\n        } catch (Throwable problem) {\n            throw new RuntimeException(\"Couldn't load \" + driverName, problem);\n        }\n    }","commit_id":"0d406d7e69af5156d508457597bd2b33a9601bf6","url":"https://github.com/neo4j/neo4j"},{"original_method":"public WebadminSteps( WebDriverFacade facade, WebadminWebdriverLibrary wl ) throws InvocationTargetException, InstantiationException, IllegalAccessException\n    {\n        d = facade.getWebDriver();\n        this.wl = wl;\n    }","id":4448,"modified_method":"public WebadminSteps( WebDriverFacade facade, WebadminWebdriverLibrary wl ) throws Exception\n    {\n        d = facade.getWebDriver();\n        this.wl = wl;\n    }","commit_id":"0d406d7e69af5156d508457597bd2b33a9601bf6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@When(\"^I type (.+) into the element found by the xpath (.+)$\")\n    public void iTypeIntoElementByXpath(String toType, String xPath) {\n        d.findElement( By.xpath( xPath ) ).sendKeys( toType );\n    }","id":4449,"modified_method":"@When(\"^I type (.+) into the element found by the xpath (.+)$\")\n    public void iTypeIntoElementByXpath(String toType, String xPath) {\n        ElementReference el = wl.getElement( By.xpath( xPath ) );\n        wl.clearInput( el );\n        el.sendKeys( toType );\n    }","commit_id":"0d406d7e69af5156d508457597bd2b33a9601bf6","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void searchForInDataBrowser(CharSequence ... keysToSend) throws Exception {\n        dataBrowserSearchField.sendKeys( keysToSend );\n    }","id":4450,"modified_method":"public void searchForInDataBrowser(CharSequence ... keysToSend) throws Exception {\n        clearInput( dataBrowserSearchField );\n        dataBrowserSearchField.sendKeys( keysToSend );\n    }","commit_id":"0d406d7e69af5156d508457597bd2b33a9601bf6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\tpublic void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tJournalArticle article = null;\n\t\tString oldUrlTitle = StringPool.BLANK;\n\n\t\ttry {\n\t\t\tif (Validator.isNull(cmd)) {\n\t\t\t\tUploadException uploadException =\n\t\t\t\t\t(UploadException)actionRequest.getAttribute(\n\t\t\t\t\t\tWebKeys.UPLOAD_EXCEPTION);\n\n\t\t\t\tif (uploadException != null) {\n\t\t\t\t\tif (uploadException.isExceededSizeLimit()) {\n\t\t\t\t\t\tthrow new ArticleContentSizeException();\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new PortalException(uploadException.getCause());\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.ADD) ||\n\t\t\t\t\t cmd.equals(Constants.TRANSLATE) ||\n\t\t\t\t\t cmd.equals(Constants.UPDATE)) {\n\n\t\t\t\tObject[] returnValue = updateArticle(actionRequest);\n\n\t\t\t\tarticle = (JournalArticle)returnValue[0];\n\t\t\t\toldUrlTitle = ((String)returnValue[1]);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE_TRANSLATION)) {\n\t\t\t\tremoveArticlesLocale(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.EXPIRE)) {\n\t\t\t\texpireArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.MOVE)) {\n\t\t\t\tmoveArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.SUBSCRIBE)) {\n\t\t\t\tsubscribeArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNSUBSCRIBE)) {\n\t\t\t\tunsubscribeArticles(actionRequest);\n\t\t\t}\n\n\t\t\tString redirect = ParamUtil.getString(actionRequest, \"redirect\");\n\n\t\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\t\tactionRequest, \"workflowAction\",\n\t\t\t\tWorkflowConstants.ACTION_PUBLISH);\n\n\t\t\tif ((article != null) &&\n\t\t\t\t(workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT)) {\n\n\t\t\t\tredirect = getSaveAndContinueRedirect(\n\t\t\t\t\tportletConfig, actionRequest, article, redirect);\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(oldUrlTitle)) {\n\t\t\t\tString portletId = HttpUtil.getParameter(\n\t\t\t\t\tredirect, \"p_p_id\", false);\n\n\t\t\t\tString oldRedirectParam =\n\t\t\t\t\tPortalUtil.getPortletNamespace(portletId) + \"redirect\";\n\n\t\t\t\tString oldRedirect = HttpUtil.getParameter(\n\t\t\t\t\tredirect, oldRedirectParam, false);\n\n\t\t\t\tif (Validator.isNotNull(oldRedirect)) {\n\t\t\t\t\tString newRedirect = HttpUtil.decodeURL(oldRedirect);\n\n\t\t\t\t\tnewRedirect = StringUtil.replace(\n\t\t\t\t\t\tnewRedirect, oldUrlTitle, article.getUrlTitle());\n\t\t\t\t\tnewRedirect = StringUtil.replace(\n\t\t\t\t\t\tnewRedirect, oldRedirectParam, \"redirect\");\n\n\t\t\t\t\tredirect = StringUtil.replace(\n\t\t\t\t\t\tredirect, oldRedirect, newRedirect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tWindowState windowState = actionRequest.getWindowState();\n\n\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);\n\n\t\t\tLayout layout = themeDisplay.getLayout();\n\n\t\t\tif (cmd.equals(Constants.DELETE) &&\n\t\t\t\t!ActionUtil.hasArticle(actionRequest)) {\n\n\t\t\t\tString referringPortletResource = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"referringPortletResource\");\n\n\t\t\t\tif (Validator.isNotNull(referringPortletResource)) {\n\t\t\t\t\tsetForward(\n\t\t\t\t\t\tactionRequest,\n\t\t\t\t\t\t\"portlet.journal.asset.add_asset_redirect\");\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\t\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\t\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\t\t\t\tredirect = portletURL.toString();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cmd.equals(Constants.DELETE_TRANSLATION) ||\n\t\t\t\tcmd.equals(Constants.TRANSLATE)) {\n\n\t\t\t\tsetForward(\n\t\t\t\t\tactionRequest,\n\t\t\t\t\t\"portlet.journal.update_translation_redirect\");\n\t\t\t}\n\t\t\telse if (!windowState.equals(LiferayWindowState.POP_UP) &&\n\t\t\t\t\t layout.isTypeControlPanel()) {\n\n\t\t\t\tsendRedirect(actionRequest, actionResponse, redirect);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tredirect = PortalUtil.escapeRedirect(redirect);\n\n\t\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchArticleException ||\n\t\t\t\te instanceof NoSuchStructureException ||\n\t\t\t\te instanceof NoSuchTemplateException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.journal.error\");\n\t\t\t}\n\t\t\telse if (e instanceof ArticleContentException ||\n\t\t\t\t\t e instanceof ArticleContentSizeException ||\n\t\t\t\t\t e instanceof ArticleDisplayDateException ||\n\t\t\t\t\t e instanceof ArticleExpirationDateException ||\n\t\t\t\t\t e instanceof ArticleIdException ||\n\t\t\t\t\t e instanceof ArticleSmallImageNameException ||\n\t\t\t\t\t e instanceof ArticleSmallImageSizeException ||\n\t\t\t\t\t e instanceof ArticleTitleException ||\n\t\t\t\t\t e instanceof ArticleTypeException ||\n\t\t\t\t\t e instanceof ArticleVersionException ||\n\t\t\t\t\t e instanceof DuplicateArticleIdException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\t\t\t}\n\t\t\telse if (e instanceof AssetCategoryException ||\n\t\t\t\t\t e instanceof AssetTagException ||\n\t\t\t\t\t e instanceof LocaleException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","id":4451,"modified_method":"@Override\n\tpublic void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tJournalArticle article = null;\n\t\tString oldUrlTitle = StringPool.BLANK;\n\n\t\ttry {\n\t\t\tif (Validator.isNull(cmd)) {\n\t\t\t\tUploadException uploadException =\n\t\t\t\t\t(UploadException)actionRequest.getAttribute(\n\t\t\t\t\t\tWebKeys.UPLOAD_EXCEPTION);\n\n\t\t\t\tif (uploadException != null) {\n\t\t\t\t\tif (uploadException.isExceededSizeLimit()) {\n\t\t\t\t\t\tthrow new ArticleContentSizeException();\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new PortalException(uploadException.getCause());\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.ADD) ||\n\t\t\t\t\t cmd.equals(Constants.TRANSLATE) ||\n\t\t\t\t\t cmd.equals(Constants.UPDATE)) {\n\n\t\t\t\tObject[] returnValue = updateArticle(actionRequest);\n\n\t\t\t\tarticle = (JournalArticle)returnValue[0];\n\t\t\t\toldUrlTitle = ((String)returnValue[1]);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE_TRANSLATION)) {\n\t\t\t\tremoveArticlesLocale(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.EXPIRE)) {\n\t\t\t\texpireArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.MOVE)) {\n\t\t\t\tmoveArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.SUBSCRIBE)) {\n\t\t\t\tsubscribeArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNSUBSCRIBE)) {\n\t\t\t\tunsubscribeArticles(actionRequest);\n\t\t\t}\n\n\t\t\tString redirect = ParamUtil.getString(actionRequest, \"redirect\");\n\n\t\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\t\tactionRequest, \"workflowAction\",\n\t\t\t\tWorkflowConstants.ACTION_PUBLISH);\n\n\t\t\tif ((article != null) &&\n\t\t\t\t(workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT)) {\n\n\t\t\t\tredirect = getSaveAndContinueRedirect(\n\t\t\t\t\tportletConfig, actionRequest, article, redirect);\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(oldUrlTitle)) {\n\t\t\t\tString portletId = HttpUtil.getParameter(\n\t\t\t\t\tredirect, \"p_p_id\", false);\n\n\t\t\t\tString oldRedirectParam =\n\t\t\t\t\tPortalUtil.getPortletNamespace(portletId) + \"redirect\";\n\n\t\t\t\tString oldRedirect = HttpUtil.getParameter(\n\t\t\t\t\tredirect, oldRedirectParam, false);\n\n\t\t\t\tif (Validator.isNotNull(oldRedirect)) {\n\t\t\t\t\tString newRedirect = HttpUtil.decodeURL(oldRedirect);\n\n\t\t\t\t\tnewRedirect = StringUtil.replace(\n\t\t\t\t\t\tnewRedirect, oldUrlTitle, article.getUrlTitle());\n\t\t\t\t\tnewRedirect = StringUtil.replace(\n\t\t\t\t\t\tnewRedirect, oldRedirectParam, \"redirect\");\n\n\t\t\t\t\tredirect = StringUtil.replace(\n\t\t\t\t\t\tredirect, oldRedirect, newRedirect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tWindowState windowState = actionRequest.getWindowState();\n\n\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);\n\n\t\t\tLayout layout = themeDisplay.getLayout();\n\n\t\t\tif (cmd.equals(Constants.DELETE) &&\n\t\t\t\t!ActionUtil.hasArticle(actionRequest)) {\n\n\t\t\t\tString referringPortletResource = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"referringPortletResource\");\n\n\t\t\t\tif (Validator.isNotNull(referringPortletResource)) {\n\t\t\t\t\tsetForward(\n\t\t\t\t\t\tactionRequest,\n\t\t\t\t\t\t\"portlet.journal.asset.add_asset_redirect\");\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\t\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\t\t\t\tredirect = portletURL.toString();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cmd.equals(Constants.DELETE_TRANSLATION) ||\n\t\t\t\tcmd.equals(Constants.TRANSLATE)) {\n\n\t\t\t\tsetForward(\n\t\t\t\t\tactionRequest,\n\t\t\t\t\t\"portlet.journal.update_translation_redirect\");\n\t\t\t}\n\t\t\telse if (!windowState.equals(LiferayWindowState.POP_UP) &&\n\t\t\t\t\t layout.isTypeControlPanel()) {\n\n\t\t\t\tsendRedirect(actionRequest, actionResponse, redirect);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tredirect = PortalUtil.escapeRedirect(redirect);\n\n\t\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchArticleException ||\n\t\t\t\te instanceof NoSuchStructureException ||\n\t\t\t\te instanceof NoSuchTemplateException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.journal.error\");\n\t\t\t}\n\t\t\telse if (e instanceof ArticleContentException ||\n\t\t\t\t\t e instanceof ArticleContentSizeException ||\n\t\t\t\t\t e instanceof ArticleDisplayDateException ||\n\t\t\t\t\t e instanceof ArticleExpirationDateException ||\n\t\t\t\t\t e instanceof ArticleIdException ||\n\t\t\t\t\t e instanceof ArticleSmallImageNameException ||\n\t\t\t\t\t e instanceof ArticleSmallImageSizeException ||\n\t\t\t\t\t e instanceof ArticleTitleException ||\n\t\t\t\t\t e instanceof ArticleTypeException ||\n\t\t\t\t\t e instanceof ArticleVersionException ||\n\t\t\t\t\t e instanceof DuplicateArticleIdException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\t\t\t}\n\t\t\telse if (e instanceof AssetCategoryException ||\n\t\t\t\t\t e instanceof AssetTagException ||\n\t\t\t\t\t e instanceof LocaleException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","commit_id":"dc8acbc16377f33c0e69bcfefdd47f7a34a9ffcd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.DELETE) ||\n\t\t\t\tcmd.equals(Constants.DELETE_VERSIONS)) {\n\n\t\t\t\tdeleteEntries(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.EXPIRE)) {\n\t\t\t\texpireEntries(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.MOVE)) {\n\t\t\t\tmoveEntries(actionRequest);\n\t\t\t}\n\n\t\t\tString redirect = PortalUtil.escapeRedirect(\n\t\t\t\tParamUtil.getString(actionRequest, \"redirect\"));\n\n\t\t\tif (cmd.equals(Constants.DELETE_VERSIONS) &&\n\t\t\t\t!ActionUtil.hasArticle(actionRequest)) {\n\n\t\t\t\tString referringPortletResource = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"referringPortletResource\");\n\n\t\t\t\tif (Validator.isNotNull(referringPortletResource)) {\n\t\t\t\t\tsetForward(\n\t\t\t\t\t\tactionRequest,\n\t\t\t\t\t\t\"portlet.journal.asset.add_asset_redirect\");\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t\t\t(ThemeDisplay)actionRequest.getAttribute(\n\t\t\t\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\t\t\tPortletURLImpl portletURL = new PortletURLImpl(\n\t\t\t\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\t\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\t\t\t\tredirect = portletURL.toString();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchArticleException ||\n\t\t\t\te instanceof NoSuchFolderException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.journal.error\");\n\t\t\t}\n\t\t\telse if (e instanceof DuplicateArticleIdException ||\n\t\t\t\t\t e instanceof DuplicateFolderNameException ||\n\t\t\t\t\t e instanceof NoSuchFolderException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\t\t\t}\n\t\t\telse if (e instanceof AssetCategoryException ||\n\t\t\t\t\t e instanceof AssetTagException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","id":4452,"modified_method":"@Override\n\tpublic void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.DELETE) ||\n\t\t\t\tcmd.equals(Constants.DELETE_VERSIONS)) {\n\n\t\t\t\tdeleteEntries(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.EXPIRE)) {\n\t\t\t\texpireEntries(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.MOVE)) {\n\t\t\t\tmoveEntries(actionRequest);\n\t\t\t}\n\n\t\t\tString redirect = PortalUtil.escapeRedirect(\n\t\t\t\tParamUtil.getString(actionRequest, \"redirect\"));\n\n\t\t\tif (cmd.equals(Constants.DELETE_VERSIONS) &&\n\t\t\t\t!ActionUtil.hasArticle(actionRequest)) {\n\n\t\t\t\tString referringPortletResource = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"referringPortletResource\");\n\n\t\t\t\tif (Validator.isNotNull(referringPortletResource)) {\n\t\t\t\t\tsetForward(\n\t\t\t\t\t\tactionRequest,\n\t\t\t\t\t\t\"portlet.journal.asset.add_asset_redirect\");\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t\t\t(ThemeDisplay)actionRequest.getAttribute(\n\t\t\t\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\t\t\tactionRequest, portletConfig.getPortletName(),\n\t\t\t\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\t\t\t\tredirect = portletURL.toString();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchArticleException ||\n\t\t\t\te instanceof NoSuchFolderException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.journal.error\");\n\t\t\t}\n\t\t\telse if (e instanceof DuplicateArticleIdException ||\n\t\t\t\t\t e instanceof DuplicateFolderNameException ||\n\t\t\t\t\t e instanceof NoSuchFolderException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\t\t\t}\n\t\t\telse if (e instanceof AssetCategoryException ||\n\t\t\t\t\t e instanceof AssetTagException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","commit_id":"dc8acbc16377f33c0e69bcfefdd47f7a34a9ffcd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n   * True if this observation is constrained, and false otherwise.\n   * \n   * @param observation\n   * @return\n   */\n  public boolean isConstrained(String observation) {\n    return labelDictionary.containsKey(observation);\n  }","id":4453,"modified_method":"/**\n   * True if this observation is constrained, and false otherwise.\n   * \n   * @param observation\n   * @return\n   */\n  public boolean isConstrained(String observation) {\n    return observationIndex.indexOf(observation) >= 0;\n  }","commit_id":"857b96a9ab9b29ebdbd55ecc3a6bc6ac6bd1b384","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Get the allowed label set for an observation.\n   * \n   * @param observation\n   * @return The allowed label set, or null if the observation is unconstrained.\n   */\n  public Set<Integer> getConstrainedSet(String observation) {\n    return labelDictionary.containsKey(observation) ? labelDictionary.get(observation) : null;\n  }","id":4454,"modified_method":"/**\n   * Get the allowed label set for an observation.\n   * \n   * @param observation\n   * @return The allowed label set, or null if the observation is unconstrained.\n   */\n  public int[] getConstrainedSet(String observation) {\n    int i = observationIndex.indexOf(observation);\n    return i >= 0 ? labelDictionary[i] : null;\n  }","commit_id":"857b96a9ab9b29ebdbd55ecc3a6bc6ac6bd1b384","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Setup the constrained label sets and free bookkeeping resources.\n   * \n   * @param threshold\n   * @param classIndex \n   */\n  public void lock(int threshold, Index<String> classIndex) {\n    if (labelDictionary != null) throw new RuntimeException(\"Dictionary is already locked\");\n    if (DEBUG) {\n      System.err.println(\"Label Dictionary Status:\");\n      System.err.printf(\"# Observations: %d%n\", (int) observationCounts.totalCount());\n    }\n    \n    labelDictionary = new HashMap<String,Set<Integer>>();\n    for (String observation : observationCounts.keySet()) {\n      if (observationCounts.getCount(observation) >= threshold) {\n        Set<Integer> allowedLabelIds = Generics.newHashSet();\n        Set<String> allowedLabels = observedLabels.get(observation);\n        for (String label : allowedLabels) {\n          allowedLabelIds.add(classIndex.indexOf(label));\n        }\n        labelDictionary.put(observation, allowedLabelIds);\n        if (DEBUG) {\n          System.err.printf(\"%s : %s%n\", observation, allowedLabels.toString());\n        }\n      } \n    }\n    if (DEBUG) {\n      System.err.printf(\"#constraints: %d%n\", labelDictionary.keySet().size());\n    }\n    // Free bookkeeping data structures\n    observationCounts = null;\n    observedLabels = null;\n  }","id":4455,"modified_method":"/**\n   * Setup the constrained label sets and free bookkeeping resources.\n   * \n   * @param threshold\n   * @param labelIndex \n   */\n  public void lock(int threshold, Index<String> labelIndex) {\n    if (labelDictionary != null) throw new RuntimeException(\"Label dictionary is already locked\");\n    if (DEBUG) {\n      System.err.println(\"Label Dictionary Status:\");\n      System.err.printf(\"# Observations: %d%n\", (int) observationCounts.totalCount());\n    }\n    Counters.retainAbove(observationCounts, threshold);\n    Set<String> constrainedObservations = observationCounts.keySet();\n    labelDictionary = new int[constrainedObservations.size()][];\n    observationIndex = new HashIndex<String>(constrainedObservations.size());\n    for (String observation : constrainedObservations) {\n      int i = observationIndex.indexOf(observation, true);\n      assert i < labelDictionary.length;\n      Set<String> allowedLabels = observedLabels.get(observation);\n      labelDictionary[i] = new int[allowedLabels.size()];\n      int j = 0;\n      for (String label : allowedLabels) {\n        labelDictionary[i][j++] = labelIndex.indexOf(label);\n      }\n      if (DEBUG) {\n        System.err.printf(\"%s : %s%n\", observation, allowedLabels.toString());\n      }\n    }\n    observationIndex.lock();\n    if (DEBUG) {\n      System.err.printf(\"#constraints: %d%n\", labelDictionary.length);\n    }\n    // Free bookkeeping data structures\n    observationCounts = null;\n    observedLabels = null;\n  }","commit_id":"857b96a9ab9b29ebdbd55ecc3a6bc6ac6bd1b384","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public TestSequenceModel(CRFCliqueTree<String> cliqueTree,\n      LabelDictionary labelDictionary, List<? extends CoreMap> document) {\n    // this.factorTables = factorTables;\n    this.cliqueTree = cliqueTree;\n    // this.window = factorTables[0].windowSize();\n    this.window = cliqueTree.window();\n    // this.numClasses = factorTables[0].numClasses();\n    this.numClasses = cliqueTree.getNumClasses();\n\n    this.backgroundTag = new int[] { cliqueTree.backgroundIndex() };\n    allTags = new int[numClasses];\n    for (int i = 0; i < allTags.length; i++) {\n      allTags[i] = i;\n    }\n    if (labelDictionary != null) {\n      // Constrained\n      allowedTagsAtPosition = new int[document.size()][];\n      for (int i = 0; i < allowedTagsAtPosition.length; ++i) {\n        CoreMap token  = document.get(i);\n        String observation = token.get(CoreAnnotations.TextAnnotation.class);\n        if (labelDictionary.isConstrained(observation)) {\n          Set<Integer> allowedLabels = labelDictionary.getConstrainedSet(observation);\n          allowedTagsAtPosition[i] = new int[allowedLabels.size()];\n          int j = 0;\n          for (int labelIdx : allowedLabels) {\n            allowedTagsAtPosition[i][j++] = labelIdx;\n          }\n        } else {\n          allowedTagsAtPosition[i] = allTags;\n        }\n      }\n    }\n  }","id":4456,"modified_method":"public TestSequenceModel(CRFCliqueTree<String> cliqueTree,\n      LabelDictionary labelDictionary, List<? extends CoreMap> document) {\n    // this.factorTables = factorTables;\n    this.cliqueTree = cliqueTree;\n    // this.window = factorTables[0].windowSize();\n    this.window = cliqueTree.window();\n    // this.numClasses = factorTables[0].numClasses();\n    this.numClasses = cliqueTree.getNumClasses();\n\n    this.backgroundTag = new int[] { cliqueTree.backgroundIndex() };\n    allTags = new int[numClasses];\n    for (int i = 0; i < allTags.length; i++) {\n      allTags[i] = i;\n    }\n    if (labelDictionary != null) {\n      // Constrained\n      allowedTagsAtPosition = new int[document.size()][];\n      for (int i = 0; i < allowedTagsAtPosition.length; ++i) {\n        CoreMap token  = document.get(i);\n        String observation = token.get(CoreAnnotations.TextAnnotation.class);\n        allowedTagsAtPosition[i] = labelDictionary.isConstrained(observation) ?\n            labelDictionary.getConstrainedSet(observation) : allTags;\n      }\n    }\n  }","commit_id":"857b96a9ab9b29ebdbd55ecc3a6bc6ac6bd1b384","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Setup the constrained label sets and free bookkeeping resources.\n   * \n   * @param threshold\n   * @param classIndex \n   */\n  public void lock(int threshold, Index<String> classIndex) {\n    if (labelDictionary != null) throw new RuntimeException(\"Dictionary is already locked\");\n    if (DEBUG) {\n      System.err.println(\"Label Dictionary Status:\");\n      System.err.printf(\"# Observations: %d%n\", (int) observationCounts.totalCount());\n    }\n    \n    labelDictionary = new HashMap<String,Set<Integer>>();\n    for (String observation : observationCounts.keySet()) {\n      if (observationCounts.getCount(observation) >= threshold) {\n        Set<Integer> allowedLabelIds = Generics.newHashSet();\n        Set<String> allowedLabels = observedLabels.get(observation);\n        for (String label : allowedLabels) {\n          allowedLabelIds.add(classIndex.indexOf(label));\n        }\n        labelDictionary.put(observation, allowedLabelIds);\n        if (DEBUG) {\n          System.err.printf(\"%s : %s%n\", observation, allowedLabels.toString());\n        }\n      } \n    }\n    if (DEBUG) {\n      System.err.printf(\"#constraints: %d%n\", labelDictionary.keySet().size());\n    }\n    // Free bookkeeping data structures\n    observationCounts = null;\n    observedLabels = null;\n  }","id":4457,"modified_method":"/**\n   * Setup the constrained label sets and free bookkeeping resources.\n   * \n   * @param threshold\n   * @param labelIndex \n   */\n  public void lock(int threshold, Index<String> labelIndex) {\n    if (labelDictionary != null) throw new RuntimeException(\"Label dictionary is already locked\");\n    if (DEBUG) {\n      System.err.println(\"Label Dictionary Status:\");\n      System.err.printf(\"# Observations: %d%n\", (int) observationCounts.totalCount());\n    }\n    Counters.retainAbove(observationCounts, threshold);\n    Set<String> constrainedObservations = observationCounts.keySet();\n    labelDictionary = new int[constrainedObservations.size()][];\n    observationIndex = new HashIndex<String>(constrainedObservations.size());\n    for (String observation : constrainedObservations) {\n      int i = observationIndex.indexOf(observation, true);\n      assert i < labelDictionary.length;\n      Set<String> allowedLabels = observedLabels.get(observation);\n      labelDictionary[i] = new int[allowedLabels.size()];\n      int j = 0;\n      for (String label : allowedLabels) {\n        labelDictionary[i][j++] = labelIndex.indexOf(label);\n      }\n      if (DEBUG) {\n        System.err.printf(\"%s : %s%n\", observation, allowedLabels.toString());\n      }\n    }\n    observationIndex.lock();\n    if (DEBUG) {\n      System.err.printf(\"#constraints: %d%n\", labelDictionary.length);\n    }\n    // Free bookkeeping data structures\n    observationCounts = null;\n    observedLabels = null;\n  }","commit_id":"60e60c84c53aa2b364442a7ecda63c51349ffc83","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * True if this observation is constrained, and false otherwise.\n   * \n   * @param observation\n   * @return\n   */\n  public boolean isConstrained(String observation) {\n    return labelDictionary.containsKey(observation);\n  }","id":4458,"modified_method":"/**\n   * True if this observation is constrained, and false otherwise.\n   * \n   * @param observation\n   * @return\n   */\n  public boolean isConstrained(String observation) {\n    return observationIndex.indexOf(observation) >= 0;\n  }","commit_id":"60e60c84c53aa2b364442a7ecda63c51349ffc83","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Get the allowed label set for an observation.\n   * \n   * @param observation\n   * @return The allowed label set, or null if the observation is unconstrained.\n   */\n  public Set<Integer> getConstrainedSet(String observation) {\n    return labelDictionary.containsKey(observation) ? labelDictionary.get(observation) : null;\n  }","id":4459,"modified_method":"/**\n   * Get the allowed label set for an observation.\n   * \n   * @param observation\n   * @return The allowed label set, or null if the observation is unconstrained.\n   */\n  public int[] getConstrainedSet(String observation) {\n    int i = observationIndex.indexOf(observation);\n    return i >= 0 ? labelDictionary[i] : null;\n  }","commit_id":"60e60c84c53aa2b364442a7ecda63c51349ffc83","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public TestSequenceModel(CRFCliqueTree<String> cliqueTree,\n      LabelDictionary labelDictionary, List<? extends CoreMap> document) {\n    // this.factorTables = factorTables;\n    this.cliqueTree = cliqueTree;\n    // this.window = factorTables[0].windowSize();\n    this.window = cliqueTree.window();\n    // this.numClasses = factorTables[0].numClasses();\n    this.numClasses = cliqueTree.getNumClasses();\n\n    this.backgroundTag = new int[] { cliqueTree.backgroundIndex() };\n    allTags = new int[numClasses];\n    for (int i = 0; i < allTags.length; i++) {\n      allTags[i] = i;\n    }\n    if (labelDictionary != null) {\n      // Constrained\n      allowedTagsAtPosition = new int[document.size()][];\n      for (int i = 0; i < allowedTagsAtPosition.length; ++i) {\n        CoreMap token  = document.get(i);\n        String observation = token.get(CoreAnnotations.TextAnnotation.class);\n        if (labelDictionary.isConstrained(observation)) {\n          Set<Integer> allowedLabels = labelDictionary.getConstrainedSet(observation);\n          allowedTagsAtPosition[i] = new int[allowedLabels.size()];\n          int j = 0;\n          for (int labelIdx : allowedLabels) {\n            allowedTagsAtPosition[i][j++] = labelIdx;\n          }\n        } else {\n          allowedTagsAtPosition[i] = allTags;\n        }\n      }\n    }\n  }","id":4460,"modified_method":"public TestSequenceModel(CRFCliqueTree<String> cliqueTree,\n      LabelDictionary labelDictionary, List<? extends CoreMap> document) {\n    // this.factorTables = factorTables;\n    this.cliqueTree = cliqueTree;\n    // this.window = factorTables[0].windowSize();\n    this.window = cliqueTree.window();\n    // this.numClasses = factorTables[0].numClasses();\n    this.numClasses = cliqueTree.getNumClasses();\n\n    this.backgroundTag = new int[] { cliqueTree.backgroundIndex() };\n    allTags = new int[numClasses];\n    for (int i = 0; i < allTags.length; i++) {\n      allTags[i] = i;\n    }\n    if (labelDictionary != null) {\n      // Constrained\n      allowedTagsAtPosition = new int[document.size()][];\n      for (int i = 0; i < allowedTagsAtPosition.length; ++i) {\n        CoreMap token  = document.get(i);\n        String observation = token.get(CoreAnnotations.TextAnnotation.class);\n        allowedTagsAtPosition[i] = labelDictionary.isConstrained(observation) ?\n            labelDictionary.getConstrainedSet(observation) : allTags;\n      }\n    }\n  }","commit_id":"60e60c84c53aa2b364442a7ecda63c51349ffc83","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Get the allowed label set for an observation.\n   * \n   * @param observation\n   * @return The allowed label set, or null if the observation is unconstrained.\n   */\n  public Set<Integer> getConstrainedSet(String observation) {\n    return labelDictionary.containsKey(observation) ? labelDictionary.get(observation) : null;\n  }","id":4461,"modified_method":"/**\n   * Get the allowed label set for an observation.\n   * \n   * @param observation\n   * @return The allowed label set, or null if the observation is unconstrained.\n   */\n  public int[] getConstrainedSet(String observation) {\n    int i = observationIndex.indexOf(observation);\n    return i >= 0 ? labelDictionary[i] : null;\n  }","commit_id":"86dde1e409b97a71fac8ed5505dc1f1cf04f3634","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * True if this observation is constrained, and false otherwise.\n   * \n   * @param observation\n   * @return\n   */\n  public boolean isConstrained(String observation) {\n    return labelDictionary.containsKey(observation);\n  }","id":4462,"modified_method":"/**\n   * True if this observation is constrained, and false otherwise.\n   * \n   * @param observation\n   * @return\n   */\n  public boolean isConstrained(String observation) {\n    return observationIndex.indexOf(observation) >= 0;\n  }","commit_id":"86dde1e409b97a71fac8ed5505dc1f1cf04f3634","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Setup the constrained label sets and free bookkeeping resources.\n   * \n   * @param threshold\n   * @param classIndex \n   */\n  public void lock(int threshold, Index<String> classIndex) {\n    if (labelDictionary != null) throw new RuntimeException(\"Dictionary is already locked\");\n    if (DEBUG) {\n      System.err.println(\"Label Dictionary Status:\");\n      System.err.printf(\"# Observations: %d%n\", (int) observationCounts.totalCount());\n    }\n    \n    labelDictionary = new HashMap<String,Set<Integer>>();\n    for (String observation : observationCounts.keySet()) {\n      if (observationCounts.getCount(observation) >= threshold) {\n        Set<Integer> allowedLabelIds = Generics.newHashSet();\n        Set<String> allowedLabels = observedLabels.get(observation);\n        for (String label : allowedLabels) {\n          allowedLabelIds.add(classIndex.indexOf(label));\n        }\n        labelDictionary.put(observation, allowedLabelIds);\n        if (DEBUG) {\n          System.err.printf(\"%s : %s%n\", observation, allowedLabels.toString());\n        }\n      } \n    }\n    if (DEBUG) {\n      System.err.printf(\"#constraints: %d%n\", labelDictionary.keySet().size());\n    }\n    // Free bookkeeping data structures\n    observationCounts = null;\n    observedLabels = null;\n  }","id":4463,"modified_method":"/**\n   * Setup the constrained label sets and free bookkeeping resources.\n   * \n   * @param threshold\n   * @param labelIndex \n   */\n  public void lock(int threshold, Index<String> labelIndex) {\n    if (labelDictionary != null) throw new RuntimeException(\"Label dictionary is already locked\");\n    if (DEBUG) {\n      System.err.println(\"Label Dictionary Status:\");\n      System.err.printf(\"# Observations: %d%n\", (int) observationCounts.totalCount());\n    }\n    Counters.retainAbove(observationCounts, threshold);\n    Set<String> constrainedObservations = observationCounts.keySet();\n    labelDictionary = new int[constrainedObservations.size()][];\n    observationIndex = new HashIndex<String>(constrainedObservations.size());\n    for (String observation : constrainedObservations) {\n      int i = observationIndex.indexOf(observation, true);\n      assert i < labelDictionary.length;\n      Set<String> allowedLabels = observedLabels.get(observation);\n      labelDictionary[i] = new int[allowedLabels.size()];\n      int j = 0;\n      for (String label : allowedLabels) {\n        labelDictionary[i][j++] = labelIndex.indexOf(label);\n      }\n      if (DEBUG) {\n        System.err.printf(\"%s : %s%n\", observation, allowedLabels.toString());\n      }\n    }\n    observationIndex.lock();\n    if (DEBUG) {\n      System.err.printf(\"#constraints: %d%n\", labelDictionary.length);\n    }\n    // Free bookkeeping data structures\n    observationCounts = null;\n    observedLabels = null;\n  }","commit_id":"86dde1e409b97a71fac8ed5505dc1f1cf04f3634","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public TestSequenceModel(CRFCliqueTree<String> cliqueTree,\n      LabelDictionary labelDictionary, List<? extends CoreMap> document) {\n    // this.factorTables = factorTables;\n    this.cliqueTree = cliqueTree;\n    // this.window = factorTables[0].windowSize();\n    this.window = cliqueTree.window();\n    // this.numClasses = factorTables[0].numClasses();\n    this.numClasses = cliqueTree.getNumClasses();\n\n    this.backgroundTag = new int[] { cliqueTree.backgroundIndex() };\n    allTags = new int[numClasses];\n    for (int i = 0; i < allTags.length; i++) {\n      allTags[i] = i;\n    }\n    if (labelDictionary != null) {\n      // Constrained\n      allowedTagsAtPosition = new int[document.size()][];\n      for (int i = 0; i < allowedTagsAtPosition.length; ++i) {\n        CoreMap token  = document.get(i);\n        String observation = token.get(CoreAnnotations.TextAnnotation.class);\n        if (labelDictionary.isConstrained(observation)) {\n          Set<Integer> allowedLabels = labelDictionary.getConstrainedSet(observation);\n          allowedTagsAtPosition[i] = new int[allowedLabels.size()];\n          int j = 0;\n          for (int labelIdx : allowedLabels) {\n            allowedTagsAtPosition[i][j++] = labelIdx;\n          }\n        } else {\n          allowedTagsAtPosition[i] = allTags;\n        }\n      }\n    }\n  }","id":4464,"modified_method":"public TestSequenceModel(CRFCliqueTree<String> cliqueTree,\n      LabelDictionary labelDictionary, List<? extends CoreMap> document) {\n    // this.factorTables = factorTables;\n    this.cliqueTree = cliqueTree;\n    // this.window = factorTables[0].windowSize();\n    this.window = cliqueTree.window();\n    // this.numClasses = factorTables[0].numClasses();\n    this.numClasses = cliqueTree.getNumClasses();\n\n    this.backgroundTag = new int[] { cliqueTree.backgroundIndex() };\n    allTags = new int[numClasses];\n    for (int i = 0; i < allTags.length; i++) {\n      allTags[i] = i;\n    }\n    if (labelDictionary != null) {\n      // Constrained\n      allowedTagsAtPosition = new int[document.size()][];\n      for (int i = 0; i < allowedTagsAtPosition.length; ++i) {\n        CoreMap token  = document.get(i);\n        String observation = token.get(CoreAnnotations.TextAnnotation.class);\n        allowedTagsAtPosition[i] = labelDictionary.isConstrained(observation) ?\n            labelDictionary.getConstrainedSet(observation) : allTags;\n      }\n    }\n  }","commit_id":"86dde1e409b97a71fac8ed5505dc1f1cf04f3634","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Insert then do different types of deletes\n   * @throws Exception\n   */\n  @Test\n  public void testMixedDeletes() throws Exception {\n    HLog.Entry[] entries = new HLog.Entry[3];\n    for(int i = 0; i < 3; i++) {\n      entries[i] = createEntry(TABLE_NAME1, i, KeyValue.Type.Put);\n    }\n    SINK.replicateEntries(entries);\n    entries = new HLog.Entry[3];\n\n    entries[0] = createEntry(TABLE_NAME1, 0, KeyValue.Type.DeleteColumn);\n    entries[1] = createEntry(TABLE_NAME1, 1, KeyValue.Type.DeleteFamily);\n    entries[2] = createEntry(TABLE_NAME1, 2, KeyValue.Type.DeleteColumn);\n\n    SINK.replicateEntries(entries);\n\n    Scan scan = new Scan();\n    ResultScanner scanRes = table1.getScanner(scan);\n    assertEquals(0, scanRes.next(3).length);\n  }","id":4465,"modified_method":"/**\n   * Insert then do different types of deletes\n   * @throws Exception\n   */\n  @Test\n  public void testMixedDeletes() throws Exception {\n    List<WALEntry> entries = new ArrayList<WALEntry>(3);\n    List<Cell> cells = new ArrayList<Cell>();\n    for(int i = 0; i < 3; i++) {\n      entries.add(createEntry(TABLE_NAME1, i, KeyValue.Type.Put, cells));\n    }\n    SINK.replicateEntries(entries, CellUtil.createCellScanner(cells.iterator()));\n    entries = new ArrayList<WALEntry>(3);\n    cells = new ArrayList<Cell>();\n    entries.add(createEntry(TABLE_NAME1, 0, KeyValue.Type.DeleteColumn, cells));\n    entries.add(createEntry(TABLE_NAME1, 1, KeyValue.Type.DeleteFamily, cells));\n    entries.add(createEntry(TABLE_NAME1, 2, KeyValue.Type.DeleteColumn, cells));\n\n    SINK.replicateEntries(entries, CellUtil.createCellScanner(cells.iterator()));\n\n    Scan scan = new Scan();\n    ResultScanner scanRes = table1.getScanner(scan);\n    assertEquals(0, scanRes.next(3).length);\n  }","commit_id":"ff0196f69a7b8e272592bfec7661dffe2a1a5ea7","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Puts are buffered, but this tests when a delete (not-buffered) is applied\n   * before the actual Put that creates it.\n   * @throws Exception\n   */\n  @Test\n  public void testApplyDeleteBeforePut() throws Exception {\n    HLog.Entry[] entries = new HLog.Entry[5];\n    for(int i = 0; i < 2; i++) {\n      entries[i] = createEntry(TABLE_NAME1, i, KeyValue.Type.Put);\n    }\n    entries[2] = createEntry(TABLE_NAME1, 1, KeyValue.Type.DeleteFamily);\n    for(int i = 3; i < 5; i++) {\n      entries[i] = createEntry(TABLE_NAME1, i, KeyValue.Type.Put);\n    }\n    SINK.replicateEntries(entries);\n    Get get = new Get(Bytes.toBytes(1));\n    Result res = table1.get(get);\n    assertEquals(0, res.size());\n  }","id":4466,"modified_method":"/**\n   * Puts are buffered, but this tests when a delete (not-buffered) is applied\n   * before the actual Put that creates it.\n   * @throws Exception\n   */\n  @Test\n  public void testApplyDeleteBeforePut() throws Exception {\n    List<WALEntry> entries = new ArrayList<WALEntry>(5);\n    List<Cell> cells = new ArrayList<Cell>();\n    for(int i = 0; i < 2; i++) {\n      entries.add(createEntry(TABLE_NAME1, i, KeyValue.Type.Put, cells));\n    }\n    entries.add(createEntry(TABLE_NAME1, 1, KeyValue.Type.DeleteFamily, cells));\n    for(int i = 3; i < 5; i++) {\n      entries.add(createEntry(TABLE_NAME1, i, KeyValue.Type.Put, cells));\n    }\n    SINK.replicateEntries(entries, CellUtil.createCellScanner(cells.iterator()));\n    Get get = new Get(Bytes.toBytes(1));\n    Result res = table1.get(get);\n    assertEquals(0, res.size());\n  }","commit_id":"ff0196f69a7b8e272592bfec7661dffe2a1a5ea7","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Insert a whole batch of entries\n   * @throws Exception\n   */\n  @Test\n  public void testBatchSink() throws Exception {\n    HLog.Entry[] entries = new HLog.Entry[BATCH_SIZE];\n    for(int i = 0; i < BATCH_SIZE; i++) {\n      entries[i] = createEntry(TABLE_NAME1, i, KeyValue.Type.Put);\n    }\n    SINK.replicateEntries(entries);\n    Scan scan = new Scan();\n    ResultScanner scanRes = table1.getScanner(scan);\n    assertEquals(BATCH_SIZE, scanRes.next(BATCH_SIZE).length);\n  }","id":4467,"modified_method":"/**\n   * Insert a whole batch of entries\n   * @throws Exception\n   */\n  @Test\n  public void testBatchSink() throws Exception {\n    List<WALEntry> entries = new ArrayList<WALEntry>(BATCH_SIZE);\n    List<Cell> cells = new ArrayList<Cell>();\n    for(int i = 0; i < BATCH_SIZE; i++) {\n      entries.add(createEntry(TABLE_NAME1, i, KeyValue.Type.Put, cells));\n    }\n    SINK.replicateEntries(entries, CellUtil.createCellScanner(cells.iterator()));\n    Scan scan = new Scan();\n    ResultScanner scanRes = table1.getScanner(scan);\n    assertEquals(BATCH_SIZE, scanRes.next(BATCH_SIZE).length);\n  }","commit_id":"ff0196f69a7b8e272592bfec7661dffe2a1a5ea7","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Insert to 2 different tables\n   * @throws Exception\n   */\n  @Test\n  public void testMixedPutTables() throws Exception {\n    HLog.Entry[] entries = new HLog.Entry[BATCH_SIZE];\n    for(int i = 0; i < BATCH_SIZE; i++) {\n      entries[i] =\n          createEntry( i % 2 == 0 ? TABLE_NAME2 : TABLE_NAME1,\n              i, KeyValue.Type.Put);\n    }\n\n    SINK.replicateEntries(entries);\n    Scan scan = new Scan();\n    ResultScanner scanRes = table2.getScanner(scan);\n    for(Result res : scanRes) {\n      assertTrue(Bytes.toInt(res.getRow()) % 2 == 0);\n    }\n  }","id":4468,"modified_method":"/**\n   * Insert to 2 different tables\n   * @throws Exception\n   */\n  @Test\n  public void testMixedPutTables() throws Exception {\n    List<WALEntry> entries = new ArrayList<WALEntry>(BATCH_SIZE/2);\n    List<Cell> cells = new ArrayList<Cell>();\n    for(int i = 0; i < BATCH_SIZE; i++) {\n      entries.add(createEntry( i % 2 == 0 ? TABLE_NAME2 : TABLE_NAME1,\n              i, KeyValue.Type.Put, cells));\n    }\n\n    SINK.replicateEntries(entries, CellUtil.createCellScanner(cells.iterator()));\n    Scan scan = new Scan();\n    ResultScanner scanRes = table2.getScanner(scan);\n    for(Result res : scanRes) {\n      assertTrue(Bytes.toInt(res.getRow()) % 2 == 0);\n    }\n  }","commit_id":"ff0196f69a7b8e272592bfec7661dffe2a1a5ea7","url":"https://github.com/apache/hbase"},{"original_method":"private HLog.Entry createEntry(byte [] table, int row,  KeyValue.Type type) {\n    byte[] fam = Bytes.equals(table, TABLE_NAME1) ? FAM_NAME1 : FAM_NAME2;\n    byte[] rowBytes = Bytes.toBytes(row);\n    // Just make sure we don't get the same ts for two consecutive rows with\n    // same key\n    try {\n      Thread.sleep(1);\n    } catch (InterruptedException e) {\n      LOG.info(\"Was interrupted while sleep, meh\", e);\n    }\n    final long now = System.currentTimeMillis();\n    KeyValue kv = null;\n    if(type.getCode() == KeyValue.Type.Put.getCode()) {\n      kv = new KeyValue(rowBytes, fam, fam, now,\n          KeyValue.Type.Put, Bytes.toBytes(row));\n    } else if (type.getCode() == KeyValue.Type.DeleteColumn.getCode()) {\n        kv = new KeyValue(rowBytes, fam, fam,\n            now, KeyValue.Type.DeleteColumn);\n    } else if (type.getCode() == KeyValue.Type.DeleteFamily.getCode()) {\n        kv = new KeyValue(rowBytes, fam, null,\n            now, KeyValue.Type.DeleteFamily);\n    }\n\n    HLogKey key = new HLogKey(table, table, now, now,\n        HConstants.DEFAULT_CLUSTER_ID);\n\n    WALEdit edit = new WALEdit();\n    edit.add(kv);\n\n    return new HLog.Entry(key, edit);\n  }","id":4469,"modified_method":"private WALEntry createEntry(byte [] table, int row,  KeyValue.Type type, List<Cell> cells) {\n    byte[] fam = Bytes.equals(table, TABLE_NAME1) ? FAM_NAME1 : FAM_NAME2;\n    byte[] rowBytes = Bytes.toBytes(row);\n    // Just make sure we don't get the same ts for two consecutive rows with\n    // same key\n    try {\n      Thread.sleep(1);\n    } catch (InterruptedException e) {\n      LOG.info(\"Was interrupted while sleep, meh\", e);\n    }\n    final long now = System.currentTimeMillis();\n    KeyValue kv = null;\n    if(type.getCode() == KeyValue.Type.Put.getCode()) {\n      kv = new KeyValue(rowBytes, fam, fam, now,\n          KeyValue.Type.Put, Bytes.toBytes(row));\n    } else if (type.getCode() == KeyValue.Type.DeleteColumn.getCode()) {\n        kv = new KeyValue(rowBytes, fam, fam,\n            now, KeyValue.Type.DeleteColumn);\n    } else if (type.getCode() == KeyValue.Type.DeleteFamily.getCode()) {\n        kv = new KeyValue(rowBytes, fam, null,\n            now, KeyValue.Type.DeleteFamily);\n    }\n    WALEntry.Builder builder = WALEntry.newBuilder();\n    builder.setAssociatedCellCount(1);\n    WALKey.Builder keyBuilder = WALKey.newBuilder();\n    UUID.Builder uuidBuilder = UUID.newBuilder();\n    uuidBuilder.setLeastSigBits(HConstants.DEFAULT_CLUSTER_ID.getLeastSignificantBits());\n    uuidBuilder.setMostSigBits(HConstants.DEFAULT_CLUSTER_ID.getMostSignificantBits());\n    keyBuilder.setClusterId(uuidBuilder.build());\n    keyBuilder.setTableName(ByteString.copyFrom(table));\n    keyBuilder.setWriteTime(now);\n    keyBuilder.setEncodedRegionName(ByteString.copyFrom(HConstants.EMPTY_BYTE_ARRAY));\n    keyBuilder.setLogSequenceNumber(-1);\n    builder.setKey(keyBuilder.build());\n    cells.add(kv);\n\n    return builder.build();\n  }","commit_id":"ff0196f69a7b8e272592bfec7661dffe2a1a5ea7","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Insert a mix of puts and deletes\n   * @throws Exception\n   */\n  @Test\n  public void testMixedPutDelete() throws Exception {\n    HLog.Entry[] entries = new HLog.Entry[BATCH_SIZE/2];\n    for(int i = 0; i < BATCH_SIZE/2; i++) {\n      entries[i] = createEntry(TABLE_NAME1, i, KeyValue.Type.Put);\n    }\n    SINK.replicateEntries(entries);\n\n    entries = new HLog.Entry[BATCH_SIZE];\n    for(int i = 0; i < BATCH_SIZE; i++) {\n      entries[i] = createEntry(TABLE_NAME1, i,\n          i % 2 != 0 ? KeyValue.Type.Put: KeyValue.Type.DeleteColumn);\n    }\n\n    SINK.replicateEntries(entries);\n    Scan scan = new Scan();\n    ResultScanner scanRes = table1.getScanner(scan);\n    assertEquals(BATCH_SIZE/2, scanRes.next(BATCH_SIZE).length);\n  }","id":4470,"modified_method":"/**\n   * Insert a mix of puts and deletes\n   * @throws Exception\n   */\n  @Test\n  public void testMixedPutDelete() throws Exception {\n    List<WALEntry> entries = new ArrayList<WALEntry>(BATCH_SIZE/2);\n    List<Cell> cells = new ArrayList<Cell>();\n    for(int i = 0; i < BATCH_SIZE/2; i++) {\n      entries.add(createEntry(TABLE_NAME1, i, KeyValue.Type.Put, cells));\n    }\n    SINK.replicateEntries(entries, CellUtil.createCellScanner(cells));\n\n    entries = new ArrayList<WALEntry>(BATCH_SIZE);\n    cells = new ArrayList<Cell>();\n    for(int i = 0; i < BATCH_SIZE; i++) {\n      entries.add(createEntry(TABLE_NAME1, i,\n          i % 2 != 0 ? KeyValue.Type.Put: KeyValue.Type.DeleteColumn, cells));\n    }\n\n    SINK.replicateEntries(entries, CellUtil.createCellScanner(cells.iterator()));\n    Scan scan = new Scan();\n    ResultScanner scanRes = table1.getScanner(scan);\n    assertEquals(BATCH_SIZE/2, scanRes.next(BATCH_SIZE).length);\n  }","commit_id":"ff0196f69a7b8e272592bfec7661dffe2a1a5ea7","url":"https://github.com/apache/hbase"},{"original_method":"public DescribeSnapshotsResponseType DescribeSnapshots( DescribeSnapshotsType request ) throws EucalyptusCloudException {\n        DescribeSnapshotsResponseType reply = ( DescribeSnapshotsResponseType ) request.getReply();\n        List<String> snapshotSet = request.getSnapshotSet();\n        ArrayList<SnapshotInfo> snapshotInfos = new ArrayList<SnapshotInfo>();\n        EntityWrapper<SnapshotInfo> db = new EntityWrapper<SnapshotInfo>();\n\n        for(String snapshotSetEntry: snapshotSet) {\n            SnapshotInfo snapshotInfo = new SnapshotInfo(snapshotSetEntry);\n            SnapshotInfo foundSnapshotInfo = db.getUnique(snapshotInfo);\n            if(foundSnapshotInfo != null) {\n                snapshotInfos.add(foundSnapshotInfo);\n            }\n        }\n\n        ArrayList<Snapshot> snapshots = new ArrayList<Snapshot>();\n        for(SnapshotInfo snapshotInfo: snapshotInfos) {\n            snapshots.add(convertSnapshotInfo(snapshotInfo));\n        }\n        reply.setSnapshotSet(snapshots);\n        return reply;\n    }","id":4471,"modified_method":"public DescribeStorageSnapshotsResponseType DescribeStorageSnapshots( DescribeStorageSnapshotsType request ) throws EucalyptusCloudException {\n        DescribeStorageSnapshotsResponseType reply = ( DescribeStorageSnapshotsResponseType ) request.getReply();\n        List<String> snapshotSet = request.getSnapshotSet();\n        ArrayList<SnapshotInfo> snapshotInfos = new ArrayList<SnapshotInfo>();\n        EntityWrapper<SnapshotInfo> db = new EntityWrapper<SnapshotInfo>();\n\n        for(String snapshotSetEntry: snapshotSet) {\n            SnapshotInfo snapshotInfo = new SnapshotInfo(snapshotSetEntry);\n            SnapshotInfo foundSnapshotInfo = db.getUnique(snapshotInfo);\n            if(foundSnapshotInfo != null) {\n                snapshotInfos.add(foundSnapshotInfo);\n            }\n        }\n\n        ArrayList<StorageSnapshot> snapshots = reply.getSnapshotSet();\n        for(SnapshotInfo snapshotInfo: snapshotInfos) {\n            snapshots.add(convertSnapshotInfo(snapshotInfo));\n        }\n        return reply;\n    }","commit_id":"e6efc3e8c212f1100e1766f39896157e8f2c8fd8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public CreateStorageVolumeResponseType CreateStorageVolume(CreateStorageVolumeType request) throws EucalyptusCloudException {\n        CreateStorageVolumeResponseType reply = (CreateStorageVolumeResponseType) request.getReply();\n\n        String snapshotId = request.getSnapshotId();\n        String userId = request.getUserId();\n        String volumeId = request.getVolumeId();\n\n        //in GB\n        String size = request.getSize();\n        int sizeAsInt = 0;\n        if(size != null) {\n            sizeAsInt = Integer.parseInt(size);\n        }\n\n        VolumeInfo volumeInfo = new VolumeInfo(volumeId);\n        volumeInfo.setUserName(userId);\n        volumeInfo.setSize(sizeAsInt);\n        volumeInfo.setStatus(Status.creating.toString());\n        Date creationDate = new Date();\n        volumeInfo.setCreateTime(creationDate);\n        volumeInfo.setTransferred(Boolean.FALSE);\n        if(snapshotId != null) {\n            volumeInfo.setSnapshotId(snapshotId);\n            reply.setSnapshotId(snapshotId);\n        }\n        EntityWrapper<VolumeInfo> db = new EntityWrapper<VolumeInfo>();\n        reply.setCreateTime(DateUtils.format(creationDate.getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n        reply.setSize(size);\n        reply.setStatus(volumeInfo.getStatus());\n        db.add(volumeInfo);\n        db.commit();\n\n        //create volume asynchronously\n        VolumeCreator volumeCreator = new VolumeCreator(volumeId, snapshotId, sizeAsInt);\n        volumeCreator.start();\n\n        return reply;\n    }","id":4472,"modified_method":"public CreateStorageVolumeResponseType CreateStorageVolume(CreateStorageVolumeType request) throws EucalyptusCloudException {\n        CreateStorageVolumeResponseType reply = (CreateStorageVolumeResponseType) request.getReply();\n\n        String snapshotId = request.getSnapshotId();\n        String userId = request.getUserId();\n        String volumeId = request.getVolumeId();\n\n        //in GB\n        String size = request.getSize();\n        int sizeAsInt = 0;\n        if(size != null) {\n            sizeAsInt = Integer.parseInt(size);\n        }\n\n        VolumeInfo volumeInfo = new VolumeInfo(volumeId);\n        EntityWrapper<VolumeInfo> db = new EntityWrapper<VolumeInfo>();\n        List<VolumeInfo> volumeInfos = db.query(volumeInfo);\n        if(volumeInfos.size() > 0) {\n            db.rollback();\n            throw new VolumeAlreadyExistsException(volumeId);\n        }\n        volumeInfo.setUserName(userId);\n        volumeInfo.setSize(sizeAsInt);\n        volumeInfo.setStatus(Status.creating.toString());\n        Date creationDate = new Date();\n        volumeInfo.setCreateTime(creationDate);\n        volumeInfo.setTransferred(Boolean.FALSE);\n        if(snapshotId != null) {\n            volumeInfo.setSnapshotId(snapshotId);\n            reply.setSnapshotId(snapshotId);\n        }\n        db.add(volumeInfo);\n        reply.setVolumeId(volumeId);\n        reply.setCreateTime(DateUtils.format(creationDate.getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n        reply.setSize(size);\n        reply.setStatus(volumeInfo.getStatus());\n        db.commit();\n\n        //create volume asynchronously\n        VolumeCreator volumeCreator = new VolumeCreator(volumeId, snapshotId, sizeAsInt);\n        volumeCreator.start();\n\n        return reply;\n    }","commit_id":"e6efc3e8c212f1100e1766f39896157e8f2c8fd8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public GetStorageVolumeResponseType GetStorageVolume(GetStorageVolumeType request) throws EucalyptusCloudException {\n        GetStorageVolumeResponseType reply = (GetStorageVolumeResponseType) request.getReply();\n        String volumeId = request.getVolumeId();\n\n        EntityWrapper<VolumeInfo> db = new EntityWrapper<VolumeInfo>();\n        VolumeInfo volumeInfo = new VolumeInfo();\n        volumeInfo.setVolumeId(volumeId);\n        VolumeInfo foundVolumeInfo = db.getUnique(volumeInfo);\n        if(foundVolumeInfo != null) {\n            List<String> returnValues = ebsManager.getVolume(volumeId);\n            reply.setVolumeId(foundVolumeInfo.getVolumeId());\n            reply.setSize(foundVolumeInfo.getSize().toString());\n            reply.setStatus(foundVolumeInfo.getStatus());\n            reply.setSnapshotId(foundVolumeInfo.getSnapshotId());\n            reply.setActualDeviceName(ETHERD_PREFIX + returnValues.get(0) + \".\" + returnValues.get(1));\n        } else {\n            db.rollback();\n            throw new NoSuchVolumeException(volumeId);\n        }\n        db.commit();\n        return reply;\n    }","id":4473,"modified_method":"public GetStorageVolumeResponseType GetStorageVolume(GetStorageVolumeType request) throws EucalyptusCloudException {\n        GetStorageVolumeResponseType reply = (GetStorageVolumeResponseType) request.getReply();\n        String volumeId = request.getVolumeId();\n\n        EntityWrapper<VolumeInfo> db = new EntityWrapper<VolumeInfo>();\n        VolumeInfo volumeInfo = new VolumeInfo();\n        volumeInfo.setVolumeId(volumeId);\n        List <VolumeInfo> volumeInfos = db.query(volumeInfo);\n        if(volumeInfos.size() > 0) {\n            VolumeInfo foundVolumeInfo = volumeInfos.get(0);\n            List<String> returnValues = ebsManager.getVolume(volumeId);\n            reply.setVolumeId(foundVolumeInfo.getVolumeId());\n            reply.setSize(foundVolumeInfo.getSize().toString());\n            reply.setStatus(foundVolumeInfo.getStatus());\n            reply.setSnapshotId(foundVolumeInfo.getSnapshotId());\n            reply.setActualDeviceName(ETHERD_PREFIX + returnValues.get(0) + \".\" + returnValues.get(1));\n        } else {\n            db.rollback();\n            throw new NoSuchVolumeException(volumeId);\n        }\n        db.commit();\n        return reply;\n    }","commit_id":"e6efc3e8c212f1100e1766f39896157e8f2c8fd8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private Snapshot convertSnapshotInfo(SnapshotInfo snapInfo) {\n        Snapshot snapshot = new Snapshot();\n        snapshot.setVolumeId(snapInfo.getVolumeId());\n        snapshot.setStatus(snapInfo.getStatus());\n        snapshot.setSnapshotId(snapInfo.getSnapshotId());\n        snapshot.setProgress(snapInfo.getProgress());\n        snapshot.setStartTime(snapInfo.getStartTime());\n        return snapshot;\n    }","id":4474,"modified_method":"private StorageSnapshot convertSnapshotInfo(SnapshotInfo snapInfo) {\n        StorageSnapshot snapshot = new StorageSnapshot();\n        snapshot.setVolumeId(snapInfo.getVolumeId());\n        snapshot.setStatus(snapInfo.getStatus());\n        snapshot.setSnapshotId(snapInfo.getSnapshotId());\n        snapshot.setProgress(snapInfo.getProgress());\n        snapshot.setStartTime(DateUtils.format(snapInfo.getStartTime().getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n        return snapshot;\n    }","commit_id":"e6efc3e8c212f1100e1766f39896157e8f2c8fd8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DescribeVolumesResponseType DescribeVolumes(DescribeVolumesType request) throws EucalyptusCloudException {\n        DescribeVolumesResponseType reply = (DescribeVolumesResponseType) request.getReply();\n        List<String> volumeSet = request.getVolumeSet();\n        ArrayList<VolumeInfo> volumeInfos = new ArrayList<VolumeInfo>();\n        EntityWrapper<VolumeInfo> db = new EntityWrapper<VolumeInfo>();\n\n        for(String volumeSetEntry: volumeSet) {\n            VolumeInfo volumeInfo = new VolumeInfo(volumeSetEntry);\n            VolumeInfo foundVolumeInfo = db.getUnique(volumeInfo);\n            if(foundVolumeInfo != null) {\n                volumeInfos.add(foundVolumeInfo);\n            }\n        }\n\n        ArrayList<Volume> volumes = new ArrayList<Volume>();\n        for(VolumeInfo volumeInfo: volumeInfos) {\n            volumes.add(convertVolumeInfo(volumeInfo));\n        }\n        reply.setVolumeSet(volumes);\n        return reply;\n    }","id":4475,"modified_method":"public DescribeStorageVolumesResponseType DescribeStorageVolumes(DescribeStorageVolumesType request) throws EucalyptusCloudException {\n        DescribeStorageVolumesResponseType reply = (DescribeStorageVolumesResponseType) request.getReply();\n        List<String> volumeSet = request.getVolumeSet();\n        ArrayList<VolumeInfo> volumeInfos = new ArrayList<VolumeInfo>();\n        EntityWrapper<VolumeInfo> db = new EntityWrapper<VolumeInfo>();\n\n        for(String volumeSetEntry: volumeSet) {\n            VolumeInfo volumeInfo = new VolumeInfo(volumeSetEntry);\n            VolumeInfo foundVolumeInfo = db.getUnique(volumeInfo);\n            if(foundVolumeInfo != null) {\n                volumeInfos.add(foundVolumeInfo);\n            }\n        }\n\n        ArrayList<StorageVolume> volumes = reply.getVolumeSet();\n        for(VolumeInfo volumeInfo: volumeInfos) {\n            volumes.add(convertVolumeInfo(volumeInfo));\n        }\n        return reply;\n    }","commit_id":"e6efc3e8c212f1100e1766f39896157e8f2c8fd8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public CreateStorageSnapshotResponseType CreateStorageSnapshot( CreateStorageSnapshotType request ) throws EucalyptusCloudException {\n        CreateStorageSnapshotResponseType reply = ( CreateStorageSnapshotResponseType ) request.getReply();\n        String volumeId = request.getVolumeId();\n        String snapshotId = request.getSnapshotId();\n        EntityWrapper<VolumeInfo> db = new EntityWrapper<VolumeInfo>();\n        VolumeInfo volumeInfo = new VolumeInfo(volumeId);\n        VolumeInfo foundVolumeInfo = db.getUnique(volumeInfo);\n\n        if(foundVolumeInfo != null) {\n            //check status\n            if(foundVolumeInfo.getStatus().equals(Status.available.toString())) {\n                //create snapshot\n                EntityWrapper<SnapshotInfo> db2 = new EntityWrapper<SnapshotInfo>();\n                edu.ucsb.eucalyptus.cloud.entities.SnapshotInfo snapshotInfo = new edu.ucsb.eucalyptus.cloud.entities.SnapshotInfo(snapshotId);\n                snapshotInfo.setUserName(foundVolumeInfo.getUserName());\n                snapshotInfo.setVolumeId(volumeId);\n                snapshotInfo.setStartTime(new Date());\n                snapshotInfo.setProgress(\"0%\");\n                snapshotInfo.setStatus(Status.creating.toString());\n                db2.add(snapshotInfo);\n                db2.commit();\n                db.commit();\n                //snapshot asynchronously\n                ebsManager.createSnapshot(volumeId, snapshotId);\n                Snapshotter snapshotter = new Snapshotter(volumeId, snapshotId);\n                snapshotter.run();\n                reply.setSnapshot(convertSnapshotInfo(snapshotInfo));\n            } else {\n                db.rollback();\n                throw new EucalyptusCloudException();\n            }\n        } else {\n            throw new EucalyptusCloudException();\n        }\n        return reply;\n    }","id":4476,"modified_method":"public CreateStorageSnapshotResponseType CreateStorageSnapshot( CreateStorageSnapshotType request ) throws EucalyptusCloudException {\n        CreateStorageSnapshotResponseType reply = ( CreateStorageSnapshotResponseType ) request.getReply();\n        String volumeId = request.getVolumeId();\n        String snapshotId = request.getSnapshotId();\n        EntityWrapper<VolumeInfo> db = new EntityWrapper<VolumeInfo>();\n        VolumeInfo volumeInfo = new VolumeInfo(volumeId);\n        List<VolumeInfo> volumeInfos = db.query(volumeInfo);\n\n        if(volumeInfos.size() > 0) {\n            VolumeInfo foundVolumeInfo = volumeInfos.get(0);\n            //check status\n            if(foundVolumeInfo.getStatus().equals(Status.available.toString())) {\n                //create snapshot\n                EntityWrapper<SnapshotInfo> db2 = new EntityWrapper<SnapshotInfo>();\n                edu.ucsb.eucalyptus.cloud.entities.SnapshotInfo snapshotInfo = new edu.ucsb.eucalyptus.cloud.entities.SnapshotInfo(snapshotId);\n                snapshotInfo.setUserName(foundVolumeInfo.getUserName());\n                snapshotInfo.setVolumeId(volumeId);\n                Date startTime = new Date();\n                snapshotInfo.setStartTime(startTime);\n                snapshotInfo.setProgress(\"0%\");\n                snapshotInfo.setStatus(Status.creating.toString());\n                db2.add(snapshotInfo);\n                db2.commit();\n                db.commit();\n                //snapshot asynchronously\n                ebsManager.createSnapshot(volumeId, snapshotId);\n                Snapshotter snapshotter = new Snapshotter(volumeId, snapshotId);\n                snapshotter.run();\n                reply.setSnapshotId(snapshotId);\n                reply.setVolumeId(volumeId);\n                reply.setStatus(snapshotInfo.getStatus());\n                reply.setStartTime(DateUtils.format(startTime.getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n                reply.setProgress(snapshotInfo.getProgress());\n            } else {\n                db.rollback();\n                throw new VolumeNotReadyException(volumeId);\n            }\n        } else {\n            db.rollback();\n            throw new NoSuchVolumeException(volumeId);\n        }\n        return reply;\n    }","commit_id":"e6efc3e8c212f1100e1766f39896157e8f2c8fd8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private Volume convertVolumeInfo(VolumeInfo volInfo) {\n        Volume volume = new Volume();\n        volume.setVolumeId(volInfo.getVolumeId());\n        volume.setStatus(volInfo.getStatus());\n        volume.setCreateTime(volInfo.getCreateTime());\n        volume.setAvailabilityZone(volInfo.getZone());\n        volume.setSize(String.valueOf(volInfo.getSize()));\n        volume.setSnapshotId(\"\");\n        return volume;\n    }","id":4477,"modified_method":"private StorageVolume convertVolumeInfo(VolumeInfo volInfo) {\n        StorageVolume volume = new StorageVolume();\n        volume.setVolumeId(volInfo.getVolumeId());\n        volume.setStatus(volInfo.getStatus());\n        volume.setCreateTime(DateUtils.format(volInfo.getCreateTime().getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n        volume.setSize(String.valueOf(volInfo.getSize()));\n        volume.setSnapshotId(volInfo.getSnapshotId());\n        return volume;\n    }","commit_id":"e6efc3e8c212f1100e1766f39896157e8f2c8fd8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void handle( ExceptionMessage muleMsg )\n    {\n        try\n        {\n            Object requestMsg = muleMsg.getPayload();\n            String requestString = requestMsg.toString();\n            EucalyptusMessage msg = ( EucalyptusMessage ) BindingManager.getBinding( \"msgs_eucalyptus_ucsb_edu\" ).fromOM( requestString );\n            Throwable ex = muleMsg.getException().getCause();\n            EucalyptusMessage errMsg;\n\n            if ( ex instanceof NoSuchVolumeException )\n            {\n                errMsg = new StorageErrorMessageType( \"NoSuchVolume\", \"Volume not found\", HttpStatus.SC_NOT_FOUND, msg.getCorrelationId());\n                errMsg.setCorrelationId( msg.getCorrelationId() );\n            }\n            else if ( ex instanceof VolumeInUseException )\n            {\n                errMsg = new StorageErrorMessageType( \"VolumeInUse\", \"Volume in use\", HttpStatus.SC_FORBIDDEN, msg.getCorrelationId());\n                errMsg.setCorrelationId( msg.getCorrelationId() );\n            }\n            else if ( ex instanceof NoSuchSnapshotException )\n            {\n                errMsg = new StorageErrorMessageType( \"NoSuchSnapshot\", \"Snapshot not found\", HttpStatus.SC_NOT_FOUND, msg.getCorrelationId());\n                errMsg.setCorrelationId( msg.getCorrelationId() );\n            } else\n            {\n                errMsg = new EucalyptusErrorMessageType( muleMsg.getComponentName() , msg, ex.getMessage());\n            }\n            replies.putMessage( errMsg );\n        }\n        catch ( Exception e )\n        {\n            LOG.error( e, e );\n        }\n    }","id":4478,"modified_method":"public void handle( ExceptionMessage muleMsg )\n    {\n        try\n        {\n            Object requestMsg = muleMsg.getPayload();\n            String requestString = requestMsg.toString();\n            EucalyptusMessage msg = ( EucalyptusMessage ) BindingManager.getBinding( \"msgs_eucalyptus_ucsb_edu\" ).fromOM( requestString );\n            Throwable ex = muleMsg.getException().getCause();\n            EucalyptusMessage errMsg;\n\n            if ( ex instanceof NoSuchVolumeException )\n            {\n                errMsg = new StorageErrorMessageType( \"NoSuchVolume\", \"Volume not found\", HttpStatus.SC_NOT_FOUND, msg.getCorrelationId());\n                errMsg.setCorrelationId( msg.getCorrelationId() );\n            }\n            else if ( ex instanceof VolumeInUseException )\n            {\n                errMsg = new StorageErrorMessageType( \"VolumeInUse\", \"Volume in use\", HttpStatus.SC_FORBIDDEN, msg.getCorrelationId());\n                errMsg.setCorrelationId( msg.getCorrelationId() );\n            }\n            else if ( ex instanceof NoSuchSnapshotException )\n            {\n                errMsg = new StorageErrorMessageType( \"NoSuchSnapshot\", \"Snapshot not found\", HttpStatus.SC_NOT_FOUND, msg.getCorrelationId());\n                errMsg.setCorrelationId( msg.getCorrelationId() );\n            }\n            else if ( ex instanceof VolumeAlreadyExistsException )\n            {\n                errMsg = new StorageErrorMessageType( \"VolumeAlreadyExists\", \"Volume already exists\", HttpStatus.SC_CONFLICT, msg.getCorrelationId());\n                errMsg.setCorrelationId( msg.getCorrelationId() );\n            }\n            else if ( ex instanceof VolumeNotReadyException )\n            {\n                errMsg = new StorageErrorMessageType( \"VolumeNotReady\", \"Volume not ready yet\", HttpStatus.SC_CONFLICT, msg.getCorrelationId());\n                errMsg.setCorrelationId( msg.getCorrelationId() );\n            }\n            else\n            {\n                errMsg = new EucalyptusErrorMessageType( muleMsg.getComponentName() , msg, ex.getMessage());\n            }\n            replies.putMessage( errMsg );\n        }\n        catch ( Exception e )\n        {\n            LOG.error( e, e );\n        }\n    }","commit_id":"e6efc3e8c212f1100e1766f39896157e8f2c8fd8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void testVolume() throws Throwable {\n\n        storage = new Storage();\n\n        String userId = \"admin\";\n        String volumeId = \"vol-\" + Hashes.getRandom(10);\n\n        CreateStorageVolumeType createVolumeRequest = new CreateStorageVolumeType();\n        createVolumeRequest.setUserId(userId);\n        createVolumeRequest.setVolumeId(volumeId);\n        createVolumeRequest.setSize(\"1\");\n        CreateStorageVolumeResponseType createVolumeResponse = storage.CreateStorageVolume(createVolumeRequest);\n        System.out.println(createVolumeResponse); \n        Thread.sleep(1000);\n        DescribeVolumesType describeVolumesRequest = new DescribeVolumesType();\n        describeVolumesRequest.setUserId(userId);\n        ArrayList<String> volumeSet = new ArrayList<String>();\n        volumeSet.add(volumeId);\n        describeVolumesRequest.setVolumeSet(volumeSet);\n        DescribeVolumesResponseType describeVolumesResponse = storage.DescribeVolumes(describeVolumesRequest);\n        Volume vol = describeVolumesResponse.getVolumeSet().get(0);\n        System.out.println(vol);\n        while(true);     \n    }","id":4479,"modified_method":"public void testVolume() throws Throwable {\n\n        storage = new Storage();\n\n        String userId = \"admin\";\n        String volumeId = \"vol-\" + Hashes.getRandom(10);\n\n        CreateStorageVolumeType createVolumeRequest = new CreateStorageVolumeType();\n        createVolumeRequest.setUserId(userId);\n        createVolumeRequest.setVolumeId(volumeId);\n        createVolumeRequest.setSize(\"1\");\n        CreateStorageVolumeResponseType createVolumeResponse = storage.CreateStorageVolume(createVolumeRequest);\n        System.out.println(createVolumeResponse); \n        Thread.sleep(1000);\n        DescribeStorageVolumesType describeVolumesRequest = new DescribeStorageVolumesType();\n        describeVolumesRequest.setUserId(userId);\n        ArrayList<String> volumeSet = new ArrayList<String>();\n        volumeSet.add(volumeId);\n        describeVolumesRequest.setVolumeSet(volumeSet);\n        DescribeStorageVolumesResponseType describeVolumesResponse = storage.DescribeStorageVolumes(describeVolumesRequest);\n        StorageVolume vol = describeVolumesResponse.getVolumeSet().get(0);\n        System.out.println(vol);\n        while(true);     \n    }","commit_id":"e6efc3e8c212f1100e1766f39896157e8f2c8fd8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public List<String> getVolume(String volumeId) throws EucalyptusCloudException {\n        ArrayList<String> returnValues = new ArrayList<String>();\n\n        EntityWrapper<LVMVolumeInfo> db = new EntityWrapper<LVMVolumeInfo>();\n        LVMVolumeInfo lvmVolumeInfo = new LVMVolumeInfo(volumeId);\n        LVMVolumeInfo foundLvmVolumeInfo = db.getUnique(lvmVolumeInfo);\n        if(foundLvmVolumeInfo != null) {\n            returnValues.add(String.valueOf(foundLvmVolumeInfo.getMajorNumber()));\n            returnValues.add(String.valueOf(foundLvmVolumeInfo.getMinorNumber()));\n        } else {\n            db.rollback();\n            throw new EucalyptusCloudException();\n        }\n        db.commit();\n        return returnValues;\n    }","id":4480,"modified_method":"public List<String> getVolume(String volumeId) throws EucalyptusCloudException {\n        ArrayList<String> returnValues = new ArrayList<String>();\n\n        EntityWrapper<LVMVolumeInfo> db = new EntityWrapper<LVMVolumeInfo>();\n        LVMVolumeInfo lvmVolumeInfo = new LVMVolumeInfo(volumeId);\n        List<LVMVolumeInfo> foundLvmVolumeInfos = db.query(lvmVolumeInfo);\n        if(foundLvmVolumeInfos.size() > 0) {\n            LVMVolumeInfo foundLvmVolumeInfo = foundLvmVolumeInfos.get(0);\n            returnValues.add(String.valueOf(foundLvmVolumeInfo.getMajorNumber()));\n            returnValues.add(String.valueOf(foundLvmVolumeInfo.getMinorNumber()));\n        } \n        db.commit();\n        return returnValues;\n    }","commit_id":"2d0b1e51a513baba28759cb6855df2b6a966f9ba","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void initializeForEBS() {\n        enableSnapshots = enableStorage = true;\n        EntityWrapper<StorageMetaInfo> db = new EntityWrapper<StorageMetaInfo>();\n        StorageMetaInfo metaInfo = new StorageMetaInfo();\n        try {\n            StorageMetaInfo storageMetaInfo = db.getUnique(metaInfo);\n        } catch(Exception ex) {\n            metaInfo.setMaxTotalVolumeSize(0);\n            metaInfo.setMaxTotalSnapshotSize(0);\n            db.add(metaInfo);\n        }\n        db.commit();\n        String walrusAddr = StorageProperties.WALRUS_URL;\n        if(walrusAddr == null) {\n            LOG.warn(\"Walrus host addr not set\");\n        }\n        //TODO: this should be created by a factory\n        blockManager = new LVM2Manager(StorageProperties.storageInterface);\n        blockManager.initVolumeManager();\n        try {\n            blockManager.checkPreconditions();\n        } catch(Exception ex) {\n            enableStorage = false;\n            LOG.warn(ex);\n            LOG.warn(\"Could not initialize block manager\");\n            return;\n        }\n        startup();\n        checkWalrusConnection();\n        //TODO: inform CLC\n        //StorageControllerHeartbeatMessage heartbeat = new StorageControllerHeartbeatMessage(StorageProperties.SC_ID);\n    }","id":4481,"modified_method":"public static void initializeForEBS() {\n        enableSnapshots = enableStorage = true;\n        EntityWrapper<StorageMetaInfo> db = new EntityWrapper<StorageMetaInfo>();\n        StorageMetaInfo metaInfo = new StorageMetaInfo();\n        try {\n            StorageMetaInfo storageMetaInfo = db.getUnique(metaInfo);\n            if(storageMetaInfo.getMaxTotalVolumeSize() == null)\n                storageMetaInfo.setMaxTotalVolumeSize(0);\n            if(storageMetaInfo.getMaxTotalSnapshotSize() == null)\n                storageMetaInfo.setMaxTotalSnapshotSize(0);\n        } catch(Exception ex) {\n            metaInfo.setMaxTotalVolumeSize(0);\n            metaInfo.setMaxTotalSnapshotSize(0);\n            db.add(metaInfo);\n        }\n        db.commit();\n        String walrusAddr = StorageProperties.WALRUS_URL;\n        if(walrusAddr == null) {\n            LOG.warn(\"Walrus host addr not set\");\n        }\n        //TODO: this should be created by a factory\n        blockManager = new LVM2Manager(StorageProperties.storageInterface);\n        blockManager.initVolumeManager();\n        try {\n            blockManager.checkPreconditions();\n        } catch(Exception ex) {\n            enableStorage = false;\n            LOG.warn(ex);\n            LOG.warn(\"Could not initialize block manager\");\n            return;\n        }\n        startup();\n        checkWalrusConnection();\n        //TODO: inform CLC\n        //StorageControllerHeartbeatMessage heartbeat = new StorageControllerHeartbeatMessage(StorageProperties.SC_ID);\n    }","commit_id":"2d0b1e51a513baba28759cb6855df2b6a966f9ba","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private StorageVolume convertVolumeInfo(VolumeInfo volInfo) throws EucalyptusCloudException {\n        StorageVolume volume = new StorageVolume();\n        String volumeId = volInfo.getVolumeId();\n        volume.setVolumeId(volumeId);\n        volume.setStatus(volInfo.getStatus());\n        volume.setCreateTime(DateUtils.format(volInfo.getCreateTime().getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n        volume.setSize(String.valueOf(volInfo.getSize()));\n        volume.setSnapshotId(volInfo.getSnapshotId());\n        List<String> returnValues = blockManager.getVolume(volumeId);\n        volume.setActualDeviceName(ETHERD_PREFIX + returnValues.get(0) + \".\" + returnValues.get(1));\n        return volume;\n    }","id":4482,"modified_method":"private StorageVolume convertVolumeInfo(VolumeInfo volInfo) throws EucalyptusCloudException {\n        StorageVolume volume = new StorageVolume();\n        String volumeId = volInfo.getVolumeId();\n        volume.setVolumeId(volumeId);\n        volume.setStatus(volInfo.getStatus());\n        volume.setCreateTime(DateUtils.format(volInfo.getCreateTime().getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n        volume.setSize(String.valueOf(volInfo.getSize()));\n        volume.setSnapshotId(volInfo.getSnapshotId());\n        List<String> returnValues = blockManager.getVolume(volumeId);\n        if(returnValues.size() > 0)\n            volume.setActualDeviceName(ETHERD_PREFIX + returnValues.get(0) + \".\" + returnValues.get(1));\n        else\n            volume.setActualDeviceName(\"invalid\");\n        return volume;\n    }","commit_id":"2d0b1e51a513baba28759cb6855df2b6a966f9ba","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static void checkWalrusConnection() {\n        HttpClient httpClient = new HttpClient();\n        GetMethod getMethod = null;\n        try {\n            java.net.URI addrUri = new URL(StorageProperties.WALRUS_URL).toURI();\n            String addrPath = addrUri.getPath();\n            String addr = StorageProperties.WALRUS_URL.replaceAll(addrPath, \"\");\n            getMethod = new GetMethod(addr);\n\n            httpClient.executeMethod(getMethod);\n            enableSnapshots = true;\n        } catch(Exception ex) {\n            LOG.warn(\"Could not connect to Walrus. Snapshot functionality disabled. Please check the Walrus url\");\n            enableSnapshots = false;\n        } finally {\n            if(getMethod != null)\n                getMethod.releaseConnection();\n        }\n    }","id":4483,"modified_method":"private static void checkWalrusConnection() {\n        HttpClient httpClient = new HttpClient();\n        GetMethod getMethod = null;\n        try {\n            java.net.URI addrUri = new URL(StorageProperties.WALRUS_URL).toURI();\n            String addrPath = addrUri.getPath();\n            String addr = StorageProperties.WALRUS_URL.replaceAll(addrPath, \"\");\n            getMethod = new GetMethod(addr);\n\n            httpClient.executeMethod(getMethod);\n            enableSnapshots = true;\n        } catch(Exception ex) {\n            LOG.warn(\"Could not connect to Walrus. Snapshot functionality disabled. Please check the Walrus url.\");\n            enableSnapshots = false;\n        } finally {\n            if(getMethod != null)\n                getMethod.releaseConnection();\n        }\n    }","commit_id":"2d0b1e51a513baba28759cb6855df2b6a966f9ba","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void testCreateVolume() throws Throwable {\n\n        String userId = \"admin\";\n\n        String snapshotId = \"snap-Q-DtCuwDu7yhTg..\";\n        String volumeId = \"vol-\" + Hashes.getRandom(10);\n        CreateStorageVolumeType createVolumeFromSnapshotRequest = new CreateStorageVolumeType();\n        createVolumeFromSnapshotRequest.setVolumeId(volumeId);\n        createVolumeFromSnapshotRequest.setUserId(userId);\n        createVolumeFromSnapshotRequest.setSnapshotId(snapshotId);\n        CreateStorageVolumeResponseType createVolumeFromSnapshotResponse = storage.CreateStorageVolume(createVolumeFromSnapshotRequest);\n        System.out.println(createVolumeFromSnapshotResponse);\n        while(true);\n        /* DeleteStorageSnapshotType deleteSnapshotRequest = new DeleteStorageSnapshotType();\n        deleteSnapshotRequest.setUserId(userId);\n        deleteSnapshotRequest.setSnapshotId(snapshotId);\n        DeleteStorageSnapshotResponseType deleteSnapshotResponseType = storage.DeleteStorageSnapshot(deleteSnapshotRequest);\n        System.out.println(deleteSnapshotResponseType);\n\n        DeleteStorageVolumeType deleteVolumeRequest = new DeleteStorageVolumeType();\n        deleteVolumeRequest.setUserId(userId);\n        deleteVolumeRequest.setVolumeId(volumeId);\n        DeleteStorageVolumeResponseType deleteVolumeResponse = storage.DeleteStorageVolume(deleteVolumeRequest);\n        System.out.println(deleteVolumeResponse);     */\n    }","id":4484,"modified_method":"public void testCreateVolume() throws Throwable {\n\n        String userId = \"admin\";\n\n        String snapshotId = \"snap-hoXD3u9iJ6u_zw..\";\n        String volumeId = \"vol-\" + Hashes.getRandom(10);\n        CreateStorageVolumeType createVolumeFromSnapshotRequest = new CreateStorageVolumeType();\n        createVolumeFromSnapshotRequest.setVolumeId(volumeId);\n        createVolumeFromSnapshotRequest.setUserId(userId);\n        createVolumeFromSnapshotRequest.setSnapshotId(snapshotId);\n        CreateStorageVolumeResponseType createVolumeFromSnapshotResponse = storage.CreateStorageVolume(createVolumeFromSnapshotRequest);\n        System.out.println(createVolumeFromSnapshotResponse);\n        while(true);\n        /* DeleteStorageSnapshotType deleteSnapshotRequest = new DeleteStorageSnapshotType();\n        deleteSnapshotRequest.setUserId(userId);\n        deleteSnapshotRequest.setSnapshotId(snapshotId);\n        DeleteStorageSnapshotResponseType deleteSnapshotResponseType = storage.DeleteStorageSnapshot(deleteSnapshotRequest);\n        System.out.println(deleteSnapshotResponseType);\n\n        DeleteStorageVolumeType deleteVolumeRequest = new DeleteStorageVolumeType();\n        deleteVolumeRequest.setUserId(userId);\n        deleteVolumeRequest.setVolumeId(volumeId);\n        DeleteStorageVolumeResponseType deleteVolumeResponse = storage.DeleteStorageVolume(deleteVolumeRequest);\n        System.out.println(deleteVolumeResponse);     */\n    }","commit_id":"0f28cd77638af8cd00e8399ec2c6aa26ae30fbe8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void run() {\n            boolean success = true;\n            if(snapshotId != null) {\n                EntityWrapper<SnapshotInfo> db = new EntityWrapper<SnapshotInfo>();\n                try {\n                    SnapshotInfo snapshotInfo = new SnapshotInfo(snapshotId);\n                    SnapshotInfo foundSnapshotInfo = db.getUnique(snapshotInfo);\n                    if(foundSnapshotInfo == null) {\n                        String volumePath = getVolume(volumeId, snapshotSetName, snapshotId);\n                        size = blockManager.createVolume(volumeId, volumePath);\n                        db.commit();\n                    } else {\n                        if(!foundSnapshotInfo.getStatus().equals(StorageProperties.Status.available.toString())) {\n                            success = false;\n                            db.rollback();\n                            LOG.warn(\"snapshot \" + foundSnapshotInfo.getSnapshotId() + \" not available.\");\n                        } else {\n                            size = blockManager.createVolume(volumeId, snapshotId, size);\n                            db.commit();\n                        }\n                    }\n                } catch(Exception ex) {\n                    success = false;\n                    db.rollback();\n                    ex.printStackTrace();\n                }\n            } else {\n                try {\n                    assert(size > 0);\n                    blockManager.createVolume(volumeId, size);\n                } catch(Exception ex) {\n                    success = false;\n                    ex.printStackTrace();\n                }\n            }\n            try {\n                EntityWrapper<VolumeInfo> db = new EntityWrapper<VolumeInfo>();\n                VolumeInfo volumeInfo = new VolumeInfo(volumeId);\n                VolumeInfo foundVolumeInfo = db.getUnique(volumeInfo);\n                if(foundVolumeInfo != null) {\n                    if(success) {\n                        EntityWrapper<StorageMetaInfo> dbMeta = new EntityWrapper<StorageMetaInfo>();\n                        StorageMetaInfo metaInfo = new StorageMetaInfo();\n                        StorageMetaInfo foundMetaInfo;\n                        try {\n                            foundMetaInfo = dbMeta.getUnique(metaInfo);\n                            if((foundMetaInfo.getMaxTotalVolumeSize() + size) > StorageProperties.MAX_TOTAL_VOLUME_SIZE ||\n                                    (size > StorageProperties.MAX_VOLUME_SIZE)) {\n                                success = false;\n                                LOG.warn(\"Volume size limit exceeeded\");\n                            } else {\n                                foundMetaInfo.setMaxTotalVolumeSize(foundMetaInfo.getMaxTotalVolumeSize() + size);\n                            }\n                        } catch(Exception ex) {\n                            dbMeta.rollback();\n                            foundVolumeInfo.setStatus(StorageProperties.Status.failed.toString());\n                            db.commit();\n                            ex.printStackTrace();\n                            return;\n                        }\n                        dbMeta.commit();\n                        foundVolumeInfo.setStatus(StorageProperties.Status.available.toString());\n                    } else {\n                        foundVolumeInfo.setStatus(StorageProperties.Status.failed.toString());\n                    }\n                    if(snapshotId != null) {\n                        foundVolumeInfo.setSize(size);\n                    }\n                } else {\n                    db.rollback();\n                    throw new EucalyptusCloudException();\n                }\n                db.commit();\n            } catch(EucalyptusCloudException ex) {\n                ex.printStackTrace();\n            }\n        }","id":4485,"modified_method":"public void run() {\n            boolean success = true;\n            if(snapshotId != null) {\n                EntityWrapper<SnapshotInfo> db = new EntityWrapper<SnapshotInfo>();\n                try {\n                    SnapshotInfo snapshotInfo = new SnapshotInfo(snapshotId);\n                    List<SnapshotInfo> foundSnapshotInfos = db.query(snapshotInfo);\n\n                    if(foundSnapshotInfos.size() == 0) {\n                        String volumePath = getVolume(volumeId, snapshotSetName, snapshotId);\n                        size = blockManager.createVolume(volumeId, volumePath);\n                        db.commit();\n                    } else {\n                        SnapshotInfo foundSnapshotInfo = foundSnapshotInfos.get(0);\n                        if(!foundSnapshotInfo.getStatus().equals(StorageProperties.Status.available.toString())) {\n                            success = false;\n                            db.rollback();\n                            LOG.warn(\"snapshot \" + foundSnapshotInfo.getSnapshotId() + \" not available.\");\n                        } else {\n                            size = blockManager.createVolume(volumeId, snapshotId, size);\n                            db.commit();\n                        }\n                    }\n                } catch(Exception ex) {\n                    success = false;\n                    db.rollback();\n                    ex.printStackTrace();\n                }\n            } else {\n                try {\n                    assert(size > 0);\n                    blockManager.createVolume(volumeId, size);\n                } catch(Exception ex) {\n                    success = false;\n                    ex.printStackTrace();\n                }\n            }\n            try {\n                EntityWrapper<VolumeInfo> db = new EntityWrapper<VolumeInfo>();\n                VolumeInfo volumeInfo = new VolumeInfo(volumeId);\n                VolumeInfo foundVolumeInfo = db.getUnique(volumeInfo);\n                if(foundVolumeInfo != null) {\n                    if(success) {\n                        EntityWrapper<StorageMetaInfo> dbMeta = new EntityWrapper<StorageMetaInfo>();\n                        StorageMetaInfo metaInfo = new StorageMetaInfo();\n                        StorageMetaInfo foundMetaInfo;\n                        try {\n                            foundMetaInfo = dbMeta.getUnique(metaInfo);\n                            if((foundMetaInfo.getMaxTotalVolumeSize() + size) > StorageProperties.MAX_TOTAL_VOLUME_SIZE ||\n                                    (size > StorageProperties.MAX_VOLUME_SIZE)) {\n                                success = false;\n                                LOG.warn(\"Volume size limit exceeeded\");\n                            } else {\n                                foundMetaInfo.setMaxTotalVolumeSize(foundMetaInfo.getMaxTotalVolumeSize() + size);\n                            }\n                        } catch(Exception ex) {\n                            dbMeta.rollback();\n                            foundVolumeInfo.setStatus(StorageProperties.Status.failed.toString());\n                            db.commit();\n                            ex.printStackTrace();\n                            return;\n                        }\n                        dbMeta.commit();\n                        foundVolumeInfo.setStatus(StorageProperties.Status.available.toString());\n                    } else {\n                        foundVolumeInfo.setStatus(StorageProperties.Status.failed.toString());\n                    }\n                    if(snapshotId != null) {\n                        foundVolumeInfo.setSize(size);\n                    }\n                } else {\n                    db.rollback();\n                    throw new EucalyptusCloudException();\n                }\n                db.commit();\n            } catch(EucalyptusCloudException ex) {\n                ex.printStackTrace();\n            }\n        }","commit_id":"0f28cd77638af8cd00e8399ec2c6aa26ae30fbe8","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"protected void shardOperation(final UpdateRequest request, final ActionListener<UpdateResponse> listener, final int retryCount) throws ElasticSearchException {\n        IndexService indexService = indicesService.indexServiceSafe(request.index());\n        IndexShard indexShard = indexService.shardSafe(request.shardId());\n\n        long getDate = System.currentTimeMillis();\n        final GetResult getResult = indexShard.getService().get(request.type(), request.id(),\n                new String[]{SourceFieldMapper.NAME, RoutingFieldMapper.NAME, ParentFieldMapper.NAME, TTLFieldMapper.NAME}, true);\n\n        // no doc, what to do, what to do...\n        if (!getResult.exists()) {\n            if (request.upsertRequest() == null) {\n                listener.onFailure(new DocumentMissingException(new ShardId(request.index(), request.shardId()), request.type(), request.id()));\n                return;\n            }\n            IndexRequest indexRequest = request.upsertRequest();\n            indexRequest.index(request.index()).type(request.type()).id(request.id())\n                    // it has to be a \"create!\"\n                    .create(true)\n                    .routing(request.routing())\n                    .percolate(request.percolate())\n                    .refresh(request.refresh())\n                    .replicationType(request.replicationType()).consistencyLevel(request.consistencyLevel());\n            indexRequest.operationThreaded(false);\n            // we fetch it from the index request so we don't generate the bytes twice, its already done in the index request\n            final BytesHolder updateSourceBytes = indexRequest.underlyingSourceBytes();\n            indexAction.execute(indexRequest, new ActionListener<IndexResponse>() {\n                @Override\n                public void onResponse(IndexResponse response) {\n                    UpdateResponse update = new UpdateResponse(response.index(), response.type(), response.id(), response.version());\n                    update.matches(response.matches());\n                    // TODO: we can parse the index _source and extractGetResult if applicable\n                    update.getResult(null);\n                    listener.onResponse(update);\n                }\n\n                @Override\n                public void onFailure(Throwable e) {\n                    e = ExceptionsHelper.unwrapCause(e);\n                    if (e instanceof VersionConflictEngineException) {\n                        if (retryCount < request.retryOnConflict()) {\n                            threadPool.executor(executor()).execute(new Runnable() {\n                                @Override\n                                public void run() {\n                                    shardOperation(request, listener, retryCount + 1);\n                                }\n                            });\n                            return;\n                        }\n                    }\n                    listener.onFailure(e);\n                }\n            });\n            return;\n        }\n\n        if (getResult.internalSourceRef() == null) {\n            // no source, we can't do nothing, through a failure...\n            listener.onFailure(new DocumentSourceMissingException(new ShardId(request.index(), request.shardId()), request.type(), request.id()));\n            return;\n        }\n\n        Tuple<XContentType, Map<String, Object>> sourceAndContent = XContentHelper.convertToMap(getResult.internalSourceRef().bytes(), getResult.internalSourceRef().offset(), getResult.internalSourceRef().length(), true);   \n        String operation = null;\n        String timestamp = null;\n        Long ttl = null;\n        Object fetchedTTL = null;\n        final Map<String, Object> updatedSourceAsMap;\n        final XContentType updateSourceContentType = sourceAndContent.v1();\n        String routing = getResult.fields().containsKey(RoutingFieldMapper.NAME) ? getResult.field(RoutingFieldMapper.NAME).value().toString() : null;\n        String parent = getResult.fields().containsKey(ParentFieldMapper.NAME) ? getResult.field(ParentFieldMapper.NAME).value().toString() : null;\n        \n        if (request.script() == null && request.doc() != null) {\n            IndexRequest indexRequest = request.doc();\n            updatedSourceAsMap = sourceAndContent.v2();\n            if (indexRequest.ttl() > 0) {\n                ttl = indexRequest.ttl();\n            }\n            timestamp = indexRequest.timestamp();\n            if (indexRequest.routing() != null) {\n                routing = indexRequest.routing();\n            }\n            if (indexRequest.parent() != null) {\n                parent = indexRequest.parent();\n            }\n            updateSource(updatedSourceAsMap, indexRequest.underlyingSourceAsMap());\n        } else {\n            Map<String, Object> ctx = new HashMap<String, Object>(2);\n            ctx.put(\"_source\", sourceAndContent.v2());\n            \n            try {\n                ExecutableScript script = scriptService.executable(request.scriptLang, request.script, request.scriptParams);\n                script.setNextVar(\"ctx\", ctx);\n                script.run();\n                // we need to unwrap the ctx...\n                ctx = (Map<String, Object>) script.unwrap(ctx);\n            } catch (Exception e) {\n                throw new ElasticSearchIllegalArgumentException(\"failed to execute script\", e);\n            }\n\n            operation = (String) ctx.get(\"op\");\n            timestamp = (String) ctx.get(\"_timestamp\");\n            fetchedTTL = ctx.get(\"_ttl\");\n            if (fetchedTTL != null) {\n                if (fetchedTTL instanceof Number) {\n                    ttl = ((Number) fetchedTTL).longValue();\n                } else {\n                    ttl = TimeValue.parseTimeValue((String) fetchedTTL, null).millis();\n                }\n            }\n        \n            updatedSourceAsMap = (Map<String, Object>) ctx.get(\"_source\");\n        }\n        \n        // apply script to update the source\n        // No TTL has been given in the update script so we keep previous TTL value if there is one\n        if (ttl == null) {\n            ttl = getResult.fields().containsKey(TTLFieldMapper.NAME) ? (Long) getResult.field(TTLFieldMapper.NAME).value() : null;\n            if (ttl != null) {\n                ttl = ttl - (System.currentTimeMillis() - getDate); // It is an approximation of exact TTL value, could be improved\n            }\n        }\n\n        // TODO: external version type, does it make sense here? does not seem like it...\n\n        if (operation == null || \"index\".equals(operation)) {\n            final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent)\n                    .source(updatedSourceAsMap, updateSourceContentType)\n                    .version(getResult.version()).replicationType(request.replicationType()).consistencyLevel(request.consistencyLevel())\n                    .timestamp(timestamp).ttl(ttl)\n                    .percolate(request.percolate())\n                    .refresh(request.refresh());\n            indexRequest.operationThreaded(false);\n            // we fetch it from the index request so we don't generate the bytes twice, its already done in the index request\n            final BytesHolder updateSourceBytes = indexRequest.underlyingSourceBytes();\n            indexAction.execute(indexRequest, new ActionListener<IndexResponse>() {\n                @Override\n                public void onResponse(IndexResponse response) {\n                    UpdateResponse update = new UpdateResponse(response.index(), response.type(), response.id(), response.version());\n                    update.matches(response.matches());\n                    update.getResult(extractGetResult(request, response.version(), updatedSourceAsMap, updateSourceContentType, updateSourceBytes));\n                    listener.onResponse(update);\n                }\n\n                @Override\n                public void onFailure(Throwable e) {\n                    e = ExceptionsHelper.unwrapCause(e);\n                    if (e instanceof VersionConflictEngineException) {\n                        if (retryCount < request.retryOnConflict()) {\n                            threadPool.executor(executor()).execute(new Runnable() {\n                                @Override\n                                public void run() {\n                                    shardOperation(request, listener, retryCount + 1);\n                                }\n                            });\n                            return;\n                        }\n                    }\n                    listener.onFailure(e);\n                }\n            });\n        } else if (\"delete\".equals(operation)) {\n            DeleteRequest deleteRequest = Requests.deleteRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent)\n                    .version(getResult.version()).replicationType(request.replicationType()).consistencyLevel(request.consistencyLevel());\n            deleteRequest.operationThreaded(false);\n            deleteAction.execute(deleteRequest, new ActionListener<DeleteResponse>() {\n                @Override\n                public void onResponse(DeleteResponse response) {\n                    UpdateResponse update = new UpdateResponse(response.index(), response.type(), response.id(), response.version());\n                    update.getResult(extractGetResult(request, response.version(), updatedSourceAsMap, updateSourceContentType, null));\n                    listener.onResponse(update);\n                }\n\n                @Override\n                public void onFailure(Throwable e) {\n                    e = ExceptionsHelper.unwrapCause(e);\n                    if (e instanceof VersionConflictEngineException) {\n                        if (retryCount < request.retryOnConflict()) {\n                            threadPool.executor(executor()).execute(new Runnable() {\n                                @Override\n                                public void run() {\n                                    shardOperation(request, listener, retryCount + 1);\n                                }\n                            });\n                            return;\n                        }\n                    }\n                    listener.onFailure(e);\n                }\n            });\n        } else if (\"none\".equals(operation)) {\n            UpdateResponse update = new UpdateResponse(getResult.index(), getResult.type(), getResult.id(), getResult.version());\n            update.getResult(extractGetResult(request, getResult.version(), updatedSourceAsMap, updateSourceContentType, null));\n            listener.onResponse(update);\n        } else {\n            logger.warn(\"Used update operation [{}] for script [{}], doing nothing...\", operation, request.script);\n            listener.onResponse(new UpdateResponse(getResult.index(), getResult.type(), getResult.id(), getResult.version()));\n        }\n    }","id":4486,"modified_method":"protected void shardOperation(final UpdateRequest request, final ActionListener<UpdateResponse> listener, final int retryCount) throws ElasticSearchException {\n        IndexService indexService = indicesService.indexServiceSafe(request.index());\n        IndexShard indexShard = indexService.shardSafe(request.shardId());\n\n        long getDate = System.currentTimeMillis();\n        final GetResult getResult = indexShard.getService().get(request.type(), request.id(),\n                new String[]{SourceFieldMapper.NAME, RoutingFieldMapper.NAME, ParentFieldMapper.NAME, TTLFieldMapper.NAME}, true);\n\n        // no doc, what to do, what to do...\n        if (!getResult.exists()) {\n            if (request.upsertRequest() == null) {\n                listener.onFailure(new DocumentMissingException(new ShardId(request.index(), request.shardId()), request.type(), request.id()));\n                return;\n            }\n            IndexRequest indexRequest = request.upsertRequest();\n            indexRequest.index(request.index()).type(request.type()).id(request.id())\n                    // it has to be a \"create!\"\n                    .create(true)\n                    .routing(request.routing())\n                    .percolate(request.percolate())\n                    .refresh(request.refresh())\n                    .replicationType(request.replicationType()).consistencyLevel(request.consistencyLevel());\n            indexRequest.operationThreaded(false);\n            // we fetch it from the index request so we don't generate the bytes twice, its already done in the index request\n            final BytesHolder updateSourceBytes = indexRequest.underlyingSourceBytes();\n            indexAction.execute(indexRequest, new ActionListener<IndexResponse>() {\n                @Override\n                public void onResponse(IndexResponse response) {\n                    UpdateResponse update = new UpdateResponse(response.index(), response.type(), response.id(), response.version());\n                    update.matches(response.matches());\n                    // TODO: we can parse the index _source and extractGetResult if applicable\n                    update.getResult(null);\n                    listener.onResponse(update);\n                }\n\n                @Override\n                public void onFailure(Throwable e) {\n                    e = ExceptionsHelper.unwrapCause(e);\n                    if (e instanceof VersionConflictEngineException) {\n                        if (retryCount < request.retryOnConflict()) {\n                            threadPool.executor(executor()).execute(new Runnable() {\n                                @Override\n                                public void run() {\n                                    shardOperation(request, listener, retryCount + 1);\n                                }\n                            });\n                            return;\n                        }\n                    }\n                    listener.onFailure(e);\n                }\n            });\n            return;\n        }\n\n        if (getResult.internalSourceRef() == null) {\n            // no source, we can't do nothing, through a failure...\n            listener.onFailure(new DocumentSourceMissingException(new ShardId(request.index(), request.shardId()), request.type(), request.id()));\n            return;\n        }\n\n        Tuple<XContentType, Map<String, Object>> sourceAndContent = XContentHelper.convertToMap(getResult.internalSourceRef().bytes(), getResult.internalSourceRef().offset(), getResult.internalSourceRef().length(), true);\n        String operation = null;\n        String timestamp = null;\n        Long ttl = null;\n        Object fetchedTTL = null;\n        final Map<String, Object> updatedSourceAsMap;\n        final XContentType updateSourceContentType = sourceAndContent.v1();\n        String routing = getResult.fields().containsKey(RoutingFieldMapper.NAME) ? getResult.field(RoutingFieldMapper.NAME).value().toString() : null;\n        String parent = getResult.fields().containsKey(ParentFieldMapper.NAME) ? getResult.field(ParentFieldMapper.NAME).value().toString() : null;\n\n        if (request.script() == null && request.doc() != null) {\n            IndexRequest indexRequest = request.doc();\n            updatedSourceAsMap = sourceAndContent.v2();\n            if (indexRequest.ttl() > 0) {\n                ttl = indexRequest.ttl();\n            }\n            timestamp = indexRequest.timestamp();\n            if (indexRequest.routing() != null) {\n                routing = indexRequest.routing();\n            }\n            if (indexRequest.parent() != null) {\n                parent = indexRequest.parent();\n            }\n            XContentHelper.update(updatedSourceAsMap, indexRequest.underlyingSourceAsMap());\n        } else {\n            Map<String, Object> ctx = new HashMap<String, Object>(2);\n            ctx.put(\"_source\", sourceAndContent.v2());\n\n            try {\n                ExecutableScript script = scriptService.executable(request.scriptLang, request.script, request.scriptParams);\n                script.setNextVar(\"ctx\", ctx);\n                script.run();\n                // we need to unwrap the ctx...\n                ctx = (Map<String, Object>) script.unwrap(ctx);\n            } catch (Exception e) {\n                throw new ElasticSearchIllegalArgumentException(\"failed to execute script\", e);\n            }\n\n            operation = (String) ctx.get(\"op\");\n            timestamp = (String) ctx.get(\"_timestamp\");\n            fetchedTTL = ctx.get(\"_ttl\");\n            if (fetchedTTL != null) {\n                if (fetchedTTL instanceof Number) {\n                    ttl = ((Number) fetchedTTL).longValue();\n                } else {\n                    ttl = TimeValue.parseTimeValue((String) fetchedTTL, null).millis();\n                }\n            }\n\n            updatedSourceAsMap = (Map<String, Object>) ctx.get(\"_source\");\n        }\n\n        // apply script to update the source\n        // No TTL has been given in the update script so we keep previous TTL value if there is one\n        if (ttl == null) {\n            ttl = getResult.fields().containsKey(TTLFieldMapper.NAME) ? (Long) getResult.field(TTLFieldMapper.NAME).value() : null;\n            if (ttl != null) {\n                ttl = ttl - (System.currentTimeMillis() - getDate); // It is an approximation of exact TTL value, could be improved\n            }\n        }\n\n        // TODO: external version type, does it make sense here? does not seem like it...\n\n        if (operation == null || \"index\".equals(operation)) {\n            final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent)\n                    .source(updatedSourceAsMap, updateSourceContentType)\n                    .version(getResult.version()).replicationType(request.replicationType()).consistencyLevel(request.consistencyLevel())\n                    .timestamp(timestamp).ttl(ttl)\n                    .percolate(request.percolate())\n                    .refresh(request.refresh());\n            indexRequest.operationThreaded(false);\n            // we fetch it from the index request so we don't generate the bytes twice, its already done in the index request\n            final BytesHolder updateSourceBytes = indexRequest.underlyingSourceBytes();\n            indexAction.execute(indexRequest, new ActionListener<IndexResponse>() {\n                @Override\n                public void onResponse(IndexResponse response) {\n                    UpdateResponse update = new UpdateResponse(response.index(), response.type(), response.id(), response.version());\n                    update.matches(response.matches());\n                    update.getResult(extractGetResult(request, response.version(), updatedSourceAsMap, updateSourceContentType, updateSourceBytes));\n                    listener.onResponse(update);\n                }\n\n                @Override\n                public void onFailure(Throwable e) {\n                    e = ExceptionsHelper.unwrapCause(e);\n                    if (e instanceof VersionConflictEngineException) {\n                        if (retryCount < request.retryOnConflict()) {\n                            threadPool.executor(executor()).execute(new Runnable() {\n                                @Override\n                                public void run() {\n                                    shardOperation(request, listener, retryCount + 1);\n                                }\n                            });\n                            return;\n                        }\n                    }\n                    listener.onFailure(e);\n                }\n            });\n        } else if (\"delete\".equals(operation)) {\n            DeleteRequest deleteRequest = Requests.deleteRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent)\n                    .version(getResult.version()).replicationType(request.replicationType()).consistencyLevel(request.consistencyLevel());\n            deleteRequest.operationThreaded(false);\n            deleteAction.execute(deleteRequest, new ActionListener<DeleteResponse>() {\n                @Override\n                public void onResponse(DeleteResponse response) {\n                    UpdateResponse update = new UpdateResponse(response.index(), response.type(), response.id(), response.version());\n                    update.getResult(extractGetResult(request, response.version(), updatedSourceAsMap, updateSourceContentType, null));\n                    listener.onResponse(update);\n                }\n\n                @Override\n                public void onFailure(Throwable e) {\n                    e = ExceptionsHelper.unwrapCause(e);\n                    if (e instanceof VersionConflictEngineException) {\n                        if (retryCount < request.retryOnConflict()) {\n                            threadPool.executor(executor()).execute(new Runnable() {\n                                @Override\n                                public void run() {\n                                    shardOperation(request, listener, retryCount + 1);\n                                }\n                            });\n                            return;\n                        }\n                    }\n                    listener.onFailure(e);\n                }\n            });\n        } else if (\"none\".equals(operation)) {\n            UpdateResponse update = new UpdateResponse(getResult.index(), getResult.type(), getResult.id(), getResult.version());\n            update.getResult(extractGetResult(request, getResult.version(), updatedSourceAsMap, updateSourceContentType, null));\n            listener.onResponse(update);\n        } else {\n            logger.warn(\"Used update operation [{}] for script [{}], doing nothing...\", operation, request.script);\n            listener.onResponse(new UpdateResponse(getResult.index(), getResult.type(), getResult.id(), getResult.version()));\n        }\n    }","commit_id":"0aa0b9ef2229f74095e5e116bd92accd63bae5fd","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public void readFrom(StreamInput in) throws IOException {\n        super.readFrom(in);\n        replicationType = ReplicationType.fromId(in.readByte());\n        consistencyLevel = WriteConsistencyLevel.fromId(in.readByte());\n        type = in.readUTF();\n        id = in.readUTF();\n        if (in.readBoolean()) {\n            routing = in.readUTF();\n        }\n        if (in.readBoolean()) {\n            script = in.readUTF();\n        }\n        if (in.readBoolean()) {\n            scriptLang = in.readUTF();\n        }\n        scriptParams = in.readMap();\n        retryOnConflict = in.readVInt();\n        if (in.readBoolean()) {\n            percolate = in.readUTF();\n        }\n        refresh = in.readBoolean();\n        if (in.readBoolean()) {\n            doc = new IndexRequest();\n            doc.readFrom(in);\n        }\n        int size = in.readInt();\n        if (size >= 0) {\n            fields = new String[size];\n            for (int i = 0; i < size; i++) {\n                fields[i] = in.readUTF();\n            }\n        }\n        if (in.readBoolean()) {\n            upsertRequest = new IndexRequest();\n            upsertRequest.readFrom(in);\n        }\n    }","id":4487,"modified_method":"@Override\n    public void readFrom(StreamInput in) throws IOException {\n        super.readFrom(in);\n        replicationType = ReplicationType.fromId(in.readByte());\n        consistencyLevel = WriteConsistencyLevel.fromId(in.readByte());\n        type = in.readUTF();\n        id = in.readUTF();\n        routing = in.readOptionalUTF();\n        script = in.readOptionalUTF();\n        scriptLang = in.readOptionalUTF();\n        scriptParams = in.readMap();\n        retryOnConflict = in.readVInt();\n        percolate = in.readOptionalUTF();\n        refresh = in.readBoolean();\n        if (in.readBoolean()) {\n            doc = new IndexRequest();\n            doc.readFrom(in);\n        }\n        int size = in.readInt();\n        if (size >= 0) {\n            fields = new String[size];\n            for (int i = 0; i < size; i++) {\n                fields[i] = in.readUTF();\n            }\n        }\n        if (in.readBoolean()) {\n            upsertRequest = new IndexRequest();\n            upsertRequest.readFrom(in);\n        }\n    }","commit_id":"0aa0b9ef2229f74095e5e116bd92accd63bae5fd","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public void writeTo(StreamOutput out) throws IOException {\n        super.writeTo(out);\n        out.writeByte(replicationType.id());\n        out.writeByte(consistencyLevel.id());\n        out.writeUTF(type);\n        out.writeUTF(id);\n        if (routing == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            out.writeUTF(routing);\n        }\n        if (script == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            out.writeUTF(script);\n        }\n        if (scriptLang == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            out.writeUTF(scriptLang);\n        }\n        out.writeMap(scriptParams);\n        out.writeVInt(retryOnConflict);\n        if (percolate == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            out.writeUTF(percolate);\n        }\n        out.writeBoolean(refresh);\n        if (doc == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            // make sure the basics are set\n            doc.index(index);\n            doc.type(type);\n            doc.id(id);\n            doc.writeTo(out);\n        }\n        if (fields == null) {\n            out.writeInt(-1);\n        } else {\n            out.writeInt(fields.length);\n            for (String field : fields) {\n                out.writeUTF(field);\n            }\n        }\n        if (upsertRequest == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            // make sure the basics are set\n            upsertRequest.index(index);\n            upsertRequest.type(type);\n            upsertRequest.id(id);\n            upsertRequest.writeTo(out);\n        }\n    }","id":4488,"modified_method":"@Override\n    public void writeTo(StreamOutput out) throws IOException {\n        super.writeTo(out);\n        out.writeByte(replicationType.id());\n        out.writeByte(consistencyLevel.id());\n        out.writeUTF(type);\n        out.writeUTF(id);\n        out.writeOptionalUTF(routing);\n        out.writeOptionalUTF(script);\n        out.writeOptionalUTF(scriptLang);\n        out.writeMap(scriptParams);\n        out.writeVInt(retryOnConflict);\n        out.writeOptionalUTF(percolate);\n        out.writeBoolean(refresh);\n        if (doc == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            // make sure the basics are set\n            doc.index(index);\n            doc.type(type);\n            doc.id(id);\n            doc.writeTo(out);\n        }\n        if (fields == null) {\n            out.writeInt(-1);\n        } else {\n            out.writeInt(fields.length);\n            for (String field : fields) {\n                out.writeUTF(field);\n            }\n        }\n        if (upsertRequest == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            // make sure the basics are set\n            upsertRequest.index(index);\n            upsertRequest.type(type);\n            upsertRequest.id(id);\n            upsertRequest.writeTo(out);\n        }\n    }","commit_id":"0aa0b9ef2229f74095e5e116bd92accd63bae5fd","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static Test suite() {\n        //setFilter(); //to launch only part of tests\n        TestSuite suite = new TestSuite();\n        FilenameFilter fileNameFilter = new FilenameFilter() {\n            @Override\n            public boolean accept(File file, String s) {\n                if (s.startsWith(\"before\")) return true;\n                return false;\n            }\n        };\n        JetTestCaseBuilder.NamedTestFactory namedTestFactory = new JetTestCaseBuilder.NamedTestFactory() {\n            @NotNull\n            @Override\n            public Test createTest(@NotNull String dataPath, @NotNull String name, @NotNull File file) {\n                return new JetQuickFixTest(dataPath, name);\n            }\n        };\n        File dir = new File(getTestDataPathBase());\n        List<String> subDirs = Arrays.asList(quickFixTestsFilter != null ? dir.list(quickFixTestsFilter) : dir.list());\n        Collections.sort(subDirs);\n        for (String subDirName : subDirs) {\n            suite.addTest(JetTestCaseBuilder.suiteForDirectory(getTestDataPathBase(), subDirName, true, fileNameFilter, namedTestFactory));\n\n        }\n        return suite;\n    }","id":4489,"modified_method":"public static Test suite() {\n        //setFilter(); //to launch only part of tests\n        TestSuite suite = new TestSuite();\n\n        FilenameFilter singleFileNameFilter = new FilenameFilter() {\n            @Override\n            public boolean accept(File file, String s) {\n                return s.startsWith(\"before\") && !JetPsiCheckerMultifileTest.isMultiFileName(s);\n            }\n        };\n\n        FilenameFilter multifileFileNameFilter = new FilenameFilter() {\n            @Override\n            public boolean accept(File file, String s) {\n                return s.startsWith(\"before\") && JetPsiCheckerMultifileTest.isMainFile(s);\n            }\n        };\n\n        JetTestCaseBuilder.NamedTestFactory singleFileNamedTestFactory = new JetTestCaseBuilder.NamedTestFactory() {\n            @NotNull\n            @Override\n            public Test createTest(@NotNull String dataPath, @NotNull String name, @NotNull File file) {\n                return new JetQuickFixTest(dataPath, name);\n            }\n        };\n\n        JetTestCaseBuilder.NamedTestFactory multiFileNamedTestFactory = new JetTestCaseBuilder.NamedTestFactory() {\n            @NotNull\n            @Override\n            public Test createTest(@NotNull String dataPath, @NotNull String name, @NotNull File file) {\n                return new JetPsiCheckerMultifileTestImpl(dataPath, name);\n            }\n        };\n\n        File dir = new File(getTestDataPathBase());\n        List<String> subDirs = Arrays.asList(quickFixTestsFilter != null ? dir.list(quickFixTestsFilter) : dir.list());\n        Collections.sort(subDirs);\n        for (String subDirName : subDirs) {\n\n            final TestSuite singleFileTestSuite = JetTestCaseBuilder.suiteForDirectory(getTestDataPathBase(), subDirName, true, singleFileNameFilter, singleFileNamedTestFactory);\n            if (singleFileTestSuite.countTestCases() != 0) {\n                suite.addTest(singleFileTestSuite);\n            }\n\n            final TestSuite multiFileTestSuite = JetTestCaseBuilder.suiteForDirectory(getTestDataPathBase(), subDirName, true, multifileFileNameFilter, multiFileNamedTestFactory);\n            if (multiFileTestSuite.countTestCases() != 0) {\n                suite.addTest(multiFileTestSuite);\n            }\n\n        }\n        return suite;\n    }","commit_id":"17e8a2663d32f443b59445951a3a2d4cbe02ba49","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public static void appendTestsInDirectory(String baseDataDir, String dataPath, boolean recursive, @NotNull FilenameFilter filter, NamedTestFactory factory, TestSuite suite) {\n        File dir = new File(baseDataDir + dataPath);\n        FileFilter dirFilter = new FileFilter() {\n            @Override\n            public boolean accept(File pathname) {\n                return pathname.isDirectory();\n            }\n        };\n        if (recursive) {\n            File[] files = dir.listFiles(dirFilter);\n            assert files != null : dir;\n            List<File> subdirs = Arrays.asList(files);\n            Collections.sort(subdirs);\n            for (File subdir : subdirs) {\n                suite.addTest(suiteForDirectory(baseDataDir, dataPath + \"/\" + subdir.getName(), recursive, filter, factory));\n            }\n        }\n        List<File> files = Arrays.asList(dir.listFiles(filter));\n        Collections.sort(files);\n        for (File file : files) {\n            String fileName = file.getName();\n            String testName = FileUtil.getNameWithoutExtension(file);\n            suite.addTest(factory.createTest(dataPath, testName, file));\n        }\n    }","id":4490,"modified_method":"public static void appendTestsInDirectory(String baseDataDir, String dataPath, boolean recursive, @NotNull FilenameFilter filter, NamedTestFactory factory, TestSuite suite) {\n        File dir = new File(baseDataDir + dataPath);\n        FileFilter dirFilter = new FileFilter() {\n            @Override\n            public boolean accept(File pathname) {\n                return pathname.isDirectory();\n            }\n        };\n        if (recursive) {\n            File[] files = dir.listFiles(dirFilter);\n            assert files != null : dir;\n            List<File> subdirs = Arrays.asList(files);\n            Collections.sort(subdirs);\n            for (File subdir : subdirs) {\n                Test suiteForDir = suiteForDirectory(baseDataDir, dataPath + \"/\" + subdir.getName(), recursive, filter, factory);\n                if (suiteForDir.countTestCases() != 0) {\n                    suite.addTest(suiteForDir);\n                }\n            }\n        }\n        List<File> files = Arrays.asList(dir.listFiles(filter));\n        Collections.sort(files);\n        for (File file : files) {\n            String fileName = file.getName();\n            String testName = FileUtil.getNameWithoutExtension(file);\n            suite.addTest(factory.createTest(dataPath, testName, file));\n        }\n    }","commit_id":"3930d2ca33668d0b92236d59ac2a8a8692b5ab7b","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public static Test suite() {\n        TestSuite suite = new TestSuite();\n        suite.addTest(JetTestCaseBuilder.suiteForDirectory(PluginTestCaseBase.getTestDataPathBase(), \"/checker/\", false, new JetTestCaseBuilder.NamedTestFactory() {\n            @NotNull\n            @Override\n            public Test createTest(@NotNull String dataPath, @NotNull String name) {\n                return new JetPsiCheckerTest(dataPath, name);\n            }\n        }));\n        suite.addTest(JetTestCaseBuilder.suiteForDirectory(PluginTestCaseBase.getTestDataPathBase(), \"/checker/regression/\", false, new JetTestCaseBuilder.NamedTestFactory() {\n            @NotNull\n            @Override\n            public Test createTest(@NotNull String dataPath, @NotNull String name) {\n                return new JetPsiCheckerTest(dataPath, name);\n            }\n        }));\n        suite.addTest(JetTestCaseBuilder.suiteForDirectory(PluginTestCaseBase.getTestDataPathBase(), \"/checker/infos/\", false, new JetTestCaseBuilder.NamedTestFactory() {\n            @NotNull\n            @Override\n            public Test createTest(@NotNull String dataPath, @NotNull String name) {\n                return new JetPsiCheckerTest(dataPath, name).setCheckInfos(true);\n            }\n        }));\n        return suite;\n    }","id":4491,"modified_method":"public static Test suite() {\n        TestSuite suite = new TestSuite();\n        final TestSuite checkerSuite = JetTestCaseBuilder.suiteForDirectory(PluginTestCaseBase.getTestDataPathBase(), \"/checker/\", false, new JetTestCaseBuilder.NamedTestFactory() {\n            @NotNull\n            @Override\n            public Test createTest(@NotNull String dataPath, @NotNull String name) {\n                return new JetPsiCheckerTest(dataPath, name);\n            }\n        });\n        if (checkerSuite.countTestCases() == 0) {\n            throw new RuntimeException(\"didn't find any testcases under /checker/\");\n        }\n        suite.addTest(checkerSuite);\n        suite.addTest(JetTestCaseBuilder.suiteForDirectory(PluginTestCaseBase.getTestDataPathBase(), \"/checker/regression/\", false, new JetTestCaseBuilder.NamedTestFactory() {\n            @NotNull\n            @Override\n            public Test createTest(@NotNull String dataPath, @NotNull String name) {\n                return new JetPsiCheckerTest(dataPath, name);\n            }\n        }));\n        suite.addTest(JetTestCaseBuilder.suiteForDirectory(PluginTestCaseBase.getTestDataPathBase(), \"/checker/infos/\", false, new JetTestCaseBuilder.NamedTestFactory() {\n            @NotNull\n            @Override\n            public Test createTest(@NotNull String dataPath, @NotNull String name) {\n                return new JetPsiCheckerTest(dataPath, name).setCheckInfos(true);\n            }\n        }));\n        return suite;\n    }","commit_id":"750e2e25f00d0b0b05ba14e10677b4cf01782d34","url":"https://github.com/JetBrains/kotlin"},{"original_method":"/** Returns the Style of checkbox label\n\t *\n\t * <p>Default: \"z-chkbox\"\n\t * <p>Since 3.5.1\n\t * \n\t */\n\tpublic String getZclass() {\n\t\tString scls = super.getZclass();\n\t\tif (scls == null)\n\t\t\tscls = \"z-chkbox\";\n\t\treturn scls;\n\t}","id":4492,"modified_method":"/** Returns the Style of checkbox label\n\t *\n\t * <p>Default: \"z-chkbox\"\n\t * <p>Since 3.5.1\n\t * \n\t */\n\tpublic String getZclass() {\n\t\treturn _zclass == null ? \"z-chkbox\" : super.getZclass();\n\t}","commit_id":"3ffed6afd6435d40edd7dd1c26724a5abbae7ada","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal SmartWriter wh = new SmartWriter(out);\n\t\tfinal Checkbox self = (Checkbox) comp;\n\t\tfinal String uuid = self.getUuid();\n\t\twh.write(\"<span id=\\\"\").write(uuid).write(\"\\\"\");\n\t\twh.write(\" z.type=\\\"zul.btn.Ckbox\\\"\");\n\t\twh.write(self.getOuterAttrs()).write(\"><input type=\\\"checkbox\\\" id=\\\"\");\n\t\twh.write(uuid).write(\"!real\\\"\").write(self.getInnerAttrs());\n\t\twh.write(\"/><label for=\\\"\").write(uuid).write(\"!real\\\"\");\n\t\twh.write(self.getLabelAttrs()).write(\" class=\\\"\"+self.getZclass()+\"\\\"\")\n\t\t.write(\">\").write(self.getImgTag());\n\t\tnew Out(self.getLabel()).render(out);\n\t\twh.write(\"<\/label><\/span>\");\n\t}","id":4493,"modified_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal SmartWriter wh = new SmartWriter(out);\n\t\tfinal Checkbox self = (Checkbox) comp;\n\t\tfinal String uuid = self.getUuid();\n\t\twh.write(\"<span id=\\\"\").write(uuid).write(\"\\\"\");\n\t\twh.write(\" z.type=\\\"zul.btn.Ckbox\\\"\");\n\t\twh.write(self.getOuterAttrs()).write(\"><input type=\\\"checkbox\\\" id=\\\"\");\n\t\twh.write(uuid).write(\"!real\\\"\").write(self.getInnerAttrs());\n\t\twh.write(\"/><label for=\\\"\").write(uuid).write(\"!real\\\"\");\n\t\twh.write(self.getLabelAttrs()).write(\" class=\\\"\"+self.getZclass()+\"-cnt\\\"\")\n\t\t.write(\">\").write(self.getImgTag());\n\t\tnew Out(self.getLabel()).render(out);\n\t\twh.write(\"<\/label><\/span>\");\n\t}","commit_id":"3ffed6afd6435d40edd7dd1c26724a5abbae7ada","url":"https://github.com/zkoss/zk"},{"original_method":"/** Returns the Style of label\n\t *\n\t * <p>Default: \"z-label\"\n\t */\n\tpublic String getZclass() {\n\t\tString scls = super.getZclass();\n\t\tif (scls == null)\n\t\t\tscls = \"z-label\";\n\t\treturn scls;\n\t}","id":4494,"modified_method":"/** Returns the Style of label\n\t *\n\t * <p>Default: \"z-label\"\n\t */\n\tpublic String getZclass() {\n\t\treturn _zclass == null ? \"z-label\" : super.getZclass();\n\t}","commit_id":"3ffed6afd6435d40edd7dd1c26724a5abbae7ada","url":"https://github.com/zkoss/zk"},{"original_method":"/** Returns the Style of radio label\n\t *\n\t * <p>Default: \"z-radio\"\n\t * <p>Since 3.5.1\n\t * \n\t */\n\tpublic String getZclass() {\n\t\tString scls = super.getZclass();\n\t\tif (scls == null)\n\t\t\tscls = \"z-radio\";\n\t\treturn scls;\n\t}","id":4495,"modified_method":"/** Returns the Style of radio label\n\t *\n\t * <p>Default: \"z-radio\"\n\t * <p>Since 3.5.1\n\t * \n\t */\n\tpublic String getZclass() {\n\t\treturn _zclass == null ? \"z-radio\" : super.getZclass();\n\t}","commit_id":"3ffed6afd6435d40edd7dd1c26724a5abbae7ada","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal SmartWriter wh = new SmartWriter(out);\n\t\tfinal Radio self = (Radio)comp;\n\t\tfinal String uuid = self.getUuid();\n\t\twh.write(\"<span id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.btn.Radio\\\"\")\n\t\t\t.write(self.getOuterAttrs()).write(\">\").write(\"<input type=\\\"radio\\\" id=\\\"\")\n\t\t\t.write(uuid).write(\"!real\\\"\").write(self.getInnerAttrs())\n\t\t\t.write(\"/><label for=\\\"\").write(uuid).write(\"!real\\\"\")\n\t\t\t.write(self.getLabelAttrs())\n\t\t\t.write(\" class=\\\"\"+self.getZclass()+\"\\\"\")\n\t\t\t.write(\">\")\n\t\t\t.write(self.getImgTag()).write(self.getLabel())\n\t\t\t.write(\"<\/label>\");\n\n\t\tif(self.getRadiogroup() != null\n\t\t&& self.getRadiogroup().getOrient().equals(\"vertical\"))\n\t\t\twh.writeln(\"<br/>\");\n\n\t\twh.write(\"<\/span>\");\n\t}","id":4496,"modified_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal SmartWriter wh = new SmartWriter(out);\n\t\tfinal Radio self = (Radio)comp;\n\t\tfinal String uuid = self.getUuid();\n\t\twh.write(\"<span id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.btn.Radio\\\"\")\n\t\t\t.write(self.getOuterAttrs()).write(\">\").write(\"<input type=\\\"radio\\\" id=\\\"\")\n\t\t\t.write(uuid).write(\"!real\\\"\").write(self.getInnerAttrs())\n\t\t\t.write(\"/><label for=\\\"\").write(uuid).write(\"!real\\\"\")\n\t\t\t.write(self.getLabelAttrs())\n\t\t\t.write(\" class=\\\"\"+self.getZclass()+\"-cnt\\\"\")\n\t\t\t.write(\">\")\n\t\t\t.write(self.getImgTag()).write(self.getLabel())\n\t\t\t.write(\"<\/label>\");\n\n\t\tif(self.getRadiogroup() != null\n\t\t&& self.getRadiogroup().getOrient().equals(\"vertical\"))\n\t\t\twh.writeln(\"<br/>\");\n\n\t\twh.write(\"<\/span>\");\n\t}","commit_id":"3ffed6afd6435d40edd7dd1c26724a5abbae7ada","url":"https://github.com/zkoss/zk"},{"original_method":"public String getZclass(){\t\t\t\t\n\t\tString scls = super.getZclass();\n\t\tif (scls == null)\n\t\t\tscls = \"z-tab\";\n\t\treturn scls;\n\t}","id":4497,"modified_method":"public String getZclass() {\n\t\treturn _zclass == null ? \"z-tab\" : super.getZclass();\n\t}","commit_id":"3ffed6afd6435d40edd7dd1c26724a5abbae7ada","url":"https://github.com/zkoss/zk"},{"original_method":"/** Returns the style class.\n\t *\n\t * @since 3.5.0\n\t */\n\tpublic String getZclass(){\n\t\tString mold = super.getMold();\t\t\t\t\t\t\t\n\t\tString scls = super.getZclass();\n\t\tfinal Tabbox tabbox = getTabbox();\n\t\tif (scls != null) return scls;\n\t\tfinal boolean vert = tabbox != null && tabbox.isVertical();\n\t\tmold = tabbox != null ? tabbox.getMold(): null;\t\t\n\t\treturn mold == null || \"default\".equals(mold) ?\n\t\t\tvert ? \"z-vtabpanel\": \"z-tabpanel\":\n\t\t\t(vert ? \"z-vtabpanel-\": \"z-tabpanel-\")+mold;\n\t}","id":4498,"modified_method":"/** Returns the style class.\n\t *\n\t * @since 3.5.0\n\t */\n\tpublic String getZclass(){\n\t\tif (_zclass != null) return _zclass;\n\t\tfinal Tabbox tabbox = getTabbox();\n\t\tfinal boolean vert = tabbox != null && tabbox.isVertical();\n\t\tfinal String mold = tabbox != null ? tabbox.getMold(): null;\n\t\treturn mold == null || \"default\".equals(mold) ?\n\t\t\t(vert ? \"z-vtabpanel\": \"z-tabpanel\") :\n\t\t\t(vert ? \"z-vtabpanel-\": \"z-tabpanel-\") + mold;\n\t}","commit_id":"3ffed6afd6435d40edd7dd1c26724a5abbae7ada","url":"https://github.com/zkoss/zk"},{"original_method":"public ClientGetMessage(SimpleFieldSet fs) throws MessageInvalidException {\n\t\tshort defaultPriority;\n\t\tignoreDS = Boolean.parseBoolean(fs.get(\"IgnoreDS\"));\n\t\tdsOnly = Boolean.parseBoolean(fs.get(\"DSOnly\"));\n\t\tidentifier = fs.get(\"Identifier\");\n\t\tif(identifier == null)\n\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MISSING_FIELD, \"No Identifier\", null);\n\t\ttry {\n\t\t\turi = new FreenetURI(fs.get(\"URI\"));\n\t\t} catch (MalformedURLException e) {\n\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.URI_PARSE_ERROR, e.getMessage(), identifier);\n\t\t}\n\t\tString verbosityString = fs.get(\"Verbosity\");\n\t\tif(verbosityString == null)\n\t\t\tverbosity = 0;\n\t\telse {\n\t\t\ttry {\n\t\t\t\tverbosity = Integer.parseInt(verbosityString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing Verbosity field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tString returnTypeString = fs.get(\"ReturnType\");\n\t\tif(returnTypeString == null || returnTypeString.equalsIgnoreCase(\"direct\")) {\n\t\t\treturnType = RETURN_TYPE_DIRECT;\n\t\t\tdiskFile = null;\n\t\t\ttempFile = null;\n\t\t\t// default just below fproxy\n\t\t\tdefaultPriority = RequestStarter.IMMEDIATE_SPLITFILE_PRIORITY_CLASS;\n\t\t} else if(returnTypeString.equalsIgnoreCase(\"none\")) {\n\t\t\tdiskFile = null;\n\t\t\ttempFile = null;\n\t\t\treturnType = RETURN_TYPE_NONE;\n\t\t\tdefaultPriority = RequestStarter.PREFETCH_PRIORITY_CLASS;\n\t\t} else if(returnTypeString.equalsIgnoreCase(\"disk\")) {\n\t\t\tdefaultPriority = RequestStarter.BULK_SPLITFILE_PRIORITY_CLASS;\n\t\t\treturnType = RETURN_TYPE_DISK;\n\t\t\tString filename = fs.get(\"Filename\");\n\t\t\tif(filename == null)\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MISSING_FIELD, \"Missing Filename\", identifier);\n\t\t\tdiskFile = new File(filename);\n\t\t\tString tempFilename = fs.get(\"TempFilename\");\n\t\t\tif(tempFilename == null)\n\t\t\t\ttempFilename = filename + \".freenet-tmp\";\n\t\t\ttempFile = new File(tempFilename);\n\t\t\tif(!diskFile.getParentFile().equals(tempFile.getParentFile()))\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.FILENAME_AND_TEMP_FILENAME_MUST_BE_IN_SAME_DIR, null, identifier);\n\t\t\tif(diskFile.exists())\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.DISK_TARGET_EXISTS, null, identifier);\n\t\t\ttry {\n\t\t\t\tif(!tempFile.createNewFile())\n\t\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.COULD_NOT_CREATE_FILE, null, identifier);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.COULD_NOT_CREATE_FILE, e.getMessage(), identifier);\n\t\t\t}\n\t\t} else\n\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MESSAGE_PARSE_ERROR, \"Unknown return-type\", identifier);\n\t\tString maxSizeString = fs.get(\"MaxSize\");\n\t\tif(maxSizeString == null)\n\t\t\t// default to unlimited\n\t\t\tmaxSize = Long.MAX_VALUE;\n\t\telse {\n\t\t\ttry {\n\t\t\t\tmaxSize = Long.parseLong(maxSizeString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing MaxSize field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tString maxTempSizeString = fs.get(\"MaxTempSize\");\n\t\tif(maxTempSizeString == null)\n\t\t\t// default to unlimited\n\t\t\tmaxTempSize = Long.MAX_VALUE;\n\t\telse {\n\t\t\ttry {\n\t\t\t\tmaxTempSize = Long.parseLong(maxTempSizeString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing MaxSize field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tString maxRetriesString = fs.get(\"MaxRetries\");\n\t\tif(maxRetriesString == null)\n\t\t\t// default to 0\n\t\t\tmaxRetries = 0;\n\t\telse {\n\t\t\ttry {\n\t\t\t\tmaxRetries = Integer.parseInt(maxRetriesString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing MaxSize field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tString priorityString = fs.get(\"PriorityClass\");\n\t\tif(priorityString == null) {\n\t\t\t// defaults to the one just below fproxy\n\t\t\tpriorityClass = defaultPriority;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tpriorityClass = Short.parseShort(priorityString, 10);\n\t\t\t\tif(priorityClass < RequestStarter.MAXIMUM_PRIORITY_CLASS || priorityClass > RequestStarter.MINIMUM_PRIORITY_CLASS)\n\t\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.INVALID_FIELD, \"Valid priorities are from \"+RequestStarter.MAXIMUM_PRIORITY_CLASS+\" to \"+RequestStarter.MINIMUM_PRIORITY_CLASS, identifier);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing PriorityClass field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t}","id":4499,"modified_method":"public ClientGetMessage(SimpleFieldSet fs) throws MessageInvalidException {\n\t\tshort defaultPriority;\n\t\tif(fs.get(\"IgnoreDS\").equalsIgnoreCase(\"true\")){\n\t\t\tignoreDS=true;\n\t\t}else{\n\t\t\tignoreDS=false;\n\t\t}\n\t\tif(fs.get(\"DSOnly\").equalsIgnoreCase(\"true\")){\n\t\t\tdsOnly=true;\n\t\t}else{\n\t\t\tdsOnly=false;\n\t\t}\n\t\tidentifier = fs.get(\"Identifier\");\n\t\tif(identifier == null)\n\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MISSING_FIELD, \"No Identifier\", null);\n\t\ttry {\n\t\t\turi = new FreenetURI(fs.get(\"URI\"));\n\t\t} catch (MalformedURLException e) {\n\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.URI_PARSE_ERROR, e.getMessage(), identifier);\n\t\t}\n\t\tString verbosityString = fs.get(\"Verbosity\");\n\t\tif(verbosityString == null)\n\t\t\tverbosity = 0;\n\t\telse {\n\t\t\ttry {\n\t\t\t\tverbosity = Integer.parseInt(verbosityString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing Verbosity field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tString returnTypeString = fs.get(\"ReturnType\");\n\t\tif(returnTypeString == null || returnTypeString.equalsIgnoreCase(\"direct\")) {\n\t\t\treturnType = RETURN_TYPE_DIRECT;\n\t\t\tdiskFile = null;\n\t\t\ttempFile = null;\n\t\t\t// default just below fproxy\n\t\t\tdefaultPriority = RequestStarter.IMMEDIATE_SPLITFILE_PRIORITY_CLASS;\n\t\t} else if(returnTypeString.equalsIgnoreCase(\"none\")) {\n\t\t\tdiskFile = null;\n\t\t\ttempFile = null;\n\t\t\treturnType = RETURN_TYPE_NONE;\n\t\t\tdefaultPriority = RequestStarter.PREFETCH_PRIORITY_CLASS;\n\t\t} else if(returnTypeString.equalsIgnoreCase(\"disk\")) {\n\t\t\tdefaultPriority = RequestStarter.BULK_SPLITFILE_PRIORITY_CLASS;\n\t\t\treturnType = RETURN_TYPE_DISK;\n\t\t\tString filename = fs.get(\"Filename\");\n\t\t\tif(filename == null)\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MISSING_FIELD, \"Missing Filename\", identifier);\n\t\t\tdiskFile = new File(filename);\n\t\t\tString tempFilename = fs.get(\"TempFilename\");\n\t\t\tif(tempFilename == null)\n\t\t\t\ttempFilename = filename + \".freenet-tmp\";\n\t\t\ttempFile = new File(tempFilename);\n\t\t\tif(!diskFile.getParentFile().equals(tempFile.getParentFile()))\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.FILENAME_AND_TEMP_FILENAME_MUST_BE_IN_SAME_DIR, null, identifier);\n\t\t\tif(diskFile.exists())\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.DISK_TARGET_EXISTS, null, identifier);\n\t\t\ttry {\n\t\t\t\tif(!tempFile.createNewFile())\n\t\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.COULD_NOT_CREATE_FILE, null, identifier);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.COULD_NOT_CREATE_FILE, e.getMessage(), identifier);\n\t\t\t}\n\t\t} else\n\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MESSAGE_PARSE_ERROR, \"Unknown return-type\", identifier);\n\t\tString maxSizeString = fs.get(\"MaxSize\");\n\t\tif(maxSizeString == null)\n\t\t\t// default to unlimited\n\t\t\tmaxSize = Long.MAX_VALUE;\n\t\telse {\n\t\t\ttry {\n\t\t\t\tmaxSize = Long.parseLong(maxSizeString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing MaxSize field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tString maxTempSizeString = fs.get(\"MaxTempSize\");\n\t\tif(maxTempSizeString == null)\n\t\t\t// default to unlimited\n\t\t\tmaxTempSize = Long.MAX_VALUE;\n\t\telse {\n\t\t\ttry {\n\t\t\t\tmaxTempSize = Long.parseLong(maxTempSizeString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing MaxSize field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tString maxRetriesString = fs.get(\"MaxRetries\");\n\t\tif(maxRetriesString == null)\n\t\t\t// default to 0\n\t\t\tmaxRetries = 0;\n\t\telse {\n\t\t\ttry {\n\t\t\t\tmaxRetries = Integer.parseInt(maxRetriesString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing MaxSize field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tString priorityString = fs.get(\"PriorityClass\");\n\t\tif(priorityString == null) {\n\t\t\t// defaults to the one just below fproxy\n\t\t\tpriorityClass = defaultPriority;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tpriorityClass = Short.parseShort(priorityString, 10);\n\t\t\t\tif(priorityClass < RequestStarter.MAXIMUM_PRIORITY_CLASS || priorityClass > RequestStarter.MINIMUM_PRIORITY_CLASS)\n\t\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.INVALID_FIELD, \"Valid priorities are from \"+RequestStarter.MAXIMUM_PRIORITY_CLASS+\" to \"+RequestStarter.MINIMUM_PRIORITY_CLASS, identifier);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing PriorityClass field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t}","commit_id":"9964d2fd3ec0566cfecc5cfa97459656508574a9","url":"https://github.com/freenet/fred"},{"original_method":"public ClientPutMessage(SimpleFieldSet fs) throws MessageInvalidException {\n\t\tidentifier = fs.get(\"Identifier\");\n\t\tif(identifier == null)\n\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MISSING_FIELD, \"No Identifier\", null);\n\t\ttry {\n\t\t\tString u = fs.get(\"URI\");\n\t\t\tif(u == null)\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MISSING_FIELD, \"No URI\", identifier);\n\t\t\turi = new FreenetURI(fs.get(\"URI\"));\n\t\t} catch (MalformedURLException e) {\n\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.URI_PARSE_ERROR, e.getMessage(), identifier);\n\t\t}\n\t\tString verbosityString = fs.get(\"Verbosity\");\n\t\tif(verbosityString == null)\n\t\t\tverbosity = 0;\n\t\telse {\n\t\t\ttry {\n\t\t\t\tverbosity = Integer.parseInt(verbosityString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing Verbosity field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tcontentType = fs.get(\"Metadata.ContentType\");\n\t\tString maxRetriesString = fs.get(\"MaxRetries\");\n\t\tif(maxRetriesString == null)\n\t\t\t// default to 0\n\t\t\tmaxRetries = 0;\n\t\telse {\n\t\t\ttry {\n\t\t\t\tmaxRetries = Integer.parseInt(maxRetriesString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing MaxSize field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tgetCHKOnly = Boolean.parseBoolean(fs.get(\"GetCHKOnly\"));\n\t\tString priorityString = fs.get(\"PriorityClass\");\n\t\tif(priorityString == null) {\n\t\t\t// defaults to the one just below fproxy\n\t\t\tpriorityClass = RequestStarter.IMMEDIATE_SPLITFILE_PRIORITY_CLASS;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tpriorityClass = Short.parseShort(priorityString, 10);\n\t\t\t\tif(priorityClass < RequestStarter.MAXIMUM_PRIORITY_CLASS || priorityClass > RequestStarter.MINIMUM_PRIORITY_CLASS)\n\t\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.INVALID_FIELD, \"Valid priorities are from \"+RequestStarter.MAXIMUM_PRIORITY_CLASS+\" to \"+RequestStarter.MINIMUM_PRIORITY_CLASS, identifier);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing PriorityClass field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tString uploadFrom = fs.get(\"UploadFrom\");\n\t\tif(uploadFrom != null && uploadFrom.equalsIgnoreCase(\"disk\")) {\n\t\t\tfromDisk = true;\n\t\t\tString filename = fs.get(\"Filename\");\n\t\t\tif(filename == null)\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MISSING_FIELD, \"Missing field Filename\", identifier);\n\t\t\tFile f = new File(filename);\n\t\t\tif(!(f.exists() && f.isFile() && f.canRead()))\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.FILE_NOT_FOUND, null, identifier);\n\t\t\tdataLength = f.length();\n\t\t\tFileBucket fileBucket = new FileBucket(f, true, false, false);\n\t\t\tthis.bucket = fileBucket;\n\t\t} else {\n\t\t\tfromDisk = false;\n\t\t\tString dataLengthString = fs.get(\"DataLength\");\n\t\t\tif(dataLengthString == null)\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MISSING_FIELD, \"Need DataLength on a ClientPut\", identifier);\n\t\t\ttry {\n\t\t\t\tdataLength = Long.parseLong(dataLengthString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing DataLength field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tdontCompress = Boolean.parseBoolean(fs.get(\"DontCompress\"));\n\t}","id":4500,"modified_method":"public ClientPutMessage(SimpleFieldSet fs) throws MessageInvalidException {\n\t\tidentifier = fs.get(\"Identifier\");\n\t\tif(identifier == null)\n\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MISSING_FIELD, \"No Identifier\", null);\n\t\ttry {\n\t\t\tString u = fs.get(\"URI\");\n\t\t\tif(u == null)\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MISSING_FIELD, \"No URI\", identifier);\n\t\t\turi = new FreenetURI(fs.get(\"URI\"));\n\t\t} catch (MalformedURLException e) {\n\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.URI_PARSE_ERROR, e.getMessage(), identifier);\n\t\t}\n\t\tString verbosityString = fs.get(\"Verbosity\");\n\t\tif(verbosityString == null)\n\t\t\tverbosity = 0;\n\t\telse {\n\t\t\ttry {\n\t\t\t\tverbosity = Integer.parseInt(verbosityString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing Verbosity field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tcontentType = fs.get(\"Metadata.ContentType\");\n\t\tString maxRetriesString = fs.get(\"MaxRetries\");\n\t\tif(maxRetriesString == null)\n\t\t\t// default to 0\n\t\t\tmaxRetries = 0;\n\t\telse {\n\t\t\ttry {\n\t\t\t\tmaxRetries = Integer.parseInt(maxRetriesString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing MaxSize field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tif(fs.get(\"GetCHKOnly\").equalsIgnoreCase(\"true\")){\n\t\t\tgetCHKOnly=true;\n\t\t}else{\n\t\t\tgetCHKOnly=false;\n\t\t}\n\t\tString priorityString = fs.get(\"PriorityClass\");\n\t\tif(priorityString == null) {\n\t\t\t// defaults to the one just below fproxy\n\t\t\tpriorityClass = RequestStarter.IMMEDIATE_SPLITFILE_PRIORITY_CLASS;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tpriorityClass = Short.parseShort(priorityString, 10);\n\t\t\t\tif(priorityClass < RequestStarter.MAXIMUM_PRIORITY_CLASS || priorityClass > RequestStarter.MINIMUM_PRIORITY_CLASS)\n\t\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.INVALID_FIELD, \"Valid priorities are from \"+RequestStarter.MAXIMUM_PRIORITY_CLASS+\" to \"+RequestStarter.MINIMUM_PRIORITY_CLASS, identifier);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing PriorityClass field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tString uploadFrom = fs.get(\"UploadFrom\");\n\t\tif(uploadFrom != null && uploadFrom.equalsIgnoreCase(\"disk\")) {\n\t\t\tfromDisk = true;\n\t\t\tString filename = fs.get(\"Filename\");\n\t\t\tif(filename == null)\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MISSING_FIELD, \"Missing field Filename\", identifier);\n\t\t\tFile f = new File(filename);\n\t\t\tif(!(f.exists() && f.isFile() && f.canRead()))\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.FILE_NOT_FOUND, null, identifier);\n\t\t\tdataLength = f.length();\n\t\t\tFileBucket fileBucket = new FileBucket(f, true, false, false);\n\t\t\tthis.bucket = fileBucket;\n\t\t} else {\n\t\t\tfromDisk = false;\n\t\t\tString dataLengthString = fs.get(\"DataLength\");\n\t\t\tif(dataLengthString == null)\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.MISSING_FIELD, \"Need DataLength on a ClientPut\", identifier);\n\t\t\ttry {\n\t\t\t\tdataLength = Long.parseLong(dataLengthString, 10);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new MessageInvalidException(ProtocolErrorMessage.ERROR_PARSING_NUMBER, \"Error parsing DataLength field: \"+e.getMessage(), identifier);\n\t\t\t}\n\t\t}\n\t\tif(fs.get(\"DontCompress\").equalsIgnoreCase(\"true\")){\n\t\t\tdontCompress=true;\n\t\t}else{\n\t\t\tdontCompress=false;\n\t\t}\n\t}","commit_id":"9964d2fd3ec0566cfecc5cfa97459656508574a9","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Create a ClientGet from a request serialized to a SimpleFieldSet.\n\t * Can throw, and does minimal verification, as is dealing with data \n\t * supposedly serialized out by the node.\n\t * @throws MalformedURLException \n\t */\n\tpublic ClientGet(SimpleFieldSet fs, FCPClient client2) throws MalformedURLException {\n\t\turi = new FreenetURI(fs.get(\"URI\"));\n\t\tidentifier = fs.get(\"Identifier\");\n\t\tverbosity = Integer.parseInt(fs.get(\"Verbosity\"));\n\t\tpriorityClass = Short.parseShort(fs.get(\"PriorityClass\"));\n\t\treturnType = ClientGetMessage.parseValidReturnType(fs.get(\"ReturnType\"));\n\t\tpersistenceType = ClientRequest.parsePersistence(fs.get(\"Persistence\"));\n\t\tif(persistenceType == ClientRequest.PERSIST_CONNECTION)\n\t\t\tthrow new IllegalArgumentException(\"Reading persistent get with type CONNECTION !!\");\n\t\tif(!(persistenceType == ClientRequest.PERSIST_FOREVER || persistenceType == ClientRequest.PERSIST_REBOOT))\n\t\t\tthrow new IllegalArgumentException(\"Unknown persistence type \"+ClientRequest.persistenceTypeString(persistenceType));\n\t\tthis.client = client2;\n\t\tthis.origHandler = null;\n\t\tString f = fs.get(\"Filename\");\n\t\tif(f != null)\n\t\t\ttargetFile = new File(f);\n\t\telse\n\t\t\ttargetFile = null;\n\t\tf = fs.get(\"TempFilename\");\n\t\tif(f != null)\n\t\t\ttempFile = new File(f);\n\t\telse\n\t\t\ttempFile = null;\n\t\tclientToken = fs.get(\"ClientToken\");\n\t\tfinished = Boolean.parseBoolean(fs.get(\"Finished\"));\n\t\tboolean ignoreDS = Fields.stringToBool(fs.get(\"IgnoreDS\"), false);\n\t\tboolean dsOnly = Fields.stringToBool(fs.get(\"DSOnly\"), false);\n\t\tint maxRetries = Integer.parseInt(fs.get(\"MaxRetries\"));\n\t\tfctx = new FetcherContext(client.defaultFetchContext, FetcherContext.IDENTICAL_MASK);\n\t\tfctx.eventProducer.addEventListener(this);\n\t\t// ignoreDS\n\t\tfctx.localRequestOnly = dsOnly;\n\t\tfctx.ignoreStore = ignoreDS;\n\t\tfctx.maxNonSplitfileRetries = maxRetries;\n\t\tfctx.maxSplitfileBlockRetries = maxRetries;\n\t\tgetter = new ClientGetter(this, client.node.fetchScheduler, uri, fctx, priorityClass, client);\n\t}","id":4501,"modified_method":"/**\n\t * Create a ClientGet from a request serialized to a SimpleFieldSet.\n\t * Can throw, and does minimal verification, as is dealing with data \n\t * supposedly serialized out by the node.\n\t * @throws MalformedURLException \n\t */\n\tpublic ClientGet(SimpleFieldSet fs, FCPClient client2) throws MalformedURLException {\n\t\turi = new FreenetURI(fs.get(\"URI\"));\n\t\tidentifier = fs.get(\"Identifier\");\n\t\tverbosity = Integer.parseInt(fs.get(\"Verbosity\"));\n\t\tpriorityClass = Short.parseShort(fs.get(\"PriorityClass\"));\n\t\treturnType = ClientGetMessage.parseValidReturnType(fs.get(\"ReturnType\"));\n\t\tpersistenceType = ClientRequest.parsePersistence(fs.get(\"Persistence\"));\n\t\tif(persistenceType == ClientRequest.PERSIST_CONNECTION)\n\t\t\tthrow new IllegalArgumentException(\"Reading persistent get with type CONNECTION !!\");\n\t\tif(!(persistenceType == ClientRequest.PERSIST_FOREVER || persistenceType == ClientRequest.PERSIST_REBOOT))\n\t\t\tthrow new IllegalArgumentException(\"Unknown persistence type \"+ClientRequest.persistenceTypeString(persistenceType));\n\t\tthis.client = client2;\n\t\tthis.origHandler = null;\n\t\tString f = fs.get(\"Filename\");\n\t\tif(f != null)\n\t\t\ttargetFile = new File(f);\n\t\telse\n\t\t\ttargetFile = null;\n\t\tf = fs.get(\"TempFilename\");\n\t\tif(f != null)\n\t\t\ttempFile = new File(f);\n\t\telse\n\t\t\ttempFile = null;\n\t\tclientToken = fs.get(\"ClientToken\");\n                if(fs.get(\"Finished\").equalsIgnoreCase(\"true\")){\n\t\t       \tfinished = true;\n\t        }else{\n\t\t       \tfinished = false;\n\t\t}\n\t\tboolean ignoreDS = Fields.stringToBool(fs.get(\"IgnoreDS\"), false);\n\t\tboolean dsOnly = Fields.stringToBool(fs.get(\"DSOnly\"), false);\n\t\tint maxRetries = Integer.parseInt(fs.get(\"MaxRetries\"));\n\t\tfctx = new FetcherContext(client.defaultFetchContext, FetcherContext.IDENTICAL_MASK);\n\t\tfctx.eventProducer.addEventListener(this);\n\t\t// ignoreDS\n\t\tfctx.localRequestOnly = dsOnly;\n\t\tfctx.ignoreStore = ignoreDS;\n\t\tfctx.maxNonSplitfileRetries = maxRetries;\n\t\tfctx.maxSplitfileBlockRetries = maxRetries;\n\t\tgetter = new ClientGetter(this, client.node.fetchScheduler, uri, fctx, priorityClass, client);\n\t}","commit_id":"5a58af2595cf25ab6723da710c427f00bb059f94","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Create from a persisted SimpleFieldSet.\n\t * Not very tolerant of errors, as the input was generated\n\t * by the node.\n\t * @throws MalformedURLException \n\t */\n\tpublic ClientPut(SimpleFieldSet fs, FCPClient client2) throws MalformedURLException {\n\t\turi = new FreenetURI(fs.get(\"URI\"));\n\t\tidentifier = fs.get(\"Identifier\");\n\t\tverbosity = Integer.parseInt(fs.get(\"Verbosity\"));\n\t\tpriorityClass = Short.parseShort(fs.get(\"PriorityClass\"));\n\t\tpersistenceType = ClientRequest.parsePersistence(fs.get(\"Persistence\"));\n\t\tif(persistenceType == ClientRequest.PERSIST_CONNECTION\n\t\t\t\t|| persistenceType == ClientRequest.PERSIST_REBOOT)\n\t\t\tthrow new IllegalArgumentException(\"Reading in persistent ClientPut, but persistence type = \"+ClientRequest.persistenceTypeString(persistenceType)+\" so shouldn't have been saved in the first place\");\n\t\tthis.client = client2;\n\t\torigHandler = null;\n\t\tString mimeType = fs.get(\"Metadata.ContentType\");\n\t\tgetCHKOnly = Boolean.parseBoolean(fs.get(\"GetCHKOnly\"));\n\t\tboolean dontCompress = Boolean.parseBoolean(fs.get(\"DontCompress\"));\n\t\tint maxRetries = Integer.parseInt(fs.get(\"MaxRetries\"));\n\t\tclientToken = fs.get(\"ClientToken\");\n\t\tfromDisk = true;\n\t\torigFilename = new File(fs.get(\"Filename\"));\n\t\tBucket data = new FileBucket(origFilename, true, false, false);\n\t\tctx = new InserterContext(client.defaultInsertContext, new SimpleEventProducer());\n\t\tctx.dontCompress = dontCompress;\n\t\tctx.eventProducer.addEventListener(this);\n\t\tctx.maxInsertRetries = maxRetries;\n\t\tblock = new InsertBlock(data, new ClientMetadata(mimeType), uri);\n\t\tinserter = new ClientPutter(this, data, uri, new ClientMetadata(mimeType), ctx, client.node.putScheduler, priorityClass, getCHKOnly, false, client);\n\t\tstart();\n\t}","id":4502,"modified_method":"/**\n\t * Create from a persisted SimpleFieldSet.\n\t * Not very tolerant of errors, as the input was generated\n\t * by the node.\n\t * @throws MalformedURLException \n\t */\n\tpublic ClientPut(SimpleFieldSet fs, FCPClient client2) throws MalformedURLException {\n\t\turi = new FreenetURI(fs.get(\"URI\"));\n\t\tidentifier = fs.get(\"Identifier\");\n\t\tverbosity = Integer.parseInt(fs.get(\"Verbosity\"));\n\t\tpriorityClass = Short.parseShort(fs.get(\"PriorityClass\"));\n\t\tpersistenceType = ClientRequest.parsePersistence(fs.get(\"Persistence\"));\n\t\tif(persistenceType == ClientRequest.PERSIST_CONNECTION\n\t\t\t\t|| persistenceType == ClientRequest.PERSIST_REBOOT)\n\t\t\tthrow new IllegalArgumentException(\"Reading in persistent ClientPut, but persistence type = \"+ClientRequest.persistenceTypeString(persistenceType)+\" so shouldn't have been saved in the first place\");\n\t\tthis.client = client2;\n\t\torigHandler = null;\n\t\tString mimeType = fs.get(\"Metadata.ContentType\");\n                if(fs.get(\"GetCHKOnly\").equalsIgnoreCase(\"true\")){\n\t\t       \tgetCHKOnly = true;\n\t        }else{\n\t\t       \tgetCHKOnly = false;\n\t\t}\n\t\tboolean dontCompress;\n                if(fs.get(\"DontCompress\").equalsIgnoreCase(\"true\")){\n\t\t       \tdontCompress = true;\n\t        }else{\n\t\t       \tdontCompress = false;\n\t\t}\n\t\tint maxRetries = Integer.parseInt(fs.get(\"MaxRetries\"));\n\t\tclientToken = fs.get(\"ClientToken\");\n\t\tfromDisk = true;\n\t\torigFilename = new File(fs.get(\"Filename\"));\n\t\tBucket data = new FileBucket(origFilename, true, false, false);\n\t\tctx = new InserterContext(client.defaultInsertContext, new SimpleEventProducer());\n\t\tctx.dontCompress = dontCompress;\n\t\tctx.eventProducer.addEventListener(this);\n\t\tctx.maxInsertRetries = maxRetries;\n\t\tblock = new InsertBlock(data, new ClientMetadata(mimeType), uri);\n\t\tinserter = new ClientPutter(this, data, uri, new ClientMetadata(mimeType), ctx, client.node.putScheduler, priorityClass, getCHKOnly, false, client);\n\t\tstart();\n\t}","commit_id":"5a58af2595cf25ab6723da710c427f00bb059f94","url":"https://github.com/freenet/fred"},{"original_method":"@Override\n    protected void writeRecord( LabelTokenRecord record, Buffer buffer )\n    {\n        buffer.putInt( record.getNameId() );\n    }","id":4503,"modified_method":"@Override\n    protected void writeRecord( LabelTokenRecord record, PageCursor cursor )\n    {\n        cursor.putInt( record.getNameId() );\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    protected void readRecord( LabelTokenRecord record, Buffer buffer )\n    {\n        record.setNameId( buffer.getInt() );\n    }","id":4504,"modified_method":"@Override\n    protected void readRecord( LabelTokenRecord record, PageCursor cursor )\n    {\n        record.setNameId( cursor.getInt() );\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    protected void readRecord( PropertyKeyTokenRecord record, Buffer buffer )\n    {\n        record.setPropertyCount( buffer.getInt() );\n        record.setNameId( buffer.getInt() );\n    }","id":4505,"modified_method":"@Override\n    protected void readRecord( PropertyKeyTokenRecord record, PageCursor cursor )\n    {\n        record.setPropertyCount( cursor.getInt() );\n        record.setNameId( cursor.getInt() );\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    protected void writeRecord( PropertyKeyTokenRecord record, Buffer buffer )\n    {\n        buffer.putInt( record.getPropertyCount() );\n        buffer.putInt( record.getNameId() );\n    }","id":4506,"modified_method":"@Override\n    protected void writeRecord( PropertyKeyTokenRecord record, PageCursor cursor )\n    {\n        cursor.putInt( record.getPropertyCount() );\n        cursor.putInt( record.getNameId() );\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"public T getLightRecord( int id )\n    {\n        PersistenceWindow window = acquireWindow( id, OperationType.READ );\n        try\n        {\n            T record = getRecord( id, window, false );\n            record.setIsLight( true );\n            return record;\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4507,"modified_method":"public T getLightRecord( int id )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.READ, pageIdForRecord( id ) );\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n\n        try\n        {\n            T record = getRecord( id, cursor, false );\n            record.setIsLight( true );\n            return record;\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public T forceGetRecord( long id )\n    {\n        PersistenceWindow window;\n        try\n        {\n            window = acquireWindow( id, OperationType.READ );\n        }\n        catch ( InvalidRecordException e )\n        {\n            return newRecord( (int) id );\n        }\n\n        try\n        {\n            return getRecord( (int) id, window, true );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4508,"modified_method":"@Override\n    public T forceGetRecord( long id )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.READ, pageIdForRecord( id ) );\n        }\n        catch ( IOException e )\n        {\n            return newRecord( (int) id );\n        }\n\n        try\n        {\n            return getRecord( (int) id, cursor, true );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected void writeRecord( T record, Buffer buffer )\n    {\n        buffer.putInt( record.getNameId() );\n    }","id":4509,"modified_method":"protected void writeRecord( T record, PageCursor cursor )\n    {\n        cursor.putInt( record.getNameId() );\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"public T getRecord( int id )\n    {\n        T record;\n        PersistenceWindow window = acquireWindow( id, OperationType.READ );\n        try\n        {\n            record = getRecord( id, window, false );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n        record.addNameRecords( nameStore.getLightRecords( record.getNameId() ) );\n        return record;\n    }","id":4510,"modified_method":"public T getRecord( int id )\n    {\n        T record;\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.READ, pageIdForRecord( id ) );\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n        try\n        {\n            record = getRecord( id, cursor, false );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n        record.addNameRecords( nameStore.getLightRecords( record.getNameId() ) );\n        return record;\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void updateRecord( T record )\n    {\n        PersistenceWindow window = acquireWindow( record.getId(),\n            OperationType.WRITE );\n        try\n        {\n            updateRecord( record, window );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n        if ( !record.isLight() )\n        {\n            for ( DynamicRecord keyRecord : record.getNameRecords() )\n            {\n                nameStore.updateRecord( keyRecord );\n            }\n        }\n    }","id":4511,"modified_method":"@Override\n    public void updateRecord( T record )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.WRITE, pageIdForRecord( record.getId() ));\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n        try\n        {\n            updateRecord( record, cursor );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n        if ( !record.isLight() )\n        {\n            for ( DynamicRecord keyRecord : record.getNameRecords() )\n            {\n                nameStore.updateRecord( keyRecord );\n            }\n        }\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected void readRecord( T record, Buffer buffer )\n    {\n        record.setNameId( buffer.getInt() );\n    }","id":4512,"modified_method":"protected void readRecord( T record, PageCursor cursor )\n    {\n        record.setNameId( cursor.getInt() );\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"public TokenStore( File fileName, Config configuration, IdType idType,\n                       IdGeneratorFactory idGeneratorFactory, WindowPoolFactory windowPoolFactory,\n                       FileSystemAbstraction fileSystemAbstraction, StringLogger stringLogger,\n                       DynamicStringStore nameStore, StoreVersionMismatchHandler versionMismatchHandler,\n                       Monitors monitors )\n    {\n        super( fileName, configuration, idType, idGeneratorFactory, windowPoolFactory,\n                fileSystemAbstraction, stringLogger, versionMismatchHandler, monitors );\n        this.nameStore = nameStore;\n    }","id":4513,"modified_method":"public TokenStore( File fileName, Config configuration, IdType idType,\n                       IdGeneratorFactory idGeneratorFactory, WindowPoolFactory windowPoolFactory,\n                       FileSystemAbstraction fileSystemAbstraction, StringLogger stringLogger,\n                       DynamicStringStore nameStore, StoreVersionMismatchHandler versionMismatchHandler,\n                       Monitors monitors )\n    {\n        super( fileName, configuration, idType, idGeneratorFactory, windowPoolFactory,\n                fileSystemAbstraction, stringLogger, versionMismatchHandler, monitors );\n        this.nameStore = nameStore;\n        pageCache = new WindowPoolPageCache( windowPoolFactory, fileSystemAbstraction );\n        try\n        {\n            storeFile = pageCache.map( fileName, getRecordSize() * 128, getRecordSize() );\n        }\n        catch ( IOException e )\n        {\n            // TODO: Just throw IOException, add proper handling further up\n            throw new UnderlyingStorageException( e );\n        }\n        pageSize = storeFile.pageSize();\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void forceUpdateRecord( T record )\n    {\n        PersistenceWindow window = acquireWindow( record.getId(),\n                OperationType.WRITE );\n        try\n        {\n            updateRecord( record, window );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4514,"modified_method":"@Override\n    public void forceUpdateRecord( T record )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.WRITE, pageIdForRecord( record.getId() ));\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n        try\n        {\n            updateRecord( record, cursor );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public List<WindowPoolStats> getAllWindowPoolStats()\n    {\n        List<WindowPoolStats> list = new ArrayList<WindowPoolStats>();\n        list.add( nameStore.getWindowPoolStats() );\n        list.add( getWindowPoolStats() );\n        return list;\n    }","id":4515,"modified_method":"@Override\n    public List<WindowPoolStats> getAllWindowPoolStats()\n    {\n        List<WindowPoolStats> list = new ArrayList<>();\n        list.add( nameStore.getWindowPoolStats() );\n        list.add( getWindowPoolStats() );\n        return list;\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected T getRecord( int id, PersistenceWindow window, boolean force )\n    {\n        Buffer buffer = window.getOffsettedBuffer( id );\n        byte inUseByte = buffer.get();\n        boolean inUse = (inUseByte == Record.IN_USE.byteValue());\n        if ( !inUse && !force )\n        {\n            throw new InvalidRecordException( getClass().getSimpleName() + \" Record[\" + id + \"] not in use\" );\n        }\n        if ( inUseByte != Record.IN_USE.byteValue() && inUseByte != Record.NOT_IN_USE.byteValue() )\n        {\n            throw new InvalidRecordException( getClass().getSimpleName() + \" Record[\" + id + \"] unknown in use flag[\" + inUse + \"]\" );\n        }\n\n        T record = newRecord( id );\n        record.setInUse( inUse );\n        readRecord( record, buffer );\n        return record;\n    }","id":4516,"modified_method":"protected T getRecord( int id, PageCursor cursor, boolean force )\n    {\n        cursor.setOffset( id * getRecordSize() % pageSize );\n        byte inUseByte = cursor.getByte();\n        boolean inUse = (inUseByte == Record.IN_USE.byteValue());\n        if ( !inUse && !force )\n        {\n            throw new InvalidRecordException( getClass().getSimpleName() + \" Record[\" + id + \"] not in use\" );\n        }\n        if ( inUseByte != Record.IN_USE.byteValue() && inUseByte != Record.NOT_IN_USE.byteValue() )\n        {\n            throw new InvalidRecordException( getClass().getSimpleName() + \" Record[\" + id + \"] unknown in use flag[\" + inUse + \"]\" );\n        }\n\n        T record = newRecord( id );\n        record.setInUse( inUse );\n        readRecord( record, cursor );\n        return record;\n    }","commit_id":"2019028945d7b53e4ea587c21b1ae73ed5b1c17b","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public RelationshipGroupRecord getRecord( long id )\n    {\n        PersistenceWindow window = acquireWindow( id, OperationType.READ );\n        try\n        {\n            return getRecord( id, window, RecordLoad.NORMAL );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4517,"modified_method":"@Override\n    public RelationshipGroupRecord getRecord( long id )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.READ, pageIdForRecord( id ) );\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n        try\n        {\n            return getRecord( id, cursor, RecordLoad.NORMAL );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"7861e9a5e2512800a33a3b9afe965ec03d3b2e36","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void forceUpdateRecord( RelationshipGroupRecord record )\n    {\n        PersistenceWindow window = acquireWindow( record.getId(),\n                OperationType.WRITE );\n        try\n        {\n            updateRecord( record, window, true );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4518,"modified_method":"@Override\n    public void forceUpdateRecord( RelationshipGroupRecord record )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.WRITE, pageIdForRecord( record.getId() ) );\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n\n        try\n        {\n            updateRecord( record, cursor, true );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"7861e9a5e2512800a33a3b9afe965ec03d3b2e36","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public RelationshipGroupRecord forceGetRecord( long id )\n    {\n        PersistenceWindow window = null;\n        try\n        {\n            window = acquireWindow( id, OperationType.READ );\n        }\n        catch ( InvalidRecordException e )\n        {\n            return new RelationshipGroupRecord( id, -1 );\n        }\n\n        try\n        {\n            return getRecord( id, window, RecordLoad.FORCE );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4519,"modified_method":"@Override\n    public RelationshipGroupRecord forceGetRecord( long id )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.READ, pageIdForRecord( id ) );\n        }\n        catch ( IOException e )\n        {\n            return new RelationshipGroupRecord( id, -1 );\n        }\n        try\n        {\n            return getRecord( id, cursor, RecordLoad.FORCE );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"7861e9a5e2512800a33a3b9afe965ec03d3b2e36","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void updateRecord( RelationshipGroupRecord record, PersistenceWindow window, boolean force )\n    {\n        long id = record.getId();\n        registerIdFromUpdateRecord( id );\n        Buffer buffer = window.getOffsettedBuffer( id );\n        if ( record.inUse() || force )\n        {\n            long nextMod = record.getNext() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (record.getNext() & 0x700000000L) >> 31;\n            long nextOutMod = record.getFirstOut() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (record.getFirstOut() & 0x700000000L) >> 28;\n            long nextInMod = record.getFirstIn() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (record.getFirstIn() & 0x700000000L) >> 31;\n            long nextLoopMod = record.getFirstLoop() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (record.getFirstLoop() & 0x700000000L) >> 28;\n\n            buffer\n                // [    ,   x] in use\n                // [    ,xxx ] high next id bits\n                // [ xxx,    ] high firstOut bits\n                .put( (byte) (nextOutMod | nextMod | 1) )\n\n                // [    ,xxx ] high firstIn bits\n                // [ xxx,    ] high firstLoop bits\n                .put( (byte) (nextLoopMod | nextInMod) )\n\n                .putShort( (short) record.getType() )\n                .putInt( (int) record.getNext() )\n                .putInt( (int) record.getFirstOut() )\n                .putInt( (int) record.getFirstIn() )\n                .putInt( (int) record.getFirstLoop() )\n                .putInt( (int) record.getOwningNode() ).put( (byte) (record.getOwningNode() >> 32) );\n        }\n        else\n        {\n            buffer.put( Record.NOT_IN_USE.byteValue() );\n            if ( !isInRecoveryMode() )\n            {\n                freeId( id );\n            }\n        }\n    }","id":4520,"modified_method":"private void updateRecord( RelationshipGroupRecord record, PageCursor cursor, boolean force )\n    {\n        long id = record.getId();\n        registerIdFromUpdateRecord( id );\n        cursor.setOffset( (int) (id * RECORD_SIZE % pageSize) );\n        if ( record.inUse() || force )\n        {\n            long nextMod = record.getNext() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (record.getNext() & 0x700000000L) >> 31;\n            long nextOutMod = record.getFirstOut() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (record.getFirstOut() & 0x700000000L) >> 28;\n            long nextInMod = record.getFirstIn() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (record.getFirstIn() & 0x700000000L) >> 31;\n            long nextLoopMod = record.getFirstLoop() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (record.getFirstLoop() & 0x700000000L) >> 28;\n\n            // [    ,   x] in use\n            // [    ,xxx ] high next id bits\n            // [ xxx,    ] high firstOut bits\n            cursor.putByte( (byte) (nextOutMod | nextMod | 1) );\n\n            // [    ,xxx ] high firstIn bits\n            // [ xxx,    ] high firstLoop bits\n            cursor.putByte( (byte) (nextLoopMod | nextInMod) );\n\n            cursor.putShort( (short) record.getType() );\n            cursor.putInt( (int) record.getNext() );\n            cursor.putInt( (int) record.getFirstOut() );\n            cursor.putInt( (int) record.getFirstIn() );\n            cursor.putInt( (int) record.getFirstLoop() );\n            cursor.putInt( (int) record.getOwningNode() );\n            cursor.putByte( (byte) (record.getOwningNode() >> 32) );\n        }\n        else\n        {\n            cursor.putByte( Record.NOT_IN_USE.byteValue() );\n            if ( !isInRecoveryMode() )\n            {\n                freeId( id );\n            }\n        }\n    }","commit_id":"7861e9a5e2512800a33a3b9afe965ec03d3b2e36","url":"https://github.com/neo4j/neo4j"},{"original_method":"public RelationshipGroupStore( File fileName, Config config, IdGeneratorFactory idGeneratorFactory,\n            WindowPoolFactory windowPoolFactory, FileSystemAbstraction fileSystemAbstraction,\n            StringLogger stringLogger, StoreVersionMismatchHandler versionMismatchHandler,\n            Monitors monitors )\n    {\n        super( fileName, config, IdType.RELATIONSHIP_GROUP, idGeneratorFactory, windowPoolFactory,\n                fileSystemAbstraction, stringLogger, versionMismatchHandler, monitors );\n    }","id":4521,"modified_method":"public RelationshipGroupStore( File fileName, Config config, IdGeneratorFactory idGeneratorFactory,\n            WindowPoolFactory windowPoolFactory, FileSystemAbstraction fileSystemAbstraction,\n            StringLogger stringLogger, StoreVersionMismatchHandler versionMismatchHandler,\n            Monitors monitors )\n    {\n        super( fileName, config, IdType.RELATIONSHIP_GROUP, idGeneratorFactory, windowPoolFactory,\n                fileSystemAbstraction, stringLogger, versionMismatchHandler, monitors );\n        pageCache = new WindowPoolPageCache( windowPoolFactory, fileSystemAbstraction );\n        try\n        {\n            storeFile = pageCache.map( fileName, RECORD_SIZE * 128, RECORD_SIZE );\n        }\n        catch ( IOException e )\n        {\n            // TODO: Just throw IOException, add proper handling further up\n            throw new UnderlyingStorageException( e );\n        }\n        pageSize = storeFile.pageSize();\n    }","commit_id":"7861e9a5e2512800a33a3b9afe965ec03d3b2e36","url":"https://github.com/neo4j/neo4j"},{"original_method":"private RelationshipGroupRecord getRecord( long id, PersistenceWindow window, RecordLoad load )\n    {\n        Buffer buffer = window.getOffsettedBuffer( id );\n\n        // [    ,   x] in use\n        // [    ,xxx ] high next id bits\n        // [ xxx,    ] high firstOut bits\n        long inUseByte = buffer.get();\n        boolean inUse = (inUseByte&0x1) > 0;\n        if ( !inUse )\n        {\n            switch ( load )\n            {\n            case NORMAL: throw new InvalidRecordException( \"Record[\" + id + \"] not in use\" );\n            case CHECK: return null;\n            }\n        }\n\n        // [    ,xxx ] high firstIn bits\n        // [ xxx,    ] high firstLoop bits\n        long highByte = buffer.get();\n\n        int type = buffer.getShort();\n        long nextLowBits = buffer.getUnsignedInt();\n        long nextOutLowBits = buffer.getUnsignedInt();\n        long nextInLowBits = buffer.getUnsignedInt();\n        long nextLoopLowBits = buffer.getUnsignedInt();\n        long owningNode = buffer.getUnsignedInt() | (((long)buffer.get()) << 32);\n\n        long nextMod = (inUseByte & 0xE) << 31;\n        long nextOutMod = (inUseByte & 0x70) << 28;\n        long nextInMod = (highByte & 0xE) << 31;\n        long nextLoopMod = (highByte & 0x70) << 28;\n\n        RelationshipGroupRecord record = new RelationshipGroupRecord( id, type );\n        record.setInUse( inUse );\n        record.setNext( longFromIntAndMod( nextLowBits, nextMod ) );\n        record.setFirstOut( longFromIntAndMod( nextOutLowBits, nextOutMod ) );\n        record.setFirstIn( longFromIntAndMod( nextInLowBits, nextInMod ) );\n        record.setFirstLoop( longFromIntAndMod( nextLoopLowBits, nextLoopMod ) );\n        record.setOwningNode( owningNode );\n        return record;\n    }","id":4522,"modified_method":"private RelationshipGroupRecord getRecord( long id, PageCursor cursor, RecordLoad load )\n    {\n        cursor.setOffset( (int) (id * RECORD_SIZE % pageSize) );\n\n        // [    ,   x] in use\n        // [    ,xxx ] high next id bits\n        // [ xxx,    ] high firstOut bits\n        long inUseByte = cursor.getByte();\n        boolean inUse = (inUseByte&0x1) > 0;\n        if ( !inUse )\n        {\n            switch ( load )\n            {\n            case NORMAL: throw new InvalidRecordException( \"Record[\" + id + \"] not in use\" );\n            case CHECK: return null;\n            }\n        }\n\n        // [    ,xxx ] high firstIn bits\n        // [ xxx,    ] high firstLoop bits\n        long highByte = cursor.getByte();\n\n        int type = cursor.getShort();\n        long nextLowBits = cursor.getUnsignedInt();\n        long nextOutLowBits = cursor.getUnsignedInt();\n        long nextInLowBits = cursor.getUnsignedInt();\n        long nextLoopLowBits = cursor.getUnsignedInt();\n        long owningNode = cursor.getUnsignedInt() | (((long)cursor.getByte()) << 32);\n\n        long nextMod = (inUseByte & 0xE) << 31;\n        long nextOutMod = (inUseByte & 0x70) << 28;\n        long nextInMod = (highByte & 0xE) << 31;\n        long nextLoopMod = (highByte & 0x70) << 28;\n\n        RelationshipGroupRecord record = new RelationshipGroupRecord( id, type );\n        record.setInUse( inUse );\n        record.setNext( longFromIntAndMod( nextLowBits, nextMod ) );\n        record.setFirstOut( longFromIntAndMod( nextOutLowBits, nextOutMod ) );\n        record.setFirstIn( longFromIntAndMod( nextInLowBits, nextInMod ) );\n        record.setFirstLoop( longFromIntAndMod( nextLoopLowBits, nextLoopMod ) );\n        record.setOwningNode( owningNode );\n        return record;\n    }","commit_id":"7861e9a5e2512800a33a3b9afe965ec03d3b2e36","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void updateRecord( RelationshipGroupRecord record )\n    {\n        PersistenceWindow window = acquireWindow( record.getId(),\n                OperationType.WRITE );\n        try\n        {\n            updateRecord( record, window, false );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4523,"modified_method":"@Override\n    public void updateRecord( RelationshipGroupRecord record )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.WRITE, pageIdForRecord( record.getId() ) );\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n        try\n        {\n            updateRecord( record, cursor, false );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"7861e9a5e2512800a33a3b9afe965ec03d3b2e36","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void reset( Page page )\n    {\n        this.page = page;\n        currentOffset = 0;\n    }","id":4524,"modified_method":"public OffsetTrackingCursor reset( Page page )\n    {\n        this.page = page;\n        currentOffset = 0;\n        return this;\n    }","commit_id":"c2749314d1081089c2d8edc85dc16b5b1ec9ed24","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    protected boolean isRecordInUse( ByteBuffer buffer )\n    {\n        // TODO: The next line is an ugly hack, but works.\n        Buffer fromByteBuffer = new Buffer( null, buffer );\n        return buffer.limit() >= RECORD_SIZE && getRecordFromBuffer( 0, fromByteBuffer ).inUse();\n    }","id":4525,"modified_method":"@Override\n    protected boolean isRecordInUse( ByteBuffer buffer )\n    {\n        // TODO: The next line is an ugly hack, but works.\n        OffsetTrackingCursor cursor = new OffsetTrackingCursor().reset(new ByteBufferPage( buffer ));\n        return buffer.limit() >= RECORD_SIZE && getRecordFromBuffer( 0, cursor ).inUse();\n    }","commit_id":"c2749314d1081089c2d8edc85dc16b5b1ec9ed24","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void updateRecord( PropertyRecord record )\n    {\n        PersistenceWindow window = acquireWindow( record.getId(),\n            OperationType.WRITE );\n        try\n        {\n            updateRecord( record, window );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4526,"modified_method":"@Override\n    public void updateRecord( PropertyRecord record )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.WRITE, pageIdForRecord( record.getId() ) );\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n        try\n        {\n            updateRecord( record, cursor );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"c2749314d1081089c2d8edc85dc16b5b1ec9ed24","url":"https://github.com/neo4j/neo4j"},{"original_method":"private PropertyRecord getRecord( long id, PersistenceWindow window, RecordLoad load )\n    {\n        Buffer buffer = window.getOffsettedBuffer( id );\n        PropertyRecord toReturn = getRecordFromBuffer( id, buffer );\n        if ( !toReturn.inUse() && load != RecordLoad.FORCE )\n        {\n            throw new InvalidRecordException( \"PropertyRecord[\" + id + \"] not in use\" );\n        }\n        return toReturn;\n    }","id":4527,"modified_method":"private PropertyRecord getRecord( long id, PageCursor cursor, RecordLoad load )\n    {\n        cursor.setOffset( (int) (id * RECORD_SIZE % pageSize) );\n        PropertyRecord toReturn = getRecordFromBuffer( id, cursor );\n        if ( !toReturn.inUse() && load != RecordLoad.FORCE )\n        {\n            throw new InvalidRecordException( \"PropertyRecord[\" + id + \"] not in use\" );\n        }\n        return toReturn;\n    }","commit_id":"c2749314d1081089c2d8edc85dc16b5b1ec9ed24","url":"https://github.com/neo4j/neo4j"},{"original_method":"public PropertyRecord getLightRecord( long id )\n    {\n        PersistenceWindow window = acquireWindow( id, OperationType.READ );\n        try\n        {\n            return getRecord( id, window, RecordLoad.NORMAL );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4528,"modified_method":"public PropertyRecord getLightRecord( long id )\n    {\n        return getRecord( id );\n    }","commit_id":"c2749314d1081089c2d8edc85dc16b5b1ec9ed24","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public PropertyRecord getRecord( long id )\n    {\n        PropertyRecord record;\n        PersistenceWindow window = acquireWindow( id, OperationType.READ );\n        try\n        {\n            record = getRecord( id, window, RecordLoad.NORMAL );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n        return record;\n    }","id":4529,"modified_method":"@Override\n    public PropertyRecord getRecord( long id )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.READ, pageIdForRecord( id ) );\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n        try\n        {\n            return getRecord( id, cursor, RecordLoad.NORMAL );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"c2749314d1081089c2d8edc85dc16b5b1ec9ed24","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void makeHeavyIfLight( PropertyBlock record )\n    {\n        if ( record.isLight() )\n        {\n            /*\n             * This will add the value records without checking if they are already\n             * in the block - so we only call this after checking isLight() or\n             * else we will end up with duplicates.\n             */\n            if ( record.getType() == PropertyType.STRING )\n            {\n                Collection<DynamicRecord> stringRecords = stringPropertyStore.getLightRecords( record.getSingleValueLong() );\n                for ( DynamicRecord stringRecord : stringRecords )\n                {\n                    stringRecord.setType( PropertyType.STRING.intValue() );\n                    record.addValueRecord( stringRecord );\n                }\n            }\n            else if ( record.getType() == PropertyType.ARRAY )\n            {\n                Collection<DynamicRecord> arrayRecords = arrayPropertyStore.getLightRecords( record.getSingleValueLong() );\n                for ( DynamicRecord arrayRecord : arrayRecords )\n                {\n                    arrayRecord.setType( PropertyType.ARRAY.intValue() );\n                    record.addValueRecord( arrayRecord );\n                }\n            }\n        }\n    }","id":4530,"modified_method":"private PropertyBlock getPropertyBlock( PageCursor cursor )\n    {\n        long header = cursor.getLong();\n        PropertyType type = PropertyType.getPropertyType( header, true );\n        if ( type == null )\n        {\n            return null;\n        }\n        PropertyBlock toReturn = new PropertyBlock();\n        // toReturn.setInUse( true );\n        int numBlocks = type.calculateNumberOfBlocksUsed( header );\n        long[] blockData = new long[numBlocks];\n        blockData[0] = header; // we already have that\n        for ( int i = 1; i < numBlocks; i++ )\n        {\n            blockData[i] = cursor.getLong();\n        }\n        toReturn.setValueBlocks( blockData );\n        return toReturn;\n    }","commit_id":"c2749314d1081089c2d8edc85dc16b5b1ec9ed24","url":"https://github.com/neo4j/neo4j"},{"original_method":"public PropertyStore( File fileName, Config configuration,\n                         IdGeneratorFactory idGeneratorFactory, WindowPoolFactory windowPoolFactory,\n                         FileSystemAbstraction fileSystemAbstraction, StringLogger stringLogger,\n                         DynamicStringStore stringPropertyStore, PropertyKeyTokenStore propertyKeyTokenStore,\n                         DynamicArrayStore arrayPropertyStore, StoreVersionMismatchHandler versionMismatchHandler,\n                         Monitors monitors )\n    {\n        super( fileName, configuration, IdType.PROPERTY, idGeneratorFactory, windowPoolFactory,\n                fileSystemAbstraction, stringLogger, versionMismatchHandler, monitors );\n        this.stringPropertyStore = stringPropertyStore;\n        this.propertyKeyTokenStore = propertyKeyTokenStore;\n        this.arrayPropertyStore = arrayPropertyStore;\n        this.physicalToLogicalConverter = new PropertyPhysicalToLogicalConverter( this );\n    }","id":4531,"modified_method":"public PropertyStore( File fileName, Config configuration,\n                         IdGeneratorFactory idGeneratorFactory, WindowPoolFactory windowPoolFactory,\n                         FileSystemAbstraction fileSystemAbstraction, StringLogger stringLogger,\n                         DynamicStringStore stringPropertyStore, PropertyKeyTokenStore propertyKeyTokenStore,\n                         DynamicArrayStore arrayPropertyStore, StoreVersionMismatchHandler versionMismatchHandler,\n                         Monitors monitors )\n    {\n        super( fileName, configuration, IdType.PROPERTY, idGeneratorFactory, windowPoolFactory,\n                fileSystemAbstraction, stringLogger, versionMismatchHandler, monitors );\n        this.stringPropertyStore = stringPropertyStore;\n        this.propertyKeyTokenStore = propertyKeyTokenStore;\n        this.arrayPropertyStore = arrayPropertyStore;\n        this.physicalToLogicalConverter = new PropertyPhysicalToLogicalConverter( this );\n        pageCache = new WindowPoolPageCache( windowPoolFactory, fileSystemAbstraction );\n        try\n        {\n            storeFile = pageCache.map( fileName, RECORD_SIZE * 128, RECORD_SIZE );\n        }\n        catch ( IOException e )\n        {\n            // TODO: Just throw IOException, add proper handling further up\n            throw new UnderlyingStorageException( e );\n        }\n        pageSize = storeFile.pageSize();\n    }","commit_id":"c2749314d1081089c2d8edc85dc16b5b1ec9ed24","url":"https://github.com/neo4j/neo4j"},{"original_method":"private PropertyRecord getRecordFromBuffer( long id, Buffer buffer )\n    {\n        int offsetAtBeggining = buffer.getOffset();\n        PropertyRecord record = new PropertyRecord( id );\n\n        /*\n         * [pppp,nnnn] previous, next high bits\n         */\n        byte modifiers = buffer.get();\n        long prevMod = ( modifiers & 0xF0L ) << 28;\n        long nextMod = ( modifiers & 0x0FL ) << 32;\n        long prevProp = buffer.getUnsignedInt();\n        long nextProp = buffer.getUnsignedInt();\n        record.setPrevProp( longFromIntAndMod( prevProp, prevMod ) );\n        record.setNextProp( longFromIntAndMod( nextProp, nextMod ) );\n\n        while ( buffer.getOffset() - offsetAtBeggining < RECORD_SIZE )\n        {\n            PropertyBlock newBlock = getPropertyBlock( buffer );\n            if ( newBlock != null )\n            {\n                record.addPropertyBlock( newBlock );\n                record.setInUse( true );\n            }\n            else\n            {\n                // We assume that storage is defragged\n                break;\n            }\n        }\n        return record;\n    }","id":4532,"modified_method":"private PropertyRecord getRecordFromBuffer( long id, PageCursor cursor )\n    {\n        int offsetAtBeggining = cursor.getOffset();\n        PropertyRecord record = new PropertyRecord( id );\n\n        /*\n         * [pppp,nnnn] previous, next high bits\n         */\n        byte modifiers = cursor.getByte();\n        long prevMod = ( modifiers & 0xF0L ) << 28;\n        long nextMod = ( modifiers & 0x0FL ) << 32;\n        long prevProp = cursor.getUnsignedInt();\n        long nextProp = cursor.getUnsignedInt();\n        record.setPrevProp( longFromIntAndMod( prevProp, prevMod ) );\n        record.setNextProp( longFromIntAndMod( nextProp, nextMod ) );\n\n        while ( cursor.getOffset() - offsetAtBeggining < RECORD_SIZE )\n        {\n            PropertyBlock newBlock = getPropertyBlock( cursor );\n            if ( newBlock != null )\n            {\n                record.addPropertyBlock( newBlock );\n                record.setInUse( true );\n            }\n            else\n            {\n                // We assume that storage is defragged\n                break;\n            }\n        }\n        return record;\n    }","commit_id":"c2749314d1081089c2d8edc85dc16b5b1ec9ed24","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void updateRecord( PropertyRecord record, PersistenceWindow window )\n    {\n        long id = record.getId();\n        registerIdFromUpdateRecord( id );\n        Buffer buffer = window.getOffsettedBuffer( id );\n        if ( record.inUse() )\n        {\n            // Set up the record header\n            short prevModifier = record.getPrevProp() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0\n                    : (short) ( ( record.getPrevProp() & 0xF00000000L ) >> 28 );\n            short nextModifier = record.getNextProp() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0\n                    : (short) ( ( record.getNextProp() & 0xF00000000L ) >> 32 );\n            byte modifiers = (byte) ( prevModifier | nextModifier );\n            /*\n             * [pppp,nnnn] previous, next high bits\n             */\n            buffer.put( modifiers );\n            buffer.putInt( (int) record.getPrevProp() ).putInt(\n                    (int) record.getNextProp() );\n\n            // Then go through the blocks\n            int longsAppended = 0; // For marking the end of blocks\n            for ( PropertyBlock block : record.getPropertyBlocks() )\n            {\n                long[] propBlockValues = block.getValueBlocks();\n                for ( long propBlockValue : propBlockValues )\n                {\n                    buffer.putLong( propBlockValue );\n                }\n\n                longsAppended += propBlockValues.length;\n                /*\n                 * For each block we need to update its dynamic record chain if\n                 * it is just created. Deleted dynamic records are in the property\n                 * record and dynamic records are never modified. Also, they are\n                 * assigned as a whole, so just checking the first should be enough.\n                 */\n                if ( !block.isLight()\n                     && block.getValueRecords().get( 0 ).isCreated() )\n                {\n                    updateDynamicRecords( block.getValueRecords() );\n                }\n            }\n            if ( longsAppended < PropertyType.getPayloadSizeLongs() )\n            {\n                buffer.putLong( 0 );\n            }\n        }\n        else\n        {\n            if ( !isInRecoveryMode() )\n            {\n                freeId( id );\n            }\n            // skip over the record header, nothing useful there\n            buffer.setOffset( buffer.getOffset() + 9 );\n            buffer.putLong( 0 );\n        }\n        updateDynamicRecords( record.getDeletedRecords() );\n    }","id":4533,"modified_method":"private void updateRecord( PropertyRecord record, PageCursor cursor )\n    {\n        long id = record.getId();\n        registerIdFromUpdateRecord( id );\n        cursor.setOffset( (int) (id * RECORD_SIZE % pageSize) );\n        if ( record.inUse() )\n        {\n            // Set up the record header\n            short prevModifier = record.getPrevProp() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0\n                    : (short) ( ( record.getPrevProp() & 0xF00000000L ) >> 28 );\n            short nextModifier = record.getNextProp() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0\n                    : (short) ( ( record.getNextProp() & 0xF00000000L ) >> 32 );\n            byte modifiers = (byte) ( prevModifier | nextModifier );\n            /*\n             * [pppp,nnnn] previous, next high bits\n             */\n            cursor.putByte( modifiers );\n            cursor.putInt( (int) record.getPrevProp() );\n            cursor.putInt( (int) record.getNextProp() );\n\n            // Then go through the blocks\n            int longsAppended = 0; // For marking the end of blocks\n            for ( PropertyBlock block : record.getPropertyBlocks() )\n            {\n                long[] propBlockValues = block.getValueBlocks();\n                for ( long propBlockValue : propBlockValues )\n                {\n                    cursor.putLong( propBlockValue );\n                }\n\n                longsAppended += propBlockValues.length;\n                /*\n                 * For each block we need to update its dynamic record chain if\n                 * it is just created. Deleted dynamic records are in the property\n                 * record and dynamic records are never modified. Also, they are\n                 * assigned as a whole, so just checking the first should be enough.\n                 */\n                if ( !block.isLight()\n                     && block.getValueRecords().get( 0 ).isCreated() )\n                {\n                    updateDynamicRecords( block.getValueRecords() );\n                }\n            }\n            if ( longsAppended < PropertyType.getPayloadSizeLongs() )\n            {\n                cursor.putLong( 0 );\n            }\n        }\n        else\n        {\n            if ( !isInRecoveryMode() )\n            {\n                freeId( id );\n            }\n            // skip over the record header, nothing useful there\n            cursor.setOffset( cursor.getOffset() + 9 );\n            cursor.putLong( 0 );\n        }\n        updateDynamicRecords( record.getDeletedRecords() );\n    }","commit_id":"c2749314d1081089c2d8edc85dc16b5b1ec9ed24","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public PropertyRecord forceGetRecord( long id )\n    {\n        PersistenceWindow window;\n        try\n        {\n            window = acquireWindow( id, OperationType.READ );\n        }\n        catch ( InvalidRecordException e )\n        {\n            return new PropertyRecord( id );\n        }\n\n        try\n        {\n            return getRecord( id, window, RecordLoad.FORCE );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4534,"modified_method":"@Override\n    public PropertyRecord forceGetRecord( long id )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.READ, pageIdForRecord( id ) );\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n        try\n        {\n            return getRecord( id, cursor, RecordLoad.FORCE );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"c2749314d1081089c2d8edc85dc16b5b1ec9ed24","url":"https://github.com/neo4j/neo4j"},{"original_method":"public boolean inUse( long id )\n    {\n        PersistenceWindow window;\n        try\n        {\n            window = acquireWindow( id, OperationType.READ );\n        }\n        catch ( InvalidRecordException e )\n        {\n            return false;\n        }\n\n        try\n        {\n            Buffer buffer = window.getOffsettedBuffer( id );\n            return ((long) buffer.get() & 0x1) == Record.IN_USE.intValue();\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4535,"modified_method":"public boolean inUse( long id )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.READ, pageIdForRecord( id ) );\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n\n        try\n        {\n            cursor.setOffset( (int) (id * RECORD_SIZE % pageSize) );\n            return ((long) cursor.getByte() & 0x1) == Record.IN_USE.intValue();\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"8640fc3b73c38c156ad5cea1e3aab29ad2b1d363","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void forceUpdateRecord( NodeRecord record )\n    {\n        PersistenceWindow window = acquireWindow( record.getId(),\n                OperationType.WRITE );\n            try\n            {\n                updateRecord( record, window, true );\n            }\n            finally\n            {\n                releaseWindow( window );\n            }\n    }","id":4536,"modified_method":"@Override\n    public void forceUpdateRecord( NodeRecord record )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.WRITE, pageIdForRecord( record.getId() ) );\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n\n        try\n        {\n            updateRecord( record, cursor, true );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"8640fc3b73c38c156ad5cea1e3aab29ad2b1d363","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public NodeRecord forceGetRecord( long id )\n    {\n        PersistenceWindow window;\n        try\n        {\n            window = acquireWindow( id, OperationType.READ );\n        }\n        catch ( InvalidRecordException e )\n        {\n            return new NodeRecord( id, false,\n                    Record.NO_NEXT_RELATIONSHIP.intValue(), Record.NO_NEXT_PROPERTY.intValue() ); // inUse=false by default\n        }\n\n        try\n        {\n            return getRecord( id, window, RecordLoad.FORCE, new NodeRecord( id ) );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4537,"modified_method":"@Override\n    public NodeRecord forceGetRecord( long id )\n    {\n        try\n        {\n            assertIdExists( id );\n        }\n        catch ( InvalidRecordException e )\n        {\n            return new NodeRecord( id, false,\n                    Record.NO_NEXT_RELATIONSHIP.intValue(), Record.NO_NEXT_PROPERTY.intValue() ); // inUse=false by default\n        }\n\n        return getRecord( id, new NodeRecord( id ), RecordLoad.FORCE);\n    }","commit_id":"8640fc3b73c38c156ad5cea1e3aab29ad2b1d363","url":"https://github.com/neo4j/neo4j"},{"original_method":"public NodeStore( File fileName, Config config,\n                     IdGeneratorFactory idGeneratorFactory, WindowPoolFactory windowPoolFactory,\n                     FileSystemAbstraction fileSystemAbstraction, StringLogger stringLogger,\n                     DynamicArrayStore dynamicLabelStore, StoreVersionMismatchHandler versionMismatchHandler,\n                     Monitors monitors )\n    {\n        super( fileName, config, IdType.NODE, idGeneratorFactory, windowPoolFactory, fileSystemAbstraction,\n                stringLogger, versionMismatchHandler, monitors );\n        this.dynamicLabelStore = dynamicLabelStore;\n    }","id":4538,"modified_method":"public NodeStore( File fileName, Config config,\n                     IdGeneratorFactory idGeneratorFactory, WindowPoolFactory windowPoolFactory,\n                     FileSystemAbstraction fileSystemAbstraction, StringLogger stringLogger,\n                     DynamicArrayStore dynamicLabelStore, StoreVersionMismatchHandler versionMismatchHandler,\n                     Monitors monitors )\n    {\n        super( fileName, config, IdType.NODE, idGeneratorFactory, windowPoolFactory, fileSystemAbstraction,\n                stringLogger, versionMismatchHandler, monitors );\n        pageCache = new WindowPoolPageCache( windowPoolFactory, fileSystemAbstraction );\n        try\n        {\n            storeFile = pageCache.map( fileName, RECORD_SIZE * 128, RECORD_SIZE );\n        }\n        catch ( IOException e )\n        {\n            // TODO: Just throw IOException, add proper handling further up\n            throw new UnderlyingStorageException( e );\n        }\n        pageSize = storeFile.pageSize();\n        this.dynamicLabelStore = dynamicLabelStore;\n    }","commit_id":"8640fc3b73c38c156ad5cea1e3aab29ad2b1d363","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void updateRecord( NodeRecord record )\n    {\n        PersistenceWindow window = acquireWindow( record.getId(),\n            OperationType.WRITE );\n        try\n        {\n            updateRecord( record, window, false );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4539,"modified_method":"@Override\n    public void updateRecord( NodeRecord record )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.WRITE, pageIdForRecord( record.getId() ) );\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n\n        try\n        {\n            updateRecord( record, cursor, false );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"8640fc3b73c38c156ad5cea1e3aab29ad2b1d363","url":"https://github.com/neo4j/neo4j"},{"original_method":"private NodeRecord getRecord( long id, PersistenceWindow window,\n        RecordLoad load, NodeRecord record )\n    {\n        Buffer buffer = window.getOffsettedBuffer( id );\n\n        // [    ,   x] in use bit\n        // [    ,xxx ] higher bits for rel id\n        // [xxxx,    ] higher bits for prop id\n        long inUseByte = buffer.get();\n\n        boolean inUse = (inUseByte & 0x1) == Record.IN_USE.intValue();\n        if ( !inUse )\n        {\n            switch ( load )\n            {\n            case NORMAL:\n                throw new InvalidRecordException( \"NodeRecord[\" + id + \"] not in use\" );\n            case CHECK:\n                return null;\n            case FORCE:\n                break;\n            }\n        }\n\n        long nextRel = buffer.getUnsignedInt();\n        long nextProp = buffer.getUnsignedInt();\n\n        long relModifier = (inUseByte & 0xEL) << 31;\n        long propModifier = (inUseByte & 0xF0L) << 28;\n\n        long lsbLabels = buffer.getUnsignedInt();\n        long hsbLabels = buffer.get() & 0xFF; // so that a negative byte won't fill the \"extended\" bits with ones.\n        long labels = lsbLabels | (hsbLabels << 32);\n        byte extra = buffer.get();\n        boolean dense = (extra & 0x1) > 0;\n\n        record.setId( id );\n        record.setDense( dense );\n        record.setNextRel( longFromIntAndMod( nextRel, relModifier ) );\n        record.setNextProp( longFromIntAndMod( nextProp, propModifier ) );\n        record.setInUse( inUse );\n        record.setLabelField( labels, Collections.<DynamicRecord>emptyList() );\n\n        return record;\n    }","id":4540,"modified_method":"private NodeRecord getRecord( long id, NodeRecord record, RecordLoad load )\n    {\n        PageCursor cursor = pageCache.newCursor();\n        try\n        {\n            storeFile.pin( cursor, PageLock.READ, pageIdForRecord( id ) );\n        }\n        catch ( IOException e )\n        {\n            throw new UnderlyingStorageException( e );\n        }\n\n        try\n        {\n            return getRecord( id, cursor, load, record );\n        }\n        finally\n        {\n            storeFile.unpin( cursor );\n        }\n    }","commit_id":"8640fc3b73c38c156ad5cea1e3aab29ad2b1d363","url":"https://github.com/neo4j/neo4j"},{"original_method":"public NodeRecord loadLightNode( long id )\n    {\n        PersistenceWindow window;\n        try\n        {\n            window = acquireWindow( id, OperationType.READ );\n        }\n        catch ( InvalidRecordException e )\n        {\n            // OK, id too high\n            return null;\n        }\n\n        try\n        {\n            return getRecord( id, window, RecordLoad.CHECK, new NodeRecord( id ) );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4541,"modified_method":"public NodeRecord loadLightNode( long id )\n    {\n        try\n        {\n            assertIdExists( id );\n        }\n        catch ( InvalidRecordException e )\n        {\n            return null;\n        }\n\n        return getRecord( id, new NodeRecord( id ), RecordLoad.CHECK );\n    }","commit_id":"8640fc3b73c38c156ad5cea1e3aab29ad2b1d363","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void updateRecord( NodeRecord record, PersistenceWindow window, boolean force )\n    {\n        long id = record.getId();\n        registerIdFromUpdateRecord( id );\n        Buffer buffer = window.getOffsettedBuffer( id );\n        if ( record.inUse() || force )\n        {\n            long nextRel = record.getNextRel();\n            long nextProp = record.getNextProp();\n\n            short relModifier = nextRel == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (short)((nextRel & 0x700000000L) >> 31);\n            short propModifier = nextProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (short)((nextProp & 0xF00000000L) >> 28);\n\n            // [    ,   x] in use bit\n            // [    ,xxx ] higher bits for rel id\n            // [xxxx,    ] higher bits for prop id\n            short inUseUnsignedByte = ( record.inUse() ? Record.IN_USE : Record.NOT_IN_USE ).byteValue();\n            inUseUnsignedByte = (short) ( inUseUnsignedByte | relModifier | propModifier );\n\n            buffer.put( (byte) inUseUnsignedByte ).putInt( (int) nextRel ).putInt( (int) nextProp );\n\n            // lsb of labels\n            long labelField = record.getLabelField();\n            buffer.putInt( (int) labelField );\n            // msb of labels\n            buffer.put( (byte) ((labelField&0xFF00000000L) >> 32) );\n\n            byte extra = record.isDense() ? (byte)1 : (byte)0;\n            buffer.put( extra );\n        }\n        else\n        {\n            buffer.put( Record.NOT_IN_USE.byteValue() );\n            if ( !isInRecoveryMode() )\n            {\n                freeId( id );\n            }\n        }\n    }","id":4542,"modified_method":"private void updateRecord( NodeRecord record, PageCursor cursor, boolean force )\n    {\n        long id = record.getId();\n        cursor.setOffset( (int) (id * RECORD_SIZE % pageSize) );\n        registerIdFromUpdateRecord( id );\n        if ( record.inUse() || force )\n        {\n            long nextRel = record.getNextRel();\n            long nextProp = record.getNextProp();\n\n            short relModifier = nextRel == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (short)((nextRel & 0x700000000L) >> 31);\n            short propModifier = nextProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (short)((nextProp & 0xF00000000L) >> 28);\n\n            // [    ,   x] in use bit\n            // [    ,xxx ] higher bits for rel id\n            // [xxxx,    ] higher bits for prop id\n            short inUseUnsignedByte = ( record.inUse() ? Record.IN_USE : Record.NOT_IN_USE ).byteValue();\n            inUseUnsignedByte = (short) ( inUseUnsignedByte | relModifier | propModifier );\n\n            cursor.putByte( (byte) inUseUnsignedByte );\n            cursor.putInt( (int) nextRel );\n            cursor.putInt( (int) nextProp );\n\n            // lsb of labels\n            long labelField = record.getLabelField();\n            cursor.putInt( (int) labelField );\n            // msb of labels\n            cursor.putByte( (byte) ((labelField & 0xFF00000000L) >> 32) );\n\n            byte extra = record.isDense() ? (byte)1 : (byte)0;\n            cursor.putByte( extra );\n        }\n        else\n        {\n            cursor.putByte( Record.NOT_IN_USE.byteValue() );\n            if ( !isInRecoveryMode() )\n            {\n                freeId( id );\n            }\n        }\n    }","commit_id":"8640fc3b73c38c156ad5cea1e3aab29ad2b1d363","url":"https://github.com/neo4j/neo4j"},{"original_method":"public NodeRecord getRecord( long id, NodeRecord record )\n    {\n        PersistenceWindow window = acquireWindow( id, OperationType.READ );\n        try\n        {\n            return getRecord( id, window, RecordLoad.NORMAL, record );\n        }\n        finally\n        {\n            releaseWindow( window );\n        }\n    }","id":4543,"modified_method":"public NodeRecord getRecord( long id, NodeRecord record )\n    {\n        return getRecord( id, record, RecordLoad.NORMAL);\n    }","commit_id":"8640fc3b73c38c156ad5cea1e3aab29ad2b1d363","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void virtual_fetchDependencies_5908258303322131137(SNode thisNode, VisibleArtifacts artifacts, RequiredDependenciesBuilder builder) {\n    SNode project = artifacts.getProject();\n    TemplateQueryContext genContext = artifacts.getGenContext();\n\n    Iterable<SNode> originalModules = Sequence.<SNode>singleton(SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0x427a473d5177432cL, 0x9905bcbceb71b996L, 0x39ea87a41cc0827eL, 0x39ea87a41cc0864eL, \"solution\")));\n    Iterable<SNode> modules = Sequence.fromIterable(new MPSModulesClosure(originalModules).trackDevkits().designtimeClosure().getAllModules()).union(Sequence.fromIterable(originalModules));\n    for (SNode m : Sequence.fromIterable(modules)) {\n      SNode artifact;\n      SNode originalModule = DependenciesHelper.getOriginalNode(m, genContext);\n      VisibleArtifacts currentArtifacts = artifacts;\n      artifact = SNodeOperations.as(currentArtifacts.findArtifact(originalModule), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x668c6cfbafac4c85L, \"jetbrains.mps.build.structure.BuildLayout_Node\"));\n      if (artifact != null) {\n        builder.add(SNodeOperations.as(DependenciesHelper.getOriginalNode(artifact, genContext), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x668c6cfbafac4c85L, \"jetbrains.mps.build.structure.BuildLayout_Node\")), originalModule);\n      } else if (SNodeOperations.isInstanceOf(originalModule, MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d2060eL, \"jetbrains.mps.build.mps.structure.BuildMps_DevKit\"))) {\n        artifact = SNodeOperations.as(currentArtifacts.findArtifact(SLinkOperations.getTarget(SNodeOperations.cast(originalModule, MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d2060eL, \"jetbrains.mps.build.mps.structure.BuildMps_DevKit\")), MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d333ebL, 0x4780308f5d47f25L, \"path\"))), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x668c6cfbafac4c85L, \"jetbrains.mps.build.structure.BuildLayout_Node\"));\n        if (artifact != null) {\n          builder.add(SNodeOperations.as(DependenciesHelper.getOriginalNode(artifact, genContext), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x668c6cfbafac4c85L, \"jetbrains.mps.build.structure.BuildLayout_Node\")), originalModule);\n        }\n      }\n    }\n  }","id":4544,"modified_method":"public static void virtual_fetchDependencies_5908258303322131137(SNode thisNode, VisibleArtifacts artifacts, RequiredDependenciesBuilder builder) {\n    SNode project = artifacts.getProject();\n    TemplateQueryContext genContext = artifacts.getGenContext();\n\n    Iterable<SNode> originalModules = SNodeOperations.getNodeDescendants(SNodeOperations.getNodeAncestor(thisNode, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, \"jetbrains.mps.build.structure.BuildProject\"), false, false), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d333ebL, \"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule\"), false, new SAbstractConcept[]{});\n    Iterable<SNode> modules = Sequence.fromIterable(new MPSModulesClosure(originalModules).trackDevkits().designtimeClosure().getAllModules()).union(Sequence.fromIterable(originalModules));\n    for (SNode m : Sequence.fromIterable(modules)) {\n      SNode artifact;\n      SNode originalModule = DependenciesHelper.getOriginalNode(m, genContext);\n      VisibleArtifacts currentArtifacts = artifacts;\n      artifact = SNodeOperations.as(currentArtifacts.findArtifact(originalModule), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x668c6cfbafac4c85L, \"jetbrains.mps.build.structure.BuildLayout_Node\"));\n      if (artifact != null) {\n        builder.add(SNodeOperations.as(DependenciesHelper.getOriginalNode(artifact, genContext), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x668c6cfbafac4c85L, \"jetbrains.mps.build.structure.BuildLayout_Node\")), originalModule);\n      } else if (SNodeOperations.isInstanceOf(originalModule, MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d2060eL, \"jetbrains.mps.build.mps.structure.BuildMps_DevKit\"))) {\n        artifact = SNodeOperations.as(currentArtifacts.findArtifact(SLinkOperations.getTarget(SNodeOperations.cast(originalModule, MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d2060eL, \"jetbrains.mps.build.mps.structure.BuildMps_DevKit\")), MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d333ebL, 0x4780308f5d47f25L, \"path\"))), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x668c6cfbafac4c85L, \"jetbrains.mps.build.structure.BuildLayout_Node\"));\n        if (artifact != null) {\n          builder.add(SNodeOperations.as(DependenciesHelper.getOriginalNode(artifact, genContext), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x668c6cfbafac4c85L, \"jetbrains.mps.build.structure.BuildLayout_Node\")), originalModule);\n        }\n      }\n    }\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static boolean static_canBeAChild(SNode node, SNode parentNode, SNode link, SNode childConcept, final IOperationContext operationContext) {\n    if (parentNode.getConcept().getQualifiedName().startsWith(\"jetbrains.mps.lang.generator\")) {\n      // anything in generator \n      return true;\n    }\n    if (Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(SNodeOperations.as(parentNode, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, \"jetbrains.mps.build.structure.BuildProject\")), MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x5c3f3e2c1ce9ac70L, \"plugins\")), MetaAdapterFactory.getConcept(0x427a473d5177432cL, 0x9905bcbceb71b996L, 0x39ea87a41cbeb5c6L, \"jetbrains.mps.build.mps.runner.structure.BuildSolutionRunnerPlugin\"))).isEmpty()) {\n      return false;\n    }\n\n    return Sequence.fromIterable(BuildProject_Behavior.call_getVisibleProjects_1224588814561807665(SNodeOperations.as(parentNode, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, \"jetbrains.mps.build.structure.BuildProject\")), false)).any(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SPropertyOperations.getString(it, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")).equals(\"mps\");\n      }\n    });\n  }","id":4545,"modified_method":"public static boolean static_canBeAChild(SNode node, SNode parentNode, SNode link, SNode childConcept, final IOperationContext operationContext) {\n    if (parentNode.getConcept().getQualifiedName().startsWith(\"jetbrains.mps.lang.generator\")) {\n      // anything in generator \n      return true;\n    }\n    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(SNodeOperations.as(parentNode, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, \"jetbrains.mps.build.structure.BuildProject\")), MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x5c3f3e2c1ce9ac70L, \"plugins\")), MetaAdapterFactory.getConcept(0x427a473d5177432cL, 0x9905bcbceb71b996L, 0x39ea87a41cbeb5c6L, \"jetbrains.mps.build.mps.runner.structure.BuildSolutionRunnerPlugin\"))).isNotEmpty();\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"private EditorCell createConstant_xi87ym_c0(EditorContext editorContext, SNode node) {\n    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, \"class=\");\n    editorCell.setCellId(\"Constant_xi87ym_c0\");\n    Style style = new StyleImpl();\n    style.set(StyleAttributes.PUNCTUATION_RIGHT, 0, true);\n    editorCell.getStyle().putAll(style);\n    editorCell.setDefaultText(\"\");\n    return editorCell;\n  }","id":4546,"modified_method":"private EditorCell createConstant_xi87ym_c0(EditorContext editorContext, SNode node) {\n    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, \" call static method\");\n    editorCell.setCellId(\"Constant_xi87ym_c0\");\n    editorCell.setDefaultText(\"\");\n    return editorCell;\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"private EditorCell createRefCell_xi87ym_b0(EditorContext editorContext, SNode node) {\n    CellProviderWithRole provider = new RefCellCellProvider(node, editorContext);\n    provider.setRole(\"solution\");\n    provider.setNoTargetText(\"<no solution>\");\n    EditorCell editorCell;\n    provider.setAuxiliaryCellProvider(new BuildSolutionRunnerAspect_Editor._Inline_xi87ym_a1a());\n    editorCell = provider.createEditorCell(editorContext);\n    if (editorCell.getRole() == null) {\n      editorCell.setReferenceCell(true);\n      editorCell.setRole(\"solution\");\n    }\n    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());\n    SNode attributeConcept = provider.getRoleAttribute();\n    Class attributeKind = provider.getRoleAttributeClass();\n    if (attributeConcept != null) {\n      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);\n      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);\n    } else\n    return editorCell;\n  }","id":4547,"modified_method":"private EditorCell createRefCell_xi87ym_b0(EditorContext editorContext, SNode node) {\n    CellProviderWithRole provider = new RefCellCellProvider(node, editorContext);\n    provider.setRole(\"startClass\");\n    provider.setNoTargetText(\"<no startClass>\");\n    EditorCell editorCell;\n    provider.setAuxiliaryCellProvider(new BuildSolutionRunnerAspect_Editor._Inline_xi87ym_a1a());\n    editorCell = provider.createEditorCell(editorContext);\n    if (editorCell.getRole() == null) {\n      editorCell.setReferenceCell(true);\n      editorCell.setRole(\"startClass\");\n    }\n    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());\n    SNode attributeConcept = provider.getRoleAttribute();\n    Class attributeKind = provider.getRoleAttributeClass();\n    if (attributeConcept != null) {\n      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);\n      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);\n    } else\n    return editorCell;\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"private EditorCell createProperty_xi87ym_a0b0(EditorContext editorContext, SNode node) {\n      CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);\n      provider.setRole(\"name\");\n      provider.setNoTargetText(\"<no name>\");\n      provider.setReadOnly(true);\n      EditorCell editorCell;\n      editorCell = provider.createEditorCell(editorContext);\n      editorCell.setCellId(\"property_name\");\n      editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());\n      SNode attributeConcept = provider.getRoleAttribute();\n      Class attributeKind = provider.getRoleAttributeClass();\n      if (attributeConcept != null) {\n        EditorManager manager = EditorManager.getInstanceFromContext(editorContext);\n        return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);\n      } else\n      return editorCell;\n    }","id":4548,"modified_method":"private EditorCell createReferencePresentation_xi87ym_a0b0(EditorContext editorContext, SNode node) {\n      EditorCell_Property editorCell = EditorCell_RefPresentation.create(editorContext, node, this.getRefNode(), \"startClass\");\n      editorCell.setCellId(\"ReferencePresentation_xi87ym_a0b0\");\n      return editorCell;\n    }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"private EditorCell createCollection_xi87ym_a(EditorContext editorContext, SNode node) {\n    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);\n    editorCell.setCellId(\"Collection_xi87ym_a\");\n    editorCell.setBig(true);\n    editorCell.addEditorCell(this.createConstant_xi87ym_a0(editorContext, node));\n    editorCell.addEditorCell(this.createRefCell_xi87ym_b0(editorContext, node));\n    editorCell.addEditorCell(this.createConstant_xi87ym_c0(editorContext, node));\n    editorCell.addEditorCell(this.createProperty_xi87ym_d0(editorContext, node));\n    return editorCell;\n  }","id":4549,"modified_method":"private EditorCell createCollection_xi87ym_a(EditorContext editorContext, SNode node) {\n    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);\n    editorCell.setCellId(\"Collection_xi87ym_a\");\n    editorCell.setBig(true);\n    editorCell.addEditorCell(this.createConstant_xi87ym_a0(editorContext, node));\n    editorCell.addEditorCell(this.createRefCell_xi87ym_b0(editorContext, node));\n    editorCell.addEditorCell(this.createConstant_xi87ym_c0(editorContext, node));\n    editorCell.addEditorCell(this.createRefCell_xi87ym_d0(editorContext, node));\n    return editorCell;\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"private EditorCell createProperty_xi87ym_d0(EditorContext editorContext, SNode node) {\n    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);\n    provider.setRole(\"mainclass\");\n    provider.setNoTargetText(\"<no mainclass>\");\n    EditorCell editorCell;\n    editorCell = provider.createEditorCell(editorContext);\n    editorCell.setCellId(\"property_mainclass\");\n    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());\n    SNode attributeConcept = provider.getRoleAttribute();\n    Class attributeKind = provider.getRoleAttributeClass();\n    if (attributeConcept != null) {\n      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);\n      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);\n    } else\n    return editorCell;\n  }","id":4550,"modified_method":"private EditorCell createRefCell_xi87ym_d0(EditorContext editorContext, SNode node) {\n    CellProviderWithRole provider = new RefCellCellProvider(node, editorContext);\n    provider.setRole(\"startMethod\");\n    provider.setNoTargetText(\"<no startMethod>\");\n    EditorCell editorCell;\n    provider.setAuxiliaryCellProvider(new BuildSolutionRunnerAspect_Editor._Inline_xi87ym_a3a());\n    editorCell = provider.createEditorCell(editorContext);\n    if (editorCell.getRole() == null) {\n      editorCell.setReferenceCell(true);\n      editorCell.setRole(\"startMethod\");\n    }\n    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());\n    SNode attributeConcept = provider.getRoleAttribute();\n    Class attributeKind = provider.getRoleAttributeClass();\n    if (attributeConcept != null) {\n      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);\n      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);\n    } else\n    return editorCell;\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell createEditorCell(EditorContext editorContext, SNode node) {\n      return this.createProperty_xi87ym_a0b0(editorContext, node);\n    }","id":4551,"modified_method":"public EditorCell createEditorCell(EditorContext editorContext, SNode node) {\n      return this.createReferencePresentation_xi87ym_a0b0(editorContext, node);\n    }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"private EditorCell createConstant_xi87ym_a0(EditorContext editorContext, SNode node) {\n    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, \"run code from solution\");\n    editorCell.setCellId(\"Constant_xi87ym_a0\");\n    editorCell.setDefaultText(\"\");\n    return editorCell;\n  }","id":4552,"modified_method":"private EditorCell createConstant_xi87ym_a0(EditorContext editorContext, SNode node) {\n    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, \"run code from class\");\n    editorCell.setCellId(\"Constant_xi87ym_a0\");\n    editorCell.setDefaultText(\"\");\n    return editorCell;\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Iterable<SNode> sourceNodesQuery_3919210978214521412(final SourceSubstituteMacroNodesContext _context) {\n    return Sequence.fromIterable(Sequence.fromArray(((String[]) _context.getVariable(\"var:requiredPlugins\")))).select(new ISelector<String, SNode>() {\n      public SNode select(String it) {\n        return createGeneratorInternal_String_x583g4_a0a0a0a0o(it);\n      }\n    });\n  }","id":4553,"modified_method":"public static Iterable<SNode> sourceNodesQuery_3919210978214521412(final SourceSubstituteMacroNodesContext _context) {\n    return Sequence.fromIterable(Sequence.fromArray(((String[]) _context.getVariable(\"var:requiredPlugins\")))).select(new ISelector<String, SNode>() {\n      public SNode select(String it) {\n        return createGeneratorInternal_String_x583g4_a0a0a0a0p(it);\n      }\n    });\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Object propertyMacro_GetPropertyValue_4173297143639165102(final PropertyMacroContext _context) {\n    return \"run.\" + SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0x427a473d5177432cL, 0x9905bcbceb71b996L, 0x39ea87a41cc0827eL, 0x39ea87a41cc08649L, \"mainclass\"));\n  }","id":4554,"modified_method":"public static Object propertyMacro_GetPropertyValue_4173297143639165102(final PropertyMacroContext _context) {\n    return \"run.\" + BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x427a473d5177432cL, 0x9905bcbceb71b996L, 0x39ea87a41cc0827eL, 0x1ed21562e580b09eL, \"startClass\")), \"virtual_getFqName_1213877404258\", new Object[]{});\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Iterable<SNode> sourceNodesQuery_3919210978214741906(final SourceSubstituteMacroNodesContext _context) {\n    return ModuleFinder.findModules(Sequence.<SNode>singleton(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x427a473d5177432cL, 0x9905bcbceb71b996L, 0x39ea87a41cc0827eL, 0x39ea87a41cc0864eL, \"solution\"))), _context, _context.getNode());\n  }","id":4555,"modified_method":"public static Iterable<SNode> sourceNodesQuery_3919210978214741906(final SourceSubstituteMacroNodesContext _context) {\n    return SNodeOperations.getNodeDescendants(SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, \"jetbrains.mps.build.structure.BuildProject\"), false, false), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d333ebL, \"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule\"), false, new SAbstractConcept[]{});\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Object propertyMacro_GetPropertyValue_3919210978214235101(final PropertyMacroContext _context) {\n    return \"starting \" + SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0x427a473d5177432cL, 0x9905bcbceb71b996L, 0x39ea87a41cc0827eL, 0x39ea87a41cc08649L, \"mainclass\")) + \" in MPS\";\n  }","id":4556,"modified_method":"public static Object propertyMacro_GetPropertyValue_3919210978214235101(final PropertyMacroContext _context) {\n    return \"starting \" + BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x427a473d5177432cL, 0x9905bcbceb71b996L, 0x39ea87a41cc0827eL, 0x1ed21562e580b09eL, \"startClass\")), \"virtual_getFqName_1213877404258\", new Object[]{}) + \".\" + SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x427a473d5177432cL, 0x9905bcbceb71b996L, 0x39ea87a41cc0827eL, 0x1ed21562e585f109L, \"startMethod\")) + \" in MPS\";\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Object propertyMacro_GetPropertyValue_500334111425910696(final PropertyMacroContext _context) {\n    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0xd94b027412f0824L, 0xd94b027412f0827L, \"path\"));\n  }","id":4557,"modified_method":"public static Object propertyMacro_GetPropertyValue_500334111425910696(final PropertyMacroContext _context) {\n    return BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d333ebL, 0x4780308f5d47f25L, \"path\")), \"virtual_getAntPath_8563603456895173701\", new Object[]{Context.defaultContext(_context)});\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Object propertyMacro_GetPropertyValue_3919210978214485197(final PropertyMacroContext _context) {\n    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0x427a473d5177432cL, 0x9905bcbceb71b996L, 0x39ea87a41cc0827eL, 0x39ea87a41cc08649L, \"mainclass\"));\n  }","id":4558,"modified_method":"public static Object propertyMacro_GetPropertyValue_3919210978214485197(final PropertyMacroContext _context) {\n    return BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x427a473d5177432cL, 0x9905bcbceb71b996L, 0x39ea87a41cc0827eL, 0x1ed21562e580b09eL, \"startClass\")), \"virtual_getFqName_1213877404258\", new Object[]{});\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode createGeneratorInternal_String_x583g4_a0a0a0a0o(Object p0) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode n1 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0xd94b027412f0824L, \"jetbrains.mps.build.mps.structure.GeneratorInternal_String\"), null, null, false);\n    n1.setProperty(MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0xd94b027412f0824L, 0xd94b027412f0827L, \"path\"), String.valueOf(p0));\n    return n1;\n  }","id":4559,"modified_method":"private static SNode createGeneratorInternal_String_x583g4_a0a0a0a0p(Object p0) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode n1 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0xd94b027412f0824L, \"jetbrains.mps.build.mps.structure.GeneratorInternal_String\"), null, null, false);\n    n1.setProperty(MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0xd94b027412f0824L, 0xd94b027412f0827L, \"path\"), String.valueOf(p0));\n    return n1;\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Object insertMacro_varValue_3919210978213957549(final TemplateQueryContext _context) {\n    return new MPSModulesClosure(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x427a473d5177432cL, 0x9905bcbceb71b996L, 0x39ea87a41cc0827eL, 0x39ea87a41cc0864eL, \"solution\"))).trackDevkits().designtimeClosure();\n  }","id":4560,"modified_method":"public static Object insertMacro_varValue_3919210978213957549(final TemplateQueryContext _context) {\n    return new MPSModulesClosure(SNodeOperations.getNodeDescendants(SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, \"jetbrains.mps.build.structure.BuildProject\"), false, false), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d333ebL, \"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule\"), false, new SAbstractConcept[]{})).trackDevkits().designtimeClosure();\n  }","commit_id":"cb0b648c2352a852b20e320625be53117b8ce9e1","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n\t * Returns a bookmarkable URL that references a given page class using a\n\t * given set of page parameters. Since the URL which is returned contains\n\t * all information necessary to instantiate and render the page, it can be\n\t * stored in a user's browser as a stable bookmark.\n\t * \n\t * @param pageMapName\n\t *            Name of pagemap to use\n\t * @param pageClass\n\t *            Class of page\n\t * @param parameters\n\t *            Parameters to page\n\t * @return Bookmarkable URL to page\n\t */\n\tpublic final String urlFor(final String pageMapName, final Class pageClass,\n\t\t\tfinal PageParameters parameters)\n\t{\n\t\tIRequestTarget target = new BookmarkablePageRequestTarget(pageMapName, pageClass,\n\t\t\t\tparameters);\n\t\tRequestCycle requestCycle = getRequestCycle();\n\t\tIRequestCodingStrategy requestCodingStrategy = requestCycle.getProcessor()\n\t\t\t\t.getRequestCodingStrategy();\n\t\treturn requestCodingStrategy.encode(requestCycle, target);\n\t}","id":4561,"modified_method":"/**\n\t * Returns a bookmarkable URL that references a given page class using a\n\t * given set of page parameters. Since the URL which is returned contains\n\t * all information necessary to instantiate and render the page, it can be\n\t * stored in a user's browser as a stable bookmark.\n\t * \n\t * @see RequestCycle#urlFor(String, Class, PageParameters)\n\t * \n\t * @param pageMapName\n\t *            Name of pagemap to use\n\t * @param pageClass\n\t *            Class of page\n\t * @param parameters\n\t *            Parameters to page\n\t * \n\t * \n\t * @return Bookmarkable URL to page\n\t */\n\tpublic final String urlFor(final String pageMapName, final Class pageClass,\n\t\t\tfinal PageParameters parameters)\n\t{\n\t\treturn getRequestCycle().urlFor(pageMapName, pageClass, parameters);\n\t}","commit_id":"1f98e701182ae1e90c7c64eae31b7a4c443804b4","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Returns a URL that references the given request target.\n\t * \n\t * @param requestTarget\n\t *            the request target to reference\n\t * @return a URL that references the given request target\n\t */\n\tpublic final String urlFor(final IRequestTarget requestTarget)\n\t{\n\t\tRequestCycle requestCycle = getRequestCycle();\n\t\tIRequestCodingStrategy requestCodingStrategy = requestCycle.getProcessor()\n\t\t\t\t.getRequestCodingStrategy();\n\t\treturn requestCodingStrategy.encode(requestCycle, requestTarget);\n\t}","id":4562,"modified_method":"/**\n\t * Returns a URL that references the given request target.\n\t * \n\t * @see RequestCycle#urlFor(IRequestTarget)\n\t * \n\t * @param requestTarget\n\t *            the request target to reference\n\t * \n\t * @return a URL that references the given request target\n\t */\n\tpublic final String urlFor(final IRequestTarget requestTarget)\n\t{\n\t\treturn getRequestCycle().urlFor(requestTarget);\n\t}","commit_id":"1f98e701182ae1e90c7c64eae31b7a4c443804b4","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Returns a URL that references a shared resource through the provided\n\t * resource key.\n\t * \n\t * @param resourceKey\n\t *            The application global key of the shared resource\n\t * @return The url for the shared resource\n\t */\n\tpublic final String urlFor(final String resourceKey)\n\t{\n\t\tRequestCycle requestCycle = getRequestCycle();\n\t\tString url = requestCycle.getProcessor().getRequestCodingStrategy().encode(requestCycle,\n\t\t\t\tnew SharedResourceRequestTarget(resourceKey));\n\t\treturn url;\n\t}","id":4563,"modified_method":"/**\n\t * Returns a URL that references a shared resource through the provided\n\t * resource key.\n\t * \n\t * @see RequestCycle#urlFor(String)\n\t * \n\t * @param resourceKey\n\t *            The application global key of the shared resource\n\t * @return The url for the shared resource\n\t */\n\tpublic final String urlFor(final String resourceKey)\n\t{\n\t\treturn getRequestCycle().urlFor(resourceKey);\n\t}","commit_id":"1f98e701182ae1e90c7c64eae31b7a4c443804b4","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Returns a URL that references a given interface on a component. When the\n\t * URL is requested from the server at a later time, the interface will be\n\t * called. A URL returned by this method will not be stable across sessions\n\t * and cannot be bookmarked by a user.\n\t * \n\t * @param component\n\t *            The component to reference\n\t * @param listenerInterface\n\t *            The listener interface on the component\n\t * @return A URL that encodes a page, component and interface to call\n\t */\n\tpublic final String urlFor(final Component component, final Class listenerInterface)\n\t{\n\t\tstateless = false;\n\n\t\tString interfaceName = Classes.name(listenerInterface);\n\t\tRequestCycle requestCycle = getRequestCycle();\n\t\tIRequestTarget target = new ListenerInterfaceRequestTarget(this, component, requestCycle\n\t\t\t\t.getRequestInterfaceMethod(interfaceName));\n\t\tIRequestCodingStrategy requestCodingStrategy = requestCycle.getProcessor()\n\t\t\t\t.getRequestCodingStrategy();\n\t\treturn requestCodingStrategy.encode(requestCycle, target);\n\t}","id":4564,"modified_method":"/**\n\t * Returns a URL that references a given interface on a component. When the\n\t * URL is requested from the server at a later time, the interface will be\n\t * called. A URL returned by this method will not be stable across sessions\n\t * and cannot be bookmarked by a user.\n\t * \n\t * @see RequestCycle#urlFor(Component, Class)\n\t * \n\t * @param component\n\t *            The component to reference\n\t * @param listenerInterface\n\t *            The listener interface on the component\n\t * @return A URL that encodes a page, component and interface to call\n\t */\n\tpublic final String urlFor(final Component component, final Class listenerInterface)\n\t{\n\t\treturn getRequestCycle().urlFor(component, listenerInterface);\n\t}","commit_id":"1f98e701182ae1e90c7c64eae31b7a4c443804b4","url":"https://github.com/apache/wicket"},{"original_method":"public static AttributesTransformer getInstance() {\n\t\tif (_attributesTransformer == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.LDAP_ATTRS_TRANSFORMER_IMPL);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_attributesTransformer =\n\t\t\t\t\t(AttributesTransformer)classLoader.loadClass(\n\t\t\t\t\t\tPropsValues.LDAP_ATTRS_TRANSFORMER_IMPL).newInstance();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + _attributesTransformer.getClass().getName());\n\t\t}\n\n\t\treturn _attributesTransformer;\n\t}","id":4565,"modified_method":"public static AttributesTransformer getInstance() {\n\t\tif (_originalAttributesTransformer == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.LDAP_ATTRS_TRANSFORMER_IMPL);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_originalAttributesTransformer =\n\t\t\t\t\t(AttributesTransformer)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.LDAP_ATTRS_TRANSFORMER_IMPL);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_attributesTransformer == null) {\n\t\t\t_attributesTransformer = _originalAttributesTransformer;\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + _attributesTransformer.getClass().getName());\n\t\t}\n\n\t\treturn _attributesTransformer;\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void setInstance(\n\t\tAttributesTransformer attributesTransformer) {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(attributesTransformer));\n\t\t}\n\n\t\t_attributesTransformer = attributesTransformer;\n\t}","id":4566,"modified_method":"public static void setInstance(\n\t\tAttributesTransformer attributesTransformer) {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(attributesTransformer));\n\t\t}\n\n\t\tif (attributesTransformer == null) {\n\t\t\t_attributesTransformer = _originalAttributesTransformer;\n\t\t}\n\t\telse {\n\t\t\t_attributesTransformer = attributesTransformer;\n\t\t}\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static ControlPanelEntry getInstance() {\n\t\tif (_controlPanelEntry == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" +\n\t\t\t\t\t\tPropsValues.CONTROL_PANEL_DEFAULT_ENTRY_CLASS);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_controlPanelEntry = (ControlPanelEntry)classLoader.loadClass(\n\t\t\t\t\tPropsValues.CONTROL_PANEL_DEFAULT_ENTRY_CLASS).\n\t\t\t\t\t\tnewInstance();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + ClassUtil.getClassName(_controlPanelEntry));\n\t\t}\n\n\t\treturn _controlPanelEntry;\n\t}","id":4567,"modified_method":"public static ControlPanelEntry getInstance() {\n\t\tif (_originalControlPanelEntry == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" +\n\t\t\t\t\t\tPropsValues.CONTROL_PANEL_DEFAULT_ENTRY_CLASS);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_originalControlPanelEntry =\n\t\t\t\t\t(ControlPanelEntry)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader,\n\t\t\t\t\t\tPropsValues.CONTROL_PANEL_DEFAULT_ENTRY_CLASS);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_controlPanelEntry == null) {\n\t\t\t_controlPanelEntry = _originalControlPanelEntry;\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + ClassUtil.getClassName(_controlPanelEntry));\n\t\t}\n\n\t\treturn _controlPanelEntry;\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void setInstance(ControlPanelEntry controlPanelEntryFactory) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Set \" + ClassUtil.getClassName(controlPanelEntryFactory));\n\t\t}\n\n\t\t_controlPanelEntry = controlPanelEntryFactory;\n\t}","id":4568,"modified_method":"public static void setInstance(ControlPanelEntry controlPanelEntryFactory) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Set \" + ClassUtil.getClassName(controlPanelEntryFactory));\n\t\t}\n\n\t\tif (controlPanelEntryFactory == null) {\n\t\t\t_controlPanelEntry = _originalControlPanelEntry;\n\t\t}\n\t\telse {\n\t\t\t_controlPanelEntry = controlPanelEntryFactory;\n\t\t}\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static EmailAddressGenerator getInstance() {\n\t\tif (_emailAddressGenerator == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_EMAIL_ADDRESS_GENERATOR);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_emailAddressGenerator =\n\t\t\t\t\t(EmailAddressGenerator)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.USERS_EMAIL_ADDRESS_GENERATOR);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Return \" + ClassUtil.getClassName(_emailAddressGenerator));\n\t\t}\n\n\t\treturn _emailAddressGenerator;\n\t}","id":4569,"modified_method":"public static EmailAddressGenerator getInstance() {\n\t\tif (_originalEmailAddressGenerator == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_EMAIL_ADDRESS_GENERATOR);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_originalEmailAddressGenerator =\n\t\t\t\t\t(EmailAddressGenerator)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.USERS_EMAIL_ADDRESS_GENERATOR);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_emailAddressGenerator == null) {\n\t\t\t_emailAddressGenerator = _originalEmailAddressGenerator;\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Return \" + ClassUtil.getClassName(_emailAddressGenerator));\n\t\t}\n\n\t\treturn _emailAddressGenerator;\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void setInstance(\n\t\tEmailAddressGenerator emailAddressGenerator) {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(emailAddressGenerator));\n\t\t}\n\n\t\t_emailAddressGenerator = emailAddressGenerator;\n\t}","id":4570,"modified_method":"public static void setInstance(\n\t\tEmailAddressGenerator emailAddressGenerator) {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(emailAddressGenerator));\n\t\t}\n\n\t\tif (emailAddressGenerator == null) {\n\t\t\t_emailAddressGenerator = _originalEmailAddressGenerator;\n\t\t}\n\t\telse {\n\t\t\t_emailAddressGenerator = emailAddressGenerator;\n\t\t}\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void setInstance(\n\t\tEmailAddressValidator emailAddressValidator) {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(emailAddressValidator));\n\t\t}\n\n\t\t_emailAddressValidator = emailAddressValidator;\n\t}","id":4571,"modified_method":"public static void setInstance(\n\t\tEmailAddressValidator emailAddressValidator) {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(emailAddressValidator));\n\t\t}\n\n\t\tif (emailAddressValidator == null) {\n\t\t\t_emailAddressValidator = _originalEmailAddressValidator;\n\t\t}\n\t\telse {\n\t\t\t_emailAddressValidator = emailAddressValidator;\n\t\t}\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static EmailAddressValidator getInstance() {\n\t\tif (_emailAddressValidator == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_EMAIL_ADDRESS_VALIDATOR);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_emailAddressValidator =\n\t\t\t\t\t(EmailAddressValidator)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.USERS_EMAIL_ADDRESS_VALIDATOR);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Return \" + ClassUtil.getClassName(_emailAddressValidator));\n\t\t}\n\n\t\treturn _emailAddressValidator;\n\t}","id":4572,"modified_method":"public static EmailAddressValidator getInstance() {\n\t\tif (_originalEmailAddressValidator == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_EMAIL_ADDRESS_VALIDATOR);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_originalEmailAddressValidator =\n\t\t\t\t\t(EmailAddressValidator)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.USERS_EMAIL_ADDRESS_VALIDATOR);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_emailAddressValidator == null) {\n\t\t\t_emailAddressValidator = _originalEmailAddressValidator;\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Return \" + ClassUtil.getClassName(_emailAddressValidator));\n\t\t}\n\n\t\treturn _emailAddressValidator;\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static FullNameGenerator getInstance() {\n\t\tif (_fullNameGenerator == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_FULL_NAME_GENERATOR);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_fullNameGenerator =\n\t\t\t\t\t(FullNameGenerator)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.USERS_FULL_NAME_GENERATOR);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + ClassUtil.getClassName(_fullNameGenerator));\n\t\t}\n\n\t\treturn _fullNameGenerator;\n\t}","id":4573,"modified_method":"public static FullNameGenerator getInstance() {\n\t\tif (_originalFullNameGenerator == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_FULL_NAME_GENERATOR);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_originalFullNameGenerator =\n\t\t\t\t\t(FullNameGenerator)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.USERS_FULL_NAME_GENERATOR);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_fullNameGenerator == null) {\n\t\t\t_fullNameGenerator = _originalFullNameGenerator;\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + ClassUtil.getClassName(_fullNameGenerator));\n\t\t}\n\n\t\treturn _fullNameGenerator;\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void setInstance(FullNameGenerator fullNameValidator) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(fullNameValidator));\n\t\t}\n\n\t\t_fullNameGenerator = fullNameValidator;\n\t}","id":4574,"modified_method":"public static void setInstance(FullNameGenerator fullNameValidator) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(fullNameValidator));\n\t\t}\n\n\t\tif (fullNameValidator == null) {\n\t\t\t_fullNameGenerator = _originalFullNameGenerator;\n\t\t}\n\t\telse {\n\t\t\t_fullNameGenerator = fullNameValidator;\n\t\t}\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static FullNameValidator getInstance() {\n\t\tif (_fullNameValidator == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_FULL_NAME_VALIDATOR);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_fullNameValidator =\n\t\t\t\t\t(FullNameValidator)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.USERS_FULL_NAME_VALIDATOR);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + ClassUtil.getClassName(_fullNameValidator));\n\t\t}\n\n\t\treturn _fullNameValidator;\n\t}","id":4575,"modified_method":"public static FullNameValidator getInstance() {\n\t\tif (_originalFullNameValidator == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_FULL_NAME_VALIDATOR);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_originalFullNameValidator =\n\t\t\t\t\t(FullNameValidator)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.USERS_FULL_NAME_VALIDATOR);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_fullNameValidator == null) {\n\t\t\t_fullNameValidator = _originalFullNameValidator;\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + ClassUtil.getClassName(_fullNameValidator));\n\t\t}\n\n\t\treturn _fullNameValidator;\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void setInstance(FullNameValidator fullNameValidator) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(fullNameValidator));\n\t\t}\n\n\t\t_fullNameValidator = fullNameValidator;\n\t}","id":4576,"modified_method":"public static void setInstance(FullNameValidator fullNameValidator) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(fullNameValidator));\n\t\t}\n\n\t\tif (fullNameValidator == null) {\n\t\t\t_fullNameValidator = _originalFullNameValidator;\n\t\t}\n\t\telse {\n\t\t\t_fullNameValidator = fullNameValidator;\n\t\t}\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void setInstance(Hook hook) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(hook));\n\t\t}\n\n\t\t_hook = hook;\n\t}","id":4577,"modified_method":"public static void setInstance(Hook hook) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(hook));\n\t\t}\n\n\t\tif (hook == null) {\n\t\t\t_hook = _originalHook;\n\t\t}\n\t\telse {\n\t\t\t_hook = hook;\n\t\t}\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Hook getInstance() {\n\t\tif (_hook == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Instantiate \" + PropsValues.MAIL_HOOK_IMPL);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_hook = (Hook)classLoader.loadClass(\n\t\t\t\t\tPropsValues.MAIL_HOOK_IMPL).newInstance();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + _hook.getClass().getName());\n\t\t}\n\n\t\treturn _hook;\n\t}","id":4578,"modified_method":"public static Hook getInstance() {\n\t\tif (_originalHook == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Instantiate \" + PropsValues.MAIL_HOOK_IMPL);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_originalHook = (Hook)InstanceFactory.newInstance(\n\t\t\t\t\tclassLoader, PropsValues.MAIL_HOOK_IMPL);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_hook == null) {\n\t\t\t_hook = _originalHook;\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + _hook.getClass().getName());\n\t\t}\n\n\t\treturn _hook;\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static MembershipPolicy getInstance() {\n\t\tif (_membershipPolicy == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_MEMBERSHIP_POLICY);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_membershipPolicy =\n\t\t\t\t\t(MembershipPolicy)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.USERS_MEMBERSHIP_POLICY);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + ClassUtil.getClassName(_membershipPolicy));\n\t\t}\n\n\t\treturn _membershipPolicy;\n\t}","id":4579,"modified_method":"public static MembershipPolicy getInstance() {\n\t\tif (_originalMembershipPolicy == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_MEMBERSHIP_POLICY);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_originalMembershipPolicy =\n\t\t\t\t\t(MembershipPolicy)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.USERS_MEMBERSHIP_POLICY);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_membershipPolicy == null) {\n\t\t\t_membershipPolicy = _originalMembershipPolicy;\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + ClassUtil.getClassName(_membershipPolicy));\n\t\t}\n\n\t\treturn _membershipPolicy;\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void setInstance(MembershipPolicy membershipPolicy) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(membershipPolicy));\n\t\t}\n\n\t\t_membershipPolicy = membershipPolicy;\n\t}","id":4580,"modified_method":"public static void setInstance(MembershipPolicy membershipPolicy) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(membershipPolicy));\n\t\t}\n\n\t\tif (membershipPolicy == null) {\n\t\t\t_membershipPolicy = _originalMembershipPolicy;\n\t\t}\n\t\telse {\n\t\t\t_membershipPolicy = membershipPolicy;\n\t\t}\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void setInstance(ScreenNameGenerator screenNameGenerator) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(screenNameGenerator));\n\t\t}\n\n\t\t_screenNameGenerator = screenNameGenerator;\n\t}","id":4581,"modified_method":"public static void setInstance(ScreenNameGenerator screenNameGenerator) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(screenNameGenerator));\n\t\t}\n\n\t\tif (screenNameGenerator == null) {\n\t\t\t_screenNameGenerator = _originalScreenNameGenerator;\n\t\t}\n\t\telse {\n\t\t\t_screenNameGenerator = screenNameGenerator;\n\t\t}\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static ScreenNameGenerator getInstance() {\n\t\tif (_screenNameGenerator == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_SCREEN_NAME_GENERATOR);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_screenNameGenerator =\n\t\t\t\t\t(ScreenNameGenerator)classLoader.loadClass(\n\t\t\t\t\t\tPropsValues.USERS_SCREEN_NAME_GENERATOR).newInstance();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Return \" + ClassUtil.getClassName(_screenNameGenerator));\n\t\t}\n\n\t\treturn _screenNameGenerator;\n\t}","id":4582,"modified_method":"public static ScreenNameGenerator getInstance() {\n\t\tif (_originalScreenNameGenerator == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_SCREEN_NAME_GENERATOR);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_originalScreenNameGenerator =\n\t\t\t\t\t(ScreenNameGenerator)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.USERS_SCREEN_NAME_GENERATOR);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_screenNameGenerator == null) {\n\t\t\t_screenNameGenerator = _originalScreenNameGenerator;\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Return \" + ClassUtil.getClassName(_screenNameGenerator));\n\t\t}\n\n\t\treturn _screenNameGenerator;\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static ScreenNameValidator getInstance() {\n\t\tif (_screenNameValidator == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_SCREEN_NAME_VALIDATOR);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_screenNameValidator =\n\t\t\t\t\t(ScreenNameValidator)classLoader.loadClass(\n\t\t\t\t\t\tPropsValues.USERS_SCREEN_NAME_VALIDATOR).newInstance();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Return \" + ClassUtil.getClassName(_screenNameValidator));\n\t\t}\n\n\t\treturn _screenNameValidator;\n\t}","id":4583,"modified_method":"public static ScreenNameValidator getInstance() {\n\t\tif (_originalScreenNameValidator == null) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Instantiate \" + PropsValues.USERS_SCREEN_NAME_VALIDATOR);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_originalScreenNameValidator =\n\t\t\t\t\t(ScreenNameValidator)InstanceFactory.newInstance(\n\t\t\t\t\t\tclassLoader, PropsValues.USERS_SCREEN_NAME_VALIDATOR);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_screenNameValidator == null) {\n\t\t\t_screenNameValidator = _originalScreenNameValidator;\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\n\t\t\t\t\"Return \" + ClassUtil.getClassName(_screenNameValidator));\n\t\t}\n\n\t\treturn _screenNameValidator;\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void setInstance(ScreenNameValidator screenNameValidator) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(screenNameValidator));\n\t\t}\n\n\t\t_screenNameValidator = screenNameValidator;\n\t}","id":4584,"modified_method":"public static void setInstance(ScreenNameValidator screenNameValidator) {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Set \" + ClassUtil.getClassName(screenNameValidator));\n\t\t}\n\n\t\tif (screenNameValidator == null) {\n\t\t\t_screenNameValidator = _originalScreenNameValidator;\n\t\t}\n\t\telse {\n\t\t\t_screenNameValidator = screenNameValidator;\n\t\t}\n\t}","commit_id":"14c6958c6b9aace451d2f3018de307588dc88833","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected abstract void fillBothIds();","id":4585,"modified_method":"protected abstract boolean fillBothIds();","commit_id":"b9fe64a126c5ff44ca5e9fdcbbde43a024b71df7","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void fillBothIds() {\n    if (myRoleId != null && role != null) {\n      return;\n    }\n    if (myRoleId == null) {\n      SNode concept = SModelUtil.findConceptDeclaration(conceptName);\n      SConceptId cid = IdHelper.getConceptId((jetbrains.mps.smodel.SNode) concept);\n      final ConceptAndSuperConceptsScope scope = new ConceptAndSuperConceptsScope(concept);\n      SNode linkNode = scope.getLinkDeclarationByRole(role);\n      myRoleId = new SContainmentLinkId(cid, IdHelper.getNodeId((jetbrains.mps.smodel.SNode) linkNode));\n    } else {\n      SAbstractConceptAdapter adapter = new SAbstractConceptAdapter(myRoleId.getConceptId());\n      conceptName = adapter.getQualifiedName();\n      SModel model = adapter.getConceptDeclarationNode().getModel();\n      role = model.getNode(new SNodeId.Regular(myRoleId.getContainmentLinkId())).getProperty(\"role\");\n    }\n  }","id":4586,"modified_method":"public boolean fillBothIds() {\n    if (myRoleId != null && role != null) {\n      return true;\n    }\n    if (myRoleId == null) {\n      SNode concept = SModelUtil.findConceptDeclaration(conceptName);\n      SConceptId cid = IdHelper.getConceptId((jetbrains.mps.smodel.SNode) concept);\n      final ConceptAndSuperConceptsScope scope = new ConceptAndSuperConceptsScope(concept);\n      SNode linkNode = scope.getLinkDeclarationByRole(role);\n      myRoleId = new SContainmentLinkId(cid, IdHelper.getNodeId((jetbrains.mps.smodel.SNode) linkNode));\n    } else {\n      SAbstractConceptAdapter adapter = new SAbstractConceptAdapter(myRoleId.getConceptId());\n      conceptName = adapter.getQualifiedName();\n      SNode node = adapter.getConceptDeclarationNode();\n      if (node==null) return false;\n      role = node.getModel().getNode(new SNodeId.Regular(myRoleId.getContainmentLinkId())).getProperty(\"role\");\n    }\n    return true;\n  }","commit_id":"b9fe64a126c5ff44ca5e9fdcbbde43a024b71df7","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public SNode getLinkNode() {\n    fillBothIds();\n    SConceptAdapter adapter = new SConceptAdapter(getRoleId().getConceptId());\n    SModel model = adapter.getConceptDeclarationNode().getModel();\n    return ((SNode) model.getNode(new SNodeId.Regular(myRoleId.getContainmentLinkId())));\n  }","id":4587,"modified_method":"@Override\n  public SNode getLinkNode() {\n    if (!fillBothIds()) return null;\n    SConceptAdapter adapter = new SConceptAdapter(getRoleId().getConceptId());\n    SModel model = adapter.getConceptDeclarationNode().getModel();\n    return ((SNode) model.getNode(new SNodeId.Regular(myRoleId.getContainmentLinkId())));\n  }","commit_id":"b9fe64a126c5ff44ca5e9fdcbbde43a024b71df7","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode getLinkNode() {\n    fillBothIds();\n    SConceptAdapter adapter = new SConceptAdapter(getRoleId().getConceptId());\n    SModel model = adapter.getConceptDeclarationNode().getModel();\n    return ((SNode) model.getNode(new SNodeId.Regular(myRoleId.getReferenceLinkId())));\n  }","id":4588,"modified_method":"public SNode getLinkNode() {\n    if (!fillBothIds()) return null;\n    SConceptAdapter adapter = new SConceptAdapter(getRoleId().getConceptId());\n    SModel model = adapter.getConceptDeclarationNode().getModel();\n    return ((SNode) model.getNode(new SNodeId.Regular(myRoleId.getReferenceLinkId())));\n  }","commit_id":"b9fe64a126c5ff44ca5e9fdcbbde43a024b71df7","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void fillBothIds() {\n    if (myRoleId != null && role != null) {\n      return;\n    }\n    if (myRoleId == null) {\n      SNode concept = SModelUtil.findConceptDeclaration(conceptName);\n      SConceptId cid = IdHelper.getConceptId((jetbrains.mps.smodel.SNode) concept);\n      final ConceptAndSuperConceptsScope scope = new ConceptAndSuperConceptsScope(concept);\n      SNode linkNode = scope.getLinkDeclarationByRole(role);\n      myRoleId = new SReferenceLinkId(cid, IdHelper.getNodeId((jetbrains.mps.smodel.SNode) linkNode));\n    } else {\n      SAbstractConceptAdapter adapter = new SAbstractConceptAdapter(myRoleId.getConceptId());\n      conceptName = adapter.getQualifiedName();\n      SModel model = adapter.getConceptDeclarationNode().getModel();\n      role = model.getNode(new SNodeId.Regular(myRoleId.getReferenceLinkId())).getProperty(\"role\");\n    }\n  }","id":4589,"modified_method":"public boolean fillBothIds() {\n    if (myRoleId != null && role != null) {\n      return true;\n    }\n    if (myRoleId == null) {\n      SNode concept = SModelUtil.findConceptDeclaration(conceptName);\n      SConceptId cid = IdHelper.getConceptId((jetbrains.mps.smodel.SNode) concept);\n      final ConceptAndSuperConceptsScope scope = new ConceptAndSuperConceptsScope(concept);\n      SNode linkNode = scope.getLinkDeclarationByRole(role);\n      myRoleId = new SReferenceLinkId(cid, IdHelper.getNodeId((jetbrains.mps.smodel.SNode) linkNode));\n    } else {\n      SAbstractConceptAdapter adapter = new SAbstractConceptAdapter(myRoleId.getConceptId());\n      conceptName = adapter.getQualifiedName();\n      SNode node = adapter.getConceptDeclarationNode();\n      if (node==null) return false;\n      role = node.getModel().getNode(new SNodeId.Regular(myRoleId.getReferenceLinkId())).getProperty(\"role\");\n    }\n    return true;\n  }","commit_id":"b9fe64a126c5ff44ca5e9fdcbbde43a024b71df7","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void convertModelToBinary(String sourceFile, String destFile, boolean stripImplementation) throws IOException {\n    IFile source = FileSystem.getInstance().getFileByPath(sourceFile);\n    try {\n      DefaultSModel model = (stripImplementation ? ModelPersistence.readModelWithoutImplementation(new FileDataSource(source)) : ModelPersistence.readModel(new FileDataSource(source), false));\n      if (model.getSModelHeader().getPersistenceVersion() < ModelPersistence.LAST_VERSION) {\n        throw new IOException(\"cannot convert \" + sourceFile + \": model persistence is too old, please upgrade\");\n      }\n      BinaryPersistence.writeModel(model, new FileDataSource(FileSystem.getInstance().getFileByPath(destFile)));\n    } catch (ModelReadException e) {\n      throw new IOException(\"Couldn't parse \" + sourceFile + \": \" + e.getMessageEx(), e);\n    }\n  }","id":4590,"modified_method":"private void convertModelToBinary(String sourceFile, final String destFile, boolean stripImplementation) throws IOException {\n    IFile source = FileSystem.getInstance().getFileByPath(sourceFile);\n    try {\n      final DefaultSModel model = (stripImplementation ? ModelPersistence.readModelWithoutImplementation(new FileDataSource(source)) : ModelPersistence.readModel(new FileDataSource(source), false));\n      if (model.getSModelHeader().getPersistenceVersion() < ModelPersistence.LAST_VERSION) {\n        throw new IOException(\"cannot convert \" + sourceFile + \": model persistence is too old, please upgrade\");\n      }\n      final IOException[] e = {null};\n      ModelAccess.instance().runReadAction(new Runnable() {\n        @Override\n        public void run() {\n          try {\n            BinaryPersistence.writeModel(model, new FileDataSource(FileSystem.getInstance().getFileByPath(destFile)));\n          } catch (IOException e1) {\n            e[0] = e1;\n          }\n        }\n      });\n      if (e[0] !=null) throw e[0];\n    } catch (ModelReadException e) {\n      throw new IOException(\"Couldn't parse \" + sourceFile + \": \" + e.getMessageEx(), e);\n    }\n  }","commit_id":"a06df1e6f0dc449e36206a8d86218f54ed02e217","url":"https://github.com/JetBrains/MPS"},{"original_method":"public final SNode getPropertyNode() {\n    fillBothIds();\n    SConceptAdapter adapter = new SConceptAdapter(myPropertyId.getConceptId());\n    SModel model = adapter.getConceptDeclarationNode().getModel();\n    return ((SNode) model.getNode(new SNodeId.Regular(myPropertyId.getPropertyId())));\n  }","id":4591,"modified_method":"public final SNode getPropertyNode() {\n    if (!fillBothIds()) return null;\n    SConceptAdapter adapter = new SConceptAdapter(myPropertyId.getConceptId());\n    SModel model = adapter.getConceptDeclarationNode().getModel();\n    return ((SNode) model.getNode(new SNodeId.Regular(myPropertyId.getPropertyId())));\n  }","commit_id":"a06df1e6f0dc449e36206a8d86218f54ed02e217","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void fillBothIds() {\n    if (myPropertyId != null && propertyName != null) {\n      return;\n    }\n    if (myPropertyId == null) {\n      SNode concept = SModelUtil.findConceptDeclaration(conceptName);\n      SConceptId cid = IdHelper.getConceptId((jetbrains.mps.smodel.SNode) concept);\n      final ConceptAndSuperConceptsScope scope = new ConceptAndSuperConceptsScope(concept);\n      SNode propNode = scope.getPropertyDeclarationByName(propertyName);\n      myPropertyId = new SPropertyId(cid, IdHelper.getNodeId((jetbrains.mps.smodel.SNode) propNode));\n    } else {\n      SAbstractConceptAdapter adapter = new SAbstractConceptAdapter(myPropertyId.getConceptId());\n      conceptName = adapter.getQualifiedName();\n      SModel model = adapter.getConceptDeclarationNode().getModel();\n      propertyName = model.getNode(new SNodeId.Regular(myPropertyId.getPropertyId())).getName();\n    }\n  }","id":4592,"modified_method":"public boolean fillBothIds() {\n    if (myPropertyId != null && propertyName != null) {\n      return true;\n    }\n    if (myPropertyId == null) {\n      SNode concept = SModelUtil.findConceptDeclaration(conceptName);\n      SConceptId cid = IdHelper.getConceptId((jetbrains.mps.smodel.SNode) concept);\n      final ConceptAndSuperConceptsScope scope = new ConceptAndSuperConceptsScope(concept);\n      SNode propNode = scope.getPropertyDeclarationByName(propertyName);\n      myPropertyId = new SPropertyId(cid, IdHelper.getNodeId((jetbrains.mps.smodel.SNode) propNode));\n    } else {\n      SAbstractConceptAdapter adapter = new SAbstractConceptAdapter(myPropertyId.getConceptId());\n      conceptName = adapter.getQualifiedName();\n      SNode node = adapter.getConceptDeclarationNode();\n      if (node == null) {\n        return false;\n      }\n      propertyName = node.getModel().getNode(new SNodeId.Regular(myPropertyId.getPropertyId())).getName();\n    }\n    return true;\n  }","commit_id":"a06df1e6f0dc449e36206a8d86218f54ed02e217","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void publish(List configurations, ResolverContainer resolvers, boolean uploadModuleDescriptor) {\n        dependencyPublisher.publish(\n                configurations,\n                resolvers,\n                moduleDescriptorConverter.convert(this, true),\n                uploadModuleDescriptor,\n                getProject().getBuildDir(),\n                this,\n                ivy(resolvers.getResolverList()).getPublishEngine()\n        );\n    }","id":4593,"modified_method":"public void publish(List<String> configurations, ResolverContainer resolvers, boolean uploadModuleDescriptor) {\n        dependencyPublisher.publish(\n                configurations,\n                resolvers,\n                moduleDescriptorConverter.convert(this, true),\n                uploadModuleDescriptor,\n                getProject().getBuildDir(),\n                this,\n                ivy(resolvers.getResolverList()).getPublishEngine()\n        );\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"public List resolveTask(String taskName) {\n        Set<String> confs = confs4Task.get(taskName);\n        if (!GUtil.isTrue(confs)) {\n            throw new InvalidUserDataException(\"Task $taskName is not mapped to any conf!\");\n        }\n        List paths = new ArrayList();\n        for (String conf : confs) {\n            paths.addAll(resolve(conf));\n        }\n        return paths;\n    }","id":4594,"modified_method":"public List<File> resolveTask(String taskName) {\n        Set<String> confs = confs4Task.get(taskName);\n        if (!GUtil.isTrue(confs)) {\n            throw new InvalidUserDataException(\"Task $taskName is not mapped to any conf!\");\n        }\n        List<File> paths = new ArrayList<File>();\n        for (String conf : confs) {\n            paths.addAll(resolve(conf));\n        }\n        return paths;\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"public DependencyManager addConfiguration(String configuration) {\n        return addConfiguration(new org.apache.ivy.core.module.descriptor.Configuration(configuration));\n    }","id":4595,"modified_method":"public Configuration addConfiguration(String configuration) {\n        return addConfiguration(configuration, null, null);\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"public DependencyManager linkConfWithTask(String conf, String task) {\n        if (!GUtil.isTrue(conf) || !GUtil.isTrue(task)) {\n            throw new InvalidUserDataException(\"Conf and tasks must be specified!\");\n        }\n        if (tasks4Conf.get(conf) == null) {\n            tasks4Conf.put(conf, new HashSet());\n        }\n        if (confs4Task.get(task) == null) {\n            confs4Task.put(task, new HashSet<String>());\n        }\n        tasks4Conf.get(conf).add(task);\n        confs4Task.get(task).add(conf);\n        return this;\n    }","id":4596,"modified_method":"public DependencyManager linkConfWithTask(String conf, String task) {\n        if (!GUtil.isTrue(conf) || !GUtil.isTrue(task)) {\n            throw new InvalidUserDataException(\"Conf and tasks must be specified!\");\n        }\n        if (tasks4Conf.get(conf) == null) {\n            tasks4Conf.put(conf, new HashSet<String>());\n        }\n        if (confs4Task.get(task) == null) {\n            confs4Task.put(task, new HashSet<String>());\n        }\n        tasks4Conf.get(conf).add(task);\n        confs4Task.get(task).add(conf);\n        return this;\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"public Map<String, org.apache.ivy.core.module.descriptor.Configuration> getConfigurations() {\n        Map<String, org.apache.ivy.core.module.descriptor.Configuration> configurations\n                = new HashMap<String, org.apache.ivy.core.module.descriptor.Configuration>();\n        for (Map.Entry<String, DefaultConfiguration> entry : this.configurations.entrySet()) {\n            configurations.put(entry.getKey(), entry.getValue().getIvyConfiguration());\n        }\n        return configurations;\n    }","id":4597,"modified_method":"public Map<String, Configuration> getConfigurations() {\n        return new HashMap<String, Configuration>(configurations);\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"public Configuration configuration(String name) throws UnknownConfigurationException {\n        Configuration configuration = configurations.get(name);\n        if (configuration == null) {\n            throw new UnknownConfigurationException(String.format(\"Configuration with name '%s' not found.\", name));\n        }\n        return configuration;\n    }","id":4598,"modified_method":"public Configuration configuration(String name) throws UnknownConfigurationException {\n        Configuration configuration = findConfiguration(name);\n        if (configuration == null) {\n            throw new UnknownConfigurationException(String.format(\"Configuration with name '%s' not found.\", name));\n        }\n        return configuration;\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"public DependencyManager addConfiguration(org.apache.ivy.core.module.descriptor.Configuration configuration) {\n        configurations.put(configuration.getName(), new DefaultConfiguration(configuration.getName(), configuration));\n        return this;\n    }","id":4599,"modified_method":"public Configuration addConfiguration(org.apache.ivy.core.module.descriptor.Configuration ivyConfiguration) {\n        return addConfiguration(ivyConfiguration.getName(), null, ivyConfiguration);\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"Ivy getIvy() {\n        return ivy(new ArrayList());\n    }","id":4600,"modified_method":"Ivy getIvy() {\n        return ivy(new ArrayList<DependencyResolver>());\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"public DefaultConfiguration(String name, org.apache.ivy.core.module.descriptor.Configuration ivyConfiguration) {\n        this.name = name;\n        this.ivyConfiguration = ivyConfiguration;\n    }","id":4601,"modified_method":"public DefaultConfiguration(String name, DependencyManagerInternal dependencyManager,\n                                org.apache.ivy.core.module.descriptor.Configuration ivyConfiguration) {\n        this.name = name;\n        this.dependencyManager = dependencyManager;\n        if (ivyConfiguration != null) {\n            visibility = ivyConfiguration.getVisibility();\n            transitive = ivyConfiguration.isTransitive();\n            extendsFrom.addAll(Arrays.asList(ivyConfiguration.getExtends()));\n            description = ivyConfiguration.getDescription();\n            deprecated = ivyConfiguration.getDeprecated();\n        }\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"public org.apache.ivy.core.module.descriptor.Configuration getIvyConfiguration() {\n        return ivyConfiguration;\n    }","id":4602,"modified_method":"public org.apache.ivy.core.module.descriptor.Configuration getIvyConfiguration() {\n        String[] superConfigs = extendsFrom.toArray(new String[extendsFrom.size()]);\n        Arrays.sort(superConfigs);\n        return new org.apache.ivy.core.module.descriptor.Configuration(name, visibility, description, superConfigs,\n                transitive, deprecated);\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"public void apply(Project project, PluginRegistry pluginRegistry, Map customValues) {\n        pluginRegistry.apply(JavaPlugin.class, project, pluginRegistry, customValues);\n        GroovyPluginConvention groovyPluginConvention = new GroovyPluginConvention(project, customValues);\n        project.getConvention().getPlugins().put(\"groovy\", groovyPluginConvention);\n\n        configureCompile(project);\n\n        configureTestCompile(project);\n\n        ((Test) project.task(TEST)).getOptions().getForkOptions().setForkMode(ForkMode.ONCE);\n\n        configureJavadoc(project);\n\n        configureGroovydoc(project);\n\n        project.getDependencies().addConfiguration(new Configuration(GROOVY, Visibility.PRIVATE, null, null, false, null));\n        project.getDependencies().addConfiguration(new Configuration(JavaPlugin.COMPILE, Visibility.PRIVATE, null, WrapUtil.toArray(GROOVY), false, null));\n    }","id":4603,"modified_method":"public void apply(Project project, PluginRegistry pluginRegistry, Map customValues) {\n        pluginRegistry.apply(JavaPlugin.class, project, pluginRegistry, customValues);\n        GroovyPluginConvention groovyPluginConvention = new GroovyPluginConvention(project, customValues);\n        project.getConvention().getPlugins().put(\"groovy\", groovyPluginConvention);\n\n        configureCompile(project);\n\n        configureTestCompile(project);\n\n        ((Test) project.task(TEST)).getOptions().getForkOptions().setForkMode(ForkMode.ONCE);\n\n        configureJavadoc(project);\n\n        configureGroovydoc(project);\n\n        project.getDependencies().addConfiguration(new Configuration(GROOVY, Visibility.PRIVATE, null, null, false, null));\n        project.getDependencies().configuration(JavaPlugin.COMPILE).extendsConfiguration(WrapUtil.toArray(GROOVY));\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"private void addDependencyDescriptors(DefaultModuleDescriptor moduleDescriptor, BaseDependencyManager dependencyManager,\n                                          boolean includeProjectDependencies) {\n        for (Dependency dependency : dependencyManager.getDependencies()) {\n            if (includeProjectDependencies || !(dependency instanceof ProjectDependency)) {\n                moduleDescriptor.addDependency(dependency.createDepencencyDescriptor(moduleDescriptor));\n            }\n        }\n        for (DependencyDescriptor dependencyDescriptor : dependencyManager.getDependencyDescriptors()) {\n            moduleDescriptor.addDependency(dependencyDescriptor);\n        }\n    }","id":4604,"modified_method":"private void addDependencyDescriptors(DefaultModuleDescriptor moduleDescriptor, DependencyManagerInternal dependencyManager,\n                                          boolean includeProjectDependencies) {\n        for (Dependency dependency : dependencyManager.getDependencies()) {\n            if (includeProjectDependencies || !(dependency instanceof ProjectDependency)) {\n                moduleDescriptor.addDependency(dependency.createDepencencyDescriptor(moduleDescriptor));\n            }\n        }\n        for (DependencyDescriptor dependencyDescriptor : dependencyManager.getDependencyDescriptors()) {\n            moduleDescriptor.addDependency(dependencyDescriptor);\n        }\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"private void addArtifacts(DefaultModuleDescriptor moduleDescriptor, BaseDependencyManager dependencyManager) {\n        for (String conf : dependencyManager.getArtifacts().keySet()) {\n            List<GradleArtifact> gradleArtifacts = dependencyManager.getArtifacts().get(conf);\n            for (GradleArtifact gradleArtifact : gradleArtifacts) {\n                logger.debug(\"Add gradleArtifact: {} to configuration={}\", gradleArtifact, conf);\n                moduleDescriptor.addArtifact(conf, gradleArtifact.createIvyArtifact(dependencyManager.createModuleRevisionId()));\n            }\n        }\n        for (String conf : dependencyManager.getArtifactDescriptors().keySet()) {\n            List<Artifact> artifacts = dependencyManager.getArtifactDescriptors().get(conf);\n            for (Artifact artifact : artifacts) {\n                moduleDescriptor.addArtifact(conf, artifact);\n            }\n        }\n    }","id":4605,"modified_method":"private void addArtifacts(DefaultModuleDescriptor moduleDescriptor, DependencyManagerInternal dependencyManager) {\n        for (String conf : dependencyManager.getArtifacts().keySet()) {\n            List<GradleArtifact> gradleArtifacts = dependencyManager.getArtifacts().get(conf);\n            for (GradleArtifact gradleArtifact : gradleArtifacts) {\n                logger.debug(\"Add gradleArtifact: {} to configuration={}\", gradleArtifact, conf);\n                moduleDescriptor.addArtifact(conf, gradleArtifact.createIvyArtifact(dependencyManager.createModuleRevisionId()));\n            }\n        }\n        for (String conf : dependencyManager.getArtifactDescriptors().keySet()) {\n            List<Artifact> artifacts = dependencyManager.getArtifactDescriptors().get(conf);\n            for (Artifact artifact : artifacts) {\n                moduleDescriptor.addArtifact(conf, artifact);\n            }\n        }\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"private void addExcludes(DefaultModuleDescriptor moduleDescriptor, BaseDependencyManager dependencyManager) {\n        for (ExcludeRule excludeRule : dependencyManager.getExcludeRules().getRules()) {\n            moduleDescriptor.addExcludeRule(excludeRule);\n        }\n    }","id":4606,"modified_method":"private void addExcludes(DefaultModuleDescriptor moduleDescriptor, DependencyManagerInternal dependencyManager) {\n        for (ExcludeRule excludeRule : dependencyManager.getExcludeRules().getRules()) {\n            moduleDescriptor.addExcludeRule(excludeRule);\n        }\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"public ModuleDescriptor convert(BaseDependencyManager dependencyManager, boolean includeProjectDependencies) {\n        String status = DependencyManager.DEFAULT_STATUS;\n        if (dependencyManager.getProject().hasProperty(\"status\")) {\n            status = (String) dependencyManager.getProject().property(\"status\");\n        }\n        DefaultModuleDescriptor moduleDescriptor = new DefaultModuleDescriptor(dependencyManager.createModuleRevisionId(),\n                status, null);\n        for (Configuration configuration : dependencyManager.getConfigurations().values()) {\n            moduleDescriptor.addConfiguration(configuration);\n        }\n        addDependencyDescriptors(moduleDescriptor, dependencyManager, includeProjectDependencies);\n        addArtifacts(moduleDescriptor, dependencyManager);\n        addExcludes(moduleDescriptor, dependencyManager);\n        moduleDescriptor.addConflictManager(new ModuleId(ExactPatternMatcher.ANY_EXPRESSION,\n                    ExactPatternMatcher.ANY_EXPRESSION), ExactPatternMatcher.INSTANCE,\n                new LatestConflictManager(new LatestRevisionStrategy()));\n        return moduleDescriptor;\n    }","id":4607,"modified_method":"public ModuleDescriptor convert(DependencyManagerInternal dependencyManager, boolean includeProjectDependencies) {\n        String status = DependencyManager.DEFAULT_STATUS;\n        if (dependencyManager.getProject().hasProperty(\"status\")) {\n            status = (String) dependencyManager.getProject().property(\"status\");\n        }\n        DefaultModuleDescriptor moduleDescriptor = new DefaultModuleDescriptor(dependencyManager.createModuleRevisionId(),\n                status, null);\n        for (Configuration configuration : dependencyManager.getConfigurations().values()) {\n            moduleDescriptor.addConfiguration(((DefaultConfiguration) configuration).getIvyConfiguration());\n        }\n        addDependencyDescriptors(moduleDescriptor, dependencyManager, includeProjectDependencies);\n        addArtifacts(moduleDescriptor, dependencyManager);\n        addExcludes(moduleDescriptor, dependencyManager);\n        moduleDescriptor.addConflictManager(new ModuleId(ExactPatternMatcher.ANY_EXPRESSION,\n                    ExactPatternMatcher.ANY_EXPRESSION), ExactPatternMatcher.INSTANCE,\n                new LatestConflictManager(new LatestRevisionStrategy()));\n        return moduleDescriptor;\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"public void configureDependencyManager(DependencyManager dependencyManager) {\n        dependencyManager.addConfiguration(\n                new Configuration(PROVIDED_COMPILE, Configuration.Visibility.PRIVATE, null, null, true, null));\n        dependencyManager.addConfiguration(\n                new Configuration(PROVIDED_RUNTIME, Configuration.Visibility.PRIVATE, null, new String[]{PROVIDED_COMPILE}, true, null));\n        dependencyManager.addConfiguration(new Configuration(JavaPlugin.COMPILE, Configuration.Visibility.PRIVATE, null, new String[]\n                {PROVIDED_COMPILE}, false, null));\n        dependencyManager.addConfiguration(new Configuration(JavaPlugin.RUNTIME, Configuration.Visibility.PRIVATE, null, new String[]\n                {JavaPlugin.COMPILE, PROVIDED_RUNTIME}, true, null));\n        configureMavenScopeMappings(dependencyManager.getMaven());\n    }","id":4608,"modified_method":"public void configureDependencyManager(DependencyManager dependencyManager) {\n        dependencyManager.addConfiguration(\n                new Configuration(PROVIDED_COMPILE, Configuration.Visibility.PRIVATE, null, null, true, null));\n        dependencyManager.addConfiguration(\n                new Configuration(PROVIDED_RUNTIME, Configuration.Visibility.PRIVATE, null, new String[]{PROVIDED_COMPILE}, true, null));\n        dependencyManager.configuration(JavaPlugin.COMPILE).extendsConfiguration(new String[]{PROVIDED_COMPILE});\n        dependencyManager.configuration(JavaPlugin.RUNTIME).extendsConfiguration(new String[]{PROVIDED_RUNTIME});\n        configureMavenScopeMappings(dependencyManager.getMaven());\n    }","commit_id":"34a64a63773d098ed5ca9410e6080b88f2c0fff6","url":"https://github.com/gradle/gradle"},{"original_method":"/**\n     * Generates an ejb jar and optionnaly an ejb-client jar.\n     *\n     * @todo Add license files in META-INF directory.\n     */\n    public void execute()\n        throws MojoExecutionException\n    {\n        if ( getLog().isInfoEnabled() )\n        {\n            getLog().info( \"Building ejb \" + jarName + \" with ejbVersion \" + ejbVersion );\n        }\n\n        File jarFile = new File( basedir, jarName + \".jar\" );\n\n        MavenArchiver archiver = new MavenArchiver();\n\n        archiver.setArchiver( jarArchiver );\n\n        archiver.setOutputFile( jarFile );\n\n        File deploymentDescriptor = new File( outputDirectory, EJB_JAR_XML );\n\n        /* test EJB version compliance */\n        if ( !ejbVersion.matches( \"\\\\A[2-3]\\\\.[0-9]\\\\z\" ) )\n        {\n            throw new MojoExecutionException( \"ejbVersion is not valid: \" + ejbVersion\n                + \". Must be 2.x or 3.x (where x is a digit)\" );\n        }\n\n        if ( ejbVersion.matches( \"\\\\A2\\\\.[0-9]\\\\z\" ) && !deploymentDescriptor.exists() )\n        {\n            throw new MojoExecutionException( \"Error assembling EJB: \" + EJB_JAR_XML\n                + \" is required for ejbVersion 2.x\" );\n        }\n\n        try\n        {\n            archiver.getArchiver().addDirectory( new File( outputDirectory ), DEFAULT_INCLUDES,\n                                                 new String[] { EJB_JAR_XML, \"**/package.html\" } );\n\n\n            if ( deploymentDescriptor.exists() )\n            {\n                archiver.getArchiver().addFile( deploymentDescriptor, EJB_JAR_XML );\n            }\n            \n            // create archive\n            archiver.createArchive( project, archive );\n        }\n        catch ( ArchiverException e )\n        {\n            throw new MojoExecutionException( \"There was a problem creating the EJB archive: \" + e.getMessage() , e );\n        }\n        catch ( ManifestException e )\n        {\n            throw new MojoExecutionException( \"There was a problem creating the EJB archive: \" + e.getMessage() , e );\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"There was a problem creating the EJB archive: \" + e.getMessage() , e );\n        }\n        catch ( DependencyResolutionRequiredException e )\n        {\n            throw new MojoExecutionException( \"There was a problem creating the EJB archive: \" + e.getMessage() , e );\n        }\n\n        project.getArtifact().setFile( jarFile );\n\n        if ( new Boolean( generateClient ).booleanValue() )\n        {\n            getLog().info( \"Building ejb client \" + jarName + \"-client\" );\n\n            String[] excludes = DEFAULT_EXCLUDES;\n            String[] includes = DEFAULT_INCLUDES;\n\n            if ( clientIncludes != null && !clientIncludes.isEmpty() )\n            {\n                includes = (String[]) clientIncludes.toArray( EMPTY_STRING_ARRAY );\n            }\n\n            if ( clientExcludes != null && !clientExcludes.isEmpty() )\n            {\n                excludes = (String[]) clientExcludes.toArray( EMPTY_STRING_ARRAY );\n            }\n\n            File clientJarFile = new File( basedir, jarName + \"-client.jar\" );\n\n            MavenArchiver clientArchiver = new MavenArchiver();\n\n            clientArchiver.setArchiver( clientJarArchiver );\n\n            clientArchiver.setOutputFile( clientJarFile );\n\n            try\n            {\n                clientArchiver.getArchiver().addDirectory( new File( outputDirectory ), includes, excludes );\n\n                // create archive\n                clientArchiver.createArchive( project, archive );\n\n            }\n            catch ( ArchiverException e )\n            {\n                throw new MojoExecutionException(\n                    \"There was a problem creating the EJB client archive: \" + e.getMessage(), e );\n            }\n            catch ( ManifestException e )\n            {\n                throw new MojoExecutionException(\n                    \"There was a problem creating the EJB client archive: \" + e.getMessage(), e );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException(\n                    \"There was a problem creating the EJB client archive: \" + e.getMessage(), e );\n            }\n            catch ( DependencyResolutionRequiredException e )\n            {\n                throw new MojoExecutionException(\n                    \"There was a problem creating the EJB client archive: \" + e.getMessage(), e );\n            }\n\n            // TODO: shouldn't need classifer\n            projectHelper.attachArtifact( project, \"ejb-client\", \"client\", clientJarFile );\n        }\n    }","id":4609,"modified_method":"/**\n     * Generates an ejb jar and optionnaly an ejb-client jar.\n     *\n     * @todo Add license files in META-INF directory.\n     */\n    public void execute()\n        throws MojoExecutionException\n    {\n        if ( getLog().isInfoEnabled() )\n        {\n            getLog().info( \"Building ejb \" + jarName + \" with ejbVersion \" + ejbVersion );\n        }\n\n        File jarFile = getEJBJarFile( basedir, jarName, classifier );\n\n        MavenArchiver archiver = new MavenArchiver();\n\n        archiver.setArchiver( jarArchiver );\n\n        archiver.setOutputFile( jarFile );\n\n        File deploymentDescriptor = new File( outputDirectory, EJB_JAR_XML );\n\n        /* test EJB version compliance */\n        if ( !ejbVersion.matches( \"\\\\A[2-3]\\\\.[0-9]\\\\z\" ) )\n        {\n            throw new MojoExecutionException(\n                \"ejbVersion is not valid: \" + ejbVersion + \". Must be 2.x or 3.x (where x is a digit)\" );\n        }\n\n        if ( ejbVersion.matches( \"\\\\A2\\\\.[0-9]\\\\z\" ) && !deploymentDescriptor.exists() )\n        {\n            throw new MojoExecutionException(\n                \"Error assembling EJB: \" + EJB_JAR_XML + \" is required for ejbVersion 2.x\" );\n        }\n\n        try\n        {\n            archiver.getArchiver().addDirectory( new File( outputDirectory ), DEFAULT_INCLUDES,\n                                                 new String[]{EJB_JAR_XML, \"**/package.html\"} );\n\n            if ( deploymentDescriptor.exists() )\n            {\n                archiver.getArchiver().addFile( deploymentDescriptor, EJB_JAR_XML );\n            }\n\n            // create archive\n            archiver.createArchive( project, archive );\n        }\n        catch ( ArchiverException e )\n        {\n            throw new MojoExecutionException( \"There was a problem creating the EJB archive: \" + e.getMessage(), e );\n        }\n        catch ( ManifestException e )\n        {\n            throw new MojoExecutionException( \"There was a problem creating the EJB archive: \" + e.getMessage(), e );\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"There was a problem creating the EJB archive: \" + e.getMessage(), e );\n        }\n        catch ( DependencyResolutionRequiredException e )\n        {\n            throw new MojoExecutionException( \"There was a problem creating the EJB archive: \" + e.getMessage(), e );\n        }\n\n        // Handle the classifier if necessary\n        if ( classifier != null )\n        {\n            projectHelper.attachArtifact( project, \"ejb\", classifier, jarFile );\n        }\n        else\n        {\n            project.getArtifact().setFile( jarFile );\n        }\n\n        if ( new Boolean( generateClient ).booleanValue() )\n        {\n            getLog().info( \"Building ejb client \" + jarName + \"-client\" );\n\n            String[] excludes = DEFAULT_EXCLUDES;\n            String[] includes = DEFAULT_INCLUDES;\n\n            if ( clientIncludes != null && !clientIncludes.isEmpty() )\n            {\n                includes = (String[]) clientIncludes.toArray( EMPTY_STRING_ARRAY );\n            }\n\n            if ( clientExcludes != null && !clientExcludes.isEmpty() )\n            {\n                excludes = (String[]) clientExcludes.toArray( EMPTY_STRING_ARRAY );\n            }\n\n            File clientJarFile = new File( basedir, jarName + \"-client.jar\" );\n\n            MavenArchiver clientArchiver = new MavenArchiver();\n\n            clientArchiver.setArchiver( clientJarArchiver );\n\n            clientArchiver.setOutputFile( clientJarFile );\n\n            try\n            {\n                clientArchiver.getArchiver().addDirectory( new File( outputDirectory ), includes, excludes );\n\n                // create archive\n                clientArchiver.createArchive( project, archive );\n\n            }\n            catch ( ArchiverException e )\n            {\n                throw new MojoExecutionException(\n                    \"There was a problem creating the EJB client archive: \" + e.getMessage(), e );\n            }\n            catch ( ManifestException e )\n            {\n                throw new MojoExecutionException(\n                    \"There was a problem creating the EJB client archive: \" + e.getMessage(), e );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException(\n                    \"There was a problem creating the EJB client archive: \" + e.getMessage(), e );\n            }\n            catch ( DependencyResolutionRequiredException e )\n            {\n                throw new MojoExecutionException(\n                    \"There was a problem creating the EJB client archive: \" + e.getMessage(), e );\n            }\n\n            // TODO: shouldn't need classifer\n            projectHelper.attachArtifact( project, \"ejb-client\", \"client\", clientJarFile );\n        }\n    }","commit_id":"c824abf46e338db8524215721fd6e3619f600f4a","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * tests if the mojo throws an exception when the EJB version is < 3.0\n     * and no deployment descriptor is present. The case with deployment descriptor\n     * present is covered by the testJarCreation* tests.\n     *\n     * @throws Exception\n     */\n    public void testEjbCompliance_2_1_WithoutDescriptor()\n        throws Exception\n    {\n        File pomFile = new File( getBasedir(), defaultPOMPath );\n        EjbMojo mojo = (EjbMojo) lookupMojo( \"ejb\", pomFile );\n\n        assertNotNull( mojo );\n\n        // this will automatically create the isolated\n        // test environment\n        MavenProjectResourcesStub project = new MavenProjectResourcesStub( \"testEjbCompliance_2_1_WithoutDescriptor\" );\n\n        // create the necessary test files\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        // configure mojo\n        String jarName = \"testJar\";\n\n        setVariableValueToObject( mojo, \"basedir\", project.getBuild().getDirectory() );\n        setVariableValueToObject( mojo, \"outputDirectory\", project.getBuild().getOutputDirectory() );\n        setVariableValueToObject( mojo, \"jarName\", jarName );\n        setVariableValueToObject( mojo, \"generateClient\", \"false\" );\n        setVariableValueToObject( mojo, \"clientExcludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"clientIncludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"project\", project );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        try\n        {\n            mojo.execute();\n            fail( \"Exception should be thrown: No deployment descriptor present.\" );\n        }\n        catch ( MojoExecutionException e )\n        {\n        }\n    }","id":4610,"modified_method":"/**\n     * Tests if the mojo throws an exception when the EJB version is < 3.0\n     * and no deployment descriptor is present. The case with deployment descriptor\n     * present is covered by previous tests.\n     *\n     * @throws Exception if any exception occurs\n     */\n    public void testEjbComplianceVersionTwoDotOneWithoutDescriptor()\n        throws Exception\n    {\n        final MavenProjectResourcesStub project = createTestProject( \"compliance-nodescriptor-2.1\" );\n        final EjbMojo mojo = lookupMojoWithDefaultSettings( project );\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        setVariableValueToObject( mojo, \"generateClient\", \"false\" );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        try\n        {\n            mojo.execute();\n            fail( \"Exception should be thrown: No deployment descriptor present.\" );\n        }\n        catch ( MojoExecutionException e )\n        {\n            // OK\n        }\n    }","commit_id":"c824abf46e338db8524215721fd6e3619f600f4a","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * check test environment\n     *\n     * @throws Exception\n     */\n    public void testTestEnvironment()\n        throws Exception\n    {\n        File pomFile = new File( getBasedir(), defaultPOMPath );\n        EjbMojo mojo = (EjbMojo) lookupMojo( \"ejb\", pomFile );\n\n        assertNotNull( mojo );\n    }","id":4611,"modified_method":"/**\n     * check test environment\n     *\n     * @throws Exception if any exception occurs\n     */\n    public void testTestEnvironment()\n        throws Exception\n    {\n        // Perform lookup on the Mojo to make sure everything is ok\n        lookupMojo();\n    }","commit_id":"c824abf46e338db8524215721fd6e3619f600f4a","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Tests if the jar is created under EJB version 3.0 with\n     * deployment descriptor present.\n     *\n     * @throws Exception\n     */\n    public void testEjbCompliance_3_0_WithDescriptor()\n        throws Exception\n    {\n        File pomFile = new File( getBasedir(), defaultPOMPath );\n        EjbMojo mojo = (EjbMojo) lookupMojo( \"ejb\", pomFile );\n\n        assertNotNull( mojo );\n\n        // this will automatically create the isolated\n        // test environment\n        MavenProjectResourcesStub project = new MavenProjectResourcesStub( \"testEjbCompliance_3_0_WithDescriptor\" );\n\n        // create the necessary test files\n\n        // put this on the target dir\n        project.addFile( \"META-INF/ejb-jar.xml\", MavenProjectResourcesStub.OUTPUT_FILE );\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        // configure mojo\n        String jarName = \"testJar\";\n\n        setVariableValueToObject( mojo, \"basedir\", project.getBuild().getDirectory() );\n        setVariableValueToObject( mojo, \"outputDirectory\", project.getBuild().getOutputDirectory() );\n        setVariableValueToObject( mojo, \"jarName\", jarName );\n        setVariableValueToObject( mojo, \"generateClient\", \"false\" );\n        setVariableValueToObject( mojo, \"clientExcludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"clientIncludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"project\", project );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"3.0\" );\n\n        mojo.execute();\n\n        // validate jar creation\n        String checkedJarFile = project.getBuild().getDirectory() + \"/\" + jarName + \".jar\";\n        assertTrue( FileUtils.fileExists( checkedJarFile ) );\n    }","id":4612,"modified_method":"/**\n     * Tests if the jar is created under EJB version 3.0 with\n     * deployment descriptor present.\n     *\n     * @throws Exception if any exception occurs\n     */\n    public void testEjbComplianceVersionThreeWithDescriptor()\n        throws Exception\n    {\n\n        final MavenProjectResourcesStub project = createTestProject( \"compliance-descriptor-3\" );\n        final EjbMojo mojo = lookupMojoWithDefaultSettings( project );\n\n        // put this on the target dir\n        project.addFile( \"META-INF/ejb-jar.xml\", MavenProjectResourcesStub.OUTPUT_FILE );\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        setVariableValueToObject( mojo, \"generateClient\", \"false\" );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"3.0\" );\n\n        mojo.execute();\n\n        assertJarCreation( project, true, false );\n\n    }","commit_id":"c824abf46e338db8524215721fd6e3619f600f4a","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * basic jar creation test with client jar\n     *\n     * @throws Exception\n     */\n    public void testJarCreation_WithClientJar()\n        throws Exception\n    {\n        File pomFile = new File( getBasedir(), defaultPOMPath );\n        EjbMojo mojo = (EjbMojo) lookupMojo( \"ejb\", pomFile );\n\n        assertNotNull( mojo );\n\n        // this will automatically create the isolated\n        // test environment\n        MavenProjectResourcesStub project = new MavenProjectResourcesStub( \"jarCreation_WithClientJar\" );\n\n        // set up test files\n\n        // put this on the target dir\n        project.addFile( \"META-INF/ejb-jar.xml\", MavenProjectResourcesStub.OUTPUT_FILE );\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        // configure mojo\n        String jarName = \"testJar\";\n\n        setVariableValueToObject( mojo, \"basedir\", project.getBuild().getDirectory() );\n        setVariableValueToObject( mojo, \"outputDirectory\", project.getBuild().getOutputDirectory() );\n        setVariableValueToObject( mojo, \"jarName\", jarName );\n        setVariableValueToObject( mojo, \"generateClient\", \"true\" );\n        setVariableValueToObject( mojo, \"clientExcludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"clientIncludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"project\", project );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        mojo.execute();\n\n        // validate jar creation\n        String checkedJarFile = project.getBuild().getDirectory() + \"/\" + jarName + \".jar\";\n        String checkedClientJarFile = project.getBuild().getDirectory() + \"/\" + jarName + \"-client.jar\";\n\n        assertTrue( FileUtils.fileExists( checkedJarFile ) );\n        assertTrue( FileUtils.fileExists( checkedClientJarFile ) );\n    }","id":4613,"modified_method":"/**\n     * Basic jar creation test with client jar.\n     *\n     * @throws Exception if any exception occurs\n     */\n    public void testDefaultWithClientJar()\n        throws Exception\n    {\n        final MavenProjectResourcesStub project = createTestProject( \"default-client\" );\n        final EjbMojo mojo = lookupMojoWithDefaultSettings( project );\n\n        setupDefaultProject( project );\n\n        setVariableValueToObject( mojo, \"generateClient\", \"true\" );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        mojo.execute();\n\n        assertJarCreation( project, true, true );\n    }","commit_id":"c824abf46e338db8524215721fd6e3619f600f4a","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * client jar inclusion test\n     *\n     * @throws Exception\n     */\n    public void testClientJarInclusions()\n        throws Exception\n    {\n        File pomFile = new File( getBasedir(), defaultPOMPath );\n        EjbMojo mojo = (EjbMojo) lookupMojo( \"ejb\", pomFile );\n\n        assertNotNull( mojo );\n\n        // this will automatically create the isolated\n        // test environment\n        MavenProjectResourcesStub project = new MavenProjectResourcesStub( \"clientJarInclusions\" );\n\n        // put this on the target output dir\n        project.addFile( \"META-INF/ejb-jar.xml\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppInclude.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppExclude.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        // set up test data\n        String jarName = \"testJar\";\n        LinkedList inclusions = new LinkedList();\n\n        inclusions.add( \"**/*Include.class\" );\n\n        setVariableValueToObject( mojo, \"basedir\", project.getBuild().getDirectory() );\n        setVariableValueToObject( mojo, \"outputDirectory\", project.getBuild().getOutputDirectory() );\n        setVariableValueToObject( mojo, \"jarName\", jarName );\n        setVariableValueToObject( mojo, \"generateClient\", \"true\" );\n        setVariableValueToObject( mojo, \"clientExcludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"clientIncludes\", inclusions );\n        setVariableValueToObject( mojo, \"project\", project );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        mojo.execute();\n\n        // validate jar creation\n        JarContentChecker inclusionChecker = new JarContentChecker();\n        JarContentChecker exclusionChecker = new JarContentChecker();\n        String checkedJarFile = project.getBuild().getDirectory() + \"/\" + jarName + \"-client.jar\";\n\n        // set expected jar contents\n        inclusionChecker.addFile( new File( \"META-INF/MANIFEST.MF\" ) );\n        inclusionChecker.addFile( new File( \"org/sample/ejb/AppInclude.class\" ) );\n\n        // read the packaging conventions first for this one\n        inclusionChecker.addFile( new File( \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.xml\" ) );\n        inclusionChecker.addFile( new File( \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.properties\" ) );\n\n        // files not included\n        exclusionChecker.addFile( new File( \"META-INF/ejb-jar.xml\" ) );\n        exclusionChecker.addFile( new File( \"org/sample/ejb/AppExclude.class\" ) );\n\n        assertTrue( FileUtils.fileExists( checkedJarFile ) );\n        assertTrue( inclusionChecker.isOK( new JarFile( checkedJarFile ) ) );\n        assertFalse( exclusionChecker.isOK( new JarFile( checkedJarFile ) ) );\n    }","id":4614,"modified_method":"/**\n     * Client jar inclusion test.\n     *\n     * @throws Exception if any exception occurs\n     */\n    public void testClientJarInclusions()\n        throws Exception\n    {\n        final LinkedList inclusions = new LinkedList();\n        inclusions.add( \"**/*Include.class\" );\n\n        final MavenProjectResourcesStub project = createTestProject( \"client-includes\" );\n        final EjbMojo mojo = lookupMojoWithSettings( project, inclusions, new LinkedList() );\n\n        // put this on the target output dir\n        project.addFile( \"META-INF/ejb-jar.xml\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppInclude.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppExclude.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        setVariableValueToObject( mojo, \"generateClient\", \"true\" );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        mojo.execute();\n\n        assertJarCreation( project, true, true );\n        assertClientJarContent( project, new String[]{\"META-INF/MANIFEST.MF\",\n            \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.xml\",\n            \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.properties\", \"org/sample/ejb/AppInclude.class\"},\n                                         new String[]{\"META-INF/ejb-jar.xml\", \"org/sample/ejb/AppExclude.class\"} );\n    }","commit_id":"c824abf46e338db8524215721fd6e3619f600f4a","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * default ejb jar inclusion and exclusion\n     *\n     * @throws Exception\n     */\n    public void testDefaultInclusionsExclusions()\n        throws Exception\n    {\n        File pomFile = new File( getBasedir(), defaultPOMPath );\n        EjbMojo mojo = (EjbMojo) lookupMojo( \"ejb\", pomFile );\n\n        assertNotNull( mojo );\n\n        // this will automatically create the isolated\n        // test environment\n        MavenProjectResourcesStub project = new MavenProjectResourcesStub( \"defaultInclusionsExclusions\" );\n\n        // put this on the target output dir\n        project.addFile( \"META-INF/ejb-jar.xml\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppBean.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppCMP.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppSession.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        // set up test data\n        String jarName = \"testJar\";\n\n        setVariableValueToObject( mojo, \"basedir\", project.getBuild().getDirectory() );\n        setVariableValueToObject( mojo, \"outputDirectory\", project.getBuild().getOutputDirectory() );\n        setVariableValueToObject( mojo, \"jarName\", jarName );\n        setVariableValueToObject( mojo, \"generateClient\", \"false\" );\n        setVariableValueToObject( mojo, \"clientExcludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"clientIncludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"project\", project );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        mojo.execute();\n\n        // validate jar creation\n        JarContentChecker inclusionChecker = new JarContentChecker();\n        String checkedJarFile = project.getBuild().getDirectory() + \"/\" + jarName + \".jar\";\n\n        // set expected jar contents\n        inclusionChecker.addFile( new File( \"META-INF/MANIFEST.MF\" ) );\n        inclusionChecker.addFile( new File( \"META-INF/ejb-jar.xml\" ) );\n        inclusionChecker.addFile( new File( \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.xml\" ) );\n        inclusionChecker.addFile( new File( \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.properties\" ) );\n        inclusionChecker.addFile( new File( \"org/sample/ejb/AppBean.class\" ) );\n        inclusionChecker.addFile( new File( \"org/sample/ejb/AppCMP.class\" ) );\n        inclusionChecker.addFile( new File( \"org/sample/ejb/AppSession.class\" ) );\n\n        assertTrue( FileUtils.fileExists( checkedJarFile ) );\n        assertTrue( inclusionChecker.isOK( new JarFile( checkedJarFile ) ) );\n    }","id":4615,"modified_method":"/**\n     * Default ejb jar inclusion and exclusion test.\n     *\n     * @throws Exception if any exception occurs\n     */\n    public void testDefaultInclusionsExclusions()\n        throws Exception\n    {\n\n        final MavenProjectResourcesStub project = createTestProject( \"includes-excludes-default\" );\n        final EjbMojo mojo = lookupMojoWithDefaultSettings( project );\n\n        // put this on the target output dir\n        project.addFile( \"META-INF/ejb-jar.xml\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppBean.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppCMP.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppSession.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        setVariableValueToObject( mojo, \"generateClient\", \"false\" );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        mojo.execute();\n\n        assertJarCreation( project, true, false );\n        assertJarContent( project, new String[]{\"META-INF/MANIFEST.MF\", \"META-INF/ejb-jar.xml\",\n            \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.xml\",\n            \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.properties\", \"org/sample/ejb/AppBean.class\",\n            \"org/sample/ejb/AppCMP.class\", \"org/sample/ejb/AppSession.class\"}, null );\n    }","commit_id":"c824abf46e338db8524215721fd6e3619f600f4a","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * basic jar creation test\n     *\n     * @throws Exception\n     */\n    public void testJarCreation_WithoutClientJar()\n        throws Exception\n    {\n        File pomFile = new File( getBasedir(), defaultPOMPath );\n        EjbMojo mojo = (EjbMojo) lookupMojo( \"ejb\", pomFile );\n\n        assertNotNull( mojo );\n\n        // this will automatically create the isolated\n        // test environment\n        MavenProjectResourcesStub project = new MavenProjectResourcesStub( \"jarCreation_WithoutClientJar\" );\n\n        // create the necessary test files\n\n        // put this on the target dir\n        project.addFile( \"META-INF/ejb-jar.xml\", MavenProjectResourcesStub.OUTPUT_FILE );\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        // configure mojo\n        String jarName = \"testJar\";\n\n        setVariableValueToObject( mojo, \"basedir\", project.getBuild().getDirectory() );\n        setVariableValueToObject( mojo, \"outputDirectory\", project.getBuild().getOutputDirectory() );\n        setVariableValueToObject( mojo, \"jarName\", jarName );\n        setVariableValueToObject( mojo, \"generateClient\", \"false\" );\n        setVariableValueToObject( mojo, \"clientExcludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"clientIncludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"project\", project );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        mojo.execute();\n\n        // validate jar creation\n        String checkedJarFile = project.getBuild().getDirectory() + \"/\" + jarName + \".jar\";\n        String checkedClientJarFile = project.getBuild().getDirectory() + \"/\" + jarName + \"-client.jar\";\n\n        assertTrue( FileUtils.fileExists( checkedJarFile ) );\n        assertFalse( FileUtils.fileExists( checkedClientJarFile ) );\n    }","id":4616,"modified_method":"/**\n     * Basic jar creation test.\n     *\n     * @throws Exception if any exception occurs\n     */\n    public void testDefaultWithoutClientJar()\n        throws Exception\n    {\n        final MavenProjectResourcesStub project = createTestProject( \"default-noclient\" );\n        final EjbMojo mojo = lookupMojoWithDefaultSettings( project );\n\n        setupDefaultProject( project );\n\n        setVariableValueToObject( mojo, \"generateClient\", \"false\" );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        mojo.execute();\n\n        assertJarCreation( project, true, false );\n    }","commit_id":"c824abf46e338db8524215721fd6e3619f600f4a","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * client jar exclusions test\n     *\n     * @throws Exception\n     */\n    public void testClientJarExclusions()\n        throws Exception\n    {\n        File pomFile = new File( getBasedir(), defaultPOMPath );\n        EjbMojo mojo = (EjbMojo) lookupMojo( \"ejb\", pomFile );\n\n        assertNotNull( mojo );\n\n        // this will automatically create the isolated\n        // test environment\n        MavenProjectResourcesStub project = new MavenProjectResourcesStub( \"clientJarExclusions\" );\n\n        // put this on the target output dir\n        project.addFile( \"META-INF/ejb-jar.xml\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppInclude.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppExclude.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        // set up test data\n        String jarName = \"testJar\";\n        LinkedList exclusions = new LinkedList();\n\n        exclusions.add( \"**/*Exclude.class\" );\n\n        setVariableValueToObject( mojo, \"basedir\", project.getBuild().getDirectory() );\n        setVariableValueToObject( mojo, \"outputDirectory\", project.getBuild().getOutputDirectory() );\n        setVariableValueToObject( mojo, \"jarName\", jarName );\n        setVariableValueToObject( mojo, \"generateClient\", \"true\" );\n        setVariableValueToObject( mojo, \"clientExcludes\", exclusions );\n        setVariableValueToObject( mojo, \"clientIncludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"project\", project );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        mojo.execute();\n\n        // validate jar creation\n        JarContentChecker inclusionChecker = new JarContentChecker();\n        JarContentChecker exclusionChecker = new JarContentChecker();\n        String checkedJarFile = project.getBuild().getDirectory() + \"/\" + jarName + \"-client.jar\";\n\n        // set expected jar contents\n        inclusionChecker.addFile( new File( \"META-INF/MANIFEST.MF\" ) );\n        inclusionChecker.addFile( new File( \"org/sample/ejb/AppInclude.class\" ) );\n\n        // read the packaging conventions first for this one\n        inclusionChecker.addFile( new File( \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.xml\" ) );\n        inclusionChecker.addFile( new File( \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.properties\" ) );\n\n        // files not included\n        exclusionChecker.addFile( new File( \"META-INF/ejb-jar.xml\" ) );\n        exclusionChecker.addFile( new File( \"org/sample/ejb/AppExclude.class\" ) );\n\n        assertTrue( FileUtils.fileExists( checkedJarFile ) );\n        assertTrue( inclusionChecker.isOK( new JarFile( checkedJarFile ) ) );\n        assertFalse( exclusionChecker.isOK( new JarFile( checkedJarFile ) ) );\n    }","id":4617,"modified_method":"/**\n     * Client jar exclusions test.\n     *\n     * @throws Exception if any exception occurs\n     */\n    public void testClientJarExclusions()\n        throws Exception\n    {\n\n        final LinkedList exclusions = new LinkedList();\n        exclusions.add( \"**/*Exclude.class\" );\n\n        final MavenProjectResourcesStub project = createTestProject( \"client-excludes\" );\n        final EjbMojo mojo = lookupMojoWithSettings( project, new LinkedList(), exclusions );\n\n        // put this on the target output dir\n        project.addFile( \"META-INF/ejb-jar.xml\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppInclude.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppExclude.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        setVariableValueToObject( mojo, \"generateClient\", \"true\" );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        mojo.execute();\n\n        assertJarCreation( project, true, true );\n        assertClientJarContent( project, new String[]{\"META-INF/MANIFEST.MF\",\n            \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.xml\",\n            \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.properties\", \"org/sample/ejb/AppInclude.class\"},\n                                         new String[]{\"META-INF/ejb-jar.xml\", \"org/sample/ejb/AppExclude.class\"} );\n\n    }","commit_id":"c824abf46e338db8524215721fd6e3619f600f4a","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * client jar default inclusion and exclusion test\n     *\n     * @throws Exception\n     */\n    public void testClientJarDefaultInclusionsExclusions()\n        throws Exception\n    {\n        File pomFile = new File( getBasedir(), defaultPOMPath );\n        EjbMojo mojo = (EjbMojo) lookupMojo( \"ejb\", pomFile );\n\n        assertNotNull( mojo );\n\n        // this will automatically create the isolated\n        // test environment\n        MavenProjectResourcesStub project = new MavenProjectResourcesStub( \"clientJarDefaultInclusionsExclusions\" );\n\n        // put this on the target output dir\n        project.addFile( \"META-INF/ejb-jar.xml\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppBean.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppCMP.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppSession.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppStub.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        // set up test data\n        String jarName = \"testJar\";\n\n        setVariableValueToObject( mojo, \"basedir\", project.getBuild().getDirectory() );\n        setVariableValueToObject( mojo, \"outputDirectory\", project.getBuild().getOutputDirectory() );\n        setVariableValueToObject( mojo, \"jarName\", jarName );\n        setVariableValueToObject( mojo, \"generateClient\", \"true\" );\n        setVariableValueToObject( mojo, \"clientExcludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"clientIncludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"project\", project );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        mojo.execute();\n\n        // validate jar creation\n        JarContentChecker inclusionChecker = new JarContentChecker();\n        JarContentChecker exclusionChecker = new JarContentChecker();\n        String checkedJarFile = project.getBuild().getDirectory() + \"/\" + jarName + \"-client.jar\";\n\n        // set expected jar contents\n        inclusionChecker.addFile( new File( \"META-INF/MANIFEST.MF\" ) );\n        inclusionChecker.addFile( new File( \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.xml\" ) );\n        inclusionChecker.addFile( new File( \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.properties\" ) );\n        inclusionChecker.addFile( new File( \"org/sample/ejb/AppStub.class\" ) );\n\n        // files not included\n        exclusionChecker.addFile( new File( \"META-INF/ejb-jar.xml\" ) );\n        exclusionChecker.addFile( new File( \"org/sample/ejb/AppBean.class\" ) );\n        exclusionChecker.addFile( new File( \"org/sample/ejb/AppCMP.class\" ) );\n        exclusionChecker.addFile( new File( \"org/sample/ejb/AppSession.class\" ) );\n\n        assertTrue( FileUtils.fileExists( checkedJarFile ) );\n        assertTrue( inclusionChecker.isOK( new JarFile( checkedJarFile ) ) );\n        assertFalse( exclusionChecker.isOK( new JarFile( checkedJarFile ) ) );\n    }","id":4618,"modified_method":"/**\n     * Client jar default inclusion and exclusion test.\n     *\n     * @throws Exception if any exception occurs\n     */\n    public void testClientJarDefaultInclusionsExclusions()\n        throws Exception\n    {\n\n        final MavenProjectResourcesStub project = createTestProject( \"includes-excludes-client\" );\n        final EjbMojo mojo = lookupMojoWithDefaultSettings( project );\n\n        // put this on the target output dir\n        project.addFile( \"META-INF/ejb-jar.xml\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppBean.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppCMP.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppSession.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n        project.addFile( \"org/sample/ejb/AppStub.class\", MavenProjectResourcesStub.OUTPUT_FILE );\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        setVariableValueToObject( mojo, \"generateClient\", \"true\" );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"2.1\" );\n\n        mojo.execute();\n\n        assertJarCreation( project, true, true );\n        assertClientJarContent( project, new String[]{\"META-INF/MANIFEST.MF\",\n            \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.xml\",\n            \"META-INF/maven/org.apache.maven.test/maven-test-plugin/pom.properties\", \"org/sample/ejb/AppStub.class\"},\n                                         new String[]{\"META-INF/ejb-jar.xml\", \"org/sample/ejb/AppBean.class\",\n                                             \"org/sample/ejb/AppCMP.class\", \"org/sample/ejb/AppSession.class\"} );\n    }","commit_id":"c824abf46e338db8524215721fd6e3619f600f4a","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Tests if the jar is created under EJB version 3.0 without\n     * deployment descriptor present.\n     *\n     * @throws Exception\n     */\n    public void testEjbCompliance_3_0_WithoutDescriptor()\n        throws Exception\n    {\n        File pomFile = new File( getBasedir(), defaultPOMPath );\n        EjbMojo mojo = (EjbMojo) lookupMojo( \"ejb\", pomFile );\n\n        assertNotNull( mojo );\n\n        // this will automatically create the isolated\n        // test environment\n        MavenProjectResourcesStub project = new MavenProjectResourcesStub( \"testEjbCompliance_3_0_WithoutDescriptor\" );\n\n        // create the necessary test files\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        // configure mojo\n        String jarName = \"testJar\";\n\n        setVariableValueToObject( mojo, \"basedir\", project.getBuild().getDirectory() );\n        setVariableValueToObject( mojo, \"outputDirectory\", project.getBuild().getOutputDirectory() );\n        setVariableValueToObject( mojo, \"jarName\", jarName );\n        setVariableValueToObject( mojo, \"generateClient\", \"false\" );\n        setVariableValueToObject( mojo, \"clientExcludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"clientIncludes\", new LinkedList() );\n        setVariableValueToObject( mojo, \"project\", project );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"3.0\" );\n\n        mojo.execute();\n\n        // validate jar creation\n        String checkedJarFile = project.getBuild().getDirectory() + \"/\" + jarName + \".jar\";\n        assertTrue( FileUtils.fileExists( checkedJarFile ) );\n    }","id":4619,"modified_method":"/**\n     * Tests if the jar is created under EJB version 3.0 without\n     * deployment descriptor present.\n     *\n     * @throws Exception if any exception occurs\n     */\n    public void testEjbCompliance_3_0_WithoutDescriptor()\n        throws Exception\n    {\n        final MavenProjectResourcesStub project = createTestProject( \"compliance-nodescriptor-3\" );\n        final EjbMojo mojo = lookupMojoWithDefaultSettings( project );\n\n        // put this on the root dir\n        project.addFile( \"pom.xml\", MavenProjectResourcesStub.ROOT_FILE );\n\n        // start creating the environment\n        project.setupBuildEnvironment();\n\n        setVariableValueToObject( mojo, \"generateClient\", \"false\" );\n        setVariableValueToObject( mojo, \"ejbVersion\", \"3.0\" );\n\n        mojo.execute();\n\n        assertJarCreation( project, true, false );\n    }","commit_id":"c824abf46e338db8524215721fd6e3619f600f4a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void execute()\n        throws MojoExecutionException\n    {\n\n        if ( skip )\n        {\n            getLog().info( \"Skipping rar generation.\" );\n            return;\n        }\n\n        getLog().debug( \" ======= RarMojo settings =======\" );\n        getLog().debug( \"rarSourceDirectory[\" + rarSourceDirectory + \"]\" );\n        getLog().debug( \"manifestFile[\" + manifestFile + \"]\" );\n        getLog().debug( \"raXmlFile[\" + raXmlFile + \"]\" );\n        getLog().debug( \"workDirectory[\" + workDirectory + \"]\" );\n        getLog().debug( \"outputDirectory[\" + outputDirectory + \"]\" );\n        getLog().debug( \"finalName[\" + finalName + \"]\" );\n        getLog().debug( \"classifier[\" + classifier + \"]\" );\n\n        // Check if jar file is there and if requested, copy it\n        try\n        {\n            if (includeJar)\n            {\n                File generatedJarFile = new File( outputDirectory, finalName + \".jar\" );\n                if ( generatedJarFile.exists() )\n                {\n                    getLog().info( \"Including generated jar file[\" + generatedJarFile.getName() + \"]\" );\n                    FileUtils.copyFileToDirectory( generatedJarFile, getBuildDir() );\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying generated Jar file\", e );\n        }\n\n        // Copy dependencies\n        try\n        {\n            @SuppressWarnings(\"unchecked\")\n            Set<Artifact> artifacts = project.getArtifacts();\n            for (Artifact artifact : artifacts) {\n\n                ScopeArtifactFilter filter = new ScopeArtifactFilter(Artifact.SCOPE_RUNTIME);\n                if (!artifact.isOptional() && filter.include(artifact)\n                        && artifact.getArtifactHandler().isAddedToClasspath()) {\n                    getLog().info(\"Copying artifact[\" + artifact.getGroupId() + \", \" + artifact.getId() + \", \"\n                            + artifact.getScope() + \"]\");\n                    FileUtils.copyFileToDirectory(artifact.getFile(), getBuildDir());\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying RAR dependencies\", e );\n        }\n\n        Resource resource = new Resource();\n        resource.setDirectory( rarSourceDirectory.getAbsolutePath() );\n        resource.setTargetPath( getBuildDir().getAbsolutePath() );\n        resource.setFiltering( filterRarSourceDirectory );\n\n        List<Resource> resources = new ArrayList<Resource>();\n        resources.add( resource );\n\n        if ( rarResources != null && !rarResources.isEmpty() )\n        {\n            resources.addAll( rarResources );\n        }\n\n        MavenResourcesExecution mavenResourcesExecution =\n            new MavenResourcesExecution( resources, getBuildDir(), project, encoding, filters,\n                                         Collections.<String>emptyList(), session );\n\n        mavenResourcesExecution.setEscapeWindowsPaths( escapeWindowsPaths );\n\n        // never include project build filters in this call, since we've already accounted for the POM build filters\n        // above, in getCombinedFiltersList().\n        mavenResourcesExecution.setInjectProjectBuildFilters( false );\n\n        mavenResourcesExecution.setEscapeString( escapeString );\n        mavenResourcesExecution.setOverwrite( overwrite );\n        mavenResourcesExecution.setIncludeEmptyDirs( includeEmptyDirs );\n        mavenResourcesExecution.setSupportMultiLineFiltering( supportMultiLineFiltering );\n\n        // if these are NOT set, just use the defaults, which are '${*}' and '@'.\n        if ( delimiters != null && !delimiters.isEmpty() )\n        {\n            LinkedHashSet<String> delims = new LinkedHashSet<String>();\n            if ( useDefaultDelimiters )\n            {\n                //noinspection unchecked\n                delims.addAll( mavenResourcesExecution.getDelimiters() );\n            }\n\n            for ( String delim : delimiters )\n            {\n                if ( delim == null )\n                {\n                    // FIXME: ${filter:*} could also trigger this condition. Need a better long-term solution.\n                    delims.add( \"${*}\" );\n                }\n                else\n                {\n                    delims.add( delim );\n                }\n            }\n\n            mavenResourcesExecution.setDelimiters( delims );\n        }\n\n        if ( nonFilteredFileExtensions != null )\n        {\n            mavenResourcesExecution.setNonFilteredFileExtensions( nonFilteredFileExtensions );\n        }\n        try\n        {\n            mavenResourcesFiltering.filterResources( mavenResourcesExecution );\n        }\n        catch ( MavenFilteringException e )\n        {\n            throw new MojoExecutionException( \"Error copying RAR resources\", e );\n        }\n\n        // Include custom manifest if necessary\n        try\n        {\n            includeCustomRaXmlFile();\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying ra.xml file\", e );\n        }\n\n        // Check if connector deployment descriptor is there\n        File ddFile = new File( getBuildDir(), RA_XML_URI );\n        if ( !ddFile.exists() && warnOnMissingRaXml )\n        {\n            getLog().warn( \"Connector deployment descriptor: \" + ddFile.getAbsolutePath() + \" does not exist.\" );\n        }\n\n        try\n        {\n            File rarFile = getRarFile(outputDirectory, finalName, classifier);\n            MavenArchiver archiver = new MavenArchiver();\n            archiver.setArchiver( jarArchiver );\n            archiver.setOutputFile( rarFile );\n\n            // Include custom manifest if necessary\n            includeCustomManifestFile();\n\n            archiver.getArchiver().addDirectory( getBuildDir() );\n            archiver.createArchive( session, project, archive );\n\n            project.getArtifact().setFile( rarFile );\n        }\n        catch ( Exception e )\n        {\n            throw new MojoExecutionException( \"Error assembling RAR\", e );\n        }\n    }","id":4620,"modified_method":"public void execute()\n        throws MojoExecutionException\n    {\n\n        if ( skip )\n        {\n            getLog().info( \"Skipping rar generation.\" );\n            return;\n        }\n\n        getLog().debug( \" ======= RarMojo settings =======\" );\n        getLog().debug( \"rarSourceDirectory[\" + rarSourceDirectory + \"]\" );\n        getLog().debug( \"manifestFile[\" + manifestFile + \"]\" );\n        getLog().debug( \"raXmlFile[\" + raXmlFile + \"]\" );\n        getLog().debug( \"workDirectory[\" + workDirectory + \"]\" );\n        getLog().debug( \"outputDirectory[\" + outputDirectory + \"]\" );\n        getLog().debug( \"finalName[\" + finalName + \"]\" );\n        getLog().debug( \"classifier[\" + classifier + \"]\" );\n\n        // Check if jar file is there and if requested, copy it\n        try\n        {\n            if (includeJar)\n            {\n                File generatedJarFile = new File( outputDirectory, finalName + \".jar\" );\n                if ( generatedJarFile.exists() )\n                {\n                    getLog().info( \"Including generated jar file[\" + generatedJarFile.getName() + \"]\" );\n                    FileUtils.copyFileToDirectory( generatedJarFile, getBuildDir() );\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying generated Jar file\", e );\n        }\n\n        // Copy dependencies\n        try\n        {\n            @SuppressWarnings(\"unchecked\")\n            Set<Artifact> artifacts = project.getArtifacts();\n            for (Artifact artifact : artifacts) {\n\n                ScopeArtifactFilter filter = new ScopeArtifactFilter(Artifact.SCOPE_RUNTIME);\n                if (!artifact.isOptional() && filter.include(artifact)\n                        && artifact.getArtifactHandler().isAddedToClasspath()) {\n                    getLog().info(\"Copying artifact[\" + artifact.getGroupId() + \", \" + artifact.getId() + \", \"\n                            + artifact.getScope() + \"]\");\n                    FileUtils.copyFileToDirectory(artifact.getFile(), getBuildDir());\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying RAR dependencies\", e );\n        }\n\n        Resource resource = new Resource();\n        resource.setDirectory( rarSourceDirectory.getAbsolutePath() );\n        resource.setTargetPath( getBuildDir().getAbsolutePath() );\n        resource.setFiltering( filterRarSourceDirectory );\n\n        List<Resource> resources = new ArrayList<Resource>();\n        resources.add( resource );\n\n        if ( rarResources != null && !rarResources.isEmpty() )\n        {\n            resources.addAll( rarResources );\n        }\n\n        MavenResourcesExecution mavenResourcesExecution =\n            new MavenResourcesExecution( resources, getBuildDir(), project, encoding, filters,\n                                         Collections.<String>emptyList(), session );\n\n        mavenResourcesExecution.setEscapeWindowsPaths( escapeWindowsPaths );\n\n        // never include project build filters in this call, since we've already accounted for the POM build filters\n        // above, in getCombinedFiltersList().\n        mavenResourcesExecution.setInjectProjectBuildFilters( false );\n\n        mavenResourcesExecution.setEscapeString( escapeString );\n        mavenResourcesExecution.setOverwrite( overwrite );\n        mavenResourcesExecution.setIncludeEmptyDirs( includeEmptyDirs );\n        mavenResourcesExecution.setSupportMultiLineFiltering( supportMultiLineFiltering );\n\n        // if these are NOT set, just use the defaults, which are '${*}' and '@'.\n        if ( delimiters != null && !delimiters.isEmpty() )\n        {\n            LinkedHashSet<String> delims = new LinkedHashSet<String>();\n            if ( useDefaultDelimiters )\n            {\n                //noinspection unchecked\n                delims.addAll( mavenResourcesExecution.getDelimiters() );\n            }\n\n            for ( String delim : delimiters )\n            {\n                if ( delim == null )\n                {\n                    // FIXME: ${filter:*} could also trigger this condition. Need a better long-term solution.\n                    delims.add( \"${*}\" );\n                }\n                else\n                {\n                    delims.add( delim );\n                }\n            }\n\n            mavenResourcesExecution.setDelimiters( delims );\n        }\n\n        if ( nonFilteredFileExtensions != null )\n        {\n            mavenResourcesExecution.setNonFilteredFileExtensions( nonFilteredFileExtensions );\n        }\n        try\n        {\n            mavenResourcesFiltering.filterResources( mavenResourcesExecution );\n        }\n        catch ( MavenFilteringException e )\n        {\n            throw new MojoExecutionException( \"Error copying RAR resources\", e );\n        }\n\n        // Include custom manifest if necessary\n        try\n        {\n            includeCustomRaXmlFile();\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error copying ra.xml file\", e );\n        }\n\n        // Check if connector deployment descriptor is there\n        File ddFile = new File( getBuildDir(), RA_XML_URI );\n        if ( !ddFile.exists() && warnOnMissingRaXml )\n        {\n            getLog().warn( \"Connector deployment descriptor: \" + ddFile.getAbsolutePath() + \" does not exist.\" );\n        }\n\n        File rarFile = getRarFile(outputDirectory, finalName, classifier);\n        try\n        {\n            MavenArchiver archiver = new MavenArchiver();\n            archiver.setArchiver( jarArchiver );\n            archiver.setOutputFile( rarFile );\n\n            // Include custom manifest if necessary\n            includeCustomManifestFile();\n\n            archiver.getArchiver().addDirectory( getBuildDir() );\n            archiver.createArchive( session, project, archive );\n        }\n        catch ( Exception e )\n        {\n            throw new MojoExecutionException( \"Error assembling RAR\", e );\n        }\n\n        if ( classifier != null )\n        {\n            projectHelper.attachArtifact( project, \"rar\", classifier, rarFile );\n        }\n        else\n        {\n            project.getArtifact().setFile( rarFile );\n        }\n    }","commit_id":"41367462e8608c83e680f24400ed5ce140df021d","url":"https://github.com/apache/maven-plugins"},{"original_method":"protected void execute( MavenProject currentProject, Map originalInstructions, Properties properties,\n        Jar[] classpath ) throws MojoExecutionException\n    {\n        try\n        {\n            File jarFile = new File( getBuildDirectory(), getBundleName( currentProject ) );\n\n            Builder builder = buildOSGiBundle( currentProject, originalInstructions, properties, classpath );\n\n            List errors = builder.getErrors();\n            List warnings = builder.getWarnings();\n\n            for ( Iterator w = warnings.iterator(); w.hasNext(); )\n            {\n                String msg = ( String ) w.next();\n                getLog().warn( \"Warning building bundle \" + currentProject.getArtifact() + \" : \" + msg );\n            }\n            for ( Iterator e = errors.iterator(); e.hasNext(); )\n            {\n                String msg = ( String ) e.next();\n                getLog().error( \"Error building bundle \" + currentProject.getArtifact() + \" : \" + msg );\n            }\n\n            if ( errors.size() > 0 )\n            {\n                String failok = properties.getProperty( \"-failok\" );\n                if ( null == failok || \"false\".equalsIgnoreCase( failok ) )\n                {\n                    jarFile.delete();\n\n                    throw new MojoFailureException( \"Error(s) found in bundle configuration\" );\n                }\n            }\n\n            // attach bundle to maven project\n            jarFile.getParentFile().mkdirs();\n            builder.getJar().write( jarFile );\n            Artifact bundleArtifact = currentProject.getArtifact();\n            bundleArtifact.setFile( jarFile );\n\n            if ( unpackBundle )\n            {\n                unpackBundle( jarFile );\n            }\n\n            if ( manifestLocation != null )\n            {\n                File outputFile = new File( manifestLocation, \"MANIFEST.MF\" );\n\n                try\n                {\n                    Manifest manifest = builder.getJar().getManifest();\n                    ManifestPlugin.writeManifest( manifest, outputFile );\n                }\n                catch ( IOException e )\n                {\n                    getLog().error( \"Error trying to write Manifest to file \" + outputFile, e );\n                }\n            }\n\n            // workaround for MNG-1682: force maven to install artifact using the \"jar\" handler\n            bundleArtifact.setArtifactHandler( m_artifactHandlerManager.getArtifactHandler( \"jar\" ) );\n        }\n        catch ( MojoFailureException e )\n        {\n            getLog().error( e.getLocalizedMessage() );\n            throw new MojoExecutionException( \"Error(s) found in bundle configuration\", e );\n        }\n        catch ( Exception e )\n        {\n            getLog().error( \"An internal error occurred\", e );\n            throw new MojoExecutionException( \"Internal error in maven-bundle-plugin\", e );\n        }\n    }","id":4621,"modified_method":"protected void execute( MavenProject currentProject, Map originalInstructions, Properties properties,\n        Jar[] classpath ) throws MojoExecutionException\n    {\n        try\n        {\n            File jarFile = new File( getBuildDirectory(), getBundleName( currentProject ) );\n\n            Builder builder = buildOSGiBundle( currentProject, originalInstructions, properties, classpath );\n\n            List errors = builder.getErrors();\n            List warnings = builder.getWarnings();\n\n            for ( Iterator w = warnings.iterator(); w.hasNext(); )\n            {\n                String msg = ( String ) w.next();\n                getLog().warn( \"Warning building bundle \" + currentProject.getArtifact() + \" : \" + msg );\n            }\n            for ( Iterator e = errors.iterator(); e.hasNext(); )\n            {\n                String msg = ( String ) e.next();\n                getLog().error( \"Error building bundle \" + currentProject.getArtifact() + \" : \" + msg );\n            }\n\n            if ( errors.size() > 0 )\n            {\n                String failok = properties.getProperty( \"-failok\" );\n                if ( null == failok || \"false\".equalsIgnoreCase( failok ) )\n                {\n                    jarFile.delete();\n\n                    throw new MojoFailureException( \"Error(s) found in bundle configuration\" );\n                }\n            }\n\n            // attach bundle to maven project\n            jarFile.getParentFile().mkdirs();\n            builder.getJar().write( jarFile );\n\n            Artifact mainArtifact = currentProject.getArtifact();\n\n            // workaround for MNG-1682: force maven to install artifact using the \"jar\" handler\n            mainArtifact.setArtifactHandler( m_artifactHandlerManager.getArtifactHandler( \"jar\" ) );\n\n            if ( null == classifier || classifier.trim().length() == 0 )\n            {\n                mainArtifact.setFile( jarFile );\n            }\n            else\n            {\n                m_projectHelper.attachArtifact( currentProject, jarFile, classifier );\n            }\n\n            if ( unpackBundle )\n            {\n                unpackBundle( jarFile );\n            }\n\n            if ( manifestLocation != null )\n            {\n                File outputFile = new File( manifestLocation, \"MANIFEST.MF\" );\n\n                try\n                {\n                    Manifest manifest = builder.getJar().getManifest();\n                    ManifestPlugin.writeManifest( manifest, outputFile );\n                }\n                catch ( IOException e )\n                {\n                    getLog().error( \"Error trying to write Manifest to file \" + outputFile, e );\n                }\n            }\n        }\n        catch ( MojoFailureException e )\n        {\n            getLog().error( e.getLocalizedMessage() );\n            throw new MojoExecutionException( \"Error(s) found in bundle configuration\", e );\n        }\n        catch ( Exception e )\n        {\n            getLog().error( \"An internal error occurred\", e );\n            throw new MojoExecutionException( \"Internal error in maven-bundle-plugin\", e );\n        }\n    }","commit_id":"2d30173cf97e186f292993fb47fafbf24c4a76e3","url":"https://github.com/apache/felix"},{"original_method":"@Override\n        public boolean childNodeChanged(\n                String name, NodeState before, NodeState after) {\n            if (beforeEvent()) {\n                return addChildDiff(name, before, after);\n            } else {\n                return true;\n            }\n        }","id":4622,"modified_method":"@Override\n        public boolean childNodeChanged(\n                String name, NodeState before, NodeState after) {\n            if (fullQueue()) {\n                return false;\n            } else if (beforeEvent()) {\n                addChildDiff(name, before, after);\n                return afterEvent();\n            } else {\n                return true;\n            }\n        }","commit_id":"97b2a36af5139ebe673eb86fa6218bc34365fe84","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n        public boolean childNodeDeleted(String name, NodeState before) {\n            if (beforeEvent()) {\n                handler.nodeDeleted(name, before);\n                return addChildDiff(name, before, MISSING_NODE);\n            } else {\n                return true;\n            }\n        }","id":4623,"modified_method":"@Override\n        public boolean childNodeDeleted(String name, NodeState before) {\n            if (fullQueue()) {\n                return false;\n            } else if (beforeEvent()) {\n                handler.nodeDeleted(name, before);\n                addChildDiff(name, before, MISSING_NODE);\n                return afterEvent();\n            } else {\n                return true;\n            }\n        }","commit_id":"97b2a36af5139ebe673eb86fa6218bc34365fe84","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n        public boolean childNodeAdded(String name, NodeState after) {\n            if (beforeEvent()) {\n                PropertyState sourceProperty = after.getProperty(SOURCE_PATH);\n                if (sourceProperty != null) {\n                    String sourcePath = sourceProperty.getValue(STRING);\n                    handler.nodeMoved(sourcePath, name, after);\n                }\n\n                handler.nodeAdded(name, after);\n                return addChildDiff(name, MISSING_NODE, after);\n            } else {\n                return true;\n            }\n        }","id":4624,"modified_method":"@Override\n        public boolean childNodeAdded(String name, NodeState after) {\n            if (fullQueue()) {\n                return false;\n            } else if (beforeEvent()) {\n                PropertyState sourceProperty = after.getProperty(SOURCE_PATH);\n                if (sourceProperty != null) {\n                    String sourcePath = sourceProperty.getValue(STRING);\n                    handler.nodeMoved(sourcePath, name, after);\n                }\n\n                handler.nodeAdded(name, after);\n                addChildDiff(name, MISSING_NODE, after);\n                return afterEvent();\n            } else {\n                return true;\n            }\n        }","commit_id":"97b2a36af5139ebe673eb86fa6218bc34365fe84","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n         * Schedules a continuation for processing changes within the given\n         * child node, if changes within that subtree should be processed.\n         */\n        private boolean addChildDiff(\n                String name, NodeState before, NodeState after) {\n            ChangeHandler h = handler.getChildHandler(name, before, after);\n            if (h != null) {\n                continuations.add(new Continuation(h, before, after, 0));\n            }\n\n            if (continuations.size() > MAX_QUEUED_CONTINUATIONS) {\n                // Postpone further processing of the current continuation.\n                // Even though this increases the size of the queue beyond\n                // the limit, doing so ultimately forces property-only\n                // diffs to the beginning of the queue, and thus helps\n                // automatically clean up the backlog.\n                continuations.add(new Continuation(\n                        handler, this.before, this.after, counter));\n                return false;\n            } else {\n                return afterEvent();\n            }\n        }","id":4625,"modified_method":"/**\n         * Schedules a continuation for processing changes within the given\n         * child node, if changes within that subtree should be processed.\n         */\n        private void addChildDiff(\n                String name, NodeState before, NodeState after) {\n            ChangeHandler h = handler.getChildHandler(name, before, after);\n            if (h != null) {\n                continuations.add(new Continuation(h, before, after, 0));\n            }\n        }","commit_id":"97b2a36af5139ebe673eb86fa6218bc34365fe84","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public GetBucketLoggingStatusResponseType getBucketLoggingStatus(\n\t\t\tGetBucketLoggingStatusType request) throws EucalyptusCloudException {\n\t\tGetBucketLoggingStatusResponseType reply = (GetBucketLoggingStatusResponseType) request\n\t\t.getReply();\n\t\tString bucket = request.getBucket();\n\t\tContext ctx = Contexts.lookup();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\ttry {\n\t\t\tBucketInfo bucketInfo = db.getUniqueEscape(new BucketInfo(bucket));\n\t\t\tif (ctx.hasAdministrativePrivileges() ||\n\t\t\t\t\tLookups.checkPrivilege(PolicySpec.S3_GETBUCKETVERSIONING,\n\t\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\t\tbucket,\n\t\t\t\t\t\t\tbucketInfo.getOwnerId())) {\n\t\t\t\tif (bucketInfo.getLoggingEnabled()) {\n\t\t\t\t\tString targetBucket = bucketInfo.getTargetBucket();\n\t\t\t\t\tArrayList<Grant> grants = new ArrayList<Grant>();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tBucketInfo targetBucketInfo = db.getUniqueEscape(new BucketInfo(\n\t\t\t\t\t\t\t\ttargetBucket));\n\t\t\t\t\t\tList<GrantInfo> grantInfos = targetBucketInfo.getGrants();\n\n\t\t\t\t\t\taddGrants(grants, grantInfos);\n\n\t\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\tthrow new InvalidTargetBucketForLoggingException(\n\t\t\t\t\t\t\t\ttargetBucket);\n\t\t\t\t\t}\n\t\t\t\t\tLoggingEnabled loggingEnabled = new LoggingEnabled();\n\t\t\t\t\tloggingEnabled.setTargetBucket(bucketInfo.getTargetBucket());\n\t\t\t\t\tloggingEnabled.setTargetPrefix(bucketInfo.getTargetPrefix());\n\n\t\t\t\t\tTargetGrants targetGrants = new TargetGrants();\n\t\t\t\t\ttargetGrants.setGrants(grants);\n\t\t\t\t\tloggingEnabled.setTargetGrants(targetGrants);\n\t\t\t\t\treply.setLoggingEnabled(loggingEnabled);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLOG.error( \"Not authorized to get bucket logging status by \" + ctx.getUserFullName( ) );\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketInfo.getBucketName( ) );\t\t\t  \n\t\t\t}\n\t\t} catch (EucalyptusCloudException ex) {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucket);\n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","id":4626,"modified_method":"public GetBucketLoggingStatusResponseType getBucketLoggingStatus(\n\t\t\tGetBucketLoggingStatusType request) throws EucalyptusCloudException {\n\t\tGetBucketLoggingStatusResponseType reply = (GetBucketLoggingStatusResponseType) request\n\t\t.getReply();\n\t\tString bucket = request.getBucket();\n\t\tContext ctx = Contexts.lookup();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\ttry {\n\t\t\tBucketInfo bucketInfo = db.getUniqueEscape(new BucketInfo(bucket));\n\t\t\tif (ctx.hasAdministrativePrivileges() ||\n\t\t\t\t\tLookups.checkPrivilege(bucketInfo.getOwnerId())) {\n\t\t\t\tif (bucketInfo.getLoggingEnabled()) {\n\t\t\t\t\tString targetBucket = bucketInfo.getTargetBucket();\n\t\t\t\t\tArrayList<Grant> grants = new ArrayList<Grant>();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tBucketInfo targetBucketInfo = db.getUniqueEscape(new BucketInfo(\n\t\t\t\t\t\t\t\ttargetBucket));\n\t\t\t\t\t\tList<GrantInfo> grantInfos = targetBucketInfo.getGrants();\n\n\t\t\t\t\t\taddGrants(grants, grantInfos);\n\n\t\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\tthrow new InvalidTargetBucketForLoggingException(\n\t\t\t\t\t\t\t\ttargetBucket);\n\t\t\t\t\t}\n\t\t\t\t\tLoggingEnabled loggingEnabled = new LoggingEnabled();\n\t\t\t\t\tloggingEnabled.setTargetBucket(bucketInfo.getTargetBucket());\n\t\t\t\t\tloggingEnabled.setTargetPrefix(bucketInfo.getTargetPrefix());\n\n\t\t\t\t\tTargetGrants targetGrants = new TargetGrants();\n\t\t\t\t\ttargetGrants.setGrants(grants);\n\t\t\t\t\tloggingEnabled.setTargetGrants(targetGrants);\n\t\t\t\t\treply.setLoggingEnabled(loggingEnabled);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLOG.error( \"Not authorized to get bucket logging status by \" + ctx.getUserFullName( ) );\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketInfo.getBucketName( ) );\t\t\t  \n\t\t\t}\n\t\t} catch (EucalyptusCloudException ex) {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucket);\n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","commit_id":"ec70123bd55de55cac14f19641b57d29bc15a699","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public SetBucketLoggingStatusResponseType setBucketLoggingStatus(\n\t\t\tSetBucketLoggingStatusType request) throws EucalyptusCloudException {\n\t\tSetBucketLoggingStatusResponseType reply = (SetBucketLoggingStatusResponseType) request\n\t\t.getReply();\n\t\tString bucket = request.getBucket();\n\t\tContext ctx = Contexts.lookup();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo, targetBucketInfo;\n\t\ttry {\n\t\t\tbucketInfo = db.getUniqueEscape(new BucketInfo(bucket));\n\t\t} catch (EucalyptusCloudException ex) {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucket);\n\t\t}\n\n\t\tif (ctx.hasAdministrativePrivileges() ||\n\t\t\t\tLookups.checkPrivilege(PolicySpec.S3_GETBUCKETVERSIONING,\n\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\tbucket,\n\t\t\t\t\t\tbucketInfo.getOwnerId())) {\n\t\t\tif (request.getLoggingEnabled() != null) {\n\t\t\t\tString targetBucket = request.getLoggingEnabled().getTargetBucket();\n\t\t\t\tString targetPrefix = request.getLoggingEnabled().getTargetPrefix();\n\t\t\t\tList<Grant> targetGrantsList = null;\n\t\t\t\tTargetGrants targetGrants = request.getLoggingEnabled()\n\t\t\t\t.getTargetGrants();\n\t\t\t\tif (targetGrants != null)\n\t\t\t\t\ttargetGrantsList = targetGrants.getGrants();\n\t\t\t\tif (targetPrefix == null)\n\t\t\t\t\ttargetPrefix = \"\";\n\t\t\t\ttry {\n\t\t\t\t\ttargetBucketInfo = db.getUniqueEscape(new BucketInfo(targetBucket));\n\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new NoSuchBucketException(targetBucket);\n\t\t\t\t}\n\t\t\t\tif (!targetBucketInfo.hasLoggingPerms()) {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new InvalidTargetBucketForLoggingException(targetBucket);\n\t\t\t\t}\n\t\t\t\tbucketInfo.setTargetBucket(targetBucket);\n\t\t\t\tbucketInfo.setTargetPrefix(targetPrefix);\n\t\t\t\tbucketInfo.setLoggingEnabled(true);\n\t\t\t\tif (targetGrantsList != null) {\n\t\t\t\t\ttargetBucketInfo.addGrants(targetGrantsList);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbucketInfo.setLoggingEnabled(false);\n\t\t\t}\n\t\t} else {\n\t\t\tLOG.error( \"Not authorized to set bucket logging status by \" + ctx.getUserFullName( ) );\n\t\t\tdb.rollback();\n\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketInfo.getBucketName( ) );\t\t\t  \n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","id":4627,"modified_method":"public SetBucketLoggingStatusResponseType setBucketLoggingStatus(\n\t\t\tSetBucketLoggingStatusType request) throws EucalyptusCloudException {\n\t\tSetBucketLoggingStatusResponseType reply = (SetBucketLoggingStatusResponseType) request\n\t\t.getReply();\n\t\tString bucket = request.getBucket();\n\t\tContext ctx = Contexts.lookup();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo, targetBucketInfo;\n\t\ttry {\n\t\t\tbucketInfo = db.getUniqueEscape(new BucketInfo(bucket));\n\t\t} catch (EucalyptusCloudException ex) {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucket);\n\t\t}\n\n\t\tif (ctx.hasAdministrativePrivileges() ||\n\t\t\t\tLookups.checkPrivilege(bucketInfo.getOwnerId())) {\n\t\t\tif (request.getLoggingEnabled() != null) {\n\t\t\t\tString targetBucket = request.getLoggingEnabled().getTargetBucket();\n\t\t\t\tString targetPrefix = request.getLoggingEnabled().getTargetPrefix();\n\t\t\t\tList<Grant> targetGrantsList = null;\n\t\t\t\tTargetGrants targetGrants = request.getLoggingEnabled()\n\t\t\t\t.getTargetGrants();\n\t\t\t\tif (targetGrants != null)\n\t\t\t\t\ttargetGrantsList = targetGrants.getGrants();\n\t\t\t\tif (targetPrefix == null)\n\t\t\t\t\ttargetPrefix = \"\";\n\t\t\t\ttry {\n\t\t\t\t\ttargetBucketInfo = db.getUniqueEscape(new BucketInfo(targetBucket));\n\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new NoSuchBucketException(targetBucket);\n\t\t\t\t}\n\t\t\t\tif (!targetBucketInfo.hasLoggingPerms()) {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new InvalidTargetBucketForLoggingException(targetBucket);\n\t\t\t\t}\n\t\t\t\tbucketInfo.setTargetBucket(targetBucket);\n\t\t\t\tbucketInfo.setTargetPrefix(targetPrefix);\n\t\t\t\tbucketInfo.setLoggingEnabled(true);\n\t\t\t\tif (targetGrantsList != null) {\n\t\t\t\t\ttargetBucketInfo.addGrants(targetGrantsList);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbucketInfo.setLoggingEnabled(false);\n\t\t\t}\n\t\t} else {\n\t\t\tLOG.error( \"Not authorized to set bucket logging status by \" + ctx.getUserFullName( ) );\n\t\t\tdb.rollback();\n\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketInfo.getBucketName( ) );\t\t\t  \n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","commit_id":"ec70123bd55de55cac14f19641b57d29bc15a699","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public SetBucketVersioningStatusResponseType setBucketVersioningStatus(\n\t\t\tSetBucketVersioningStatusType request)\n\tthrows EucalyptusCloudException {\n\t\tSetBucketVersioningStatusResponseType reply = (SetBucketVersioningStatusResponseType) request\n\t\t.getReply();\n\t\tString bucket = request.getBucket();\n\t\tContext ctx = Contexts.lookup();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo;\n\t\ttry {\n\t\t\tbucketInfo = db.getUniqueEscape(new BucketInfo(bucket));\n\t\t} catch (EucalyptusCloudException ex) {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucket);\n\t\t}\n\n\t\tif (ctx.hasAdministrativePrivileges() ||\n\t\t\t\tLookups.checkPrivilege(PolicySpec.S3_GETBUCKETVERSIONING,\n\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\tbucket,\n\t\t\t\t\t\tbucketInfo.getOwnerId())) {\n\t\t\tif (request.getVersioningStatus() != null) {\n\t\t\t\tString status = request.getVersioningStatus();\n\t\t\t\tif (WalrusProperties.VersioningStatus.Enabled.toString().equals(\n\t\t\t\t\t\tstatus))\n\t\t\t\t\tbucketInfo\n\t\t\t\t\t.setVersioning(WalrusProperties.VersioningStatus.Enabled\n\t\t\t\t\t\t\t.toString());\n\t\t\t\telse if (WalrusProperties.VersioningStatus.Suspended.toString()\n\t\t\t\t\t\t.equals(status)\n\t\t\t\t\t\t&& WalrusProperties.VersioningStatus.Enabled.toString()\n\t\t\t\t\t\t.equals(bucketInfo.getVersioning()))\n\t\t\t\t\tbucketInfo\n\t\t\t\t\t.setVersioning(WalrusProperties.VersioningStatus.Suspended\n\t\t\t\t\t\t\t.toString());\n\t\t\t}\n\t\t} else {\n\t\t\tLOG.error( \"Not authorized to set bucket version status by \" + ctx.getUserFullName( ) );\n\t\t\tdb.rollback();\n\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketInfo.getBucketName( ) );\t\t\t  \n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","id":4628,"modified_method":"public SetBucketVersioningStatusResponseType setBucketVersioningStatus(\n\t\t\tSetBucketVersioningStatusType request)\n\tthrows EucalyptusCloudException {\n\t\tSetBucketVersioningStatusResponseType reply = (SetBucketVersioningStatusResponseType) request\n\t\t.getReply();\n\t\tString bucket = request.getBucket();\n\t\tContext ctx = Contexts.lookup();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo;\n\t\ttry {\n\t\t\tbucketInfo = db.getUniqueEscape(new BucketInfo(bucket));\n\t\t} catch (EucalyptusCloudException ex) {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucket);\n\t\t}\n\n\t\tif (ctx.hasAdministrativePrivileges() ||\n\t\t\t\tLookups.checkPrivilege(PolicySpec.S3_PUTBUCKETVERSIONING,\n\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\tbucket,\n\t\t\t\t\t\tbucketInfo.getOwnerId())) {\n\t\t\tif (request.getVersioningStatus() != null) {\n\t\t\t\tString status = request.getVersioningStatus();\n\t\t\t\tif (WalrusProperties.VersioningStatus.Enabled.toString().equals(\n\t\t\t\t\t\tstatus))\n\t\t\t\t\tbucketInfo\n\t\t\t\t\t.setVersioning(WalrusProperties.VersioningStatus.Enabled\n\t\t\t\t\t\t\t.toString());\n\t\t\t\telse if (WalrusProperties.VersioningStatus.Suspended.toString()\n\t\t\t\t\t\t.equals(status)\n\t\t\t\t\t\t&& WalrusProperties.VersioningStatus.Enabled.toString()\n\t\t\t\t\t\t.equals(bucketInfo.getVersioning()))\n\t\t\t\t\tbucketInfo\n\t\t\t\t\t.setVersioning(WalrusProperties.VersioningStatus.Suspended\n\t\t\t\t\t\t\t.toString());\n\t\t\t}\n\t\t} else {\n\t\t\tLOG.error( \"Not authorized to set bucket version status by \" + ctx.getUserFullName( ) );\n\t\t\tdb.rollback();\n\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketInfo.getBucketName( ) );\t\t\t  \n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","commit_id":"ec70123bd55de55cac14f19641b57d29bc15a699","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public SetBucketLoggingStatusResponseType setBucketLoggingStatus(\n\t\t\tSetBucketLoggingStatusType request) throws EucalyptusCloudException {\n\t\tSetBucketLoggingStatusResponseType reply = (SetBucketLoggingStatusResponseType) request\n\t\t.getReply();\n\t\tString bucket = request.getBucket();\n\t\tContext ctx = Contexts.lookup();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo, targetBucketInfo;\n\t\ttry {\n\t\t\tbucketInfo = db.getUniqueEscape(new BucketInfo(bucket));\n\t\t} catch (EucalyptusCloudException ex) {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucket);\n\t\t}\n\n\t\tif (ctx.hasAdministrativePrivileges() ||\n\t\t\t\tLookups.checkPrivilege(bucketInfo.getOwnerId())) {\n\t\t\tif (request.getLoggingEnabled() != null) {\n\t\t\t\tString targetBucket = request.getLoggingEnabled().getTargetBucket();\n\t\t\t\tString targetPrefix = request.getLoggingEnabled().getTargetPrefix();\n\t\t\t\tList<Grant> targetGrantsList = null;\n\t\t\t\tTargetGrants targetGrants = request.getLoggingEnabled()\n\t\t\t\t.getTargetGrants();\n\t\t\t\tif (targetGrants != null)\n\t\t\t\t\ttargetGrantsList = targetGrants.getGrants();\n\t\t\t\tif (targetPrefix == null)\n\t\t\t\t\ttargetPrefix = \"\";\n\t\t\t\ttry {\n\t\t\t\t\ttargetBucketInfo = db.getUniqueEscape(new BucketInfo(targetBucket));\n\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new NoSuchBucketException(targetBucket);\n\t\t\t\t}\n\t\t\t\tif (!targetBucketInfo.hasLoggingPerms()) {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new InvalidTargetBucketForLoggingException(targetBucket);\n\t\t\t\t}\n\t\t\t\tbucketInfo.setTargetBucket(targetBucket);\n\t\t\t\tbucketInfo.setTargetPrefix(targetPrefix);\n\t\t\t\tbucketInfo.setLoggingEnabled(true);\n\t\t\t\tif (targetGrantsList != null) {\n\t\t\t\t\ttargetBucketInfo.addGrants(targetGrantsList);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbucketInfo.setLoggingEnabled(false);\n\t\t\t}\n\t\t} else {\n\t\t\tLOG.error( \"Not authorized to set bucket logging status by \" + ctx.getUserFullName( ) );\n\t\t\tdb.rollback();\n\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketInfo.getBucketName( ) );\t\t\t  \n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","id":4629,"modified_method":"public SetBucketLoggingStatusResponseType setBucketLoggingStatus(\n\t\t\tSetBucketLoggingStatusType request) throws EucalyptusCloudException {\n\t\tSetBucketLoggingStatusResponseType reply = (SetBucketLoggingStatusResponseType) request\n\t\t.getReply();\n\t\tString bucket = request.getBucket();\n\t\tContext ctx = Contexts.lookup();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo, targetBucketInfo;\n\t\ttry {\n\t\t\tbucketInfo = db.getUniqueEscape(new BucketInfo(bucket));\n\t\t} catch (EucalyptusCloudException ex) {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucket);\n\t\t}\n\n\t\tif (ctx.hasAdministrativePrivileges() ||\n\t\t\t\tLookups.checkPrivilege(PolicySpec.S3_PUTBUCKETLOGGING,\n\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\tbucket,\n\t\t\t\t\t\tbucketInfo.getOwnerId())) {\n\t\t\tif (request.getLoggingEnabled() != null) {\n\t\t\t\tString targetBucket = request.getLoggingEnabled().getTargetBucket();\n\t\t\t\tString targetPrefix = request.getLoggingEnabled().getTargetPrefix();\n\t\t\t\tList<Grant> targetGrantsList = null;\n\t\t\t\tTargetGrants targetGrants = request.getLoggingEnabled()\n\t\t\t\t.getTargetGrants();\n\t\t\t\tif (targetGrants != null)\n\t\t\t\t\ttargetGrantsList = targetGrants.getGrants();\n\t\t\t\tif (targetPrefix == null)\n\t\t\t\t\ttargetPrefix = \"\";\n\t\t\t\ttry {\n\t\t\t\t\ttargetBucketInfo = db.getUniqueEscape(new BucketInfo(targetBucket));\n\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new NoSuchBucketException(targetBucket);\n\t\t\t\t}\n\t\t\t\tif (!targetBucketInfo.hasLoggingPerms()) {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new InvalidTargetBucketForLoggingException(targetBucket);\n\t\t\t\t}\n\t\t\t\tbucketInfo.setTargetBucket(targetBucket);\n\t\t\t\tbucketInfo.setTargetPrefix(targetPrefix);\n\t\t\t\tbucketInfo.setLoggingEnabled(true);\n\t\t\t\tif (targetGrantsList != null) {\n\t\t\t\t\ttargetBucketInfo.addGrants(targetGrantsList);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbucketInfo.setLoggingEnabled(false);\n\t\t\t}\n\t\t} else {\n\t\t\tLOG.error( \"Not authorized to set bucket logging status by \" + ctx.getUserFullName( ) );\n\t\t\tdb.rollback();\n\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketInfo.getBucketName( ) );\t\t\t  \n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","commit_id":"5bc1cac81da6a08a237cef10e2b197e764d47c73","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public GetBucketLoggingStatusResponseType getBucketLoggingStatus(\n\t\t\tGetBucketLoggingStatusType request) throws EucalyptusCloudException {\n\t\tGetBucketLoggingStatusResponseType reply = (GetBucketLoggingStatusResponseType) request\n\t\t.getReply();\n\t\tString bucket = request.getBucket();\n\t\tContext ctx = Contexts.lookup();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\ttry {\n\t\t\tBucketInfo bucketInfo = db.getUniqueEscape(new BucketInfo(bucket));\n\t\t\tif (ctx.hasAdministrativePrivileges() ||\n\t\t\t\t\tLookups.checkPrivilege(bucketInfo.getOwnerId())) {\n\t\t\t\tif (bucketInfo.getLoggingEnabled()) {\n\t\t\t\t\tString targetBucket = bucketInfo.getTargetBucket();\n\t\t\t\t\tArrayList<Grant> grants = new ArrayList<Grant>();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tBucketInfo targetBucketInfo = db.getUniqueEscape(new BucketInfo(\n\t\t\t\t\t\t\t\ttargetBucket));\n\t\t\t\t\t\tList<GrantInfo> grantInfos = targetBucketInfo.getGrants();\n\n\t\t\t\t\t\taddGrants(grants, grantInfos);\n\n\t\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\tthrow new InvalidTargetBucketForLoggingException(\n\t\t\t\t\t\t\t\ttargetBucket);\n\t\t\t\t\t}\n\t\t\t\t\tLoggingEnabled loggingEnabled = new LoggingEnabled();\n\t\t\t\t\tloggingEnabled.setTargetBucket(bucketInfo.getTargetBucket());\n\t\t\t\t\tloggingEnabled.setTargetPrefix(bucketInfo.getTargetPrefix());\n\n\t\t\t\t\tTargetGrants targetGrants = new TargetGrants();\n\t\t\t\t\ttargetGrants.setGrants(grants);\n\t\t\t\t\tloggingEnabled.setTargetGrants(targetGrants);\n\t\t\t\t\treply.setLoggingEnabled(loggingEnabled);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLOG.error( \"Not authorized to get bucket logging status by \" + ctx.getUserFullName( ) );\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketInfo.getBucketName( ) );\t\t\t  \n\t\t\t}\n\t\t} catch (EucalyptusCloudException ex) {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucket);\n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","id":4630,"modified_method":"public GetBucketLoggingStatusResponseType getBucketLoggingStatus(\n\t\t\tGetBucketLoggingStatusType request) throws EucalyptusCloudException {\n\t\tGetBucketLoggingStatusResponseType reply = (GetBucketLoggingStatusResponseType) request\n\t\t.getReply();\n\t\tString bucket = request.getBucket();\n\t\tContext ctx = Contexts.lookup();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\ttry {\n\t\t\tBucketInfo bucketInfo = db.getUniqueEscape(new BucketInfo(bucket));\n\t\t\tif (ctx.hasAdministrativePrivileges() ||\n\t\t\t\t\tLookups.checkPrivilege(PolicySpec.S3_GETBUCKETLOGGING,\n\t\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_BUCKET,\n\t\t\t\t\t\t\tbucket,\n\t\t\t\t\t\t\tbucketInfo.getOwnerId())) {\n\t\t\t\tif (bucketInfo.getLoggingEnabled()) {\n\t\t\t\t\tString targetBucket = bucketInfo.getTargetBucket();\n\t\t\t\t\tArrayList<Grant> grants = new ArrayList<Grant>();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tBucketInfo targetBucketInfo = db.getUniqueEscape(new BucketInfo(\n\t\t\t\t\t\t\t\ttargetBucket));\n\t\t\t\t\t\tList<GrantInfo> grantInfos = targetBucketInfo.getGrants();\n\n\t\t\t\t\t\taddGrants(grants, grantInfos);\n\n\t\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\tthrow new InvalidTargetBucketForLoggingException(\n\t\t\t\t\t\t\t\ttargetBucket);\n\t\t\t\t\t}\n\t\t\t\t\tLoggingEnabled loggingEnabled = new LoggingEnabled();\n\t\t\t\t\tloggingEnabled.setTargetBucket(bucketInfo.getTargetBucket());\n\t\t\t\t\tloggingEnabled.setTargetPrefix(bucketInfo.getTargetPrefix());\n\n\t\t\t\t\tTargetGrants targetGrants = new TargetGrants();\n\t\t\t\t\ttargetGrants.setGrants(grants);\n\t\t\t\t\tloggingEnabled.setTargetGrants(targetGrants);\n\t\t\t\t\treply.setLoggingEnabled(loggingEnabled);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLOG.error( \"Not authorized to get bucket logging status by \" + ctx.getUserFullName( ) );\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new AccessDeniedException(\"Bucket\", bucketInfo.getBucketName( ) );\t\t\t  \n\t\t\t}\n\t\t} catch (EucalyptusCloudException ex) {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucket);\n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","commit_id":"5bc1cac81da6a08a237cef10e2b197e764d47c73","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"protected MethodNode addClassUnderTestMethod(ClassNode classNode, ClassExpression targetClass, String type) {\n\n        String methodName = \"setup\" + type + \"UnderTest\";\n        String fieldName = GrailsNameUtils.getPropertyName(type);\n\n        if (classNode.getField(fieldName) == null) {\n            classNode.addField(fieldName, Modifier.PRIVATE, targetClass.getType(),null);\n        }\n\n        MethodNode methodNode = classNode.getMethod(methodName,GrailsArtefactClassInjector.ZERO_PARAMETERS);\n\n        if (methodNode == null) {\n            BlockStatement methodBody = new BlockStatement();\n            VariableExpression fieldExpression = new VariableExpression(fieldName);\n            addMockCollaborator(type, targetClass, methodBody);\n            BinaryExpression testTargetAssignment = new BinaryExpression(fieldExpression, ASSIGN, new ConstructorCallExpression(targetClass.getType(), GrailsArtefactClassInjector.ZERO_ARGS));\n            methodBody.addStatement(new ExpressionStatement(testTargetAssignment));\n            VariableExpression appCtxVar = new VariableExpression(\"applicationContext\");\n            BooleanExpression applicationContextCheck = new BooleanExpression(new BinaryExpression(appCtxVar, GrailsASTUtils.NOT_EQUALS_OPERATOR, GrailsASTUtils.NULL_EXPRESSION));\n            BlockStatement performAutowireBlock = new BlockStatement();\n            ArgumentListExpression arguments = new ArgumentListExpression();\n            arguments.addExpression(fieldExpression);\n            arguments.addExpression(new ConstantExpression(1));\n            arguments.addExpression(new ConstantExpression(false));\n            performAutowireBlock.addStatement(new ExpressionStatement(new MethodCallExpression(new PropertyExpression(appCtxVar,\"autowireCapableBeanFactory\"), \"autowireBeanProperties\", arguments)));\n            methodBody.addStatement(new IfStatement(applicationContextCheck, performAutowireBlock,new BlockStatement()));\n            methodNode = new MethodNode(methodName, Modifier.PUBLIC, ClassHelper.VOID_TYPE, GrailsArtefactClassInjector.ZERO_PARAMETERS,null, methodBody);\n            methodNode.addAnnotation(BEFORE_ANNOTATION);\n            methodNode.addAnnotation(MIXIN_METHOD_ANNOTATION);\n            classNode.addMethod(methodNode);\n        }\n\n        return methodNode;\n    }","id":4631,"modified_method":"protected MethodNode addClassUnderTestMethod(ClassNode classNode, ClassExpression targetClass, String type) {\n\n        String methodName = \"setup\" + type + \"UnderTest\";\n        String fieldName = GrailsNameUtils.getPropertyName(type);\n        String getterName = GrailsNameUtils.getGetterName(fieldName);\n        fieldName = '$' +fieldName;\n\n        if (classNode.getField(fieldName) == null) {\n            classNode.addField(fieldName, Modifier.PRIVATE, targetClass.getType(),null);\n        }\n\n        MethodNode methodNode = classNode.getMethod(methodName,GrailsArtefactClassInjector.ZERO_PARAMETERS);\n\n        VariableExpression fieldExpression = new VariableExpression(fieldName);\n        if (methodNode == null) {\n            BlockStatement setupMethodBody = new BlockStatement();\n            addMockCollaborator(type, targetClass, setupMethodBody);\n\n\n            methodNode = new MethodNode(methodName, Modifier.PUBLIC, ClassHelper.VOID_TYPE, GrailsArtefactClassInjector.ZERO_PARAMETERS,null, setupMethodBody);\n            methodNode.addAnnotation(BEFORE_ANNOTATION);\n            methodNode.addAnnotation(MIXIN_METHOD_ANNOTATION);\n            classNode.addMethod(methodNode);\n        }\n\n        MethodNode getter = classNode.getMethod(getterName, GrailsArtefactClassInjector.ZERO_PARAMETERS);\n        if(getter == null) {\n            BlockStatement getterBody = new BlockStatement();\n            getter = new MethodNode(getterName, Modifier.PUBLIC, targetClass.getType().getPlainNodeReference(),GrailsArtefactClassInjector.ZERO_PARAMETERS,null, getterBody);\n\n            BinaryExpression testTargetAssignment = new BinaryExpression(fieldExpression, ASSIGN, new ConstructorCallExpression(targetClass.getType(), GrailsArtefactClassInjector.ZERO_ARGS));\n            getterBody.addStatement(new IfStatement(new BooleanExpression(new BinaryExpression(fieldExpression, GrailsASTUtils.EQUALS_OPERATOR, GrailsASTUtils.NULL_EXPRESSION)), new ExpressionStatement(testTargetAssignment), new BlockStatement()));\n\n            IfStatement autowiringIfStatement = getAutowiringIfStatement(fieldExpression);\n            getterBody.addStatement(autowiringIfStatement);\n\n            getterBody.addStatement(new ReturnStatement(fieldExpression));\n            classNode.addMethod(getter);\n        }\n\n        return methodNode;\n    }","commit_id":"b6adf4fc4d0bba2ff99ef355d1bf56a3bc56a701","url":"https://github.com/grails/grails-core"},{"original_method":"protected MethodNode addClassUnderTestMethod(ClassNode classNode, ClassExpression targetClass, String type) {\n\n        String methodName = \"setup\" + type + \"UnderTest\";\n        String fieldName = GrailsNameUtils.getPropertyName(type);\n\n        if (classNode.getField(fieldName) == null) {\n            classNode.addField(fieldName, Modifier.PRIVATE, targetClass.getType(),null);\n        }\n\n        MethodNode methodNode = classNode.getMethod(methodName,GrailsArtefactClassInjector.ZERO_PARAMETERS);\n\n        if (methodNode == null) {\n            BlockStatement methodBody = new BlockStatement();\n            VariableExpression fieldExpression = new VariableExpression(fieldName);\n            addMockCollaborator(type, targetClass, methodBody);\n            BinaryExpression testTargetAssignment = new BinaryExpression(fieldExpression, ASSIGN, new ConstructorCallExpression(targetClass.getType(), GrailsArtefactClassInjector.ZERO_ARGS));\n            methodBody.addStatement(new ExpressionStatement(testTargetAssignment));\n            VariableExpression appCtxVar = new VariableExpression(\"applicationContext\");\n            BooleanExpression applicationContextCheck = new BooleanExpression(new BinaryExpression(appCtxVar, GrailsASTUtils.NOT_EQUALS_OPERATOR, GrailsASTUtils.NULL_EXPRESSION));\n            BlockStatement performAutowireBlock = new BlockStatement();\n            ArgumentListExpression arguments = new ArgumentListExpression();\n            arguments.addExpression(fieldExpression);\n            arguments.addExpression(new ConstantExpression(1));\n            arguments.addExpression(new ConstantExpression(false));\n            performAutowireBlock.addStatement(new ExpressionStatement(new MethodCallExpression(new PropertyExpression(appCtxVar,\"autowireCapableBeanFactory\"), \"autowireBeanProperties\", arguments)));\n            methodBody.addStatement(new IfStatement(applicationContextCheck, performAutowireBlock,new BlockStatement()));\n            methodNode = new MethodNode(methodName, Modifier.PUBLIC, ClassHelper.VOID_TYPE, GrailsArtefactClassInjector.ZERO_PARAMETERS,null, methodBody);\n            methodNode.addAnnotation(BEFORE_ANNOTATION);\n            methodNode.addAnnotation(MIXIN_METHOD_ANNOTATION);\n            classNode.addMethod(methodNode);\n        }\n\n        return methodNode;\n    }","id":4632,"modified_method":"protected MethodNode addClassUnderTestMethod(ClassNode classNode, ClassExpression targetClass, String type) {\n\n        String methodName = \"setup\" + type + \"UnderTest\";\n        String fieldName = GrailsNameUtils.getPropertyName(type);\n        String getterName = GrailsNameUtils.getGetterName(fieldName);\n        fieldName = '$' +fieldName;\n\n        if (classNode.getField(fieldName) == null) {\n            classNode.addField(fieldName, Modifier.PRIVATE, targetClass.getType(),null);\n        }\n\n        MethodNode methodNode = classNode.getMethod(methodName,GrailsArtefactClassInjector.ZERO_PARAMETERS);\n\n        VariableExpression fieldExpression = new VariableExpression(fieldName);\n        if (methodNode == null) {\n            BlockStatement setupMethodBody = new BlockStatement();\n            addMockCollaborator(type, targetClass, setupMethodBody);\n\n\n            methodNode = new MethodNode(methodName, Modifier.PUBLIC, ClassHelper.VOID_TYPE, GrailsArtefactClassInjector.ZERO_PARAMETERS,null, setupMethodBody);\n            methodNode.addAnnotation(BEFORE_ANNOTATION);\n            methodNode.addAnnotation(MIXIN_METHOD_ANNOTATION);\n            classNode.addMethod(methodNode);\n        }\n\n        MethodNode getter = classNode.getMethod(getterName, GrailsArtefactClassInjector.ZERO_PARAMETERS);\n        if(getter == null) {\n            BlockStatement getterBody = new BlockStatement();\n            getter = new MethodNode(getterName, Modifier.PUBLIC, targetClass.getType().getPlainNodeReference(),GrailsArtefactClassInjector.ZERO_PARAMETERS,null, getterBody);\n\n            BinaryExpression testTargetAssignment = new BinaryExpression(fieldExpression, ASSIGN, new ConstructorCallExpression(targetClass.getType(), GrailsArtefactClassInjector.ZERO_ARGS));\n            getterBody.addStatement(new IfStatement(new BooleanExpression(new BinaryExpression(fieldExpression, GrailsASTUtils.EQUALS_OPERATOR, GrailsASTUtils.NULL_EXPRESSION)), new ExpressionStatement(testTargetAssignment), new BlockStatement()));\n\n            IfStatement autowiringIfStatement = getAutowiringIfStatement(fieldExpression);\n            getterBody.addStatement(autowiringIfStatement);\n\n            getterBody.addStatement(new ReturnStatement(fieldExpression));\n            classNode.addMethod(getter);\n        }\n\n        return methodNode;\n    }","commit_id":"48443bc77d2946ce988137981bcad2d006e94e0f","url":"https://github.com/grails/grails-core"},{"original_method":"public void launchSpoon(JobEntryTrans entry)\n\t{\n\t\t// Load from repository?\n\t\tif ( (entry.getFileName()==null || entry.getFileName().length()==0) &&\n\t\t     (entry.getTransname()!=null && entry.getTransname().length()>0)\n\t\t   )\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tSpoon sp = new Spoon(log, chef.disp, chef.rep);\n\t\t\t\t// New transformation?\n\t\t\t\t//\n\t\t\t\tlong id = sp.rep.getTransformationID(entry.getTransname(), entry.getDirectory().getID());\n\t\t\t\tif (id<0) // New\n\t\t\t\t{\n\t\t\t\t\tsp.setTransMeta( new TransMeta(null, entry.getTransname(), entry.arguments) );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsp.setTransMeta( new TransMeta(sp.rep, entry.getTransname(), entry.getDirectory()) );\n\t\t\t\t}\n\t\t\t\tsp.getTransMeta().clearChanged();\n\t\t\t\tsp.open();\n\t\t\t}\n\t\t\tcatch(Throwable ke)\n\t\t\t{\n\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\n\t\t\t\tmb.setMessage(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingSpoonCanNotLoadTransformation.Message\")+Const.CR+ke.getMessage()); //$NON-NLS-1$\n\t\t\t\tmb.setText(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingSpoonCanNotLoadTransformation.Title\")); //$NON-NLS-1$\n\t\t\t\tmb.open();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// Read from file...\n\t\t\t\tSpoon sp = new Spoon(log, chef.disp, null);\n\t\t\t\tsp.setTransMeta( new TransMeta(entry.getFileName()) );\n\t\t\t\tsp.getTransMeta().clearChanged();\n\t\t\t\tsp.setFilename(entry.getFileName());\n\t\t\t\tsp.open();\n\t\t\t}\n\t\t\tcatch(Throwable xe)\n\t\t\t{\n\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\n\t\t\t\tmb.setMessage(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingSpoonCanNotLoadTransformationFromXML.Message\")+Const.CR+xe.getMessage()); //$NON-NLS-1$\n\t\t\t\tmb.setText(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingSpoonCanNotLoadTransformationFromXML.Title\")); //$NON-NLS-1$\n\t\t\t\tmb.open();\n\t\t\t}\n\n\t\t}\n\t}","id":4633,"modified_method":"public void launchSpoon(JobEntryTrans entry)\n\t{\n\t\t// Load from repository?\n\t\tif ( Const.isEmpty(entry.getFileName()) && !Const.isEmpty(entry.getTransname()) )\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tSpoon sp = new Spoon(log, chef.disp, chef.rep);\n\t\t\t\t// New transformation?\n\t\t\t\t//\n\t\t\t\tlong id = sp.rep.getTransformationID(StringUtil.environmentSubstitute(entry.getTransname()), entry.getDirectory().getID());\n\t\t\t\tif (id<0) // New\n\t\t\t\t{\n\t\t\t\t\tsp.setTransMeta( new TransMeta(null, StringUtil.environmentSubstitute(entry.getTransname()), entry.arguments) );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsp.setTransMeta( new TransMeta(sp.rep, StringUtil.environmentSubstitute(entry.getTransname()), entry.getDirectory()) );\n\t\t\t\t}\n\t\t\t\tsp.getTransMeta().clearChanged();\n\t\t\t\tsp.open();\n\t\t\t}\n\t\t\tcatch(Throwable ke)\n\t\t\t{\n\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\n\t\t\t\tmb.setMessage(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingSpoonCanNotLoadTransformation.Message\")+Const.CR+ke.getMessage()); //$NON-NLS-1$\n\t\t\t\tmb.setText(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingSpoonCanNotLoadTransformation.Title\")); //$NON-NLS-1$\n\t\t\t\tmb.open();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// Read from file...\n\t\t\t\tSpoon sp = new Spoon(log, chef.disp, null);\n\t\t\t\tsp.setTransMeta( new TransMeta( StringUtil.environmentSubstitute(entry.getFileName() )) );\n\t\t\t\tsp.getTransMeta().clearChanged();\n\t\t\t\tsp.setFilename(entry.getFileName());\n\t\t\t\tsp.open();\n\t\t\t}\n\t\t\tcatch(Throwable xe)\n\t\t\t{\n\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\n\t\t\t\tmb.setMessage(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingSpoonCanNotLoadTransformationFromXML.Message\")+Const.CR+xe.getMessage()); //$NON-NLS-1$\n\t\t\t\tmb.setText(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingSpoonCanNotLoadTransformationFromXML.Title\")); //$NON-NLS-1$\n\t\t\t\tmb.open();\n\t\t\t}\n\n\t\t}\n\t}","commit_id":"87eead458b90a7a063b13e77bcfa0d479ce9719e","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void launchChef(JobEntryJob entry)\n\t{\n\t\t// Load from repository?\n\t\tif ( (entry.getFileName()==null || entry.getFileName().length()==0) &&\n\t\t\t (entry.getName()!=null && entry.getName().length()>0)\n\t\t   )\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tChef ch = new Chef(log, chef.disp, chef.rep);\n\t\t\t\tch.jobMeta = new JobMeta(log, ch.rep, entry.getJobName(), entry.getDirectory());\n\t\n\t\t\t\tch.jobMeta.clearChanged();\n\t\t\t\tch.open();\n\t\t\t}\n\t\t\tcatch(Throwable e)\n\t\t\t{\n\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\n\t\t\t\tmb.setMessage(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingChefCanNotLoadJob.Message\")+Const.CR+e.getMessage()); //$NON-NLS-1$\n\t\t\t\tmb.setText(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingChefCanNotLoadJob.Title\")); //$NON-NLS-1$\n\t\t\t\tmb.open();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tChef ch = new Chef(log, chef.disp, null);\n\t\t\t\tch.jobMeta = new JobMeta(log, entry.getFileName(), chef.rep);\n\t\t\t\tch.jobMeta.setFilename( entry.getFileName() );\n\t\t\t\tch.jobMeta.clearChanged();\n\t\t\t\tch.refreshTree();\n\t\t\t\tch.refreshGraph();\n\t\t\t\tch.open();\n\t\t\t}\n\t\t\tcatch(Throwable e)\n\t\t\t{\n\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\n\t\t\t\tmb.setMessage(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingChefCanNotLoadJobFromXML.Message\")+Const.CR+e.getMessage()); //$NON-NLS-1$\n\t\t\t\tmb.setText(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingChefCanNotLoadJobFromXML.Title\")); //$NON-NLS-1$\n\t\t\t\tmb.open();\n\t\t\t}\n\t\t}\n\t}","id":4634,"modified_method":"public void launchChef(JobEntryJob entry)\n\t{\n\t\t// Load from repository?\n\t\tif ( Const.isEmpty(entry.getFileName()) && !Const.isEmpty(entry.getName()) )\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tChef ch = new Chef(log, chef.disp, chef.rep);\n\t\t\t\tch.jobMeta = new JobMeta(log, ch.rep, entry.getJobName(), entry.getDirectory());\n\t\n\t\t\t\tch.jobMeta.clearChanged();\n\t\t\t\tch.open();\n\t\t\t}\n\t\t\tcatch(Throwable e)\n\t\t\t{\n\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\n\t\t\t\tmb.setMessage(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingChefCanNotLoadJob.Message\")+Const.CR+e.getMessage()); //$NON-NLS-1$\n\t\t\t\tmb.setText(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingChefCanNotLoadJob.Title\")); //$NON-NLS-1$\n\t\t\t\tmb.open();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tChef ch = new Chef(log, chef.disp, null);\n\t\t\t\tch.jobMeta = new JobMeta(log, StringUtil.environmentSubstitute(entry.getFileName()), chef.rep);\n\t\t\t\tch.jobMeta.setFilename( entry.getFileName() );\n\t\t\t\tch.jobMeta.clearChanged();\n\t\t\t\tch.refreshTree();\n\t\t\t\tch.refreshGraph();\n\t\t\t\tch.open();\n\t\t\t}\n\t\t\tcatch(Throwable e)\n\t\t\t{\n\t\t\t\tMessageBox mb = new MessageBox(shell, SWT.OK | SWT.ICON_ERROR );\n\t\t\t\tmb.setMessage(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingChefCanNotLoadJobFromXML.Message\")+Const.CR+e.getMessage()); //$NON-NLS-1$\n\t\t\t\tmb.setText(Messages.getString(\"ChefGraph.Dialog.ErrorLaunchingChefCanNotLoadJobFromXML.Title\")); //$NON-NLS-1$\n\t\t\t\tmb.open();\n\t\t\t}\n\t\t}\n\t}","commit_id":"87eead458b90a7a063b13e77bcfa0d479ce9719e","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public Result execute(Result result, int nr, Repository rep, Job parentJob) throws KettleException\n\t{\n        try\n        {\n    \t\tresult.setEntryNr( nr );\n    \t\t\n    \t\tLogWriter logwriter = log;\n    \t\tif (setLogfile) logwriter = LogWriter.getInstance(getLogFilename(), true, loglevel);\n    \t\t\n            int iteration = 0;\n            String args[] = arguments;\n            Row resultRow = null;\n            boolean first = true;\n            List rows = result.getRows();\n            \n            while( ( first && !execPerRow ) || ( execPerRow && rows!=null && iteration<rows.size() && result.getNrErrors()==0 ) )\n            {\n                first=false;\n                if (rows!=null && execPerRow)\n                {\n                \tresultRow = (Row) rows.get(iteration);\n                }\n                else\n                {\n                \tresultRow = null;\n                }\n                \n                JobMeta jobMeta = null;\n                if (rep!=null && jobname!=null && jobname.length()>0 && directory!=null) // load from the repository...\n                {\n                    log.logDetailed(toString(), \"Loading job from repository : [\"+directory+\" : \"+jobname+\"]\");\n                    jobMeta = new JobMeta(logwriter, rep, jobname, directory);\n                }\n                else // Get it from the XML file\n                if (filename!=null)\n                {\n                    log.logDetailed(toString(), \"Loading job from XML file : [\"+filename+\"]\");\n                    jobMeta = new JobMeta(logwriter, filename, rep);\n                }\n                \n                if (jobMeta==null)\n                {\n                    throw new KettleException(\"Unable to load the job: please specify the name and repository directory OR a filename\");\n                }\n                \n                // Create a new job in a different ClassLoader\n                Job job = Job.createJobWithNewClassLoader();\n                \n                job.open(logwriter, StepLoader.getInstance(), rep, jobMeta);\n                \n                // Link the job with the sub-job\n                parentJob.getJobTracker().addJobTracker(job.getJobTracker()); \n                \n                // Link both ways!\n                job.getJobTracker().setParentJobTracker(parentJob.getJobTracker()); \n                \n                // Tell this sub-job about its parent...\n                job.setParentJob(parentJob);\n                \n                // Variables are passed down...\n                LocalVariables localVariables = LocalVariables.getInstance();\n                \n                // Create a new KettleVariables instance here...\n                localVariables.createKettleVariables(job, parentJob, false);\n                \n                if (parentJob.getJobMeta().isBatchIdPassed())\n                {\n                    job.getJobMeta().setBatchId(parentJob.getJobMeta().getBatchId());\n                }\n    \t\t\t\n                if (execPerRow) // Execute for each input row\n                {\n                    if (argFromPrevious) // Copy the input row to the (command line) arguments\n                    {\n                        args = null;\n                        if (resultRow!=null)\n                        {\n                            args = new String[resultRow.size()];\n                            for (int i=0;i<resultRow.size();i++)\n                            {\n                                args[i] = resultRow.getValue(i).getString();\n                            }\n                        }\n                    }\n                    else\n                    {\n                        // Just pass a single row\n                        ArrayList newList = new ArrayList();\n                        newList.add(resultRow);\n                        job.setSourceRows(newList);\n                    }\n                }\n                else\n                {\n                    if (argFromPrevious)\n                    {\n                        // Only put the first Row on the arguments\n                        args = null;\n                        if (resultRow!=null)\n                        {\n                            args = new String[resultRow.size()];\n                            for (int i=0;i<resultRow.size();i++)\n                            {\n                                args[i] = resultRow.getValue(i).toString();\n                            }\n                        }\n                    }\n                    else\n                    {\n                        // Keep it as it was...\n                        job.setSourceRows(result.getRows());\n                    }\n                }\n    \n                job.getJobMeta().setArguments( args );\n                \n                JobEntryJobRunner runner = new JobEntryJobRunner( job, result, nr);\n    \t\t\tnew Thread(runner).start();\n        \t\t\n                try\n                {\n        \t\t\twhile (!runner.isFinished() && !parentJob.isStopped())\n        \t\t\t{\n        \t\t\t\ttry { Thread.sleep(100);}\n        \t\t\t\tcatch(InterruptedException e) { }\n        \t\t\t}\n            \t\t\t\n        \t\t\t// if the parent-job was stopped, stop the sub-job too... \n        \t\t\tif (parentJob.isStopped())\n        \t\t\t{\n        \t\t\t\tjob.stopAll();\n        \t\t\t\trunner.waitUntilFinished(); // Wait until finished!\n        \t\t\t\tjob.endProcessing(\"stop\");\n        \t\t\t}\n        \t\t\telse\n        \t\t\t{\n        \t\t\t\tjob.endProcessing(\"end\");\n        \t\t\t}\n                }\n        \t\tcatch(KettleException je)\n        \t\t{\n        \t\t\tlog.logError(toString(), \"Unable to open job entry job with name [\"+getName()+\"] : \"+Const.CR+je.toString());\n        \t\t\tresult.setNrErrors(1);\n        \t\t}\n    \n                Result oneResult = runner.getResult();\n                if (iteration==0)\n                {\n                    result.clear();\n                }\n                result.add(oneResult);\n    \n                iteration++;\n            }\n    \t\t\n    \t\tif (setLogfile) logwriter.close();\n    \t\t\n    \t\tif (result.getNrErrors() > 0)\n    \t\t{\n    \t\t\tresult.setResult( false );\n    \t\t}\n    \t\telse\n    \t\t{\n    \t\t\tresult.setResult( true );\n    \t\t}\n    \n    \t\treturn result;\n        }\n        catch(KettleException ke)\n        {\n            log.logError(toString(), \"Error running job entry 'job' : \"+ke.toString());\n            log.logError(toString(), Const.getStackTracker(ke));\n            \n            result.setResult(false);\n            result.setNrErrors(1L);\n            \n            return result;\n        }\n\t}","id":4635,"modified_method":"public Result execute(Result result, int nr, Repository rep, Job parentJob) throws KettleException\n\t{\n        try\n        {\n    \t\tresult.setEntryNr( nr );\n    \t\t\n    \t\tLogWriter logwriter = log;\n    \t\tif (setLogfile) logwriter = LogWriter.getInstance(getLogFilename(), true, loglevel);\n    \t\t\n            int iteration = 0;\n            String args[] = arguments;\n            Row resultRow = null;\n            boolean first = true;\n            List rows = result.getRows();\n            \n            while( ( first && !execPerRow ) || ( execPerRow && rows!=null && iteration<rows.size() && result.getNrErrors()==0 ) )\n            {\n                first=false;\n                if (rows!=null && execPerRow)\n                {\n                \tresultRow = (Row) rows.get(iteration);\n                }\n                else\n                {\n                \tresultRow = null;\n                }\n                \n                JobMeta jobMeta = null;\n                if (rep!=null && !Const.isEmpty(jobname) && directory!=null) // load from the repository...\n                {\n                    log.logDetailed(toString(), \"Loading job from repository : [\"+directory+\" : \"+StringUtil.environmentSubstitute(jobname)+\"]\");\n                    jobMeta = new JobMeta(logwriter, rep, StringUtil.environmentSubstitute(jobname), directory);\n                }\n                else // Get it from the XML file\n                if (!Const.isEmpty(filename))\n                {\n                    log.logDetailed(toString(), \"Loading job from XML file : [\"+StringUtil.environmentSubstitute(filename)+\"]\");\n                    jobMeta = new JobMeta(logwriter, StringUtil.environmentSubstitute(filename), rep);\n                }\n                \n                if (jobMeta==null)\n                {\n                    throw new KettleException(\"Unable to load the job: please specify the name and repository directory OR a filename\");\n                }\n                \n                // Create a new job in a different ClassLoader\n                Job job = Job.createJobWithNewClassLoader();\n                \n                job.open(logwriter, StepLoader.getInstance(), rep, jobMeta);\n                \n                // Link the job with the sub-job\n                parentJob.getJobTracker().addJobTracker(job.getJobTracker()); \n                \n                // Link both ways!\n                job.getJobTracker().setParentJobTracker(parentJob.getJobTracker()); \n                \n                // Tell this sub-job about its parent...\n                job.setParentJob(parentJob);\n                \n                // Variables are passed down...\n                LocalVariables localVariables = LocalVariables.getInstance();\n                \n                // Create a new KettleVariables instance here...\n                localVariables.createKettleVariables(job, parentJob, false);\n                \n                if (parentJob.getJobMeta().isBatchIdPassed())\n                {\n                    job.getJobMeta().setBatchId(parentJob.getJobMeta().getBatchId());\n                }\n    \t\t\t\n                if (execPerRow) // Execute for each input row\n                {\n                    if (argFromPrevious) // Copy the input row to the (command line) arguments\n                    {\n                        args = null;\n                        if (resultRow!=null)\n                        {\n                            args = new String[resultRow.size()];\n                            for (int i=0;i<resultRow.size();i++)\n                            {\n                                args[i] = resultRow.getValue(i).getString();\n                            }\n                        }\n                    }\n                    else\n                    {\n                        // Just pass a single row\n                        ArrayList newList = new ArrayList();\n                        newList.add(resultRow);\n                        job.setSourceRows(newList);\n                    }\n                }\n                else\n                {\n                    if (argFromPrevious)\n                    {\n                        // Only put the first Row on the arguments\n                        args = null;\n                        if (resultRow!=null)\n                        {\n                            args = new String[resultRow.size()];\n                            for (int i=0;i<resultRow.size();i++)\n                            {\n                                args[i] = resultRow.getValue(i).toString();\n                            }\n                        }\n                    }\n                    else\n                    {\n                        // Keep it as it was...\n                        job.setSourceRows(result.getRows());\n                    }\n                }\n    \n                job.getJobMeta().setArguments( args );\n                \n                JobEntryJobRunner runner = new JobEntryJobRunner( job, result, nr);\n    \t\t\tnew Thread(runner).start();\n        \t\t\n                try\n                {\n        \t\t\twhile (!runner.isFinished() && !parentJob.isStopped())\n        \t\t\t{\n        \t\t\t\ttry { Thread.sleep(100);}\n        \t\t\t\tcatch(InterruptedException e) { }\n        \t\t\t}\n            \t\t\t\n        \t\t\t// if the parent-job was stopped, stop the sub-job too... \n        \t\t\tif (parentJob.isStopped())\n        \t\t\t{\n        \t\t\t\tjob.stopAll();\n        \t\t\t\trunner.waitUntilFinished(); // Wait until finished!\n        \t\t\t\tjob.endProcessing(\"stop\");\n        \t\t\t}\n        \t\t\telse\n        \t\t\t{\n        \t\t\t\tjob.endProcessing(\"end\");\n        \t\t\t}\n                }\n        \t\tcatch(KettleException je)\n        \t\t{\n        \t\t\tlog.logError(toString(), \"Unable to open job entry job with name [\"+getName()+\"] : \"+Const.CR+je.toString());\n        \t\t\tresult.setNrErrors(1);\n        \t\t}\n    \n                Result oneResult = runner.getResult();\n                if (iteration==0)\n                {\n                    result.clear();\n                }\n                result.add(oneResult);\n    \n                iteration++;\n            }\n    \t\t\n    \t\tif (setLogfile) logwriter.close();\n    \t\t\n    \t\tif (result.getNrErrors() > 0)\n    \t\t{\n    \t\t\tresult.setResult( false );\n    \t\t}\n    \t\telse\n    \t\t{\n    \t\t\tresult.setResult( true );\n    \t\t}\n    \n    \t\treturn result;\n        }\n        catch(KettleException ke)\n        {\n            log.logError(toString(), \"Error running job entry 'job' : \"+ke.toString());\n            log.logError(toString(), Const.getStackTracker(ke));\n            \n            result.setResult(false);\n            result.setNrErrors(1L);\n            \n            return result;\n        }\n\t}","commit_id":"40468d5f19d2ee0c0d013620d1c9deeb6f0834ff","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private TransMeta getTransMeta(Repository rep) throws KettleException\n    {\n        TransMeta transMeta = null;\n        if (getTransname() != null && getTransname().length() > 0 && // Load from the repository\n                getDirectory() != null)\n        {\n            transMeta = new TransMeta(rep, getTransname(), getDirectory());\n        }\n        else\n            if (getFileName() != null && getFileName().length() > 0) // Load from an XML file\n            {\n\n                transMeta = new TransMeta(getFileName());\n            }\n            else\n            {\n                throw new KettleJobException(\"The transformation to execute is not specified!\");\n            }\n\n        // Set the arguments...\n        transMeta.setArguments(arguments);\n\n        return transMeta;\n    }","id":4636,"modified_method":"private TransMeta getTransMeta(Repository rep) throws KettleException\n    {\n        TransMeta transMeta = null;\n        if (!Const.isEmpty(getTransname()) && // Load from the repository\n                getDirectory() != null)\n        {\n            transMeta = new TransMeta(rep, StringUtil.environmentSubstitute(getTransname()), getDirectory());\n        }\n        else\n            if (getFileName() != null && getFileName().length() > 0) // Load from an XML file\n            {\n\n                transMeta = new TransMeta(StringUtil.environmentSubstitute(getFileName()));\n            }\n            else\n            {\n                throw new KettleJobException(\"The transformation to execute is not specified!\");\n            }\n\n        // Set the arguments...\n        transMeta.setArguments(arguments);\n\n        return transMeta;\n    }","commit_id":"40468d5f19d2ee0c0d013620d1c9deeb6f0834ff","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public MBMessageDisplay getMessageDisplay(\n\t\t\tMBMessage message, int status, String threadView,\n\t\t\tboolean includePrevAndNext)\n\t\tthrows PortalException, SystemException {\n\n\t\tMBCategory category = null;\n\n\t\tif (!message.isDiscussion()) {\n\t\t\tcategory = mbCategoryPersistence.findByPrimaryKey(\n\t\t\t\tmessage.getCategoryId());\n\t\t}\n\n\t\tMBMessage parentMessage = null;\n\n\t\tif (message.isReply()) {\n\t\t\tparentMessage = mbMessagePersistence.findByPrimaryKey(\n\t\t\t\tmessage.getParentMessageId());\n\t\t}\n\n\t\tMBThread thread = mbThreadPersistence.findByPrimaryKey(\n\t\t\tmessage.getThreadId());\n\n\t\tif (!message.isDiscussion() &&\n\t\t\t(message.getStatus() == WorkflowConstants.STATUS_APPROVED)) {\n\n\t\t\tmbThreadLocalService.updateThread(\n\t\t\t\tthread.getThreadId(), thread.getViewCount() + 1);\n\t\t}\n\n\t\tMBThread previousThread = null;\n\t\tMBThread nextThread = null;\n\n\t\tif ((message.getStatus() == WorkflowConstants.STATUS_APPROVED) &&\n\t\t\tincludePrevAndNext) {\n\n\t\t\tThreadLastPostDateComparator comparator =\n\t\t\t\tnew ThreadLastPostDateComparator(false);\n\n\t\t\tMBThread[] prevAndNextThreads =\n\t\t\t\tmbThreadPersistence.findByG_C_PrevAndNext(\n\t\t\t\t\tmessage.getThreadId(), message.getGroupId(),\n\t\t\t\t\tmessage.getCategoryId(), comparator);\n\n\t\t\tpreviousThread = prevAndNextThreads[0];\n\t\t\tnextThread = prevAndNextThreads[2];\n\t\t}\n\n\t\treturn new MBMessageDisplayImpl(\n\t\t\tmessage, parentMessage, category, thread,\n\t\t\tpreviousThread, nextThread, status, threadView);\n\t}","id":4637,"modified_method":"public MBMessageDisplay getMessageDisplay(\n\t\t\tMBMessage message, int status, String threadView,\n\t\t\tboolean includePrevAndNext)\n\t\tthrows PortalException, SystemException {\n\n\t\tMBCategory category = null;\n\n\t\tif (message.getCategoryId() > 0) {\n\t\t\tcategory = mbCategoryPersistence.findByPrimaryKey(\n\t\t\t\tmessage.getCategoryId());\n\t\t}\n\n\t\tMBMessage parentMessage = null;\n\n\t\tif (message.isReply()) {\n\t\t\tparentMessage = mbMessagePersistence.findByPrimaryKey(\n\t\t\t\tmessage.getParentMessageId());\n\t\t}\n\n\t\tMBThread thread = mbThreadPersistence.findByPrimaryKey(\n\t\t\tmessage.getThreadId());\n\n\t\tif (!message.isDiscussion() &&\n\t\t\t(message.getStatus() == WorkflowConstants.STATUS_APPROVED)) {\n\n\t\t\tmbThreadLocalService.updateThread(\n\t\t\t\tthread.getThreadId(), thread.getViewCount() + 1);\n\t\t}\n\n\t\tMBThread previousThread = null;\n\t\tMBThread nextThread = null;\n\n\t\tif ((message.getStatus() == WorkflowConstants.STATUS_APPROVED) &&\n\t\t\tincludePrevAndNext) {\n\n\t\t\tThreadLastPostDateComparator comparator =\n\t\t\t\tnew ThreadLastPostDateComparator(false);\n\n\t\t\tMBThread[] prevAndNextThreads =\n\t\t\t\tmbThreadPersistence.findByG_C_PrevAndNext(\n\t\t\t\t\tmessage.getThreadId(), message.getGroupId(),\n\t\t\t\t\tmessage.getCategoryId(), comparator);\n\n\t\t\tpreviousThread = prevAndNextThreads[0];\n\t\t\tnextThread = prevAndNextThreads[2];\n\t\t}\n\n\t\treturn new MBMessageDisplayImpl(\n\t\t\tmessage, parentMessage, category, thread,\n\t\t\tpreviousThread, nextThread, status, threadView);\n\t}","commit_id":"418dc3d913ec1a1c0443ab6f594696ddbe9b8796","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void deleteThread(MBThread thread)\n\t\tthrows PortalException, SystemException {\n\n\t\tMBMessage rootMessage = mbMessagePersistence.findByPrimaryKey(\n\t\t\tthread.getRootMessageId());\n\n\t\t// Indexer\n\n\t\tIndexer indexer = IndexerRegistryUtil.getIndexer(MBMessage.class);\n\n\t\tindexer.delete(thread);\n\n\t\t// Attachments\n\n\t\tlong companyId = rootMessage.getCompanyId();\n\t\tString portletId = CompanyConstants.SYSTEM_STRING;\n\t\tlong repositoryId = CompanyConstants.SYSTEM;\n\t\tString dirName = thread.getAttachmentsDir();\n\n\t\ttry {\n\t\t\tdlService.deleteDirectory(\n\t\t\t\tcompanyId, portletId, repositoryId, dirName);\n\t\t}\n\t\tcatch (NoSuchDirectoryException nsde) {\n\t\t}\n\n\t\t// Messages\n\n\t\tList<MBMessage> messages = mbMessagePersistence.findByThreadId(\n\t\t\tthread.getThreadId());\n\n\t\tfor (MBMessage message : messages) {\n\n\t\t\t// Social\n\n\t\t\tsocialActivityLocalService.deleteActivities(\n\t\t\t\tMBMessage.class.getName(), message.getMessageId());\n\n\t\t\t// Ratings\n\n\t\t\tratingsStatsLocalService.deleteStats(\n\t\t\t\tMBMessage.class.getName(), message.getMessageId());\n\n\t\t\t// Asset\n\n\t\t\tassetEntryLocalService.deleteEntry(\n\t\t\t\tMBMessage.class.getName(), message.getMessageId());\n\n\t\t\t// Statistics\n\n\t\t\tif (!message.isDiscussion()) {\n\t\t\t\tmbStatsUserLocalService.updateStatsUser(\n\t\t\t\t\tmessage.getGroupId(), message.getUserId());\n\t\t\t}\n\n\t\t\t// Message flags\n\n\t\t\tmbMessageFlagPersistence.removeByMessageId(message.getMessageId());\n\n\t\t\t// Resources\n\n\t\t\tif (!message.isDiscussion()) {\n\t\t\t\tresourceLocalService.deleteResource(\n\t\t\t\t\tmessage.getCompanyId(), MBMessage.class.getName(),\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, message.getMessageId());\n\t\t\t}\n\n\t\t\t// Message\n\n\t\t\tmbMessagePersistence.remove(message);\n\t\t}\n\n\t\t// Category\n\n\t\tif (!rootMessage.isDiscussion()) {\n\t\t\tMBCategory category = mbCategoryPersistence.findByPrimaryKey(\n\t\t\t\tthread.getCategoryId());\n\n\t\t\tcategory.setThreadCount(category.getThreadCount() - 1);\n\t\t\tcategory.setMessageCount(\n\t\t\t\tcategory.getMessageCount() - messages.size());\n\n\t\t\tmbCategoryPersistence.update(category, false);\n\t\t}\n\n\t\t// Thread\n\n\t\tmbThreadPersistence.remove(thread);\n\t}","id":4638,"modified_method":"public void deleteThread(MBThread thread)\n\t\tthrows PortalException, SystemException {\n\n\t\tMBMessage rootMessage = mbMessagePersistence.findByPrimaryKey(\n\t\t\tthread.getRootMessageId());\n\n\t\t// Indexer\n\n\t\tIndexer indexer = IndexerRegistryUtil.getIndexer(MBMessage.class);\n\n\t\tindexer.delete(thread);\n\n\t\t// Attachments\n\n\t\tlong companyId = rootMessage.getCompanyId();\n\t\tString portletId = CompanyConstants.SYSTEM_STRING;\n\t\tlong repositoryId = CompanyConstants.SYSTEM;\n\t\tString dirName = thread.getAttachmentsDir();\n\n\t\ttry {\n\t\t\tdlService.deleteDirectory(\n\t\t\t\tcompanyId, portletId, repositoryId, dirName);\n\t\t}\n\t\tcatch (NoSuchDirectoryException nsde) {\n\t\t}\n\n\t\t// Messages\n\n\t\tList<MBMessage> messages = mbMessagePersistence.findByThreadId(\n\t\t\tthread.getThreadId());\n\n\t\tfor (MBMessage message : messages) {\n\n\t\t\t// Social\n\n\t\t\tsocialActivityLocalService.deleteActivities(\n\t\t\t\tMBMessage.class.getName(), message.getMessageId());\n\n\t\t\t// Ratings\n\n\t\t\tratingsStatsLocalService.deleteStats(\n\t\t\t\tMBMessage.class.getName(), message.getMessageId());\n\n\t\t\t// Asset\n\n\t\t\tassetEntryLocalService.deleteEntry(\n\t\t\t\tMBMessage.class.getName(), message.getMessageId());\n\n\t\t\t// Statistics\n\n\t\t\tif (!message.isDiscussion()) {\n\t\t\t\tmbStatsUserLocalService.updateStatsUser(\n\t\t\t\t\tmessage.getGroupId(), message.getUserId());\n\t\t\t}\n\n\t\t\t// Message flags\n\n\t\t\tmbMessageFlagPersistence.removeByMessageId(message.getMessageId());\n\n\t\t\t// Resources\n\n\t\t\tif (!message.isDiscussion()) {\n\t\t\t\tresourceLocalService.deleteResource(\n\t\t\t\t\tmessage.getCompanyId(), MBMessage.class.getName(),\n\t\t\t\t\tResourceConstants.SCOPE_INDIVIDUAL, message.getMessageId());\n\t\t\t}\n\n\t\t\t// Message\n\n\t\t\tmbMessagePersistence.remove(message);\n\t\t}\n\n\t\t// Category\n\n\t\tif (rootMessage.getCategoryId() > 0) {\n\t\t\tMBCategory category = mbCategoryPersistence.findByPrimaryKey(\n\t\t\t\tthread.getCategoryId());\n\n\t\t\tcategory.setThreadCount(category.getThreadCount() - 1);\n\t\t\tcategory.setMessageCount(\n\t\t\t\tcategory.getMessageCount() - messages.size());\n\n\t\t\tmbCategoryPersistence.update(category, false);\n\t\t}\n\n\t\t// Thread\n\n\t\tmbThreadPersistence.remove(thread);\n\t}","commit_id":"418dc3d913ec1a1c0443ab6f594696ddbe9b8796","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public MBThread moveThread(long groupId, long categoryId, long threadId)\n\t\tthrows PortalException, SystemException {\n\n\t\tMBThread thread = mbThreadPersistence.findByPrimaryKey(\n\t\t\tthreadId);\n\n\t\tlong oldCategoryId = thread.getCategoryId();\n\n\t\tMBCategory oldCategory = mbCategoryPersistence.findByPrimaryKey(\n\t\t\toldCategoryId);\n\n\t\tMBCategory category = mbCategoryPersistence.findByPrimaryKey(\n\t\t\tcategoryId);\n\n\t\t// Messages\n\n\t\tList<MBMessage> messages = mbMessagePersistence.findByG_C_T(\n\t\t\tgroupId, oldCategoryId, thread.getThreadId());\n\n\t\tfor (MBMessage message : messages) {\n\t\t\tmessage.setCategoryId(category.getCategoryId());\n\n\t\t\tmbMessagePersistence.update(message, false);\n\n\t\t\t// Indexer\n\n\t\t\tif (!message.isDiscussion()) {\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.getIndexer(\n\t\t\t\t\tMBMessage.class);\n\n\t\t\t\tindexer.reindex(message);\n\t\t\t}\n\t\t}\n\n\t\t// Thread\n\n\t\tthread.setCategoryId(category.getCategoryId());\n\n\t\tmbThreadPersistence.update(thread, false);\n\n\t\t// Category\n\n\t\toldCategory.setThreadCount(oldCategory.getThreadCount() - 1);\n\t\toldCategory.setMessageCount(\n\t\t\toldCategory.getMessageCount() - messages.size());\n\n\t\tmbCategoryPersistence.update(oldCategory, false);\n\n\t\tcategory.setThreadCount(category.getThreadCount() + 1);\n\t\tcategory.setMessageCount(category.getMessageCount() + messages.size());\n\n\t\tmbCategoryPersistence.update(category, false);\n\n\t\treturn thread;\n\t}","id":4639,"modified_method":"public MBThread moveThread(long groupId, long categoryId, long threadId)\n\t\tthrows PortalException, SystemException {\n\n\t\tMBThread thread = mbThreadPersistence.findByPrimaryKey(\n\t\t\tthreadId);\n\n\t\tlong oldCategoryId = thread.getCategoryId();\n\n\t\tMBCategory oldCategory = null;\n\n\t\tif (oldCategoryId != MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) {\n\t\t\toldCategory = mbCategoryPersistence.findByPrimaryKey(\n\t\t\t\toldCategoryId);\n\t\t}\n\n\t\tMBCategory category = null;\n\n\t\tif (categoryId != MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) {\n\t\t\tcategory = mbCategoryPersistence.findByPrimaryKey(\n\t\t\t\tcategoryId);\n\t\t}\n\n\t\t// Messages\n\n\t\tList<MBMessage> messages = mbMessagePersistence.findByG_C_T(\n\t\t\tgroupId, oldCategoryId, thread.getThreadId());\n\n\t\tfor (MBMessage message : messages) {\n\t\t\tmessage.setCategoryId(categoryId);\n\n\t\t\tmbMessagePersistence.update(message, false);\n\n\t\t\t// Indexer\n\n\t\t\tif (!message.isDiscussion()) {\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.getIndexer(\n\t\t\t\t\tMBMessage.class);\n\n\t\t\t\tindexer.reindex(message);\n\t\t\t}\n\t\t}\n\n\t\t// Thread\n\n\t\tthread.setCategoryId(categoryId);\n\n\t\tmbThreadPersistence.update(thread, false);\n\n\t\t// Category\n\n\t\tif (oldCategory != null) {\n\t\t\toldCategory.setThreadCount(oldCategory.getThreadCount() - 1);\n\t\t\toldCategory.setMessageCount(\n\t\t\t\toldCategory.getMessageCount() - messages.size());\n\n\t\t\tmbCategoryPersistence.update(oldCategory, false);\n\t\t}\n\n\t\tif (category != null) {\n\t\t\tcategory.setThreadCount(category.getThreadCount() + 1);\n\t\t\tcategory.setMessageCount(\n\t\t\t\tcategory.getMessageCount() + messages.size());\n\n\t\t\tmbCategoryPersistence.update(category, false);\n\t\t}\n\n\t\treturn thread;\n\t}","commit_id":"418dc3d913ec1a1c0443ab6f594696ddbe9b8796","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected BackgroundTask addBackgroundTask(\n\t\t\tlong userId, long groupId, String name,\n\t\t\tString[] servletContextNames, String taskExecutorClassName,\n\t\t\tMap<String, Serializable> taskContextMap,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\n\t\tfinal long backgroundTaskId = counterLocalService.increment();\n\n\t\tBackgroundTask backgroundTask = backgroundTaskPersistence.create(\n\t\t\tbackgroundTaskId);\n\n\t\tbackgroundTask.setCompanyId(user.getCompanyId());\n\t\tbackgroundTask.setGroupId(groupId);\n\t\tbackgroundTask.setUserId(userId);\n\t\tbackgroundTask.setUserName(user.getFullName());\n\t\tbackgroundTask.setName(name);\n\n\t\tif (ArrayUtil.isNotEmpty(servletContextNames)) {\n\t\t\tbackgroundTask.setServletContextNames(\n\t\t\t\tStringUtil.merge(servletContextNames));\n\t\t}\n\n\t\tbackgroundTask.setTaskExecutorClassName(taskExecutorClassName);\n\n\t\tif (taskContextMap == null) {\n\t\t\ttaskContextMap = new HashMap<>();\n\t\t}\n\n\t\t_backgroundTaskThreadLocalManager.serializeThreadLocals(taskContextMap);\n\n\t\tbackgroundTask.setTaskContextMap(taskContextMap);\n\n\t\tbackgroundTask.setStatus(BackgroundTaskConstants.STATUS_NEW);\n\n\t\tbackgroundTaskPersistence.update(backgroundTask);\n\n\t\tTransactionCommitCallbackUtil.registerCallback(\n\t\t\tnew Callable<Void>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic Void call() throws Exception {\n\t\t\t\t\tbackgroundTaskLocalService.triggerBackgroundTask(\n\t\t\t\t\t\tbackgroundTaskId);\n\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn backgroundTask;\n\t}","id":4640,"modified_method":"protected BackgroundTask addBackgroundTask(\n\t\t\tlong userId, long groupId, String name,\n\t\t\tString[] servletContextNames, String taskExecutorClassName,\n\t\t\tMap<String, Serializable> taskContextMap,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tUser user = null;\n\n\t\tif (userId != UserConstants.USER_ID_DEFAULT) {\n\t\t\tuser = userPersistence.findByPrimaryKey(userId);\n\t\t}\n\n\t\tfinal long backgroundTaskId = counterLocalService.increment();\n\n\t\tBackgroundTask backgroundTask = backgroundTaskPersistence.create(\n\t\t\tbackgroundTaskId);\n\n\t\tif (user != null) {\n\t\t\tbackgroundTask.setCompanyId(user.getCompanyId());\n\t\t\tbackgroundTask.setUserName(user.getFullName());\n\t\t}\n\t\telse {\n\t\t\tbackgroundTask.setCompanyId(CompanyConstants.SYSTEM);\n\t\t\tbackgroundTask.setUserName(StringPool.BLANK);\n\t\t}\n\n\t\tbackgroundTask.setGroupId(groupId);\n\t\tbackgroundTask.setUserId(userId);\n\n\t\tbackgroundTask.setName(name);\n\n\t\tif (ArrayUtil.isNotEmpty(servletContextNames)) {\n\t\t\tbackgroundTask.setServletContextNames(\n\t\t\t\tStringUtil.merge(servletContextNames));\n\t\t}\n\n\t\tbackgroundTask.setTaskExecutorClassName(taskExecutorClassName);\n\n\t\tif (taskContextMap == null) {\n\t\t\ttaskContextMap = new HashMap<>();\n\t\t}\n\n\t\t_backgroundTaskThreadLocalManager.serializeThreadLocals(taskContextMap);\n\n\t\tbackgroundTask.setTaskContextMap(taskContextMap);\n\n\t\tbackgroundTask.setStatus(BackgroundTaskConstants.STATUS_NEW);\n\n\t\tbackgroundTaskPersistence.update(backgroundTask);\n\n\t\tTransactionCommitCallbackUtil.registerCallback(\n\t\t\tnew Callable<Void>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic Void call() throws Exception {\n\t\t\t\t\tbackgroundTaskLocalService.triggerBackgroundTask(\n\t\t\t\t\t\tbackgroundTaskId);\n\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn backgroundTask;\n\t}","commit_id":"b62653c12cd21c2b33d1a59f70452aa6fcd7f87e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void setupTables() {\n\t\t_log.info(\"Setup gadget user prefs table\");\n\n\t\tExpandoTable expandoTable = null;\n\n\t\ttry {\n\t\t\texpandoTable = ExpandoTableLocalServiceUtil.getTable(\n\t\t\t\tUser.class.getName(), ShindigUtil.GADGET_USER_PREFERENCES);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\tif (expandoTable == null) {\n\t\t\ttry {\n\t\t\t\texpandoTable = ExpandoTableLocalServiceUtil.addTable(\n\t\t\t\t\tUser.class.getName(), ShindigUtil.GADGET_USER_PREFERENCES);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\t\t}\n\n\t\t_log.info(\"Gadget user prefs was setup.\");\n\n\t\t_log.info(\"Setup data source table\");\n\n\t\tShindigUtil.getTable();\n\n\t\t_log.info(\"Data source table was setup.\");\n\t}","id":4641,"modified_method":"protected void setupTables() {\n\t\t_log.info(\"Setup gadget user prefs table\");\n\n\t\tShindigUtil.getTable(ShindigUtil.GADGET_USER_PREFERENCES);\n\n\t\t_log.info(\"Gadget user prefs was setup.\");\n\n\t\t_log.info(\"Setup data source table\");\n\n\t\tShindigUtil.getTable(ShindigUtil.OPEN_SOCIAL_DATA);\n\n\t\t_log.info(\"Data source table was setup.\");\n\t}","commit_id":"5060ab8b5d7de1005b29d5f1f8323f8b2fc4a659","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public static String getValue(String columnName, String userId) {\n\t\tString value = StringPool.BLANK;\n\n\t\ttry {\n\t\t\tExpandoValue expandoValue = ExpandoValueLocalServiceUtil.getValue(\n\t\t\t\tUser.class.getName(), ShindigUtil.OPEN_SOCIAL_DATA,\n\t\t\t\tcolumnName, Long.parseLong(userId));\n\n\t\t\tvalue = expandoValue.getData();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn value;\n\t}","id":4642,"modified_method":"public static String getValue(String columnName, String userId) {\n\t\tString value = StringPool.BLANK;\n\n\t\ttry {\n\t\t\tExpandoValue expandoValue = ExpandoValueLocalServiceUtil.getValue(\n\t\t\t\tUser.class.getName(), OPEN_SOCIAL_DATA,\n\t\t\t\tcolumnName, Long.parseLong(userId));\n\n\t\t\tvalue = expandoValue.getData();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn value;\n\t}","commit_id":"5060ab8b5d7de1005b29d5f1f8323f8b2fc4a659","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public static ExpandoColumn getColumn(String columnName) {\n    \tExpandoColumn expandoColumn = null;\n\n\t\tExpandoTable defaultTable = ShindigUtil.getTable();\n\n\t\ttry {\n\t\t\texpandoColumn = ExpandoColumnLocalServiceUtil.getColumn(\n\t\t\t\tUser.class.getName(), ShindigUtil.OPEN_SOCIAL_DATA, columnName);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\n\t\tif (expandoColumn == null) {\n\t\t\ttry {\n\t\t\t\texpandoColumn = ExpandoColumnLocalServiceUtil.addColumn(\n\t\t\t\t\tdefaultTable.getTableId(), columnName,\n\t\t\t\t\tExpandoColumnConstants.STRING);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\treturn expandoColumn;\n\t}","id":4643,"modified_method":"public static ExpandoColumn getColumn(String columnName) {\n    \tExpandoColumn expandoColumn = null;\n\n\t\tExpandoTable defaultTable = ShindigUtil.getTable(OPEN_SOCIAL_DATA);\n\n\t\ttry {\n\t\t\texpandoColumn = ExpandoColumnLocalServiceUtil.getColumn(\n\t\t\t\tUser.class.getName(), OPEN_SOCIAL_DATA, columnName);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (expandoColumn == null) {\n\t\t\ttry {\n\t\t\t\texpandoColumn = ExpandoColumnLocalServiceUtil.addColumn(\n\t\t\t\t\tdefaultTable.getTableId(), columnName,\n\t\t\t\t\tExpandoColumnConstants.STRING);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(e, e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn expandoColumn;\n\t}","commit_id":"5060ab8b5d7de1005b29d5f1f8323f8b2fc4a659","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public static Person getPerson(\n\t\tUser user, Set<String> profileDetails, GadgetToken token) {\n\n\t\tPerson person = null;\n\n\t\ttry {\n\t\t\tperson = new Person(\n\t\t\t\tString.valueOf(user.getUserId()), new Name(user.getFullName()));\n\n\t\t\tif (profileDetails.contains(\"about_me\")) {\n\t\t\t\tperson.setAboutMe(user.getComments());\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(\"age\")) {\n\t\t\t    Calendar dateOfBirth = new GregorianCalendar();\n\t\t\t    dateOfBirth.setTime(user.getBirthday());\n\n\t\t\t    Calendar today = Calendar.getInstance();\n\t\t\t    int age = today.get(\n\t\t\t    \tCalendar.YEAR) - dateOfBirth.get(Calendar.YEAR);\n\n\t\t\t    dateOfBirth.add(Calendar.YEAR, age);\n\n\t\t\t    if (today.before(dateOfBirth)) {\n\t\t\t        age--;\n\t\t\t    }\n\n\t\t\t\tperson.setAge(age);\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(\"date_of_birth\")) {\n\t\t\t\tperson.setDateOfBirth(user.getBirthday());\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(\"emails\")) {\n\t\t\t\tperson.setEmails(getEmails(user));\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(\"gender\")) {\n\t\t\t\tif (user.isFemale()) {\n\t\t\t\t\tperson.setGender(new Enum<Enum.Gender>(Enum.Gender.FEMALE));\n\t\t\t\t} else {\n\t\t\t\t\tperson.setGender(new Enum<Enum.Gender>(Enum.Gender.MALE));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(\"nickname\")) {\n\t\t\t\tperson.setNickname(user.getScreenName());\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(\"phone_numbers\")) {\n\t\t\t\tperson.setPhoneNumbers(getPhoneNumbers(\n\t\t\t\t\tContact.class.getName(), user.getContactId()));\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(\"thumbnailUrl\")) {\n\t\t\t\tlong portraitId = user.getPortraitId();\n\t\t\t\tString tokenId = ImageServletTokenUtil.getToken(user.getPortraitId());\n\n\t\t\t\tStringMaker sm = new StringMaker();\n\t\t\t\tsm.append(PortalUtil.getPathImage());\n\t\t\t\tsm.append(\"/user_\");\n\t\t\t\tsm.append(user.isFemale() ? \"female\" : \"male\");\n\t\t\t\tsm.append(\"_portrait?img_id=\");\n\t\t\t\tsm.append(portraitId);\n\t\t\t\tsm.append(\"&t=\");\n\t\t\t\tsm.append(tokenId);\n\n\t\t\t\tperson.setThumbnailUrl(sm.toString());\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(\"time_zone\")) {\n\t\t\t\tperson.setTimeZone(new Long(user.getTimeZone().getRawOffset()));\n\t\t\t}\n\n\t\t\tif (token.getViewerId() == person.getId()) {\n\t\t\t\tperson.setIsViewer(true);\n\t\t\t}\n\t\t\telse if (token.getOwnerId() == person.getId()) {\n\t\t\t\tperson.setIsOwner(true);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\n\t\treturn person;\n\t}","id":4644,"modified_method":"public static Person getPerson(\n\t\tUser user, Set<String> profileDetails, GadgetToken token) {\n\n\t\tPerson person = null;\n\n\t\ttry {\n\t\t\tperson = new Person(\n\t\t\t\tString.valueOf(user.getUserId()), new Name(user.getFullName()));\n\n\t\t\t// Required Fields\n\n\t\t\tStringMaker sm = new StringMaker();\n\t\t\tsm.append(token.getDomain());\n\t\t\tsm.append(PortalUtil.getPathFriendlyURLPublic());\n\t\t\tsm.append(user.getScreenName());\n\n\t\t\tperson.setProfileUrl(sm.toString());\n\n\t\t\tsm = new StringMaker();\n\t\t\tsm.append(token.getDomain());\n\t\t\tsm.append(PortalUtil.getPathImage());\n\t\t\tsm.append(\"/user_\");\n\t\t\tsm.append(user.isFemale() ? \"female\" : \"male\");\n\t\t\tsm.append(\"_portrait?img_id=\");\n\t\t\tsm.append(user.getPortraitId());\n\t\t\tsm.append(\"&t=\");\n\t\t\tsm.append(ImageServletTokenUtil.getToken(user.getPortraitId()));\n\n\t\t\tperson.setThumbnailUrl(sm.toString());\n\n\t\t\t// Optional Fields\n\n\t\t\tif (profileDetails.contains(Person.Field.ABOUT_ME.toString())) {\n\t\t\t\tperson.setAboutMe(user.getComments());\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(Person.Field.AGE.toString())) {\n\t\t\t    Calendar dateOfBirth = new GregorianCalendar();\n\t\t\t    dateOfBirth.setTime(user.getBirthday());\n\n\t\t\t    Calendar today = Calendar.getInstance();\n\t\t\t    int age = today.get(\n\t\t\t    \tCalendar.YEAR) - dateOfBirth.get(Calendar.YEAR);\n\n\t\t\t    dateOfBirth.add(Calendar.YEAR, age);\n\n\t\t\t    if (today.before(dateOfBirth)) {\n\t\t\t        age--;\n\t\t\t    }\n\n\t\t\t\tperson.setAge(age);\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(\n\t\t\t\t\tPerson.Field.DATE_OF_BIRTH.toString())) {\n\t\t\t\tperson.setDateOfBirth(user.getBirthday());\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(Person.Field.EMAILS)) {\n\t\t\t\tperson.setEmails(getEmails(user));\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(Person.Field.GENDER.toString())) {\n\t\t\t\tif (user.isFemale()) {\n\t\t\t\t\tperson.setGender(new Enum<Enum.Gender>(Enum.Gender.FEMALE));\n\t\t\t\t} else {\n\t\t\t\t\tperson.setGender(new Enum<Enum.Gender>(Enum.Gender.MALE));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(Person.Field.NICKNAME.toString())) {\n\t\t\t\tperson.setNickname(user.getScreenName());\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(\n\t\t\t\t\tPerson.Field.PHONE_NUMBERS.toString())) {\n\t\t\t\tperson.setPhoneNumbers(getPhoneNumbers(\n\t\t\t\t\tContact.class.getName(), user.getContactId()));\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(Person.Field.TIME_ZONE.toString())) {\n\t\t\t\tperson.setTimeZone(new Long(user.getTimeZone().getRawOffset()));\n\t\t\t}\n\n\t\t\tif (token.getViewerId().equals(person.getId())) {\n\t\t\t\tperson.setIsViewer(true);\n\t\t\t}\n\n\t\t\tif (token.getOwnerId().equals(person.getId())) {\n\t\t\t\tperson.setIsOwner(true);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\n\t\treturn person;\n\t}","commit_id":"5060ab8b5d7de1005b29d5f1f8323f8b2fc4a659","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public static Person getPerson(\n\t\tGroup group, Set<String> profileDetails, GadgetToken token) {\n\n\t\tPerson person = null;\n\n\t\ttry {\n\t\t\tperson = new Person(\n\t\t\t\t\"G-\" + group.getGroupId(),\n\t\t\t\tnew Name(group.getName() + \" (Community)\"));\n\n\t\t\tperson.setGender(new Enum<Enum.Gender>(\n\t\t\t\tEnum.Gender.MALE));\n\n\t\t\tif (token.getViewerId() == person.getId()) {\n\t\t\t\tperson.setIsViewer(true);\n\t\t\t}\n\t\t\telse if (token.getOwnerId() == person.getId()) {\n\t\t\t\tperson.setIsOwner(true);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\n\t\treturn person;\n\t}","id":4645,"modified_method":"public static Person getPerson(\n\t\tGroup group, Set<String> profileDetails, GadgetToken token) {\n\n\t\tPerson person = null;\n\n\t\ttry {\n\t\t\tperson = new Person(\n\t\t\t\t\"G-\" + group.getGroupId(),\n\t\t\t\tnew Name(group.getName() + \" (Community)\"));\n\n\t\t\tperson.setGender(new Enum<Enum.Gender>(\n\t\t\t\tEnum.Gender.MALE));\n\n\t\t\tif (token.getViewerId().equals(person.getId())) {\n\t\t\t\tperson.setIsViewer(true);\n\t\t\t}\n\n\t\t\tif (token.getOwnerId().equals(person.getId())) {\n\t\t\t\tperson.setIsOwner(true);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\n\t\treturn person;\n\t}","commit_id":"5060ab8b5d7de1005b29d5f1f8323f8b2fc4a659","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public static Person getPerson(\n\t\tOrganization org, Set<String> profileDetails, GadgetToken token) {\n\n\t\tPerson person = null;\n\n\t\ttry {\n\t\t\tperson = new Person(\n\t\t\t\t\"G-\" + org.getGroup().getGroupId(),\n\t\t\t\tnew Name(org.getName() + \" (Organization)\"));\n\n\t\t\tif (profileDetails.contains(\"phone_numbers\")) {\n\t\t\t\tperson.setPhoneNumbers(getPhoneNumbers(\n\t\t\t\t\tOrganization.class.getName(), org.getOrganizationId()));\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(\"gender\")) {\n\t\t\t\tperson.setGender(new Enum<Enum.Gender>(\n\t\t\t\t\tEnum.Gender.MALE));\n\t\t\t}\n\n\t\t\tif (token.getViewerId() == person.getId()) {\n\t\t\t\tperson.setIsViewer(true);\n\t\t\t}\n\t\t\telse if (token.getOwnerId() == person.getId()) {\n\t\t\t\tperson.setIsOwner(true);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\n\t\treturn person;\n\t}","id":4646,"modified_method":"public static Person getPerson(\n\t\tOrganization org, Set<String> profileDetails, GadgetToken token) {\n\n\t\tPerson person = null;\n\n\t\ttry {\n\t\t\tperson = new Person(\n\t\t\t\t\"G-\" + org.getGroup().getGroupId(),\n\t\t\t\tnew Name(org.getName() + \" (Organization)\"));\n\n\t\t\tif (profileDetails.contains(\"phone_numbers\")) {\n\t\t\t\tperson.setPhoneNumbers(getPhoneNumbers(\n\t\t\t\t\tOrganization.class.getName(), org.getOrganizationId()));\n\t\t\t}\n\n\t\t\tif (profileDetails.contains(\"gender\")) {\n\t\t\t\tperson.setGender(new Enum<Enum.Gender>(\n\t\t\t\t\tEnum.Gender.MALE));\n\t\t\t}\n\n\t\t\tif (token.getViewerId().equals(person.getId())) {\n\t\t\t\tperson.setIsViewer(true);\n\t\t\t}\n\n\t\t\tif (token.getOwnerId().equals(person.getId())) {\n\t\t\t\tperson.setIsOwner(true);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\n\t\treturn person;\n\t}","commit_id":"5060ab8b5d7de1005b29d5f1f8323f8b2fc4a659","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public static Activity getActivity(SocialActivity socialActivity) {\n\t\tActivity activity = new Activity(\n\t\t\tString.valueOf(socialActivity.getClassPK()),\n\t\t\tString.valueOf(socialActivity.getUserId()));\n\n\t\ttry {\n\t\t\tJSONObject extraData = new JSONObject(\n\t\t\t\tsocialActivity.getExtraData());\n\n\t\t\tif (extraData.has(\"appId\")) {\n\t\t\t\tactivity.setAppId(extraData.getString(\"appId\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"body\")) {\n\t\t\t\tactivity.setBody(extraData.getString(\"body\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"bodyId\")) {\n\t\t\t\tactivity.setBodyId(extraData.getString(\n\t\t\t\t\t\"bodyId\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"externalId\")) {\n\t\t\t\tactivity.setExternalId(\n\t\t\t\t\textraData.getString(\"externalId\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"mediaItems\")) {\n\t\t\t\tactivity.setMediaItems(\n\t\t\t\t\tShindigUtil.getMediaItems(\n\t\t\t\t\t\textraData.getJSONArray(\"mediaItems\")));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"postedTime\")) {\n\t\t\t\tactivity.setPostedTime(\n\t\t\t\t\textraData.getLong(\"postedTime\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"priority\")) {\n\t\t\t\tactivity.setPriority(\n\t\t\t\t\tFloat.parseFloat(\n\t\t\t\t\t\textraData.getString(\"priority\")));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"streamFaviconUrl\")) {\n\t\t\t\tactivity.setStreamFaviconUrl(\n\t\t\t\t\textraData.getString(\"streamFaviconUrl\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"streamSourceUrl\")) {\n\t\t\t\tactivity.setStreamSourceUrl(\n\t\t\t\t\textraData.getString(\"streamSourceUrl\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"streamTitle\")) {\n\t\t\t\tactivity.setStreamTitle(\n\t\t\t\t\textraData.getString(\"streamTitle\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"streamUrl\")) {\n\t\t\t\tactivity.setStreamUrl(\n\t\t\t\t\textraData.getString(\"streamUrl\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"templateParams\")) {\n\t\t\t\tactivity.setTemplateParams(\n\t\t\t\t\tShindigUtil.getTemplateParams(\n\t\t\t\t\t\textraData.getJSONArray(\n\t\t\t\t\t\t\t\"templateParams\")));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"title\")) {\n\t\t\t\tactivity.setTitle(\n\t\t\t\t\textraData.getString(\"title\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"titleId\")) {\n\t\t\t\tactivity.setTitleId(\n\t\t\t\t\textraData.getString(\"titleId\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(\"url\")) {\n\t\t\t\tactivity.setUrl(extraData.getString(\"url\"));\n\t\t\t}\n\t\t}\n\t\tcatch (JSONException je) {\n\t\t\t_log.error(je, je);\n\t\t}\n\n\t\treturn activity;\n\t}","id":4647,"modified_method":"public static Activity getActivity(SocialActivity socialActivity) {\n\t\tActivity activity = new Activity(\n\t\t\tString.valueOf(socialActivity.getClassPK()),\n\t\t\tString.valueOf(socialActivity.getUserId()));\n\n\t\ttry {\n\t\t\tJSONObject extraData = new JSONObject(\n\t\t\t\tsocialActivity.getExtraData());\n\n\t\t\tif (extraData.has(Activity.Field.APP_ID.toString())) {\n\t\t\t\tactivity.setAppId(extraData.getString(\"appId\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.BODY.toString())) {\n\t\t\t\tactivity.setBody(extraData.getString(\"body\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.BODY_ID.toString())) {\n\t\t\t\tactivity.setBodyId(extraData.getString(\n\t\t\t\t\t\"bodyId\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.EXTERNAL_ID.toString())) {\n\t\t\t\tactivity.setExternalId(\n\t\t\t\t\textraData.getString(\"externalId\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.MEDIA_ITEMS.toString())) {\n\t\t\t\tactivity.setMediaItems(\n\t\t\t\t\tShindigUtil.getMediaItems(\n\t\t\t\t\t\textraData.getJSONArray(\"mediaItems\")));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.POSTED_TIME.toString())) {\n\t\t\t\tactivity.setPostedTime(\n\t\t\t\t\textraData.getLong(\"postedTime\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.PRIORITY.toString())) {\n\t\t\t\tactivity.setPriority(\n\t\t\t\t\tFloat.parseFloat(\n\t\t\t\t\t\textraData.getString(\"priority\")));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.STREAM_FAVICON_URL.toString())) {\n\t\t\t\tactivity.setStreamFaviconUrl(\n\t\t\t\t\textraData.getString(\"streamFaviconUrl\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.STREAM_SOURCE_URL.toString())) {\n\t\t\t\tactivity.setStreamSourceUrl(\n\t\t\t\t\textraData.getString(\"streamSourceUrl\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.STREAM_TITLE.toString())) {\n\t\t\t\tactivity.setStreamTitle(\n\t\t\t\t\textraData.getString(\"streamTitle\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.STREAM_URL.toString())) {\n\t\t\t\tactivity.setStreamUrl(\n\t\t\t\t\textraData.getString(\"streamUrl\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.TEMPLATE_PARAMS.toString())) {\n\t\t\t\tactivity.setTemplateParams(\n\t\t\t\t\tShindigUtil.getTemplateParams(\n\t\t\t\t\t\textraData.getJSONArray(\n\t\t\t\t\t\t\t\"templateParams\")));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.TITLE.toString())) {\n\t\t\t\tactivity.setTitle(\n\t\t\t\t\textraData.getString(\"title\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.TITLE_ID.toString())) {\n\t\t\t\tactivity.setTitleId(\n\t\t\t\t\textraData.getString(\"titleId\"));\n\t\t\t}\n\n\t\t\tif (extraData.has(Activity.Field.URL.toString())) {\n\t\t\t\tactivity.setUrl(extraData.getString(\"url\"));\n\t\t\t}\n\t\t}\n\t\tcatch (JSONException je) {\n\t\t\t_log.error(je, je);\n\t\t}\n\n\t\treturn activity;\n\t}","commit_id":"5060ab8b5d7de1005b29d5f1f8323f8b2fc4a659","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public static ExpandoTable getTable() {\n\t\tExpandoTable expandoTable = null;\n\n\t\ttry {\n\t\t\texpandoTable = ExpandoTableLocalServiceUtil.getTable(\n\t\t\t\tUser.class.getName(), ShindigUtil.OPEN_SOCIAL_DATA);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\tif (expandoTable == null) {\n\t\t\ttry {\n\t\t\t\texpandoTable = ExpandoTableLocalServiceUtil.addTable(\n\t\t\t\t\tUser.class.getName(), ShindigUtil.OPEN_SOCIAL_DATA);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\t\t}\n\n\t\treturn expandoTable;\n\t}","id":4648,"modified_method":"public static ExpandoTable getTable(String tableName) {\n\t\tExpandoTable expandoTable = null;\n\n\t\ttry {\n\t\t\texpandoTable = ExpandoTableLocalServiceUtil.getTable(\n\t\t\t\tUser.class.getName(), tableName);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (expandoTable == null) {\n\t\t\ttry {\n\t\t\t\texpandoTable = ExpandoTableLocalServiceUtil.addTable(\n\t\t\t\t\tUser.class.getName(), tableName);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(e, e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn expandoTable;\n\t}","commit_id":"5060ab8b5d7de1005b29d5f1f8323f8b2fc4a659","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\r\n\tprotected OMVRBTreeEntryDatabase<K, V> loadEntry(final OMVRBTreeEntryPersistent<K, V> iParent, final ORID iRecordId)\r\n\t\t\tthrows IOException {\r\n\r\n\t\t// SEARCH INTO THE CACHE\r\n\t\tOMVRBTreeEntryDatabase<K, V> entry = (OMVRBTreeEntryDatabase<K, V>) cache.get(iRecordId);\r\n\t\tif (entry == null) {\r\n\t\t\t// NOT FOUND: CREATE IT AND PUT IT INTO THE CACHE\r\n\t\t\tentry = new OMVRBTreeEntryDatabase<K, V>(this, (OMVRBTreeEntryDatabase<K, V>) iParent, iRecordId);\r\n\t\t\tcache.put(iRecordId, entry);\r\n\r\n\t\t\tif (debug)\r\n\t\t\t\tSystem.out.printf(\"\\nLoaded entry node %s: parent %s, left %s, right %s\", iRecordId, entry.parentRid, entry.leftRid,\r\n\t\t\t\t\t\tentry.rightRid);\r\n\r\n\t\t} else {\r\n\t\t\t// COULD BE A PROBLEM BECAUSE IF A NODE IS DISCONNECTED CAN IT STAY IN CACHE?\r\n\t\t\t// entry.load();\r\n\t\t\tif (debug)\r\n\t\t\t\tSystem.out.printf(\"\\nReused entry node %s from cache: parent %s, left %s, right %s. New parent: %s\", iRecordId,\r\n\t\t\t\t\t\tentry.parentRid, entry.leftRid, entry.rightRid, iParent);\r\n\r\n\t\t\t// FOUND: ASSIGN IT\r\n\t\t\tentry.setParent(iParent);\r\n\t\t}\r\n\r\n\t\tentry.checkEntryStructure();\r\n\r\n\t\treturn entry;\r\n\t}","id":4649,"modified_method":"@Override\r\n\tprotected OMVRBTreeEntryDatabase<K, V> loadEntry(final OMVRBTreeEntryPersistent<K, V> iParent, final ORID iRecordId)\r\n\t\t\tthrows IOException {\r\n\r\n\t\t// SEARCH INTO THE CACHE\r\n\t\tOMVRBTreeEntryDatabase<K, V> entry = (OMVRBTreeEntryDatabase<K, V>) cache.get(iRecordId);\r\n\t\tif (entry == null) {\r\n\t\t\t// NOT FOUND: CREATE IT AND PUT IT INTO THE CACHE\r\n\t\t\tentry = new OMVRBTreeEntryDatabase<K, V>(this, (OMVRBTreeEntryDatabase<K, V>) iParent, iRecordId);\r\n\t\t\tcache.put(iRecordId, entry);\r\n\r\n\t\t\t// RECONNECT THE LOADED NODE WITH IN-MEMORY PARENT, LEFT AND RIGHT\r\n\t\t\tif (entry.parent == null && entry.parentRid.isValid()) {\r\n\t\t\t\t// TRY TO ASSIGN THE PARENT IN CACHE IF ANY\r\n\t\t\t\tfinal OMVRBTreeEntryPersistent<K, V> parentNode = cache.get(entry.parentRid);\r\n\t\t\t\tif (parentNode != null)\r\n\t\t\t\t\tentry.setParent(parentNode);\r\n\t\t\t}\r\n\r\n\t\t\tif (entry.left == null && entry.leftRid.isValid()) {\r\n\t\t\t\t// TRY TO ASSIGN THE PARENT IN CACHE IF ANY\r\n\t\t\t\tfinal OMVRBTreeEntryPersistent<K, V> leftNode = cache.get(entry.leftRid);\r\n\t\t\t\tif (leftNode != null)\r\n\t\t\t\t\tentry.setLeft(leftNode);\r\n\t\t\t}\r\n\r\n\t\t\tif (entry.right == null && entry.rightRid.isValid()) {\r\n\t\t\t\t// TRY TO ASSIGN THE PARENT IN CACHE IF ANY\r\n\t\t\t\tfinal OMVRBTreeEntryPersistent<K, V> rightNode = cache.get(entry.rightRid);\r\n\t\t\t\tif (rightNode != null)\r\n\t\t\t\t\tentry.setRight(rightNode);\r\n\t\t\t}\r\n\r\n\t\t\tif (debug)\r\n\t\t\t\tSystem.out.printf(\"\\nLoaded entry node %s: parent %s, left %s, right %s\", iRecordId, entry.parentRid, entry.leftRid,\r\n\t\t\t\t\t\tentry.rightRid);\r\n\r\n\t\t} else {\r\n\t\t\t// COULD BE A PROBLEM BECAUSE IF A NODE IS DISCONNECTED CAN IT STAY IN CACHE?\r\n\t\t\t// entry.load();\r\n\t\t\tif (debug)\r\n\t\t\t\tSystem.out.printf(\"\\nReused entry node %s from cache: parent %s, left %s, right %s. New parent: %s\", iRecordId,\r\n\t\t\t\t\t\tentry.parentRid, entry.leftRid, entry.rightRid, iParent);\r\n\r\n\t\t\t// FOUND: ASSIGN IT\r\n\t\t\tentry.setParent(iParent);\r\n\t\t}\r\n\r\n\t\tentry.checkEntryStructure();\r\n\r\n\t\treturn entry;\r\n\t}","commit_id":"d885b7c29cb24f129b0117c7b96a8d596c3a4a77","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tpublic void setLeft(final OMVRBTreeEntry<K, V> iLeft) {\r\n\t\tif (iLeft == left)\r\n\t\t\treturn;\r\n\r\n\t\tleft = (OMVRBTreeEntryPersistent<K, V>) iLeft;\r\n\t\t// if (left == null || !left.record.getIdentity().isValid() || !left.record.getIdentity().equals(leftRid)) {\r\n\t\tmarkDirty();\r\n\t\tthis.leftRid = iLeft == null ? ORecordId.EMPTY_RECORD_ID : left.record.getIdentity();\r\n\t\t// }\r\n\r\n\t\tif (iLeft != null && iLeft.getParent() != this)\r\n\t\t\tiLeft.setParent(this);\r\n\r\n\t\tcheckEntryStructure();\r\n\t}","id":4650,"modified_method":"@Override\r\n\tpublic void setLeft(final OMVRBTreeEntry<K, V> iLeft) {\r\n\t\tif (iLeft != left) {\r\n\t\t\tleft = (OMVRBTreeEntryPersistent<K, V>) iLeft;\r\n\r\n\t\t\tif (left != null && !left.record.getIdentity().equals(leftRid))\r\n\t\t\t\tmarkDirty();\r\n\r\n\t\t\tleftRid = iLeft == null ? ORecordId.EMPTY_RECORD_ID : left.record.getIdentity();\r\n\r\n\t\t\tif (left != null && left.parent != this)\r\n\t\t\t\tleft.setParent(this);\r\n\r\n\t\t\tcheckEntryStructure();\r\n\t\t}\r\n\t}","commit_id":"d885b7c29cb24f129b0117c7b96a8d596c3a4a77","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tpublic OMVRBTreeEntry<K, V> setRight(final OMVRBTreeEntry<K, V> iRight) {\r\n\t\tif (iRight == right)\r\n\t\t\treturn this;\r\n\r\n\t\tright = (OMVRBTreeEntryPersistent<K, V>) iRight;\r\n\t\t// if (right == null || !right.record.getIdentity().isValid() || !right.record.getIdentity().equals(rightRid)) {\r\n\t\tmarkDirty();\r\n\t\trightRid = iRight == null ? ORecordId.EMPTY_RECORD_ID : right.record.getIdentity();\r\n\t\t// }\r\n\r\n\t\tif (iRight != null && iRight.getParent() != this)\r\n\t\t\tiRight.setParent(this);\r\n\r\n\t\tcheckEntryStructure();\r\n\r\n\t\treturn right;\r\n\t}","id":4651,"modified_method":"@Override\r\n\tpublic OMVRBTreeEntry<K, V> setRight(final OMVRBTreeEntry<K, V> iRight) {\r\n\t\tif (iRight != right) {\r\n\t\t\tright = (OMVRBTreeEntryPersistent<K, V>) iRight;\r\n\r\n\t\t\tif (right != null && !right.record.getIdentity().equals(rightRid))\r\n\t\t\t\tmarkDirty();\r\n\r\n\t\t\trightRid = iRight == null ? ORecordId.EMPTY_RECORD_ID : right.record.getIdentity();\r\n\r\n\t\t\tif (right != null && right.parent != this)\r\n\t\t\t\tright.setParent(this);\r\n\r\n\t\t\tcheckEntryStructure();\r\n\t\t}\r\n\t\treturn right;\r\n\t}","commit_id":"d885b7c29cb24f129b0117c7b96a8d596c3a4a77","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tpublic OMVRBTreeEntry<K, V> setParent(final OMVRBTreeEntry<K, V> iParent) {\r\n\t\tif (iParent != getParent()) {\r\n\t\t\tmarkDirty();\r\n\r\n\t\t\tthis.parent = (OMVRBTreeEntryPersistent<K, V>) iParent;\r\n\t\t\tthis.parentRid = iParent == null ? ORecordId.EMPTY_RECORD_ID : parent.record.getIdentity();\r\n\r\n\t\t\tif (parent != null) {\r\n\t\t\t\tif (parent.left == this && !parent.leftRid.equals(record.getIdentity()))\r\n\t\t\t\t\tparent.leftRid = record.getIdentity();\r\n\t\t\t\tif (parent.left != this && parent.leftRid.isValid() && parent.leftRid.equals(record.getIdentity()))\r\n\t\t\t\t\tparent.left = this;\r\n\t\t\t\tif (parent.right == this && !parent.rightRid.equals(record.getIdentity()))\r\n\t\t\t\t\tparent.rightRid = record.getIdentity();\r\n\t\t\t\tif (parent.right != this && parent.rightRid.isValid() && parent.rightRid.equals(record.getIdentity()))\r\n\t\t\t\t\tparent.right = this;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn iParent;\r\n\t}","id":4652,"modified_method":"@Override\r\n\tpublic OMVRBTreeEntry<K, V> setParent(final OMVRBTreeEntry<K, V> iParent) {\r\n\t\tif (iParent != parent) {\r\n\t\t\tthis.parent = (OMVRBTreeEntryPersistent<K, V>) iParent;\r\n\r\n\t\t\tif (parent != null && !parent.record.getIdentity().equals(parentRid))\r\n\t\t\t\tmarkDirty();\r\n\r\n\t\t\tthis.parentRid = iParent == null ? ORecordId.EMPTY_RECORD_ID : parent.record.getIdentity();\r\n\r\n\t\t\tif (parent != null) {\r\n\t\t\t\tif (parent.left == this && !parent.leftRid.equals(record.getIdentity()))\r\n\t\t\t\t\tparent.leftRid = record.getIdentity();\r\n\t\t\t\tif (parent.left != this && parent.leftRid.isValid() && parent.leftRid.equals(record.getIdentity()))\r\n\t\t\t\t\tparent.left = this;\r\n\t\t\t\tif (parent.right == this && !parent.rightRid.equals(record.getIdentity()))\r\n\t\t\t\t\tparent.rightRid = record.getIdentity();\r\n\t\t\t\tif (parent.right != this && parent.rightRid.isValid() && parent.rightRid.equals(record.getIdentity()))\r\n\t\t\t\t\tparent.right = this;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn iParent;\r\n\t}","commit_id":"d885b7c29cb24f129b0117c7b96a8d596c3a4a77","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n\t * Disconnect the current node from others.\r\n\t * \r\n\t * @param iForceDirty\r\n\t *          Force disconnection also if the record it's dirty\r\n\t */\r\n\tprotected int disconnect(final boolean iForceDirty) {\r\n\t\tif (record.isDirty() && !iForceDirty)\r\n\t\t\t// DIRTY NODE\r\n\t\t\treturn 0;\r\n\r\n\t\tif (pTree.cache.remove(record.getIdentity()) == null)\r\n\t\t\tOLogManager.instance().warn(this, \"Can't find current node into the cache. Is the cache invalid?\");\r\n\r\n\t\tint totalDisconnected = 1;\r\n\r\n\t\tif (tree.isDebug())\r\n\t\t\tSystem.out.printf(\"\\nDisconnected tree node %s with parent %s, left %s, right %s...\", this, parentRid, leftRid, rightRid);\r\n\r\n\t\tif (this != tree.getRoot()) {\r\n\t\t\t// SPEED UP MEMORY CLAIM BY RESETTING INTERNAL FIELDS\r\n\t\t\tkeys = null;\r\n\t\t\tvalues = null;\r\n\t\t\tserializedKeys = null;\r\n\t\t\tserializedValues = null;\r\n\t\t\tpTree = null;\r\n\t\t\trecord = null;\r\n\t\t}\r\n\r\n\t\t// DISCONNECT FROM THE PARENT\r\n\t\tif (parent != null) {\r\n\t\t\tif (parent.left == this) {\r\n\t\t\t\tparent.left = null;\r\n\t\t\t} else {\r\n\t\t\t\tparent.right = null;\r\n\t\t\t}\r\n\t\t\tparent = null;\r\n\t\t}\r\n\r\n\t\t// DISCONNECT RECURSIVELY THE LEFT NODE\r\n\t\tif (left != null) {\r\n\t\t\t// DISCONNECT MYSELF FROM THE LEFT NODE\r\n\t\t\tleft.parent = null;\r\n\t\t\tint disconnected = left.disconnect(iForceDirty);\r\n\r\n\t\t\tif (disconnected > 0) {\r\n\t\t\t\ttotalDisconnected += disconnected;\r\n\t\t\t\tleft = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// DISCONNECT RECURSIVELY THE RIGHT NODE\r\n\t\tif (right != null) {\r\n\t\t\t// DISCONNECT MYSELF FROM THE RIGHT NODE\r\n\t\t\tright.parent = null;\r\n\t\t\tint disconnected = right.disconnect(iForceDirty);\r\n\r\n\t\t\tif (disconnected > 0) {\r\n\t\t\t\ttotalDisconnected += disconnected;\r\n\t\t\t\tright = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn totalDisconnected;\r\n\t}","id":4653,"modified_method":"/**\r\n\t * Disconnect the current node from others.\r\n\t * \r\n\t * @param iForceDirty\r\n\t *          Force disconnection also if the record it's dirty\r\n\t * @param i\r\n\t */\r\n\tprotected int disconnect(final boolean iForceDirty, final int iLevel) {\r\n\t\tif (record == null || this == tree.getRoot() || record.isDirty() && !iForceDirty)\r\n\t\t\t// DIRTY NODE\r\n\t\t\treturn 0;\r\n\r\n\t\tfor (OMVRBTreeEntryPersistent<K, V> entryPoint : pTree.entryPoints) {\r\n\t\t\tif (entryPoint == this)\r\n\t\t\t\t// IT'S AN ENTRYPOINT: AVOID DISCONNECTION\r\n\t\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// REMOVE ME FROM THE CACHE\r\n\t\tif (pTree.cache.remove(record.getIdentity()) == null)\r\n\t\t\tOLogManager.instance().warn(this, \"Can't find current node into the cache. Is the cache invalid?\");\r\n\r\n\t\tint totalDisconnected = 1;\r\n\r\n\t\tif (tree.isDebug()) {\r\n\t\t\tStringBuilder spaces = new StringBuilder();\r\n\t\t\tfor (int i = 0; i < iLevel + 3; ++i)\r\n\t\t\t\tspaces.append(\" \");\r\n\r\n\t\t\tSystem.out.printf(\"\\n%sDisconnected tree node %s with parent %s, left %s, right %s (%s)...\", spaces, this, parentRid,\r\n\t\t\t\t\tleftRid, rightRid, System.identityHashCode(this));\r\n\t\t}\r\n\r\n\t\t// SPEED UP MEMORY CLAIM BY RESETTING INTERNAL FIELDS\r\n\t\tkeys = null;\r\n\t\tvalues = null;\r\n\t\tserializedKeys = null;\r\n\t\tserializedValues = null;\r\n\t\tpTree = null;\r\n\t\trecord = null;\r\n\r\n\t\t// DISCONNECT FROM THE PARENT\r\n\t\tif (parent != null) {\r\n\t\t\tif (parent.left == this) {\r\n\t\t\t\tparent.left = null;\r\n\t\t\t} else if (parent.right == this) {\r\n\t\t\t\tparent.right = null;\r\n\t\t\t} else\r\n\t\t\t\tOLogManager.instance().warn(this, \"Current node's parent doesn't link it correctly\");\r\n\r\n\t\t\tparent = null;\r\n\t\t}\r\n\r\n\t\t// DISCONNECT RECURSIVELY THE LEFT NODE\r\n\t\tif (left != null) {\r\n\t\t\t// DISCONNECT MYSELF FROM THE LEFT NODE\r\n\t\t\tleft.parent = null;\r\n\t\t\tint disconnected = left.disconnect(iForceDirty, iLevel + 1);\r\n\r\n\t\t\tif (disconnected > 0) {\r\n\t\t\t\ttotalDisconnected += disconnected;\r\n\t\t\t\tleft = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// DISCONNECT RECURSIVELY THE RIGHT NODE\r\n\t\tif (right != null) {\r\n\t\t\t// DISCONNECT MYSELF FROM THE RIGHT NODE\r\n\t\t\tright.parent = null;\r\n\t\t\tint disconnected = right.disconnect(iForceDirty, iLevel + 1);\r\n\r\n\t\t\tif (disconnected > 0) {\r\n\t\t\t\ttotalDisconnected += disconnected;\r\n\t\t\t\tright = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn totalDisconnected;\r\n\t}","commit_id":"d885b7c29cb24f129b0117c7b96a8d596c3a4a77","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tprotected void rotateRight(final OMVRBTreeEntry<K, V> p) {\r\n\t\tif (debug)\r\n\t\t\tSystem.out.printf(\"\\nRotating to the right the node %s\", ((OMVRBTreeEntryPersistent<K, V>) p).record.getIdentity());\r\n\t\tsuper.rotateRight(p);\r\n\t}","id":4654,"modified_method":"@Override\r\n\tprotected void rotateRight(final OMVRBTreeEntry<K, V> p) {\r\n\t\tif (debug && p != null)\r\n\t\t\tSystem.out.printf(\"\\nRotating to the right the node %s\", ((OMVRBTreeEntryPersistent<K, V>) p).record.getIdentity());\r\n\t\tsuper.rotateRight(p);\r\n\t}","commit_id":"d885b7c29cb24f129b0117c7b96a8d596c3a4a77","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tprotected void rotateLeft(final OMVRBTreeEntry<K, V> p) {\r\n\t\tif (debug)\r\n\t\t\tSystem.out.printf(\"\\nRotating to the left the node %s\", ((OMVRBTreeEntryPersistent<K, V>) p).record.getIdentity());\r\n\t\tsuper.rotateLeft(p);\r\n\t}","id":4655,"modified_method":"@Override\r\n\tprotected void rotateLeft(final OMVRBTreeEntry<K, V> p) {\r\n\t\tif (debug && p != null)\r\n\t\t\tSystem.out.printf(\"\\nRotating to the left the node %s\", ((OMVRBTreeEntryPersistent<K, V>) p).record.getIdentity());\r\n\t\tsuper.rotateLeft(p);\r\n\t}","commit_id":"d885b7c29cb24f129b0117c7b96a8d596c3a4a77","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n\t * Optimize the tree memory consumption by keeping part of nodes as entry points and clearing all the rest.\r\n\t */\r\n\tpublic void optimize() {\r\n\t\tusageCounter = 0;\r\n\r\n\t\tfinal long timer = System.currentTimeMillis();// OProfiler.getInstance().startChrono();\r\n\r\n\t\tlock.acquireExclusiveLock();\r\n\r\n\t\ttry {\r\n\t\t\tif (root == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tOLogManager.instance().debug(this, \"Starting optimization of RB+Tree...\");\r\n\r\n\t\t\t// printInMemoryStructure();\r\n\r\n\t\t\tOMVRBTreeEntryPersistent<K, V> pRoot = (OMVRBTreeEntryPersistent<K, V>) root;\r\n\r\n\t\t\tfinal int depth = pRoot.getMaxDepthInMemory();\r\n\r\n\t\t\t// RECONFIG IT TO CATCH CHANGED VALUES\r\n\t\t\tconfig();\r\n\r\n\t\t\tif (depth < entryPointsSize * optimizeEntryPointsFactor)\r\n\t\t\t\t// UNDER THRESHOLD AVOID TO OPTIMIZE\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (debug)\r\n\t\t\t\tSystem.out.printf(\"\\nOptimizing: total items %d, root is %s...\", size(), pRoot.toString());\r\n\r\n\t\t\tpRoot.checkToDisconnect((int) (entryPointsSize * optimizeEntryPointsFactor));\r\n\r\n\t\t\tif (isRuntimeCheckEnabled()) {\r\n\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> entryPoint : entryPoints)\r\n\t\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> e = (OMVRBTreeEntryPersistent<K, V>) entryPoint.getFirstInMemory(); e != null; e = e\r\n\t\t\t\t\t\t\t.getNextInMemory())\r\n\t\t\t\t\t\te.checkEntryStructure();\r\n\t\t\t}\r\n\r\n\t\t} finally {\r\n\t\t\t// System.out.println(\"End of optimization.\");\r\n\t\t\t// printInMemoryStructure();\r\n\r\n\t\t\tif (isRuntimeCheckEnabled()) {\r\n\t\t\t\tif (entryPoints.size() > 0)\r\n\t\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> entryPoint : entryPoints)\r\n\t\t\t\t\t\tcheckTreeStructure(entryPoint.getFirstInMemory());\r\n\t\t\t\telse\r\n\t\t\t\t\tcheckTreeStructure(root);\r\n\t\t\t}\r\n\r\n\t\t\tlock.releaseExclusiveLock();\r\n\t\t\tOProfiler.getInstance().stopChrono(\"OMVRBTreePersistent.optimize\", timer);\r\n\r\n\t\t\tif (OLogManager.instance().isDebugEnabled())\r\n\t\t\t\tOLogManager.instance().debug(this, \"Optimization completed in %d ms\\n\", System.currentTimeMillis() - timer);\r\n\r\n\t\t\tusageCounter = 0;\r\n\t\t}\r\n\t}","id":4656,"modified_method":"/**\r\n\t * Optimize the tree memory consumption by keeping part of nodes as entry points and clearing all the rest.\r\n\t */\r\n\tpublic void optimize() {\r\n\t\tusageCounter = 0;\r\n\r\n\t\tfinal long timer = System.currentTimeMillis();// OProfiler.getInstance().startChrono();\r\n\r\n\t\tlock.acquireExclusiveLock();\r\n\r\n\t\ttry {\r\n\t\t\tif (root == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tOLogManager.instance().debug(this, \"Starting optimization of RB+Tree...\");\r\n\r\n\t\t\t// printInMemoryStructure();\r\n\r\n\t\t\tOMVRBTreeEntryPersistent<K, V> pRoot = (OMVRBTreeEntryPersistent<K, V>) root;\r\n\r\n\t\t\tif (entryPoints.size() == 0)\r\n\t\t\t\t// FIRST TIME THE LIST IS NULL: START FROM ROOT\r\n\t\t\t\tentryPoints.add(pRoot);\r\n\r\n\t\t\t// RECONFIG IT TO CATCH CHANGED VALUES\r\n\t\t\tconfig();\r\n\r\n\t\t\tint nodes = 0;\r\n\t\t\tList<OMVRBTreeEntryPersistent<K, V>> tmp = null;\r\n\r\n\t\t\tif (isRuntimeCheckEnabled())\r\n\t\t\t\ttmp = new ArrayList<OMVRBTreeEntryPersistent<K, V>>();\r\n\r\n\t\t\tfor (OMVRBTreeEntryPersistent<K, V> entryPoint : entryPoints) {\r\n\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> e = (OMVRBTreeEntryPersistent<K, V>) entryPoint.getFirstInMemory(); e != null; e = e\r\n\t\t\t\t\t\t.getNextInMemory()) {\r\n\r\n\t\t\t\t\tif (isRuntimeCheckEnabled()) {\r\n\t\t\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> t : tmp)\r\n\t\t\t\t\t\t\tif (t != e && t.record.getIdentity().equals(e.record.getIdentity())) {\r\n\t\t\t\t\t\t\t\tOLogManager.instance().error(this, \"Found Node loaded in memory twice with different instances: \" + e);\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttmp.add(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t++nodes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (OLogManager.instance().isDebugEnabled())\r\n\t\t\t\tOLogManager.instance().debug(this, \"Found %d nodes in memory, %d items on disk, threshold=%d, entryPoints=%d\", nodes, size,\r\n\t\t\t\t\t\t(entryPointsSize * optimizeEntryPointsFactor), entryPoints.size());\r\n\r\n\t\t\tif (nodes < entryPointsSize * optimizeEntryPointsFactor)\r\n\t\t\t\t// UNDER THRESHOLD AVOID TO OPTIMIZE\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (debug)\r\n\t\t\t\tSystem.out.printf(\"\\n------------\\nOptimizing: total items %d, root is %s...\", size(), pRoot.toString());\r\n\r\n\t\t\t// COMPUTE THE DISTANCE BETWEEN NODES\r\n\t\t\tfinal int distance;\r\n\t\t\tif (nodes <= entryPointsSize)\r\n\t\t\t\tdistance = 1;\r\n\t\t\telse\r\n\t\t\t\tdistance = nodes / entryPointsSize + 1;\r\n\r\n\t\t\tnewEntryPoints.clear();\r\n\r\n\t\t\tOLogManager.instance().debug(this, \"Compacting nodes with distance = %d\", distance);\r\n\r\n\t\t\t// PICK NEW ENTRYPOINTS AT EQUAL DISTANCE\r\n\t\t\tint nodeCounter = 0;\r\n\t\t\tOMVRBTreeEntryPersistent<K, V> lastNode = null;\r\n\t\t\tOMVRBTreeEntryPersistent<K, V> currNode;\r\n\r\n\t\t\tfor (int i = 0; i < entryPoints.size(); ++i) {\r\n\t\t\t\tcurrNode = entryPoints.get(i);\r\n\r\n\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> e = (OMVRBTreeEntryPersistent<K, V>) currNode.getFirstInMemory(); e != null; e = e\r\n\t\t\t\t\t\t.getNextInMemory()) {\r\n\r\n\t\t\t\t\tboolean alreadyPresent = false;\r\n\r\n\t\t\t\t\t// CHECK THAT THE NODE IS NOT PART OF A NEXT ENTRY-POINTS: THIS IS THE CASE WHEN THE TREE CHUNKS ARE CONNECTED\r\n\t\t\t\t\t// BETWEEN THEM\r\n\t\t\t\t\tfor (int k = i + 1; k < entryPoints.size(); ++k)\r\n\t\t\t\t\t\tif (e == entryPoints.get(k)) {\r\n\t\t\t\t\t\t\talreadyPresent = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (alreadyPresent)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t++nodeCounter;\r\n\r\n\t\t\t\t\tif (newEntryPoints.size() == 0 || nodeCounter % distance == 0) {\r\n\t\t\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> ep : newEntryPoints)\r\n\t\t\t\t\t\t\tif (ep == e) {\r\n\t\t\t\t\t\t\t\talreadyPresent = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (alreadyPresent)\r\n\t\t\t\t\t\t\t--nodeCounter;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tnewEntryPoints.add(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlastNode = e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (newEntryPoints.size() > 1 && newEntryPoints.get(newEntryPoints.size() - 1) != lastNode)\r\n\t\t\t\t// ADD THE LAST ONE IF IT'S NOT YET PRESENT\r\n\t\t\t\tnewEntryPoints.add(lastNode);\r\n\r\n\t\t\t// INSERT ROOT BETWEEN ENTRY-POINTS\r\n\t\t\tint cmp;\r\n\t\t\tfor (int i = 0; i < newEntryPoints.size(); ++i) {\r\n\t\t\t\tcmp = ((Comparable<K>) pRoot.getFirstKey()).compareTo(newEntryPoints.get(i).getFirstKey());\r\n\t\t\t\tif (cmp < 0) {\r\n\t\t\t\t\tnewEntryPoints.add(i, pRoot);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else if (cmp == 0)\r\n\t\t\t\t\t// ALREADY PRESENT: DO NOTHING\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// SWAP TMP AND REAL ENTRY POINT COLLECTIONS\r\n\t\t\tentryPoints.clear();\r\n\t\t\tfinal List<OMVRBTreeEntryPersistent<K, V>> a = entryPoints;\r\n\t\t\tentryPoints = newEntryPoints;\r\n\t\t\tnewEntryPoints = a;\r\n\r\n\t\t\tif (debug) {\r\n\t\t\t\tSystem.out.printf(\"\\nEntrypoints (%d): \", entryPoints.size());\r\n\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> entryPoint : entryPoints) {\r\n\t\t\t\t\tif (debug)\r\n\t\t\t\t\t\tSystem.out.printf(entryPoint.record.getIdentity() + \" \");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// FREE ALL THE NODES BUT THE ENTRY POINTS AND PUT THE ENTRYPOINT INTO THE CACHE\r\n\t\t\tfor (OMVRBTreeEntryPersistent<K, V> entryPoint : entryPoints) {\r\n\t\t\t\tentryPoint.disconnectLinked(false);\r\n\t\t\t}\r\n\r\n\t\t\tif (isRuntimeCheckEnabled()) {\r\n\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> entryPoint : entryPoints)\r\n\t\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> e = (OMVRBTreeEntryPersistent<K, V>) entryPoint.getFirstInMemory(); e != null; e = e\r\n\t\t\t\t\t\t\t.getNextInMemory())\r\n\t\t\t\t\t\te.checkEntryStructure();\r\n\r\n\t\t\t\tif (OLogManager.instance().isDebugEnabled()) {\r\n\t\t\t\t\t// COUNT ALL IN-MEMORY NODES BY BROWSING ALL THE ENTRYPOINT NODES\r\n\t\t\t\t\tnodes = 0;\r\n\t\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> entryPoint : entryPoints)\r\n\t\t\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> e = (OMVRBTreeEntryPersistent<K, V>) entryPoint.getFirstInMemory(); e != null; e = e\r\n\t\t\t\t\t\t\t\t.getNextInMemory())\r\n\t\t\t\t\t\t\t++nodes;\r\n\r\n\t\t\t\t\tOLogManager.instance().debug(this, \"Now Found %d nodes in memory and threshold=%d. EntryPoints=%d\", nodes,\r\n\t\t\t\t\t\t\t(entryPointsSize * optimizeEntryPointsFactor), entryPoints.size());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} finally {\r\n\t\t\t// System.out.println(\"End of optimization.\");\r\n\t\t\t// printInMemoryStructure();\r\n\r\n\t\t\tif (isRuntimeCheckEnabled()) {\r\n\t\t\t\tif (entryPoints.size() > 0)\r\n\t\t\t\t\tfor (OMVRBTreeEntryPersistent<K, V> entryPoint : entryPoints)\r\n\t\t\t\t\t\tcheckTreeStructure(entryPoint.getFirstInMemory());\r\n\t\t\t\telse\r\n\t\t\t\t\tcheckTreeStructure(root);\r\n\t\t\t}\r\n\r\n\t\t\tlock.releaseExclusiveLock();\r\n\t\t\tOProfiler.getInstance().stopChrono(\"OMVRBTreePersistent.optimize\", timer);\r\n\r\n\t\t\tif (OLogManager.instance().isDebugEnabled())\r\n\t\t\t\tOLogManager.instance().debug(this, \"Optimization completed in %d ms\\n\", System.currentTimeMillis() - timer);\r\n\r\n\t\t\tusageCounter = 0;\r\n\t\t}\r\n\t}","commit_id":"d885b7c29cb24f129b0117c7b96a8d596c3a4a77","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n\t * Unload all the in-memory nodes. This is called on transaction rollback.\r\n\t */\r\n\tpublic void unload() {\r\n\t\tfinal long timer = OProfiler.getInstance().startChrono();\r\n\t\tlock.acquireExclusiveLock();\r\n\r\n\t\ttry {\r\n\t\t\t// DISCONNECT ALL THE NODES\r\n\t\t\tfor (OMVRBTreeEntryPersistent<K, V> entryPoint : entryPoints)\r\n\t\t\t\tentryPoint.disconnect(true);\r\n\t\t\tentryPoints.clear();\r\n\r\n\t\t\trecordsToCommit.clear();\r\n\t\t\tcache.clear();\r\n\t\t\troot = null;\r\n\r\n\t\t\tusageCounter = 0;\r\n\r\n\t\t\tload();\r\n\r\n\t\t} catch (IOException e) {\r\n\t\t\tOLogManager.instance().error(this, \"Error on unload the tree: \" + record.getIdentity(), e, OStorageException.class);\r\n\t\t} finally {\r\n\r\n\t\t\tlock.releaseExclusiveLock();\r\n\t\t\tOProfiler.getInstance().stopChrono(\"OMVRBTreePersistent.unload\", timer);\r\n\t\t}\r\n\t}","id":4657,"modified_method":"/**\r\n\t * Unload all the in-memory nodes. This is called on transaction rollback.\r\n\t */\r\n\tpublic void unload() {\r\n\t\tfinal long timer = OProfiler.getInstance().startChrono();\r\n\t\tlock.acquireExclusiveLock();\r\n\r\n\t\ttry {\r\n\t\t\t// DISCONNECT ALL THE NODES\r\n\t\t\tfor (OMVRBTreeEntryPersistent<K, V> entryPoint : entryPoints)\r\n\t\t\t\tentryPoint.disconnect(true, 0);\r\n\t\t\tentryPoints.clear();\r\n\r\n\t\t\trecordsToCommit.clear();\r\n\t\t\tcache.clear();\r\n\t\t\troot = null;\r\n\r\n\t\t\tusageCounter = 0;\r\n\r\n\t\t\tload();\r\n\r\n\t\t} catch (IOException e) {\r\n\t\t\tOLogManager.instance().error(this, \"Error on unload the tree: \" + record.getIdentity(), e, OStorageException.class);\r\n\t\t} finally {\r\n\r\n\t\t\tlock.releaseExclusiveLock();\r\n\t\t\tOProfiler.getInstance().stopChrono(\"OMVRBTreePersistent.unload\", timer);\r\n\t\t}\r\n\t}","commit_id":"d885b7c29cb24f129b0117c7b96a8d596c3a4a77","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void saveMetadata(@NotNull SModelDescriptor modelDescriptor) {\n    Map<String, String> metadata = modelDescriptor.getMetaData();\n    if (metadata.isEmpty()) return;\n\n    IFile metadataFile = getMetadataFile(modelDescriptor.getModelFile());\n    if (!metadataFile.exists()) {\n      metadataFile.createNewFile();\n      IOperationContext operationContext = modelDescriptor.getOperationContext();\n      if (operationContext != null) {\n        IProjectHandler projectHandler = operationContext.getProject().getProjectHandler();\n        if (projectHandler != null) {\n          try {\n            projectHandler.addFilesToVCS(CollectionUtil.asList(metadataFile.toFile()));\n          } catch (RemoteException e) {\n            LOG.error(e);\n          }\n        }\n      } else {\n        LOG.warning(\"can't find an operation context for a model \" + modelDescriptor);\n      }\n    }\n\n    System.err.println(\"saving metadata\");\n    DefaultMetadataPersistence.save(metadataFile, metadata);\n  }","id":4658,"modified_method":"public void saveMetadata(@NotNull SModelDescriptor modelDescriptor) {\n    Map<String, String> metadata = modelDescriptor.getMetaData();\n    if (metadata.isEmpty()) return;\n\n    IFile metadataFile = getMetadataFile(modelDescriptor.getModelFile());\n    if (!metadataFile.exists()) {\n      metadataFile.createNewFile();\n      IOperationContext operationContext = modelDescriptor.getOperationContext();\n      if (operationContext != null) {\n        ProjectVCSManager projectVCSManager = operationContext.getProject().getComponent(ProjectVCSManager.class);\n        assert projectVCSManager != null;\n        projectVCSManager.getController().addFilesToVCS(CollectionUtil.asList(metadataFile.toFile()));\n      } else {\n        LOG.warning(\"can't find an operation context for a model \" + modelDescriptor);\n      }\n    }\n\n    System.err.println(\"saving metadata\");\n    DefaultMetadataPersistence.save(metadataFile, metadata);\n  }","commit_id":"1c4c8968e39df9efc383834cf6522d219ab61b49","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean renameModelDescriptor(SModelDescriptor modelDescriptor, String newLongName, ModelRoot root, MPSProject project) {\n    assert modelDescriptor instanceof DefaultSModelDescriptor;\n    SModelUID newModelUID = new SModelUID(newLongName, modelDescriptor.getStereotype());\n    SModelUID oldModelUID = modelDescriptor.getModelUID();\n    ModelOwner owner = SModelRepository.getInstance().getOwners(modelDescriptor).iterator().next();\n    IFile oldModelFile = modelDescriptor.getModelFile();\n    String oldFileName = oldModelFile.getAbsolutePath();\n\n    //create a file for a new model\n    IFile dest = createFileForModelUID(root, newModelUID);\n\n    // if imports itself: rename import here\n    if (modelDescriptor.getSModel().hasImportedModel(oldModelUID)) {\n      modelDescriptor.getSModel().changeImportedModelUID(oldModelUID, newModelUID);\n    }\n\n    // update model repository and rename descriptor itself\n    SModelRepository.getInstance().renameUID(modelDescriptor, newModelUID);\n\n    // update node pointers\n    SNodePointer.changeModelUID(oldModelUID, newModelUID);\n\n    //set model file\n    ((DefaultSModelDescriptor)modelDescriptor).setModelFile(dest);\n\n    //create stub for an old UID\n    String stubFileName = oldFileName.substring(0, oldFileName.lastIndexOf(MODEL_EXTENSION)) + STUB_EXTENSION;\n    SModelDescriptor stubDescriptor = new StubModelDescriptor(this, FileSystem.getFile(stubFileName), oldModelUID, newModelUID);\n    SModelRepository.getInstance().registerModelDescriptor(stubDescriptor, owner);\n    stubDescriptor.save();\n    IFile stubDescriptorModelFile = stubDescriptor.getModelFile();\n\n    //vcs\n    IProjectHandler projectHandler = project.getProjectHandler();\n    if (projectHandler != null) {\n      try {\n        projectHandler.deleteFilesAndRemoveFromVCS(CollectionUtil.asList(FileSystem.toFile(oldModelFile)));\n        projectHandler.addFilesToVCS(CollectionUtil.asList(FileSystem.toFile(dest)));\n        projectHandler.addFilesToVCS(CollectionUtil.asList(FileSystem.toFile(stubDescriptorModelFile)));\n      } catch(RemoteException ex) {\n        LOG.error(ex);\n        return false;\n      }\n    } else {\n      oldModelFile.delete();\n    }\n    MPSModuleRepository.getInstance().invalidateCaches();\n    return true;\n  }","id":4659,"modified_method":"public boolean renameModelDescriptor(SModelDescriptor modelDescriptor, String newLongName, ModelRoot root, MPSProject project) {\n    assert modelDescriptor instanceof DefaultSModelDescriptor;\n    SModelUID newModelUID = new SModelUID(newLongName, modelDescriptor.getStereotype());\n    SModelUID oldModelUID = modelDescriptor.getModelUID();\n    ModelOwner owner = SModelRepository.getInstance().getOwners(modelDescriptor).iterator().next();\n    IFile oldModelFile = modelDescriptor.getModelFile();\n    String oldFileName = oldModelFile.getAbsolutePath();\n\n    //create a file for a new model\n    IFile dest = createFileForModelUID(root, newModelUID);\n\n    // if imports itself: rename import here\n    if (modelDescriptor.getSModel().hasImportedModel(oldModelUID)) {\n      modelDescriptor.getSModel().changeImportedModelUID(oldModelUID, newModelUID);\n    }\n\n    // update model repository and rename descriptor itself\n    SModelRepository.getInstance().renameUID(modelDescriptor, newModelUID);\n\n    // update node pointers\n    SNodePointer.changeModelUID(oldModelUID, newModelUID);\n\n    //set model file\n    ((DefaultSModelDescriptor) modelDescriptor).setModelFile(dest);\n\n    //create stub for an old UID\n    String stubFileName = oldFileName.substring(0, oldFileName.lastIndexOf(MODEL_EXTENSION)) + STUB_EXTENSION;\n    SModelDescriptor stubDescriptor = new StubModelDescriptor(this, FileSystem.getFile(stubFileName), oldModelUID, newModelUID);\n    SModelRepository.getInstance().registerModelDescriptor(stubDescriptor, owner);\n    stubDescriptor.save();\n    IFile stubDescriptorModelFile = stubDescriptor.getModelFile();\n\n    //vcs\n    ProjectVCSManager projectVCSManager = project.getComponent(ProjectVCSManager.class);\n    assert projectVCSManager != null;\n    boolean result = projectVCSManager.getController().deleteFilesAndRemoveFromVCS(CollectionUtil.asList(FileSystem.toFile(oldModelFile)));\n    result &= projectVCSManager.getController().addFilesToVCS(CollectionUtil.asList(FileSystem.toFile(dest)));\n    result &= projectVCSManager.getController().addFilesToVCS(CollectionUtil.asList(FileSystem.toFile(stubDescriptorModelFile)));\n\n    MPSModuleRepository.getInstance().invalidateCaches();\n    return result;\n  }","commit_id":"1c4c8968e39df9efc383834cf6522d219ab61b49","url":"https://github.com/JetBrains/MPS"},{"original_method":"@NotNull\n  public SModelDescriptor createNewModel(@NotNull ModelRoot root, @NotNull SModelUID uid, @NotNull ModelOwner owner) {\n    if (root.getPrefix().length() > 0 && !uid.getLongName().startsWith(root.getPrefix())) {\n      throw new IllegalArgumentException();\n    }\n\n    IFile modelFile = createFileForModelUID(root, uid);\n    SModelDescriptor result = DefaultModelRootManager.createModel(this, root, modelFile.getCanonicalPath(), uid, owner);\n    IOperationContext operationContext = result.getOperationContext();\n    if (operationContext != null) {\n      IProjectHandler projectHandler = operationContext.getProject().getProjectHandler();\n      if (projectHandler != null) {\n        try {\n          projectHandler.addFilesToVCS(CollectionUtil.asList(modelFile.toFile()));\n        } catch (RemoteException e) {\n          LOG.error(e);\n        }\n      }\n    } else {\n      LOG.warning(\"can't find an operation context for a model \" + result);\n    }\n    return result;\n  }","id":4660,"modified_method":"@NotNull\n  public SModelDescriptor createNewModel(@NotNull ModelRoot root, @NotNull SModelUID uid, @NotNull ModelOwner owner) {\n    if (root.getPrefix().length() > 0 && !uid.getLongName().startsWith(root.getPrefix())) {\n      throw new IllegalArgumentException();\n    }\n\n    IFile modelFile = createFileForModelUID(root, uid);\n    SModelDescriptor result = DefaultModelRootManager.createModel(this, root, modelFile.getCanonicalPath(), uid, owner);\n    IOperationContext operationContext = result.getOperationContext();\n    if (operationContext != null) {\n      ProjectVCSManager projectVCSManager = operationContext.getProject().getComponent(ProjectVCSManager.class);\n      assert projectVCSManager != null;\n      projectVCSManager.getController().addFilesToVCS(Collections.singletonList(modelFile.toFile()));\n    } else {\n      LOG.warning(\"can't find an operation context for a model \" + result);\n    }\n    return result;\n  }","commit_id":"1c4c8968e39df9efc383834cf6522d219ab61b49","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static boolean handleOutput(IOperationContext context,\n                                  GenerationStatus status,\n                                  String outputDir) {\n    if (outputDir == null) throw new RuntimeException(\"unspecified output path for file generation.\");\n\n    if (!status.isOk()) {\n      return false;\n    }\n\n    File outputRootDirectory = new File(outputDir);\n    GeneratorManager gm = context.getProject().getComponentSafe(GeneratorManager.class);\n    Map<SNode, String> outputNodeContents = new LinkedHashMap<SNode, String>();\n\n    boolean ok = true;\n    if (!generateText(context, status, outputNodeContents)) {\n      return false;\n    }\n\n    // generate files and synchronize vcs\n    Set<File> generatedFiles = new HashSet<File>();\n    Set<File> directories = new HashSet<File>();\n\n    generateFiles(status, outputRootDirectory, gm, outputNodeContents, generatedFiles, directories);\n\n    IProjectHandler handler = context.getProject().getProjectHandler();\n    if (handler != null) {\n      try {\n        handler.addFilesToVCS(new ArrayList<File>(generatedFiles));\n      } catch (RemoteException e) {\n        GenerateFilesGenerationType.LOG.error(e);\n      }\n    }\n\n    // always clean-up default output dir.\n    directories.add(getDefaultOutputDir(status.getInputModel(), outputRootDirectory));\n    cleanUp(context, generatedFiles, directories);\n\n    gm.fireFilesGenerated(generatedFiles, status);\n\n    return ok; \n  }","id":4661,"modified_method":"public static boolean handleOutput(IOperationContext context,\n                                     GenerationStatus status,\n                                     String outputDir) {\n    if (outputDir == null) throw new RuntimeException(\"unspecified output path for file generation.\");\n\n    if (!status.isOk()) {\n      return false;\n    }\n\n    File outputRootDirectory = new File(outputDir);\n    GeneratorManager gm = context.getProject().getComponentSafe(GeneratorManager.class);\n    Map<SNode, String> outputNodeContents = new LinkedHashMap<SNode, String>();\n\n    boolean ok = true;\n    if (!generateText(context, status, outputNodeContents)) {\n      return false;\n    }\n\n    // generate files and synchronize vcs\n    Set<File> generatedFiles = new HashSet<File>();\n    Set<File> directories = new HashSet<File>();\n\n    generateFiles(status, outputRootDirectory, gm, outputNodeContents, generatedFiles, directories);\n\n    ProjectVCSManager projectVCSManager = context.getProject().getComponent(ProjectVCSManager.class);\n    assert projectVCSManager != null;\n    projectVCSManager.getController().addFilesToVCS(new ArrayList<File>(generatedFiles));\n\n    // always clean-up default output dir.\n    directories.add(getDefaultOutputDir(status.getInputModel(), outputRootDirectory));\n    cleanUp(context, generatedFiles, directories);\n\n    gm.fireFilesGenerated(generatedFiles, status);\n\n    return ok;\n  }","commit_id":"1c4c8968e39df9efc383834cf6522d219ab61b49","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void cleanUp(IOperationContext context, Set<File> generatedFiles, Set<File> directories) {\n    // clear garbage\n    List<File> filesToDelete = new ArrayList<File>();\n    for (File dir : directories) {\n      File[] files = dir.listFiles();\n      if (files != null) {\n        for (File outputDirectoryFile : files) {\n          if (!outputDirectoryFile.isDirectory() && !outputDirectoryFile.isHidden()) {\n            if (!generatedFiles.contains(outputDirectoryFile)) {\n              filesToDelete.add(outputDirectoryFile);\n            }\n          }\n        }\n      }\n    }\n    IProjectHandler projectHandler = context.getProject().getProjectHandler();\n    if (projectHandler != null) {\n      try {\n        projectHandler.deleteFilesAndRemoveFromVCS(filesToDelete);\n      } catch (RemoteException ex) {\n        LOG.error(ex);\n      }\n    } else {\n      for (File file : filesToDelete) {\n        file.delete();\n      }\n    }\n  }","id":4662,"modified_method":"public static void cleanUp(IOperationContext context, Set<File> generatedFiles, Set<File> directories) {\n    // clear garbage\n    List<File> filesToDelete = new ArrayList<File>();\n    for (File dir : directories) {\n      File[] files = dir.listFiles();\n      if (files != null) {\n        for (File outputDirectoryFile : files) {\n          if (!outputDirectoryFile.isDirectory() && !outputDirectoryFile.isHidden()) {\n            if (!generatedFiles.contains(outputDirectoryFile)) {\n              filesToDelete.add(outputDirectoryFile);\n            }\n          }\n        }\n      }\n    }\n    ProjectVCSManager projectVCSManager = context.getProject().getComponent(ProjectVCSManager.class);\n    assert projectVCSManager != null;\n    projectVCSManager.getController().deleteFilesAndRemoveFromVCS(filesToDelete);\n  }","commit_id":"1c4c8968e39df9efc383834cf6522d219ab61b49","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void generateWordList() throws XPathException {\n\t\ttry {\n\t\t\tMutableDocumentSet docs = new DefaultDocumentSet();\n            docs = context.getBroker().getAllXMLResources(docs);\n            Occurrences[] occurrences =\n                    context.getBroker().getTextEngine().scanIndexTerms(docs, docs.docsToNodeSet(), null, null);\n            List list = new ArrayList();\n            for (int i = 0; i < occurrences.length; i++) {\n                list.add(occurrences[i].getTerm().toString());\n            }\n            words = new String[list.size()];\n            list.toArray(words);\n        } catch (PermissionDeniedException e) {\n\t\t\tthrow new XPathException(this, e.getMessage(), e);\n\t\t}\n    }","id":4663,"modified_method":"private void generateWordList() throws XPathException {\n\t\ttry {\n            // Can return NPE  DW: can probably be replaced\n            TextSearchEngine engine = context.getBroker().getTextEngine();\n            if(engine==null){\n                throw new XPathException(\"The legacy fulltext indexing has been disabled by \"\n                        + \"default from version 1.4.1. Please consider migrating to \"\n                        + \"the new full text indexing..\"); \n            }\n        \n\t\t\tMutableDocumentSet docs = new DefaultDocumentSet();\n            docs = context.getBroker().getAllXMLResources(docs);\n            Occurrences[] occurrences =\n                    engine.scanIndexTerms(docs, docs.docsToNodeSet(), null, null);\n            List list = new ArrayList();\n            for (int i = 0; i < occurrences.length; i++) {\n                list.add(occurrences[i].getTerm().toString());\n            }\n            words = new String[list.size()];\n            list.toArray(words);\n            \n        } catch (PermissionDeniedException e) {\n\t\t\tthrow new XPathException(this, e.getMessage(), e);\n\t\t}\n    }","commit_id":"0b7a3c04fe70132717f3458e39f85335b3dbfb49","url":"https://github.com/eXist-db/exist"},{"original_method":"protected String[] getSearchTerms(String searchString)\n\t\tthrows EXistException {\n\t\tList tokens = new ArrayList();\n\t\tTokenizer tokenizer = context.getBroker().getTextEngine().getTokenizer();\n\t\ttokenizer.setText(searchString);\n\t\torg.exist.storage.analysis.TextToken token;\n\t\tString word;\n\t\twhile (null != (token = tokenizer.nextToken(true))) {\n\t\t\tword = token.getText();\n\t\t\ttokens.add(word);\n\t\t}\n\t\tString[] terms = new String[tokens.size()];\n\t\treturn (String[]) tokens.toArray(terms);\n    }","id":4664,"modified_method":"protected String[] getSearchTerms(String searchString)\n\t\tthrows EXistException {\n\t\tList tokens = new ArrayList();\n\t\t \n                // Can return NPE\n                TextSearchEngine engine = context.getBroker().getTextEngine();\n                \n                if(engine==null) {\n                    throw new EXistException(\"The old fulltext engine has been disabled \"\n                            + \"for stability reasons. Please use the Lucene FT search \"\n                            + \"instead.\");\n                }\n                        \n                Tokenizer tokenizer = engine.getTokenizer();\n\t\ttokenizer.setText(searchString);\n\t\torg.exist.storage.analysis.TextToken token;\n\t\tString word;\n\t\twhile (null != (token = tokenizer.nextToken(true))) {\n\t\t\tword = token.getText();\n\t\t\ttokens.add(word);\n\t\t}\n\t\tString[] terms = new String[tokens.size()];\n\t\treturn (String[]) tokens.toArray(terms);\n    }","commit_id":"1e8ba453045cbb5be08e639baa7328331aa26c90","url":"https://github.com/eXist-db/exist"},{"original_method":"protected List getSearchTerms(XQueryContext context,\n\t\t\t\t\t\t\t\t\t\tSequence contextSequence)\n\t\t\tthrows XPathException {\n\t\tString searchString = getArgument(1).eval(contextSequence)\n\t\t\t\t.getStringValue();\n\t\tList tokens = new ArrayList();\n\t\tTokenizer tokenizer = context.getBroker().getTextEngine()\n\t\t\t\t.getTokenizer();\n\t\ttokenizer.setText(searchString);\n\t\torg.exist.storage.analysis.TextToken token;\n\t\tString word;\n\t\twhile (null != (token = tokenizer.nextToken(true))) {\n\t\t\tword = token.getText();\n\t\t\ttokens.add(word);\n\t\t}\n\t\treturn tokens;\n\t}","id":4665,"modified_method":"protected List getSearchTerms(XQueryContext context,\n\t\t\t\t\t\t\t\t\t\tSequence contextSequence)\n\t\t\tthrows XPathException {\n\t\tString searchString = getArgument(1).eval(contextSequence)\n\t\t\t\t.getStringValue();\n\t\tList tokens = new ArrayList();\n        \n        // Can return NPE\n        TextSearchEngine engine = context.getBroker().getTextEngine();\n        if(engine==null){\n            throw new XPathException(\"The legacy fulltext indexing has been disabled by \"\n                    + \"default from version 1.4.1. Please consider migrating to \"\n                    + \"the new full text indexing..\"); \n        }\n                \n\t\tTokenizer tokenizer = engine.getTokenizer();\n        \n\t\ttokenizer.setText(searchString);\n\t\torg.exist.storage.analysis.TextToken token;\n\t\tString word;\n\t\twhile (null != (token = tokenizer.nextToken(true))) {\n\t\t\tword = token.getText();\n\t\t\ttokens.add(word);\n\t\t}\n\t\treturn tokens;\n\t}","commit_id":"1ff2479df286442453f5684165529033ae7a0f8f","url":"https://github.com/eXist-db/exist"},{"original_method":"protected NodeSet[] getMatches(DocumentSet docs, NodeSet contextSet, int axis, QName qname, String[] terms)\n    throws XPathException {\n        NodeSet hits[] = new NodeSet[terms.length];\n        for (int k = 0; k < terms.length; k++) {\n            hits[k] =\n                    context.getBroker().getTextEngine().getNodesContaining(\n                            context,\n                            docs,\n                            contextSet, axis,\n                            qname, terms[k],\n                            DBBroker.MATCH_EXACT);\n        }\n        return hits;\n    }","id":4666,"modified_method":"protected NodeSet[] getMatches(DocumentSet docs, NodeSet contextSet, int axis, QName qname, String[] terms)\n    throws XPathException {\n        \n        // Can return NPE\n        TextSearchEngine engine = context.getBroker().getTextEngine();\n        if(engine==null){\n            throw new XPathException(\"The legacy fulltext indexing has been disabled by \"\n                    + \"default from version 1.4.1. Please consider migrating to \"\n                    + \"the new full text indexing..\"); \n        }\n        \n        NodeSet hits[] = new NodeSet[terms.length];\n        for (int k = 0; k < terms.length; k++) {\n            hits[k] =\n                    engine.getNodesContaining(\n                            context,\n                            docs,\n                            contextSet, axis,\n                            qname, terms[k],\n                            DBBroker.MATCH_EXACT);\n        }\n        return hits;\n    }","commit_id":"1ff2479df286442453f5684165529033ae7a0f8f","url":"https://github.com/eXist-db/exist"},{"original_method":"public NodeSet preSelect(Sequence contextSequence, boolean useContext)\n        throws XPathException {\n        long start = System.currentTimeMillis();\n        \n        // the expression can be called multiple times, so we need to clear the previous preselectResult\n        preselectResult = null;\n        \n        if (maxDistance != null) {\n\t\t\tmax_distance = ((IntegerValue) maxDistance.eval(contextSequence).convertTo(Type.INTEGER)).getInt();\n\t\t}\n\t\tif (minDistance != null) {\n\t\t\tmin_distance = ((IntegerValue) minDistance.eval(contextSequence).convertTo(Type.INTEGER)).getInt();\n\t\t}\n\n        // get the search terms\n        String arg = searchTerm.eval(contextSequence).getStringValue();\n        String[] terms;\n        try {\n\t\t\tterms = getSearchTerms(arg);\n\t\t} catch (EXistException e) {\n            logger.error(e.getMessage());\n\t\t\tthrow new XPathException(this, e.getMessage(), e);\n\t\t}\n        // lookup the terms in the fulltext index. returns one node set for each term\n        NodeSet[] hits = getMatches(contextSequence.getDocumentSet(), useContext ? contextSequence.toNodeSet() : null,\n                NodeSet.DESCENDANT, contextQName, terms);\n        // walk through the matches and compute the combined node set\n        preselectResult = hits[0];\n        if (preselectResult != null) {\n            for(int k = 1; k < hits.length; k++) {\n                if(hits[k] != null) {\n                    preselectResult = preselectResult.deepIntersection(hits[k]);\n                }\n            }\n        } else {\n            preselectResult = NodeSet.EMPTY_SET;\n        }\n\t\tif (terms.length > 1) {\n            boolean hasWildcards = false;\n            for (int i = 0; i < terms.length; i++) {\n                hasWildcards |= NativeTextEngine.containsWildcards(terms[i]);\n            }\n            preselectResult = (NodeSet) (hasWildcards ? patternMatch(context, terms, preselectResult) : \n                                exactMatch(context, terms, preselectResult));\n        }\n        if (context.getProfiler().traceFunctions())\n            context.getProfiler().traceIndexUsage(context, FTIndex.ID, this,\n                PerformanceStats.OPTIMIZED_INDEX, System.currentTimeMillis() - start);\n        return preselectResult;\n    }","id":4667,"modified_method":"public NodeSet preSelect(Sequence contextSequence, boolean useContext)\n        throws XPathException {\n        \n        // Can return NPE\n        TextSearchEngine engine = context.getBroker().getTextEngine();\n        if(engine==null){\n            throw new XPathException(\"The legacy fulltext indexing has been disabled by \"\n                    + \"default from version 1.4.1. Please consider migrating to \"\n                    + \"the new full text indexing..\"); \n        }\n        \n        long start = System.currentTimeMillis();\n        \n        // the expression can be called multiple times, so we need to clear the previous preselectResult\n        preselectResult = null;\n        \n        if (maxDistance != null) {\n\t\t\tmax_distance = ((IntegerValue) maxDistance.eval(contextSequence).convertTo(Type.INTEGER)).getInt();\n\t\t}\n\t\tif (minDistance != null) {\n\t\t\tmin_distance = ((IntegerValue) minDistance.eval(contextSequence).convertTo(Type.INTEGER)).getInt();\n\t\t}\n\n        // get the search terms\n        String arg = searchTerm.eval(contextSequence).getStringValue();\n        String[] terms;\n        try {\n\t\t\tterms = getSearchTerms(arg);\n\t\t} catch (EXistException e) {\n            logger.error(e.getMessage());\n\t\t\tthrow new XPathException(this, e.getMessage(), e);\n\t\t}\n        // lookup the terms in the fulltext index. returns one node set for each term\n        NodeSet[] hits = getMatches(contextSequence.getDocumentSet(), useContext ? contextSequence.toNodeSet() : null,\n                NodeSet.DESCENDANT, contextQName, terms);\n        // walk through the matches and compute the combined node set\n        preselectResult = hits[0];\n        if (preselectResult != null) {\n            for(int k = 1; k < hits.length; k++) {\n                if(hits[k] != null) {\n                    preselectResult = preselectResult.deepIntersection(hits[k]);\n                }\n            }\n        } else {\n            preselectResult = NodeSet.EMPTY_SET;\n        }\n\t\tif (terms.length > 1) {\n            boolean hasWildcards = false;\n            for (int i = 0; i < terms.length; i++) {\n                hasWildcards |= NativeTextEngine.containsWildcards(terms[i]);\n            }\n            preselectResult = (NodeSet) (hasWildcards ? patternMatch(context, terms, preselectResult) : \n                                exactMatch(context, terms, preselectResult));\n        }\n        if (context.getProfiler().traceFunctions())\n            context.getProfiler().traceIndexUsage(context, FTIndex.ID, this,\n                PerformanceStats.OPTIMIZED_INDEX, System.currentTimeMillis() - start);\n        return preselectResult;\n    }","commit_id":"1ff2479df286442453f5684165529033ae7a0f8f","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence evalQuery(String searchArg, NodeSet nodes)\n        throws XPathException {\n\t\tif (maxDistance != null) {\n\t\t\tmax_distance = ((IntegerValue) maxDistance.eval(nodes).convertTo(Type.INTEGER)).getInt();\n\t\t}\n\t\tif (minDistance != null) {\n\t\t\tmin_distance = ((IntegerValue) minDistance.eval(nodes).convertTo(Type.INTEGER)).getInt();\n\t\t}\n        String[] terms;\n\t\ttry {\n\t\t\tterms = getSearchTerms(searchArg);\n\t\t} catch (EXistException e) {\n            logger.error(e.getMessage());\n\t\t\tthrow new XPathException(this, e.getMessage(), e);\n\t\t}\n\t\tNodeSet hits = processQuery(terms, nodes);\n\t\tif (hits == null)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tif (terms.length == 1)\n\t\t\treturn hits;\n        \n\t\tboolean hasWildcards = false;\n\t\tfor (int i = 0; i < terms.length; i++) {\n\t\t\thasWildcards |= NativeTextEngine.containsWildcards(terms[i]);\n\t\t}\n\t\treturn hasWildcards ? patternMatch(context, terms, hits) : exactMatch(context, terms, hits);\n\t}","id":4668,"modified_method":"public Sequence evalQuery(String searchArg, NodeSet nodes)\n        throws XPathException {\n        \n        // Can return NPE\n        TextSearchEngine engine = context.getBroker().getTextEngine();\n        if(engine==null){\n            throw new XPathException(\"The legacy fulltext indexing has been disabled by \"\n                    + \"default from version 1.4.1. Please consider migrating to \"\n                    + \"the new full text indexing..\"); \n        }\n        \n\t\tif (maxDistance != null) {\n\t\t\tmax_distance = ((IntegerValue) maxDistance.eval(nodes).convertTo(Type.INTEGER)).getInt();\n\t\t}\n\t\tif (minDistance != null) {\n\t\t\tmin_distance = ((IntegerValue) minDistance.eval(nodes).convertTo(Type.INTEGER)).getInt();\n\t\t}\n        String[] terms;\n\t\ttry {\n\t\t\tterms = getSearchTerms(searchArg);\n\t\t} catch (EXistException e) {\n            logger.error(e.getMessage());\n\t\t\tthrow new XPathException(this, e.getMessage(), e);\n\t\t}\n\t\tNodeSet hits = processQuery(terms, nodes);\n\t\tif (hits == null)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tif (terms.length == 1)\n\t\t\treturn hits;\n        \n\t\tboolean hasWildcards = false;\n\t\tfor (int i = 0; i < terms.length; i++) {\n\t\t\thasWildcards |= NativeTextEngine.containsWildcards(terms[i]);\n\t\t}\n\t\treturn hasWildcards ? patternMatch(context, terms, hits) : exactMatch(context, terms, hits);\n\t}","commit_id":"1ff2479df286442453f5684165529033ae7a0f8f","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * \n     * @param searchArg\n     * @param nodes \n     */\n    public Sequence evalQuery(String searchArg,\tNodeSet nodes) throws XPathException {\n        String[] terms;\n        try {\n\t\t\tterms = getSearchTerms(searchArg);\n\t\t} catch (EXistException e) {\n            logger.error(e.getMessage());\n\t\t\tthrow new XPathException(this, e.getMessage(), e);\n\t\t}\n\t\tNodeSet hits = processQuery(terms, nodes);\n\t\tif (hits == null)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n        \n\t\tboolean hasWildcards = false;\n\t\tfor(int i = 0; i < terms.length; i++) {\n\t\t\thasWildcards |=\tNativeTextEngine.containsWildcards(terms[i]);\n\t\t}\n\t\treturn hasWildcards\t? patternMatch(context, terms, hits) : exactMatch(context, terms, hits);\n\t}","id":4669,"modified_method":"/**\n     * \n     * @param searchArg\n     * @param nodes \n     */\n    public Sequence evalQuery(String searchArg,\tNodeSet nodes) throws XPathException {\n        String[] terms;\n        try {\n\t\t\tterms = getSearchTerms(searchArg);\n\t\t} catch (EXistException e) {\n            logger.error(e.getMessage());\n\t\t\tthrow new XPathException(this, e.getMessage(), e);\n\t\t}\n\t\tNodeSet hits = processQuery(terms, nodes);\n\t\tif (hits == null)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n        \n        // Can return NPE ; prevents issue exact matches\n        TextSearchEngine engine = context.getBroker().getTextEngine();\n        if(engine==null){\n            throw new XPathException(\"The legacy fulltext indexing has been disabled by \"\n                    + \"default from version 1.4.1. Please consider migrating to \"\n                    + \"the new full text indexing..\"); \n        }\n        \n\t\tboolean hasWildcards = false;\n\t\tfor(int i = 0; i < terms.length; i++) {\n\t\t\thasWildcards |=\tNativeTextEngine.containsWildcards(terms[i]);\n\t\t}\n\t\treturn hasWildcards\t? patternMatch(context, terms, hits) : exactMatch(context, terms, hits);\n\t}","commit_id":"1ff2479df286442453f5684165529033ae7a0f8f","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence contextSequence, Item contextItem)\n            throws XPathException {\n\n        Sequence querySeq = getArgument(1).eval(contextSequence);\n        if (querySeq.isEmpty()) {\n            return Sequence.EMPTY_SEQUENCE;\n        }\n        String query = querySeq.itemAt(0).getStringValue();\n        \n        String[] terms = getSearchTerms(query);\n        NodeSet hits[] = new NodeSet[terms.length];\n        NodeSet contextSet = contextSequence.toNodeSet();\n        for (int k = 0; k < terms.length; k++) {\n            hits[k] =\n                    context.getBroker().getTextEngine().getNodesContaining(\n                            context,\n                            contextSet.getDocumentSet(),\n                            null, NodeSet.DESCENDANT, null,\n                            terms[k],\n                            DBBroker.MATCH_EXACT);\n            hits[k] = getArgument(0).eval(hits[k]).toNodeSet();\n        }\n        \n        NodeSet result = hits[0];\n        for(int k = 1; k < hits.length; k++) {\n            if(hits[k] != null)\n                result = result.deepIntersection(hits[k]);\n        }\n    \tlogger.debug(\"FOUND: \" + result.getLength());\n        return result;\n    }","id":4670,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem)\n            throws XPathException {\n\n        Sequence querySeq = getArgument(1).eval(contextSequence);\n        if (querySeq.isEmpty()) {\n            return Sequence.EMPTY_SEQUENCE;\n        }\n        String query = querySeq.itemAt(0).getStringValue();\n        \n        // Can return NPE\n        TextSearchEngine engine = context.getBroker().getTextEngine();\n        if(engine==null){\n            throw new XPathException(\"The legacy fulltext indexing has been disabled by \"\n                    + \"default from version 1.4.1. Please consider migrating to \"\n                    + \"the new full text indexing..\"); \n        }\n        \n        String[] terms = getSearchTerms(query);\n        NodeSet hits[] = new NodeSet[terms.length];\n        NodeSet contextSet = contextSequence.toNodeSet();\n        for (int k = 0; k < terms.length; k++) {\n            hits[k] =\n                    engine.getNodesContaining(\n                            context,\n                            contextSet.getDocumentSet(),\n                            null, NodeSet.DESCENDANT, null,\n                            terms[k],\n                            DBBroker.MATCH_EXACT);\n            hits[k] = getArgument(0).eval(hits[k]).toNodeSet();\n        }\n        \n        NodeSet result = hits[0];\n        for(int k = 1; k < hits.length; k++) {\n            if(hits[k] != null)\n                result = result.deepIntersection(hits[k]);\n        }\n    \tlogger.debug(\"FOUND: \" + result.getLength());\n        return result;\n    }","commit_id":"1ff2479df286442453f5684165529033ae7a0f8f","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence[] args, Sequence contextSequence)\n\t\tthrows XPathException {\n\t\tif(args[0].isEmpty())\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tDocumentSet docs;\n\t\tif(contextSequence instanceof NodeSet)\n\t\t\tdocs = contextSequence.getDocumentSet();\n\t\telse\n\t\t\tdocs = context.getStaticallyKnownDocuments();\n\t\tString term = args[0].getStringValue();\n\t\tString[] matches =\n\t\t\tcontext.getBroker().getTextEngine().getIndexTerms(docs, new FuzzyMatcher(term, 0.65));\n\t\tValueSequence result = new ValueSequence();\n\t\tfor(int i = 0; i < matches.length; i++)\n\t\t\tresult.add(new StringValue(matches[i]));\n\t\treturn result;\n\t}","id":4671,"modified_method":"public Sequence eval(Sequence[] args, Sequence contextSequence)\n\t\tthrows XPathException {\n\t\tif(args[0].isEmpty())\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tDocumentSet docs;\n\t\tif(contextSequence instanceof NodeSet)\n\t\t\tdocs = contextSequence.getDocumentSet();\n\t\telse\n\t\t\tdocs = context.getStaticallyKnownDocuments();\n\t\tString term = args[0].getStringValue();\n        \n        // Can return NPE\n        TextSearchEngine engine = context.getBroker().getTextEngine();\n        if(engine==null){\n            throw new XPathException(\"The legacy fulltext indexing has been disabled by \"\n                    + \"default from version 1.4.1. Please consider migrating to \"\n                    + \"the new full text indexing..\"); \n        }\n        \n\t\tString[] matches = engine.getIndexTerms(docs, new FuzzyMatcher(term, 0.65));\n\t\tValueSequence result = new ValueSequence();\n\t\tfor(int i = 0; i < matches.length; i++)\n\t\t\tresult.add(new StringValue(matches[i]));\n\t\treturn result;\n\t}","commit_id":"1ff2479df286442453f5684165529033ae7a0f8f","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence evalQuery(NodeSet nodes,\n\t\t\t\t\t\t\t\tList terms) throws XPathException {\n\t\tif (terms == null || terms.size() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE; // no search terms\n\t\tdouble threshold = 0.65;\n\t\tif (getArgumentCount() == 3) {\n\t\t\tSequence thresOpt = getArgument(2).eval(nodes);\n\t\t\t//TODO : get rid of getLength()\n\t\t\tif(!thresOpt.hasOne())\n\t\t\t\tthrow new XPathException(this, \"third argument to \" + getName() +\n\t\t\t\t\t\t\"should be a single double value\");\n\t\t\tthreshold = ((DoubleValue) thresOpt.convertTo(Type.DOUBLE)).getDouble();\n\t\t}\n\t\tNodeSet hits[] = new NodeSet[terms.size()];\n\t\tString term;\n\t\tTermMatcher matcher;\n\t\tfor (int k = 0; k < terms.size(); k++) {\n\t\t    term = (String)terms.get(k);\n\t\t\tif(term.length() == 0)\n\t\t\t\thits[k] = null;\n\t\t\telse {\n\t\t\t\tmatcher = new FuzzyMatcher(term, threshold);\n\t\t\t\thits[k] =\n\t\t\t\t\tcontext.getBroker().getTextEngine().getNodes(\n\t\t\t\t\t    context,\n\t\t\t\t\t\tnodes.getDocumentSet(),\n\t\t\t\t\t\tnodes, NodeSet.ANCESTOR, null,\n\t\t\t\t\t\tmatcher, term.substring(0, 1));\n\t\t\t}\n\t\t}\n\t\treturn mergeResults(hits);\n\t}","id":4672,"modified_method":"public Sequence evalQuery(NodeSet nodes,\n\t\t\t\t\t\t\t\tList terms) throws XPathException {\n\t\tif (terms == null || terms.size() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE; // no search terms\n\t\tdouble threshold = 0.65;\n\t\tif (getArgumentCount() == 3) {\n\t\t\tSequence thresOpt = getArgument(2).eval(nodes);\n\t\t\t//TODO : get rid of getLength()\n\t\t\tif(!thresOpt.hasOne())\n\t\t\t\tthrow new XPathException(this, \"third argument to \" + getName() +\n\t\t\t\t\t\t\"should be a single double value\");\n\t\t\tthreshold = ((DoubleValue) thresOpt.convertTo(Type.DOUBLE)).getDouble();\n\t\t}\n        \n        // Can return NPE\n        TextSearchEngine engine = context.getBroker().getTextEngine();\n        if(engine==null){\n            throw new XPathException(\"The legacy fulltext indexing has been disabled by \"\n                    + \"default from version 1.4.1. Please consider migrating to \"\n                    + \"the new full text indexing..\"); \n        }\n        \n\t\tNodeSet hits[] = new NodeSet[terms.size()];\n\t\tString term;\n\t\tTermMatcher matcher;\n\t\tfor (int k = 0; k < terms.size(); k++) {\n\t\t    term = (String)terms.get(k);\n\t\t\tif(term.length() == 0)\n\t\t\t\thits[k] = null;\n\t\t\telse {\n\t\t\t\tmatcher = new FuzzyMatcher(term, threshold);\n\t\t\t\thits[k] =\n\t\t\t\t\tengine.getNodes(\n\t\t\t\t\t    context,\n\t\t\t\t\t\tnodes.getDocumentSet(),\n\t\t\t\t\t\tnodes, NodeSet.ANCESTOR, null,\n\t\t\t\t\t\tmatcher, term.substring(0, 1));\n\t\t\t}\n\t\t}\n\t\treturn mergeResults(hits);\n\t}","commit_id":"1ff2479df286442453f5684165529033ae7a0f8f","url":"https://github.com/eXist-db/exist"},{"original_method":"protected NodeSet[] getMatches(DocumentSet docs, NodeSet contextSet, int axis, QName qname, List terms, boolean matchAll)\n    throws XPathException {\n        NodeSet hits[] = new NodeSet[terms.size()];\n        for (int k = 0; k < terms.size(); k++) {\n            hits[k] =\n                    context.getBroker().getTextEngine().getNodesContaining(\n                            context,\n                            docs,\n                            contextSet, axis,\n                            qname, (String) terms.get(k),\n                            DBBroker.MATCH_REGEXP, matchAll);\n            LOG.debug(\"Matches for \" + terms.get(k) + \": \" + hits[k].getLength());\n        }\n        return hits;\n    }","id":4673,"modified_method":"protected NodeSet[] getMatches(DocumentSet docs, NodeSet contextSet, int axis, QName qname, List terms, boolean matchAll)\n    throws XPathException {\n        \n        // Can return NPE\n        TextSearchEngine engine = context.getBroker().getTextEngine();\n        if(engine==null){\n            throw new XPathException(\"The legacy fulltext indexing has been disabled by \"\n                    + \"default from version 1.4.1. Please consider migrating to \"\n                    + \"the new full text indexing..\"); \n        }\n        \n        NodeSet hits[] = new NodeSet[terms.size()];\n        for (int k = 0; k < terms.size(); k++) {\n            hits[k] =\n                    engine.getNodesContaining(\n                            context,\n                            docs,\n                            contextSet, axis,\n                            qname, (String) terms.get(k),\n                            DBBroker.MATCH_REGEXP, matchAll);\n            LOG.debug(\"Matches for \" + terms.get(k) + \": \" + hits[k].getLength());\n        }\n        return hits;\n    }","commit_id":"1ff2479df286442453f5684165529033ae7a0f8f","url":"https://github.com/eXist-db/exist"},{"original_method":"public Occurrences[] scanIndexTerms(\n\t\tString start,\n\t\tString end,\n\t\tboolean inclusive)\n\t\tthrows XMLDBException {\n\t\tDBBroker broker = null;\n\t\ttry {\n\t\t\tbroker = pool.get(user);\n\t\t\tMutableDocumentSet docs = new DefaultDocumentSet();\n\t\t\tparent.getCollection().allDocs(broker, docs, inclusive, true);\n\t\t\treturn broker.getTextEngine().scanIndexTerms(docs, docs.docsToNodeSet(),  start, end);\n\t\t} catch (PermissionDeniedException e) {\n\t\t\tthrow new XMLDBException(ErrorCodes.PERMISSION_DENIED,\n\t\t\t\t\"permission denied\", e);\n\t\t} catch (EXistException e) {\n\t\t\tthrow new XMLDBException(\n\t\t\t\tErrorCodes.VENDOR_ERROR,\n\t\t\t\t\"database access error\",\n\t\t\t\te);\n\t\t} finally {\n\t\t\tpool.release(broker);\n\t\t}\n\t}","id":4674,"modified_method":"public Occurrences[] scanIndexTerms(\n\t\tString start,\n\t\tString end,\n\t\tboolean inclusive)\n\t\tthrows XMLDBException {\n\t\tDBBroker broker = null;\n\t\ttry {\n\t\t\tbroker = pool.get(user);\n\t\t\tMutableDocumentSet docs = new DefaultDocumentSet();\n\t\t\tparent.getCollection().allDocs(broker, docs, inclusive, true);\n            \n            TextSearchEngine engine = broker.getTextEngine();\n            if(engine==null){\n                throw new EXistException(\"The legacy fulltext indexing has been disabled \"\n                        + \"by default from version 1.4.1. Please consider migrating to the \"\n                        + \"new full text indexing.\");\n            }\n            \n\t\t\treturn engine.scanIndexTerms(docs, docs.docsToNodeSet(),  start, end);\n\t\t} catch (PermissionDeniedException e) {\n\t\t\tthrow new XMLDBException(ErrorCodes.PERMISSION_DENIED,\n\t\t\t\t\"permission denied\", e);\n\t\t} catch (EXistException e) {\n\t\t\tthrow new XMLDBException(\n\t\t\t\tErrorCodes.VENDOR_ERROR,\n\t\t\t\t\"database access error\",\n\t\t\t\te);\n\t\t} finally {\n\t\t\tpool.release(broker);\n\t\t}\n\t}","commit_id":"47f4ef61925fc16595f71369b3bfe1e9384e6119","url":"https://github.com/eXist-db/exist"},{"original_method":"protected NodeSet[] getMatches(DocumentSet docs, NodeSet contextSet, int axis, QName qname, List terms)\n    throws XPathException {\n        NodeSet hits[] = new NodeSet[terms.size()];\n        for (int k = 0; k < terms.size(); k++) {\n            hits[k] =\n                    context.getBroker().getTextEngine().getNodesContaining(\n                            context,\n                            docs,\n                            contextSet, axis,\n                            qname, (String) terms.get(k),\n                            DBBroker.MATCH_REGEXP);\n            LOG.debug(\"Matches for \" + terms.get(k) + \": \" + hits[k].getLength());\n        }\n        return hits;\n    }","id":4675,"modified_method":"protected NodeSet[] getMatches(DocumentSet docs, NodeSet contextSet, int axis, QName qname, List terms)\n    throws XPathException {\n        \n        TextSearchEngine engine = context.getBroker().getTextEngine();\n        if(engine==null){\n            throw new XPathException(\"The old fulltext engine has been disabled for \"\n                    + \"stability reasons. Please use the Lucene FT search instead.\"); \n        }\n        \n        NodeSet hits[] = new NodeSet[terms.size()];\n        for (int k = 0; k < terms.size(); k++) {\n            hits[k] =\n                    engine.getNodesContaining(\n                            context,\n                            docs,\n                            contextSet, axis,\n                            qname, (String) terms.get(k),\n                            DBBroker.MATCH_REGEXP);\n            LOG.debug(\"Matches for \" + terms.get(k) + \": \" + hits[k].getLength());\n        }\n        return hits;\n    }","commit_id":"e83944515de9fcfa5825cc5bf811c72859843117","url":"https://github.com/eXist-db/exist"},{"original_method":"@Test\n    public void reindex() {\n        DocumentSet docs = configureAndStore(COLLECTION_CONFIG1, XML, \"dropDocument.xml\");\n        DBBroker broker = null;\n        try {\n            broker = pool.get(org.exist.security.SecurityManager.SYSTEM_USER);\n            assertNotNull(broker);\n\n            broker.reindexCollection(TestConstants.TEST_COLLECTION_URI);\n\n            Occurrences[] occur = broker.getTextEngine().scanIndexTerms(docs, docs.docsToNodeSet(), \"o\", \"ox\");\n            printOccurrences(\"o, ox\", occur);\n            assertEquals(2, occur.length);\n            assertEquals(\"of\", occur[0].getTerm());\n            assertEquals(\"on\", occur[1].getTerm());\n\n            occur = checkIndex(docs, broker, null, \"power\", 1);\n            assertEquals(\"power\", occur[0].getTerm());\n\n            QName qn[] = { new QName(\"p\", \"\", \"\") };\n            checkIndex(docs, broker, qn, \"mixed\", 1);\n        } catch (Exception e) {\n            e.printStackTrace();\n            fail(e.getMessage());\n        } finally {\n            pool.release(broker);\n        }\n    }","id":4676,"modified_method":"@Test\n    public void reindex() {\n        DocumentSet docs = configureAndStore(COLLECTION_CONFIG1, XML, \"dropDocument.xml\");\n        DBBroker broker = null;\n        try {\n            broker = pool.get(org.exist.security.SecurityManager.SYSTEM_USER);\n            assertNotNull(broker);\n\n            broker.reindexCollection(TestConstants.TEST_COLLECTION_URI);\n\n            TextSearchEngine engine = broker.getTextEngine();\n            if(engine==null){\n                fail(\"The old FT index has been switched off by default\");\n            }\n            Occurrences[] occur = engine.scanIndexTerms(docs, docs.docsToNodeSet(), \"o\", \"ox\");\n            printOccurrences(\"o, ox\", occur);\n            assertEquals(2, occur.length);\n            assertEquals(\"of\", occur[0].getTerm());\n            assertEquals(\"on\", occur[1].getTerm());\n\n            occur = checkIndex(docs, broker, null, \"power\", 1);\n            assertEquals(\"power\", occur[0].getTerm());\n\n            QName qn[] = { new QName(\"p\", \"\", \"\") };\n            checkIndex(docs, broker, qn, \"mixed\", 1);\n        } catch (Exception e) {\n            e.printStackTrace();\n            fail(e.getMessage());\n        } finally {\n            pool.release(broker);\n        }\n    }","commit_id":"e83944515de9fcfa5825cc5bf811c72859843117","url":"https://github.com/eXist-db/exist"},{"original_method":"private Occurrences[] checkIndex(DocumentSet docs, DBBroker broker, QName[] qn, String term, int expected) throws PermissionDeniedException {\n        \n        TextSearchEngine engine = broker.getTextEngine();\n        assertNotNull(\"old FullText has been switched off by default\", engine);\n        \n        Occurrences[] occur;\n        if (qn == null)\n            occur = engine.scanIndexTerms(docs, docs.docsToNodeSet(), term, null);\n        else\n            occur = engine.scanIndexTerms(docs, docs.docsToNodeSet(), qn, term, null);\n        printOccurrences(term, occur);\n        assertEquals(expected, occur.length);\n        return occur;\n    }","id":4677,"modified_method":"private Occurrences[] checkIndex(DocumentSet docs, DBBroker broker, QName[] qn, String term, int expected) throws PermissionDeniedException {\n        \n        TextSearchEngine engine = broker.getTextEngine();\n        if(engine==null)\n            fail(\"old FullText has been switched off by default\");\n        \n        Occurrences[] occur;\n        if (qn == null)\n            occur = engine.scanIndexTerms(docs, docs.docsToNodeSet(), term, null);\n        else\n            occur = engine.scanIndexTerms(docs, docs.docsToNodeSet(), qn, term, null);\n        printOccurrences(term, occur);\n        assertEquals(expected, occur.length);\n        return occur;\n    }","commit_id":"e83944515de9fcfa5825cc5bf811c72859843117","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence[] args, Sequence contextSequence)\n        throws XPathException {\n        int arg = 0;\n        if (args[arg].isEmpty()) {\n            return Sequence.EMPTY_SEQUENCE;\n        }\n        NodeSet nodes = args[arg++].toNodeSet();\n        DocumentSet docs = nodes.getDocumentSet();\n        QName[] qnames = null;\n        if (args.length == 5) {\n            qnames = new QName[args[arg].getItemCount()];\n            int q = 0;\n            for (SequenceIterator i = args[arg].iterate(); i.hasNext(); q++) {\n                QNameValue qnv = (QNameValue) i.nextItem();\n                qnames[q] = qnv.getQName();\n            }\n            ++arg;\n        } else\n            qnames = getDefinedIndexes(context.getBroker(), docs);\n        String start = null;\n        if (!args[arg].isEmpty())\n            start = args[arg].getStringValue();\n        FunctionReference ref = (FunctionReference) args[++arg].itemAt(0);\n        int max = ((IntegerValue) args[++arg].itemAt(0)).getInt();\n        FunctionCall call = ref.getFunctionCall();\n        Sequence result = new ValueSequence();\n        try {\n            Occurrences occur[] = context.getBroker().getTextEngine().scanIndexTerms(docs, nodes, qnames, start, null);\n            if (args.length == 4) {\n                Occurrences occur2[] = context.getBroker().getTextEngine().scanIndexTerms(docs, nodes, start, null);\n                if (occur == null || occur.length == 0)\n                    occur = occur2;\n                else {\n                    Occurrences t[] = new Occurrences[occur.length + occur2.length];\n                    System.arraycopy(occur, 0, t, 0, occur.length);\n                    System.arraycopy(occur2, 0, t, occur.length, occur2.length);\n                    occur = t;\n                }\n            }\n            int len = (occur.length > max ? max : occur.length);\n            Sequence params[] = new Sequence[2];\n            ValueSequence data = new ValueSequence();\n\n            Vector list = new Vector(len);\n            for (int j = 0; j < len; j++) {\n                if (!list.contains(new Integer(occur[j].getOccurrences()))) {\n                    list.add(new Integer(occur[j].getOccurrences()));\n                }\n            }\n            Collections.sort(list);\n            Collections.reverse(list);\n            HashMap map = new HashMap(list.size() * 2);\n            for (int j = 0; j < list.size(); j++) {\n                map.put(list.get(j), new Integer(j + 1));\n            }\n\n            for (int j = 0; j < len; j++) {\n                params[0] = new StringValue(occur[j].getTerm().toString());\n                data.add(new IntegerValue(occur[j].getOccurrences(), Type.UNSIGNED_INT));\n                data.add(new IntegerValue(occur[j].getDocuments(), Type.UNSIGNED_INT));\n                data.add(new IntegerValue(j + 1, Type.UNSIGNED_INT));\n                data.add(new IntegerValue(((Integer) map.get(new Integer(occur[j].getOccurrences()))).intValue(), Type.UNSIGNED_INT));\n\n                params[1] = data;\n\n                result.addAll(call.evalFunction(contextSequence, null, params));\n                data.clear();\n            }\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Returning: \" + result.getItemCount());\n            return result;\n        } catch (PermissionDeniedException e) {\n            throw new XPathException(this, e.getMessage(), e);\n        }\n    }","id":4678,"modified_method":"public Sequence eval(Sequence[] args, Sequence contextSequence)\n        throws XPathException {\n        int arg = 0;\n        if (args[arg].isEmpty()) {\n            return Sequence.EMPTY_SEQUENCE;\n        }\n        NodeSet nodes = args[arg++].toNodeSet();\n        DocumentSet docs = nodes.getDocumentSet();\n        QName[] qnames = null;\n        if (args.length == 5) {\n            qnames = new QName[args[arg].getItemCount()];\n            int q = 0;\n            for (SequenceIterator i = args[arg].iterate(); i.hasNext(); q++) {\n                QNameValue qnv = (QNameValue) i.nextItem();\n                qnames[q] = qnv.getQName();\n            }\n            ++arg;\n        } else\n            qnames = getDefinedIndexes(context.getBroker(), docs);\n        String start = null;\n        if (!args[arg].isEmpty())\n            start = args[arg].getStringValue();\n        FunctionReference ref = (FunctionReference) args[++arg].itemAt(0);\n        int max = ((IntegerValue) args[++arg].itemAt(0)).getInt();\n        FunctionCall call = ref.getFunctionCall();\n        Sequence result = new ValueSequence();\n        try {\n            TextSearchEngine engine = context.getBroker().getTextEngine();\n            if(engine==null){\n                throw new XPathException(\"The old fulltext engine has been disabled for \"\n                        + \"stability reasons. Please use the Lucene FT search instead.\"); \n            }\n            Occurrences occur[] = engine.scanIndexTerms(docs, nodes, qnames, start, null);\n            if (args.length == 4) {\n                Occurrences occur2[] = context.getBroker().getTextEngine().scanIndexTerms(docs, nodes, start, null);\n                if (occur == null || occur.length == 0)\n                    occur = occur2;\n                else {\n                    Occurrences t[] = new Occurrences[occur.length + occur2.length];\n                    System.arraycopy(occur, 0, t, 0, occur.length);\n                    System.arraycopy(occur2, 0, t, occur.length, occur2.length);\n                    occur = t;\n                }\n            }\n            int len = (occur.length > max ? max : occur.length);\n            Sequence params[] = new Sequence[2];\n            ValueSequence data = new ValueSequence();\n\n            Vector list = new Vector(len);\n            for (int j = 0; j < len; j++) {\n                if (!list.contains(new Integer(occur[j].getOccurrences()))) {\n                    list.add(new Integer(occur[j].getOccurrences()));\n                }\n            }\n            Collections.sort(list);\n            Collections.reverse(list);\n            HashMap map = new HashMap(list.size() * 2);\n            for (int j = 0; j < list.size(); j++) {\n                map.put(list.get(j), new Integer(j + 1));\n            }\n\n            for (int j = 0; j < len; j++) {\n                params[0] = new StringValue(occur[j].getTerm().toString());\n                data.add(new IntegerValue(occur[j].getOccurrences(), Type.UNSIGNED_INT));\n                data.add(new IntegerValue(occur[j].getDocuments(), Type.UNSIGNED_INT));\n                data.add(new IntegerValue(j + 1, Type.UNSIGNED_INT));\n                data.add(new IntegerValue(((Integer) map.get(new Integer(occur[j].getOccurrences()))).intValue(), Type.UNSIGNED_INT));\n\n                params[1] = data;\n\n                result.addAll(call.evalFunction(contextSequence, null, params));\n                data.clear();\n            }\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Returning: \" + result.getItemCount());\n            return result;\n        } catch (PermissionDeniedException e) {\n            throw new XPathException(this, e.getMessage(), e);\n        }\n    }","commit_id":"e83944515de9fcfa5825cc5bf811c72859843117","url":"https://github.com/eXist-db/exist"},{"original_method":"protected static String timestampFormat() {\n\t\treturn ERXProperties.stringForKeyWithDefault(\"er.rest.timestampFormat\", \"%Y-%m-%dT%H:%M:%SZ\");\n\t}","id":4679,"modified_method":"protected static String timestampFormat(boolean spaces) {\n\t\tString dateFormat = ERXProperties.stringForKey(\"er.rest.timestampFormat\");\n\t\tif (dateFormat == null) {\n\t\t\tif (spaces) {\n\t\t\t\tdateFormat = ERXProperties.stringForKeyWithDefault(\"er.rest.timestampFormat.secondary\", \"%Y-%m-%d %H:%M:%S %Z\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdateFormat = ERXProperties.stringForKeyWithDefault(\"er.rest.timestampFormat.primary\", \"%Y-%m-%dT%H:%M:%SZ\");\n\t\t\t}\n\t\t}\n\t\treturn dateFormat;\n\t}","commit_id":"56bd717d1cfa971cfbf6382c9328c6bdd1907484","url":"https://github.com/wocommunity/wonder"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tpublic static Object coerceValueToTypeNamed(Object value, String valueTypeName, IERXRestDelegate delegate) {\n\t\tObject parsedValue;\n\t\tClass<?> valueType = _NSUtilities.classWithName(valueTypeName);\n\t\tif (ERXValueUtilities.isNull(value)) {\n\t\t\tparsedValue = null;\n\t\t}\n\t\telse if (valueType != null && String.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = String.valueOf(value);\n\t\t}\n\t\telse if (valueType != null && Boolean.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.BooleanValueWithDefault(value, null);\n\t\t}\n\t\telse if (valueType != null && Character.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = new Character(((String) value).charAt(0)); // MS: Presumes String\n\t\t}\n\t\telse if (valueType != null && Byte.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = Byte.valueOf((String) value); // MS: Presumes String\n\t\t}\n\t\telse if (valueType != null && BigDecimal.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.DoubleValueWithDefault(value, null);\n\t\t}\n\t\telse if (valueType != null && Integer.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.IntegerValueWithDefault(value, null);\n\t\t}\n\t\telse if (valueType != null && Short.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = Short.valueOf((String) value); // MS: Presumes String\n\t\t}\n\t\telse if (valueType != null && Long.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.LongValueWithDefault(value, null);\n\t\t}\n\t\telse if (valueType != null && Float.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.FloatValueWithDefault(value, null);\n\t\t}\n\t\telse if (valueType != null && Double.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.DoubleValueWithDefault(value, null);\n\t\t}\n\t\telse if (valueType != null && NSTimestamp.class.isAssignableFrom(valueType)) {\n\t\t\tif (value instanceof NSTimestamp) {\n\t\t\t\tparsedValue = value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString strValue = (String) value;\n\t\t\t\tNSTimestampFormatter formatter = null;\n\t\t\t\ttry {\n\t\t\t\t\tif (strValue.indexOf(' ') == -1) {\n\t\t\t\t\t\tformatter = new NSTimestampFormatter(ERXRestUtils.timestampFormat());\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tformatter = new NSTimestampFormatter();\n\t\t\t\t\t}\n\t\t\t\t\tparsedValue = formatter.parseObject(strValue);\n\t\t\t\t}\n\t\t\t\tcatch (Throwable t) {\n\t\t\t\t\tString msg = \"Failed to parse '\" + strValue + \"' as a timestamp\";\n\t\t\t\t\tif (formatter != null) {\n\t\t\t\t\t\tmsg += \" (example: \" + formatter.format(new NSTimestamp()) + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tmsg += \".\";\n\t\t\t\t\tthrow new IllegalArgumentException(msg);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (valueType != null && Date.class.isAssignableFrom(valueType)) {\n\t\t\tif (value instanceof NSTimestamp) {\n\t\t\t\tparsedValue = value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString strValue = (String) value;\n\t\t\t\tSimpleDateFormat formatter = null;\n\t\t\t\ttry {\n\t\t\t\t\tif (strValue.indexOf(' ') == -1) {\n\t\t\t\t\t\tformatter = new SimpleDateFormat(ERXRestUtils.dateFormat(false));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tformatter = new SimpleDateFormat(ERXRestUtils.dateFormat(true));\n\t\t\t\t\t}\n\t\t\t\t\tparsedValue = formatter.parseObject(strValue);\n\t\t\t\t}\n\t\t\t\tcatch (Throwable t) {\n\t\t\t\t\tString msg = \"Failed to parse '\" + strValue + \"' as a timestamp\";\n\t\t\t\t\tif (formatter != null) {\n\t\t\t\t\t\tmsg += \" (example: \" + formatter.format(new Date()) + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tmsg += \".\";\n\t\t\t\t\tthrow new IllegalArgumentException(msg);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (valueType != null && Enum.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.enumValueWithDefault(value, (Class<? extends Enum>) valueType, null);\n\t\t}\n\t\telse if (delegate != null) {\n\t\t\tEOClassDescription entity = ERXRestClassDescriptionFactory.classDescriptionForEntityName(valueTypeName);\n\t\t\tif (entity != null) {\n\t\t\t  parsedValue = delegate.objectOfEntityWithID(entity, value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new IllegalArgumentException(\"Unknown value type '\" + valueTypeName + \"'.\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthrow new IllegalArgumentException(\"Unable to parse the value '\" + value + \"' into a '\" + valueTypeName + \"'.\");\n\t\t}\n\t\treturn parsedValue;\n\t}","id":4680,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tpublic static Object coerceValueToTypeNamed(Object value, String valueTypeName, IERXRestDelegate delegate) {\n\t\tObject parsedValue;\n\t\tClass<?> valueType = _NSUtilities.classWithName(valueTypeName);\n\t\tif (ERXValueUtilities.isNull(value)) {\n\t\t\tparsedValue = null;\n\t\t}\n\t\telse if (valueType != null && String.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = String.valueOf(value);\n\t\t}\n\t\telse if (valueType != null && Boolean.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.BooleanValueWithDefault(value, null);\n\t\t}\n\t\telse if (valueType != null && Character.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = new Character(((String) value).charAt(0)); // MS: Presumes String\n\t\t}\n\t\telse if (valueType != null && Byte.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = Byte.valueOf((String) value); // MS: Presumes String\n\t\t}\n\t\telse if (valueType != null && BigDecimal.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.DoubleValueWithDefault(value, null);\n\t\t}\n\t\telse if (valueType != null && Integer.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.IntegerValueWithDefault(value, null);\n\t\t}\n\t\telse if (valueType != null && Short.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = Short.valueOf((String) value); // MS: Presumes String\n\t\t}\n\t\telse if (valueType != null && Long.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.LongValueWithDefault(value, null);\n\t\t}\n\t\telse if (valueType != null && Float.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.FloatValueWithDefault(value, null);\n\t\t}\n\t\telse if (valueType != null && Double.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.DoubleValueWithDefault(value, null);\n\t\t}\n\t\telse if (valueType != null && NSTimestamp.class.isAssignableFrom(valueType)) {\n\t\t\tif (value instanceof NSTimestamp) {\n\t\t\t\tparsedValue = value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString strValue = (String) value;\n\t\t\t\tNSTimestampFormatter formatter = null;\n\t\t\t\ttry {\n\t\t\t\t\tboolean spaces = strValue.indexOf(' ') != -1;\n\t\t\t\t\tformatter = new NSTimestampFormatter(ERXRestUtils.timestampFormat(spaces));\n\t\t\t\t\tparsedValue = formatter.parseObject(strValue);\n\t\t\t\t}\n\t\t\t\tcatch (Throwable t) {\n\t\t\t\t\tString msg = \"Failed to parse '\" + strValue + \"' as a timestamp\";\n\t\t\t\t\tif (formatter != null) {\n\t\t\t\t\t\tmsg += \" (example: \" + formatter.format(new NSTimestamp()) + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tmsg += \".\";\n\t\t\t\t\tthrow new IllegalArgumentException(msg, t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (valueType != null && Date.class.isAssignableFrom(valueType)) {\n\t\t\tif (value instanceof NSTimestamp) {\n\t\t\t\tparsedValue = value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString strValue = (String) value;\n\t\t\t\tSimpleDateFormat formatter = null;\n\t\t\t\ttry {\n\t\t\t\t\tboolean spaces = strValue.indexOf(' ') != -1;\n\t\t\t\t\tformatter = new SimpleDateFormat(ERXRestUtils.dateFormat(spaces));\n\t\t\t\t\tparsedValue = formatter.parseObject(strValue);\n\t\t\t\t}\n\t\t\t\tcatch (Throwable t) {\n\t\t\t\t\tString msg = \"Failed to parse '\" + strValue + \"' as a timestamp\";\n\t\t\t\t\tif (formatter != null) {\n\t\t\t\t\t\tmsg += \" (example: \" + formatter.format(new Date()) + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tmsg += \".\";\n\t\t\t\t\tthrow new IllegalArgumentException(msg, t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (valueType != null && Enum.class.isAssignableFrom(valueType)) {\n\t\t\tparsedValue = ERXValueUtilities.enumValueWithDefault(value, (Class<? extends Enum>) valueType, null);\n\t\t}\n\t\telse if (delegate != null) {\n\t\t\tEOClassDescription entity = ERXRestClassDescriptionFactory.classDescriptionForEntityName(valueTypeName);\n\t\t\tif (entity != null) {\n\t\t\t  parsedValue = delegate.objectOfEntityWithID(entity, value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new IllegalArgumentException(\"Unknown value type '\" + valueTypeName + \"'.\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthrow new IllegalArgumentException(\"Unable to parse the value '\" + value + \"' into a '\" + valueTypeName + \"'.\");\n\t\t}\n\t\treturn parsedValue;\n\t}","commit_id":"56bd717d1cfa971cfbf6382c9328c6bdd1907484","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Convert the given object to a String (using REST formats).\n\t * \n\t * @param value the value to convert\n\t * @return the REST-formatted string\n\t */\n\tpublic static String coerceValueToString(Object value) {\n\t\tString formattedValue;\n\t\tif (value == null) {\n\t\t\tformattedValue = null;\n\t\t}\n\t\telse if (value instanceof NSTimestamp) {\n\t\t\tNSTimestamp timestamp = (NSTimestamp) value;\n\t\t\tformattedValue = new NSTimestampFormatter(ERXRestUtils.timestampFormat()).format(timestamp);\n\t\t}\n\t\telse if (value instanceof Date) {\n\t\t\tDate date = (Date) value;\n\t\t\tformattedValue = new SimpleDateFormat(ERXRestUtils.dateFormat(false)).format(value);\n\t\t}\n\t\telse {\n\t\t\tformattedValue = value.toString();\n\t\t}\n\t\treturn formattedValue;\n\n\t}","id":4681,"modified_method":"/**\n\t * Convert the given object to a String (using REST formats).\n\t * \n\t * @param value the value to convert\n\t * @return the REST-formatted string\n\t */\n\tpublic static String coerceValueToString(Object value) {\n\t\tString formattedValue;\n\t\tif (value == null) {\n\t\t\tformattedValue = null;\n\t\t}\n\t\telse if (value instanceof NSTimestamp) {\n\t\t\tNSTimestamp timestamp = (NSTimestamp) value;\n\t\t\tformattedValue = new NSTimestampFormatter(ERXRestUtils.timestampFormat(false)).format(timestamp);\n\t\t}\n\t\telse if (value instanceof Date) {\n\t\t\tDate date = (Date) value;\n\t\t\tformattedValue = new SimpleDateFormat(ERXRestUtils.dateFormat(false)).format(value);\n\t\t}\n\t\telse {\n\t\t\tformattedValue = value.toString();\n\t\t}\n\t\treturn formattedValue;\n\n\t}","commit_id":"56bd717d1cfa971cfbf6382c9328c6bdd1907484","url":"https://github.com/wocommunity/wonder"},{"original_method":"protected static String dateFormat(boolean spaces) {\n\t\tif (spaces) {\n\t\t\treturn ERXProperties.stringForKeyWithDefault(\"er.rest.dateFormat\", \"YYYY-MM-dd HH:mm:ss z\");\n\t\t}\n\t\telse {\n\t\t\treturn ERXProperties.stringForKeyWithDefault(\"er.rest.dateFormat\", \"YYYY-MM-dd\\\\THH:mm:ss\\\\Z\");\n\t\t}\n\t}","id":4682,"modified_method":"protected static String dateFormat(boolean spaces) {\n\t\tString timestampFormat = ERXProperties.stringForKey(\"er.rest.dateFormat\");\n\t\tif (timestampFormat == null) {\n\t\t\tif (spaces) {\n\t\t\t\ttimestampFormat = ERXProperties.stringForKeyWithDefault(\"er.rest.dateFormat.secondary\", \"YYYY-MM-dd HH:mm:ss z\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttimestampFormat = ERXProperties.stringForKeyWithDefault(\"er.rest.dateFormat.primary\", \"YYYY-MM-dd\\\\THH:mm:ss\\\\Z\");\n\t\t\t}\n\t\t}\n\t\treturn timestampFormat;\n\t}","commit_id":"56bd717d1cfa971cfbf6382c9328c6bdd1907484","url":"https://github.com/wocommunity/wonder"},{"original_method":"/** Complete the request. Note that if the request was forked (which unfortunately is\n\t * possible because of timeouts awaiting Accepted/Rejected), it is *possible* that \n\t * there are other forks still running; UIDTag will wait for them. Hence a fork that \n\t * fails should NOT call this method, however a fork that succeeds SHOULD call it. \n\t * @param code The completion code.\n\t * @param next The node being routed to.\n\t * @param fromOfferedKey Whether this was the result of fetching an offered key.\n\t */\n    private void finish(int code, PeerNode next, boolean fromOfferedKey) {\n    \tif(logMINOR) Logger.minor(this, \"finish(\"+code+ \") on \"+this+\" from \"+next);\n        \n    \tboolean doOpennet;\n    \t\n        synchronized(this) {\n        \tif(status != NOT_FINISHED) {\n        \t\tif(logMINOR) Logger.minor(this, \"Status already set to \"+status+\" - returning on \"+this+\" would be setting \"+code+\" from \"+next);\n            \tif(next != null) {\n            \t\tif(fromOfferedKey)\n            \t\t\tnext.noLongerRoutingTo(origTag, true);\n            \t\telse\n            \t\t\tnext.noLongerRoutingTo(origTag, false);\n            \t}\n        \t\treturn;\n        \t}\n            doOpennet = code == SUCCESS && !(fromOfferedKey || isSSK);\n       \t\tif(doOpennet)\n       \t\t\torigTag.waitingForOpennet(next);\n       \t\telse if(next != null) {\n        \t\tif(fromOfferedKey)\n        \t\t\tnext.noLongerRoutingTo(origTag, true);\n        \t\telse\n        \t\t\tnext.noLongerRoutingTo(origTag, false);\n       \t\t}\n            status = code;\n            if(status == SUCCESS)\n            \tsuccessFrom = next;\n            notifyAll();\n        }\n        \n        if(status == SUCCESS) {\n        \tif((!isSSK) && transferTime > 0 && logMINOR) {\n        \t\tlong timeTaken = System.currentTimeMillis() - startTime;\n        \t\tsynchronized(avgTimeTaken) {\n       \t\t\t\tavgTimeTaken.report(timeTaken);\n           \t\t\tavgTimeTakenTransfer.report(transferTime);\n       \t\t\t\tif(logMINOR) Logger.minor(this, \"Successful CHK request took \"+timeTaken+\" average \"+avgTimeTaken);\n           \t\t\tif(logMINOR) Logger.minor(this, \"Successful CHK request transfer \"+transferTime+\" average \"+avgTimeTakenTransfer);\n           \t\t\tif(logMINOR) Logger.minor(this, \"Search phase: median \"+(avgTimeTaken.currentValue() - avgTimeTakenTransfer.currentValue())+\"ms, mean \"+(avgTimeTaken.meanValue() - avgTimeTakenTransfer.meanValue())+\"ms\");\n        \t\t}\n        \t}\n        \tif(next != null) {\n        \t\tnext.onSuccess(false, isSSK);\n        \t}\n        \t// FIXME should this be called when fromOfferedKey??\n       \t\tnode.nodeStats.requestCompleted(true, source != null, isSSK);\n        \t\n       \t\ttry {\n       \t\t\t\n       \t\t\t//NOTE: because of the requesthandler implementation, this will block and wait\n       \t\t\t//      for downstream transfers on a CHK. The opennet stuff introduces\n       \t\t\t//      a delay of it's own if we don't get the expected message.\n       \t\t\tfireRequestSenderFinished(code);\n       \t\t\t\n       \t\t\tif(doOpennet) {\n       \t\t\t\tfinishOpennet(next);\n       \t\t\t}\n       \t\t} finally {\n       \t\t\tif(doOpennet)\n       \t\t\t\torigTag.finishedWaitingForOpennet(next);\n       \t\t}\n        } else {\n        \tnode.nodeStats.requestCompleted(false, source != null, isSSK);\n\t\t\tfireRequestSenderFinished(code);\n\t\t}\n        \n    \tif(doOpennet && next != null) {\n    \t\tif(fromOfferedKey)\n    \t\t\tnext.noLongerRoutingTo(origTag, true);\n    \t\telse\n    \t\t\tnext.noLongerRoutingTo(origTag, false);\n    \t}\n\t\t\n\t\tsynchronized(this) {\n\t\t\topennetFinished = true;\n\t\t\tnotifyAll();\n\t\t}\n\t\t\n    }","id":4683,"modified_method":"/** Complete the request. Note that if the request was forked (which unfortunately is\n\t * possible because of timeouts awaiting Accepted/Rejected), it is *possible* that \n\t * there are other forks still running; UIDTag will wait for them. Hence a fork that \n\t * fails should NOT call this method, however a fork that succeeds SHOULD call it. \n\t * @param code The completion code.\n\t * @param next The node being routed to.\n\t * @param fromOfferedKey Whether this was the result of fetching an offered key.\n\t */\n    private void finish(int code, PeerNode next, boolean fromOfferedKey) {\n    \tif(logMINOR) Logger.minor(this, \"finish(\"+code+ \") on \"+this+\" from \"+next);\n        \n    \tboolean doOpennet;\n    \t\n        synchronized(this) {\n        \tif(status != NOT_FINISHED) {\n        \t\tif(logMINOR) Logger.minor(this, \"Status already set to \"+status+\" - returning on \"+this+\" would be setting \"+code+\" from \"+next);\n            \tif(next != null) next.noLongerRoutingTo(origTag, fromOfferedKey);\n        \t\treturn;\n        \t}\n            doOpennet = code == SUCCESS && !(fromOfferedKey || isSSK);\n       \t\tif(doOpennet)\n       \t\t\torigTag.waitingForOpennet(next);\n       \t\telse if(next != null) next.noLongerRoutingTo(origTag, fromOfferedKey);\n            status = code;\n            if(status == SUCCESS)\n            \tsuccessFrom = next;\n            notifyAll();\n        }\n        \n        if(status == SUCCESS) {\n        \tif((!isSSK) && transferTime > 0 && logMINOR) {\n        \t\tlong timeTaken = System.currentTimeMillis() - startTime;\n        \t\tsynchronized(avgTimeTaken) {\n       \t\t\t\tavgTimeTaken.report(timeTaken);\n           \t\t\tavgTimeTakenTransfer.report(transferTime);\n       \t\t\t\tif(logMINOR) Logger.minor(this, \"Successful CHK request took \"+timeTaken+\" average \"+avgTimeTaken);\n           \t\t\tif(logMINOR) Logger.minor(this, \"Successful CHK request transfer \"+transferTime+\" average \"+avgTimeTakenTransfer);\n           \t\t\tif(logMINOR) Logger.minor(this, \"Search phase: median \"+(avgTimeTaken.currentValue() - avgTimeTakenTransfer.currentValue())+\"ms, mean \"+(avgTimeTaken.meanValue() - avgTimeTakenTransfer.meanValue())+\"ms\");\n        \t\t}\n        \t}\n        \tif(next != null) {\n        \t\tnext.onSuccess(false, isSSK);\n        \t}\n        \t// FIXME should this be called when fromOfferedKey??\n       \t\tnode.nodeStats.requestCompleted(true, source != null, isSSK);\n        \t\n       \t\ttry {\n       \t\t\t\n       \t\t\t//NOTE: because of the requesthandler implementation, this will block and wait\n       \t\t\t//      for downstream transfers on a CHK. The opennet stuff introduces\n       \t\t\t//      a delay of it's own if we don't get the expected message.\n       \t\t\tfireRequestSenderFinished(code);\n       \t\t\t\n       \t\t\tif(doOpennet) {\n       \t\t\t\tfinishOpennet(next);\n       \t\t\t}\n       \t\t} finally {\n       \t\t\tif(doOpennet)\n       \t\t\t\torigTag.finishedWaitingForOpennet(next);\n       \t\t}\n        } else {\n        \tnode.nodeStats.requestCompleted(false, source != null, isSSK);\n\t\t\tfireRequestSenderFinished(code);\n\t\t}\n        \n    \tif(doOpennet && next != null) next.noLongerRoutingTo(origTag, fromOfferedKey);\n\t\t\n\t\tsynchronized(this) {\n\t\t\topennetFinished = true;\n\t\t\tnotifyAll();\n\t\t}\n\t\t\n    }","commit_id":"735807c7067edc4713428104833afce69cf0244d","url":"https://github.com/freenet/fred"},{"original_method":"protected void calculateActions(Game game) {\n\t\tcurrentScore = GameStateEvaluator.evaluate(playerId, game);\n\t\tif (!getNextAction(game)) {\n\t\t\tGame sim = createSimulation(game);\n\t\t\tSimulationNode.resetCount();\n\t\t\troot = new SimulationNode(null, sim, playerId);\n\t\t\tlogger.debug(\"simulating actions\");\n\t\t\taddActionsTimed(new FilterAbility());\n\t\t\tif (root.children.size() > 0) {\n\t\t\t\troot = root.children.get(0);\n\t\t\t\tactions = new LinkedList<Ability>(root.abilities);\n\t\t\t\tcombat = root.combat;\n\t\t\t\tif (logger.isDebugEnabled())\n\t\t\t\t\tlogger.debug(\"adding actions:\" + actions);\n\t\t\t}\n\t\t\telse\n\t\t\t\tlogger.debug(\"no actions added\");\n\t\t}\n\t}","id":4684,"modified_method":"protected void calculateActions(Game game) {\n\t\tcurrentScore = GameStateEvaluator.evaluate(playerId, game);\n\t\tif (!getNextAction(game)) {\n\t\t\tGame sim = createSimulation(game);\n\t\t\tSimulationNode.resetCount();\n\t\t\troot = new SimulationNode(null, sim, playerId);\n\t\t\tlogger.debug(\"simulating actions\");\n\t\t\tif (!isTestMode)\n\t\t\t\taddActionsTimed(new FilterAbility());\n\t\t\telse\n\t\t\t\taddActions(root, new FilterAbility(), Integer.MIN_VALUE, Integer.MAX_VALUE);\n\t\t\tif (root.children.size() > 0) {\n\t\t\t\troot = root.children.get(0);\n\t\t\t\tactions = new LinkedList<Ability>(root.abilities);\n\t\t\t\tcombat = root.combat;\n\t\t\t\tif (logger.isDebugEnabled())\n\t\t\t\t\tlogger.debug(\"adding actions:\" + actions);\n\t\t\t}\n\t\t\telse\n\t\t\t\tlogger.debug(\"no actions added\");\n\t\t}\n\t}","commit_id":"0668548f4fbca4bd91a663af7a1cd82b495174aa","url":"https://github.com/magefree/mage"},{"original_method":"protected int simulatePriority(SimulationNode node, Game game, FilterAbility filter, int alpha, int beta) {\n\t\tif (Thread.interrupted()) {\n\t\t\tThread.currentThread().interrupt();\n\t\t\tlogger.debug(indent(node.depth) + \"interrupted\");\n\t\t\treturn GameStateEvaluator.evaluate(playerId, game);\n\t\t}\n\t\tnode.setGameValue(game.getState().getValue());\n\t\tSimulatedPlayer currentPlayer = (SimulatedPlayer) game.getPlayer(game.getPlayerList().get());\n\t\tboolean isSimulatedPlayer = currentPlayer.getId().equals(playerId);\n\t\tlogger.debug(indent(node.depth) + \"simulating -- player \" + currentPlayer.getName());\n\t\tSimulationNode bestNode = null;\n\t\tList<Ability> allActions = currentPlayer.simulatePriority(game, filter);\n\t\tif (logger.isDebugEnabled())\n\t\t\tlogger.debug(indent(node.depth) + \"simulating -- adding \" + allActions.size() + \" children:\" + allActions);\n\t\tfor (Ability action: allActions) {\n\t\t\tif (Thread.interrupted()) {\n\t\t\t\tThread.currentThread().interrupt();\n\t\t\t\tlogger.debug(indent(node.depth) + \"interrupted\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tGame sim = game.copy();\n\t\t\tif (sim.getPlayer(currentPlayer.getId()).activateAbility((ActivatedAbility) action.copy(), sim)) {\n\t\t\t\tsim.applyEffects();\n\t\t\t\tif (checkForUselessAction(sim, node, action, currentPlayer.getId())) {\n\t\t\t\t\tlogger.debug(indent(node.depth) + \"found useless action: \" + action);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!sim.isGameOver() && action.isUsesStack()) {\n\t\t\t\t\t// only pass if the last action uses the stack\n\t\t\t\t\tsim.getPlayer(currentPlayer.getId()).pass();\n\t\t\t\t\tsim.getPlayerList().getNext();\n\t\t\t\t}\n\t\t\t\tSimulationNode newNode = new SimulationNode(node, sim, action, currentPlayer.getId());\n\t\t\t\tif (logger.isDebugEnabled())\n\t\t\t\t\tlogger.debug(indent(node.depth) + \"simulating -- node #:\" + SimulationNode.getCount() + \" actions:\" + action);\n\t\t\t\tsim.checkStateAndTriggered();\n\t\t\t\tint val = addActions(newNode, filter, alpha, beta);\n\t\t\t\tif (!isSimulatedPlayer) {\n\t\t\t\t\tif (val < beta) {\n\t\t\t\t\t\tbeta = val;\n\t\t\t\t\t\tbestNode = newNode;\n\t\t\t\t\t\tnode.setCombat(newNode.getCombat());\n\t\t\t\t\t}\n\t\t\t\t\tif (val == GameStateEvaluator.LOSE_SCORE) {\n\t\t\t\t\t\tlogger.debug(indent(node.depth) + \"simulating -- lose, can't do worse than this\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (val > alpha) {\n\t\t\t\t\t\talpha = val;\n\t\t\t\t\t\tbestNode = newNode;\n\t\t\t\t\t\tnode.setCombat(newNode.getCombat());\n\t\t\t\t\t\tif (node.getTargets().size() > 0)\n\t\t\t\t\t\t\ttargets = node.getTargets();\n\t\t\t\t\t\tif (node.getChoices().size() > 0)\n\t\t\t\t\t\t\tchoices = node.getChoices();\n\t\t\t\t\t}\n\t\t\t\t\tif (val == GameStateEvaluator.WIN_SCORE) {\n\t\t\t\t\t\tlogger.debug(indent(node.depth) + \"simulating -- win, can't do better than this\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (alpha >= beta) {\n\t\t\t\t\tlogger.debug(indent(node.depth) + \"simulating -- pruning\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n//\t\t\t\tif (SimulationNode.nodeCount > maxNodes) {\n//\t\t\t\t\tlogger.debug(indent(node.depth) + \"simulating -- reached end-state\");\n//\t\t\t\t\tbreak;\n//\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (bestNode != null) {\n\t\t\tnode.children.clear();\n\t\t\tnode.children.add(bestNode);\n\t\t}\n\t\tif (!isSimulatedPlayer) {\n\t\t\tlogger.debug(indent(node.depth) + \"returning priority beta: \" + beta);\n\t\t\treturn beta;\n\t\t}\n\t\telse {\n\t\t\tlogger.debug(indent(node.depth) + \"returning priority alpha: \" + alpha);\n\t\t\treturn alpha;\n\t\t}\n\t}","id":4685,"modified_method":"protected int simulatePriority(SimulationNode node, Game game, FilterAbility filter, int alpha, int beta) {\n\t\tif (Thread.interrupted()) {\n\t\t\tThread.currentThread().interrupt();\n\t\t\tlogger.debug(indent(node.depth) + \"interrupted\");\n\t\t\treturn GameStateEvaluator.evaluate(playerId, game);\n\t\t}\n\t\tnode.setGameValue(game.getState().getValue());\n\t\tSimulatedPlayer currentPlayer = (SimulatedPlayer) game.getPlayer(game.getPlayerList().get());\n\t\tboolean isSimulatedPlayer = currentPlayer.getId().equals(playerId);\n\t\tlogger.debug(indent(node.depth) + \"simulating priority -- player \" + currentPlayer.getName());\n\t\tSimulationNode bestNode = null;\n\t\tList<Ability> allActions = currentPlayer.simulatePriority(game, filter);\n\t\tif (logger.isDebugEnabled())\n\t\t\tlogger.debug(indent(node.depth) + \"simulating -- adding \" + allActions.size() + \" children:\" + allActions);\n\t\tfor (Ability action: allActions) {\n\t\t\tif (Thread.interrupted()) {\n\t\t\t\tThread.currentThread().interrupt();\n\t\t\t\tlogger.debug(indent(node.depth) + \"interrupted\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tGame sim = game.copy();\n\t\t\tif (sim.getPlayer(currentPlayer.getId()).activateAbility((ActivatedAbility) action.copy(), sim)) {\n\t\t\t\tsim.applyEffects();\n\t\t\t\tif (checkForUselessAction(sim, node, action, currentPlayer.getId())) {\n\t\t\t\t\tlogger.debug(indent(node.depth) + \"found useless action: \" + action);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!sim.isGameOver() && action.isUsesStack()) {\n\t\t\t\t\t// only pass if the last action uses the stack\n\t\t\t\t\tsim.getPlayer(currentPlayer.getId()).pass();\n\t\t\t\t\tsim.getPlayerList().getNext();\n\t\t\t\t}\n\t\t\t\tSimulationNode newNode = new SimulationNode(node, sim, action, currentPlayer.getId());\n\t\t\t\tif (logger.isDebugEnabled())\n\t\t\t\t\tlogger.debug(indent(newNode.depth) + \"simulating -- node #:\" + SimulationNode.getCount() + \" actions:\" + action);\n\t\t\t\tsim.checkStateAndTriggered();\n\t\t\t\tint val = addActions(newNode, filter, alpha, beta);\n\t\t\t\tif (!isSimulatedPlayer) {\n\t\t\t\t\tif (val < beta) {\n\t\t\t\t\t\tbeta = val;\n\t\t\t\t\t\tbestNode = newNode;\n\t\t\t\t\t\tnode.setCombat(newNode.getCombat());\n\t\t\t\t\t}\n\t\t\t\t\tif (val == GameStateEvaluator.LOSE_SCORE) {\n\t\t\t\t\t\tlogger.debug(indent(node.depth) + \"simulating -- lose, can't do worse than this\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (val > alpha) {\n\t\t\t\t\t\talpha = val;\n\t\t\t\t\t\tbestNode = newNode;\n\t\t\t\t\t\tnode.setCombat(newNode.getCombat());\n\t\t\t\t\t\tif (node.getTargets().size() > 0)\n\t\t\t\t\t\t\ttargets = node.getTargets();\n\t\t\t\t\t\tif (node.getChoices().size() > 0)\n\t\t\t\t\t\t\tchoices = node.getChoices();\n\t\t\t\t\t}\n\t\t\t\t\tif (val == GameStateEvaluator.WIN_SCORE) {\n\t\t\t\t\t\tlogger.debug(indent(node.depth) + \"simulating -- win, can't do better than this\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (alpha >= beta) {\n\t\t\t\t\tlogger.debug(indent(node.depth) + \"simulating -- pruning\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n//\t\t\t\tif (SimulationNode.nodeCount > maxNodes) {\n//\t\t\t\t\tlogger.debug(indent(node.depth) + \"simulating -- reached end-state\");\n//\t\t\t\t\tbreak;\n//\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (bestNode != null) {\n\t\t\tnode.children.clear();\n\t\t\tnode.children.add(bestNode);\n\t\t}\n\t\tif (!isSimulatedPlayer) {\n\t\t\tlogger.debug(indent(node.depth) + \"returning priority beta: \" + beta);\n\t\t\treturn beta;\n\t\t}\n\t\telse {\n\t\t\tlogger.debug(indent(node.depth) + \"returning priority alpha: \" + alpha);\n\t\t\treturn alpha;\n\t\t}\n\t}","commit_id":"0668548f4fbca4bd91a663af7a1cd82b495174aa","url":"https://github.com/magefree/mage"},{"original_method":"protected void calculatePostCombatActions(Game game) {\n\t\tif (!getNextAction(game)) {\n\t\t\tcurrentScore = GameStateEvaluator.evaluate(playerId, game);\n\t\t\tGame sim = createSimulation(game);\n\t\t\tSimulationNode.resetCount();\n\t\t\troot = new SimulationNode(null, sim, playerId);\n\t\t\tlogger.debug(\"simulating post combat actions ----------------------------------------------------------------------------------------\");\n\t\t\taddActionsTimed(new FilterAbility());\n//\t\t\taddActions(root, new FilterAbility(), maxDepth, Integer.MIN_VALUE, Integer.MAX_VALUE);\n\t\t\tif (root.children.size() > 0) {\n\t\t\t\troot = root.children.get(0);\n\t\t\t\tactions = new LinkedList<Ability>(root.abilities);\n\t\t\t\tcombat = root.combat;\n\t\t\t\tif (logger.isDebugEnabled())\n\t\t\t\t\tlogger.debug(\"adding post-combat actions:\" + actions);\n\t\t\t}\n\t\t\telse\n\t\t\t\tlogger.debug(\"no post-combat actions added\");\n\t\t}\n\t}","id":4686,"modified_method":"protected void calculatePostCombatActions(Game game) {\n\t\tif (!getNextAction(game)) {\n\t\t\tcurrentScore = GameStateEvaluator.evaluate(playerId, game);\n\t\t\tGame sim = createSimulation(game);\n\t\t\tSimulationNode.resetCount();\n\t\t\troot = new SimulationNode(null, sim, playerId);\n\t\t\tlogger.debug(\"simulating post combat actions ----------------------------------------------------------------------------------------\");\n\t\t\tif (!isTestMode)\n\t\t\t\taddActionsTimed(new FilterAbility());\n\t\t\telse\n\t\t\t\taddActions(root, new FilterAbility(), Integer.MIN_VALUE, Integer.MAX_VALUE);\n\t\t\tif (root.children.size() > 0) {\n\t\t\t\troot = root.children.get(0);\n\t\t\t\tactions = new LinkedList<Ability>(root.abilities);\n\t\t\t\tcombat = root.combat;\n\t\t\t\tif (logger.isDebugEnabled())\n\t\t\t\t\tlogger.debug(\"adding post-combat actions:\" + actions);\n\t\t\t}\n\t\t\telse\n\t\t\t\tlogger.debug(\"no post-combat actions added\");\n\t\t}\n\t}","commit_id":"0668548f4fbca4bd91a663af7a1cd82b495174aa","url":"https://github.com/magefree/mage"},{"original_method":"protected int simulateAttackers(Game game, SimulationNode node, UUID attackerId, int alpha, int beta, boolean counter) {\n\t\tif (Thread.interrupted()) {\n\t\t\tThread.currentThread().interrupt();\n\t\t\tlogger.debug(indent(node.depth) + \"interrupted\");\n\t\t\treturn GameStateEvaluator.evaluate(playerId, game);\n\t\t}\n\t\tInteger val = null;\n\t\tSimulationNode bestNode = null;\n\t\tSimulatedPlayer attacker = (SimulatedPlayer) game.getPlayer(attackerId);\n\n\t\tif (logger.isDebugEnabled())\n\t\t\tlogger.debug(indent(node.depth) + attacker.getName() + \"'s possible attackers: \" + attacker.getAvailableAttackers(game));\n\t\tfor (Combat engagement: attacker.addAttackers(game)) {\n\t\t\tif (alpha >= beta) {\n\t\t\t\tlogger.debug(indent(node.depth) + \"simulating -- pruning attackers\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tGame sim = game.copy();\n\t\t\tUUID defenderId = game.getOpponents(attackerId).iterator().next();\n\t\t\tfor (CombatGroup group: engagement.getGroups()) {\n\t\t\t\tfor (UUID attackId: group.getAttackers()) {\n\t\t\t\t\tsim.getPlayer(attackerId).declareAttacker(attackId, defenderId, sim);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsim.fireEvent(GameEvent.getEvent(GameEvent.EventType.DECLARED_ATTACKERS, attackerId, attackerId));\n\t\t\tSimulationNode newNode = new SimulationNode(node, sim, attackerId);\n\t\t\tif (logger.isDebugEnabled())\n\t\t\t\tlogger.debug(indent(node.depth) + \"simulating attack for player:\" + game.getPlayer(attackerId).getName());\n\t\t\tsim.checkStateAndTriggered();\n\t\t\twhile (!sim.getStack().isEmpty()) {\n\t\t\t\tsim.getStack().resolve(sim);\n\t\t\t\tlogger.debug(indent(node.depth) + \"resolving triggered abilities\");\n\t\t\t\tsim.applyEffects();\n\t\t\t}\n\t\t\tsim.fireEvent(GameEvent.getEvent(GameEvent.EventType.DECLARE_ATTACKERS_STEP_POST, sim.getActivePlayerId(), sim.getActivePlayerId()));\n\t\t\tCombat simCombat = sim.getCombat().copy();\n\t\t\tsim.getPhase().setStep(new DeclareBlockersStep());\n\t\t\tval = simulateCombat(sim, newNode, alpha, beta, counter);\n\t\t\tif (!attackerId.equals(playerId)) {\n\t\t\t\tif (val < beta) {\n\t\t\t\t\tbeta = val;\n\t\t\t\t\tbestNode = newNode;\n\t\t\t\t\tnode.setCombat(simCombat);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (val > alpha) {\n\t\t\t\t\talpha = val;\n\t\t\t\t\tbestNode = newNode;\n\t\t\t\t\tnode.setCombat(simCombat);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (val == null)\n\t\t\tval = GameStateEvaluator.evaluate(playerId, game);\n\t\tif (bestNode != null) {\n\t\t\tnode.children.clear();\n\t\t\tnode.children.add(bestNode);\n\t\t}\n\t\tif (logger.isDebugEnabled())\n\t\t\tlogger.debug(indent(node.depth) + \"returning -- combat attacker score: \" + val + \" depth:\" + node.depth + \" for player:\" + game.getPlayer(node.getPlayerId()).getName());\n\t\treturn val;\n\t}","id":4687,"modified_method":"protected int simulateAttackers(Game game, SimulationNode node, UUID attackerId, int alpha, int beta, boolean counter) {\n\t\tif (Thread.interrupted()) {\n\t\t\tThread.currentThread().interrupt();\n\t\t\tlogger.debug(indent(node.depth) + \"interrupted\");\n\t\t\treturn GameStateEvaluator.evaluate(playerId, game);\n\t\t}\n\t\tInteger val = null;\n\t\tSimulationNode bestNode = null;\n\t\tSimulatedPlayer attacker = (SimulatedPlayer) game.getPlayer(attackerId);\n\n\t\tif (logger.isDebugEnabled())\n\t\t\tlogger.debug(indent(node.depth) + attacker.getName() + \"'s possible attackers: \" + attacker.getAvailableAttackers(game));\n\t\tList<Combat> engagements = attacker.addAttackers(game);\n\t\tfor (Combat engagement: engagements) {\n\t\t\tif (alpha >= beta) {\n\t\t\t\tlogger.debug(indent(node.depth) + \"simulating -- pruning attackers\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tGame sim = game.copy();\n\t\t\tUUID defenderId = game.getOpponents(attackerId).iterator().next();\n\t\t\tfor (CombatGroup group: engagement.getGroups()) {\n\t\t\t\tfor (UUID attackId: group.getAttackers()) {\n\t\t\t\t\tsim.getPlayer(attackerId).declareAttacker(attackId, defenderId, sim);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsim.fireEvent(GameEvent.getEvent(GameEvent.EventType.DECLARED_ATTACKERS, attackerId, attackerId));\n\t\t\tSimulationNode newNode = new SimulationNode(node, sim, attackerId);\n\t\t\tif (logger.isDebugEnabled())\n\t\t\t\tlogger.debug(indent(node.depth) + \"simulating attack for player:\" + game.getPlayer(attackerId).getName());\n\t\t\tsim.checkStateAndTriggered();\n\t\t\twhile (!sim.getStack().isEmpty()) {\n\t\t\t\tsim.getStack().resolve(sim);\n\t\t\t\tlogger.debug(indent(node.depth) + \"resolving triggered abilities\");\n\t\t\t\tsim.applyEffects();\n\t\t\t}\n\t\t\tsim.fireEvent(GameEvent.getEvent(GameEvent.EventType.DECLARE_ATTACKERS_STEP_POST, sim.getActivePlayerId(), sim.getActivePlayerId()));\n\t\t\tCombat simCombat = sim.getCombat().copy();\n\t\t\tsim.getPhase().setStep(new DeclareBlockersStep());\n\t\t\tval = simulateCombat(sim, newNode, alpha, beta, counter);\n\t\t\tif (!attackerId.equals(playerId)) {\n\t\t\t\tif (val < beta) {\n\t\t\t\t\tbeta = val;\n\t\t\t\t\tbestNode = newNode;\n\t\t\t\t\tnode.setCombat(simCombat);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (val > alpha) {\n\t\t\t\t\talpha = val;\n\t\t\t\t\tbestNode = newNode;\n\t\t\t\t\tnode.setCombat(simCombat);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (val == null)\n\t\t\tval = GameStateEvaluator.evaluate(playerId, game);\n\t\tif (bestNode != null) {\n\t\t\tnode.children.clear();\n\t\t\tnode.children.add(bestNode);\n\t\t}\n\t\tif (logger.isDebugEnabled())\n\t\t\tlogger.debug(indent(node.depth) + \"returning -- combat attacker score: \" + val + \" depth:\" + node.depth + \" for player:\" + game.getPlayer(node.getPlayerId()).getName());\n\t\treturn val;\n\t}","commit_id":"0668548f4fbca4bd91a663af7a1cd82b495174aa","url":"https://github.com/magefree/mage"},{"original_method":"protected void calculatePreCombatActions(Game game) {\n\t\tif (!getNextAction(game)) {\n\t\t\tcurrentScore = GameStateEvaluator.evaluate(playerId, game);\n\t\t\tGame sim = createSimulation(game);\n\t\t\tSimulationNode.resetCount();\n\t\t\troot = new SimulationNode(null, sim, playerId);\n\t\t\tlogger.debug(\"simulating pre combat actions -----------------------------------------------------------------------------------------\");\n\n\t\t\taddActionsTimed(new FilterAbility());\n//\t\t\taddActions(root, new FilterAbility(), maxDepth, Integer.MIN_VALUE, Integer.MAX_VALUE);\n\t\t\tif (root.children.size() > 0) {\n\t\t\t\troot = root.children.get(0);\n\t\t\t\tactions = new LinkedList<Ability>(root.abilities);\n\t\t\t\tcombat = root.combat;\n\t\t\t\tif (logger.isDebugEnabled())\n\t\t\t\t\tlogger.debug(\"adding pre-combat actions:\" + actions);\n\t\t\t}\n\t\t\telse\n\t\t\t\tlogger.debug(\"no pre-combat actions added\");\n\t\t}\n\t}","id":4688,"modified_method":"protected void calculatePreCombatActions(Game game) {\n\t\tif (!getNextAction(game)) {\n\t\t\tcurrentScore = GameStateEvaluator.evaluate(playerId, game);\n\t\t\tGame sim = createSimulation(game);\n\t\t\tSimulationNode.resetCount();\n\t\t\troot = new SimulationNode(null, sim, playerId);\n\t\t\tlogger.debug(\"simulating pre combat actions -----------------------------------------------------------------------------------------\");\n\n\t\t\tif (!isTestMode)\n\t\t\t\taddActionsTimed(new FilterAbility());\n\t\t\telse\n\t\t\t\taddActions(root, new FilterAbility(), Integer.MIN_VALUE, Integer.MAX_VALUE);\n\t\t\tif (root.children.size() > 0) {\n\t\t\t\troot = root.children.get(0);\n\t\t\t\tactions = new LinkedList<Ability>(root.abilities);\n\t\t\t\tcombat = root.combat;\n\t\t\t\tif (logger.isDebugEnabled())\n\t\t\t\t\tlogger.debug(\"adding pre-combat actions:\" + actions);\n\t\t\t}\n\t\t\telse\n\t\t\t\tlogger.debug(\"no pre-combat actions added\");\n\t\t}\n\t}","commit_id":"0668548f4fbca4bd91a663af7a1cd82b495174aa","url":"https://github.com/magefree/mage"},{"original_method":"protected int simulateCounterAttack(Game game, SimulationNode node, int alpha, int beta) {\n\t\tif (Thread.interrupted()) {\n\t\t\tThread.currentThread().interrupt();\n\t\t\tlogger.debug(indent(node.depth) + \"interrupted\");\n\t\t\treturn GameStateEvaluator.evaluate(playerId, game);\n\t\t}\n\t\tInteger val = null;\n\t\tif (!game.isGameOver()) {\n\t\t\tsimulateToEnd(game);\n\t\t\tgame.getState().setActivePlayerId(game.getState().getPlayerList(game.getActivePlayerId()).getNext());\n\t\t\tlogger.debug(indent(node.depth) + \"simulating -- counter attack for player \" + game.getPlayer(game.getActivePlayerId()).getName());\n\t\t\tgame.getTurn().setPhase(new BeginningPhase());\n\t\t\tif (game.getPhase().beginPhase(game, game.getActivePlayerId())) {\n\t\t\t\tsimulateStep(game, new UntapStep());\n\t\t\t\tsimulateStep(game, new UpkeepStep());\n\t\t\t\tsimulateStep(game, new DrawStep());\n\t\t\t\tgame.getPhase().endPhase(game, game.getActivePlayerId());\n\t\t\t}\n\t\t\tval = simulateCombat(game, node, alpha, beta, true);\n\t\t\tif (logger.isDebugEnabled())\n\t\t\t\tlogger.debug(indent(node.depth) + \"returning -- counter attack score: \" + val + \" depth:\" + node.depth + \" for player:\" + game.getPlayer(node.getPlayerId()).getName());\n\t\t}\n\t\tif (val == null)\n\t\t\tval = GameStateEvaluator.evaluate(playerId, game);\n\t\treturn val;\n\t}","id":4689,"modified_method":"protected int simulateCounterAttack(Game game, SimulationNode node, int alpha, int beta) {\n\t\tif (Thread.interrupted()) {\n\t\t\tThread.currentThread().interrupt();\n\t\t\tlogger.debug(indent(node.depth) + \"interrupted\");\n\t\t\treturn GameStateEvaluator.evaluate(playerId, game);\n\t\t}\n\t\tInteger val = null;\n\t\tif (!game.isGameOver()) {\n\t\t\tlogger.debug(indent(node.depth) + \"simulating -- ending turn\");\n\t\t\tsimulateToEnd(game);\n\t\t\tgame.getState().setActivePlayerId(game.getState().getPlayerList(game.getActivePlayerId()).getNext());\n\t\t\tlogger.debug(indent(node.depth) + \"simulating -- counter attack for player \" + game.getPlayer(game.getActivePlayerId()).getName());\n\t\t\tgame.getTurn().setPhase(new BeginningPhase());\n\t\t\tif (game.getPhase().beginPhase(game, game.getActivePlayerId())) {\n\t\t\t\tsimulateStep(game, new UntapStep());\n\t\t\t\tsimulateStep(game, new UpkeepStep());\n\t\t\t\tsimulateStep(game, new DrawStep());\n\t\t\t\tgame.getPhase().endPhase(game, game.getActivePlayerId());\n\t\t\t}\n\t\t\t//TODO: calculate opponent actions before combat\n\t\t\tval = simulateCombat(game, node, alpha, beta, true);\n\t\t\tif (logger.isDebugEnabled())\n\t\t\t\tlogger.debug(indent(node.depth) + \"returning -- counter attack score: \" + val + \" depth:\" + node.depth + \" for player:\" + game.getPlayer(node.getPlayerId()).getName());\n\t\t}\n\t\tif (val == null)\n\t\t\tval = GameStateEvaluator.evaluate(playerId, game);\n\t\treturn val;\n\t}","commit_id":"0668548f4fbca4bd91a663af7a1cd82b495174aa","url":"https://github.com/magefree/mage"},{"original_method":"protected int simulateCombat(Game game, SimulationNode node, int alpha, int beta, boolean counter) {\n\t\tInteger val = null;\n\t\tif (Thread.interrupted()) {\n\t\t\tThread.currentThread().interrupt();\n\t\t\tlogger.debug(indent(node.depth) + \"interrupted\");\n\t\t\treturn GameStateEvaluator.evaluate(playerId, game);\n\t\t}\n\t\tif (game.getTurn().getStepType() != PhaseStep.DECLARE_BLOCKERS) {\n\t\t\tgame.getTurn().setPhase(new CombatPhase());\n\t\t\tif (game.getPhase().beginPhase(game, game.getActivePlayerId())) {\n\t\t\t\tsimulateStep(game, new BeginCombatStep());\n\t\t\t\tgame.getPhase().setStep(new DeclareAttackersStep());\n\t\t\t\tif (!game.getStep().skipStep(game, game.getActivePlayerId())) {\n\t\t\t\t\tgame.fireEvent(new GameEvent(GameEvent.EventType.DECLARE_ATTACKERS_STEP_PRE, null, null, game.getActivePlayerId()));\n\t\t\t\t\tif (!game.replaceEvent(GameEvent.getEvent(GameEvent.EventType.DECLARING_ATTACKERS, game.getActivePlayerId(), game.getActivePlayerId()))) {\n\t\t\t\t\t\tval = simulateAttackers(game, node, game.getActivePlayerId(), alpha, beta, counter);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (!counter) {\n\t\t\t\t\tsimulateToEnd(game);\n\t\t\t\t\tval = simulatePostCombatMain(game, node, alpha, beta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (!game.getStep().skipStep(game, game.getActivePlayerId())) {\n\t\t\t\tgame.fireEvent(new GameEvent(GameEvent.EventType.DECLARE_BLOCKERS_STEP_PRE, null, null, game.getActivePlayerId()));\n\t\t\t\tif (!game.replaceEvent(GameEvent.getEvent(GameEvent.EventType.DECLARING_BLOCKERS, game.getActivePlayerId(), game.getActivePlayerId()))) {\n\t\t\t\t\t//only suitable for two player games - only simulates blocks for 1st defender\n\t\t\t\t\tval = simulateBlockers(game, node, game.getCombat().getDefenders().iterator().next(), alpha, beta, counter);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!counter) {\n\t\t\t\tfinishCombat(game);\n\t\t\t\tval = simulateCounterAttack(game, node, alpha, beta);\n\t\t\t}\n\t\t}\n\t\tif (val == null)\n\t\t\tval = GameStateEvaluator.evaluate(playerId, game);\n\t\tif (logger.isDebugEnabled())\n\t\t\tlogger.debug(indent(node.depth) + \"returning -- combat score: \" + val + \" depth:\" + node.depth + \" for player:\" + game.getPlayer(node.getPlayerId()).getName());\n\t\treturn val;\n\t}","id":4690,"modified_method":"protected int simulateCombat(Game game, SimulationNode node, int alpha, int beta, boolean counter) {\n\t\tInteger val = null;\n\t\tif (Thread.interrupted()) {\n\t\t\tThread.currentThread().interrupt();\n\t\t\tlogger.debug(indent(node.depth) + \"interrupted\");\n\t\t\treturn GameStateEvaluator.evaluate(playerId, game);\n\t\t}\n\t\tif (game.getTurn().getStepType() != PhaseStep.DECLARE_BLOCKERS) {\n\t\t\tgame.getTurn().setPhase(new CombatPhase());\n\t\t\tif (game.getPhase().beginPhase(game, game.getActivePlayerId())) {\n\t\t\t\tsimulateStep(game, new BeginCombatStep());\n\t\t\t\tgame.getPhase().setStep(new DeclareAttackersStep());\n\t\t\t\tif (!game.getStep().skipStep(game, game.getActivePlayerId())) {\n\t\t\t\t\tgame.fireEvent(new GameEvent(GameEvent.EventType.DECLARE_ATTACKERS_STEP_PRE, null, null, game.getActivePlayerId()));\n\t\t\t\t\tif (!game.replaceEvent(GameEvent.getEvent(GameEvent.EventType.DECLARING_ATTACKERS, game.getActivePlayerId(), game.getActivePlayerId()))) {\n\t\t\t\t\t\tval = simulateAttackers(game, node, game.getActivePlayerId(), alpha, beta, counter);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (!counter) {\n\t\t\t\t\tval = simulatePostCombatMain(game, node, alpha, beta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (!game.getStep().skipStep(game, game.getActivePlayerId())) {\n\t\t\t\tgame.fireEvent(new GameEvent(GameEvent.EventType.DECLARE_BLOCKERS_STEP_PRE, null, null, game.getActivePlayerId()));\n\t\t\t\tif (!game.replaceEvent(GameEvent.getEvent(GameEvent.EventType.DECLARING_BLOCKERS, game.getActivePlayerId(), game.getActivePlayerId()))) {\n\t\t\t\t\t//only suitable for two player games - only simulates blocks for 1st defender\n\t\t\t\t\tval = simulateBlockers(game, node, game.getCombat().getDefenders().iterator().next(), alpha, beta, counter);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!counter) {\n\t\t\t\tfinishCombat(game);\n\t\t\t\tval = simulateCounterAttack(game, node, alpha, beta);\n\t\t\t}\n\t\t}\n\t\tif (val == null)\n\t\t\tval = GameStateEvaluator.evaluate(playerId, game);\n\t\tif (logger.isDebugEnabled())\n\t\t\tlogger.debug(indent(node.depth) + \"returning -- combat score: \" + val + \" depth:\" + node.depth + \" for player:\" + game.getPlayer(node.getPlayerId()).getName());\n\t\treturn val;\n\t}","commit_id":"0668548f4fbca4bd91a663af7a1cd82b495174aa","url":"https://github.com/magefree/mage"},{"original_method":"protected void simulateVariableCosts(Ability ability, Game game) {\n\t\tint numAvailable = getAvailableManaProducers(game).size();\n\t\tfor (int i = 0; i < numAvailable; i++) {\n\t\t\tAbility newAbility = ability.copy();\n\t\t\tnewAbility.addManaCost(new GenericManaCost(i));\n\t\t\tallActions.add(newAbility);\n\t\t}\n\t}","id":4691,"modified_method":"protected void simulateVariableCosts(Ability ability, Game game) {\n\t\tint numAvailable = getAvailableManaProducers(game).size();\n\t\tint start = 0;\n\t\tif (!(ability instanceof SpellAbility)) {\n\t\t\t//only use x=0 on spell abilities\n\t\t\tif (numAvailable == 0)\n\t\t\t\treturn;\n\t\t\telse\n\t\t\t\tstart = 1;\n\t\t}\n\t\tfor (int i = start; i < numAvailable; i++) {\n\t\t\tAbility newAbility = ability.copy();\n\t\t\tnewAbility.addManaCost(new GenericManaCost(i));\n\t\t\tallActions.add(newAbility);\n\t\t}\n\t}","commit_id":"0668548f4fbca4bd91a663af7a1cd82b495174aa","url":"https://github.com/magefree/mage"},{"original_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        ResourceTransformationDescriptionBuilder builder = InfinispanModel.VERSION_4_0_0.requiresTransformation(version) ? parent.addChildResource(PATH) : parent.addChildRedirection(PATH, LEGACY_PATH);\n\n        JDBCStoreResourceDefinition.buildTransformation(version, builder);\n\n        BinaryTableResourceDefinition.buildTransformation(version, builder);\n    }","id":4692,"modified_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        ResourceTransformationDescriptionBuilder builder = InfinispanModel.VERSION_4_0_0.requiresTransformation(version) ? parent.addChildRedirection(PATH, LEGACY_PATH) : parent.addChildResource(PATH);\n\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            builder.setCustomResourceTransformer(new ResourceTransformer() {\n                @Override\n                public void transformResource(ResourceTransformationContext context, PathAddress address, Resource resource) throws OperationFailedException {\n                    final ModelNode model = resource.getModel();\n\n                    final ModelNode binaryTableModel = Resource.Tools.readModel(resource.removeChild(BinaryTableResourceDefinition.PATH));\n                    if (binaryTableModel != null && binaryTableModel.isDefined()) {\n                        model.get(DeprecatedAttribute.TABLE.getDefinition().getName()).set(binaryTableModel);\n                    }\n\n                    context.addTransformedResource(PathAddress.EMPTY_ADDRESS, resource);\n                    context.processChildren(resource);\n                }\n            });\n        }\n\n        BinaryTableResourceDefinition.buildTransformation(version, builder);\n\n        JDBCStoreResourceDefinition.buildTransformation(version, builder);\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        // Nothing to transform yet\n    }","id":4693,"modified_method":"@SuppressWarnings(\"deprecation\")\n    static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        ResourceTransformationDescriptionBuilder builder = parent.addChildResource(PATH);\n\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            OperationTransformer addTransformer = new OperationTransformer() {\n                @Override\n                public ModelNode transformOperation(ModelNode operation) {\n                    PathAddress storeAddress = Operations.getPathAddress(operation).getParent();\n                    ModelNode value = new ModelNode();\n                    for (Class<? extends org.jboss.as.clustering.controller.Attribute> attributeClass : Arrays.asList(Attribute.class, TableResourceDefinition.Attribute.class, TableResourceDefinition.ColumnAttribute.class)) {\n                        for (org.jboss.as.clustering.controller.Attribute attribute : attributeClass.getEnumConstants()) {\n                            String name = attribute.getDefinition().getName();\n                            if (operation.hasDefined(name)) {\n                                value.get(name).set(operation.get(name));\n                            }\n                        }\n                    }\n                    return value.isDefined() ? Operations.createWriteAttributeOperation(storeAddress, BinaryKeyedJDBCStoreResourceDefinition.DeprecatedAttribute.TABLE, value) : Operations.createUndefineAttributeOperation(storeAddress, BinaryKeyedJDBCStoreResourceDefinition.DeprecatedAttribute.TABLE);\n                }\n            };\n            builder.addRawOperationTransformationOverride(ModelDescriptionConstants.ADD, new SimpleOperationTransformer(addTransformer));\n\n            OperationTransformer removeTransformer = new OperationTransformer() {\n                @Override\n                public ModelNode transformOperation(ModelNode operation) {\n                    PathAddress storeAddress = Operations.getPathAddress(operation).getParent();\n                    return Operations.createUndefineAttributeOperation(storeAddress, BinaryKeyedJDBCStoreResourceDefinition.DeprecatedAttribute.TABLE);\n                }\n            };\n            builder.addRawOperationTransformationOverride(ModelDescriptionConstants.REMOVE, new SimpleOperationTransformer(removeTransformer));\n        }\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    protected List<ModelNode> adjustForVersion(final DomainClient client, PathAddress profileAddress) throws Exception {\n        final List<ModelNode> list = new ArrayList<>();\n\n        list.addAll(replaceActiveMqWithMessaging(profileAddress.append(SUBSYSTEM, MessagingExtension.SUBSYSTEM_NAME)));\n        list.addAll(removeBatch(profileAddress.append(SUBSYSTEM, BatchSubsystemDefinition.NAME)));\n        list.addAll(removeBeanValidation(profileAddress.append(SUBSYSTEM, BeanValidationExtension.SUBSYSTEM_NAME)));\n        list.addAll(adjustEe(profileAddress.append(SUBSYSTEM, EeExtension.SUBSYSTEM_NAME)));\n        list.addAll(adjustEjb3(profileAddress.append(SUBSYSTEM, EJB3Extension.SUBSYSTEM_NAME)));\n        list.addAll(replaceIiopOpenJdk(client, profileAddress.append(SUBSYSTEM, IIOPExtension.SUBSYSTEM_NAME)));\n        list.addAll(adjustRemoting(profileAddress.append(SUBSYSTEM, RemotingExtension.SUBSYSTEM_NAME)));\n        list.addAll(removeRequestController(profileAddress.append(SUBSYSTEM, RequestControllerExtension.SUBSYSTEM_NAME)));\n        list.addAll(removeSecurityManager(profileAddress.append(SecurityManagerExtension.SUBSYSTEM_PATH)));\n        list.addAll(removeSingletonDeployer(profileAddress.append(SUBSYSTEM, SingletonExtension.SUBSYSTEM_NAME)));\n        list.addAll(replaceUndertowWithWeb(profileAddress.append(SUBSYSTEM, UndertowExtension.SUBSYSTEM_NAME)));\n        list.addAll(adjustWeld(profileAddress.append(SUBSYSTEM, WeldExtension.SUBSYSTEM_NAME)));\n        list.addAll(adjustJGroups(profileAddress.append(SUBSYSTEM, JGroupsExtension.SUBSYSTEM_NAME)));\n\n        //io must be removed after undertow due to capabilities/requirements\n        list.addAll(removeIo(profileAddress.append(SUBSYSTEM, IOExtension.SUBSYSTEM_NAME)));\n\n        //Temporary workaround, something weird is going on in infinispan so let's get rid of those for now\n        //TODO WFLY-4515 Reenable these subsystems, it is important to see if we boot with them configured although the tests don't use clustering\n        list.add(createRemoveOperation(profileAddress.append(SUBSYSTEM, InfinispanExtension.SUBSYSTEM_NAME)));\n\n        return list;\n    }","id":4694,"modified_method":"@Override\n    protected List<ModelNode> adjustForVersion(final DomainClient client, PathAddress profileAddress) throws Exception {\n        final List<ModelNode> list = new ArrayList<>();\n\n        list.addAll(replaceActiveMqWithMessaging(profileAddress.append(SUBSYSTEM, MessagingExtension.SUBSYSTEM_NAME)));\n        list.addAll(removeBatch(profileAddress.append(SUBSYSTEM, BatchSubsystemDefinition.NAME)));\n        list.addAll(removeBeanValidation(profileAddress.append(SUBSYSTEM, BeanValidationExtension.SUBSYSTEM_NAME)));\n        list.addAll(adjustEe(profileAddress.append(SUBSYSTEM, EeExtension.SUBSYSTEM_NAME)));\n        list.addAll(adjustEjb3(profileAddress.append(SUBSYSTEM, EJB3Extension.SUBSYSTEM_NAME)));\n        list.addAll(replaceIiopOpenJdk(client, profileAddress.append(SUBSYSTEM, IIOPExtension.SUBSYSTEM_NAME)));\n        list.addAll(adjustRemoting(profileAddress.append(SUBSYSTEM, RemotingExtension.SUBSYSTEM_NAME)));\n        list.addAll(removeRequestController(profileAddress.append(SUBSYSTEM, RequestControllerExtension.SUBSYSTEM_NAME)));\n        list.addAll(removeSecurityManager(profileAddress.append(SecurityManagerExtension.SUBSYSTEM_PATH)));\n        list.addAll(removeSingletonDeployer(profileAddress.append(SUBSYSTEM, SingletonExtension.SUBSYSTEM_NAME)));\n        list.addAll(replaceUndertowWithWeb(profileAddress.append(SUBSYSTEM, UndertowExtension.SUBSYSTEM_NAME)));\n        list.addAll(adjustWeld(profileAddress.append(SUBSYSTEM, WeldExtension.SUBSYSTEM_NAME)));\n        list.addAll(adjustJGroups(profileAddress.append(SUBSYSTEM, JGroupsExtension.SUBSYSTEM_NAME)));\n        list.addAll(adjustInfinispan(profileAddress.append(SUBSYSTEM, InfinispanExtension.SUBSYSTEM_NAME)));\n\n        //io must be removed after undertow due to capabilities/requirements\n        list.addAll(removeIo(profileAddress.append(SUBSYSTEM, IOExtension.SUBSYSTEM_NAME)));\n\n        return list;\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"private Collection<? extends ModelNode> removeSingletonDeployer(PathAddress subsystem) {\n        List<ModelNode> list = new ArrayList<>(2);\n        //singleton subsystem and extension doesn't exist\n        list.add(createRemoveOperation(subsystem));\n        list.add(createRemoveOperation(PathAddress.pathAddress(EXTENSION, \"org.wildfly.extension.clustering.singleton\")));\n        return list;\n    }","id":4695,"modified_method":"private Collection<? extends ModelNode> removeSingletonDeployer(PathAddress subsystem) {\n        List<ModelNode> list = new ArrayList<>();\n        //singleton subsystem and extension doesn't exist\n        list.add(createRemoveOperation(subsystem));\n        list.add(createRemoveOperation(PathAddress.pathAddress(EXTENSION, \"org.wildfly.extension.clustering.singleton\")));\n        return list;\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            parent.addChildRedirection(PATH, LEGACY_PATH);\n        }\n    }","id":4696,"modified_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        ResourceTransformationDescriptionBuilder builder = InfinispanModel.VERSION_4_0_0.requiresTransformation(version) ? parent.addChildRedirection(PATH, LEGACY_PATH) : parent.addChildResource(PATH);\n\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            builder.getAttributeBuilder().setValueConverter(new AttributeConverter.DefaultAttributeConverter() {\n                @Override\n                protected void convertAttribute(PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context) {\n                    if (attributeValue.isDefined()) {\n                        attributeValue.set(attributeValue.asInt());\n                    }\n                }\n            }, Attribute.MAX_ENTRIES.getDefinition());\n        }\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * @return {@link DiscardPolicy#REJECT_AND_WARN} if any of the attributes are defined; {@link DiscardPolicy#SILENT} otherwise\n     */\n    @Override\n    public DiscardPolicy checkResource(TransformationContext context, PathAddress address) {\n        ModelNode model = context.readResource(PathAddress.EMPTY_ADDRESS).getModel();\n\n        for (Property entry : model.asPropertyList()) {\n            if (entry.getValue().isDefined()) {\n                return DiscardPolicy.REJECT_AND_WARN;\n            }\n        }\n\n        return DiscardPolicy.SILENT;\n    }","id":4697,"modified_method":"/**\n     * @return {@link DiscardPolicy#REJECT_AND_WARN} if any of the attributes are defined; {@link DiscardPolicy#SILENT} otherwise\n     */\n    @Override\n    public DiscardPolicy checkResource(TransformationContext context, PathAddress address) {\n        ModelNode model = context.readResource(PathAddress.EMPTY_ADDRESS).getModel();\n\n        if (model.isDefined()) {\n            for (Property entry : model.asPropertyList()) {\n                if (entry.getValue().isDefined()) {\n                    return DiscardPolicy.REJECT_AND_WARN;\n                }\n            }\n        }\n\n        return DiscardPolicy.SILENT;\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder builder) {\n\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            // Converts pool name to its JNDI name\n            Converter converter = new Converter() {\n                @Override\n                public void convert(PathAddress address, String name, ModelNode value, ModelNode model, TransformationContext context) {\n                    if (!value.isDefined()) {\n                        PathAddress rootAddress = address.subAddress(0, address.size() - 4);\n                        PathAddress subsystemAddress = rootAddress.append(PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM, \"datasources\"));\n                        Resource subsystem = context.readResourceFromRoot(subsystemAddress);\n                        String poolName = value.asString();\n                        for (String type : Arrays.asList(\"data-source\", \"xa-data-source\")) {\n                            if (subsystem.hasChildren(type)) {\n                                for (Resource.ResourceEntry entry : subsystem.getChildren(type)) {\n                                    if (entry.getName().equals(poolName)) {\n                                        value.set(entry.getModel().get(\"jndi-name\"));\n                                        return;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n            builder.getAttributeBuilder()\n                    .setValueConverter(new SimpleAttributeConverter(converter), Attribute.DATA_SOURCE.getDefinition())\n                    ;\n        }\n\n        if (InfinispanModel.VERSION_2_0_0.requiresTransformation(version)) {\n            builder.getAttributeBuilder()\n                    .setDiscard(DiscardAttributeChecker.UNDEFINED, Attribute.DIALECT.getDefinition())\n                    .addRejectCheck(RejectAttributeChecker.DEFINED, Attribute.DIALECT.getDefinition())\n                    .end();\n        }\n\n        StoreResourceDefinition.buildTransformation(version, builder);\n    }","id":4698,"modified_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder builder) {\n\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            // Converts pool name to its JNDI name\n            Converter converter = new Converter() {\n                @Override\n                public void convert(PathAddress address, String name, ModelNode value, ModelNode model, TransformationContext context) {\n                    if (!value.isDefined()) {\n                        PathAddress rootAddress = address.subAddress(0, address.size() - 4);\n                        PathAddress subsystemAddress = rootAddress.append(PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM, \"datasources\"));\n                        Resource subsystem = context.readResourceFromRoot(subsystemAddress);\n                        String poolName = value.asString();\n                        for (String type : Arrays.asList(\"data-source\", \"xa-data-source\")) {\n                            if (subsystem.hasChildren(type)) {\n                                for (Resource.ResourceEntry entry : subsystem.getChildren(type)) {\n                                    if (entry.getName().equals(poolName)) {\n                                        value.set(entry.getModel().get(\"jndi-name\"));\n                                        return;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n            builder.getAttributeBuilder()\n                    .addRename(Attribute.DATA_SOURCE.getDefinition().getName(), DeprecatedAttribute.DATASOURCE.getDefinition().getName())\n                    .setValueConverter(new SimpleAttributeConverter(converter), Attribute.DATA_SOURCE.getDefinition())\n            ;\n        }\n\n        if (InfinispanModel.VERSION_2_0_0.requiresTransformation(version)) {\n            builder.getAttributeBuilder()\n                    .setDiscard(DiscardAttributeChecker.UNDEFINED, Attribute.DIALECT.getDefinition())\n                    .addRejectCheck(RejectAttributeChecker.DEFINED, Attribute.DIALECT.getDefinition())\n                    .end();\n        }\n\n        StoreResourceDefinition.buildTransformation(version, builder);\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"static void translateAddOperation(OperationContext context, ModelNode operation) throws OperationFailedException {\n        if (!operation.hasDefined(JDBCStoreResourceDefinition.Attribute.DATA_SOURCE.getDefinition().getName())) {\n            if (operation.hasDefined(JDBCStoreResourceDefinition.DeprecatedAttribute.DATASOURCE.getDefinition().getName())) {\n                // Translate JNDI name into pool name\n                String jndiName = JDBCStoreResourceDefinition.DeprecatedAttribute.DATASOURCE.getDefinition().resolveModelAttribute(context, operation).asString();\n                String poolName = findPoolName(context, jndiName);\n                operation.get(JDBCStoreResourceDefinition.Attribute.DATA_SOURCE.getDefinition().getName()).set(poolName);\n            } else {\n                ControllerLogger.MGMT_OP_LOGGER.validationFailedRequiredParameterNotPresent(JDBCStoreResourceDefinition.Attribute.DATA_SOURCE.getDefinition().getName(), operation.toString());\n            }\n        }\n    }","id":4699,"modified_method":"static void translateAddOperation(OperationContext context, ModelNode operation) throws OperationFailedException {\n        if (!operation.hasDefined(JDBCStoreResourceDefinition.Attribute.DATA_SOURCE.getDefinition().getName())) {\n            if (operation.hasDefined(JDBCStoreResourceDefinition.DeprecatedAttribute.DATASOURCE.getDefinition().getName())) {\n                // Translate JNDI name into pool name\n                String jndiName = JDBCStoreResourceDefinition.DeprecatedAttribute.DATASOURCE.getDefinition().resolveModelAttribute(context, operation).asString();\n                String poolName = findPoolName(context, jndiName);\n                operation.get(JDBCStoreResourceDefinition.Attribute.DATA_SOURCE.getDefinition().getName()).set(poolName);\n            } else {\n                throw ControllerLogger.MGMT_OP_LOGGER.validationFailedRequiredParameterNotPresent(JDBCStoreResourceDefinition.Attribute.DATA_SOURCE.getDefinition().getName(), operation.toString());\n            }\n        }\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        ResourceTransformationDescriptionBuilder builder = InfinispanModel.VERSION_4_0_0.requiresTransformation(version) ? parent.addChildRedirection(PATH, LEGACY_PATH) : parent.addChildResource(PATH);\n\n        JDBCStoreResourceDefinition.buildTransformation(version, builder);\n\n        BinaryTableResourceDefinition.buildTransformation(version, builder);\n        StringTableResourceDefinition.buildTransformation(version, builder);\n    }","id":4700,"modified_method":"@SuppressWarnings(\"deprecation\")\n    static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        ResourceTransformationDescriptionBuilder builder = InfinispanModel.VERSION_4_0_0.requiresTransformation(version) ? parent.addChildRedirection(PATH, LEGACY_PATH) : parent.addChildResource(PATH);\n\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            builder.setCustomResourceTransformer(new ResourceTransformer() {\n                @Override\n                public void transformResource(ResourceTransformationContext context, PathAddress address, Resource resource) throws OperationFailedException {\n                    final ModelNode model = resource.getModel();\n\n                    final ModelNode binaryTableModel = Resource.Tools.readModel(resource.removeChild(BinaryTableResourceDefinition.PATH));\n                    if (binaryTableModel != null && binaryTableModel.isDefined()) {\n                        model.get(DeprecatedAttribute.BINARY_TABLE.getDefinition().getName()).set(binaryTableModel);\n                    }\n\n                    final ModelNode stringTableModel = Resource.Tools.readModel(resource.removeChild(StringTableResourceDefinition.PATH));\n                    if (stringTableModel != null && stringTableModel.isDefined()) {\n                        model.get(DeprecatedAttribute.STRING_TABLE.getDefinition().getName()).set(stringTableModel);\n                    }\n\n                    context.addTransformedResource(PathAddress.EMPTY_ADDRESS, resource);\n                    context.processChildren(resource);\n                }\n            });\n        }\n\n        BinaryTableResourceDefinition.buildTransformation(version, builder);\n        StringTableResourceDefinition.buildTransformation(version, builder);\n\n        JDBCStoreResourceDefinition.buildTransformation(version, builder);\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        ResourceTransformationDescriptionBuilder builder = InfinispanModel.VERSION_4_0_0.requiresTransformation(version) ? parent.addChildRedirection(PATH, LEGACY_PATH) : parent.addChildResource(PATH);\n\n        StoreResourceDefinition.buildTransformation(version, builder);\n    }","id":4701,"modified_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        ResourceTransformationDescriptionBuilder builder = InfinispanModel.VERSION_4_0_0.requiresTransformation(version) ? parent.addChildRedirection(PATH, LEGACY_PATH) : parent.addChildResource(PATH);\n\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            builder.getAttributeBuilder()\n                    .setValueConverter(new AttributeConverter.DefaultAttributeConverter() {\n                        @Override\n                        protected void convertAttribute(PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context) {\n                            if (attributeValue.isDefined()) {\n                                List<ModelNode> remoteServers = attributeValue.clone().asList();\n                                ModelNode legacyListObject = new ModelNode();\n                                for (ModelNode server : remoteServers) {\n                                    ModelNode legacyListItem = new ModelNode();\n                                    legacyListItem.get(\"outbound-socket-binding\").set(server);\n                                    legacyListObject.add(legacyListItem);\n                                }\n                                attributeValue.set(legacyListObject);\n                            }\n                        }\n                    }, Attribute.SOCKET_BINDINGS.getDefinition());\n        }\n\n        StoreResourceDefinition.buildTransformation(version, builder);\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder builder) {\n\n        StateTransferResourceDefinition.buildTransformation(version, builder);\n\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            builder.rejectChildResource(PartitionHandlingResourceDefinition.PATH);\n        } else {\n            PartitionHandlingResourceDefinition.buildTransformation(version, builder);\n        }\n\n        if (InfinispanModel.VERSION_2_0_0.requiresTransformation(version)) {\n            builder.rejectChildResource(BackupsResourceDefinition.PATH);\n            builder.rejectChildResource(BackupForResourceDefinition.PATH);\n        } else {\n            BackupsResourceDefinition.buildTransformation(version, builder);\n            BackupForResourceDefinition.buildTransformation(version, builder);\n        }\n\n        ClusteredCacheResourceDefinition.buildTransformation(version, builder);\n    }","id":4702,"modified_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder builder) {\n\n        StateTransferResourceDefinition.buildTransformation(version, builder);\n\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            builder.addChildResource(PartitionHandlingResourceDefinition.PATH, new ImplicitlyAddedResourceDynamicDiscardPolicy());\n        } else {\n            PartitionHandlingResourceDefinition.buildTransformation(version, builder);\n        }\n\n        if (InfinispanModel.VERSION_2_0_0.requiresTransformation(version)) {\n            final ResourceTransformationDescriptionBuilder backupsBuilder = builder.addChildResource(BackupsResourceDefinition.PATH, new ImplicitlyAddedResourceDynamicDiscardPolicy());\n            backupsBuilder.rejectChildResource(BackupResourceDefinition.WILDCARD_PATH);\n\n            builder.addChildResource(BackupForResourceDefinition.PATH, new ImplicitlyAddedResourceDynamicDiscardPolicy());\n        } else {\n            BackupsResourceDefinition.buildTransformation(version, builder);\n            BackupForResourceDefinition.buildTransformation(version, builder);\n        }\n\n        ClusteredCacheResourceDefinition.buildTransformation(version, builder);\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public final void convertResourceAttribute(PathAddress address, String name, ModelNode value, TransformationContext context) {\n        this.converter.convert(address, name, value, context.readResourceFromRoot(address).getModel(), context);\n    }","id":4703,"modified_method":"@Override\n    public final void convertResourceAttribute(PathAddress address, String name, ModelNode value, TransformationContext context) {\n        this.converter.convert(address, name, value, context.readResource(PathAddress.EMPTY_ADDRESS).getModel(), context);\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public boolean rejectResourceAttribute(PathAddress address, String name, ModelNode value, TransformationContext context) {\n        return this.rejecter.reject(address, name, value, context.readResourceFromRoot(address).getModel(), context);\n    }","id":4704,"modified_method":"@Override\n    public boolean rejectResourceAttribute(PathAddress address, String name, ModelNode value, TransformationContext context) {\n        return this.rejecter.reject(address, name, value, context.readResource(PathAddress.EMPTY_ADDRESS).getModel(), context);\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        ResourceTransformationDescriptionBuilder builder = parent.addChildResource(PATH);\n\n        JDBCStoreResourceDefinition.buildTransformation(version, builder);\n\n        StringTableResourceDefinition.buildTransformation(version, builder);\n    }","id":4705,"modified_method":"static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        ResourceTransformationDescriptionBuilder builder = InfinispanModel.VERSION_4_0_0.requiresTransformation(version) ? parent.addChildRedirection(PATH, LEGACY_PATH) : parent.addChildResource(PATH);\n\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            builder.setCustomResourceTransformer(new ResourceTransformer() {\n                @Override\n                public void transformResource(ResourceTransformationContext context, PathAddress address, Resource resource) throws OperationFailedException {\n                    final ModelNode model = resource.getModel();\n\n                    final ModelNode stringTableModel = Resource.Tools.readModel(resource.removeChild(StringTableResourceDefinition.PATH));\n                    if (stringTableModel != null && stringTableModel.isDefined()) {\n                        model.get(DeprecatedAttribute.TABLE.getDefinition().getName()).set(stringTableModel);\n                    }\n\n                    context.addTransformedResource(PathAddress.EMPTY_ADDRESS, resource);\n                    context.processChildren(resource);\n                }\n            });\n        }\n\n        StringTableResourceDefinition.buildTransformation(version, builder);\n\n        JDBCStoreResourceDefinition.buildTransformation(version, builder);\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"@SuppressWarnings(\"deprecation\")\n    static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        ResourceTransformationDescriptionBuilder builder = parent.addChildResource(PATH);\n\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            OperationTransformer addTransformer = new OperationTransformer() {\n                @Override\n                public ModelNode transformOperation(ModelNode operation) {\n                    PathAddress storeAddress = Operations.getPathAddress(operation).getParent();\n                    ModelNode value = new ModelNode();\n                    for (Class<? extends org.jboss.as.clustering.controller.Attribute> attributeClass : Arrays.asList(Attribute.class, TableResourceDefinition.Attribute.class)) {\n                        for (org.jboss.as.clustering.controller.Attribute attribute : attributeClass.getEnumConstants()) {\n                            String name = attribute.getDefinition().getName();\n                            if (operation.hasDefined(name)) {\n                                value.get(name).set(operation.get(name));\n                            }\n                        }\n                    }\n                    return value.isDefined() ? Operations.createWriteAttributeOperation(storeAddress, StringKeyedJDBCStoreResourceDefinition.DeprecatedAttribute.TABLE, value) : Operations.createUndefineAttributeOperation(storeAddress, StringKeyedJDBCStoreResourceDefinition.DeprecatedAttribute.TABLE);\n                }\n            };\n            builder.addRawOperationTransformationOverride(ModelDescriptionConstants.ADD, new SimpleOperationTransformer(addTransformer));\n\n            OperationTransformer removeTransformer = new OperationTransformer() {\n                @Override\n                public ModelNode transformOperation(ModelNode operation) {\n                    PathAddress storeAddress = Operations.getPathAddress(operation).getParent();\n                    return Operations.createUndefineAttributeOperation(storeAddress, StringKeyedJDBCStoreResourceDefinition.DeprecatedAttribute.TABLE);\n                }\n            };\n            builder.addRawOperationTransformationOverride(ModelDescriptionConstants.REMOVE, new SimpleOperationTransformer(removeTransformer));\n        }\n    }","id":4706,"modified_method":"@SuppressWarnings(\"deprecation\")\n    static void buildTransformation(ModelVersion version, ResourceTransformationDescriptionBuilder parent) {\n        ResourceTransformationDescriptionBuilder builder = parent.addChildResource(PATH);\n\n        if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {\n            OperationTransformer addTransformer = new OperationTransformer() {\n                @Override\n                public ModelNode transformOperation(ModelNode operation) {\n                    PathAddress storeAddress = Operations.getPathAddress(operation).getParent();\n                    ModelNode value = new ModelNode();\n                    for (Class<? extends org.jboss.as.clustering.controller.Attribute> attributeClass : Arrays.asList(Attribute.class, TableResourceDefinition.Attribute.class, TableResourceDefinition.ColumnAttribute.class)) {\n                        for (org.jboss.as.clustering.controller.Attribute attribute : attributeClass.getEnumConstants()) {\n                            String name = attribute.getDefinition().getName();\n                            if (operation.hasDefined(name)) {\n                                value.get(name).set(operation.get(name));\n                            }\n                        }\n                    }\n                    return value.isDefined() ? Operations.createWriteAttributeOperation(storeAddress, StringKeyedJDBCStoreResourceDefinition.DeprecatedAttribute.TABLE, value) : Operations.createUndefineAttributeOperation(storeAddress, StringKeyedJDBCStoreResourceDefinition.DeprecatedAttribute.TABLE);\n                }\n            };\n            builder.addRawOperationTransformationOverride(ModelDescriptionConstants.ADD, new SimpleOperationTransformer(addTransformer));\n\n            OperationTransformer removeTransformer = new OperationTransformer() {\n                @Override\n                public ModelNode transformOperation(ModelNode operation) {\n                    PathAddress storeAddress = Operations.getPathAddress(operation).getParent();\n                    return Operations.createUndefineAttributeOperation(storeAddress, StringKeyedJDBCStoreResourceDefinition.DeprecatedAttribute.TABLE);\n                }\n            };\n            builder.addRawOperationTransformationOverride(ModelDescriptionConstants.REMOVE, new SimpleOperationTransformer(removeTransformer));\n        }\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"private static ModelFixer createModelFixer(InfinispanModel version) {\n        switch (version) {\n            default: {\n                return null;\n            }\n        }\n    }","id":4707,"modified_method":"/**\n     * Returns a copy of the model generated by booting legacy controller with legacy operations, but\n     * with the following changes:\n     * - virtual nodes attribute is removed\n     *\n     * This is required to address a problem with resource transformers: WFLY-2589\n     */\n    private static ModelFixer createModelFixer(InfinispanModel version) {\n        switch (version) {\n            default: {\n                return null;\n            }\n        }\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"private static FailedOperationTransformationConfig createFailedOperationConfig(ModelVersion version) {\n\n        FailedOperationTransformationConfig config = new FailedOperationTransformationConfig();\n        PathAddress subsystemAddress = PathAddress.pathAddress(InfinispanSubsystemResourceDefinition.PATH);\n        PathAddress containerAddress = subsystemAddress.append(CacheContainerResourceDefinition.WILDCARD_PATH);\n\n        if (InfinispanModel.VERSION_2_0_0.requiresTransformation(version)) {\n            for (PathElement path : Arrays.asList(DistributedCacheResourceDefinition.WILDCARD_PATH, ReplicatedCacheResourceDefinition.WILDCARD_PATH)) {\n                PathAddress cacheAddress = containerAddress.append(path);\n                config.addFailedAttribute(cacheAddress.append(BackupResourceDefinition.WILDCARD_PATH), FailedOperationTransformationConfig.REJECTED_RESOURCE);\n                config.addFailedAttribute(cacheAddress.append(BackupForResourceDefinition.PATH), FailedOperationTransformationConfig.REJECTED_RESOURCE);\n            }\n        }\n\n        return config;\n    }","id":4708,"modified_method":"private static FailedOperationTransformationConfig createFailedOperationConfig(ModelVersion version) {\n\n        FailedOperationTransformationConfig config = new FailedOperationTransformationConfig();\n        PathAddress subsystemAddress = PathAddress.pathAddress(InfinispanSubsystemResourceDefinition.PATH);\n        PathAddress containerAddress = subsystemAddress.append(CacheContainerResourceDefinition.WILDCARD_PATH);\n\n        if (InfinispanModel.VERSION_2_0_0.requiresTransformation(version)) {\n            for (PathElement path : Arrays.asList(DistributedCacheResourceDefinition.WILDCARD_PATH, ReplicatedCacheResourceDefinition.WILDCARD_PATH)) {\n                PathAddress cacheAddress = containerAddress.append(path);\n                config.addFailedAttribute(\n                        cacheAddress.append(BackupsResourceDefinition.PATH).append(BackupResourceDefinition.WILDCARD_PATH), FailedOperationTransformationConfig.REJECTED_RESOURCE);\n                config.addFailedAttribute(\n                        cacheAddress.append(BackupForResourceDefinition.PATH), FailedOperationTransformationConfig.REJECTED_RESOURCE);\n            }\n        }\n\n        return config;\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void testRejections(InfinispanModel model, ModelTestControllerVersion controller, String ... dependencies) throws Exception {\n        ModelVersion version = model.getVersion();\n\n        // create builder for current subsystem version\n        KernelServicesBuilder builder = this.createKernelServicesBuilder();\n\n        // initialize the legacy services\n        builder.createLegacyKernelServicesBuilder(AdditionalInitialization.MANAGEMENT, controller, version)\n                .addMavenResourceURL(dependencies)\n                //TODO storing the model triggers the weirdness mentioned in SubsystemTestDelegate.LegacyKernelServiceInitializerImpl.install()\n                //which is strange since it should be loading it all from the current jboss modules\n                //Also this works in several other tests\n                .dontPersistXml();\n\n        KernelServices services = builder.build();\n        KernelServices legacyServices = services.getLegacyServices(version);\n        Assert.assertNotNull(legacyServices);\n        Assert.assertTrue(\"main services did not boot\", services.isSuccessfulBoot());\n        Assert.assertTrue(legacyServices.isSuccessfulBoot());\n\n        // test failed operations involving backups\n        List<ModelNode> xmlOps = builder.parseXmlResource(\"infinispan-transformer-backup.xml\");\n        ModelTestUtils.checkFailedTransformedBootOperations(services, version, xmlOps, createFailedOperationConfig(version));\n    }","id":4709,"modified_method":"private void testRejections(InfinispanModel model, ModelTestControllerVersion controller, String ... dependencies) throws Exception {\n        ModelVersion version = model.getVersion();\n\n        // create builder for current subsystem version\n        KernelServicesBuilder builder = this.createKernelServicesBuilder();\n\n        // initialize the legacy services\n        builder.createLegacyKernelServicesBuilder(AdditionalInitialization.MANAGEMENT, controller, version)\n                .addMavenResourceURL(dependencies)\n                //TODO storing the model triggers the weirdness mentioned in SubsystemTestDelegate.LegacyKernelServiceInitializerImpl.install()\n                //which is strange since it should be loading it all from the current jboss modules\n                //Also this works in several other tests\n                .dontPersistXml();\n\n        KernelServices services = builder.build();\n        KernelServices legacyServices = services.getLegacyServices(version);\n        Assert.assertNotNull(legacyServices);\n        Assert.assertTrue(\"main services did not boot\", services.isSuccessfulBoot());\n        Assert.assertTrue(legacyServices.isSuccessfulBoot());\n\n        // test failed operations involving backups\n        List<ModelNode> xmlOps = builder.parseXmlResource(\"infinispan-transformer-reject.xml\");\n        ModelTestUtils.checkFailedTransformedBootOperations(services, version, xmlOps, createFailedOperationConfig(version));\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    AdditionalInitialization createAdditionalInitialization() {\n        return new JGroupsSubsystemInitialization();\n    }","id":4710,"modified_method":"@Override\n    AdditionalInitialization createAdditionalInitialization() {\n        return new JGroupsSubsystemInitialization()\n                .require(RequiredCapability.OUTBOUND_SOCKET_BINDING, \"hotrod-server-1\", \"hotrod-server-2\")\n                .require(RequiredCapability.DATA_SOURCE, \"ExampleDS\")\n                ;\n    }","commit_id":"0cac67f44beea3e24cee230870d1d75082fbf4df","url":"https://github.com/wildfly/wildfly"},{"original_method":"public static boolean isDocTestFunction(PyFunction pyFunction) {\n    if (pyFunction.getDocStringExpression() == null) return false;\n    PythonDocStringParser parser = new PythonDocStringParser(pyFunction.getDocStringExpression().getStringValue());\n    if (!parser.hasExample()) return false;\n    return true;\n  }","id":4711,"modified_method":"public static boolean isDocTestFunction(PyFunction pyFunction) {\n    if (pyFunction.getDocStringExpression() == null) return false;\n    PyStringLiteralExpression docString = pyFunction.getDocStringExpression();\n    if (docString != null && !hasExample(docString.getStringValue())) return false;\n    return true;\n  }","commit_id":"70b860a8a3031a020bafb38bf0e5383ed1ec6c94","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean isDocTestClass(PyClass pyClass) {\n    List<PyStatement> result = Lists.newArrayList();\n    for (PyFunction cls : pyClass.getMethods()) {\n      if (isDocTestFunction(cls)) {\n        result.add(cls);\n      }\n    }\n    if (pyClass.getDocStringExpression() != null) {\n      PythonDocStringParser parser = new PythonDocStringParser(pyClass.getDocStringExpression().getStringValue());\n      if (parser.hasExample()) {\n        result.add(pyClass);\n      }\n    }\n    if (result.isEmpty()) return false;\n    return true; \n  }","id":4712,"modified_method":"public static boolean isDocTestClass(PyClass pyClass) {\n    List<PyStatement> result = Lists.newArrayList();\n    for (PyFunction cls : pyClass.getMethods()) {\n      if (isDocTestFunction(cls)) {\n        result.add(cls);\n      }\n    }\n    if (pyClass.getDocStringExpression() != null) {\n      PyStringLiteralExpression docString = pyClass.getDocStringExpression();\n      if (docString != null && hasExample(docString.getStringValue())) {\n        result.add(pyClass);\n      }\n    }\n    if (result.isEmpty()) return false;\n    return true; \n  }","commit_id":"70b860a8a3031a020bafb38bf0e5383ed1ec6c94","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static List<PyElement> getDocTestCasesFromFile(PyFile file) {\n    List<PyElement> result = Lists.newArrayList();\n    for (PyClass cls : file.getTopLevelClasses()) {\n      if (isDocTestClass(cls)) {\n        result.add(cls);\n      }\n    }\n    for (PyFunction cls : file.getTopLevelFunctions()) {\n      if (isDocTestFunction(cls)) {\n        result.add(cls);\n      }\n    }\n    if (file.getDocStringExpression() != null) {\n      PythonDocStringParser parser = new PythonDocStringParser(file.getDocStringExpression().getStringValue());\n      if (!parser.hasExample()) {\n        result.add(file);\n      }\n    }\n    return result;\n  }","id":4713,"modified_method":"public static List<PyElement> getDocTestCasesFromFile(PyFile file) {\n    List<PyElement> result = Lists.newArrayList();\n    for (PyClass cls : file.getTopLevelClasses()) {\n      if (isDocTestClass(cls)) {\n        result.add(cls);\n      }\n    }\n    for (PyFunction cls : file.getTopLevelFunctions()) {\n      if (isDocTestFunction(cls)) {\n        result.add(cls);\n      }\n    }\n    if (file.getDocStringExpression() != null) {\n      PyStringLiteralExpression docString = file.getDocStringExpression();\n      if (docString != null && hasExample(docString.getStringValue())) {\n        result.add(file);\n      }\n    }\n    return result;\n  }","commit_id":"70b860a8a3031a020bafb38bf0e5383ed1ec6c94","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public BinarizerAnnotator(String annotatorName, Properties props) {\n    this.tlppClass = props.getProperty(annotatorName + \".tlppClass\", DEFAULT_TLPP_CLASS);\n    TreebankLangParserParams tlpp = ReflectionLoading.loadByReflection(tlppClass);\n    this.binarizer = new TreeBinarizer(tlpp.headFinder(), tlpp.treebankLanguagePack(),\n                                       false, false, 0, false, false, 0.0, false, true, true);\n  }","id":4714,"modified_method":"public BinarizerAnnotator(String annotatorName, Properties props) {\n    this.tlppClass = props.getProperty(annotatorName + \".tlppClass\", DEFAULT_TLPP_CLASS);\n    TreebankLangParserParams tlpp = ReflectionLoading.loadByReflection(tlppClass);\n    this.binarizer = TreeBinarizer.simpleTreeBinarizer(tlpp.headFinder(), tlpp.treebankLanguagePack());\n  }","commit_id":"4ce4177fb062380901b653d0c324bad7ef38516e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Turns a text file into trees for use in a RNTN classifier such as\n   * the treebank used in the Sentiment project.\n   * <br>\n   * The expected input file is one sentence per line, with sentences\n   * separated by blank lines. The first line has the main label of the sentence together with the full sentence. \n   * Lines after the first sentence line but before\n   * the blank line will be treated as labeled subphrases.  The\n   * labels should start with the label and then contain a list of\n   * tokens the label applies to. All phrases that do not have their own label will take on the main sentence label!\n   *  For example:\n   * <br>\n   * <code>\n   * 1 Today is not a good day.<br>\n   * 3 good<br>\n   * 3 good day <br>\n   * 3 a good day <br>\n   * <br>\n   * (next block starts here) <br>\n   * <\/code>\n   * By default the englishPCFG parser is used.  This can be changed\n   * with the <code>-parserModel<\/code> flag.  Specify an input file\n   * with <code>-input<\/code>.\n   * <br>\n   * If a sentiment model is provided with -sentimentModel, that model\n   * will be used to prelabel the sentences.  Any spans with given\n   * labels will then be used to adjust those labels.\n   */\n  public static void main(String[] args) {\n    CollapseUnaryTransformer transformer = new CollapseUnaryTransformer();\n\n    String parserModel = \"edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz\";\n\n    String inputPath = null;\n\n    String sentimentModelPath = null;\n    SentimentModel sentimentModel = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-input\")) {\n        inputPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-parserModel\")) {\n        parserModel = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-sentimentModel\")) {\n        sentimentModelPath = args[argIndex + 1];\n        argIndex += 2;\n      } else {\n        System.err.println(\"Unknown argument \" + args[argIndex]);\n        System.exit(2);\n      }\n    }\n\n    if (inputPath == null) {\n      throw new IllegalArgumentException(\"Must specify input file with -input\");\n    }\n\n    LexicalizedParser parser = LexicalizedParser.loadModel(parserModel);\n    TreeBinarizer binarizer = new TreeBinarizer(parser.getTLPParams().headFinder(), parser.treebankLanguagePack(), \n                                                false, false, 0, false, false, 0.0, false, true, true);\n\n    if (sentimentModelPath != null) {\n      sentimentModel = SentimentModel.loadSerialized(sentimentModelPath);\n    }\n\n    String text = IOUtils.slurpFileNoExceptions(inputPath);\n    String[] chunks = text.split(\"\\\\n\\\\s*\\\\n+\"); // need blank line to make a new chunk\n\n    for (String chunk : chunks) {\n      if (chunk.trim() == \"\") {\n        continue;\n      }\n      // The expected format is that line 0 will be the text of the\n      // sentence, and each subsequence line, if any, will be a value\n      // followed by the sequence of tokens that get that value.\n\n      // Here we take the first line and tokenize it as one sentence.\n      String[] lines = chunk.trim().split(\"\\\\n\");\n      String sentence = lines[0];\n      StringReader sin = new StringReader(sentence);\n      DocumentPreprocessor document = new DocumentPreprocessor(sin);\n      document.setSentenceFinalPuncWords(new String[] {\"\\n\"});\n      List<HasWord> tokens = document.iterator().next();\n      Integer mainLabel = new Integer(tokens.get(0).word());\n      //System.out.print(\"Main Sentence Label: \" + mainLabel.toString() + \"; \");\n      tokens = tokens.subList(1, tokens.size());\n      //System.err.println(tokens);\n\n      Map<Pair<Integer, Integer>, String> spanToLabels = Generics.newHashMap();\n      for (int i = 1; i < lines.length; ++i) {\n        extractLabels(spanToLabels, tokens, lines[i]);\n      }\n\n      // TODO: add an option which treats the spans as constraints when parsing\n\n      Tree tree = parser.apply(tokens);\n      Tree binarized = binarizer.transformTree(tree);\n      Tree collapsedUnary = transformer.transformTree(binarized);\n\n      // if there is a sentiment model for use in prelabeling, we\n      // label here and then use the user given labels to adjust\n      if (sentimentModel != null) {\n        Trees.convertToCoreLabels(collapsedUnary);\n        SentimentCostAndGradient scorer = new SentimentCostAndGradient(sentimentModel, null);\n        scorer.forwardPropagateTree(collapsedUnary);\n        setPredictedLabels(collapsedUnary);\n      } else {\n        setUnknownLabels(collapsedUnary, mainLabel);\n      }\n\n      Trees.convertToCoreLabels(collapsedUnary);\n      collapsedUnary.indexSpans();\n\n      for (Pair<Integer, Integer> span : spanToLabels.keySet()) {\n        setSpanLabel(collapsedUnary, span, spanToLabels.get(span));\n      }\n\n      System.out.println(collapsedUnary);\n      //System.out.println();\n    }\n  }","id":4715,"modified_method":"/**\n   * Turns a text file into trees for use in a RNTN classifier such as\n   * the treebank used in the Sentiment project.\n   * <br>\n   * The expected input file is one sentence per line, with sentences\n   * separated by blank lines. The first line has the main label of the sentence together with the full sentence. \n   * Lines after the first sentence line but before\n   * the blank line will be treated as labeled subphrases.  The\n   * labels should start with the label and then contain a list of\n   * tokens the label applies to. All phrases that do not have their own label will take on the main sentence label!\n   *  For example:\n   * <br>\n   * <code>\n   * 1 Today is not a good day.<br>\n   * 3 good<br>\n   * 3 good day <br>\n   * 3 a good day <br>\n   * <br>\n   * (next block starts here) <br>\n   * <\/code>\n   * By default the englishPCFG parser is used.  This can be changed\n   * with the <code>-parserModel<\/code> flag.  Specify an input file\n   * with <code>-input<\/code>.\n   * <br>\n   * If a sentiment model is provided with -sentimentModel, that model\n   * will be used to prelabel the sentences.  Any spans with given\n   * labels will then be used to adjust those labels.\n   */\n  public static void main(String[] args) {\n    CollapseUnaryTransformer transformer = new CollapseUnaryTransformer();\n\n    String parserModel = \"edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz\";\n\n    String inputPath = null;\n\n    String sentimentModelPath = null;\n    SentimentModel sentimentModel = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-input\")) {\n        inputPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-parserModel\")) {\n        parserModel = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-sentimentModel\")) {\n        sentimentModelPath = args[argIndex + 1];\n        argIndex += 2;\n      } else {\n        System.err.println(\"Unknown argument \" + args[argIndex]);\n        System.exit(2);\n      }\n    }\n\n    if (inputPath == null) {\n      throw new IllegalArgumentException(\"Must specify input file with -input\");\n    }\n\n    LexicalizedParser parser = LexicalizedParser.loadModel(parserModel);\n    TreeBinarizer binarizer = TreeBinarizer.simpleTreeBinarizer(parser.getTLPParams().headFinder(), parser.treebankLanguagePack());\n\n    if (sentimentModelPath != null) {\n      sentimentModel = SentimentModel.loadSerialized(sentimentModelPath);\n    }\n\n    String text = IOUtils.slurpFileNoExceptions(inputPath);\n    String[] chunks = text.split(\"\\\\n\\\\s*\\\\n+\"); // need blank line to make a new chunk\n\n    for (String chunk : chunks) {\n      if (chunk.trim() == \"\") {\n        continue;\n      }\n      // The expected format is that line 0 will be the text of the\n      // sentence, and each subsequence line, if any, will be a value\n      // followed by the sequence of tokens that get that value.\n\n      // Here we take the first line and tokenize it as one sentence.\n      String[] lines = chunk.trim().split(\"\\\\n\");\n      String sentence = lines[0];\n      StringReader sin = new StringReader(sentence);\n      DocumentPreprocessor document = new DocumentPreprocessor(sin);\n      document.setSentenceFinalPuncWords(new String[] {\"\\n\"});\n      List<HasWord> tokens = document.iterator().next();\n      Integer mainLabel = new Integer(tokens.get(0).word());\n      //System.out.print(\"Main Sentence Label: \" + mainLabel.toString() + \"; \");\n      tokens = tokens.subList(1, tokens.size());\n      //System.err.println(tokens);\n\n      Map<Pair<Integer, Integer>, String> spanToLabels = Generics.newHashMap();\n      for (int i = 1; i < lines.length; ++i) {\n        extractLabels(spanToLabels, tokens, lines[i]);\n      }\n\n      // TODO: add an option which treats the spans as constraints when parsing\n\n      Tree tree = parser.apply(tokens);\n      Tree binarized = binarizer.transformTree(tree);\n      Tree collapsedUnary = transformer.transformTree(binarized);\n\n      // if there is a sentiment model for use in prelabeling, we\n      // label here and then use the user given labels to adjust\n      if (sentimentModel != null) {\n        Trees.convertToCoreLabels(collapsedUnary);\n        SentimentCostAndGradient scorer = new SentimentCostAndGradient(sentimentModel, null);\n        scorer.forwardPropagateTree(collapsedUnary);\n        setPredictedLabels(collapsedUnary);\n      } else {\n        setUnknownLabels(collapsedUnary, mainLabel);\n      }\n\n      Trees.convertToCoreLabels(collapsedUnary);\n      collapsedUnary.indexSpans();\n\n      for (Pair<Integer, Integer> span : spanToLabels.keySet()) {\n        setSpanLabel(collapsedUnary, span, spanToLabels.get(span));\n      }\n\n      System.out.println(collapsedUnary);\n      //System.out.println();\n    }\n  }","commit_id":"4ce4177fb062380901b653d0c324bad7ef38516e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private void finishSentence(CoreMap sentence, Tree tree) {\n    if (treeMap != null) {\n      tree = treeMap.apply(tree);\n    }\n\n    ParserAnnotatorUtils.fillInParseAnnotations(VERBOSE, BUILD_GRAPHS, gsf, sentence, tree);\n\n    if (saveBinaryTrees) {\n      TreeBinarizer binarizer = new TreeBinarizer(parser.getTLPParams().headFinder(), parser.treebankLanguagePack(),\n                                                  false, false, 0, false, false, 0.0, false, true, true);\n      Tree binarized = binarizer.transformTree(tree);\n      Trees.convertToCoreLabels(binarized);\n      sentence.set(TreeCoreAnnotations.BinarizedTreeAnnotation.class, binarized);\n    }\n  }","id":4716,"modified_method":"private void finishSentence(CoreMap sentence, Tree tree) {\n    if (treeMap != null) {\n      tree = treeMap.apply(tree);\n    }\n\n    ParserAnnotatorUtils.fillInParseAnnotations(VERBOSE, BUILD_GRAPHS, gsf, sentence, tree);\n\n    if (saveBinaryTrees) {\n      TreeBinarizer binarizer = TreeBinarizer.simpleTreeBinarizer(parser.getTLPParams().headFinder(), parser.treebankLanguagePack());\n      Tree binarized = binarizer.transformTree(tree);\n      Trees.convertToCoreLabels(binarized);\n      sentence.set(TreeCoreAnnotations.BinarizedTreeAnnotation.class, binarized);\n    }\n  }","commit_id":"4ce4177fb062380901b653d0c324bad7ef38516e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static List<Tree> binarizeTreebank(Treebank treebank, Options op) {\n    TreeBinarizer binarizer = new TreeBinarizer(op.tlpParams.headFinder(), op.tlpParams.treebankLanguagePack(), false, false, 0, false, false, 0.0, false, true, true);\n    BasicCategoryTreeTransformer basicTransformer = new BasicCategoryTreeTransformer(op.langpack());\n    CompositeTreeTransformer transformer = new CompositeTreeTransformer();\n    transformer.addTransformer(binarizer);\n    transformer.addTransformer(basicTransformer);\n\n    treebank = treebank.transform(transformer);\n\n    HeadFinder binaryHeadFinder = new BinaryHeadFinder(op.tlpParams.headFinder());\n    List<Tree> binarizedTrees = Generics.newArrayList();\n    for (Tree tree : treebank) {\n      Trees.convertToCoreLabels(tree);\n      tree.percolateHeadAnnotations(binaryHeadFinder);\n      // Index from 1.  Tools downstream expect index from 1, so for\n      // uses internal to the srparser we have to renormalize the\n      // indices, with the result that here we have to index from 1\n      tree.indexLeaves(1, true);\n      binarizedTrees.add(tree);\n    }\n    return binarizedTrees;\n  }","id":4717,"modified_method":"public static List<Tree> binarizeTreebank(Treebank treebank, Options op) {\n    TreeBinarizer binarizer = TreeBinarizer.simpleTreeBinarizer(op.tlpParams.headFinder(), op.tlpParams.treebankLanguagePack());\n    BasicCategoryTreeTransformer basicTransformer = new BasicCategoryTreeTransformer(op.langpack());\n    CompositeTreeTransformer transformer = new CompositeTreeTransformer();\n    transformer.addTransformer(binarizer);\n    transformer.addTransformer(basicTransformer);\n\n    treebank = treebank.transform(transformer);\n\n    HeadFinder binaryHeadFinder = new BinaryHeadFinder(op.tlpParams.headFinder());\n    List<Tree> binarizedTrees = Generics.newArrayList();\n    for (Tree tree : treebank) {\n      Trees.convertToCoreLabels(tree);\n      tree.percolateHeadAnnotations(binaryHeadFinder);\n      // Index from 1.  Tools downstream expect index from 1, so for\n      // uses internal to the srparser we have to renormalize the\n      // indices, with the result that here we have to index from 1\n      tree.indexLeaves(1, true);\n      binarizedTrees.add(tree);\n    }\n    return binarizedTrees;\n  }","commit_id":"4ce4177fb062380901b653d0c324bad7ef38516e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/** Build a custom binarizer for Trees.\n   *\n   * @param hf the HeadFinder to use in binarization\n   * @param tlp the TreebankLanguagePack to use\n   * @param insideFactor whether to do inside markovization\n   * @param markovFactor whether to markovize the binary rules\n   * @param markovOrder the markov order to use; only relevant with markovFactor=true\n   * @param useWrappingLabels whether to use state names (labels) that allow wrapping from right to left\n   * @param unaryAtTop Whether to actually materialize the unary that rewrites\n   *        a passive state to the active rule at the top of an original local\n   *        tree.  This is used only when compaction is happening\n   * @param selectiveSplitThreshold if selective split is used, this will be the threshold used to decide which state splits to keep\n   * @param markFinalStates whether or not to make the state names (labels) of the final active states distinctive\n   */\n  public TreeBinarizer(HeadFinder hf, TreebankLanguagePack tlp,\n                       boolean insideFactor,\n                       boolean markovFactor, int markovOrder,\n                       boolean useWrappingLabels, boolean unaryAtTop,\n                       double selectiveSplitThreshold, boolean markFinalStates,\n                       boolean simpleLabels, boolean noRebinarization) {\n    this.hf = hf;\n    this.tlp = tlp;\n    this.tf = new LabeledScoredTreeFactory(new CategoryWordTagFactory());\n    this.insideFactor = insideFactor;\n    this.markovFactor = markovFactor;\n    this.markovOrder = markovOrder;\n    this.useWrappingLabels = useWrappingLabels;\n    this.unaryAtTop = unaryAtTop;\n    this.selectiveSplitThreshold = selectiveSplitThreshold;\n    this.markFinalStates = markFinalStates;\n    this.simpleLabels = simpleLabels;\n    this.noRebinarization = noRebinarization;\n  }","id":4718,"modified_method":"/** Build a custom binarizer for Trees.\n   *\n   * @param hf the HeadFinder to use in binarization\n   * @param tlp the TreebankLanguagePack to use\n   * @param insideFactor whether to do inside markovization\n   * @param markovFactor whether to markovize the binary rules\n   * @param markovOrder the markov order to use; only relevant with markovFactor=true\n   * @param useWrappingLabels whether to use state names (labels) that allow wrapping from right to left\n   * @param unaryAtTop Whether to actually materialize the unary that rewrites\n   *        a passive state to the active rule at the top of an original local\n   *        tree.  This is used only when compaction is happening\n   * @param selectiveSplitThreshold if selective split is used, this will be the threshold used to decide which state splits to keep\n   * @param markFinalStates whether or not to make the state names (labels) of the final active states distinctive\n   * @param noRebinarization if true, a node which already has exactly two children is not altered\n   */\n  public TreeBinarizer(HeadFinder hf, TreebankLanguagePack tlp,\n                       boolean insideFactor,\n                       boolean markovFactor, int markovOrder,\n                       boolean useWrappingLabels, boolean unaryAtTop,\n                       double selectiveSplitThreshold, boolean markFinalStates,\n                       boolean simpleLabels, boolean noRebinarization) {\n    this.hf = hf;\n    this.tlp = tlp;\n    this.tf = new LabeledScoredTreeFactory(new CategoryWordTagFactory());\n    this.insideFactor = insideFactor;\n    this.markovFactor = markovFactor;\n    this.markovOrder = markovOrder;\n    this.useWrappingLabels = useWrappingLabels;\n    this.unaryAtTop = unaryAtTop;\n    this.selectiveSplitThreshold = selectiveSplitThreshold;\n    this.markFinalStates = markFinalStates;\n    this.simpleLabels = simpleLabels;\n    this.noRebinarization = noRebinarization;\n  }","commit_id":"4ce4177fb062380901b653d0c324bad7ef38516e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n     * Initializes the resources needed for the tests.<p>\n     * \n     * @param cms the cms object\n     * \n     * @throws Exception if something goes wrong\n     */\n    public static synchronized void initResources(CmsObject cms) throws Exception {\n\n        cms.createResource(\"/folder1\", CmsResourceTypeFolder.getStaticTypeId());\n\n        // jsps\n        cms.createResource(\"/file1\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        cms.createResource(\"/folder1/file3\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        cms.createResource(\"/file3\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        cms.createResource(\"/folder1/file1\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        cms.createResource(\"/file5\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n\n        // plains\n        cms.createResource(\"/file2\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        cms.createResource(\"/folder1/file4\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        cms.createResource(\"/folder1/file2\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        cms.createResource(\"/file4\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n\n        CmsCategoryService service = CmsCategoryService.getInstance();\n        CmsCategory catBusiness = service.createCategory(\n            cms,\n            null,\n            \"business\",\n            \"business title\",\n            \"business description\");\n        CmsCategory catSports = service.createCategory(cms, null, \"sports\", \"sports title\", \"sports description\");\n\n        // business\n        service.addResourceToCategory(cms, \"/file1\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/file5\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file3\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/file4\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file4\", catBusiness.getPath());\n\n        // sports\n        service.addResourceToCategory(cms, \"/file3\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file1\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/file2\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file2\", catSports.getPath());\n    }","id":4719,"modified_method":"/**\n     * Initializes the resources needed for the tests.<p>\n     * \n     * @param cms the cms object\n     * \n     * @throws Exception if something goes wrong\n     */\n    public static synchronized void initResources(CmsObject cms) throws Exception {\n\n        synchronized (cms) {\n            cms.createResource(\"/folder1\", CmsResourceTypeFolder.getStaticTypeId());\n            cms.wait(100); // this is needed for testing the date sorting collector\n\n            // jsps\n            cms.createResource(\"/file1\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/folder1/file3\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/file3\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/folder1/file1\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/file5\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n\n            // plains\n            cms.createResource(\"/file2\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/folder1/file4\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/folder1/file2\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/file4\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        }\n        CmsCategoryService service = CmsCategoryService.getInstance();\n        CmsCategory catBusiness = service.createCategory(\n            cms,\n            null,\n            \"business\",\n            \"business title\",\n            \"business description\");\n        CmsCategory catSports = service.createCategory(cms, null, \"sports\", \"sports title\", \"sports description\");\n\n        // business\n        service.addResourceToCategory(cms, \"/file1\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/file5\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file3\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/file4\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file4\", catBusiness.getPath());\n\n        // sports\n        service.addResourceToCategory(cms, \"/file3\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file1\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/file2\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file2\", catSports.getPath());\n    }","commit_id":"7eb05c354a04bd04f97ffa4c95f97ee509f820a3","url":"https://github.com/alkacon/opencms-core"},{"original_method":"@Override\n    public void execute() {\n        if (accountName == null && email == null) {\n            throw new InvalidParameterValueException(\"Either accountName or email is required\");\n        }\n\n        CallContext.current().setEventDetails(\"Project id: \" + projectId + \"; accountName \" + accountName);\n        Project project = _projectService.addAccountToProject(getProjectId(), getAccountName(), getEmail());\n        if (project != null) {\n            ProjectResponse response = _responseGenerator.createProjectResponse(project);\n            response.setResponseName(getCommandName());\n            this.setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to add account to the project\");\n        }\n    }","id":4720,"modified_method":"@Override\n    public void execute() {\n        if (accountName == null && email == null) {\n            throw new InvalidParameterValueException(\"Either accountName or email is required\");\n        }\n\n        CallContext.current().setEventDetails(\"Project id: \" + projectId + \"; accountName \" + accountName);\n        boolean result = _projectService.addAccountToProject(getProjectId(), getAccountName(), getEmail());\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            this.setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to add account to the project\");\n        }\n    }","commit_id":"fd43cf151663c48fe29f97323490d53a7c0f9d5b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void execute() {\n        CallContext.current().setEventDetails(\"Project id: \" + projectId + \"; accountName \" + accountName);\n        Project project = _projectService.deleteAccountFromProject(projectId, accountName);\n        if (project != null) {\n            ProjectResponse response = _responseGenerator.createProjectResponse(project);\n            response.setResponseName(getCommandName());\n            this.setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to delete account from the project\");\n        }\n    }","id":4721,"modified_method":"@Override\n    public void execute() {\n        CallContext.current().setEventDetails(\"Project id: \" + projectId + \"; accountName \" + accountName);\n        boolean result = _projectService.deleteAccountFromProject(projectId, accountName);\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            this.setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to delete account from the project\");\n        }\n    }","commit_id":"fd43cf151663c48fe29f97323490d53a7c0f9d5b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public Project updateInvitation(long projectId, String accountName, String token, boolean accept) {\n        // TODO Auto-generated method stub\n        return null;\n    }","id":4722,"modified_method":"@Override\n    public boolean updateInvitation(long projectId, String accountName, String token, boolean accept) {\n        // TODO Auto-generated method stub\n        return false;\n    }","commit_id":"fd43cf151663c48fe29f97323490d53a7c0f9d5b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public Project deleteAccountFromProject(long projectId, long accountId) {\n        // TODO Auto-generated method stub\n        return null;\n    }","id":4723,"modified_method":"@Override\n    public boolean deleteAccountFromProject(long projectId, long accountId) {\n        // TODO Auto-generated method stub\n        return false;\n    }","commit_id":"fd43cf151663c48fe29f97323490d53a7c0f9d5b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public Project addAccountToProject(long projectId, String accountName, String email) {\n        // TODO Auto-generated method stub\n        return null;\n    }","id":4724,"modified_method":"@Override\n    public boolean addAccountToProject(long projectId, String accountName, String email) {\n        // TODO Auto-generated method stub\n        return false;\n    }","commit_id":"fd43cf151663c48fe29f97323490d53a7c0f9d5b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public Project deleteAccountFromProject(long projectId, String accountName) {\n        // TODO Auto-generated method stub\n        return null;\n    }","id":4725,"modified_method":"@Override\n    public boolean deleteAccountFromProject(long projectId, String accountName) {\n        // TODO Auto-generated method stub\n        return false;\n    }","commit_id":"fd43cf151663c48fe29f97323490d53a7c0f9d5b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_PROJECT_INVITATION_UPDATE, eventDescription = \"updating project invitation\", async = true)\n    public Project updateInvitation(final long projectId, String accountName, String token, final boolean accept) {\n        Account caller = CallContext.current().getCallingAccount();\n        Long accountId = null;\n        boolean result = true;\n\n        //if accountname and token are null, default accountname to caller's account name\n        if (accountName == null && token == null) {\n            accountName = caller.getAccountName();\n        }\n\n        //check that the project exists\n        final Project project = getProject(projectId);\n\n        if (project == null) {\n            throw new InvalidParameterValueException(\"Unable to find the project id=\" + projectId);\n        }\n\n        if (accountName != null) {\n            //check that account-to-remove exists\n            Account account = _accountMgr.getActiveAccountByName(accountName, project.getDomainId());\n            if (account == null) {\n                throw new InvalidParameterValueException(\"Unable to find account name=\" + accountName + \" in domain id=\" + project.getDomainId());\n            }\n\n            //verify permissions\n            _accountMgr.checkAccess(caller, null, true, account);\n\n            accountId = account.getId();\n        } else {\n            accountId = caller.getId();\n        }\n\n        //check that invitation exists\n        ProjectInvitationVO invite = null;\n        if (token == null) {\n            invite = _projectInvitationDao.findByAccountIdProjectId(accountId, projectId, ProjectInvitation.State.Pending);\n        } else {\n            invite = _projectInvitationDao.findPendingByTokenAndProjectId(token, projectId, ProjectInvitation.State.Pending);\n        }\n\n        if (invite != null) {\n            if (!_projectInvitationDao.isActive(invite.getId(), _invitationTimeOut) && accept) {\n                expireInvitation(invite);\n                throw new InvalidParameterValueException(\"Invitation is expired for account id=\" + accountName + \" to the project id=\" + projectId);\n            } else {\n\n                final ProjectInvitationVO inviteFinal = invite;\n                final Long accountIdFinal = accountId;\n                final String accountNameFinal = accountName;\n                result = Transaction.execute(new TransactionCallback<Boolean>() {\n                    @Override\n                    public Boolean doInTransaction(TransactionStatus status) {\n                        boolean result = true;\n\n                        ProjectInvitation.State newState = accept ? ProjectInvitation.State.Completed : ProjectInvitation.State.Declined;\n\n                        //update invitation\n                        s_logger.debug(\"Marking invitation \" + inviteFinal + \" with state \" + newState);\n                        inviteFinal.setState(newState);\n                        result = _projectInvitationDao.update(inviteFinal.getId(), inviteFinal);\n\n                        if (result && accept) {\n                            //check if account already exists for the project (was added before invitation got accepted)\n                            ProjectAccount projectAccount = _projectAccountDao.findByProjectIdAccountId(projectId, accountIdFinal);\n                            if (projectAccount != null) {\n                                s_logger.debug(\"Account \" + accountNameFinal + \" already added to the project id=\" + projectId);\n                            } else {\n                                assignAccountToProject(project, accountIdFinal, ProjectAccount.Role.Regular);\n                            }\n                        } else {\n                            s_logger.warn(\"Failed to update project invitation \" + inviteFinal + \" with state \" + newState);\n                        }\n\n                        return result;\n                    }\n                });\n            }\n        } else {\n            throw new InvalidParameterValueException(\"Unable to find invitation for account name=\" + accountName + \" to the project id=\" + projectId);\n        }\n\n        return result ? project : null;\n    }","id":4726,"modified_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_PROJECT_INVITATION_UPDATE, eventDescription = \"updating project invitation\", async = true)\n    public boolean updateInvitation(final long projectId, String accountName, String token, final boolean accept) {\n        Account caller = CallContext.current().getCallingAccount();\n        Long accountId = null;\n        boolean result = true;\n\n        //if accountname and token are null, default accountname to caller's account name\n        if (accountName == null && token == null) {\n            accountName = caller.getAccountName();\n        }\n\n        //check that the project exists\n        final Project project = getProject(projectId);\n\n        if (project == null) {\n            throw new InvalidParameterValueException(\"Unable to find the project id=\" + projectId);\n        }\n\n        if (accountName != null) {\n            //check that account-to-remove exists\n            Account account = _accountMgr.getActiveAccountByName(accountName, project.getDomainId());\n            if (account == null) {\n                throw new InvalidParameterValueException(\"Unable to find account name=\" + accountName + \" in domain id=\" + project.getDomainId());\n            }\n\n            //verify permissions\n            _accountMgr.checkAccess(caller, null, true, account);\n\n            accountId = account.getId();\n        } else {\n            accountId = caller.getId();\n        }\n\n        //check that invitation exists\n        ProjectInvitationVO invite = null;\n        if (token == null) {\n            invite = _projectInvitationDao.findByAccountIdProjectId(accountId, projectId, ProjectInvitation.State.Pending);\n        } else {\n            invite = _projectInvitationDao.findPendingByTokenAndProjectId(token, projectId, ProjectInvitation.State.Pending);\n        }\n\n        if (invite != null) {\n            if (!_projectInvitationDao.isActive(invite.getId(), _invitationTimeOut) && accept) {\n                expireInvitation(invite);\n                throw new InvalidParameterValueException(\"Invitation is expired for account id=\" + accountName + \" to the project id=\" + projectId);\n            } else {\n\n                final ProjectInvitationVO inviteFinal = invite;\n                final Long accountIdFinal = accountId;\n                final String accountNameFinal = accountName;\n                result = Transaction.execute(new TransactionCallback<Boolean>() {\n                    @Override\n                    public Boolean doInTransaction(TransactionStatus status) {\n                        boolean result = true;\n\n                        ProjectInvitation.State newState = accept ? ProjectInvitation.State.Completed : ProjectInvitation.State.Declined;\n\n                        //update invitation\n                        s_logger.debug(\"Marking invitation \" + inviteFinal + \" with state \" + newState);\n                        inviteFinal.setState(newState);\n                        result = _projectInvitationDao.update(inviteFinal.getId(), inviteFinal);\n\n                        if (result && accept) {\n                            //check if account already exists for the project (was added before invitation got accepted)\n                            ProjectAccount projectAccount = _projectAccountDao.findByProjectIdAccountId(projectId, accountIdFinal);\n                            if (projectAccount != null) {\n                                s_logger.debug(\"Account \" + accountNameFinal + \" already added to the project id=\" + projectId);\n                            } else {\n                                assignAccountToProject(project, accountIdFinal, ProjectAccount.Role.Regular);\n                            }\n                        } else {\n                            s_logger.warn(\"Failed to update project invitation \" + inviteFinal + \" with state \" + newState);\n                        }\n\n                        return result;\n                    }\n                });\n            }\n        } else {\n            throw new InvalidParameterValueException(\"Unable to find invitation for account name=\" + accountName + \" to the project id=\" + projectId);\n        }\n\n        return result;\n    }","commit_id":"fd43cf151663c48fe29f97323490d53a7c0f9d5b","url":"https://github.com/apache/cloudstack"},{"original_method":"private Project inviteAccountToProject(Project project, Account account, String email) {\n        if (account != null) {\n            if (createAccountInvitation(project, account.getId()) != null) {\n                return project;\n            } else {\n                s_logger.warn(\"Failed to generate invitation for account \" + account.getAccountName() + \" to project id=\" + project);\n                return null;\n            }\n        }\n\n        if (email != null) {\n            //generate the token\n            String token = generateToken(10);\n            if (generateTokenBasedInvitation(project, email, token) != null) {\n                return project;\n            } else {\n                s_logger.warn(\"Failed to generate invitation for email \" + email + \" to project id=\" + project);\n                return null;\n            }\n        }\n\n        return null;\n    }","id":4727,"modified_method":"private boolean inviteAccountToProject(Project project, Account account, String email) {\n        if (account != null) {\n            if (createAccountInvitation(project, account.getId()) != null) {\n                return true;\n            } else {\n                s_logger.warn(\"Failed to generate invitation for account \" + account.getAccountName() + \" to project id=\" + project);\n                return false;\n            }\n        }\n\n        if (email != null) {\n            //generate the token\n            String token = generateToken(10);\n            if (generateTokenBasedInvitation(project, email, token) != null) {\n                return true;\n            } else {\n                s_logger.warn(\"Failed to generate invitation for email \" + email + \" to project id=\" + project);\n                return false;\n            }\n        }\n\n        return false;\n    }","commit_id":"fd43cf151663c48fe29f97323490d53a7c0f9d5b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    @ActionEvent(eventType = EventTypes.EVENT_PROJECT_ACCOUNT_REMOVE, eventDescription = \"removing account from project\", async = true)\n    public Project deleteAccountFromProject(long projectId, String accountName) {\n        Account caller = CallContext.current().getCallingAccount();\n\n        //check that the project exists\n        Project project = getProject(projectId);\n\n        if (project == null) {\n            InvalidParameterValueException ex = new InvalidParameterValueException(\"Unable to find project with specified id\");\n            ex.addProxyObject(String.valueOf(projectId), \"projectId\");\n            throw ex;\n        }\n\n        //check that account-to-remove exists\n        Account account = _accountMgr.getActiveAccountByName(accountName, project.getDomainId());\n        if (account == null) {\n            InvalidParameterValueException ex =\n                new InvalidParameterValueException(\"Unable to find account name=\" + accountName + \" in domain id=\" + project.getDomainId());\n            DomainVO domain = ApiDBUtils.findDomainById(project.getDomainId());\n            String domainUuid = String.valueOf(project.getDomainId());\n            if (domain != null) {\n                domainUuid = domain.getUuid();\n            }\n            ex.addProxyObject(domainUuid, \"domainId\");\n            throw ex;\n        }\n\n        //verify permissions\n        _accountMgr.checkAccess(caller, AccessType.ModifyProject, true, _accountMgr.getAccount(project.getProjectAccountId()));\n\n        //Check if the account exists in the project\n        ProjectAccount projectAccount = _projectAccountDao.findByProjectIdAccountId(projectId, account.getId());\n        if (projectAccount == null) {\n            InvalidParameterValueException ex = new InvalidParameterValueException(\"Account \" + accountName + \" is not assigned to the project with specified id\");\n            // Use the projectVO object and not the projectAccount object to inject the projectId.\n            ex.addProxyObject(project.getUuid(), \"projectId\");\n            throw ex;\n        }\n\n        //can't remove the owner of the project\n        if (projectAccount.getAccountRole() == Role.Admin) {\n            InvalidParameterValueException ex =\n                new InvalidParameterValueException(\"Unable to delete account \" + accountName +\n                    \" from the project with specified id as the account is the owner of the project\");\n            ex.addProxyObject(project.getUuid(), \"projectId\");\n            throw ex;\n        }\n\n        return deleteAccountFromProject(projectId, account.getId());\n    }","id":4728,"modified_method":"@Override\n    @ActionEvent(eventType = EventTypes.EVENT_PROJECT_ACCOUNT_REMOVE, eventDescription = \"removing account from project\", async = true)\n    public boolean deleteAccountFromProject(long projectId, String accountName) {\n        Account caller = CallContext.current().getCallingAccount();\n\n        //check that the project exists\n        Project project = getProject(projectId);\n\n        if (project == null) {\n            InvalidParameterValueException ex = new InvalidParameterValueException(\"Unable to find project with specified id\");\n            ex.addProxyObject(String.valueOf(projectId), \"projectId\");\n            throw ex;\n        }\n\n        //check that account-to-remove exists\n        Account account = _accountMgr.getActiveAccountByName(accountName, project.getDomainId());\n        if (account == null) {\n            InvalidParameterValueException ex =\n                new InvalidParameterValueException(\"Unable to find account name=\" + accountName + \" in domain id=\" + project.getDomainId());\n            DomainVO domain = ApiDBUtils.findDomainById(project.getDomainId());\n            String domainUuid = String.valueOf(project.getDomainId());\n            if (domain != null) {\n                domainUuid = domain.getUuid();\n            }\n            ex.addProxyObject(domainUuid, \"domainId\");\n            throw ex;\n        }\n\n        //verify permissions\n        _accountMgr.checkAccess(caller, AccessType.ModifyProject, true, _accountMgr.getAccount(project.getProjectAccountId()));\n\n        //Check if the account exists in the project\n        ProjectAccount projectAccount = _projectAccountDao.findByProjectIdAccountId(projectId, account.getId());\n        if (projectAccount == null) {\n            InvalidParameterValueException ex = new InvalidParameterValueException(\"Account \" + accountName + \" is not assigned to the project with specified id\");\n            // Use the projectVO object and not the projectAccount object to inject the projectId.\n            ex.addProxyObject(project.getUuid(), \"projectId\");\n            throw ex;\n        }\n\n        //can't remove the owner of the project\n        if (projectAccount.getAccountRole() == Role.Admin) {\n            InvalidParameterValueException ex =\n                new InvalidParameterValueException(\"Unable to delete account \" + accountName +\n                    \" from the project with specified id as the account is the owner of the project\");\n            ex.addProxyObject(project.getUuid(), \"projectId\");\n            throw ex;\n        }\n\n        return deleteAccountFromProject(projectId, account.getId());\n    }","commit_id":"fd43cf151663c48fe29f97323490d53a7c0f9d5b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    @DB\n    public Project deleteAccountFromProject(final long projectId, final long accountId) {\n        return Transaction.execute(new TransactionCallback<Project>() {\n            @Override\n            public Project doInTransaction(TransactionStatus status) {\n                boolean success = true;\n\n                //remove account\n                ProjectAccountVO projectAccount = _projectAccountDao.findByProjectIdAccountId(projectId, accountId);\n                success = _projectAccountDao.remove(projectAccount.getId());\n\n                //remove all invitations for account\n                if (success) {\n                    s_logger.debug(\"Removed account \" + accountId + \" from project \" + projectId + \" , cleaning up old invitations for account/project...\");\n                    ProjectInvitation invite = _projectInvitationDao.findByAccountIdProjectId(accountId, projectId);\n                    if (invite != null) {\n                        success = success && _projectInvitationDao.remove(invite.getId());\n                    }\n                }\n\n                return success ? getProject(projectAccount.getProjectId()) : null;\n            }\n        });\n    }","id":4729,"modified_method":"@Override\n    @DB\n    public boolean deleteAccountFromProject(final long projectId, final long accountId) {\n        return Transaction.execute(new TransactionCallback<Boolean>() {\n            @Override\n            public Boolean doInTransaction(TransactionStatus status) {\n                boolean success = true;\n\n                //remove account\n                ProjectAccountVO projectAccount = _projectAccountDao.findByProjectIdAccountId(projectId, accountId);\n                success = _projectAccountDao.remove(projectAccount.getId());\n\n                //remove all invitations for account\n                if (success) {\n                    s_logger.debug(\"Removed account \" + accountId + \" from project \" + projectId + \" , cleaning up old invitations for account/project...\");\n                    ProjectInvitation invite = _projectInvitationDao.findByAccountIdProjectId(accountId, projectId);\n                    if (invite != null) {\n                        success = success && _projectInvitationDao.remove(invite.getId());\n                    }\n                }\n\n                return success;\n            }\n        });\n    }","commit_id":"fd43cf151663c48fe29f97323490d53a7c0f9d5b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    @ActionEvent(eventType = EventTypes.EVENT_PROJECT_ACCOUNT_ADD, eventDescription = \"adding account to project\", async = true)\n    public Project addAccountToProject(long projectId, String accountName, String email) {\n        Account caller = CallContext.current().getCallingAccount();\n\n        //check that the project exists\n        Project project = getProject(projectId);\n\n        if (project == null) {\n            InvalidParameterValueException ex = new InvalidParameterValueException(\"Unable to find project with specified id\");\n            ex.addProxyObject(String.valueOf(projectId), \"projectId\");\n            throw ex;\n        }\n\n        //User can be added to Active project only\n        if (project.getState() != Project.State.Active) {\n            InvalidParameterValueException ex =\n                new InvalidParameterValueException(\"Can't add account to the specified project id in state=\" + project.getState() + \" as it's no longer active\");\n            ex.addProxyObject(project.getUuid(), \"projectId\");\n            throw ex;\n        }\n\n        //check that account-to-add exists\n        Account account = null;\n        if (accountName != null) {\n            account = _accountMgr.getActiveAccountByName(accountName, project.getDomainId());\n            if (account == null) {\n                InvalidParameterValueException ex = new InvalidParameterValueException(\"Unable to find account name=\" + accountName + \" in specified domain id\");\n                DomainVO domain = ApiDBUtils.findDomainById(project.getDomainId());\n                String domainUuid = String.valueOf(project.getDomainId());\n                if (domain != null) {\n                    domainUuid = domain.getUuid();\n                }\n                ex.addProxyObject(domainUuid, \"domainId\");\n                throw ex;\n            }\n\n            //verify permissions - only project owner can assign\n            _accountMgr.checkAccess(caller, AccessType.ModifyProject, true, _accountMgr.getAccount(project.getProjectAccountId()));\n\n            //Check if the account already added to the project\n            ProjectAccount projectAccount = _projectAccountDao.findByProjectIdAccountId(projectId, account.getId());\n            if (projectAccount != null) {\n                s_logger.debug(\"Account \" + accountName + \" already added to the project id=\" + projectId);\n                return project;\n            }\n        }\n\n        if (_invitationRequired) {\n            return inviteAccountToProject(project, account, email);\n        } else {\n            if (account == null) {\n                throw new InvalidParameterValueException(\"Account information is required for assigning account to the project\");\n            }\n            if (assignAccountToProject(project, account.getId(), ProjectAccount.Role.Regular) != null) {\n                return project;\n            } else {\n                s_logger.warn(\"Failed to add account \" + accountName + \" to project id=\" + projectId);\n                return null;\n            }\n        }\n    }","id":4730,"modified_method":"@Override\n    @ActionEvent(eventType = EventTypes.EVENT_PROJECT_ACCOUNT_ADD, eventDescription = \"adding account to project\", async = true)\n    public boolean addAccountToProject(long projectId, String accountName, String email) {\n        Account caller = CallContext.current().getCallingAccount();\n\n        //check that the project exists\n        Project project = getProject(projectId);\n\n        if (project == null) {\n            InvalidParameterValueException ex = new InvalidParameterValueException(\"Unable to find project with specified id\");\n            ex.addProxyObject(String.valueOf(projectId), \"projectId\");\n            throw ex;\n        }\n\n        //User can be added to Active project only\n        if (project.getState() != Project.State.Active) {\n            InvalidParameterValueException ex =\n                new InvalidParameterValueException(\"Can't add account to the specified project id in state=\" + project.getState() + \" as it's no longer active\");\n            ex.addProxyObject(project.getUuid(), \"projectId\");\n            throw ex;\n        }\n\n        //check that account-to-add exists\n        Account account = null;\n        if (accountName != null) {\n            account = _accountMgr.getActiveAccountByName(accountName, project.getDomainId());\n            if (account == null) {\n                InvalidParameterValueException ex = new InvalidParameterValueException(\"Unable to find account name=\" + accountName + \" in specified domain id\");\n                DomainVO domain = ApiDBUtils.findDomainById(project.getDomainId());\n                String domainUuid = String.valueOf(project.getDomainId());\n                if (domain != null) {\n                    domainUuid = domain.getUuid();\n                }\n                ex.addProxyObject(domainUuid, \"domainId\");\n                throw ex;\n            }\n\n            //verify permissions - only project owner can assign\n            _accountMgr.checkAccess(caller, AccessType.ModifyProject, true, _accountMgr.getAccount(project.getProjectAccountId()));\n\n            //Check if the account already added to the project\n            ProjectAccount projectAccount = _projectAccountDao.findByProjectIdAccountId(projectId, account.getId());\n            if (projectAccount != null) {\n                s_logger.debug(\"Account \" + accountName + \" already added to the project id=\" + projectId);\n                return true;\n            }\n        }\n\n        if (_invitationRequired) {\n            return inviteAccountToProject(project, account, email);\n        } else {\n            if (account == null) {\n                throw new InvalidParameterValueException(\"Account information is required for assigning account to the project\");\n            }\n            if (assignAccountToProject(project, account.getId(), ProjectAccount.Role.Regular) != null) {\n                return true;\n            } else {\n                s_logger.warn(\"Failed to add account \" + accountName + \" to project id=\" + projectId);\n                return false;\n            }\n        }\n    }","commit_id":"fd43cf151663c48fe29f97323490d53a7c0f9d5b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void execute() {\n        CallContext.current().setEventDetails(\"Project id: \" + projectId + \"; accountName \" + accountName + \"; accept \" + getAccept());\n        Project project = _projectService.updateInvitation(projectId, accountName, token, getAccept());\n        if (project != null) {\n            ProjectResponse response = _responseGenerator.createProjectResponse(project);\n            response.setResponseName(getCommandName());\n            this.setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to join the project\");\n        }\n    }","id":4731,"modified_method":"@Override\n    public void execute() {\n        CallContext.current().setEventDetails(\"Project id: \" + projectId + \"; accountName \" + accountName + \"; accept \" + getAccept());\n        boolean result = _projectService.updateInvitation(projectId, accountName, token, getAccept());\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            this.setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to join the project\");\n        }\n    }","commit_id":"fd43cf151663c48fe29f97323490d53a7c0f9d5b","url":"https://github.com/apache/cloudstack"},{"original_method":"public static boolean isInExcludedPackage(@NotNull final PsiClass psiClass) {\n    final String name = psiClass.getQualifiedName();\n    if (name == null) return false;\n    CodeInsightSettings cis = CodeInsightSettings.getInstance();\n    boolean isExcluded = false;\n    //noinspection ForLoopReplaceableByForEach\n    for(int i=0; i<cis.EXCLUDED_PACKAGES.length; i++) {\n      if (name.startsWith(cis.EXCLUDED_PACKAGES [i])) {\n        isExcluded = true;\n      }\n    }\n    return isExcluded;\n  }","id":4732,"modified_method":"public static boolean isInExcludedPackage(@NotNull final PsiClass psiClass) {\n    final String name = psiClass.getQualifiedName();\n    if (name == null) return false;\n    CodeInsightSettings cis = CodeInsightSettings.getInstance();\n    boolean isExcluded = false;\n    for (String packages : cis.EXCLUDED_PACKAGES) {\n      if (name.startsWith(packages)) {\n        isExcluded = true;\n      }\n    }\n    return isExcluded;\n  }","commit_id":"310d1ffd0202c5d97f810f80e71011fa678cbff1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void addMemberInfo(PsiMember[] members,\n                                    PsiExpression expression,\n                                    List<ExpectedTypeInfo[]> types,\n                                    PsiElementFactory factory) {\n    final StatisticsManager statisticsManager = StatisticsManager.getInstance();\n    Arrays.sort(members, new Comparator<PsiMember>() {\n      public int compare(final PsiMember m1, final PsiMember m2) {\n        int result = statisticsManager.getMemberUseCount(null, m2) - statisticsManager.getMemberUseCount(null, m1);\n        if (result != 0) return result;\n        final PsiClass aClass = m1.getContainingClass();\n        final PsiClass bClass = m2.getContainingClass();\n        if (aClass == null || bClass == null) return 0;\n        return statisticsManager.getMemberUseCount(null, bClass) - statisticsManager.getMemberUseCount(null, aClass);\n      }\n    });\n\n    List<ExpectedTypeInfo> l = new ArrayList<ExpectedTypeInfo>();\n    PsiManager manager = expression.getManager();\n    ExpectedTypesProvider provider = ExpectedTypesProvider.getInstance(manager.getProject());\n    for (int i = 0; i < Math.min(MAX_GUESSED_MEMBERS_COUNT, members.length); i++) {\n      PsiMember member = members[i];\n      PsiClass aClass = member.getContainingClass();\n      if (aClass instanceof PsiAnonymousClass) continue;\n\n      if (manager.getResolveHelper().isAccessible(aClass, expression, null)) {\n        PsiClassType type;\n        final PsiElement pparent = expression.getParent().getParent();\n        if (pparent instanceof PsiMethodCallExpression) {\n\n          PsiSubstitutor substitutor = ExpectedTypeUtil.inferSubstitutor((PsiMethod)member, (PsiMethodCallExpression)pparent, false);\n          if (substitutor == null) {\n            type = factory.createType(aClass);\n          } else {\n            type = factory.createType(aClass, substitutor);\n          }\n        }\n        else {\n          type = factory.createType(aClass);\n        }\n        l.add(provider.createInfo(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type, TailType.NONE.getOldTailType()));\n      }\n    }\n\n    if (!l.isEmpty()) {\n      types.add(l.toArray(new ExpectedTypeInfo[l.size()]));\n    }\n  }","id":4733,"modified_method":"private static void addMemberInfo(PsiMember[] members,\n                                    PsiExpression expression,\n                                    List<ExpectedTypeInfo[]> types,\n                                    PsiElementFactory factory) {\n    final StatisticsManager statisticsManager = StatisticsManager.getInstance();\n    Arrays.sort(members, new Comparator<PsiMember>() {\n      public int compare(final PsiMember m1, final PsiMember m2) {\n        int result = statisticsManager.getMemberUseCount(null, m2) - statisticsManager.getMemberUseCount(null, m1);\n        if (result != 0) return result;\n        final PsiClass aClass = m1.getContainingClass();\n        final PsiClass bClass = m2.getContainingClass();\n        if (aClass == null || bClass == null) return 0;\n        return statisticsManager.getMemberUseCount(null, bClass) - statisticsManager.getMemberUseCount(null, aClass);\n      }\n    });\n\n    List<ExpectedTypeInfo> l = new ArrayList<ExpectedTypeInfo>();\n    PsiManager manager = expression.getManager();\n    ExpectedTypesProvider provider = ExpectedTypesProvider.getInstance(manager.getProject());\n    for (int i = 0; i < Math.min(MAX_GUESSED_MEMBERS_COUNT, members.length); i++) {\n      ProgressManager.getInstance().checkCanceled();\n      PsiMember member = members[i];\n      PsiClass aClass = member.getContainingClass();\n      if (aClass instanceof PsiAnonymousClass) continue;\n\n      if (manager.getResolveHelper().isAccessible(aClass, expression, null)) {\n        PsiClassType type;\n        final PsiElement pparent = expression.getParent().getParent();\n        if (pparent instanceof PsiMethodCallExpression) {\n\n          PsiSubstitutor substitutor = ExpectedTypeUtil.inferSubstitutor((PsiMethod)member, (PsiMethodCallExpression)pparent, false);\n          if (substitutor == null) {\n            type = factory.createType(aClass);\n          } else {\n            type = factory.createType(aClass, substitutor);\n          }\n        }\n        else {\n          type = factory.createType(aClass);\n        }\n        l.add(provider.createInfo(type, ExpectedTypeInfo.TYPE_OR_SUBTYPE, type, TailType.NONE.getOldTailType()));\n      }\n    }\n\n    if (!l.isEmpty()) {\n      types.add(l.toArray(new ExpectedTypeInfo[l.size()]));\n    }\n  }","commit_id":"310d1ffd0202c5d97f810f80e71011fa678cbff1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public StaticImportMethodFix(PsiMethodCallExpression methodCallExpression) {\n    myMethodCall = methodCallExpression;\n  }","id":4734,"modified_method":"public StaticImportMethodFix(PsiMethodCallExpression methodCallExpression) {\n    myMethodCall = methodCallExpression;\n    candidates = getMethodsToImport();\n  }","commit_id":"310d1ffd0202c5d97f810f80e71011fa678cbff1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private List<PsiMethod> getMethodsToImport(PsiManager manager) {\n    PsiShortNamesCache cache = manager.getShortNamesCache();\n    PsiReferenceExpression reference = myMethodCall.getMethodExpression();\n    PsiExpressionList argumentList = myMethodCall.getArgumentList();\n    String name = reference.getReferenceName();\n    ArrayList<PsiMethod> list = new ArrayList<PsiMethod>();\n    if (name == null) return list;\n    GlobalSearchScope scope = myMethodCall.getResolveScope();\n    PsiMethod[] methods = cache.getMethodsByName(name, scope);\n    ArrayList<PsiMethod> applicableList = new ArrayList<PsiMethod>();\n    for (PsiMethod method : methods) {\n      PsiClass aClass = method.getContainingClass();\n      if (aClass != null && CompletionUtil.isInExcludedPackage(aClass)) continue;\n      if (!method.hasModifierProperty(PsiModifier.STATIC)) continue;\n      PsiFile file = method.getContainingFile();\n      if (file instanceof PsiJavaFile) {\n        if (((PsiJavaFile)file).getPackageName().length() != 0) { //do not show methods from default package\n          if (PsiUtil.isAccessible(method, myMethodCall, aClass)) {\n            list.add(method);\n            if (PsiUtil.isApplicable(method, PsiSubstitutor.EMPTY, argumentList)) {\n              applicableList.add(method);\n            }\n          }\n        }\n      }\n    }\n    return applicableList.isEmpty() ? list : applicableList;\n  }","id":4735,"modified_method":"@NotNull\n  private List<PsiMethod> getMethodsToImport() {\n    PsiShortNamesCache cache = myMethodCall.getManager().getShortNamesCache();\n    PsiReferenceExpression reference = myMethodCall.getMethodExpression();\n    PsiExpressionList argumentList = myMethodCall.getArgumentList();\n    String name = reference.getReferenceName();\n    ArrayList<PsiMethod> list = new ArrayList<PsiMethod>();\n    if (name == null) return list;\n    GlobalSearchScope scope = myMethodCall.getResolveScope();\n    PsiMethod[] methods = cache.getMethodsByName(name, scope);\n    ArrayList<PsiMethod> applicableList = new ArrayList<PsiMethod>();\n    for (PsiMethod method : methods) {\n      ProgressManager.getInstance().checkCanceled();\n      PsiClass aClass = method.getContainingClass();\n      if (aClass != null && CompletionUtil.isInExcludedPackage(aClass)) continue;\n      if (!method.hasModifierProperty(PsiModifier.STATIC)) continue;\n      PsiFile file = method.getContainingFile();\n      if (file instanceof PsiJavaFile\n          //do not show methods from default package\n          && ((PsiJavaFile)file).getPackageName().length() != 0\n          && PsiUtil.isAccessible(method, myMethodCall, aClass)) {\n        list.add(method);\n        if (PsiUtil.isApplicable(method, PsiSubstitutor.EMPTY, argumentList)) {\n          applicableList.add(method);\n        }\n      }\n    }\n    return applicableList.isEmpty() ? list : applicableList;\n  }","commit_id":"310d1ffd0202c5d97f810f80e71011fa678cbff1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isAvailable(Project project, Editor editor, PsiFile file) {\n    if (LanguageLevel.JDK_1_5.compareTo(PsiUtil.getLanguageLevel(file)) > 0) return false;\n    if (myMethodCall == null || !myMethodCall.isValid()) return false;\n    if (!file.getManager().isInProject(file)) return false;\n\n    PsiManager manager = file.getManager();\n    if (myMethodCall.getMethodExpression().isQualified()) {\n      // TODO[cdr]: review\n      return false;\n    }\n\n    candidates = getMethodsToImport(manager);\n    return !candidates.isEmpty();\n  }","id":4736,"modified_method":"public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) {\n    return LanguageLevel.JDK_1_5.compareTo(PsiUtil.getLanguageLevel(file)) <= 0\n           && myMethodCall != null \n           && myMethodCall.isValid()\n           && file.getManager().isInProject(file)\n           && !candidates.isEmpty()\n      ;\n  }","commit_id":"310d1ffd0202c5d97f810f80e71011fa678cbff1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean isAvailable(@NotNull Project project, Editor editor, @NotNull PsiFile file) {\n    if (!myRef.isValid()) {\n      return false;\n    }\n    PsiManager manager = file.getManager();\n    if (!manager.isInProject(file)) {\n      return false;\n    }\n    if (getClassesToImport().isEmpty()) {\n      return false;\n    }\n    return true;\n  }","id":4737,"modified_method":"@Override\n  public boolean isAvailable(@NotNull Project project, Editor editor, @NotNull PsiFile file) {\n    if (!myRef.isValid()) {\n      return false;\n    }\n    PsiManager manager = file.getManager();\n    return manager.isInProject(file) && !getClassesToImport().isEmpty();\n  }","commit_id":"dda0ee73b46f92952e1b22c13aa8c9ff1e1df003","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Result doFix(@NotNull final Editor editor, boolean doShow, final boolean allowCaretNearRef) {\n    List<PsiClass> classesToImport = getClassesToImport();\n    if (classesToImport.isEmpty()) return Result.POPUP_NOT_SHOWN;\n\n    try {\n      String name = getQualifiedName(myRef);\n      if (name != null) {\n        Pattern pattern = Pattern.compile(DaemonCodeAnalyzerSettings.getInstance().NO_AUTO_IMPORT_PATTERN);\n        Matcher matcher = pattern.matcher(name);\n        if (matcher.matches()) {\n          return Result.POPUP_NOT_SHOWN;\n        }\n      }\n    }\n    catch (PatternSyntaxException e) {\n      //ignore\n    }\n    final PsiFile psiFile = myRef.getContainingFile();\n    if (classesToImport.size() > 1) {\n      reduceSuggestedClassesBasedOnDependencyRuleViolation(psiFile, classesToImport);\n    }\n    PsiClass[] classes = classesToImport.toArray(new PsiClass[classesToImport.size()]);\n    final Project project = myRef.getProject();\n    CodeInsightUtil.sortIdenticalShortNameClasses(classes, myRef);\n\n    final QuestionAction action = createAddImportAction(classes, project, editor);\n\n    DaemonCodeAnalyzerImpl codeAnalyzer = (DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(project);\n\n    boolean canImportHere = true;\n\n    if (classes.length == 1\n        && (canImportHere = canImportHere(allowCaretNearRef, editor, psiFile, classes[0].getName()))\n        && (JspPsiUtil.isInJspFile(psiFile) ?\n            CodeInsightSettings.getInstance().JSP_ADD_UNAMBIGIOUS_IMPORTS_ON_THE_FLY :\n            CodeInsightSettings.getInstance().ADD_UNAMBIGIOUS_IMPORTS_ON_THE_FLY)\n        && (ApplicationManager.getApplication().isUnitTestMode() || codeAnalyzer.canChangeFileSilently(psiFile))\n        && !autoImportWillInsertUnexpectedCharacters(classes[0])\n      ) {\n      CommandProcessor.getInstance().runUndoTransparentAction(new Runnable() {\n        @Override\n        public void run() {\n          action.execute();\n        }\n      });\n      return Result.CLASS_AUTO_IMPORTED;\n    }\n\n    if (doShow && canImportHere) {\n      String hintText = ShowAutoImportPass.getMessage(classes.length > 1, classes[0].getQualifiedName());\n      if (!ApplicationManager.getApplication().isUnitTestMode() && !HintManager.getInstance().hasShownHintsThatWillHideByOtherHint(true)) {\n        HintManager.getInstance().showQuestionHint(editor, hintText, myRef.getTextOffset(),\n                                                                      myRef.getTextRange().getEndOffset(), action);\n      }\n      return Result.POPUP_SHOWN;\n    }\n    return Result.POPUP_NOT_SHOWN;\n  }","id":4738,"modified_method":"public Result doFix(@NotNull final Editor editor, boolean doShow, final boolean allowCaretNearRef) {\n    List<PsiClass> classesToImport = getClassesToImport();\n    if (classesToImport.isEmpty()) return Result.POPUP_NOT_SHOWN;\n\n    try {\n      String name = getQualifiedName(myRef);\n      if (name != null) {\n        Pattern pattern = Pattern.compile(DaemonCodeAnalyzerSettings.getInstance().NO_AUTO_IMPORT_PATTERN);\n        Matcher matcher = pattern.matcher(name);\n        if (matcher.matches()) {\n          return Result.POPUP_NOT_SHOWN;\n        }\n      }\n    }\n    catch (PatternSyntaxException e) {\n      //ignore\n    }\n    final PsiFile psiFile = myRef.getContainingFile();\n    if (classesToImport.size() > 1) {\n      reduceSuggestedClassesBasedOnDependencyRuleViolation(psiFile, classesToImport);\n    }\n    PsiClass[] classes = classesToImport.toArray(new PsiClass[classesToImport.size()]);\n    final Project project = myRef.getProject();\n    CodeInsightUtil.sortIdenticalShortNameClasses(classes, myRef);\n\n    final QuestionAction action = createAddImportAction(classes, project, editor);\n\n    DaemonCodeAnalyzerImpl codeAnalyzer = (DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(project);\n\n    boolean canImportHere = true;\n\n    if (classes.length == 1\n        && (canImportHere = canImportHere(allowCaretNearRef, editor, psiFile, classes[0].getName()))\n        && (JspPsiUtil.isInJspFile(psiFile) ?\n            CodeInsightSettings.getInstance().JSP_ADD_UNAMBIGIOUS_IMPORTS_ON_THE_FLY :\n            CodeInsightSettings.getInstance().ADD_UNAMBIGIOUS_IMPORTS_ON_THE_FLY)\n        && (ApplicationManager.getApplication().isUnitTestMode() || codeAnalyzer.canChangeFileSilently(psiFile))\n        && !autoImportWillInsertUnexpectedCharacters(classes[0])\n        && !LaterInvocator.isInModalContext()\n      ) {\n      CommandProcessor.getInstance().runUndoTransparentAction(new Runnable() {\n        @Override\n        public void run() {\n          action.execute();\n        }\n      });\n      return Result.CLASS_AUTO_IMPORTED;\n    }\n\n    if (doShow && canImportHere) {\n      String hintText = ShowAutoImportPass.getMessage(classes.length > 1, classes[0].getQualifiedName());\n      if (!ApplicationManager.getApplication().isUnitTestMode() && !HintManager.getInstance().hasShownHintsThatWillHideByOtherHint(true)) {\n        HintManager.getInstance().showQuestionHint(editor, hintText, myRef.getTextOffset(),\n                                                                      myRef.getTextRange().getEndOffset(), action);\n      }\n      return Result.POPUP_SHOWN;\n    }\n    return Result.POPUP_NOT_SHOWN;\n  }","commit_id":"dda0ee73b46f92952e1b22c13aa8c9ff1e1df003","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void assertStructureEqual(PsiDirectory root, String expected, int maxRowCount, AbstractTreeStructure structure) {\n    assertNotNull(root);\n    PsiDirectoryNode rootNode = new PsiDirectoryNode(myProject, root, (ViewSettings)structure);\n    ProjectViewTestUtil.assertStructureEqual(myStructure, expected, maxRowCount, PlatformTestUtil.createComparator(myPrintInfo), rootNode, myPrintInfo);\n  }","id":4739,"modified_method":"private void assertStructureEqual(PsiDirectory root, String expected, int maxRowCount, AbstractProjectTreeStructure structure) {\n    assertNotNull(root);\n    PsiDirectoryNode rootNode = new PsiDirectoryNode(myProject, root, structure);\n    assertStructureEqual(expected, maxRowCount, rootNode);\n  }","commit_id":"e9ab28ff71db366b316eb7408457e202ef047583","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testNoDuplicateModules() {\n    VirtualFile mainModuleRoot = ModuleRootManager.getInstance(myModule).getContentRoots()[0];\n\n    PsiTestUtil.addExcludedRoot(myModule, mainModuleRoot.findFileByRelativePath(\"src/com/package1/p2\"));\n\n    Module module = createModule(\"nested_module\");\n    ModuleManagerImpl.getInstanceImpl(myProject).setModuleGroupPath(module, new String[]{\"modules\"});\n    PsiTestUtil.addContentRoot(module, mainModuleRoot.findFileByRelativePath(\"src/com/package1/p2/p3\"));\n\n    TestProjectTreeStructure structure = new TestProjectTreeStructure(myProject, getTestRootDisposable());\n    structure.setShowLibraryContents(false);\n\n    String structureContent = PlatformTestUtil.print(structure, structure.getRootElement(), 0, null, 10, ' ', myPrintInfo).toString();\n\n    Assert.assertFalse(structureContent.contains(\"modules\"));\n    assertEquals(\"Project\\n\" +\n                 \" noDuplicateModules\\n\" +\n                 \"  src\\n\" +\n                 \"   com\\n\" +\n                 \"    package1\\n\" +\n                 \"     Test.java\\n\" +\n                 \" nested_module.iml\\n\" +\n                 \" testNoDuplicateModules.iml\\n\",\n                 structureContent);\n  }","id":4740,"modified_method":"public void testNoDuplicateModules() {\n    VirtualFile mainModuleRoot = ModuleRootManager.getInstance(myModule).getContentRoots()[0];\n\n    PsiTestUtil.addExcludedRoot(myModule, mainModuleRoot.findFileByRelativePath(\"src/com/package1/p2\"));\n\n    Module module = createModule(\"nested_module\");\n    ModuleManagerImpl.getInstanceImpl(myProject).setModuleGroupPath(module, new String[]{\"modules\"});\n    PsiTestUtil.addContentRoot(module, mainModuleRoot.findFileByRelativePath(\"src/com/package1/p2/p3\"));\n\n    myStructure.setShowLibraryContents(false);\n    myStructure.hideExcludedFiles();\n\n    assertStructureEqual(\"Project\\n\" +\n                         \" nested_module.iml\\n\" +\n                         \" noDuplicateModules\\n\" +\n                         \"  src\\n\" +\n                         \"   com\\n\" +\n                         \"    package1\\n\" +\n                         \"     Test.java\\n\" +\n                         \" testNoDuplicateModules.iml\\n\");\n  }","commit_id":"e9ab28ff71db366b316eb7408457e202ef047583","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean shouldBeShown(VirtualFile dir, ViewSettings settings) {\n    DirectoryInfo directoryInfo = myIndex.getInfoForFile(dir);\n    if (directoryInfo.isInProject()) return true;\n\n    if (!Registry.is(\"ide.hide.excluded.files\") && settings instanceof ProjectViewSettings && ((ProjectViewSettings)settings).isShowExcludedFiles()) {\n      return directoryInfo.isExcluded();\n    }\n    return false;\n  }","id":4741,"modified_method":"private boolean shouldBeShown(VirtualFile dir, ViewSettings settings) {\n    DirectoryInfo directoryInfo = myIndex.getInfoForFile(dir);\n    return directoryInfo.isInProject() || shouldShowExcludedFiles(settings) && directoryInfo.isExcluded();\n  }","commit_id":"e9ab28ff71db366b316eb7408457e202ef047583","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  @NotNull\n  public Collection<AbstractTreeNode> getChildren() {\n    Module module = getValue();\n    if (module == null || module.isDisposed()) {  // module has been disposed\n      return Collections.emptyList();\n    }\n    ModuleRootManager rootManager = ModuleRootManager.getInstance(module);\n    ModuleFileIndex moduleFileIndex = rootManager.getFileIndex();\n\n    final VirtualFile[] contentRoots = rootManager.getContentRoots();\n    final List<AbstractTreeNode> children = new ArrayList<>(contentRoots.length + 1);\n    final PsiManager psiManager = PsiManager.getInstance(module.getProject());\n    for (final VirtualFile contentRoot : contentRoots) {\n      if (!moduleFileIndex.isInContent(contentRoot)) continue;\n\n      if (contentRoot.isDirectory()) {\n        PsiDirectory directory = psiManager.findDirectory(contentRoot);\n        if (directory != null) {\n          children.add(new PsiDirectoryNode(getProject(), directory, getSettings()));\n        }\n      }\n      else {\n        PsiFile file = psiManager.findFile(contentRoot);\n        if (file != null) {\n          children.add(new PsiFileNode(getProject(), file, getSettings()));\n        }\n      }\n    }\n\n    /*\n    if (getSettings().isShowLibraryContents()) {\n      children.add(new LibraryGroupNode(getProject(), new LibraryGroupElement(getValue()), getSettings()));\n    }\n    */\n    return children;\n  }","id":4742,"modified_method":"@Override\n  @NotNull\n  public Collection<AbstractTreeNode> getChildren() {\n    Module module = getValue();\n    if (module == null || module.isDisposed()) {  // module has been disposed\n      return Collections.emptyList();\n    }\n\n    final List<VirtualFile> contentRoots = ProjectViewDirectoryHelper.getInstance(myProject).getTopLevelModuleRoots(module, getSettings());\n    final List<AbstractTreeNode> children = new ArrayList<>(contentRoots.size());\n    final PsiManager psiManager = PsiManager.getInstance(module.getProject());\n    for (final VirtualFile contentRoot : contentRoots) {\n      if (contentRoot.isDirectory()) {\n        PsiDirectory directory = psiManager.findDirectory(contentRoot);\n        if (directory != null) {\n          children.add(new PsiDirectoryNode(getProject(), directory, getSettings()));\n        }\n      }\n      else {\n        PsiFile file = psiManager.findFile(contentRoot);\n        if (file != null) {\n          children.add(new PsiFileNode(getProject(), file, getSettings()));\n        }\n      }\n    }\n    return children;\n  }","commit_id":"e9ab28ff71db366b316eb7408457e202ef047583","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected AbstractTreeNode createModuleGroup(final Module module)\n    throws InvocationTargetException, NoSuchMethodException, InstantiationException, IllegalAccessException {\n    final VirtualFile[] roots = ModuleRootManager.getInstance(module).getContentRoots();\n    if (roots.length == 1) {\n      final PsiDirectory psi = PsiManager.getInstance(myProject).findDirectory(roots[0]);\n      if (psi != null) {\n        return new PsiDirectoryNode(myProject, psi, getSettings());\n      }\n    }\n\n    return new ProjectViewModuleNode(getProject(), module, getSettings());\n  }","id":4743,"modified_method":"@Override\n  protected AbstractTreeNode createModuleGroup(final Module module)\n    throws InvocationTargetException, NoSuchMethodException, InstantiationException, IllegalAccessException {\n    List<VirtualFile> roots = ProjectViewDirectoryHelper.getInstance(myProject).getTopLevelModuleRoots(module, getSettings());\n    if (roots.size() == 1) {\n      final PsiDirectory psi = PsiManager.getInstance(myProject).findDirectory(roots.get(0));\n      if (psi != null) {\n        return new PsiDirectoryNode(myProject, psi, getSettings());\n      }\n    }\n\n    return new ProjectViewModuleNode(getProject(), module, getSettings());\n  }","commit_id":"e9ab28ff71db366b316eb7408457e202ef047583","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Close reviews for which violations have been fixed.\n   */\n  protected int closeReviewsOnResolvedViolations(Resource resource, int resourceId, int snapshotId) {\n    String conditions = \" WHERE resource_id=\" + resourceId + \" AND \"\n      + \"( \"\n      + \"  ( \"\n      + \"    manual_violation=:automaticViolation AND status!='CLOSED' AND \"\n      + \"    rule_failure_permanent_id NOT IN (SELECT permanent_id FROM rule_failures WHERE snapshot_id=\" + snapshotId + \" AND permanent_id IS NOT NULL)\"\n      + \"  )\"\n      + \"  OR \"\n      + \"  (manual_violation=:manualViolation AND status='RESOLVED')\"\n      + \")\";\n    List<Review> reviews = databaseSession.getEntityManager().createNativeQuery(\"SELECT * FROM reviews \" + conditions, Review.class)\n      .setParameter(\"automaticViolation\", false)\n      .setParameter(\"manualViolation\", true)\n      .getResultList();\n\n    for (Review review : reviews) {\n      notifyClosed(resource, review);\n    }\n\n    int rowUpdated = databaseSession.createNativeQuery(\"UPDATE reviews SET status='CLOSED', updated_at=CURRENT_TIMESTAMP\" + conditions)\n      .setParameter(\"automaticViolation\", false)\n      .setParameter(\"manualViolation\", true)\n      .executeUpdate();\n    if (rowUpdated > 0) {\n      LOG.debug(\"- {} reviews closed on #{}\", rowUpdated, resourceId);\n    }\n    return rowUpdated;\n  }","id":4744,"modified_method":"/**\n   * Close reviews for which violations have been fixed.\n   */\n  @SuppressWarnings({\"unchecked\"})\n  protected int closeReviewsOnResolvedViolations(Resource<?> resource, int resourceId, int snapshotId) {\n    String conditions = \" WHERE resource_id=:\" + RESOURCE_ID + \" AND \"\n      + \"( \"\n      + \"  ( \"\n      + \"    manual_violation=:\" + AUTOMATIC_VIOLATION + \" AND status!='CLOSED' AND \"\n      + \"    rule_failure_permanent_id NOT IN (SELECT permanent_id FROM rule_failures WHERE snapshot_id=:\" + SNAPSHOT_ID + \" AND permanent_id IS NOT NULL)\"\n      + \"  )\"\n      + \"  OR \"\n      + \"  (manual_violation=:\" + MANUAL_VIOLATION + \" AND status='RESOLVED')\"\n      + \")\";\n    List<Review> reviews = databaseSession.getEntityManager().createNativeQuery(\"SELECT * FROM reviews \" + conditions, Review.class)\n      .setParameter(RESOURCE_ID, resourceId)\n      .setParameter(SNAPSHOT_ID, snapshotId)\n      .setParameter(AUTOMATIC_VIOLATION, false)\n      .setParameter(MANUAL_VIOLATION, true)\n      .getResultList();\n\n    for (Review review : reviews) {\n      notifyClosed(resource, review);\n    }\n\n    int rowUpdated = databaseSession.createNativeQuery(\"UPDATE reviews SET status='CLOSED', updated_at=CURRENT_TIMESTAMP\" + conditions)\n      .setParameter(RESOURCE_ID, resourceId)\n      .setParameter(SNAPSHOT_ID, snapshotId)\n      .setParameter(AUTOMATIC_VIOLATION, false)\n      .setParameter(MANUAL_VIOLATION, true)\n      .executeUpdate();\n    if (rowUpdated > 0) {\n      LOG.debug(\"- {} reviews closed on #{}\", rowUpdated, resourceId);\n    }\n    return rowUpdated;\n  }","commit_id":"2a0fef63884f6bd58349bfd1e3a417b9f720f3e5","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Close reviews that relate to resources that have been deleted or renamed.\n   */\n  protected int closeReviewsForDeletedResources(int projectId, int projectSnapshotId) {\n    String conditions = \" WHERE status!='CLOSED' AND project_id=\" + projectId\n      + \" AND resource_id IN ( SELECT prev.project_id FROM snapshots prev  WHERE prev.root_project_id=\" + projectId\n      + \" AND prev.islast=? AND NOT EXISTS ( SELECT cur.id FROM snapshots cur WHERE cur.root_snapshot_id=\" + projectSnapshotId\n      + \" AND cur.created_at > prev.created_at AND cur.root_project_id=\" + projectId + \" AND cur.project_id=prev.project_id ) )\";\n    List<Review> reviews = databaseSession.getEntityManager().createNativeQuery(\"SELECT * FROM reviews \" + conditions, Review.class)\n      .setParameter(1, Boolean.TRUE)\n      .getResultList();\n    for (Review review : reviews) {\n      notifyClosed(null, review);\n    }\n    int rowUpdated = databaseSession.createNativeQuery(\"UPDATE reviews SET status='CLOSED', updated_at=CURRENT_TIMESTAMP\" + conditions)\n      .setParameter(1, Boolean.TRUE)\n      .executeUpdate();\n    LOG.debug(\"- {} reviews set to 'closed' on project #{}\", rowUpdated, projectSnapshotId);\n    return rowUpdated;\n  }","id":4745,"modified_method":"/**\n   * Close reviews that relate to resources that have been deleted or renamed.\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected int closeReviewsForDeletedResources(int projectId, int projectSnapshotId) {\n    String conditions = \" WHERE status!='CLOSED' AND project_id=:\" + PROJECT_ID\n      + \" AND resource_id IN ( SELECT prev.project_id FROM snapshots prev  WHERE prev.root_project_id=:\" + PROJECT_ID \n      + \" AND prev.islast=:\" + IS_LAST + \" AND NOT EXISTS ( SELECT cur.id FROM snapshots cur WHERE cur.root_snapshot_id=:\" + PROJECT_SNAPSHOT_ID\n      + \" AND cur.created_at > prev.created_at AND cur.root_project_id=:\" + PROJECT_ID + \" AND cur.project_id=prev.project_id ) )\";\n    List<Review> reviews = databaseSession.getEntityManager().createNativeQuery(\"SELECT * FROM reviews \" + conditions, Review.class)\n      .setParameter(PROJECT_ID, projectId)\n      .setParameter(PROJECT_SNAPSHOT_ID, projectSnapshotId)\n      .setParameter(IS_LAST, Boolean.TRUE)\n      .getResultList();\n    for (Review review : reviews) {\n      notifyClosed(null, review);\n    }\n    int rowUpdated = databaseSession.createNativeQuery(\"UPDATE reviews SET status='CLOSED', updated_at=CURRENT_TIMESTAMP\" + conditions)\n      .setParameter(PROJECT_ID, projectId)\n      .setParameter(PROJECT_SNAPSHOT_ID, projectSnapshotId)\n      .setParameter(IS_LAST, Boolean.TRUE)\n      .executeUpdate();\n    LOG.debug(\"- {} reviews set to 'closed' on project #{}\", rowUpdated, projectSnapshotId);\n    return rowUpdated;\n  }","commit_id":"2a0fef63884f6bd58349bfd1e3a417b9f720f3e5","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Reopen reviews that had been set to resolved but for which the violation is still here.\n   * Manual violations are ignored.\n   */\n  protected int reopenReviewsOnUnresolvedViolations(Resource resource, int resourceId) {\n    String conditions = \" WHERE status='RESOLVED' AND resolution<>'FALSE-POSITIVE' AND manual_violation=:manualViolation AND resource_id=\" + resourceId;\n    List<Review> reviews = databaseSession.getEntityManager().createNativeQuery(\"SELECT * FROM reviews \" + conditions, Review.class)\n      .setParameter(\"manualViolation\", false)\n      .getResultList();\n    for (Review review : reviews) {\n      notifyReopened(resource, review);\n    }\n\n    int rowUpdated = databaseSession.createNativeQuery(\"UPDATE reviews SET status='REOPENED', resolution=NULL, updated_at=CURRENT_TIMESTAMP\" + conditions)\n      .setParameter(\"manualViolation\", false)\n      .executeUpdate();\n    if (rowUpdated > 0) {\n      LOG.debug(\"- {} reviews reopened on #{}\", rowUpdated, resourceId);\n    }\n    return rowUpdated;\n  }","id":4746,"modified_method":"/**\n   * Reopen reviews that had been set to resolved but for which the violation is still here.\n   * Manual violations are ignored.\n   */\n  @SuppressWarnings({\"unchecked\"})\n  protected int reopenReviewsOnUnresolvedViolations(Resource<?> resource, int resourceId) {\n    String conditions = \" WHERE status='RESOLVED' AND resolution<>'FALSE-POSITIVE' AND manual_violation=:\" + MANUAL_VIOLATION + \" AND resource_id=:\" + RESOURCE_ID;\n    List<Review> reviews = databaseSession.getEntityManager().createNativeQuery(\"SELECT * FROM reviews \" + conditions, Review.class)\n      .setParameter(RESOURCE_ID, resourceId)\n      .setParameter(MANUAL_VIOLATION, false)\n      .getResultList();\n    for (Review review : reviews) {\n      notifyReopened(resource, review);\n    }\n\n    int rowUpdated = databaseSession.createNativeQuery(\"UPDATE reviews SET status='REOPENED', resolution=NULL, updated_at=CURRENT_TIMESTAMP\" + conditions)\n      .setParameter(RESOURCE_ID, resourceId)\n      .setParameter(MANUAL_VIOLATION, false)\n      .executeUpdate();\n    if (rowUpdated > 0) {\n      LOG.debug(\"- {} reviews reopened on #{}\", rowUpdated, resourceId);\n    }\n    return rowUpdated;\n  }","commit_id":"2a0fef63884f6bd58349bfd1e3a417b9f720f3e5","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_DEDICATE_RESOURCE, eventDescription = \"dedicating a Pod\")\n    public List<DedicatedResourceVO> dedicatePod(final Long podId, final Long domainId, final String accountName) {\n        Long accountId = null;\n        if (accountName != null) {\n            Account caller = CallContext.current().getCallingAccount();\n            Account owner = _accountMgr.finalizeOwner(caller, accountName, domainId, null);\n            accountId = owner.getId();\n        }\n        List<Long> childDomainIds = getDomainChildIds(domainId);\n        childDomainIds.add(domainId);\n        checkAccountAndDomain(accountId, domainId);\n        HostPodVO pod = _podDao.findById(podId);\n        List<HostVO> hosts = null;\n        if (pod == null) {\n            throw new InvalidParameterValueException(\"Unable to find pod by id \" + podId);\n        } else {\n            DedicatedResourceVO dedicatedPod = _dedicatedDao.findByPodId(podId);\n            DedicatedResourceVO dedicatedZoneOfPod = _dedicatedDao.findByZoneId(pod.getDataCenterId());\n            //check if pod is dedicated\n            if (dedicatedPod != null) {\n                s_logger.error(\"Pod \" + pod.getName() + \" is already dedicated\");\n                throw new CloudRuntimeException(\"Pod \" + pod.getName() + \" is already dedicated\");\n            }\n\n            if (dedicatedZoneOfPod != null) {\n                boolean domainIdInChildreanList = getDomainChildIds(dedicatedZoneOfPod.getDomainId()).contains(domainId);\n                //can dedicate a pod to an account/domain if zone is dedicated to parent-domain\n                if (dedicatedZoneOfPod.getAccountId() != null || (accountId == null && !domainIdInChildreanList) ||\n                    (accountId != null && !(dedicatedZoneOfPod.getDomainId() == domainId || domainIdInChildreanList))) {\n                    DataCenterVO zone = _zoneDao.findById(pod.getDataCenterId());\n                    s_logger.error(\"Cannot dedicate Pod. Its zone is already dedicated\");\n                    throw new CloudRuntimeException(\"Pod's Zone \" + zone.getName() + \" is already dedicated\");\n                }\n            }\n\n            //check if any resource under this pod is dedicated to different account or sub-domain\n            List<ClusterVO> clusters = _clusterDao.listByPodId(pod.getId());\n            List<DedicatedResourceVO> clustersToRelease = new ArrayList<DedicatedResourceVO>();\n            List<DedicatedResourceVO> hostsToRelease = new ArrayList<DedicatedResourceVO>();\n            for (ClusterVO cluster : clusters) {\n                DedicatedResourceVO dCluster = _dedicatedDao.findByClusterId(cluster.getId());\n                if (dCluster != null) {\n                    if (!(childDomainIds.contains(dCluster.getDomainId()))) {\n                        throw new CloudRuntimeException(\"Cluster \" + cluster.getName() + \" under this Pod \" + pod.getName() + \" is dedicated to different account/domain\");\n                    }\n                    /*if all dedicated resources belongs to same account and domain then we should release dedication\n                    and make new entry for this Pod*/\n                    if (accountId != null) {\n                        if (dCluster.getAccountId() == accountId) {\n                            clustersToRelease.add(dCluster);\n                        } else {\n                            s_logger.error(\"Cluster \" + cluster.getName() + \" under this Pod \" + pod.getName() + \" is dedicated to different account/domain\");\n                            throw new CloudRuntimeException(\"Cluster \" + cluster.getName() + \" under this Pod \" + pod.getName() +\n                                \" is dedicated to different account/domain\");\n                        }\n                    } else {\n                        if (dCluster.getAccountId() == null && dCluster.getDomainId() == domainId) {\n                            clustersToRelease.add(dCluster);\n                        }\n                    }\n                }\n            }\n\n            for (DedicatedResourceVO dr : clustersToRelease) {\n                releaseDedicatedResource(null, null, dr.getClusterId(), null);\n            }\n\n            hosts = _hostDao.findByPodId(pod.getId());\n            for (HostVO host : hosts) {\n                DedicatedResourceVO dHost = _dedicatedDao.findByHostId(host.getId());\n                if (dHost != null) {\n                    if (!(getDomainChildIds(domainId).contains(dHost.getDomainId()))) {\n                        throw new CloudRuntimeException(\"Host \" + host.getName() + \" under this Pod \" + pod.getName() + \" is dedicated to different account/domain\");\n                    }\n                    if (accountId != null) {\n                        if (dHost.getAccountId() == accountId) {\n                            hostsToRelease.add(dHost);\n                        } else {\n                            s_logger.error(\"Host \" + host.getName() + \" under this Pod \" + pod.getName() + \" is dedicated to different account/domain\");\n                            throw new CloudRuntimeException(\"Host \" + host.getName() + \" under this Pod \" + pod.getName() + \" is dedicated to different account/domain\");\n                        }\n                    } else {\n                        if (dHost.getAccountId() == null && dHost.getDomainId() == domainId) {\n                            hostsToRelease.add(dHost);\n                        }\n                    }\n                }\n            }\n\n            for (DedicatedResourceVO dr : hostsToRelease) {\n                releaseDedicatedResource(null, null, null, dr.getHostId());\n            }\n        }\n\n        checkHostsSuitabilityForExplicitDedication(accountId, childDomainIds, hosts);\n\n        final Long accountIdFinal = accountId;\n        return Transaction.execute(new TransactionCallback<List<DedicatedResourceVO>>() {\n            @Override\n            public List<DedicatedResourceVO> doInTransaction(TransactionStatus status) {\n                // find or create the affinity group by name under this account/domain\n                AffinityGroup group = findOrCreateDedicatedAffinityGroup(domainId, accountIdFinal);\n                if (group == null) {\n                    s_logger.error(\"Unable to dedicate zone due to, failed to create dedication affinity group\");\n                    throw new CloudRuntimeException(\"Failed to dedicate zone. Please contact Cloud Support.\");\n                }\n                DedicatedResourceVO dedicatedResource = new DedicatedResourceVO(null, podId, null, null, null, null, group.getId());\n                try {\n                    dedicatedResource.setDomainId(domainId);\n                    if (accountIdFinal != null) {\n                        dedicatedResource.setAccountId(accountIdFinal);\n                    }\n                    dedicatedResource = _dedicatedDao.persist(dedicatedResource);\n                } catch (Exception e) {\n                    s_logger.error(\"Unable to dedicate pod due to \" + e.getMessage(), e);\n                    throw new CloudRuntimeException(\"Failed to dedicate pod. Please contact Cloud Support.\");\n                }\n\n                List<DedicatedResourceVO> result = new ArrayList<DedicatedResourceVO>();\n                result.add(dedicatedResource);\n                return result;\n            }\n        });\n    }","id":4747,"modified_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_DEDICATE_RESOURCE, eventDescription = \"dedicating a Pod\")\n    public List<DedicatedResourceVO> dedicatePod(final Long podId, final Long domainId, final String accountName) {\n        Long accountId = null;\n        if (accountName != null) {\n            Account caller = CallContext.current().getCallingAccount();\n            Account owner = _accountMgr.finalizeOwner(caller, accountName, domainId, null);\n            accountId = owner.getId();\n        }\n        List<Long> childDomainIds = getDomainChildIds(domainId);\n        childDomainIds.add(domainId);\n        checkAccountAndDomain(accountId, domainId);\n        HostPodVO pod = _podDao.findById(podId);\n        List<HostVO> hosts = null;\n        if (pod == null) {\n            throw new InvalidParameterValueException(\"Unable to find pod by id \" + podId);\n        } else {\n            DedicatedResourceVO dedicatedPod = _dedicatedDao.findByPodId(podId);\n            DedicatedResourceVO dedicatedZoneOfPod = _dedicatedDao.findByZoneId(pod.getDataCenterId());\n            //check if pod is dedicated\n            if (dedicatedPod != null) {\n                s_logger.error(\"Pod \" + pod.getName() + \" is already dedicated\");\n                throw new CloudRuntimeException(\"Pod \" + pod.getName() + \" is already dedicated\");\n            }\n\n            if (dedicatedZoneOfPod != null) {\n                boolean domainIdInChildreanList = getDomainChildIds(dedicatedZoneOfPod.getDomainId()).contains(domainId);\n                //can dedicate a pod to an account/domain if zone is dedicated to parent-domain\n                if (dedicatedZoneOfPod.getAccountId() != null || (accountId == null && !domainIdInChildreanList) ||\n                    (accountId != null && !(dedicatedZoneOfPod.getDomainId().equals(domainId) || domainIdInChildreanList))) {\n                    DataCenterVO zone = _zoneDao.findById(pod.getDataCenterId());\n                    s_logger.error(\"Cannot dedicate Pod. Its zone is already dedicated\");\n                    throw new CloudRuntimeException(\"Pod's Zone \" + zone.getName() + \" is already dedicated\");\n                }\n            }\n\n            //check if any resource under this pod is dedicated to different account or sub-domain\n            List<ClusterVO> clusters = _clusterDao.listByPodId(pod.getId());\n            List<DedicatedResourceVO> clustersToRelease = new ArrayList<DedicatedResourceVO>();\n            List<DedicatedResourceVO> hostsToRelease = new ArrayList<DedicatedResourceVO>();\n            for (ClusterVO cluster : clusters) {\n                DedicatedResourceVO dCluster = _dedicatedDao.findByClusterId(cluster.getId());\n                if (dCluster != null) {\n                    if (!(childDomainIds.contains(dCluster.getDomainId()))) {\n                        throw new CloudRuntimeException(\"Cluster \" + cluster.getName() + \" under this Pod \" + pod.getName() + \" is dedicated to different account/domain\");\n                    }\n                    /*if all dedicated resources belongs to same account and domain then we should release dedication\n                    and make new entry for this Pod*/\n                    if (accountId != null) {\n                        if (dCluster.getAccountId().equals(accountId)) {\n                            clustersToRelease.add(dCluster);\n                        } else {\n                            s_logger.error(\"Cluster \" + cluster.getName() + \" under this Pod \" + pod.getName() + \" is dedicated to different account/domain\");\n                            throw new CloudRuntimeException(\"Cluster \" + cluster.getName() + \" under this Pod \" + pod.getName() +\n                                \" is dedicated to different account/domain\");\n                        }\n                    } else {\n                        if (dCluster.getAccountId() == null && dCluster.getDomainId().equals(domainId)) {\n                            clustersToRelease.add(dCluster);\n                        }\n                    }\n                }\n            }\n\n            for (DedicatedResourceVO dr : clustersToRelease) {\n                releaseDedicatedResource(null, null, dr.getClusterId(), null);\n            }\n\n            hosts = _hostDao.findByPodId(pod.getId());\n            for (HostVO host : hosts) {\n                DedicatedResourceVO dHost = _dedicatedDao.findByHostId(host.getId());\n                if (dHost != null) {\n                    if (!(getDomainChildIds(domainId).contains(dHost.getDomainId()))) {\n                        throw new CloudRuntimeException(\"Host \" + host.getName() + \" under this Pod \" + pod.getName() + \" is dedicated to different account/domain\");\n                    }\n                    if (accountId != null) {\n                        if (dHost.getAccountId().equals(accountId)) {\n                            hostsToRelease.add(dHost);\n                        } else {\n                            s_logger.error(\"Host \" + host.getName() + \" under this Pod \" + pod.getName() + \" is dedicated to different account/domain\");\n                            throw new CloudRuntimeException(\"Host \" + host.getName() + \" under this Pod \" + pod.getName() + \" is dedicated to different account/domain\");\n                        }\n                    } else {\n                        if (dHost.getAccountId() == null && dHost.getDomainId().equals(domainId)) {\n                            hostsToRelease.add(dHost);\n                        }\n                    }\n                }\n            }\n\n            for (DedicatedResourceVO dr : hostsToRelease) {\n                releaseDedicatedResource(null, null, null, dr.getHostId());\n            }\n        }\n\n        checkHostsSuitabilityForExplicitDedication(accountId, childDomainIds, hosts);\n\n        final Long accountIdFinal = accountId;\n        return Transaction.execute(new TransactionCallback<List<DedicatedResourceVO>>() {\n            @Override\n            public List<DedicatedResourceVO> doInTransaction(TransactionStatus status) {\n                // find or create the affinity group by name under this account/domain\n                AffinityGroup group = findOrCreateDedicatedAffinityGroup(domainId, accountIdFinal);\n                if (group == null) {\n                    s_logger.error(\"Unable to dedicate zone due to, failed to create dedication affinity group\");\n                    throw new CloudRuntimeException(\"Failed to dedicate zone. Please contact Cloud Support.\");\n                }\n                DedicatedResourceVO dedicatedResource = new DedicatedResourceVO(null, podId, null, null, null, null, group.getId());\n                try {\n                    dedicatedResource.setDomainId(domainId);\n                    if (accountIdFinal != null) {\n                        dedicatedResource.setAccountId(accountIdFinal);\n                    }\n                    dedicatedResource = _dedicatedDao.persist(dedicatedResource);\n                } catch (Exception e) {\n                    s_logger.error(\"Unable to dedicate pod due to \" + e.getMessage(), e);\n                    throw new CloudRuntimeException(\"Failed to dedicate pod. Please contact Cloud Support.\");\n                }\n\n                List<DedicatedResourceVO> result = new ArrayList<DedicatedResourceVO>();\n                result.add(dedicatedResource);\n                return result;\n            }\n        });\n    }","commit_id":"e0a4b7c891b1bf84c8f5be8b085a3f41948d12f0","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_DEDICATE_RESOURCE, eventDescription = \"dedicating a Zone\")\n    public List<DedicatedResourceVO> dedicateZone(final Long zoneId, final Long domainId, final String accountName) {\n        Long accountId = null;\n        List<HostVO> hosts = null;\n        if (accountName != null) {\n            Account caller = CallContext.current().getCallingAccount();\n            Account owner = _accountMgr.finalizeOwner(caller, accountName, domainId, null);\n            accountId = owner.getId();\n        }\n        List<Long> childDomainIds = getDomainChildIds(domainId);\n        childDomainIds.add(domainId);\n        checkAccountAndDomain(accountId, domainId);\n        final DataCenterVO dc = _zoneDao.findById(zoneId);\n        if (dc == null) {\n            throw new InvalidParameterValueException(\"Unable to find zone by id \" + zoneId);\n        } else {\n            DedicatedResourceVO dedicatedZone = _dedicatedDao.findByZoneId(zoneId);\n            //check if zone is dedicated\n            if (dedicatedZone != null) {\n                s_logger.error(\"Zone \" + dc.getName() + \" is already dedicated\");\n                throw new CloudRuntimeException(\"Zone  \" + dc.getName() + \" is already dedicated\");\n            }\n\n            //check if any resource under this zone is dedicated to different account or sub-domain\n            List<HostPodVO> pods = _podDao.listByDataCenterId(dc.getId());\n            List<DedicatedResourceVO> podsToRelease = new ArrayList<DedicatedResourceVO>();\n            List<DedicatedResourceVO> clustersToRelease = new ArrayList<DedicatedResourceVO>();\n            List<DedicatedResourceVO> hostsToRelease = new ArrayList<DedicatedResourceVO>();\n            for (HostPodVO pod : pods) {\n                DedicatedResourceVO dPod = _dedicatedDao.findByPodId(pod.getId());\n                if (dPod != null) {\n                    if (!(childDomainIds.contains(dPod.getDomainId()))) {\n                        throw new CloudRuntimeException(\"Pod \" + pod.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                    }\n                    if (accountId != null) {\n                        if (dPod.getAccountId() == accountId) {\n                            podsToRelease.add(dPod);\n                        } else {\n                            s_logger.error(\"Pod \" + pod.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                            throw new CloudRuntimeException(\"Pod \" + pod.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                        }\n                    } else {\n                        if (dPod.getAccountId() == null && dPod.getDomainId() == domainId) {\n                            podsToRelease.add(dPod);\n                        }\n                    }\n                }\n            }\n\n            for (DedicatedResourceVO dr : podsToRelease) {\n                releaseDedicatedResource(null, dr.getPodId(), null, null);\n            }\n\n            List<ClusterVO> clusters = _clusterDao.listClustersByDcId(dc.getId());\n            for (ClusterVO cluster : clusters) {\n                DedicatedResourceVO dCluster = _dedicatedDao.findByClusterId(cluster.getId());\n                if (dCluster != null) {\n                    if (!(childDomainIds.contains(dCluster.getDomainId()))) {\n                        throw new CloudRuntimeException(\"Cluster \" + cluster.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                    }\n                    if (accountId != null) {\n                        if (dCluster.getAccountId() == accountId) {\n                            clustersToRelease.add(dCluster);\n                        } else {\n                            s_logger.error(\"Cluster \" + cluster.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                            throw new CloudRuntimeException(\"Cluster \" + cluster.getName() + \" under this Zone \" + dc.getName() +\n                                \" is dedicated to different account/domain\");\n                        }\n                    } else {\n                        if (dCluster.getAccountId() == null && dCluster.getDomainId() == domainId) {\n                            clustersToRelease.add(dCluster);\n                        }\n                    }\n                }\n            }\n\n            for (DedicatedResourceVO dr : clustersToRelease) {\n                releaseDedicatedResource(null, null, dr.getClusterId(), null);\n            }\n\n            hosts = _hostDao.listByDataCenterId(dc.getId());\n            for (HostVO host : hosts) {\n                DedicatedResourceVO dHost = _dedicatedDao.findByHostId(host.getId());\n                if (dHost != null) {\n                    if (!(childDomainIds.contains(dHost.getDomainId()))) {\n                        throw new CloudRuntimeException(\"Host \" + host.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                    }\n                    if (accountId != null) {\n                        if (dHost.getAccountId() == accountId) {\n                            hostsToRelease.add(dHost);\n                        } else {\n                            s_logger.error(\"Host \" + host.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                            throw new CloudRuntimeException(\"Host \" + host.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                        }\n                    } else {\n                        if (dHost.getAccountId() == null && dHost.getDomainId() == domainId) {\n                            hostsToRelease.add(dHost);\n                        }\n                    }\n                }\n            }\n\n            for (DedicatedResourceVO dr : hostsToRelease) {\n                releaseDedicatedResource(null, null, null, dr.getHostId());\n            }\n        }\n\n        checkHostsSuitabilityForExplicitDedication(accountId, childDomainIds, hosts);\n\n        final Long accountIdFinal = accountId;\n        return Transaction.execute(new TransactionCallback<List<DedicatedResourceVO>>() {\n            @Override\n            public List<DedicatedResourceVO> doInTransaction(TransactionStatus status) {\n                // find or create the affinity group by name under this account/domain\n                AffinityGroup group = findOrCreateDedicatedAffinityGroup(domainId, accountIdFinal);\n                if (group == null) {\n                    s_logger.error(\"Unable to dedicate zone due to, failed to create dedication affinity group\");\n                    throw new CloudRuntimeException(\"Failed to dedicate zone. Please contact Cloud Support.\");\n                }\n\n                DedicatedResourceVO dedicatedResource = new DedicatedResourceVO(zoneId, null, null, null, null, null, group.getId());\n                try {\n                    dedicatedResource.setDomainId(domainId);\n                    if (accountIdFinal != null) {\n                        dedicatedResource.setAccountId(accountIdFinal);\n                    }\n                    dedicatedResource = _dedicatedDao.persist(dedicatedResource);\n\n                    // save the domainId in the zone\n                    dc.setDomainId(domainId);\n                    if (!_zoneDao.update(zoneId, dc)) {\n                        throw new CloudRuntimeException(\"Failed to dedicate zone, could not set domainId. Please contact Cloud Support.\");\n                    }\n\n                } catch (Exception e) {\n                    s_logger.error(\"Unable to dedicate zone due to \" + e.getMessage(), e);\n                    throw new CloudRuntimeException(\"Failed to dedicate zone. Please contact Cloud Support.\");\n                }\n\n                List<DedicatedResourceVO> result = new ArrayList<DedicatedResourceVO>();\n                result.add(dedicatedResource);\n                return result;\n\n            }\n        });\n    }","id":4748,"modified_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_DEDICATE_RESOURCE, eventDescription = \"dedicating a Zone\")\n    public List<DedicatedResourceVO> dedicateZone(final Long zoneId, final Long domainId, final String accountName) {\n        Long accountId = null;\n        List<HostVO> hosts = null;\n        if (accountName != null) {\n            Account caller = CallContext.current().getCallingAccount();\n            Account owner = _accountMgr.finalizeOwner(caller, accountName, domainId, null);\n            accountId = owner.getId();\n        }\n        List<Long> childDomainIds = getDomainChildIds(domainId);\n        childDomainIds.add(domainId);\n        checkAccountAndDomain(accountId, domainId);\n        final DataCenterVO dc = _zoneDao.findById(zoneId);\n        if (dc == null) {\n            throw new InvalidParameterValueException(\"Unable to find zone by id \" + zoneId);\n        } else {\n            DedicatedResourceVO dedicatedZone = _dedicatedDao.findByZoneId(zoneId);\n            //check if zone is dedicated\n            if (dedicatedZone != null) {\n                s_logger.error(\"Zone \" + dc.getName() + \" is already dedicated\");\n                throw new CloudRuntimeException(\"Zone  \" + dc.getName() + \" is already dedicated\");\n            }\n\n            //check if any resource under this zone is dedicated to different account or sub-domain\n            List<HostPodVO> pods = _podDao.listByDataCenterId(dc.getId());\n            List<DedicatedResourceVO> podsToRelease = new ArrayList<DedicatedResourceVO>();\n            List<DedicatedResourceVO> clustersToRelease = new ArrayList<DedicatedResourceVO>();\n            List<DedicatedResourceVO> hostsToRelease = new ArrayList<DedicatedResourceVO>();\n            for (HostPodVO pod : pods) {\n                DedicatedResourceVO dPod = _dedicatedDao.findByPodId(pod.getId());\n                if (dPod != null) {\n                    if (!(childDomainIds.contains(dPod.getDomainId()))) {\n                        throw new CloudRuntimeException(\"Pod \" + pod.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                    }\n                    if (accountId != null) {\n                        if (dPod.getAccountId().equals(accountId)) {\n                            podsToRelease.add(dPod);\n                        } else {\n                            s_logger.error(\"Pod \" + pod.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                            throw new CloudRuntimeException(\"Pod \" + pod.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                        }\n                    } else {\n                        if (dPod.getAccountId() == null && dPod.getDomainId().equals(domainId)) {\n                            podsToRelease.add(dPod);\n                        }\n                    }\n                }\n            }\n\n            for (DedicatedResourceVO dr : podsToRelease) {\n                releaseDedicatedResource(null, dr.getPodId(), null, null);\n            }\n\n            List<ClusterVO> clusters = _clusterDao.listClustersByDcId(dc.getId());\n            for (ClusterVO cluster : clusters) {\n                DedicatedResourceVO dCluster = _dedicatedDao.findByClusterId(cluster.getId());\n                if (dCluster != null) {\n                    if (!(childDomainIds.contains(dCluster.getDomainId()))) {\n                        throw new CloudRuntimeException(\"Cluster \" + cluster.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                    }\n                    if (accountId != null) {\n                        if (dCluster.getAccountId().equals(accountId)) {\n                            clustersToRelease.add(dCluster);\n                        } else {\n                            s_logger.error(\"Cluster \" + cluster.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                            throw new CloudRuntimeException(\"Cluster \" + cluster.getName() + \" under this Zone \" + dc.getName() +\n                                \" is dedicated to different account/domain\");\n                        }\n                    } else {\n                        if (dCluster.getAccountId() == null && dCluster.getDomainId().equals(domainId)) {\n                            clustersToRelease.add(dCluster);\n                        }\n                    }\n                }\n            }\n\n            for (DedicatedResourceVO dr : clustersToRelease) {\n                releaseDedicatedResource(null, null, dr.getClusterId(), null);\n            }\n\n            hosts = _hostDao.listByDataCenterId(dc.getId());\n            for (HostVO host : hosts) {\n                DedicatedResourceVO dHost = _dedicatedDao.findByHostId(host.getId());\n                if (dHost != null) {\n                    if (!(childDomainIds.contains(dHost.getDomainId()))) {\n                        throw new CloudRuntimeException(\"Host \" + host.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                    }\n                    if (accountId != null) {\n                        if (dHost.getAccountId().equals(accountId)) {\n                            hostsToRelease.add(dHost);\n                        } else {\n                            s_logger.error(\"Host \" + host.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                            throw new CloudRuntimeException(\"Host \" + host.getName() + \" under this Zone \" + dc.getName() + \" is dedicated to different account/domain\");\n                        }\n                    } else {\n                        if (dHost.getAccountId() == null && dHost.getDomainId().equals(domainId)) {\n                            hostsToRelease.add(dHost);\n                        }\n                    }\n                }\n            }\n\n            for (DedicatedResourceVO dr : hostsToRelease) {\n                releaseDedicatedResource(null, null, null, dr.getHostId());\n            }\n        }\n\n        checkHostsSuitabilityForExplicitDedication(accountId, childDomainIds, hosts);\n\n        final Long accountIdFinal = accountId;\n        return Transaction.execute(new TransactionCallback<List<DedicatedResourceVO>>() {\n            @Override\n            public List<DedicatedResourceVO> doInTransaction(TransactionStatus status) {\n                // find or create the affinity group by name under this account/domain\n                AffinityGroup group = findOrCreateDedicatedAffinityGroup(domainId, accountIdFinal);\n                if (group == null) {\n                    s_logger.error(\"Unable to dedicate zone due to, failed to create dedication affinity group\");\n                    throw new CloudRuntimeException(\"Failed to dedicate zone. Please contact Cloud Support.\");\n                }\n\n                DedicatedResourceVO dedicatedResource = new DedicatedResourceVO(zoneId, null, null, null, null, null, group.getId());\n                try {\n                    dedicatedResource.setDomainId(domainId);\n                    if (accountIdFinal != null) {\n                        dedicatedResource.setAccountId(accountIdFinal);\n                    }\n                    dedicatedResource = _dedicatedDao.persist(dedicatedResource);\n\n                    // save the domainId in the zone\n                    dc.setDomainId(domainId);\n                    if (!_zoneDao.update(zoneId, dc)) {\n                        throw new CloudRuntimeException(\"Failed to dedicate zone, could not set domainId. Please contact Cloud Support.\");\n                    }\n\n                } catch (Exception e) {\n                    s_logger.error(\"Unable to dedicate zone due to \" + e.getMessage(), e);\n                    throw new CloudRuntimeException(\"Failed to dedicate zone. Please contact Cloud Support.\");\n                }\n\n                List<DedicatedResourceVO> result = new ArrayList<DedicatedResourceVO>();\n                result.add(dedicatedResource);\n                return result;\n\n            }\n        });\n    }","commit_id":"e0a4b7c891b1bf84c8f5be8b085a3f41948d12f0","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_DEDICATE_RESOURCE, eventDescription = \"dedicating a Host\")\n    public List<DedicatedResourceVO> dedicateHost(final Long hostId, final Long domainId, final String accountName) {\n        Long accountId = null;\n        if (accountName != null) {\n            Account caller = CallContext.current().getCallingAccount();\n            Account owner = _accountMgr.finalizeOwner(caller, accountName, domainId, null);\n            accountId = owner.getId();\n        }\n        checkAccountAndDomain(accountId, domainId);\n        HostVO host = _hostDao.findById(hostId);\n        if (host == null) {\n            throw new InvalidParameterValueException(\"Unable to find host by id \" + hostId);\n        } else {\n            //check if host is of routing type\n            if (host.getType() != Host.Type.Routing) {\n                throw new CloudRuntimeException(\"Invalid host type for host \" + host.getName());\n            }\n\n            DedicatedResourceVO dedicatedHost = _dedicatedDao.findByHostId(hostId);\n            DedicatedResourceVO dedicatedClusterOfHost = _dedicatedDao.findByClusterId(host.getClusterId());\n            DedicatedResourceVO dedicatedPodOfHost = _dedicatedDao.findByPodId(host.getPodId());\n            DedicatedResourceVO dedicatedZoneOfHost = _dedicatedDao.findByZoneId(host.getDataCenterId());\n\n            if (dedicatedHost != null) {\n                s_logger.error(\"Host \" + host.getName() + \" is already dedicated\");\n                throw new CloudRuntimeException(\"Host \" + host.getName() + \" is already dedicated\");\n            }\n\n            if (dedicatedClusterOfHost != null) {\n                boolean domainIdInChildreanList = getDomainChildIds(dedicatedClusterOfHost.getDomainId()).contains(domainId);\n                //can dedicate a host to an account/domain if cluster is dedicated to parent-domain\n                if (dedicatedClusterOfHost.getAccountId() != null || (accountId == null && !domainIdInChildreanList) ||\n                    (accountId != null && !(dedicatedClusterOfHost.getDomainId() == domainId || domainIdInChildreanList))) {\n                    ClusterVO cluster = _clusterDao.findById(host.getClusterId());\n                    s_logger.error(\"Host's Cluster \" + cluster.getName() + \" is already dedicated\");\n                    throw new CloudRuntimeException(\"Host's Cluster \" + cluster.getName() + \" is already dedicated\");\n                }\n            }\n\n            if (dedicatedPodOfHost != null) {\n                boolean domainIdInChildreanList = getDomainChildIds(dedicatedPodOfHost.getDomainId()).contains(domainId);\n                //can dedicate a host to an account/domain if pod is dedicated to parent-domain\n                if (dedicatedPodOfHost.getAccountId() != null || (accountId == null && !domainIdInChildreanList) ||\n                    (accountId != null && !(dedicatedPodOfHost.getDomainId() == domainId || domainIdInChildreanList))) {\n                    HostPodVO pod = _podDao.findById(host.getPodId());\n                    s_logger.error(\"Host's Pod \" + pod.getName() + \" is already dedicated\");\n                    throw new CloudRuntimeException(\"Host's Pod \" + pod.getName() + \" is already dedicated\");\n                }\n            }\n\n            if (dedicatedZoneOfHost != null) {\n                boolean domainIdInChildreanList = getDomainChildIds(dedicatedZoneOfHost.getDomainId()).contains(domainId);\n                //can dedicate a host to an account/domain if zone is dedicated to parent-domain\n                if (dedicatedZoneOfHost.getAccountId() != null || (accountId == null && !domainIdInChildreanList) ||\n                    (accountId != null && !(dedicatedZoneOfHost.getDomainId() == domainId || domainIdInChildreanList))) {\n                    DataCenterVO zone = _zoneDao.findById(host.getDataCenterId());\n                    s_logger.error(\"Host's Data Center \" + zone.getName() + \" is already dedicated\");\n                    throw new CloudRuntimeException(\"Host's Data Center \" + zone.getName() + \" is already dedicated\");\n                }\n            }\n        }\n\n        List<Long> childDomainIds = getDomainChildIds(domainId);\n        childDomainIds.add(domainId);\n        checkHostSuitabilityForExplicitDedication(accountId, childDomainIds, hostId);\n\n        final Long accountIdFinal = accountId;\n        return Transaction.execute(new TransactionCallback<List<DedicatedResourceVO>>() {\n            @Override\n            public List<DedicatedResourceVO> doInTransaction(TransactionStatus status) {\n                // find or create the affinity group by name under this account/domain\n                AffinityGroup group = findOrCreateDedicatedAffinityGroup(domainId, accountIdFinal);\n                if (group == null) {\n                    s_logger.error(\"Unable to dedicate zone due to, failed to create dedication affinity group\");\n                    throw new CloudRuntimeException(\"Failed to dedicate zone. Please contact Cloud Support.\");\n                }\n                DedicatedResourceVO dedicatedResource = new DedicatedResourceVO(null, null, null, hostId, null, null, group.getId());\n                try {\n                    dedicatedResource.setDomainId(domainId);\n                    if (accountIdFinal != null) {\n                        dedicatedResource.setAccountId(accountIdFinal);\n                    }\n                    dedicatedResource = _dedicatedDao.persist(dedicatedResource);\n                } catch (Exception e) {\n                    s_logger.error(\"Unable to dedicate host due to \" + e.getMessage(), e);\n                    throw new CloudRuntimeException(\"Failed to dedicate host. Please contact Cloud Support.\");\n                }\n\n                List<DedicatedResourceVO> result = new ArrayList<DedicatedResourceVO>();\n                result.add(dedicatedResource);\n                return result;\n            }\n        });\n\n    }","id":4749,"modified_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_DEDICATE_RESOURCE, eventDescription = \"dedicating a Host\")\n    public List<DedicatedResourceVO> dedicateHost(final Long hostId, final Long domainId, final String accountName) {\n        Long accountId = null;\n        if (accountName != null) {\n            Account caller = CallContext.current().getCallingAccount();\n            Account owner = _accountMgr.finalizeOwner(caller, accountName, domainId, null);\n            accountId = owner.getId();\n        }\n        checkAccountAndDomain(accountId, domainId);\n        HostVO host = _hostDao.findById(hostId);\n        if (host == null) {\n            throw new InvalidParameterValueException(\"Unable to find host by id \" + hostId);\n        } else {\n            //check if host is of routing type\n            if (host.getType() != Host.Type.Routing) {\n                throw new CloudRuntimeException(\"Invalid host type for host \" + host.getName());\n            }\n\n            DedicatedResourceVO dedicatedHost = _dedicatedDao.findByHostId(hostId);\n            DedicatedResourceVO dedicatedClusterOfHost = _dedicatedDao.findByClusterId(host.getClusterId());\n            DedicatedResourceVO dedicatedPodOfHost = _dedicatedDao.findByPodId(host.getPodId());\n            DedicatedResourceVO dedicatedZoneOfHost = _dedicatedDao.findByZoneId(host.getDataCenterId());\n\n            if (dedicatedHost != null) {\n                s_logger.error(\"Host \" + host.getName() + \" is already dedicated\");\n                throw new CloudRuntimeException(\"Host \" + host.getName() + \" is already dedicated\");\n            }\n\n            if (dedicatedClusterOfHost != null) {\n                boolean domainIdInChildreanList = getDomainChildIds(dedicatedClusterOfHost.getDomainId()).contains(domainId);\n                //can dedicate a host to an account/domain if cluster is dedicated to parent-domain\n                if (dedicatedClusterOfHost.getAccountId() != null || (accountId == null && !domainIdInChildreanList) ||\n                    (accountId != null && !(dedicatedClusterOfHost.getDomainId().equals(domainId) || domainIdInChildreanList))) {\n                    ClusterVO cluster = _clusterDao.findById(host.getClusterId());\n                    s_logger.error(\"Host's Cluster \" + cluster.getName() + \" is already dedicated\");\n                    throw new CloudRuntimeException(\"Host's Cluster \" + cluster.getName() + \" is already dedicated\");\n                }\n            }\n\n            if (dedicatedPodOfHost != null) {\n                boolean domainIdInChildreanList = getDomainChildIds(dedicatedPodOfHost.getDomainId()).contains(domainId);\n                //can dedicate a host to an account/domain if pod is dedicated to parent-domain\n                if (dedicatedPodOfHost.getAccountId() != null || (accountId == null && !domainIdInChildreanList) ||\n                    (accountId != null && !(dedicatedPodOfHost.getDomainId().equals(domainId) || domainIdInChildreanList))) {\n                    HostPodVO pod = _podDao.findById(host.getPodId());\n                    s_logger.error(\"Host's Pod \" + pod.getName() + \" is already dedicated\");\n                    throw new CloudRuntimeException(\"Host's Pod \" + pod.getName() + \" is already dedicated\");\n                }\n            }\n\n            if (dedicatedZoneOfHost != null) {\n                boolean domainIdInChildreanList = getDomainChildIds(dedicatedZoneOfHost.getDomainId()).contains(domainId);\n                //can dedicate a host to an account/domain if zone is dedicated to parent-domain\n                if (dedicatedZoneOfHost.getAccountId() != null || (accountId == null && !domainIdInChildreanList) ||\n                    (accountId != null && !(dedicatedZoneOfHost.getDomainId().equals(domainId) || domainIdInChildreanList))) {\n                    DataCenterVO zone = _zoneDao.findById(host.getDataCenterId());\n                    s_logger.error(\"Host's Data Center \" + zone.getName() + \" is already dedicated\");\n                    throw new CloudRuntimeException(\"Host's Data Center \" + zone.getName() + \" is already dedicated\");\n                }\n            }\n        }\n\n        List<Long> childDomainIds = getDomainChildIds(domainId);\n        childDomainIds.add(domainId);\n        checkHostSuitabilityForExplicitDedication(accountId, childDomainIds, hostId);\n\n        final Long accountIdFinal = accountId;\n        return Transaction.execute(new TransactionCallback<List<DedicatedResourceVO>>() {\n            @Override\n            public List<DedicatedResourceVO> doInTransaction(TransactionStatus status) {\n                // find or create the affinity group by name under this account/domain\n                AffinityGroup group = findOrCreateDedicatedAffinityGroup(domainId, accountIdFinal);\n                if (group == null) {\n                    s_logger.error(\"Unable to dedicate zone due to, failed to create dedication affinity group\");\n                    throw new CloudRuntimeException(\"Failed to dedicate zone. Please contact Cloud Support.\");\n                }\n                DedicatedResourceVO dedicatedResource = new DedicatedResourceVO(null, null, null, hostId, null, null, group.getId());\n                try {\n                    dedicatedResource.setDomainId(domainId);\n                    if (accountIdFinal != null) {\n                        dedicatedResource.setAccountId(accountIdFinal);\n                    }\n                    dedicatedResource = _dedicatedDao.persist(dedicatedResource);\n                } catch (Exception e) {\n                    s_logger.error(\"Unable to dedicate host due to \" + e.getMessage(), e);\n                    throw new CloudRuntimeException(\"Failed to dedicate host. Please contact Cloud Support.\");\n                }\n\n                List<DedicatedResourceVO> result = new ArrayList<DedicatedResourceVO>();\n                result.add(dedicatedResource);\n                return result;\n            }\n        });\n\n    }","commit_id":"e0a4b7c891b1bf84c8f5be8b085a3f41948d12f0","url":"https://github.com/apache/cloudstack"},{"original_method":"private void checkAccountAndDomain(Long accountId, Long domainId) {\n        DomainVO domain = _domainDao.findById(domainId);\n        if (domain == null) {\n            throw new InvalidParameterValueException(\"Unable to find the domain by id \" + domainId + \", please specify valid domainId\");\n        }\n        //check if account belongs to the domain id\n        if (accountId != null) {\n            AccountVO account = _accountDao.findById(accountId);\n            if (account == null || domainId != account.getDomainId()) {\n                throw new InvalidParameterValueException(\"Please specify the domain id of the account: \" + account.getAccountName());\n            }\n        }\n    }","id":4750,"modified_method":"private void checkAccountAndDomain(Long accountId, Long domainId) {\n        DomainVO domain = _domainDao.findById(domainId);\n        if (domain == null) {\n            throw new InvalidParameterValueException(\"Unable to find the domain by id \" + domainId + \", please specify valid domainId\");\n        }\n        //check if account belongs to the domain id\n        if (accountId != null) {\n            AccountVO account = _accountDao.findById(accountId);\n            if (account == null || domainId != account.getDomainId()) {\n                throw new InvalidParameterValueException(\"Please specify the domain id of the account id \" + accountId);\n            }\n        }\n    }","commit_id":"e0a4b7c891b1bf84c8f5be8b085a3f41948d12f0","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_DEDICATE_RESOURCE, eventDescription = \"dedicating a Cluster\")\n    public List<DedicatedResourceVO> dedicateCluster(final Long clusterId, final Long domainId, final String accountName) {\n        Long accountId = null;\n        List<HostVO> hosts = null;\n        if (accountName != null) {\n            Account caller = CallContext.current().getCallingAccount();\n            Account owner = _accountMgr.finalizeOwner(caller, accountName, domainId, null);\n            accountId = owner.getId();\n        }\n        List<Long> childDomainIds = getDomainChildIds(domainId);\n        childDomainIds.add(domainId);\n        checkAccountAndDomain(accountId, domainId);\n        ClusterVO cluster = _clusterDao.findById(clusterId);\n        if (cluster == null) {\n            throw new InvalidParameterValueException(\"Unable to find cluster by id \" + clusterId);\n        } else {\n            DedicatedResourceVO dedicatedCluster = _dedicatedDao.findByClusterId(clusterId);\n            DedicatedResourceVO dedicatedPodOfCluster = _dedicatedDao.findByPodId(cluster.getPodId());\n            DedicatedResourceVO dedicatedZoneOfCluster = _dedicatedDao.findByZoneId(cluster.getDataCenterId());\n\n            //check if cluster is dedicated\n            if (dedicatedCluster != null) {\n                s_logger.error(\"Cluster \" + cluster.getName() + \" is already dedicated\");\n                throw new CloudRuntimeException(\"Cluster \" + cluster.getName() + \" is already dedicated\");\n            }\n\n            if (dedicatedPodOfCluster != null) {\n                boolean domainIdInChildreanList = getDomainChildIds(dedicatedPodOfCluster.getDomainId()).contains(domainId);\n                //can dedicate a cluster to an account/domain if pod is dedicated to parent-domain\n                if (dedicatedPodOfCluster.getAccountId() != null || (accountId == null && !domainIdInChildreanList) ||\n                    (accountId != null && !(dedicatedPodOfCluster.getDomainId() == domainId || domainIdInChildreanList))) {\n                    s_logger.error(\"Cannot dedicate Cluster. Its Pod is already dedicated\");\n                    HostPodVO pod = _podDao.findById(cluster.getPodId());\n                    throw new CloudRuntimeException(\"Cluster's Pod \" + pod.getName() + \" is already dedicated\");\n                }\n            }\n\n            if (dedicatedZoneOfCluster != null) {\n                boolean domainIdInChildreanList = getDomainChildIds(dedicatedZoneOfCluster.getDomainId()).contains(domainId);\n                //can dedicate a cluster to an account/domain if zone is dedicated to parent-domain\n                if (dedicatedZoneOfCluster.getAccountId() != null || (accountId == null && !domainIdInChildreanList) ||\n                    (accountId != null && !(dedicatedZoneOfCluster.getDomainId() == domainId || domainIdInChildreanList))) {\n                    s_logger.error(\"Cannot dedicate Cluster. Its zone is already dedicated\");\n                    DataCenterVO zone = _zoneDao.findById(cluster.getDataCenterId());\n                    throw new CloudRuntimeException(\"Cluster's Zone \" + zone.getName() + \" is already dedicated\");\n                }\n            }\n\n            //check if any resource under this cluster is dedicated to different account or sub-domain\n            hosts = _hostDao.findByClusterId(cluster.getId());\n            List<DedicatedResourceVO> hostsToRelease = new ArrayList<DedicatedResourceVO>();\n            for (HostVO host : hosts) {\n                DedicatedResourceVO dHost = _dedicatedDao.findByHostId(host.getId());\n                if (dHost != null) {\n                    if (!(childDomainIds.contains(dHost.getDomainId()))) {\n                        throw new CloudRuntimeException(\"Host \" + host.getName() + \" under this Cluster \" + cluster.getName() +\n                            \" is dedicated to different account/domain\");\n                    }\n                    /*if all dedicated resources belongs to same account and domain then we should release dedication\n                    and make new entry for this cluster */\n                    if (accountId != null) {\n                        if (dHost.getAccountId() == accountId) {\n                            hostsToRelease.add(dHost);\n                        } else {\n                            s_logger.error(\"Cannot dedicate Cluster \" + cluster.getName() + \" to account\" + accountName);\n                            throw new CloudRuntimeException(\"Cannot dedicate Cluster \" + cluster.getName() + \" to account\" + accountName);\n                        }\n                    } else {\n                        if (dHost.getAccountId() == null && dHost.getDomainId() == domainId) {\n                            hostsToRelease.add(dHost);\n                        }\n                    }\n                }\n            }\n\n            for (DedicatedResourceVO dr : hostsToRelease) {\n                releaseDedicatedResource(null, null, null, dr.getHostId());\n            }\n        }\n\n        checkHostsSuitabilityForExplicitDedication(accountId, childDomainIds, hosts);\n\n        final Long accountIdFinal = accountId;\n        return Transaction.execute(new TransactionCallback<List<DedicatedResourceVO>>() {\n            @Override\n            public List<DedicatedResourceVO> doInTransaction(TransactionStatus status) {\n                // find or create the affinity group by name under this account/domain\n                AffinityGroup group = findOrCreateDedicatedAffinityGroup(domainId, accountIdFinal);\n                if (group == null) {\n                    s_logger.error(\"Unable to dedicate zone due to, failed to create dedication affinity group\");\n                    throw new CloudRuntimeException(\"Failed to dedicate zone. Please contact Cloud Support.\");\n                }\n                DedicatedResourceVO dedicatedResource = new DedicatedResourceVO(null, null, clusterId, null, null, null, group.getId());\n                try {\n                    dedicatedResource.setDomainId(domainId);\n                    if (accountIdFinal != null) {\n                        dedicatedResource.setAccountId(accountIdFinal);\n                    }\n                    dedicatedResource = _dedicatedDao.persist(dedicatedResource);\n                } catch (Exception e) {\n                    s_logger.error(\"Unable to dedicate host due to \" + e.getMessage(), e);\n                    throw new CloudRuntimeException(\"Failed to dedicate cluster. Please contact Cloud Support.\");\n                }\n\n                List<DedicatedResourceVO> result = new ArrayList<DedicatedResourceVO>();\n                result.add(dedicatedResource);\n                return result;\n            }\n        });\n    }","id":4751,"modified_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_DEDICATE_RESOURCE, eventDescription = \"dedicating a Cluster\")\n    public List<DedicatedResourceVO> dedicateCluster(final Long clusterId, final Long domainId, final String accountName) {\n        Long accountId = null;\n        List<HostVO> hosts = null;\n        if (accountName != null) {\n            Account caller = CallContext.current().getCallingAccount();\n            Account owner = _accountMgr.finalizeOwner(caller, accountName, domainId, null);\n            accountId = owner.getId();\n        }\n        List<Long> childDomainIds = getDomainChildIds(domainId);\n        childDomainIds.add(domainId);\n        checkAccountAndDomain(accountId, domainId);\n        ClusterVO cluster = _clusterDao.findById(clusterId);\n        if (cluster == null) {\n            throw new InvalidParameterValueException(\"Unable to find cluster by id \" + clusterId);\n        } else {\n            DedicatedResourceVO dedicatedCluster = _dedicatedDao.findByClusterId(clusterId);\n            DedicatedResourceVO dedicatedPodOfCluster = _dedicatedDao.findByPodId(cluster.getPodId());\n            DedicatedResourceVO dedicatedZoneOfCluster = _dedicatedDao.findByZoneId(cluster.getDataCenterId());\n\n            //check if cluster is dedicated\n            if (dedicatedCluster != null) {\n                s_logger.error(\"Cluster \" + cluster.getName() + \" is already dedicated\");\n                throw new CloudRuntimeException(\"Cluster \" + cluster.getName() + \" is already dedicated\");\n            }\n\n            if (dedicatedPodOfCluster != null) {\n                boolean domainIdInChildreanList = getDomainChildIds(dedicatedPodOfCluster.getDomainId()).contains(domainId);\n                //can dedicate a cluster to an account/domain if pod is dedicated to parent-domain\n                if (dedicatedPodOfCluster.getAccountId() != null || (accountId == null && !domainIdInChildreanList) ||\n                    (accountId != null && !(dedicatedPodOfCluster.getDomainId().equals(domainId) || domainIdInChildreanList))) {\n                    s_logger.error(\"Cannot dedicate Cluster. Its Pod is already dedicated\");\n                    HostPodVO pod = _podDao.findById(cluster.getPodId());\n                    throw new CloudRuntimeException(\"Cluster's Pod \" + pod.getName() + \" is already dedicated\");\n                }\n            }\n\n            if (dedicatedZoneOfCluster != null) {\n                boolean domainIdInChildreanList = getDomainChildIds(dedicatedZoneOfCluster.getDomainId()).contains(domainId);\n                //can dedicate a cluster to an account/domain if zone is dedicated to parent-domain\n                if (dedicatedZoneOfCluster.getAccountId() != null || (accountId == null && !domainIdInChildreanList) ||\n                    (accountId != null && !(dedicatedZoneOfCluster.getDomainId().equals(domainId) || domainIdInChildreanList))) {\n                    s_logger.error(\"Cannot dedicate Cluster. Its zone is already dedicated\");\n                    DataCenterVO zone = _zoneDao.findById(cluster.getDataCenterId());\n                    throw new CloudRuntimeException(\"Cluster's Zone \" + zone.getName() + \" is already dedicated\");\n                }\n            }\n\n            //check if any resource under this cluster is dedicated to different account or sub-domain\n            hosts = _hostDao.findByClusterId(cluster.getId());\n            List<DedicatedResourceVO> hostsToRelease = new ArrayList<DedicatedResourceVO>();\n            for (HostVO host : hosts) {\n                DedicatedResourceVO dHost = _dedicatedDao.findByHostId(host.getId());\n                if (dHost != null) {\n                    if (!(childDomainIds.contains(dHost.getDomainId()))) {\n                        throw new CloudRuntimeException(\"Host \" + host.getName() + \" under this Cluster \" + cluster.getName() +\n                            \" is dedicated to different account/domain\");\n                    }\n                    /*if all dedicated resources belongs to same account and domain then we should release dedication\n                    and make new entry for this cluster */\n                    if (accountId != null) {\n                        if (dHost.getAccountId().equals(accountId)) {\n                            hostsToRelease.add(dHost);\n                        } else {\n                            s_logger.error(\"Cannot dedicate Cluster \" + cluster.getName() + \" to account\" + accountName);\n                            throw new CloudRuntimeException(\"Cannot dedicate Cluster \" + cluster.getName() + \" to account\" + accountName);\n                        }\n                    } else {\n                        if (dHost.getAccountId() == null && dHost.getDomainId().equals(domainId)) {\n                            hostsToRelease.add(dHost);\n                        }\n                    }\n                }\n            }\n\n            for (DedicatedResourceVO dr : hostsToRelease) {\n                releaseDedicatedResource(null, null, null, dr.getHostId());\n            }\n        }\n\n        checkHostsSuitabilityForExplicitDedication(accountId, childDomainIds, hosts);\n\n        final Long accountIdFinal = accountId;\n        return Transaction.execute(new TransactionCallback<List<DedicatedResourceVO>>() {\n            @Override\n            public List<DedicatedResourceVO> doInTransaction(TransactionStatus status) {\n                // find or create the affinity group by name under this account/domain\n                AffinityGroup group = findOrCreateDedicatedAffinityGroup(domainId, accountIdFinal);\n                if (group == null) {\n                    s_logger.error(\"Unable to dedicate zone due to, failed to create dedication affinity group\");\n                    throw new CloudRuntimeException(\"Failed to dedicate zone. Please contact Cloud Support.\");\n                }\n                DedicatedResourceVO dedicatedResource = new DedicatedResourceVO(null, null, clusterId, null, null, null, group.getId());\n                try {\n                    dedicatedResource.setDomainId(domainId);\n                    if (accountIdFinal != null) {\n                        dedicatedResource.setAccountId(accountIdFinal);\n                    }\n                    dedicatedResource = _dedicatedDao.persist(dedicatedResource);\n                } catch (Exception e) {\n                    s_logger.error(\"Unable to dedicate host due to \" + e.getMessage(), e);\n                    throw new CloudRuntimeException(\"Failed to dedicate cluster. Please contact Cloud Support.\");\n                }\n\n                List<DedicatedResourceVO> result = new ArrayList<DedicatedResourceVO>();\n                result.add(dedicatedResource);\n                return result;\n            }\n        });\n    }","commit_id":"e0a4b7c891b1bf84c8f5be8b085a3f41948d12f0","url":"https://github.com/apache/cloudstack"},{"original_method":"public static serverObjects respond(httpHeader header, serverObjects post, serverSwitch switchboard) {\r\n        plasmaSwitchboard sb = (plasmaSwitchboard) switchboard;\r\n        final long start = System.currentTimeMillis();\r\n        \r\n        // return variable that accumulates replacements\r\n        final serverObjects prop = new serverObjects();\r\n        prop.setLocalized(!((String)header.get(\"PATH\")).endsWith(\".xml\"));\r\n        prop.putHTML(\"page_networkTitle\", sb.getConfig(\"network.unit.description\", \"unspecified\"));\r\n        prop.putHTML(\"page_networkName\", sb.getConfig(\"network.unit.name\", \"unspecified\"));\r\n        final boolean overview = (post == null) || (post.get(\"page\", \"0\").equals(\"0\"));\r\n\r\n        final String mySeedType = yacyCore.seedDB.mySeed().get(yacySeed.PEERTYPE, yacySeed.PEERTYPE_VIRGIN);\r\n        final boolean iAmActive = (mySeedType.equals(yacySeed.PEERTYPE_SENIOR) || mySeedType.equals(yacySeed.PEERTYPE_PRINCIPAL));\r\n\r\n        if (overview) {\r\n            long accActLinks = yacyCore.seedDB.countActiveURL();\r\n            long accActWords = yacyCore.seedDB.countActiveRWI();\r\n            final long accPassLinks = yacyCore.seedDB.countPassiveURL();\r\n            final long accPassWords = yacyCore.seedDB.countPassiveRWI();\r\n            long accPotLinks = yacyCore.seedDB.countPotentialURL();\r\n            long accPotWords = yacyCore.seedDB.countPotentialRWI();\r\n\r\n            int conCount = yacyCore.seedDB.sizeConnected();\r\n            final int disconCount = yacyCore.seedDB.sizeDisconnected();\r\n            int potCount = yacyCore.seedDB.sizePotential();\r\n\r\n//          final boolean complete = ((post == null) ? false : post.get(\"links\", \"false\").equals(\"true\"));\r\n            final long otherppm = yacyCore.seedDB.countActivePPM();\r\n            final double otherqpm = yacyCore.seedDB.countActiveQPM();\r\n            long myppm = 0;\r\n            double myqph = 0d;\r\n\r\n            // create own peer info\r\n            yacySeed seed = yacyCore.seedDB.mySeed();\r\n            if (yacyCore.seedDB.mySeed() != null){ //our Peer\r\n                // update seed info\r\n                yacyCore.peerActions.updateMySeed();\r\n                \r\n                long LCount;\r\n                long ICount;\r\n                long RCount;\r\n                try {\r\n                    LCount = Long.parseLong(seed.get(yacySeed.LCOUNT, \"0\"));\r\n                    ICount = Long.parseLong(seed.get(yacySeed.ICOUNT, \"0\"));\r\n                    RCount = Long.parseLong(seed.get(yacySeed.RCOUNT, \"0\"));\r\n                } catch (Exception e) {LCount = 0; ICount = 0; RCount = 0;}\r\n\r\n                // my-info\r\n                prop.putHTML(\"table_my-name\", seed.get(yacySeed.NAME, \"-\") );\r\n                prop.put(\"table_my-hash\", seed.hash );\r\n                if (yacyCore.seedDB.mySeed().isVirgin()) {\r\n                    prop.put(\"table_my-info\", 0);\r\n                } else if(yacyCore.seedDB.mySeed().isJunior()) {\r\n                    prop.put(\"table_my-info\", 1);\r\n                    accPotLinks += LCount;\r\n                    accPotWords += ICount;\r\n                } else if(yacyCore.seedDB.mySeed().isSenior()) {\r\n                    prop.put(\"table_my-info\", 2);\r\n                    accActLinks += LCount;\r\n                    accActWords += ICount;\r\n                } else if(yacyCore.seedDB.mySeed().isPrincipal()) {\r\n                    prop.put(\"table_my-info\", 3);\r\n                    accActLinks += LCount;\r\n                    accActWords += ICount;\r\n                }\r\n                prop.put(\"table_my-acceptcrawl\", seed.getFlagAcceptRemoteCrawl() ? 1 : 0);\r\n                prop.put(\"table_my-dhtreceive\", seed.getFlagAcceptRemoteIndex() ? 1 : 0);\r\n                prop.put(\"table_my-rankingreceive\", seed.getFlagAcceptCitationReference() ? 1 : 0);\r\n\r\n\r\n                myppm = seed.getPPM();\r\n                myqph = 60d * seed.getQPM();\r\n                prop.put(\"table_my-version\", seed.get(yacySeed.VERSION, \"-\"));\r\n                prop.put(\"table_my-utc\", seed.get(yacySeed.UTC, \"-\"));\r\n                prop.put(\"table_my-uptime\", serverDate.intervalToString(60000 * Long.parseLong(seed.get(yacySeed.UPTIME, \"\"))));\r\n                prop.putNum(\"table_my-LCount\", LCount);\r\n                prop.putNum(\"table_my-ICount\", ICount);\r\n                prop.putNum(\"table_my-RCount\", RCount);\r\n                prop.putNum(\"table_my-sI\", Long.parseLong(seed.get(yacySeed.INDEX_OUT, \"0\")));\r\n                prop.putNum(\"table_my-sU\", Long.parseLong(seed.get(yacySeed.URL_OUT, \"0\")));\r\n                prop.putNum(\"table_my-rI\", Long.parseLong(seed.get(yacySeed.INDEX_IN, \"0\")));\r\n                prop.putNum(\"table_my-rU\", Long.parseLong(seed.get(yacySeed.URL_IN, \"0\")));\r\n                prop.putNum(\"table_my-ppm\", myppm);\r\n                prop.putNum(\"table_my-qph\", Math.round(100d * myqph) / 100d);\r\n                prop.putNum(\"table_my-totalppm\", sb.totalPPM);\r\n                prop.putNum(\"table_my-totalqph\", Math.round(6000d * sb.totalQPM) / 100d);\r\n                prop.putNum(\"table_my-seeds\", Long.parseLong(seed.get(yacySeed.SCOUNT, \"0\")));\r\n                prop.putNum(\"table_my-connects\", Double.parseDouble(seed.get(yacySeed.CCOUNT, \"0\")));\r\n                prop.put(\"table_my-url\", seed.get(\"seedURL\", \"\"));\r\n                \r\n                // generating the location string\r\n                String location = httpc.userAgent;\r\n                int p = location.lastIndexOf(';');\r\n                location = (p > 0) ? location.substring(p + 1, location.length() - 1).trim(): \"\";\r\n                prop.putHTML(\"table_my-location\", location);\r\n            }\r\n\r\n            // overall results: Network statistics\r\n            if (iAmActive) conCount++; else if (mySeedType.equals(yacySeed.PEERTYPE_JUNIOR)) potCount++;\r\n            prop.putNum(\"table_active-count\", conCount);\r\n            prop.putNum(\"table_active-links\", accActLinks);\r\n            prop.putNum(\"table_active-words\", accActWords);\r\n            prop.putNum(\"table_passive-count\", disconCount);\r\n            prop.putNum(\"table_passive-links\", accPassLinks);\r\n            prop.putNum(\"table_passive-words\", accPassWords);\r\n            prop.putNum(\"table_potential-count\", potCount);\r\n            prop.putNum(\"table_potential-links\", accPotLinks);\r\n            prop.putNum(\"table_potential-words\", accPotWords);\r\n            prop.putNum(\"table_all-count\", conCount + disconCount + potCount);\r\n            prop.putNum(\"table_all-links\", accActLinks + accPassLinks + accPotLinks);\r\n            prop.putNum(\"table_all-words\", accActWords + accPassWords + accPotWords);\r\n\r\n            prop.putNum(\"table_gppm\", otherppm + ((iAmActive) ? myppm : 0));\r\n            prop.putNum(\"table_gqph\", Math.round(6000d * otherqpm + 100d * ((iAmActive) ? myqph : 0d)) / 100d);\r\n\r\n//          String comment = \"\";\r\n            prop.put(\"table_comment\", 0);\r\n            if (conCount == 0) {\r\n                if (Integer.parseInt(sb.getConfig(\"onlineMode\", \"1\")) == 2) {\r\n                    prop.put(\"table_comment\", 1);//in onlinemode, but not online\r\n                } else {\r\n                    prop.put(\"table_comment\", 2);//not in online mode, and not online\r\n                }\r\n            }\r\n            prop.put(\"table\", 2); // triggers overview\r\n            prop.put(\"page\", 0);\r\n        } else if (Integer.parseInt(post.get(\"page\", \"1\")) == 4) {\r\n            prop.put(\"table\", 4); // triggers overview\r\n            prop.put(\"page\", 4);          \r\n\r\n            if (post.containsKey(\"addPeer\")) {\r\n\r\n                // AUTHENTICATE\r\n                if (!header.containsKey(httpHeader.AUTHORIZATION)) {\r\n                    prop.putHTML(\"AUTHENTICATE\",\"log-in\");\r\n                    return prop;\r\n                }\r\n\r\n                final HashMap map = new HashMap();\r\n                map.put(yacySeed.IP,post.get(\"peerIP\"));\r\n                map.put(yacySeed.PORT,post.get(\"peerPort\"));\r\n                yacySeed peer = new yacySeed((String) post.get(\"peerHash\"),map);\r\n\r\n                yacyCore.peerActions.updateMySeed();\r\n                final int added = yacyClient.publishMySeed(peer.getPublicAddress(), peer.hash);\r\n\r\n                if (added <= 0) {\r\n                    prop.put(\"table_comment\",1);\r\n                    prop.putHTML(\"table_comment_status\",\"publish: disconnected peer '\" + peer.getName() + \"/\" + post.get(\"peerHash\") + \"' from \" + peer.getPublicAddress());\r\n                } else {\r\n                    peer = yacyCore.seedDB.getConnected(peer.hash);\r\n                    if (peer == null) {\r\n                        prop.put(\"table_comment\",1);\r\n                        prop.put(\"table_comment_status\",\"publish: disconnected peer 'UNKNOWN/\" + post.get(\"peerHash\") + \"' from UNKNOWN\");\r\n                    } else {\r\n                        prop.put(\"table_comment\",2);\r\n                        prop.putHTML(\"table_comment_status\",\"publish: handshaked \" + peer.get(yacySeed.PEERTYPE, yacySeed.PEERTYPE_SENIOR) + \" peer '\" + peer.getName() + \"' at \" + peer.getPublicAddress());\r\n                        prop.putHTML(\"table_comment_details\",peer.toString());\r\n                    }\r\n                }\r\n\r\n                prop.put(\"table_peerHash\",(String) post.get(\"peerHash\"));\r\n                prop.put(\"table_peerIP\",(String)post.get(\"peerIP\"));\r\n                prop.put(\"table_peerPort\",(String) post.get(\"peerPort\"));                \r\n            } else {\r\n                prop.put(\"table_peerHash\",\"\");\r\n                prop.put(\"table_peerIP\",\"\");\r\n                prop.put(\"table_peerPort\",\"\");\r\n\r\n                prop.put(\"table_comment\",0);\r\n            }\r\n        } else {\r\n            // generate table\r\n            final int page = Integer.parseInt(post.get(\"page\", \"1\"));\r\n            final int maxCount = Integer.parseInt(post.get(\"maxCount\", \"300\"));\r\n            int conCount = 0;            \r\n            if (yacyCore.seedDB == null) {\r\n                prop.put(\"table\", 0);//no remote senior/principal proxies known\"\r\n            } else {\r\n                int size = 0;\r\n                switch (page) {\r\n                    case 1 : size = yacyCore.seedDB.sizeConnected(); break;\r\n                    case 2 : size = yacyCore.seedDB.sizeDisconnected(); break;\r\n                    case 3 : size = yacyCore.seedDB.sizePotential(); break;\r\n                    default: break;\r\n                }\r\n                if (size == 0) {\r\n                    prop.put(\"table\", 0);//no remote senior/principal proxies known\"\r\n                } else {\r\n                    // add temporary the own seed to the database\r\n                    if (iAmActive) {\r\n                        yacyCore.peerActions.updateMySeed();\r\n                        yacyCore.seedDB.addConnected(yacyCore.seedDB.mySeed());\r\n                    }\r\n\r\n                    // find updated Information using YaCyNews\r\n                    final HashSet updatedProfile = new HashSet();\r\n                    final HashMap updatedWiki = new HashMap();\r\n                    final HashMap updatedBlog = new HashMap();\r\n                    final HashMap isCrawling = new HashMap();\r\n                    yacyNewsRecord record;\r\n                    Iterator recordIterator = yacyCore.newsPool.recordIterator(yacyNewsPool.INCOMING_DB, true);\r\n                    while (recordIterator.hasNext()) {\r\n                        record = (yacyNewsRecord) recordIterator.next();\r\n                        if (record == null) {\r\n                            continue;\r\n                        } else if (record.category().equals(yacyNewsPool.CATEGORY_PROFILE_UPDATE)) {\r\n                            updatedProfile.add(record.originator());\r\n                        } else if (record.category().equals(yacyNewsPool.CATEGORY_WIKI_UPDATE)) {\r\n                            updatedWiki.put(record.originator(), record.attributes());\r\n                        } else if (record.category().equals(yacyNewsPool.CATEGORY_BLOG_ADD)) {\r\n                            updatedBlog.put(record.originator(), record.attributes());\r\n                        } else if (record.category().equals(yacyNewsPool.CATEGORY_CRAWL_START)) {\r\n                            isCrawling.put(record.originator(), record.attributes().get(\"startURL\"));\r\n                        }\r\n                    }\r\n\r\n                    boolean dark = true;\r\n                    yacySeed seed;\r\n                    final boolean complete = post.containsKey(\"ip\");\r\n                    Iterator e = null;\r\n                    switch (page) {\r\n                        case 1 : e = yacyCore.seedDB.seedsSortedConnected(post.get(\"order\", \"down\").equals(\"up\"), post.get(\"sort\", yacySeed.LCOUNT)); break;\r\n                        case 2 : e = yacyCore.seedDB.seedsSortedDisconnected(post.get(\"order\", \"down\").equals(\"up\"), post.get(\"sort\", yacySeed.LASTSEEN)); break;\r\n                        case 3 : e = yacyCore.seedDB.seedsSortedPotential(post.get(\"order\", \"down\").equals(\"up\"), post.get(\"sort\", yacySeed.LASTSEEN)); break;\r\n                        default: break;\r\n                    }\r\n                    int p;\r\n                    String startURL;\r\n                    Map wikiMap;\r\n                    Map blogMap;\r\n                    String userAgent, location;\r\n                    int PPM;\r\n                    double QPM;\r\n                    Pattern peerSearchPattern = null;\r\n                    String wrongregex = null;\r\n                    prop.put(\"regexerror\", 0);\r\n                    prop.put(\"regexerror_wrongregex\", (String)null);\r\n                    if(post.containsKey(\"search\")) {\r\n                        try {\r\n                            peerSearchPattern = Pattern.compile(post.get(\"match\", \"\"), Pattern.CASE_INSENSITIVE);\r\n                        } catch (PatternSyntaxException pse){\r\n                            wrongregex = pse.getPattern();\r\n                            prop.put(\"regexerror\", 1);\r\n                            prop.putHTML(\"regexerror_wrongregex\", wrongregex);\r\n                        }\r\n                    }\r\n                    while (e.hasNext() && conCount < maxCount) {\r\n                        seed = (yacySeed) e.next();\r\n                        if (seed != null) {\r\n                            if((post.containsKey(\"search\"))  && (wrongregex == null)) {\r\n                                boolean abort = true;\r\n                                Matcher m = peerSearchPattern.matcher (seed.getName());\r\n                                if (m.find ()) {\r\n                                    abort = false;\r\n                                }\r\n                                m = peerSearchPattern.matcher (seed.hash);\r\n                                if (m.find ()) {\r\n                                    abort = false;\r\n                                }\r\n                                if (abort) continue;\r\n                            }\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_updatedProfile\", 0);\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_updatedWikiPage\", 0);\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_updatedBlog\", 0);\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_isCrawling\", 0);\r\n                            if (conCount >= maxCount) { break; }\r\n                            if (seed.hash.equals(yacyCore.seedDB.mySeed().hash)) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_dark\", 2);\r\n                            } else {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_dark\", ((dark) ? 1 : 0) ); dark=!dark;\r\n                            }\r\n                            if (updatedProfile.contains(seed.hash)) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedProfile\", 1);\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedProfile_hash\", seed.hash);\r\n                            }\r\n                            if ((wikiMap = (Map) updatedWiki.get(seed.hash)) == null) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedWiki\", 0);\r\n                            } else {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedWiki\", 1);\r\n                                prop.putHTML(STR_TABLE_LIST + conCount + \"_updatedWiki_page\", (String) wikiMap.get(\"page\"));\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedWiki_address\", seed.getPublicAddress());\r\n                            }\r\n                            if ((blogMap = (Map) updatedBlog.get(seed.hash)) == null) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedBlog\", 0);\r\n                            } else {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedBlog\", 1);\r\n                                prop.putHTML(STR_TABLE_LIST + conCount + \"_updatedBlog_page\", (String) blogMap.get(\"page\"));\r\n                                prop.putHTML(STR_TABLE_LIST + conCount + \"_updatedBlog_subject\", (String) blogMap.get(\"subject\"));\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedBlog_address\", seed.getPublicAddress());\r\n                            }\r\n                            PPM = seed.getPPM();\r\n                            QPM = seed.getQPM();\r\n                            if (((startURL = (String) isCrawling.get(seed.hash)) != null) && (PPM >= 4)) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_isCrawling\", 1);\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_isCrawling_page\", startURL);\r\n                            }\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_hash\", seed.hash);\r\n                            String shortname = seed.get(yacySeed.NAME, \"deadlink\");\r\n                            if (shortname.length() > 20) {\r\n                                shortname = shortname.substring(0, 20) + \"...\"; \r\n                            }\r\n                            prop.putHTML(STR_TABLE_LIST + conCount + \"_shortname\", shortname);\r\n                            prop.putHTML(STR_TABLE_LIST + conCount + \"_fullname\", seed.get(yacySeed.NAME, \"deadlink\"));\r\n                            userAgent = null;\r\n                            if (seed.hash.equals(yacyCore.seedDB.mySeed().hash)) {\r\n                               userAgent = httpc.userAgent;\r\n                            } else {\r\n                               userAgent = yacyCore.peerActions.getUserAgent(seed.getIP());\r\n                            }\r\n                            p = userAgent.lastIndexOf(';');\r\n                            location = (p > 0) ? userAgent.substring(p + 1, userAgent.length() - 1).trim(): \"\";\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_location\", location);\r\n                            if (complete) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_complete\", 1);\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_complete_ip\", seed.get(yacySeed.IP, \"-\") );\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_complete_port\", seed.get(yacySeed.PORT, \"-\") );\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_complete_hash\", seed.hash);\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_complete_age\", seed.getAge());\r\n                                prop.putNum(STR_TABLE_LIST + conCount + \"_complete_CRWCnt\", Long.parseLong(seed.get(yacySeed.CRWCNT, \"0\")));\r\n                                prop.putNum(STR_TABLE_LIST + conCount + \"_complete_CRTCnt\", Long.parseLong(seed.get(yacySeed.CRTCNT, \"0\")));\r\n                                prop.putNum(STR_TABLE_LIST + conCount + \"_complete_seeds\", Long.parseLong(seed.get(yacySeed.SCOUNT, \"0\")));\r\n                                prop.putNum(STR_TABLE_LIST + conCount + \"_complete_connects\", Double.parseDouble(seed.get(yacySeed.CCOUNT, \"0\")));\r\n                                prop.putHTML(STR_TABLE_LIST + conCount + \"_complete_userAgent\", userAgent);\r\n                            } else {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_complete\", 0);\r\n                            }\r\n\r\n\r\n                            if (seed.isJunior()) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_type\", 0);\r\n                            } else if(seed.isSenior()){\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_type\", 1);\r\n                            } else if(seed.isPrincipal()) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_type\", 2);\r\n                            }\r\n                            prop.putHTML(STR_TABLE_LIST + conCount + \"_type_url\", seed.get(\"seedURL\", \"http://nowhere/\"));\r\n\r\n                            final long lastseen = Math.abs((System.currentTimeMillis() - seed.getLastSeenUTC()) / 1000 / 60);\r\n                            if (page == 2 || lastseen > 1440) { // Passive Peers should be passive, also Peers without contact greater than an day\r\n                                // principal/senior/junior: red/red=offline\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_type_direct\", 2);\r\n                            } else {\r\n                                // principal/senior: green/green=direct or yellow/yellow=passive\r\n                                // junior: red/green=direct or red/yellow=passive\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_type_direct\", seed.getFlagDirectConnect() ? 1 : 0);\r\n                            }\r\n                            \r\n                            if (page == 1) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_acceptcrawl\", seed.getFlagAcceptRemoteCrawl() ? 1 : 0); // green=on or red=off \r\n                                prop.put(STR_TABLE_LIST + conCount + \"_dhtreceive\", seed.getFlagAcceptRemoteIndex() ? 1 : 0);  // green=on or red=off\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_rankingreceive\", (seed.getVersion() >= yacyVersion.YACY_ACCEPTS_RANKING_TRANSMISSION) ? 1 : 0);\r\n                            } else { // Passive, Potential Peers\r\n                                if (seed.getFlagAcceptRemoteCrawl()) {\r\n                                    prop.put(STR_TABLE_LIST + conCount + \"_acceptcrawl\", 2); // red/green: offline, was on\r\n                                } else {\r\n                                    prop.put(STR_TABLE_LIST + conCount + \"_acceptcrawl\", 0); // red/red; offline was off\r\n                                }\r\n                                if (seed.getFlagAcceptRemoteIndex()) {\r\n                                    prop.put(STR_TABLE_LIST + conCount + \"_dhtreceive\", 2);  // red/green: offline, was on\r\n                                } else {\r\n                                    prop.put(STR_TABLE_LIST + conCount + \"_dhtreceive\", 0);  // red/red; offline was off\r\n                                }\r\n                                \r\n                                if (seed.getVersion() >= yacyVersion.YACY_ACCEPTS_RANKING_TRANSMISSION &&\r\n                                    seed.getFlagAcceptCitationReference()) {\r\n                                    prop.put(STR_TABLE_LIST + conCount + \"_rankingreceive\", 1);\r\n                                } else {\r\n                                    prop.put(STR_TABLE_LIST + conCount + \"_rankingreceive\", 0);\r\n                                }\r\n                            }\r\n                            if (seed.getFlagAcceptRemoteIndex()) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_dhtreceive_peertags\", \"\");\r\n                            } else {\r\n                                String peertags = serverCodings.set2string(seed.getPeerTags(), \",\", false);\r\n                                prop.putHTML(STR_TABLE_LIST + conCount + \"_dhtreceive_peertags\", ((peertags == null) || (peertags.length() == 0)) ? \"no tags given\" : (\"tags = \" + peertags));\r\n                            }\r\n                            prop.putHTML(STR_TABLE_LIST + conCount + \"_version\", yacyVersion.combined2prettyVersion(seed.get(yacySeed.VERSION, \"0.1\"), shortname));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_lastSeen\", /*seed.getLastSeenString() + \" \" +*/ lastseen);\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_utc\", seed.get(yacySeed.UTC, \"-\"));\r\n                            prop.putHTML(STR_TABLE_LIST + conCount + \"_uptime\", serverDate.intervalToString(60000 * Long.parseLong(seed.get(yacySeed.UPTIME, \"0\"))));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_LCount\", Long.parseLong(seed.get(yacySeed.LCOUNT, \"0\")));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_ICount\", Long.parseLong(seed.get(yacySeed.ICOUNT, \"0\")));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_RCount\", Long.parseLong(seed.get(yacySeed.RCOUNT, \"0\")));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_sI\", Long.parseLong(seed.get(yacySeed.INDEX_OUT, \"0\")));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_sU\", Long.parseLong(seed.get(yacySeed.URL_OUT, \"0\")));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_rI\", Long.parseLong(seed.get(yacySeed.INDEX_IN, \"0\")));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_rU\", Long.parseLong(seed.get(yacySeed.URL_IN, \"0\")));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_ppm\", PPM);\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_qph\", Math.round(6000d * QPM) / 100d);\r\n                            conCount++;\r\n                        } // seed != null\r\n                    } // while\r\n                    if (iAmActive) { yacyCore.seedDB.removeMySeed(); }\r\n                    prop.putNum(\"table_list\", conCount);\r\n                    prop.put(\"table\", 1);\r\n                    prop.putNum(\"table_num\", conCount);\r\n                    prop.putNum(\"table_total\", ((page == 1) && (iAmActive)) ? (size + 1) : size );\r\n                    prop.put(\"table_complete\", ((complete)? 1 : 0) );                    \r\n                }\r\n            }\r\n            prop.put(\"page\", page);\r\n            prop.put(\"table_page\", page);\r\n            prop.putHTML(\"table_searchpattern\", post.get(\"match\", \"\"));\r\n            switch (page) {\r\n                case 1 : prop.putHTML(\"table_peertype\", \"senior/principal\"); break;\r\n                case 2 : prop.putHTML(\"table_peertype\", \"senior/principal\"); break;\r\n                case 3 : prop.putHTML(\"table_peertype\", yacySeed.PEERTYPE_JUNIOR); break;\r\n                default: break;\r\n            }\r\n        }\r\n        \r\n        prop.putNum(\"table_rt\", System.currentTimeMillis() - start);\r\n\r\n        // return rewrite properties\r\n        return prop;\r\n    }","id":4752,"modified_method":"public static serverObjects respond(httpHeader header, serverObjects post, serverSwitch switchboard) {\r\n        plasmaSwitchboard sb = (plasmaSwitchboard) switchboard;\r\n        final long start = System.currentTimeMillis();\r\n        \r\n        // return variable that accumulates replacements\r\n        final serverObjects prop = new serverObjects();\r\n        prop.setLocalized(!((String)header.get(\"PATH\")).endsWith(\".xml\"));\r\n        prop.putHTML(\"page_networkTitle\", sb.getConfig(\"network.unit.description\", \"unspecified\"));\r\n        prop.putHTML(\"page_networkName\", sb.getConfig(\"network.unit.name\", \"unspecified\"));\r\n        final boolean overview = (post == null) || (post.get(\"page\", \"0\").equals(\"0\"));\r\n\r\n        final String mySeedType = yacyCore.seedDB.mySeed().get(yacySeed.PEERTYPE, yacySeed.PEERTYPE_VIRGIN);\r\n        final boolean iAmActive = (mySeedType.equals(yacySeed.PEERTYPE_SENIOR) || mySeedType.equals(yacySeed.PEERTYPE_PRINCIPAL));\r\n\r\n        if (overview) {\r\n            long accActLinks = yacyCore.seedDB.countActiveURL();\r\n            long accActWords = yacyCore.seedDB.countActiveRWI();\r\n            final long accPassLinks = yacyCore.seedDB.countPassiveURL();\r\n            final long accPassWords = yacyCore.seedDB.countPassiveRWI();\r\n            long accPotLinks = yacyCore.seedDB.countPotentialURL();\r\n            long accPotWords = yacyCore.seedDB.countPotentialRWI();\r\n\r\n            int conCount = yacyCore.seedDB.sizeConnected();\r\n            final int disconCount = yacyCore.seedDB.sizeDisconnected();\r\n            int potCount = yacyCore.seedDB.sizePotential();\r\n\r\n//          final boolean complete = ((post == null) ? false : post.get(\"links\", \"false\").equals(\"true\"));\r\n            final long otherppm = yacyCore.seedDB.countActivePPM();\r\n            final double otherqpm = yacyCore.seedDB.countActiveQPM();\r\n            long myppm = 0;\r\n            double myqph = 0d;\r\n\r\n            // create own peer info\r\n            yacySeed seed = yacyCore.seedDB.mySeed();\r\n            if (yacyCore.seedDB.mySeed() != null){ //our Peer\r\n                // update seed info\r\n                yacyCore.peerActions.updateMySeed();\r\n                \r\n                long LCount;\r\n                long ICount;\r\n                long RCount;\r\n                try {\r\n                    LCount = Long.parseLong(seed.get(yacySeed.LCOUNT, \"0\"));\r\n                    ICount = Long.parseLong(seed.get(yacySeed.ICOUNT, \"0\"));\r\n                    RCount = Long.parseLong(seed.get(yacySeed.RCOUNT, \"0\"));\r\n                } catch (Exception e) {LCount = 0; ICount = 0; RCount = 0;}\r\n\r\n                // my-info\r\n                prop.putHTML(\"table_my-name\", seed.get(yacySeed.NAME, \"-\") );\r\n                prop.put(\"table_my-hash\", seed.hash );\r\n                if (yacyCore.seedDB.mySeed().isVirgin()) {\r\n                    prop.put(\"table_my-info\", 0);\r\n                } else if(yacyCore.seedDB.mySeed().isJunior()) {\r\n                    prop.put(\"table_my-info\", 1);\r\n                    accPotLinks += LCount;\r\n                    accPotWords += ICount;\r\n                } else if(yacyCore.seedDB.mySeed().isSenior()) {\r\n                    prop.put(\"table_my-info\", 2);\r\n                    accActLinks += LCount;\r\n                    accActWords += ICount;\r\n                } else if(yacyCore.seedDB.mySeed().isPrincipal()) {\r\n                    prop.put(\"table_my-info\", 3);\r\n                    accActLinks += LCount;\r\n                    accActWords += ICount;\r\n                }\r\n                prop.put(\"table_my-acceptcrawl\", seed.getFlagAcceptRemoteCrawl() ? 1 : 0);\r\n                prop.put(\"table_my-dhtreceive\", seed.getFlagAcceptRemoteIndex() ? 1 : 0);\r\n                prop.put(\"table_my-rankingreceive\", seed.getFlagAcceptCitationReference() ? 1 : 0);\r\n\r\n\r\n                myppm = seed.getPPM();\r\n                myqph = 60d * seed.getQPM();\r\n                prop.put(\"table_my-version\", seed.get(yacySeed.VERSION, \"-\"));\r\n                prop.put(\"table_my-utc\", seed.get(yacySeed.UTC, \"-\"));\r\n                prop.put(\"table_my-uptime\", serverDate.intervalToString(60000 * Long.parseLong(seed.get(yacySeed.UPTIME, \"\"))));\r\n                prop.putNum(\"table_my-LCount\", LCount);\r\n                prop.putNum(\"table_my-ICount\", ICount);\r\n                prop.putNum(\"table_my-RCount\", RCount);\r\n                prop.putNum(\"table_my-sI\", Long.parseLong(seed.get(yacySeed.INDEX_OUT, \"0\")));\r\n                prop.putNum(\"table_my-sU\", Long.parseLong(seed.get(yacySeed.URL_OUT, \"0\")));\r\n                prop.putNum(\"table_my-rI\", Long.parseLong(seed.get(yacySeed.INDEX_IN, \"0\")));\r\n                prop.putNum(\"table_my-rU\", Long.parseLong(seed.get(yacySeed.URL_IN, \"0\")));\r\n                prop.putNum(\"table_my-ppm\", myppm);\r\n                prop.putNum(\"table_my-qph\", Math.round(100d * myqph) / 100d);\r\n                prop.putNum(\"table_my-totalppm\", sb.totalPPM);\r\n                prop.putNum(\"table_my-totalqph\", Math.round(6000d * sb.totalQPM) / 100d);\r\n                prop.putNum(\"table_my-seeds\", Long.parseLong(seed.get(yacySeed.SCOUNT, \"0\")));\r\n                prop.putNum(\"table_my-connects\", Double.parseDouble(seed.get(yacySeed.CCOUNT, \"0\")));\r\n                prop.put(\"table_my-url\", seed.get(\"seedURL\", \"\"));\r\n                \r\n                // generating the location string\r\n                String location = httpc.userAgent;\r\n                int p = location.lastIndexOf(';');\r\n                location = (p > 0) ? location.substring(p + 1, location.length() - 1).trim(): \"\";\r\n                prop.putHTML(\"table_my-location\", location);\r\n            }\r\n\r\n            // overall results: Network statistics\r\n            if (iAmActive) conCount++; else if (mySeedType.equals(yacySeed.PEERTYPE_JUNIOR)) potCount++;\r\n            prop.putNum(\"table_active-count\", conCount);\r\n            prop.putNum(\"table_active-links\", accActLinks);\r\n            prop.putNum(\"table_active-words\", accActWords);\r\n            prop.putNum(\"table_passive-count\", disconCount);\r\n            prop.putNum(\"table_passive-links\", accPassLinks);\r\n            prop.putNum(\"table_passive-words\", accPassWords);\r\n            prop.putNum(\"table_potential-count\", potCount);\r\n            prop.putNum(\"table_potential-links\", accPotLinks);\r\n            prop.putNum(\"table_potential-words\", accPotWords);\r\n            prop.putNum(\"table_all-count\", conCount + disconCount + potCount);\r\n            prop.putNum(\"table_all-links\", accActLinks + accPassLinks + accPotLinks);\r\n            prop.putNum(\"table_all-words\", accActWords + accPassWords + accPotWords);\r\n\r\n            prop.putNum(\"table_gppm\", otherppm + ((iAmActive) ? myppm : 0));\r\n            prop.putNum(\"table_gqph\", Math.round(6000d * otherqpm + 100d * ((iAmActive) ? myqph : 0d)) / 100d);\r\n\r\n//          String comment = \"\";\r\n            prop.put(\"table_comment\", 0);\r\n            if (conCount == 0) {\r\n                if (Integer.parseInt(sb.getConfig(\"onlineMode\", \"1\")) == 2) {\r\n                    prop.put(\"table_comment\", 1);//in onlinemode, but not online\r\n                } else {\r\n                    prop.put(\"table_comment\", 2);//not in online mode, and not online\r\n                }\r\n            }\r\n            prop.put(\"table\", 2); // triggers overview\r\n            prop.put(\"page\", 0);\r\n        } else if (Integer.parseInt(post.get(\"page\", \"1\")) == 4) {\r\n            prop.put(\"table\", 4); // triggers overview\r\n            prop.put(\"page\", 4);          \r\n\r\n            if (post.containsKey(\"addPeer\")) {\r\n\r\n                // AUTHENTICATE\r\n                if (!header.containsKey(httpHeader.AUTHORIZATION)) {\r\n                    prop.putHTML(\"AUTHENTICATE\",\"log-in\");\r\n                    return prop;\r\n                }\r\n\r\n                final HashMap map = new HashMap();\r\n                map.put(yacySeed.IP,post.get(\"peerIP\"));\r\n                map.put(yacySeed.PORT,post.get(\"peerPort\"));\r\n                yacySeed peer = new yacySeed((String) post.get(\"peerHash\"),map);\r\n\r\n                yacyCore.peerActions.updateMySeed();\r\n                final int added = yacyClient.publishMySeed(peer.getPublicAddress(), peer.hash);\r\n\r\n                if (added <= 0) {\r\n                    prop.put(\"table_comment\",1);\r\n                    prop.putHTML(\"table_comment_status\",\"publish: disconnected peer '\" + peer.getName() + \"/\" + post.get(\"peerHash\") + \"' from \" + peer.getPublicAddress());\r\n                } else {\r\n                    peer = yacyCore.seedDB.getConnected(peer.hash);\r\n                    if (peer == null) {\r\n                        prop.put(\"table_comment\",1);\r\n                        prop.put(\"table_comment_status\",\"publish: disconnected peer 'UNKNOWN/\" + post.get(\"peerHash\") + \"' from UNKNOWN\");\r\n                    } else {\r\n                        prop.put(\"table_comment\",2);\r\n                        prop.putHTML(\"table_comment_status\",\"publish: handshaked \" + peer.get(yacySeed.PEERTYPE, yacySeed.PEERTYPE_SENIOR) + \" peer '\" + peer.getName() + \"' at \" + peer.getPublicAddress());\r\n                        prop.putHTML(\"table_comment_details\",peer.toString());\r\n                    }\r\n                }\r\n\r\n                prop.put(\"table_peerHash\",(String) post.get(\"peerHash\"));\r\n                prop.put(\"table_peerIP\",(String)post.get(\"peerIP\"));\r\n                prop.put(\"table_peerPort\",(String) post.get(\"peerPort\"));                \r\n            } else {\r\n                prop.put(\"table_peerHash\",\"\");\r\n                prop.put(\"table_peerIP\",\"\");\r\n                prop.put(\"table_peerPort\",\"\");\r\n\r\n                prop.put(\"table_comment\",0);\r\n            }\r\n        } else {\r\n            // generate table\r\n            final int page = Integer.parseInt(post.get(\"page\", \"1\"));\r\n            final int maxCount = Integer.parseInt(post.get(\"maxCount\", \"300\"));\r\n            int conCount = 0;            \r\n            if (yacyCore.seedDB == null) {\r\n                prop.put(\"table\", 0);//no remote senior/principal proxies known\"\r\n            } else {\r\n                int size = 0;\r\n                switch (page) {\r\n                    case 1 : size = yacyCore.seedDB.sizeConnected(); break;\r\n                    case 2 : size = yacyCore.seedDB.sizeDisconnected(); break;\r\n                    case 3 : size = yacyCore.seedDB.sizePotential(); break;\r\n                    default: break;\r\n                }\r\n                if (size == 0) {\r\n                    prop.put(\"table\", 0);//no remote senior/principal proxies known\"\r\n                } else {\r\n                    // add temporary the own seed to the database\r\n                    if (iAmActive) {\r\n                        yacyCore.peerActions.updateMySeed();\r\n                        yacyCore.seedDB.addConnected(yacyCore.seedDB.mySeed());\r\n                    }\r\n\r\n                    // find updated Information using YaCyNews\r\n                    final HashSet updatedProfile = new HashSet();\r\n                    final HashMap updatedWiki = new HashMap();\r\n                    final HashMap updatedBlog = new HashMap();\r\n                    final HashMap isCrawling = new HashMap();\r\n                    yacyNewsRecord record;\r\n                    Iterator recordIterator = yacyCore.newsPool.recordIterator(yacyNewsPool.INCOMING_DB, true);\r\n                    while (recordIterator.hasNext()) {\r\n                        record = (yacyNewsRecord) recordIterator.next();\r\n                        if (record == null) {\r\n                            continue;\r\n                        } else if (record.category().equals(yacyNewsPool.CATEGORY_PROFILE_UPDATE)) {\r\n                            updatedProfile.add(record.originator());\r\n                        } else if (record.category().equals(yacyNewsPool.CATEGORY_WIKI_UPDATE)) {\r\n                            updatedWiki.put(record.originator(), record.attributes());\r\n                        } else if (record.category().equals(yacyNewsPool.CATEGORY_BLOG_ADD)) {\r\n                            updatedBlog.put(record.originator(), record.attributes());\r\n                        } else if (record.category().equals(yacyNewsPool.CATEGORY_CRAWL_START)) {\r\n                            isCrawling.put(record.originator(), record.attributes().get(\"startURL\"));\r\n                        }\r\n                    }\r\n\r\n                    boolean dark = true;\r\n                    yacySeed seed;\r\n                    final boolean complete = post.containsKey(\"ip\");\r\n                    Iterator e = null;\r\n                    switch (page) {\r\n                        case 1 : e = yacyCore.seedDB.seedsSortedConnected(post.get(\"order\", \"down\").equals(\"up\"), post.get(\"sort\", yacySeed.LCOUNT)); break;\r\n                        case 2 : e = yacyCore.seedDB.seedsSortedDisconnected(post.get(\"order\", \"down\").equals(\"up\"), post.get(\"sort\", yacySeed.LASTSEEN)); break;\r\n                        case 3 : e = yacyCore.seedDB.seedsSortedPotential(post.get(\"order\", \"down\").equals(\"up\"), post.get(\"sort\", yacySeed.LASTSEEN)); break;\r\n                        default: break;\r\n                    }\r\n                    int p;\r\n                    String startURL;\r\n                    Map wikiMap;\r\n                    Map blogMap;\r\n                    String userAgent, location;\r\n                    int PPM;\r\n                    double QPM;\r\n                    Pattern peerSearchPattern = null;\r\n                    String wrongregex = null;\r\n                    prop.put(\"regexerror\", 0);\r\n                    prop.put(\"regexerror_wrongregex\", (String)null);\r\n                    if(post.containsKey(\"search\")) {\r\n                        try {\r\n                            peerSearchPattern = Pattern.compile(post.get(\"match\", \"\"), Pattern.CASE_INSENSITIVE);\r\n                        } catch (PatternSyntaxException pse){\r\n                            wrongregex = pse.getPattern();\r\n                            prop.put(\"regexerror\", 1);\r\n                            prop.putHTML(\"regexerror_wrongregex\", wrongregex);\r\n                        }\r\n                    }\r\n                    while (e.hasNext() && conCount < maxCount) {\r\n                        seed = (yacySeed) e.next();\r\n                        if (seed != null) {\r\n                            if((post.containsKey(\"search\"))  && (wrongregex == null)) {\r\n                                boolean abort = true;\r\n                                Matcher m = peerSearchPattern.matcher (seed.getName());\r\n                                if (m.find ()) {\r\n                                    abort = false;\r\n                                }\r\n                                m = peerSearchPattern.matcher (seed.hash);\r\n                                if (m.find ()) {\r\n                                    abort = false;\r\n                                }\r\n                                if (abort) continue;\r\n                            }\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_updatedProfile\", 0);\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_updatedWikiPage\", 0);\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_updatedBlog\", 0);\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_isCrawling\", 0);\r\n                            if (conCount >= maxCount) { break; }\r\n                            if (seed.hash.equals(yacyCore.seedDB.mySeed().hash)) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_dark\", 2);\r\n                            } else {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_dark\", ((dark) ? 1 : 0) ); dark=!dark;\r\n                            }\r\n                            if (updatedProfile.contains(seed.hash)) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedProfile\", 1);\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedProfile_hash\", seed.hash);\r\n                            }\r\n                            if ((wikiMap = (Map) updatedWiki.get(seed.hash)) == null) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedWiki\", 0);\r\n                            } else {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedWiki\", 1);\r\n                                prop.putHTML(STR_TABLE_LIST + conCount + \"_updatedWiki_page\", (String) wikiMap.get(\"page\"));\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedWiki_address\", seed.getPublicAddress());\r\n                            }\r\n                            if ((blogMap = (Map) updatedBlog.get(seed.hash)) == null) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedBlog\", 0);\r\n                            } else {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedBlog\", 1);\r\n                                prop.putHTML(STR_TABLE_LIST + conCount + \"_updatedBlog_page\", (String) blogMap.get(\"page\"));\r\n                                prop.putHTML(STR_TABLE_LIST + conCount + \"_updatedBlog_subject\", (String) blogMap.get(\"subject\"));\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_updatedBlog_address\", seed.getPublicAddress());\r\n                            }\r\n                            PPM = seed.getPPM();\r\n                            QPM = seed.getQPM();\r\n                            if (((startURL = (String) isCrawling.get(seed.hash)) != null) && (PPM >= 4)) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_isCrawling\", 1);\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_isCrawling_page\", startURL);\r\n                            }\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_hash\", seed.hash);\r\n                            String shortname = seed.get(yacySeed.NAME, \"deadlink\");\r\n                            if (shortname.length() > 20) {\r\n                                shortname = shortname.substring(0, 20) + \"...\"; \r\n                            }\r\n                            prop.putHTML(STR_TABLE_LIST + conCount + \"_shortname\", shortname);\r\n                            prop.putHTML(STR_TABLE_LIST + conCount + \"_fullname\", seed.get(yacySeed.NAME, \"deadlink\"));\r\n                            userAgent = null;\r\n                            if (seed.hash.equals(yacyCore.seedDB.mySeed().hash)) {\r\n                               userAgent = httpc.userAgent;\r\n                            } else {\r\n                               userAgent = yacyCore.peerActions.getUserAgent(seed.getIP());\r\n                            }\r\n                            p = userAgent.lastIndexOf(';');\r\n                            location = (p > 0) ? userAgent.substring(p + 1, userAgent.length() - 1).trim(): \"\";\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_location\", location);\r\n                            if (complete) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_complete\", 1);\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_complete_ip\", seed.get(yacySeed.IP, \"-\") );\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_complete_port\", seed.get(yacySeed.PORT, \"-\") );\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_complete_hash\", seed.hash);\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_complete_age\", seed.getAge());\r\n                                prop.putNum(STR_TABLE_LIST + conCount + \"_complete_CRWCnt\", Long.parseLong(seed.get(yacySeed.CRWCNT, \"0\")));\r\n                                prop.putNum(STR_TABLE_LIST + conCount + \"_complete_CRTCnt\", Long.parseLong(seed.get(yacySeed.CRTCNT, \"0\")));\r\n                                prop.putNum(STR_TABLE_LIST + conCount + \"_complete_seeds\", Long.parseLong(seed.get(yacySeed.SCOUNT, \"0\")));\r\n                                prop.putNum(STR_TABLE_LIST + conCount + \"_complete_connects\", Double.parseDouble(seed.get(yacySeed.CCOUNT, \"0\")));\r\n                                prop.putHTML(STR_TABLE_LIST + conCount + \"_complete_userAgent\", userAgent);\r\n                            } else {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_complete\", 0);\r\n                            }\r\n\r\n\r\n                            if (seed.isJunior()) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_type\", 0);\r\n                            } else if(seed.isSenior()){\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_type\", 1);\r\n                            } else if(seed.isPrincipal()) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_type\", 2);\r\n                            }\r\n                            prop.putHTML(STR_TABLE_LIST + conCount + \"_type_url\", seed.get(\"seedURL\", \"http://nowhere/\"));\r\n\r\n                            final long lastseen = Math.abs((System.currentTimeMillis() - seed.getLastSeenUTC()) / 1000 / 60);\r\n                            if (page == 2 || lastseen > 1440) { // Passive Peers should be passive, also Peers without contact greater than an day\r\n                                // principal/senior/junior: red/red=offline\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_type_direct\", 2);\r\n                            } else {\r\n                                // principal/senior: green/green=direct or yellow/yellow=passive\r\n                                // junior: red/green=direct or red/yellow=passive\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_type_direct\", seed.getFlagDirectConnect() ? 1 : 0);\r\n                            }\r\n                            \r\n                            if (page == 1) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_acceptcrawl\", seed.getFlagAcceptRemoteCrawl() ? 1 : 0); // green=on or red=off \r\n                                prop.put(STR_TABLE_LIST + conCount + \"_dhtreceive\", seed.getFlagAcceptRemoteIndex() ? 1 : 0);  // green=on or red=off\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_rankingreceive\", (seed.getVersion() >= yacyVersion.YACY_ACCEPTS_RANKING_TRANSMISSION) ? 1 : 0);\r\n                            } else { // Passive, Potential Peers\r\n                                if (seed.getFlagAcceptRemoteCrawl()) {\r\n                                    prop.put(STR_TABLE_LIST + conCount + \"_acceptcrawl\", 2); // red/green: offline, was on\r\n                                } else {\r\n                                    prop.put(STR_TABLE_LIST + conCount + \"_acceptcrawl\", 0); // red/red; offline was off\r\n                                }\r\n                                if (seed.getFlagAcceptRemoteIndex()) {\r\n                                    prop.put(STR_TABLE_LIST + conCount + \"_dhtreceive\", 2);  // red/green: offline, was on\r\n                                } else {\r\n                                    prop.put(STR_TABLE_LIST + conCount + \"_dhtreceive\", 0);  // red/red; offline was off\r\n                                }\r\n                                \r\n                                if (seed.getVersion() >= yacyVersion.YACY_ACCEPTS_RANKING_TRANSMISSION &&\r\n                                    seed.getFlagAcceptCitationReference()) {\r\n                                    prop.put(STR_TABLE_LIST + conCount + \"_rankingreceive\", 1);\r\n                                } else {\r\n                                    prop.put(STR_TABLE_LIST + conCount + \"_rankingreceive\", 0);\r\n                                }\r\n                            }\r\n                            if (seed.getFlagAcceptRemoteIndex()) {\r\n                                prop.put(STR_TABLE_LIST + conCount + \"_dhtreceive_peertags\", \"\");\r\n                            } else {\r\n                                String peertags = serverCodings.set2string(seed.getPeerTags(), \",\", false);\r\n                                prop.putHTML(STR_TABLE_LIST + conCount + \"_dhtreceive_peertags\", ((peertags == null) || (peertags.length() == 0)) ? \"no tags given\" : (\"tags = \" + peertags));\r\n                            }\r\n                            prop.putHTML(STR_TABLE_LIST + conCount + \"_version\", yacyVersion.combined2prettyVersion(seed.get(yacySeed.VERSION, \"0.1\"), shortname));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_lastSeen\", /*seed.getLastSeenString() + \" \" +*/ lastseen);\r\n                            prop.put(STR_TABLE_LIST + conCount + \"_utc\", seed.get(yacySeed.UTC, \"-\"));\r\n                            prop.putHTML(STR_TABLE_LIST + conCount + \"_uptime\", serverDate.intervalToString(60000 * Long.parseLong(seed.get(yacySeed.UPTIME, \"0\"))));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_LCount\", seed.getLong(yacySeed.LCOUNT, 0));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_ICount\", seed.getLong(yacySeed.ICOUNT, 0));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_RCount\", seed.getLong(yacySeed.RCOUNT, 0));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_sI\", seed.getLong(yacySeed.INDEX_OUT, 0));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_sU\", seed.getLong(yacySeed.URL_OUT, 0));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_rI\", seed.getLong(yacySeed.INDEX_IN, 0));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_rU\", seed.getLong(yacySeed.URL_IN, 0));\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_ppm\", PPM);\r\n                            prop.putNum(STR_TABLE_LIST + conCount + \"_qph\", Math.round(6000d * QPM) / 100d);\r\n                            conCount++;\r\n                        } // seed != null\r\n                    } // while\r\n                    if (iAmActive) { yacyCore.seedDB.removeMySeed(); }\r\n                    prop.putNum(\"table_list\", conCount);\r\n                    prop.put(\"table\", 1);\r\n                    prop.putNum(\"table_num\", conCount);\r\n                    prop.putNum(\"table_total\", ((page == 1) && (iAmActive)) ? (size + 1) : size );\r\n                    prop.put(\"table_complete\", ((complete)? 1 : 0) );                    \r\n                }\r\n            }\r\n            prop.put(\"page\", page);\r\n            prop.put(\"table_page\", page);\r\n            prop.putHTML(\"table_searchpattern\", post.get(\"match\", \"\"));\r\n            switch (page) {\r\n                case 1 : prop.putHTML(\"table_peertype\", \"senior/principal\"); break;\r\n                case 2 : prop.putHTML(\"table_peertype\", \"senior/principal\"); break;\r\n                case 3 : prop.putHTML(\"table_peertype\", yacySeed.PEERTYPE_JUNIOR); break;\r\n                default: break;\r\n            }\r\n        }\r\n        \r\n        prop.putNum(\"table_rt\", System.currentTimeMillis() - start);\r\n\r\n        // return rewrite properties\r\n        return prop;\r\n    }","commit_id":"0eb60cfe6f69f0e32be05ee7e8babeac0820eadd","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"private synchronized boolean connectPeer(yacySeed seed, boolean direct) {\r\n        // store a remote peer's seed\r\n        // returns true if the peer is new and previously unknown\r\n        if (seed == null) {\r\n            yacyCore.log.logSevere(\"connect: WRONG seed (NULL)\");\r\n            return false;\r\n        }\r\n        final String error = seed.isProper();\r\n        if (error != null) {\r\n            yacyCore.log.logSevere(\"connect: WRONG seed (\" + seed.getName() + \"/\" + seed.hash + \"): \" + error);\r\n            return false;\r\n        }\r\n        if ((this.seedDB.mySeedIsDefined()) && (seed.hash.equals(this.seedDB.mySeed().hash))) {\r\n            yacyCore.log.logInfo(\"connect: SELF reference \" + seed.getPublicAddress());\r\n            return false;\r\n        }\r\n        final String peerType = seed.get(yacySeed.PEERTYPE, yacySeed.PEERTYPE_VIRGIN);\r\n\r\n        if ((peerType.equals(yacySeed.PEERTYPE_VIRGIN)) || (peerType.equals(yacySeed.PEERTYPE_JUNIOR))) {\r\n            // reject unqualified seeds\r\n            yacyCore.log.logFine(\"connect: rejecting NOT QUALIFIED \" + peerType + \" seed \" + seed.getName());\r\n            return false;\r\n        }\r\n\r\n        final yacySeed doubleSeed = this.seedDB.lookupByIP(seed.getInetAddress(), true, false, false);\r\n        if ((doubleSeed != null) && (doubleSeed.getPort() == seed.getPort()) && (!(doubleSeed.hash.equals(seed.hash)))) {\r\n            // a user frauds with his peer different peer hashes\r\n            yacyCore.log.logFine(\"connect: rejecting FRAUD (double hashes \" + doubleSeed.hash + \"/\" + seed.hash + \" on same port \" + seed.getPort() + \") peer \" + seed.getName());\r\n            return false;\r\n        }\r\n\r\n        if (seed.get(yacySeed.LASTSEEN, \"\").length() != 14) {\r\n            // hack for peers that do not have a LastSeen date\r\n            seed.setLastSeenUTC();\r\n            yacyCore.log.logFine(\"connect: reset wrong date (\" + seed.getName() + \"/\" + seed.hash + \")\");\r\n        }\r\n\r\n        // connection time\r\n        final long nowUTC0Time = System.currentTimeMillis(); // is better to have this value in a variable for debugging\r\n        long ctimeUTC0 = seed.getLastSeenUTC();\r\n\r\n        if (ctimeUTC0 > nowUTC0Time) {\r\n            // the peer is future-dated, correct it\r\n            seed.setLastSeenUTC();\r\n            ctimeUTC0 = nowUTC0Time;\r\n            assert (seed.getLastSeenUTC() - ctimeUTC0 < 100);\r\n        }\r\n        if (Math.abs(nowUTC0Time - ctimeUTC0) > 60 * 60 * 24 * 1000) {\r\n            // the new connection is out-of-age, we reject the connection\r\n            yacyCore.log.logFine(\"connect: rejecting out-dated peer '\" + seed.getName() + \"' from \" + seed.getPublicAddress() + \"; nowUTC0=\" + nowUTC0Time + \", seedUTC0=\" + ctimeUTC0 + \", TimeDiff=\" + serverDate.intervalToString(Math.abs(nowUTC0Time - ctimeUTC0)));\r\n            return false;\r\n        }\r\n\r\n        // disconnection time\r\n        long dtimeUTC0;\r\n        final yacySeed disconnectedSeed = seedDB.getDisconnected(seed.hash);\r\n        if (disconnectedSeed == null) {\r\n            dtimeUTC0 = 0; // never disconnected: virtually disconnected maximum time ago\r\n        } else {\r\n            dtimeUTC0 = Long.parseLong(disconnectedSeed.get(\"dct\", \"0\"));\r\n        }\r\n\r\n        if (direct) {\r\n            // remember the moment\r\n            // Date applies the local UTC offset, which is wrong\r\n            // we correct that by subtracting the local offset and adding\r\n            // the remote offset.\r\n            seed.setLastSeenUTC();\r\n            seed.setFlagDirectConnect(true);\r\n        } else {\r\n            // set connection flag\r\n            if (Math.abs(nowUTC0Time - ctimeUTC0) > 120000) seed.setFlagDirectConnect(false); // 2 minutes\r\n        }\r\n\r\n        // update latest version number\r\n        if (seed.getVersion() > yacyVersion.latestRelease) yacyVersion.latestRelease = seed.getVersion();\r\n\r\n        // prepare to update\r\n        if (disconnectedSeed != null) {\r\n            // if the indirect connect aims to announce a peer that we know\r\n            // has been disconnected then we compare the dates:\r\n            // if the new peer has a LastSeen date, and that date is before\r\n            // the disconnection date, then we ignore the new peer\r\n            if (!direct) {\r\n                if (ctimeUTC0 < dtimeUTC0) {\r\n                    // the disconnection was later, we reject the connection\r\n                    yacyCore.log.logFine(\"connect: rejecting disconnected peer '\" + seed.getName() + \"' from \" + seed.getPublicAddress());\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            // this is a return of a lost peer\r\n            yacyCore.log.logFine(\"connect: returned KNOWN \" + peerType + \" peer '\" + seed.getName() + \"' from \" + seed.getPublicAddress());\r\n            this.seedDB.addConnected(seed);\r\n            return true;\r\n        } else {\r\n            final yacySeed connectedSeed = this.seedDB.getConnected(seed.hash);\r\n            if (connectedSeed != null) {\r\n                // the seed is known: this is an update\r\n                try {\r\n                    // if the old LastSeen date is later then the other\r\n                    // info, then we reject the info\r\n                    if ((ctimeUTC0 < (connectedSeed.getLastSeenUTC())) && (!direct)) {\r\n                        yacyCore.log.logFine(\"connect: rejecting old info about peer '\" + seed.getName() + \"'\");\r\n                        return false;\r\n                    }\r\n\r\n                    if (connectedSeed.getName() != seed.getName()) {\r\n                        // TODO: update seed name lookup cache\r\n                    }\r\n                } catch (NumberFormatException e) {\r\n                    yacyCore.log.logFine(\"connect: rejecting wrong peer '\" + seed.getName() + \"' from \" + seed.getPublicAddress() + \". Cause: \" + e.getMessage());\r\n                    return false;\r\n                }\r\n                yacyCore.log.logFine(\"connect: updated KNOWN \" + ((direct) ? \"direct \" : \"\") + peerType + \" peer '\" + seed.getName() + \"' from \" + seed.getPublicAddress());\r\n                seedDB.addConnected(seed);\r\n                return true;\r\n            } else {\r\n                // the seed is new\r\n                if ((seedDB.mySeedIsDefined()) && (seed.get(yacySeed.IP, \"127.0.0.1\").equals(this.seedDB.mySeed().get(yacySeed.IP, \"127.0.0.1\")))) {\r\n                    // seed from the same IP as the calling client: can be\r\n                    // the case if there runs another one over a NAT\r\n                    yacyCore.log.logFine(\"connect: saved NEW seed (myself IP) \" + seed.getPublicAddress());\r\n                } else {\r\n                    // completely new seed\r\n                    yacyCore.log.logFine(\"connect: saved NEW \" + peerType + \" peer '\" + seed.getName() + \"' from \" + seed.getPublicAddress());\r\n                }\r\n                if (peerType.equals(yacySeed.PEERTYPE_SENIOR))\r\n                    this.seniorConnects++; // update statistics\r\n                if (peerType.equals(yacySeed.PEERTYPE_PRINCIPAL))\r\n                    this.principalConnects++; // update statistics\r\n                this.seedDB.addConnected(seed);\r\n                return true;\r\n            }\r\n        }\r\n    }","id":4753,"modified_method":"private synchronized boolean connectPeer(yacySeed seed, boolean direct) {\r\n        // store a remote peer's seed\r\n        // returns true if the peer is new and previously unknown\r\n        if (seed == null) {\r\n            yacyCore.log.logSevere(\"connect: WRONG seed (NULL)\");\r\n            return false;\r\n        }\r\n        final String error = seed.isProper();\r\n        if (error != null) {\r\n            yacyCore.log.logSevere(\"connect: WRONG seed (\" + seed.getName() + \"/\" + seed.hash + \"): \" + error);\r\n            return false;\r\n        }\r\n        if ((this.seedDB.mySeedIsDefined()) && (seed.hash.equals(this.seedDB.mySeed().hash))) {\r\n            yacyCore.log.logInfo(\"connect: SELF reference \" + seed.getPublicAddress());\r\n            return false;\r\n        }\r\n        final String peerType = seed.get(yacySeed.PEERTYPE, yacySeed.PEERTYPE_VIRGIN);\r\n\r\n        if ((peerType.equals(yacySeed.PEERTYPE_VIRGIN)) || (peerType.equals(yacySeed.PEERTYPE_JUNIOR))) {\r\n            // reject unqualified seeds\r\n            yacyCore.log.logFine(\"connect: rejecting NOT QUALIFIED \" + peerType + \" seed \" + seed.getName());\r\n            return false;\r\n        }\r\n\r\n        final yacySeed doubleSeed = this.seedDB.lookupByIP(seed.getInetAddress(), true, false, false);\r\n        if ((doubleSeed != null) && (doubleSeed.getPort() == seed.getPort()) && (!(doubleSeed.hash.equals(seed.hash)))) {\r\n            // a user frauds with his peer different peer hashes\r\n            yacyCore.log.logFine(\"connect: rejecting FRAUD (double hashes \" + doubleSeed.hash + \"/\" + seed.hash + \" on same port \" + seed.getPort() + \") peer \" + seed.getName());\r\n            return false;\r\n        }\r\n\r\n        if (seed.get(yacySeed.LASTSEEN, \"\").length() != 14) {\r\n            // hack for peers that do not have a LastSeen date\r\n            seed.setLastSeenUTC();\r\n            yacyCore.log.logFine(\"connect: reset wrong date (\" + seed.getName() + \"/\" + seed.hash + \")\");\r\n        }\r\n\r\n        // connection time\r\n        final long nowUTC0Time = System.currentTimeMillis(); // is better to have this value in a variable for debugging\r\n        long ctimeUTC0 = seed.getLastSeenUTC();\r\n\r\n        if (ctimeUTC0 > nowUTC0Time) {\r\n            // the peer is future-dated, correct it\r\n            seed.setLastSeenUTC();\r\n            ctimeUTC0 = nowUTC0Time;\r\n            assert (seed.getLastSeenUTC() - ctimeUTC0 < 100);\r\n        }\r\n        if (Math.abs(nowUTC0Time - ctimeUTC0) > 60 * 60 * 24 * 1000) {\r\n            // the new connection is out-of-age, we reject the connection\r\n            yacyCore.log.logFine(\"connect: rejecting out-dated peer '\" + seed.getName() + \"' from \" + seed.getPublicAddress() + \"; nowUTC0=\" + nowUTC0Time + \", seedUTC0=\" + ctimeUTC0 + \", TimeDiff=\" + serverDate.intervalToString(Math.abs(nowUTC0Time - ctimeUTC0)));\r\n            return false;\r\n        }\r\n\r\n        // disconnection time\r\n        long dtimeUTC0;\r\n        final yacySeed disconnectedSeed = seedDB.getDisconnected(seed.hash);\r\n        if (disconnectedSeed == null) {\r\n            dtimeUTC0 = 0; // never disconnected: virtually disconnected maximum time ago\r\n        } else {\r\n            dtimeUTC0 = disconnectedSeed.getLong(\"dct\", 0);\r\n        }\r\n\r\n        if (direct) {\r\n            // remember the moment\r\n            // Date applies the local UTC offset, which is wrong\r\n            // we correct that by subtracting the local offset and adding\r\n            // the remote offset.\r\n            seed.setLastSeenUTC();\r\n            seed.setFlagDirectConnect(true);\r\n        } else {\r\n            // set connection flag\r\n            if (Math.abs(nowUTC0Time - ctimeUTC0) > 120000) seed.setFlagDirectConnect(false); // 2 minutes\r\n        }\r\n\r\n        // update latest version number\r\n        if (seed.getVersion() > yacyVersion.latestRelease) yacyVersion.latestRelease = seed.getVersion();\r\n\r\n        // prepare to update\r\n        if (disconnectedSeed != null) {\r\n            // if the indirect connect aims to announce a peer that we know\r\n            // has been disconnected then we compare the dates:\r\n            // if the new peer has a LastSeen date, and that date is before\r\n            // the disconnection date, then we ignore the new peer\r\n            if (!direct) {\r\n                if (ctimeUTC0 < dtimeUTC0) {\r\n                    // the disconnection was later, we reject the connection\r\n                    yacyCore.log.logFine(\"connect: rejecting disconnected peer '\" + seed.getName() + \"' from \" + seed.getPublicAddress());\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            // this is a return of a lost peer\r\n            yacyCore.log.logFine(\"connect: returned KNOWN \" + peerType + \" peer '\" + seed.getName() + \"' from \" + seed.getPublicAddress());\r\n            this.seedDB.addConnected(seed);\r\n            return true;\r\n        } else {\r\n            final yacySeed connectedSeed = this.seedDB.getConnected(seed.hash);\r\n            if (connectedSeed != null) {\r\n                // the seed is known: this is an update\r\n                try {\r\n                    // if the old LastSeen date is later then the other\r\n                    // info, then we reject the info\r\n                    if ((ctimeUTC0 < (connectedSeed.getLastSeenUTC())) && (!direct)) {\r\n                        yacyCore.log.logFine(\"connect: rejecting old info about peer '\" + seed.getName() + \"'\");\r\n                        return false;\r\n                    }\r\n\r\n                    if (connectedSeed.getName() != seed.getName()) {\r\n                        // TODO: update seed name lookup cache\r\n                    }\r\n                } catch (NumberFormatException e) {\r\n                    yacyCore.log.logFine(\"connect: rejecting wrong peer '\" + seed.getName() + \"' from \" + seed.getPublicAddress() + \". Cause: \" + e.getMessage());\r\n                    return false;\r\n                }\r\n                yacyCore.log.logFine(\"connect: updated KNOWN \" + ((direct) ? \"direct \" : \"\") + peerType + \" peer '\" + seed.getName() + \"' from \" + seed.getPublicAddress());\r\n                seedDB.addConnected(seed);\r\n                return true;\r\n            } else {\r\n                // the seed is new\r\n                if ((seedDB.mySeedIsDefined()) && (seed.get(yacySeed.IP, \"127.0.0.1\").equals(this.seedDB.mySeed().get(yacySeed.IP, \"127.0.0.1\")))) {\r\n                    // seed from the same IP as the calling client: can be\r\n                    // the case if there runs another one over a NAT\r\n                    yacyCore.log.logFine(\"connect: saved NEW seed (myself IP) \" + seed.getPublicAddress());\r\n                } else {\r\n                    // completely new seed\r\n                    yacyCore.log.logFine(\"connect: saved NEW \" + peerType + \" peer '\" + seed.getName() + \"' from \" + seed.getPublicAddress());\r\n                }\r\n                if (peerType.equals(yacySeed.PEERTYPE_SENIOR))\r\n                    this.seniorConnects++; // update statistics\r\n                if (peerType.equals(yacySeed.PEERTYPE_PRINCIPAL))\r\n                    this.principalConnects++; // update statistics\r\n                this.seedDB.addConnected(seed);\r\n                return true;\r\n            }\r\n        }\r\n    }","commit_id":"0eb60cfe6f69f0e32be05ee7e8babeac0820eadd","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public final long getLinkCount() {\r\n        try {\r\n            return Long.parseLong(get(yacySeed.LCOUNT, yacySeed.ZERO));\r\n        } catch (NumberFormatException e) {\r\n            return 0;\r\n        }\r\n    }","id":4754,"modified_method":"public final long getLinkCount() {\r\n        try {\r\n            return getLong(yacySeed.LCOUNT, 0);\r\n        } catch (NumberFormatException e) {\r\n            return 0;\r\n        }\r\n    }","commit_id":"0eb60cfe6f69f0e32be05ee7e8babeac0820eadd","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"@Override\n\tpublic boolean contains(\n\t\t\tPermissionChecker permissionChecker, Group group, String actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tlong groupId = group.getGroupId();\n\n\t\tif (group.isStagingGroup()) {\n\t\t\tgroup = group.getLiveGroup();\n\t\t}\n\n\t\tif (group.isUser()) {\n\n\t\t\t// An individual user would never reach this block because he would\n\t\t\t// be an administrator of his own layouts. However, a user who\n\t\t\t// manages a set of organizations may be modifying pages of a user\n\t\t\t// he manages.\n\n\t\t\tUser user = UserLocalServiceUtil.getUserById(group.getClassPK());\n\n\t\t\tif ((permissionChecker.getUserId() != user.getUserId()) &&\n\t\t\t\tUserPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, user.getUserId(),\n\t\t\t\t\tuser.getOrganizationIds(), ActionKeys.UPDATE)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (actionId.equals(ActionKeys.ADD_LAYOUT) &&\n\t\t\tpermissionChecker.hasPermission(\n\t\t\t\tgroupId, Group.class.getName(), groupId,\n\t\t\t\tActionKeys.MANAGE_LAYOUTS)) {\n\n\t\t\treturn true;\n\t\t}\n\t\telse if ((actionId.equals(ActionKeys.EXPORT_IMPORT_LAYOUTS) ||\n\t\t\t\t  actionId.equals(ActionKeys.EXPORT_IMPORT_PORTLET_INFO)) &&\n\t\t\t\t permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.PUBLISH_STAGING)) {\n\n\t\t\treturn true;\n\t\t}\n\t\telse if (actionId.equals(ActionKeys.VIEW) &&\n\t\t\t\t (permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.ASSIGN_USER_ROLES) ||\n\t\t\t\t  permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.MANAGE_LAYOUTS))) {\n\n\t\t\treturn true;\n\t\t}\n\t\telse if (actionId.equals(ActionKeys.VIEW_STAGING) &&\n\t\t\t\t (permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.MANAGE_LAYOUTS) ||\n\t\t\t\t  permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.MANAGE_STAGING) ||\n\t\t\t\t  permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.PUBLISH_STAGING) ||\n\t\t\t\t  permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.UPDATE))) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// Group id must be set so that users can modify their personal pages\n\n\t\tif (permissionChecker.hasPermission(\n\t\t\t\tgroupId, Group.class.getName(), groupId, actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\twhile (!group.isRoot()) {\n\t\t\tif (contains(\n\t\t\t\t\tpermissionChecker, group.getParentGroupId(),\n\t\t\t\t\tActionKeys.MANAGE_SUBGROUPS)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tgroup = group.getParentGroup();\n\t\t}\n\n\t\treturn false;\n\t}","id":4755,"modified_method":"@Override\n\tpublic boolean contains(\n\t\t\tPermissionChecker permissionChecker, Group group, String actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tlong groupId = group.getGroupId();\n\n\t\tif (group.isStagingGroup()) {\n\t\t\tgroup = group.getLiveGroup();\n\t\t}\n\n\t\tif (group.isUser()) {\n\n\t\t\t// An individual user would never reach this block because he would\n\t\t\t// be an administrator of his own layouts. However, a user who\n\t\t\t// manages a set of organizations may be modifying pages of a user\n\t\t\t// he manages.\n\n\t\t\tUser user = UserLocalServiceUtil.getUserById(group.getClassPK());\n\n\t\t\tif ((permissionChecker.getUserId() != user.getUserId()) &&\n\t\t\t\tUserPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, user.getUserId(),\n\t\t\t\t\tuser.getOrganizationIds(), ActionKeys.UPDATE)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (actionId.equals(ActionKeys.ADD_LAYOUT) &&\n\t\t\tpermissionChecker.hasPermission(\n\t\t\t\tgroupId, Group.class.getName(), groupId,\n\t\t\t\tActionKeys.MANAGE_LAYOUTS)) {\n\n\t\t\treturn true;\n\t\t}\n\t\telse if (actionId.equals(ActionKeys.ADD_COMMUNITY) &&\n\t\t\t\t permissionChecker.hasPermission(\n\t\t\t\t\tgroupId, Group.class.getName(), groupId,\n\t\t\t\t\tActionKeys.MANAGE_SUBGROUPS) ||\n\t\t\t\t PortalPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, ActionKeys.ADD_COMMUNITY)) {\n\n\t\t\treturn true;\n\t\t}\n\t\telse if ((actionId.equals(ActionKeys.EXPORT_IMPORT_LAYOUTS) ||\n\t\t\t\t  actionId.equals(ActionKeys.EXPORT_IMPORT_PORTLET_INFO)) &&\n\t\t\t\t permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.PUBLISH_STAGING)) {\n\n\t\t\treturn true;\n\t\t}\n\t\telse if (actionId.equals(ActionKeys.VIEW) &&\n\t\t\t\t (permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.ASSIGN_USER_ROLES) ||\n\t\t\t\t  permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.MANAGE_LAYOUTS))) {\n\n\t\t\treturn true;\n\t\t}\n\t\telse if (actionId.equals(ActionKeys.VIEW_STAGING) &&\n\t\t\t\t (permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.MANAGE_LAYOUTS) ||\n\t\t\t\t  permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.MANAGE_STAGING) ||\n\t\t\t\t  permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.PUBLISH_STAGING) ||\n\t\t\t\t  permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Group.class.getName(), groupId,\n\t\t\t\t\t ActionKeys.UPDATE))) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// Group id must be set so that users can modify their personal pages\n\n\t\tif (permissionChecker.hasPermission(\n\t\t\t\tgroupId, Group.class.getName(), groupId, actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\twhile (!group.isRoot()) {\n\t\t\tif (contains(\n\t\t\t\t\tpermissionChecker, group.getParentGroupId(),\n\t\t\t\t\tActionKeys.MANAGE_SUBGROUPS)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tgroup = group.getParentGroup();\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"592bf58be47688d2f97658e1506b69fd8eed0d3f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Updates the group.\n\t *\n\t * @param  groupId the primary key of the group\n\t * @param  parentGroupId the primary key of the parent group\n\t * @param  name the group's new name\n\t * @param  description the group's new description (optionally\n\t *         <code>null<\/code>)\n\t * @param  type the group's new type. For more information see {@link\n\t *         com.liferay.portal.model.GroupConstants}\n\t * @param  friendlyURL the group's new friendlyURL (optionally\n\t *         <code>null<\/code>)\n\t * @param  active whether the group is active\n\t * @param  serviceContext the service context to be applied (optionally\n\t *         <code>null<\/code>). Can set the asset category IDs and asset tag\n\t *         names for the group.\n\t * @return the group\n\t * @throws PortalException if the user did not have permission to update the\n\t *         group, if a group with the primary key could not be found, if the\n\t *         friendly URL was invalid or could one not be created\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic Group updateGroup(\n\t\t\tlong groupId, long parentGroupId, String name, String description,\n\t\t\tint type, String friendlyURL, boolean active,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tGroup group = groupPersistence.findByPrimaryKey(groupId);\n\n\t\tGroupPermissionUtil.check(\n\t\t\tgetPermissionChecker(), group, ActionKeys.UPDATE);\n\n\t\tif (group.getParentGroupId() != parentGroupId) {\n\t\t\tif (parentGroupId == GroupConstants.DEFAULT_PARENT_GROUP_ID) {\n\t\t\t\tPortalPermissionUtil.check(\n\t\t\t\t\tgetPermissionChecker(), ActionKeys.ADD_COMMUNITY);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!GroupPermissionUtil.contains(\n\t\t\t\t\t\tgetPermissionChecker(), parentGroupId,\n\t\t\t\t\t\tActionKeys.MANAGE_SUBGROUPS) &&\n\t\t\t\t\t!PortalPermissionUtil.contains(\n\t\t\t\t\t\tgetPermissionChecker(), ActionKeys.ADD_COMMUNITY)) {\n\n\t\t\t\t\tthrow new PrincipalException(\n\t\t\t\t\t\t\"User \" + getUserId() + \" does not have permissions \" +\n\t\t\t\t\t\t\t\"to move site \" + groupId + \"to parent \" +\n\t\t\t\t\t\t\t\tparentGroupId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (group.isSite()) {\n\t\t\tGroup oldGroup = group;\n\n\t\t\tList<AssetCategory> oldAssetCategories =\n\t\t\t\tassetCategoryLocalService.getCategories(\n\t\t\t\t\tGroup.class.getName(), groupId);\n\n\t\t\tList<AssetTag> oldAssetTags = assetTagLocalService.getTags(\n\t\t\t\tGroup.class.getName(), groupId);\n\n\t\t\tExpandoBridge oldExpandoBridge = oldGroup.getExpandoBridge();\n\n\t\t\tMap<String, Serializable> oldExpandoAttributes =\n\t\t\t\toldExpandoBridge.getAttributes();\n\n\t\t\tgroup = groupLocalService.updateGroup(\n\t\t\t\tgroupId, parentGroupId, name, description, type, friendlyURL,\n\t\t\t\tactive, serviceContext);\n\n\t\t\tSiteMembershipPolicyUtil.verifyPolicy(\n\t\t\t\tgroup, oldGroup, oldAssetCategories, oldAssetTags,\n\t\t\t\toldExpandoAttributes, null);\n\n\t\t\treturn group;\n\t\t}\n\t\telse {\n\t\t\treturn groupLocalService.updateGroup(\n\t\t\t\tgroupId, parentGroupId, name, description, type, friendlyURL,\n\t\t\t\tactive, serviceContext);\n\t\t}\n\t}","id":4756,"modified_method":"/**\n\t * Updates the group.\n\t *\n\t * @param  groupId the primary key of the group\n\t * @param  parentGroupId the primary key of the parent group\n\t * @param  name the group's new name\n\t * @param  description the group's new description (optionally\n\t *         <code>null<\/code>)\n\t * @param  type the group's new type. For more information see {@link\n\t *         com.liferay.portal.model.GroupConstants}\n\t * @param  friendlyURL the group's new friendlyURL (optionally\n\t *         <code>null<\/code>)\n\t * @param  active whether the group is active\n\t * @param  serviceContext the service context to be applied (optionally\n\t *         <code>null<\/code>). Can set the asset category IDs and asset tag\n\t *         names for the group.\n\t * @return the group\n\t * @throws PortalException if the user did not have permission to update the\n\t *         group, if a group with the primary key could not be found, if the\n\t *         friendly URL was invalid or could one not be created\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic Group updateGroup(\n\t\t\tlong groupId, long parentGroupId, String name, String description,\n\t\t\tint type, String friendlyURL, boolean active,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tGroup group = groupPersistence.findByPrimaryKey(groupId);\n\n\t\tGroupPermissionUtil.check(\n\t\t\tgetPermissionChecker(), group, ActionKeys.UPDATE);\n\n\t\tif (group.getParentGroupId() != parentGroupId) {\n\t\t\tif (parentGroupId == GroupConstants.DEFAULT_PARENT_GROUP_ID) {\n\t\t\t\tPortalPermissionUtil.check(\n\t\t\t\t\tgetPermissionChecker(), ActionKeys.ADD_COMMUNITY);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tGroupPermissionUtil.check(\n\t\t\t\t\tgetPermissionChecker(), parentGroupId,\n\t\t\t\t\tActionKeys.ADD_COMMUNITY);\n\t\t\t}\n\t\t}\n\n\t\tif (group.isSite()) {\n\t\t\tGroup oldGroup = group;\n\n\t\t\tList<AssetCategory> oldAssetCategories =\n\t\t\t\tassetCategoryLocalService.getCategories(\n\t\t\t\t\tGroup.class.getName(), groupId);\n\n\t\t\tList<AssetTag> oldAssetTags = assetTagLocalService.getTags(\n\t\t\t\tGroup.class.getName(), groupId);\n\n\t\t\tExpandoBridge oldExpandoBridge = oldGroup.getExpandoBridge();\n\n\t\t\tMap<String, Serializable> oldExpandoAttributes =\n\t\t\t\toldExpandoBridge.getAttributes();\n\n\t\t\tgroup = groupLocalService.updateGroup(\n\t\t\t\tgroupId, parentGroupId, name, description, type, friendlyURL,\n\t\t\t\tactive, serviceContext);\n\n\t\t\tSiteMembershipPolicyUtil.verifyPolicy(\n\t\t\t\tgroup, oldGroup, oldAssetCategories, oldAssetTags,\n\t\t\t\toldExpandoAttributes, null);\n\n\t\t\treturn group;\n\t\t}\n\t\telse {\n\t\t\treturn groupLocalService.updateGroup(\n\t\t\t\tgroupId, parentGroupId, name, description, type, friendlyURL,\n\t\t\t\tactive, serviceContext);\n\t\t}\n\t}","commit_id":"592bf58be47688d2f97658e1506b69fd8eed0d3f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Adds a group.\n\t *\n\t * @param  parentGroupId the primary key of the parent group\n\t * @param  liveGroupId the primary key of the live group\n\t * @param  name the entity's name\n\t * @param  description the group's description (optionally\n\t *         <code>null<\/code>)\n\t * @param  type the group's type. For more information see {@link\n\t *         com.liferay.portal.model.GroupConstants}\n\t * @param  friendlyURL the group's friendlyURL (optionally\n\t *         <code>null<\/code>)\n\t * @param  site whether the group is to be associated with a main site\n\t * @param  active whether the group is active\n\t * @param  serviceContext the service context to be applied (optionally\n\t *         <code>null<\/code>). Can set the asset category IDs and asset tag\n\t *         names for the group, and can set whether the group is for staging\n\t * @return the group\n\t * @throws PortalException if the user did not have permission to add the\n\t *         group, if a creator could not be found, if the group's\n\t *         information was invalid, if a layout could not be found, or if a\n\t *         valid friendly URL could not be created for the group\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic Group addGroup(\n\t\t\tlong parentGroupId, long liveGroupId, String name,\n\t\t\tString description, int type, String friendlyURL, boolean site,\n\t\t\tboolean active, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!GroupPermissionUtil.contains(\n\t\t\t\tgetPermissionChecker(), parentGroupId,\n\t\t\t\tActionKeys.MANAGE_SUBGROUPS) &&\n\t\t\t!PortalPermissionUtil.contains(\n\t\t\t\tgetPermissionChecker(), ActionKeys.ADD_COMMUNITY)) {\n\n\t\t\tthrow new PrincipalException(\n\t\t\t\t\"User \" + getUserId() + \" does not have permissions to add \" +\n\t\t\t\t\t\"a site with parent \" + parentGroupId);\n\t\t}\n\n\t\tGroup group = groupLocalService.addGroup(\n\t\t\tgetUserId(), parentGroupId, null, 0, liveGroupId, name, description,\n\t\t\ttype, friendlyURL, site, active, serviceContext);\n\n\t\tif (site) {\n\t\t\tSiteMembershipPolicyUtil.verifyPolicy(group);\n\t\t}\n\n\t\treturn group;\n\t}","id":4757,"modified_method":"/**\n\t * Adds a group.\n\t *\n\t * @param  parentGroupId the primary key of the parent group\n\t * @param  liveGroupId the primary key of the live group\n\t * @param  name the entity's name\n\t * @param  description the group's description (optionally\n\t *         <code>null<\/code>)\n\t * @param  type the group's type. For more information see {@link\n\t *         com.liferay.portal.model.GroupConstants}\n\t * @param  friendlyURL the group's friendlyURL (optionally\n\t *         <code>null<\/code>)\n\t * @param  site whether the group is to be associated with a main site\n\t * @param  active whether the group is active\n\t * @param  serviceContext the service context to be applied (optionally\n\t *         <code>null<\/code>). Can set the asset category IDs and asset tag\n\t *         names for the group, and can set whether the group is for staging\n\t * @return the group\n\t * @throws PortalException if the user did not have permission to add the\n\t *         group, if a creator could not be found, if the group's\n\t *         information was invalid, if a layout could not be found, or if a\n\t *         valid friendly URL could not be created for the group\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic Group addGroup(\n\t\t\tlong parentGroupId, long liveGroupId, String name,\n\t\t\tString description, int type, String friendlyURL, boolean site,\n\t\t\tboolean active, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (parentGroupId == GroupConstants.DEFAULT_PARENT_GROUP_ID) {\n\t\t\tPortalPermissionUtil.contains(\n\t\t\t\tgetPermissionChecker(), ActionKeys.ADD_COMMUNITY);\n\t\t}\n\t\telse {\n\t\t\tGroupPermissionUtil.check(\n\t\t\t\tgetPermissionChecker(), parentGroupId,\n\t\t\t\tActionKeys.ADD_COMMUNITY);\n\t\t}\n\n\t\tGroup group = groupLocalService.addGroup(\n\t\t\tgetUserId(), parentGroupId, null, 0, liveGroupId, name, description,\n\t\t\ttype, friendlyURL, site, active, serviceContext);\n\n\t\tif (site) {\n\t\t\tSiteMembershipPolicyUtil.verifyPolicy(group);\n\t\t}\n\n\t\treturn group;\n\t}","commit_id":"592bf58be47688d2f97658e1506b69fd8eed0d3f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected boolean contains(\n\t\t\tPermissionChecker permissionChecker, long groupId,\n\t\t\tOrganization organization, String actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\twhile ((organization != null) &&\n\t\t\t   (organization.getOrganizationId() !=\n\t\t\t\t\tOrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID)) {\n\n\t\t\tif (permissionChecker.hasPermission(\n\t\t\t\t\tgroupId, Organization.class.getName(),\n\t\t\t\t\torganization.getOrganizationId(), actionId)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\torganization = organization.getParentOrganization();\n\t\t}\n\n\t\treturn false;\n\t}","id":4758,"modified_method":"protected boolean contains(\n\t\t\tPermissionChecker permissionChecker, long groupId,\n\t\t\tOrganization organization, String actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\twhile ((organization != null) &&\n\t\t\t   (organization.getOrganizationId() !=\n\t\t\t\t\tOrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID)) {\n\n\t\t\tif (actionId.equals(ActionKeys.ADD_ORGANIZATION) &&\n\t\t\t\tpermissionChecker.hasPermission(\n\t\t\t\t\tgroupId, Organization.class.getName(),\n\t\t\t\t\torganization.getOrganizationId(),\n\t\t\t\t\tActionKeys.MANAGE_SUBGROUPS) ||\n\t\t\t\tPortalPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, ActionKeys.ADD_COMMUNITY)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (permissionChecker.hasPermission(\n\t\t\t\t\t groupId, Organization.class.getName(),\n\t\t\t\t\t organization.getOrganizationId(), actionId)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\torganization = organization.getParentOrganization();\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"7aeacd7915f3312e38c5e3dfc6939e7a8ae6bd6d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Adds an organization.\n\t *\n\t * <p>\n\t * This method handles the creation and bookkeeping of the organization\n\t * including its resources, metadata, and internal data structures.\n\t * <\/p>\n\t *\n\t * @param  parentOrganizationId the primary key of the organization's parent\n\t *         organization\n\t * @param  name the organization's name\n\t * @param  type the organization's type\n\t * @param  regionId the primary key of the organization's region\n\t * @param  countryId the primary key of the organization's country\n\t * @param  statusId the organization's workflow status\n\t * @param  comments the comments about the organization\n\t * @param  site whether the organization is to be associated with a main\n\t *         site\n\t * @param  serviceContext the service context to be applied (optionally\n\t *         <code>null<\/code>). Can set asset category IDs, asset tag names,\n\t *         and expando bridge attributes for the organization.\n\t * @return the organization\n\t * @throws PortalException if the parent organization with the primary key\n\t *         could not be found, if the organization information was invalid,\n\t *         or if the user did not have permission to add the organization\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic Organization addOrganization(\n\t\t\tlong parentOrganizationId, String name, String type, long regionId,\n\t\t\tlong countryId, int statusId, String comments, boolean site,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!OrganizationPermissionUtil.contains(\n\t\t\t\tgetPermissionChecker(), parentOrganizationId,\n\t\t\t\tActionKeys.MANAGE_SUBORGANIZATIONS) &&\n\t\t\t!PortalPermissionUtil.contains(\n\t\t\t\tgetPermissionChecker(), ActionKeys.ADD_ORGANIZATION)) {\n\n\t\t\tthrow new PrincipalException(\n\t\t\t\t\"User \" + getUserId() + \" does not have permissions to add \" +\n\t\t\t\t\t\"an organization with parent \" + parentOrganizationId);\n\t\t}\n\n\t\tOrganization organization = organizationLocalService.addOrganization(\n\t\t\tgetUserId(), parentOrganizationId, name, type, regionId, countryId,\n\t\t\tstatusId, comments, site, serviceContext);\n\n\t\tOrganizationMembershipPolicyUtil.verifyPolicy(organization);\n\n\t\treturn organization;\n\t}","id":4759,"modified_method":"/**\n\t * Adds an organization.\n\t *\n\t * <p>\n\t * This method handles the creation and bookkeeping of the organization\n\t * including its resources, metadata, and internal data structures.\n\t * <\/p>\n\t *\n\t * @param  parentOrganizationId the primary key of the organization's parent\n\t *         organization\n\t * @param  name the organization's name\n\t * @param  type the organization's type\n\t * @param  regionId the primary key of the organization's region\n\t * @param  countryId the primary key of the organization's country\n\t * @param  statusId the organization's workflow status\n\t * @param  comments the comments about the organization\n\t * @param  site whether the organization is to be associated with a main\n\t *         site\n\t * @param  serviceContext the service context to be applied (optionally\n\t *         <code>null<\/code>). Can set asset category IDs, asset tag names,\n\t *         and expando bridge attributes for the organization.\n\t * @return the organization\n\t * @throws PortalException if the parent organization with the primary key\n\t *         could not be found, if the organization information was invalid,\n\t *         or if the user did not have permission to add the organization\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic Organization addOrganization(\n\t\t\tlong parentOrganizationId, String name, String type, long regionId,\n\t\t\tlong countryId, int statusId, String comments, boolean site,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (parentOrganizationId ==\n\t\t\t\tOrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID) {\n\n\t\t\tPortalPermissionUtil.check(\n\t\t\t\tgetPermissionChecker(), ActionKeys.ADD_ORGANIZATION);\n\t\t}\n\t\telse {\n\t\t\tOrganizationPermissionUtil.check(\n\t\t\t\tgetPermissionChecker(), parentOrganizationId,\n\t\t\t\tActionKeys.ADD_ORGANIZATION);\n\t\t}\n\n\t\tOrganization organization = organizationLocalService.addOrganization(\n\t\t\tgetUserId(), parentOrganizationId, name, type, regionId, countryId,\n\t\t\tstatusId, comments, site, serviceContext);\n\n\t\tOrganizationMembershipPolicyUtil.verifyPolicy(organization);\n\n\t\treturn organization;\n\t}","commit_id":"7aeacd7915f3312e38c5e3dfc6939e7a8ae6bd6d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Updates the organization with additional parameters.\n\t *\n\t * @param  organizationId the primary key of the organization\n\t * @param  parentOrganizationId the primary key of the organization's parent\n\t *         organization\n\t * @param  name the organization's name\n\t * @param  type the organization's type\n\t * @param  regionId the primary key of the organization's region\n\t * @param  countryId the primary key of the organization's country\n\t * @param  statusId the organization's workflow status\n\t * @param  comments the comments about the organization\n\t * @param  site whether the organization is to be associated with a main\n\t *         site\n\t * @param  addresses the organization's addresses\n\t * @param  emailAddresses the organization's email addresses\n\t * @param  orgLabors the organization's hours of operation\n\t * @param  phones the organization's phone numbers\n\t * @param  websites the organization's websites\n\t * @param  serviceContext the service context to be applied (optionally\n\t *         <code>null<\/code>). Can set asset category IDs and asset tag\n\t *         names for the organization, and merge expando bridge attributes\n\t *         for the organization.\n\t * @return the organization\n\t * @throws PortalException if an organization or parent organization with\n\t *         the primary key could not be found, if the user did not have\n\t *         permission to update the organization information, or if the new\n\t *         information was invalid\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic Organization updateOrganization(\n\t\t\tlong organizationId, long parentOrganizationId, String name,\n\t\t\tString type, long regionId, long countryId, int statusId,\n\t\t\tString comments, boolean site, List<Address> addresses,\n\t\t\tList<EmailAddress> emailAddresses, List<OrgLabor> orgLabors,\n\t\t\tList<Phone> phones, List<Website> websites,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tOrganization organization = organizationPersistence.findByPrimaryKey(\n\t\t\torganizationId);\n\n\t\tOrganizationPermissionUtil.check(\n\t\t\tgetPermissionChecker(), organization, ActionKeys.UPDATE);\n\n\t\tif (organization.getParentOrganizationId() != parentOrganizationId) {\n\t\t\tif (parentOrganizationId ==\n\t\t\t\t\tOrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID) {\n\n\t\t\t\tPortalPermissionUtil.check(\n\t\t\t\t\tgetPermissionChecker(), ActionKeys.ADD_ORGANIZATION);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!OrganizationPermissionUtil.contains(\n\t\t\t\t\t\tgetPermissionChecker(), parentOrganizationId,\n\t\t\t\t\t\tActionKeys.MANAGE_SUBORGANIZATIONS) &&\n\t\t\t\t\t!PortalPermissionUtil.contains(\n\t\t\t\t\t\tgetPermissionChecker(), ActionKeys.ADD_ORGANIZATION)) {\n\n\t\t\t\t\tthrow new PrincipalException(\n\t\t\t\t\t\t\"User \" + getUserId() + \" does not have permissions \" +\n\t\t\t\t\t\t\t\"to move organization \" + organizationId + \"to \" +\n\t\t\t\t\t\t\t\t\"parent \" + parentOrganizationId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (addresses != null) {\n\t\t\tUsersAdminUtil.updateAddresses(\n\t\t\t\tOrganization.class.getName(), organizationId, addresses);\n\t\t}\n\n\t\tif (emailAddresses != null) {\n\t\t\tUsersAdminUtil.updateEmailAddresses(\n\t\t\t\tOrganization.class.getName(), organizationId, emailAddresses);\n\t\t}\n\n\t\tif (orgLabors != null) {\n\t\t\tUsersAdminUtil.updateOrgLabors(organizationId, orgLabors);\n\t\t}\n\n\t\tif (phones != null) {\n\t\t\tUsersAdminUtil.updatePhones(\n\t\t\t\tOrganization.class.getName(), organizationId, phones);\n\t\t}\n\n\t\tif (websites != null) {\n\t\t\tUsersAdminUtil.updateWebsites(\n\t\t\t\tOrganization.class.getName(), organizationId, websites);\n\t\t}\n\n\t\tUser user = getUser();\n\n\t\tOrganization oldOrganization = organization;\n\n\t\tList<AssetCategory> oldAssetCategories =\n\t\t\tassetCategoryLocalService.getCategories(\n\t\t\t\tOrganization.class.getName(), organizationId);\n\n\t\tList<AssetTag> oldAssetTags = assetTagLocalService.getTags(\n\t\t\tOrganization.class.getName(), organizationId);\n\n\t\tExpandoBridge oldExpandoBridge = oldOrganization.getExpandoBridge();\n\n\t\tMap<String, Serializable> oldExpandoAttributes =\n\t\t\toldExpandoBridge.getAttributes();\n\n\t\torganization = organizationLocalService.updateOrganization(\n\t\t\tuser.getCompanyId(), organizationId, parentOrganizationId, name,\n\t\t\ttype, regionId, countryId, statusId, comments, site,\n\t\t\tserviceContext);\n\n\t\tOrganizationMembershipPolicyUtil.verifyPolicy(\n\t\t\torganization, oldOrganization, oldAssetCategories, oldAssetTags,\n\t\t\toldExpandoAttributes);\n\n\t\treturn organization;\n\t}","id":4760,"modified_method":"/**\n\t * Updates the organization with additional parameters.\n\t *\n\t * @param  organizationId the primary key of the organization\n\t * @param  parentOrganizationId the primary key of the organization's parent\n\t *         organization\n\t * @param  name the organization's name\n\t * @param  type the organization's type\n\t * @param  regionId the primary key of the organization's region\n\t * @param  countryId the primary key of the organization's country\n\t * @param  statusId the organization's workflow status\n\t * @param  comments the comments about the organization\n\t * @param  site whether the organization is to be associated with a main\n\t *         site\n\t * @param  addresses the organization's addresses\n\t * @param  emailAddresses the organization's email addresses\n\t * @param  orgLabors the organization's hours of operation\n\t * @param  phones the organization's phone numbers\n\t * @param  websites the organization's websites\n\t * @param  serviceContext the service context to be applied (optionally\n\t *         <code>null<\/code>). Can set asset category IDs and asset tag\n\t *         names for the organization, and merge expando bridge attributes\n\t *         for the organization.\n\t * @return the organization\n\t * @throws PortalException if an organization or parent organization with\n\t *         the primary key could not be found, if the user did not have\n\t *         permission to update the organization information, or if the new\n\t *         information was invalid\n\t * @throws SystemException if a system exception occurred\n\t */\n\t@Override\n\tpublic Organization updateOrganization(\n\t\t\tlong organizationId, long parentOrganizationId, String name,\n\t\t\tString type, long regionId, long countryId, int statusId,\n\t\t\tString comments, boolean site, List<Address> addresses,\n\t\t\tList<EmailAddress> emailAddresses, List<OrgLabor> orgLabors,\n\t\t\tList<Phone> phones, List<Website> websites,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\tOrganization organization = organizationPersistence.findByPrimaryKey(\n\t\t\torganizationId);\n\n\t\tOrganizationPermissionUtil.check(\n\t\t\tgetPermissionChecker(), organization, ActionKeys.UPDATE);\n\n\t\tif (organization.getParentOrganizationId() != parentOrganizationId) {\n\t\t\tif (parentOrganizationId ==\n\t\t\t\t\tOrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID) {\n\n\t\t\t\tPortalPermissionUtil.check(\n\t\t\t\t\tgetPermissionChecker(), ActionKeys.ADD_ORGANIZATION);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tOrganizationPermissionUtil.check(\n\t\t\t\t\tgetPermissionChecker(), parentOrganizationId,\n\t\t\t\t\tActionKeys.ADD_ORGANIZATION);\n\t\t\t}\n\t\t}\n\n\t\tif (addresses != null) {\n\t\t\tUsersAdminUtil.updateAddresses(\n\t\t\t\tOrganization.class.getName(), organizationId, addresses);\n\t\t}\n\n\t\tif (emailAddresses != null) {\n\t\t\tUsersAdminUtil.updateEmailAddresses(\n\t\t\t\tOrganization.class.getName(), organizationId, emailAddresses);\n\t\t}\n\n\t\tif (orgLabors != null) {\n\t\t\tUsersAdminUtil.updateOrgLabors(organizationId, orgLabors);\n\t\t}\n\n\t\tif (phones != null) {\n\t\t\tUsersAdminUtil.updatePhones(\n\t\t\t\tOrganization.class.getName(), organizationId, phones);\n\t\t}\n\n\t\tif (websites != null) {\n\t\t\tUsersAdminUtil.updateWebsites(\n\t\t\t\tOrganization.class.getName(), organizationId, websites);\n\t\t}\n\n\t\tUser user = getUser();\n\n\t\tOrganization oldOrganization = organization;\n\n\t\tList<AssetCategory> oldAssetCategories =\n\t\t\tassetCategoryLocalService.getCategories(\n\t\t\t\tOrganization.class.getName(), organizationId);\n\n\t\tList<AssetTag> oldAssetTags = assetTagLocalService.getTags(\n\t\t\tOrganization.class.getName(), organizationId);\n\n\t\tExpandoBridge oldExpandoBridge = oldOrganization.getExpandoBridge();\n\n\t\tMap<String, Serializable> oldExpandoAttributes =\n\t\t\toldExpandoBridge.getAttributes();\n\n\t\torganization = organizationLocalService.updateOrganization(\n\t\t\tuser.getCompanyId(), organizationId, parentOrganizationId, name,\n\t\t\ttype, regionId, countryId, statusId, comments, site,\n\t\t\tserviceContext);\n\n\t\tOrganizationMembershipPolicyUtil.verifyPolicy(\n\t\t\torganization, oldOrganization, oldAssetCategories, oldAssetTags,\n\t\t\toldExpandoAttributes);\n\n\t\treturn organization;\n\t}","commit_id":"7aeacd7915f3312e38c5e3dfc6939e7a8ae6bd6d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void contextInitialized(ServletContextEvent servletContextEvent) {\n\t\tSystemProperties.reload();\n\n\t\tDBFactoryUtil.reset();\n\t\tDeployManagerUtil.reset();\n\t\tInstancePool.reset();\n\t\tMethodCache.reset();\n\t\tPortalBeanLocatorUtil.reset();\n\t\tPortletBagPool.reset();\n\n\t\tReferenceRegistry.releaseReferences();\n\n\t\tInitUtil.init();\n\n\t\tServletContext servletContext = servletContextEvent.getServletContext();\n\n\t\t_portalServlerContextName = servletContext.getServletContextName();\n\n\t\tif (_portalServlerContextName == null) {\n\t\t\t_portalServlerContextName = StringPool.BLANK;\n\t\t}\n\n\t\tif (ServerDetector.isJetty() &&\n\t\t\t_portalServlerContextName.equals(StringPool.SLASH)) {\n\n\t\t\t_portalServlerContextName = StringPool.BLANK;\n\t\t}\n\n\t\t_portalServletContextPath = servletContext.getContextPath();\n\n\t\tif (ServerDetector.isWebSphere() &&\n\t\t\t_portalServletContextPath.isEmpty()) {\n\n\t\t\t_portalServlerContextName = StringPool.BLANK;\n\t\t}\n\n\t\tClassPathUtil.initializeClassPaths(servletContext);\n\n\t\tCacheRegistryUtil.clear();\n\t\tCharBufferPool.cleanUp();\n\t\tPortletContextBagPool.clear();\n\t\tWebAppPool.clear();\n\n\t\tFile tempDir = (File)servletContext.getAttribute(\n\t\t\tJavaConstants.JAVAX_SERVLET_CONTEXT_TEMPDIR);\n\n\t\tPropsValues.LIFERAY_WEB_PORTAL_CONTEXT_TEMPDIR =\n\t\t\ttempDir.getAbsolutePath();\n\n\t\ttry {\n\t\t\tModuleFrameworkUtilAdapter.startFramework();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\n\t\tPortalContextLoaderLifecycleThreadLocal.setInitializing(true);\n\n\t\ttry {\n\t\t\tsuper.contextInitialized(servletContextEvent);\n\t\t}\n\t\tfinally {\n\t\t\tPortalContextLoaderLifecycleThreadLocal.setInitializing(false);\n\t\t}\n\n\t\tApplicationContext applicationContext =\n\t\t\tContextLoader.getCurrentWebApplicationContext();\n\n\t\ttry {\n\t\t\tBeanReferenceRefreshUtil.refresh(applicationContext);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\n\t\tFinderCacheUtil.clearCache();\n\t\tFinderCacheUtil.clearLocalCache();\n\t\tEntityCacheUtil.clearCache();\n\t\tEntityCacheUtil.clearLocalCache();\n\t\tPermissionCacheUtil.clearCache();\n\t\tPermissionCacheUtil.clearLocalCache();\n\t\tTemplateResourceLoaderUtil.clearCache();\n\t\tWikiCacheUtil.clearCache(0);\n\n\t\tServletContextPool.clear();\n\n\t\tCacheUtil.clearCache();\n\t\tMultiVMPoolUtil.clear();\n\t\tSingleVMPoolUtil.clear();\n\t\tWebCachePoolUtil.clear();\n\n\t\tClassLoader portalClassLoader = ClassLoaderUtil.getPortalClassLoader();\n\n\t\tClassLoaderPool.register(_portalServlerContextName, portalClassLoader);\n\n\t\tServletContextPool.put(_portalServlerContextName, servletContext);\n\n\t\tBeanLocatorImpl beanLocatorImpl = new BeanLocatorImpl(\n\t\t\tportalClassLoader, applicationContext);\n\n\t\tPortalBeanLocatorUtil.setBeanLocator(beanLocatorImpl);\n\n\t\tClassLoader classLoader = portalClassLoader;\n\n\t\twhile (classLoader != null) {\n\t\t\tCachedIntrospectionResults.clearClassLoader(classLoader);\n\n\t\t\tclassLoader = classLoader.getParent();\n\t\t}\n\n\t\tAutowireCapableBeanFactory autowireCapableBeanFactory =\n\t\t\tapplicationContext.getAutowireCapableBeanFactory();\n\n\t\tclearFilteredPropertyDescriptorsCache(autowireCapableBeanFactory);\n\n\t\ttry {\n\t\t\tModuleFrameworkUtilAdapter.registerContext(applicationContext);\n\t\t\tModuleFrameworkUtilAdapter.registerContext(servletContext);\n\n\t\t\tModuleFrameworkUtilAdapter.startRuntime();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\n\t\tinitListeners(servletContext);\n\t}","id":4761,"modified_method":"@Override\n\tpublic void contextInitialized(ServletContextEvent servletContextEvent) {\n\t\tSystemProperties.reload();\n\n\t\tDBFactoryUtil.reset();\n\t\tDeployManagerUtil.reset();\n\t\tInstancePool.reset();\n\t\tMethodCache.reset();\n\t\tPortalBeanLocatorUtil.reset();\n\t\tPortletBagPool.reset();\n\n\t\tReferenceRegistry.releaseReferences();\n\n\t\tInitUtil.init();\n\n\t\tServletContext servletContext = servletContextEvent.getServletContext();\n\n\t\t_portalServlerContextName = servletContext.getServletContextName();\n\n\t\tif (_portalServlerContextName == null) {\n\t\t\t_portalServlerContextName = StringPool.BLANK;\n\t\t}\n\n\t\tif (ServerDetector.isJetty() &&\n\t\t\t_portalServlerContextName.equals(StringPool.SLASH)) {\n\n\t\t\t_portalServlerContextName = StringPool.BLANK;\n\t\t}\n\n\t\t_portalServletContextPath = servletContext.getContextPath();\n\n\t\tif (ServerDetector.isWebSphere() &&\n\t\t\t_portalServletContextPath.isEmpty()) {\n\n\t\t\t_portalServlerContextName = StringPool.BLANK;\n\t\t}\n\n\t\tClassPathUtil.initializeClassPaths(servletContext);\n\n\t\tCacheRegistryUtil.clear();\n\t\tCharBufferPool.cleanUp();\n\t\tPortletContextBagPool.clear();\n\t\tWebAppPool.clear();\n\n\t\tFile tempDir = (File)servletContext.getAttribute(\n\t\t\tJavaConstants.JAVAX_SERVLET_CONTEXT_TEMPDIR);\n\n\t\tPropsValues.LIFERAY_WEB_PORTAL_CONTEXT_TEMPDIR =\n\t\t\ttempDir.getAbsolutePath();\n\n\t\ttry {\n\t\t\tModuleFrameworkUtilAdapter.startFramework();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\n\t\tPortalContextLoaderLifecycleThreadLocal.setInitializing(true);\n\n\t\ttry {\n\t\t\tsuper.contextInitialized(servletContextEvent);\n\t\t}\n\t\tfinally {\n\t\t\tPortalContextLoaderLifecycleThreadLocal.setInitializing(false);\n\t\t}\n\n\t\tApplicationContext applicationContext =\n\t\t\tContextLoader.getCurrentWebApplicationContext();\n\n\t\ttry {\n\t\t\tBeanReferenceRefreshUtil.refresh(applicationContext);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\n\t\tif (PropsValues.CLEAR_CACHE_ON_CONTEXT_INITIALIZATION) {\n\t\t\tFinderCacheUtil.clearCache();\n\t\t\tFinderCacheUtil.clearLocalCache();\n\t\t\tEntityCacheUtil.clearCache();\n\t\t\tEntityCacheUtil.clearLocalCache();\n\t\t\tPermissionCacheUtil.clearCache();\n\t\t\tPermissionCacheUtil.clearLocalCache();\n\t\t\tTemplateResourceLoaderUtil.clearCache();\n\t\t\tWikiCacheUtil.clearCache(0);\n\n\t\t\tServletContextPool.clear();\n\n\t\t\tCacheUtil.clearCache();\n\t\t\tMultiVMPoolUtil.clear();\n\t\t\tSingleVMPoolUtil.clear();\n\t\t\tWebCachePoolUtil.clear();\n\t\t}\n\n\t\tClassLoader portalClassLoader = ClassLoaderUtil.getPortalClassLoader();\n\n\t\tClassLoaderPool.register(_portalServlerContextName, portalClassLoader);\n\n\t\tServletContextPool.put(_portalServlerContextName, servletContext);\n\n\t\tBeanLocatorImpl beanLocatorImpl = new BeanLocatorImpl(\n\t\t\tportalClassLoader, applicationContext);\n\n\t\tPortalBeanLocatorUtil.setBeanLocator(beanLocatorImpl);\n\n\t\tClassLoader classLoader = portalClassLoader;\n\n\t\twhile (classLoader != null) {\n\t\t\tCachedIntrospectionResults.clearClassLoader(classLoader);\n\n\t\t\tclassLoader = classLoader.getParent();\n\t\t}\n\n\t\tAutowireCapableBeanFactory autowireCapableBeanFactory =\n\t\t\tapplicationContext.getAutowireCapableBeanFactory();\n\n\t\tclearFilteredPropertyDescriptorsCache(autowireCapableBeanFactory);\n\n\t\ttry {\n\t\t\tModuleFrameworkUtilAdapter.registerContext(applicationContext);\n\t\t\tModuleFrameworkUtilAdapter.registerContext(servletContext);\n\n\t\t\tModuleFrameworkUtilAdapter.startRuntime();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\n\t\tinitListeners(servletContext);\n\t}","commit_id":"02876cdbdd16da892c3998c240980b6bdd323411","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void clearCacheRegistry(ServletContext servletContext)\n\t\tthrows DocumentException {\n\n\t\tInputStream inputStream = servletContext.getResourceAsStream(\n\t\t\t\"/WEB-INF/classes/META-INF/portlet-hbm.xml\");\n\n\t\tif (inputStream == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(inputStream);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> classElements = rootElement.elements(\"class\");\n\n\t\tfor (Element classElement : classElements) {\n\t\t\tString name = classElement.attributeValue(\"name\");\n\n\t\t\tCacheRegistryUtil.unregister(name);\n\t\t}\n\n\t\tCacheRegistryUtil.clear();\n\n\t\tEntityCacheUtil.clearCache();\n\t\tFinderCacheUtil.clearCache();\n\t}","id":4762,"modified_method":"protected void clearCacheRegistry(ServletContext servletContext)\n\t\tthrows DocumentException {\n\n\t\tInputStream inputStream = servletContext.getResourceAsStream(\n\t\t\t\"/WEB-INF/classes/META-INF/portlet-hbm.xml\");\n\n\t\tif (inputStream == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(inputStream);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> classElements = rootElement.elements(\"class\");\n\n\t\tfor (Element classElement : classElements) {\n\t\t\tString name = classElement.attributeValue(\"name\");\n\n\t\t\tCacheRegistryUtil.unregister(name);\n\t\t}\n\n\t\tCacheRegistryUtil.clear();\n\n\t\tif (PropsValues.CLEAR_CACHE_ON_PLUGIN_UNDEPLOY) {\n\t\t\tEntityCacheUtil.clearCache();\n\t\t\tFinderCacheUtil.clearCache();\n\t\t}\n\t}","commit_id":"02876cdbdd16da892c3998c240980b6bdd323411","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Plugin findPlugin(String id) {\n        return findByName(id);\n    }","id":4763,"modified_method":"public Plugin findPlugin(String name) {\n        return findByName(name);\n    }","commit_id":"460f118c9c54cb17e7aec7c8f1117e4839592622","url":"https://github.com/gradle/gradle"},{"original_method":"public boolean hasPlugin(String id) {\n        return findPlugin(id) != null;\n    }","id":4764,"modified_method":"public boolean hasPlugin(String name) {\n        return findPlugin(name) != null;\n    }","commit_id":"460f118c9c54cb17e7aec7c8f1117e4839592622","url":"https://github.com/gradle/gradle"},{"original_method":"public Class<? extends Plugin> getTypeForId(String pluginId) {\n        if (!GUtil.isTrue(properties.getProperty(pluginId))) {\n            throw new PluginNotAvailableException(\"The plugin with the id \" + pluginId + \" is not available.\");\n        }\n        try {\n            return Class.forName(properties.getProperty(pluginId)).asSubclass(Plugin.class);\n        } catch (ClassNotFoundException e) {\n            throw new PluginInstantiationException(e);\n        }\n    }","id":4765,"modified_method":"public Class<? extends Plugin> getTypeForId(String pluginId) {\n        if (!GUtil.isTrue(properties.getProperty(pluginId))) {\n            throw new UnknownPluginException(\"The plugin with the id \" + pluginId + \" is not available.\");\n        }\n        try {\n            return Class.forName(properties.getProperty(pluginId)).asSubclass(Plugin.class);\n        } catch (ClassNotFoundException e) {\n            throw new PluginInstantiationException(e);\n        }\n    }","commit_id":"460f118c9c54cb17e7aec7c8f1117e4839592622","url":"https://github.com/gradle/gradle"},{"original_method":"public Plugin getPlugin(String id) {\n        return findByName(id);\n    }","id":4766,"modified_method":"public Plugin getPlugin(String id) {\n        Plugin plugin = findByName(id);\n        if (plugin == null) {\n            throw new UnknownPluginException(\"Plugin with id \" + id + \" has not been used.\");\n        }\n        return plugin;\n    }","commit_id":"460f118c9c54cb17e7aec7c8f1117e4839592622","url":"https://github.com/gradle/gradle"},{"original_method":"public Plugin getPlugin(Class<? extends Plugin> type) {\n        return findByName(getNameForType(type));\n    }","id":4767,"modified_method":"public Plugin getPlugin(Class<? extends Plugin> type) {\n        Plugin plugin = findByName(getNameForType(type));\n        if (plugin == null) {\n            throw new UnknownPluginException(\"Plugin with type \" + type + \" has not been used.\");\n        }\n        return plugin;\n    }","commit_id":"460f118c9c54cb17e7aec7c8f1117e4839592622","url":"https://github.com/gradle/gradle"},{"original_method":"private Set<OnmsCategory> getOnmsCategoriesFromViewCategories(Collection<Category> viewCats) {\n            Set<OnmsCategory> categories = new HashSet<OnmsCategory>();\n            for (Category viewCat : viewCats) {\n            \t\n                categories.add(m_categoryDao.findByName(viewCat.getName()));\n            }\n            \n            return categories;\n        }","id":4768,"modified_method":"private Set<OnmsCategory> getOnmsCategoriesFromViewCategories(Collection<Category> viewCats) {\n            Set<OnmsCategory> categories = new HashSet<OnmsCategory>();\n            for (Category viewCat : viewCats) {\n            \t\n                OnmsCategory category = m_categoryDao.findByName(viewCat.getName());\n                if (category == null)\n                \tthrow new ObjectRetrievalFailureException(OnmsCategory.class, viewCat.getName(), \"Unable to locate OnmsCategory named: \"+viewCat.getName()+\" as specified in the surveillance view configuration file\", null);\n\t\t\t\tcategories.add(category);\n            }\n            \n            return categories;\n        }","commit_id":"ed1cc4bbbcf607f0d0a028dba2cd8f069ea3b3c8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private Set<OnmsCategory> getOnmsCategoriesFromViewCategories(Collection<Category> viewCats) {\n            Set<OnmsCategory> categories = new HashSet<OnmsCategory>();\n            for (Category viewCat : viewCats) {\n            \t\n                categories.add(m_categoryDao.findByName(viewCat.getName()));\n            }\n            \n            return categories;\n        }","id":4769,"modified_method":"private Set<OnmsCategory> getOnmsCategoriesFromViewCategories(Collection<Category> viewCats) {\n            Set<OnmsCategory> categories = new HashSet<OnmsCategory>();\n            for (Category viewCat : viewCats) {\n            \t\n                OnmsCategory category = m_categoryDao.findByName(viewCat.getName());\n                if (category == null)\n                \tthrow new ObjectRetrievalFailureException(OnmsCategory.class, viewCat.getName(), \"Unable to locate OnmsCategory named: \"+viewCat.getName()+\" as specified in the surveillance view configuration file\", null);\n\t\t\t\tcategories.add(category);\n            }\n            \n            return categories;\n        }","commit_id":"76cca0352a5ce223fcaad8e09419a046bc67aafb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public synchronized void close() throws IOException\n    {\n        if ( fileChannel == null || !fileChannel.isOpen() )\n        {\n            log.info( \"Logical log: \" + fileName + \" already closed\" );\n            return;\n        }\n        long endPosition = writeBuffer.getFileChannelPosition();\n        if ( xidIdentMap.size() > 0 )\n        {\n            log.info( \"Active transactions: \" + xidIdentMap.size() );\n            log.info( \"Closing dirty log: \" + fileName + \".\" + currentLog );\n            if ( writeBuffer != null )\n            {\n                writeBuffer.force();\n            }\n            writeBuffer = null;\n            fileChannel.close();\n            return;\n        }\n        if ( !keepLogs || backupSlave )\n        {\n            deleteCurrentLogFile( fileName + \".\" + currentLog );\n        }\n        else\n        {\n            renameCurrentLogFileAndIncrementVersion( fileName + \".\" + \n                currentLog, endPosition );\n        }\n        setActiveLog( CLEAN );\n    }","id":4770,"modified_method":"public synchronized void close() throws IOException\n    {\n        if ( fileChannel == null || !fileChannel.isOpen() )\n        {\n            log.info( \"Logical log: \" + fileName + \" already closed\" );\n            return;\n        }\n        long endPosition = writeBuffer.getFileChannelPosition();\n        if ( xidIdentMap.size() > 0 )\n        {\n            log.info( \"Active transactions: \" + xidIdentMap.size() );\n            log.info( \"Closing dirty log: \" + fileName + \".\" + currentLog );\n            if ( writeBuffer != null )\n            {\n                writeBuffer.force();\n            }\n            writeBuffer = null;\n            fileChannel.close();\n            return;\n        }\n        if ( !keepLogs || backupSlave )\n        {\n            if ( currentLog == CLEAN )\n            {\n                // special case going from old xa version with no log rotation\n                // and we started with a recovery\n                deleteCurrentLogFile( fileName );\n            }\n            else\n            {\n                deleteCurrentLogFile( fileName + \".\" + currentLog );\n            }\n        }\n        else\n        {\n            renameCurrentLogFileAndIncrementVersion( fileName + \".\" + \n                currentLog, endPosition );\n        }\n        if ( currentLog != CLEAN ) // again special case, see above\n        {\n            setActiveLog( CLEAN );\n        }\n    }","commit_id":"b0bb07c7602b488a4290126508fd278695f55672","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized void close() throws IOException\n    {\n        if ( fileChannel == null || !fileChannel.isOpen() )\n        {\n            log.info( \"Logical log: \" + fileName + \" already closed\" );\n            return;\n        }\n        long endPosition = writeBuffer.getFileChannelPosition();\n        if ( xidIdentMap.size() > 0 )\n        {\n            log.info( \"Active transactions: \" + xidIdentMap.size() );\n            log.info( \"Closing dirty log: \" + fileName + \".\" + currentLog );\n            if ( writeBuffer != null )\n            {\n                writeBuffer.force();\n            }\n            writeBuffer = null;\n            fileChannel.close();\n            return;\n        }\n        if ( !keepLogs || backupSlave )\n        {\n            deleteCurrentLogFile( fileName + \".\" + currentLog );\n        }\n        else\n        {\n            renameCurrentLogFileAndIncrementVersion( fileName + \".\" + \n                currentLog, endPosition );\n        }\n        setActiveLog( CLEAN );\n    }","id":4771,"modified_method":"public synchronized void close() throws IOException\n    {\n        if ( fileChannel == null || !fileChannel.isOpen() )\n        {\n            log.info( \"Logical log: \" + fileName + \" already closed\" );\n            return;\n        }\n        long endPosition = writeBuffer.getFileChannelPosition();\n        if ( xidIdentMap.size() > 0 )\n        {\n            log.info( \"Active transactions: \" + xidIdentMap.size() );\n            log.info( \"Closing dirty log: \" + fileName + \".\" + currentLog );\n            if ( writeBuffer != null )\n            {\n                writeBuffer.force();\n            }\n            writeBuffer = null;\n            fileChannel.close();\n            return;\n        }\n        if ( !keepLogs || backupSlave )\n        {\n            if ( currentLog == CLEAN )\n            {\n                // special case going from old xa version with no log rotation\n                // and we started with a recovery\n                deleteCurrentLogFile( fileName );\n            }\n            else\n            {\n                deleteCurrentLogFile( fileName + \".\" + currentLog );\n            }\n        }\n        else\n        {\n            renameCurrentLogFileAndIncrementVersion( fileName + \".\" + \n                currentLog, endPosition );\n        }\n        if ( currentLog != CLEAN ) // again special case, see above\n        {\n            setActiveLog( CLEAN );\n        }\n    }","commit_id":"c2e0cbd176dd46c5af979faac007c645cca1ef4f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized void close() throws IOException\n    {\n        if ( fileChannel == null || !fileChannel.isOpen() )\n        {\n            log.info( \"Logical log: \" + fileName + \" already closed\" );\n            return;\n        }\n        long endPosition = writeBuffer.getFileChannelPosition();\n        if ( xidIdentMap.size() > 0 )\n        {\n            log.info( \"Active transactions: \" + xidIdentMap.size() );\n            log.info( \"Closing dirty log: \" + fileName + \".\" + currentLog );\n            if ( writeBuffer != null )\n            {\n                writeBuffer.force();\n            }\n            writeBuffer = null;\n            fileChannel.close();\n            return;\n        }\n        if ( !keepLogs || backupSlave )\n        {\n            deleteCurrentLogFile( fileName + \".\" + currentLog );\n        }\n        else\n        {\n            renameCurrentLogFileAndIncrementVersion( fileName + \".\" + \n                currentLog, endPosition );\n        }\n        setActiveLog( CLEAN );\n    }","id":4772,"modified_method":"public synchronized void close() throws IOException\n    {\n        if ( fileChannel == null || !fileChannel.isOpen() )\n        {\n            log.info( \"Logical log: \" + fileName + \" already closed\" );\n            return;\n        }\n        long endPosition = writeBuffer.getFileChannelPosition();\n        if ( xidIdentMap.size() > 0 )\n        {\n            log.info( \"Active transactions: \" + xidIdentMap.size() );\n            log.info( \"Closing dirty log: \" + fileName + \".\" + currentLog );\n            if ( writeBuffer != null )\n            {\n                writeBuffer.force();\n            }\n            writeBuffer = null;\n            fileChannel.close();\n            return;\n        }\n        if ( !keepLogs || backupSlave )\n        {\n            if ( currentLog == CLEAN )\n            {\n                // special case going from old xa version with no log rotation\n                // and we started with a recovery\n                deleteCurrentLogFile( fileName );\n            }\n            else\n            {\n                deleteCurrentLogFile( fileName + \".\" + currentLog );\n            }\n        }\n        else\n        {\n            renameCurrentLogFileAndIncrementVersion( fileName + \".\" + \n                currentLog, endPosition );\n        }\n        if ( currentLog != CLEAN ) // again special case, see above\n        {\n            setActiveLog( CLEAN );\n        }\n    }","commit_id":"a1fb921999bb07bf0fe30734fa97115f7bc8d092","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected void exportPortletDataPermissions(\n\t\t\tPortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"portlet-data-permissions\");\n\n\t\tMap<String, List<KeyValuePair>> permissionsMap =\n\t\t\tportletDataContext.getPermissions();\n\n\t\tfor (Map.Entry<String, List<KeyValuePair>> entry :\n\t\t\t\tpermissionsMap.entrySet()) {\n\n\t\t\tString[] permissionParts = StringUtil.split(\n\t\t\t\tentry.getKey(), CharPool.POUND);\n\n\t\t\tString resourceName = permissionParts[0];\n\t\t\tlong resourcePK = GetterUtil.getLong(permissionParts[1]);\n\n\t\t\tElement portletDataElement = rootElement.addElement(\"portlet-data\");\n\n\t\t\tportletDataElement.addAttribute(\"resource-name\", resourceName);\n\t\t\tportletDataElement.addAttribute(\n\t\t\t\t\"resource-pk\", String.valueOf(resourcePK));\n\n\t\t\tList<KeyValuePair> permissions = entry.getValue();\n\n\t\t\tfor (KeyValuePair permission : permissions) {\n\t\t\t\tString roleName = permission.getKey();\n\t\t\t\tString actions = permission.getValue();\n\n\t\t\t\tElement permissionsElement = portletDataElement.addElement(\n\t\t\t\t\t\"permissions\");\n\n\t\t\t\tpermissionsElement.addAttribute(\"role-name\", roleName);\n\t\t\t\tpermissionsElement.addAttribute(\"actions\", actions);\n\t\t\t}\n\t\t}\n\n\t\tportletDataContext.addZipEntry(\n\t\t\tExportImportPathUtil.getRootPath(portletDataContext) +\n\t\t\t\t\"/portlet-data-permissions.xml\",\n\t\t\tdocument.formattedString());\n\t}","id":4773,"modified_method":"protected void exportPortletDataPermissions(\n\t\t\tPortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"portlet-data-permissions\");\n\n\t\tMap<String, List<KeyValuePair>> permissionsMap =\n\t\t\tportletDataContext.getPermissions();\n\n\t\tfor (Map.Entry<String, List<KeyValuePair>> entry :\n\t\t\t\tpermissionsMap.entrySet()) {\n\n\t\t\tString[] permissionParts = StringUtil.split(\n\t\t\t\tentry.getKey(), CharPool.POUND);\n\n\t\t\tString resourceName = permissionParts[0];\n\t\t\tlong resourcePK = GetterUtil.getLong(permissionParts[1]);\n\n\t\t\tElement portletDataElement = rootElement.addElement(\"portlet-data\");\n\n\t\t\tportletDataElement.addAttribute(\"resource-name\", resourceName);\n\t\t\tportletDataElement.addAttribute(\n\t\t\t\t\"resource-pk\", String.valueOf(resourcePK));\n\n\t\t\tList<KeyValuePair> permissions = entry.getValue();\n\n\t\t\tfor (KeyValuePair permission : permissions) {\n\t\t\t\tString roleName = permission.getKey();\n\t\t\t\tString actions = permission.getValue();\n\n\t\t\t\tElement permissionsElement = portletDataElement.addElement(\n\t\t\t\t\t\"permissions\");\n\n\t\t\t\tpermissionsElement.addAttribute(\"role-name\", roleName);\n\t\t\t\tpermissionsElement.addAttribute(\"actions\", actions);\n\t\t\t}\n\t\t}\n\n\t\tString rootPath = ExportImportPathUtil.getRootPath(portletDataContext);\n\n\t\tportletDataContext.addZipEntry(\n\t\t\trootPath.concat(\"/portlet-data-permissions.xml\"),\n\t\t\tdocument.formattedString());\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void readPortletDataPermissions(\n\t\t\tPortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tExportImportPathUtil.getSourceRootPath(portletDataContext) +\n\t\t\t\t\"/portlet-data-permissions.xml\");\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> portletDataElements = rootElement.elements(\n\t\t\t\"portlet-data\");\n\n\t\tfor (Element portletDataElement : portletDataElements) {\n\t\t\tString resourceName = portletDataElement.attributeValue(\n\t\t\t\t\"resource-name\");\n\t\t\tlong resourcePK = GetterUtil.getLong(\n\t\t\t\tportletDataElement.attributeValue(\"resource-pk\"));\n\n\t\t\tList<KeyValuePair> permissions = new ArrayList<KeyValuePair>();\n\n\t\t\tList<Element> permissionsElements = portletDataElement.elements(\n\t\t\t\t\"permissions\");\n\n\t\t\tfor (Element permissionsElement : permissionsElements) {\n\t\t\t\tString roleName = permissionsElement.attributeValue(\n\t\t\t\t\t\"role-name\");\n\t\t\t\tString actions = permissionsElement.attributeValue(\"actions\");\n\n\t\t\t\tKeyValuePair permission = new KeyValuePair(roleName, actions);\n\n\t\t\t\tpermissions.add(permission);\n\t\t\t}\n\n\t\t\tportletDataContext.addPermissions(\n\t\t\t\tresourceName, resourcePK, permissions);\n\t\t}\n\t}","id":4774,"modified_method":"protected void readPortletDataPermissions(\n\t\t\tPortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString sourceRootPath = ExportImportPathUtil.getSourceRootPath(\n\t\t\tportletDataContext);\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tsourceRootPath.concat(\"/portlet-data-permissions.xml\"));\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> portletDataElements = rootElement.elements(\n\t\t\t\"portlet-data\");\n\n\t\tfor (Element portletDataElement : portletDataElements) {\n\t\t\tString resourceName = portletDataElement.attributeValue(\n\t\t\t\t\"resource-name\");\n\t\t\tlong resourcePK = GetterUtil.getLong(\n\t\t\t\tportletDataElement.attributeValue(\"resource-pk\"));\n\n\t\t\tList<KeyValuePair> permissions = new ArrayList<KeyValuePair>();\n\n\t\t\tList<Element> permissionsElements = portletDataElement.elements(\n\t\t\t\t\"permissions\");\n\n\t\t\tfor (Element permissionsElement : permissionsElements) {\n\t\t\t\tString roleName = permissionsElement.attributeValue(\n\t\t\t\t\t\"role-name\");\n\t\t\t\tString actions = permissionsElement.attributeValue(\"actions\");\n\n\t\t\t\tKeyValuePair permission = new KeyValuePair(roleName, actions);\n\n\t\t\t\tpermissions.add(permission);\n\t\t\t}\n\n\t\t\tportletDataContext.addPermissions(\n\t\t\t\tresourceName, resourcePK, permissions);\n\t\t}\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportRatingsEntries(\n\t\t\tPortletDataContext portletDataContext, Element parentElement)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"ratings\");\n\n\t\tMap<String, List<RatingsEntry>> ratingsEntriesMap =\n\t\t\tportletDataContext.getRatingsEntries();\n\n\t\tfor (Map.Entry<String, List<RatingsEntry>> entry :\n\t\t\t\tratingsEntriesMap.entrySet()) {\n\n\t\t\tString[] ratingsEntryParts = StringUtil.split(\n\t\t\t\tentry.getKey(), CharPool.POUND);\n\n\t\t\tString className = ratingsEntryParts[0];\n\t\t\tString classPK = ratingsEntryParts[1];\n\n\t\t\tString ratingsEntriesPath = getRatingsEntriesPath(\n\t\t\t\tportletDataContext, className, classPK);\n\n\t\t\tElement assetElement = rootElement.addElement(\"asset\");\n\n\t\t\tassetElement.addAttribute(\"path\", ratingsEntriesPath);\n\t\t\tassetElement.addAttribute(\"class-name\", className);\n\t\t\tassetElement.addAttribute(\"class-pk\", classPK);\n\n\t\t\tList<RatingsEntry> ratingsEntries = entry.getValue();\n\n\t\t\tfor (RatingsEntry ratingsEntry : ratingsEntries) {\n\t\t\t\tString ratingsEntryPath = getRatingsEntryPath(\n\t\t\t\t\tportletDataContext, className, classPK, ratingsEntry);\n\n\t\t\t\tportletDataContext.addZipEntry(ratingsEntryPath, ratingsEntry);\n\t\t\t}\n\t\t}\n\n\t\tportletDataContext.addZipEntry(\n\t\t\tExportImportPathUtil.getRootPath(portletDataContext) +\n\t\t\t\t\"/ratings.xml\",\n\t\t\tdocument.formattedString());\n\t}","id":4775,"modified_method":"protected void exportRatingsEntries(\n\t\t\tPortletDataContext portletDataContext, Element parentElement)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"ratings\");\n\n\t\tMap<String, List<RatingsEntry>> ratingsEntriesMap =\n\t\t\tportletDataContext.getRatingsEntries();\n\n\t\tfor (Map.Entry<String, List<RatingsEntry>> entry :\n\t\t\t\tratingsEntriesMap.entrySet()) {\n\n\t\t\tString[] ratingsEntryParts = StringUtil.split(\n\t\t\t\tentry.getKey(), CharPool.POUND);\n\n\t\t\tString className = ratingsEntryParts[0];\n\t\t\tString classPK = ratingsEntryParts[1];\n\n\t\t\tString ratingsEntriesPath = getRatingsEntriesPath(\n\t\t\t\tportletDataContext, className, classPK);\n\n\t\t\tElement assetElement = rootElement.addElement(\"asset\");\n\n\t\t\tassetElement.addAttribute(\"path\", ratingsEntriesPath);\n\t\t\tassetElement.addAttribute(\"class-name\", className);\n\t\t\tassetElement.addAttribute(\"class-pk\", classPK);\n\n\t\t\tList<RatingsEntry> ratingsEntries = entry.getValue();\n\n\t\t\tfor (RatingsEntry ratingsEntry : ratingsEntries) {\n\t\t\t\tString ratingsEntryPath = getRatingsEntryPath(\n\t\t\t\t\tportletDataContext, className, classPK, ratingsEntry);\n\n\t\t\t\tportletDataContext.addZipEntry(ratingsEntryPath, ratingsEntry);\n\t\t\t}\n\t\t}\n\n\t\tString rootPath = ExportImportPathUtil.getRootPath(portletDataContext);\n\n\t\tportletDataContext.addZipEntry(\n\t\t\trootPath.concat(\"/ratings.xml\"), document.formattedString());\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportAssetLinks(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"links\");\n\n\t\tMap<String, String[]> assetLinkUuidsMap =\n\t\t\tportletDataContext.getAssetLinkUuidsMap();\n\n\t\tfor (Map.Entry<String, String[]> entry : assetLinkUuidsMap.entrySet()) {\n\t\t\tString[] assetLinkNameParts = StringUtil.split(\n\t\t\t\tentry.getKey(), CharPool.POUND);\n\t\t\tString[] targetAssetEntryUuids = entry.getValue();\n\n\t\t\tString sourceAssetEntryUuid = assetLinkNameParts[0];\n\t\t\tString assetLinkType = assetLinkNameParts[1];\n\n\t\t\tElement assetElement = rootElement.addElement(\"asset-link\");\n\n\t\t\tassetElement.addAttribute(\"source-uuid\", sourceAssetEntryUuid);\n\t\t\tassetElement.addAttribute(\n\t\t\t\t\"target-uuids\", StringUtil.merge(targetAssetEntryUuids));\n\t\t\tassetElement.addAttribute(\"type\", assetLinkType);\n\t\t}\n\n\t\tportletDataContext.addZipEntry(\n\t\t\tExportImportPathUtil.getRootPath(portletDataContext) + \"/links.xml\",\n\t\t\tdocument.formattedString());\n\t}","id":4776,"modified_method":"protected void exportAssetLinks(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"links\");\n\n\t\tMap<String, String[]> assetLinkUuidsMap =\n\t\t\tportletDataContext.getAssetLinkUuidsMap();\n\n\t\tfor (Map.Entry<String, String[]> entry : assetLinkUuidsMap.entrySet()) {\n\t\t\tString[] assetLinkNameParts = StringUtil.split(\n\t\t\t\tentry.getKey(), CharPool.POUND);\n\t\t\tString[] targetAssetEntryUuids = entry.getValue();\n\n\t\t\tString sourceAssetEntryUuid = assetLinkNameParts[0];\n\t\t\tString assetLinkType = assetLinkNameParts[1];\n\n\t\t\tElement assetElement = rootElement.addElement(\"asset-link\");\n\n\t\t\tassetElement.addAttribute(\"source-uuid\", sourceAssetEntryUuid);\n\t\t\tassetElement.addAttribute(\n\t\t\t\t\"target-uuids\", StringUtil.merge(targetAssetEntryUuids));\n\t\t\tassetElement.addAttribute(\"type\", assetLinkType);\n\t\t}\n\n\t\tString rootPath = ExportImportPathUtil.getRootPath(portletDataContext);\n\n\t\tportletDataContext.addZipEntry(\n\t\t\trootPath.concat(\"/links.xml\"), document.formattedString());\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportAssetCategories(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"categories-hierarchy\");\n\n\t\texportAssetCategories(portletDataContext, rootElement);\n\n\t\tportletDataContext.addZipEntry(\n\t\t\tExportImportPathUtil.getRootPath(portletDataContext) +\n\t\t\t\t\"/categories-hierarchy.xml\",\n\t\t\tdocument.formattedString());\n\t}","id":4777,"modified_method":"protected void exportAssetCategories(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"categories-hierarchy\");\n\n\t\texportAssetCategories(portletDataContext, rootElement);\n\n\t\tString rootPath = ExportImportPathUtil.getRootPath(portletDataContext);\n\n\t\tportletDataContext.addZipEntry(\n\t\t\trootPath.concat(\"/categories-hierarchy.xml\"),\n\t\t\tdocument.formattedString());\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportComments(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"comments\");\n\n\t\tMap<String, List<MBMessage>> commentsMap =\n\t\t\tportletDataContext.getComments();\n\n\t\tfor (Map.Entry<String, List<MBMessage>> entry :\n\t\t\t\tcommentsMap.entrySet()) {\n\n\t\t\tString[] commentParts = StringUtil.split(\n\t\t\t\tentry.getKey(), CharPool.POUND);\n\n\t\t\tString className = commentParts[0];\n\t\t\tString classPK = commentParts[1];\n\n\t\t\tString commentsPath = getCommentsPath(\n\t\t\t\tportletDataContext, className, classPK);\n\n\t\t\tElement assetElement = rootElement.addElement(\"asset\");\n\n\t\t\tassetElement.addAttribute(\"path\", commentsPath);\n\t\t\tassetElement.addAttribute(\"class-name\", className);\n\t\t\tassetElement.addAttribute(\"class-pk\", classPK);\n\n\t\t\tList<MBMessage> mbMessages = entry.getValue();\n\n\t\t\tfor (MBMessage mbMessage : mbMessages) {\n\t\t\t\tString commentPath = getCommentPath(\n\t\t\t\t\tportletDataContext, className, classPK, mbMessage);\n\n\t\t\t\tif (portletDataContext.isPathNotProcessed(commentPath)) {\n\t\t\t\t\tportletDataContext.addZipEntry(commentPath, mbMessage);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tportletDataContext.addZipEntry(\n\t\t\tExportImportPathUtil.getRootPath(portletDataContext) +\n\t\t\t\t\"/comments.xml\",\n\t\t\tdocument.formattedString());\n\t}","id":4778,"modified_method":"protected void exportComments(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"comments\");\n\n\t\tMap<String, List<MBMessage>> commentsMap =\n\t\t\tportletDataContext.getComments();\n\n\t\tfor (Map.Entry<String, List<MBMessage>> entry :\n\t\t\t\tcommentsMap.entrySet()) {\n\n\t\t\tString[] commentParts = StringUtil.split(\n\t\t\t\tentry.getKey(), CharPool.POUND);\n\n\t\t\tString className = commentParts[0];\n\t\t\tString classPK = commentParts[1];\n\n\t\t\tString commentsPath = getCommentsPath(\n\t\t\t\tportletDataContext, className, classPK);\n\n\t\t\tElement assetElement = rootElement.addElement(\"asset\");\n\n\t\t\tassetElement.addAttribute(\"path\", commentsPath);\n\t\t\tassetElement.addAttribute(\"class-name\", className);\n\t\t\tassetElement.addAttribute(\"class-pk\", classPK);\n\n\t\t\tList<MBMessage> mbMessages = entry.getValue();\n\n\t\t\tfor (MBMessage mbMessage : mbMessages) {\n\t\t\t\tString commentPath = getCommentPath(\n\t\t\t\t\tportletDataContext, className, classPK, mbMessage);\n\n\t\t\t\tif (portletDataContext.isPathNotProcessed(commentPath)) {\n\t\t\t\t\tportletDataContext.addZipEntry(commentPath, mbMessage);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tString rootPath = ExportImportPathUtil.getRootPath(portletDataContext);\n\n\t\tportletDataContext.addZipEntry(\n\t\t\trootPath.concat(\"/comments.xml\"), document.formattedString());\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportLocks(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"locks\");\n\n\t\tMap<String, Lock> locksMap = portletDataContext.getLocks();\n\n\t\tfor (Map.Entry<String, Lock> entry : locksMap.entrySet()) {\n\t\t\tLock lock = entry.getValue();\n\n\t\t\tString entryKey = entry.getKey();\n\n\t\t\tint pos = entryKey.indexOf(CharPool.POUND);\n\n\t\t\tString className = entryKey.substring(0, pos);\n\t\t\tString key = entryKey.substring(pos + 1);\n\n\t\t\tString path = getLockPath(portletDataContext, className, key, lock);\n\n\t\t\tElement assetElement = rootElement.addElement(\"asset\");\n\n\t\t\tassetElement.addAttribute(\"path\", path);\n\t\t\tassetElement.addAttribute(\"class-name\", className);\n\t\t\tassetElement.addAttribute(\"key\", key);\n\n\t\t\tif (portletDataContext.isPathNotProcessed(path)) {\n\t\t\t\tportletDataContext.addZipEntry(path, lock);\n\t\t\t}\n\t\t}\n\n\t\tportletDataContext.addZipEntry(\n\t\t\tExportImportPathUtil.getRootPath(portletDataContext) + \"/locks.xml\",\n\t\t\tdocument.formattedString());\n\t}","id":4779,"modified_method":"protected void exportLocks(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"locks\");\n\n\t\tMap<String, Lock> locksMap = portletDataContext.getLocks();\n\n\t\tfor (Map.Entry<String, Lock> entry : locksMap.entrySet()) {\n\t\t\tLock lock = entry.getValue();\n\n\t\t\tString entryKey = entry.getKey();\n\n\t\t\tint pos = entryKey.indexOf(CharPool.POUND);\n\n\t\t\tString className = entryKey.substring(0, pos);\n\t\t\tString key = entryKey.substring(pos + 1);\n\n\t\t\tString path = getLockPath(portletDataContext, className, key, lock);\n\n\t\t\tElement assetElement = rootElement.addElement(\"asset\");\n\n\t\t\tassetElement.addAttribute(\"path\", path);\n\t\t\tassetElement.addAttribute(\"class-name\", className);\n\t\t\tassetElement.addAttribute(\"key\", key);\n\n\t\t\tif (portletDataContext.isPathNotProcessed(path)) {\n\t\t\t\tportletDataContext.addZipEntry(path, lock);\n\t\t\t}\n\t\t}\n\n\t\tString rootPath = ExportImportPathUtil.getRootPath(portletDataContext);\n\n\t\tportletDataContext.addZipEntry(\n\t\t\trootPath.concat(\"/locks.xml\"), document.formattedString());\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportExpandoTables(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"expando-tables\");\n\n\t\tMap<String, List<ExpandoColumn>> expandoColumnsMap =\n\t\t\tportletDataContext.getExpandoColumns();\n\n\t\tfor (Map.Entry<String, List<ExpandoColumn>> entry :\n\t\t\t\texpandoColumnsMap.entrySet()) {\n\n\t\t\tString className = entry.getKey();\n\n\t\t\tElement expandoTableElement = rootElement.addElement(\n\t\t\t\t\"expando-table\");\n\n\t\t\texpandoTableElement.addAttribute(\"class-name\", className);\n\n\t\t\tList<ExpandoColumn> expandoColumns = entry.getValue();\n\n\t\t\tfor (ExpandoColumn expandoColumn : expandoColumns) {\n\t\t\t\tElement expandoColumnElement = expandoTableElement.addElement(\n\t\t\t\t\t\"expando-column\");\n\n\t\t\t\texpandoColumnElement.addAttribute(\n\t\t\t\t\t\"column-id\", String.valueOf(expandoColumn.getColumnId()));\n\t\t\t\texpandoColumnElement.addAttribute(\n\t\t\t\t\t\"name\", expandoColumn.getName());\n\t\t\t\texpandoColumnElement.addAttribute(\n\t\t\t\t\t\"type\", String.valueOf(expandoColumn.getType()));\n\n\t\t\t\tDocUtil.add(\n\t\t\t\t\texpandoColumnElement, \"default-data\",\n\t\t\t\t\texpandoColumn.getDefaultData());\n\n\t\t\t\tElement typeSettingsElement = expandoColumnElement.addElement(\n\t\t\t\t\t\"type-settings\");\n\n\t\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\t\texpandoColumn.getTypeSettingsProperties();\n\n\t\t\t\ttypeSettingsElement.addCDATA(typeSettingsProperties.toString());\n\t\t\t}\n\t\t}\n\n\t\tportletDataContext.addZipEntry(\n\t\t\tExportImportPathUtil.getRootPath(portletDataContext) +\n\t\t\t\t\"/expando-tables.xml\",\n\t\t\tdocument.formattedString());\n\t}","id":4780,"modified_method":"protected void exportExpandoTables(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"expando-tables\");\n\n\t\tMap<String, List<ExpandoColumn>> expandoColumnsMap =\n\t\t\tportletDataContext.getExpandoColumns();\n\n\t\tfor (Map.Entry<String, List<ExpandoColumn>> entry :\n\t\t\t\texpandoColumnsMap.entrySet()) {\n\n\t\t\tString className = entry.getKey();\n\n\t\t\tElement expandoTableElement = rootElement.addElement(\n\t\t\t\t\"expando-table\");\n\n\t\t\texpandoTableElement.addAttribute(\"class-name\", className);\n\n\t\t\tList<ExpandoColumn> expandoColumns = entry.getValue();\n\n\t\t\tfor (ExpandoColumn expandoColumn : expandoColumns) {\n\t\t\t\tElement expandoColumnElement = expandoTableElement.addElement(\n\t\t\t\t\t\"expando-column\");\n\n\t\t\t\texpandoColumnElement.addAttribute(\n\t\t\t\t\t\"column-id\", String.valueOf(expandoColumn.getColumnId()));\n\t\t\t\texpandoColumnElement.addAttribute(\n\t\t\t\t\t\"name\", expandoColumn.getName());\n\t\t\t\texpandoColumnElement.addAttribute(\n\t\t\t\t\t\"type\", String.valueOf(expandoColumn.getType()));\n\n\t\t\t\tDocUtil.add(\n\t\t\t\t\texpandoColumnElement, \"default-data\",\n\t\t\t\t\texpandoColumn.getDefaultData());\n\n\t\t\t\tElement typeSettingsElement = expandoColumnElement.addElement(\n\t\t\t\t\t\"type-settings\");\n\n\t\t\t\tUnicodeProperties typeSettingsProperties =\n\t\t\t\t\texpandoColumn.getTypeSettingsProperties();\n\n\t\t\t\ttypeSettingsElement.addCDATA(typeSettingsProperties.toString());\n\t\t\t}\n\t\t}\n\n\t\tString rootPath = ExportImportPathUtil.getRootPath(portletDataContext);\n\n\t\tportletDataContext.addZipEntry(\n\t\t\trootPath.concat(\"/expando-tables.xml\"), document.formattedString());\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void readAssetTags(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tExportImportPathUtil.getSourceRootPath(portletDataContext) +\n\t\t\t\t\"/tags.xml\");\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> assetTagElements = rootElement.elements(\"tag\");\n\n\t\tfor (Element assetTagElement : assetTagElements) {\n\t\t\tString path = assetTagElement.attributeValue(\"path\");\n\n\t\t\tif (!portletDataContext.isPathNotProcessed(path)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tAssetTag assetTag =\n\t\t\t\t(AssetTag)portletDataContext.getZipEntryAsObject(path);\n\n\t\t\tMap<Long, Long> assetTagPKs =\n\t\t\t\t(Map<Long, Long>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\t\tAssetTag.class);\n\n\t\t\timportAssetTag(\n\t\t\t\tportletDataContext, assetTagPKs, assetTagElement, assetTag);\n\t\t}\n\n\t\tList<Element> assetElements = rootElement.elements(\"asset\");\n\n\t\tfor (Element assetElement : assetElements) {\n\t\t\tString className = GetterUtil.getString(\n\t\t\t\tassetElement.attributeValue(\"class-name\"));\n\t\t\tlong classPK = GetterUtil.getLong(\n\t\t\t\tassetElement.attributeValue(\"class-pk\"));\n\t\t\tString assetTagNames = GetterUtil.getString(\n\t\t\t\tassetElement.attributeValue(\"tags\"));\n\n\t\t\tportletDataContext.addAssetTags(\n\t\t\t\tclassName, classPK, StringUtil.split(assetTagNames));\n\t\t}\n\t}","id":4781,"modified_method":"protected void readAssetTags(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString sourceRootPath = ExportImportPathUtil.getSourceRootPath(\n\t\t\tportletDataContext);\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tsourceRootPath.concat(\"/tags.xml\"));\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> assetTagElements = rootElement.elements(\"tag\");\n\n\t\tfor (Element assetTagElement : assetTagElements) {\n\t\t\tString path = assetTagElement.attributeValue(\"path\");\n\n\t\t\tif (!portletDataContext.isPathNotProcessed(path)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tAssetTag assetTag =\n\t\t\t\t(AssetTag)portletDataContext.getZipEntryAsObject(path);\n\n\t\t\tMap<Long, Long> assetTagPKs =\n\t\t\t\t(Map<Long, Long>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\t\tAssetTag.class);\n\n\t\t\timportAssetTag(\n\t\t\t\tportletDataContext, assetTagPKs, assetTagElement, assetTag);\n\t\t}\n\n\t\tList<Element> assetElements = rootElement.elements(\"asset\");\n\n\t\tfor (Element assetElement : assetElements) {\n\t\t\tString className = GetterUtil.getString(\n\t\t\t\tassetElement.attributeValue(\"class-name\"));\n\t\t\tlong classPK = GetterUtil.getLong(\n\t\t\t\tassetElement.attributeValue(\"class-pk\"));\n\t\t\tString assetTagNames = GetterUtil.getString(\n\t\t\t\tassetElement.attributeValue(\"tags\"));\n\n\t\t\tportletDataContext.addAssetTags(\n\t\t\t\tclassName, classPK, StringUtil.split(assetTagNames));\n\t\t}\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void readComments(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tExportImportPathUtil.getSourceRootPath(portletDataContext) +\n\t\t\t\t\"/comments.xml\");\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> assetElements = rootElement.elements(\"asset\");\n\n\t\tfor (Element assetElement : assetElements) {\n\t\t\tString path = assetElement.attributeValue(\"path\");\n\t\t\tString className = assetElement.attributeValue(\"class-name\");\n\t\t\tlong classPK = GetterUtil.getLong(\n\t\t\t\tassetElement.attributeValue(\"class-pk\"));\n\n\t\t\tList<String> zipFolderEntries =\n\t\t\t\tportletDataContext.getZipFolderEntries(path);\n\n\t\t\tList<MBMessage> mbMessages = new ArrayList<MBMessage>();\n\n\t\t\tfor (String zipFolderEntry : zipFolderEntries) {\n\t\t\t\tMBMessage mbMessage =\n\t\t\t\t\t(MBMessage)portletDataContext.getZipEntryAsObject(\n\t\t\t\t\t\tzipFolderEntry);\n\n\t\t\t\tif (mbMessage != null) {\n\t\t\t\t\tmbMessages.add(mbMessage);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tportletDataContext.addComments(className, classPK, mbMessages);\n\t\t}\n\t}","id":4782,"modified_method":"protected void readComments(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString sourceRootPath = ExportImportPathUtil.getSourceRootPath(\n\t\t\tportletDataContext);\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tsourceRootPath.concat(\"/comments.xml\"));\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> assetElements = rootElement.elements(\"asset\");\n\n\t\tfor (Element assetElement : assetElements) {\n\t\t\tString path = assetElement.attributeValue(\"path\");\n\t\t\tString className = assetElement.attributeValue(\"class-name\");\n\t\t\tlong classPK = GetterUtil.getLong(\n\t\t\t\tassetElement.attributeValue(\"class-pk\"));\n\n\t\t\tList<String> zipFolderEntries =\n\t\t\t\tportletDataContext.getZipFolderEntries(path);\n\n\t\t\tList<MBMessage> mbMessages = new ArrayList<MBMessage>();\n\n\t\t\tfor (String zipFolderEntry : zipFolderEntries) {\n\t\t\t\tMBMessage mbMessage =\n\t\t\t\t\t(MBMessage)portletDataContext.getZipEntryAsObject(\n\t\t\t\t\t\tzipFolderEntry);\n\n\t\t\t\tif (mbMessage != null) {\n\t\t\t\t\tmbMessages.add(mbMessage);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tportletDataContext.addComments(className, classPK, mbMessages);\n\t\t}\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void readAssetLinks(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tExportImportPathUtil.getSourceRootPath(portletDataContext) +\n\t\t\t\t\"/links.xml\");\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> assetLinkElements = rootElement.elements(\"asset-link\");\n\n\t\tfor (Element assetLinkElement : assetLinkElements) {\n\t\t\tString sourceUuid = GetterUtil.getString(\n\t\t\t\tassetLinkElement.attributeValue(\"source-uuid\"));\n\t\t\tString[] assetEntryUuidArray = StringUtil.split(\n\t\t\t\tGetterUtil.getString(\n\t\t\t\t\tassetLinkElement.attributeValue(\"target-uuids\")));\n\t\t\tint assetLinkType = GetterUtil.getInteger(\n\t\t\t\tassetLinkElement.attributeValue(\"type\"));\n\n\t\t\tList<Long> assetEntryIds = new ArrayList<Long>();\n\n\t\t\tfor (String assetEntryUuid : assetEntryUuidArray) {\n\t\t\t\ttry {\n\t\t\t\t\tAssetEntry assetEntry = AssetEntryLocalServiceUtil.getEntry(\n\t\t\t\t\t\tportletDataContext.getScopeGroupId(), assetEntryUuid);\n\n\t\t\t\t\tassetEntryIds.add(assetEntry.getEntryId());\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchEntryException nsee) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (assetEntryIds.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlong[] assetEntryIdsArray = ArrayUtil.toArray(\n\t\t\t\tassetEntryIds.toArray(new Long[assetEntryIds.size()]));\n\n\t\t\ttry {\n\t\t\t\tAssetEntry assetEntry = AssetEntryLocalServiceUtil.getEntry(\n\t\t\t\t\tportletDataContext.getScopeGroupId(), sourceUuid);\n\n\t\t\t\tAssetLinkLocalServiceUtil.updateLinks(\n\t\t\t\t\tassetEntry.getUserId(), assetEntry.getEntryId(),\n\t\t\t\t\tassetEntryIdsArray, assetLinkType);\n\t\t\t}\n\t\t\tcatch (NoSuchEntryException nsee) {\n\t\t\t}\n\t\t}\n\t}","id":4783,"modified_method":"protected void readAssetLinks(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString sourceRootPath = ExportImportPathUtil.getSourceRootPath(\n\t\t\tportletDataContext);\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tsourceRootPath.concat(\"/links.xml\"));\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> assetLinkElements = rootElement.elements(\"asset-link\");\n\n\t\tfor (Element assetLinkElement : assetLinkElements) {\n\t\t\tString sourceUuid = GetterUtil.getString(\n\t\t\t\tassetLinkElement.attributeValue(\"source-uuid\"));\n\t\t\tString[] assetEntryUuidArray = StringUtil.split(\n\t\t\t\tGetterUtil.getString(\n\t\t\t\t\tassetLinkElement.attributeValue(\"target-uuids\")));\n\t\t\tint assetLinkType = GetterUtil.getInteger(\n\t\t\t\tassetLinkElement.attributeValue(\"type\"));\n\n\t\t\tList<Long> assetEntryIds = new ArrayList<Long>();\n\n\t\t\tfor (String assetEntryUuid : assetEntryUuidArray) {\n\t\t\t\ttry {\n\t\t\t\t\tAssetEntry assetEntry = AssetEntryLocalServiceUtil.getEntry(\n\t\t\t\t\t\tportletDataContext.getScopeGroupId(), assetEntryUuid);\n\n\t\t\t\t\tassetEntryIds.add(assetEntry.getEntryId());\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchEntryException nsee) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (assetEntryIds.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlong[] assetEntryIdsArray = ArrayUtil.toArray(\n\t\t\t\tassetEntryIds.toArray(new Long[assetEntryIds.size()]));\n\n\t\t\ttry {\n\t\t\t\tAssetEntry assetEntry = AssetEntryLocalServiceUtil.getEntry(\n\t\t\t\t\tportletDataContext.getScopeGroupId(), sourceUuid);\n\n\t\t\t\tAssetLinkLocalServiceUtil.updateLinks(\n\t\t\t\t\tassetEntry.getUserId(), assetEntry.getEntryId(),\n\t\t\t\t\tassetEntryIdsArray, assetLinkType);\n\t\t\t}\n\t\t\tcatch (NoSuchEntryException nsee) {\n\t\t\t}\n\t\t}\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void readExpandoTables(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tExportImportPathUtil.getSourceRootPath(portletDataContext) +\n\t\t\t\t\"/expando-tables.xml\");\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> expandoTableElements = rootElement.elements(\n\t\t\t\"expando-table\");\n\n\t\tfor (Element expandoTableElement : expandoTableElements) {\n\t\t\tString className = expandoTableElement.attributeValue(\"class-name\");\n\n\t\t\tExpandoTable expandoTable = null;\n\n\t\t\ttry {\n\t\t\t\texpandoTable = ExpandoTableLocalServiceUtil.getDefaultTable(\n\t\t\t\t\tportletDataContext.getCompanyId(), className);\n\t\t\t}\n\t\t\tcatch (NoSuchTableException nste) {\n\t\t\t\texpandoTable = ExpandoTableLocalServiceUtil.addDefaultTable(\n\t\t\t\t\tportletDataContext.getCompanyId(), className);\n\t\t\t}\n\n\t\t\tList<Element> expandoColumnElements = expandoTableElement.elements(\n\t\t\t\t\"expando-column\");\n\n\t\t\tfor (Element expandoColumnElement : expandoColumnElements) {\n\t\t\t\tlong columnId = GetterUtil.getLong(\n\t\t\t\t\texpandoColumnElement.attributeValue(\"column-id\"));\n\t\t\t\tString name = expandoColumnElement.attributeValue(\"name\");\n\t\t\t\tint type = GetterUtil.getInteger(\n\t\t\t\t\texpandoColumnElement.attributeValue(\"type\"));\n\t\t\t\tString defaultData = expandoColumnElement.elementText(\n\t\t\t\t\t\"default-data\");\n\t\t\t\tString typeSettings = expandoColumnElement.elementText(\n\t\t\t\t\t\"type-settings\");\n\n\t\t\t\tSerializable defaultDataObject =\n\t\t\t\t\tExpandoConverterUtil.getAttributeFromString(\n\t\t\t\t\t\ttype, defaultData);\n\n\t\t\t\tExpandoColumn expandoColumn =\n\t\t\t\t\tExpandoColumnLocalServiceUtil.getColumn(\n\t\t\t\t\t\texpandoTable.getTableId(), name);\n\n\t\t\t\tif (expandoColumn != null) {\n\t\t\t\t\tExpandoColumnLocalServiceUtil.updateColumn(\n\t\t\t\t\t\texpandoColumn.getColumnId(), name, type,\n\t\t\t\t\t\tdefaultDataObject);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texpandoColumn = ExpandoColumnLocalServiceUtil.addColumn(\n\t\t\t\t\t\texpandoTable.getTableId(), name, type,\n\t\t\t\t\t\tdefaultDataObject);\n\t\t\t\t}\n\n\t\t\t\tExpandoColumnLocalServiceUtil.updateTypeSettings(\n\t\t\t\t\texpandoColumn.getColumnId(), typeSettings);\n\n\t\t\t\tportletDataContext.importPermissions(\n\t\t\t\t\tExpandoColumn.class, columnId, expandoColumn.getColumnId());\n\t\t\t}\n\t\t}\n\t}","id":4784,"modified_method":"protected void readExpandoTables(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString sourceRootPath = ExportImportPathUtil.getSourceRootPath(\n\t\t\tportletDataContext);\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tsourceRootPath.concat(\"/expando-tables.xml\"));\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> expandoTableElements = rootElement.elements(\n\t\t\t\"expando-table\");\n\n\t\tfor (Element expandoTableElement : expandoTableElements) {\n\t\t\tString className = expandoTableElement.attributeValue(\"class-name\");\n\n\t\t\tExpandoTable expandoTable = null;\n\n\t\t\ttry {\n\t\t\t\texpandoTable = ExpandoTableLocalServiceUtil.getDefaultTable(\n\t\t\t\t\tportletDataContext.getCompanyId(), className);\n\t\t\t}\n\t\t\tcatch (NoSuchTableException nste) {\n\t\t\t\texpandoTable = ExpandoTableLocalServiceUtil.addDefaultTable(\n\t\t\t\t\tportletDataContext.getCompanyId(), className);\n\t\t\t}\n\n\t\t\tList<Element> expandoColumnElements = expandoTableElement.elements(\n\t\t\t\t\"expando-column\");\n\n\t\t\tfor (Element expandoColumnElement : expandoColumnElements) {\n\t\t\t\tlong columnId = GetterUtil.getLong(\n\t\t\t\t\texpandoColumnElement.attributeValue(\"column-id\"));\n\t\t\t\tString name = expandoColumnElement.attributeValue(\"name\");\n\t\t\t\tint type = GetterUtil.getInteger(\n\t\t\t\t\texpandoColumnElement.attributeValue(\"type\"));\n\t\t\t\tString defaultData = expandoColumnElement.elementText(\n\t\t\t\t\t\"default-data\");\n\t\t\t\tString typeSettings = expandoColumnElement.elementText(\n\t\t\t\t\t\"type-settings\");\n\n\t\t\t\tSerializable defaultDataObject =\n\t\t\t\t\tExpandoConverterUtil.getAttributeFromString(\n\t\t\t\t\t\ttype, defaultData);\n\n\t\t\t\tExpandoColumn expandoColumn =\n\t\t\t\t\tExpandoColumnLocalServiceUtil.getColumn(\n\t\t\t\t\t\texpandoTable.getTableId(), name);\n\n\t\t\t\tif (expandoColumn != null) {\n\t\t\t\t\tExpandoColumnLocalServiceUtil.updateColumn(\n\t\t\t\t\t\texpandoColumn.getColumnId(), name, type,\n\t\t\t\t\t\tdefaultDataObject);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texpandoColumn = ExpandoColumnLocalServiceUtil.addColumn(\n\t\t\t\t\t\texpandoTable.getTableId(), name, type,\n\t\t\t\t\t\tdefaultDataObject);\n\t\t\t\t}\n\n\t\t\t\tExpandoColumnLocalServiceUtil.updateTypeSettings(\n\t\t\t\t\texpandoColumn.getColumnId(), typeSettings);\n\n\t\t\t\tportletDataContext.importPermissions(\n\t\t\t\t\tExpandoColumn.class, columnId, expandoColumn.getColumnId());\n\t\t\t}\n\t\t}\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void readAssetCategories(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tExportImportPathUtil.getSourceRootPath(portletDataContext) +\n\t\t\t\t\"/categories-hierarchy.xml\");\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tElement assetVocabulariesElement = rootElement.element(\"vocabularies\");\n\n\t\tList<Element> assetVocabularyElements =\n\t\t\tassetVocabulariesElement.elements(\"vocabulary\");\n\n\t\tMap<Long, Long> assetVocabularyPKs =\n\t\t\t(Map<Long, Long>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tAssetVocabulary.class);\n\n\t\tfor (Element assetVocabularyElement : assetVocabularyElements) {\n\t\t\tString path = assetVocabularyElement.attributeValue(\"path\");\n\n\t\t\tif (!portletDataContext.isPathNotProcessed(path)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tAssetVocabulary assetVocabulary =\n\t\t\t\t(AssetVocabulary)portletDataContext.getZipEntryAsObject(path);\n\n\t\t\timportAssetVocabulary(\n\t\t\t\tportletDataContext, assetVocabularyPKs, assetVocabularyElement,\n\t\t\t\tassetVocabulary);\n\t\t}\n\n\t\tElement assetCategoriesElement = rootElement.element(\"categories\");\n\n\t\tList<Element> assetCategoryElements = assetCategoriesElement.elements(\n\t\t\t\"category\");\n\n\t\tMap<Long, Long> assetCategoryPKs =\n\t\t\t(Map<Long, Long>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tAssetCategory.class);\n\n\t\tMap<String, String> assetCategoryUuids =\n\t\t\t(Map<String, String>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tAssetCategory.class.getName() + \"uuid\");\n\n\t\tfor (Element assetCategoryElement : assetCategoryElements) {\n\t\t\tString path = assetCategoryElement.attributeValue(\"path\");\n\n\t\t\tif (!portletDataContext.isPathNotProcessed(path)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tAssetCategory assetCategory =\n\t\t\t\t(AssetCategory)portletDataContext.getZipEntryAsObject(path);\n\n\t\t\timportAssetCategory(\n\t\t\t\tportletDataContext, assetVocabularyPKs, assetCategoryPKs,\n\t\t\t\tassetCategoryUuids, assetCategoryElement, assetCategory);\n\t\t}\n\n\t\tElement assetsElement = rootElement.element(\"assets\");\n\n\t\tList<Element> assetElements = assetsElement.elements(\"asset\");\n\n\t\tfor (Element assetElement : assetElements) {\n\t\t\tString className = GetterUtil.getString(\n\t\t\t\tassetElement.attributeValue(\"class-name\"));\n\t\t\tlong classPK = GetterUtil.getLong(\n\t\t\t\tassetElement.attributeValue(\"class-pk\"));\n\t\t\tString[] assetCategoryUuidArray = StringUtil.split(\n\t\t\t\tGetterUtil.getString(\n\t\t\t\t\tassetElement.attributeValue(\"category-uuids\")));\n\n\t\t\tlong[] assetCategoryIds = new long[0];\n\n\t\t\tfor (String assetCategoryUuid : assetCategoryUuidArray) {\n\t\t\t\tassetCategoryUuid = MapUtil.getString(\n\t\t\t\t\tassetCategoryUuids, assetCategoryUuid, assetCategoryUuid);\n\n\t\t\t\tAssetCategory assetCategory = AssetCategoryUtil.fetchByUUID_G(\n\t\t\t\t\tassetCategoryUuid, portletDataContext.getScopeGroupId());\n\n\t\t\t\tif (assetCategory == null) {\n\t\t\t\t\tGroup companyGroup = GroupLocalServiceUtil.getCompanyGroup(\n\t\t\t\t\t\tportletDataContext.getCompanyId());\n\n\t\t\t\t\tassetCategory = AssetCategoryUtil.fetchByUUID_G(\n\t\t\t\t\t\tassetCategoryUuid, companyGroup.getGroupId());\n\t\t\t\t}\n\n\t\t\t\tif (assetCategory != null) {\n\t\t\t\t\tassetCategoryIds = ArrayUtil.append(\n\t\t\t\t\t\tassetCategoryIds, assetCategory.getCategoryId());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tportletDataContext.addAssetCategories(\n\t\t\t\tclassName, classPK, assetCategoryIds);\n\t\t}\n\t}","id":4785,"modified_method":"protected void readAssetCategories(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString sourceRootPath = ExportImportPathUtil.getSourceRootPath(\n\t\t\tportletDataContext);\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tsourceRootPath.concat(\"/categories-hierarchy.xml\"));\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tElement assetVocabulariesElement = rootElement.element(\"vocabularies\");\n\n\t\tList<Element> assetVocabularyElements =\n\t\t\tassetVocabulariesElement.elements(\"vocabulary\");\n\n\t\tMap<Long, Long> assetVocabularyPKs =\n\t\t\t(Map<Long, Long>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tAssetVocabulary.class);\n\n\t\tfor (Element assetVocabularyElement : assetVocabularyElements) {\n\t\t\tString path = assetVocabularyElement.attributeValue(\"path\");\n\n\t\t\tif (!portletDataContext.isPathNotProcessed(path)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tAssetVocabulary assetVocabulary =\n\t\t\t\t(AssetVocabulary)portletDataContext.getZipEntryAsObject(path);\n\n\t\t\timportAssetVocabulary(\n\t\t\t\tportletDataContext, assetVocabularyPKs, assetVocabularyElement,\n\t\t\t\tassetVocabulary);\n\t\t}\n\n\t\tElement assetCategoriesElement = rootElement.element(\"categories\");\n\n\t\tList<Element> assetCategoryElements = assetCategoriesElement.elements(\n\t\t\t\"category\");\n\n\t\tMap<Long, Long> assetCategoryPKs =\n\t\t\t(Map<Long, Long>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tAssetCategory.class);\n\n\t\tMap<String, String> assetCategoryUuids =\n\t\t\t(Map<String, String>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tAssetCategory.class.getName() + \"uuid\");\n\n\t\tfor (Element assetCategoryElement : assetCategoryElements) {\n\t\t\tString path = assetCategoryElement.attributeValue(\"path\");\n\n\t\t\tif (!portletDataContext.isPathNotProcessed(path)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tAssetCategory assetCategory =\n\t\t\t\t(AssetCategory)portletDataContext.getZipEntryAsObject(path);\n\n\t\t\timportAssetCategory(\n\t\t\t\tportletDataContext, assetVocabularyPKs, assetCategoryPKs,\n\t\t\t\tassetCategoryUuids, assetCategoryElement, assetCategory);\n\t\t}\n\n\t\tElement assetsElement = rootElement.element(\"assets\");\n\n\t\tList<Element> assetElements = assetsElement.elements(\"asset\");\n\n\t\tfor (Element assetElement : assetElements) {\n\t\t\tString className = GetterUtil.getString(\n\t\t\t\tassetElement.attributeValue(\"class-name\"));\n\t\t\tlong classPK = GetterUtil.getLong(\n\t\t\t\tassetElement.attributeValue(\"class-pk\"));\n\t\t\tString[] assetCategoryUuidArray = StringUtil.split(\n\t\t\t\tGetterUtil.getString(\n\t\t\t\t\tassetElement.attributeValue(\"category-uuids\")));\n\n\t\t\tlong[] assetCategoryIds = new long[0];\n\n\t\t\tfor (String assetCategoryUuid : assetCategoryUuidArray) {\n\t\t\t\tassetCategoryUuid = MapUtil.getString(\n\t\t\t\t\tassetCategoryUuids, assetCategoryUuid, assetCategoryUuid);\n\n\t\t\t\tAssetCategory assetCategory = AssetCategoryUtil.fetchByUUID_G(\n\t\t\t\t\tassetCategoryUuid, portletDataContext.getScopeGroupId());\n\n\t\t\t\tif (assetCategory == null) {\n\t\t\t\t\tGroup companyGroup = GroupLocalServiceUtil.getCompanyGroup(\n\t\t\t\t\t\tportletDataContext.getCompanyId());\n\n\t\t\t\t\tassetCategory = AssetCategoryUtil.fetchByUUID_G(\n\t\t\t\t\t\tassetCategoryUuid, companyGroup.getGroupId());\n\t\t\t\t}\n\n\t\t\t\tif (assetCategory != null) {\n\t\t\t\t\tassetCategoryIds = ArrayUtil.append(\n\t\t\t\t\t\tassetCategoryIds, assetCategory.getCategoryId());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tportletDataContext.addAssetCategories(\n\t\t\t\tclassName, classPK, assetCategoryIds);\n\t\t}\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void readRatingsEntries(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tExportImportPathUtil.getSourceRootPath(portletDataContext) +\n\t\t\t\t\"/ratings.xml\");\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> assetElements = rootElement.elements(\"asset\");\n\n\t\tfor (Element assetElement : assetElements) {\n\t\t\tString path = assetElement.attributeValue(\"path\");\n\t\t\tString className = assetElement.attributeValue(\"class-name\");\n\t\t\tlong classPK = GetterUtil.getLong(\n\t\t\t\tassetElement.attributeValue(\"class-pk\"));\n\n\t\t\tList<String> zipFolderEntries =\n\t\t\t\tportletDataContext.getZipFolderEntries(path);\n\n\t\t\tList<RatingsEntry> ratingsEntries = new ArrayList<RatingsEntry>();\n\n\t\t\tfor (String zipFolderEntry : zipFolderEntries) {\n\t\t\t\tRatingsEntry ratingsEntry =\n\t\t\t\t\t(RatingsEntry)portletDataContext.getZipEntryAsObject(\n\t\t\t\t\t\tzipFolderEntry);\n\n\t\t\t\tif (ratingsEntry != null) {\n\t\t\t\t\tratingsEntries.add(ratingsEntry);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tportletDataContext.addRatingsEntries(\n\t\t\t\tclassName, classPK, ratingsEntries);\n\t\t}\n\t}","id":4786,"modified_method":"protected void readRatingsEntries(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString sourceRootPath = ExportImportPathUtil.getSourceRootPath(\n\t\t\tportletDataContext);\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tsourceRootPath.concat(\"/ratings.xml\"));\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> assetElements = rootElement.elements(\"asset\");\n\n\t\tfor (Element assetElement : assetElements) {\n\t\t\tString path = assetElement.attributeValue(\"path\");\n\t\t\tString className = assetElement.attributeValue(\"class-name\");\n\t\t\tlong classPK = GetterUtil.getLong(\n\t\t\t\tassetElement.attributeValue(\"class-pk\"));\n\n\t\t\tList<String> zipFolderEntries =\n\t\t\t\tportletDataContext.getZipFolderEntries(path);\n\n\t\t\tList<RatingsEntry> ratingsEntries = new ArrayList<RatingsEntry>();\n\n\t\t\tfor (String zipFolderEntry : zipFolderEntries) {\n\t\t\t\tRatingsEntry ratingsEntry =\n\t\t\t\t\t(RatingsEntry)portletDataContext.getZipEntryAsObject(\n\t\t\t\t\t\tzipFolderEntry);\n\n\t\t\t\tif (ratingsEntry != null) {\n\t\t\t\t\tratingsEntries.add(ratingsEntry);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tportletDataContext.addRatingsEntries(\n\t\t\t\tclassName, classPK, ratingsEntries);\n\t\t}\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void readLocks(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tExportImportPathUtil.getSourceRootPath(portletDataContext) +\n\t\t\t\t\"/locks.xml\");\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> assetElements = rootElement.elements(\"asset\");\n\n\t\tfor (Element assetElement : assetElements) {\n\t\t\tString path = assetElement.attributeValue(\"path\");\n\t\t\tString className = assetElement.attributeValue(\"class-name\");\n\t\t\tString key = assetElement.attributeValue(\"key\");\n\n\t\t\tLock lock = (Lock)portletDataContext.getZipEntryAsObject(path);\n\n\t\t\tif (lock != null) {\n\t\t\t\tportletDataContext.addLocks(className, key, lock);\n\t\t\t}\n\t\t}\n\t}","id":4787,"modified_method":"protected void readLocks(PortletDataContext portletDataContext)\n\t\tthrows Exception {\n\n\t\tString sourceRootPath = ExportImportPathUtil.getSourceRootPath(\n\t\t\tportletDataContext);\n\n\t\tString xml = portletDataContext.getZipEntryAsString(\n\t\t\tsourceRootPath.concat(\"/locks.xml\"));\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(xml);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tList<Element> assetElements = rootElement.elements(\"asset\");\n\n\t\tfor (Element assetElement : assetElements) {\n\t\t\tString path = assetElement.attributeValue(\"path\");\n\t\t\tString className = assetElement.attributeValue(\"class-name\");\n\t\t\tString key = assetElement.attributeValue(\"key\");\n\n\t\t\tLock lock = (Lock)portletDataContext.getZipEntryAsObject(path);\n\n\t\t\tif (lock != null) {\n\t\t\t\tportletDataContext.addLocks(className, key, lock);\n\t\t\t}\n\t\t}\n\t}","commit_id":"16f209f3eef8d081eeea67c64a813358aa0a5693","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@SuppressWarnings( \"boxing\" )\n    private static SlaveContext readSlaveContext( ChannelBuffer buffer )\n    {\n        int machineId = buffer.readInt();\n        Map<String, Long> lastAppliedTransactions = new HashMap<String, Long>();\n        int txsSize = buffer.readByte();\n        for ( int i = 0; i < txsSize; i++ )\n        {\n            lastAppliedTransactions.put( readString( buffer ), buffer.readLong() );\n        }\n        return new SlaveContext( machineId, lastAppliedTransactions );\n    }","id":4788,"modified_method":"@SuppressWarnings( \"boxing\" )\n    private static SlaveContext readSlaveContext( ChannelBuffer buffer )\n    {\n        int machineId = buffer.readInt();\n        int txsSize = buffer.readByte();\n        Pair<String, Long>[] lastAppliedTransactions = new Pair[txsSize];\n        for ( int i = 0; i < txsSize; i++ )\n        {\n            lastAppliedTransactions[i] = new Pair<String, Long>(\n                    readString( buffer ), buffer.readLong() );\n        }\n        return new SlaveContext( machineId, lastAppliedTransactions );\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings( \"boxing\" )\n    protected static void writeSlaveContext( ChannelBuffer buffer, SlaveContext context )\n    {\n        buffer.writeInt( context.machineId() );\n        Map<String, Long> txs = context.lastAppliedTransactions();\n        buffer.writeByte( txs.size() );\n        for ( Map.Entry<String, Long> tx : txs.entrySet() )\n        {\n            writeString( buffer, tx.getKey() );\n            buffer.writeLong( tx.getValue() );\n        }\n    }","id":4789,"modified_method":"@SuppressWarnings( \"boxing\" )\n    protected static void writeSlaveContext( ChannelBuffer buffer, SlaveContext context )\n    {\n        buffer.writeInt( context.machineId() );\n        Pair<String, Long>[] txs = context.lastAppliedTransactions();\n        buffer.writeByte( txs.length );\n        for ( Pair<String, Long> tx : txs )\n        {\n            writeString( buffer, tx.first() );\n            buffer.writeLong( tx.other() );\n        }\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void startAsMaster()\n    {\n        this.broker = brokerFactory.create();\n        this.localGraph = new EmbeddedGraphDbImpl( storeDir, config, this,\n                new SlaveLockManagerFactory( broker, this ),\n                new SlaveIdGeneratorFactory( broker, this ),\n                new SlaveRelationshipTypeCreator( broker, this ),\n                new SlaveTxIdGeneratorFactory( broker, this ),\n                new SlaveTxRollbackHook( broker, this ),\n                new ZooKeeperLastCommittedTxIdSetter( broker ) );\n        instantiateIndexIfNeeded();\n    }","id":4790,"modified_method":"private void startAsMaster()\n    {\n        this.broker = brokerFactory.create();\n        this.masterServer = (MasterServer) broker.instantiateMasterServer( this );\n        this.localGraph = new EmbeddedGraphDbImpl( storeDir, config, this,\n                CommonFactories.defaultLockManagerFactory(),\n                new MasterIdGeneratorFactory(),\n                CommonFactories.defaultRelationshipTypeCreator(),\n                CommonFactories.defaultTxIdGeneratorFactory(),\n                CommonFactories.defaultTxRollbackHook(),\n                new ZooKeeperLastCommittedTxIdSetter( broker ) );\n        instantiateIndexIfNeeded();\n        instantiateAutoUpdatePullerIfConfigSaysSo();\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public SlaveContext getSlaveContext()\n    {\n        Config config = getConfig();\n        Map<String, Long> txs = new HashMap<String, Long>();\n        for ( XaDataSource dataSource :\n                config.getTxModule().getXaDataSourceManager().getAllRegisteredDataSources() )\n        {\n            txs.put( dataSource.getName(), dataSource.getLastCommittedTxId() );\n        }\n//        System.out.println( \"Sending slaveContext:\" + machineId + \", \" + txs );\n        return new SlaveContext( machineId, txs );\n    }","id":4791,"modified_method":"public SlaveContext getSlaveContext()\n    {\n        Collection<XaDataSource> dataSources = localDataSourceManager.getAllRegisteredDataSources();\n        @SuppressWarnings(\"unchecked\")\n        Pair<String, Long>[] txs = new Pair[dataSources.size()];\n        int i = 0;\n        for ( XaDataSource dataSource : dataSources )\n        {\n            txs[i++] = new Pair<String, Long>( \n                    dataSource.getName(), dataSource.getLastCommittedTxId() );\n        }\n        return new SlaveContext( machineId, txs );\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized void shutdown()\n    {\n        if ( this.updatePuller != null )\n        {\n            System.out.println( \"Shutting down update puller\" );\n            this.updatePuller.halt();\n            this.updatePuller = null;\n        }\n        if ( this.broker != null )\n        {\n            System.out.println( \"Shutting down broker\" );\n            this.broker.shutdown();\n            this.broker = null;\n        }\n        if ( this.masterServer != null )\n        {\n            System.out.println( \"Shutting down master server\" );\n            this.masterServer.shutdown();\n            this.masterServer = null;\n        }\n        if ( this.localIndex != null )\n        {\n            System.out.println( \"Shutting down local index\" );\n            this.localIndex.shutdown();\n            this.localIndex = null;\n        }\n        if ( this.localGraph != null )\n        {\n            System.out.println( \"Shutting down local graph\" );\n            this.localGraph.shutdown();\n            this.localGraph = null;\n        }\n    }","id":4792,"modified_method":"public synchronized void shutdown()\n    {\n        if ( this.updatePuller != null )\n        {\n            System.out.println( \"Shutting down update puller\" );\n            this.updatePuller.halt();\n            this.updatePuller = null;\n        }\n        if ( this.broker != null )\n        {\n            System.out.println( \"Shutting down broker\" );\n            this.broker.shutdown();\n            this.broker = null;\n        }\n        if ( this.masterServer != null )\n        {\n            System.out.println( \"Shutting down master server\" );\n            this.masterServer.shutdown();\n            this.masterServer = null;\n        }\n        if ( this.localIndex != null )\n        {\n            System.out.println( \"Shutting down local index\" );\n            this.localIndex.shutdown();\n            this.localIndex = null;\n        }\n        if ( this.localGraph != null )\n        {\n            System.out.println( \"Shutting down local graph\" );\n            this.localGraph.shutdown();\n            this.localGraph = null;\n            this.localDataSourceManager = null;\n        }\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected void reevaluateMyself()\n    {\n        if ( !reevaluatingMyself.compareAndSet( false, true ) )\n        {\n            return;\n        }\n                \n        try\n        {\n            broker.invalidateMaster();\n            boolean brokerSaysIAmMaster = brokerSaysIAmMaster();\n            boolean iAmCurrentlyMaster = masterServer != null;\n            if ( brokerSaysIAmMaster )\n            {\n                if ( !iAmCurrentlyMaster )\n                {\n                    shutdown();\n                }\n                if ( this.localGraph == null )\n                {\n                    startAsSlave();\n                }\n            }\n            else\n            {\n                if ( iAmCurrentlyMaster )\n                {\n                    shutdown();\n                }\n                if ( this.localGraph == null )\n                {\n                    startAsMaster();\n                }\n            }\n        }\n        finally\n        {\n            reevaluatingMyself.set( false );\n        }\n    }","id":4793,"modified_method":"protected void reevaluateMyself()\n    {\n        if ( !reevaluatingMyself.compareAndSet( false, true ) )\n        {\n            return;\n        }\n                \n        try\n        {\n            broker.invalidateMaster();\n            boolean brokerSaysIAmMaster = brokerSaysIAmMaster();\n            boolean iAmCurrentlyMaster = masterServer != null;\n            if ( brokerSaysIAmMaster )\n            {\n                if ( !iAmCurrentlyMaster )\n                {\n                    shutdown();\n                }\n                if ( this.localGraph == null )\n                {\n                    startAsMaster();\n                }\n            }\n            else\n            {\n                if ( iAmCurrentlyMaster )\n                {\n                    shutdown();\n                }\n                if ( this.localGraph == null )\n                {\n                    startAsSlave();\n                }\n            }\n            this.localDataSourceManager =\n                    localGraph.getConfig().getTxModule().getXaDataSourceManager();\n        }\n        finally\n        {\n            reevaluatingMyself.set( false );\n        }\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void startAsSlave()\n    {\n        this.broker = brokerFactory.create();\n        this.masterServer = (MasterServer) broker.instantiateMasterServer( this );\n        this.localGraph = new EmbeddedGraphDbImpl( storeDir, config, this,\n                CommonFactories.defaultLockManagerFactory(),\n                new MasterIdGeneratorFactory(),\n                CommonFactories.defaultRelationshipTypeCreator(),\n                CommonFactories.defaultTxIdGeneratorFactory(),\n                CommonFactories.defaultTxRollbackHook(),\n                new ZooKeeperLastCommittedTxIdSetter( broker ) );\n        instantiateIndexIfNeeded();\n        instantiateAutoUpdatePullerIfConfigSaysSo();\n    }","id":4794,"modified_method":"private void startAsSlave()\n    {\n        this.broker = brokerFactory.create();\n        this.localGraph = new EmbeddedGraphDbImpl( storeDir, config, this,\n                new SlaveLockManagerFactory( broker, this ),\n                new SlaveIdGeneratorFactory( broker, this ),\n                new SlaveRelationshipTypeCreator( broker, this ),\n                new SlaveTxIdGeneratorFactory( broker, this ),\n                new SlaveTxRollbackHook( broker, this ),\n                new ZooKeeperLastCommittedTxIdSetter( broker ) );\n        instantiateIndexIfNeeded();\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Config getConfig()\n    {\n        return localGraph.getConfig();\n    }","id":4795,"modified_method":"public Config getConfig()\n    {\n        return this.localGraph.getConfig();\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public <T> T receive( Response<T> response )\n    {\n        try\n        {\n            for ( Pair<String, TransactionStream> streams : response.transactions().getStreams() )\n            {\n                String resourceName = streams.first();\n                XaDataSource dataSource = localGraph.getConfig().getTxModule().getXaDataSourceManager()\n                        .getXaDataSource( resourceName );\n                for ( ReadableByteChannel channel : streams.other().getChannels() )\n                {\n                    dataSource.applyCommittedTransaction( channel );\n                    channel.close();\n                }\n            }\n            return response.response();\n        }\n        catch ( IOException e )\n        {\n            somethingIsWrong( e );\n            throw new RuntimeException( e );\n        }\n    }","id":4796,"modified_method":"public <T> T receive( Response<T> response )\n    {\n        try\n        {\n            for ( Pair<String, TransactionStream> streams : response.transactions().getStreams() )\n            {\n                String resourceName = streams.first();\n                XaDataSource dataSource = localDataSourceManager.getXaDataSource( resourceName );\n                for ( ReadableByteChannel channel : streams.other().getChannels() )\n                {\n                    dataSource.applyCommittedTransaction( channel );\n                    channel.close();\n                }\n            }\n            return response.response();\n        }\n        catch ( IOException e )\n        {\n            somethingIsWrong( e );\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public MasterImpl( GraphDatabaseService db )\n    {\n        graphDb = db;\n    }","id":4797,"modified_method":"public MasterImpl( GraphDatabaseService db )\n    {\n        this.graphDb = db;\n        this.graphDbConfig = getConfig( db );\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"void suspendThisAndResumeOther( Transaction otherTx )\n    {\n        try\n        {\n            TransactionManager txManager = getTxManager();\n            txManager.suspend();\n            if ( otherTx != null )\n            {\n                txManager.resume( otherTx );\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","id":4798,"modified_method":"void suspendThisAndResumeOther( Transaction otherTx )\n    {\n        try\n        {\n            TransactionManager txManager = graphDbConfig.getTxModule().getTxManager();\n            txManager.suspend();\n            if ( otherTx != null )\n            {\n                txManager.resume( otherTx );\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private <T extends PropertyContainer> Response<LockResult> acquireLock( SlaveContext context,\n            int eventIdentifier, LockGrabber lockGrabber, T... entities )\n    {\n        TxIdElement tx = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( T entity : entities )\n            {\n                lockGrabber.grab( lockManager, lockReleaser, entity );\n            }\n            return packResponse( context, new LockResult( LockStatus.OK_LOCKED ), ALL );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return packResponse( context, new LockResult( e.getMessage() ), ALL );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return packResponse( context, new LockResult( LockStatus.NOT_LOCKED ), ALL );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":4799,"modified_method":"private <T extends PropertyContainer> Response<LockResult> acquireLock( SlaveContext context,\n            int eventIdentifier, LockGrabber lockGrabber, T... entities )\n    {\n        TxIdElement tx = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = graphDbConfig.getLockManager();\n            LockReleaser lockReleaser = graphDbConfig.getLockReleaser();\n            for ( T entity : entities )\n            {\n                lockGrabber.grab( lockManager, lockReleaser, entity );\n            }\n            return packResponse( context, new LockResult( LockStatus.OK_LOCKED ), ALL );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return packResponse( context, new LockResult( e.getMessage() ), ALL );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return packResponse( context, new LockResult( LockStatus.NOT_LOCKED ), ALL );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Long> commitSingleResourceTransaction( SlaveContext context,\n            int eventIdentifier, String resource, TransactionStream transactionStream )\n    {\n        TxIdElement tx = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            XaDataSource dataSource = getConfig().getTxModule().getXaDataSourceManager()\n                    .getXaDataSource( resource );\n            // Always exactly one transaction (ReadableByteChannel)\n            final long txId = dataSource.applyPreparedTransaction(\n                    transactionStream.getChannels().iterator().next() );\n            Predicate<Long> notThisTx = new Predicate<Long>()\n            {\n                public boolean accept( Long item )\n                {\n                    return item != txId;\n                }\n            };\n            return packResponse( context, txId, notThisTx );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<Long>();\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n            // Since the master-transaction carries no actual state, just locks\n            // we would like to release the locks... and it's best done by just\n            // rolling back the tx\n//            rollbackThisAndResumeOther( otherTx );\n        }\n    }","id":4800,"modified_method":"public Response<Long> commitSingleResourceTransaction( SlaveContext context,\n            int eventIdentifier, String resource, TransactionStream transactionStream )\n    {\n        TxIdElement tx = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            XaDataSource dataSource = graphDbConfig.getTxModule()\n                    .getXaDataSourceManager().getXaDataSource( resource );\n            // Always exactly one transaction (ReadableByteChannel)\n            final long txId = dataSource.applyPreparedTransaction(\n                    transactionStream.getChannels().iterator().next() );\n            Predicate<Long> notThisTx = new Predicate<Long>()\n            {\n                public boolean accept( Long item )\n                {\n                    return item != txId;\n                }\n            };\n            return packResponse( context, txId, notThisTx );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<Long>();\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n            // Since the master-transaction carries no actual state, just locks\n            // we would like to release the locks... and it's best done by just\n            // rolling back the tx\n//            rollbackThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Transaction beginTx( TxIdElement txId )\n    {\n        try\n        {\n            TransactionManager txManager = getTxManager();\n            txManager.begin();\n            Transaction tx = txManager.getTransaction();\n            transactions.put( txId, tx );\n            return tx;\n        }\n        catch ( NotSupportedException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","id":4801,"modified_method":"private Transaction beginTx( TxIdElement txId )\n    {\n        try\n        {\n            TransactionManager txManager = graphDbConfig.getTxModule().getTxManager();\n            txManager.begin();\n            Transaction tx = txManager.getTransaction();\n            transactions.put( txId, tx );\n            return tx;\n        }\n        catch ( NotSupportedException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private <T> Response<T> packResponse( SlaveContext context, T response,\n            Predicate<Long> filter )\n    {\n        try\n        {\n            TransactionStreams streams = new TransactionStreams();\n            for ( Map.Entry<String, Long> slaveEntry :\n                    context.lastAppliedTransactions().entrySet() )\n            {\n                String resourceName = slaveEntry.getKey();\n                XaDataSource dataSource = getConfig().getTxModule()\n                        .getXaDataSourceManager().getXaDataSource( resourceName );\n                long masterLastTx = dataSource.getLastCommittedTxId();\n                long slaveLastTx = slaveEntry.getValue();\n                Collection<ReadableByteChannel> channels = new ArrayList<ReadableByteChannel>();\n                for ( long txId = slaveLastTx+1; txId <= masterLastTx; txId++ )\n                {\n                    if ( filter.accept( txId ) )\n                    {\n                        channels.add( dataSource.getCommittedTransaction( txId ) );\n                    }\n                }\n                streams.add( slaveEntry.getKey(), new TransactionStream( channels ) );\n            }\n            return new Response<T>( response, streams );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<T>();\n        }\n    }","id":4802,"modified_method":"private <T> Response<T> packResponse( SlaveContext context, T response,\n            Predicate<Long> filter )\n    {\n        try\n        {\n            TransactionStreams streams = new TransactionStreams();\n            for ( Pair<String, Long> txEntry : context.lastAppliedTransactions() )\n            {\n                String resourceName = txEntry.first();\n                XaDataSource dataSource = graphDbConfig.getTxModule().getXaDataSourceManager()\n                        .getXaDataSource( resourceName );\n                long masterLastTx = dataSource.getLastCommittedTxId();\n                Collection<ReadableByteChannel> channels = new ArrayList<ReadableByteChannel>();\n                for ( long txId = txEntry.other()+1; txId <= masterLastTx; txId++ )\n                {\n                    if ( filter.accept( txId ) )\n                    {\n                        channels.add( dataSource.getCommittedTransaction( txId ) );\n                    }\n                }\n                streams.add( resourceName, new TransactionStream( channels ) );\n            }\n            return new Response<T>( response, streams );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<T>();\n        }\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"void rollbackThisAndResumeOther( Transaction otherTx )\n    {\n        try\n        {\n            TransactionManager txManager = getTxManager();\n            txManager.rollback();\n            if ( otherTx != null )\n            {\n                txManager.resume( otherTx );\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","id":4803,"modified_method":"void rollbackThisAndResumeOther( Transaction otherTx )\n    {\n        try\n        {\n            TransactionManager txManager = graphDbConfig.getTxModule().getTxManager();\n            txManager.rollback();\n            if ( otherTx != null )\n            {\n                txManager.resume( otherTx );\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Void> rollbackTransaction( SlaveContext context, int eventIdentifier )\n    {\n        TxIdElement txId = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( txId );\n        try\n        {\n            Transaction tx = transactions.get( txId );\n            if ( tx == null )\n            {\n                throw new RuntimeException( \"Shouldn't happen\" );\n            }\n            TransactionManager txManager = getTxManager();\n            txManager.rollback();\n            return packResponse( context, null, ALL );\n        }\n        catch ( IllegalStateException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SecurityException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":4804,"modified_method":"public Response<Void> rollbackTransaction( SlaveContext context, int eventIdentifier )\n    {\n        TxIdElement txId = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( txId );\n        try\n        {\n            Transaction tx = transactions.get( txId );\n            if ( tx == null )\n            {\n                throw new RuntimeException( \"Shouldn't happen\" );\n            }\n            graphDbConfig.getTxModule().getTxManager().rollback();\n            return packResponse( context, null, ALL );\n        }\n        catch ( IllegalStateException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SecurityException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Integer> createRelationshipType( SlaveContext context, String name )\n    {\n        // Does this type exist already?\n        Integer id = getConfig().getRelationshipTypeHolder().getIdFor( name );\n        if ( id != null )\n        {\n            // OK, return\n            return packResponse( context, id, ALL );\n        }\n\n        // No? Create it then\n        TransactionManager txManager = getTxManager();\n        Config config = getConfig();\n        id = config.getRelationshipTypeCreator().getOrCreate( txManager,\n                config.getIdGeneratorModule().getIdGenerator(),\n                config.getPersistenceModule().getPersistenceManager(),\n                config.getRelationshipTypeHolder(), name );\n        return packResponse( context, id, ALL );\n    }","id":4805,"modified_method":"public Response<Integer> createRelationshipType( SlaveContext context, String name )\n    {\n        // Does this type exist already?\n        Integer id = graphDbConfig.getRelationshipTypeHolder().getIdFor( name );\n        if ( id != null )\n        {\n            // OK, return\n            return packResponse( context, id, ALL );\n        }\n\n        // No? Create it then\n        id = graphDbConfig.getRelationshipTypeCreator().getOrCreate(\n                graphDbConfig.getTxModule().getTxManager(),\n                graphDbConfig.getIdGeneratorModule().getIdGenerator(),\n                graphDbConfig.getPersistenceModule().getPersistenceManager(),\n                graphDbConfig.getRelationshipTypeHolder(), name );\n        return packResponse( context, id, ALL );\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IdAllocation allocateIds( IdType idType )\n    {\n        IdGeneratorFactory factory = getConfig().getIdGeneratorFactory();\n        IdGenerator generator = factory.get( idType );\n        return new IdAllocation( generator.nextIdBatch( ID_GRAB_SIZE ),\n                generator.getHighId(), generator.getDefragCount() ); \n    }","id":4806,"modified_method":"public IdAllocation allocateIds( IdType idType )\n    {\n        IdGenerator generator = graphDbConfig.getIdGeneratorFactory().get( idType );\n        return new IdAllocation( generator.nextIdBatch( ID_GRAB_SIZE ),\n                generator.getHighId(), generator.getDefragCount() ); \n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"Transaction suspendOtherAndResumeThis( TxIdElement txId )\n    {\n        try\n        {\n            TransactionManager txManager = getTxManager();\n            Transaction otherTx = txManager.getTransaction();\n            Transaction transaction = getTx( txId );\n            if ( otherTx != null && otherTx == transaction )\n            {\n                return null;\n            }\n            else\n            {\n                if ( otherTx != null )\n                {\n                    txManager.suspend();\n                }\n                if ( transaction == null )\n                {\n                    beginTx( txId );\n                }\n                else\n                {\n                    txManager.resume( transaction );\n                }\n                return otherTx;\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","id":4807,"modified_method":"Transaction suspendOtherAndResumeThis( TxIdElement txId )\n    {\n        try\n        {\n            TransactionManager txManager = graphDbConfig.getTxModule().getTxManager();\n            Transaction otherTx = txManager.getTransaction();\n            Transaction transaction = getTx( txId );\n            if ( otherTx != null && otherTx == transaction )\n            {\n                return null;\n            }\n            else\n            {\n                if ( otherTx != null )\n                {\n                    txManager.suspend();\n                }\n                if ( transaction == null )\n                {\n                    beginTx( txId );\n                }\n                else\n                {\n                    txManager.resume( transaction );\n                }\n                return otherTx;\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"584a168f05ed7fedfe323f2cb1c5b695134d18b8","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings( \"boxing\" )\n    protected static void writeSlaveContext( ChannelBuffer buffer, SlaveContext context )\n    {\n        buffer.writeInt( context.machineId() );\n        Map<String, Long> txs = context.lastAppliedTransactions();\n        buffer.writeByte( txs.size() );\n        for ( Map.Entry<String, Long> tx : txs.entrySet() )\n        {\n            writeString( buffer, tx.getKey() );\n            buffer.writeLong( tx.getValue() );\n        }\n    }","id":4808,"modified_method":"@SuppressWarnings( \"boxing\" )\n    protected static void writeSlaveContext( ChannelBuffer buffer, SlaveContext context )\n    {\n        buffer.writeInt( context.machineId() );\n        Pair<String, Long>[] txs = context.lastAppliedTransactions();\n        buffer.writeByte( txs.length );\n        for ( Pair<String, Long> tx : txs )\n        {\n            writeString( buffer, tx.first() );\n            buffer.writeLong( tx.other() );\n        }\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings( \"boxing\" )\n    private static SlaveContext readSlaveContext( ChannelBuffer buffer )\n    {\n        int machineId = buffer.readInt();\n        Map<String, Long> lastAppliedTransactions = new HashMap<String, Long>();\n        int txsSize = buffer.readByte();\n        for ( int i = 0; i < txsSize; i++ )\n        {\n            lastAppliedTransactions.put( readString( buffer ), buffer.readLong() );\n        }\n        return new SlaveContext( machineId, lastAppliedTransactions );\n    }","id":4809,"modified_method":"@SuppressWarnings( \"boxing\" )\n    private static SlaveContext readSlaveContext( ChannelBuffer buffer )\n    {\n        int machineId = buffer.readInt();\n        int txsSize = buffer.readByte();\n        Pair<String, Long>[] lastAppliedTransactions = new Pair[txsSize];\n        for ( int i = 0; i < txsSize; i++ )\n        {\n            lastAppliedTransactions[i] = new Pair<String, Long>(\n                    readString( buffer ), buffer.readLong() );\n        }\n        return new SlaveContext( machineId, lastAppliedTransactions );\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Config getConfig()\n    {\n        return localGraph.getConfig();\n    }","id":4810,"modified_method":"public Config getConfig()\n    {\n        return this.localGraph.getConfig();\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void startAsMaster()\n    {\n        this.broker = brokerFactory.create();\n        this.localGraph = new EmbeddedGraphDbImpl( storeDir, config, this,\n                new SlaveLockManagerFactory( broker, this ),\n                new SlaveIdGeneratorFactory( broker, this ),\n                new SlaveRelationshipTypeCreator( broker, this ),\n                new SlaveTxIdGeneratorFactory( broker, this ),\n                new SlaveTxRollbackHook( broker, this ),\n                new ZooKeeperLastCommittedTxIdSetter( broker ) );\n        instantiateIndexIfNeeded();\n    }","id":4811,"modified_method":"private void startAsMaster()\n    {\n        this.broker = brokerFactory.create();\n        this.masterServer = (MasterServer) broker.instantiateMasterServer( this );\n        this.localGraph = new EmbeddedGraphDbImpl( storeDir, config, this,\n                CommonFactories.defaultLockManagerFactory(),\n                new MasterIdGeneratorFactory(),\n                CommonFactories.defaultRelationshipTypeCreator(),\n                CommonFactories.defaultTxIdGeneratorFactory(),\n                CommonFactories.defaultTxRollbackHook(),\n                new ZooKeeperLastCommittedTxIdSetter( broker ) );\n        instantiateIndexIfNeeded();\n        instantiateAutoUpdatePullerIfConfigSaysSo();\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"public SlaveContext getSlaveContext()\n    {\n        Config config = getConfig();\n        Map<String, Long> txs = new HashMap<String, Long>();\n        for ( XaDataSource dataSource :\n                config.getTxModule().getXaDataSourceManager().getAllRegisteredDataSources() )\n        {\n            txs.put( dataSource.getName(), dataSource.getLastCommittedTxId() );\n        }\n//        System.out.println( \"Sending slaveContext:\" + machineId + \", \" + txs );\n        return new SlaveContext( machineId, txs );\n    }","id":4812,"modified_method":"public SlaveContext getSlaveContext()\n    {\n        Collection<XaDataSource> dataSources = localDataSourceManager.getAllRegisteredDataSources();\n        @SuppressWarnings(\"unchecked\")\n        Pair<String, Long>[] txs = new Pair[dataSources.size()];\n        int i = 0;\n        for ( XaDataSource dataSource : dataSources )\n        {\n            txs[i++] = new Pair<String, Long>( \n                    dataSource.getName(), dataSource.getLastCommittedTxId() );\n        }\n        return new SlaveContext( machineId, txs );\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"public <T> T receive( Response<T> response )\n    {\n        try\n        {\n            for ( Pair<String, TransactionStream> streams : response.transactions().getStreams() )\n            {\n                String resourceName = streams.first();\n                XaDataSource dataSource = localGraph.getConfig().getTxModule().getXaDataSourceManager()\n                        .getXaDataSource( resourceName );\n                for ( ReadableByteChannel channel : streams.other().getChannels() )\n                {\n                    dataSource.applyCommittedTransaction( channel );\n                    channel.close();\n                }\n            }\n            return response.response();\n        }\n        catch ( IOException e )\n        {\n            somethingIsWrong( e );\n            throw new RuntimeException( e );\n        }\n    }","id":4813,"modified_method":"public <T> T receive( Response<T> response )\n    {\n        try\n        {\n            for ( Pair<String, TransactionStream> streams : response.transactions().getStreams() )\n            {\n                String resourceName = streams.first();\n                XaDataSource dataSource = localDataSourceManager.getXaDataSource( resourceName );\n                for ( ReadableByteChannel channel : streams.other().getChannels() )\n                {\n                    dataSource.applyCommittedTransaction( channel );\n                    channel.close();\n                }\n            }\n            return response.response();\n        }\n        catch ( IOException e )\n        {\n            somethingIsWrong( e );\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void startAsSlave()\n    {\n        this.broker = brokerFactory.create();\n        this.masterServer = (MasterServer) broker.instantiateMasterServer( this );\n        this.localGraph = new EmbeddedGraphDbImpl( storeDir, config, this,\n                CommonFactories.defaultLockManagerFactory(),\n                new MasterIdGeneratorFactory(),\n                CommonFactories.defaultRelationshipTypeCreator(),\n                CommonFactories.defaultTxIdGeneratorFactory(),\n                CommonFactories.defaultTxRollbackHook(),\n                new ZooKeeperLastCommittedTxIdSetter( broker ) );\n        instantiateIndexIfNeeded();\n        instantiateAutoUpdatePullerIfConfigSaysSo();\n    }","id":4814,"modified_method":"private void startAsSlave()\n    {\n        this.broker = brokerFactory.create();\n        this.localGraph = new EmbeddedGraphDbImpl( storeDir, config, this,\n                new SlaveLockManagerFactory( broker, this ),\n                new SlaveIdGeneratorFactory( broker, this ),\n                new SlaveRelationshipTypeCreator( broker, this ),\n                new SlaveTxIdGeneratorFactory( broker, this ),\n                new SlaveTxRollbackHook( broker, this ),\n                new ZooKeeperLastCommittedTxIdSetter( broker ) );\n        instantiateIndexIfNeeded();\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized void shutdown()\n    {\n        if ( this.updatePuller != null )\n        {\n            System.out.println( \"Shutting down update puller\" );\n            this.updatePuller.halt();\n            this.updatePuller = null;\n        }\n        if ( this.broker != null )\n        {\n            System.out.println( \"Shutting down broker\" );\n            this.broker.shutdown();\n            this.broker = null;\n        }\n        if ( this.masterServer != null )\n        {\n            System.out.println( \"Shutting down master server\" );\n            this.masterServer.shutdown();\n            this.masterServer = null;\n        }\n        if ( this.localIndex != null )\n        {\n            System.out.println( \"Shutting down local index\" );\n            this.localIndex.shutdown();\n            this.localIndex = null;\n        }\n        if ( this.localGraph != null )\n        {\n            System.out.println( \"Shutting down local graph\" );\n            this.localGraph.shutdown();\n            this.localGraph = null;\n        }\n    }","id":4815,"modified_method":"public synchronized void shutdown()\n    {\n        if ( this.updatePuller != null )\n        {\n            System.out.println( \"Shutting down update puller\" );\n            this.updatePuller.halt();\n            this.updatePuller = null;\n        }\n        if ( this.broker != null )\n        {\n            System.out.println( \"Shutting down broker\" );\n            this.broker.shutdown();\n            this.broker = null;\n        }\n        if ( this.masterServer != null )\n        {\n            System.out.println( \"Shutting down master server\" );\n            this.masterServer.shutdown();\n            this.masterServer = null;\n        }\n        if ( this.localIndex != null )\n        {\n            System.out.println( \"Shutting down local index\" );\n            this.localIndex.shutdown();\n            this.localIndex = null;\n        }\n        if ( this.localGraph != null )\n        {\n            System.out.println( \"Shutting down local graph\" );\n            this.localGraph.shutdown();\n            this.localGraph = null;\n            this.localDataSourceManager = null;\n        }\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected void reevaluateMyself()\n    {\n        if ( !reevaluatingMyself.compareAndSet( false, true ) )\n        {\n            return;\n        }\n                \n        try\n        {\n            broker.invalidateMaster();\n            boolean brokerSaysIAmMaster = brokerSaysIAmMaster();\n            boolean iAmCurrentlyMaster = masterServer != null;\n            if ( brokerSaysIAmMaster )\n            {\n                if ( !iAmCurrentlyMaster )\n                {\n                    shutdown();\n                }\n                if ( this.localGraph == null )\n                {\n                    startAsSlave();\n                }\n            }\n            else\n            {\n                if ( iAmCurrentlyMaster )\n                {\n                    shutdown();\n                }\n                if ( this.localGraph == null )\n                {\n                    startAsMaster();\n                }\n            }\n        }\n        finally\n        {\n            reevaluatingMyself.set( false );\n        }\n    }","id":4816,"modified_method":"protected void reevaluateMyself()\n    {\n        if ( !reevaluatingMyself.compareAndSet( false, true ) )\n        {\n            return;\n        }\n                \n        try\n        {\n            broker.invalidateMaster();\n            boolean brokerSaysIAmMaster = brokerSaysIAmMaster();\n            boolean iAmCurrentlyMaster = masterServer != null;\n            if ( brokerSaysIAmMaster )\n            {\n                if ( !iAmCurrentlyMaster )\n                {\n                    shutdown();\n                }\n                if ( this.localGraph == null )\n                {\n                    startAsMaster();\n                }\n            }\n            else\n            {\n                if ( iAmCurrentlyMaster )\n                {\n                    shutdown();\n                }\n                if ( this.localGraph == null )\n                {\n                    startAsSlave();\n                }\n            }\n            this.localDataSourceManager =\n                    localGraph.getConfig().getTxModule().getXaDataSourceManager();\n        }\n        finally\n        {\n            reevaluatingMyself.set( false );\n        }\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Void> rollbackTransaction( SlaveContext context, int eventIdentifier )\n    {\n        TxIdElement txId = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( txId );\n        try\n        {\n            Transaction tx = transactions.get( txId );\n            if ( tx == null )\n            {\n                throw new RuntimeException( \"Shouldn't happen\" );\n            }\n            TransactionManager txManager = getTxManager();\n            txManager.rollback();\n            return packResponse( context, null, ALL );\n        }\n        catch ( IllegalStateException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SecurityException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":4817,"modified_method":"public Response<Void> rollbackTransaction( SlaveContext context, int eventIdentifier )\n    {\n        TxIdElement txId = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( txId );\n        try\n        {\n            Transaction tx = transactions.get( txId );\n            if ( tx == null )\n            {\n                throw new RuntimeException( \"Shouldn't happen\" );\n            }\n            graphDbConfig.getTxModule().getTxManager().rollback();\n            return packResponse( context, null, ALL );\n        }\n        catch ( IllegalStateException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SecurityException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Integer> createRelationshipType( SlaveContext context, String name )\n    {\n        // Does this type exist already?\n        Integer id = getConfig().getRelationshipTypeHolder().getIdFor( name );\n        if ( id != null )\n        {\n            // OK, return\n            return packResponse( context, id, ALL );\n        }\n\n        // No? Create it then\n        TransactionManager txManager = getTxManager();\n        Config config = getConfig();\n        id = config.getRelationshipTypeCreator().getOrCreate( txManager,\n                config.getIdGeneratorModule().getIdGenerator(),\n                config.getPersistenceModule().getPersistenceManager(),\n                config.getRelationshipTypeHolder(), name );\n        return packResponse( context, id, ALL );\n    }","id":4818,"modified_method":"public Response<Integer> createRelationshipType( SlaveContext context, String name )\n    {\n        // Does this type exist already?\n        Integer id = graphDbConfig.getRelationshipTypeHolder().getIdFor( name );\n        if ( id != null )\n        {\n            // OK, return\n            return packResponse( context, id, ALL );\n        }\n\n        // No? Create it then\n        id = graphDbConfig.getRelationshipTypeCreator().getOrCreate(\n                graphDbConfig.getTxModule().getTxManager(),\n                graphDbConfig.getIdGeneratorModule().getIdGenerator(),\n                graphDbConfig.getPersistenceModule().getPersistenceManager(),\n                graphDbConfig.getRelationshipTypeHolder(), name );\n        return packResponse( context, id, ALL );\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"private <T extends PropertyContainer> Response<LockResult> acquireLock( SlaveContext context,\n            int eventIdentifier, LockGrabber lockGrabber, T... entities )\n    {\n        TxIdElement tx = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( T entity : entities )\n            {\n                lockGrabber.grab( lockManager, lockReleaser, entity );\n            }\n            return packResponse( context, new LockResult( LockStatus.OK_LOCKED ), ALL );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return packResponse( context, new LockResult( e.getMessage() ), ALL );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return packResponse( context, new LockResult( LockStatus.NOT_LOCKED ), ALL );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":4819,"modified_method":"private <T extends PropertyContainer> Response<LockResult> acquireLock( SlaveContext context,\n            int eventIdentifier, LockGrabber lockGrabber, T... entities )\n    {\n        TxIdElement tx = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = graphDbConfig.getLockManager();\n            LockReleaser lockReleaser = graphDbConfig.getLockReleaser();\n            for ( T entity : entities )\n            {\n                lockGrabber.grab( lockManager, lockReleaser, entity );\n            }\n            return packResponse( context, new LockResult( LockStatus.OK_LOCKED ), ALL );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return packResponse( context, new LockResult( e.getMessage() ), ALL );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return packResponse( context, new LockResult( LockStatus.NOT_LOCKED ), ALL );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"void suspendThisAndResumeOther( Transaction otherTx )\n    {\n        try\n        {\n            TransactionManager txManager = getTxManager();\n            txManager.suspend();\n            if ( otherTx != null )\n            {\n                txManager.resume( otherTx );\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","id":4820,"modified_method":"void suspendThisAndResumeOther( Transaction otherTx )\n    {\n        try\n        {\n            TransactionManager txManager = graphDbConfig.getTxModule().getTxManager();\n            txManager.suspend();\n            if ( otherTx != null )\n            {\n                txManager.resume( otherTx );\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Transaction beginTx( TxIdElement txId )\n    {\n        try\n        {\n            TransactionManager txManager = getTxManager();\n            txManager.begin();\n            Transaction tx = txManager.getTransaction();\n            transactions.put( txId, tx );\n            return tx;\n        }\n        catch ( NotSupportedException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","id":4821,"modified_method":"private Transaction beginTx( TxIdElement txId )\n    {\n        try\n        {\n            TransactionManager txManager = graphDbConfig.getTxModule().getTxManager();\n            txManager.begin();\n            Transaction tx = txManager.getTransaction();\n            transactions.put( txId, tx );\n            return tx;\n        }\n        catch ( NotSupportedException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"private <T> Response<T> packResponse( SlaveContext context, T response,\n            Predicate<Long> filter )\n    {\n        try\n        {\n            TransactionStreams streams = new TransactionStreams();\n            for ( Map.Entry<String, Long> slaveEntry :\n                    context.lastAppliedTransactions().entrySet() )\n            {\n                String resourceName = slaveEntry.getKey();\n                XaDataSource dataSource = getConfig().getTxModule()\n                        .getXaDataSourceManager().getXaDataSource( resourceName );\n                long masterLastTx = dataSource.getLastCommittedTxId();\n                long slaveLastTx = slaveEntry.getValue();\n                Collection<ReadableByteChannel> channels = new ArrayList<ReadableByteChannel>();\n                for ( long txId = slaveLastTx+1; txId <= masterLastTx; txId++ )\n                {\n                    if ( filter.accept( txId ) )\n                    {\n                        channels.add( dataSource.getCommittedTransaction( txId ) );\n                    }\n                }\n                streams.add( slaveEntry.getKey(), new TransactionStream( channels ) );\n            }\n            return new Response<T>( response, streams );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<T>();\n        }\n    }","id":4822,"modified_method":"private <T> Response<T> packResponse( SlaveContext context, T response,\n            Predicate<Long> filter )\n    {\n        try\n        {\n            TransactionStreams streams = new TransactionStreams();\n            for ( Pair<String, Long> txEntry : context.lastAppliedTransactions() )\n            {\n                String resourceName = txEntry.first();\n                XaDataSource dataSource = graphDbConfig.getTxModule().getXaDataSourceManager()\n                        .getXaDataSource( resourceName );\n                long masterLastTx = dataSource.getLastCommittedTxId();\n                Collection<ReadableByteChannel> channels = new ArrayList<ReadableByteChannel>();\n                for ( long txId = txEntry.other()+1; txId <= masterLastTx; txId++ )\n                {\n                    if ( filter.accept( txId ) )\n                    {\n                        channels.add( dataSource.getCommittedTransaction( txId ) );\n                    }\n                }\n                streams.add( resourceName, new TransactionStream( channels ) );\n            }\n            return new Response<T>( response, streams );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<T>();\n        }\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"void rollbackThisAndResumeOther( Transaction otherTx )\n    {\n        try\n        {\n            TransactionManager txManager = getTxManager();\n            txManager.rollback();\n            if ( otherTx != null )\n            {\n                txManager.resume( otherTx );\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","id":4823,"modified_method":"void rollbackThisAndResumeOther( Transaction otherTx )\n    {\n        try\n        {\n            TransactionManager txManager = graphDbConfig.getTxModule().getTxManager();\n            txManager.rollback();\n            if ( otherTx != null )\n            {\n                txManager.resume( otherTx );\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IdAllocation allocateIds( IdType idType )\n    {\n        IdGeneratorFactory factory = getConfig().getIdGeneratorFactory();\n        IdGenerator generator = factory.get( idType );\n        return new IdAllocation( generator.nextIdBatch( ID_GRAB_SIZE ),\n                generator.getHighId(), generator.getDefragCount() ); \n    }","id":4824,"modified_method":"public IdAllocation allocateIds( IdType idType )\n    {\n        IdGenerator generator = graphDbConfig.getIdGeneratorFactory().get( idType );\n        return new IdAllocation( generator.nextIdBatch( ID_GRAB_SIZE ),\n                generator.getHighId(), generator.getDefragCount() ); \n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"Transaction suspendOtherAndResumeThis( TxIdElement txId )\n    {\n        try\n        {\n            TransactionManager txManager = getTxManager();\n            Transaction otherTx = txManager.getTransaction();\n            Transaction transaction = getTx( txId );\n            if ( otherTx != null && otherTx == transaction )\n            {\n                return null;\n            }\n            else\n            {\n                if ( otherTx != null )\n                {\n                    txManager.suspend();\n                }\n                if ( transaction == null )\n                {\n                    beginTx( txId );\n                }\n                else\n                {\n                    txManager.resume( transaction );\n                }\n                return otherTx;\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","id":4825,"modified_method":"Transaction suspendOtherAndResumeThis( TxIdElement txId )\n    {\n        try\n        {\n            TransactionManager txManager = graphDbConfig.getTxModule().getTxManager();\n            Transaction otherTx = txManager.getTransaction();\n            Transaction transaction = getTx( txId );\n            if ( otherTx != null && otherTx == transaction )\n            {\n                return null;\n            }\n            else\n            {\n                if ( otherTx != null )\n                {\n                    txManager.suspend();\n                }\n                if ( transaction == null )\n                {\n                    beginTx( txId );\n                }\n                else\n                {\n                    txManager.resume( transaction );\n                }\n                return otherTx;\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Long> commitSingleResourceTransaction( SlaveContext context,\n            int eventIdentifier, String resource, TransactionStream transactionStream )\n    {\n        TxIdElement tx = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            XaDataSource dataSource = getConfig().getTxModule().getXaDataSourceManager()\n                    .getXaDataSource( resource );\n            // Always exactly one transaction (ReadableByteChannel)\n            final long txId = dataSource.applyPreparedTransaction(\n                    transactionStream.getChannels().iterator().next() );\n            Predicate<Long> notThisTx = new Predicate<Long>()\n            {\n                public boolean accept( Long item )\n                {\n                    return item != txId;\n                }\n            };\n            return packResponse( context, txId, notThisTx );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<Long>();\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n            // Since the master-transaction carries no actual state, just locks\n            // we would like to release the locks... and it's best done by just\n            // rolling back the tx\n//            rollbackThisAndResumeOther( otherTx );\n        }\n    }","id":4826,"modified_method":"public Response<Long> commitSingleResourceTransaction( SlaveContext context,\n            int eventIdentifier, String resource, TransactionStream transactionStream )\n    {\n        TxIdElement tx = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            XaDataSource dataSource = graphDbConfig.getTxModule()\n                    .getXaDataSourceManager().getXaDataSource( resource );\n            // Always exactly one transaction (ReadableByteChannel)\n            final long txId = dataSource.applyPreparedTransaction(\n                    transactionStream.getChannels().iterator().next() );\n            Predicate<Long> notThisTx = new Predicate<Long>()\n            {\n                public boolean accept( Long item )\n                {\n                    return item != txId;\n                }\n            };\n            return packResponse( context, txId, notThisTx );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<Long>();\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n            // Since the master-transaction carries no actual state, just locks\n            // we would like to release the locks... and it's best done by just\n            // rolling back the tx\n//            rollbackThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"public MasterImpl( GraphDatabaseService db )\n    {\n        graphDb = db;\n    }","id":4827,"modified_method":"public MasterImpl( GraphDatabaseService db )\n    {\n        this.graphDb = db;\n        this.graphDbConfig = getConfig( db );\n    }","commit_id":"c3c969213cd59916576df656b91bbb9499428283","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings( \"boxing\" )\n    private static SlaveContext readSlaveContext( ChannelBuffer buffer )\n    {\n        int machineId = buffer.readInt();\n        Map<String, Long> lastAppliedTransactions = new HashMap<String, Long>();\n        int txsSize = buffer.readByte();\n        for ( int i = 0; i < txsSize; i++ )\n        {\n            lastAppliedTransactions.put( readString( buffer ), buffer.readLong() );\n        }\n        return new SlaveContext( machineId, lastAppliedTransactions );\n    }","id":4828,"modified_method":"@SuppressWarnings( \"boxing\" )\n    private static SlaveContext readSlaveContext( ChannelBuffer buffer )\n    {\n        int machineId = buffer.readInt();\n        int txsSize = buffer.readByte();\n        Pair<String, Long>[] lastAppliedTransactions = new Pair[txsSize];\n        for ( int i = 0; i < txsSize; i++ )\n        {\n            lastAppliedTransactions[i] = new Pair<String, Long>(\n                    readString( buffer ), buffer.readLong() );\n        }\n        return new SlaveContext( machineId, lastAppliedTransactions );\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings( \"boxing\" )\n    protected static void writeSlaveContext( ChannelBuffer buffer, SlaveContext context )\n    {\n        buffer.writeInt( context.machineId() );\n        Map<String, Long> txs = context.lastAppliedTransactions();\n        buffer.writeByte( txs.size() );\n        for ( Map.Entry<String, Long> tx : txs.entrySet() )\n        {\n            writeString( buffer, tx.getKey() );\n            buffer.writeLong( tx.getValue() );\n        }\n    }","id":4829,"modified_method":"@SuppressWarnings( \"boxing\" )\n    protected static void writeSlaveContext( ChannelBuffer buffer, SlaveContext context )\n    {\n        buffer.writeInt( context.machineId() );\n        Pair<String, Long>[] txs = context.lastAppliedTransactions();\n        buffer.writeByte( txs.length );\n        for ( Pair<String, Long> tx : txs )\n        {\n            writeString( buffer, tx.first() );\n            buffer.writeLong( tx.other() );\n        }\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void startAsSlave()\n    {\n        this.broker = brokerFactory.create();\n        this.masterServer = (MasterServer) broker.instantiateMasterServer( this );\n        this.localGraph = new EmbeddedGraphDbImpl( storeDir, config, this,\n                CommonFactories.defaultLockManagerFactory(),\n                new MasterIdGeneratorFactory(),\n                CommonFactories.defaultRelationshipTypeCreator(),\n                CommonFactories.defaultTxIdGeneratorFactory(),\n                CommonFactories.defaultTxRollbackHook(),\n                new ZooKeeperLastCommittedTxIdSetter( broker ) );\n        instantiateIndexIfNeeded();\n        instantiateAutoUpdatePullerIfConfigSaysSo();\n    }","id":4830,"modified_method":"private void startAsSlave()\n    {\n        this.broker = brokerFactory.create();\n        this.localGraph = new EmbeddedGraphDbImpl( storeDir, config, this,\n                new SlaveLockManagerFactory( broker, this ),\n                new SlaveIdGeneratorFactory( broker, this ),\n                new SlaveRelationshipTypeCreator( broker, this ),\n                new SlaveTxIdGeneratorFactory( broker, this ),\n                new SlaveTxRollbackHook( broker, this ),\n                new ZooKeeperLastCommittedTxIdSetter( broker ) );\n        instantiateIndexIfNeeded();\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public SlaveContext getSlaveContext()\n    {\n        Config config = getConfig();\n        Map<String, Long> txs = new HashMap<String, Long>();\n        for ( XaDataSource dataSource :\n                config.getTxModule().getXaDataSourceManager().getAllRegisteredDataSources() )\n        {\n            txs.put( dataSource.getName(), dataSource.getLastCommittedTxId() );\n        }\n//        System.out.println( \"Sending slaveContext:\" + machineId + \", \" + txs );\n        return new SlaveContext( machineId, txs );\n    }","id":4831,"modified_method":"public SlaveContext getSlaveContext()\n    {\n        Collection<XaDataSource> dataSources = localDataSourceManager.getAllRegisteredDataSources();\n        @SuppressWarnings(\"unchecked\")\n        Pair<String, Long>[] txs = new Pair[dataSources.size()];\n        int i = 0;\n        for ( XaDataSource dataSource : dataSources )\n        {\n            txs[i++] = new Pair<String, Long>( \n                    dataSource.getName(), dataSource.getLastCommittedTxId() );\n        }\n        return new SlaveContext( machineId, txs );\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected void reevaluateMyself()\n    {\n        if ( !reevaluatingMyself.compareAndSet( false, true ) )\n        {\n            return;\n        }\n                \n        try\n        {\n            broker.invalidateMaster();\n            boolean brokerSaysIAmMaster = brokerSaysIAmMaster();\n            boolean iAmCurrentlyMaster = masterServer != null;\n            if ( brokerSaysIAmMaster )\n            {\n                if ( !iAmCurrentlyMaster )\n                {\n                    shutdown();\n                }\n                if ( this.localGraph == null )\n                {\n                    startAsSlave();\n                }\n            }\n            else\n            {\n                if ( iAmCurrentlyMaster )\n                {\n                    shutdown();\n                }\n                if ( this.localGraph == null )\n                {\n                    startAsMaster();\n                }\n            }\n        }\n        finally\n        {\n            reevaluatingMyself.set( false );\n        }\n    }","id":4832,"modified_method":"protected void reevaluateMyself()\n    {\n        if ( !reevaluatingMyself.compareAndSet( false, true ) )\n        {\n            return;\n        }\n                \n        try\n        {\n            broker.invalidateMaster();\n            boolean brokerSaysIAmMaster = brokerSaysIAmMaster();\n            boolean iAmCurrentlyMaster = masterServer != null;\n            if ( brokerSaysIAmMaster )\n            {\n                if ( !iAmCurrentlyMaster )\n                {\n                    shutdown();\n                }\n                if ( this.localGraph == null )\n                {\n                    startAsMaster();\n                }\n            }\n            else\n            {\n                if ( iAmCurrentlyMaster )\n                {\n                    shutdown();\n                }\n                if ( this.localGraph == null )\n                {\n                    startAsSlave();\n                }\n            }\n            this.localDataSourceManager =\n                    localGraph.getConfig().getTxModule().getXaDataSourceManager();\n        }\n        finally\n        {\n            reevaluatingMyself.set( false );\n        }\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public <T> T receive( Response<T> response )\n    {\n        try\n        {\n            for ( Pair<String, TransactionStream> streams : response.transactions().getStreams() )\n            {\n                String resourceName = streams.first();\n                XaDataSource dataSource = localGraph.getConfig().getTxModule().getXaDataSourceManager()\n                        .getXaDataSource( resourceName );\n                for ( ReadableByteChannel channel : streams.other().getChannels() )\n                {\n                    dataSource.applyCommittedTransaction( channel );\n                    channel.close();\n                }\n            }\n            return response.response();\n        }\n        catch ( IOException e )\n        {\n            somethingIsWrong( e );\n            throw new RuntimeException( e );\n        }\n    }","id":4833,"modified_method":"public <T> T receive( Response<T> response )\n    {\n        try\n        {\n            for ( Pair<String, TransactionStream> streams : response.transactions().getStreams() )\n            {\n                String resourceName = streams.first();\n                XaDataSource dataSource = localDataSourceManager.getXaDataSource( resourceName );\n                for ( ReadableByteChannel channel : streams.other().getChannels() )\n                {\n                    dataSource.applyCommittedTransaction( channel );\n                    channel.close();\n                }\n            }\n            return response.response();\n        }\n        catch ( IOException e )\n        {\n            somethingIsWrong( e );\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Config getConfig()\n    {\n        return localGraph.getConfig();\n    }","id":4834,"modified_method":"public Config getConfig()\n    {\n        return this.localGraph.getConfig();\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void startAsMaster()\n    {\n        this.broker = brokerFactory.create();\n        this.localGraph = new EmbeddedGraphDbImpl( storeDir, config, this,\n                new SlaveLockManagerFactory( broker, this ),\n                new SlaveIdGeneratorFactory( broker, this ),\n                new SlaveRelationshipTypeCreator( broker, this ),\n                new SlaveTxIdGeneratorFactory( broker, this ),\n                new SlaveTxRollbackHook( broker, this ),\n                new ZooKeeperLastCommittedTxIdSetter( broker ) );\n        instantiateIndexIfNeeded();\n    }","id":4835,"modified_method":"private void startAsMaster()\n    {\n        this.broker = brokerFactory.create();\n        this.masterServer = (MasterServer) broker.instantiateMasterServer( this );\n        this.localGraph = new EmbeddedGraphDbImpl( storeDir, config, this,\n                CommonFactories.defaultLockManagerFactory(),\n                new MasterIdGeneratorFactory(),\n                CommonFactories.defaultRelationshipTypeCreator(),\n                CommonFactories.defaultTxIdGeneratorFactory(),\n                CommonFactories.defaultTxRollbackHook(),\n                new ZooKeeperLastCommittedTxIdSetter( broker ) );\n        instantiateIndexIfNeeded();\n        instantiateAutoUpdatePullerIfConfigSaysSo();\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized void shutdown()\n    {\n        if ( this.updatePuller != null )\n        {\n            System.out.println( \"Shutting down update puller\" );\n            this.updatePuller.halt();\n            this.updatePuller = null;\n        }\n        if ( this.broker != null )\n        {\n            System.out.println( \"Shutting down broker\" );\n            this.broker.shutdown();\n            this.broker = null;\n        }\n        if ( this.masterServer != null )\n        {\n            System.out.println( \"Shutting down master server\" );\n            this.masterServer.shutdown();\n            this.masterServer = null;\n        }\n        if ( this.localIndex != null )\n        {\n            System.out.println( \"Shutting down local index\" );\n            this.localIndex.shutdown();\n            this.localIndex = null;\n        }\n        if ( this.localGraph != null )\n        {\n            System.out.println( \"Shutting down local graph\" );\n            this.localGraph.shutdown();\n            this.localGraph = null;\n        }\n    }","id":4836,"modified_method":"public synchronized void shutdown()\n    {\n        if ( this.updatePuller != null )\n        {\n            System.out.println( \"Shutting down update puller\" );\n            this.updatePuller.halt();\n            this.updatePuller = null;\n        }\n        if ( this.broker != null )\n        {\n            System.out.println( \"Shutting down broker\" );\n            this.broker.shutdown();\n            this.broker = null;\n        }\n        if ( this.masterServer != null )\n        {\n            System.out.println( \"Shutting down master server\" );\n            this.masterServer.shutdown();\n            this.masterServer = null;\n        }\n        if ( this.localIndex != null )\n        {\n            System.out.println( \"Shutting down local index\" );\n            this.localIndex.shutdown();\n            this.localIndex = null;\n        }\n        if ( this.localGraph != null )\n        {\n            System.out.println( \"Shutting down local graph\" );\n            this.localGraph.shutdown();\n            this.localGraph = null;\n            this.localDataSourceManager = null;\n        }\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"Transaction suspendOtherAndResumeThis( TxIdElement txId )\n    {\n        try\n        {\n            TransactionManager txManager = getTxManager();\n            Transaction otherTx = txManager.getTransaction();\n            Transaction transaction = getTx( txId );\n            if ( otherTx != null && otherTx == transaction )\n            {\n                return null;\n            }\n            else\n            {\n                if ( otherTx != null )\n                {\n                    txManager.suspend();\n                }\n                if ( transaction == null )\n                {\n                    beginTx( txId );\n                }\n                else\n                {\n                    txManager.resume( transaction );\n                }\n                return otherTx;\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","id":4837,"modified_method":"Transaction suspendOtherAndResumeThis( TxIdElement txId )\n    {\n        try\n        {\n            TransactionManager txManager = graphDbConfig.getTxModule().getTxManager();\n            Transaction otherTx = txManager.getTransaction();\n            Transaction transaction = getTx( txId );\n            if ( otherTx != null && otherTx == transaction )\n            {\n                return null;\n            }\n            else\n            {\n                if ( otherTx != null )\n                {\n                    txManager.suspend();\n                }\n                if ( transaction == null )\n                {\n                    beginTx( txId );\n                }\n                else\n                {\n                    txManager.resume( transaction );\n                }\n                return otherTx;\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private <T> Response<T> packResponse( SlaveContext context, T response,\n            Predicate<Long> filter )\n    {\n        try\n        {\n            TransactionStreams streams = new TransactionStreams();\n            for ( Map.Entry<String, Long> slaveEntry :\n                    context.lastAppliedTransactions().entrySet() )\n            {\n                String resourceName = slaveEntry.getKey();\n                XaDataSource dataSource = getConfig().getTxModule()\n                        .getXaDataSourceManager().getXaDataSource( resourceName );\n                long masterLastTx = dataSource.getLastCommittedTxId();\n                long slaveLastTx = slaveEntry.getValue();\n                Collection<ReadableByteChannel> channels = new ArrayList<ReadableByteChannel>();\n                for ( long txId = slaveLastTx+1; txId <= masterLastTx; txId++ )\n                {\n                    if ( filter.accept( txId ) )\n                    {\n                        channels.add( dataSource.getCommittedTransaction( txId ) );\n                    }\n                }\n                streams.add( slaveEntry.getKey(), new TransactionStream( channels ) );\n            }\n            return new Response<T>( response, streams );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<T>();\n        }\n    }","id":4838,"modified_method":"private <T> Response<T> packResponse( SlaveContext context, T response,\n            Predicate<Long> filter )\n    {\n        try\n        {\n            TransactionStreams streams = new TransactionStreams();\n            for ( Pair<String, Long> txEntry : context.lastAppliedTransactions() )\n            {\n                String resourceName = txEntry.first();\n                XaDataSource dataSource = graphDbConfig.getTxModule().getXaDataSourceManager()\n                        .getXaDataSource( resourceName );\n                long masterLastTx = dataSource.getLastCommittedTxId();\n                Collection<ReadableByteChannel> channels = new ArrayList<ReadableByteChannel>();\n                for ( long txId = txEntry.other()+1; txId <= masterLastTx; txId++ )\n                {\n                    if ( filter.accept( txId ) )\n                    {\n                        channels.add( dataSource.getCommittedTransaction( txId ) );\n                    }\n                }\n                streams.add( resourceName, new TransactionStream( channels ) );\n            }\n            return new Response<T>( response, streams );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<T>();\n        }\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Long> commitSingleResourceTransaction( SlaveContext context,\n            int eventIdentifier, String resource, TransactionStream transactionStream )\n    {\n        TxIdElement tx = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            XaDataSource dataSource = getConfig().getTxModule().getXaDataSourceManager()\n                    .getXaDataSource( resource );\n            // Always exactly one transaction (ReadableByteChannel)\n            final long txId = dataSource.applyPreparedTransaction(\n                    transactionStream.getChannels().iterator().next() );\n            Predicate<Long> notThisTx = new Predicate<Long>()\n            {\n                public boolean accept( Long item )\n                {\n                    return item != txId;\n                }\n            };\n            return packResponse( context, txId, notThisTx );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<Long>();\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n            // Since the master-transaction carries no actual state, just locks\n            // we would like to release the locks... and it's best done by just\n            // rolling back the tx\n//            rollbackThisAndResumeOther( otherTx );\n        }\n    }","id":4839,"modified_method":"public Response<Long> commitSingleResourceTransaction( SlaveContext context,\n            int eventIdentifier, String resource, TransactionStream transactionStream )\n    {\n        TxIdElement tx = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            XaDataSource dataSource = graphDbConfig.getTxModule()\n                    .getXaDataSourceManager().getXaDataSource( resource );\n            // Always exactly one transaction (ReadableByteChannel)\n            final long txId = dataSource.applyPreparedTransaction(\n                    transactionStream.getChannels().iterator().next() );\n            Predicate<Long> notThisTx = new Predicate<Long>()\n            {\n                public boolean accept( Long item )\n                {\n                    return item != txId;\n                }\n            };\n            return packResponse( context, txId, notThisTx );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<Long>();\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n            // Since the master-transaction carries no actual state, just locks\n            // we would like to release the locks... and it's best done by just\n            // rolling back the tx\n//            rollbackThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Integer> createRelationshipType( SlaveContext context, String name )\n    {\n        // Does this type exist already?\n        Integer id = getConfig().getRelationshipTypeHolder().getIdFor( name );\n        if ( id != null )\n        {\n            // OK, return\n            return packResponse( context, id, ALL );\n        }\n\n        // No? Create it then\n        TransactionManager txManager = getTxManager();\n        Config config = getConfig();\n        id = config.getRelationshipTypeCreator().getOrCreate( txManager,\n                config.getIdGeneratorModule().getIdGenerator(),\n                config.getPersistenceModule().getPersistenceManager(),\n                config.getRelationshipTypeHolder(), name );\n        return packResponse( context, id, ALL );\n    }","id":4840,"modified_method":"public Response<Integer> createRelationshipType( SlaveContext context, String name )\n    {\n        // Does this type exist already?\n        Integer id = graphDbConfig.getRelationshipTypeHolder().getIdFor( name );\n        if ( id != null )\n        {\n            // OK, return\n            return packResponse( context, id, ALL );\n        }\n\n        // No? Create it then\n        id = graphDbConfig.getRelationshipTypeCreator().getOrCreate(\n                graphDbConfig.getTxModule().getTxManager(),\n                graphDbConfig.getIdGeneratorModule().getIdGenerator(),\n                graphDbConfig.getPersistenceModule().getPersistenceManager(),\n                graphDbConfig.getRelationshipTypeHolder(), name );\n        return packResponse( context, id, ALL );\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"void suspendThisAndResumeOther( Transaction otherTx )\n    {\n        try\n        {\n            TransactionManager txManager = getTxManager();\n            txManager.suspend();\n            if ( otherTx != null )\n            {\n                txManager.resume( otherTx );\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","id":4841,"modified_method":"void suspendThisAndResumeOther( Transaction otherTx )\n    {\n        try\n        {\n            TransactionManager txManager = graphDbConfig.getTxModule().getTxManager();\n            txManager.suspend();\n            if ( otherTx != null )\n            {\n                txManager.resume( otherTx );\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private <T extends PropertyContainer> Response<LockResult> acquireLock( SlaveContext context,\n            int eventIdentifier, LockGrabber lockGrabber, T... entities )\n    {\n        TxIdElement tx = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( T entity : entities )\n            {\n                lockGrabber.grab( lockManager, lockReleaser, entity );\n            }\n            return packResponse( context, new LockResult( LockStatus.OK_LOCKED ), ALL );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return packResponse( context, new LockResult( e.getMessage() ), ALL );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return packResponse( context, new LockResult( LockStatus.NOT_LOCKED ), ALL );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":4842,"modified_method":"private <T extends PropertyContainer> Response<LockResult> acquireLock( SlaveContext context,\n            int eventIdentifier, LockGrabber lockGrabber, T... entities )\n    {\n        TxIdElement tx = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = graphDbConfig.getLockManager();\n            LockReleaser lockReleaser = graphDbConfig.getLockReleaser();\n            for ( T entity : entities )\n            {\n                lockGrabber.grab( lockManager, lockReleaser, entity );\n            }\n            return packResponse( context, new LockResult( LockStatus.OK_LOCKED ), ALL );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return packResponse( context, new LockResult( e.getMessage() ), ALL );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return packResponse( context, new LockResult( LockStatus.NOT_LOCKED ), ALL );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public MasterImpl( GraphDatabaseService db )\n    {\n        graphDb = db;\n    }","id":4843,"modified_method":"public MasterImpl( GraphDatabaseService db )\n    {\n        this.graphDb = db;\n        this.graphDbConfig = getConfig( db );\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Void> rollbackTransaction( SlaveContext context, int eventIdentifier )\n    {\n        TxIdElement txId = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( txId );\n        try\n        {\n            Transaction tx = transactions.get( txId );\n            if ( tx == null )\n            {\n                throw new RuntimeException( \"Shouldn't happen\" );\n            }\n            TransactionManager txManager = getTxManager();\n            txManager.rollback();\n            return packResponse( context, null, ALL );\n        }\n        catch ( IllegalStateException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SecurityException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":4844,"modified_method":"public Response<Void> rollbackTransaction( SlaveContext context, int eventIdentifier )\n    {\n        TxIdElement txId = new TxIdElement( context.machineId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( txId );\n        try\n        {\n            Transaction tx = transactions.get( txId );\n            if ( tx == null )\n            {\n                throw new RuntimeException( \"Shouldn't happen\" );\n            }\n            graphDbConfig.getTxModule().getTxManager().rollback();\n            return packResponse( context, null, ALL );\n        }\n        catch ( IllegalStateException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SecurityException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"void rollbackThisAndResumeOther( Transaction otherTx )\n    {\n        try\n        {\n            TransactionManager txManager = getTxManager();\n            txManager.rollback();\n            if ( otherTx != null )\n            {\n                txManager.resume( otherTx );\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","id":4845,"modified_method":"void rollbackThisAndResumeOther( Transaction otherTx )\n    {\n        try\n        {\n            TransactionManager txManager = graphDbConfig.getTxModule().getTxManager();\n            txManager.rollback();\n            if ( otherTx != null )\n            {\n                txManager.resume( otherTx );\n            }\n        }\n        catch ( Exception e )\n        {\n            e.printStackTrace();\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IdAllocation allocateIds( IdType idType )\n    {\n        IdGeneratorFactory factory = getConfig().getIdGeneratorFactory();\n        IdGenerator generator = factory.get( idType );\n        return new IdAllocation( generator.nextIdBatch( ID_GRAB_SIZE ),\n                generator.getHighId(), generator.getDefragCount() ); \n    }","id":4846,"modified_method":"public IdAllocation allocateIds( IdType idType )\n    {\n        IdGenerator generator = graphDbConfig.getIdGeneratorFactory().get( idType );\n        return new IdAllocation( generator.nextIdBatch( ID_GRAB_SIZE ),\n                generator.getHighId(), generator.getDefragCount() ); \n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Transaction beginTx( TxIdElement txId )\n    {\n        try\n        {\n            TransactionManager txManager = getTxManager();\n            txManager.begin();\n            Transaction tx = txManager.getTransaction();\n            transactions.put( txId, tx );\n            return tx;\n        }\n        catch ( NotSupportedException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","id":4847,"modified_method":"private Transaction beginTx( TxIdElement txId )\n    {\n        try\n        {\n            TransactionManager txManager = graphDbConfig.getTxModule().getTxManager();\n            txManager.begin();\n            Transaction tx = txManager.getTransaction();\n            transactions.put( txId, tx );\n            return tx;\n        }\n        catch ( NotSupportedException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"46aa0b2c822fc19b6e1c2e4208d71d1acae6eeb9","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected CheckS2SVpnConnectionsAnswer execute(CheckS2SVpnConnectionsCommand cmd) {\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Executing resource CheckS2SVpnConnectionsCommand: \" + s_gson.toJson(cmd));\n            s_logger.debug(\"Run command on domR \" + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + \", /opt/cloud/bin/checkbatchs2svpn.sh \");\n        }\n\n        Pair<Boolean, String> result;\n        try {\n            String controlIp = getRouterSshControlIp(cmd);\n            String cmdline = \"/opt/cloud/bin/checkbatchs2svpn.sh \";\n            for (String ip : cmd.getVpnIps()) {\n                cmdline += \" \" + ip;\n            }\n\n            result = SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null, cmdline);\n\n            if (!result.first()) {\n                s_logger.error(\"check site-to-site vpn connections command on domR \" + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + \" failed, message: \"\n                        + result.second());\n\n                return new CheckS2SVpnConnectionsAnswer(cmd, false, result.second());\n            }\n\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"check site-to-site vpn connections command on domain router \" + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + \" completed\");\n            }\n        } catch (Throwable e) {\n            String msg = \"CheckS2SVpnConnectionsCommand failed due to \" + e;\n            s_logger.error(msg, e);\n            return new CheckS2SVpnConnectionsAnswer(cmd, false, \"CheckS2SVpnConneciontsCommand failed\");\n        }\n        return new CheckS2SVpnConnectionsAnswer(cmd, true, result.second());\n    }","id":4848,"modified_method":"protected CheckS2SVpnConnectionsAnswer execute(CheckS2SVpnConnectionsCommand cmd) {\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Executing resource CheckS2SVpnConnectionsCommand: \" + s_gson.toJson(cmd));\n            s_logger.debug(\"Run command on domR \" + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + \", /opt/cloud/bin/checkbatchs2svpn.sh \");\n        }\n\n        Pair<Boolean, String> result;\n        try {\n            String controlIp = getRouterSshControlIp(cmd);\n            StringBuilder cmdline = new StringBuilder(\"/opt/cloud/bin/checkbatchs2svpn.sh \");\n            for (String ip : cmd.getVpnIps()) {\n                cmdline.append(\" \");\n                cmdline.append(ip);\n            }\n\n            result = SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null, cmdline.toString());\n\n            if (!result.first()) {\n                s_logger.error(\"check site-to-site vpn connections command on domR \" + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + \" failed, message: \"\n                        + result.second());\n\n                return new CheckS2SVpnConnectionsAnswer(cmd, false, result.second());\n            }\n\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"check site-to-site vpn connections command on domain router \" + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + \" completed\");\n            }\n        } catch (Throwable e) {\n            String msg = \"CheckS2SVpnConnectionsCommand failed due to \" + e;\n            s_logger.error(msg, e);\n            return new CheckS2SVpnConnectionsAnswer(cmd, false, \"CheckS2SVpnConneciontsCommand failed\");\n        }\n        return new CheckS2SVpnConnectionsAnswer(cmd, true, result.second());\n    }","commit_id":"ad0d7f882f001ed6421e4aa40070a215ffb1fd3b","url":"https://github.com/apache/cloudstack"},{"original_method":"protected Answer execute(final DeleteIpAliasCommand cmd) {\n        cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);\n        List<IpAliasTO> revokedIpAliasTOs = cmd.getDeleteIpAliasTos();\n        List<IpAliasTO> activeIpAliasTOs = cmd.getCreateIpAliasTos();\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing deleteIpAlias command: \" + s_gson.toJson(cmd));\n        }\n        String args = \"\";\n        for (IpAliasTO ipAliasTO : revokedIpAliasTOs) {\n            args = args + ipAliasTO.getAlias_count() + \":\" + ipAliasTO.getRouterip() + \":\" + ipAliasTO.getNetmask() + \"-\";\n        }\n        args = args + \"- \";\n        for (IpAliasTO ipAliasTO : activeIpAliasTOs) {\n            args = args + ipAliasTO.getAlias_count() + \":\" + ipAliasTO.getRouterip() + \":\" + ipAliasTO.getNetmask() + \"-\";\n        }\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Run command on domR \" + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + \", /root/deleteIpAlias \" + args);\n        }\n\n        try {\n            String controlIp = getRouterSshControlIp(cmd);\n            Pair<Boolean, String> result = SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null,\n                    \"/root/deleteIpAlias.sh \" + args);\n\n            if (!result.first()) {\n                s_logger.error(\"deleteIpAlias command on domr \" + controlIp + \" failed, message: \" + result.second());\n\n                return new Answer(cmd, false, \"deleteIpAlias failed due to \" + result.second());\n            }\n\n            if (s_logger.isInfoEnabled()) {\n                s_logger.info(\"deleteIpAlias command on domain router \" + controlIp + \" completed\");\n            }\n\n        } catch (Throwable e) {\n            String msg = \"deleteIpAlias failed due to \" + e.getMessage();\n            s_logger.error(msg, e);\n            return new Answer(cmd, false, msg);\n        }\n\n        return new Answer(cmd);\n    }","id":4849,"modified_method":"protected Answer execute(final DeleteIpAliasCommand cmd) {\n        cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);\n        List<IpAliasTO> revokedIpAliasTOs = cmd.getDeleteIpAliasTos();\n        List<IpAliasTO> activeIpAliasTOs = cmd.getCreateIpAliasTos();\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing deleteIpAlias command: \" + s_gson.toJson(cmd));\n        }\n        StringBuilder args = new StringBuilder();\n        for (IpAliasTO ipAliasTO : revokedIpAliasTOs) {\n            args.append(ipAliasTO.getAlias_count());\n            args.append(\":\");\n            args.append(ipAliasTO.getRouterip());\n            args.append(\":\");\n            args.append(ipAliasTO.getNetmask());\n            args.append(\"-\");\n        }\n        args.append(\"- \");\n        for (IpAliasTO ipAliasTO : activeIpAliasTOs) {\n            args.append(ipAliasTO.getAlias_count());\n            args.append(\":\");\n            args.append(ipAliasTO.getRouterip());\n            args.append(\":\");\n            args.append(ipAliasTO.getNetmask());\n            args.append(\"-\");\n        }\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Run command on domR \" + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + \", /root/deleteIpAlias \" + args);\n        }\n\n        try {\n            String controlIp = getRouterSshControlIp(cmd);\n            Pair<Boolean, String> result = SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null,\n                    \"/root/deleteIpAlias.sh \" + args);\n\n            if (!result.first()) {\n                s_logger.error(\"deleteIpAlias command on domr \" + controlIp + \" failed, message: \" + result.second());\n\n                return new Answer(cmd, false, \"deleteIpAlias failed due to \" + result.second());\n            }\n\n            if (s_logger.isInfoEnabled()) {\n                s_logger.info(\"deleteIpAlias command on domain router \" + controlIp + \" completed\");\n            }\n\n        } catch (Throwable e) {\n            String msg = \"deleteIpAlias failed due to \" + e.getMessage();\n            s_logger.error(msg, e);\n            return new Answer(cmd, false, msg);\n        }\n\n        return new Answer(cmd);\n    }","commit_id":"ad0d7f882f001ed6421e4aa40070a215ffb1fd3b","url":"https://github.com/apache/cloudstack"},{"original_method":"protected void assignPublicIpAddress(final String vmName, final String privateIpAddress, final String publicIpAddress, final boolean add, final boolean firstIP,\n            final boolean sourceNat, final String vlanId, final String vlanGateway, final String vlanNetmask, final String vifMacAddress) throws Exception {\n\n        boolean addVif = false;\n        boolean removeVif = false;\n        if (add) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Plug new NIC to associate\" + privateIpAddress + \" to \" + publicIpAddress);\n            }\n            addVif = true;\n        } else if (!add && firstIP) {\n            removeVif = true;\n        }\n\n        String args = null;\n\n        if (add) {\n            args = \" -A \";\n        } else {\n            args = \" -D \";\n        }\n\n        if (sourceNat) {\n            args += \" -s \";\n        }\n        if (firstIP) {\n            args += \" -f \";\n        }\n        String cidrSize = Long.toString(NetUtils.getCidrSize(vlanNetmask));\n        args += \" -l \";\n        args += publicIpAddress + \"/\" + cidrSize;\n\n        args += \" -c \";\n        args += \"eth\" +\"2\";  // currently hardcoding to eth 2 (which is default public ipd)//publicNicInfo.first();\n\n        args += \" -g \";\n        args += vlanGateway;\n\n        if (addVif) {\n            args += \" -n \";\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Run command on domain router \" + privateIpAddress + \", /opt/cloud/bin/ipassoc.sh \" + args);\n        }\n\n        Pair<Boolean, String> result = SshHelper.sshExecute(privateIpAddress, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null, \"/opt/cloud/bin/ipassoc.sh \" + args);\n\n        if (!result.first()) {\n            s_logger.error(\"ipassoc command on domain router \" + privateIpAddress + \" failed. message: \" + result.second());\n            throw new Exception(\"ipassoc failed due to \" + result.second());\n        }\n\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"ipassoc command on domain router \" + privateIpAddress + \" completed\");\n        }\n    }","id":4850,"modified_method":"protected void assignPublicIpAddress(final String vmName, final String privateIpAddress, final String publicIpAddress, final boolean add, final boolean firstIP,\n            final boolean sourceNat, final String vlanId, final String vlanGateway, final String vlanNetmask, final String vifMacAddress) throws Exception {\n\n        boolean addVif = false;\n        if (add) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Plug new NIC to associate\" + privateIpAddress + \" to \" + publicIpAddress);\n            }\n            addVif = true;\n        } else if (!add && firstIP) {\n        }\n\n        String args = null;\n\n        if (add) {\n            args = \" -A \";\n        } else {\n            args = \" -D \";\n        }\n\n        if (sourceNat) {\n            args += \" -s \";\n        }\n        if (firstIP) {\n            args += \" -f \";\n        }\n        String cidrSize = Long.toString(NetUtils.getCidrSize(vlanNetmask));\n        args += \" -l \";\n        args += publicIpAddress + \"/\" + cidrSize;\n\n        args += \" -c \";\n        args += \"eth\" +\"2\";  // currently hardcoding to eth 2 (which is default public ipd)//publicNicInfo.first();\n\n        args += \" -g \";\n        args += vlanGateway;\n\n        if (addVif) {\n            args += \" -n \";\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Run command on domain router \" + privateIpAddress + \", /opt/cloud/bin/ipassoc.sh \" + args);\n        }\n\n        Pair<Boolean, String> result = SshHelper.sshExecute(privateIpAddress, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null, \"/opt/cloud/bin/ipassoc.sh \" + args);\n\n        if (!result.first()) {\n            s_logger.error(\"ipassoc command on domain router \" + privateIpAddress + \" failed. message: \" + result.second());\n            throw new Exception(\"ipassoc failed due to \" + result.second());\n        }\n\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"ipassoc command on domain router \" + privateIpAddress + \" completed\");\n        }\n    }","commit_id":"ad0d7f882f001ed6421e4aa40070a215ffb1fd3b","url":"https://github.com/apache/cloudstack"},{"original_method":"protected Answer execute(final CreateIpAliasCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing createIpAlias command: \" + s_gson.toJson(cmd));\n        }\n        cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);\n        List<IpAliasTO> ipAliasTOs = cmd.getIpAliasList();\n        String args=\"\";\n        for (IpAliasTO ipaliasto : ipAliasTOs) {\n            args = args + ipaliasto.getAlias_count()+\":\"+ipaliasto.getRouterip()+\":\"+ipaliasto.getNetmask()+\"-\";\n        }\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Run command on domR \" + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + \", /root/createIpAlias \" + args);\n        }\n\n        try {\n            String controlIp = getRouterSshControlIp(cmd);\n            Pair<Boolean, String> result = SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null,\n                    \"/root/createIpAlias.sh \" + args);\n\n            if (!result.first()) {\n                s_logger.error(\"CreateIpAlias command on domr \" + controlIp + \" failed, message: \" + result.second());\n\n                return new Answer(cmd, false, \"createipAlias failed due to \" + result.second());\n            }\n\n            if (s_logger.isInfoEnabled()) {\n                s_logger.info(\"createIpAlias command on domain router \" + controlIp + \" completed\");\n            }\n\n        } catch (Throwable e) {\n            String msg = \"createIpAlias failed due to \" + e;\n            s_logger.error(msg, e);\n            return new Answer(cmd, false, msg);\n        }\n\n        return new Answer(cmd);\n    }","id":4851,"modified_method":"protected Answer execute(final CreateIpAliasCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing createIpAlias command: \" + s_gson.toJson(cmd));\n        }\n        cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);\n        List<IpAliasTO> ipAliasTOs = cmd.getIpAliasList();\n        StringBuilder args = new StringBuilder();\n        for (IpAliasTO ipaliasto : ipAliasTOs) {\n            args.append(ipaliasto.getAlias_count());\n            args.append(\":\");\n            args.append(ipaliasto.getRouterip());\n            args.append(\":\");\n            args.append(ipaliasto.getNetmask());\n            args.append(\"-\");\n        }\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Run command on domR \" + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + \", /root/createIpAlias \" + args);\n        }\n\n        try {\n            String controlIp = getRouterSshControlIp(cmd);\n            Pair<Boolean, String> result = SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null,\n                    \"/root/createIpAlias.sh \" + args);\n\n            if (!result.first()) {\n                s_logger.error(\"CreateIpAlias command on domr \" + controlIp + \" failed, message: \" + result.second());\n\n                return new Answer(cmd, false, \"createipAlias failed due to \" + result.second());\n            }\n\n            if (s_logger.isInfoEnabled()) {\n                s_logger.info(\"createIpAlias command on domain router \" + controlIp + \" completed\");\n            }\n\n        } catch (Throwable e) {\n            String msg = \"createIpAlias failed due to \" + e;\n            s_logger.error(msg, e);\n            return new Answer(cmd, false, msg);\n        }\n\n        return new Answer(cmd);\n    }","commit_id":"ad0d7f882f001ed6421e4aa40070a215ffb1fd3b","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public final PingCommand getCurrentStatus(final long id) {\n        PingCommand pingCmd = new PingRoutingCommand(getType(), id, null);\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Ping host \" + _name + \" (IP \" + _agentIp + \")\");\n        }\n\n        Answer pingAns = this.executeRequest(pingCmd);\n\n        if (pingAns == null || !pingAns.getResult()) {\n            s_logger.info(\"Cannot ping host \" + _name + \" (IP \" + _agentIp\n                    + \"), pingAns (blank means null) is:\" + pingAns);\n            return null;\n        }\n        return pingCmd;\n    }","id":4852,"modified_method":"@Override\n    public final PingCommand getCurrentStatus(final long id) {\n        PingCommand pingCmd = new PingRoutingCommand(getType(), id, null);\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Ping host \" + _name + \" (IP \" + _agentIp + \")\");\n        }\n\n        Answer pingAns = executeRequest(pingCmd);\n\n        if (pingAns == null || !pingAns.getResult()) {\n            s_logger.info(\"Cannot ping host \" + _name + \" (IP \" + _agentIp\n                    + \"), pingAns (blank means null) is:\" + pingAns);\n            return null;\n        }\n        return pingCmd;\n    }","commit_id":"ad0d7f882f001ed6421e4aa40070a215ffb1fd3b","url":"https://github.com/apache/cloudstack"},{"original_method":"protected Answer execute(final LoadBalancerConfigCommand cmd) {\n\n        if (cmd.getVpcId() != null) {\n            //return VPCLoadBalancerConfig(cmd);\n        }\n\n        File keyFile = getSystemVMKeyFile();\n\n        String routerIp = cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);\n        String controlIp = getRouterSshControlIp(cmd);\n\n        assert (controlIp != null);\n\n        LoadBalancerConfigurator cfgtr = new HAProxyConfigurator();\n        String[] config = cfgtr.generateConfiguration(cmd);\n\n        String[][] rules = cfgtr.generateFwRules(cmd);\n        String tmpCfgFilePath = \"/tmp/\" + routerIp.replace('.', '_') + \".cfg\";\n        String tmpCfgFileContents = \"\";\n        for (int i = 0; i < config.length; i++) {\n            tmpCfgFileContents += config[i];\n            tmpCfgFileContents += \"\\n\";\n        }\n\n        try {\n            SshHelper.scpTo(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", keyFile, null, \"/tmp/\", tmpCfgFileContents.getBytes(), routerIp.replace('.', '_') + \".cfg\", null);\n\n            try {\n                String[] addRules = rules[LoadBalancerConfigurator.ADD];\n                String[] removeRules = rules[LoadBalancerConfigurator.REMOVE];\n                String[] statRules = rules[LoadBalancerConfigurator.STATS];\n\n                String args = \"\";\n                args += \"-i \" + routerIp;\n                args += \" -f \" + tmpCfgFilePath;\n\n                StringBuilder sb = new StringBuilder();\n                if (addRules.length > 0) {\n                    for (int i = 0; i < addRules.length; i++) {\n                        sb.append(addRules[i]).append(',');\n                    }\n\n                    args += \" -a \" + sb.toString();\n                }\n\n                sb = new StringBuilder();\n                if (removeRules.length > 0) {\n                    for (int i = 0; i < removeRules.length; i++) {\n                        sb.append(removeRules[i]).append(',');\n                    }\n\n                    args += \" -d \" + sb.toString();\n                }\n\n                sb = new StringBuilder();\n                if (statRules.length > 0) {\n                    for (int i = 0; i < statRules.length; i++) {\n                        sb.append(statRules[i]).append(',');\n                    }\n\n                    args += \" -s \" + sb.toString();\n                }\n\n                Pair<Boolean, String> result = SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null, \"scp \" + tmpCfgFilePath\n                        + \" /etc/haproxy/haproxy.cfg.new\");\n\n                if (!result.first()) {\n                    s_logger.error(\"Unable to copy haproxy configuration file\");\n                    return new Answer(cmd, false, \"LoadBalancerConfigCommand failed due to uanble to copy haproxy configuration file\");\n                }\n\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Run command on domain router \" + routerIp + \",  /root/loadbalancer.sh \" + args);\n                }\n\n                result = SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null, \"/root/loadbalancer.sh \" + args);\n\n                if (!result.first()) {\n                    String msg = \"LoadBalancerConfigCommand on domain router \" + routerIp + \" failed. message: \" + result.second();\n                    s_logger.error(msg);\n\n                    return new Answer(cmd, false, msg);\n                }\n\n                if (s_logger.isInfoEnabled()) {\n                    s_logger.info(\"LoadBalancerConfigCommand on domain router \" + routerIp + \" completed\");\n                }\n            } finally {\n                SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null, \"rm \" + tmpCfgFilePath);\n            }\n\n            return new Answer(cmd);\n        } catch (Throwable e) {\n            s_logger.error(\"Unexpected exception: \" + e.toString(), e);\n            return new Answer(cmd, false, \"LoadBalancerConfigCommand failed due to \" + e.getMessage());\n        }\n    }","id":4853,"modified_method":"protected Answer execute(final LoadBalancerConfigCommand cmd) {\n\n        if (cmd.getVpcId() != null) {\n            //return VPCLoadBalancerConfig(cmd);\n        }\n\n        File keyFile = getSystemVMKeyFile();\n\n        String routerIp = cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);\n        String controlIp = getRouterSshControlIp(cmd);\n\n        assert (controlIp != null);\n\n        LoadBalancerConfigurator cfgtr = new HAProxyConfigurator();\n        String[] config = cfgtr.generateConfiguration(cmd);\n\n        String[][] rules = cfgtr.generateFwRules(cmd);\n        String tmpCfgFilePath = \"/tmp/\" + routerIp.replace('.', '_') + \".cfg\";\n        StringBuilder tmpCfgFileContents = new StringBuilder();\n        for (int i = 0; i < config.length; i++) {\n            tmpCfgFileContents.append(config[i]);\n            tmpCfgFileContents.append(\"\\n\");\n        }\n\n        try {\n            SshHelper.scpTo(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", keyFile, null, \"/tmp/\", tmpCfgFileContents.toString().getBytes(), routerIp.replace('.', '_') + \".cfg\", null);\n\n            try {\n                String[] addRules = rules[LoadBalancerConfigurator.ADD];\n                String[] removeRules = rules[LoadBalancerConfigurator.REMOVE];\n                String[] statRules = rules[LoadBalancerConfigurator.STATS];\n\n                String args = \"\";\n                args += \"-i \" + routerIp;\n                args += \" -f \" + tmpCfgFilePath;\n\n                StringBuilder sb = new StringBuilder();\n                if (addRules.length > 0) {\n                    for (int i = 0; i < addRules.length; i++) {\n                        sb.append(addRules[i]).append(',');\n                    }\n\n                    args += \" -a \" + sb.toString();\n                }\n\n                sb = new StringBuilder();\n                if (removeRules.length > 0) {\n                    for (int i = 0; i < removeRules.length; i++) {\n                        sb.append(removeRules[i]).append(',');\n                    }\n\n                    args += \" -d \" + sb.toString();\n                }\n\n                sb = new StringBuilder();\n                if (statRules.length > 0) {\n                    for (int i = 0; i < statRules.length; i++) {\n                        sb.append(statRules[i]).append(',');\n                    }\n\n                    args += \" -s \" + sb.toString();\n                }\n\n                Pair<Boolean, String> result = SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null, \"scp \" + tmpCfgFilePath\n                        + \" /etc/haproxy/haproxy.cfg.new\");\n\n                if (!result.first()) {\n                    s_logger.error(\"Unable to copy haproxy configuration file\");\n                    return new Answer(cmd, false, \"LoadBalancerConfigCommand failed due to uanble to copy haproxy configuration file\");\n                }\n\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Run command on domain router \" + routerIp + \",  /root/loadbalancer.sh \" + args);\n                }\n\n                result = SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null, \"/root/loadbalancer.sh \" + args);\n\n                if (!result.first()) {\n                    String msg = \"LoadBalancerConfigCommand on domain router \" + routerIp + \" failed. message: \" + result.second();\n                    s_logger.error(msg);\n\n                    return new Answer(cmd, false, msg);\n                }\n\n                if (s_logger.isInfoEnabled()) {\n                    s_logger.info(\"LoadBalancerConfigCommand on domain router \" + routerIp + \" completed\");\n                }\n            } finally {\n                SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null, \"rm \" + tmpCfgFilePath);\n            }\n\n            return new Answer(cmd);\n        } catch (Throwable e) {\n            s_logger.error(\"Unexpected exception: \" + e.toString(), e);\n            return new Answer(cmd, false, \"LoadBalancerConfigCommand failed due to \" + e.getMessage());\n        }\n    }","commit_id":"ad0d7f882f001ed6421e4aa40070a215ffb1fd3b","url":"https://github.com/apache/cloudstack"},{"original_method":"protected Answer execute(final DnsMasqConfigCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing dnsmasqConfig command: \" + s_gson.toJson(cmd));\n        }\n        String routerIp = cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);\n        String controlIp = getRouterSshControlIp(cmd);\n\n        assert(controlIp != null);\n\n        List<DhcpTO> dhcpTos = cmd.getIps();\n        String args =\"\";\n        for(DhcpTO dhcpTo : dhcpTos) {\n            args = args + dhcpTo.getRouterIp()+\":\"+dhcpTo.getGateway()+\":\"+dhcpTo.getNetmask()+\":\"+dhcpTo.getStartIpOfSubnet()+\"-\";\n        }\n\n        try {\n            Pair<Boolean, String> result = SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null, \"/root/dnsmasq.sh \" + args);\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Run command on domain router \" + routerIp + \",  /root/dnsmasq.sh\");\n            }\n\n            if (!result.first()) {\n                s_logger.error(\"Unable update dnsmasq config file\");\n                return new Answer(cmd, false, \"dnsmasq config update failed due to: \" + result.second());\n            }\n\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"dnsmasq config command on domain router \" + routerIp + \" completed\");\n            }\n        }catch (Throwable e) {\n            String msg = \"Dnsmasqconfig command failed due to \" + e.getMessage();\n            s_logger.error(msg, e);\n            return new Answer(cmd, false, msg);\n        }\n\n        return new Answer(cmd);\n    }","id":4854,"modified_method":"protected Answer execute(final DnsMasqConfigCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing dnsmasqConfig command: \" + s_gson.toJson(cmd));\n        }\n        String routerIp = cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);\n        String controlIp = getRouterSshControlIp(cmd);\n\n        assert(controlIp != null);\n\n        List<DhcpTO> dhcpTos = cmd.getIps();\n        StringBuilder args = new StringBuilder();\n        for(DhcpTO dhcpTo : dhcpTos) {\n            args.append(dhcpTo.getRouterIp());\n            args.append(\":\");\n            args.append(dhcpTo.getGateway());\n            args.append(\":\");\n            args.append(dhcpTo.getNetmask());\n            args.append(\":\");\n            args.append(dhcpTo.getStartIpOfSubnet());\n            args.append(\"-\");\n        }\n\n        try {\n            Pair<Boolean, String> result = SshHelper.sshExecute(controlIp, DEFAULT_DOMR_SSHPORT, \"root\", getSystemVMKeyFile(), null, \"/root/dnsmasq.sh \" + args);\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Run command on domain router \" + routerIp + \",  /root/dnsmasq.sh\");\n            }\n\n            if (!result.first()) {\n                s_logger.error(\"Unable update dnsmasq config file\");\n                return new Answer(cmd, false, \"dnsmasq config update failed due to: \" + result.second());\n            }\n\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"dnsmasq config command on domain router \" + routerIp + \" completed\");\n            }\n        }catch (Throwable e) {\n            String msg = \"Dnsmasqconfig command failed due to \" + e.getMessage();\n            s_logger.error(msg, e);\n            return new Answer(cmd, false, msg);\n        }\n\n        return new Answer(cmd);\n    }","commit_id":"ad0d7f882f001ed6421e4aa40070a215ffb1fd3b","url":"https://github.com/apache/cloudstack"},{"original_method":"protected Answer execute(NetworkUsageCommand cmd) {\n        if ( cmd.isForVpc() ) {\n            //return VPCNetworkUsage(cmd);\n        }\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource NetworkUsageCommand \"+ s_gson.toJson(cmd));\n        }\n        if(cmd.getOption()!=null && cmd.getOption().equals(\"create\") ){\n            String result = networkUsage(cmd.getPrivateIP(), \"create\", null);\n            NetworkUsageAnswer answer = new NetworkUsageAnswer(cmd, \"true\", 0L, 0L);\n            return answer;\n        }\n        long[] stats = getNetworkStats(cmd.getPrivateIP());\n\n        NetworkUsageAnswer answer = new NetworkUsageAnswer(cmd, \"\", stats[0], stats[1]);\n        return answer;\n    }","id":4855,"modified_method":"protected Answer execute(NetworkUsageCommand cmd) {\n        if ( cmd.isForVpc() ) {\n            //return VPCNetworkUsage(cmd);\n        }\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource NetworkUsageCommand \"+ s_gson.toJson(cmd));\n        }\n        if(cmd.getOption()!=null && cmd.getOption().equals(\"create\") ){\n            networkUsage(cmd.getPrivateIP(), \"create\", null);\n            NetworkUsageAnswer answer = new NetworkUsageAnswer(cmd, \"true\", 0L, 0L);\n            return answer;\n        }\n        long[] stats = getNetworkStats(cmd.getPrivateIP());\n\n        NetworkUsageAnswer answer = new NetworkUsageAnswer(cmd, \"\", stats[0], stats[1]);\n        return answer;\n    }","commit_id":"ad0d7f882f001ed6421e4aa40070a215ffb1fd3b","url":"https://github.com/apache/cloudstack"},{"original_method":"/** {@inheritDoc} */\n        public Set keySet()\n        {\n            Set keynames = super.keySet();\n            Vector list = new Vector( keynames );\n            Collections.sort( list );\n\n            return new LinkedHashSet( list );\n        }","id":4856,"modified_method":"/** {@inheritDoc} */\n        public Set<Object> keySet()\n        {\n            Set<Object>keynames = super.keySet();\n            Vector list = new Vector( keynames );\n            Collections.sort( list );\n\n            return new LinkedHashSet<Object>( list );\n        }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Add a Pom/Settings namespaces to the effective XML content.\n     *\n     * @param effectiveXml not null the effective POM or Settings\n     * @param isPom if <code>true<\/code> add the Pom xsd url, otherwise add the settings xsd url.\n     * @return the content of the root element, i.e. &lt;project/&gt; or &lt;settings/&gt; with the Maven namespace\n     * or the original <code>effective<\/code> if an error occurred.\n     * @see #POM_XSD_URL\n     * @see #SETTINGS_XSD_URL\n     */\n    protected static String addMavenNamespace( String effectiveXml, boolean isPom )\n    {\n        SAXBuilder builder = new SAXBuilder();\n\n        try\n        {\n            Document document = builder.build( new StringReader( effectiveXml ) );\n            Element rootElement = document.getRootElement();\n\n            // added namespaces\n            Namespace pomNamespace = Namespace.getNamespace( \"\", \"http://maven.apache.org/POM/4.0.0\" );\n            rootElement.setNamespace( pomNamespace );\n\n            Namespace xsiNamespace = Namespace.getNamespace( \"xsi\", \"http://www.w3.org/2001/XMLSchema-instance\" );\n            rootElement.addNamespaceDeclaration( xsiNamespace );\n            if ( rootElement.getAttribute( \"schemaLocation\", xsiNamespace ) == null )\n            {\n                rootElement.setAttribute( \"schemaLocation\", \"http://maven.apache.org/POM/4.0.0 \"\n                    + ( isPom ? POM_XSD_URL : SETTINGS_XSD_URL ), xsiNamespace );\n            }\n\n            ElementFilter elementFilter = new ElementFilter( Namespace.getNamespace( \"\" ) );\n            for ( Iterator i = rootElement.getDescendants( elementFilter ); i.hasNext(); )\n            {\n                Element e = (Element) i.next();\n                e.setNamespace( pomNamespace );\n            }\n\n            StringWriter w = new StringWriter();\n            Format format = Format.getPrettyFormat();\n            XMLOutputter out = new XMLOutputter( format );\n            out.output( document.getRootElement(), w );\n\n            return w.toString();\n        }\n        catch ( JDOMException e )\n        {\n            return effectiveXml;\n        }\n        catch ( IOException e )\n        {\n            return effectiveXml;\n        }\n    }","id":4857,"modified_method":"/**\n     * Add a Pom/Settings namespaces to the effective XML content.\n     *\n     * @param effectiveXml not null the effective POM or Settings\n     * @param isPom if <code>true<\/code> add the Pom xsd url, otherwise add the settings xsd url.\n     * @return the content of the root element, i.e. &lt;project/&gt; or &lt;settings/&gt; with the Maven namespace\n     * or the original <code>effective<\/code> if an error occurred.\n     * @see #POM_XSD_URL\n     * @see #SETTINGS_XSD_URL\n     */\n    protected static String addMavenNamespace( String effectiveXml, boolean isPom )\n    {\n        SAXBuilder builder = new SAXBuilder();\n\n        try\n        {\n            Document document = builder.build( new StringReader( effectiveXml ) );\n            Element rootElement = document.getRootElement();\n\n            // added namespaces\n            Namespace pomNamespace = Namespace.getNamespace( \"\", \"http://maven.apache.org/POM/4.0.0\" );\n            rootElement.setNamespace( pomNamespace );\n\n            Namespace xsiNamespace = Namespace.getNamespace( \"xsi\", \"http://www.w3.org/2001/XMLSchema-instance\" );\n            rootElement.addNamespaceDeclaration( xsiNamespace );\n            if ( rootElement.getAttribute( \"schemaLocation\", xsiNamespace ) == null )\n            {\n                rootElement.setAttribute( \"schemaLocation\", \"http://maven.apache.org/POM/4.0.0 \"\n                    + ( isPom ? POM_XSD_URL : SETTINGS_XSD_URL ), xsiNamespace );\n            }\n\n            ElementFilter elementFilter = new ElementFilter( Namespace.getNamespace( \"\" ) );\n            for ( Iterator<?> i = rootElement.getDescendants( elementFilter ); i.hasNext(); )\n            {\n                Element e = (Element) i.next();\n                e.setNamespace( pomNamespace );\n            }\n\n            StringWriter w = new StringWriter();\n            Format format = Format.getPrettyFormat();\n            XMLOutputter out = new XMLOutputter( format );\n            out.output( document.getRootElement(), w );\n\n            return w.toString();\n        }\n        catch ( JDOMException e )\n        {\n            return effectiveXml;\n        }\n        catch ( IOException e )\n        {\n            return effectiveXml;\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/** {@inheritDoc} */\n    public void execute()\n        throws MojoExecutionException\n    {\n        StringBuilder message = new StringBuilder();\n\n        for ( Iterator it = projects.iterator(); it.hasNext(); )\n        {\n            MavenProject project = (MavenProject) it.next();\n\n            getActiveProfileStatement( project, message );\n\n            message.append( \"\\n\\n\" );\n        }\n\n        if ( output != null )\n        {\n            StringBuilder sb = new StringBuilder();\n            sb.append( \"Created by: \" + getClass().getName() ).append( \"\\n\" );\n            sb.append( \"Created on: \" + new Date() ).append( \"\\n\" ).append( \"\\n\" );\n            sb.append( message.toString() );\n\n            try\n            {\n                writeFile( output, sb );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write active profiles to output: \" + output, e );\n            }\n\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( \"Active profile report written to: \" + output );\n            }\n        }\n        else\n        {\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( message );\n            }\n        }\n    }","id":4858,"modified_method":"/** {@inheritDoc} */\n    public void execute()\n        throws MojoExecutionException\n    {\n        StringBuilder message = new StringBuilder();\n\n        for ( MavenProject project : projects )\n        {\n            getActiveProfileStatement( project, message );\n\n            message.append( \"\\n\\n\" );\n        }\n\n        if ( output != null )\n        {\n            StringBuilder sb = new StringBuilder();\n            sb.append( \"Created by: \" + getClass().getName() ).append( \"\\n\" );\n            sb.append( \"Created on: \" + new Date() ).append( \"\\n\" ).append( \"\\n\" );\n            sb.append( message.toString() );\n\n            try\n            {\n                writeFile( output, sb );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write active profiles to output: \" + output, e );\n            }\n\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( \"Active profile report written to: \" + output );\n            }\n        }\n        else\n        {\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( message );\n            }\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Method to get the active profiles for the project\n     *\n     * @param project   the current project\n     * @param message   the object where the information will be appended to\n     */\n    private void getActiveProfileStatement( MavenProject project, StringBuilder message )\n    {\n        // Get active profiles into our own list,\n        // since we'll be modifying it, further below\n        List profiles = new ArrayList( project.getActiveProfiles() );\n\n        message.append( \"\\n\" );\n\n        message.append( \"Active Profiles for Project \\'\" + project.getId() + \"\\': \\n\\n\" );\n\n        if ( profiles == null || profiles.isEmpty() )\n        {\n            message.append( \"There are no active profiles.\" );\n        }\n        else\n        {\n            message.append( \"The following profiles are active:\\n\" );\n\n            for ( Iterator it = profiles.iterator(); it.hasNext(); )\n            {\n                Profile profile = (Profile) it.next();\n\n                message.append( \"\\n - \" ).append( profile.getId() );\n                message.append( \" (source: \" ).append( profile.getSource() ).append( \")\" );\n            }\n\n        }\n\n        message.append( \"\\n\" );\n    }","id":4859,"modified_method":"/**\n     * Method to get the active profiles for the project\n     *\n     * @param project   the current project\n     * @param message   the object where the information will be appended to\n     */\n    private void getActiveProfileStatement( MavenProject project, StringBuilder message )\n    {\n        // Get active profiles into our own list,\n        // since we'll be modifying it, further below\n        @SuppressWarnings( \"unchecked\" )\n        List<Profile> profiles = new ArrayList<Profile>( project.getActiveProfiles() );\n\n        message.append( \"\\n\" );\n\n        message.append( \"Active Profiles for Project \\'\" + project.getId() + \"\\': \\n\\n\" );\n\n        if ( profiles == null || profiles.isEmpty() )\n        {\n            message.append( \"There are no active profiles.\" );\n        }\n        else\n        {\n            message.append( \"The following profiles are active:\\n\" );\n\n            for ( Profile profile : profiles )\n            {\n                message.append( \"\\n - \" ).append( profile.getId() );\n                message.append( \" (source: \" ).append( profile.getSource() ).append( \")\" );\n            }\n\n        }\n\n        message.append( \"\\n\" );\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Load profiles from <code>pom.xml<\/code>.\n     *\n     * @param profilesManager not null\n     * @param project could be null\n     */\n    private void loadProjectPomProfiles( ProfileManager profilesManager, MavenProject project )\n    {\n        if ( project == null )\n        {\n            // shouldn't happen as this mojo requires a project\n            if ( getLog().isDebugEnabled() )\n            {\n                getLog().debug( \"No pom.xml found to read Profiles from.\" );\n            }\n\n            return;\n        }\n\n        if ( getLog().isDebugEnabled() )\n        {\n            getLog().debug( \"Attempting to read profiles from pom.xml...\" );\n        }\n\n        // Attempt to obtain the list of profiles from pom.xml\n        Iterator it = project.getModel().getProfiles().iterator();\n        while ( it.hasNext() )\n        {\n            Profile profile = (Profile) it.next();\n\n            profilesManager.addProfile( profile );\n            profilesManager.explicitlyActivate( profile.getId() );\n        }\n\n        MavenProject parent = project.getParent();\n        while( parent != null )\n        {\n            Iterator it2 = parent.getModel().getProfiles().iterator();\n            while ( it2.hasNext() )\n            {\n                Profile profile = (Profile) it2.next();\n\n                profilesManager.addProfile( profile );\n                profilesManager.explicitlyActivate( profile.getId() );\n            }\n\n            parent = parent.getParent();\n        }\n    }","id":4860,"modified_method":"/**\n     * Load profiles from <code>pom.xml<\/code>.\n     *\n     * @param profilesManager not null\n     * @param project could be null\n     */\n    private void loadProjectPomProfiles( ProfileManager profilesManager, MavenProject project )\n    {\n        if ( project == null )\n        {\n            // shouldn't happen as this mojo requires a project\n            if ( getLog().isDebugEnabled() )\n            {\n                getLog().debug( \"No pom.xml found to read Profiles from.\" );\n            }\n\n            return;\n        }\n\n        if ( getLog().isDebugEnabled() )\n        {\n            getLog().debug( \"Attempting to read profiles from pom.xml...\" );\n        }\n\n        // Attempt to obtain the list of profiles from pom.xml\n        @SuppressWarnings( \"unchecked\" )\n        List<Profile> profiles = project.getModel().getProfiles();\n        for ( Profile profile : profiles )\n        {\n            profilesManager.addProfile( profile );\n            profilesManager.explicitlyActivate( profile.getId() );\n        }\n\n        MavenProject parent = project.getParent();\n        while( parent != null )\n        {\n            @SuppressWarnings( \"unchecked\" )\n            List<Profile> profiles2 = parent.getModel().getProfiles();\n            for ( Profile profile : profiles2 )\n            {\n                profilesManager.addProfile( profile );\n                profilesManager.explicitlyActivate( profile.getId() );\n            }\n\n            parent = parent.getParent();\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Load profiles from <code>settings.xml<\/code>.\n     *\n     * @param profileManager not null\n     * @param settings could be null\n     */\n    private void loadSettingsProfiles( ProfileManager profileManager, Settings settings )\n    {\n        if ( settings == null )\n        {\n            if ( getLog().isDebugEnabled() )\n            {\n                getLog().debug( \"No settings.xml detected.\" );\n            }\n\n            return;\n        }\n\n        if ( getLog().isDebugEnabled() )\n        {\n            getLog().debug( \"Attempting to read profiles from settings.xml...\" );\n        }\n\n        Iterator it = settings.getProfiles().iterator();\n        while ( it.hasNext() )\n        {\n            org.apache.maven.settings.Profile rawProfile = (org.apache.maven.settings.Profile) it.next();\n\n            Profile profile = SettingsUtils.convertFromSettingsProfile( rawProfile );\n            profileManager.addProfile( profile );\n            profileManager.explicitlyActivate( profile.getId() );\n        }\n    }","id":4861,"modified_method":"/**\n     * Load profiles from <code>settings.xml<\/code>.\n     *\n     * @param profileManager not null\n     * @param settings could be null\n     */\n    private void loadSettingsProfiles( ProfileManager profileManager, Settings settings )\n    {\n        if ( settings == null )\n        {\n            if ( getLog().isDebugEnabled() )\n            {\n                getLog().debug( \"No settings.xml detected.\" );\n            }\n\n            return;\n        }\n\n        if ( getLog().isDebugEnabled() )\n        {\n            getLog().debug( \"Attempting to read profiles from settings.xml...\" );\n        }\n\n        @SuppressWarnings( \"unchecked\" )\n        List<org.apache.maven.settings.Profile> profiles = settings.getProfiles();\n        for ( org.apache.maven.settings.Profile rawProfile : profiles )\n        {\n            Profile profile = SettingsUtils.convertFromSettingsProfile( rawProfile );\n            profileManager.addProfile( profile );\n            profileManager.explicitlyActivate( profile.getId() );\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Loads up external Profiles using <code>profiles.xml<\/code> (if any) located in the current\n     * project's <code>${basedir}<\/code>.\n     *\n     * @param profileManager ProfileManager instance to use to load profiles from external Profiles.\n     * @param projectDir location of the current project, could be null.\n     * @throws ProfileActivationException, if there was an error loading profiles.\n     */\n    private void loadProjectExternalProfiles( ProfileManager profileManager, File projectDir )\n        throws ProfileActivationException\n    {\n        if ( projectDir == null )\n        {\n            return;\n        }\n\n        if ( getLog().isDebugEnabled() )\n        {\n            getLog().debug( \"Attempting to read profiles from external profiles.xml...\" );\n        }\n\n        try\n        {\n            DefaultMavenProfilesBuilder profilesBuilder = new DefaultMavenProfilesBuilder();\n            ProfilesRoot root = profilesBuilder.buildProfiles( projectDir );\n            if ( root != null )\n            {\n                for ( Iterator it = root.getProfiles().iterator(); it.hasNext(); )\n                {\n                    org.apache.maven.profiles.Profile rawProfile = (org.apache.maven.profiles.Profile) it.next();\n\n                    Profile converted = ProfilesConversionUtils.convertFromProfileXmlProfile( rawProfile );\n                    profileManager.addProfile( converted );\n                    profileManager.explicitlyActivate( converted.getId() );\n                }\n            }\n            else if ( getLog().isDebugEnabled() )\n            {\n                getLog().debug( \"ProfilesRoot was found to be NULL\" );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new ProfileActivationException( \"Cannot read profiles.xml resource from directory: \"\n                + projectDir, e );\n        }\n        catch ( XmlPullParserException e )\n        {\n            throw new ProfileActivationException( \"Cannot parse profiles.xml resource from directory: \"\n                + projectDir, e );\n        }\n    }","id":4862,"modified_method":"/**\n     * Loads up external Profiles using <code>profiles.xml<\/code> (if any) located in the current\n     * project's <code>${basedir}<\/code>.\n     *\n     * @param profileManager ProfileManager instance to use to load profiles from external Profiles.\n     * @param projectDir location of the current project, could be null.\n     * @throws ProfileActivationException, if there was an error loading profiles.\n     */\n    private void loadProjectExternalProfiles( ProfileManager profileManager, File projectDir )\n        throws ProfileActivationException\n    {\n        if ( projectDir == null )\n        {\n            return;\n        }\n\n        if ( getLog().isDebugEnabled() )\n        {\n            getLog().debug( \"Attempting to read profiles from external profiles.xml...\" );\n        }\n\n        try\n        {\n            DefaultMavenProfilesBuilder profilesBuilder = new DefaultMavenProfilesBuilder();\n            ProfilesRoot root = profilesBuilder.buildProfiles( projectDir );\n            if ( root != null )\n            {\n                @SuppressWarnings( \"unchecked\" )\n                List<org.apache.maven.profiles.Profile> profiles = root.getProfiles(); \n                for ( org.apache.maven.profiles.Profile rawProfile : profiles )\n                {\n                    Profile converted = ProfilesConversionUtils.convertFromProfileXmlProfile( rawProfile );\n                    profileManager.addProfile( converted );\n                    profileManager.explicitlyActivate( converted.getId() );\n                }\n            }\n            else if ( getLog().isDebugEnabled() )\n            {\n                getLog().debug( \"ProfilesRoot was found to be NULL\" );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new ProfileActivationException( \"Cannot read profiles.xml resource from directory: \"\n                + projectDir, e );\n        }\n        catch ( XmlPullParserException e )\n        {\n            throw new ProfileActivationException( \"Cannot parse profiles.xml resource from directory: \"\n                + projectDir, e );\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/** {@inheritDoc} */\n    public void execute()\n        throws MojoExecutionException, MojoFailureException\n    {\n        StringBuilder descriptionBuffer = new StringBuilder();\n\n        for ( Iterator iter = projects.iterator(); iter.hasNext(); )\n        {\n            MavenProject project = (MavenProject) iter.next();\n\n            descriptionBuffer.append( \"Listing Profiles for Project: \" ).append( project.getId() ).append( \"\\n\" );\n\n            DefaultProfileManager pm =\n                new DefaultProfileManager( session.getContainer(), session.getExecutionProperties() );\n\n            // Obtain Profiles from external profiles.xml\n            try\n            {\n                loadProjectExternalProfiles( pm, project.getBasedir() );\n            }\n            catch ( ProfileActivationException e )\n            {\n                throw new MojoExecutionException( \"Error obtaining external Profiles:\" + e.getMessage(), e );\n            }\n\n            // Attempt to obtain settings profiles\n            loadSettingsProfiles( pm, session.getSettings() );\n\n            // Attempt to obtain profiles from pom.xml\n            loadProjectPomProfiles( pm, project );\n\n            // now display\n            if ( null == pm.getExplicitlyActivatedIds() || pm.getExplicitlyActivatedIds().size() == 0 )\n            {\n                if ( getLog().isWarnEnabled() )\n                {\n                    getLog().warn( \"No profiles detected!\" );\n                }\n            }\n            else\n            {\n                // This feels more like a hack to filter out inactive profiles, there is no 'direct'\n                // way to query activation status on a Profile instance.\n                Map allProfilesByIds = pm.getProfilesById();\n\n                // active Profiles will be a subset of *all* profiles\n                List activeProfiles = project.getActiveProfiles();\n                for ( Iterator itr = activeProfiles.iterator(); itr.hasNext(); )\n                {\n                    Profile activeProfile = (Profile) itr.next();\n\n                    // we already have the active profiles for the project, so remove them from the list of all\n                    // profiles.\n                    allProfilesByIds.remove( activeProfile.getId() );\n                }\n\n                // display active profiles\n                for ( Iterator it = activeProfiles.iterator(); it.hasNext(); )\n                {\n                    Profile p = (Profile) it.next();\n\n                    descriptionBuffer.append( \"  Profile Id: \" ).append( p.getId() );\n                    descriptionBuffer.append( \" (Active: true , Source: \" ).append( p.getSource() ).append( \")\\n\" );\n                }\n\n                // display inactive profiles\n                Iterator it = allProfilesByIds.keySet().iterator();\n                while ( it.hasNext() )\n                {\n                    Profile p = (Profile) allProfilesByIds.get( (String) it.next() );\n\n                    descriptionBuffer.append( \"  Profile Id: \" ).append( p.getId() );\n                    descriptionBuffer.append( \" (Active: false , Source: \" ).append( p.getSource() ).append( \")\\n\" );\n                }\n            }\n        }\n\n        if ( output != null )\n        {\n            try\n            {\n                writeFile( output, descriptionBuffer );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write profiles description to output: \" + output, e );\n            }\n\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( \"Wrote descriptions to: \" + output );\n            }\n        }\n        else\n        {\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( descriptionBuffer.toString() );\n            }\n        }\n    }","id":4863,"modified_method":"/** {@inheritDoc} */\n    public void execute()\n        throws MojoExecutionException, MojoFailureException\n    {\n        StringBuilder descriptionBuffer = new StringBuilder();\n\n        for ( MavenProject project : projects )\n        {\n            descriptionBuffer.append( \"Listing Profiles for Project: \" ).append( project.getId() ).append( \"\\n\" );\n\n            DefaultProfileManager pm =\n                new DefaultProfileManager( session.getContainer(), session.getExecutionProperties() );\n\n            // Obtain Profiles from external profiles.xml\n            try\n            {\n                loadProjectExternalProfiles( pm, project.getBasedir() );\n            }\n            catch ( ProfileActivationException e )\n            {\n                throw new MojoExecutionException( \"Error obtaining external Profiles:\" + e.getMessage(), e );\n            }\n\n            // Attempt to obtain settings profiles\n            loadSettingsProfiles( pm, session.getSettings() );\n\n            // Attempt to obtain profiles from pom.xml\n            loadProjectPomProfiles( pm, project );\n\n            // now display\n            if ( null == pm.getExplicitlyActivatedIds() || pm.getExplicitlyActivatedIds().size() == 0 )\n            {\n                if ( getLog().isWarnEnabled() )\n                {\n                    getLog().warn( \"No profiles detected!\" );\n                }\n            }\n            else\n            {\n                // This feels more like a hack to filter out inactive profiles, there is no 'direct'\n                // way to query activation status on a Profile instance.\n                @SuppressWarnings( \"unchecked\" )\n                Map<String, Profile> allProfilesByIds = pm.getProfilesById();\n\n                // active Profiles will be a subset of *all* profiles\n                @SuppressWarnings( \"unchecked\" )\n                List<Profile> activeProfiles = project.getActiveProfiles();\n                for ( Profile activeProfile : activeProfiles )\n                {\n                    // we already have the active profiles for the project, so remove them from the list of all\n                    // profiles.\n                    allProfilesByIds.remove( activeProfile.getId() );\n                }\n\n                // display active profiles\n                for ( Profile p : activeProfiles )\n                {\n                    descriptionBuffer.append( \"  Profile Id: \" ).append( p.getId() );\n                    descriptionBuffer.append( \" (Active: true , Source: \" ).append( p.getSource() ).append( \")\\n\" );\n                }\n\n                // display inactive profiles\n                for ( Profile p : allProfilesByIds.values() )\n                {\n                    descriptionBuffer.append( \"  Profile Id: \" ).append( p.getId() );\n                    descriptionBuffer.append( \" (Active: false , Source: \" ).append( p.getSource() ).append( \")\\n\" );\n                }\n            }\n        }\n\n        if ( output != null )\n        {\n            try\n            {\n                writeFile( output, descriptionBuffer );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write profiles description to output: \" + output, e );\n            }\n\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( \"Wrote descriptions to: \" + output );\n            }\n        }\n        else\n        {\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( descriptionBuffer.toString() );\n            }\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Append a description to the buffer by respecting the indentSize and lineLength parameters for the first line,\n     * and append the next lines with <code>indent + 1<\/code> like a paragraph.\n     * <b>Note<\/b>: The last character is always a new line.\n     *\n     * @param sb     The buffer to append the description, not <code>null<\/code>.\n     * @param key    The key, not <code>null<\/code>.\n     * @param value  The value, could be <code>null<\/code>.\n     * @param indent The base indentation level of each line, must not be negative.\n     * @throws MojoFailureException   if any reflection exceptions occur.\n     * @throws MojoExecutionException if any\n     * @see #toLines(String, int, int, int)\n     */\n    private static void appendAsParagraph( StringBuilder sb, String key, String value, int indent )\n        throws MojoFailureException, MojoExecutionException\n    {\n        if ( StringUtils.isEmpty( value ) )\n        {\n            value = UNKNOWN;\n        }\n\n        String description;\n        if ( key == null )\n        {\n            description = value;\n        }\n        else\n        {\n            description = key + \": \" + value;\n        }\n\n        List l1 = toLines( description, indent, INDENT_SIZE, LINE_LENGTH - INDENT_SIZE );\n        List l2 = toLines( description, indent + 1, INDENT_SIZE, LINE_LENGTH );\n        l2.set( 0, l1.get( 0 ) );\n        for ( Iterator it = l2.iterator(); it.hasNext(); )\n        {\n            sb.append( it.next().toString() ).append( '\\n' );\n        }\n    }","id":4864,"modified_method":"/**\n     * Append a description to the buffer by respecting the indentSize and lineLength parameters for the first line,\n     * and append the next lines with <code>indent + 1<\/code> like a paragraph.\n     * <b>Note<\/b>: The last character is always a new line.\n     *\n     * @param sb     The buffer to append the description, not <code>null<\/code>.\n     * @param key    The key, not <code>null<\/code>.\n     * @param value  The value, could be <code>null<\/code>.\n     * @param indent The base indentation level of each line, must not be negative.\n     * @throws MojoFailureException   if any reflection exceptions occur.\n     * @throws MojoExecutionException if any\n     * @see #toLines(String, int, int, int)\n     */\n    private static void appendAsParagraph( StringBuilder sb, String key, String value, int indent )\n        throws MojoFailureException, MojoExecutionException\n    {\n        if ( StringUtils.isEmpty( value ) )\n        {\n            value = UNKNOWN;\n        }\n\n        String description;\n        if ( key == null )\n        {\n            description = value;\n        }\n        else\n        {\n            description = key + \": \" + value;\n        }\n\n        List<String> l1 = toLines( description, indent, INDENT_SIZE, LINE_LENGTH - INDENT_SIZE );\n        List<String> l2 = toLines( description, indent + 1, INDENT_SIZE, LINE_LENGTH );\n        l2.set( 0, l1.get( 0 ) );\n        for ( String line : l2 )\n        {\n            sb.append( line ).append( '\\n' );\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Append a description to the buffer by respecting the indentSize and lineLength parameters.\n     * <b>Note<\/b>: The last character is always a new line.\n     *\n     * @param sb     The buffer to append the description, not <code>null<\/code>.\n     * @param key    The key, not <code>null<\/code>.\n     * @param value  The value associated to the key, could be <code>null<\/code>.\n     * @param indent The base indentation level of each line, must not be negative.\n     * @throws MojoFailureException   if any reflection exceptions occur.\n     * @throws MojoExecutionException if any\n     * @see #toLines(String, int, int, int)\n     */\n    private static void append( StringBuilder sb, String key, String value, int indent )\n        throws MojoFailureException, MojoExecutionException\n    {\n        if ( StringUtils.isEmpty( key ) )\n        {\n            throw new IllegalArgumentException( \"Key is required!\" );\n        }\n\n        if ( StringUtils.isEmpty( value ) )\n        {\n            value = UNKNOWN;\n        }\n\n        String description = key + \": \" + value;\n        for ( Iterator it = toLines( description, indent, INDENT_SIZE, LINE_LENGTH ).iterator(); it.hasNext(); )\n        {\n            sb.append( it.next().toString() ).append( '\\n' );\n        }\n    }","id":4865,"modified_method":"/**\n     * Append a description to the buffer by respecting the indentSize and lineLength parameters.\n     * <b>Note<\/b>: The last character is always a new line.\n     *\n     * @param sb     The buffer to append the description, not <code>null<\/code>.\n     * @param key    The key, not <code>null<\/code>.\n     * @param value  The value associated to the key, could be <code>null<\/code>.\n     * @param indent The base indentation level of each line, must not be negative.\n     * @throws MojoFailureException   if any reflection exceptions occur.\n     * @throws MojoExecutionException if any\n     * @see #toLines(String, int, int, int)\n     */\n    private static void append( StringBuilder sb, String key, String value, int indent )\n        throws MojoFailureException, MojoExecutionException\n    {\n        if ( StringUtils.isEmpty( key ) )\n        {\n            throw new IllegalArgumentException( \"Key is required!\" );\n        }\n\n        if ( StringUtils.isEmpty( value ) )\n        {\n            value = UNKNOWN;\n        }\n\n        String description = key + \": \" + value;\n        for ( String line : toLines( description, indent, INDENT_SIZE, LINE_LENGTH ) )\n        {\n            sb.append( line ).append( '\\n' );\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Invoke the following private method\n     * <code>HelpMojo#toLines(String, int, int, int)<\/code>\n     *\n     * @param text       The text to split into lines, must not be <code>null<\/code>.\n     * @param indent     The base indentation level of each line, must not be negative.\n     * @param indentSize The size of each indentation, must not be negative.\n     * @param lineLength The length of the line, must not be negative.\n     * @return The sequence of display lines, never <code>null<\/code>.\n     * @throws MojoFailureException   if any can not invoke the method\n     * @throws MojoExecutionException if no line was found for <code>text<\/code>\n     * @see HelpMojo#toLines(String, int, int, int)\n     */\n    private static List toLines( String text, int indent, int indentSize, int lineLength )\n        throws MojoFailureException, MojoExecutionException\n    {\n        try\n        {\n            Method m = HelpMojo.class.getDeclaredMethod( \"toLines\",\n                                                         new Class[]{ String.class, Integer.TYPE, Integer.TYPE,\n                                                             Integer.TYPE } );\n            m.setAccessible( true );\n            List output = (List) m.invoke( HelpMojo.class,\n                                           new Object[]{ text, Integer.valueOf( indent ), Integer.valueOf( indentSize ),\n                                               Integer.valueOf( lineLength ) } );\n\n            if ( output == null )\n            {\n                throw new MojoExecutionException( \"No output was specified.\" );\n            }\n\n            return output;\n        }\n        catch ( SecurityException e )\n        {\n            throw new MojoFailureException( \"SecurityException: \" + e.getMessage() );\n        }\n        catch ( IllegalArgumentException e )\n        {\n            throw new MojoFailureException( \"IllegalArgumentException: \" + e.getMessage() );\n        }\n        catch ( NoSuchMethodException e )\n        {\n            throw new MojoFailureException( \"NoSuchMethodException: \" + e.getMessage() );\n        }\n        catch ( IllegalAccessException e )\n        {\n            throw new MojoFailureException( \"IllegalAccessException: \" + e.getMessage() );\n        }\n        catch ( InvocationTargetException e )\n        {\n            Throwable cause = e.getCause();\n\n            if ( cause instanceof NegativeArraySizeException )\n            {\n                throw new MojoFailureException( \"NegativeArraySizeException: \" + cause.getMessage() );\n            }\n\n            throw new MojoFailureException( \"InvocationTargetException: \" + e.getMessage() );\n        }\n    }","id":4866,"modified_method":"/**\n     * Invoke the following private method\n     * <code>HelpMojo#toLines(String, int, int, int)<\/code>\n     *\n     * @param text       The text to split into lines, must not be <code>null<\/code>.\n     * @param indent     The base indentation level of each line, must not be negative.\n     * @param indentSize The size of each indentation, must not be negative.\n     * @param lineLength The length of the line, must not be negative.\n     * @return The sequence of display lines, never <code>null<\/code>.\n     * @throws MojoFailureException   if any can not invoke the method\n     * @throws MojoExecutionException if no line was found for <code>text<\/code>\n     * @see HelpMojo#toLines(String, int, int, int)\n     */\n    private static List<String> toLines( String text, int indent, int indentSize, int lineLength )\n        throws MojoFailureException, MojoExecutionException\n    {\n        try\n        {\n            Method m = HelpMojo.class.getDeclaredMethod( \"toLines\",\n                                                         new Class[]{ String.class, Integer.TYPE, Integer.TYPE,\n                                                             Integer.TYPE } );\n            m.setAccessible( true );\n            List<String> output = (List<String>) m.invoke( HelpMojo.class,\n                                           new Object[]{ text, Integer.valueOf( indent ), Integer.valueOf( indentSize ),\n                                               Integer.valueOf( lineLength ) } );\n\n            if ( output == null )\n            {\n                throw new MojoExecutionException( \"No output was specified.\" );\n            }\n\n            return output;\n        }\n        catch ( SecurityException e )\n        {\n            throw new MojoFailureException( \"SecurityException: \" + e.getMessage() );\n        }\n        catch ( IllegalArgumentException e )\n        {\n            throw new MojoFailureException( \"IllegalArgumentException: \" + e.getMessage() );\n        }\n        catch ( NoSuchMethodException e )\n        {\n            throw new MojoFailureException( \"NoSuchMethodException: \" + e.getMessage() );\n        }\n        catch ( IllegalAccessException e )\n        {\n            throw new MojoFailureException( \"IllegalAccessException: \" + e.getMessage() );\n        }\n        catch ( InvocationTargetException e )\n        {\n            Throwable cause = e.getCause();\n\n            if ( cause instanceof NegativeArraySizeException )\n            {\n                throw new MojoFailureException( \"NegativeArraySizeException: \" + cause.getMessage() );\n            }\n\n            throw new MojoFailureException( \"InvocationTargetException: \" + e.getMessage() );\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Describe the <code>cmd<\/code> parameter\n     *\n     * @param descriptionBuffer not null\n     * @return <code>true<\/code> if it implies to describe a plugin, <code>false<\/code> otherwise.\n     * @throws MojoFailureException   if any reflection exceptions occur or missing components.\n     * @throws MojoExecutionException if any\n     */\n    private boolean describeCommand( StringBuilder descriptionBuffer )\n        throws MojoFailureException, MojoExecutionException\n    {\n        if ( cmd.indexOf( \":\" ) == -1 )\n        {\n            // phase\n            try\n            {\n                DefaultLifecycleExecutor lifecycleExecutor =\n                    (DefaultLifecycleExecutor) session.lookup( LifecycleExecutor.ROLE );\n\n                Lifecycle lifecycle = (Lifecycle) lifecycleExecutor.getPhaseToLifecycleMap().get( cmd );\n                if ( lifecycle == null )\n                {\n                    throw new MojoExecutionException( \"The given phase '\" + cmd + \"' is an unknown phase.\" );\n                }\n\n                LifecycleMapping lifecycleMapping =\n                    (LifecycleMapping) session.lookup( LifecycleMapping.ROLE, project.getPackaging() );\n                if ( lifecycle.getDefaultPhases() == null )\n                {\n                    descriptionBuffer.append( \"'\" + cmd + \"' is a phase corresponding to this plugin:\\n\" );\n                    for ( Iterator it = lifecycle.getPhases().iterator(); it.hasNext(); )\n                    {\n                        String key = (String) it.next();\n\n                        if ( !key.equals( cmd ) )\n                        {\n                            continue;\n                        }\n\n                        if ( lifecycleMapping.getPhases( \"default\" ).get( key ) != null )\n                        {\n                            descriptionBuffer.append( lifecycleMapping.getPhases( \"default\" ).get( key ) );\n                            descriptionBuffer.append( \"\\n\" );\n                        }\n                    }\n\n                    descriptionBuffer.append( \"\\n\" );\n                    descriptionBuffer.append(\n                        \"It is a part of the lifecycle for the POM packaging '\" + project.getPackaging()\n                            + \"'. This lifecycle includes the following phases:\" );\n                    descriptionBuffer.append( \"\\n\" );\n                    for ( Iterator it = lifecycle.getPhases().iterator(); it.hasNext(); )\n                    {\n                        String key = (String) it.next();\n\n                        descriptionBuffer.append( \"* \" + key + \": \" );\n                        String value = (String) lifecycleMapping.getPhases( \"default\" ).get( key );\n                        if ( StringUtils.isNotEmpty( value ) )\n                        {\n                            for ( StringTokenizer tok = new StringTokenizer( value, \",\" ); tok.hasMoreTokens(); )\n                            {\n                                descriptionBuffer.append( tok.nextToken().trim() );\n\n                                if ( !tok.hasMoreTokens() )\n                                {\n                                    descriptionBuffer.append( \"\\n\" );\n                                }\n                                else\n                                {\n                                    descriptionBuffer.append( \", \" );\n                                }\n                            }\n                        }\n                        else\n                        {\n                            descriptionBuffer.append( NOT_DEFINED ).append( \"\\n\" );\n                        }\n                    }\n                }\n                else\n                {\n                    descriptionBuffer.append( \"'\" + cmd + \"' is a lifecycle with the following phases: \" );\n                    descriptionBuffer.append( \"\\n\" );\n\n                    for ( Iterator it = lifecycle.getPhases().iterator(); it.hasNext(); )\n                    {\n                        String key = (String) it.next();\n\n                        descriptionBuffer.append( \"* \" + key + \": \" );\n                        if ( lifecycle.getDefaultPhases().get( key ) != null )\n                        {\n                            descriptionBuffer.append( lifecycle.getDefaultPhases().get( key ) ).append( \"\\n\" );\n                        }\n                        else\n                        {\n                            descriptionBuffer.append( NOT_DEFINED ).append( \"\\n\" );\n                        }\n                    }\n                }\n            }\n            catch ( ComponentLookupException e )\n            {\n                throw new MojoFailureException( \"ComponentLookupException: \" + e.getMessage() );\n            }\n            catch ( LifecycleExecutionException e )\n            {\n                throw new MojoFailureException( \"LifecycleExecutionException: \" + e.getMessage() );\n            }\n\n            return false;\n        }\n\n        // goals\n        MojoDescriptor mojoDescriptor = HelpUtil.getMojoDescriptor( cmd, session, project, cmd, true, false );\n\n        descriptionBuffer.append( \"'\" + cmd + \"' is a plugin goal (aka mojo)\" ).append( \".\\n\" );\n        plugin = mojoDescriptor.getPluginDescriptor().getId();\n        goal = mojoDescriptor.getGoal();\n\n        return true;\n    }","id":4867,"modified_method":"/**\n     * Describe the <code>cmd<\/code> parameter\n     *\n     * @param descriptionBuffer not null\n     * @return <code>true<\/code> if it implies to describe a plugin, <code>false<\/code> otherwise.\n     * @throws MojoFailureException   if any reflection exceptions occur or missing components.\n     * @throws MojoExecutionException if any\n     */\n    private boolean describeCommand( StringBuilder descriptionBuffer )\n        throws MojoFailureException, MojoExecutionException\n    {\n        if ( cmd.indexOf( \":\" ) == -1 )\n        {\n            // phase\n            try\n            {\n                DefaultLifecycleExecutor lifecycleExecutor =\n                    (DefaultLifecycleExecutor) session.lookup( LifecycleExecutor.ROLE );\n\n                Lifecycle lifecycle = (Lifecycle) lifecycleExecutor.getPhaseToLifecycleMap().get( cmd );\n                if ( lifecycle == null )\n                {\n                    throw new MojoExecutionException( \"The given phase '\" + cmd + \"' is an unknown phase.\" );\n                }\n\n                LifecycleMapping lifecycleMapping =\n                    (LifecycleMapping) session.lookup( LifecycleMapping.ROLE, project.getPackaging() );\n                @SuppressWarnings( \"unchecked\" )\n                List<String> phases = lifecycle.getPhases();\n\n                if ( lifecycle.getDefaultPhases() == null )\n                {\n                    descriptionBuffer.append( \"'\" + cmd + \"' is a phase corresponding to this plugin:\\n\" );\n                    for ( String key : phases )\n                    {\n                        if ( !key.equals( cmd ) )\n                        {\n                            continue;\n                        }\n\n                        if ( lifecycleMapping.getPhases( \"default\" ).get( key ) != null )\n                        {\n                            descriptionBuffer.append( lifecycleMapping.getPhases( \"default\" ).get( key ) );\n                            descriptionBuffer.append( \"\\n\" );\n                        }\n                    }\n\n                    descriptionBuffer.append( \"\\n\" );\n                    descriptionBuffer.append(\n                        \"It is a part of the lifecycle for the POM packaging '\" + project.getPackaging()\n                            + \"'. This lifecycle includes the following phases:\" );\n                    descriptionBuffer.append( \"\\n\" );\n                    for ( String key : phases )\n                    {\n                        descriptionBuffer.append( \"* \" + key + \": \" );\n                        String value = (String) lifecycleMapping.getPhases( \"default\" ).get( key );\n                        if ( StringUtils.isNotEmpty( value ) )\n                        {\n                            for ( StringTokenizer tok = new StringTokenizer( value, \",\" ); tok.hasMoreTokens(); )\n                            {\n                                descriptionBuffer.append( tok.nextToken().trim() );\n\n                                if ( !tok.hasMoreTokens() )\n                                {\n                                    descriptionBuffer.append( \"\\n\" );\n                                }\n                                else\n                                {\n                                    descriptionBuffer.append( \", \" );\n                                }\n                            }\n                        }\n                        else\n                        {\n                            descriptionBuffer.append( NOT_DEFINED ).append( \"\\n\" );\n                        }\n                    }\n                }\n                else\n                {\n                    descriptionBuffer.append( \"'\" + cmd + \"' is a lifecycle with the following phases: \" );\n                    descriptionBuffer.append( \"\\n\" );\n\n                    for ( String key : phases )\n                    {\n                        descriptionBuffer.append( \"* \" + key + \": \" );\n                        if ( lifecycle.getDefaultPhases().get( key ) != null )\n                        {\n                            descriptionBuffer.append( lifecycle.getDefaultPhases().get( key ) ).append( \"\\n\" );\n                        }\n                        else\n                        {\n                            descriptionBuffer.append( NOT_DEFINED ).append( \"\\n\" );\n                        }\n                    }\n                }\n            }\n            catch ( ComponentLookupException e )\n            {\n                throw new MojoFailureException( \"ComponentLookupException: \" + e.getMessage() );\n            }\n            catch ( LifecycleExecutionException e )\n            {\n                throw new MojoFailureException( \"LifecycleExecutionException: \" + e.getMessage() );\n            }\n\n            return false;\n        }\n\n        // goals\n        MojoDescriptor mojoDescriptor = HelpUtil.getMojoDescriptor( cmd, session, project, cmd, true, false );\n\n        descriptionBuffer.append( \"'\" + cmd + \"' is a plugin goal (aka mojo)\" ).append( \".\\n\" );\n        plugin = mojoDescriptor.getPluginDescriptor().getId();\n        goal = mojoDescriptor.getGoal();\n\n        return true;\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Append a description to the buffer by respecting the indentSize and lineLength parameters.\n     * <b>Note<\/b>: The last character is always a new line.\n     *\n     * @param sb          The buffer to append the description, not <code>null<\/code>.\n     * @param description The description, not <code>null<\/code>.\n     * @param indent      The base indentation level of each line, must not be negative.\n     * @throws MojoFailureException   if any reflection exceptions occur.\n     * @throws MojoExecutionException if any\n     * @see #toLines(String, int, int, int)\n     */\n    private static void append( StringBuilder sb, String description, int indent )\n        throws MojoFailureException, MojoExecutionException\n    {\n        if ( StringUtils.isEmpty( description ) )\n        {\n            sb.append( UNKNOWN ).append( '\\n' );\n            return;\n        }\n\n        for ( Iterator it = toLines( description, indent, INDENT_SIZE, LINE_LENGTH ).iterator(); it.hasNext(); )\n        {\n            sb.append( it.next().toString() ).append( '\\n' );\n        }\n    }","id":4868,"modified_method":"/**\n     * Append a description to the buffer by respecting the indentSize and lineLength parameters.\n     * <b>Note<\/b>: The last character is always a new line.\n     *\n     * @param sb          The buffer to append the description, not <code>null<\/code>.\n     * @param description The description, not <code>null<\/code>.\n     * @param indent      The base indentation level of each line, must not be negative.\n     * @throws MojoFailureException   if any reflection exceptions occur.\n     * @throws MojoExecutionException if any\n     * @see #toLines(String, int, int, int)\n     */\n    private static void append( StringBuilder sb, String description, int indent )\n        throws MojoFailureException, MojoExecutionException\n    {\n        if ( StringUtils.isEmpty( description ) )\n        {\n            sb.append( UNKNOWN ).append( '\\n' );\n            return;\n        }\n\n        for ( String line : toLines( description, indent, INDENT_SIZE, LINE_LENGTH ) )\n        {\n            sb.append( line ).append( '\\n' );\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Method for retrieving the plugin description\n     *\n     * @param pd     contains the plugin description\n     * @param buffer contains the information to be displayed or printed\n     * @throws MojoFailureException   if any reflection exceptions occur.\n     * @throws MojoExecutionException if any\n     */\n    private void describePlugin( PluginDescriptor pd, StringBuilder buffer )\n        throws MojoFailureException, MojoExecutionException\n    {\n        append( buffer, pd.getId(), 0 );\n        buffer.append( \"\\n\" );\n\n        String name = pd.getName();\n        if ( name == null )\n        {\n            // Always null see MPLUGIN-137\n            // TODO remove when maven-plugin-tools-api:2.4.4\n            try\n            {\n                Artifact artifact = artifactFactory.createPluginArtifact( pd.getGroupId(), pd.getArtifactId(),\n                                                                          VersionRange.createFromVersion(\n                                                                              pd.getVersion() ) );\n                MavenProject pluginProject =\n                    projectBuilder.buildFromRepository( artifact, remoteRepositories, localRepository );\n\n                name = pluginProject.getName();\n            }\n            catch ( ProjectBuildingException e )\n            {\n                // oh well, we tried our best.\n                name = pd.getId();\n            }\n        }\n        append( buffer, \"Name\", name, 0 );\n        appendAsParagraph( buffer, \"Description\", toDescription( pd.getDescription() ), 0 );\n        append( buffer, \"Group Id\", pd.getGroupId(), 0 );\n        append( buffer, \"Artifact Id\", pd.getArtifactId(), 0 );\n        append( buffer, \"Version\", pd.getVersion(), 0 );\n        append( buffer, \"Goal Prefix\", pd.getGoalPrefix(), 0 );\n        buffer.append( \"\\n\" );\n\n        List mojos = pd.getMojos();\n\n        if ( mojos == null )\n        {\n            append( buffer, \"This plugin has no goals.\", 0 );\n            return;\n        }\n\n        if ( ( detail || medium ) && !minimal )\n        {\n            append( buffer, \"This plugin has \" + mojos.size() + \" goal\" + ( mojos.size() > 1 ? \"s\" : \"\" ) + \":\", 0 );\n            buffer.append( \"\\n\" );\n\n            mojos = new ArrayList( mojos );\n            PluginUtils.sortMojos( mojos );\n\n            for ( Iterator it = mojos.iterator(); it.hasNext(); )\n            {\n                MojoDescriptor md = (MojoDescriptor) it.next();\n\n                if ( detail )\n                {\n                    describeMojoGuts( md, buffer, true );\n                }\n                else\n                {\n                    describeMojoGuts( md, buffer, false );\n                }\n\n                buffer.append( \"\\n\" );\n            }\n        }\n\n        if ( !detail )\n        {\n            buffer.append( \"For more information, run 'mvn help:describe [...] -Ddetail'\" );\n            buffer.append( \"\\n\" );\n        }\n    }","id":4869,"modified_method":"/**\n     * Method for retrieving the plugin description\n     *\n     * @param pd     contains the plugin description\n     * @param buffer contains the information to be displayed or printed\n     * @throws MojoFailureException   if any reflection exceptions occur.\n     * @throws MojoExecutionException if any\n     */\n    private void describePlugin( PluginDescriptor pd, StringBuilder buffer )\n        throws MojoFailureException, MojoExecutionException\n    {\n        append( buffer, pd.getId(), 0 );\n        buffer.append( \"\\n\" );\n\n        String name = pd.getName();\n        if ( name == null )\n        {\n            // Always null see MPLUGIN-137\n            // TODO remove when maven-plugin-tools-api:2.4.4\n            try\n            {\n                Artifact artifact = artifactFactory.createPluginArtifact( pd.getGroupId(), pd.getArtifactId(),\n                                                                          VersionRange.createFromVersion(\n                                                                              pd.getVersion() ) );\n                MavenProject pluginProject =\n                    projectBuilder.buildFromRepository( artifact, remoteRepositories, localRepository );\n\n                name = pluginProject.getName();\n            }\n            catch ( ProjectBuildingException e )\n            {\n                // oh well, we tried our best.\n                name = pd.getId();\n            }\n        }\n        append( buffer, \"Name\", name, 0 );\n        appendAsParagraph( buffer, \"Description\", toDescription( pd.getDescription() ), 0 );\n        append( buffer, \"Group Id\", pd.getGroupId(), 0 );\n        append( buffer, \"Artifact Id\", pd.getArtifactId(), 0 );\n        append( buffer, \"Version\", pd.getVersion(), 0 );\n        append( buffer, \"Goal Prefix\", pd.getGoalPrefix(), 0 );\n        buffer.append( \"\\n\" );\n\n        @SuppressWarnings( \"unchecked\" )\n        List<MojoDescriptor> mojos = pd.getMojos();\n\n        if ( mojos == null )\n        {\n            append( buffer, \"This plugin has no goals.\", 0 );\n            return;\n        }\n\n        if ( ( detail || medium ) && !minimal )\n        {\n            append( buffer, \"This plugin has \" + mojos.size() + \" goal\" + ( mojos.size() > 1 ? \"s\" : \"\" ) + \":\", 0 );\n            buffer.append( \"\\n\" );\n\n            mojos = new ArrayList<MojoDescriptor>( mojos );\n            PluginUtils.sortMojos( mojos );\n\n            for ( MojoDescriptor md : mojos )\n            {\n                if ( detail )\n                {\n                    describeMojoGuts( md, buffer, true );\n                }\n                else\n                {\n                    describeMojoGuts( md, buffer, false );\n                }\n\n                buffer.append( \"\\n\" );\n            }\n        }\n\n        if ( !detail )\n        {\n            buffer.append( \"For more information, run 'mvn help:describe [...] -Ddetail'\" );\n            buffer.append( \"\\n\" );\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Displays parameter information of the Plugin Mojo\n     *\n     * @param md     contains the description of the Plugin Mojo\n     * @param buffer contains information to be printed or displayed\n     * @throws MojoFailureException   if any reflection exceptions occur.\n     * @throws MojoExecutionException if any\n     */\n    private void describeMojoParameters( MojoDescriptor md, StringBuilder buffer )\n        throws MojoFailureException, MojoExecutionException\n    {\n        List params = md.getParameters();\n\n        if ( params == null || params.isEmpty() )\n        {\n            append( buffer, \"This mojo doesn't use any parameters.\", 1 );\n            return;\n        }\n\n        params = new ArrayList( params );\n        // TODO remove when maven-plugin-tools-api:2.4.4 is out see PluginUtils.sortMojoParameters()\n        Collections.sort( params, new Comparator()\n        {\n            /** {@inheritDoc} */\n            public int compare( Object o1, Object o2 )\n            {\n                Parameter parameter1 = (Parameter) o1;\n                Parameter parameter2 = (Parameter) o2;\n\n                return parameter1.getName().compareToIgnoreCase( parameter2.getName() );\n            }\n        } );\n\n        append( buffer, \"Available parameters:\", 1 );\n\n        // indent 2\n        for ( Iterator it = params.iterator(); it.hasNext(); )\n        {\n            Parameter parameter = (Parameter) it.next();\n            if ( !parameter.isEditable() )\n            {\n                continue;\n            }\n\n            buffer.append( \"\\n\" );\n\n            // DGF wouldn't it be nice if this worked?\n            String defaultVal = parameter.getDefaultValue();\n            if ( defaultVal == null )\n            {\n                // defaultVal is ALWAYS null, this is a bug in PluginDescriptorBuilder (cf. MNG-4941)\n                defaultVal =\n                    md.getMojoConfiguration().getChild( parameter.getName() ).getAttribute( \"default-value\", null );\n            }\n\n            if ( StringUtils.isNotEmpty( defaultVal ) )\n            {\n                defaultVal = \" (Default: \" + defaultVal + \")\";\n            }\n            else\n            {\n                defaultVal = \"\";\n            }\n            append( buffer, parameter.getName() + defaultVal, 2 );\n\n            if ( parameter.isRequired() )\n            {\n                append( buffer, \"Required\", \"true\", 3 );\n            }\n\n            String expression = parameter.getExpression();\n            if ( StringUtils.isEmpty( expression ) )\n            {\n                // expression is ALWAYS null, this is a bug in PluginDescriptorBuilder (cf. MNG-4941).\n                expression = md.getMojoConfiguration().getChild( parameter.getName() ).getValue( null );\n            }\n            if ( StringUtils.isNotEmpty( expression ) )\n            {\n                append( buffer, \"Expression\", expression, 3 );\n            }\n\n            append( buffer, toDescription( parameter.getDescription() ), 3 );\n\n            String deprecation = parameter.getDeprecated();\n            if ( deprecation != null && deprecation.length() <= 0 )\n            {\n                deprecation = NO_REASON;\n            }\n\n            if ( StringUtils.isNotEmpty( deprecation ) )\n            {\n                append( buffer, \"Deprecated. \" + deprecation, 3 );\n            }\n        }\n    }","id":4870,"modified_method":"/**\n     * Displays parameter information of the Plugin Mojo\n     *\n     * @param md     contains the description of the Plugin Mojo\n     * @param buffer contains information to be printed or displayed\n     * @throws MojoFailureException   if any reflection exceptions occur.\n     * @throws MojoExecutionException if any\n     */\n    private void describeMojoParameters( MojoDescriptor md, StringBuilder buffer )\n        throws MojoFailureException, MojoExecutionException\n    {\n        @SuppressWarnings( \"unchecked\" )\n        List<Parameter> params = md.getParameters();\n\n        if ( params == null || params.isEmpty() )\n        {\n            append( buffer, \"This mojo doesn't use any parameters.\", 1 );\n            return;\n        }\n\n        params = new ArrayList<Parameter>( params );\n        // TODO remove when maven-plugin-tools-api:2.4.4 is out see PluginUtils.sortMojoParameters()\n        Collections.sort( params, new Comparator<Parameter>()\n        {\n            /** {@inheritDoc} */\n            public int compare( Parameter parameter1, Parameter parameter2 )\n            {\n                return parameter1.getName().compareToIgnoreCase( parameter2.getName() );\n            }\n        } );\n\n        append( buffer, \"Available parameters:\", 1 );\n\n        // indent 2\n        for ( Parameter parameter : params )\n        {\n            if ( !parameter.isEditable() )\n            {\n                continue;\n            }\n\n            buffer.append( \"\\n\" );\n\n            // DGF wouldn't it be nice if this worked?\n            String defaultVal = parameter.getDefaultValue();\n            if ( defaultVal == null )\n            {\n                // defaultVal is ALWAYS null, this is a bug in PluginDescriptorBuilder (cf. MNG-4941)\n                defaultVal =\n                    md.getMojoConfiguration().getChild( parameter.getName() ).getAttribute( \"default-value\", null );\n            }\n\n            if ( StringUtils.isNotEmpty( defaultVal ) )\n            {\n                defaultVal = \" (Default: \" + defaultVal + \")\";\n            }\n            else\n            {\n                defaultVal = \"\";\n            }\n            append( buffer, parameter.getName() + defaultVal, 2 );\n\n            if ( parameter.isRequired() )\n            {\n                append( buffer, \"Required\", \"true\", 3 );\n            }\n\n            String expression = parameter.getExpression();\n            if ( StringUtils.isEmpty( expression ) )\n            {\n                // expression is ALWAYS null, this is a bug in PluginDescriptorBuilder (cf. MNG-4941).\n                expression = md.getMojoConfiguration().getChild( parameter.getName() ).getValue( null );\n            }\n            if ( StringUtils.isNotEmpty( expression ) )\n            {\n                append( buffer, \"Expression\", expression, 3 );\n            }\n\n            append( buffer, toDescription( parameter.getDescription() ), 3 );\n\n            String deprecation = parameter.getDeprecated();\n            if ( deprecation != null && deprecation.length() <= 0 )\n            {\n                deprecation = NO_REASON;\n            }\n\n            if ( StringUtils.isNotEmpty( deprecation ) )\n            {\n                append( buffer, \"Deprecated. \" + deprecation, 3 );\n            }\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Apply some logic to clean the model before writing it.\n     *\n     * @param settings not null\n     */\n    private static void cleanSettings( Settings settings )\n    {\n        for ( Iterator it = settings.getProfiles().iterator(); it.hasNext(); )\n        {\n            Profile profile = (Profile) it.next();\n\n            Properties properties = new SortedProperties();\n            properties.putAll( profile.getProperties() );\n            profile.setProperties( properties );\n        }\n    }","id":4871,"modified_method":"/**\n     * Apply some logic to clean the model before writing it.\n     *\n     * @param settings not null\n     */\n    private static void cleanSettings( Settings settings )\n    {\n        @SuppressWarnings( \"unchecked\" )\n        List<Profile> profiles = settings.getProfiles();\n        for ( Profile profile : profiles )\n        {\n            Properties properties = new SortedProperties();\n            properties.putAll( profile.getProperties() );\n            profile.setProperties( properties );\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Hide proxy and server passwords.\n     *\n     * @param aSettings not null\n     */\n    private static void hidePasswords( Settings aSettings )\n    {\n        for ( Iterator it = aSettings.getProxies().iterator(); it.hasNext(); )\n        {\n            Proxy proxy = (Proxy) it.next();\n\n            if ( StringUtils.isNotEmpty( proxy.getPassword() ) )\n            {\n                proxy.setPassword( \"***\" );\n            }\n        }\n\n        for ( Iterator it = aSettings.getServers().iterator(); it.hasNext(); )\n        {\n            Server server = (Server) it.next();\n            // Password\n            if ( StringUtils.isNotEmpty( server.getPassword() ) )\n            {\n                server.setPassword( \"***\" );\n            }\n            // Passphrase\n            if ( StringUtils.isNotEmpty( server.getPassphrase() ) )\n            {\n                server.setPassphrase( \"***\" );\n            }\n        }\n    }","id":4872,"modified_method":"/**\n     * Hide proxy and server passwords.\n     *\n     * @param aSettings not null\n     */\n    private static void hidePasswords( Settings aSettings )\n    {\n        @SuppressWarnings( \"unchecked\" )\n        List<Proxy> proxies = aSettings.getProxies();\n        for ( Proxy proxy : proxies )\n        {\n            if ( StringUtils.isNotEmpty( proxy.getPassword() ) )\n            {\n                proxy.setPassword( \"***\" );\n            }\n        }\n\n        @SuppressWarnings( \"unchecked\" )\n        List<Server> servers = aSettings.getServers();\n        for ( Server server : servers )\n        {\n            // Password\n            if ( StringUtils.isNotEmpty( server.getPassword() ) )\n            {\n                server.setPassword( \"***\" );\n            }\n            // Passphrase\n            if ( StringUtils.isNotEmpty( server.getPassphrase() ) )\n            {\n                server.setPassphrase( \"***\" );\n            }\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * @param expression the user expression.\n     * @param obj a not null.\n     * @return the XML for the given object.\n     */\n    private String toXML( String expression, Object obj )\n    {\n        XStream currentXStream = getXStream();\n\n        // beautify list\n        if ( obj instanceof List )\n        {\n            List list = (List) obj;\n            if ( list.size() > 0 )\n            {\n                Object elt = list.iterator().next();\n\n                String name = StringUtils.lowercaseFirstLetter( ClassUtils.getShortClassName( elt.getClass() ) );\n                currentXStream.alias( pluralize( name ), List.class );\n            }\n            else\n            {\n                // try to detect the alias from question\n                if ( expression.indexOf( \".\" ) != -1 )\n                {\n                    String name = expression.substring( expression.indexOf( \".\" ) + 1, expression.indexOf( \"}\" ) );\n                    currentXStream.alias( name, List.class );\n                }\n            }\n        }\n\n        return currentXStream.toXML( obj );\n    }","id":4873,"modified_method":"/**\n     * @param expression the user expression.\n     * @param obj a not null.\n     * @return the XML for the given object.\n     */\n    private String toXML( String expression, Object obj )\n    {\n        XStream currentXStream = getXStream();\n\n        // beautify list\n        if ( obj instanceof List )\n        {\n            List<?> list = (List<?>) obj;\n            if ( list.size() > 0 )\n            {\n                Object elt = list.iterator().next();\n\n                String name = StringUtils.lowercaseFirstLetter( ClassUtils.getShortClassName( elt.getClass() ) );\n                currentXStream.alias( pluralize( name ), List.class );\n            }\n            else\n            {\n                // try to detect the alias from question\n                if ( expression.indexOf( \".\" ) != -1 )\n                {\n                    String name = expression.substring( expression.indexOf( \".\" ) + 1, expression.indexOf( \"}\" ) );\n                    currentXStream.alias( name, List.class );\n                }\n            }\n        }\n\n        return currentXStream.toXML( obj );\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * @param xstreamObject not null\n     * @param jarFile not null\n     * @param packageFilter a package name to filter.\n     */\n    private void addAlias( XStream xstreamObject, File jarFile, String packageFilter )\n    {\n        JarInputStream jarStream = null;\n        try\n        {\n            jarStream = new JarInputStream( new FileInputStream( jarFile ) );\n            JarEntry jarEntry = jarStream.getNextJarEntry();\n            while ( jarEntry != null )\n            {\n                if ( jarEntry.getName().toLowerCase( Locale.ENGLISH ).endsWith( \".class\" ) )\n                {\n                    String name = jarEntry.getName().substring( 0, jarEntry.getName().indexOf( \".\" ) );\n                    name = name.replaceAll( \"/\", \"\\\\.\" );\n\n                    if ( name.indexOf( packageFilter ) != -1 )\n                    {\n                        try\n                        {\n                            Class clazz = ClassUtils.getClass( name );\n                            String alias = StringUtils.lowercaseFirstLetter( ClassUtils.getShortClassName( clazz ) );\n                            xstreamObject.alias( alias, clazz );\n                            if ( !clazz.equals( Model.class ) )\n                            {\n                                xstreamObject.omitField( clazz, \"modelEncoding\" ); // unnecessary field\n                            }\n                        }\n                        catch ( ClassNotFoundException e )\n                        {\n                            e.printStackTrace();\n                        }\n                    }\n                }\n\n                jarStream.closeEntry();\n                jarEntry = jarStream.getNextJarEntry();\n            }\n        }\n        catch ( IOException e )\n        {\n            if ( getLog().isDebugEnabled() )\n            {\n                getLog().debug( \"IOException: \" + e.getMessage(), e );\n            }\n        }\n        finally\n        {\n            IOUtil.close( jarStream );\n        }\n    }","id":4874,"modified_method":"/**\n     * @param xstreamObject not null\n     * @param jarFile not null\n     * @param packageFilter a package name to filter.\n     */\n    private void addAlias( XStream xstreamObject, File jarFile, String packageFilter )\n    {\n        JarInputStream jarStream = null;\n        try\n        {\n            jarStream = new JarInputStream( new FileInputStream( jarFile ) );\n            JarEntry jarEntry = jarStream.getNextJarEntry();\n            while ( jarEntry != null )\n            {\n                if ( jarEntry.getName().toLowerCase( Locale.ENGLISH ).endsWith( \".class\" ) )\n                {\n                    String name = jarEntry.getName().substring( 0, jarEntry.getName().indexOf( \".\" ) );\n                    name = name.replaceAll( \"/\", \"\\\\.\" );\n\n                    if ( name.indexOf( packageFilter ) != -1 )\n                    {\n                        try\n                        {\n                            Class<?> clazz = ClassUtils.getClass( name );\n                            String alias = StringUtils.lowercaseFirstLetter( ClassUtils.getShortClassName( clazz ) );\n                            xstreamObject.alias( alias, clazz );\n                            if ( !clazz.equals( Model.class ) )\n                            {\n                                xstreamObject.omitField( clazz, \"modelEncoding\" ); // unnecessary field\n                            }\n                        }\n                        catch ( ClassNotFoundException e )\n                        {\n                            e.printStackTrace();\n                        }\n                    }\n                }\n\n                jarStream.closeEntry();\n                jarEntry = jarStream.getNextJarEntry();\n            }\n        }\n        catch ( IOException e )\n        {\n            if ( getLog().isDebugEnabled() )\n            {\n                getLog().debug( \"IOException: \" + e.getMessage(), e );\n            }\n        }\n        finally\n        {\n            IOUtil.close( jarStream );\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * @return lazy loading xstream object.\n     */\n    private XStream getXStream()\n    {\n        if ( xstream == null )\n        {\n            xstream = new XStream();\n            addAlias( xstream );\n\n            // handle Properties a la Maven\n            xstream.registerConverter( new PropertiesConverter()\n            {\n                /** {@inheritDoc} */\n                public boolean canConvert( Class type )\n                {\n                    return Properties.class == type;\n                }\n\n                /** {@inheritDoc} */\n                public void marshal( Object source, HierarchicalStreamWriter writer, MarshallingContext context )\n                {\n                    Properties properties = (Properties) source;\n                    Map map = new TreeMap( properties ); // sort\n                    for ( Iterator iterator = map.entrySet().iterator(); iterator.hasNext(); )\n                    {\n                        Map.Entry entry = (Map.Entry) iterator.next();\n\n                        writer.startNode( entry.getKey().toString() );\n                        writer.setValue( entry.getValue().toString() );\n                        writer.endNode();\n                    }\n                }\n            } );\n        }\n\n        return xstream;\n    }","id":4875,"modified_method":"/**\n     * @return lazy loading xstream object.\n     */\n    private XStream getXStream()\n    {\n        if ( xstream == null )\n        {\n            xstream = new XStream();\n            addAlias( xstream );\n\n            // handle Properties a la Maven\n            xstream.registerConverter( new PropertiesConverter()\n            {\n                /** {@inheritDoc} */\n                public boolean canConvert( @SuppressWarnings( \"rawtypes\" ) Class type )\n                {\n                    return Properties.class == type;\n                }\n\n                /** {@inheritDoc} */\n                public void marshal( Object source, HierarchicalStreamWriter writer, MarshallingContext context )\n                {\n                    Properties properties = (Properties) source;\n                    Map<?, ?> map = new TreeMap<Object, Object>( properties ); // sort\n                    for ( Map.Entry<?, ?> entry : map.entrySet() )\n                    {\n                        writer.startNode( entry.getKey().toString() );\n                        writer.setValue( entry.getValue().toString() );\n                        writer.endNode();\n                    }\n                }\n            } );\n        }\n\n        return xstream;\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     *\n     * @param isPom <code>true<\/code> to lookup the <code>maven-model<\/code> artifact jar, <code>false<\/code> to\n     * lookup the <code>maven-settings<\/code> artifact jar.\n     * @return the <code>org.apache.maven:maven-model|maven-settings<\/code> artifact jar file for this current\n     * HelpPlugin pom.\n     * @throws MojoExecutionException if any\n     * @throws ProjectBuildingException if any\n     * @throws ArtifactResolutionException if any\n     * @throws ArtifactNotFoundException if any\n     */\n    private File getArtifactFile( boolean isPom )\n        throws MojoExecutionException, ProjectBuildingException, ArtifactResolutionException,\n        ArtifactNotFoundException\n    {\n        for ( Iterator it = getHelpPluginPom().getDependencies().iterator(); it.hasNext(); )\n        {\n            Dependency depependency = (Dependency) it.next();\n\n            if ( !( depependency.getGroupId().equals( \"org.apache.maven\" ) ) )\n            {\n                continue;\n            }\n\n            if ( isPom )\n            {\n                if ( !( depependency.getArtifactId().equals( \"maven-model\" ) ) )\n                {\n                    continue;\n                }\n            }\n            else\n            {\n                if ( !( depependency.getArtifactId().equals( \"maven-settings\" ) ) )\n                {\n                    continue;\n                }\n            }\n\n            Artifact mavenArtifact =\n                getArtifact( depependency.getGroupId() + \":\" + depependency.getArtifactId() + \":\"\n                    + depependency.getVersion() );\n            resolver.resolveAlways( mavenArtifact, remoteRepositories, localRepository );\n\n            return mavenArtifact.getFile();\n        }\n\n        throw new MojoExecutionException( \"Unable to find the 'org.apache.maven:\"\n            + ( isPom ? \"maven-model\" : \"maven-settings\" ) + \"' artifact\" );\n    }","id":4876,"modified_method":"/**\n     *\n     * @param isPom <code>true<\/code> to lookup the <code>maven-model<\/code> artifact jar, <code>false<\/code> to\n     * lookup the <code>maven-settings<\/code> artifact jar.\n     * @return the <code>org.apache.maven:maven-model|maven-settings<\/code> artifact jar file for this current\n     * HelpPlugin pom.\n     * @throws MojoExecutionException if any\n     * @throws ProjectBuildingException if any\n     * @throws ArtifactResolutionException if any\n     * @throws ArtifactNotFoundException if any\n     */\n    private File getArtifactFile( boolean isPom )\n        throws MojoExecutionException, ProjectBuildingException, ArtifactResolutionException,\n        ArtifactNotFoundException\n    {\n        @SuppressWarnings( \"unchecked\" )\n        List<Dependency> dependencies = getHelpPluginPom().getDependencies();\n        for ( Dependency depependency : dependencies )\n        {\n            if ( !( depependency.getGroupId().equals( \"org.apache.maven\" ) ) )\n            {\n                continue;\n            }\n\n            if ( isPom )\n            {\n                if ( !( depependency.getArtifactId().equals( \"maven-model\" ) ) )\n                {\n                    continue;\n                }\n            }\n            else\n            {\n                if ( !( depependency.getArtifactId().equals( \"maven-settings\" ) ) )\n                {\n                    continue;\n                }\n            }\n\n            Artifact mavenArtifact =\n                getArtifact( depependency.getGroupId() + \":\" + depependency.getArtifactId() + \":\"\n                    + depependency.getVersion() );\n            resolver.resolveAlways( mavenArtifact, remoteRepositories, localRepository );\n\n            return mavenArtifact.getFile();\n        }\n\n        throw new MojoExecutionException( \"Unable to find the 'org.apache.maven:\"\n            + ( isPom ? \"maven-model\" : \"maven-settings\" ) + \"' artifact\" );\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/** {@inheritDoc} */\n    public void execute()\n        throws MojoExecutionException, MojoFailureException\n    {\n        Map<String,Expression> m;\n        try\n        {\n            m = ExpressionDocumenter.load();\n        }\n        catch ( ExpressionDocumentationException e )\n        {\n            throw new MojoExecutionException( \"ExpressionDocumentationException: \" + e.getMessage(), e );\n        }\n\n        StringBuilder sb = new StringBuilder();\n        sb.append( \"Maven supports the following Plugin expressions:\\n\\n\" );\n        for ( Iterator it = getExpressionsRoot().iterator(); it.hasNext(); )\n        {\n            String expression = (String) it.next();\n\n            sb.append( \"${\" ).append( expression ).append( \"}: \" );\n            sb.append( NO_DESCRIPTION_AVAILABLE );\n            sb.append( \"\\n\\n\" );\n        }\n\n        for ( Map.Entry<String,Expression> entry : m.entrySet() )\n        {\n            String key = entry.getKey();\n            Expression expression = entry.getValue();\n\n            sb.append( \"${\" ).append( key ).append( \"}: \" );\n            sb.append( trimCDATA( expression.getDescription() ) );\n            sb.append( \"\\n\\n\" );\n        }\n\n        if ( output != null )\n        {\n            try\n            {\n                writeFile( output, sb );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write plugins expressions description to output: \"\n                    + output, e );\n            }\n\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( \"Wrote descriptions to: \" + output );\n            }\n        }\n        else\n        {\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( sb.toString() );\n            }\n        }\n    }","id":4877,"modified_method":"/** {@inheritDoc} */\n    public void execute()\n        throws MojoExecutionException, MojoFailureException\n    {\n        Map<String,Expression> m;\n        try\n        {\n            m = ExpressionDocumenter.load();\n        }\n        catch ( ExpressionDocumentationException e )\n        {\n            throw new MojoExecutionException( \"ExpressionDocumentationException: \" + e.getMessage(), e );\n        }\n\n        StringBuilder sb = new StringBuilder();\n        sb.append( \"Maven supports the following Plugin expressions:\\n\\n\" );\n        for ( String expression : getExpressionsRoot() )\n        {\n            sb.append( \"${\" ).append( expression ).append( \"}: \" );\n            sb.append( NO_DESCRIPTION_AVAILABLE );\n            sb.append( \"\\n\\n\" );\n        }\n\n        for ( Map.Entry<String,Expression> entry : m.entrySet() )\n        {\n            String key = entry.getKey();\n            Expression expression = entry.getValue();\n\n            sb.append( \"${\" ).append( key ).append( \"}: \" );\n            sb.append( trimCDATA( expression.getDescription() ) );\n            sb.append( \"\\n\\n\" );\n        }\n\n        if ( output != null )\n        {\n            try\n            {\n                writeFile( output, sb );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write plugins expressions description to output: \"\n                    + output, e );\n            }\n\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( \"Wrote descriptions to: \" + output );\n            }\n        }\n        else\n        {\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( sb.toString() );\n            }\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"/** {@inheritDoc} */\n    public void execute()\n        throws MojoExecutionException\n    {\n        StringBuilder message = new StringBuilder();\n\n        message.append( '\\n' );\n        message.append( StringUtils.repeat( \"=\", LINE_LENGTH ) ).append( '\\n' );\n        message.append( StringUtils.repeat( \"=\", REPEAT ) );\n        message.append( \" Platform Properties Details \" );\n        message.append( StringUtils.repeat( \"=\", REPEAT ) ).append( '\\n' );\n        message.append( StringUtils.repeat( \"=\", LINE_LENGTH ) ).append( '\\n' );\n        message.append( '\\n' );\n\n        message.append( StringUtils.repeat( \"=\", LINE_LENGTH ) ).append( '\\n' );\n        message.append( \"System Properties\" ).append( '\\n' );\n        message.append( StringUtils.repeat( \"=\", LINE_LENGTH ) ).append( '\\n' );\n\n        Properties systemProperties = System.getProperties();\n        for ( Iterator it = systemProperties.keySet().iterator(); it.hasNext(); )\n        {\n            String key = it.next().toString();\n            message.append( \"\\n\" );\n            message.append( key ).append( \"=\" ).append( systemProperties.get( key ) );\n        }\n\n        message.append( '\\n' ).append( '\\n' );\n        message.append( StringUtils.repeat( \"=\", LINE_LENGTH ) ).append( '\\n' );\n        message.append( \"Environment Variables\" ).append( '\\n' );\n        message.append( StringUtils.repeat( \"=\", LINE_LENGTH ) ).append( '\\n' );\n        try\n        {\n            Properties envVars = CommandLineUtils.getSystemEnvVars();\n            for ( Iterator it2 = envVars.keySet().iterator(); it2.hasNext(); )\n            {\n                String key = it2.next().toString();\n                message.append( \"\\n\" );\n                message.append( key ).append( \"=\" ).append( envVars.get( key ) );\n            }\n        }\n        catch ( IOException e )\n        {\n            if ( getLog().isWarnEnabled() )\n            {\n                getLog().warn( \"IOException: \" + e.getMessage() );\n            }\n        }\n\n        message.append( \"\\n\" );\n\n        if ( output != null )\n        {\n            StringBuilder sb = new StringBuilder();\n            sb.append( \"Created by: \" + getClass().getName() ).append( \"\\n\" );\n            sb.append( \"Created on: \" + new Date() ).append( \"\\n\" ).append( \"\\n\" );\n            sb.append( message.toString() );\n\n            try\n            {\n                writeFile( output, sb );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write system report to output: \" + output, e );\n            }\n\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( \"System report written to: \" + output );\n            }\n        }\n        else\n        {\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( message );\n            }\n        }\n    }","id":4878,"modified_method":"/** {@inheritDoc} */\n    public void execute()\n        throws MojoExecutionException\n    {\n        StringBuilder message = new StringBuilder();\n\n        message.append( '\\n' );\n        message.append( StringUtils.repeat( \"=\", LINE_LENGTH ) ).append( '\\n' );\n        message.append( StringUtils.repeat( \"=\", REPEAT ) );\n        message.append( \" Platform Properties Details \" );\n        message.append( StringUtils.repeat( \"=\", REPEAT ) ).append( '\\n' );\n        message.append( StringUtils.repeat( \"=\", LINE_LENGTH ) ).append( '\\n' );\n        message.append( '\\n' );\n\n        message.append( StringUtils.repeat( \"=\", LINE_LENGTH ) ).append( '\\n' );\n        message.append( \"System Properties\" ).append( '\\n' );\n        message.append( StringUtils.repeat( \"=\", LINE_LENGTH ) ).append( '\\n' );\n\n        Properties systemProperties = System.getProperties();\n        for ( Iterator<?> it = systemProperties.keySet().iterator(); it.hasNext(); )\n        {\n            String key = it.next().toString();\n            message.append( \"\\n\" );\n            message.append( key ).append( \"=\" ).append( systemProperties.get( key ) );\n        }\n\n        message.append( '\\n' ).append( '\\n' );\n        message.append( StringUtils.repeat( \"=\", LINE_LENGTH ) ).append( '\\n' );\n        message.append( \"Environment Variables\" ).append( '\\n' );\n        message.append( StringUtils.repeat( \"=\", LINE_LENGTH ) ).append( '\\n' );\n        try\n        {\n            Properties envVars = CommandLineUtils.getSystemEnvVars();\n            for ( Iterator<?> it2 = envVars.keySet().iterator(); it2.hasNext(); )\n            {\n                String key = it2.next().toString();\n                message.append( \"\\n\" );\n                message.append( key ).append( \"=\" ).append( envVars.get( key ) );\n            }\n        }\n        catch ( IOException e )\n        {\n            if ( getLog().isWarnEnabled() )\n            {\n                getLog().warn( \"IOException: \" + e.getMessage() );\n            }\n        }\n\n        message.append( \"\\n\" );\n\n        if ( output != null )\n        {\n            StringBuilder sb = new StringBuilder();\n            sb.append( \"Created by: \" + getClass().getName() ).append( \"\\n\" );\n            sb.append( \"Created on: \" + new Date() ).append( \"\\n\" ).append( \"\\n\" );\n            sb.append( message.toString() );\n\n            try\n            {\n                writeFile( output, sb );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write system report to output: \" + output, e );\n            }\n\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( \"System report written to: \" + output );\n            }\n        }\n        else\n        {\n            if ( getLog().isInfoEnabled() )\n            {\n                getLog().info( message );\n            }\n        }\n    }","commit_id":"d67e903cf2a14239d5797e0c58bb0209a673c36e","url":"https://github.com/apache/maven-plugins"},{"original_method":"public boolean isCapturing() {\n    final ASTNode node = getNode().getFirstChildNode();\n    return node != null && node.getElementType() == RegExpTT.GROUP_BEGIN;\n  }","id":4879,"modified_method":"public boolean isCapturing() {\n    final ASTNode node = getNode().getFirstChildNode();\n    if (node == null) {\n      return false;\n    }\n    final IElementType type = node.getElementType();\n    return type == RegExpTT.GROUP_BEGIN || type == RegExpTT.RUBY_NAMED_GROUP ||\n           type == RegExpTT.RUBY_QUOTED_NAMED_GROUP || type == RegExpTT.PYTHON_NAMED_GROUP;\n  }","commit_id":"07b4d58b7260d74ed79f307bcff01584a0e38c1f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public IElementType advance() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    CharSequence zzBufferL = zzBuffer;\n    char[] zzBufferArrayL = zzBufferArray;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n\n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n\n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 76: \n          { return RegExpTT.UNICODE_CHAR;\n          }\n        case 77: break;\n        case 7: \n          { if (yystate() != CLASS2) yypushstate(EMBRACED); return RegExpTT.LBRACE;\n          }\n        case 78: break;\n        case 24: \n          { return RegExpTT.COMMA;\n          }\n        case 79: break;\n        case 62: \n          { return RegExpTT.POS_LOOKAHEAD;\n          }\n        case 80: break;\n        case 75: \n          { return RegExpTT.COMMENT;\n          }\n        case 81: break;\n        case 70: \n          { yybegin(NAMED_GROUP); return RegExpTT.PYTHON_NAMED_GROUP;\n          }\n        case 82: break;\n        case 14: \n          { return RegExpTT.STAR;\n          }\n        case 83: break;\n        case 60: \n          { yybegin(PY_COND_REF); return RegExpTT.PYTHON_COND_REF;\n          }\n        case 84: break;\n        case 49: \n          { return RegExpTT.CHAR_CLASS;\n          }\n        case 85: break;\n        case 36: \n          { handleOptions(); return RegExpTT.OPTIONS_OFF;\n          }\n        case 86: break;\n        case 56: \n          { yypopstate(); return RegExpTT.QUOTE_END;\n          }\n        case 87: break;\n        case 35: \n          { yybegin(YYINITIAL); return RegExpTT.GROUP_END;\n          }\n        case 88: break;\n        case 41: \n          // lookahead expression with fixed base length\n          zzMarkedPos = zzStartRead + 1;\n          { if (allowEmptyCharacterClass) yypushstate(CLASS2); else yypushstate(CLASS1);\n                            return RegExpTT.CLASS_BEGIN;\n          }\n        case 89: break;\n        case 37: \n          { yybegin(YYINITIAL); return RegExpTT.COLON;\n          }\n        case 90: break;\n        case 6: \n          { return RegExpTT.GROUP_END;\n          }\n        case 91: break;\n        case 25: \n          { assert false : yytext();\n          }\n        case 92: break;\n        case 18: \n          { return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.CHARACTER;\n          }\n        case 93: break;\n        case 46: \n          { return commentMode ? RegExpTT.CHARACTER : RegExpTT.REDUNDANT_ESCAPE;\n          }\n        case 94: break;\n        case 23: \n          { return RegExpTT.NAME;\n          }\n        case 95: break;\n        case 29: \n          { yypopstate(); return RegExpTT.CLASS_END;\n          }\n        case 96: break;\n        case 34: \n          { yybegin(YYINITIAL); return RegExpTT.BAD_CHARACTER;\n          }\n        case 97: break;\n        case 52: \n          { yypushstate(QUOTED); return RegExpTT.QUOTE_BEGIN;\n          }\n        case 98: break;\n        case 21: \n          { return RegExpTT.NUMBER;\n          }\n        case 99: break;\n        case 4: \n          { return RegExpTT.DOT;\n          }\n        case 100: break;\n        case 72: \n          { return RegExpTT.NEG_LOOKBEHIND;\n          }\n        case 101: break;\n        case 33: \n          { yypopstate(); if (allowCategoryShorthand) return RegExpTT.CATEGORY_SHORT_HAND; else yypushback(1);\n          }\n        case 102: break;\n        case 44: \n          { return (allowOctalNoLeadingZero ? RegExpTT.OCT_CHAR : RegExpTT.BAD_OCT_VALUE);\n          }\n        case 103: break;\n        case 63: \n          { return RegExpTT.NEG_LOOKAHEAD;\n          }\n        case 104: break;\n        case 10: \n          { return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.CTRL_CHARACTER;\n          }\n        case 105: break;\n        case 61: \n          { return RegExpTT.NON_CAPT_GROUP;\n          }\n        case 106: break;\n        case 65: \n          { yybegin(QUOTED_NAMED_GROUP); return RegExpTT.RUBY_QUOTED_NAMED_GROUP;\n          }\n        case 107: break;\n        case 28: \n          { if (allowNestedCharacterClasses) {\n                           yypushstate(CLASS2);\n                           return RegExpTT.CLASS_BEGIN;\n                        }\n                        return RegExpTT.CHARACTER;\n          }\n        case 108: break;\n        case 19: \n          { if (commentMode) { yypushstate(COMMENT); return RegExpTT.COMMENT; } else return RegExpTT.CHARACTER;\n          }\n        case 109: break;\n        case 51: \n          { yypushstate(PROP); return RegExpTT.PROPERTY;\n          }\n        case 110: break;\n        case 8: \n          { yypushstate(CLASS2);\n                            return RegExpTT.CLASS_BEGIN;\n          }\n        case 111: break;\n        case 71: \n          { return RegExpTT.POS_LOOKBEHIND;\n          }\n        case 112: break;\n        case 20: \n          { if (allowDanglingMetacharacters) {\n                          yypopstate(); yypushback(1);\n                        } else {\n                          return RegExpTT.BAD_CHARACTER;\n                        }\n          }\n        case 113: break;\n        case 73: \n          { return RegExpTT.HEX_CHAR;\n          }\n        case 114: break;\n        case 1: \n          { handleOptions(); return RegExpTT.OPTIONS_ON;\n          }\n        case 115: break;\n        case 43: \n          { if (yystate() == CLASS2) return RegExpTT.ESC_CHARACTER;\n                                while (yylength() > 2 && Integer.parseInt(yytext().toString().substring(1)) > capturingGroupCount) {\n                                  yypushback(1);\n                                }\n                                return RegExpTT.BACKREF;\n          }\n        case 116: break;\n        case 2: \n          { yypopstate(); return RegExpTT.COMMENT;\n          }\n        case 117: break;\n        case 17: \n          { return RegExpTT.MINUS;\n          }\n        case 118: break;\n        case 47: \n          { return RegExpTT.ESC_CTRL_CHARACTER;\n          }\n        case 119: break;\n        case 32: \n          { yypopstate(); yypushstate(EMBRACED); return RegExpTT.LBRACE;\n          }\n        case 120: break;\n        case 13: \n          { return RegExpTT.QUEST;\n          }\n        case 121: break;\n        case 5: \n          { capturingGroupCount++; return RegExpTT.GROUP_BEGIN;\n          }\n        case 122: break;\n        case 15: \n          { return RegExpTT.PLUS;\n          }\n        case 123: break;\n        case 67: \n          { return RegExpTT.OCT_CHAR;\n          }\n        case 124: break;\n        case 39: \n          { yybegin(YYINITIAL); return RegExpTT.QUOTE;\n          }\n        case 125: break;\n        case 31: \n          { yypopstate(); yypushback(1);\n          }\n        case 126: break;\n        case 27: \n          { yybegin(CLASS1); return RegExpTT.CARET;\n          }\n        case 127: break;\n        case 57: \n          // lookahead expression with fixed base length\n          zzMarkedPos = zzStartRead + 1;\n          { if (allowNestedCharacterClasses) {\n                              yypushstate(CLASS1);\n                              return RegExpTT.CLASS_BEGIN;\n                            }\n                            return RegExpTT.CHARACTER;\n          }\n        case 128: break;\n        case 58: \n          { if (!allowNestedCharacterClasses) return RegExpTT.CHARACTER;\n                                return RegExpTT.REDUNDANT_ESCAPE;\n          }\n        case 129: break;\n        case 38: \n          { yybegin(YYINITIAL); return RegExpTT.GT;\n          }\n        case 130: break;\n        case 69: \n          { yybegin(PY_NAMED_GROUP_REF); return RegExpTT.PYTHON_NAMED_GROUP_REF;\n          }\n        case 131: break;\n        case 16: \n          { return RegExpTT.UNION;\n          }\n        case 132: break;\n        case 3: \n          { return RegExpTT.CHARACTER;\n          }\n        case 133: break;\n        case 64: \n          { yybegin(NAMED_GROUP); return RegExpTT.RUBY_NAMED_GROUP;\n          }\n        case 134: break;\n        case 40: \n          { yybegin(OPTIONS); return RegExpTT.SET_OPTIONS;\n          }\n        case 135: break;\n        case 26: \n          { yybegin(CLASS2); return RegExpTT.CHARACTER;\n          }\n        case 136: break;\n        case 68: \n          { if (xmlSchemaMode) { yypushback(1); return RegExpTT.CHAR_CLASS; } else return RegExpTT.CTRL;\n          }\n        case 137: break;\n        case 30: \n          { return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.ESC_CHARACTER;\n          }\n        case 138: break;\n        case 12: \n          { return RegExpTT.DOLLAR;\n          }\n        case 139: break;\n        case 59: \n          { if (allowNestedCharacterClasses) return RegExpTT.ANDAND; else yypushback(1); return RegExpTT.CHARACTER;\n          }\n        case 140: break;\n        case 50: \n          { if (xmlSchemaMode) return RegExpTT.CHAR_CLASS; else return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;\n          }\n        case 141: break;\n        case 42: \n          { return RegExpTT.REDUNDANT_ESCAPE;\n          }\n        case 142: break;\n        case 55: \n          { return (allowHexDigitClass || allowHorizontalWhitespaceClass ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN);\n          }\n        case 143: break;\n        case 48: \n          { return yystate() != CLASS2 ? RegExpTT.BOUNDARY : RegExpTT.ESC_CHARACTER;\n          }\n        case 144: break;\n        case 22: \n          { yypopstate(); return RegExpTT.RBRACE;\n          }\n        case 145: break;\n        case 66: \n          // lookahead expression with fixed base length\n          zzMarkedPos = zzStartRead + 1;\n          { if (allowEmptyCharacterClass) yypushstate(CLASS2); else yypushstate(NEGATE_CLASS1);\n                              return RegExpTT.CLASS_BEGIN;\n          }\n        case 146: break;\n        case 54: \n          { return StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;\n          }\n        case 147: break;\n        case 53: \n          { return RegExpTT.BAD_HEX_VALUE;\n          }\n        case 148: break;\n        case 9: \n          { return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;\n          }\n        case 149: break;\n        case 11: \n          { return RegExpTT.CARET;\n          }\n        case 150: break;\n        case 45: \n          { return RegExpTT.ESC_CHARACTER;\n          }\n        case 151: break;\n        case 74: \n          { if (allowOctalNoLeadingZero) return RegExpTT.OCT_CHAR;\n                                if (yystate() == CLASS2) return RegExpTT.ESC_CHARACTER;\n                                while (yylength() > 2 && Integer.parseInt(yytext().toString().substring(1)) > capturingGroupCount) {\n                                  yypushback(1);\n                                }\n                                return RegExpTT.BACKREF;\n          }\n        case 152: break;\n        default:\n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            zzDoEOF();\n            return null;\n          }\n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","id":4880,"modified_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public IElementType advance() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    CharSequence zzBufferL = zzBuffer;\n    char[] zzBufferArrayL = zzBufferArray;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n\n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n\n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 76: \n          { return RegExpTT.UNICODE_CHAR;\n          }\n        case 77: break;\n        case 7: \n          { if (yystate() != CLASS2) yypushstate(EMBRACED); return RegExpTT.LBRACE;\n          }\n        case 78: break;\n        case 24: \n          { return RegExpTT.COMMA;\n          }\n        case 79: break;\n        case 62: \n          { return RegExpTT.POS_LOOKAHEAD;\n          }\n        case 80: break;\n        case 65: \n          { yybegin(QUOTED_NAMED_GROUP); capturingGroupCount++; return RegExpTT.RUBY_QUOTED_NAMED_GROUP;\n          }\n        case 81: break;\n        case 75: \n          { return RegExpTT.COMMENT;\n          }\n        case 82: break;\n        case 14: \n          { return RegExpTT.STAR;\n          }\n        case 83: break;\n        case 60: \n          { yybegin(PY_COND_REF); return RegExpTT.PYTHON_COND_REF;\n          }\n        case 84: break;\n        case 49: \n          { return RegExpTT.CHAR_CLASS;\n          }\n        case 85: break;\n        case 36: \n          { handleOptions(); return RegExpTT.OPTIONS_OFF;\n          }\n        case 86: break;\n        case 56: \n          { yypopstate(); return RegExpTT.QUOTE_END;\n          }\n        case 87: break;\n        case 35: \n          { yybegin(YYINITIAL); return RegExpTT.GROUP_END;\n          }\n        case 88: break;\n        case 41: \n          // lookahead expression with fixed base length\n          zzMarkedPos = zzStartRead + 1;\n          { if (allowEmptyCharacterClass) yypushstate(CLASS2); else yypushstate(CLASS1);\n                            return RegExpTT.CLASS_BEGIN;\n          }\n        case 89: break;\n        case 37: \n          { yybegin(YYINITIAL); return RegExpTT.COLON;\n          }\n        case 90: break;\n        case 6: \n          { return RegExpTT.GROUP_END;\n          }\n        case 91: break;\n        case 25: \n          { assert false : yytext();\n          }\n        case 92: break;\n        case 18: \n          { return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.CHARACTER;\n          }\n        case 93: break;\n        case 46: \n          { return commentMode ? RegExpTT.CHARACTER : RegExpTT.REDUNDANT_ESCAPE;\n          }\n        case 94: break;\n        case 23: \n          { return RegExpTT.NAME;\n          }\n        case 95: break;\n        case 29: \n          { yypopstate(); return RegExpTT.CLASS_END;\n          }\n        case 96: break;\n        case 34: \n          { yybegin(YYINITIAL); return RegExpTT.BAD_CHARACTER;\n          }\n        case 97: break;\n        case 52: \n          { yypushstate(QUOTED); return RegExpTT.QUOTE_BEGIN;\n          }\n        case 98: break;\n        case 21: \n          { return RegExpTT.NUMBER;\n          }\n        case 99: break;\n        case 4: \n          { return RegExpTT.DOT;\n          }\n        case 100: break;\n        case 72: \n          { return RegExpTT.NEG_LOOKBEHIND;\n          }\n        case 101: break;\n        case 33: \n          { yypopstate(); if (allowCategoryShorthand) return RegExpTT.CATEGORY_SHORT_HAND; else yypushback(1);\n          }\n        case 102: break;\n        case 44: \n          { return (allowOctalNoLeadingZero ? RegExpTT.OCT_CHAR : RegExpTT.BAD_OCT_VALUE);\n          }\n        case 103: break;\n        case 63: \n          { return RegExpTT.NEG_LOOKAHEAD;\n          }\n        case 104: break;\n        case 10: \n          { return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.CTRL_CHARACTER;\n          }\n        case 105: break;\n        case 61: \n          { return RegExpTT.NON_CAPT_GROUP;\n          }\n        case 106: break;\n        case 28: \n          { if (allowNestedCharacterClasses) {\n                           yypushstate(CLASS2);\n                           return RegExpTT.CLASS_BEGIN;\n                        }\n                        return RegExpTT.CHARACTER;\n          }\n        case 107: break;\n        case 19: \n          { if (commentMode) { yypushstate(COMMENT); return RegExpTT.COMMENT; } else return RegExpTT.CHARACTER;\n          }\n        case 108: break;\n        case 51: \n          { yypushstate(PROP); return RegExpTT.PROPERTY;\n          }\n        case 109: break;\n        case 8: \n          { yypushstate(CLASS2);\n                            return RegExpTT.CLASS_BEGIN;\n          }\n        case 110: break;\n        case 71: \n          { return RegExpTT.POS_LOOKBEHIND;\n          }\n        case 111: break;\n        case 20: \n          { if (allowDanglingMetacharacters) {\n                          yypopstate(); yypushback(1);\n                        } else {\n                          return RegExpTT.BAD_CHARACTER;\n                        }\n          }\n        case 112: break;\n        case 73: \n          { return RegExpTT.HEX_CHAR;\n          }\n        case 113: break;\n        case 1: \n          { handleOptions(); return RegExpTT.OPTIONS_ON;\n          }\n        case 114: break;\n        case 43: \n          { if (yystate() == CLASS2) return RegExpTT.ESC_CHARACTER;\n                                while (yylength() > 2 && Integer.parseInt(yytext().toString().substring(1)) > capturingGroupCount) {\n                                  yypushback(1);\n                                }\n                                return RegExpTT.BACKREF;\n          }\n        case 115: break;\n        case 2: \n          { yypopstate(); return RegExpTT.COMMENT;\n          }\n        case 116: break;\n        case 17: \n          { return RegExpTT.MINUS;\n          }\n        case 117: break;\n        case 47: \n          { return RegExpTT.ESC_CTRL_CHARACTER;\n          }\n        case 118: break;\n        case 32: \n          { yypopstate(); yypushstate(EMBRACED); return RegExpTT.LBRACE;\n          }\n        case 119: break;\n        case 13: \n          { return RegExpTT.QUEST;\n          }\n        case 120: break;\n        case 70: \n          { yybegin(NAMED_GROUP); capturingGroupCount++; return RegExpTT.PYTHON_NAMED_GROUP;\n          }\n        case 121: break;\n        case 5: \n          { capturingGroupCount++; return RegExpTT.GROUP_BEGIN;\n          }\n        case 122: break;\n        case 15: \n          { return RegExpTT.PLUS;\n          }\n        case 123: break;\n        case 67: \n          { return RegExpTT.OCT_CHAR;\n          }\n        case 124: break;\n        case 39: \n          { yybegin(YYINITIAL); return RegExpTT.QUOTE;\n          }\n        case 125: break;\n        case 31: \n          { yypopstate(); yypushback(1);\n          }\n        case 126: break;\n        case 27: \n          { yybegin(CLASS1); return RegExpTT.CARET;\n          }\n        case 127: break;\n        case 57: \n          // lookahead expression with fixed base length\n          zzMarkedPos = zzStartRead + 1;\n          { if (allowNestedCharacterClasses) {\n                              yypushstate(CLASS1);\n                              return RegExpTT.CLASS_BEGIN;\n                            }\n                            return RegExpTT.CHARACTER;\n          }\n        case 128: break;\n        case 58: \n          { if (!allowNestedCharacterClasses) return RegExpTT.CHARACTER;\n                                return RegExpTT.REDUNDANT_ESCAPE;\n          }\n        case 129: break;\n        case 38: \n          { yybegin(YYINITIAL); return RegExpTT.GT;\n          }\n        case 130: break;\n        case 69: \n          { yybegin(PY_NAMED_GROUP_REF); return RegExpTT.PYTHON_NAMED_GROUP_REF;\n          }\n        case 131: break;\n        case 16: \n          { return RegExpTT.UNION;\n          }\n        case 132: break;\n        case 3: \n          { return RegExpTT.CHARACTER;\n          }\n        case 133: break;\n        case 40: \n          { yybegin(OPTIONS); return RegExpTT.SET_OPTIONS;\n          }\n        case 134: break;\n        case 26: \n          { yybegin(CLASS2); return RegExpTT.CHARACTER;\n          }\n        case 135: break;\n        case 68: \n          { if (xmlSchemaMode) { yypushback(1); return RegExpTT.CHAR_CLASS; } else return RegExpTT.CTRL;\n          }\n        case 136: break;\n        case 30: \n          { return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.ESC_CHARACTER;\n          }\n        case 137: break;\n        case 12: \n          { return RegExpTT.DOLLAR;\n          }\n        case 138: break;\n        case 59: \n          { if (allowNestedCharacterClasses) return RegExpTT.ANDAND; else yypushback(1); return RegExpTT.CHARACTER;\n          }\n        case 139: break;\n        case 50: \n          { if (xmlSchemaMode) return RegExpTT.CHAR_CLASS; else return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;\n          }\n        case 140: break;\n        case 42: \n          { return RegExpTT.REDUNDANT_ESCAPE;\n          }\n        case 141: break;\n        case 55: \n          { return (allowHexDigitClass || allowHorizontalWhitespaceClass ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN);\n          }\n        case 142: break;\n        case 48: \n          { return yystate() != CLASS2 ? RegExpTT.BOUNDARY : RegExpTT.ESC_CHARACTER;\n          }\n        case 143: break;\n        case 22: \n          { yypopstate(); return RegExpTT.RBRACE;\n          }\n        case 144: break;\n        case 66: \n          // lookahead expression with fixed base length\n          zzMarkedPos = zzStartRead + 1;\n          { if (allowEmptyCharacterClass) yypushstate(CLASS2); else yypushstate(NEGATE_CLASS1);\n                              return RegExpTT.CLASS_BEGIN;\n          }\n        case 145: break;\n        case 64: \n          { yybegin(NAMED_GROUP); capturingGroupCount++; return RegExpTT.RUBY_NAMED_GROUP;\n          }\n        case 146: break;\n        case 54: \n          { return StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;\n          }\n        case 147: break;\n        case 53: \n          { return RegExpTT.BAD_HEX_VALUE;\n          }\n        case 148: break;\n        case 9: \n          { return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;\n          }\n        case 149: break;\n        case 11: \n          { return RegExpTT.CARET;\n          }\n        case 150: break;\n        case 45: \n          { return RegExpTT.ESC_CHARACTER;\n          }\n        case 151: break;\n        case 74: \n          { if (allowOctalNoLeadingZero) return RegExpTT.OCT_CHAR;\n                                if (yystate() == CLASS2) return RegExpTT.ESC_CHARACTER;\n                                while (yylength() > 2 && Integer.parseInt(yytext().toString().substring(1)) > capturingGroupCount) {\n                                  yypushback(1);\n                                }\n                                return RegExpTT.BACKREF;\n          }\n        case 152: break;\n        default:\n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            zzDoEOF();\n            return null;\n          }\n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","commit_id":"07b4d58b7260d74ed79f307bcff01584a0e38c1f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void insertSpacesByGroovyContinuationIndent(Editor editor, Project project) {\n    int indentSize = CodeStyleSettingsManager.getSettings(project).getContinuationIndentSize(GroovyFileType.GROOVY_FILE_TYPE);\n    StringBuffer buffer = new StringBuffer();\n    for (int i = 0; i < indentSize; i++) {\n      buffer.append(\" \");\n    }\n    EditorModificationUtil.insertStringAtCaret(editor, buffer.toString());\n  }","id":4881,"modified_method":"public static void insertSpacesByGroovyContinuationIndent(Editor editor, Project project) {\n    int indentSize = CodeStyleSettingsManager.getSettings(project).getContinuationIndentSize(GroovyFileType.GROOVY_FILE_TYPE);\n    EditorModificationUtil.insertStringAtCaret(editor, StringUtil.repeatSymbol(' ', indentSize));\n  }","commit_id":"5f3076ad6d25878f595ac7b3848115b910764752","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean isNewLine(PsiElement element) {\n    if (element == null) return false;\n    ASTNode node = element.getNode();\n    if (node == null) return false;\n    return node.getElementType() == GroovyTokenTypes.mNLS;\n  }","id":4882,"modified_method":"public static boolean isNewLine(PsiElement element) {\n    if (element == null) return false;\n    ASTNode node = element.getNode();\n    if (node == null) return false;\n    IElementType elementType = node.getElementType();\n    return elementType == GroovyTokenTypes.mNLS || elementType == TokenType.WHITE_SPACE && element.getText().contains(\"\\n\");\n  }","commit_id":"5f3076ad6d25878f595ac7b3848115b910764752","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected boolean isIdentifier(PsiElement e) {\n    return e.getNode().getElementType() == GroovyTokenTypes.mIDENT;\n  }","id":4883,"modified_method":"@Override\n  protected boolean isIdentifier(PsiElement e) {\n    IElementType type = e.getNode().getElementType();\n    return type == GroovyTokenTypes.mIDENT || type == GroovyTokenTypes.mGSTRING_LITERAL;\n  }","commit_id":"0ca3bcf8820006f710485af599b272bfdec96f21","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Test\n    public void testThreadingConfig() throws DefaultMuleException\n    {\n        // expected default values from the configuration;\n        // these should differ from the programmatic values!\n\n        // globals\n        int defaultMaxBufferSize = 42;\n        int defaultMaxThreadsActive = 16;\n        int defaultMaxThreadsIdle = 3;\n        // WAIT is 0, RUN is 4\n        int defaultThreadPoolExhaustedAction = ThreadingProfile.WHEN_EXHAUSTED_WAIT;\n        int defaultThreadTTL = 60001;\n\n        // for the connector\n        int connectorMaxBufferSize = 2;\n\n        // for the service\n        int componentMaxBufferSize = 6;\n        int componentMaxThreadsActive = 12;\n        int componentMaxThreadsIdle = 6;\n        int componentThreadPoolExhaustedAction = ThreadingProfile.WHEN_EXHAUSTED_DISCARD;\n\n        // test default config\n        ThreadingProfile tp = muleContext.getDefaultThreadingProfile();\n        assertEquals(defaultMaxBufferSize, tp.getMaxBufferSize());\n        assertEquals(defaultMaxThreadsActive, tp.getMaxThreadsActive());\n        assertEquals(defaultMaxThreadsIdle, tp.getMaxThreadsIdle());\n        assertEquals(defaultThreadPoolExhaustedAction, tp.getPoolExhaustedAction());\n        assertEquals(defaultThreadTTL, tp.getThreadTTL());\n\n        // test service threading profile defaults\n        tp = muleContext.getDefaultServiceThreadingProfile();\n        assertEquals(defaultMaxBufferSize, tp.getMaxBufferSize());\n        assertEquals(defaultMaxThreadsActive, tp.getMaxThreadsActive());\n        assertEquals(defaultMaxThreadsIdle, tp.getMaxThreadsIdle());\n        assertEquals(defaultThreadPoolExhaustedAction, tp.getPoolExhaustedAction());\n        assertEquals(defaultThreadTTL, tp.getThreadTTL());\n\n        // test that unset values retain a default value\n        AbstractConnector c = (AbstractConnector) muleContext.getRegistry().lookupConnector(\"dummyConnector\");\n        tp = c.getDispatcherThreadingProfile();\n        // this value is configured\n        assertEquals(connectorMaxBufferSize, tp.getMaxBufferSize());\n        // these values are inherited\n        assertEquals(defaultMaxThreadsActive, tp.getMaxThreadsActive());\n        assertEquals(defaultMaxThreadsIdle, tp.getMaxThreadsIdle());\n        assertEquals(defaultThreadPoolExhaustedAction, tp.getPoolExhaustedAction());\n        assertEquals(defaultThreadTTL, tp.getThreadTTL());\n\n        // test per-service values\n        Service service = muleContext.getRegistry().lookupService(\"appleComponent2\");\n        assertTrue(\"service must be SedaService to get threading profile\", service instanceof SedaService);\n        tp = ((SedaService) service).getThreadingProfile();\n        // these values are configured\n        assertEquals(componentMaxBufferSize, tp.getMaxBufferSize());\n        assertEquals(componentMaxThreadsActive, tp.getMaxThreadsActive());\n        assertEquals(componentMaxThreadsIdle, tp.getMaxThreadsIdle());\n        assertEquals(componentThreadPoolExhaustedAction, tp.getPoolExhaustedAction());\n        // this value is inherited\n        assertEquals(defaultThreadTTL, tp.getThreadTTL());\n    }","id":4884,"modified_method":"@Test\n    public void testThreadingConfig() throws DefaultMuleException\n    {\n        // expected default values from the configuration;\n        // these should differ from the programmatic values!\n\n        // globals\n        int defaultMaxBufferSize = 42;\n        int defaultMaxThreadsActive = 16;\n        int defaultMaxThreadsIdle = 3;\n        // WAIT is 0, RUN is 4\n        int defaultThreadPoolExhaustedAction = ThreadingProfile.WHEN_EXHAUSTED_WAIT;\n        int defaultThreadTTL = 60001;\n\n        // for the connector\n        int connectorMaxBufferSize = 2;\n\n        // for the service\n        int componentMaxBufferSize = 6;\n        int componentMaxThreadsActive = 12;\n        int componentMaxThreadsIdle = 6;\n        int componentThreadPoolExhaustedAction = ThreadingProfile.WHEN_EXHAUSTED_DISCARD;\n\n        // test default config\n        ThreadingProfile tp = muleContext.getDefaultThreadingProfile();\n        assertEquals(defaultMaxBufferSize, tp.getMaxBufferSize());\n        assertEquals(defaultMaxThreadsActive, tp.getMaxThreadsActive());\n        assertEquals(defaultMaxThreadsIdle, tp.getMaxThreadsIdle());\n        assertEquals(defaultThreadPoolExhaustedAction, tp.getPoolExhaustedAction());\n        assertEquals(defaultThreadTTL, tp.getThreadTTL());\n\n        // test service threading profile defaults\n        tp = muleContext.getDefaultServiceThreadingProfile();\n        assertEquals(defaultMaxBufferSize, tp.getMaxBufferSize());\n        assertEquals(defaultMaxThreadsActive, tp.getMaxThreadsActive());\n        assertEquals(defaultMaxThreadsIdle, tp.getMaxThreadsIdle());\n        assertEquals(defaultThreadPoolExhaustedAction, tp.getPoolExhaustedAction());\n        assertEquals(defaultThreadTTL, tp.getThreadTTL());\n\n        // test that unset values retain a default value\n        AbstractConnector c = (AbstractConnector) muleContext.getRegistry().lookupConnector(\"dummyConnector\");\n        tp = c.getDispatcherThreadingProfile();\n        // this value is configured\n        assertEquals(connectorMaxBufferSize, tp.getMaxBufferSize());\n        // these values are inherited\n        assertEquals(defaultMaxThreadsActive, tp.getMaxThreadsActive());\n        assertEquals(defaultMaxThreadsIdle, tp.getMaxThreadsIdle());\n        assertEquals(defaultThreadPoolExhaustedAction, tp.getPoolExhaustedAction());\n        assertEquals(defaultThreadTTL, tp.getThreadTTL());\n\n        // test per-service values\n        Flow service = (Flow) muleContext.getRegistry().lookupFlowConstruct(\"appleComponent2\");\n        AsynchronousProcessingStrategy processingStrategy = (AsynchronousProcessingStrategy) service.getProcessingStrategy();\n        // these values are configured\n        assertEquals(componentMaxBufferSize, processingStrategy.getMaxBufferSize().intValue());\n        assertEquals(componentMaxThreadsActive, processingStrategy.getMaxThreads().intValue());\n        assertEquals(componentThreadPoolExhaustedAction, processingStrategy.getPoolExhaustedAction().intValue());\n        // this value is inherited\n        assertEquals(defaultThreadTTL, tp.getThreadTTL());\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testExceptionStrategy2()\n    {\n        Service service = muleContext.getRegistry().lookupService(\"appleComponent\");\n        assertNotNull(service.getExceptionListener());\n        assertTrue(service.getExceptionListener() instanceof MessagingExceptionHandler);\n    }","id":4885,"modified_method":"@Test\n    public void testExceptionStrategy2()\n    {\n        Flow service = (Flow) muleContext.getRegistry().lookupFlowConstruct(\"appleComponent\");\n        assertNotNull(service.getExceptionListener());\n        assertTrue(service.getExceptionListener() instanceof MessagingExceptionHandler);\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testPoolingConfig()\n    {\n//        //TODO RM* test config\n//        PoolingProfile pp = muleContext.getConfiguration().getPoolingProfile();\n//        assertEquals(10, pp.getMaxActive());\n//        assertEquals(5, pp.getMaxIdle());\n//        assertEquals(10001, pp.getMaxWait());\n//        assertEquals(ObjectPool.WHEN_EXHAUSTED_WAIT, pp.getExhaustedAction());\n//        assertEquals(PoolingProfile.INITIALISE_ONE, pp.getInitialisationPolicy());\n//        assertTrue(pp.getPoolFactory() instanceof CommonsPoolFactory);\n\n        // test per-descriptor overrides\n        Service service = muleContext.getRegistry().lookupService(\"appleComponent2\");\n        PoolingProfile pp = ((PooledJavaComponent)service.getComponent()).getPoolingProfile();\n\n        assertEquals(9, pp.getMaxActive());\n        assertEquals(6, pp.getMaxIdle());\n        assertEquals(4002, pp.getMaxWait());\n        assertEquals(PoolingProfile.WHEN_EXHAUSTED_FAIL, pp.getExhaustedAction());\n        assertEquals(PoolingProfile.INITIALISE_ALL, pp.getInitialisationPolicy());\n    }","id":4886,"modified_method":"@Test\n    public void testPoolingConfig()\n    {\n        // test per-descriptor overrides\n        Flow service = (Flow) muleContext.getRegistry().lookupFlowConstruct(\"appleComponent2\");\n        PoolingProfile pp = ((PooledJavaComponent) service.getMessageProcessors().get(0)).getPoolingProfile();\n\n        assertEquals(9, pp.getMaxActive());\n        assertEquals(6, pp.getMaxIdle());\n        assertEquals(4002, pp.getMaxWait());\n        assertEquals(PoolingProfile.WHEN_EXHAUSTED_FAIL, pp.getExhaustedAction());\n        assertEquals(PoolingProfile.INITIALISE_ALL, pp.getInitialisationPolicy());\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    public void testEndpointConfig() throws MuleException\n    {\n        super.testEndpointConfig();\n\n        // test that targets have been resolved on targets\n        ImmutableEndpoint endpoint = muleContext.getEndpointFactory().getInboundEndpoint(\"waterMelonEndpoint\");\n        assertNotNull(endpoint);\n        assertEquals(\"UTF-8-TEST\", endpoint.getEncoding());\n        assertEquals(\"test.queue\", endpoint.getEndpointURI().getAddress());\n\n        Service service = muleContext.getRegistry().lookupService(\"appleComponent2\");\n        assertNotNull(service);\n    }","id":4887,"modified_method":"@Override\n    public void testEndpointConfig() throws MuleException\n    {\n        super.testEndpointConfig();\n\n        // test that targets have been resolved on targets\n        ImmutableEndpoint endpoint = muleContext.getEndpointFactory().getInboundEndpoint(\"waterMelonEndpoint\");\n        assertNotNull(endpoint);\n        assertEquals(\"UTF-8-TEST\", endpoint.getEncoding());\n        assertEquals(\"test.queue\", endpoint.getEndpointURI().getAddress());\n\n        FlowConstruct service = muleContext.getRegistry().lookupFlowConstruct(\"appleComponent2\");\n        assertNotNull(service);\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testInterceptors()\n    {\n        Service service = muleContext.getRegistry().lookupService(\"orangeComponent\");\n        AbstractComponent component = (AbstractComponent) service.getComponent();\n        assertEquals(3, component.getInterceptors().size());\n        assertEquals(LoggingInterceptor.class, component.getInterceptors().get(0).getClass());\n        assertEquals(InterceptorStack.class, component.getInterceptors().get(1).getClass());\n        assertEquals(TimerInterceptor.class, component.getInterceptors().get(2).getClass());\n    }","id":4888,"modified_method":"@Test\n    public void testInterceptors()\n    {\n        Flow service = (Flow) muleContext.getRegistry().lookupFlowConstruct(\"orangeComponent\");\n        AbstractComponent component = (AbstractComponent) service.getMessageProcessors().get(0);\n        assertEquals(3, component.getInterceptors().size());\n        assertEquals(LoggingInterceptor.class, component.getInterceptors().get(0).getClass());\n        assertEquals(InterceptorStack.class, component.getInterceptors().get(1).getClass());\n        assertEquals(TimerInterceptor.class, component.getInterceptors().get(2).getClass());\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testEndpointProperties() throws Exception\n    {\n        // test transaction config\n        Service service = muleContext.getRegistry().lookupService(\"appleComponent2\");\n        InboundEndpoint inEndpoint = ((ServiceCompositeMessageSource) service.getMessageSource()).getEndpoint(\n                \"transactedInboundEndpoint\");\n        assertNotNull(inEndpoint);\n        assertNotNull(inEndpoint.getProperties());\n        assertEquals(\"Prop1\", inEndpoint.getProperties().get(\"testEndpointProperty\"));\n    }","id":4889,"modified_method":"@Test\n    public void testEndpointProperties() throws Exception\n    {\n        // test transaction config\n        Flow service = (Flow) muleContext.getRegistry().lookupFlowConstruct(\"appleComponent2\");\n        InboundEndpoint inEndpoint = (InboundEndpoint) ((CompositeMessageSource) service.getMessageSource()).getSources().get(1);\n        assertNotNull(inEndpoint);\n        assertNotNull(inEndpoint.getProperties());\n        assertEquals(\"Prop1\", inEndpoint.getProperties().get(\"testEndpointProperty\"));\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testExceptionStrategy()\n    {\n        Service service = muleContext.getRegistry().lookupService(\"orangeComponent\");\n        assertNotNull(muleContext.getRegistry().lookupModel(\"main\").getExceptionListener());\n        assertNotNull(service.getExceptionListener());\n\n        assertTrue(((AbstractExceptionListener) service.getExceptionListener()).getMessageProcessors().size() > 0);\n        OutboundEndpoint ep = (OutboundEndpoint) ((AbstractExceptionListener) service.getExceptionListener()).getMessageProcessors().get(0);\n\n        assertEquals(\"test://orange.exceptions\", ep.getEndpointURI().toString());\n    }","id":4890,"modified_method":"@Test\n    public void testExceptionStrategy()\n    {\n        Flow service = (Flow) muleContext.getRegistry().lookupFlowConstruct(\"orangeComponent\");\n        assertNotNull(service.getExceptionListener());\n\n        assertTrue(((AbstractExceptionListener) service.getExceptionListener()).getMessageProcessors().size() > 0);\n        OutboundEndpoint ep = (OutboundEndpoint) ((AbstractExceptionListener) service.getExceptionListener()).getMessageProcessors().get(0);\n\n        assertEquals(\"test://orange.exceptions\", ep.getEndpointURI().toString());\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testBindingConfig()\n    {\n        // test outbound message router\n        Service service = muleContext.getRegistry().lookupService(\"orangeComponent\");\n        assertNotNull(service.getComponent());\n        assertTrue(service.getComponent() instanceof JavaComponent);\n        List<InterfaceBinding> bindings= ((JavaComponent) service.getComponent()).getInterfaceBindings();\n        assertNotNull(bindings);\n\n        assertEquals(2, bindings.size());\n        // check first Router\n        InterfaceBinding route1 = bindings.get(0);\n        assertEquals(FruitCleaner.class, route1.getInterface());\n        assertEquals(\"wash\", route1.getMethod());\n        assertNotNull(route1.getEndpoint());\n        // check second Router\n        InterfaceBinding route2 = bindings.get(1);\n        assertEquals(FruitCleaner.class, route2.getInterface());\n        assertEquals(\"polish\", route2.getMethod());\n        assertNotNull(route1.getEndpoint());\n    }","id":4891,"modified_method":"@Test\n    public void testBindingConfig()\n    {\n        // test outbound message router\n        Flow service = (Flow) muleContext.getRegistry().lookupFlowConstruct(\"orangeComponent\");\n        assertNotNull(service.getMessageProcessors().get(0));\n        assertTrue((service.getMessageProcessors().get(0) instanceof JavaComponent));\n        List<InterfaceBinding> bindings= ((JavaComponent) service.getMessageProcessors().get(0)).getInterfaceBindings();\n        assertNotNull(bindings);\n\n        assertEquals(2, bindings.size());\n        // check first Router\n        InterfaceBinding route1 = bindings.get(0);\n        assertEquals(FruitCleaner.class, route1.getInterface());\n        assertEquals(\"wash\", route1.getMethod());\n        assertNotNull(route1.getEndpoint());\n        // check second Router\n        InterfaceBinding route2 = bindings.get(1);\n        assertEquals(FruitCleaner.class, route2.getInterface());\n        assertEquals(\"polish\", route2.getMethod());\n        assertNotNull(route1.getEndpoint());\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testEndpointConfig() throws MuleException\n    {\n        // test that targets have been resolved on targets\n        ImmutableEndpoint endpoint = muleContext.getEndpointFactory().getInboundEndpoint(\n            \"waterMelonEndpoint\");\n        assertNotNull(endpoint);\n        // aliases no longer possible\n        assertEquals(\"test.queue\", endpoint.getEndpointURI().getAddress());\n\n        Service service = muleContext.getRegistry().lookupService(\"orangeComponent\");\n        ImmutableEndpoint ep = ((ServiceCompositeMessageSource) service.getMessageSource()).getEndpoint(\"Orange\");\n        assertNotNull(ep);\n        final List responseTransformers = ep.getResponseTransformers();\n        assertNotNull(responseTransformers);\n        assertFalse(responseTransformers.isEmpty());\n        final Object responseTransformer = responseTransformers.get(0);\n        assertTrue(responseTransformer instanceof TestCompressionTransformer);\n    }","id":4892,"modified_method":"@Test\n    public void testEndpointConfig() throws MuleException\n    {\n        // test that targets have been resolved on targets\n        ImmutableEndpoint endpoint = muleContext.getEndpointFactory().getInboundEndpoint(\n            \"waterMelonEndpoint\");\n        assertNotNull(endpoint);\n        // aliases no longer possible\n        assertEquals(\"test.queue\", endpoint.getEndpointURI().getAddress());\n\n        Flow service = (Flow) muleContext.getRegistry().lookupFlowConstruct(\"orangeComponent\");\n        ImmutableEndpoint ep = (ImmutableEndpoint) ((CompositeMessageSource) service.getMessageSource()).getSources().get(0);\n        assertNotNull(ep);\n        final List responseTransformers = ep.getResponseTransformers();\n        assertNotNull(responseTransformers);\n        assertFalse(responseTransformers.isEmpty());\n        final Object responseTransformer = responseTransformers.get(0);\n        assertTrue(responseTransformer instanceof TestCompressionTransformer);\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testConfigureSpring() throws ConfigurationException, InitialisationException\n    {\n        ConfigurationBuilder configurationBuilder = new AutoConfigurationBuilder(\n            \"org/mule/test/spring/config1/test-xml-mule2-config.xml\");\n        configurationBuilder.configure(muleContext);\n\n        // Just a few of the asserts from AbstractConfigBuilderTestCase\n        MessagingExceptionHandler es = muleContext.getRegistry().lookupModel(\"main\").getExceptionListener();\n        assertNotNull(es);\n        assertTrue(es instanceof TestExceptionStrategy);\n    }","id":4893,"modified_method":"@Test\n    public void testConfigureSpring() throws ConfigurationException, InitialisationException\n    {\n        ConfigurationBuilder configurationBuilder = new AutoConfigurationBuilder(\n            \"org/mule/test/spring/config1/test-xml-mule2-config.xml\");\n        configurationBuilder.configure(muleContext);\n\n        // Just a few of the asserts from AbstractConfigBuilderTestCase\n        Flow service = (Flow) muleContext.getRegistry().lookupFlowConstruct(\"appleComponent\");\n        assertNotNull(service.getExceptionListener());\n        assertTrue(service.getExceptionListener() instanceof MessagingExceptionHandler);\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testModel() throws MuleException\n    {\n        assertNotNull(\"No model\", muleContext.getRegistry().lookupModel(\"model\"));\n        ImmutableEndpoint endpoint = muleContext.getEndpointFactory().getInboundEndpoint(\"endpoint\");\n        assertNotNull(\"No endpoint\", endpoint);\n        String address = endpoint.getEndpointURI().getAddress();\n        assertNotNull(\"No address\", address);\n        assertEquals(\"value\", address);\n    }","id":4894,"modified_method":"@Test\n    public void testModel() throws MuleException\n    {\n        ImmutableEndpoint endpoint = muleContext.getEndpointFactory().getInboundEndpoint(\"endpoint\");\n        assertNotNull(\"No endpoint\", endpoint);\n        String address = endpoint.getEndpointURI().getAddress();\n        assertNotNull(\"No address\", address);\n        assertEquals(\"value\", address);\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testServiceExplicitObjectStoreConfigured()\n    {\n        SedaService service = lookupService(\"serviceExplicitObjectStore\");\n        QueueProfile queueProfile = service.getQueueProfile();\n        assertTrue(queueProfile.getObjectStore() instanceof TestQueueStore);\n    }","id":4895,"modified_method":"@Test\n    public void testServiceExplicitObjectStoreConfigured()\n    {\n        Flow service = lookupFlow(\"serviceExplicitObjectStore\");\n        QueuedAsynchronousProcessingStrategy ps = (QueuedAsynchronousProcessingStrategy) service.getProcessingStrategy();\n        assertTrue(ps.getQueueStore() instanceof TestQueueStore);\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testServiceExplicitDefaultMemoryObjectStoreConfigured()\n    {\n        SedaService service = lookupService(\"serviceExplicitDefaultMemoryObjectStore\");\n        QueueProfile queueProfile = service.getQueueProfile();\n        assertObjectStoreIsDefaultMemoryObjectStore(queueProfile.getObjectStore());\n    }","id":4896,"modified_method":"@Test\n    public void testServiceExplicitDefaultMemoryObjectStoreConfigured()\n    {\n        Flow service = lookupFlow(\"serviceExplicitDefaultMemoryObjectStore\");\n        QueuedAsynchronousProcessingStrategy ps = (QueuedAsynchronousProcessingStrategy) service.getProcessingStrategy();\n        assertObjectStoreIsDefaultMemoryObjectStore(ps.getQueueStore());\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testServiceOnlyNumberOfOutstandingMessagesConfigured()\n    {\n        SedaService service = lookupService(\"serviceNoObjectStore\");\n        QueueProfile queueProfile = service.getQueueProfile();\n        assertEquals(42, queueProfile.getMaxOutstandingMessages());\n        assertObjectStoreIsDefaultMemoryObjectStore(queueProfile.getObjectStore());\n    }","id":4897,"modified_method":"@Test\n    public void testServiceOnlyNumberOfOutstandingMessagesConfigured()\n    {\n        Flow service = lookupFlow(\"serviceNoObjectStore\");\n        QueuedAsynchronousProcessingStrategy ps = (QueuedAsynchronousProcessingStrategy) service.getProcessingStrategy();\n        assertEquals(42, ps.getMaxQueueSize().intValue());\n        assertObjectStoreIsDefaultMemoryObjectStore(ps.getQueueStore());\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testServiceExplicitDefaultPersistentObjectStoreConfigured()\n    {\n        SedaService service = lookupService(\"serviceExplicitDefaultPersistentObjectStore\");\n        QueueProfile queueProfile = service.getQueueProfile();\n        assertObjectStoreIsDefaultPersistentObjectStore(queueProfile.getObjectStore());\n    }","id":4898,"modified_method":"@Test\n    public void testServiceExplicitDefaultPersistentObjectStoreConfigured()\n    {\n        Flow service = lookupFlow(\"serviceExplicitDefaultPersistentObjectStore\");\n        QueuedAsynchronousProcessingStrategy ps = (QueuedAsynchronousProcessingStrategy) service.getProcessingStrategy();\n        assertObjectStoreIsDefaultPersistentObjectStore(ps.getQueueStore());\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testServiceDefaults()\n    {\n        SedaService service = lookupService(\"serviceDefault\");\n        QueueProfile queueProfile = service.getQueueProfile();\n        assertEquals(0, queueProfile.getMaxOutstandingMessages());\n        assertObjectStoreIsDefaultMemoryObjectStore(queueProfile.getObjectStore());\n    }","id":4899,"modified_method":"@Test\n    public void testServiceDefaults()\n    {\n        Flow service = lookupFlow(\"serviceDefault\");\n        QueuedAsynchronousProcessingStrategy ps = (QueuedAsynchronousProcessingStrategy) service.getProcessingStrategy();\n        assertEquals(0, ps.getMaxQueueSize().intValue());\n        assertObjectStoreIsDefaultMemoryObjectStore(ps.getQueueStore());\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testMessageInfoMappingConfig() throws Exception\n    {\n        Service d = muleContext.getRegistry().lookupService(\"msgInfoMappingTestComponent\");\n        assertNotNull(d);\n\n        final MessageInfoMapping mapping = d.getMessageInfoMapping();\n        assertTrue(mapping instanceof ExpressionMessageInfoMapping);\n\n        Map props = new HashMap();\n        props.put(\"id\", \"myID123\");\n        props.put(\"correlation\", \"myCorrelationID456\");\n        MuleMessage msg = new DefaultMuleMessage(\"foo\", props, muleContext);\n        assertEquals(\"myID123\",mapping.getMessageId(msg));\n        assertEquals(\"myCorrelationID456\",mapping.getCorrelationId(msg));\n    }","id":4900,"modified_method":"@Test\n    public void testMessageInfoMappingConfig() throws Exception\n    {\n        Flow d = (Flow) muleContext.getRegistry().lookupFlowConstruct(\"msgInfoMappingTestComponent\");\n        assertNotNull(d);\n\n        final MessageInfoMapping mapping = d.getMessageInfoMapping();\n        assertTrue(mapping instanceof ExpressionMessageInfoMapping);\n\n        Map props = new HashMap();\n        props.put(\"id\", \"myID123\");\n        props.put(\"correlation\", \"myCorrelationID456\");\n        MuleMessage msg = new DefaultMuleMessage(\"foo\", props, muleContext);\n        assertEquals(\"myID123\", mapping.getMessageId(msg));\n        assertEquals(\"myCorrelationID456\", mapping.getCorrelationId(msg));\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void testPropertyTypesConfig() throws Exception\n    {\n        Service c = muleContext.getRegistry().lookupService(\"testPropertiesComponent\");\n        assertNotNull(c);\n        Object obj = getComponent(c);\n        assertNotNull(obj);\n        assertTrue(obj instanceof Apple);\n        assertTrue(((Apple) obj).isBitten());\n        assertTrue(((Apple) obj).isWashed());\n    }","id":4901,"modified_method":"@Test\n    public void testPropertyTypesConfig() throws Exception\n    {\n        Flow c = (Flow) muleContext.getRegistry().lookupFlowConstruct(\"testPropertiesComponent\");\n        assertNotNull(c);\n        Object obj = getComponent(c);\n        assertNotNull(obj);\n        assertTrue(obj instanceof Apple);\n        assertTrue(((Apple) obj).isBitten());\n        assertTrue(((Apple) obj).isWashed());\n    }","commit_id":"90877508ab5acdd627b2f8f54337d0cc6a4f5175","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n     * \n     */\n    public String getIfAlias(int ifIndex) {\n        String snmpIfAlias = null;\n\n        if (hasIfXTable()) {\n            snmpIfAlias = m_ifXTable.getIfAlias(ifIndex);\n\n            if (log().isDebugEnabled()) {\n                if (snmpIfAlias != null) {\n                    log().debug(\"getIfAlias: ifIndex \" + ifIndex + \" has ifAlias '\" + snmpIfAlias + \"'\");\n                } else {\n                    log().debug(\"getIfAlias: no ifAlias found for ifIndex \" + ifIndex);\n                }\n            }\n        } else {\n            if (log().isDebugEnabled()) {\n                log().debug(\"getIfAlias: no ifXTable retrieved from \" + m_address);\n            }\n        }\n\n        return snmpIfAlias;\n    }","id":4902,"modified_method":"/**\n     * \n     */\n    public String getIfAlias(int ifIndex) {\n        String snmpIfAlias = null;\n        \n        if (hasIfXTable()) {\n            snmpIfAlias = getIfXTable().getIfAlias(ifIndex);\n\n            if (log().isDebugEnabled()) {\n                if (snmpIfAlias != null) {\n                    log().debug(\"getIfAlias: ifIndex \" + ifIndex + \" has ifAlias '\" + snmpIfAlias + \"'\");\n                } else {\n                    log().debug(\"getIfAlias: no ifAlias found for ifIndex \" + ifIndex);\n                }\n            }\n        } else {\n            if (log().isDebugEnabled()) {\n                log().debug(\"getIfAlias: no ifXTable retrieved from \" + m_address);\n            }\n        }\n\n        return snmpIfAlias;\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Long getIfSpeed(final int ifIndex) {\n        Long ifSpeed = null;\n        \n        if (hasIfTable()) {\n            ifSpeed = m_ifTable.getIfSpeed(ifIndex);\n        }\n        return ifSpeed;\n    }","id":4903,"modified_method":"public Long getIfSpeed(final int ifIndex) {\n        return hasIfTable() ? getIfTable().getIfSpeed(ifIndex) : null;\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getIfDescr(final int ifIndex) {\n        String ifDescr = null;\n        \n        if (hasIfTable()) {\n            ifDescr = m_ifTable.getIfDescr(ifIndex);\n        }\n        return ifDescr;\n    }","id":4904,"modified_method":"public String getIfDescr(final int ifIndex) {\n        return hasIfTable() ? m_ifTable.getIfDescr(ifIndex) :  null;\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getPhysAddr(final int ifIndex) {\n        String physAddr = null;\n        \n        if (hasIfTable()) {\n            physAddr = m_ifTable.getPhysAddr(ifIndex);\n        }\n        return physAddr;\n    }","id":4905,"modified_method":"public String getPhysAddr(final int ifIndex) {\n        return hasIfTable() ? getIfTable().getPhysAddr(ifIndex) : null;\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getPhysAddr(final int ifIndex) {\n        String physAddr = null;   \n        if (getEntries() != null) {\n            for(IfTableEntry entry : getEntries()) {\n                Integer ndx = entry.getIfIndex();\n                if (ndx != null && ndx.intValue() == ifIndex) {\n                    physAddr = entry.getPhysAddr();\n                }\n            }\n        }\n        return physAddr;\n    }","id":4906,"modified_method":"public String getPhysAddr(final int ifIndex) {\n        return (getEntry(ifIndex) == null ? null : getEntry(ifIndex).getPhysAddr());\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int getAdminStatus(int ifIndex) {\n        if (getEntries() == null)\n            return -1;\n        \n        for(IfTableEntry entry : getEntries()) {\n            Integer ndx = entry.getIfIndex();\n            if (ndx != null && ndx.intValue() == ifIndex) {\n                // found it\n                // extract the admin status\n                //\n                Integer ifStatus = entry.getIfAdminStatus();\n                if (ifStatus != null)\n                    return ifStatus.intValue();\n            }\n        }\n        return -1;\n    }","id":4907,"modified_method":"public int getAdminStatus(int ifIndex) {\n        return (getEntry(ifIndex) == null ? -1 : getEntry(ifIndex).getIfAdminStatus());\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Long getIfSpeed(final int ifIndex) {\n        Long ifSpeed = null;   \n        if (getEntries() != null) {\n            for(IfTableEntry entry : getEntries()) {\n                Integer ndx = entry.getIfIndex();\n                if (ndx != null && ndx.intValue() == ifIndex) {\n                    ifSpeed = entry.getIfSpeed();\n                }\n            }\n        }\n        return ifSpeed;\n    }","id":4908,"modified_method":"public Long getIfSpeed(final int ifIndex) {\n        return (getEntry(ifIndex) == null ? null : getEntry(ifIndex).getIfSpeed());\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getIfDescr(final int ifIndex) {\n        String ifDescr = null;   \n        if (getEntries() != null) {\n            for(IfTableEntry entry : getEntries()) {\n                Integer ndx = entry.getIfIndex();\n                if (ndx != null && ndx.intValue() == ifIndex) {\n                    ifDescr = entry.getIfDescr();\n                }\n            }\n        }\n        return ifDescr;\n    }","id":4909,"modified_method":"public String getIfDescr(final int ifIndex) {\n        return (getEntry(ifIndex) == null ? null : getEntry(ifIndex).getIfDescr());\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int getIfType(int ifIndex) {\n        if (getEntries() == null)\n            return -1;\n        \n        for(IfTableEntry entry : getEntries()) {\n            Integer ndx = entry.getIfIndex();\n            if (ndx != null && ndx.intValue() == ifIndex) {\n                // found it\n                // extract the ifType\n                //\n                Integer ifType = entry.getIfType();\n                if (ifType != null)\n                    return ifType.intValue();\n            }\n        }\n        return -1;\n    }","id":4910,"modified_method":"public int getIfType(int ifIndex) {\n        return (getEntry(ifIndex) == null ? -1 : getEntry(ifIndex).getIfType());\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int getOperStatus(int ifIndex) {\n        if (getEntries() == null)\n            return -1;\n        \n        for(IfTableEntry entry : getEntries()) {\n            Integer ndx = entry.getIfIndex();\n            if (ndx != null && ndx.intValue() == ifIndex) {\n                // found it\n                // extract the admin status\n                //\n                Integer ifStatus = entry.getIfOperStatus();\n                if (ifStatus != null)\n                    return ifStatus.intValue();\n            }\n        }\n        return -1;\n    }","id":4911,"modified_method":"public int getOperStatus(int ifIndex) {\n        return (getEntry(ifIndex) == null ? -1 : getEntry(ifIndex).getIfOperStatus());\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getIfName(int ifIndex) {\n    \n        // Find ifXTable entry with matching ifIndex\n\n        for(IfXTableEntry ifXEntry : getEntries()) {\n    \n            int ifXIndex = -1;\n            Integer snmpIfIndex = ifXEntry.getIfIndex();\n            if (snmpIfIndex != null)\n                ifXIndex = snmpIfIndex.intValue();\n    \n            // compare with passed ifIndex\n            if (ifXIndex == ifIndex) {\n                // Found match! Get the ifName\n                return ifXEntry.getIfName();\n            }\n    \n        }\n        return null;\n    }","id":4912,"modified_method":"public String getIfName(int ifIndex) {\n        return getEntry(ifIndex) == null ? null : getEntry(ifIndex).getIfName();\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getIfAlias(int ifIndex) {\n        // Find ifXTable entry with matching ifIndex\n\n        for(IfXTableEntry ifXEntry : getEntries()) {\n    \n            int ifXIndex = -1;\n            Integer snmpIfIndex = ifXEntry.getIfIndex();\n            if (snmpIfIndex != null)\n                ifXIndex = snmpIfIndex.intValue();\n    \n            // compare with passed ifIndex\n            if (ifXIndex == ifIndex) {\n                // Found match! Get the ifAlias\n                return ifXEntry.getIfAlias();\n            }\n    \n        }\n        return null;\n    }","id":4913,"modified_method":"public String getIfAlias(int ifIndex) {\n        return getEntry(ifIndex) == null ? null : getEntry(ifIndex).getIfAlias();\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public InetAddress[] getIfAddressAndMask(int ifIndex) {\n        if (getEntries() == null)\n            return null;\n        \n        for(IpAddrTableEntry entry : getEntries()) {\n\n            Integer ndx = entry.getIpAdEntIfIndex();\n            if (ndx != null && ndx.intValue() == ifIndex) {\n                // found it\n                // extract the address\n                //\n                InetAddress[] pair = new InetAddress[2];\n                pair[0] = entry.getIpAdEntAddr();\n                pair[1] = entry.getIpAdEntNetMask();\n                return pair;\n            }\n        }\n        return null;\n    }","id":4914,"modified_method":"public InetAddress[] getIfAddressAndMask(int ifIndex) {\n        IpAddrTableEntry entry = getEntryByIfIndex(ifIndex);\n        return entry == null ? null : ipAddrPair(entry.getIpAdEntAddr(), entry.getIpAdEntNetMask());\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Returns all Internet addresses at the corresponding index. If the address\n     * cannot be resolved then a null reference is returned.\n     * \n     * @param ifIndex\n     *            The index to search for.\n     * \n     * @return list of InetAddress objects representing each of the interfaces\n     *         IP addresses.\n     */\n    \n    public List<InetAddress> getIpAddresses(int index) {\n        if (index == -1 || getEntries() == null) {\n            return null;\n        }\n        \n        List<InetAddress> addresses = new ArrayList<InetAddress>();\n        \n        for(IpAddrTableEntry entry : getEntries()) {\n\n            Integer ndx = entry.getIpAdEntIfIndex();\n            if (ndx != null && ndx.intValue() == index) {\n                \n                InetAddress ifAddr = entry.getIpAdEntAddr();\n                if (ifAddr != null) {\n                    addresses.add(ifAddr);\n                }\n            }\n        }\n        return addresses;\n    }","id":4915,"modified_method":"public InetAddress getIfAddress(int ifIndex) {\n        IpAddrTableEntry entry = getEntryByIfIndex(ifIndex);\n        return entry == null ? null : entry.getIpAdEntAddr();\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int getIfIndex(InetAddress address) {\n        if (getEntries() == null) {\n            return -1;\n        }\n        if (log().isDebugEnabled())\n            log().debug(\"getIfIndex: num ipAddrTable entries: \" + getEntries().size());\n\n        for(IpAddrTableEntry entry : getEntries()) {\n\n            InetAddress ifAddr = entry.getIpAdEntAddr();\n            if (ifAddr != null && ifAddr.equals(address)) {\n                // found it\n                // extract the ifIndex\n                //\n                Integer ndx = entry.getIpAdEntIfIndex();\n                log().debug(\"getIfIndex: got a match for address \" + address.getHostAddress() + \" index: \" + ndx);\n                if (ndx != null)\n                    return ndx.intValue();\n            }\n        }\n        log().debug(\"getIfIndex: no matching ipAddrTable entry for \" + address.getHostAddress());\n        return -1;\n    }","id":4916,"modified_method":"public int getIfIndex(InetAddress address) {\n        return getEntry(address) == null ? -1 : getEntry(address).getIpAdEntIfIndex();\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void updateSnmpDataForResource(ScanResource sr) {\n        if (getCollector() != null && getCollector().hasSystemGroup()) {\n            sr.setAttribute(\"sysContact\", getCollector().getSystemGroup().getSysContact());\n            sr.setAttribute(\"sysDescription\", getCollector().getSystemGroup().getSysDescr());\n            sr.setAttribute(\"sysLocation\", getCollector().getSystemGroup().getSysLocation());\n            sr.setAttribute(\"sysObjectId\", getCollector().getSystemGroup().getSysObjectID());\n        }\n    }","id":4917,"modified_method":"public void updateSnmpDataForResource(ScanResource sr) {\n        if (getCollector() != null && getCollector().hasSystemGroup()) {\n            sr.setAttribute(\"sysContact\", getSystemGroup().getSysContact());\n            sr.setAttribute(\"sysDescription\", getSystemGroup().getSysDescr());\n            sr.setAttribute(\"sysLocation\", getSystemGroup().getSysLocation());\n            sr.setAttribute(\"sysObjectId\", getSystemGroup().getSysObjectID());\n        }\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"String getNetMask(int ifIndex) {\n        InetAddress[] ifAddressAndMask = getCollector().getIfAddressAndMask(ifIndex);\n    \tif (ifAddressAndMask != null && ifAddressAndMask.length > 1 && ifAddressAndMask[1] != null)\n    \t\treturn ifAddressAndMask[1].getHostAddress();\n    \treturn null;\n    }","id":4918,"modified_method":"String getNetMask(int ifIndex) {\n        InetAddress addr = getCollector().getIpAddrTable().getNetMask(ifIndex);\n        return (addr == null ? null : addr.getHostAddress());\n    }","commit_id":"a8a8a00ba992cfd02c4ba963afaed55d86c134c7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Long getIfSpeed(final int ifIndex) {\n        Long ifSpeed = null;\n        \n        if (hasIfTable()) {\n            ifSpeed = m_ifTable.getIfSpeed(ifIndex);\n        }\n        return ifSpeed;\n    }","id":4919,"modified_method":"public Long getIfSpeed(final int ifIndex) {\n        return hasIfTable() ? getIfTable().getIfSpeed(ifIndex) : null;\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getPhysAddr(final int ifIndex) {\n        String physAddr = null;\n        \n        if (hasIfTable()) {\n            physAddr = m_ifTable.getPhysAddr(ifIndex);\n        }\n        return physAddr;\n    }","id":4920,"modified_method":"public String getPhysAddr(final int ifIndex) {\n        return hasIfTable() ? getIfTable().getPhysAddr(ifIndex) : null;\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * \n     */\n    public String getIfAlias(int ifIndex) {\n        String snmpIfAlias = null;\n\n        if (hasIfXTable()) {\n            snmpIfAlias = m_ifXTable.getIfAlias(ifIndex);\n\n            if (log().isDebugEnabled()) {\n                if (snmpIfAlias != null) {\n                    log().debug(\"getIfAlias: ifIndex \" + ifIndex + \" has ifAlias '\" + snmpIfAlias + \"'\");\n                } else {\n                    log().debug(\"getIfAlias: no ifAlias found for ifIndex \" + ifIndex);\n                }\n            }\n        } else {\n            if (log().isDebugEnabled()) {\n                log().debug(\"getIfAlias: no ifXTable retrieved from \" + m_address);\n            }\n        }\n\n        return snmpIfAlias;\n    }","id":4921,"modified_method":"/**\n     * \n     */\n    public String getIfAlias(int ifIndex) {\n        String snmpIfAlias = null;\n        \n        if (hasIfXTable()) {\n            snmpIfAlias = getIfXTable().getIfAlias(ifIndex);\n\n            if (log().isDebugEnabled()) {\n                if (snmpIfAlias != null) {\n                    log().debug(\"getIfAlias: ifIndex \" + ifIndex + \" has ifAlias '\" + snmpIfAlias + \"'\");\n                } else {\n                    log().debug(\"getIfAlias: no ifAlias found for ifIndex \" + ifIndex);\n                }\n            }\n        } else {\n            if (log().isDebugEnabled()) {\n                log().debug(\"getIfAlias: no ifXTable retrieved from \" + m_address);\n            }\n        }\n\n        return snmpIfAlias;\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getIfDescr(final int ifIndex) {\n        String ifDescr = null;\n        \n        if (hasIfTable()) {\n            ifDescr = m_ifTable.getIfDescr(ifIndex);\n        }\n        return ifDescr;\n    }","id":4922,"modified_method":"public String getIfDescr(final int ifIndex) {\n        return hasIfTable() ? m_ifTable.getIfDescr(ifIndex) :  null;\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getPhysAddr(final int ifIndex) {\n        String physAddr = null;   \n        if (getEntries() != null) {\n            for(IfTableEntry entry : getEntries()) {\n                Integer ndx = entry.getIfIndex();\n                if (ndx != null && ndx.intValue() == ifIndex) {\n                    physAddr = entry.getPhysAddr();\n                }\n            }\n        }\n        return physAddr;\n    }","id":4923,"modified_method":"public String getPhysAddr(final int ifIndex) {\n        return (getEntry(ifIndex) == null ? null : getEntry(ifIndex).getPhysAddr());\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Long getIfSpeed(final int ifIndex) {\n        Long ifSpeed = null;   \n        if (getEntries() != null) {\n            for(IfTableEntry entry : getEntries()) {\n                Integer ndx = entry.getIfIndex();\n                if (ndx != null && ndx.intValue() == ifIndex) {\n                    ifSpeed = entry.getIfSpeed();\n                }\n            }\n        }\n        return ifSpeed;\n    }","id":4924,"modified_method":"public Long getIfSpeed(final int ifIndex) {\n        return (getEntry(ifIndex) == null ? null : getEntry(ifIndex).getIfSpeed());\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getIfDescr(final int ifIndex) {\n        String ifDescr = null;   \n        if (getEntries() != null) {\n            for(IfTableEntry entry : getEntries()) {\n                Integer ndx = entry.getIfIndex();\n                if (ndx != null && ndx.intValue() == ifIndex) {\n                    ifDescr = entry.getIfDescr();\n                }\n            }\n        }\n        return ifDescr;\n    }","id":4925,"modified_method":"public String getIfDescr(final int ifIndex) {\n        return (getEntry(ifIndex) == null ? null : getEntry(ifIndex).getIfDescr());\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int getIfType(int ifIndex) {\n        if (getEntries() == null)\n            return -1;\n        \n        for(IfTableEntry entry : getEntries()) {\n            Integer ndx = entry.getIfIndex();\n            if (ndx != null && ndx.intValue() == ifIndex) {\n                // found it\n                // extract the ifType\n                //\n                Integer ifType = entry.getIfType();\n                if (ifType != null)\n                    return ifType.intValue();\n            }\n        }\n        return -1;\n    }","id":4926,"modified_method":"public int getIfType(int ifIndex) {\n        return (getEntry(ifIndex) == null ? -1 : getEntry(ifIndex).getIfType());\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int getAdminStatus(int ifIndex) {\n        if (getEntries() == null)\n            return -1;\n        \n        for(IfTableEntry entry : getEntries()) {\n            Integer ndx = entry.getIfIndex();\n            if (ndx != null && ndx.intValue() == ifIndex) {\n                // found it\n                // extract the admin status\n                //\n                Integer ifStatus = entry.getIfAdminStatus();\n                if (ifStatus != null)\n                    return ifStatus.intValue();\n            }\n        }\n        return -1;\n    }","id":4927,"modified_method":"public int getAdminStatus(int ifIndex) {\n        return (getEntry(ifIndex) == null ? -1 : getEntry(ifIndex).getIfAdminStatus());\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int getOperStatus(int ifIndex) {\n        if (getEntries() == null)\n            return -1;\n        \n        for(IfTableEntry entry : getEntries()) {\n            Integer ndx = entry.getIfIndex();\n            if (ndx != null && ndx.intValue() == ifIndex) {\n                // found it\n                // extract the admin status\n                //\n                Integer ifStatus = entry.getIfOperStatus();\n                if (ifStatus != null)\n                    return ifStatus.intValue();\n            }\n        }\n        return -1;\n    }","id":4928,"modified_method":"public int getOperStatus(int ifIndex) {\n        return (getEntry(ifIndex) == null ? -1 : getEntry(ifIndex).getIfOperStatus());\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getIfName(int ifIndex) {\n    \n        // Find ifXTable entry with matching ifIndex\n\n        for(IfXTableEntry ifXEntry : getEntries()) {\n    \n            int ifXIndex = -1;\n            Integer snmpIfIndex = ifXEntry.getIfIndex();\n            if (snmpIfIndex != null)\n                ifXIndex = snmpIfIndex.intValue();\n    \n            // compare with passed ifIndex\n            if (ifXIndex == ifIndex) {\n                // Found match! Get the ifName\n                return ifXEntry.getIfName();\n            }\n    \n        }\n        return null;\n    }","id":4929,"modified_method":"public String getIfName(int ifIndex) {\n        return getEntry(ifIndex) == null ? null : getEntry(ifIndex).getIfName();\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getIfAlias(int ifIndex) {\n        // Find ifXTable entry with matching ifIndex\n\n        for(IfXTableEntry ifXEntry : getEntries()) {\n    \n            int ifXIndex = -1;\n            Integer snmpIfIndex = ifXEntry.getIfIndex();\n            if (snmpIfIndex != null)\n                ifXIndex = snmpIfIndex.intValue();\n    \n            // compare with passed ifIndex\n            if (ifXIndex == ifIndex) {\n                // Found match! Get the ifAlias\n                return ifXEntry.getIfAlias();\n            }\n    \n        }\n        return null;\n    }","id":4930,"modified_method":"public String getIfAlias(int ifIndex) {\n        return getEntry(ifIndex) == null ? null : getEntry(ifIndex).getIfAlias();\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public InetAddress[] getIfAddressAndMask(int ifIndex) {\n        if (getEntries() == null)\n            return null;\n        \n        for(IpAddrTableEntry entry : getEntries()) {\n\n            Integer ndx = entry.getIpAdEntIfIndex();\n            if (ndx != null && ndx.intValue() == ifIndex) {\n                // found it\n                // extract the address\n                //\n                InetAddress[] pair = new InetAddress[2];\n                pair[0] = entry.getIpAdEntAddr();\n                pair[1] = entry.getIpAdEntNetMask();\n                return pair;\n            }\n        }\n        return null;\n    }","id":4931,"modified_method":"public InetAddress[] getIfAddressAndMask(int ifIndex) {\n        IpAddrTableEntry entry = getEntryByIfIndex(ifIndex);\n        return entry == null ? null : ipAddrPair(entry.getIpAdEntAddr(), entry.getIpAdEntNetMask());\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Returns all Internet addresses at the corresponding index. If the address\n     * cannot be resolved then a null reference is returned.\n     * \n     * @param ifIndex\n     *            The index to search for.\n     * \n     * @return list of InetAddress objects representing each of the interfaces\n     *         IP addresses.\n     */\n    \n    public List<InetAddress> getIpAddresses(int index) {\n        if (index == -1 || getEntries() == null) {\n            return null;\n        }\n        \n        List<InetAddress> addresses = new ArrayList<InetAddress>();\n        \n        for(IpAddrTableEntry entry : getEntries()) {\n\n            Integer ndx = entry.getIpAdEntIfIndex();\n            if (ndx != null && ndx.intValue() == index) {\n                \n                InetAddress ifAddr = entry.getIpAdEntAddr();\n                if (ifAddr != null) {\n                    addresses.add(ifAddr);\n                }\n            }\n        }\n        return addresses;\n    }","id":4932,"modified_method":"public InetAddress getIfAddress(int ifIndex) {\n        IpAddrTableEntry entry = getEntryByIfIndex(ifIndex);\n        return entry == null ? null : entry.getIpAdEntAddr();\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int getIfIndex(InetAddress address) {\n        if (getEntries() == null) {\n            return -1;\n        }\n        if (log().isDebugEnabled())\n            log().debug(\"getIfIndex: num ipAddrTable entries: \" + getEntries().size());\n\n        for(IpAddrTableEntry entry : getEntries()) {\n\n            InetAddress ifAddr = entry.getIpAdEntAddr();\n            if (ifAddr != null && ifAddr.equals(address)) {\n                // found it\n                // extract the ifIndex\n                //\n                Integer ndx = entry.getIpAdEntIfIndex();\n                log().debug(\"getIfIndex: got a match for address \" + address.getHostAddress() + \" index: \" + ndx);\n                if (ndx != null)\n                    return ndx.intValue();\n            }\n        }\n        log().debug(\"getIfIndex: no matching ipAddrTable entry for \" + address.getHostAddress());\n        return -1;\n    }","id":4933,"modified_method":"public int getIfIndex(InetAddress address) {\n        return getEntry(address) == null ? -1 : getEntry(address).getIpAdEntIfIndex();\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void updateSnmpDataForResource(ScanResource sr) {\n        if (getCollector() != null && getCollector().hasSystemGroup()) {\n            sr.setAttribute(\"sysContact\", getCollector().getSystemGroup().getSysContact());\n            sr.setAttribute(\"sysDescription\", getCollector().getSystemGroup().getSysDescr());\n            sr.setAttribute(\"sysLocation\", getCollector().getSystemGroup().getSysLocation());\n            sr.setAttribute(\"sysObjectId\", getCollector().getSystemGroup().getSysObjectID());\n        }\n    }","id":4934,"modified_method":"public void updateSnmpDataForResource(ScanResource sr) {\n        if (getCollector() != null && getCollector().hasSystemGroup()) {\n            sr.setAttribute(\"sysContact\", getSystemGroup().getSysContact());\n            sr.setAttribute(\"sysDescription\", getSystemGroup().getSysDescr());\n            sr.setAttribute(\"sysLocation\", getSystemGroup().getSysLocation());\n            sr.setAttribute(\"sysObjectId\", getSystemGroup().getSysObjectID());\n        }\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"String getNetMask(int ifIndex) {\n        InetAddress[] ifAddressAndMask = getCollector().getIfAddressAndMask(ifIndex);\n    \tif (ifAddressAndMask != null && ifAddressAndMask.length > 1 && ifAddressAndMask[1] != null)\n    \t\treturn ifAddressAndMask[1].getHostAddress();\n    \treturn null;\n    }","id":4935,"modified_method":"String getNetMask(int ifIndex) {\n        InetAddress addr = getCollector().getIpAddrTable().getNetMask(ifIndex);\n        return (addr == null ? null : addr.getHostAddress());\n    }","commit_id":"e70ce530f2c8ff8c92c0404bbc3fb4e74eb1fc17","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getPhysAddr(final int ifIndex) {\n        String physAddr = null;\n        \n        if (hasIfTable()) {\n            physAddr = m_ifTable.getPhysAddr(ifIndex);\n        }\n        return physAddr;\n    }","id":4936,"modified_method":"public String getPhysAddr(final int ifIndex) {\n        return hasIfTable() ? getIfTable().getPhysAddr(ifIndex) : null;\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * \n     */\n    public String getIfAlias(int ifIndex) {\n        String snmpIfAlias = null;\n\n        if (hasIfXTable()) {\n            snmpIfAlias = m_ifXTable.getIfAlias(ifIndex);\n\n            if (log().isDebugEnabled()) {\n                if (snmpIfAlias != null) {\n                    log().debug(\"getIfAlias: ifIndex \" + ifIndex + \" has ifAlias '\" + snmpIfAlias + \"'\");\n                } else {\n                    log().debug(\"getIfAlias: no ifAlias found for ifIndex \" + ifIndex);\n                }\n            }\n        } else {\n            if (log().isDebugEnabled()) {\n                log().debug(\"getIfAlias: no ifXTable retrieved from \" + m_address);\n            }\n        }\n\n        return snmpIfAlias;\n    }","id":4937,"modified_method":"/**\n     * \n     */\n    public String getIfAlias(int ifIndex) {\n        String snmpIfAlias = null;\n        \n        if (hasIfXTable()) {\n            snmpIfAlias = getIfXTable().getIfAlias(ifIndex);\n\n            if (log().isDebugEnabled()) {\n                if (snmpIfAlias != null) {\n                    log().debug(\"getIfAlias: ifIndex \" + ifIndex + \" has ifAlias '\" + snmpIfAlias + \"'\");\n                } else {\n                    log().debug(\"getIfAlias: no ifAlias found for ifIndex \" + ifIndex);\n                }\n            }\n        } else {\n            if (log().isDebugEnabled()) {\n                log().debug(\"getIfAlias: no ifXTable retrieved from \" + m_address);\n            }\n        }\n\n        return snmpIfAlias;\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Long getIfSpeed(final int ifIndex) {\n        Long ifSpeed = null;\n        \n        if (hasIfTable()) {\n            ifSpeed = m_ifTable.getIfSpeed(ifIndex);\n        }\n        return ifSpeed;\n    }","id":4938,"modified_method":"public Long getIfSpeed(final int ifIndex) {\n        return hasIfTable() ? getIfTable().getIfSpeed(ifIndex) : null;\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getIfDescr(final int ifIndex) {\n        String ifDescr = null;\n        \n        if (hasIfTable()) {\n            ifDescr = m_ifTable.getIfDescr(ifIndex);\n        }\n        return ifDescr;\n    }","id":4939,"modified_method":"public String getIfDescr(final int ifIndex) {\n        return hasIfTable() ? m_ifTable.getIfDescr(ifIndex) :  null;\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int getOperStatus(int ifIndex) {\n        if (getEntries() == null)\n            return -1;\n        \n        for(IfTableEntry entry : getEntries()) {\n            Integer ndx = entry.getIfIndex();\n            if (ndx != null && ndx.intValue() == ifIndex) {\n                // found it\n                // extract the admin status\n                //\n                Integer ifStatus = entry.getIfOperStatus();\n                if (ifStatus != null)\n                    return ifStatus.intValue();\n            }\n        }\n        return -1;\n    }","id":4940,"modified_method":"public int getOperStatus(int ifIndex) {\n        return (getEntry(ifIndex) == null ? -1 : getEntry(ifIndex).getIfOperStatus());\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Long getIfSpeed(final int ifIndex) {\n        Long ifSpeed = null;   \n        if (getEntries() != null) {\n            for(IfTableEntry entry : getEntries()) {\n                Integer ndx = entry.getIfIndex();\n                if (ndx != null && ndx.intValue() == ifIndex) {\n                    ifSpeed = entry.getIfSpeed();\n                }\n            }\n        }\n        return ifSpeed;\n    }","id":4941,"modified_method":"public Long getIfSpeed(final int ifIndex) {\n        return (getEntry(ifIndex) == null ? null : getEntry(ifIndex).getIfSpeed());\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int getIfType(int ifIndex) {\n        if (getEntries() == null)\n            return -1;\n        \n        for(IfTableEntry entry : getEntries()) {\n            Integer ndx = entry.getIfIndex();\n            if (ndx != null && ndx.intValue() == ifIndex) {\n                // found it\n                // extract the ifType\n                //\n                Integer ifType = entry.getIfType();\n                if (ifType != null)\n                    return ifType.intValue();\n            }\n        }\n        return -1;\n    }","id":4942,"modified_method":"public int getIfType(int ifIndex) {\n        return (getEntry(ifIndex) == null ? -1 : getEntry(ifIndex).getIfType());\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int getAdminStatus(int ifIndex) {\n        if (getEntries() == null)\n            return -1;\n        \n        for(IfTableEntry entry : getEntries()) {\n            Integer ndx = entry.getIfIndex();\n            if (ndx != null && ndx.intValue() == ifIndex) {\n                // found it\n                // extract the admin status\n                //\n                Integer ifStatus = entry.getIfAdminStatus();\n                if (ifStatus != null)\n                    return ifStatus.intValue();\n            }\n        }\n        return -1;\n    }","id":4943,"modified_method":"public int getAdminStatus(int ifIndex) {\n        return (getEntry(ifIndex) == null ? -1 : getEntry(ifIndex).getIfAdminStatus());\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getPhysAddr(final int ifIndex) {\n        String physAddr = null;   \n        if (getEntries() != null) {\n            for(IfTableEntry entry : getEntries()) {\n                Integer ndx = entry.getIfIndex();\n                if (ndx != null && ndx.intValue() == ifIndex) {\n                    physAddr = entry.getPhysAddr();\n                }\n            }\n        }\n        return physAddr;\n    }","id":4944,"modified_method":"public String getPhysAddr(final int ifIndex) {\n        return (getEntry(ifIndex) == null ? null : getEntry(ifIndex).getPhysAddr());\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getIfDescr(final int ifIndex) {\n        String ifDescr = null;   \n        if (getEntries() != null) {\n            for(IfTableEntry entry : getEntries()) {\n                Integer ndx = entry.getIfIndex();\n                if (ndx != null && ndx.intValue() == ifIndex) {\n                    ifDescr = entry.getIfDescr();\n                }\n            }\n        }\n        return ifDescr;\n    }","id":4945,"modified_method":"public String getIfDescr(final int ifIndex) {\n        return (getEntry(ifIndex) == null ? null : getEntry(ifIndex).getIfDescr());\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getIfName(int ifIndex) {\n    \n        // Find ifXTable entry with matching ifIndex\n\n        for(IfXTableEntry ifXEntry : getEntries()) {\n    \n            int ifXIndex = -1;\n            Integer snmpIfIndex = ifXEntry.getIfIndex();\n            if (snmpIfIndex != null)\n                ifXIndex = snmpIfIndex.intValue();\n    \n            // compare with passed ifIndex\n            if (ifXIndex == ifIndex) {\n                // Found match! Get the ifName\n                return ifXEntry.getIfName();\n            }\n    \n        }\n        return null;\n    }","id":4946,"modified_method":"public String getIfName(int ifIndex) {\n        return getEntry(ifIndex) == null ? null : getEntry(ifIndex).getIfName();\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getIfAlias(int ifIndex) {\n        // Find ifXTable entry with matching ifIndex\n\n        for(IfXTableEntry ifXEntry : getEntries()) {\n    \n            int ifXIndex = -1;\n            Integer snmpIfIndex = ifXEntry.getIfIndex();\n            if (snmpIfIndex != null)\n                ifXIndex = snmpIfIndex.intValue();\n    \n            // compare with passed ifIndex\n            if (ifXIndex == ifIndex) {\n                // Found match! Get the ifAlias\n                return ifXEntry.getIfAlias();\n            }\n    \n        }\n        return null;\n    }","id":4947,"modified_method":"public String getIfAlias(int ifIndex) {\n        return getEntry(ifIndex) == null ? null : getEntry(ifIndex).getIfAlias();\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int getIfIndex(InetAddress address) {\n        if (getEntries() == null) {\n            return -1;\n        }\n        if (log().isDebugEnabled())\n            log().debug(\"getIfIndex: num ipAddrTable entries: \" + getEntries().size());\n\n        for(IpAddrTableEntry entry : getEntries()) {\n\n            InetAddress ifAddr = entry.getIpAdEntAddr();\n            if (ifAddr != null && ifAddr.equals(address)) {\n                // found it\n                // extract the ifIndex\n                //\n                Integer ndx = entry.getIpAdEntIfIndex();\n                log().debug(\"getIfIndex: got a match for address \" + address.getHostAddress() + \" index: \" + ndx);\n                if (ndx != null)\n                    return ndx.intValue();\n            }\n        }\n        log().debug(\"getIfIndex: no matching ipAddrTable entry for \" + address.getHostAddress());\n        return -1;\n    }","id":4948,"modified_method":"public int getIfIndex(InetAddress address) {\n        return getEntry(address) == null ? -1 : getEntry(address).getIpAdEntIfIndex();\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public InetAddress[] getIfAddressAndMask(int ifIndex) {\n        if (getEntries() == null)\n            return null;\n        \n        for(IpAddrTableEntry entry : getEntries()) {\n\n            Integer ndx = entry.getIpAdEntIfIndex();\n            if (ndx != null && ndx.intValue() == ifIndex) {\n                // found it\n                // extract the address\n                //\n                InetAddress[] pair = new InetAddress[2];\n                pair[0] = entry.getIpAdEntAddr();\n                pair[1] = entry.getIpAdEntNetMask();\n                return pair;\n            }\n        }\n        return null;\n    }","id":4949,"modified_method":"public InetAddress[] getIfAddressAndMask(int ifIndex) {\n        IpAddrTableEntry entry = getEntryByIfIndex(ifIndex);\n        return entry == null ? null : ipAddrPair(entry.getIpAdEntAddr(), entry.getIpAdEntNetMask());\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Returns all Internet addresses at the corresponding index. If the address\n     * cannot be resolved then a null reference is returned.\n     * \n     * @param ifIndex\n     *            The index to search for.\n     * \n     * @return list of InetAddress objects representing each of the interfaces\n     *         IP addresses.\n     */\n    \n    public List<InetAddress> getIpAddresses(int index) {\n        if (index == -1 || getEntries() == null) {\n            return null;\n        }\n        \n        List<InetAddress> addresses = new ArrayList<InetAddress>();\n        \n        for(IpAddrTableEntry entry : getEntries()) {\n\n            Integer ndx = entry.getIpAdEntIfIndex();\n            if (ndx != null && ndx.intValue() == index) {\n                \n                InetAddress ifAddr = entry.getIpAdEntAddr();\n                if (ifAddr != null) {\n                    addresses.add(ifAddr);\n                }\n            }\n        }\n        return addresses;\n    }","id":4950,"modified_method":"public InetAddress getIfAddress(int ifIndex) {\n        IpAddrTableEntry entry = getEntryByIfIndex(ifIndex);\n        return entry == null ? null : entry.getIpAdEntAddr();\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void updateSnmpDataForResource(ScanResource sr) {\n        if (getCollector() != null && getCollector().hasSystemGroup()) {\n            sr.setAttribute(\"sysContact\", getCollector().getSystemGroup().getSysContact());\n            sr.setAttribute(\"sysDescription\", getCollector().getSystemGroup().getSysDescr());\n            sr.setAttribute(\"sysLocation\", getCollector().getSystemGroup().getSysLocation());\n            sr.setAttribute(\"sysObjectId\", getCollector().getSystemGroup().getSysObjectID());\n        }\n    }","id":4951,"modified_method":"public void updateSnmpDataForResource(ScanResource sr) {\n        if (getCollector() != null && getCollector().hasSystemGroup()) {\n            sr.setAttribute(\"sysContact\", getSystemGroup().getSysContact());\n            sr.setAttribute(\"sysDescription\", getSystemGroup().getSysDescr());\n            sr.setAttribute(\"sysLocation\", getSystemGroup().getSysLocation());\n            sr.setAttribute(\"sysObjectId\", getSystemGroup().getSysObjectID());\n        }\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"String getNetMask(int ifIndex) {\n        InetAddress[] ifAddressAndMask = getCollector().getIfAddressAndMask(ifIndex);\n    \tif (ifAddressAndMask != null && ifAddressAndMask.length > 1 && ifAddressAndMask[1] != null)\n    \t\treturn ifAddressAndMask[1].getHostAddress();\n    \treturn null;\n    }","id":4952,"modified_method":"String getNetMask(int ifIndex) {\n        InetAddress addr = getCollector().getIpAddrTable().getNetMask(ifIndex);\n        return (addr == null ? null : addr.getHostAddress());\n    }","commit_id":"f7b66d8ac1196091002e2e791a91782b7c6805d2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"boolean maybeShrink(ObjectContainer container) {\n\t\t\n\t\tif(logMINOR) Logger.minor(this, \"maybeShrink()\");\n\t\tlong now = System.currentTimeMillis();\n\t\t\n\t\tlong newBlocks;\n\t\t\n\t\tsynchronized(this) {\n\t\t\n\t\tif(now - lastCheckedEnd > 60*1000) {\n\t\t\tif(logMINOR) Logger.minor(this, \"maybeShrink() inner\");\n\t\t\t// Check whether there is a big white space at the end of the file.\n\t\t\tlong size;\n\t\t\ttry {\n\t\t\t\tsize = channel.size();\n\t\t\t} catch (IOException e1) {\n\t\t\t\tLogger.error(this, \"Unable to find size of temp blob storage file: \"+e1, e1);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tsize -= size % blockSize;\n\t\t\tlong blocks = size / blockSize;\n\t\t\tif(blocks <= 32) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, blob file not larger than a megabyte\");\n\t\t\t\tlastCheckedEnd = now;\n\t\t\t\tqueueMaybeShrink();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlong lastNotCommitted = notCommittedBlobs.isEmpty() ? 0 : notCommittedBlobs.lastKey();\n\t\t\tlong lastAlmostFreed = almostFreeSlots.isEmpty() ? 0 : almostFreeSlots.lastKey();\n\t\t\tif(lastNotCommitted < lastAlmostFreed) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Last almost freed: \"+lastAlmostFreed+\" replacing last not committed: \"+lastNotCommitted);\n\t\t\t\tlastNotCommitted = lastAlmostFreed;\n\t\t\t}\n\t\t\tdouble full = (double)lastNotCommitted / (double)blocks;\n\t\t\tif(full > 0.8) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, last not committed block is at \"+full*100+\"% (\"+lastNotCommitted+\" of \"+blocks+\")\");\n\t\t\t\tlastCheckedEnd = now;\n\t\t\t\tqueueMaybeShrink();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t/*\n\t\t\t * Query for the non-free tag with the highest value.\n\t\t\t * This query can return a vast number of objects! And it's all kept in RAM in IMMEDIATE mode.\n\t\t\t * FIXME LAZY query mode may help, but would likely require changes to other code.\n\t\t\t * In the meantime, lets try from the end, going backwards by a manageable number of slots at a time...\n\t\t\t */\n\t\t\tlong lastCommitted = -1;\n\t\t\tPersistentBlobTempBucketTag lastTag = null;\n\t\t\tPersistentBlobTempBucket lastBucket = null;\n\t\t\tObjectSet<PersistentBlobTempBucketTag> tags = null;\n\t\t\tQuery query = null;\n\t\t\tfor(long threshold = blocks - 4096; threshold >= -4095; threshold -= 4096) {\n\t\t\t\tquery = container.query();\n\t\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\t\tquery.descend(\"isFree\").constrain(false);\n\t\t\t\tquery.descend(\"index\").orderDescending();\n\t\t\t\tquery.descend(\"index\").constrain(threshold).greater();\n\t\t\t\ttags = query.execute();\n\t\t\t\tlastTag = null;\n\t\t\t\twhile(tags.hasNext() && (lastTag = tags.next()).bucket == null) {\n\t\t\t\t\tLogger.error(this, \"Last tag has no bucket! index \"+lastTag.index);\n\t\t\t\t\tlastTag.isFree = true;\n\t\t\t\t\tcontainer.store(lastTag);\n\t\t\t\t}\n\t\t\t\tif(lastTag == null) continue;\n\t\t\t\tlastBucket = lastTag.bucket;\n\t\t\t\tlastCommitted = lastTag.index;\n\t\t\t\tLogger.normal(this, \"Last committed block is \"+lastCommitted);\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(lastCommitted == -1) {\n\t\t\t\t// No used slots at all?!\n\t\t\t\t// There may be some not committed though\n\t\t\t\tLogger.normal(this, \"No used slots in persistent temp file (but last not committed = \"+lastNotCommitted+\")\");\n\t\t\t\tlastCommitted = 0;\n\t\t\t\tquery = null;\n\t\t\t}\n\t\t\tfull = (double) lastCommitted / (double) blocks;\n\t\t\tif(full > 0.8) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, last committed block is at \"+full*100+\"%\");\n\t\t\t\tlastCheckedEnd = now;\n\t\t\t\tqueueMaybeShrink();\n\t\t\t\tint blocksMoved = 0;\n\t\t\t\twhile(true) {\n\t\t\t\t\tcontainer.activate(lastBucket, 1);\n\t\t\t\t\tif(freeSlots.isEmpty()) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tjobRunner.queue(slotFinder, NativeThread.LOW_PRIORITY, false);\n\t\t\t\t\t\t} catch (DatabaseDisabledException e) {\n\t\t\t\t\t\t\t// Doh\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tLong lFirstSlot = freeSlots.firstKey();\n\t\t\t\t\tlong firstSlot = lFirstSlot;\n\t\t\t\t\tif(firstSlot < lastCommitted) {\n\t\t\t\t\t\t// There is some degree of fragmentation.\n\t\t\t\t\t\t// Move one key.\n\t\t\t\t\t\tPersistentBlobTempBucketTag newTag = freeSlots.remove(lFirstSlot);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Synchronize on the target.\n\t\t\t\t\t\tsynchronized(lastBucket) {\n\t\t\t\t\t\t\t// Do the move.\n\t\t\t\t\t\t\tSystem.err.println(\"Attempting to defragment: moving \"+lastTag.index+\" to \"+newTag.index);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tbyte[] blob = readSlot(lastTag.index);\n\t\t\t\t\t\t\t\twriteSlot(newTag.index, blob);\n\t\t\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\t\t\tSystem.err.println(\"Failed to move bucket in defrag: \"+e);\n\t\t\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t\t\tLogger.error(this, \"Failed to move bucket in defrag: \"+e, e);\n\t\t\t\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastBucket.setIndex(newTag.index);\n\t\t\t\t\t\t\tlastBucket.setTag(newTag);\n\t\t\t\t\t\t\tnewTag.bucket = lastBucket;\n\t\t\t\t\t\t\tlastTag.bucket = null;\n\t\t\t\t\t\t\tlastTag.isFree = true;\n\t\t\t\t\t\t\tcontainer.store(newTag);\n\t\t\t\t\t\t\tcontainer.store(lastTag);\n\t\t\t\t\t\t\tcontainer.store(lastBucket);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontainer.deactivate(lastBucket, 1);\n\t\t\t\t\tif(blocksMoved++ < 10) {\n\t\t\t\t\t\twhile(tags.hasNext() && (lastTag = tags.next()).bucket == null) {\n\t\t\t\t\t\t\tLogger.error(this, \"Last tag has no bucket! index \"+lastTag.index);\n\t\t\t\t\t\t\tlastTag.isFree = true;\n\t\t\t\t\t\t\tcontainer.store(lastTag);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(lastTag == null) continue;\n\t\t\t\t\t\tlastBucket = lastTag.bucket;\n\t\t\t\t\t\tlastCommitted = lastTag.index;\n\t\t\t\t\t\tLogger.normal(this, \"Last committed block is now \"+lastCommitted);\n\t\t\t\t\t} else break;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\traf.getFD().sync();\n\t\t\t\t\tSystem.err.println(\"Moved \"+blocksMoved+\" in defrag and synced to disk\");\n\t\t\t\t} catch (SyncFailedException e) {\n\t\t\t\t\tSystem.err.println(\"Failed to sync to disk after defragging: \"+e);\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tSystem.err.println(\"Failed to sync to disk after defragging: \"+e);\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tquery = null;\n\t\t\t}\n\t\t\tlong lastBlock = Math.max(lastCommitted, lastNotCommitted);\n\t\t\t// Must be 10% free at end\n\t\t\tnewBlocks = (long) ((lastBlock + 32) * 1.1);\n\t\t\tnewBlocks = Math.max(newBlocks, 32);\n\t\t\tif(newBlocks >= blocks) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, would shrink from \"+blocks+\" to \"+newBlocks);\n\t\t\t\tlastCheckedEnd = now;\n\t\t\t\tqueueMaybeShrink();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tSystem.err.println(\"Shrinking blob file from \"+blocks+\" to \"+newBlocks);\n\t\t\tfor(long l = newBlocks; l <= blocks; l++) {\n\t\t\t\tfreeSlots.remove(l);\n\t\t\t}\n\t\t\tfor(Long l : freeSlots.keySet()) {\n\t\t\t\tif(l > newBlocks) {\n\t\t\t\t\tLogger.error(this, \"Removing free slot \"+l+\" over the current block limit\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tlastCheckedEnd = now;\n\t\t\tqueueMaybeShrink();\n\t\t} else return false;\n\t\t}\n\t\ttry {\n\t\t\tchannel.truncate(newBlocks * blockSize);\n\t\t} catch (IOException e) {\n\t\t\tSystem.err.println(\"Shrinking blob file failed!\");\n\t\t\tSystem.err.println(e);\n\t\t\te.printStackTrace();\n\t\t\tLogger.error(this, \"Shrinking blob file failed!: \"+e, e);\n\t\t}\n\t\tQuery query = container.query();\n\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\tquery.descend(\"index\").constrain(newBlocks).greater();\n\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\twhile(tags.hasNext()) container.delete(tags.next());\n\t\treturn true;\n\t\t\n\t}","id":4953,"modified_method":"boolean maybeShrink(ObjectContainer container) {\n\t\t\n\t\tif(logMINOR) Logger.minor(this, \"maybeShrink()\");\n\t\tlong now = System.currentTimeMillis();\n\t\t\n\t\tlong newBlocks;\n\t\t\n\t\tsynchronized(this) {\n\t\t\n\t\tif(now - lastCheckedEnd > 60*1000) {\n\t\t\tif(logMINOR) Logger.minor(this, \"maybeShrink() inner\");\n\t\t\t// Check whether there is a big white space at the end of the file.\n\t\t\tlong size;\n\t\t\ttry {\n\t\t\t\tsize = channel.size();\n\t\t\t} catch (IOException e1) {\n\t\t\t\tLogger.error(this, \"Unable to find size of temp blob storage file: \"+e1, e1);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tsize -= size % blockSize;\n\t\t\tlong blocks = size / blockSize;\n\t\t\tif(blocks <= 32) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, blob file not larger than a megabyte\");\n\t\t\t\tlastCheckedEnd = now;\n\t\t\t\tqueueMaybeShrink();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlong lastNotCommitted = notCommittedBlobs.isEmpty() ? 0 : notCommittedBlobs.lastKey();\n\t\t\tlong lastAlmostFreed = almostFreeSlots.isEmpty() ? 0 : almostFreeSlots.lastKey();\n\t\t\tif(lastNotCommitted < lastAlmostFreed) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Last almost freed: \"+lastAlmostFreed+\" replacing last not committed: \"+lastNotCommitted);\n\t\t\t\tlastNotCommitted = lastAlmostFreed;\n\t\t\t}\n\t\t\tdouble full = (double)lastNotCommitted / (double)blocks;\n\t\t\tif(full > 0.8) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, last not committed block is at \"+full*100+\"% (\"+lastNotCommitted+\" of \"+blocks+\")\");\n\t\t\t\tlastCheckedEnd = now;\n\t\t\t\tqueueMaybeShrink();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t/*\n\t\t\t * Query for the non-free tag with the highest value.\n\t\t\t * This query can return a vast number of objects! And it's all kept in RAM in IMMEDIATE mode.\n\t\t\t * FIXME LAZY query mode may help, but would likely require changes to other code.\n\t\t\t * In the meantime, lets try from the end, going backwards by a manageable number of slots at a time...\n\t\t\t */\n\t\t\tlong lastCommitted = -1;\n\t\t\tPersistentBlobTempBucketTag lastTag = null;\n\t\t\tPersistentBlobTempBucket lastBucket = null;\n\t\t\tObjectSet<PersistentBlobTempBucketTag> tags = null;\n\t\t\tQuery query = null;\n\t\t\tfor(long threshold = blocks - 4096; threshold >= -4095; threshold -= 4096) {\n\t\t\t\tquery = container.query();\n\t\t\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\t\t\tquery.descend(\"isFree\").constrain(false);\n\t\t\t\tquery.descend(\"index\").orderDescending();\n\t\t\t\tquery.descend(\"index\").constrain(threshold).greater();\n\t\t\t\ttags = query.execute();\n\t\t\t\tlastTag = null;\n\t\t\t\twhile(tags.hasNext() && (lastTag = tags.next()).bucket == null) {\n\t\t\t\t\tLogger.error(this, \"Last tag has no bucket! index \"+lastTag.index);\n\t\t\t\t\tlastTag.isFree = true;\n\t\t\t\t\tcontainer.store(lastTag);\n\t\t\t\t}\n\t\t\t\tif(lastTag == null) continue;\n\t\t\t\tlastBucket = lastTag.bucket;\n\t\t\t\tlastCommitted = lastTag.index;\n\t\t\t\tLogger.normal(this, \"Last committed block is \"+lastCommitted);\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(lastCommitted == -1) {\n\t\t\t\t// No used slots at all?!\n\t\t\t\t// There may be some not committed though\n\t\t\t\tLogger.normal(this, \"No used slots in persistent temp file (but last not committed = \"+lastNotCommitted+\")\");\n\t\t\t\tlastCommitted = 0;\n\t\t\t\tquery = null;\n\t\t\t}\n\t\t\tfull = (double) lastCommitted / (double) blocks;\n\t\t\tif(full > 0.8) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, last committed block is at \"+full*100+\"%\");\n\t\t\t\tlastCheckedEnd = now;\n\t\t\t\tqueueMaybeShrink();\n\t\t\t\tint blocksMoved = 0;\n\t\t\t\twhile(true) {\n\t\t\t\t\tboolean deactivateLastBucket = !container.ext().isActive(lastBucket);\n\t\t\t\t\tif(deactivateLastBucket)\n\t\t\t\t\t\tcontainer.activate(lastBucket, 1);\n\t\t\t\t\tif(freeSlots.isEmpty()) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tjobRunner.queue(slotFinder, NativeThread.LOW_PRIORITY, false);\n\t\t\t\t\t\t} catch (DatabaseDisabledException e) {\n\t\t\t\t\t\t\t// Doh\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tLong lFirstSlot = freeSlots.firstKey();\n\t\t\t\t\tlong firstSlot = lFirstSlot;\n\t\t\t\t\tif(firstSlot < lastCommitted) {\n\t\t\t\t\t\t// There is some degree of fragmentation.\n\t\t\t\t\t\t// Move one key.\n\t\t\t\t\t\tPersistentBlobTempBucketTag newTag = freeSlots.remove(lFirstSlot);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Synchronize on the target.\n\t\t\t\t\t\tsynchronized(lastBucket) {\n\t\t\t\t\t\t\t// Do the move.\n\t\t\t\t\t\t\tSystem.err.println(\"Attempting to defragment: moving \"+lastTag.index+\" to \"+newTag.index);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tbyte[] blob = readSlot(lastTag.index);\n\t\t\t\t\t\t\t\twriteSlot(newTag.index, blob);\n\t\t\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\t\t\tSystem.err.println(\"Failed to move bucket in defrag: \"+e);\n\t\t\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t\t\tLogger.error(this, \"Failed to move bucket in defrag: \"+e, e);\n\t\t\t\t\t\t\t\tqueueMaybeShrink();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastBucket.setIndex(newTag.index);\n\t\t\t\t\t\t\tlastBucket.setTag(newTag);\n\t\t\t\t\t\t\tnewTag.bucket = lastBucket;\n\t\t\t\t\t\t\tlastTag.bucket = null;\n\t\t\t\t\t\t\tlastTag.isFree = true;\n\t\t\t\t\t\t\tcontainer.store(newTag);\n\t\t\t\t\t\t\tcontainer.store(lastTag);\n\t\t\t\t\t\t\tcontainer.store(lastBucket);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(deactivateLastBucket)\n\t\t\t\t\t\tcontainer.deactivate(lastBucket, 1);\n\t\t\t\t\tif(blocksMoved++ < 10) {\n\t\t\t\t\t\twhile(tags.hasNext() && (lastTag = tags.next()).bucket == null) {\n\t\t\t\t\t\t\tLogger.error(this, \"Last tag has no bucket! index \"+lastTag.index);\n\t\t\t\t\t\t\tlastTag.isFree = true;\n\t\t\t\t\t\t\tcontainer.store(lastTag);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(lastTag == null) continue;\n\t\t\t\t\t\tlastBucket = lastTag.bucket;\n\t\t\t\t\t\tlastCommitted = lastTag.index;\n\t\t\t\t\t\tLogger.normal(this, \"Last committed block is now \"+lastCommitted);\n\t\t\t\t\t} else break;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\traf.getFD().sync();\n\t\t\t\t\tSystem.err.println(\"Moved \"+blocksMoved+\" in defrag and synced to disk\");\n\t\t\t\t} catch (SyncFailedException e) {\n\t\t\t\t\tSystem.err.println(\"Failed to sync to disk after defragging: \"+e);\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tSystem.err.println(\"Failed to sync to disk after defragging: \"+e);\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tquery = null;\n\t\t\t}\n\t\t\tlong lastBlock = Math.max(lastCommitted, lastNotCommitted);\n\t\t\t// Must be 10% free at end\n\t\t\tnewBlocks = (long) ((lastBlock + 32) * 1.1);\n\t\t\tnewBlocks = Math.max(newBlocks, 32);\n\t\t\tif(newBlocks >= blocks) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not shrinking, would shrink from \"+blocks+\" to \"+newBlocks);\n\t\t\t\tlastCheckedEnd = now;\n\t\t\t\tqueueMaybeShrink();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tSystem.err.println(\"Shrinking blob file from \"+blocks+\" to \"+newBlocks);\n\t\t\tfor(long l = newBlocks; l <= blocks; l++) {\n\t\t\t\tfreeSlots.remove(l);\n\t\t\t}\n\t\t\tfor(Long l : freeSlots.keySet()) {\n\t\t\t\tif(l > newBlocks) {\n\t\t\t\t\tLogger.error(this, \"Removing free slot \"+l+\" over the current block limit\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tlastCheckedEnd = now;\n\t\t\tqueueMaybeShrink();\n\t\t} else return false;\n\t\t}\n\t\ttry {\n\t\t\tchannel.truncate(newBlocks * blockSize);\n\t\t} catch (IOException e) {\n\t\t\tSystem.err.println(\"Shrinking blob file failed!\");\n\t\t\tSystem.err.println(e);\n\t\t\te.printStackTrace();\n\t\t\tLogger.error(this, \"Shrinking blob file failed!: \"+e, e);\n\t\t}\n\t\tQuery query = container.query();\n\t\tquery.constrain(PersistentBlobTempBucketTag.class);\n\t\tquery.descend(\"index\").constrain(newBlocks).greater();\n\t\tObjectSet<PersistentBlobTempBucketTag> tags = query.execute();\n\t\twhile(tags.hasNext()) container.delete(tags.next());\n\t\treturn true;\n\t\t\n\t}","commit_id":"81ad960c8ce3a84ccd2b76e4e60ed3a7ebcfd24a","url":"https://github.com/freenet/fred"},{"original_method":"public void tryEncode(ObjectContainer container, ClientContext context) {\n\t\tfor(int i=0;i<dataBlocks.length;i++) {\n\t\t\tif(dataURIs[i] == null && dataBlocks[i] != null) {\n\t\t\t\ttry {\n\t\t\t\t\tboolean deactivate = false;\n\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\tdeactivate = !container.ext().isActive(dataBlocks[i]);\n\t\t\t\t\t\tif(deactivate) container.activate(dataBlocks[i], 1);\n\t\t\t\t\t}\n\t\t\t\t\tClientCHK key = (ClientCHK) encodeBucket(dataBlocks[i], parent.ctx.compressorDescriptor).getClientKey();\n\t\t\t\t\tif(deactivate) container.deactivate(dataBlocks[i], 1);\n\t\t\t\t\tonEncode(i, key, container, context);\n\t\t\t\t} catch (CHKEncodeException e) {\n\t\t\t\t\tfail(new InsertException(InsertException.INTERNAL_ERROR, e, null), container, context);\t\t\t\t\t\t\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tfail(new InsertException(InsertException.BUCKET_ERROR, e, null), container, context);\n\t\t\t\t}\n\t\t\t} else if(dataURIs[i] == null && dataBlocks[i] == null) {\n\t\t\t\tfail(new InsertException(InsertException.INTERNAL_ERROR, \"Data block \"+i+\" cannot be encoded: no data\", null), container, context);\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tif(encoded) {\n\t\t\tfor(int i=0;i<checkBlocks.length;i++) {\n\t\t\t\tif(checkURIs[i] == null && checkBlocks[i] != null) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tboolean deactivate = false;\n\t\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\t\tdeactivate = !container.ext().isActive(checkBlocks[i]);\n\t\t\t\t\t\t\tif(deactivate) container.activate(checkBlocks[i], 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tClientCHK key = (ClientCHK) encodeBucket(checkBlocks[i], parent.ctx.compressorDescriptor).getClientKey();\n\t\t\t\t\t\tif(deactivate) container.deactivate(checkBlocks[i], 1);\n\t\t\t\t\t\tonEncode(i+dataBlocks.length, key, container, context);\n\t\t\t\t\t} catch (CHKEncodeException e) {\n\t\t\t\t\t\tfail(new InsertException(InsertException.INTERNAL_ERROR, e, null), container, context);\t\t\t\t\t\t\n\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\tfail(new InsertException(InsertException.BUCKET_ERROR, e, null), container, context);\n\t\t\t\t\t}\n\t\t\t\t} else if(checkURIs[i] == null && checkBlocks[i] == null) {\n\t\t\t\t\tfail(new InsertException(InsertException.INTERNAL_ERROR, \"Data block \"+i+\" cannot be encoded: no data\", null), container, context);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":4954,"modified_method":"public void tryEncode(ObjectContainer container, ClientContext context) {\n\t\tboolean deactivateParent = false;\n\t\tboolean deactivateParentCtx = false;\n\t\tif(persistent) {\n\t\t\tdeactivateParent = !container.ext().isActive(parent);\n\t\t\tdeactivateParentCtx = !container.ext().isActive(parent.ctx);\n\t\t\tif (deactivateParent)\n\t\t\t\tcontainer.activate(parent, 1);\n\t\t\tif (deactivateParentCtx)\n\t\t\t\tcontainer.activate(parent.ctx, 1);\n\t\t}\n\t\tString compressorDescriptor = parent.ctx.compressorDescriptor;\n\t\tif(persistent) {\n\t\t\tif (deactivateParent)\n\t\t\t\tcontainer.activate(parent, 1);\n\t\t\tif (deactivateParentCtx)\n\t\t\t\tcontainer.activate(parent.ctx, 1);\n\t\t}\n\t\tfor(int i=0;i<dataBlocks.length;i++) {\n\t\t\tif(dataURIs[i] == null && dataBlocks[i] != null) {\n\t\t\t\ttry {\n\t\t\t\t\tboolean deactivate = false;\n\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\tdeactivate = !container.ext().isActive(dataBlocks[i]);\n\t\t\t\t\t\tif(deactivate) container.activate(dataBlocks[i], 1);\n\t\t\t\t\t}\n\t\t\t\t\tClientCHK key = (ClientCHK) encodeBucket(dataBlocks[i], compressorDescriptor).getClientKey();\n\t\t\t\t\tif(deactivate) container.deactivate(dataBlocks[i], 1);\n\t\t\t\t\tonEncode(i, key, container, context);\n\t\t\t\t} catch (CHKEncodeException e) {\n\t\t\t\t\tfail(new InsertException(InsertException.INTERNAL_ERROR, e, null), container, context);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tfail(new InsertException(InsertException.BUCKET_ERROR, e, null), container, context);\n\t\t\t\t}\n\t\t\t} else if(dataURIs[i] == null && dataBlocks[i] == null) {\n\t\t\t\tfail(new InsertException(InsertException.INTERNAL_ERROR, \"Data block \"+i+\" cannot be encoded: no data\", null), container, context);\n\t\t\t}\n\t\t}\n\t\tif(encoded) {\n\t\t\tfor(int i=0;i<checkBlocks.length;i++) {\n\t\t\t\tif(checkURIs[i] == null && checkBlocks[i] != null) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tboolean deactivate = false;\n\t\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\t\tdeactivate = !container.ext().isActive(checkBlocks[i]);\n\t\t\t\t\t\t\tif(deactivate) container.activate(checkBlocks[i], 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tClientCHK key = (ClientCHK) encodeBucket(checkBlocks[i], compressorDescriptor).getClientKey();\n\t\t\t\t\t\tif(deactivate) container.deactivate(checkBlocks[i], 1);\n\t\t\t\t\t\tonEncode(i+dataBlocks.length, key, container, context);\n\t\t\t\t\t} catch (CHKEncodeException e) {\n\t\t\t\t\t\tfail(new InsertException(InsertException.INTERNAL_ERROR, e, null), container, context);\t\n\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\tfail(new InsertException(InsertException.BUCKET_ERROR, e, null), container, context);\n\t\t\t\t\t}\n\t\t\t\t} else if(checkURIs[i] == null && checkBlocks[i] == null) {\n\t\t\t\t\tfail(new InsertException(InsertException.INTERNAL_ERROR, \"Data block \"+i+\" cannot be encoded: no data\", null), container, context);\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"599a7384f5fa491a19f9c713bab3dd4f71734f4e","url":"https://github.com/freenet/fred"},{"original_method":"@Override\n\tpublic SendableRequestSender getSender(ObjectContainer container, ClientContext context) {\n\t\tSendableRequestSender result;\n\t\tif(persistent) {\n\t\t\tcontainer.activate(parent, 1);\n\t\t\tcontainer.activate(parent.ctx, 1);\n\t\t}\n\t\tresult = new MySendableRequestSender(parent.ctx.compressorDescriptor);\n\t\tif(persistent) {\n\t\t\tcontainer.deactivate(parent.ctx, 1);\n\t\t\tcontainer.deactivate(parent, 1);\n\t\t}\n\t\treturn result;\n\t}","id":4955,"modified_method":"@Override\n\tpublic SendableRequestSender getSender(ObjectContainer container, ClientContext context) {\n\t\tSendableRequestSender result;\n\t\tboolean deactivateParent = false;\n\t\tboolean deactivateParentCtx = false;\n\t\tif(persistent) {\n\t\t\tdeactivateParent = !container.ext().isActive(parent);\n\t\t\tdeactivateParentCtx = !container.ext().isActive(parent.ctx);\n\t\t\tif (deactivateParent)\n\t\t\t\tcontainer.activate(parent, 1);\n\t\t\tif (deactivateParentCtx)\n\t\t\t\tcontainer.activate(parent.ctx, 1);\n\t\t}\n\t\tresult = new MySendableRequestSender(parent.ctx.compressorDescriptor);\n\t\tif(persistent) {\n\t\t\tif (deactivateParent)\n\t\t\t\tcontainer.deactivate(parent, 1);\n\t\t\tif (deactivateParentCtx)\n\t\t\t\tcontainer.deactivate(parent.ctx, 1);\n\t\t}\n\t\treturn result;\n\t}","commit_id":"599a7384f5fa491a19f9c713bab3dd4f71734f4e","url":"https://github.com/freenet/fred"},{"original_method":"/**\n     * Start the entity.\n     * <p>\n     * This installs, configures and launches the application process. However,\n     * users can also call the {@link #install()}, {@link #customize()} and\n     * {@link #launch()} steps independently. The {@link #postLaunch()} will\n     * be called after the {@link #launch()} metheod is executed, but the\n     * process may not be completely initialised at this stage, so care is\n     * required when implementing these stages.\n     *\n     * @see #stop()\n     */\n    @Override\n    public void start() {\n        Boolean started = Optional.fromNullable(entity.getConfig(BrooklynConfigKeys.ENTITY_STARTED)).or(false);\n        if (started) return;\n\n        DynamicTasks.queue(\"pre-install\", new Runnable() { public void run() {\n            preInstall();\n        }});\n\n        if (Strings.isNonBlank(entity.getConfig(BrooklynConfigKeys.PRE_INSTALL_COMMAND))) {\n            DynamicTasks.queue(\"pre-install-command\", new Runnable() { public void run() {\n                runPreInstallCommand(entity.getConfig(BrooklynConfigKeys.PRE_INSTALL_COMMAND));\n            }});\n        };\n\n        Boolean skip = Optional.fromNullable(entity.getConfig(BrooklynConfigKeys.SKIP_INSTALLATION)).or(false);\n        if (!skip) {\n            DynamicTasks.queue(\"setup\", new Runnable() { public void run() {\n                waitForConfigKey(BrooklynConfigKeys.SETUP_LATCH);\n                setup();\n            }});\n\n            DynamicTasks.queue(\"copy-install-resources\", new Runnable() { public void run() {\n                waitForConfigKey(BrooklynConfigKeys.INSTALL_RESOURCES_LATCH);\n                copyInstallResources();\n            }});\n\n            DynamicTasks.queue(\"install\", new Runnable() { public void run() {\n                waitForConfigKey(BrooklynConfigKeys.INSTALL_LATCH);\n                install();\n            }});\n        }\n\n        if (Strings.isNonBlank(entity.getConfig(BrooklynConfigKeys.POST_INSTALL_COMMAND))) {\n            DynamicTasks.queue(\"post-install-command\", new Runnable() { public void run() {\n                runPostInstallCommand(entity.getConfig(BrooklynConfigKeys.POST_INSTALL_COMMAND));\n            }});\n        };\n\n        DynamicTasks.queue(\"customize\", new Runnable() { public void run() {\n            waitForConfigKey(BrooklynConfigKeys.CUSTOMIZE_LATCH);\n            customize();\n        }});\n\n        DynamicTasks.queue(\"copy-runtime-resources\", new Runnable() { public void run() {\n            waitForConfigKey(BrooklynConfigKeys.RUNTIME_RESOURCES_LATCH);\n            copyRuntimeResources();\n        }});\n\n        if (Strings.isNonBlank(entity.getConfig(BrooklynConfigKeys.PRE_LAUNCH_COMMAND))) {\n            DynamicTasks.queue(\"pre-launch-command\", new Runnable() { public void run() {\n                runPreLaunchCommand(entity.getConfig(BrooklynConfigKeys.PRE_LAUNCH_COMMAND));\n            }});\n        };\n\n        DynamicTasks.queue(\"launch\", new Runnable() { public void run() {\n            waitForConfigKey(BrooklynConfigKeys.LAUNCH_LATCH);\n            launch();\n        }});\n\n        if (Strings.isNonBlank(entity.getConfig(BrooklynConfigKeys.POST_LAUNCH_COMMAND))) {\n            DynamicTasks.queue(\"post-launch-command\", new Runnable() { public void run() {\n                runPostLaunchCommand(entity.getConfig(BrooklynConfigKeys.POST_LAUNCH_COMMAND));\n            }});\n        };\n\n        DynamicTasks.queue(\"post-launch\", new Runnable() { public void run() {\n            postLaunch();\n        }});\n    }","id":4956,"modified_method":"/**\n     * Start the entity.\n     * <p>\n     * This installs, configures and launches the application process. However,\n     * users can also call the {@link #install()}, {@link #customize()} and\n     * {@link #launch()} steps independently. The {@link #postLaunch()} will\n     * be called after the {@link #launch()} metheod is executed, but the\n     * process may not be completely initialised at this stage, so care is\n     * required when implementing these stages.\n     *\n     * @see #stop()\n     */\n    @Override\n    public void start() {\n        Boolean started = Optional.fromNullable(entity.getConfig(BrooklynConfigKeys.ENTITY_STARTED)).or(false);\n        if (!started) {\n            DynamicTasks.queue(\"pre-install\", new Runnable() { public void run() {\n                preInstall();\n            }});\n\n            if (Strings.isNonBlank(entity.getConfig(BrooklynConfigKeys.PRE_INSTALL_COMMAND))) {\n                DynamicTasks.queue(\"pre-install-command\", new Runnable() { public void run() {\n                    runPreInstallCommand(entity.getConfig(BrooklynConfigKeys.PRE_INSTALL_COMMAND));\n                }});\n            };\n\n            Boolean skip = Optional.fromNullable(entity.getConfig(BrooklynConfigKeys.SKIP_INSTALLATION)).or(false);\n            if (!skip) {\n                DynamicTasks.queue(\"setup\", new Runnable() { public void run() {\n                    waitForConfigKey(BrooklynConfigKeys.SETUP_LATCH);\n                    setup();\n                }});\n\n                DynamicTasks.queue(\"copy-install-resources\", new Runnable() { public void run() {\n                    waitForConfigKey(BrooklynConfigKeys.INSTALL_RESOURCES_LATCH);\n                    copyInstallResources();\n                }});\n\n                DynamicTasks.queue(\"install\", new Runnable() { public void run() {\n                    waitForConfigKey(BrooklynConfigKeys.INSTALL_LATCH);\n                    install();\n                }});\n            }\n\n            if (Strings.isNonBlank(entity.getConfig(BrooklynConfigKeys.POST_INSTALL_COMMAND))) {\n                DynamicTasks.queue(\"post-install-command\", new Runnable() { public void run() {\n                    runPostInstallCommand(entity.getConfig(BrooklynConfigKeys.POST_INSTALL_COMMAND));\n                }});\n            };\n\n            DynamicTasks.queue(\"customize\", new Runnable() { public void run() {\n                waitForConfigKey(BrooklynConfigKeys.CUSTOMIZE_LATCH);\n                customize();\n            }});\n\n            DynamicTasks.queue(\"copy-runtime-resources\", new Runnable() { public void run() {\n                waitForConfigKey(BrooklynConfigKeys.RUNTIME_RESOURCES_LATCH);\n                copyRuntimeResources();\n            }});\n\n            if (Strings.isNonBlank(entity.getConfig(BrooklynConfigKeys.PRE_LAUNCH_COMMAND))) {\n                DynamicTasks.queue(\"pre-launch-command\", new Runnable() { public void run() {\n                    runPreLaunchCommand(entity.getConfig(BrooklynConfigKeys.PRE_LAUNCH_COMMAND));\n                }});\n            };\n\n            DynamicTasks.queue(\"launch\", new Runnable() { public void run() {\n                waitForConfigKey(BrooklynConfigKeys.LAUNCH_LATCH);\n                launch();\n            }});\n\n            if (Strings.isNonBlank(entity.getConfig(BrooklynConfigKeys.POST_LAUNCH_COMMAND))) {\n                DynamicTasks.queue(\"post-launch-command\", new Runnable() { public void run() {\n                    runPostLaunchCommand(entity.getConfig(BrooklynConfigKeys.POST_LAUNCH_COMMAND));\n                }});\n            };\n        }\n\n        DynamicTasks.queue(\"post-launch\", new Runnable() { public void run() {\n            postLaunch();\n        }});\n    }","commit_id":"5374ed716265cb721ffa14252ffc65fa5c509749","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"protected void startBrooklynNode() {\n        final String classpath = System.getenv(\"INITIAL_CLASSPATH\");\n        if (classpath == null || Strings.isBlank(classpath)) {\n            LOG.warn(\"Cannot find INITIAL_CLASSPATH environment variable, skipping BrooklynNode entity creation\");\n            return;\n        }\n        ApplicationBuilder brooklyn = new ApplicationBuilder() {\n            @Override\n            protected void doBuild() {\n                addChild(EntitySpec.create(BrooklynNode.class)\n                        .configure(SoftwareProcess.ENTITY_STARTED, true)\n                        .configure(SoftwareProcess.RUN_DIR, System.getenv(\"ROOT\"))\n                        .configure(SoftwareProcess.INSTALL_DIR, System.getenv(\"BROOKLYN_HOME\"))\n                        .configure(BrooklynNode.ENABLED_HTTP_PROTOCOLS, ImmutableList.of(webServer.getHttpsEnabled() ? \"https\" : \"http\"))\n                        .configure(webServer.getHttpsEnabled() ? BrooklynNode.HTTPS_PORT : BrooklynNode.HTTP_PORT, PortRanges.fromInteger(webServer.getActualPort()))\n                        .configure(BrooklynNode.WEB_CONSOLE_BIND_ADDRESS, bindAddress)\n                        .configure(BrooklynNode.WEB_CONSOLE_PUBLIC_ADDRESS, publicAddress)\n                        .configure(BrooklynNode.CLASSPATH, Splitter.on(\":\").splitToList(classpath))\n                        .displayName(\"Brooklyn Console\"));\n            }\n        };\n        brooklyn.appDisplayName(\"Brooklyn\")\n                .manage(managementContext)\n                .start(ImmutableList.of(new LocalhostMachine()));\n    }","id":4957,"modified_method":"protected void startBrooklynNode() {\n        final String classpath = System.getenv(\"INITIAL_CLASSPATH\");\n        if (classpath == null || Strings.isBlank(classpath)) {\n            LOG.warn(\"Cannot find INITIAL_CLASSPATH environment variable, skipping BrooklynNode entity creation\");\n            return;\n        }\n        ApplicationBuilder brooklyn = new ApplicationBuilder() {\n            @Override\n            protected void doBuild() {\n                addChild(EntitySpec.create(BrooklynNode.class)\n                        .configure(SoftwareProcess.ENTITY_STARTED, true)\n                        .configure(SoftwareProcess.RUN_DIR, System.getenv(\"ROOT\"))\n                        .configure(SoftwareProcess.INSTALL_DIR, System.getenv(\"BROOKLYN_HOME\"))\n                        .configure(BrooklynNode.ENABLED_HTTP_PROTOCOLS, ImmutableList.of(webServer.getHttpsEnabled() ? \"https\" : \"http\"))\n                        .configure(webServer.getHttpsEnabled() ? BrooklynNode.HTTPS_PORT : BrooklynNode.HTTP_PORT, PortRanges.fromInteger(webServer.getActualPort()))\n                        .configure(BrooklynNode.WEB_CONSOLE_BIND_ADDRESS, bindAddress)\n                        .configure(BrooklynNode.WEB_CONSOLE_PUBLIC_ADDRESS, publicAddress)\n                        .configure(BrooklynNode.CLASSPATH, Splitter.on(\":\").splitToList(classpath))\n                        .displayName(\"Brooklyn Console\"));\n            }\n        };\n        LocationSpec<?> spec = LocationSpec.create(LocalhostMachine.class).displayName(\"Local Brooklyn\");\n        Location localhost = managementContext.getLocationManager().createLocation(spec);\n        brooklyn.appDisplayName(\"Brooklyn\")\n                .manage(managementContext)\n                .start(ImmutableList.of(localhost));\n    }","commit_id":"5374ed716265cb721ffa14252ffc65fa5c509749","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"private <T> T parseJson(String json, List<String> elements, Class<T> clazz) {\n        Function<String, T> func = HttpValueFunctions.chain(\n                JsonFunctions.asJson(),\n                JsonFunctions.walk(elements.toArray(new String[elements.size()])), \n                JsonFunctions.cast(clazz));\n        return func.apply(json);\n    }","id":4958,"modified_method":"private <T> T parseJson(String json, List<String> elements, Class<T> clazz) {\n        Function<String, T> func = HttpValueFunctions.chain(\n                JsonFunctions.asJson(),\n                JsonFunctions.walk(elements),\n                JsonFunctions.cast(clazz));\n        return func.apply(json);\n    }","commit_id":"a7c335cfffe85c095ffd314a52f75d9f86bf98e9","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@AfterMethod(alwaysRun=true)\n    public void tearDown() throws Exception {\n        if (app != null) Entities.destroyAll(app.getManagementContext());\n        if (pseudoBrooklynPropertiesFile != null) pseudoBrooklynPropertiesFile.delete();\n        if (pseudoBrooklynCatalogFile != null) pseudoBrooklynCatalogFile.delete();\n    }","id":4959,"modified_method":"@AfterMethod(alwaysRun=true)\n    public void tearDown() throws Exception {\n        if (app != null) Entities.destroyAll(app.getManagementSupport().getManagementContext());\n        if (pseudoBrooklynPropertiesFile != null) pseudoBrooklynPropertiesFile.delete();\n        if (pseudoBrooklynCatalogFile != null) pseudoBrooklynCatalogFile.delete();\n    }","commit_id":"a7c335cfffe85c095ffd314a52f75d9f86bf98e9","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@BeforeMethod(alwaysRun=true)\n    public void setUp() throws Exception {\n        pseudoBrooklynPropertiesFile = File.createTempFile(\"brooklynnode-test\", \".properties\");\n        pseudoBrooklynPropertiesFile.delete();\n        \n        pseudoBrooklynCatalogFile = File.createTempFile(\"brooklynnode-test\", \".catalog\");\n        pseudoBrooklynCatalogFile.delete();\n        \n        locs = ImmutableList.of(new LocalhostMachineProvisioningLocation());\n        app = ApplicationBuilder.newManagedApp(TestApplication.class);\n    }","id":4960,"modified_method":"@BeforeMethod(alwaysRun=true)\n    public void setUp() throws Exception {\n        pseudoBrooklynPropertiesFile = File.createTempFile(\"brooklynnode-test\", \".properties\");\n        pseudoBrooklynPropertiesFile.delete();\n\n        pseudoBrooklynCatalogFile = File.createTempFile(\"brooklynnode-test\", \".catalog\");\n        pseudoBrooklynCatalogFile.delete();\n\n        app = ApplicationBuilder.newManagedApp(TestApplication.class);\n        Location localhost = app.getManagementSupport().getManagementContext().getLocationManager().createLocation(LocationSpec.create(LocalhostMachineProvisioningLocation.class));\n        locs = ImmutableList.of(localhost);\n    }","commit_id":"a7c335cfffe85c095ffd314a52f75d9f86bf98e9","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"private <T> List<T> parseJsonList(String json, List<String> elements, Class<T> clazz) {\n        Function<String, List<T>> func = HttpValueFunctions.chain(\n                JsonFunctions.asJson(), \n                JsonFunctions.forEach(HttpValueFunctions.chain(\n                        JsonFunctions.walk(elements.toArray(new String[elements.size()])), \n                        JsonFunctions.cast(clazz))));\n        return func.apply(json);\n    }","id":4961,"modified_method":"private <T> List<T> parseJsonList(String json, List<String> elements, Class<T> clazz) {\n        Function<String, List<T>> func = HttpValueFunctions.chain(\n                JsonFunctions.asJson(),\n                JsonFunctions.forEach(HttpValueFunctions.chain(\n                        JsonFunctions.walk(elements),\n                        JsonFunctions.cast(clazz))));\n        return func.apply(json);\n    }","commit_id":"a7c335cfffe85c095ffd314a52f75d9f86bf98e9","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public void init() { \n        super.init();\n        initApp();\n    }","id":4962,"modified_method":"public void init() { \n        super.init();\n        if (Strings.isNonBlank(getConfig(DEFAULT_DISPLAY_NAME))) {\n            setDefaultDisplayName(getConfig(DEFAULT_DISPLAY_NAME));\n        }\n        initApp();\n    }","commit_id":"3cccf00f75def8bbc2e00c3ec16d7a7d5cb539db","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Test\n    public void testStopDoesNotStopPremanagedChildren() {\n        app.start(locs);\n        \n        TestEntity child = app.addChild(EntitySpec.create(TestEntity.class));\n        \n        app.stop();\n        assertEquals(child.getCount(), 0);\n    }","id":4963,"modified_method":"@Test\n    public void testStopOnManagedAppDoesNotStopPremanagedChildren() {\n        app.start(locs);\n        \n        TestEntity child = app.addChild(EntitySpec.create(TestEntity.class));\n        \n        app.stop();\n        assertEquals(child.getCallHistory(), ImmutableList.of());\n    }","commit_id":"3cccf00f75def8bbc2e00c3ec16d7a7d5cb539db","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Test\n    public void testStartAndStopCallsChildren() throws Exception {\n        // deliberately unmanaged\n        TestApplication app2 = mgmt.getEntityManager().createEntity(EntitySpec.create(TestApplication.class));\n        TestEntity child = app2.addChild(EntitySpec.create(TestEntity.class));\n        \n        app2.invoke(AbstractApplication.START, ImmutableMap.of(\"locations\", locs)).get();\n        assertEquals(child.getCount(), 1);\n        assertEquals(app.getManagementContext().getEntityManager().getEntity(app.getId()), app);\n        assertEquals(app.getManagementContext().getEntityManager().getEntity(child.getId()), child);\n        \n        app2.stop();\n        assertEquals(child.getCount(), 0);\n    }","id":4964,"modified_method":"@Test\n    public void testStartAndStopUnmanagedAppAutomanagesTheAppAndChildren() throws Exception {\n        // deliberately unmanaged\n        TestApplication app2 = mgmt.getEntityManager().createEntity(EntitySpec.create(TestApplication.class));\n        TestEntity child = app2.addChild(EntitySpec.create(TestEntity.class));\n        assertFalse(Entities.isManaged(app2));\n        assertFalse(Entities.isManaged(child));\n        \n        app2.invoke(AbstractApplication.START, ImmutableMap.of(\"locations\", locs)).get();\n        assertTrue(Entities.isManaged(app2));\n        assertTrue(Entities.isManaged(child));\n        assertEquals(child.getCallHistory(), ImmutableList.of(\"start\"));\n        assertEquals(mgmt.getEntityManager().getEntity(app2.getId()), app2);\n        assertEquals(mgmt.getEntityManager().getEntity(child.getId()), child);\n        \n        app2.stop();\n        assertEquals(child.getCallHistory(), ImmutableList.of(\"start\", \"stop\"));\n        assertFalse(Entities.isManaged(child));\n        assertFalse(Entities.isManaged(app2));\n    }","commit_id":"3cccf00f75def8bbc2e00c3ec16d7a7d5cb539db","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@BeforeMethod(alwaysRun=true)\n    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        locs = ImmutableList.of(new SimulatedLocation());\n    }","id":4965,"modified_method":"@BeforeMethod(alwaysRun=true)\n    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        loc = mgmt.getLocationManager().createLocation(LocationSpec.create(SimulatedLocation.class));\n        locs = ImmutableList.of(loc);\n    }","commit_id":"3cccf00f75def8bbc2e00c3ec16d7a7d5cb539db","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Test\n    public void testStartAndStopWhenManagedCallsChildren() {\n        TestEntity child = app.createAndManageChild(EntitySpec.create(TestEntity.class));\n\n        assertEquals(app.getManagementContext().getEntityManager().getEntity(app.getId()), app);\n        assertEquals(app.getManagementContext().getEntityManager().getEntity(child.getId()), child);\n\n        app.start(locs);\n        assertEquals(child.getCount(), 1);\n        \n        app.stop();\n        assertEquals(child.getCount(), 0);\n    }","id":4966,"modified_method":"@Test\n    public void testStartAndStopWhenManagedCallsChildren() {\n        TestEntity child = app.createAndManageChild(EntitySpec.create(TestEntity.class));\n        assertTrue(Entities.isManaged(app));\n        assertTrue(Entities.isManaged(child));\n\n        app.start(locs);\n        assertEquals(child.getCallHistory(), ImmutableList.of(\"start\"));\n        \n        app.stop();\n        assertEquals(child.getCallHistory(), ImmutableList.of(\"start\", \"stop\"));\n        assertFalse(Entities.isManaged(child));\n        assertFalse(Entities.isManaged(app));\n    }","commit_id":"3cccf00f75def8bbc2e00c3ec16d7a7d5cb539db","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Test\n    public void testStartDoesNotStartUnmanagedChildren() {\n        TestEntity child = app.createAndManageChild(EntitySpec.create(TestEntity.class));\n        Entities.unmanage(child);\n        \n        app.start(locs);\n        assertEquals(child.getCount(), 0);\n    }","id":4967,"modified_method":"@Test\n    public void testStartOnManagedAppDoesNotStartUnmanagedChildren() {\n        TestEntity child = app.createAndManageChild(EntitySpec.create(TestEntity.class));\n        Entities.unmanage(child);\n        \n        app.start(locs);\n        assertEquals(child.getCallHistory(), ImmutableList.of());\n    }","commit_id":"3cccf00f75def8bbc2e00c3ec16d7a7d5cb539db","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Test\n    public void testStartDoesNotStartPremanagedChildren() {\n        TestEntity child = app.addChild(EntitySpec.create(TestEntity.class));\n        \n        app.start(locs);\n        assertEquals(child.getCount(), 0);\n    }","id":4968,"modified_method":"@Test\n    public void testStartOnManagedAppDoesNotStartPremanagedChildren() {\n        TestEntity child = app.addChild(EntitySpec.create(TestEntity.class));\n        \n        app.start(locs);\n        assertEquals(child.getCallHistory(), ImmutableList.of());\n    }","commit_id":"3cccf00f75def8bbc2e00c3ec16d7a7d5cb539db","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Test\n    public void testStopDoesNotStopUnmanagedChildren() {\n        TestEntity child = app.createAndManageChild(EntitySpec.create(TestEntity.class));\n        \n        app.start(locs);\n        assertEquals(child.getCount(), 1);\n        \n        Entities.unmanage(child);\n        \n        app.stop();\n        assertEquals(child.getCount(), 1);\n    }","id":4969,"modified_method":"@Test\n    public void testStopDoesNotStopUnmanagedChildren() {\n        TestEntity child = app.createAndManageChild(EntitySpec.create(TestEntity.class));\n        \n        app.start(locs);\n        assertEquals(child.getCallHistory(), ImmutableList.of(\"start\"));\n        \n        Entities.unmanage(child);\n        \n        app.stop();\n        assertEquals(child.getCallHistory(), ImmutableList.of(\"start\"));\n    }","commit_id":"3cccf00f75def8bbc2e00c3ec16d7a7d5cb539db","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n    @Override\n    public void setEntity(EntityLocal entity) {\n        super.setEntity(entity);\n        this.transformation = (Function<? super Collection<T>, ? extends U>) getRequiredConfig(TRANSFORMATION);\n        this.producer = getConfig(PRODUCER);\n        this.fromHardcodedProducers= getConfig(FROM_HARDCODED_PRODUCERS);\n        this.sourceSensor = (Sensor<T>) getRequiredConfig(SOURCE_SENSOR);\n        this.targetSensor = (Sensor<U>) getRequiredConfig(TARGET_SENSOR);\n        this.defaultMemberValue = (T) getConfig(DEFAULT_MEMBER_VALUE);\n        this.fromMembers = getConfig(FROM_MEMBERS);\n        this.fromChildren = getConfig(FROM_CHILDREN);\n        this.entityFilter = (Predicate<? super Entity>) (getConfig(ENTITY_FILTER) == null ? Predicates.alwaysTrue() : getConfig(ENTITY_FILTER));\n        this.valueFilter = (Predicate<? super T>) (getConfig(VALUE_FILTER) == null ? Predicates.alwaysTrue() : getConfig(VALUE_FILTER));\n\n        if (fromHardcodedProducers == null && producer == null) producer = entity;\n        checkState(fromHardcodedProducers != null ^ producer != null, \"must specify one of %s (%s) or %s (%s)\", \n                PRODUCER.getName(), producer, FROM_HARDCODED_PRODUCERS.getName(), fromHardcodedProducers);\n        checkState(producer != null ? (Boolean.TRUE.equals(fromMembers) ^ Boolean.TRUE.equals(fromChildren)) : true, \n                \"when specifying producer, must specify one of fromMembers (%s) or fromChildren (%s)\", fromMembers, fromChildren);\n\n        if (fromHardcodedProducers != null) {\n            for (Entity producer : Iterables.filter(fromHardcodedProducers, entityFilter)) {\n                addProducer(producer);\n            }\n            onUpdated();\n        }\n        \n        if (Boolean.TRUE.equals(fromMembers)) {\n            subscribe(entity, Changeable.MEMBER_ADDED, new SensorEventListener<Entity>() {\n                @Override public void onEvent(SensorEvent<Entity> event) {\n                    if (entityFilter.apply(event.getValue())) addProducer(event.getValue());\n                }\n            });\n            subscribe(entity, Changeable.MEMBER_REMOVED, new SensorEventListener<Entity>() {\n                @Override public void onEvent(SensorEvent<Entity> event) {\n                    removeProducer(event.getValue());\n                }\n            });\n            \n            if (entity instanceof Group) {\n                for (Entity member : Iterables.filter(((Group)entity).getMembers(), entityFilter)) {\n                    addProducer(member);\n                }\n            }\n            onUpdated();\n        }\n        \n        if (Boolean.TRUE.equals(fromChildren)) {\n            if (LOG.isDebugEnabled()) LOG.debug(\"{} linked (children of {}, {}) to {}\", new Object[] {this, producer, sourceSensor, targetSensor});\n            subscribeToChildren(producer, sourceSensor, this);\n\n            subscribe(entity, AbstractEntity.CHILD_REMOVED, new SensorEventListener<Entity>() {\n                @Override public void onEvent(SensorEvent<Entity> event) {\n                    onProducerRemoved(event.getValue());\n                }\n            });\n            subscribe(entity, AbstractEntity.CHILD_ADDED, new SensorEventListener<Entity>() {\n                @Override public void onEvent(SensorEvent<Entity> event) {\n                    if (entityFilter.apply(event.getValue())) onProducerAdded(event.getValue());\n                }\n            });\n\n            for (Entity child : Iterables.filter(producer.getChildren(), entityFilter)) {\n                onProducerAdded(child, false);\n            }\n            onUpdated();\n        }\n    }","id":4970,"modified_method":"@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n    @Override\n    public void setEntity(EntityLocal entity) {\n        super.setEntity(entity);\n        this.transformation = (Function<? super Collection<T>, ? extends U>) getRequiredConfig(TRANSFORMATION);\n        this.producer = getConfig(PRODUCER);\n        this.fromHardcodedProducers= getConfig(FROM_HARDCODED_PRODUCERS);\n        this.sourceSensor = (Sensor<T>) getRequiredConfig(SOURCE_SENSOR);\n        this.targetSensor = (Sensor<U>) getRequiredConfig(TARGET_SENSOR);\n        this.defaultMemberValue = (T) getConfig(DEFAULT_MEMBER_VALUE);\n        this.fromMembers = getConfig(FROM_MEMBERS);\n        this.fromChildren = getConfig(FROM_CHILDREN);\n        this.entityFilter = (Predicate<? super Entity>) (getConfig(ENTITY_FILTER) == null ? Predicates.alwaysTrue() : getConfig(ENTITY_FILTER));\n        this.valueFilter = (Predicate<? super T>) (getConfig(VALUE_FILTER) == null ? Predicates.alwaysTrue() : getConfig(VALUE_FILTER));\n\n        if (fromHardcodedProducers == null && producer == null) producer = entity;\n        checkState(fromHardcodedProducers != null ^ producer != null, \"must specify one of %s (%s) or %s (%s)\", \n                PRODUCER.getName(), producer, FROM_HARDCODED_PRODUCERS.getName(), fromHardcodedProducers);\n        checkState(producer != null ? (Boolean.TRUE.equals(fromMembers) ^ Boolean.TRUE.equals(fromChildren)) : true, \n                \"when specifying producer, must specify one of fromMembers (%s) or fromChildren (%s)\", fromMembers, fromChildren);\n\n        if (fromHardcodedProducers != null) {\n            for (Entity producer : Iterables.filter(fromHardcodedProducers, entityFilter)) {\n                addProducer(producer);\n            }\n            onUpdated();\n        }\n        \n        if (Boolean.TRUE.equals(fromMembers)) {\n            checkState(producer instanceof Group, \"must be a group when fromMembers true: producer=%s; entity=%s; \"\n                    + \"hardcodedProducers=%s\", getConfig(PRODUCER), entity, fromHardcodedProducers);\n\n            subscribe(producer, Changeable.MEMBER_ADDED, new SensorEventListener<Entity>() {\n                @Override public void onEvent(SensorEvent<Entity> event) {\n                    if (entityFilter.apply(event.getValue())) addProducer(event.getValue());\n                }\n            });\n            subscribe(producer, Changeable.MEMBER_REMOVED, new SensorEventListener<Entity>() {\n                @Override public void onEvent(SensorEvent<Entity> event) {\n                    removeProducer(event.getValue());\n                }\n            });\n            \n            if (producer instanceof Group) {\n                for (Entity member : Iterables.filter(((Group)producer).getMembers(), entityFilter)) {\n                    addProducer(member);\n                }\n            }\n            onUpdated();\n        }\n        \n        if (Boolean.TRUE.equals(fromChildren)) {\n            if (LOG.isDebugEnabled()) LOG.debug(\"{} linked (children of {}, {}) to {}\", new Object[] {this, producer, sourceSensor, targetSensor});\n            subscribeToChildren(producer, sourceSensor, this);\n\n            subscribe(producer, AbstractEntity.CHILD_REMOVED, new SensorEventListener<Entity>() {\n                @Override public void onEvent(SensorEvent<Entity> event) {\n                    onProducerRemoved(event.getValue());\n                }\n            });\n            subscribe(producer, AbstractEntity.CHILD_ADDED, new SensorEventListener<Entity>() {\n                @Override public void onEvent(SensorEvent<Entity> event) {\n                    if (entityFilter.apply(event.getValue())) onProducerAdded(event.getValue());\n                }\n            });\n\n            for (Entity child : Iterables.filter(producer.getChildren(), entityFilter)) {\n                onProducerAdded(child, false);\n            }\n            onUpdated();\n        }\n    }","commit_id":"f1f412bd390e2630492cd7b1bc567762e2b88c4a","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Test(groups = \"Integration\")\n    public void testAggregatesGroupMembersFiftyTimes() {\n        for (int i=0; i<50; i++) {\n            log.debug(\"testAggregatesNewMembersOfGroup {}\", i);\n            testAggregatesNewMembersOfGroup();\n        }\n    }","id":4971,"modified_method":"@Test(groups = \"Integration\", invocationCount=50)\n    public void testAggregatesGroupMembersFiftyTimes() {\n        testAggregatesNewMembersOfGroup();\n    }","commit_id":"f1f412bd390e2630492cd7b1bc567762e2b88c4a","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@BeforeMethod(alwaysRun=true)\n    public void setUp() {\n        app = ApplicationBuilder.newManagedApp(TestApplication.class);\n        entity = app.createAndManageChild(EntitySpec.create(TestEntity.class));\n        intSensor = new BasicAttributeSensor<Integer>(Integer.class, \"int sensor\");\n        doubleSensor = new BasicAttributeSensor<Double>(Double.class, \"double sensor\");\n        target = new BasicAttributeSensor<Integer>(Integer.class, \"target sensor\");\n        \n        app.start(ImmutableList.of(new SimulatedLocation()));\n    }","id":4972,"modified_method":"@BeforeMethod(alwaysRun=true)\n    public void setUp() {\n        app = ApplicationBuilder.newManagedApp(TestApplication.class);\n        entity = app.createAndManageChild(EntitySpec.create(TestEntity.class));\n        intSensor = new BasicAttributeSensor<Integer>(Integer.class, \"int sensor\");\n        doubleSensor = new BasicAttributeSensor<Double>(Double.class, \"double sensor\");\n        target = new BasicAttributeSensor<Integer>(Integer.class, \"target sensor\");\n        loc = app.getManagementContext().getLocationManager().createLocation(LocationSpec.create(SimulatedLocation.class));\n        app.start(ImmutableList.of(loc));\n    }","commit_id":"f1f412bd390e2630492cd7b1bc567762e2b88c4a","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public static void copyTextToClipboard(String text) {\n    Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n    cb.setContents(new StringSelection(text), null);\n  }","id":4973,"modified_method":"public static void copyTextToClipboard(String text) {\n    CopyPasteManagerEx.getInstanceEx().setContents(new StringSelection(text));\n  }","commit_id":"6b2440aeeeb195fe36bcc88ca39a320b139bfe3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void copyNodesAndTextToClipboard(List<SNode> nodes, Map<SNode, Set<SNode>> nodesAndAttributes, String text) {\n    Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n    cb.setContents(new SNodeTransferable(nodes, text, nodesAndAttributes), null);\n  }","id":4974,"modified_method":"public static void copyNodesAndTextToClipboard(List<SNode> nodes, Map<SNode, Set<SNode>> nodesAndAttributes, String text) {\n    CopyPasteManagerEx.getInstanceEx().setContents(new SNodeTransferable(nodes, text, nodesAndAttributes));\n  }","commit_id":"6b2440aeeeb195fe36bcc88ca39a320b139bfe3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void copyNodesToClipboard(List<SNode> nodes) {\n    Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n    cb.setContents(new SNodeTransferable(nodes), null);\n  }","id":4975,"modified_method":"public static void copyNodesToClipboard(List<SNode> nodes) {\n    CopyPasteManagerEx.getInstanceEx().setContents(new SNodeTransferable(nodes));\n  }","commit_id":"6b2440aeeeb195fe36bcc88ca39a320b139bfe3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static boolean doesClipboardContainNode() {\n    Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n    try {\n      return cb.isDataFlavorAvailable(SModelDataFlavor.sNode);\n    } catch (IllegalStateException e) {\n      return false;\n    }\n  }","id":4976,"modified_method":"public static boolean doesClipboardContainNode() {\n    Transferable content = null;\n    for (Transferable trf: CopyPasteManagerEx.getInstanceEx().getAllContents()) {\n      if (trf != null && trf.isDataFlavorSupported(SModelDataFlavor.sNode)) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"6b2440aeeeb195fe36bcc88ca39a320b139bfe3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static PasteNodeData getPasteNodeDataFromClipboard(SModel model) {\n    IModule module = model.getModelDescriptor().getModule();\n\n    Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n    if (cb == null) {\n      return PasteNodeData.emptyPasteNodeData(module, model);\n    }\n    try {\n      if (!cb.isDataFlavorAvailable(SModelDataFlavor.sNode)) {\n        return PasteNodeData.emptyPasteNodeData(module, model);\n      }\n    } catch (IllegalStateException e) {\n      return PasteNodeData.emptyPasteNodeData(module, model);\n    }\n\n    Transferable content = null;\n    try {\n      content = cb.getContents(null);\n    } catch (IllegalStateException e) {\n      //LOG.warning(\"Clipboard is not accessible. It can happen if another application is using it.\");\n    }\n    if (content == null) {\n      return PasteNodeData.emptyPasteNodeData(module, model);\n    }\n\n    if (content.isDataFlavorSupported(SModelDataFlavor.sNode)) {\n      SNodeTransferable nodeTransferable;\n      try {\n        nodeTransferable = (SNodeTransferable) content.getTransferData(SModelDataFlavor.sNode);\n        return nodeTransferable.createNodeData(model);\n      } catch (UnsupportedFlavorException e) {\n        LOG.error(\"Exception\", e);\n      } catch (IOException e) {\n        LOG.error(\"Exception\", e);\n      }\n    }\n\n    return PasteNodeData.emptyPasteNodeData(module, model);\n  }","id":4977,"modified_method":"public static PasteNodeData getPasteNodeDataFromClipboard(SModel model) {\n    IModule module = model.getModelDescriptor().getModule();\n\n    Transferable content = null;\n    for (Transferable trf: CopyPasteManagerEx.getInstanceEx().getAllContents()) {\n      if (trf != null && trf.isDataFlavorSupported(SModelDataFlavor.sNode)) {\n        content = trf;\n        break;\n      }\n    }\n    if (content == null) {\n      return PasteNodeData.emptyPasteNodeData(module, model);\n    }\n    \n    if (content.isDataFlavorSupported(SModelDataFlavor.sNode)) {\n      SNodeTransferable nodeTransferable;\n      try {\n        nodeTransferable = (SNodeTransferable) content.getTransferData(SModelDataFlavor.sNode);\n        return nodeTransferable.createNodeData(model);\n      } catch (UnsupportedFlavorException e) {\n        LOG.error(\"Exception\", e);\n      } catch (IOException e) {\n        LOG.error(\"Exception\", e);\n      }\n    }\n\n    return PasteNodeData.emptyPasteNodeData(module, model);\n  }","commit_id":"6b2440aeeeb195fe36bcc88ca39a320b139bfe3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void copyNodesAndTextToClipboard(List<SNode> nodes, String text) {\n    Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n    cb.setContents(new SNodeTransferable(nodes, text), null);\n  }","id":4978,"modified_method":"public static void copyNodesAndTextToClipboard(List<SNode> nodes, String text) {\n    CopyPasteManagerEx.getInstanceEx().setContents(new SNodeTransferable(nodes, text));\n  }","commit_id":"6b2440aeeeb195fe36bcc88ca39a320b139bfe3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void perform(DataContext dataContext, boolean cut) {\n    Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n    cb.setContents(new VirtualFileTransferable(getData(dataContext, cut)), null);\n  }","id":4979,"modified_method":"private void perform(DataContext dataContext, boolean cut) {\n    CopyPasteManagerEx.getInstanceEx().setContents(new VirtualFileTransferable(getData(dataContext, cut)));\n  }","commit_id":"6b2440aeeeb195fe36bcc88ca39a320b139bfe3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Nullable\n  private CopyPasteFilesData getData(DataContext dataContext) {\n    Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n    if (cb == null) return null;\n\n    Transferable content = cb.getContents(null);\n    if (content == null) return null;\n\n    CopyPasteFilesData files = null;\n    if (content.isDataFlavorSupported(VirtualFileTransferable.VIRTUAL_FILE_DATA_FLAVOR)) {\n      try {\n        files = getData((String[]) content.getTransferData(VirtualFileTransferable.VIRTUAL_FILE_DATA_FLAVOR));\n\n        if (files == null || !files.hasAnythingToDo()) {\n          return null;\n        }\n\n      } catch (UnsupportedFlavorException e) {\n        LOG.error(\"Exception\", e);\n        return null;\n      } catch (IOException e) {\n        LOG.error(\"Exception\", e);\n        return null;\n      }\n    }\n\n    return files;\n  }","id":4980,"modified_method":"@Nullable\n  private CopyPasteFilesData getData(DataContext dataContext) {\n    Transferable content = CopyPasteManagerEx.getInstanceEx().getSystemClipboardContents();\n    if (content == null) return null;\n\n    CopyPasteFilesData files = null;\n    if (content.isDataFlavorSupported(VirtualFileTransferable.VIRTUAL_FILE_DATA_FLAVOR)) {\n      try {\n        files = getData((String[]) content.getTransferData(VirtualFileTransferable.VIRTUAL_FILE_DATA_FLAVOR));\n\n        if (files == null || !files.hasAnythingToDo()) {\n          return null;\n        }\n\n      } catch (UnsupportedFlavorException e) {\n        LOG.error(\"Exception\", e);\n        return null;\n      } catch (IOException e) {\n        LOG.error(\"Exception\", e);\n        return null;\n      }\n    }\n\n    return files;\n  }","commit_id":"6b2440aeeeb195fe36bcc88ca39a320b139bfe3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String getStringFromClipboard() {\n    Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n    if (cb == null) {\n      return null;\n    }\n    Transferable contents = cb.getContents(null);\n    if (contents == null) return null;\n    if (contents.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n      try {\n        Object data = contents.getTransferData(DataFlavor.stringFlavor);\n        if (data instanceof String) {\n          return (String) data;\n        }\n      } catch (UnsupportedFlavorException ex) {\n        return null;\n      } catch (IOException ex) {\n        LOG.error(ex);\n      }\n    }\n    return null;\n  }","id":4981,"modified_method":"public String getStringFromClipboard() {\n    Transferable contents = null;\n    for (Transferable trf: CopyPasteManagerEx.getInstanceEx().getAllContents()) {\n      if (trf != null && trf.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n        contents = trf;\n        break;\n      }\n    }\n\n    if (contents == null) return null;\n    if (contents.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n      try {\n        Object data = contents.getTransferData(DataFlavor.stringFlavor);\n        if (data instanceof String) {\n          return (String) data;\n        }\n      } catch (UnsupportedFlavorException ex) {\n        return null;\n      } catch (IOException ex) {\n        LOG.error(ex);\n      }\n    }\n    return null;\n  }","commit_id":"6b2440aeeeb195fe36bcc88ca39a320b139bfe3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"private DefaultActionGroup createActionGroup() {\n    DefaultActionGroup group = new DefaultActionGroup();\n\n    if (myList.getSelectedIndices().length != 0) {\n      group.add(new BaseAction(\"Copy Text\") {\n        {\n          setExecuteOutsideCommand(true);\n        }\n\n        protected void doExecute(AnActionEvent e) {\n          StringBuilder sb = new StringBuilder();\n          for (Object o : myList.getSelectedValues()) {\n            sb.append(((Message) o).getText());\n            sb.append(\"\\n\");\n          }\n          Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()), null);\n        }\n      });\n    }\n\n    group.addSeparator();\n\n    group.add(new BaseAction(\"Show Help for This Message\") {\n      @Override\n      protected void doUpdate(AnActionEvent e) {\n        boolean enabled = getHelpUrlForCurrentMessage() != null;\n        setEnabledState(e.getPresentation(), enabled);\n      }\n\n      @Override\n      protected void doExecute(AnActionEvent e) {\n        showHelpForCurrentMessage();\n      }\n    });\n\n    group.addSeparator();\n\n    if (myList.getSelectedIndices().length >= 1) {\n      final Object[] messages = myList.getSelectedValues();\n      boolean containsError = false;\n      for (Object message : messages) {\n        if (((Message) message).getKind() == MessageKind.ERROR) {\n          containsError = true;\n          break;\n        }\n      }\n      if (containsError) {\n        group.addSeparator();\n        group.add(new BaseAction(messages.length > 1 ? \"Submit as One Issue\" : \"Submit to Issue Tracker\") {\n          {\n            setExecuteOutsideCommand(true);\n          }\n\n          protected void doExecute(AnActionEvent e) {\n            submitToTracker(messages);\n          }\n        });\n      }\n    }\n    group.addSeparator();\n\n    group.add(new BaseAction(\"Clear\") {\n      {\n        setExecuteOutsideCommand(true);\n      }\n\n      protected void doExecute(AnActionEvent e) {\n        clear();\n      }\n    });\n\n    return group;\n  }","id":4982,"modified_method":"private DefaultActionGroup createActionGroup() {\n    DefaultActionGroup group = new DefaultActionGroup();\n\n    if (myList.getSelectedIndices().length != 0) {\n      group.add(new BaseAction(\"Copy Text\") {\n        {\n          setExecuteOutsideCommand(true);\n        }\n\n        protected void doExecute(AnActionEvent e) {\n          StringBuilder sb = new StringBuilder();\n          for (Object o : myList.getSelectedValues()) {\n            sb.append(((Message) o).getText());\n            sb.append(\"\\n\");\n          }\n          CopyPasteManagerEx.getInstance().setContents(new StringSelection(sb.toString()));\n        }\n      });\n    }\n\n    group.addSeparator();\n\n    group.add(new BaseAction(\"Show Help for This Message\") {\n      @Override\n      protected void doUpdate(AnActionEvent e) {\n        boolean enabled = getHelpUrlForCurrentMessage() != null;\n        setEnabledState(e.getPresentation(), enabled);\n      }\n\n      @Override\n      protected void doExecute(AnActionEvent e) {\n        showHelpForCurrentMessage();\n      }\n    });\n\n    group.addSeparator();\n\n    if (myList.getSelectedIndices().length >= 1) {\n      final Object[] messages = myList.getSelectedValues();\n      boolean containsError = false;\n      for (Object message : messages) {\n        if (((Message) message).getKind() == MessageKind.ERROR) {\n          containsError = true;\n          break;\n        }\n      }\n      if (containsError) {\n        group.addSeparator();\n        group.add(new BaseAction(messages.length > 1 ? \"Submit as One Issue\" : \"Submit to Issue Tracker\") {\n          {\n            setExecuteOutsideCommand(true);\n          }\n\n          protected void doExecute(AnActionEvent e) {\n            submitToTracker(messages);\n          }\n        });\n      }\n    }\n    group.addSeparator();\n\n    group.add(new BaseAction(\"Clear\") {\n      {\n        setExecuteOutsideCommand(true);\n      }\n\n      protected void doExecute(AnActionEvent e) {\n        clear();\n      }\n    });\n\n    return group;\n  }","commit_id":"6b2440aeeeb195fe36bcc88ca39a320b139bfe3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getStringFromClipboard() {\n    Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n    Transferable content = null;\n    try {\n      if (!cb.isDataFlavorAvailable(DataFlavor.stringFlavor)) {\n        return null;\n      }\n    } catch (IllegalStateException e) {\n      return null;\n    }\n    try {\n      content = cb.getContents(null);\n    }\n    catch (RuntimeException ignored) {\n    }\n    if (content == null) return null;\n    return getStringFromTransferable(content);\n  }","id":4983,"modified_method":"public static String getStringFromClipboard() {\n    Transferable content = null;\n    for (Transferable trf: CopyPasteManagerEx.getInstanceEx().getAllContents()) {\n      if (trf != null && trf.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n        content = trf;\n        break;\n      }\n    }\n    if (content == null) return null;\n    return getStringFromTransferable(content);\n  }","commit_id":"6b2440aeeeb195fe36bcc88ca39a320b139bfe3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static boolean hasStringInClipboard() {\n    try {\n      Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n      return cb.isDataFlavorAvailable(DataFlavor.stringFlavor);\n    } catch (IllegalStateException e) {\n      return false;\n    }\n  }","id":4984,"modified_method":"public static boolean hasStringInClipboard() {\n    Transferable content = null;\n    for (Transferable trf: CopyPasteManagerEx.getInstanceEx().getAllContents()) {\n      if (trf != null && trf.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n        content = trf;\n        break;\n      }\n    }\n    return content != null;\n  }","commit_id":"6b2440aeeeb195fe36bcc88ca39a320b139bfe3c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public int getTotalActiveDocument()\n   {\n      Long totalCount = (Long) getSession().createQuery(\"select count(*) from HDocument doc where doc.obsolete = false\").uniqueResult();\n      if (totalCount == null)\n         return 0;\n      return totalCount.intValue();\n   }","id":4985,"modified_method":"public int getTotalActiveDocument()\n   {\n      Query q = getSession().createQuery(\"select count(*) from HDocument doc where doc.obsolete = false\");\n      q.setCacheable(true);\n      Long totalCount = (Long) q.uniqueResult();\n      if (totalCount == null)\n         return 0;\n      return totalCount.intValue();\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public HDocument getByProjectIterationAndDocId(final String projectSlug, final String iterationSlug, final String docId)\n   {\n      Session session = getSession();\n      \n      final HDocument doc = (HDocument)\n         session.createQuery(\"from HDocument d where d.projectIteration.slug = :iterationSlug \" +\n               \"and d.projectIteration.project.slug = :projectSlug \" +\n               \"and d.docId = :docId \" +\n               \"and d.obsolete = false\")\n               .setParameter(\"iterationSlug\", iterationSlug)\n               .setParameter(\"projectSlug\", projectSlug)\n               .setParameter(\"docId\", docId)\n               .uniqueResult();\n      return doc;\n   }","id":4986,"modified_method":"public HDocument getByProjectIterationAndDocId(final String projectSlug, final String iterationSlug, final String docId)\n   {\n      Session session = getSession();\n      Query q = session.createQuery(\"from HDocument d where d.projectIteration.slug = :iterationSlug \" +\n            \"and d.projectIteration.project.slug = :projectSlug \" +\n            \"and d.docId = :docId \" +\n            \"and d.obsolete = false\");\n      q.setParameter(\"iterationSlug\", iterationSlug)\n            .setParameter(\"projectSlug\", projectSlug)\n            .setParameter(\"docId\", docId);\n      q.setCacheable(true);\n      final HDocument doc = (HDocument) q.uniqueResult();\n      return doc;\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n    * @see ProjectIterationDAO#getStatisticsForContainer(Long, LocaleId)\n    * @param docId\n    * @param localeId\n    * @return\n    */\n   public TranslationStats getStatistics(long docId, LocaleId localeId)\n   {\n      // @formatter:off\n      Session session = getSession();\n\n      // calculate unit counts\n      @SuppressWarnings(\"unchecked\")\n      List<StatusCount> stats = session.createQuery(\n         \"select new org.zanata.model.StatusCount(tft.state, count(tft)) \" + \n         \"from HTextFlowTarget tft \" + \n         \"where tft.textFlow.document.id = :id \" + \n         \"  and tft.locale.localeId = :locale \" + \n         \"  and tft.textFlow.obsolete = false \" + \n         \"group by tft.state\")\n            .setParameter(\"id\", docId)\n            .setParameter(\"locale\", localeId)\n            .setCacheable(true).list();\n      Long totalCount = (Long) session.createQuery(\n         \"select count(tf) from HTextFlow tf \" +\n         \"where tf.document.id = :id and tf.obsolete = false\")\n            .setParameter(\"id\", docId)\n            .setCacheable(true).uniqueResult();\n\n      TransUnitCount stat = new TransUnitCount();\n      for (StatusCount count : stats)\n      {\n         stat.set(count.status, count.count.intValue());\n      }\n      int newCount = totalCount.intValue() - stat.get(ContentState.Approved) - stat.get(ContentState.NeedReview);\n      stat.set(ContentState.New, newCount);\n\n      // calculate word counts\n      @SuppressWarnings(\"unchecked\")\n      List<StatusCount> wordStats = session.createQuery(\n         \"select new org.zanata.model.StatusCount(tft.state, sum(tft.textFlow.wordCount)) \" + \n         \"from HTextFlowTarget tft where tft.textFlow.document.id = :id \" + \n         \"  and tft.locale.localeId = :locale \" + \n         \"  and tft.textFlow.obsolete = false \" + \n         \"group by tft.state\")\n            .setParameter(\"id\", docId)\n            .setParameter(\"locale\", localeId)\n            .list();\n      Long totalWordCount = (Long) session.createQuery(\n         \"select sum(tf.wordCount) from HTextFlow tf \" +\n         \"where tf.document.id = :id and tf.obsolete = false\")\n            .setParameter(\"id\", docId)\n            .uniqueResult();\n      if (totalWordCount == null)\n         totalWordCount = 0L;\n\n      TransUnitWords wordCount = new TransUnitWords();\n      for (StatusCount count : wordStats)\n      {\n         wordCount.set(count.status, count.count.intValue());\n      }\n      long newWordCount = totalWordCount.longValue() - wordCount.get(ContentState.Approved) - wordCount.get(ContentState.NeedReview);\n      wordCount.set(ContentState.New, (int) newWordCount);\n\n      TranslationStats transStats = new TranslationStats(stat, wordCount);\n      return transStats;\n      // @formatter:on\n   }","id":4987,"modified_method":"/**\n    * @see ProjectIterationDAO#getStatisticsForContainer(Long, LocaleId)\n    * @param docId\n    * @param localeId\n    * @return\n    */\n   public TranslationStats getStatistics(long docId, LocaleId localeId)\n   {\n      // @formatter:off\n      Session session = getSession();\n\n      // calculate unit counts\n      @SuppressWarnings(\"unchecked\")\n      List<StatusCount> stats = session.createQuery(\n         \"select new org.zanata.model.StatusCount(tft.state, count(tft)) \" + \n         \"from HTextFlowTarget tft \" + \n         \"where tft.textFlow.document.id = :id \" + \n         \"  and tft.locale.localeId = :locale \" + \n         \"  and tft.textFlow.obsolete = false \" + \n         \"group by tft.state\")\n            .setParameter(\"id\", docId)\n            .setParameter(\"locale\", localeId)\n            .setCacheable(true).list();\n      Long totalCount = (Long) session.createQuery(\n         \"select count(tf) from HTextFlow tf \" +\n         \"where tf.document.id = :id and tf.obsolete = false\")\n            .setParameter(\"id\", docId)\n            .setCacheable(true).uniqueResult();\n\n      TransUnitCount stat = new TransUnitCount();\n      for (StatusCount count : stats)\n      {\n         stat.set(count.status, count.count.intValue());\n      }\n      int newCount = totalCount.intValue() - stat.get(ContentState.Approved) - stat.get(ContentState.NeedReview);\n      stat.set(ContentState.New, newCount);\n\n      // calculate word counts\n      @SuppressWarnings(\"unchecked\")\n      List<StatusCount> wordStats = session.createQuery(\n         \"select new org.zanata.model.StatusCount(tft.state, sum(tft.textFlow.wordCount)) \" + \n         \"from HTextFlowTarget tft where tft.textFlow.document.id = :id \" + \n         \"  and tft.locale.localeId = :locale \" + \n         \"  and tft.textFlow.obsolete = false \" + \n         \"group by tft.state\")\n            .setParameter(\"id\", docId)\n            .setParameter(\"locale\", localeId)\n            .setCacheable(true)\n            .list();\n      Long totalWordCount = (Long) session.createQuery(\n         \"select sum(tf.wordCount) from HTextFlow tf \" +\n         \"where tf.document.id = :id and tf.obsolete = false\")\n            .setParameter(\"id\", docId)\n            .setCacheable(true)\n            .uniqueResult();\n      if (totalWordCount == null)\n         totalWordCount = 0L;\n\n      TransUnitWords wordCount = new TransUnitWords();\n      for (StatusCount count : wordStats)\n      {\n         wordCount.set(count.status, count.count.intValue());\n      }\n      long newWordCount = totalWordCount.longValue() - wordCount.get(ContentState.Approved) - wordCount.get(ContentState.NeedReview);\n      wordCount.set(ContentState.New, (int) newWordCount);\n\n      TranslationStats transStats = new TranslationStats(stat, wordCount);\n      return transStats;\n      // @formatter:on\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public int getTotalDocument()\n   {\n      Long totalCount = (Long) getSession().createQuery(\"select count(*) from HDocument\").uniqueResult();\n      if (totalCount == null)\n         return 0;\n      return totalCount.intValue();\n   }","id":4988,"modified_method":"public int getTotalDocument()\n   {\n      Query q = getSession().createQuery(\"select count(*) from HDocument\");\n      q.setCacheable(true);\n      Long totalCount = (Long) q.uniqueResult();\n      if (totalCount == null)\n         return 0;\n      return totalCount.intValue();\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<HDocument> getAllByProjectIteration(final String projectSlug, final String iterationSlug)\n   {\n      Session session = getSession();\n      \n      @SuppressWarnings(\"unchecked\")\n      final List<HDocument> documents =\n         session.createQuery(\"from HDocument d \" +\n         \t\t\"where d.projectIteration.slug = :iterationSlug \" +\n         \t\t\"and d.projectIteration.project.slug = :projectSlug \" +\n         \t\t\"and d.obsolete = false \" +\n         \t\t\"order by d.name\")\n         \t\t.setParameter(\"iterationSlug\", iterationSlug)\n         \t\t.setParameter(\"projectSlug\", projectSlug)\n         \t\t.list();\n      return documents;\n   }","id":4989,"modified_method":"public List<HDocument> getAllByProjectIteration(final String projectSlug, final String iterationSlug)\n   {\n      Session session = getSession();\n      Query q = session.createQuery(\"from HDocument d \" +\n            \"where d.projectIteration.slug = :iterationSlug \" +\n            \"and d.projectIteration.project.slug = :projectSlug \" +\n            \"and d.obsolete = false \" +\n            \"order by d.name\");\n      q.setParameter(\"iterationSlug\", iterationSlug)\n            .setParameter(\"projectSlug\", projectSlug);\n      @SuppressWarnings(\"unchecked\")\n      final List<HDocument> documents = q.list();\n      return documents;\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public Set<LocaleId> getTargetLocales(HDocument hDoc)\n   {\n      @SuppressWarnings(\"unchecked\")\n      // @formatter:off\n      List<LocaleId> locales = getSession().createQuery(\n         \"select tft.locale from HTextFlowTarget tft \" +\n         \"where tft.textFlow.document = :document\")\n            .setParameter(\"document\", hDoc)\n            .list();\n      // @formatter:on\n      return new HashSet<LocaleId>(locales);\n   }","id":4990,"modified_method":"public Set<LocaleId> getTargetLocales(HDocument hDoc)\n   {\n      @SuppressWarnings(\"unchecked\")\n      // @formatter:off\n      // TODO should this use UNIQUE?\n      Query q = getSession().createQuery(\n            \"select tft.locale from HTextFlowTarget tft \" +\n            \"where tft.textFlow.document = :document\");\n      q.setParameter(\"document\", hDoc);\n      List<LocaleId> locales = q.list();\n      // @formatter:on\n      return new HashSet<LocaleId>(locales);\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public HDocument getByDocId(HProjectIteration iteration, String id)\n   {\n      return (HDocument) getSession().createCriteria(HDocument.class).add(Restrictions.naturalId().set(\"docId\", id).set(\"projectIteration\", iteration)).setCacheable(true).setComment(\"DocumentDAO.getById\").uniqueResult();\n   }","id":4991,"modified_method":"public HDocument getByDocId(HProjectIteration iteration, String id)\n   {\n      Criteria cr = getSession().createCriteria(HDocument.class);\n      cr.add(Restrictions.naturalId().set(\"docId\", id).set(\"projectIteration\", iteration));\n      cr.setCacheable(true).setComment(\"DocumentDAO.getById\");\n      return (HDocument) cr.uniqueResult();\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public int getTotalObsoleteDocument()\n   {\n      Long totalCount = (Long) getSession().createQuery(\"select count(*) from HDocument doc where doc.obsolete = true\").uniqueResult();\n      if (totalCount == null)\n         return 0;\n      return totalCount.intValue();\n   }","id":4992,"modified_method":"public int getTotalObsoleteDocument()\n   {\n      Query q = getSession().createQuery(\"select count(*) from HDocument doc where doc.obsolete = true\");\n      q.setCacheable(true);\n      Long totalCount = (Long) q.uniqueResult();\n      if (totalCount == null)\n         return 0;\n      return totalCount.intValue();\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public HPerson findByUsername(String username)\n   {\n      Query query = getSession().createQuery(\"from HPerson as p where p.account.username = :username\");\n      query.setParameter(\"username\", username);\n      return (HPerson) query.uniqueResult();\n   }","id":4993,"modified_method":"public HPerson findByUsername(String username)\n   {\n      Query query = getSession().createQuery(\"from HPerson as p where p.account.username = :username\");\n      query.setParameter(\"username\", username);\n      query.setCacheable(true);\n      query.setComment(\"PersonDAO.findByUsername\");\n      return (HPerson) query.uniqueResult();\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public int getTotalTranslator()\n   {\n      Long totalCount = (Long) getSession().createQuery(\"select count(*) from HPerson\").uniqueResult();\n      if (totalCount == null)\n         return 0;\n      return totalCount.intValue();\n   }","id":4994,"modified_method":"public int getTotalTranslator()\n   {\n      Query q = getSession().createQuery(\"select count(*) from HPerson\");\n      Long totalCount = (Long) q.uniqueResult();\n      q.setCacheable(true).setComment(\"PersonDAO.getTotalTranslator\");\n      if (totalCount == null)\n         return 0;\n      return totalCount.intValue();\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"@SuppressWarnings(\"unchecked\")\n   public List<HLocale> getLanguageMembershipByUsername(String userName)\n   {\n      Query query = getSession().createQuery(\"select m.id.supportedLanguage from HLocaleMember as m where m.id.person.account.username = :username\");\n      query.setParameter(\"username\", userName);\n      List<HLocale> re = new ArrayList<HLocale>();\n      List<HLocale> su = query.list();\n      for (HLocale lan : su)\n      {\n         if (lan.isActive())\n         {\n            re.add(lan);\n         }\n      }\n      return re;\n   }","id":4995,"modified_method":"@SuppressWarnings(\"unchecked\")\n   public List<HLocale> getLanguageMembershipByUsername(String userName)\n   {\n      Query query = getSession().createQuery(\"select m.id.supportedLanguage from HLocaleMember as m where m.id.person.account.username = :username\");\n      query.setParameter(\"username\", userName);\n      query.setCacheable(true);\n      query.setComment(\"PersonDAO.getLanguageMembershipByUsername\");\n      List<HLocale> re = new ArrayList<HLocale>();\n      List<HLocale> su = query.list();\n      for (HLocale lan : su)\n      {\n         if (lan.isActive())\n         {\n            re.add(lan);\n         }\n      }\n      return re;\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public HPerson findByEmail(String email)\n   {\n      return (HPerson) getSession().createCriteria(HPerson.class).add(Restrictions.naturalId().set(\"email\", email)).setCacheable(true).setComment(\"PersonDAO.findByEmail\").uniqueResult();\n   }","id":4996,"modified_method":"public HPerson findByEmail(String email)\n   {\n      Criteria cr = getSession().createCriteria(HPerson.class);\n      cr.add(Restrictions.naturalId().set(\"email\", email));\n      cr.setCacheable(true);\n      cr.setComment(\"PersonDAO.findByEmail\");\n      return (HPerson) cr.uniqueResult();\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"@SuppressWarnings(\"unchecked\")\n   public List<HPerson> findAllContainingName(String name)\n   {\n      Query query = getSession().createQuery(\"from HPerson as p where p.account.username like :name or p.name like :name\");\n      query.setParameter(\"name\", \"%\" + name + \"%\");\n      return query.list();\n   }","id":4997,"modified_method":"@SuppressWarnings(\"unchecked\")\n   public List<HPerson> findAllContainingName(String name)\n   {\n      Query query = getSession().createQuery(\"from HPerson as p where p.account.username like :name or p.name like :name\");\n      query.setParameter(\"name\", \"%\" + name + \"%\");\n      query.setCacheable(true);\n      query.setComment(\"PersonDAO.findAllContainingName\");\n      return query.list();\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"@SuppressWarnings(\"unchecked\")\n   public List<HProject> getMaintainerProjectByUsername(String userName)\n   {\n      Query query = getSession().createQuery(\"select p.maintainerProjects from HPerson as p where p.account.username = :username\");\n      query.setParameter(\"username\", userName);\n      return query.list();\n   }","id":4998,"modified_method":"@SuppressWarnings(\"unchecked\")\n   public List<HProject> getMaintainerProjectByUsername(String userName)\n   {\n      Query query = getSession().createQuery(\"select p.maintainerProjects from HPerson as p where p.account.username = :username\");\n      query.setParameter(\"username\", userName);\n      query.setCacheable(true);\n      query.setComment(\"PersonDAO.getMaintainerProjectByUsername\");\n      return query.list();\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public int getTotalActiveProjectCount()\n   {\n      Long totalCount = (Long) getSession().createQuery(\"select count(*) from HProject p where p.status = :status\").setParameter(\"status\", EntityStatus.ACTIVE).uniqueResult();\n      if (totalCount == null)\n         return 0;\n      return totalCount.intValue();\n   }","id":4999,"modified_method":"public int getTotalActiveProjectCount()\n   {\n      Query q = getSession().createQuery(\"select count(*) from HProject p where p.status = :status\");\n      q.setParameter(\"status\", EntityStatus.ACTIVE);\n      q.setCacheable(true).setComment(\"ProjectDAO.getTotalActiveProjectCount\");\n      Long totalCount = (Long) q.uniqueResult();\n      if (totalCount == null)\n         return 0;\n      return totalCount.intValue();\n   }","commit_id":"5260221af67826a5848111dadafd1ebdc86aa01e","url":"https://github.com/zanata/zanata-server"}]